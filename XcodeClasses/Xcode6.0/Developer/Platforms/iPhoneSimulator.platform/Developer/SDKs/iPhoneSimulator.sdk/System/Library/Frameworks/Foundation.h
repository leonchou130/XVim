//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CGPoint {
    double _field1;
    double _field2;
};

struct CGRect {
    struct CGPoint _field1;
    struct CGSize _field2;
};

struct CGSize {
    double width;
    double height;
};

struct NSEdgeInsets {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
};

struct NSObject {
    Class _field1;
};

struct NSSlice {
    void **items;
    _Bool wantsStrong;
    _Bool wantsWeak;
    _Bool wantsARC;
    _Bool shouldCopyIn;
    _Bool usesStrong;
    _Bool usesWeak;
    _Bool usesARC;
    _Bool usesSentinel;
    _Bool pointerPersonality;
    _Bool integerPersonality;
    _Bool simpleReadClear;
    NSWeakCallback *callback;
    CDUnknownFunctionPointerType sizeFunction;
    CDUnknownFunctionPointerType hashFunction;
    CDUnknownFunctionPointerType isEqualFunction;
    CDUnknownFunctionPointerType describeFunction;
    CDUnknownFunctionPointerType acquireFunction;
    CDUnknownFunctionPointerType relinquishFunction;
    CDUnknownFunctionPointerType allocateFunction;
    CDUnknownFunctionPointerType freeFunction;
    CDUnknownFunctionPointerType readAt;
    CDUnknownFunctionPointerType clearAt;
    CDUnknownFunctionPointerType storeAt;
};

struct _NSLTToken {
    unsigned short _field1;
    unsigned char _field2;
    unsigned char _field3;
    unsigned int _field4;
    union {
        void *_field1;
        struct {
            unsigned char _field1;
            unsigned char _field2;
        } _field2;
    } _field5;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct _NSRefCountedRunArray {
    void *_field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    struct _NSRunArrayItem _field8[0];
};

struct _NSRunArrayItem {
    unsigned long long _field1;
    id _field2;
};

struct _NSSimpleAttributeDictionaryElement {
    unsigned long long hash;
    id key;
    id value;
};

struct _URIParseInfo {
    long long userinfoNameOffset;
    long long userinfoPasswordOffset;
    long long hostOffset;
    long long portOffset;
    long long pathOffset;
    long long paramOffset;
    long long queryOffset;
    long long fragmentOffset;
    long long endOffset;
    unsigned int schemeExists:1;
    unsigned int authorityExists:1;
    unsigned int userinfoNameExists:1;
    unsigned int userinfoPasswordExists:1;
    unsigned int hostExists:1;
    unsigned int portExists:1;
    unsigned int paramExists:1;
    unsigned int queryExists:1;
    unsigned int fragmentExists:1;
};

struct __va_list_tag {
    unsigned int _field1;
    unsigned int _field2;
    void *_field3;
    void *_field4;
};

struct _ftsent {
    struct _ftsent *_field1;
    struct _ftsent *_field2;
    struct _ftsent *_field3;
    long long _field4;
    void *_field5;
    char *_field6;
    char *_field7;
    int _field8;
    int _field9;
    unsigned short _field10;
    unsigned short _field11;
    unsigned long long _field12;
    int _field13;
    unsigned short _field14;
    short _field15;
    unsigned short _field16;
    unsigned short _field17;
    unsigned short _field18;
    struct stat *_field19;
    char _field20[1];
};

struct _opaque_pthread_mutex_t {
    long long __sig;
    char __opaque[56];
};

struct _opaque_pthread_t {
    long long _field1;
    struct __darwin_pthread_handler_rec *_field2;
    char _field3[8176];
};

struct _xmlDoc;

struct _xmlHashTable;

struct _xmlNode;

struct _xmlParserCtxt {
    struct _xmlSAXHandler *_field1;
    void *_field2;
    struct _xmlDoc *_field3;
    int _field4;
    int _field5;
    char *_field6;
    char *_field7;
    int _field8;
    int _field9;
    struct _xmlParserInput *_field10;
    int _field11;
    int _field12;
    struct _xmlParserInput **_field13;
    struct _xmlNode *_field14;
    int _field15;
    int _field16;
    struct _xmlNode **_field17;
    int _field18;
    struct _xmlParserNodeInfoSeq {
        unsigned long long _field1;
        unsigned long long _field2;
        struct _xmlParserNodeInfo *_field3;
    } _field19;
    int _field20;
    int _field21;
    int _field22;
    int _field23;
    int _field24;
    int _field25;
    struct _xmlValidCtxt {
        void *_field1;
        CDUnknownFunctionPointerType _field2;
        CDUnknownFunctionPointerType _field3;
        struct _xmlNode *_field4;
        int _field5;
        int _field6;
        struct _xmlNode **_field7;
        unsigned int _field8;
        struct _xmlDoc *_field9;
        int _field10;
        struct _xmlValidState *_field11;
        int _field12;
        int _field13;
        struct _xmlValidState *_field14;
        struct _xmlAutomata *_field15;
        struct _xmlAutomataState *_field16;
    } _field26;
    int _field27;
    int _field28;
    char *_field29;
    char *_field30;
    int _field31;
    int _field32;
    char **_field33;
    long long _field34;
    long long _field35;
    int _field36;
    int _field37;
    int _field38;
    char *_field39;
    char *_field40;
    char *_field41;
    int *_field42;
    int _field43;
    int _field44;
    int *_field45;
    int _field46;
    struct _xmlParserInput *_field47;
    int _field48;
    int _field49;
    int _field50;
    int _field51;
    void *_field52;
    int _field53;
    int _field54;
    void *_field55;
    int _field56;
    int _field57;
    struct _xmlDict *_field58;
    char **_field59;
    int _field60;
    int _field61;
    char *_field62;
    char *_field63;
    char *_field64;
    int _field65;
    int _field66;
    int _field67;
    char **_field68;
    int *_field69;
    void **_field70;
    struct _xmlHashTable *_field71;
    struct _xmlHashTable *_field72;
    int _field73;
    int _field74;
    int _field75;
    int _field76;
    struct _xmlNode *_field77;
    int _field78;
    struct _xmlAttr *_field79;
    struct _xmlError {
        int _field1;
        int _field2;
        char *_field3;
        int _field4;
        char *_field5;
        int _field6;
        char *_field7;
        char *_field8;
        char *_field9;
        int _field10;
        int _field11;
        void *_field12;
        void *_field13;
    } _field80;
    int _field81;
    unsigned long long _field82;
    unsigned long long _field83;
    struct _xmlParserNodeInfo *_field84;
    int _field85;
    int _field86;
    struct _xmlParserNodeInfo *_field87;
    int _field88;
    unsigned long long _field89;
};

struct _xmlParserInput {
    struct _xmlParserInputBuffer *_field1;
    char *_field2;
    char *_field3;
    char *_field4;
    char *_field5;
    char *_field6;
    int _field7;
    int _field8;
    int _field9;
    unsigned long long _field10;
    CDUnknownFunctionPointerType _field11;
    char *_field12;
    char *_field13;
    int _field14;
    int _field15;
};

struct _xmlParserNodeInfo;

struct _xmlSAXHandler {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
    CDUnknownFunctionPointerType _field6;
    CDUnknownFunctionPointerType _field7;
    CDUnknownFunctionPointerType _field8;
    CDUnknownFunctionPointerType _field9;
    CDUnknownFunctionPointerType _field10;
    CDUnknownFunctionPointerType _field11;
    CDUnknownFunctionPointerType _field12;
    CDUnknownFunctionPointerType _field13;
    CDUnknownFunctionPointerType _field14;
    CDUnknownFunctionPointerType _field15;
    CDUnknownFunctionPointerType _field16;
    CDUnknownFunctionPointerType _field17;
    CDUnknownFunctionPointerType _field18;
    CDUnknownFunctionPointerType _field19;
    CDUnknownFunctionPointerType _field20;
    CDUnknownFunctionPointerType _field21;
    CDUnknownFunctionPointerType _field22;
    CDUnknownFunctionPointerType _field23;
    CDUnknownFunctionPointerType _field24;
    CDUnknownFunctionPointerType _field25;
    CDUnknownFunctionPointerType _field26;
    CDUnknownFunctionPointerType _field27;
    unsigned int _field28;
    void *_field29;
    CDUnknownFunctionPointerType _field30;
    CDUnknownFunctionPointerType _field31;
    CDUnknownFunctionPointerType _field32;
};

struct _xmlValidState;

struct addrinfo {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    unsigned int _field5;
    char *_field6;
    struct sockaddr *_field7;
    struct addrinfo *_field8;
};

struct objc_method_description {
    SEL _field1;
    char *_field2;
};

struct sockaddr;

struct stat {
    int st_dev;
    unsigned short st_mode;
    unsigned short st_nlink;
    unsigned long long st_ino;
    unsigned int st_uid;
    unsigned int st_gid;
    int st_rdev;
    struct timespec st_atimespec;
    struct timespec st_mtimespec;
    struct timespec st_ctimespec;
    struct timespec st_birthtimespec;
    long long st_size;
    long long st_blocks;
    int st_blksize;
    unsigned int st_flags;
    unsigned int st_gen;
    int st_lspare;
    long long st_qspare[2];
};

struct timespec {
    long long tv_sec;
    long long tv_nsec;
};

#pragma mark Typedef'd Structures

typedef struct {
    id _field1;
    id _field2;
    id _field3;
    id _field4;
    long long _field5;
    id _field6;
    id _field7;
    id _field8;
} CDStruct_4f05a0fa;

typedef struct {
    id _field1;
    id _field2;
} CDStruct_a70f6672;

typedef struct {
    id _field1;
    void *_field2;
} CDStruct_c69bce23;

typedef struct {
    _Bool _field1;
    _Bool _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned int _field6;
} CDStruct_6243051c;

typedef struct {
    unsigned char _field1;
    unsigned char _field2;
    unsigned char _field3;
    unsigned char _field4;
    unsigned char _field5;
    unsigned char _field6;
    unsigned char _field7;
    unsigned char _field8;
    unsigned char _field9;
    unsigned char _field10;
    unsigned char _field11;
    unsigned char _field12;
    unsigned char _field13;
    unsigned char _field14;
    unsigned char _field15;
    unsigned char _field16;
} CDStruct_bd2f613f;

typedef struct {
    unsigned long long kind;
    NSObject *oldValue;
    NSObject *newValue;
    NSIndexSet *indexes;
    id extraData;
} CDStruct_e173081d;

typedef struct {
    unsigned long long _field1;
    id _field2[4];
} CDStruct_7c9a8e9f;

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

typedef struct {
    unsigned int _field1[8];
} CDStruct_6ad76789;

typedef struct {
    unsigned int :8;
    unsigned int :4;
    unsigned int :1;
    unsigned int :1;
    unsigned int :18;
    unsigned short _field1[8];
} CDStruct_5fe7aead;

typedef struct {
    double m11;
    double m12;
    double m21;
    double m22;
    double tX;
    double tY;
} CDStruct_56a8f59f;

typedef struct {
    long long _field1;
    void *_field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
} CDStruct_e097db04;

typedef struct {
    long long _field1;
    int _field2;
} CDStruct_87dc826d;

typedef struct {
    long long _field1;
    long long _field2;
    long long _field3;
} CDStruct_2ec95fd7;

#pragma mark Typedef'd Unions

typedef union {
    id _field1;
    id _field2;
} CDUnion_a1fd0927;

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/Frameworks/Foundation.framework/Foundation
// UUID: 61219D93-F18A-31AB-A63F-FFBB9C49DAC8
//
//                           Arch: x86_64
//                Current version: 1140.11.0
//          Compatibility version: 300.0.0
//                 Source version: 1140.11.0.0.0
//            Minimum iOS version: 8.0.0
//                    SDK version: 8.0.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSConnectionVersionedProtocol
- (id)keyedRootObject;
- (id)rootObject;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSDecimalNumberBehaviors
- (NSDecimalNumber *)exceptionDuringOperation:(SEL)arg1 error:(unsigned long long)arg2 leftOperand:(NSDecimalNumber *)arg3 rightOperand:(NSDecimalNumber *)arg4;
- (short)scale;
- (unsigned long long)roundingMode;
@end

@protocol NSDeserializerStream
- (id)initFromMemoryNoCopy:(const void *)arg1 length:(unsigned long long)arg2 freeWhenDone:(_Bool)arg3;
- (void)readData:(void *)arg1 length:(unsigned long long)arg2;
- (unsigned long long)readAlignedDataSize;
- (int)readInt;
@end

@protocol NSDiscardableContent
- (_Bool)isContentDiscarded;
- (void)discardContentIfPossible;
- (void)endContentAccess;
- (_Bool)beginContentAccess;
@end

@protocol NSFastEnumeration
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
@end

@protocol NSFileAccessArbiter <NSObject>
- (void)tiePresenterForID:(id)arg1 toItemAtURL:(NSURL *)arg2;
- (void)writerWithPurposeID:(id)arg1 didVersionChangeOfKind:(NSString *)arg2 toItemAtURL:(NSURL *)arg3 withClientID:(NSString *)arg4 name:(NSString *)arg5;
- (void)writerWithPurposeID:(id)arg1 didMakeItemDisappearAtURL:(NSURL *)arg2;
- (void)writerWithPurposeID:(id)arg1 didChangeUbiquityOfItemAtURL:(NSURL *)arg2;
- (void)writerWithPurposeID:(id)arg1 didReconnectItemAtURL:(NSURL *)arg2;
- (void)writerWithPurposeID:(id)arg1 didDisconnectItemAtURL:(NSURL *)arg2;
- (void)writerWithPurposeID:(id)arg1 didMoveItemAtURL:(NSURL *)arg2 toURL:(NSURL *)arg3;
- (void)cancelAccessClaimForID:(id)arg1;
- (void)revokeSubarbitrationClaimForID:(id)arg1;
- (void)grantSubarbitrationClaim:(NSFileSubarbitrationClaim *)arg1 withServer:(NSObject<OS_xpc_object> *)arg2;
- (void)revokeAccessClaimForID:(id)arg1;
- (NSObject<OS_dispatch_semaphore> *)grantAccessClaim:(NSFileAccessClaim *)arg1 synchronouslyIfPossible:(_Bool)arg2;
@end

@protocol NSFilePresenter <NSObject>
@property(readonly, retain) NSOperationQueue *presentedItemOperationQueue;
@property(readonly, copy) NSURL *presentedItemURL;

@optional
@property(readonly, copy) NSURL *primaryPresentedItemURL;
- (void)presentedSubitemAtURL:(NSURL *)arg1 didResolveConflictVersion:(NSFileVersion *)arg2;
- (void)presentedSubitemAtURL:(NSURL *)arg1 didLoseVersion:(NSFileVersion *)arg2;
- (void)presentedSubitemAtURL:(NSURL *)arg1 didGainVersion:(NSFileVersion *)arg2;
- (void)presentedSubitemDidChangeAtURL:(NSURL *)arg1;
- (void)presentedSubitemAtURL:(NSURL *)arg1 didMoveToURL:(NSURL *)arg2;
- (void)presentedSubitemDidAppearAtURL:(NSURL *)arg1;
- (void)accommodatePresentedSubitemDeletionAtURL:(NSURL *)arg1 completionHandler:(void (^)(NSError *))arg2;
- (void)presentedItemDidResolveConflictVersion:(NSFileVersion *)arg1;
- (void)presentedItemDidLoseVersion:(NSFileVersion *)arg1;
- (void)presentedItemDidGainVersion:(NSFileVersion *)arg1;
- (void)presentedItemDidChange;
- (void)presentedItemDidMoveToURL:(NSURL *)arg1;
- (void)accommodatePresentedItemDeletionWithCompletionHandler:(void (^)(NSError *))arg1;
- (void)savePresentedItemChangesWithCompletionHandler:(void (^)(NSError *))arg1;
- (void)relinquishPresentedItemToWriter:(void (^)(void (^)(void)))arg1;
- (void)relinquishPresentedItemToReader:(void (^)(void (^)(void)))arg1;
@end

@protocol NSISConstraint <NSISVariableDelegate>
- (double)nsis_allowedMagnitudeForIntegralizationAdjustmentOfConstraintWithMarker:(NSISVariable *)arg1;
@end

@protocol NSISRowBody <NSObject>
- (void)replaceVariable:(NSISVariable *)arg1 withExpression:(NSISLinearExpression *)arg2 processVariableNewToReceiver:(void (^)(NSISVariable *))arg3 processVariableDroppedFromReceiver:(void (^)(NSISVariable *))arg4;
- (void)replaceVariable:(NSISVariable *)arg1 withVariablePlusDelta:(double)arg2 timesVariable:(NSISVariable *)arg3 processVariableNewToReceiver:(void (^)(NSISVariable *))arg4 processVariableDroppedFromReceiver:(void (^)(NSISVariable *))arg5;
- (void)replaceVariable:(NSISVariable *)arg1 withVariablePlusDelta:(double)arg2;
- (void)enumerateVariables:(void (^)(NSISVariable *))arg1;
- (void)removeVariable:(NSISVariable *)arg1;
@end

@protocol NSISVariableDelegate <NSObject>
- (_Bool)nsis_valueOfVariableIsUserObservable:(NSISVariable *)arg1;
- (_Bool)nsis_shouldIntegralizeVariable:(NSISVariable *)arg1;
- (NSString *)nsis_descriptionOfVariable:(NSISVariable *)arg1;
- (void)nsis_valueOfVariable:(NSISVariable *)arg1 didChangeInEngine:(NSISEngine *)arg2;
@end

@protocol NSKeyValueProxyCaching
+ (NSHashTable *)_proxyShare;
+ (CDStruct_7c9a8e9f *)_proxyNonGCPoolPointer;
- (void)_proxyNonGCFinalize;
- (id)_proxyInitWithContainer:(NSObject *)arg1 getter:(id)arg2;
- (CDStruct_a70f6672)_proxyLocator;
@end

@protocol NSLocking
- (void)unlock;
- (void)lock;
@end

@protocol NSMutableCopying
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSProgressPublisher <NSObject>
- (oneway void)appWithBundleID:(NSString *)arg1 didAcknowledgeWithSuccess:(_Bool)arg2;
- (oneway void)prioritize;
- (oneway void)pause;
- (oneway void)cancel;
- (oneway void)stopProvidingValues;
- (oneway void)startProvidingValuesWithInitialAcceptor:(void (^)(NSProgressValues *))arg1;
@end

@protocol NSProgressRegistrar
- (oneway void)removeSubscriberForID:(NSString *)arg1;
- (oneway void)addSubscriber:(id <NSProgressSubscriber>)arg1 forID:(NSString *)arg2 appBundleID:(NSString *)arg3 fileURL:(NSURL *)arg4;
- (oneway void)addSubscriber:(id <NSProgressSubscriber>)arg1 forID:(NSString *)arg2 appBundleID:(NSString *)arg3 category:(NSString *)arg4;
- (oneway void)removePublisherForID:(NSString *)arg1;
- (oneway void)observePublisherForID:(NSString *)arg1 value:(id)arg2 forKey:(NSString *)arg3 inUserInfo:(_Bool)arg4;
- (oneway void)addPublisher:(id <NSProgressPublisher>)arg1 forID:(NSString *)arg2 acknowledgementAppBundleIDs:(NSSet *)arg3 category:(NSString *)arg4 fileURL:(NSURL *)arg5;
@end

@protocol NSProgressSubscriber <NSObject>
- (oneway void)removePublisherForID:(NSString *)arg1;
- (oneway void)observePublisherForID:(NSString *)arg1 value:(id)arg2 forKey:(NSString *)arg3 inUserInfo:(_Bool)arg4;
- (oneway void)addPublisher:(id <NSProgressPublisher>)arg1 forID:(NSString *)arg2 withValues:(NSProgressValues *)arg3 isOld:(_Bool)arg4;
@end

@protocol NSSecureCoding <NSCoding>
+ (_Bool)supportsSecureCoding;
@end

@protocol NSSerializerStream
- (void)copySerializationInto:(void *)arg1;
- (void)writeDelayedInt:(unsigned long long)arg1 for:(int)arg2;
- (unsigned long long)writeRoomForInt:(int *)arg1;
- (unsigned long long)writeData:(const void *)arg1 length:(unsigned long long)arg2;
- (unsigned long long)writeAlignedDataSize:(unsigned long long)arg1;
- (unsigned long long)writeInt:(unsigned long long)arg1;
@end

@protocol NSXPCProxyCreating
- (id)remoteObjectProxyWithErrorHandler:(void (^)(NSError *))arg1;
- (id)remoteObjectProxy;
@end

@interface NSAKDeserializer : NSObject
{
    id ds;
}

- (id)deserializePListValueIn:(id)arg1 key:(id)arg2 length:(unsigned long long)arg3;
- (id)deserializePListKeyIn:(id)arg1;
- (id)deserializePList:(id)arg1;
- (id)deserializeNewPList;
- (id)deserializeListItemIn:(id)arg1 at:(unsigned long long)arg2 length:(unsigned long long)arg3;
- (id)deserializeList:(id)arg1;
- (id)deserializeNewList;
- (id)deserializeString:(id)arg1;
- (id)deserializeNewKeyString;
- (id)deserializeNewString;
- (id)deserializeData:(id)arg1;
- (id)deserializeNewData;
- (id)deserializeNewObject;
- (id)deserializerStream;
- (void)dealloc;
- (id)initForDeserializerStream:(id)arg1;

@end

@interface NSAKDeserializerStream : NSObject <NSDeserializerStream>
{
    const void *memory;
    const char *current;
    unsigned long long left;
    unsigned long long max;
    _Bool freeWhenDone;
}

- (void)readData:(void *)arg1 length:(unsigned long long)arg2;
- (unsigned long long)readAlignedDataSize;
- (int)readInt;
- (id)initFromPath:(id)arg1;
- (void)finalize;
- (void)dealloc;
- (id)initFromMemoryNoCopy:(const void *)arg1 length:(unsigned long long)arg2 freeWhenDone:(_Bool)arg3;

@end

@interface NSAKSerializer : NSObject
{
    id ss;
}

- (unsigned long long)serializePListValueIn:(id)arg1 key:(id)arg2 value:(id)arg3;
- (unsigned long long)serializePListKeyIn:(id)arg1 key:(id)arg2 value:(id)arg3;
- (unsigned long long)serializePropertyList:(id)arg1;
- (unsigned long long)serializeListItemIn:(id)arg1 at:(unsigned long long)arg2;
- (unsigned long long)serializeList:(id)arg1;
- (unsigned long long)serializeString:(id)arg1;
- (unsigned long long)serializeData:(id)arg1;
- (unsigned long long)serializeObject:(id)arg1;
- (id)serializerStream;
- (void)dealloc;
- (id)initForSerializerStream:(id)arg1;

@end

@interface NSAKSerializerStream : NSObject <NSSerializerStream>
{
    void *memory;
    unsigned long long current;
    unsigned long long max;
    struct __CFDictionary *roomForIntLocations;
}

- (void)copySerializationInto:(void *)arg1;
- (_Bool)writeToPath:(id)arg1 safely:(_Bool)arg2;
- (void)writeDelayedInt:(unsigned long long)arg1 for:(int)arg2;
- (unsigned long long)writeRoomForInt:(int *)arg1;
- (unsigned long long)writeData:(const void *)arg1 length:(unsigned long long)arg2;
- (unsigned long long)writeAlignedDataSize:(unsigned long long)arg1;
- (unsigned long long)writeInt:(unsigned long long)arg1;
- (void)finalize;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface NSEncodingDetector : NSObject
{
    unsigned int _encoding;
    unsigned long long _givenNumBytes;
    unsigned long long _numChars;
    unsigned long long _numMultiByteChars;
    unsigned long long _numSingleBytechars;
    unsigned long long _skipBytes;
    unsigned long long _numZeroBytes;
    unsigned long long _mostFrqChars;
    unsigned long long _numBigrams;
    unsigned long long _numRep;
    unsigned long long _numDirect;
    unsigned long long _numBase64;
    unsigned long long _numSeq;
    unsigned long long _numTrigram;
    unsigned long long _numLower;
    unsigned long long _numHigher;
    double _weight;
    _Bool _hasBase64;
    _Bool _isBigEndian;
    _Bool _hasBOM;
    unsigned int _tag;
}

+ (id)encodingDetectorWithEncoding:(unsigned long long)arg1;
- (unsigned long long)recognizeString:(const char *)arg1 withDataLength:(unsigned long long)arg2 withReplacement:(const char *)arg3 withReplacementLength:(unsigned long long)arg4 inNewData:(char *)arg5 maxBufferLength:(unsigned long long)arg6 actualBufferLength:(unsigned long long *)arg7;
- (double)multiBytesRatio;
- (double)confidenceWith2Chars;
- (double)confidence;
- (id)init;
- (unsigned long long)maxSkipBytes;
- (double)bytesRatio;
- (void)softReset;
- (void)reset;

@end

__attribute__((visibility("hidden")))
@interface NSSingleByteEncodingDetector : NSEncodingDetector
{
}

- (double)confidence;

@end

__attribute__((visibility("hidden")))
@interface NSASCIIEncodingDetector : NSSingleByteEncodingDetector
{
}

- (double)confidence;
- (unsigned long long)recognizeString:(const char *)arg1 withDataLength:(unsigned long long)arg2 withReplacement:(const char *)arg3 withReplacementLength:(unsigned long long)arg4 inNewData:(char *)arg5 maxBufferLength:(unsigned long long)arg6 actualBufferLength:(unsigned long long *)arg7;
- (id)init;

@end

@interface NSTextCheckingResult : NSObject <NSCopying, NSCoding>
{
}

+ (void)initialize;
+ (id)transitInformationCheckingResultWithRange:(struct _NSRange)arg1 components:(id)arg2;
+ (id)phoneNumberCheckingResultWithRange:(struct _NSRange)arg1 phoneNumber:(id)arg2;
+ (id)regularExpressionCheckingResultWithRanges:(struct _NSRange *)arg1 count:(unsigned long long)arg2 regularExpression:(id)arg3;
+ (id)correctionCheckingResultWithRange:(struct _NSRange)arg1 replacementString:(id)arg2 alternativeStrings:(id)arg3;
+ (id)correctionCheckingResultWithRange:(struct _NSRange)arg1 replacementString:(id)arg2;
+ (id)replacementCheckingResultWithRange:(struct _NSRange)arg1 replacementString:(id)arg2;
+ (id)dashCheckingResultWithRange:(struct _NSRange)arg1 replacementString:(id)arg2;
+ (id)quoteCheckingResultWithRange:(struct _NSRange)arg1 replacementString:(id)arg2;
+ (id)linkCheckingResultWithRange:(struct _NSRange)arg1 URL:(id)arg2;
+ (id)addressCheckingResultWithRange:(struct _NSRange)arg1 components:(id)arg2;
+ (id)dateCheckingResultWithRange:(struct _NSRange)arg1 date:(id)arg2 timeZone:(id)arg3 duration:(double)arg4;
+ (id)dateCheckingResultWithRange:(struct _NSRange)arg1 date:(id)arg2;
+ (id)grammarCheckingResultWithRange:(struct _NSRange)arg1 details:(id)arg2;
+ (id)spellCheckingResultWithRange:(struct _NSRange)arg1;
+ (id)orthographyCheckingResultWithRange:(struct _NSRange)arg1 orthography:(id)arg2;
- (void *)underlyingResult;
- (id)phoneNumber;
- (id)regularExpression;
- (id)alternativeStrings;
- (id)replacementString;
- (id)URL;
- (id)components;
- (id)addressComponents;
- (double)duration;
- (id)timeZone;
- (id)date;
- (id)grammarDetails;
- (id)orthography;
- (struct _NSRange)rangeAtIndex:(unsigned long long)arg1;
- (unsigned long long)numberOfRanges;
- (_Bool)_adjustRangesWithOffset:(long long)arg1;
- (id)resultByAdjustingRangesWithOffset:(long long)arg1;
@property(readonly) struct _NSRange range;
@property(readonly) unsigned long long resultType;
- (struct _NSRange)decodeRangeWithCoder:(id)arg1;
- (void)encodeRangeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface NSAddressCheckingResult : NSTextCheckingResult
{
    struct _NSRange _range;
    NSDictionary *_components;
    id _underlyingResult;
}

@property(readonly) void *underlyingResult;
- (id)components;
- (_Bool)_adjustRangesWithOffset:(long long)arg1;
- (id)resultByAdjustingRangesWithOffset:(long long)arg1;
- (struct _NSRange)range;
- (unsigned long long)resultType;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithRange:(struct _NSRange)arg1 components:(id)arg2;
- (id)initWithRange:(struct _NSRange)arg1 components:(id)arg2 underlyingResult:(void *)arg3;

@end

@interface NSAffineTransform : NSObject <NSCopying, NSCoding>
{
    CDStruct_56a8f59f _transformStruct;
}

+ (id)transform;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
@property CDStruct_56a8f59f transformStruct;
- (struct CGSize)transformSize:(struct CGSize)arg1;
- (struct CGPoint)transformPoint:(struct CGPoint)arg1;
- (void)prependTransform:(id)arg1;
- (void)appendTransform:(id)arg1;
- (void)invert;
- (void)scaleXBy:(double)arg1 yBy:(double)arg2;
- (void)scaleBy:(double)arg1;
- (void)rotateByRadians:(double)arg1;
- (void)rotateByDegrees:(double)arg1;
- (void)translateXBy:(double)arg1 yBy:(double)arg2;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithTransform:(id)arg1;
- (id)init;

@end

@interface NSExpression : NSObject <NSSecureCoding, NSCopying>
{
    struct _expressionFlags {
        unsigned int _evaluationBlocked:1;
        unsigned int _reservedExpressionFlags:31;
    } _expressionFlags;
    unsigned int reserved;
    unsigned long long _expressionType;
}

+ (_Bool)supportsSecureCoding;
+ (id)expressionForAnyKey;
+ (id)expressionForBlock:(CDUnknownBlockType)arg1 arguments:(id)arg2;
+ (id)expressionForMinusSet:(id)arg1 with:(id)arg2;
+ (id)expressionForIntersectSet:(id)arg1 with:(id)arg2;
+ (id)expressionForUnionSet:(id)arg1 with:(id)arg2;
+ (id)expressionForFunction:(id)arg1 arguments:(id)arg2;
+ (id)expressionForKeyPath:(id)arg1;
+ (id)_newKeyPathExpressionForString:(id)arg1;
+ (id)expressionForTernaryWithPredicate:(id)arg1 trueExpression:(id)arg2 falseExpression:(id)arg3;
+ (id)expressionForVariableNameAssignment:(id)arg1 expression:(id)arg2;
+ (id)expressionForFunction:(id)arg1 selectorName:(id)arg2 arguments:(id)arg3;
+ (id)expressionForSubquery:(id)arg1 usingIteratorVariable:(id)arg2 predicate:(id)arg3;
+ (id)expressionForAggregate:(id)arg1;
+ (id)expressionForSymbolicString:(id)arg1;
+ (id)expressionForVariable:(id)arg1;
+ (id)expressionForEvaluatedObject;
+ (id)expressionForConstantValue:(id)arg1;
+ (id)expressionWithFormat:(id)arg1 arguments:(struct __va_list_tag [1])arg2;
+ (id)expressionWithFormat:(id)arg1;
+ (id)expressionWithFormat:(id)arg1 argumentArray:(id)arg2;
- (id)_expressionWithSubstitutionVariables:(id)arg1;
- (void)acceptVisitor:(id)arg1 flags:(unsigned long long)arg2;
- (_Bool)_shouldUseParensWithDescription;
@property(readonly, copy) CDUnknownBlockType expressionBlock;
- (id)falseExpression;
- (id)trueExpression;
- (id)subexpression;
@property(readonly, retain) id collection;
@property(readonly, copy) NSPredicate *predicate;
@property(readonly, copy) NSExpression *rightExpression;
@property(readonly, copy) NSExpression *leftExpression;
@property(readonly, copy) NSArray *arguments;
- (SEL)selector;
@property(readonly, copy) NSExpression *operand;
@property(readonly, copy) NSString *function;
@property(readonly, copy) NSString *variable;
@property(readonly, retain) id constantValue;
@property(readonly, copy) NSString *keyPath;
@property(readonly) unsigned long long expressionType;
- (id)predicateFormat;
- (id)description;
- (id)expressionValueWithObject:(id)arg1 context:(id)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)allowEvaluation;
- (_Bool)_allowsEvaluation;
- (id)initWithExpressionType:(unsigned long long)arg1;

@end

__attribute__((visibility("hidden")))
@interface NSAggregateExpression : NSExpression
{
    id _collection;
}

+ (_Bool)supportsSecureCoding;
- (id)_expressionWithSubstitutionVariables:(id)arg1;
- (void)acceptVisitor:(id)arg1 flags:(unsigned long long)arg2;
- (id)expressionValueWithObject:(id)arg1 context:(id)arg2;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)collection;
- (id)constantValue;
- (id)predicateFormat;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)allowEvaluation;
- (id)initWithCollection:(id)arg1;

@end

@interface NSDirectoryEnumerator : NSEnumerator
{
}

- (void)skipDescendants;
- (void)skipDescendents;
@property(readonly) unsigned long long level;
@property(readonly, copy) NSDictionary *directoryAttributes;
@property(readonly, copy) NSDictionary *fileAttributes;
- (id)nextObject;

@end

__attribute__((visibility("hidden")))
@interface NSAllDescendantPathsEnumerator : NSDirectoryEnumerator
{
    NSString *path;
    NSArray *contents;
    unsigned long long idx;
    NSString *prepend;
    NSAllDescendantPathsEnumerator *under;
    NSFileAttributes *directoryAttributes;
    NSString *pathToLastReportedItem;
    unsigned long long depth;
    _Bool cross;
    char _padding[3];
}

+ (id)newWithPath:(id)arg1 prepend:(id)arg2 attributes:(id)arg3 cross:(_Bool)arg4 depth:(unsigned long long)arg5;
- (void)dealloc;
- (void)skipDescendants;
- (void)skipDescendents;
- (id)_under;
- (unsigned long long)level;
- (id)currentSubdirectoryAttributes;
- (id)directoryAttributes;
- (id)fileAttributes;
- (id)nextObject;

@end

__attribute__((visibility("hidden")))
@interface NSAnyKeyExpression : NSExpression
{
}

+ (_Bool)_allowsEvaluation;
+ (_Bool)supportsSecureCoding;
+ (id)defaultInstance;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (void)initialize;
- (id)expressionValueWithObject:(id)arg1 context:(id)arg2;
- (id)predicateFormat;
- (id)init;
- (id)_initPrivate;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)autorelease;
- (_Bool)_tryRetain;
- (_Bool)_isDeallocating;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;

@end

@interface NSCoder : NSObject
{
}

- (void)_validateAllowedClass:(Class)arg1 forKey:(id)arg2 allowingInvocations:(_Bool)arg3;
- (void)validateClassSupportsSecureCoding:(Class)arg1;
- (void)validateAllowedClass:(Class)arg1 forKey:(id)arg2;
- (id)allowedClasses;
- (id)decodePropertyListForKey:(id)arg1;
- (id)decodeObjectOfClasses:(id)arg1 forKey:(id)arg2;
- (id)decodeObjectOfClass:(Class)arg1 forKey:(id)arg2;
- (_Bool)requiresSecureCoding;
- (unsigned int)systemVersion;
- (struct _NSZone *)objectZone;
- (void)setObjectZone:(struct _NSZone *)arg1;
- (void)setAllowedClasses:(id)arg1;
- (const char *)decodeBytesForKey:(id)arg1 returnedLength:(unsigned long long *)arg2;
- (double)decodeDoubleForKey:(id)arg1;
- (float)decodeFloatForKey:(id)arg1;
- (long long)decodeLongForKey:(id)arg1;
- (long long)decodeIntegerForKey:(id)arg1;
- (long long)decodeInt64ForKey:(id)arg1;
- (int)decodeInt32ForKey:(id)arg1;
- (int)decodeIntForKey:(id)arg1;
- (_Bool)decodeBoolForKey:(id)arg1;
- (_Bool)containsValueForKey:(id)arg1;
- (void)encodeBytes:(const char *)arg1 length:(unsigned long long)arg2 forKey:(id)arg3;
- (void)encodeDouble:(double)arg1 forKey:(id)arg2;
- (void)encodeFloat:(float)arg1 forKey:(id)arg2;
- (void)encodeLong:(long long)arg1 forKey:(id)arg2;
- (void)encodeInteger:(long long)arg1 forKey:(id)arg2;
- (void)encodeInt64:(long long)arg1 forKey:(id)arg2;
- (void)encodeInt32:(int)arg1 forKey:(id)arg2;
- (void)encodeInt:(int)arg1 forKey:(id)arg2;
- (void)encodeBool:(_Bool)arg1 forKey:(id)arg2;
- (void)encodeConditionalObject:(id)arg1 forKey:(id)arg2;
- (id)decodeObjectForKey:(id)arg1;
- (void)encodeObject:(id)arg1 forKey:(id)arg2;
- (_Bool)allowsKeyedCoding;
- (void *)decodeBytesWithReturnedLength:(unsigned long long *)arg1;
- (void)decodeArrayOfObjCType:(const char *)arg1 count:(unsigned long long)arg2 at:(void *)arg3;
- (void)decodeValuesOfObjCTypes:(const char *)arg1;
- (id)decodeObject;
- (void)encodeBytes:(const void *)arg1 length:(unsigned long long)arg2;
- (void)encodeArrayOfObjCType:(const char *)arg1 count:(unsigned long long)arg2 at:(const void *)arg3;
- (void)encodeValuesOfObjCTypes:(const char *)arg1;
- (void)encodeConditionalObject:(id)arg1;
- (void)encodeRootObject:(id)arg1;
- (void)encodeByrefObject:(id)arg1;
- (void)encodeBycopyObject:(id)arg1;
- (void)encodeObject:(id)arg1;
- (long long)versionForClassName:(id)arg1;
- (id)decodeDataObject;
- (void)decodeValueOfObjCType:(const char *)arg1 at:(void *)arg2;
- (void)encodeDataObject:(id)arg1;
- (void)encodeValueOfObjCType:(const char *)arg1 at:(const void *)arg2;
- (struct CGRect)decodeRect;
- (void)encodeRect:(struct CGRect)arg1;
- (struct CGSize)decodeSize;
- (void)encodeSize:(struct CGSize)arg1;
- (struct CGPoint)decodePoint;
- (void)encodePoint:(struct CGPoint)arg1;
- (struct CGRect)decodeRectForKey:(id)arg1;
- (struct CGSize)decodeSizeForKey:(id)arg1;
- (struct CGPoint)decodePointForKey:(id)arg1;
- (void)encodeRect:(struct CGRect)arg1 forKey:(id)arg2;
- (void)encodeSize:(struct CGSize)arg1 forKey:(id)arg2;
- (void)encodePoint:(struct CGPoint)arg1 forKey:(id)arg2;

@end

@interface NSArchiver : NSCoder
{
    void *mdata;
    void *pointerTable;
    void *stringTable;
    void *ids;
    void *map;
    void *replacementTable;
    void *reserved;
}

+ (_Bool)archiveRootObject:(id)arg1 toFile:(id)arg2;
+ (id)archivedDataWithRootObject:(id)arg1;
+ (id)classNameEncodedForTrueClassName:(id)arg1;
+ (void)encodeClassName:(id)arg1 intoClassName:(id)arg2;
+ (void)initialize;
- (id)classNameEncodedForTrueClassName:(id)arg1;
- (void)encodeClassName:(id)arg1 intoClassName:(id)arg2;
- (void)encodeConditionalObject:(id)arg1;
- (void)encodeRootObject:(id)arg1;
- (void)encodeDataObject:(id)arg1;
- (void)encodeObject:(id)arg1;
- (void)encodeBytes:(const void *)arg1 length:(unsigned long long)arg2;
- (void)encodeArrayOfObjCType:(const char *)arg1 count:(unsigned long long)arg2 at:(const void *)arg3;
- (void)encodeValuesOfObjCTypes:(const char *)arg1;
- (void)encodeValueOfObjCType:(const char *)arg1 at:(const void *)arg2;
- (long long)versionForClassName:(id)arg1;
- (void)replaceObject:(id)arg1 withObject:(id)arg2;
- (void)finalize;
- (void)dealloc;
- (id)data;
@property(readonly, retain) NSMutableData *archiverData;
- (id)initForWritingWithMutableData:(id)arg1;

@end

@interface NSArray (NSArray)
+ (id)newWithContentsOf:(id)arg1 immutable:(_Bool)arg2;
+ (id)arrayWithContentsOfURL:(id)arg1;
+ (id)arrayWithContentsOfFile:(id)arg1;
- (id)initWithContentsOfURL:(id)arg1;
- (id)initWithContentsOfFile:(id)arg1;
- (_Bool)writeToURL:(id)arg1 atomically:(_Bool)arg2;
- (_Bool)writeToFile:(id)arg1 atomically:(_Bool)arg2;
- (id)_stringToWrite;
- (id)sortedArrayUsingSelector:(SEL)arg1 hint:(id)arg2;
- (id)sortedArrayUsingFunction:(CDUnknownFunctionPointerType)arg1 context:(void *)arg2 hint:(id)arg3;
- (id)sortedArrayHint;
- (Class)classForCoder;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)debugDescription;
@end

@interface NSArray (NSArrayPathExtensions)
- (id)stringsByAppendingPathComponent:(id)arg1;
- (id)pathsMatchingExtensions:(id)arg1;
@end

@interface NSArray (NSArrayPortCoding)
- (id)replacementObjectForPortCoder:(id)arg1;
@end

@interface NSArray (NSKeyValueCoding)
- (id)valueForKeyPath:(id)arg1;
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (id)valueForKey:(id)arg1;
- (id)_distinctUnionOfSetsForKeyPath:(id)arg1;
- (id)_distinctUnionOfObjectsForKeyPath:(id)arg1;
- (id)_distinctUnionOfArraysForKeyPath:(id)arg1;
- (id)_unionOfSetsForKeyPath:(id)arg1;
- (id)_unionOfArraysForKeyPath:(id)arg1;
- (id)_unionOfObjectsForKeyPath:(id)arg1;
- (id)_minForKeyPath:(id)arg1;
- (id)_maxForKeyPath:(id)arg1;
- (id)_countForKeyPath:(id)arg1;
- (id)_avgForKeyPath:(id)arg1;
- (id)_sumForKeyPath:(id)arg1;
@end

@interface NSArray (NSKeyValueCodingPrivate)
- (_Bool)_validateValue:(inout id *)arg1 forKeyPath:(id)arg2 ofObjectAtIndex:(unsigned long long)arg3 error:(out id *)arg4;
- (void)_setValue:(id)arg1 forKeyPath:(id)arg2 ofObjectAtIndex:(unsigned long long)arg3;
- (id)_mutableSetValueForKeyPath:(id)arg1 ofObjectAtIndex:(unsigned long long)arg2;
- (id)_mutableOrderedSetValueForKeyPath:(id)arg1 ofObjectAtIndex:(unsigned long long)arg2;
- (id)_mutableArrayValueForKeyPath:(id)arg1 ofObjectAtIndex:(unsigned long long)arg2;
- (id)_valueForKeyPath:(id)arg1 ofObjectAtIndex:(unsigned long long)arg2;
@end

@interface NSArray (NSKeyValueObserverRegistration)
- (void)removeObserver:(id)arg1 forKeyPath:(id)arg2;
- (void)removeObserver:(id)arg1 forKeyPath:(id)arg2 context:(void *)arg3;
- (void)addObserver:(id)arg1 forKeyPath:(id)arg2 options:(unsigned long long)arg3 context:(void *)arg4;
- (void)removeObserver:(id)arg1 fromObjectsAtIndexes:(id)arg2 forKeyPath:(id)arg3;
- (void)removeObserver:(id)arg1 fromObjectsAtIndexes:(id)arg2 forKeyPath:(id)arg3 context:(void *)arg4;
- (void)addObserver:(id)arg1 toObjectsAtIndexes:(id)arg2 forKeyPath:(id)arg3 options:(unsigned long long)arg4 context:(void *)arg5;
@end

@interface NSArray (NSKeyValueSorting)
- (id)sortedArrayUsingDescriptors:(id)arg1;
@end

@interface NSArray (NSPredicateSupport)
- (id)filteredArrayUsingPredicate:(id)arg1;
@end

@interface NSAssertionHandler : NSObject
{
    void *_reserved;
}

+ (id)currentHandler;
- (void)handleFailureInFunction:(id)arg1 file:(id)arg2 lineNumber:(long long)arg3 description:(id)arg4;
- (void)handleFailureInMethod:(SEL)arg1 object:(id)arg2 file:(id)arg3 lineNumber:(long long)arg4 description:(id)arg5;

@end

@interface NSAttributedString : NSObject <NSCopying, NSMutableCopying, NSSecureCoding>
{
}

+ (_Bool)supportsSecureCoding;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (void)_setAttributedDictionaryClass:(Class)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (Class)classForCoder;
- (void)enumerateAttribute:(id)arg1 inRange:(struct _NSRange)arg2 options:(unsigned long long)arg3 usingBlock:(CDUnknownBlockType)arg4;
- (void)enumerateAttributesInRange:(struct _NSRange)arg1 options:(unsigned long long)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (id)attribute:(id)arg1 atIndex:(unsigned long long)arg2 longestEffectiveRange:(struct _NSRange *)arg3 inRange:(struct _NSRange)arg4;
- (id)attributesAtIndex:(unsigned long long)arg1 longestEffectiveRange:(struct _NSRange *)arg2 inRange:(struct _NSRange)arg3;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEqualToAttributedString:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (unsigned long long)length;
- (id)attributedStringByWeaklyAddingAttributes:(id)arg1;
- (id)attributedSubstringFromRange:(struct _NSRange)arg1 replacingCharactersInRanges:(const struct _NSRange *)arg2 numberOfRanges:(long long)arg3 withString:(id)arg4;
- (id)attributedSubstringFromRange:(struct _NSRange)arg1;
- (id)attribute:(id)arg1 atIndex:(unsigned long long)arg2 effectiveRange:(struct _NSRange *)arg3;
- (id)attributesAtIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;
@property(readonly, copy) NSString *string;
- (id)replacementObjectForPortCoder:(id)arg1;
- (id)_createAttributedSubstringWithRange:(struct _NSRange)arg1;
- (unsigned long long)_cfTypeID;

@end

__attribute__((visibility("hidden")))
@interface NSAutoCalendar : NSCalendar
{
    NSCalendar *cal;
    NSLocale *changedLocale;
    NSTimeZone *changedTimeZone;
    unsigned long long changedFirstWeekday;
    unsigned long long changedMinimumDaysinFirstWeek;
    NSDate *changedGregorianStartDate;
}

+ (_Bool)supportsSecureCoding;
- (void)enumerateDatesStartingAfterDate:(id)arg1 matchingComponents:(id)arg2 options:(unsigned long long)arg3 usingBlock:(CDUnknownBlockType)arg4;
- (_Bool)isDateInWeekend:(id)arg1;
- (_Bool)nextWeekendStartDate:(out id *)arg1 interval:(out double *)arg2 options:(unsigned long long)arg3 afterDate:(id)arg4;
- (Class)classForCoder;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
- (id)components:(unsigned long long)arg1 fromDate:(id)arg2 toDate:(id)arg3 options:(unsigned long long)arg4;
- (id)dateByAddingComponents:(id)arg1 toDate:(id)arg2 options:(unsigned long long)arg3;
- (id)components:(unsigned long long)arg1 fromDate:(id)arg2;
- (id)dateFromComponents:(id)arg1;
- (_Bool)rangeOfUnit:(unsigned long long)arg1 startDate:(id *)arg2 interval:(double *)arg3 forDate:(id)arg4;
- (unsigned long long)ordinalityOfUnit:(unsigned long long)arg1 inUnit:(unsigned long long)arg2 forDate:(id)arg3;
- (struct _NSRange)rangeOfUnit:(unsigned long long)arg1 inUnit:(unsigned long long)arg2 forDate:(id)arg3;
- (struct _NSRange)maximumRangeOfUnit:(unsigned long long)arg1;
- (struct _NSRange)minimumRangeOfUnit:(unsigned long long)arg1;
- (id)gregorianStartDate;
- (void)setGregorianStartDate:(id)arg1;
- (unsigned long long)minimumDaysInFirstWeek;
- (void)setMinimumDaysInFirstWeek:(unsigned long long)arg1;
- (unsigned long long)firstWeekday;
- (void)setFirstWeekday:(unsigned long long)arg1;
- (id)timeZone;
- (void)setTimeZone:(id)arg1;
- (id)locale;
- (void)setLocale:(id)arg1;
- (id)calendarIdentifier;
- (void)dealloc;
- (id)initWithCalendarIdentifier:(id)arg1;
- (id)init;
- (void)_update:(id)arg1;

@end

@interface NSProxy <NSObject>
{
    Class isa;
}

+ (id)description;
+ (CDUnknownFunctionPointerType)methodForSelector:(SEL)arg1;
+ (CDUnknownFunctionPointerType)instanceMethodForSelector:(SEL)arg1;
+ (_Bool)instancesRespondToSelector:(SEL)arg1;
+ (_Bool)conformsToProtocol:(id)arg1;
+ (_Bool)isKindOfClass:(Class)arg1;
+ (_Bool)isMemberOfClass:(Class)arg1;
+ (_Bool)isSubclassOfClass:(Class)arg1;
+ (_Bool)isProxy;
+ (_Bool)isFault;
+ (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
+ (id)performSelector:(SEL)arg1 withObject:(id)arg2;
+ (id)performSelector:(SEL)arg1;
+ (unsigned long long)hash;
+ (_Bool)isEqual:(id)arg1;
+ (id)_copyDescription;
+ (id)debugDescription;
+ (struct _NSZone *)zone;
+ (_Bool)retainWeakReference;
+ (_Bool)allowsWeakReference;
+ (_Bool)_isDeallocating;
+ (_Bool)_tryRetain;
+ (void)finalize;
+ (void)dealloc;
+ (id)init;
+ (void)doesNotRecognizeSelector:(SEL)arg1;
+ (void)forwardInvocation:(id)arg1;
+ (id)methodSignatureForSelector:(SEL)arg1;
+ (id)instanceMethodSignatureForSelector:(SEL)arg1;
+ (id)forwardingTargetForSelector:(SEL)arg1;
+ (_Bool)isAncestorOfObject:(id)arg1;
+ (_Bool)respondsToSelector:(SEL)arg1;
+ (id)mutableCopyWithZone:(struct _NSZone *)arg1;
+ (id)mutableCopy;
+ (id)copyWithZone:(struct _NSZone *)arg1;
+ (id)copy;
+ (unsigned long long)retainCount;
+ (id)autorelease;
+ (oneway void)release;
+ (id)retain;
+ (id)self;
+ (Class)superclass;
+ (Class)class;
+ (id)alloc;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (void)initialize;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(id)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (_Bool)isFault;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
@property(readonly) unsigned long long hash;
- (_Bool)isEqual:(id)arg1;
- (id)_copyDescription;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
- (_Bool)_allowsDirectEncoding;
- (struct _NSZone *)zone;
- (void)finalize;
- (void)dealloc;
- (_Bool)retainWeakReference;
- (_Bool)allowsWeakReference;
- (_Bool)_tryRetain;
- (_Bool)_isDeallocating;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;
- (void)doesNotRecognizeSelector:(SEL)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (void)forwardInvocation:(id)arg1;
- (id)forwardingTargetForSelector:(SEL)arg1;
- (id)self;
@property(readonly) Class superclass;
- (Class)class;
- (_Bool)_conformsToProtocolNamed:(const char *)arg1;
- (struct objc_method_description *)methodDescriptionForSelector:(SEL)arg1;

@end

__attribute__((visibility("hidden")))
@interface NSAutoContentAccessingProxy : NSProxy
{
    id _target;
}

+ (id)proxyWithTarget:(id)arg1;
- (void)finalize;
- (void)dealloc;
- (void)forwardInvocation:(id)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (id)forwardingTargetForSelector:(SEL)arg1;

@end

__attribute__((visibility("hidden")))
@interface NSAutoLocale : NSLocale
{
    NSLocale *loc;
}

+ (_Bool)supportsSecureCoding;
- (Class)classForCoder;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
- (void)_setNullLocale;
- (unsigned char)_nullLocale;
- (id)_prefs;
- (id)displayNameForKey:(id)arg1 value:(id)arg2;
- (id)objectForKey:(id)arg1;
- (void)dealloc;
- (id)initWithLocaleIdentifier:(id)arg1;
- (id)_init;
- (void)_update:(id)arg1;

@end

@interface NSAutoreleasePool : NSObject
{
    void *_token;
    void *_reserved3;
    void *_reserved2;
    void *_reserved;
}

+ (void)resetTotalAutoreleasedObjects;
+ (unsigned long long)totalAutoreleasedObjects;
+ (void)setPoolCountHighWaterResolution:(unsigned long long)arg1;
+ (unsigned long long)poolCountHighWaterResolution;
+ (void)setPoolCountHighWaterMark:(unsigned long long)arg1;
+ (unsigned long long)poolCountHighWaterMark;
+ (void)enableFreedObjectCheck:(_Bool)arg1;
+ (void)enableRelease:(_Bool)arg1;
+ (_Bool)autoreleasePoolExists;
+ (unsigned long long)topAutoreleasePoolCount;
+ (unsigned long long)autoreleasedObjectCount;
+ (void)releaseAllPools;
+ (void)showPools;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (void)addObject:(id)arg1;
- (void)dealloc;
- (id)autorelease;
- (unsigned long long)retainCount;
- (id)retain;
- (void)addObject:(id)arg1;
- (id)initWithCapacity:(unsigned long long)arg1;
- (oneway void)release;
- (void)drain;
- (id)init;

@end

@interface NSLayoutConstraint : NSObject <NSISConstraint>
{
    id _container;
    id _firstItem;
    id _secondItem;
    double _constant;
    double _loweredConstant;
    id _markerAndPositiveExtraVar;
    id _negativeExtraVar;
    unsigned long long _layoutConstraintFlags;
    float _coefficient;
    float _priority;
}

+ (id)constraintWithItem:(id)arg1 attribute:(long long)arg2 relatedBy:(long long)arg3 constant:(double)arg4;
+ (id)constraintWithItem:(id)arg1 attribute:(long long)arg2 relatedBy:(long long)arg3 toItem:(id)arg4 attribute:(long long)arg5;
+ (id)constraintWithItem:(id)arg1 attribute:(long long)arg2 relatedBy:(long long)arg3 toItem:(id)arg4 attribute:(long long)arg5 constant:(double)arg6;
+ (id)constraintWithItem:(id)arg1 attribute:(long long)arg2 relatedBy:(long long)arg3 toItem:(id)arg4 attribute:(long long)arg5 multiplier:(double)arg6;
+ (id)constraintWithItem:(id)arg1 attribute:(long long)arg2 relatedBy:(long long)arg3 toItem:(id)arg4 attribute:(long long)arg5 multiplier:(double)arg6 constant:(double)arg7;
+ (id)constraintWithItem:(id)arg1 attribute:(long long)arg2 relatedBy:(long long)arg3 toItem:(id)arg4 attribute:(long long)arg5 multiplier:(double)arg6 symbolicConstant:(id)arg7;
+ (id)constraintWithItem:(id)arg1 attribute:(long long)arg2 relatedBy:(long long)arg3 toItem:(id)arg4 attribute:(long long)arg5 multiplier:(double)arg6 symbolicConstant:(id)arg7 theme:(id)arg8;
+ (id)constraintsWithVisualFormat:(id)arg1 options:(unsigned long long)arg2 metrics:(id)arg3 views:(id)arg4;
+ (id)_findCommonAncestorOfItem:(id)arg1 andItem:(id)arg2;
+ (void)_addOrRemoveConstraints:(id)arg1 activate:(_Bool)arg2;
+ (void)deactivateConstraints:(id)arg1;
+ (void)activateConstraints:(id)arg1;
+ (void)_setLegacyDecodingOnly:(_Bool)arg1;
- (void)_setSecondItem:(id)arg1;
@property id secondItem; // @synthesize secondItem=_secondItem;
- (void)_setFirstItem:(id)arg1;
@property id firstItem; // @synthesize firstItem=_firstItem;
@property(getter=isActive) _Bool active;
- (_Bool)_nsib_isRedundant;
- (_Bool)_nsib_isRedundantInEngine:(id)arg1;
- (id)_layoutEngine;
- (id)nsis_descriptionOfVariable:(id)arg1;
- (id)_loweredExpression;
- (_Bool)_lowerIntoExpression:(id)arg1 reportingConstantIsRounded:(_Bool *)arg2;
- (struct CGSize)_engineToContainerScalingCoefficients;
- (void)_makeExtraVars;
- (void)_removeFromEngine:(id)arg1;
- (void)_addToEngine:(id)arg1;
- (_Bool)_addToEngine:(id)arg1 integralizationAdjustment:(double)arg2 mutuallyExclusiveConstraints:(id *)arg3;
- (_Bool)_addLoweredExpression:(id)arg1 toEngine:(id)arg2 integralizationAdjustment:(double)arg3 lastLoweredConstantWasRounded:(_Bool)arg4 mutuallyExclusiveConstraints:(id *)arg5;
- (double)priorityForVariable:(id)arg1;
- (_Bool)_describesSameRestrictionAsConstraint:(id)arg1;
- (id)_constraintByReplacingView:(id)arg1 withView:(id)arg2;
- (id)_constraintByReplacingItem:(id)arg1 withItem:(id)arg2;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
@property(readonly, copy) NSString *description;
- (id)equationDescription;
- (id)descriptionAccessory;
- (id)_priorityDescription;
- (id)asciiArtDescription;
- (int)_constraintType;
- (void)dealloc;
- (id)init;
@property(copy) NSString *symbolicConstant;
- (void)_setSymbolicConstant:(id)arg1;
- (id)_symbolicConstant;
- (void)_ensureValueMaintainsArbitraryLimit:(double *)arg1;
@property double constant;
- (id)_constantDescriptionForDTrace;
- (id)_descriptionforSymbolicConstant;
- (void)_setSymbolicConstant:(id)arg1 constant:(double)arg2;
- (_Bool)_effectiveConstant:(double *)arg1 error:(id *)arg2;
- (void)_containerGeometryDidChange;
- (_Bool)_tryToChangeContainerGeometryWithUndoHandler:(CDUnknownBlockType)arg1;
- (void)_clearWeakContainerReference;
@property id container;
- (_Bool)_loweredConstantIsRounded;
- (void)_setPrimitiveConstraintType:(int)arg1;
- (int)_primitiveConstraintType;
- (void)_setDeferDTraceLogging:(_Bool)arg1;
- (_Bool)_deferDTraceLogging;
- (void)_setNegativeExtraVar:(id)arg1;
- (id)_negativeExtraVar;
- (void)_setMarkerAndPositiveErrorVar:(id)arg1;
- (id)_markerAndPositiveExtraVar;
- (_Bool)nsis_valueOfVariableIsUserObservable:(id)arg1;
- (_Bool)nsis_shouldIntegralizeVariable:(id)arg1;
- (void)nsis_valueOfVariable:(id)arg1 didChangeInEngine:(id)arg2;
- (double)nsis_allowedMagnitudeForIntegralizationAdjustmentOfConstraintWithMarker:(id)arg1;
- (double)_allowedMagnitudeForIntegralizationAdjustmentOfConstraintWithMarkerScaling:(double *)arg1;
- (double)_allowedMagnitudeForIntegralizationAdjustment;
- (double)_fudgeIncrement;
- (_Bool)_isFudgeable;
- (void)setAnimations:(id)arg1;
- (id)animations;
@property(copy) NSString *identifier;
- (void)_setIdentifier:(id)arg1;
- (id)_identifier;
- (void)setHasBeenLowered:(_Bool)arg1;
@property(readonly) _Bool hasBeenLowered;
@property float priority;
- (_Bool)_isIBPrototypingLayoutConstraint;
@property _Bool shouldBeArchived;
- (void)_setSecondAttribute:(long long)arg1;
@property long long secondAttribute;
- (void)_setMultiplier:(double)arg1;
@property double multiplier;
- (void)_setRelation:(long long)arg1;
@property long long relation;
- (void)_setFirstAttribute:(long long)arg1;
@property long long firstAttribute;
@property(nonatomic, getter=_loweredConstantNeedsUpdate, setter=_setLoweredConstantNeedsUpdate:) _Bool loweredConstantNeedsUpdate;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface NSAutoresizingMaskLayoutConstraint : NSLayoutConstraint
{
}

+ (id)constraintWithItem:(id)arg1 attribute:(long long)arg2 relatedBy:(long long)arg3 toItem:(id)arg4 attribute:(long long)arg5 multiplier:(double)arg6 constant:(double)arg7;
+ (id)constraintsWithAutoresizingMask:(unsigned long long)arg1 subitem:(id)arg2 frame:(struct CGRect)arg3 superitem:(id)arg4 bounds:(struct CGRect)arg5;
- (int)_constraintType;
- (id)descriptionAccessory;
- (id)_viewForAutoresizingMask;

@end

@interface NSPredicateOperator : NSObject <NSSecureCoding, NSCopying>
{
    unsigned long long _operatorType;
    unsigned long long _modifier;
}

+ (_Bool)supportsSecureCoding;
+ (id)operatorWithCustomSelector:(SEL)arg1 modifier:(unsigned long long)arg2;
+ (id)_newOperatorWithType:(unsigned long long)arg1 modifier:(unsigned long long)arg2 options:(unsigned long long)arg3;
+ (id)operatorWithType:(unsigned long long)arg1 modifier:(unsigned long long)arg2 options:(unsigned long long)arg3;
+ (SEL)_getSelectorForType:(unsigned long long)arg1;
+ (id)_getSymbolForType:(unsigned long long)arg1;
- (void)_setModifier:(unsigned long long)arg1;
- (unsigned long long)options;
- (void)_setOptions:(unsigned long long)arg1;
- (void)acceptVisitor:(id)arg1 flags:(unsigned long long)arg2;
- (_Bool)performOperationUsingObject:(id)arg1 andObject:(id)arg2;
- (_Bool)performPrimitiveOperationUsingObject:(id)arg1 andObject:(id)arg2;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)modifier;
- (id)symbol;
- (unsigned long long)operatorType;
- (SEL)selector;
- (id)description;
- (id)predicateFormat;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithOperatorType:(unsigned long long)arg1 modifier:(unsigned long long)arg2 options:(unsigned long long)arg3;
- (id)initWithOperatorType:(unsigned long long)arg1 modifier:(unsigned long long)arg2;
- (id)initWithOperatorType:(unsigned long long)arg1;

@end

__attribute__((visibility("hidden")))
@interface NSBetweenPredicateOperator : NSPredicateOperator
{
}

- (void)_setOptions:(unsigned long long)arg1;
- (_Bool)performPrimitiveOperationUsingObject:(id)arg1 andObject:(id)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

__attribute__((visibility("hidden")))
@interface NSBig5EncodingDetector : NSEncodingDetector
{
}

- (unsigned long long)recognizeString:(const char *)arg1 withDataLength:(unsigned long long)arg2 withReplacement:(const char *)arg3 withReplacementLength:(unsigned long long)arg4 inNewData:(char *)arg5 maxBufferLength:(unsigned long long)arg6 actualBufferLength:(unsigned long long *)arg7;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface NSBig5HKSCSEncodingDetector : NSEncodingDetector
{
}

- (unsigned long long)recognizeString:(const char *)arg1 withDataLength:(unsigned long long)arg2 withReplacement:(const char *)arg3 withReplacementLength:(unsigned long long)arg4 inNewData:(char *)arg5 maxBufferLength:(unsigned long long)arg6 actualBufferLength:(unsigned long long *)arg7;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface NSBigEEncodingDetector : NSEncodingDetector
{
}

- (unsigned long long)recognizeString:(const char *)arg1 withDataLength:(unsigned long long)arg2 withReplacement:(const char *)arg3 withReplacementLength:(unsigned long long)arg4 inNewData:(char *)arg5 maxBufferLength:(unsigned long long)arg6 actualBufferLength:(unsigned long long *)arg7;
- (id)init;

@end

@interface NSString : NSObject <NSCopying, NSMutableCopying, NSSecureCoding>
{
}

+ (_Bool)supportsSecureCoding;
+ (id)stringWithContentsOfFile:(id)arg1 usedEncoding:(unsigned long long *)arg2 error:(id *)arg3;
+ (id)stringWithContentsOfFile:(id)arg1 encoding:(unsigned long long)arg2 error:(id *)arg3;
+ (id)stringWithContentsOfURL:(id)arg1 usedEncoding:(unsigned long long *)arg2 error:(id *)arg3;
+ (id)stringWithContentsOfURL:(id)arg1 encoding:(unsigned long long)arg2 error:(id *)arg3;
+ (id)stringWithContentsOfURL:(id)arg1;
+ (id)stringWithContentsOfFile:(id)arg1;
+ (id)stringWithFormat:(id)arg1 locale:(id)arg2;
+ (id)stringWithFormat:(id)arg1;
+ (id)localizedStringWithFormat:(id)arg1;
+ (id)stringWithBytes:(const void *)arg1 length:(unsigned long long)arg2 encoding:(unsigned long long)arg3;
+ (id)stringWithUTF8String:(const char *)arg1;
+ (id)stringWithCString:(const char *)arg1 encoding:(unsigned long long)arg2;
+ (id)stringWithCString:(const char *)arg1 length:(unsigned long long)arg2;
+ (id)stringWithCString:(const char *)arg1;
+ (id)stringWithCharacters:(const unsigned short *)arg1 length:(unsigned long long)arg2;
+ (id)stringWithString:(id)arg1;
+ (id)string;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (void)initialize;
+ (id)pathWithComponents:(id)arg1;
+ (id)localizedNameOfStringEncoding:(unsigned long long)arg1;
+ (const unsigned long long *)availableStringEncodings;
+ (unsigned long long)defaultCStringEncoding;
+ (id)_web_stringRepresentationForBytes:(long long)arg1;
+ (unsigned long long)stringEncodingForData:(id)arg1 encodingOptions:(id)arg2 convertedString:(id *)arg3 usedLossyConversion:(_Bool *)arg4;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (_Bool)_allowsDirectEncoding;
- (Class)classForCoder;
- (id)initWithFormat:(id)arg1 locale:(id)arg2 arguments:(struct __va_list_tag [1])arg3;
- (id)initWithBytesNoCopy:(void *)arg1 length:(unsigned long long)arg2 encoding:(unsigned long long)arg3 freeWhenDone:(_Bool)arg4;
- (id)initWithCStringNoCopy:(char *)arg1 length:(unsigned long long)arg2 freeWhenDone:(_Bool)arg3;
- (id)initWithCharactersNoCopy:(unsigned short *)arg1 length:(unsigned long long)arg2 freeWhenDone:(_Bool)arg3;
- (id)initWithFormat:(id)arg1 arguments:(struct __va_list_tag [1])arg2;
- (id)initWithFormat:(id)arg1 locale:(id)arg2;
- (id)initWithFormat:(id)arg1;
- (id)initWithData:(id)arg1 usedEncoding:(unsigned long long *)arg2;
- (id)initWithContentsOfFile:(id)arg1 usedEncoding:(unsigned long long *)arg2 error:(id *)arg3;
- (id)initWithContentsOfURL:(id)arg1 usedEncoding:(unsigned long long *)arg2 error:(id *)arg3;
- (id)initWithContentsOfFile:(id)arg1 encoding:(unsigned long long)arg2 error:(id *)arg3;
- (id)initWithContentsOfURL:(id)arg1 encoding:(unsigned long long)arg2 error:(id *)arg3;
- (id)initWithContentsOfURL:(id)arg1;
- (id)initWithContentsOfFile:(id)arg1;
- (id)_initWithDataOfUnknownEncoding:(id)arg1;
- (id)_initWithBytesOfUnknownEncoding:(char *)arg1 length:(unsigned long long)arg2 copy:(_Bool)arg3 usedEncoding:(unsigned long long *)arg4;
- (id)initWithData:(id)arg1 encoding:(unsigned long long)arg2;
- (id)initWithString:(id)arg1;
- (id)initWithCharacters:(const unsigned short *)arg1 length:(unsigned long long)arg2;
- (id)initWithUTF8String:(const char *)arg1;
- (id)initWithCString:(const char *)arg1 encoding:(unsigned long long)arg2;
- (id)initWithCString:(const char *)arg1;
- (id)initWithCString:(const char *)arg1 length:(unsigned long long)arg2;
- (_Bool)writeToURL:(id)arg1 atomically:(_Bool)arg2;
- (_Bool)writeToFile:(id)arg1 atomically:(_Bool)arg2;
- (_Bool)writeToFile:(id)arg1 atomically:(_Bool)arg2 encoding:(unsigned long long)arg3 error:(id *)arg4;
- (_Bool)writeToURL:(id)arg1 atomically:(_Bool)arg2 encoding:(unsigned long long)arg3 error:(id *)arg4;
- (_Bool)getExternalRepresentation:(id *)arg1 extendedAttributes:(id *)arg2 forWritingToURLOrPath:(id)arg3 usingEncoding:(unsigned long long)arg4 error:(id *)arg5;
- (id)displayableString;
- (void)enumerateLinesUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateSubstringsInRange:(struct _NSRange)arg1 options:(unsigned long long)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (struct _NSRange)paragraphRangeForRange:(struct _NSRange)arg1;
- (struct _NSRange)lineRangeForRange:(struct _NSRange)arg1;
- (void)getParagraphStart:(unsigned long long *)arg1 end:(unsigned long long *)arg2 contentsEnd:(unsigned long long *)arg3 forRange:(struct _NSRange)arg4;
- (void)getLineStart:(unsigned long long *)arg1 end:(unsigned long long *)arg2 contentsEnd:(unsigned long long *)arg3 forRange:(struct _NSRange)arg4;
- (void)_getBlockStart:(unsigned long long *)arg1 end:(unsigned long long *)arg2 contentsEnd:(unsigned long long *)arg3 forRange:(struct _NSRange)arg4 stopAtLineSeparators:(_Bool)arg5;
- (id)stringByFoldingWithOptions:(unsigned long long)arg1 locale:(id)arg2;
- (id)precomposedStringWithCompatibilityMapping;
- (id)decomposedStringWithCompatibilityMapping;
- (id)precomposedStringWithCanonicalMapping;
- (id)decomposedStringWithCanonicalMapping;
- (id)capitalizedStringWithLocale:(id)arg1;
- (id)lowercaseStringWithLocale:(id)arg1;
- (id)uppercaseStringWithLocale:(id)arg1;
- (id)capitalizedString;
- (id)lowercaseString;
- (id)uppercaseString;
- (_Bool)boolValue;
- (long long)integerValue;
- (long long)longLongValue;
- (int)intValue;
- (float)floatValue;
- (double)doubleValue;
- (id)stringByAppendingFormat:(id)arg1;
- (id)stringByAppendingString:(id)arg1;
- (id)substringToIndex:(unsigned long long)arg1;
- (id)substringFromIndex:(unsigned long long)arg1;
- (id)substringWithRange:(struct _NSRange)arg1;
- (id)_newSubstringWithRange:(struct _NSRange)arg1 zone:(struct _NSZone *)arg2;
- (void)getCharacters:(unsigned short *)arg1;
- (void)getCharacters:(unsigned short *)arg1 range:(struct _NSRange)arg2;
- (id)stringByReplacingCharactersInRange:(struct _NSRange)arg1 withString:(id)arg2;
- (id)stringByReplacingOccurrencesOfString:(id)arg1 withString:(id)arg2;
- (id)stringByReplacingOccurrencesOfString:(id)arg1 withString:(id)arg2 options:(unsigned long long)arg3 range:(struct _NSRange)arg4;
- (id)stringByPaddingToLength:(unsigned long long)arg1 withString:(id)arg2 startingAtIndex:(unsigned long long)arg3;
- (id)stringByTrimmingCharactersInSet:(id)arg1;
- (_Bool)localizedCaseInsensitiveContainsString:(id)arg1;
- (_Bool)containsString:(id)arg1;
- (_Bool)hasSuffix:(id)arg1;
- (_Bool)hasPrefix:(id)arg1;
- (id)commonPrefixWithString:(id)arg1 options:(unsigned long long)arg2;
- (id)componentsSeparatedByCharactersInSet:(id)arg1;
- (id)componentsSeparatedByString:(id)arg1;
- (struct _NSRange)rangeOfCharacterFromSet:(id)arg1;
- (struct _NSRange)rangeOfCharacterFromSet:(id)arg1 options:(unsigned long long)arg2;
- (struct _NSRange)rangeOfCharacterFromSet:(id)arg1 options:(unsigned long long)arg2 range:(struct _NSRange)arg3;
- (struct _NSRange)rangeOfString:(id)arg1;
- (struct _NSRange)rangeOfString:(id)arg1 options:(unsigned long long)arg2;
- (struct _NSRange)rangeOfString:(id)arg1 options:(unsigned long long)arg2 range:(struct _NSRange)arg3;
- (struct _NSRange)rangeOfString:(id)arg1 options:(unsigned long long)arg2 range:(struct _NSRange)arg3 locale:(id)arg4;
- (struct _NSRange)rangeOfComposedCharacterSequencesForRange:(struct _NSRange)arg1;
- (struct _NSRange)rangeOfComposedCharacterSequenceAtIndex:(unsigned long long)arg1;
- (long long)localizedStandardCompare:(id)arg1;
- (long long)localizedCaseInsensitiveCompare:(id)arg1;
- (long long)localizedCompare:(id)arg1;
- (long long)caseInsensitiveCompare:(id)arg1;
- (long long)compare:(id)arg1;
- (long long)compare:(id)arg1 options:(unsigned long long)arg2;
- (long long)compare:(id)arg1 options:(unsigned long long)arg2 range:(struct _NSRange)arg3 locale:(id)arg4;
- (long long)compare:(id)arg1 options:(unsigned long long)arg2 range:(struct _NSRange)arg3;
- (_Bool)isEqualToString:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
- (id)quotedStringRepresentation;
- (id)_stringRepresentation;
- (_Bool)_isCString;
- (const char *)_fastCStringContents:(_Bool)arg1;
- (const unsigned short *)_fastCharacterContents;
- (id)init;
- (unsigned short)characterAtIndex:(unsigned long long)arg1;
@property(readonly) unsigned long long length;
- (_Bool)_getCString:(char *)arg1 maxLength:(unsigned long long)arg2 encoding:(unsigned int)arg3;
- (unsigned int)_fastestEncodingInCFStringEncoding;
- (unsigned int)_smallestEncodingInCFStringEncoding;
- (unsigned char)_encodingCantBeStoredInEightBitCFString;
- (id)_createSubstringWithRange:(struct _NSRange)arg1;
- (unsigned long long)_cfTypeID;
- (id)stringByConvertingURLToPath;
- (id)stringByConvertingPathToURL;
- (unsigned long long)completePathIntoString:(id *)arg1 caseSensitive:(_Bool)arg2 matchesIntoArray:(id *)arg3 filterTypes:(id)arg4;
- (_Bool)getFileSystemRepresentation:(char *)arg1 maxLength:(unsigned long long)arg2;
- (const char *)fileSystemRepresentation;
- (id)stringsByAppendingPaths:(id)arg1;
- (id)stringByResolvingSymlinksInPath;
- (id)_stringByResolvingSymlinksInPathUsingCache:(_Bool)arg1;
- (id)stringByStandardizingPath;
- (id)_stringByStandardizingPathUsingCache:(_Bool)arg1;
- (id)stringByExpandingTildeInPath;
- (id)stringByAbbreviatingWithTildeInPath;
- (id)stringByAppendingPathExtension:(id)arg1;
- (id)stringByDeletingPathExtension;
- (id)pathExtension;
- (id)stringByAppendingPathComponent:(id)arg1;
- (id)stringByDeletingLastPathComponent;
- (id)lastPathComponent;
- (_Bool)isAbsolutePath;
- (id)pathComponents;
- (_Bool)isNSString__;
- (id)propertyListFromStringsFileFormat;
- (id)propertyList;
- (id)formatConfiguration;
- (id)_copyFormatStringWithConfiguration:(id)arg1;
- (_Bool)getBytes:(char *)arg1 maxLength:(unsigned long long)arg2 filledLength:(unsigned long long *)arg3 encoding:(unsigned long long)arg4 allowLossyConversion:(_Bool)arg5 range:(struct _NSRange)arg6 remainingRange:(struct _NSRange *)arg7;
- (_Bool)getBytes:(void *)arg1 maxLength:(unsigned long long)arg2 usedLength:(unsigned long long *)arg3 encoding:(unsigned long long)arg4 options:(unsigned long long)arg5 range:(struct _NSRange)arg6 remainingRange:(struct _NSRange *)arg7;
- (unsigned long long)lengthOfBytesUsingEncoding:(unsigned long long)arg1;
- (unsigned long long)maximumLengthOfBytesUsingEncoding:(unsigned long long)arg1;
- (_Bool)getCString:(char *)arg1 maxLength:(unsigned long long)arg2 encoding:(unsigned long long)arg3;
- (const char *)cStringUsingEncoding:(unsigned long long)arg1;
- (id)dataUsingEncoding:(unsigned long long)arg1;
- (id)dataUsingEncoding:(unsigned long long)arg1 allowLossyConversion:(_Bool)arg2;
- (_Bool)canBeConvertedToEncoding:(unsigned long long)arg1;
- (unsigned long long)smallestEncoding;
- (unsigned long long)fastestEncoding;
- (const char *)lossyCString;
- (unsigned long long)cStringLength;
- (const char *)cString;
- (const char *)UTF8String;
- (void)getCString:(char *)arg1;
- (void)getCString:(char *)arg1 maxLength:(unsigned long long)arg2;
- (void)getCString:(char *)arg1 maxLength:(unsigned long long)arg2 range:(struct _NSRange)arg3 remainingRange:(struct _NSRange *)arg4;
- (id)urlPathRelativeToPath:(id)arg1;
- (id)stringByAddingPercentEscapes;
- (id)stringByRemovingPercentEscapes;
- (id)standardizedURLPath;
- (id)stringByReplacingPercentEscapesUsingEncoding:(unsigned long long)arg1;
- (id)stringByAddingPercentEscapesUsingEncoding:(unsigned long long)arg1;
@property(readonly, copy) NSString *stringByRemovingPercentEncoding;
- (id)stringByAddingPercentEncodingWithAllowedCharacters:(id)arg1;
- (CDStruct_5fe7aead)decimalValue;
- (id)_web_HTTPStyleLanguageCodeWithoutRegion;
- (id)_web_HTTPStyleLanguageCode;
- (unsigned int)_web_extractFourCharCode;
- (id)_web_filenameByFixingIllegalCharacters;
- (id)_web_stringByCollapsingNonPrintingCharacters;
- (id)_web_URLFragment;
- (_Bool)_web_isFileURL;
- (_Bool)_web_looksLikeAbsoluteURL;
- (struct _NSRange)_web_rangeOfURLHost;
- (struct _NSRange)_web_rangeOfURLUserPasswordHostPort;
- (id)_web_fixedCarbonPOSIXPath;
- (id)_web_stringByExpandingTildeInPath;
- (id)_web_stringByTrimmingWhitespace;
- (id)_web_domainFromHost;
- (_Bool)_web_domainMatches:(id)arg1;
- (_Bool)_web_hasCountryCodeTLD;
- (_Bool)_web_looksLikeIPAddress;
- (long long)_web_countOfString:(id)arg1;
- (_Bool)_web_hasCaseInsensitivePrefix:(id)arg1;
- (_Bool)_web_isCaseInsensitiveEqualToString:(id)arg1;
- (_Bool)_web_isJavaScriptURL;
- (id)_web_stringByReplacingValidPercentEscapes_nowarn;
- (id)_web_fileNameFromContentDispositionHeader_nowarn;
- (id)_web_characterSetFromContentTypeHeader_nowarn;
- (id)_web_mimeTypeFromContentTypeHeader_nowarn;
- (struct _NSRange)_web_rangeOfURLResourceSpecifier_nowarn;
- (struct _NSRange)_web_rangeOfURLScheme_nowarn;
- (id)_web_parseAsKeyValuePairHandleQuotes_nowarn:(_Bool)arg1;
- (id)_web_parseAsKeyValuePair_nowarn;
- (id)_web_splitAtNonDateCommas_nowarn;
- (_Bool)_getBytesAsData:(id *)arg1 maxLength:(unsigned long long)arg2 usedLength:(unsigned long long *)arg3 encoding:(unsigned long long)arg4 options:(unsigned long long)arg5 range:(struct _NSRange)arg6 remainingRange:(struct _NSRange *)arg7;
- (id)_getCharactersAsStringInRange:(struct _NSRange)arg1;
- (void)_flushRegularExpressionCaches;
- (id)_stringByReplacingOccurrencesOfRegularExpressionPattern:(id)arg1 withTemplate:(id)arg2 options:(unsigned long long)arg3 range:(struct _NSRange)arg4;
- (struct _NSRange)_rangeOfRegularExpressionPattern:(id)arg1 options:(unsigned long long)arg2 range:(struct _NSRange)arg3 locale:(id)arg4;
- (struct _NSRange)significantText;
- (id)replacementObjectForPortCoder:(id)arg1;
- (id)__escapeString5991;
- (void)enumerateLinguisticTagsInRange:(struct _NSRange)arg1 scheme:(id)arg2 options:(unsigned long long)arg3 orthography:(id)arg4 usingBlock:(CDUnknownBlockType)arg5;
- (id)linguisticTagsInRange:(struct _NSRange)arg1 scheme:(id)arg2 options:(unsigned long long)arg3 orthography:(id)arg4 tokenRanges:(id *)arg5;

@end

@interface NSMutableString : NSString
{
}

+ (id)stringWithCapacity:(unsigned long long)arg1;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (void)initialize;
- (id)initWithCapacity:(unsigned long long)arg1;
- (Class)classForCoder;
- (unsigned long long)replaceOccurrencesOfString:(id)arg1 withString:(id)arg2 options:(unsigned long long)arg3 range:(struct _NSRange)arg4;
- (void)setString:(id)arg1;
- (void)appendFormat:(id)arg1;
- (void)replaceCharactersInRange:(struct _NSRange)arg1 withCharacters:(const unsigned short *)arg2 length:(unsigned long long)arg3;
- (void)replaceCharactersInRange:(struct _NSRange)arg1 withCString:(const char *)arg2 length:(unsigned long long)arg3;
- (void)deleteCharactersInRange:(struct _NSRange)arg1;
- (void)appendString:(id)arg1;
- (void)insertString:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)replaceCharactersInRange:(struct _NSRange)arg1 withString:(id)arg2;
- (void)_cfNormalize:(long long)arg1;
- (void)_cfTrimWS;
- (void)_trimWithCharacterSet:(id)arg1;
- (void)_cfTrim:(struct __CFString *)arg1;
- (void)_cfPad:(struct __CFString *)arg1 length:(unsigned int)arg2 padIndex:(unsigned int)arg3;
- (void)_cfCapitalize:(const void *)arg1;
- (void)_cfUppercase:(const void *)arg1;
- (void)_cfLowercase:(const void *)arg1;
- (void)_cfAppendCString:(const char *)arg1 length:(long long)arg2;
- (void)appendCharacters:(const unsigned short *)arg1 length:(unsigned long long)arg2;
- (id)replacementObjectForPortCoder:(id)arg1;
- (unsigned long long)_replaceOccurrencesOfRegularExpressionPattern:(id)arg1 withTemplate:(id)arg2 options:(unsigned long long)arg3 range:(struct _NSRange)arg4;

@end

@interface NSBigMutableString : NSMutableString
{
    struct {
        unsigned int isStorage:1;
        unsigned int isUnicode:1;
        unsigned int hasBOM:1;
        unsigned int swap:1;
        unsigned int immutable:1;
        unsigned int :27;
    } flags;
    unsigned long long length;
    union {
        struct {
            NSData *data;
            char *dataBytes;
        } d;
        struct {
            struct __CFStorage *storage;
        } s;
    } contents;
}

- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)_createSubstringWithRange:(struct _NSRange)arg1;
- (id)_newSubstringWithRange:(struct _NSRange)arg1 zone:(struct _NSZone *)arg2;
- (id)_newBigSubstringWithRange:(struct _NSRange)arg1 wantsMutable:(_Bool)arg2 zone:(struct _NSZone *)arg3;
- (id)_newSmallImmutableSubstringWithRange:(struct _NSRange)arg1 zone:(struct _NSZone *)arg2;
- (_Bool)_isCString;
- (void)replaceCharactersInRange:(struct _NSRange)arg1 withString:(id)arg2;
- (void)getCharacters:(unsigned short *)arg1 range:(struct _NSRange)arg2;
- (unsigned short)characterAtIndex:(unsigned long long)arg1;
- (unsigned long long)length;
- (_Bool)_setData:(id)arg1 encoding:(unsigned long long)arg2;
- (_Bool)_setStorage:(struct __CFStorage *)arg1 encoding:(unsigned long long)arg2;
- (_Bool)_copyStorage:(struct __CFStorage **)arg1 encoding:(unsigned long long *)arg2;
- (_Bool)_getData:(id *)arg1 encoding:(unsigned long long *)arg2;
- (_Bool)_isMarkedAsImmutable;
- (void)_markAsImmutable;
- (void)_checkForInvalidMutationWithSelector:(SEL)arg1;
- (void)dealloc;
- (id)initWithStorage:(struct __CFStorage *)arg1 length:(unsigned long long)arg2 isUnicode:(_Bool)arg3;
- (id)initWithString:(id)arg1;

@end

@interface NSBlockExpression : NSExpression
{
    CDUnknownBlockType _block;
    NSArray *_arguments;
}

- (void)acceptVisitor:(id)arg1 flags:(unsigned long long)arg2;
- (id)_expressionWithSubstitutionVariables:(id)arg1;
- (id)predicateFormat;
- (id)expressionValueWithObject:(id)arg1 context:(id)arg2;
- (id)arguments;
- (CDUnknownBlockType)expressionBlock;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithType:(unsigned long long)arg1 block:(CDUnknownBlockType)arg2 arguments:(id)arg3;

@end

@interface NSOperation : NSObject
{
    id _private;
    int _private1;
    int _private1b;
}

+ (id)currentOperation;
+ (_Bool)automaticallyNotifiesObserversForKey:(id)arg1;
- (id)_activity;
- (id)__;
- (id)description;
- (void)start;
- (void)main;
@property(readonly, copy) NSArray *dependencies;
- (void)removeDependency:(id)arg1;
- (void)addDependency:(id)arg1;
- (void)waitUntilFinishedOrTimeout:(double)arg1;
- (void)waitUntilFinished;
@property long long qualityOfService;
@property(copy) NSString *name;
@property(copy) CDUnknownBlockType completionBlock;
@property double threadPriority;
@property long long queuePriority;
@property(readonly, getter=isReady) _Bool ready;
@property(readonly, getter=isAsynchronous) _Bool asynchronous;
@property(readonly, getter=isConcurrent) _Bool concurrent;
@property(readonly, getter=isFinished) _Bool finished;
@property(readonly, getter=isExecuting) _Bool executing;
- (void)cancel;
@property(readonly, getter=isCancelled) _Bool cancelled;
- (void)finalize;
- (void)dealloc;
- (id)init;
- (void)setObservationInfo:(void *)arg1;
- (void *)observationInfo;
- (id)_implicitObservationInfo;
- (long long)_effQoS;

@end

@interface NSBlockOperation : NSOperation
{
    id _private2;
    void *_reserved2;
}

+ (id)blockOperationWithBlock:(CDUnknownBlockType)arg1;
@property(readonly, copy) NSArray *executionBlocks;
- (void)main;
- (void)addExecutionBlock:(CDUnknownBlockType)arg1;
- (void)finalize;
- (void)dealloc;
- (id)initWithBlock:(CDUnknownBlockType)arg1;
- (id)init;

@end

@interface NSPredicate : NSObject <NSSecureCoding, NSCopying>
{
    struct _predicateFlags {
        unsigned int _evaluationBlocked:1;
        unsigned int _reservedPredicateFlags:31;
    } _predicateFlags;
    unsigned int reserved;
}

+ (_Bool)supportsSecureCoding;
+ (id)predicateWithBlock:(CDUnknownBlockType)arg1;
+ (id)predicateWithValue:(_Bool)arg1;
+ (id)predicateWithFormat:(id)arg1 arguments:(struct __va_list_tag [1])arg2;
+ (id)predicateWithFormat:(id)arg1;
+ (id)predicateWithFormat:(id)arg1 argumentArray:(id)arg2;
+ (struct __CFLocale *)retainedLocale;
+ (id)newStringFrom:(id)arg1 usingUnicodeTransforms:(unsigned long long)arg2;
+ (void)initialize;
@property(readonly, copy) NSString *predicateFormat;
- (id)description;
- (id)predicateWithSubstitutionVariables:(id)arg1;
- (void)acceptVisitor:(id)arg1 flags:(unsigned long long)arg2;
- (_Bool)evaluateWithObject:(id)arg1 substitutionVariables:(id)arg2;
- (_Bool)evaluateWithObject:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)allowEvaluation;
- (_Bool)_allowsEvaluation;
- (id)generateMetadataDescription;
- (void)_validateForMetadataQueryScopes:(id)arg1;

@end

@interface NSBlockPredicate : NSPredicate
{
    CDUnknownBlockType _block;
}

- (CDUnknownBlockType)_predicateBlock;
- (id)predicateWithSubstitutionVariables:(id)arg1;
- (void)acceptVisitor:(id)arg1 flags:(unsigned long long)arg2;
- (id)predicateFormat;
- (_Bool)evaluateWithObject:(id)arg1 substitutionVariables:(id)arg2;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (_Bool)supportsSecureCoding;
- (id)initWithBlock:(CDUnknownBlockType)arg1;

@end

@interface NSBundle : NSObject
{
    unsigned long long _flags;
    id _cfBundle;
    unsigned long long _reserved2;
    Class _principalClass;
    id _initialPath;
    id _resolvedPath;
    id _reserved3;
    id _lock;
}

+ (id)preferredLocalizationsFromArray:(id)arg1 forPreferences:(id)arg2;
+ (id)preferredLocalizationsFromArray:(id)arg1;
+ (id)debugDescription;
+ (id)mainBundle;
+ (id)allFrameworks;
+ (id)allBundles;
+ (id)loadedBundles;
+ (id)bundleForClass:(Class)arg1;
+ (id)bundleWithIdentifier:(id)arg1;
+ (id)bundleWithURL:(id)arg1;
+ (id)bundleWithPath:(id)arg1;
+ (void)setSystemLanguages:(id)arg1;
+ (id)URLsForResourcesWithExtension:(id)arg1 subdirectory:(id)arg2 inBundleWithURL:(id)arg3;
+ (id)pathsForResourcesOfType:(id)arg1 inDirectory:(id)arg2;
+ (id)URLForResource:(id)arg1 withExtension:(id)arg2 subdirectory:(id)arg3 inBundleWithURL:(id)arg4;
+ (id)pathForResource:(id)arg1 ofType:(id)arg2 inDirectory:(id)arg3;
+ (id)findBundleResourceURLsCallingMethod:(SEL)arg1 baseURL:(id)arg2 passingTest:(CDUnknownBlockType)arg3;
+ (id)findBundleResources:(id)arg1 callingMethod:(SEL)arg2 directory:(id)arg3 languages:(id)arg4 name:(id)arg5 types:(id)arg6 limit:(unsigned long long)arg7;
@property(readonly, copy) NSArray *executableArchitectures;
- (_Bool)preflightAndReturnError:(id *)arg1;
@property(readonly, copy) NSString *developmentLocalization;
@property(readonly, copy) NSArray *preferredLocalizations;
@property(readonly, copy) NSArray *localizations;
- (id)pathsForResourcesOfType:(id)arg1 inDirectory:(id)arg2 forLanguage:(id)arg3;
- (id)pathForResource:(id)arg1 ofType:(id)arg2 inDirectory:(id)arg3 forLanguage:(id)arg4;
- (id)_pathsForResourcesOfType:(id)arg1 inDirectory:(id)arg2 forRegion:(id)arg3;
- (id)_pathForResource:(id)arg1 ofType:(id)arg2 inDirectory:(id)arg3 forRegion:(id)arg4;
- (id)_regionsArray;
- (id)description;
- (void)__static;
- (id)objectForInfoDictionaryKey:(id)arg1;
@property(readonly, copy) NSDictionary *localizedInfoDictionary;
@property(readonly, copy) NSDictionary *infoDictionary;
@property(readonly) Class principalClass;
- (Class)classNamed:(id)arg1;
- (void)invalidateResourceCache;
- (id)bundleLanguages;
- (unsigned long long)versionNumber;
@property(readonly, copy) NSString *bundleIdentifier;
@property(readonly, copy) NSURL *builtInPlugInsURL;
@property(readonly, copy) NSString *builtInPlugInsPath;
@property(readonly, copy) NSURL *sharedSupportURL;
@property(readonly, copy) NSString *sharedSupportPath;
@property(readonly, copy) NSURL *sharedFrameworksURL;
@property(readonly, copy) NSString *sharedFrameworksPath;
@property(readonly, copy) NSURL *privateFrameworksURL;
@property(readonly, copy) NSString *privateFrameworksPath;
- (id)URLForAuxiliaryExecutable:(id)arg1;
- (id)pathForAuxiliaryExecutable:(id)arg1;
@property(readonly, copy) NSURL *appStoreReceiptURL;
@property(readonly, copy) NSURL *executableURL;
@property(readonly, copy) NSString *executablePath;
@property(readonly, copy) NSURL *resourceURL;
@property(readonly, copy) NSString *resourcePath;
@property(readonly, copy) NSURL *bundleURL;
@property(readonly, copy) NSString *bundlePath;
- (id)initWithPath:(id)arg1;
- (id)initWithURL:(id)arg1;
- (void)finalize;
- (void)dealloc;
@property(readonly, getter=isLoaded) _Bool loaded;
- (_Bool)unload;
- (_Bool)loadAndReturnError:(id *)arg1;
- (_Bool)load;
- (id)localizedStringForKey:(id)arg1 value:(id)arg2 table:(id)arg3;
- (id)URLsForResourcesWithExtension:(id)arg1 subdirectory:(id)arg2;
- (id)pathsForResourcesOfType:(id)arg1 inDirectory:(id)arg2;
- (id)URLsForResourcesWithExtension:(id)arg1 subdirectory:(id)arg2 localization:(id)arg3;
- (id)pathsForResourcesOfType:(id)arg1 inDirectory:(id)arg2 forLocalization:(id)arg3;
- (id)URLForResource:(id)arg1 withExtension:(id)arg2;
- (id)pathForResource:(id)arg1 ofType:(id)arg2;
- (id)URLForResource:(id)arg1 withExtension:(id)arg2 subdirectory:(id)arg3;
- (id)pathForResource:(id)arg1 ofType:(id)arg2 inDirectory:(id)arg3;
- (id)URLForResource:(id)arg1 withExtension:(id)arg2 subdirectory:(id)arg3 localization:(id)arg4;
- (id)pathForResource:(id)arg1 ofType:(id)arg2 inDirectory:(id)arg3 forLocalization:(id)arg4;
- (id)findBundleResourceURLsCallingMethod:(SEL)arg1 passingTest:(CDUnknownBlockType)arg2;
- (struct __CFBundle *)_cfBundle;

@end

@interface NSFormatter : NSObject <NSCopying, NSCoding>
{
}

- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isPartialStringValid:(id *)arg1 proposedSelectedRange:(struct _NSRange *)arg2 originalString:(id)arg3 originalSelectedRange:(struct _NSRange)arg4 errorDescription:(id *)arg5;
- (_Bool)isPartialStringValid:(id)arg1 newEditingString:(id *)arg2 errorDescription:(id *)arg3;
- (_Bool)getObjectValue:(out id *)arg1 forString:(id)arg2 range:(inout struct _NSRange *)arg3 error:(out id *)arg4;
- (_Bool)getObjectValue:(out id *)arg1 forString:(id)arg2 errorDescription:(out id *)arg3;
- (id)editingStringForObjectValue:(id)arg1;
- (id)attributedStringForObjectValue:(id)arg1 withDefaultAttributes:(id)arg2;
- (id)stringForObjectValue:(id)arg1;

@end

@interface NSByteCountFormatter : NSFormatter
{
    unsigned int _allowedUnits;
    BOOL _countStyle;
    _Bool _allowsNonnumericFormatting;
    _Bool _includesUnit;
    _Bool _includesCount;
    _Bool _includesActualByteCount;
    _Bool _adaptive;
    _Bool _zeroPadsFractionDigits;
    int _formattingContext;
    int _reserved[5];
}

+ (id)stringFromByteCount:(long long)arg1 countStyle:(long long)arg2;
@property _Bool zeroPadsFractionDigits; // @synthesize zeroPadsFractionDigits=_zeroPadsFractionDigits;
@property(getter=isAdaptive) _Bool adaptive; // @synthesize adaptive=_adaptive;
@property _Bool includesActualByteCount; // @synthesize includesActualByteCount=_includesActualByteCount;
@property _Bool includesCount; // @synthesize includesCount=_includesCount;
@property _Bool includesUnit; // @synthesize includesUnit=_includesUnit;
@property _Bool allowsNonnumericFormatting; // @synthesize allowsNonnumericFormatting=_allowsNonnumericFormatting;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
@property long long formattingContext;
- (id)init;
- (_Bool)isPartialStringValid:(id *)arg1 proposedSelectedRange:(struct _NSRange *)arg2 originalString:(id)arg3 originalSelectedRange:(struct _NSRange)arg4 errorDescription:(id *)arg5;
- (_Bool)getObjectValue:(out id *)arg1 forString:(id)arg2 errorDescription:(out id *)arg3;
- (id)stringForObjectValue:(id)arg1;
- (id)stringFromByteCount:(long long)arg1;
- (unsigned long long)_options;
@property long long countStyle;
@property unsigned long long allowedUnits;

@end

__attribute__((visibility("hidden")))
@interface NSCFArray : NSMutableArray
{
}

+ (_Bool)automaticallyNotifiesObserversForKey:(id)arg1;
- (void)replaceObjectsInRange:(struct _NSRange)arg1 withObjects:(id *)arg2 count:(unsigned long long)arg3;
- (void)sortUsingFunction:(CDUnknownFunctionPointerType)arg1 context:(void *)arg2;
- (void)exchangeObjectAtIndex:(unsigned long long)arg1 withObjectAtIndex:(unsigned long long)arg2;
- (void)removeAllObjects;
- (void)getObjects:(id *)arg1 range:(struct _NSRange)arg2;
- (_Bool)containsObject:(id)arg1 inRange:(struct _NSRange)arg2;
- (void)removeObjectsInRange:(struct _NSRange)arg1;
- (void)removeObjectAtIndex:(unsigned long long)arg1;
- (void)removeLastObject;
- (void)replaceObjectAtIndex:(unsigned long long)arg1 withObject:(id)arg2;
- (void)insertObject:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)addObject:(id)arg1;
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
- (id)objectAtIndex:(unsigned long long)arg1;
- (unsigned long long)count;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (Class)classForCoder;
- (void)finalize;
- (_Bool)_isDeallocating;
- (_Bool)_tryRetain;
- (unsigned long long)retainCount;
- (oneway void)release;
- (id)retain;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;

@end

@interface NSMutableAttributedString : NSAttributedString
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
- (void)endEditing;
- (void)beginEditing;
- (void)setAttributedString:(id)arg1;
- (void)deleteCharactersInRange:(struct _NSRange)arg1;
- (void)appendAttributedString:(id)arg1;
- (void)insertAttributedString:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)replaceCharactersInRange:(struct _NSRange)arg1 withAttributedString:(id)arg2;
- (void)removeAttribute:(id)arg1 range:(struct _NSRange)arg2;
- (void)addAttributesWeakly:(id)arg1 range:(struct _NSRange)arg2;
- (void)addAttributes:(id)arg1 range:(struct _NSRange)arg2;
- (void)addAttribute:(id)arg1 value:(id)arg2 range:(struct _NSRange)arg3;
- (id)mutableString;
- (void)setAttributes:(id)arg1 range:(struct _NSRange)arg2;
- (void)replaceCharactersInRange:(struct _NSRange)arg1 withString:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface NSCFAttributedString : NSMutableAttributedString
{
}

+ (_Bool)automaticallyNotifiesObserversForKey:(id)arg1;
- (void)removeAttribute:(id)arg1 range:(struct _NSRange)arg2;
- (void)addAttribute:(id)arg1 value:(id)arg2 range:(struct _NSRange)arg3;
- (void)addAttributes:(id)arg1 range:(struct _NSRange)arg2;
- (void)setAttributedString:(id)arg1;
- (void)deleteCharactersInRange:(struct _NSRange)arg1;
- (void)appendAttributedString:(id)arg1;
- (void)insertAttributedString:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)replaceCharactersInRange:(struct _NSRange)arg1 withAttributedString:(id)arg2;
- (void)setAttributes:(id)arg1 range:(struct _NSRange)arg2;
- (void)replaceCharactersInRange:(struct _NSRange)arg1 withString:(id)arg2;
- (Class)classForCoder;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEqualToAttributedString:(id)arg1;
- (id)attribute:(id)arg1 atIndex:(unsigned long long)arg2 longestEffectiveRange:(struct _NSRange *)arg3 inRange:(struct _NSRange)arg4;
- (id)attributesAtIndex:(unsigned long long)arg1 longestEffectiveRange:(struct _NSRange *)arg2 inRange:(struct _NSRange)arg3;
- (id)attributedSubstringFromRange:(struct _NSRange)arg1;
- (id)attribute:(id)arg1 atIndex:(unsigned long long)arg2 effectiveRange:(struct _NSRange *)arg3;
- (unsigned long long)length;
- (id)attributesAtIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;
- (id)string;
- (void)finalize;
- (_Bool)_isDeallocating;
- (_Bool)_tryRetain;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)retainCount;
- (oneway void)release;
- (id)retain;

@end

@interface NSCharacterSet : NSObject <NSCopying, NSMutableCopying, NSCoding>
{
}

+ (id)characterSetWithBitmapRepresentation:(id)arg1;
+ (id)characterSetWithCharactersInString:(id)arg1;
+ (id)characterSetWithRange:(struct _NSRange)arg1;
+ (id)characterSetWithContentsOfFile:(id)arg1;
+ (id)newlineCharacterSet;
+ (id)symbolCharacterSet;
+ (id)illegalCharacterSet;
+ (id)capitalizedLetterCharacterSet;
+ (id)punctuationCharacterSet;
+ (id)decomposableCharacterSet;
+ (id)nonBaseCharacterSet;
+ (id)alphanumericCharacterSet;
+ (id)uppercaseLetterCharacterSet;
+ (id)lowercaseLetterCharacterSet;
+ (id)letterCharacterSet;
+ (id)decimalDigitCharacterSet;
+ (id)whitespaceAndNewlineCharacterSet;
+ (id)whitespaceCharacterSet;
+ (id)controlCharacterSet;
+ (void)initialize;
+ (id)URLFragmentAllowedCharacterSet;
+ (id)URLQueryAllowedCharacterSet;
+ (id)URLPathAllowedCharacterSet;
+ (id)URLHostAllowedCharacterSet;
+ (id)URLPasswordAllowedCharacterSet;
+ (id)URLUserAllowedCharacterSet;
- (id)_retainedBitmapRepresentation;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
@property(readonly, copy) NSData *bitmapRepresentation;
- (_Bool)isEqual:(id)arg1;
- (_Bool)hasMemberInPlane:(unsigned char)arg1;
- (_Bool)isSupersetOfSet:(id)arg1;
- (_Bool)longCharacterIsMember:(unsigned int)arg1;
- (_Bool)characterIsMember:(unsigned short)arg1;
- (void)makeImmutable;
- (_Bool)isMutable;
- (unsigned long long)count;
- (_Bool)isEmpty;
@property(readonly, copy) NSCharacterSet *invertedSet;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (unsigned long long)hash;
- (id)init;
- (struct __CFCharacterSet *)_expandedCFCharacterSet;
- (unsigned long long)_cfTypeID;
- (id)replacementObjectForPortCoder:(id)arg1;

@end

@interface NSMutableCharacterSet : NSCharacterSet <NSCopying, NSMutableCopying>
{
}

+ (id)characterSetWithContentsOfFile:(id)arg1;
+ (id)characterSetWithBitmapRepresentation:(id)arg1;
+ (id)newlineCharacterSet;
+ (id)symbolCharacterSet;
+ (id)capitalizedLetterCharacterSet;
+ (id)punctuationCharacterSet;
+ (id)illegalCharacterSet;
+ (id)decomposableCharacterSet;
+ (id)alphanumericCharacterSet;
+ (id)nonBaseCharacterSet;
+ (id)uppercaseLetterCharacterSet;
+ (id)lowercaseLetterCharacterSet;
+ (id)letterCharacterSet;
+ (id)decimalDigitCharacterSet;
+ (id)whitespaceAndNewlineCharacterSet;
+ (id)whitespaceCharacterSet;
+ (id)controlCharacterSet;
+ (id)characterSetWithCharactersInString:(id)arg1;
+ (id)characterSetWithRange:(struct _NSRange)arg1;
- (id)initWithCoder:(id)arg1;
- (_Bool)isMutable;
- (void)invert;
- (void)formIntersectionWithCharacterSet:(id)arg1;
- (void)formUnionWithCharacterSet:(id)arg1;
- (void)removeCharactersInString:(id)arg1;
- (void)addCharactersInString:(id)arg1;
- (void)removeCharactersInRange:(struct _NSRange)arg1;
- (void)addCharactersInRange:(struct _NSRange)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface NSCFCharacterSet : NSMutableCharacterSet
{
}

+ (_Bool)automaticallyNotifiesObserversForKey:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (Class)classForKeyedArchiver;
- (Class)classForArchiver;
- (void)makeCharacterSetFast;
- (void)makeCharacterSetCompact;
- (void)invert;
- (void)formIntersectionWithCharacterSet:(id)arg1;
- (void)formUnionWithCharacterSet:(id)arg1;
- (void)removeCharactersInString:(id)arg1;
- (void)addCharactersInString:(id)arg1;
- (void)removeCharactersInRange:(struct _NSRange)arg1;
- (void)addCharactersInRange:(struct _NSRange)arg1;
- (id)invertedSet;
- (id)bitmapRepresentation;
- (_Bool)hasMemberInPlane:(unsigned char)arg1;
- (_Bool)isSupersetOfSet:(id)arg1;
- (_Bool)longCharacterIsMember:(unsigned int)arg1;
- (_Bool)characterIsMember:(unsigned short)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)finalize;
- (unsigned long long)retainCount;
- (_Bool)retainWeakReference;
- (_Bool)allowsWeakReference;
- (oneway void)release;
- (id)retain;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface NSCFData : NSMutableData
{
    unsigned char _cfinfo[4];
    unsigned int _rc;
    long long _length;
    long long _capacity;
    struct __CFAllocator *_bytesDeallocator;
    char *_bytes;
}

+ (_Bool)automaticallyNotifiesObserversForKey:(id)arg1;
- (void)setLength:(unsigned long long)arg1;
- (void *)mutableBytes;
- (const void *)bytes;
- (unsigned long long)length;
- (_Bool)_compact;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)finalize;
- (unsigned long long)retainCount;
- (_Bool)retainWeakReference;
- (_Bool)allowsWeakReference;
- (oneway void)release;
- (id)retain;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface NSCFDictionary : NSMutableDictionary
{
}

+ (_Bool)automaticallyNotifiesObserversForKey:(id)arg1;
- (void)removeAllObjects;
- (void)getObjects:(id *)arg1 andKeys:(id *)arg2;
- (void)removeObjectForKey:(id)arg1;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (id)keyEnumerator;
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
- (id)objectForKey:(id)arg1;
- (unsigned long long)count;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (Class)classForCoder;
- (void)finalize;
- (_Bool)_isDeallocating;
- (_Bool)_tryRetain;
- (unsigned long long)retainCount;
- (oneway void)release;
- (id)retain;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (void)setObservationInfo:(void *)arg1;

@end

@interface NSError : NSObject <NSCopying, NSSecureCoding>
{
    void *_reserved;
    long long _code;
    NSString *_domain;
    NSDictionary *_userInfo;
}

+ (_Bool)supportsSecureCoding;
+ (id)errorWithDomain:(id)arg1 code:(long long)arg2 userInfo:(id)arg3;
+ (void)_registerFormatter:(CDUnknownFunctionPointerType)arg1 forErrorKey:(id)arg2 parameters:(const char *)arg3;
+ (void)_registerBuiltInFormatters;
+ (id)_web_errorWithDomain:(id)arg1 code:(long long)arg2 URL:(id)arg3;
+ (id)_web_errorWithDomain:(id)arg1 code:(long long)arg2 failingURL:(id)arg3;
+ (void)_web_addErrorsWithCodesAndDescriptions:(id)arg1 inDomain:(id)arg2;
- (unsigned long long)_cfTypeID;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
@property(readonly, copy) NSString *helpAnchor;
@property(readonly, retain) id recoveryAttempter;
@property(readonly, copy) NSArray *localizedRecoveryOptions;
@property(readonly, copy) NSString *localizedRecoverySuggestion;
@property(readonly, copy) NSString *localizedFailureReason;
@property(readonly, copy) NSString *localizedDescription;
- (struct __CFString *)_retainedUserInfoCallBackForKey:(id)arg1;
- (id)_cocoaErrorStringWithKind:(id)arg1;
- (id)_cocoaErrorStringWithKind:(id)arg1 variant:(id)arg2;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
@property(readonly, copy) NSDictionary *userInfo;
@property(readonly, copy) NSString *domain;
@property(readonly) long long code;
- (void)finalize;
- (void)dealloc;
- (id)initWithDomain:(id)arg1 code:(long long)arg2 userInfo:(id)arg3;
- (id)_cocoaErrorString:(id)arg1;
- (id)_cocoaErrorString:(id)arg1 fromBundle:(id)arg2 tableName:(id)arg3;
- (id)_formatCocoaErrorString:(id)arg1 parameters:(const char *)arg2 applicableFormatters:(struct **)arg3 count:(long long)arg4;
- (long long)_collectApplicableUserInfoFormatters:(struct **)arg1 max:(long long)arg2;
- (id)_web_failingURL;
- (id)_web_localizedDescription;
- (_Bool)_web_errorIsInDomain:(id)arg1;
- (id)_web_initWithDomain:(id)arg1 code:(long long)arg2 failingURL:(id)arg3;
- (id)_web_initWithDomain_nowarn:(id)arg1 code:(long long)arg2 URL:(id)arg3;
- (id)replacementObjectForPortCoder:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface NSCFError : NSError
{
}

+ (_Bool)automaticallyNotifiesObserversForKey:(id)arg1;
- (Class)classForCoder;
- (id)userInfo;
- (id)domain;
- (long long)code;
- (void)finalize;
- (unsigned long long)retainCount;
- (_Bool)retainWeakReference;
- (_Bool)allowsWeakReference;
- (oneway void)release;
- (id)retain;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface NSCFInputStream : NSInputStream
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (_Bool)automaticallyNotifiesObserversForKey:(id)arg1;
- (void)_unscheduleFromCFRunLoop:(struct __CFRunLoop *)arg1 forMode:(struct __CFString *)arg2;
- (void)_scheduleInCFRunLoop:(struct __CFRunLoop *)arg1 forMode:(struct __CFString *)arg2;
- (_Bool)_setCFClientFlags:(unsigned long long)arg1 callback:(CDUnknownFunctionPointerType)arg2 context:(CDStruct_e097db04 *)arg3;
- (_Bool)hasBytesAvailable;
- (_Bool)getBuffer:(char **)arg1 length:(unsigned long long *)arg2;
- (long long)read:(char *)arg1 maxLength:(unsigned long long)arg2;
- (id)streamError;
- (unsigned long long)streamStatus;
- (void)removeFromRunLoop:(id)arg1 forMode:(id)arg2;
- (void)scheduleInRunLoop:(id)arg1 forMode:(id)arg2;
- (_Bool)setProperty:(id)arg1 forKey:(id)arg2;
- (id)propertyForKey:(id)arg1;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)close;
- (void)open;
- (id)initWithURL:(id)arg1;
- (id)initWithFileAtPath:(id)arg1;
- (id)initWithData:(id)arg1;
- (void)finalize;
- (unsigned long long)retainCount;
- (_Bool)retainWeakReference;
- (_Bool)allowsWeakReference;
- (oneway void)release;
- (id)retain;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface NSCFOutputStream : NSOutputStream
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (_Bool)automaticallyNotifiesObserversForKey:(id)arg1;
- (void)_unscheduleFromCFRunLoop:(struct __CFRunLoop *)arg1 forMode:(struct __CFString *)arg2;
- (void)_scheduleInCFRunLoop:(struct __CFRunLoop *)arg1 forMode:(struct __CFString *)arg2;
- (_Bool)_setCFClientFlags:(unsigned long long)arg1 callback:(CDUnknownFunctionPointerType)arg2 context:(CDStruct_e097db04 *)arg3;
- (_Bool)hasSpaceAvailable;
- (long long)write:(const char *)arg1 maxLength:(unsigned long long)arg2;
- (id)streamError;
- (unsigned long long)streamStatus;
- (void)removeFromRunLoop:(id)arg1 forMode:(id)arg2;
- (void)scheduleInRunLoop:(id)arg1 forMode:(id)arg2;
- (_Bool)setProperty:(id)arg1 forKey:(id)arg2;
- (id)propertyForKey:(id)arg1;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)close;
- (void)open;
- (id)initWithURL:(id)arg1 append:(_Bool)arg2;
- (id)initToFileAtPath:(id)arg1 append:(_Bool)arg2;
- (id)initToBuffer:(char *)arg1 capacity:(unsigned long long)arg2;
- (id)initToMemory;
- (void)finalize;
- (unsigned long long)retainCount;
- (_Bool)retainWeakReference;
- (_Bool)allowsWeakReference;
- (oneway void)release;
- (id)retain;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface NSCFSet : NSMutableSet
{
}

+ (_Bool)automaticallyNotifiesObserversForKey:(id)arg1;
- (void)setSet:(id)arg1;
- (void)unionSet:(id)arg1;
- (void)minusSet:(id)arg1;
- (void)getObjects:(id *)arg1;
- (void)removeAllObjects;
- (void)removeObject:(id)arg1;
- (void)addObject:(id)arg1;
- (id)objectEnumerator;
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
- (unsigned long long)_trueCount;
- (id)member:(id)arg1;
- (unsigned long long)count;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (Class)classForCoder;
- (void)finalize;
- (_Bool)_isDeallocating;
- (_Bool)_tryRetain;
- (unsigned long long)retainCount;
- (oneway void)release;
- (id)retain;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface NSCFTimer : NSTimer
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (_Bool)automaticallyNotifiesObserversForKey:(id)arg1;
- (id)init;
- (id)initWithFireDate:(id)arg1 interval:(double)arg2 target:(id)arg3 selector:(SEL)arg4 userInfo:(id)arg5 repeats:(_Bool)arg6;
- (unsigned long long)_cfTypeID;
- (void)fire;
- (id)userInfo;
- (void)setFireDate:(id)arg1;
- (id)fireDate;
- (void)invalidate;
- (void)setTolerance:(double)arg1;
- (double)tolerance;
- (double)timeInterval;
- (_Bool)isValid;
- (void)finalize;
- (unsigned long long)retainCount;
- (_Bool)retainWeakReference;
- (_Bool)allowsWeakReference;
- (oneway void)release;
- (id)retain;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface NSCFType : NSObject
{
}

+ (_Bool)automaticallyNotifiesObserversForKey:(id)arg1;
- (void)finalize;
- (unsigned long long)retainCount;
- (_Bool)retainWeakReference;
- (_Bool)allowsWeakReference;
- (oneway void)release;
- (id)retain;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;

@end

@interface NSCalendar (NSCalendar)
+ (id)autoupdatingCurrentCalendar;
- (Class)classForCoder;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
@end

@interface NSCalendarDate : NSDate
{
    unsigned long long refCount;
    double _timeIntervalSinceReferenceDate;
    NSTimeZone *_timeZone;
    NSString *_formatString;
    void *_reserved;
}

+ (id)dateWithString:(id)arg1 calendarFormat:(id)arg2 locale:(id)arg3;
+ (id)dateWithString:(id)arg1 calendarFormat:(id)arg2;
+ (id)dateWithYear:(long long)arg1 month:(unsigned long long)arg2 day:(unsigned long long)arg3 hour:(unsigned long long)arg4 minute:(unsigned long long)arg5 second:(unsigned long long)arg6 timeZone:(id)arg7;
+ (id)calendarDate;
+ (id)distantPast;
+ (id)distantFuture;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)dateWithNaturalLanguageString:(id)arg1 date:(id)arg2 locale:(id)arg3;
- (id)initWithString:(id)arg1 calendarFormat:(id)arg2 locale:(id)arg3;
- (id)descriptionWithCalendarFormat:(id)arg1 locale:(id)arg2;
- (id)initWithString:(id)arg1 calendarFormat:(id)arg2;
- (id)descriptionWithCalendarFormat:(id)arg1;
- (id)descriptionWithLocale:(id)arg1;
- (id)description;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (Class)classForCoder;
- (id)addTimeInterval:(double)arg1;
- (void)years:(long long *)arg1 months:(long long *)arg2 days:(long long *)arg3 hours:(long long *)arg4 minutes:(long long *)arg5 seconds:(long long *)arg6 sinceDate:(id)arg7;
- (id)dateByAddingYears:(long long)arg1 months:(long long)arg2 days:(long long)arg3 hours:(long long)arg4 minutes:(long long)arg5 seconds:(long long)arg6;
- (long long)microsecondOfSecond;
- (long long)secondOfMinute;
- (long long)minuteOfHour;
- (long long)hourOfDay;
- (long long)dayOfYear;
- (long long)dayOfWeek;
- (long long)dayOfMonth;
- (long long)monthOfYear;
- (long long)yearOfCommonEra;
- (long long)dayOfCommonEra;
- (void)setCalendarFormat:(id)arg1;
- (id)calendarFormat;
- (void)setTimeZone:(id)arg1;
- (id)timeZone;
- (id)timeZoneDetail;
- (double)timeIntervalSinceReferenceDate;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithYear:(long long)arg1 month:(unsigned long long)arg2 day:(unsigned long long)arg3 hour:(unsigned long long)arg4 minute:(unsigned long long)arg5 second:(unsigned long long)arg6 timeZone:(id)arg7;
- (id)init;
- (id)initWithTimeIntervalSinceReferenceDate:(double)arg1;
- (oneway void)release;
- (void)dealloc;
- (id)initWithString:(id)arg1;
- (id)replacementObjectForPortCoder:(id)arg1;

@end

@interface NSCheapMutableString : NSMutableString
{
    union {
        unsigned short *fat;
        char *thin;
    } contents;
    struct {
        unsigned int isFat:1;
        unsigned int freeWhenDone:1;
        unsigned int refs:30;
    } flags;
    unsigned long long numCharacters;
    void *_reserved;
}

- (unsigned long long)cStringLength;
- (const char *)lossyCString;
- (const char *)cString;
- (unsigned long long)fastestEncoding;
- (void)getCharacters:(unsigned short *)arg1 range:(struct _NSRange)arg2;
- (_Bool)getBytes:(void *)arg1 maxLength:(unsigned long long)arg2 usedLength:(unsigned long long *)arg3 encoding:(unsigned long long)arg4 options:(unsigned long long)arg5 range:(struct _NSRange)arg6 remainingRange:(struct _NSRange *)arg7;
- (unsigned long long)length;
- (unsigned short)characterAtIndex:(unsigned long long)arg1;
- (void)finalize;
- (void)dealloc;
- (void)setContentsNoCopy:(void *)arg1 length:(unsigned long long)arg2 freeWhenDone:(_Bool)arg3 isUnicode:(_Bool)arg4;

@end

@interface NSHashTable : NSObject <NSCopying, NSCoding, NSFastEnumeration>
{
}

+ (id)hashTableWithOptions:(unsigned long long)arg1;
+ (id)weakObjectsHashTable;
+ (id)hashTableWithWeakObjects;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)alloc;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
@property(readonly, copy) NSSet *setRepresentation;
- (id)mutableSet;
- (void)minusHashTable:(id)arg1;
- (void)unionHashTable:(id)arg1;
- (void)intersectHashTable:(id)arg1;
- (_Bool)isSubsetOfHashTable:(id)arg1;
- (_Bool)isEqualToHashTable:(id)arg1;
- (_Bool)intersectsHashTable:(id)arg1;
- (_Bool)containsObject:(id)arg1;
@property(readonly, nonatomic) id anyObject;
- (void)removeAllObjects;
- (void)removeObject:(id)arg1;
- (id)member:(id)arg1;
@property(readonly, copy) NSPointerFunctions *pointerFunctions;
- (id)initWithPointerFunctions:(id)arg1 capacity:(unsigned long long)arg2;
- (void)getKeys:(const void **)arg1 count:(unsigned long long *)arg2;
- (void)removeAllItems;
- (id)copy;
- (void)removeItem:(const void *)arg1;
- (void)insertKnownAbsentItem:(const void *)arg1;
- (void)addObject:(id)arg1;
- (void *)getItem:(const void *)arg1;
- (unsigned long long)weakCount;
@property(readonly, copy) NSArray *allObjects;
@property(readonly) unsigned long long count;
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
- (void)encodeWithCoder:(id)arg1;
- (id)objectEnumerator;
- (id)description;
- (id)init;
- (id)initWithOptions:(unsigned long long)arg1 capacity:(unsigned long long)arg2;
- (id)initWithCoder:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface NSClassicHashTable : NSHashTable
{
    struct {
        CDUnknownFunctionPointerType hash;
        CDUnknownFunctionPointerType isEqual;
        CDUnknownFunctionPointerType retain;
        CDUnknownFunctionPointerType release;
        CDUnknownFunctionPointerType describe;
    } _callBacks;
    struct __CFBasicHash *_ht;
}

- (void)getKeys:(const void **)arg1 count:(unsigned long long *)arg2;
- (id)allObjects;
- (id)description;
- (unsigned long long)count;
- (void)removeItem:(const void *)arg1;
- (void)insertKnownAbsentItem:(const void *)arg1;
- (void)addObject:(id)arg1;
- (void)insertItem:(const void *)arg1;
- (void *)getItem:(const void *)arg1;
- (id)copy;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)removeAllItems;
- (void)dealloc;
- (id)init;

@end

@interface NSMapTable : NSObject <NSCopying, NSCoding, NSFastEnumeration>
{
}

+ (id)weakToWeakObjectsMapTable;
+ (id)strongToWeakObjectsMapTable;
+ (id)weakToStrongObjectsMapTable;
+ (id)strongToStrongObjectsMapTable;
+ (id)mapTableWithWeakToWeakObjects;
+ (id)mapTableWithStrongToWeakObjects;
+ (id)mapTableWithWeakToStrongObjects;
+ (id)mapTableWithStrongToStrongObjects;
+ (id)mapTableWithKeyOptions:(unsigned long long)arg1 valueOptions:(unsigned long long)arg2;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)alloc;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)dictionaryRepresentation;
- (id)mutableDictionary;
- (void)removeAllObjects;
- (unsigned long long)getKeys:(const void **)arg1 values:(const void **)arg2;
- (_Bool)mapMember:(const void *)arg1 originalKey:(const void **)arg2 value:(const void **)arg3;
- (id)enumerator;
- (void)removeAllItems;
- (id)allValues;
- (id)allKeys;
- (void)replaceItem:(const void *)arg1 forExistingKey:(const void *)arg2;
- (void *)existingItemForSetItem:(const void *)arg1 forAbsentKey:(const void *)arg2;
- (void)setItem:(const void *)arg1 forKnownAbsentKey:(const void *)arg2;
- (void)setItem:(const void *)arg1 forAbsentKey:(const void *)arg2;
- (void)setItem:(const void *)arg1 forKey:(const void *)arg2;
- (void)removeObjectForKey:(id)arg1;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (id)objectForKey:(id)arg1;
@property(readonly, copy) NSPointerFunctions *valuePointerFunctions;
@property(readonly, copy) NSPointerFunctions *keyPointerFunctions;
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
- (id)copy;
- (id)objectEnumerator;
- (id)keyEnumerator;
@property(readonly) unsigned long long count;
- (void)encodeWithCoder:(id)arg1;
- (id)description;
- (id)init;
- (id)initWithKeyPointerFunctions:(id)arg1 valuePointerFunctions:(id)arg2 capacity:(unsigned long long)arg3;
- (id)initWithKeyOptions:(unsigned long long)arg1 valueOptions:(unsigned long long)arg2 capacity:(unsigned long long)arg3;
- (id)initWithCoder:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface NSClassicMapTable : NSMapTable
{
    struct {
        CDUnknownFunctionPointerType hash;
        CDUnknownFunctionPointerType isEqual;
        CDUnknownFunctionPointerType retain;
        CDUnknownFunctionPointerType release;
        CDUnknownFunctionPointerType describe;
        void *notAKeyMarker;
    } _keyCallBacks;
    struct {
        CDUnknownFunctionPointerType retain;
        CDUnknownFunctionPointerType release;
        CDUnknownFunctionPointerType describe;
    } _valueCallBacks;
    struct __CFBasicHash *_ht;
}

- (unsigned long long)getKeys:(const void **)arg1 values:(const void **)arg2;
- (id)allValues;
- (id)allKeys;
- (id)description;
- (unsigned long long)count;
- (void)removeObjectForKey:(id)arg1;
- (void *)existingItemForSetItem:(const void *)arg1 forAbsentKey:(const void *)arg2;
- (void)setItem:(const void *)arg1 forKnownAbsentKey:(const void *)arg2;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (id)objectForKey:(id)arg1;
- (_Bool)mapMember:(const void *)arg1 originalKey:(const void **)arg2 value:(const void **)arg3;
- (id)copy;
- (_Bool)isEqual:(id)arg1;
- (void)removeAllItems;
- (void)dealloc;
- (id)init;

@end

@interface NSComparisonPredicate : NSPredicate
{
    void *_reserved2;
    NSPredicateOperator *_predicateOperator;
    NSExpression *_lhs;
    NSExpression *_rhs;
}

+ (_Bool)supportsSecureCoding;
+ (id)predicateWithPredicateOperator:(id)arg1 leftExpression:(id)arg2 rightExpression:(id)arg3;
+ (id)predicateWithPredicateOperator:(id)arg1 leftKeyPath:(id)arg2 rightKeyPath:(id)arg3;
+ (id)predicateWithPredicateOperator:(id)arg1 leftKeyPath:(id)arg2 rightValue:(id)arg3;
+ (id)predicateWithLeftExpression:(id)arg1 rightExpression:(id)arg2 customSelector:(SEL)arg3;
+ (id)predicateWithLeftExpression:(id)arg1 rightExpression:(id)arg2 modifier:(unsigned long long)arg3 type:(unsigned long long)arg4 options:(unsigned long long)arg5;
@property(readonly) unsigned long long options;
- (id)predicateWithSubstitutionVariables:(id)arg1;
- (void)acceptVisitor:(id)arg1 flags:(unsigned long long)arg2;
- (void)_acceptExpressions:(id)arg1 flags:(unsigned long long)arg2;
- (void)_acceptOperator:(id)arg1 flags:(unsigned long long)arg2;
- (_Bool)evaluateWithObject:(id)arg1 substitutionVariables:(id)arg2;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (void)setPredicateOperator:(id)arg1;
- (id)predicateOperator;
@property(readonly) SEL customSelector;
@property(readonly, retain) NSExpression *rightExpression;
@property(readonly, retain) NSExpression *leftExpression;
@property(readonly) unsigned long long comparisonPredicateModifier;
@property(readonly) unsigned long long predicateOperatorType;
- (id)predicateFormat;
- (void)dealloc;
- (id)initWithPredicateOperator:(id)arg1 leftExpression:(id)arg2 rightExpression:(id)arg3;
- (id)initWithPredicateOperator:(id)arg1 leftKeyPath:(id)arg2 rightValue:(id)arg3;
- (id)initWithPredicateOperator:(id)arg1 leftKeyPath:(id)arg2 rightKeyPath:(id)arg3;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)allowEvaluation;
- (id)keyPathExpressionForString:(id)arg1;
- (id)initWithLeftExpression:(id)arg1 rightExpression:(id)arg2 customSelector:(SEL)arg3;
- (id)initWithLeftExpression:(id)arg1 rightExpression:(id)arg2 modifier:(unsigned long long)arg3 type:(unsigned long long)arg4 options:(unsigned long long)arg5;
- (id)generateMetadataDescription;

@end

@interface NSComparisonPredicateOperator : NSPredicateOperator
{
    unsigned long long _variant;
    unsigned long long _options;
}

+ (_Bool)supportsSecureCoding;
- (_Bool)performPrimitiveOperationUsingObject:(id)arg1 andObject:(id)arg2;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)options;
- (unsigned long long)variant;
- (id)predicateFormat;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithOperatorType:(unsigned long long)arg1 modifier:(unsigned long long)arg2 variant:(unsigned long long)arg3 options:(unsigned long long)arg4;
- (id)initWithOperatorType:(unsigned long long)arg1 modifier:(unsigned long long)arg2 variant:(unsigned long long)arg3;

@end

@interface NSOrthography : NSObject <NSCopying, NSCoding>
{
}

+ (id)orthographyWithDominantScript:(id)arg1 languageMap:(id)arg2;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (void)initialize;
- (id)allLanguages;
- (id)allScripts;
- (id)dominantLanguage;
- (id)dominantLanguageForScript:(id)arg1;
- (id)languagesForScript:(id)arg1;
- (unsigned int)orthographyFlags;
@property(readonly, copy) NSDictionary *languageMap;
@property(readonly, copy) NSString *dominantScript;
- (id)replacementObjectForPortCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (Class)classForCoder;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithDominantScript:(id)arg1 languageMap:(id)arg2;

@end

@interface NSComplexOrthography : NSOrthography
{
    NSString *_dominantScript;
    NSDictionary *_languageMap;
    unsigned int _orthographyFlags;
}

+ (void)initialize;
- (unsigned int)orthographyFlags;
- (id)languageMap;
- (id)dominantScript;
- (void)dealloc;
- (id)initWithDominantScript:(id)arg1 languageMap:(id)arg2;

@end

@interface NSRegularExpressionCheckingResult : NSTextCheckingResult
{
}

- (id)resultByAdjustingRangesWithOffset:(long long)arg1;
- (unsigned long long)resultType;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)description;
@property(readonly) NSArray *rangeArray;
@property(readonly) NSRegularExpression *regularExpression;
- (id)initWithRangeArray:(id)arg1 regularExpression:(id)arg2;
- (id)initWithRanges:(struct _NSRange *)arg1 count:(unsigned long long)arg2 regularExpression:(id)arg3;

@end

@interface NSComplexRegularExpressionCheckingResult : NSRegularExpressionCheckingResult
{
    NSRegularExpression *_regularExpression;
    NSArray *_rangeArray;
}

- (id)rangeArray;
- (struct _NSRange)rangeAtIndex:(unsigned long long)arg1;
- (unsigned long long)numberOfRanges;
- (_Bool)_adjustRangesWithOffset:(long long)arg1;
- (struct _NSRange)range;
- (id)regularExpression;
- (void)dealloc;
- (id)initWithRangeArray:(id)arg1 regularExpression:(id)arg2;
- (id)initWithRanges:(struct _NSRange *)arg1 count:(unsigned long long)arg2 regularExpression:(id)arg3;

@end

@interface NSCompoundPredicate : NSPredicate
{
    void *_reserved2;
    unsigned long long _type;
    NSArray *_subpredicates;
}

+ (_Bool)supportsSecureCoding;
+ (id)_operatorForType:(unsigned long long)arg1;
+ (id)notPredicateWithSubpredicate:(id)arg1;
+ (id)orPredicateWithSubpredicates:(id)arg1;
+ (id)andPredicateWithSubpredicates:(id)arg1;
- (id)predicateOperator;
- (id)predicateWithSubstitutionVariables:(id)arg1;
- (void)acceptVisitor:(id)arg1 flags:(unsigned long long)arg2;
- (void)_acceptSubpredicates:(id)arg1 flags:(unsigned long long)arg2;
- (_Bool)evaluateWithObject:(id)arg1 substitutionVariables:(id)arg2;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)predicateFormat;
- (id)_subpredicateDescription:(id)arg1;
@property(readonly, copy) NSArray *subpredicates;
- (id)_predicateOperator;
@property(readonly) unsigned long long compoundPredicateType;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)allowEvaluation;
- (id)initWithType:(unsigned long long)arg1 subpredicates:(id)arg2;
- (id)generateMetadataDescription;

@end

@interface NSCompoundPredicateOperator : NSPredicateOperator
{
}

+ (id)notPredicateOperator;
+ (id)orPredicateOperator;
+ (id)andPredicateOperator;
- (_Bool)evaluatePredicates:(id)arg1 withObject:(id)arg2 substitutionVariables:(id)arg3;
- (_Bool)evaluatePredicates:(id)arg1 withObject:(id)arg2;
- (id)symbol;
- (id)predicateFormat;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface NSConcreteAttributedString : NSAttributedString
{
    NSString *string;
    NSRLEArray *attributes;
}

- (id)_runArrayHoldingAttributes;
- (id)string;
- (unsigned long long)length;
- (id)attribute:(id)arg1 atIndex:(unsigned long long)arg2 effectiveRange:(struct _NSRange *)arg3;
- (id)attributesAtIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)finalize;
- (void)dealloc;
- (id)init;
- (id)initWithAttributedString:(id)arg1;
- (id)initWithString:(id)arg1 attributes:(id)arg2;
- (id)initWithString:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface NSConcreteData : NSData
{
    unsigned int _isInline:1;
    unsigned int _retainCount:31;
    unsigned long long _length;
    unsigned long long _capacity;
    void *_bytes;
    union {
        unsigned char _space[12];
        CDUnknownBlockType _deallocator;
    } _u;
}

- (void)finalize;
- (void)dealloc;
- (id)initWithBytes:(void *)arg1 length:(unsigned long long)arg2 copy:(_Bool)arg3 freeWhenDone:(_Bool)arg4 bytesAreVM:(_Bool)arg5;
- (id)initWithBytes:(void *)arg1 length:(unsigned long long)arg2 copy:(_Bool)arg3 deallocator:(CDUnknownBlockType)arg4;
- (id)init;
- (void)getBytes:(void *)arg1 range:(struct _NSRange)arg2;
- (void)getBytes:(void *)arg1 length:(unsigned long long)arg2;
- (void)getBytes:(void *)arg1;
- (_Bool)_isCompact;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)_copyWillRetain;
- (const void *)bytes;
- (unsigned long long)length;

@end

@interface NSDistantObjectRequest : NSObject
{
}

- (void)replyWithException:(id)arg1;
@property(readonly, retain) id conversation;
@property(readonly, retain) NSConnection *connection;
@property(readonly, retain) NSInvocation *invocation;

@end

__attribute__((visibility("hidden")))
@interface NSConcreteDistantObjectRequest : NSDistantObjectRequest
{
    NSInvocation *invocation;
    NSArray *importedObjects;
    id conversation;
    unsigned int sequence;
    NSConnection *connection;
}

- (void)dealloc;
- (void)replyWithException:(id)arg1;
- (id)conversation;
- (id)connection;
- (id)invocation;
- (id)initWithInvocation:(id)arg1 conversation:(id)arg2 sequence:(unsigned int)arg3 importedObjects:(id)arg4 connection:(id)arg5;

@end

@interface NSFileHandle : NSObject <NSSecureCoding>
{
}

+ (id)fileHandleForUpdatingURL:(id)arg1 mode:(unsigned short)arg2 error:(id *)arg3;
+ (id)fileHandleForWritingToURL:(id)arg1 mode:(unsigned short)arg2 error:(id *)arg3;
+ (id)fileHandleForReadingFromURL:(id)arg1 mode:(unsigned short)arg2 error:(id *)arg3;
+ (id)fileHandleForUpdatingURL:(id)arg1 error:(id *)arg2;
+ (id)fileHandleForWritingToURL:(id)arg1 error:(id *)arg2;
+ (id)fileHandleForReadingFromURL:(id)arg1 error:(id *)arg2;
+ (id)fileHandleForUpdatingAtPath:(id)arg1;
+ (id)fileHandleForWritingAtPath:(id)arg1;
+ (id)fileHandleForReadingAtPath:(id)arg1;
+ (_Bool)supportsSecureCoding;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)fileHandleWithNullDevice;
+ (id)fileHandleWithStandardError;
+ (id)fileHandleWithStandardOutput;
+ (id)fileHandleWithStandardInput;
+ (void)initialize;
- (void)setReadabilityHandler:(CDUnknownBlockType)arg1;
- (CDUnknownBlockType)readabilityHandler;
- (void)setWriteabilityHandler:(CDUnknownBlockType)arg1;
- (CDUnknownBlockType)writeabilityHandler;
- (int)fileDescriptor;
- (void)closeFile;
- (void)synchronizeFile;
- (void)truncateFileAtOffset:(unsigned long long)arg1;
- (void)seekToFileOffset:(unsigned long long)arg1;
- (unsigned long long)seekToEndOfFile;
@property(readonly) unsigned long long offsetInFile;
- (void)writeData:(id)arg1;
- (id)readDataOfLength:(unsigned long long)arg1;
- (id)readDataToEndOfFile;
@property(readonly, copy) NSData *availableData;
- (id)initWithPath:(id)arg1 flags:(long long)arg2 createMode:(long long)arg3 error:(id *)arg4;
- (id)initWithURL:(id)arg1 flags:(long long)arg2 createMode:(long long)arg3 error:(id *)arg4;
- (id)initWithFileDescriptor:(int)arg1;
- (id)initWithFileDescriptor:(int)arg1 closeOnDealloc:(_Bool)arg2;
- (id)initWithPath:(id)arg1 flags:(long long)arg2 createMode:(long long)arg3;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (Class)classForCoder;

@end

__attribute__((visibility("hidden")))
@interface NSConcreteFileHandle : NSFileHandle
{
    int _fd;
    unsigned short _flags;
    struct __CFRunLoopSource *_source;
    struct __CFRunLoop *_rl;
    unsigned short _activity;
    int _error;
    int _resultSocket;
    NSObject<OS_dispatch_source> *_dsrc;
    NSObject<OS_dispatch_data> *_resultData;
    NSObject<OS_dispatch_queue> *_fhQueue;
    NSObject<OS_dispatch_io> *_readChannel;
    CDUnknownBlockType _readabilityHandler;
    CDUnknownBlockType _writeabilityHandler;
    NSObject<OS_dispatch_source> *_readMonitoringSource;
    NSObject<OS_dispatch_source> *_writeMonitoringSource;
    NSObject<OS_dispatch_queue> *_monitoringQueue;
}

- (void)setWriteabilityHandler:(CDUnknownBlockType)arg1;
- (CDUnknownBlockType)writeabilityHandler;
- (void)setReadabilityHandler:(CDUnknownBlockType)arg1;
- (CDUnknownBlockType)readabilityHandler;
- (void)_locked_clearHandler:(CDUnknownBlockType *)arg1 forSource:(id *)arg2;
- (id)_monitor:(int)arg1;
- (void)waitForDataInBackgroundAndNotify;
- (void)waitForDataInBackgroundAndNotifyForModes:(id)arg1;
- (void)acceptConnectionInBackgroundAndNotify;
- (void)acceptConnectionInBackgroundAndNotifyForModes:(id)arg1;
- (void)readToEndOfFileInBackgroundAndNotify;
- (void)readToEndOfFileInBackgroundAndNotifyForModes:(id)arg1;
- (void)readInBackgroundAndNotify;
- (void)readInBackgroundAndNotifyForModes:(id)arg1;
- (void)performActivity:(long long)arg1 modes:(id)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)finalize;
- (void)dealloc;
- (void)_commonDealloc;
- (void)setPort:(id)arg1;
- (id)port;
- (void)closeFile;
- (void)_cancelDispatchSources;
- (void)synchronizeFile;
- (void)truncateFileAtOffset:(unsigned long long)arg1;
- (void)seekToFileOffset:(unsigned long long)arg1;
- (unsigned long long)seekToEndOfFile;
- (unsigned long long)offsetInFile;
- (void)writeData:(id)arg1;
- (id)readDataToEndOfFile;
- (id)readDataOfLength:(unsigned long long)arg1;
- (unsigned long long)readDataOfLength:(unsigned long long)arg1 buffer:(char *)arg2;
- (id)availableData;
- (id)initWithPath:(id)arg1 flags:(long long)arg2 createMode:(long long)arg3;
- (id)initWithPath:(id)arg1 flags:(long long)arg2 createMode:(long long)arg3 error:(id *)arg4;
- (id)initWithURL:(id)arg1 flags:(long long)arg2 createMode:(long long)arg3 error:(id *)arg4;
- (id)initWithFileDescriptor:(int)arg1;
- (id)initWithFileDescriptor:(int)arg1 closeOnDealloc:(_Bool)arg2;
- (void)encodeWithCoder:(id)arg1;
- (id)init;
- (int)fileDescriptor;

@end

__attribute__((visibility("hidden")))
@interface NSConcreteFileHandleARCWeakRef : NSObject
{
    id ref;
}

- (void)storeWeak:(id)arg1;
- (id)loadWeak;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface NSConcreteHashTable : NSHashTable
{
    struct NSSlice slice;
    unsigned long long count;
    unsigned long long capacity;
    unsigned long long options;
    unsigned long long mutations;
}

- (id)objectEnumerator;
- (id)description;
- (void)finalize;
- (void)dealloc;
- (void)getKeys:(const void **)arg1 count:(unsigned long long *)arg2;
- (id)allObjects;
- (void)removeAllItems;
- (void)removeItem:(const void *)arg1;
- (void)insertKnownAbsentItem:(const void *)arg1;
- (void)addObject:(id)arg1;
- (void)insertItem:(const void *)arg1;
- (void *)getItem:(const void *)arg1;
- (void)rehash;
- (void)assign:(unsigned long long)arg1 key:(const void *)arg2;
- (void)hashGrow;
- (unsigned long long)rehashAround:(unsigned long long)arg1;
- (void)raiseCountUnderflowException;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (unsigned long long)count;
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
- (id)pointerFunctions;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (Class)classForCoder;
- (id)initWithPointerFunctions:(id)arg1 capacity:(unsigned long long)arg2;
- (id)initWithOptions:(unsigned long long)arg1 capacity:(unsigned long long)arg2;
- (id)copy;
- (id)init;
- (void)_initBlock;

@end

__attribute__((visibility("hidden")))
@interface NSConcreteMapTable : NSMapTable
{
    struct NSSlice keys;
    struct NSSlice values;
    unsigned long long count;
    unsigned long long capacity;
    unsigned long long keyOptions;
    unsigned long long valueOptions;
    unsigned long long mutations;
    int growLock;
    _Bool shouldRehash;
}

- (id)allValues;
- (id)allKeys;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (unsigned long long)getKeys:(const void **)arg1 values:(const void **)arg2;
- (id)objectEnumerator;
- (id)keyEnumerator;
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
- (id)description;
- (void)finalize;
- (void)dealloc;
- (void)removeAllItems;
- (void)removeObjectForKey:(id)arg1;
- (void)rehash;
- (unsigned long long)rehashAround:(unsigned long long)arg1;
- (void)replaceItem:(const void *)arg1 forExistingKey:(const void *)arg2;
- (_Bool)mapMember:(const void *)arg1 originalKey:(const void **)arg2 value:(const void **)arg3;
- (void *)existingItemForSetItem:(const void *)arg1 forAbsentKey:(const void *)arg2;
- (void)setItem:(const void *)arg1 forKnownAbsentKey:(const void *)arg2;
- (void)setItem:(const void *)arg1 forAbsentKey:(const void *)arg2;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (id)objectForKey:(id)arg1;
- (void)assign:(unsigned long long)arg1 key:(const void *)arg2 value:(const void *)arg3 isNew:(_Bool)arg4;
- (void)grow;
- (id)dump;
- (_Bool)containsKeys:(const void **)arg1 values:(const void **)arg2 count:(unsigned long long)arg3;
- (unsigned long long)count;
- (id)valuePointerFunctions;
- (id)keyPointerFunctions;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (Class)classForCoder;
- (id)initWithKeyPointerFunctions:(id)arg1 valuePointerFunctions:(id)arg2 capacity:(unsigned long long)arg3;
- (id)initWithKeyOptions:(unsigned long long)arg1 valueOptions:(unsigned long long)arg2 capacity:(unsigned long long)arg3;
- (id)copy;
- (void)_setBackingStore;
- (void)_initBlock;
- (void)zeroPairedEntries;
- (void)checkCount:(const char *)arg1;
- (unsigned long long)realCount;
- (void)raiseCountUnderflowException;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface NSConcreteMapTableValueEnumerator : NSEnumerator
{
    NSConcreteMapTable *mapTable;
    unsigned long long counter;
}

+ (id)enumeratorWithMapTable:(id)arg1;
- (void)dealloc;
- (id)nextObject;

@end

@interface NSConcreteMutableAttributedString : NSMutableAttributedString
{
    NSMutableString *mutableString;
    NSMutableRLEArray *mutableAttributes;
    struct {
        unsigned int attributeFixingDisabled:8;
        unsigned int :24;
    } fields;
}

+ (_Bool)supportsSecureCoding;
+ (Class)_mutableStringClass;
- (id)initWithCoder:(id)arg1;
- (Class)classForCoder;
- (void)edited:(unsigned long long)arg1 range:(struct _NSRange)arg2 changeInLength:(long long)arg3;
- (void)replaceCharactersInRange:(struct _NSRange)arg1 withString:(id)arg2;
- (void)setAttributes:(id)arg1 range:(struct _NSRange)arg2;
- (id)attribute:(id)arg1 atIndex:(unsigned long long)arg2 longestEffectiveRange:(struct _NSRange *)arg3 inRange:(struct _NSRange)arg4;
- (void)addAttribute:(id)arg1 value:(id)arg2 range:(struct _NSRange)arg3;
- (void)replaceCharactersInRange:(struct _NSRange)arg1 withAttributedString:(id)arg2;
- (id)_runArrayHoldingAttributes;
- (id)string;
- (unsigned long long)length;
- (id)attribute:(id)arg1 atIndex:(unsigned long long)arg2 effectiveRange:(struct _NSRange *)arg3;
- (id)attributesAtIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;
- (void)finalize;
- (void)dealloc;
- (id)init;
- (id)initWithString:(id)arg1;
- (id)initWithString:(id)arg1 attributes:(id)arg2;
- (id)initWithAttributedString:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface NSConcreteMutableData : NSMutableData
{
    unsigned int _reserved:1;
    unsigned int _needToZero:1;
    unsigned int _hasVM:1;
    unsigned int _retainCount:29;
    unsigned long long _length;
    unsigned long long _capacity;
    void *_bytes;
}

- (void)finalize;
- (void)dealloc;
- (id)initWithBytes:(void *)arg1 length:(unsigned long long)arg2 copy:(_Bool)arg3 deallocator:(CDUnknownBlockType)arg4;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithLength:(unsigned long long)arg1;
- (id)init;
- (void)resetBytesInRange:(struct _NSRange)arg1;
- (void)replaceBytesInRange:(struct _NSRange)arg1 withBytes:(const void *)arg2;
- (void)increaseLengthBy:(unsigned long long)arg1;
- (void)appendData:(id)arg1;
- (void)appendBytes:(const void *)arg1 length:(unsigned long long)arg2;
- (void)setLength:(unsigned long long)arg1;
- (void)_freeBytes;
- (void *)mutableBytes;
- (const void *)bytes;
- (unsigned long long)length;

@end

@interface NSNotification : NSObject <NSCopying, NSCoding>
{
}

+ (id)notificationWithName:(id)arg1 object:(id)arg2 userInfo:(id)arg3;
+ (id)notificationWithName:(id)arg1 object:(id)arg2;
+ (id)allocWithZone:(struct _NSZone *)arg1;
- (id)initWithName:(id)arg1 object:(id)arg2 userInfo:(id)arg3;
- (id)init;
- (Class)classForCoder;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)description;
@property(readonly, copy) NSDictionary *userInfo;
@property(readonly, retain) id object;
@property(readonly, copy) NSString *name;
- (id)replacementObjectForPortCoder:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface NSConcreteNotification : NSNotification
{
    NSString *name;
    id object;
    NSDictionary *userInfo;
    _Bool dyingObject;
}

+ (id)newTempNotificationWithName:(id)arg1 object:(id)arg2 userInfo:(id)arg3;
- (void)recycle;
- (void)dealloc;
- (id)initWithName:(id)arg1 object:(id)arg2 userInfo:(id)arg3;
- (id)userInfo;
- (id)object;
- (id)name;

@end

@interface NSPipe : NSObject
{
}

+ (id)pipe;
+ (id)allocWithZone:(struct _NSZone *)arg1;
@property(readonly, retain) NSFileHandle *fileHandleForWriting;
@property(readonly, retain) NSFileHandle *fileHandleForReading;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface NSConcretePipe : NSPipe
{
    NSFileHandle *_readHandle;
    NSFileHandle *_writeHandle;
}

- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)init;
- (id)fileHandleForWriting;
- (id)fileHandleForReading;

@end

@interface NSPointerArray : NSObject <NSFastEnumeration, NSCopying, NSCoding>
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)pointerArrayWithPointerFunctions:(id)arg1;
+ (id)pointerArrayWithOptions:(unsigned long long)arg1;
+ (id)weakObjectsPointerArray;
+ (id)strongObjectsPointerArray;
+ (id)pointerArrayWithWeakObjects;
+ (id)pointerArrayWithStrongObjects;
- (void)encodeWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
@property unsigned long long count;
- (void)compact;
- (void)replacePointerAtIndex:(unsigned long long)arg1 withPointer:(void *)arg2;
- (void)insertPointer:(void *)arg1 atIndex:(unsigned long long)arg2;
- (void)removePointerAtIndex:(unsigned long long)arg1;
- (void)addPointer:(void *)arg1;
- (void *)pointerAtIndex:(unsigned long long)arg1;
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
@property(readonly, copy) NSPointerFunctions *pointerFunctions;
- (id)initWithCoder:(id)arg1;
- (id)initWithPointerFunctions:(id)arg1;
- (id)initWithOptions:(unsigned long long)arg1;
- (id)init;
- (id)allObjects;
- (id)mutableArray;

@end

__attribute__((visibility("hidden")))
@interface NSConcretePointerArray : NSPointerArray
{
    struct NSSlice slice;
    unsigned long long count;
    unsigned long long capacity;
    unsigned long long options;
    unsigned long long mutations;
    _Bool needsCompaction;
}

- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)removePointer:(void *)arg1;
- (unsigned long long)indexOfPointer:(void *)arg1;
- (void)setCount:(unsigned long long)arg1;
- (unsigned long long)count;
- (void)compact;
- (void)_markNeedsCompaction;
- (void)replacePointerAtIndex:(unsigned long long)arg1 withPointer:(void *)arg2;
- (void)insertPointer:(void *)arg1 atIndex:(unsigned long long)arg2;
- (void)removePointerAtIndex:(unsigned long long)arg1;
- (void)addPointer:(void *)arg1;
- (void *)pointerAtIndex:(unsigned long long)arg1;
- (void)arrayGrow:(unsigned long long)arg1;
- (id)pointerFunctions;
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
- (void)encodeWithCoder:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)finalize;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (Class)classForCoder;
- (id)initWithPointerFunctions:(id)arg1;
- (id)initWithOptions:(unsigned long long)arg1;
- (void)_initBlock;
- (id)init;

@end

@interface NSPointerFunctions : NSObject <NSCopying>
{
}

+ (id)pointerFunctionsWithOptions:(unsigned long long)arg1;
+ (id)allocWithZone:(struct _NSZone *)arg1;
@property _Bool usesWeakReadAndWriteBarriers;
@property _Bool usesStrongWriteBarrier;
@property CDUnknownFunctionPointerType relinquishFunction;
@property CDUnknownFunctionPointerType acquireFunction;
@property CDUnknownFunctionPointerType descriptionFunction;
@property CDUnknownFunctionPointerType isEqualFunction;
@property CDUnknownFunctionPointerType hashFunction;
@property CDUnknownFunctionPointerType sizeFunction;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithOptions:(unsigned long long)arg1;

@end

__attribute__((visibility("hidden")))
@interface NSConcretePointerFunctions : NSPointerFunctions
{
    struct NSSlice slice;
}

+ (_Bool)initializeSlice:(struct NSSlice *)arg1 withOptions:(unsigned long long)arg2;
+ (void)initializeBackingStore:(struct NSSlice *)arg1 sentinel:(_Bool)arg2 compactable:(_Bool)arg3;
- (_Bool)usesWeakReadAndWriteBarriers;
- (_Bool)usesStrongWriteBarrier;
- (CDUnknownFunctionPointerType)relinquishFunction;
- (CDUnknownFunctionPointerType)acquireFunction;
- (CDUnknownFunctionPointerType)descriptionFunction;
- (CDUnknownFunctionPointerType)isEqualFunction;
- (CDUnknownFunctionPointerType)hashFunction;
- (CDUnknownFunctionPointerType)sizeFunction;
- (void)setUsesWeakReadAndWriteBarriers:(_Bool)arg1;
- (void)setUsesStrongWriteBarrier:(_Bool)arg1;
- (void)setRelinquishFunction:(CDUnknownFunctionPointerType)arg1;
- (void)setAcquireFunction:(CDUnknownFunctionPointerType)arg1;
- (void)setDescriptionFunction:(CDUnknownFunctionPointerType)arg1;
- (void)setIsEqualFunction:(CDUnknownFunctionPointerType)arg1;
- (void)setHashFunction:(CDUnknownFunctionPointerType)arg1;
- (void)setSizeFunction:(CDUnknownFunctionPointerType)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithOptions:(unsigned long long)arg1;

@end

@interface NSPortCoder : NSCoder
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)portCoderWithReceivePort:(id)arg1 sendPort:(id)arg2 components:(id)arg3;
- (id)initWithReceivePort:(id)arg1 sendPort:(id)arg2 components:(id)arg3;
- (void)dispatch;
- (id)decodePortObject;
- (void)encodePortObject:(id)arg1;
- (id)_connection;
- (id)connection;
- (_Bool)isByref;
- (_Bool)isBycopy;

@end

__attribute__((visibility("hidden")))
@interface NSConcretePortCoder : NSPortCoder
{
    NSSet *whitelist;
}

- (void)dealloc;
- (_Bool)_classAllowed:(Class)arg1;
- (void)_setWhitelist:(id)arg1;

@end

@interface NSProtocolChecker : NSProxy
{
}

+ (id)protocolCheckerWithTarget:(id)arg1 protocol:(id)arg2;
+ (id)allocWithZone:(struct _NSZone *)arg1;
- (id)initWithTarget:(id)arg1 protocol:(id)arg2;
- (void)forwardInvocation:(id)arg1;
- (const char *)_localClassNameForClass;
- (id)methodSignatureForSelector:(SEL)arg1;
- (struct objc_method_description *)methodDescriptionForSelector:(SEL)arg1;
- (id)forwardingTargetForSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(id)arg1;
- (_Bool)respondsToSelector:(SEL)arg1;
- (void)doesNotRecognizeSelector:(SEL)arg1;
@property(readonly, retain) NSObject *target;
@property(readonly) Protocol *protocol;

@end

__attribute__((visibility("hidden")))
@interface NSConcreteProtocolChecker : NSProtocolChecker
{
    NSObject *_target;
    Protocol *_protocol;
}

- (void)dealloc;
- (id)initWithTarget:(id)arg1 protocol:(id)arg2;
- (id)target;
- (id)protocol;

@end

@interface NSScanner : NSObject <NSCopying>
{
}

+ (id)localizedScannerWithString:(id)arg1;
+ (id)scannerWithString:(id)arg1;
+ (id)allocWithZone:(struct _NSZone *)arg1;
@property(retain) id locale;
@property _Bool caseSensitive;
@property(copy) NSCharacterSet *charactersToBeSkipped;
@property unsigned long long scanLocation;
@property(readonly, copy) NSString *string;
- (_Bool)isAtEnd;
- (_Bool)scanUpToString:(id)arg1 intoString:(id *)arg2;
- (_Bool)scanString:(id)arg1 intoString:(id *)arg2;
- (_Bool)scanUpToCharactersFromSet:(id)arg1 intoString:(id *)arg2;
- (_Bool)scanCharactersFromSet:(id)arg1 intoString:(id *)arg2;
- (_Bool)scanHexInt:(unsigned int *)arg1;
- (_Bool)scanHexLongLong:(unsigned long long *)arg1;
- (_Bool)scanUnsignedInteger:(unsigned long long *)arg1;
- (_Bool)scanInteger:(long long *)arg1;
- (_Bool)scanInt:(int *)arg1;
- (_Bool)scanLongLong:(long long *)arg1;
- (_Bool)scanUnsignedLongLong:(unsigned long long *)arg1;
- (_Bool)scanHexFloat:(float *)arg1;
- (_Bool)scanHexDouble:(double *)arg1;
- (_Bool)scanFloat:(float *)arg1;
- (_Bool)scanDouble:(double *)arg1;
- (id)_invertedSkipSet;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithString:(id)arg1;
- (_Bool)_scanDecimal:(unsigned long long)arg1 into:(long long *)arg2;
- (id)_remainingString;
- (_Bool)scanDecimal:(CDStruct_5fe7aead *)arg1;

@end

__attribute__((visibility("hidden")))
@interface NSConcreteScanner : NSScanner
{
    NSString *scanString;
    NSCharacterSet *skipSet;
    NSCharacterSet *invertedSkipSet;
    id locale;
    unsigned long long scanLocation;
    struct {
        unsigned int caseSensitive:1;
        unsigned int :31;
    } flags;
}

- (void)finalize;
- (void)dealloc;
- (_Bool)scanLongLong:(long long *)arg1;
- (_Bool)scanInt:(int *)arg1;
- (id)locale;
- (void)setLocale:(id)arg1;
- (_Bool)caseSensitive;
- (void)setCaseSensitive:(_Bool)arg1;
- (id)charactersToBeSkipped;
- (void)setCharactersToBeSkipped:(id)arg1;
- (unsigned long long)scanLocation;
- (void)setScanLocation:(unsigned long long)arg1;
- (id)_invertedSkipSet;
- (id)string;
- (id)initWithString:(id)arg1;

@end

@interface NSTask : NSObject
{
}

+ (id)launchedTaskWithLaunchPath:(id)arg1 arguments:(id)arg2;
+ (id)launchedTaskWithDictionary:(id)arg1;
+ (id)currentTaskDictionary;
+ (id)allocWithZone:(struct _NSZone *)arg1;
- (id)init;
@property long long qualityOfService;
@property(retain) id standardError;
@property(retain) id standardOutput;
@property(retain) id standardInput;
@property(copy) NSString *currentDirectoryPath;
@property(copy) NSArray *arguments;
@property(copy) NSDictionary *environment;
@property(copy) NSString *launchPath;
@property(readonly) int processIdentifier;
- (long long)suspendCount;
- (_Bool)resume;
- (_Bool)suspend;
- (void)terminate;
- (void)interrupt;
- (void)launch;
@property(readonly, getter=isRunning) _Bool running;
@property(readonly) long long terminationReason;
@property(readonly) int terminationStatus;
@property(copy) CDUnknownBlockType terminationHandler;

@end

__attribute__((visibility("hidden")))
@interface NSConcreteTask : NSTask
{
    NSObject<OS_dispatch_semaphore> *_lock;
    NSMutableDictionary *_dictionary;
    CDUnknownBlockType _terminationHandler;
    NSObject<OS_dispatch_source> *_dsrc;
    NSPort *_tmpPort;
    long long _suspendCount;
    int _pid;
    int _platformExitInfo;
    _Bool _hasExeced;
    _Bool _isRunning;
    _Bool _hasPostedDeathNotification;
    _Bool _terminationRun;
    BOOL _qos;
}

- (void)setStartsNewProcessGroup:(_Bool)arg1;
- (int)processIdentifier;
- (int)_procid;
- (void)finalize;
- (void)dealloc;
- (id)init;
- (long long)suspendCount;
- (_Bool)resume;
- (_Bool)suspend;
- (void)terminateTask;
- (void)terminate;
- (void)interrupt;
- (id)taskDictionary;
- (void)setTaskDictionary:(id)arg1;
- (void)setStandardError:(id)arg1;
- (void)setStandardOutput:(id)arg1;
- (void)setStandardInput:(id)arg1;
- (id)standardError;
- (id)standardOutput;
- (id)standardInput;
- (id)currentDirectoryPath;
- (id)preferredArchitectures;
- (id)arguments;
- (id)environment;
- (id)launchPath;
- (void)setLaunchPath:(id)arg1;
- (void)setEnvironment:(id)arg1;
- (void)setCurrentDirectoryPath:(id)arg1;
- (void)setPreferredArchitectures:(id)arg1;
- (void)setArguments:(id)arg1;
- (void)_withTaskDictionary:(CDUnknownBlockType)arg1;
- (void)waitUntilExit;
- (void)launchWithDictionary:(id)arg1;
- (void)launch;
- (_Bool)isRunning;
- (long long)terminationReason;
- (long long)_platformExitInformation;
- (int)terminationStatus;
- (void)setTerminationHandler:(CDUnknownBlockType)arg1;
- (void)_setTerminationHandler:(CDUnknownBlockType)arg1;
- (CDUnknownBlockType)terminationHandler;
- (void)setQualityOfService:(long long)arg1;
- (long long)qualityOfService;

@end

@interface NSValue : NSObject <NSCopying, NSSecureCoding>
{
}

+ (_Bool)supportsSecureCoding;
+ (id)valueWithEdgeInsets:(struct NSEdgeInsets)arg1;
+ (id)valueWithRange:(struct _NSRange)arg1;
+ (id)valueWithRect:(struct CGRect)arg1;
+ (id)valueWithSize:(struct CGSize)arg1;
+ (id)valueWithPoint:(struct CGPoint)arg1;
+ (id)valueWithPointer:(const void *)arg1;
+ (id)valueWithNonretainedObject:(id)arg1;
+ (id)valueWithBytes:(const void *)arg1 objCType:(const char *)arg2;
+ (id)value:(const void *)arg1 withObjCType:(const char *)arg2;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (void)initialize;
- (id)initWithBytes:(const void *)arg1 objCType:(const char *)arg2;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (Class)classForCoder;
- (struct NSEdgeInsets)edgeInsetsValue;
- (struct _NSRange)rangeValue;
- (struct CGRect)rectValue;
- (struct CGSize)sizeValue;
- (struct CGPoint)pointValue;
- (void *)pointerValue;
- (id)nonretainedObjectValue;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (_Bool)isEqualToValue:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)_matchType:(const char *)arg1 size:(unsigned long long)arg2;
@property(readonly) const char *objCType;
- (void)getValue:(void *)arg1;
- (id)init;
- (_Bool)isNSValue__;
- (id)replacementObjectForPortCoder:(id)arg1;

@end

@interface NSConcreteValue : NSValue
{
    unsigned long long _specialFlags;
    void *typeInfo;
}

+ (_Bool)supportsSecureCoding;
+ (void)initialize;
- (void)encodeWithCoder:(id)arg1;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (unsigned long long)hash;
- (_Bool)isEqualToValue:(id)arg1;
- (_Bool)_matchType:(const char *)arg1 size:(unsigned long long)arg2;
- (const void *)_value;
- (const char *)objCType;
- (void)getValue:(void *)arg1;

@end

@interface NSCondition : NSObject <NSLocking>
{
    void *_priv;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
@property(copy) NSString *name;
- (id)description;
- (void)broadcast;
- (void)signal;
- (_Bool)waitUntilDate:(id)arg1;
- (void)wait;
- (void)unlock;
- (void)lock;
- (void)finalize;
- (void)dealloc;
- (id)init;

@end

@interface NSConditionLock : NSObject <NSLocking>
{
    void *_priv;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
@property(copy) NSString *name;
- (id)description;
- (void)unlockWithCondition:(long long)arg1;
- (void)unlock;
- (_Bool)tryLockWhenCondition:(long long)arg1;
- (_Bool)tryLock;
- (_Bool)lockWhenCondition:(long long)arg1 beforeDate:(id)arg2;
- (void)lockWhenCondition:(long long)arg1;
- (_Bool)lockBeforeDate:(id)arg1;
- (void)lock;
@property(readonly) long long condition;
- (void)finalize;
- (void)dealloc;
- (id)initWithCondition:(long long)arg1;
- (id)init;

@end

@interface NSConnection : NSObject
{
    id receivePort;
    id sendPort;
    id delegate;
    int busy;
    int localProxyCount;
    int waitCount;
    id delayedRL;
    id statistics;
    unsigned char isDead;
    unsigned char isValid;
    unsigned char wantsInvalid;
    unsigned int authGen:1;
    unsigned int authCheck:1;
    unsigned int _reserved1:1;
    unsigned int _reserved2:1;
    unsigned int doRequest:1;
    unsigned int isQueueing:1;
    unsigned int isMulti:1;
    unsigned int invalidateRP:1;
    id ___1;
    id ___2;
    id runLoops;
    id requestModes;
    id rootObject;
    void *registerInfo;
    id replMode;
    id classInfoImported;
    id releasedProxies;
    id reserved;
}

+ (void)_enableLogging:(_Bool)arg1;
+ (void)_toggleLogging;
+ (id)statistics;
+ (id)currentConversation;
+ (id)allConnections;
+ (id)defaultConnection;
+ (id)serviceConnectionWithName:(id)arg1 rootObject:(id)arg2;
+ (id)serviceConnectionWithName:(id)arg1 rootObject:(id)arg2 usingNameServer:(id)arg3;
+ (id)rootProxyForConnectionWithRegisteredName:(id)arg1 host:(id)arg2 usingNameServer:(id)arg3;
+ (id)rootProxyForConnectionWithRegisteredName:(id)arg1 host:(id)arg2;
+ (id)connectionWithRegisteredName:(id)arg1 host:(id)arg2;
+ (id)connectionWithRegisteredName:(id)arg1 host:(id)arg2 usingNameServer:(id)arg3;
+ (id)connectionWithReceivePort:(id)arg1 sendPort:(id)arg2;
+ (id)lookUpConnectionWithReceivePort:(id)arg1 sendPort:(id)arg2;
+ (void)_portInvalidated:(id)arg1;
+ (void)initialize;
- (void)runInNewThread;
- (void)run;
- (void)removeRunLoop:(id)arg1;
- (void)addRunLoop:(id)arg1;
@property(readonly) _Bool multipleThreadsEnabled;
- (void)enableMultipleThreads;
- (_Bool)hasRunLoop:(id)arg1;
- (void)removePortsFromRunLoop:(id)arg1;
- (void)addPortsToRunLoop:(id)arg1;
- (id)description;
- (void)_setUseKC:(_Bool)arg1;
@property(readonly, copy) NSDictionary *statistics;
- (void)_sendBeforeTime:(double)arg1 coder:(id)arg2 doAuthenticationCheck:(_Bool)arg3;
- (_Bool)_verifyComponents:(id)arg1;
- (void)_authenticateComponents:(id)arg1;
- (void)sendInvocation:(id)arg1;
- (void)sendInvocation:(id)arg1 internal:(_Bool)arg2;
- (void)returnResult:(id)arg1 exception:(id)arg2 sequence:(unsigned int)arg3 imports:(id)arg4;
- (id)dispatchInvocation:(id)arg1;
- (void)handleRequest:(id)arg1 sequence:(unsigned int)arg2;
- (_Bool)_shouldDispatch:(id *)arg1 invocation:(id)arg2 sequence:(unsigned int)arg3 coder:(id)arg4;
- (id)newConversation;
- (_Bool)sendWireCountForWireID:(unsigned int)arg1 port:(id)arg2;
- (void)handlePortCoder:(id)arg1;
- (void)handlePortMessage:(id)arg1;
- (void)dispatchWithComponents:(id)arg1;
- (id)portCoderWithComponents:(id)arg1;
- (Class)_portCoderClassWithComponents:(id)arg1;
- (Class)_portCoderClass;
@property(readonly, copy) NSArray *localObjects;
@property(readonly, copy) NSArray *remoteObjects;
- (void)releaseWireID:(unsigned int)arg1 count:(unsigned long long)arg2;
- (void)sendReleasedProxies;
- (void)decodeReleasedProxies:(id)arg1;
- (void)handleUnkeyedReleasedProxies:(char *)arg1 length:(unsigned long long)arg2;
- (void)handleKeyedReleasedProxies:(id)arg1;
- (void)encodeReleasedProxies:(id)arg1;
- (void)_encodeProxyList:(id)arg1 forCoder:(id)arg2;
- (void)_setWhitelist:(id)arg1;
- (unsigned long long)versionForClassNamed:(id)arg1;
- (void)addClassNamed:(char *)arg1 version:(unsigned long long)arg2;
- (void)_decrementLocalProxyCount;
- (void)_incrementLocalProxyCount;
@property(retain) id rootObject;
- (id)keyedRootObject;
@property(readonly, retain) NSDistantObject *rootProxy;
@property(readonly, retain) NSPort *sendPort;
@property(readonly, retain) NSPort *receivePort;
- (void)setReplyMode:(id)arg1;
- (id)replyMode;
@property(readonly, copy) NSArray *requestModes;
- (void)removeRequestMode:(id)arg1;
- (void)addRequestMode:(id)arg1;
@property id <NSConnectionDelegate> delegate;
@property _Bool independentConversationQueueing;
@property double replyTimeout;
@property double requestTimeout;
- (void)finalize;
- (void)invalidate;
- (void)dealloc;
- (oneway void)release;
- (id)retain;
@property(readonly, getter=isValid) _Bool valid;
- (_Bool)registerName:(id)arg1 withNameServer:(id)arg2;
- (_Bool)registerName:(id)arg1;
- (id)initWithReceivePort:(id)arg1 sendPort:(id)arg2;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface NSConnectionHelper : NSObject
{
    double reqLim;
    double repLim;
    _Bool remoteUsesKeyedDO;
    NSSet *whitelist;
    _Bool useKeyedDO;
    NSConnection *parent;
}

- (void)setWhitelist:(id)arg1;
- (void)finalize;
- (void)dealloc;
- (id)init;

@end

@interface NSSimpleCString : NSString
{
    char *bytes;
    int numBytes;
    int _unused;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
- (void)finalize;
- (void)dealloc;
- (id)stringByAppendingString:(id)arg1;
- (id)_newSubstringWithRange:(struct _NSRange)arg1 zone:(struct _NSZone *)arg2;
- (_Bool)getBytes:(void *)arg1 maxLength:(unsigned long long)arg2 usedLength:(unsigned long long *)arg3 encoding:(unsigned long long)arg4 options:(unsigned long long)arg5 range:(struct _NSRange)arg6 remainingRange:(struct _NSRange *)arg7;
- (unsigned long long)hash;
- (_Bool)hasSuffix:(id)arg1;
- (_Bool)hasPrefix:(id)arg1;
- (long long)compare:(id)arg1 options:(unsigned long long)arg2 range:(struct _NSRange)arg3;
- (_Bool)isEqualToString:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (const char *)_fastCStringContents:(_Bool)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)canBeConvertedToEncoding:(unsigned long long)arg1;
- (unsigned long long)smallestEncoding;
- (unsigned long long)fastestEncoding;
- (unsigned long long)cStringLength;
- (unsigned long long)length;
- (void)getCharacters:(unsigned short *)arg1 range:(struct _NSRange)arg2;
- (unsigned short)characterAtIndex:(unsigned long long)arg1;
- (id)initWithCStringNoCopy:(char *)arg1 length:(unsigned long long)arg2;

@end

@interface NSConstantString : NSSimpleCString
{
}

- (const char *)lossyCString;
- (const char *)cString;
- (void)finalize;
- (void)dealloc;
- (oneway void)release;
- (unsigned long long)retainCount;
- (_Bool)_isDeallocating;
- (_Bool)_tryRetain;
- (id)retain;
- (id)autorelease;
- (unsigned long long)hash;
- (long long)compare:(id)arg1 options:(unsigned long long)arg2 range:(struct _NSRange)arg3;
- (_Bool)isEqualToString:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (const char *)_fastCStringContents:(_Bool)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)copy;
- (_Bool)canBeConvertedToEncoding:(unsigned long long)arg1;
- (unsigned long long)smallestEncoding;
- (unsigned long long)fastestEncoding;
- (unsigned long long)cStringLength;
- (unsigned long long)length;
- (void)getCharacters:(unsigned short *)arg1 range:(struct _NSRange)arg2;
- (unsigned short)characterAtIndex:(unsigned long long)arg1;
- (id)initWithCharactersNoCopy:(unsigned short *)arg1 length:(unsigned long long)arg2;

@end

@interface NSConstantValueExpression : NSExpression
{
    id constantValue;
}

+ (_Bool)supportsSecureCoding;
- (id)expressionValueWithObject:(id)arg1 context:(id)arg2;
- (id)expressionValueWithObject:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)constantValue;
- (id)predicateFormat;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithObject:(id)arg1;
- (void)dealloc;

@end

@interface NSContentSizeLayoutConstraint : NSLayoutConstraint
{
    double _huggingPriority;
    double _compressionResistancePriority;
}

@property(readonly) double compressionResistancePriority; // @synthesize compressionResistancePriority=_compressionResistancePriority;
@property(readonly) double huggingPriority; // @synthesize huggingPriority=_huggingPriority;
- (id)_priorityDescription;
- (double)priorityForVariable:(id)arg1;
- (id)initWithLayoutItem:(id)arg1 value:(double)arg2 huggingPriority:(double)arg3 compressionResistancePriority:(double)arg4 orientation:(long long)arg5;

@end

@interface NSSubstitutionCheckingResult : NSTextCheckingResult
{
    struct _NSRange _range;
    NSString *_replacementString;
}

- (id)replacementString;
- (_Bool)_adjustRangesWithOffset:(long long)arg1;
- (id)resultByAdjustingRangesWithOffset:(long long)arg1;
- (struct _NSRange)range;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)description;
- (void)dealloc;
- (id)initWithRange:(struct _NSRange)arg1 replacementString:(id)arg2;

@end

@interface NSCorrectionCheckingResult : NSSubstitutionCheckingResult
{
    NSArray *_alternativeStrings;
}

- (unsigned long long)resultType;
- (id)resultByAdjustingRangesWithOffset:(long long)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)description;
- (void)dealloc;
- (id)alternativeStrings;
- (id)initWithRange:(struct _NSRange)arg1 replacementString:(id)arg2 alternativeStrings:(id)arg3;

@end

@interface NSCountedSet : NSMutableSet
{
    id _table;
    void *_reserved;
}

+ (_Bool)supportsSecureCoding;
- (void)dealloc;
- (id)initWithSet:(id)arg1;
- (id)initWithArray:(id)arg1;
- (id)initWithSet:(id)arg1 copyItems:(_Bool)arg2;
- (id)initWithObjects:(const id *)arg1 count:(unsigned long long)arg2;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)init;
- (unsigned long long)countForObject:(id)arg1;
- (Class)classForCoder;
- (id)descriptionWithLocale:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)getObjects:(id *)arg1 count:(unsigned long long)arg2;
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)removeObject:(id)arg1;
- (void)addObject:(id)arg1;
- (id)objectEnumerator;
- (id)member:(id)arg1;
- (unsigned long long)count;

@end

__attribute__((visibility("hidden")))
@interface NSCustomPredicateOperator : NSPredicateOperator
{
    SEL _selector;
}

+ (_Bool)supportsSecureCoding;
- (_Bool)performPrimitiveOperationUsingObject:(id)arg1 andObject:(id)arg2;
- (id)symbol;
- (_Bool)isEqual:(id)arg1;
- (SEL)selector;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCustomSelector:(SEL)arg1 modifier:(unsigned long long)arg2;

@end

__attribute__((visibility("hidden")))
@interface NSDOStreamData : NSMutableData
{
    id refObject;
    struct {
        id data;
        char *datap;
        char *limitp;
        char *startp;
        id callback;
        _Bool datapVM;
    } stream;
}

- (unsigned long long)length;
- (void *)mutableBytes;
- (const void *)bytes;
- (void)finalize;
- (void)dealloc;
- (id)init;

@end

@interface NSDashCheckingResult : NSSubstitutionCheckingResult
{
}

- (unsigned long long)resultType;

@end

@interface NSData (NSData)
+ (id)dataWithData:(id)arg1;
+ (id)dataWithContentsOfURL:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;
+ (id)dataWithContentsOfFile:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;
+ (id)dataWithContentsOfMappedFile:(id)arg1;
+ (id)dataWithContentsOfURL:(id)arg1;
+ (id)dataWithContentsOfFile:(id)arg1;
+ (id)dataWithBytesNoCopy:(void *)arg1 length:(unsigned long long)arg2 freeWhenDone:(_Bool)arg3;
+ (id)dataWithBytesNoCopy:(void *)arg1 length:(unsigned long long)arg2;
+ (id)dataWithBytes:(const void *)arg1 length:(unsigned long long)arg2;
+ (id)data;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (_Bool)supportsSecureCoding;
- (id)base64Encoding;
- (id)initWithBase64Encoding:(id)arg1;
- (id)base64EncodedDataWithOptions:(unsigned long long)arg1;
- (id)initWithBase64EncodedData:(id)arg1 options:(unsigned long long)arg2;
- (id)base64EncodedStringWithOptions:(unsigned long long)arg1;
- (id)initWithBase64EncodedString:(id)arg1 options:(unsigned long long)arg2;
- (id)_base64EncodingAsString:(_Bool)arg1 withOptions:(unsigned long long)arg2;
- (id)_initWithBase64EncodedObject:(id)arg1 options:(unsigned long long)arg2;
- (_Bool)_decodeBase64EncodedCharacterBuffer:(const char *)arg1 length:(unsigned long long)arg2 options:(unsigned long long)arg3 buffer:(char *)arg4 bufferLength:(unsigned long long)arg5 state:(CDStruct_6243051c *)arg6;
- (struct _NSRange)rangeOfData:(id)arg1 options:(unsigned long long)arg2 range:(struct _NSRange)arg3;
- (id)initWithData:(id)arg1;
- (id)initWithContentsOfFile:(id)arg1 error:(id *)arg2;
- (id)initWithContentsOfMappedFile:(id)arg1 error:(id *)arg2;
- (id)initWithContentsOfMappedFile:(id)arg1;
- (id)initWithContentsOfURL:(id)arg1;
- (id)initWithContentsOfURL:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;
- (id)initWithContentsOfFile:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;
- (id)initWithContentsOfFile:(id)arg1;
- (id)initWithBytes:(void *)arg1 length:(unsigned long long)arg2 copy:(_Bool)arg3 deallocator:(CDUnknownBlockType)arg4;
- (id)initWithBytesNoCopy:(void *)arg1 length:(unsigned long long)arg2 deallocator:(CDUnknownBlockType)arg3;
- (id)initWithBytesNoCopy:(void *)arg1 length:(unsigned long long)arg2 freeWhenDone:(_Bool)arg3;
- (id)initWithBytesNoCopy:(void *)arg1 length:(unsigned long long)arg2;
- (id)initWithBytes:(const void *)arg1 length:(unsigned long long)arg2;
- (id)initWithBytes:(void *)arg1 length:(unsigned long long)arg2 copy:(_Bool)arg3 freeWhenDone:(_Bool)arg4 bytesAreVM:(_Bool)arg5;
- (_Bool)writeToURL:(id)arg1 atomically:(_Bool)arg2;
- (_Bool)writeToFile:(id)arg1 atomically:(_Bool)arg2;
- (_Bool)writeToFile:(id)arg1 atomically:(_Bool)arg2 error:(id *)arg3;
- (_Bool)writeToURL:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;
- (_Bool)writeToFile:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;
- (id)subdataWithRange:(struct _NSRange)arg1;
- (_Bool)isEqualToData:(id)arg1;
- (_Bool)_isCompact;
- (_Bool)_isDispatchData;
- (void)getBytes:(void *)arg1 range:(struct _NSRange)arg2;
- (void)enumerateByteRangesUsingBlock:(CDUnknownBlockType)arg1;
- (void)getBytes:(void *)arg1 length:(unsigned long long)arg2;
- (void)getBytes:(void *)arg1;
- (_Bool)_allowsDirectEncoding;
- (id)replacementObjectForCoder:(id)arg1;
- (_Bool)_canReplaceWithDispatchDataForXPCCoder;
- (Class)classForCoder;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (_Bool)_copyWillRetain;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)_asciiDescription;
- (id)description;
- (unsigned long long)_cfTypeID;
- (const void *)bytes;
- (unsigned long long)length;
@end

@interface NSData (NSDataPortCoding)
- (id)replacementObjectForPortCoder:(id)arg1;
@end

@interface NSData (NSKindOfAdditions)
- (_Bool)isNSData__;
@end

@interface NSData (NSURLExtras)
- (id)_replaceCString:(const char *)arg1 withCString:(const char *)arg2;
- (id)_web_parseRFC822HeaderFields;
- (id)_web_guessedMIMETypeForExtension:(id)arg1;
- (id)_web_guessedMIMEType;
- (id)_web_guessedMIMETypeForXML;
@end

@interface NSRegularExpression : NSObject <NSCopying, NSCoding>
{
    NSString *_pattern;
    unsigned long long _options;
    void *_internal;
    id _reserved1;
    int _checkout;
    int _reserved2;
}

+ (id)escapedPatternForString:(id)arg1;
+ (id)regularExpressionWithPattern:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;
+ (void)initialize;
+ (id)escapedTemplateForString:(id)arg1;
@property(readonly) unsigned long long numberOfCaptureGroups;
@property(readonly) unsigned long long options;
@property(readonly, copy) NSString *pattern;
- (id)description;
- (void)finalize;
- (void)dealloc;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithPattern:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;
- (struct _NSRange)rangeOfFirstMatchInString:(id)arg1 options:(unsigned long long)arg2 range:(struct _NSRange)arg3;
- (id)firstMatchInString:(id)arg1 options:(unsigned long long)arg2 range:(struct _NSRange)arg3;
- (unsigned long long)numberOfMatchesInString:(id)arg1 options:(unsigned long long)arg2 range:(struct _NSRange)arg3;
- (id)matchesInString:(id)arg1 options:(unsigned long long)arg2 range:(struct _NSRange)arg3;
- (void)enumerateMatchesInString:(id)arg1 options:(unsigned long long)arg2 range:(struct _NSRange)arg3 usingBlock:(CDUnknownBlockType)arg4;
- (id)replacementStringForResult:(id)arg1 inString:(id)arg2 offset:(long long)arg3 template:(id)arg4;
- (unsigned long long)replaceMatchesInString:(id)arg1 options:(unsigned long long)arg2 range:(struct _NSRange)arg3 withTemplate:(id)arg4;
- (id)stringByReplacingMatchesInString:(id)arg1 options:(unsigned long long)arg2 range:(struct _NSRange)arg3 withTemplate:(id)arg4;

@end

@interface NSDataDetector : NSRegularExpression
{
    unsigned long long _types;
}

+ (id)dataDetectorWithTypes:(unsigned long long)arg1 error:(id *)arg2;
+ (void)initialize;
- (void)enumerateMatchesInString:(id)arg1 options:(unsigned long long)arg2 range:(struct _NSRange)arg3 usingBlock:(CDUnknownBlockType)arg4;
- (unsigned long long)numberOfCaptureGroups;
- (unsigned long long)options;
- (id)pattern;
@property(readonly) unsigned long long checkingTypes;
- (id)description;
- (void)finalize;
- (void)dealloc;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithPattern:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;
- (id)initWithTypes:(unsigned long long)arg1 error:(id *)arg2;

@end

@interface NSDate (NSCalendarDateStuff)
- (id)descriptionWithCalendarFormat:(id)arg1 timeZone:(id)arg2 locale:(id)arg3;
- (id)dateWithCalendarFormat:(id)arg1 timeZone:(id)arg2;
@end

@interface NSDate (NSDate)
- (Class)classForCoder;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
@end

@interface NSDate (NSDatePortCoding)
- (id)replacementObjectForPortCoder:(id)arg1;
@end

@interface NSDate (NSNaturalLanguageDate)
+ (id)dateWithNaturalLanguageString:(id)arg1 locale:(id)arg2;
+ (id)dateWithNaturalLanguageString:(id)arg1;
+ (id)dateWithNaturalLanguageString:(id)arg1 date:(id)arg2 locale:(id)arg3;
@end

@interface NSDate (NSURLExtras)
- (_Bool)_web_isToday;
- (long long)_web_compareDay:(id)arg1;
- (id)_web_RFC1123DateString;
@end

@interface NSDateCheckingResult : NSTextCheckingResult
{
    struct _NSRange _range;
    NSDate *_date;
    NSTimeZone *_timeZone;
    double _duration;
    NSDate *_referenceDate;
    id _underlyingResult;
    _Bool _timeIsSignificant;
    _Bool _timeIsApproximate;
    _Bool _timeIsPast;
}

@property(readonly) _Bool timeIsPast;
@property(readonly) _Bool timeIsApproximate;
@property(readonly) _Bool timeIsSignificant;
@property(readonly) void *underlyingResult;
@property(readonly) NSDate *referenceDate;
@property(readonly) double duration;
@property(readonly) NSTimeZone *timeZone;
- (id)date;
- (_Bool)_adjustRangesWithOffset:(long long)arg1;
- (id)resultByAdjustingRangesWithOffset:(long long)arg1;
- (struct _NSRange)range;
- (unsigned long long)resultType;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)description;
- (void)dealloc;
- (id)initWithRange:(struct _NSRange)arg1 date:(id)arg2;
- (id)initWithRange:(struct _NSRange)arg1 date:(id)arg2 timeZone:(id)arg3 duration:(double)arg4;
- (id)initWithRange:(struct _NSRange)arg1 date:(id)arg2 timeZone:(id)arg3 duration:(double)arg4 referenceDate:(id)arg5;
- (id)initWithRange:(struct _NSRange)arg1 date:(id)arg2 timeZone:(id)arg3 duration:(double)arg4 referenceDate:(id)arg5 underlyingResult:(void *)arg6;
- (id)initWithRange:(struct _NSRange)arg1 date:(id)arg2 timeZone:(id)arg3 duration:(double)arg4 referenceDate:(id)arg5 underlyingResult:(void *)arg6 timeIsSignificant:(_Bool)arg7 timeIsApproximate:(_Bool)arg8;
- (id)initWithRange:(struct _NSRange)arg1 date:(id)arg2 timeZone:(id)arg3 duration:(double)arg4 referenceDate:(id)arg5 underlyingResult:(void *)arg6 timeIsSignificant:(_Bool)arg7 timeIsApproximate:(_Bool)arg8 timeIsPast:(_Bool)arg9;

@end

@interface NSDateComponents (_)
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
@end

@interface NSDateComponentsFormatter : NSFormatter
{
    struct _opaque_pthread_mutex_t _lock;
    void *_fmt;
    void *_unused;
    NSString *_fmtLocaleIdent;
    NSCalendar *_calendar;
    NSDate *_referenceDate;
    NSNumberFormatter *_unitFormatter;
    unsigned long long _allowedUnits;
    long long _formattingContext;
    long long _unitsStyle;
    unsigned long long _zeroFormattingBehavior;
    long long _maximumUnitCount;
    _Bool _allowsFractionalUnits;
    _Bool _collapsesLargestUnit;
    _Bool _includesApproximationPhrase;
    _Bool _includesTimeRemainingPhrase;
    void *_reserved;
}

+ (id)localizedStringFromDateComponents:(id)arg1 unitsStyle:(long long)arg2;
- (_Bool)getObjectValue:(out id *)arg1 forString:(id)arg2 errorDescription:(out id *)arg3;
@property(copy) NSDate *referenceDate;
@property long long formattingContext;
@property _Bool includesTimeRemainingPhrase;
@property _Bool includesApproximationPhrase;
@property unsigned long long zeroFormattingBehavior;
@property long long unitsStyle;
@property(copy) NSCalendar *calendar;
@property _Bool collapsesLargestUnit;
@property _Bool allowsFractionalUnits;
@property long long maximumUnitCount;
@property unsigned long long allowedUnits;
- (id)stringForObjectValue:(id)arg1;
- (id)stringFromDateComponents:(id)arg1;
- (id)stringFromTimeInterval:(double)arg1;
- (id)_stringFromDateComponents:(id)arg1;
- (void)_ensureUnitFormatterWithLocale:(id)arg1;
- (id)stringFromDate:(id)arg1 toDate:(id)arg2;
- (id)_stringFromTimeInterval:(double)arg1;
- (id)_calendarFromDateComponents:(id)arg1;
- (id)_calendarOrCanonicalCalendar;
- (id)_canonicalizedDateComponents:(id)arg1 withCalendar:(id)arg2 usedUnits:(unsigned long long *)arg3;
- (void)_flushFormatterCache;
- (void)finalize;
- (void)dealloc;
- (id)init;

@end

@interface NSDateFormatter : NSFormatter
{
    NSMutableDictionary *_attributes;
    struct __CFDateFormatter *_formatter;
    unsigned long long _counter;
    NSObject<OS_dispatch_semaphore> *_lock;
}

+ (id)dateFormatFromTemplate:(id)arg1 options:(unsigned long long)arg2 locale:(id)arg3;
+ (id)localizedStringFromDate:(id)arg1 dateStyle:(unsigned long long)arg2 timeStyle:(unsigned long long)arg3;
+ (void)initialize;
+ (void)setDefaultFormatterBehavior:(unsigned long long)arg1;
+ (unsigned long long)defaultFormatterBehavior;
- (void)_setUsesCharacterDirection:(_Bool)arg1;
- (_Bool)_usesCharacterDirection;
@property _Bool doesRelativeDateFormatting;
@property long long formattingContext;
@property(copy) NSDate *gregorianStartDate;
@property(copy) NSArray *shortStandaloneQuarterSymbols;
@property(copy) NSArray *standaloneQuarterSymbols;
@property(copy) NSArray *shortQuarterSymbols;
@property(copy) NSArray *quarterSymbols;
@property(copy) NSArray *veryShortStandaloneWeekdaySymbols;
@property(copy) NSArray *shortStandaloneWeekdaySymbols;
@property(copy) NSArray *standaloneWeekdaySymbols;
@property(copy) NSArray *veryShortWeekdaySymbols;
@property(copy) NSArray *veryShortStandaloneMonthSymbols;
@property(copy) NSArray *shortStandaloneMonthSymbols;
@property(copy) NSArray *standaloneMonthSymbols;
@property(copy) NSArray *veryShortMonthSymbols;
@property(copy) NSArray *longEraSymbols;
@property(copy) NSString *PMSymbol;
@property(copy) NSString *AMSymbol;
@property(copy) NSArray *shortWeekdaySymbols;
@property(copy) NSArray *weekdaySymbols;
@property(copy) NSArray *shortMonthSymbols;
@property(copy) NSArray *monthSymbols;
@property(copy) NSArray *eraSymbols;
@property(copy) NSDate *defaultDate;
@property(copy) NSDate *twoDigitStartDate;
@property(getter=isLenient) _Bool lenient;
@property(copy) NSCalendar *calendar;
@property(copy) NSTimeZone *timeZone;
- (void)_setIsLenient:(_Bool)arg1;
- (void)_setDateFormat:(id)arg1;
- (id)_dateFormat;
@property(copy) NSString *dateFormat;
- (void)_setDateFormat:(id)arg1 alreadyLocked:(_Bool)arg2;
@property unsigned long long formatterBehavior;
@property _Bool generatesCalendarDates;
@property(copy) NSLocale *locale;
- (id)_getLocaleAlreadyLocked:(_Bool)arg1;
@property unsigned long long timeStyle;
@property unsigned long long dateStyle;
- (void)setLocalizedDateFormatFromTemplate:(id)arg1;
- (id)dateFromString:(id)arg1;
- (id)stringFromDate:(id)arg1;
- (_Bool)getObjectValue:(out id *)arg1 forString:(id)arg2 range:(inout struct _NSRange *)arg3 error:(out id *)arg4;
- (_Bool)getObjectValue:(out id *)arg1 forString:(id)arg2 errorDescription:(out id *)arg3;
- (id)stringForObjectValue:(id)arg1;
- (id)_locale_forOldMethods;
- (id)_timeZone_forOldMethods;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)finalize;
- (void)dealloc;
- (void)_reset;
- (id)init;
- (void)_regenerateFormatter;
- (void)_regenerateFormatterIfAbsent;
- (void)_clearFormatter;

@end

@interface NSDateIntervalFormatter : NSFormatter
{
    NSLocale *_locale;
    NSCalendar *_calendar;
    NSTimeZone *_timeZone;
    NSString *_dateTemplate;
    NSString *_dateTemplateFromStyles;
    void *_formatter;
    unsigned long long _dateStyle;
    unsigned long long _timeStyle;
    _Bool _modified;
    _Bool _useTemplate;
    NSObject<OS_dispatch_semaphore> *_lock;
    void *_reserved[4];
}

- (_Bool)isPartialStringValid:(id *)arg1 proposedSelectedRange:(struct _NSRange *)arg2 originalString:(id)arg3 originalSelectedRange:(struct _NSRange)arg4 errorDescription:(id *)arg5;
- (_Bool)isPartialStringValid:(id)arg1 newEditingString:(id *)arg2 errorDescription:(id *)arg3;
- (_Bool)getObjectValue:(out id *)arg1 forString:(id)arg2 errorDescription:(out id *)arg3;
- (id)editingStringForObjectValue:(id)arg1;
- (id)attributedStringForObjectValue:(id)arg1 withDefaultAttributes:(id)arg2;
- (id)stringForObjectValue:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
@property unsigned long long timeStyle;
@property unsigned long long dateStyle;
@property(copy) NSString *dateTemplate;
@property(copy) NSTimeZone *timeZone;
@property(copy) NSCalendar *calendar;
@property(copy) NSLocale *locale;
- (id)stringFromDate:(id)arg1 toDate:(id)arg2;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface NSDebugString : NSString
{
    NSString *string;
}

- (void)finalize;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)getCharacters:(unsigned short *)arg1 range:(struct _NSRange)arg2;
- (unsigned short)characterAtIndex:(unsigned long long)arg1;
- (unsigned long long)length;
- (id)initWithString:(id)arg1;

@end

@interface NSNumber : NSValue
{
}

+ (_Bool)supportsSecureCoding;
+ (id)numberWithBool:(_Bool)arg1;
+ (id)numberWithDouble:(double)arg1;
+ (id)numberWithFloat:(float)arg1;
+ (id)numberWithUnsignedLongLong:(unsigned long long)arg1;
+ (id)numberWithLongLong:(long long)arg1;
+ (id)numberWithUnsignedLong:(unsigned long long)arg1;
+ (id)numberWithLong:(long long)arg1;
+ (id)numberWithUnsignedInteger:(unsigned long long)arg1;
+ (id)numberWithInteger:(long long)arg1;
+ (id)numberWithUnsignedInt:(unsigned int)arg1;
+ (id)numberWithInt:(int)arg1;
+ (id)numberWithUnsignedShort:(unsigned short)arg1;
+ (id)numberWithShort:(short)arg1;
+ (id)numberWithUnsignedChar:(unsigned char)arg1;
+ (id)numberWithChar:(BOOL)arg1;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (void)initialize;
- (_Bool)_getCString:(char *)arg1 length:(int)arg2 multiplier:(double)arg3;
- (id)initWithBool:(_Bool)arg1;
- (id)initWithDouble:(double)arg1;
- (id)initWithFloat:(float)arg1;
- (id)initWithUnsignedLongLong:(unsigned long long)arg1;
- (id)initWithLongLong:(long long)arg1;
- (id)initWithUnsignedLong:(unsigned long long)arg1;
- (id)initWithLong:(long long)arg1;
- (id)initWithUnsignedInteger:(unsigned long long)arg1;
- (id)initWithInteger:(long long)arg1;
- (id)initWithUnsignedInt:(unsigned int)arg1;
- (id)initWithInt:(int)arg1;
- (id)initWithUnsignedShort:(unsigned short)arg1;
- (id)initWithShort:(short)arg1;
- (id)initWithUnsignedChar:(unsigned char)arg1;
- (id)initWithChar:(BOOL)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (_Bool)_allowsDirectEncoding;
- (Class)classForCoder;
@property(readonly, copy) NSString *stringValue;
- (id)description;
- (id)descriptionWithLocale:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (_Bool)isEqualToNumber:(id)arg1;
- (long long)compare:(id)arg1;
@property(readonly) unsigned long long unsignedLongLongValue;
@property(readonly) long long longLongValue;
@property(readonly) float floatValue;
@property(readonly) double doubleValue;
@property(readonly) unsigned long long unsignedLongValue;
@property(readonly) long long longValue;
@property(readonly) unsigned int unsignedIntValue;
@property(readonly) int intValue;
@property(readonly) unsigned short unsignedShortValue;
@property(readonly) short shortValue;
@property(readonly) unsigned char unsignedCharValue;
@property(readonly) BOOL charValue;
@property(readonly) unsigned long long unsignedIntegerValue;
@property(readonly) long long integerValue;
@property(readonly) _Bool boolValue;
- (long long)_reverseCompare:(id)arg1;
- (unsigned char)_getValue:(void *)arg1 forType:(long long)arg2;
- (long long)_cfNumberType;
- (unsigned long long)_cfTypeID;
- (_Bool)isNSNumber__;
@property(readonly) CDStruct_5fe7aead decimalValue;

@end

@interface NSDecimalNumber : NSNumber
{
    unsigned int _exponent:8;
    unsigned int _length:4;
    unsigned int _isNegative:1;
    unsigned int _isCompact:1;
    unsigned int _reserved:1;
    unsigned int _hasExternalRefCount:1;
    unsigned int _refs:16;
    unsigned short _mantissa[0];
}

+ (id)defaultBehavior;
+ (void)setDefaultBehavior:(id)arg1;
+ (id)notANumber;
+ (id)one;
+ (id)zero;
+ (id)maximumDecimalNumber;
+ (id)minimumDecimalNumber;
+ (_Bool)supportsSecureCoding;
+ (id)decimalNumberWithString:(id)arg1 locale:(id)arg2;
+ (id)decimalNumberWithString:(id)arg1;
+ (id)decimalNumberWithDecimal:(CDStruct_5fe7aead)arg1;
+ (id)decimalNumberWithMantissa:(unsigned long long)arg1 exponent:(short)arg2 isNegative:(_Bool)arg3;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)numberWithBool:(_Bool)arg1;
+ (id)numberWithDouble:(double)arg1;
+ (id)numberWithFloat:(float)arg1;
+ (id)numberWithUnsignedLongLong:(unsigned long long)arg1;
+ (id)numberWithLongLong:(long long)arg1;
+ (id)numberWithUnsignedLong:(unsigned long long)arg1;
+ (id)numberWithLong:(long long)arg1;
+ (id)numberWithUnsignedInteger:(unsigned long long)arg1;
+ (id)numberWithUnsignedInt:(unsigned int)arg1;
+ (id)numberWithInteger:(long long)arg1;
+ (id)numberWithInt:(int)arg1;
+ (id)numberWithUnsignedShort:(unsigned short)arg1;
+ (id)numberWithShort:(short)arg1;
+ (id)numberWithUnsignedChar:(unsigned char)arg1;
+ (id)numberWithChar:(BOOL)arg1;
- (_Bool)_getCString:(char *)arg1 length:(int)arg2 multiplier:(double)arg3;
- (_Bool)boolValue;
- (float)floatValue;
- (unsigned long long)unsignedLongLongValue;
- (long long)longLongValue;
- (unsigned long long)unsignedLongValue;
- (long long)longValue;
- (unsigned int)unsignedIntValue;
- (int)intValue;
- (unsigned short)unsignedShortValue;
- (short)shortValue;
- (unsigned char)unsignedCharValue;
- (BOOL)charValue;
- (void)encodeWithCoder:(id)arg1;
- (Class)classForCoder;
- (id)decimalNumberByRoundingAccordingToBehavior:(id)arg1;
- (id)decimalNumberByMultiplyingByPowerOf10:(short)arg1 withBehavior:(id)arg2;
- (id)decimalNumberByMultiplyingByPowerOf10:(short)arg1;
- (id)decimalNumberByRaisingToPower:(unsigned long long)arg1 withBehavior:(id)arg2;
- (id)decimalNumberByRaisingToPower:(unsigned long long)arg1;
- (id)decimalNumberByDividingBy:(id)arg1 withBehavior:(id)arg2;
- (id)decimalNumberByDividingBy:(id)arg1;
- (id)decimalNumberByMultiplyingBy:(id)arg1 withBehavior:(id)arg2;
- (id)decimalNumberByMultiplyingBy:(id)arg1;
- (id)decimalNumberBySubtracting:(id)arg1 withBehavior:(id)arg2;
- (id)decimalNumberBySubtracting:(id)arg1;
- (id)decimalNumberBySubstracting:(id)arg1 withBehavior:(id)arg2;
- (id)decimalNumberBySubstracting:(id)arg1;
- (id)decimalNumberByAdding:(id)arg1 withBehavior:(id)arg2;
- (id)decimalNumberByAdding:(id)arg1;
- (void)getValue:(void *)arg1;
@property(readonly) double doubleValue;
@property(readonly) const char *objCType;
- (_Bool)isEqual:(id)arg1;
- (long long)compare:(id)arg1;
@property(readonly) CDStruct_5fe7aead decimalValue;
- (id)descriptionWithLocale:(id)arg1;
- (id)description;
- (id)initWithCoder:(id)arg1;
- (id)initWithString:(id)arg1 locale:(id)arg2;
- (id)initWithString:(id)arg1;
- (id)initWithDecimal:(CDStruct_5fe7aead)arg1;
- (id)initWithMantissa:(unsigned long long)arg1 exponent:(short)arg2 isNegative:(_Bool)arg3;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)copy;

@end

@interface NSDecimalNumberHandler : NSObject <NSDecimalNumberBehaviors, NSCoding>
{
    unsigned int _scale:16;
    unsigned int _roundingMode:3;
    unsigned int _raiseOnExactness:1;
    unsigned int _raiseOnOverflow:1;
    unsigned int _raiseOnUnderflow:1;
    unsigned int _raiseOnDivideByZero:1;
    unsigned int _unused:9;
    void *_reserved2;
    void *_reserved;
}

+ (id)decimalNumberHandlerWithRoundingMode:(unsigned long long)arg1 scale:(short)arg2 raiseOnExactness:(_Bool)arg3 raiseOnOverflow:(_Bool)arg4 raiseOnUnderflow:(_Bool)arg5 raiseOnDivideByZero:(_Bool)arg6;
+ (id)defaultDecimalNumberHandler;
- (id)exceptionDuringOperation:(SEL)arg1 error:(unsigned long long)arg2 leftOperand:(id)arg3 rightOperand:(id)arg4;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (short)scale;
- (unsigned long long)roundingMode;
- (id)initWithRoundingMode:(unsigned long long)arg1 scale:(short)arg2 raiseOnExactness:(_Bool)arg3 raiseOnOverflow:(_Bool)arg4 raiseOnUnderflow:(_Bool)arg5 raiseOnDivideByZero:(_Bool)arg6;

@end

__attribute__((visibility("hidden")))
@interface NSDecimalNumberPlaceholder : NSDecimalNumber
{
}

+ (_Bool)supportsSecureCoding;
+ (id)allocWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithMantissa:(unsigned long long)arg1 exponent:(short)arg2 isNegative:(_Bool)arg3;
- (id)initWithString:(id)arg1 locale:(id)arg2;
- (id)initWithString:(id)arg1;
- (id)initWithDecimal:(CDStruct_5fe7aead)arg1;
- (id)init;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (id)initWithFloat:(float)arg1;
- (id)initWithDouble:(double)arg1;
- (id)initWithUnsignedLong:(unsigned long long)arg1;
- (id)initWithUnsignedInteger:(unsigned long long)arg1;
- (id)initWithUnsignedInt:(unsigned int)arg1;
- (id)initWithUnsignedShort:(unsigned short)arg1;
- (id)initWithUnsignedChar:(unsigned char)arg1;
- (id)initWithUnsignedLongLong:(unsigned long long)arg1;
- (id)initWithLong:(long long)arg1;
- (id)initWithInteger:(long long)arg1;
- (id)initWithInt:(int)arg1;
- (id)initWithShort:(short)arg1;
- (id)initWithChar:(BOOL)arg1;
- (id)initWithBool:(_Bool)arg1;
- (id)initWithLongLong:(long long)arg1;

@end

@interface NSDictionary (NSDictionary)
+ (id)newWithContentsOf:(id)arg1 immutable:(_Bool)arg2;
+ (id)dictionaryWithContentsOfURL:(id)arg1;
+ (id)dictionaryWithContentsOfFile:(id)arg1;
+ (_Bool)supportsSecureCoding;
- (id)initWithContentsOfURL:(id)arg1;
- (id)initWithContentsOfFile:(id)arg1;
- (_Bool)writeToURL:(id)arg1 atomically:(_Bool)arg2;
- (_Bool)writeToFile:(id)arg1 atomically:(_Bool)arg2;
- (id)_stringToWrite;
- (id)descriptionInStringsFileFormat;
- (Class)classForCoder;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
@end

@interface NSDictionary (NSDictionaryPortCoding)
- (id)replacementObjectForPortCoder:(id)arg1;
@end

@interface NSDictionary (NSFileAttributes)
- (id)fileGroupOwnerAccountID;
- (id)fileOwnerAccountID;
- (id)fileCreationDate;
- (_Bool)fileIsAppendOnly;
- (_Bool)fileIsImmutable;
- (unsigned int)fileHFSTypeCode;
- (unsigned int)fileHFSCreatorCode;
- (_Bool)fileExtensionHidden;
- (unsigned long long)fileSystemFileNumber;
- (long long)fileSystemNumber;
- (unsigned long long)fileGroupOwnerAccountNumber;
- (id)fileGroupOwnerAccountName;
- (unsigned long long)fileOwnerAccountNumber;
- (id)fileOwnerAccountName;
- (unsigned long long)filePosixPermissions;
- (id)fileType;
- (id)fileModificationDate;
- (unsigned long long)fileSize;
@end

@interface NSDictionary (NSKeyValueCoding)
- (id)valueForKeyPath:(id)arg1;
- (id)valueForKey:(id)arg1;
@end

@interface NSDictionary (NSURLExtras)
- (id)_web_objectForMIMEType:(id)arg1;
- (id)_web_numberForKey:(id)arg1;
- (id)_web_stringForKey:(id)arg1;
- (int)_web_intForKey:(id)arg1;
@end

@interface NSDirInfo : NSMutableDictionary
{
    NSMutableDictionary *dict;
}

- (id)serializeToData;
- (unsigned long long)writePath:(id)arg1 docInfo:(id)arg2 errorHandler:(id)arg3 remapContents:(_Bool)arg4 hardLinkPath:(id)arg5;
- (void)removeObjectForKey:(id)arg1;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (id)keyEnumerator;
- (id)objectForKey:(id)arg1;
- (unsigned long long)count;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithContentsOfFile:(id)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithDictionary:(id)arg1 copyItems:(_Bool)arg2;
- (id)initWithObjects:(const id *)arg1 forKeys:(const id *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface NSDirInfoDeserializer : NSAKDeserializer
{
}

- (id)deserializePListValueIn:(id)arg1 key:(id)arg2 length:(unsigned long long)arg3;

@end

@interface NSDirInfoSerializer : NSAKSerializer
{
}

- (unsigned long long)serializePListValueIn:(id)arg1 key:(id)arg2 value:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface NSDirectoryTraversalOperation : NSOperation
{
    id _delegate;
    NSString *_sourcePath;
    NSError *_error;
    void *_stream;
    int _optionsFlags;
    int _lastDeviceInode;
    _Bool _shouldFilterUnderbars;
    _Bool _stopped;
    NSMutableArray *_deviceEntryPoints;
    NSMutableArray *_deviceNumbers;
}

+ (id)directoryTraversalOperationAtPath:(id)arg1;
+ (_Bool)_needsStatInfo;
+ (id)_errorWithErrno:(int)arg1 atPath:(id)arg2;
- (void)dealloc;
- (void)main;
- (_Bool)_validatePaths:(id *)arg1;
- (void)_handleFTSEntry:(struct _ftsent *)arg1;
- (_Bool)shouldProceedAfterError:(id)arg1;
- (void)_setError:(id)arg1;
- (id)error;
- (_Bool)_shouldFilterEntry:(struct _ftsent *)arg1;
- (void)handlePathname:(id)arg1;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (id)initWithPath:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface NSDirectorySubpathsOperation : NSDirectoryTraversalOperation
{
    NSMutableArray *_subpaths;
}

+ (id)directorySubpathsOperationAtPath:(id)arg1;
+ (id)_errorWithErrno:(int)arg1 atPath:(id)arg2;
- (void)dealloc;
- (id)subpaths;
- (void)handlePathname:(id)arg1;

@end

@interface NSDistantObject : NSProxy <NSCoding>
{
    id _knownSelectors;
    unsigned long long _wireCount;
    unsigned long long _refCount;
    id _proto;
    unsigned short ___2;
    unsigned char ___1;
    unsigned char _wireType;
    id _remoteClass;
}

+ (id)newDistantObjectWithCoder:(id)arg1;
+ (id)proxyWithLocal:(id)arg1 connection:(id)arg2;
+ (id)proxyWithTarget:(id)arg1 connection:(id)arg2;
+ (void)initialize;
+ (void)_enableLogging:(_Bool)arg1;
- (struct _NSZone *)zone;
- (id)mutableCopy;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copy;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)appendFormat:(id)arg1;
- (id)stringByAppendingFormat:(id)arg1;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (Class)class;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (Class)classForCoder;
- (void)finalize;
- (void)retainWireCount;
- (oneway void)release;
- (void)dealloc;
- (_Bool)_isDeallocating;
- (_Bool)_tryRetain;
- (unsigned long long)retainCount;
- (id)retain;
- (void)_releaseWireCount:(unsigned long long)arg1;
- (void)forwardInvocation:(id)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(id)arg1;
- (id)protocolForProxy;
- (void)setProtocolForProxy:(id)arg1;
@property(readonly, retain) NSConnection *connectionForProxy;
- (id)initWithLocal:(id)arg1 connection:(id)arg2;
- (id)initWithTarget:(id)arg1 connection:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface NSDistantObjectTableEntry : NSObject
{
    NSConnection *_conn;
    NSDistantObject *_proxy;
    id _localObject;
    unsigned int _wireID;
}

- (id)description;
- (void)dealloc;

@end

@interface NSNotificationCenter : NSObject
{
    void *_impl;
    void *_callback;
    void *_pad[11];
}

+ (id)defaultCenter;
- (_Bool)isEmpty;
- (id)addObserverForName:(id)arg1 object:(id)arg2 queue:(id)arg3 usingBlock:(CDUnknownBlockType)arg4;
- (void)postNotificationName:(id)arg1 object:(id)arg2 userInfo:(id)arg3;
- (void)postNotificationName:(id)arg1 object:(id)arg2;
- (void)postNotification:(id)arg1;
- (void)removeObserver:(id)arg1 name:(id)arg2 object:(id)arg3;
- (void)removeObserver:(id)arg1;
- (void)addObserver:(id)arg1 selector:(SEL)arg2 name:(id)arg3 object:(id)arg4;
- (id)description;
- (void)dealloc;
- (void)finalize;
- (id)init;

@end

@interface NSDistributedNotificationCenter : NSNotificationCenter
{
}

+ (id)notificationCenterForType:(id)arg1;
+ (id)defaultCenter;
@property _Bool suspended;
- (void)postNotificationName:(id)arg1 object:(id)arg2 userInfo:(id)arg3;
- (void)postNotificationName:(id)arg1 object:(id)arg2;
- (void)postNotification:(id)arg1;
- (void)postNotificationName:(id)arg1 object:(id)arg2 userInfo:(id)arg3 deliverImmediately:(_Bool)arg4;
- (void)postNotificationName:(id)arg1 object:(id)arg2 userInfo:(id)arg3 options:(unsigned long long)arg4;
- (void)removeObserver:(id)arg1 name:(id)arg2 object:(id)arg3;
- (id)addObserverForName:(id)arg1 object:(id)arg2 queue:(id)arg3 usingBlock:(CDUnknownBlockType)arg4;
- (id)addObserverForName:(id)arg1 object:(id)arg2 suspensionBehavior:(unsigned long long)arg3 queue:(id)arg4 usingBlock:(CDUnknownBlockType)arg5;
- (void)addObserver:(id)arg1 selector:(SEL)arg2 name:(id)arg3 object:(id)arg4;
- (void)addObserver:(id)arg1 selector:(SEL)arg2 name:(id)arg3 object:(id)arg4 suspensionBehavior:(unsigned long long)arg5;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface NSDistributedObjectsStatistics : NSDictionary
{
    unsigned long long requestsReceived;
    unsigned long long repliesSent;
    unsigned long long requestsSent;
    unsigned long long repliesReceived;
}

- (id)objectForKey:(id)arg1;
- (void)addStatistics:(id)arg1;
- (id)keyEnumerator;
- (id)allKeys;
- (unsigned long long)count;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface NSDocInfo : NSObject <NSCopying>
{
    long long time;
    unsigned short mode;
    struct {
        unsigned int isDir:1;
        unsigned int isSingleFile:1;
        unsigned int isSoftLink:1;
        unsigned int _pad:13;
    } flags;
}

- (id)copy;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithFileAttributes:(id)arg1;
- (id)initFromInfo:(struct stat *)arg1;

@end

@interface NSDocumentDeserializer : NSAKDeserializer
{
}

- (id)deserializeNewPList;
- (void)fixupDirInfo:(id)arg1;
- (id)deserializeNewData;

@end

@interface NSDocumentSerializer : NSAKSerializer
{
}

- (unsigned long long)serializePListValueIn:(id)arg1 key:(id)arg2 value:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface NSEUCGB2312EncodingDetector : NSEncodingDetector
{
}

- (unsigned long long)recognizeString:(const char *)arg1 withDataLength:(unsigned long long)arg2 withReplacement:(const char *)arg3 withReplacementLength:(unsigned long long)arg4 inNewData:(char *)arg5 maxBufferLength:(unsigned long long)arg6 actualBufferLength:(unsigned long long *)arg7;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface NSEUCJPEncodingDetector : NSEncodingDetector
{
}

- (unsigned long long)recognizeString:(const char *)arg1 withDataLength:(unsigned long long)arg2 withReplacement:(const char *)arg3 withReplacementLength:(unsigned long long)arg4 inNewData:(char *)arg5 maxBufferLength:(unsigned long long)arg6 actualBufferLength:(unsigned long long *)arg7;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface NSEUCKREncodingDetector : NSEncodingDetector
{
}

- (unsigned long long)recognizeString:(const char *)arg1 withDataLength:(unsigned long long)arg2 withReplacement:(const char *)arg3 withReplacementLength:(unsigned long long)arg4 inNewData:(char *)arg5 maxBufferLength:(unsigned long long)arg6 actualBufferLength:(unsigned long long *)arg7;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface NSEUCTWEncodingDetector : NSEncodingDetector
{
}

- (unsigned long long)recognizeString:(const char *)arg1 withDataLength:(unsigned long long)arg2 withReplacement:(const char *)arg3 withReplacementLength:(unsigned long long)arg4 inNewData:(char *)arg5 maxBufferLength:(unsigned long long)arg6 actualBufferLength:(unsigned long long *)arg7;
- (id)init;

@end

@interface NSEnergyFormatter : NSFormatter
{
    void *_formatter;
    _Bool _isForFoodEnergyUse;
    void *_reserved[2];
}

@property(getter=isForFoodEnergyUse) _Bool forFoodEnergyUse; // @synthesize forFoodEnergyUse=_isForFoodEnergyUse;
- (id)attributedStringForObjectValue:(id)arg1 withDefaultAttributes:(id)arg2;
- (id)stringForObjectValue:(id)arg1;
- (_Bool)getObjectValue:(out id *)arg1 forString:(id)arg2 errorDescription:(out id *)arg3;
- (id)stringFromJoules:(double)arg1;
- (id)stringFromValue:(double)arg1 unit:(long long)arg2;
- (id)unitStringFromJoules:(double)arg1 usedUnit:(long long *)arg2;
- (id)unitStringFromValue:(double)arg1 unit:(long long)arg2;
@property long long unitStyle;
@property(copy) NSNumberFormatter *numberFormatter;
- (void)dealloc;
- (id)init;
- (long long)targetUnitFromJoules:(double)arg1;

@end

@interface NSEqualityPredicateOperator : NSPredicateOperator
{
    _Bool _negate;
    unsigned long long _options;
}

+ (_Bool)supportsSecureCoding;
- (_Bool)performPrimitiveOperationUsingObject:(id)arg1 andObject:(id)arg2;
- (_Bool)isEqual:(id)arg1;
- (void)_setOptions:(unsigned long long)arg1;
- (unsigned long long)options;
- (void)setNegation:(_Bool)arg1;
- (_Bool)isNegation;
- (id)predicateFormat;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithOperatorType:(unsigned long long)arg1 modifier:(unsigned long long)arg2 negate:(_Bool)arg3 options:(unsigned long long)arg4;
- (id)initWithOperatorType:(unsigned long long)arg1 modifier:(unsigned long long)arg2 negate:(_Bool)arg3;

@end

@interface NSException (NSException)
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
@end

@interface NSException (NSExceptionPortCoding)
- (id)replacementObjectForPortCoder:(id)arg1;
@end

@interface NSExtendedRegularExpressionCheckingResult : NSRegularExpressionCheckingResult
{
    NSRegularExpression *_regularExpression;
    struct _NSRange _ranges[7];
}

- (id)rangeArray;
- (struct _NSRange)rangeAtIndex:(unsigned long long)arg1;
- (unsigned long long)numberOfRanges;
- (_Bool)_adjustRangesWithOffset:(long long)arg1;
- (struct _NSRange)range;
- (id)regularExpression;
- (void)dealloc;
- (id)initWithRangeArray:(id)arg1 regularExpression:(id)arg2;
- (id)initWithRanges:(struct _NSRange *)arg1 count:(unsigned long long)arg2 regularExpression:(id)arg3;

@end

@interface NSFalsePredicate : NSPredicate
{
}

+ (_Bool)_allowsEvaluation;
+ (_Bool)supportsSecureCoding;
+ (id)defaultInstance;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (void)initialize;
- (void)acceptVisitor:(id)arg1 flags:(unsigned long long)arg2;
- (_Bool)evaluateWithObject:(id)arg1 substitutionVariables:(id)arg2;
- (id)predicateFormat;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;
- (void)_validateForMetadataQueryScopes:(id)arg1;

@end

@interface NSFileAccessArbiter : NSObject <NSFileAccessArbiter>
{
    NSObject<OS_dispatch_queue> *_queue;
    _Bool _isSubarbiter;
    NSMutableDictionary *_accessClaimsByID;
    NSMutableDictionary *_subarbitrationClaimsByID;
    NSMutableDictionary *_reactorsByID;
    NSFileAccessNode *_rootNode;
    NSObject<OS_xpc_object> *_superarbitrationServer;
}

- (void)tiePresenterForID:(id)arg1 toItemAtURL:(id)arg2;
- (void)writerWithPurposeID:(id)arg1 didVersionChangeOfKind:(id)arg2 toItemAtURL:(id)arg3 withClientID:(id)arg4 name:(id)arg5;
- (void)writerWithPurposeID:(id)arg1 didMakeItemDisappearAtURL:(id)arg2;
- (void)writerWithPurposeID:(id)arg1 didChangeUbiquityOfItemAtURL:(id)arg2;
- (void)writerWithPurposeID:(id)arg1 didReconnectItemAtURL:(id)arg2;
- (void)writerWithPurposeID:(id)arg1 didDisconnectItemAtURL:(id)arg2;
- (void)writerWithPurposeID:(id)arg1 didMoveItemAtURL:(id)arg2 toURL:(id)arg3;
- (void)cancelAccessClaimForID:(id)arg1;
- (void)revokeSubarbitrationClaimForID:(id)arg1;
- (void)grantSubarbitrationClaim:(id)arg1 withServer:(id)arg2;
- (void)revokeAccessClaimForID:(id)arg1;
- (id)grantAccessClaim:(id)arg1 synchronouslyIfPossible:(_Bool)arg2;
- (void)_registerForDebugInfoRequests;
- (void)_getDebugInformationWithString:(id)arg1 fromPid:(int)arg2 thenContinue:(CDUnknownBlockType)arg3;
- (void)_handleCanceledClient:(id)arg1;
- (void)_handleMessage:(id)arg1 forSubarbitrationClaim:(id)arg2 server:(id)arg3;
- (void)_handleMessage:(id)arg1 fromClient:(id)arg2;
- (_Bool)_handleMessage:(id)arg1 ofKind:(id)arg2 withParameters:(id)arg3 embeddedServer:(id)arg4 fromClient:(id)arg5;
- (void)_sendSubarbitersMessageWithKind:(id)arg1 parameters:(id)arg2;
- (id)rootNode;
- (void)stopArbitrating;
- (void)_startArbitratingItemsAtURLs:(id)arg1 withSuperarbitrationServer:(id)arg2;
- (void)_removeReactorForID:(id)arg1;
- (void)_addProvider:(id)arg1 ofItemsAtURL:(id)arg2;
- (void)_addPresenter:(id)arg1 ofItemAtURL:(id)arg2 watchingFile:(_Bool)arg3 withLastEventID:(id)arg4;
- (void)_tiePresenterForID:(id)arg1 toItemAtURL:(id)arg2;
- (void)_writerWithPurposeID:(id)arg1 didVersionChangeOfKind:(id)arg2 toItemAtURL:(id)arg3 withClientID:(id)arg4 name:(id)arg5;
- (void)_writerWithPurposeID:(id)arg1 didMakeItemDisappearAtURL:(id)arg2;
- (void)_writerWithPurposeID:(id)arg1 didChangeUbiquityOfItemAtURL:(id)arg2;
- (void)_writerWithPurposeID:(id)arg1 didReconnectItemAtURL:(id)arg2;
- (void)_writerWithPurposeID:(id)arg1 didDisconnectItemAtURL:(id)arg2;
- (void)_writerWithPurposeID:(id)arg1 didMoveItemAtURL:(id)arg2 toURL:(id)arg3;
- (void)_cancelAccessClaimForID:(id)arg1;
- (void)_grantSubarbitrationClaim:(id)arg1 withServer:(id)arg2;
- (void)_revokeAccessClaimForID:(id)arg1 fromLocal:(_Bool)arg2;
- (void)_grantAccessClaim:(id)arg1;
- (void)finalize;
- (void)dealloc;
- (id)initWithQueue:(id)arg1 isSubarbiter:(_Bool)arg2 listener:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface NSFileAccessArbiterProxy : NSObject <NSFileAccessArbiter>
{
    NSObject<OS_xpc_object> *_server;
    NSObject<OS_dispatch_queue> *_serverQueue;
    CDUnknownBlockType _serverEventHandler;
    NSObject<OS_dispatch_queue> *_queue;
    NSMutableDictionary *_presentersByID;
    NSMutableDictionary *_providersByID;
}

+ (id)_fileReactorDebuggingInformation;
+ (id)_willBeginOperationForReactor:(id)arg1 withDescription:(id)arg2;
+ (void)_accessPresenterOperationRecordsUsingBlock:(CDUnknownBlockType)arg1;
+ (id)_idForReactor:(id)arg1;
- (void)handleCanceledServer;
- (void)handleMessage:(id)arg1;
- (void)_makeProvider:(id)arg1 observeEndOfWriteAtURL:(id)arg2 forAccessClaimWithID:(id)arg3 processIdentifier:(int)arg4;
- (void)_makeProvider:(id)arg1 observePresentationChangeOfKind:(id)arg2 withPresenterID:(id)arg3 processIdentifier:(int)arg4 url:(id)arg5 newURL:(id)arg6 completionHandler:(CDUnknownBlockType)arg7;
- (void)_makeProvider:(id)arg1 providePhysicalURLForURL:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)_makeProvider:(id)arg1 cancelProvidingItemAtURL:(id)arg2 forAccessClaimWithID:(id)arg3;
- (void)_makeProvider:(id)arg1 provideItemAtURL:(id)arg2 forAccessClaimWithID:(id)arg3 processIdentifier:(int)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)_makePresenter:(id)arg1 reacquireFromWritingClaimForID:(id)arg2;
- (void)_makePresenter:(id)arg1 relinquishToWritingClaimWithID:(id)arg2 options:(unsigned long long)arg3 subitemURL:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)_makePresenter:(id)arg1 reacquireFromReadingClaimForID:(id)arg2;
- (void)_makePresenter:(id)arg1 relinquishToReadingClaimWithID:(id)arg2 options:(unsigned long long)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)_makePresenter:(id)arg1 relinquishToAccessClaimWithID:(id)arg2 ifNecessaryUsingSelector:(SEL)arg3 recordingRelinquishment:(id)arg4 continuer:(CDUnknownBlockType)arg5;
- (void)_makePresenter:(id)arg1 setLastPresentedItemEventIdentifier:(unsigned long long)arg2;
- (void)_makePresenter:(id)arg1 observeVersionChangeOfKind:(id)arg2 withClientID:(id)arg3 name:(id)arg4 subitemURL:(id)arg5;
- (void)_makePresenter:(id)arg1 observeUbiquityChangeWithSubitemURL:(id)arg2;
- (void)_makePresenterObserveReconnection:(id)arg1;
- (void)_makePresenterObserveDisconnection:(id)arg1;
- (void)_makePresenter:(id)arg1 observeMoveToURL:(id)arg2 withSubitemURL:(id)arg3;
- (void)_makePresenter:(id)arg1 observeChangeWithSubitemURL:(id)arg2;
- (void)_makePresenter:(id)arg1 accommodateDisconnectionWithCompletionHandler:(CDUnknownBlockType)arg2;
- (void)_makePresenter:(id)arg1 accommodateDeletionWithSubitemURL:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)_makePresenter:(id)arg1 saveChangesWithCompletionHandler:(CDUnknownBlockType)arg2;
- (void)getDebugInfoWithCompletionHandler:(CDUnknownBlockType)arg1;
- (id)idForFileReactor:(id)arg1;
- (id)fileProviders;
- (void)removeFileProvider:(id)arg1;
- (void)addFileProvider:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)filePresenters;
- (void)removeFilePresenter:(id)arg1;
- (void)addFilePresenter:(id)arg1;
- (void)tiePresenterForID:(id)arg1 toItemAtURL:(id)arg2;
- (void)writerWithPurposeID:(id)arg1 didVersionChangeOfKind:(id)arg2 toItemAtURL:(id)arg3 withClientID:(id)arg4 name:(id)arg5;
- (void)writerWithPurposeID:(id)arg1 didMakeItemDisappearAtURL:(id)arg2;
- (void)writerWithPurposeID:(id)arg1 didChangeUbiquityOfItemAtURL:(id)arg2;
- (void)writerWithPurposeID:(id)arg1 didReconnectItemAtURL:(id)arg2;
- (void)writerWithPurposeID:(id)arg1 didDisconnectItemAtURL:(id)arg2;
- (void)writerWithPurposeID:(id)arg1 didMoveItemAtURL:(id)arg2 toURL:(id)arg3;
- (void)cancelAccessClaimForID:(id)arg1;
- (void)revokeSubarbitrationClaimForID:(id)arg1;
- (void)grantSubarbitrationClaim:(id)arg1 withServer:(id)arg2;
- (void)revokeAccessClaimForID:(id)arg1;
- (id)grantAccessClaim:(id)arg1 synchronouslyIfPossible:(_Bool)arg2;
- (id)_writeRelinquishmentForPresenter:(id)arg1;
- (id)_readRelinquishmentForPresenter:(id)arg1;
- (void)finalize;
- (void)dealloc;
- (id)initWithServer:(id)arg1 queue:(id)arg2 eventHandler:(CDUnknownBlockType)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface NSFileAccessClaim : NSObject
{
    NSObject<OS_xpc_object> *_client;
    NSString *_claimID;
    NSString *_purposeIDOrNil;
    _Bool _cameFromSuperarbiter;
    unsigned long long _blockageCount;
    _Bool _didWait;
    _Bool _isRevoked;
    NSMutableArray *_claimerBlockageReasons;
    NSError *_claimerError;
    NSMutableOrderedSet *_pendingClaims;
    NSMutableSet *_blockingClaims;
    NSMutableSet *_blockingReactorIDs;
    NSMutableArray *_providerCancellationProcedures;
    NSMutableDictionary *_reacquisitionProceduresByPresenterID;
    NSMutableArray *_revocationProcedures;
    NSMutableArray *_devaluationProcedures;
    NSMutableArray *_finishingProcedures;
    id _claimerOrNil;
    NSObject<OS_dispatch_semaphore> *_claimerWaiterOrNull;
    NSMutableArray *_sandboxTokens;
}

+ (_Bool)writingItemAtLocation:(id)arg1 withPurposeID:(id)arg2 requiresOnlyPhysicalItemWithOptions:(unsigned long long)arg3;
+ (_Bool)readingItemAtLocation:(id)arg1 withPurposeID:(id)arg2 requiresOnlyPhysicalItemWithOptions:(unsigned long long)arg3;
+ (_Bool)canWritingItemAtLocation:(id)arg1 options:(unsigned long long)arg2 safelyOverlapWritingItemAtLocation:(id)arg3 options:(unsigned long long)arg4;
+ (_Bool)canReadingItemAtLocation:(id)arg1 options:(unsigned long long)arg2 safelyOverlapWritingItemAtLocation:(id)arg3 options:(unsigned long long)arg4;
- (void)finished;
- (_Bool)shouldBeRevokedPriorToInvokingAccessor;
- (id)purposeIDOfClaimOnItemAtLocation:(id)arg1 forMessagingPresenter:(id)arg2;
- (_Bool)checkIfSymbolicLinkAtURL:(id)arg1 withResolutionCount:(long long *)arg2 andIfSoThenReevaluateSelf:(CDUnknownBlockType)arg3;
- (id)description;
- (id)descriptionWithIndenting:(id)arg1;
- (void)itemAtLocation:(id)arg1 wasReplacedByItemAtLocation:(id)arg2;
- (_Bool)isRevoked;
- (_Bool)isGranted;
- (void)devalueOldClaim:(id)arg1;
- (void)cancelled;
- (void)devalueSelf;
- (void)revoked;
- (id)newClaimerWaiter;
- (void)invokeClaimer;
- (void)prepareItemForUploadingFromURL:(id)arg1 thenContinue:(CDUnknownBlockType)arg2;
- (_Bool)_writeArchiveOfDirectoryAtURL:(id)arg1 toURL:(id)arg2 error:(id *)arg3;
- (_Bool)canAccessLocations:(id)arg1 forReading:(_Bool)arg2 error:(id *)arg3;
- (void)makePresentersOfItemAtLocation:(id)arg1 orContainedItem:(_Bool)arg2 relinquishUsingProcedureGetter:(CDUnknownBlockType)arg3;
- (void)makeProviderOfItemAtLocation:(id)arg1 providePhysicalURLThenContinue:(CDUnknownBlockType)arg2;
- (void)makeProviderOfItemAtLocation:(id)arg1 provideThenContinue:(CDUnknownBlockType)arg2;
- (void)granted;
- (_Bool)isBlockedByWritingItemAtLocation:(id)arg1 options:(unsigned long long)arg2;
- (_Bool)isBlockedByReadingItemAtLocation:(id)arg1 options:(unsigned long long)arg2;
- (void)removePendingClaims:(id)arg1;
- (id)pendingClaims;
- (void)addPendingClaim:(id)arg1;
- (void)evaluateNewClaim:(id)arg1;
- (_Bool)isBlockedByClaimWithPurposeID:(id)arg1;
- (_Bool)claimerInvokingIsBlockedByReactorWithID:(id)arg1;
- (void)whenFinishedPerformProcedure:(CDUnknownBlockType)arg1;
- (void)whenDevaluedPerformProcedure:(CDUnknownBlockType)arg1;
- (void)whenRevokedPerformProcedure:(CDUnknownBlockType)arg1;
- (_Bool)evaluateSelfWithRootNode:(id)arg1 checkSubarbitrability:(_Bool)arg2;
- (id)claimerError;
- (void)setClaimerError:(id)arg1;
- (void)unblockClaimerForReason:(id)arg1;
- (void)blockClaimerForReason:(id)arg1;
- (_Bool)didWait;
- (void)unblock;
- (void)block;
- (_Bool)cameFromSuperarbiter;
- (void)setCameFromSuperarbiter;
- (void)forwardUsingMessageSender:(CDUnknownBlockType)arg1 crashHandler:(CDUnknownBlockType)arg2;
- (id)purposeID;
- (id)claimID;
- (id)client;
- (void)finalize;
- (void)dealloc;
- (id)initWithClient:(id)arg1 messageParameters:(id)arg2 replySender:(CDUnknownBlockType)arg3;
- (id)initWithClient:(id)arg1 claimID:(id)arg2 purposeID:(id)arg3;

@end

@interface NSFileAccessIntent : NSObject
{
    NSURL *_url;
    _Bool _isRead;
    long long _options;
}

+ (id)writingIntentWithURL:(id)arg1 options:(unsigned long long)arg2;
+ (id)readingIntentWithURL:(id)arg1 options:(unsigned long long)arg2;
@property(readonly) _Bool isRead; // @synthesize isRead=_isRead;
@property(copy) NSURL *URL; // @synthesize URL=_url;
- (void)dealloc;
- (id)description;
@property(readonly) unsigned long long writingOptions;
@property(readonly) unsigned long long readingOptions;

@end

__attribute__((visibility("hidden")))
@interface NSFileAccessNode : NSObject
{
    NSFileAccessNode *_parent;
    NSString *_name;
    NSString *_normalizedName;
    NSFileAccessNode *_symbolicLinkDestination;
    unsigned long long _symbolicLinkReferenceCount;
    NSMutableDictionary *_childrenByNormalizedName;
    id _presenterOrPresenters;
    id _provider;
    id _accessClaimOrClaims;
    _Bool _isArbitrationBoundary;
    _Bool _isFilePackageIsFigured;
    _Bool _isFilePackage;
    NSString *_lastRequestedChildName;
    NSFileAccessNode *_lastRequestedChild;
    id _progressPublisherOrPublishers;
    id _progressSubscriberOrSubscribers;
}

- (id)description;
- (id)sensitiveDescription;
- (id)descriptionWithIndenting:(id)arg1 excludingExcessNodes:(_Bool)arg2;
- (id)_childrenExcludingExcessNodes:(_Bool)arg1;
- (_Bool)_mayContainCriticalDebuggingInformation;
- (void)assertDescendantsLive;
- (void)assertLive;
- (void)assertDead;
- (id)parent;
- (void)forEachProgressThingOfItemOrContainedItemPerformProcedure:(CDUnknownBlockType)arg1;
- (void)forEachProgressSubscriberOfItemOrContainingItemPerformProcedure:(CDUnknownBlockType)arg1;
- (void)forEachProgressSubscriberOfItemPerformProcedure:(CDUnknownBlockType)arg1;
- (void)forEachProgressPublisherOfItemOrContainedItemPerformProcedure:(CDUnknownBlockType)arg1;
- (void)forEachProgressPublisherOfItemPerformProcedure:(CDUnknownBlockType)arg1;
- (void)removeProgressSubscriber:(id)arg1;
- (void)addProgressSubscriber:(id)arg1;
- (void)removeProgressPublisher:(id)arg1;
- (void)addProgressPublisher:(id)arg1;
- (id)urlOfSubitemAtPath:(id)arg1 plusPath:(id)arg2;
- (id)standardizedURL;
- (id)pathExceptPrivate;
- (id)url;
- (void)removeAccessClaim:(id)arg1;
- (void)addAccessClaim:(id)arg1;
- (void)setProvider:(id)arg1;
- (void)removePresenter:(id)arg1;
- (void)addPresenter:(id)arg1;
- (_Bool)itemIsInItemAtLocation:(id)arg1;
- (_Bool)itemIsItemAtLocation:(id)arg1;
- (_Bool)itemIsSubarbitrable;
- (void)setArbitrationBoundary;
- (void)forEachAccessClaimOnItemOrContainedItemPerformProcedure:(CDUnknownBlockType)arg1;
- (void)forEachPresenterOfContainingItemPerformProcedure:(CDUnknownBlockType)arg1;
- (void)forEachPresenterOfItemOrContainingItemPerformProcedure:(CDUnknownBlockType)arg1;
- (void)forEachPresenterOfItemOrContainedItemPerformProcedure:(CDUnknownBlockType)arg1;
- (void)forEachPresenterOfContainedItemPerformProcedure:(CDUnknownBlockType)arg1;
- (void)forEachPresenterOfItemPerformProcedure:(CDUnknownBlockType)arg1;
- (void)forEachPresenterOfContainingFilePackagePerformProcedure:(CDUnknownBlockType)arg1;
- (id)itemProvider;
- (void)forEachReactorToItemOrContainedItemPerformProcedure:(CDUnknownBlockType)arg1;
- (void)forEachRelevantAccessClaimPerformProcedure:(CDUnknownBlockType)arg1;
- (void)forEachAccessClaimOnItemPerformProcedure:(CDUnknownBlockType)arg1;
- (void)forEachDescendantPerformProcedure:(CDUnknownBlockType)arg1;
- (id)biggestFilePackageLocation;
- (_Bool)itemIsFilePackage;
- (void)setParent:(id)arg1 name:(id)arg2;
- (id)pathFromAncestor:(id)arg1;
- (id)descendantForFileURL:(id)arg1;
- (id)childForRange:(struct _NSRange)arg1 ofPath:(id)arg2;
- (id)descendantAtPath:(id)arg1 componentRange:(struct _NSRange)arg2 forAddingLeafNode:(id)arg3 create:(_Bool)arg4;
- (id)descendantAtPath:(id)arg1 componentRange:(struct _NSRange)arg2 create:(_Bool)arg3;
- (id)normalizationOfChildName:(id)arg1;
- (void)removeSelfIfUseless;
- (void)removeChildForNormalizedName:(id)arg1;
- (void)setChild:(id)arg1 forName:(id)arg2 normalizedName:(id)arg3;
- (id)pathToDescendantForFileURL:(id)arg1 componentRange:(struct _NSRange *)arg2;
- (void)dealloc;
- (void)setSymbolicLinkDestination:(id)arg1;
- (id)initWithParent:(id)arg1 name:(id)arg2 normalizedName:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface NSFileAttributes : NSDictionary
{
    NSMutableDictionary *dict;
    struct stat statInfo;
    struct {
        _Bool extensionHidden;
        NSDate *creationDate;
        struct _fields {
            unsigned int extensionHidden:1;
            unsigned int creationDate:1;
            unsigned int reserved:30;
        } validFields;
    } catInfo;
    NSDictionary *extendedAttrs;
}

+ (id)attributesWithStat:(struct stat *)arg1;
+ (id)_attributesAtURL:(id)arg1 partialReturn:(_Bool)arg2 filterResourceFork:(_Bool)arg3 error:(id *)arg4;
+ (id)_attributesAtPath:(id)arg1 partialReturn:(_Bool)arg2 filterResourceFork:(_Bool)arg3 error:(id *)arg4;
+ (id)attributesAtPath:(id)arg1 traverseLink:(_Bool)arg2;
- (_Bool)isDirectory;
- (unsigned long long)fileSystemFileNumber;
- (long long)fileSystemNumber;
- (unsigned long long)fileGroupOwnerAccountNumber;
- (id)fileGroupOwnerAccountName;
- (unsigned long long)fileOwnerAccountNumber;
- (id)fileOwnerAccountName;
- (unsigned long long)filePosixPermissions;
- (id)fileType;
- (id)fileModificationDate;
- (unsigned long long)fileSize;
- (id)keyEnumerator;
- (unsigned long long)count;
- (id)objectForKey:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)dealloc;

@end

@interface NSFileCoordinator : NSObject
{
    id _accessArbiter;
    id _fileReactor;
    id _purposeID;
    NSURL *_recentFilePresenterURL;
    id _accessClaimIDOrIDs;
    _Bool _isCancelled;
    NSMutableDictionary *_movedItems;
}

+ (id)_canonicalURLForURL:(id)arg1;
+ (id)filePresenters;
+ (void)removeFilePresenter:(id)arg1;
+ (void)addFilePresenter:(id)arg1;
+ (void)_printDebugInfo;
+ (id)_currentFileCoordinator;
+ (id)_fileProviders;
+ (void)_removeFileProvider:(id)arg1;
+ (void)_addFileProvider:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
+ (void)_addFileProvider:(id)arg1;
+ (void)__itemAtURL:(id)arg1 didResolveConflictVersionWithClientID:(id)arg2 name:(id)arg3 purposeID:(id)arg4;
+ (void)__itemAtURL:(id)arg1 didLoseVersionWithClientID:(id)arg2 name:(id)arg3 purposeID:(id)arg4;
+ (void)__itemAtURL:(id)arg1 didGainVersionWithClientID:(id)arg2 name:(id)arg3 purposeID:(id)arg4;
+ (void)__itemAtURL:(id)arg1 didDisappearWithPurposeID:(id)arg2;
+ (void)__itemAtURL:(id)arg1 didChangeUbiquityWithPurposeID:(id)arg2;
+ (void)__itemAtURL:(id)arg1 didReconnectWithPurposeID:(id)arg2;
+ (void)__itemAtURL:(id)arg1 didDisconnectWithPurposeID:(id)arg2;
+ (void)__itemAtURL:(id)arg1 didMoveToURL:(id)arg2 purposeID:(id)arg3;
+ (_Bool)_skipCoordinationWork;
+ (void)_removeProcessIdentifierForID:(id)arg1;
+ (void)_addProcessIdentifier:(int)arg1 forID:(id)arg2;
+ (void)_accessProcessIdentifiersUsingBlock:(CDUnknownBlockType)arg1;
+ (int)_processIdentifierForID:(id)arg1;
+ (int)_processIdentifierForPresenterWithID:(id)arg1;
- (void)cancel;
- (void)itemAtURL:(id)arg1 didMoveToURL:(id)arg2;
- (void)itemAtURL:(id)arg1 willMoveToURL:(id)arg2;
- (void)prepareForReadingItemsAtURLs:(id)arg1 options:(unsigned long long)arg2 writingItemsAtURLs:(id)arg3 options:(unsigned long long)arg4 error:(id *)arg5 byAccessor:(CDUnknownBlockType)arg6;
- (void)coordinateAccessWithIntents:(id)arg1 queue:(id)arg2 byAccessor:(CDUnknownBlockType)arg3;
- (void)coordinateWritingItemAtURL:(id)arg1 options:(unsigned long long)arg2 writingItemAtURL:(id)arg3 options:(unsigned long long)arg4 error:(id *)arg5 byAccessor:(CDUnknownBlockType)arg6;
- (void)coordinateReadingItemAtURL:(id)arg1 options:(unsigned long long)arg2 writingItemAtURL:(id)arg3 options:(unsigned long long)arg4 error:(id *)arg5 byAccessor:(CDUnknownBlockType)arg6;
- (void)coordinateWritingItemAtURL:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3 byAccessor:(CDUnknownBlockType)arg4;
- (void)coordinateReadingItemAtURL:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3 byAccessor:(CDUnknownBlockType)arg4;
- (void)_invokeAccessor:(CDUnknownBlockType)arg1 thenCompletionHandler:(CDUnknownBlockType)arg2;
@property(copy) NSString *purposeIdentifier;
- (void)dealloc;
- (id)initWithFilePresenter:(id)arg1;
- (id)init;
- (void)releaseAccess:(id)arg1;
- (id)retainAccess;
- (void)_setPurposeIdentifier:(id)arg1;
- (_Bool)_purposeIdentifierLockedDown;
- (void)_lockdownPurposeIdentifier;
- (void)_setFileProvider:(id)arg1;
- (void)__prepareForReadingItemsAtURLs:(id)arg1 options:(unsigned long long)arg2 writingItemsAtURLs:(id)arg3 options:(unsigned long long)arg4 byAccessor:(CDUnknownBlockType)arg5;
- (void)__coordinateWritingItemAtURL:(id)arg1 options:(unsigned long long)arg2 writingItemAtURL:(id)arg3 options:(unsigned long long)arg4 purposeID:(id)arg5 byAccessor:(CDUnknownBlockType)arg6;
- (void)__coordinateReadingItemAtURL:(id)arg1 options:(unsigned long long)arg2 writingItemAtURL:(id)arg3 options:(unsigned long long)arg4 purposeID:(id)arg5 byAccessor:(CDUnknownBlockType)arg6;
- (void)__coordinateWritingItemAtURL:(id)arg1 options:(unsigned long long)arg2 purposeID:(id)arg3 byAccessor:(CDUnknownBlockType)arg4;
- (void)__coordinateReadingItemAtURL:(id)arg1 options:(unsigned long long)arg2 purposeID:(id)arg3 byAccessor:(CDUnknownBlockType)arg4;
- (void)_itemDidDisappearAtURL:(id)arg1;
- (void)_ubiquityDidChangeForItemAtURL:(id)arg1;
- (void)_itemAtURL:(id)arg1 didMoveToURL:(id)arg2;
- (void)_itemAtURL:(id)arg1 willMoveToURL:(id)arg2;
- (void)_coordinateAccessWithIntents:(id)arg1 queue:(id)arg2 byAccessor:(CDUnknownBlockType)arg3;
- (void)_coordinateWritingItemAtURL:(id)arg1 options:(unsigned long long)arg2 writingItemAtURL:(id)arg3 options:(unsigned long long)arg4 error:(id *)arg5 byAccessor:(CDUnknownBlockType)arg6;
- (void)_coordinateReadingItemAtURL:(id)arg1 options:(unsigned long long)arg2 writingItemAtURL:(id)arg3 options:(unsigned long long)arg4 error:(id *)arg5 byAccessor:(CDUnknownBlockType)arg6;
- (void)_coordinateWritingItemAtURL:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3 byAccessor:(CDUnknownBlockType)arg4;
- (void)_coordinateReadingItemAtURL:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3 byAccessor:(CDUnknownBlockType)arg4;
- (void)_invokeAccessor:(CDUnknownBlockType)arg1 orDont:(_Bool)arg2 andRelinquishAccessClaim:(id)arg3;
- (void)_didEndWrite:(id)arg1;
- (id)_willStartWriteWithIntents:(id)arg1 async:(_Bool)arg2;
- (void)_blockOnAccessClaim:(id)arg1;
- (void)_forgetAccessClaimForID:(id)arg1;
- (void)_requestAccessClaim:(id)arg1 withProcedure:(CDUnknownBlockType)arg2;

@end

__attribute__((visibility("hidden")))
@interface NSFileCoordinatorAccessorBlockCompletion : NSObject
{
    CDUnknownBlockType block;
    int count;
}

+ (id)completionWithBlock:(CDUnknownBlockType)arg1;
- (void)decrement;
- (void)increment;
- (void)dealloc;

@end

@interface NSFileManager : NSObject
{
}

+ (id)defaultManager;
- (id)containerURLForSecurityApplicationGroupIdentifier:(id)arg1;
- (void)_registerForUbiquityAccountChangeNotifications;
@property(readonly, copy) id <NSObject><NSCopying><NSCoding> ubiquityIdentityToken;
- (_Bool)_processHasUbiquityContainerEntitlement;
- (id)URLForPublishingUbiquitousItemAtURL:(id)arg1 expirationDate:(id *)arg2 error:(id *)arg3;
- (id)URLForUbiquityContainerIdentifier:(id)arg1;
- (_Bool)evictUbiquitousItemAtURL:(id)arg1 error:(id *)arg2;
- (_Bool)isUbiquitousItemAtURL:(id)arg1;
- (_Bool)setUbiquitous:(_Bool)arg1 itemAtURL:(id)arg2 destinationURL:(id)arg3 error:(id *)arg4;
- (_Bool)startDownloadingUbiquitousItemAtURL:(id)arg1 error:(id *)arg2;
- (_Bool)replaceItemAtURL:(id)arg1 withItemAtURL:(id)arg2 backupItemName:(id)arg3 options:(unsigned long long)arg4 resultingItemURL:(id *)arg5 error:(id *)arg6;
- (id)destinationOfSymbolicLinkAtPath:(id)arg1 error:(id *)arg2;
- (_Bool)createSymbolicLinkAtURL:(id)arg1 withDestinationURL:(id)arg2 error:(id *)arg3;
- (_Bool)createSymbolicLinkAtPath:(id)arg1 withDestinationPath:(id)arg2 error:(id *)arg3;
- (id)attributesOfFileSystemForPath:(id)arg1 error:(id *)arg2;
- (id)_attributesOfItemAtURL:(id)arg1 filterResourceFork:(_Bool)arg2 error:(id *)arg3;
- (id)_attributesOfItemAtPath:(id)arg1 filterResourceFork:(_Bool)arg2 error:(id *)arg3;
- (id)attributesOfItemAtPath:(id)arg1 error:(id *)arg2;
- (id)subpathsOfDirectoryAtPath:(id)arg1 error:(id *)arg2;
- (id)contentsOfDirectoryAtPath:(id)arg1 error:(id *)arg2;
- (_Bool)createDirectoryAtURL:(id)arg1 withIntermediateDirectories:(_Bool)arg2 attributes:(id)arg3 error:(id *)arg4;
- (_Bool)createDirectoryAtPath:(id)arg1 withIntermediateDirectories:(_Bool)arg2 attributes:(id)arg3 error:(id *)arg4;
- (_Bool)setAttributes:(id)arg1 ofItemAtPath:(id)arg2 error:(id *)arg3;
- (_Bool)trashItemAtURL:(id)arg1 resultingItemURL:(id *)arg2 error:(id *)arg3;
- (_Bool)removeItemAtURL:(id)arg1 error:(id *)arg2;
- (_Bool)removeItemAtPath:(id)arg1 error:(id *)arg2;
- (_Bool)filesystemItemRemoveOperation:(id)arg1 shouldProceedAfterError:(id)arg2 removingItemAtPath:(id)arg3;
- (_Bool)filesystemItemRemoveOperation:(id)arg1 shouldRemoveItemAtPath:(id)arg2;
- (_Bool)linkItemAtURL:(id)arg1 toURL:(id)arg2 error:(id *)arg3;
- (_Bool)linkItemAtPath:(id)arg1 toPath:(id)arg2 error:(id *)arg3;
- (_Bool)filesystemItemLinkOperation:(id)arg1 shouldProceedAfterError:(id)arg2 linkingItemAtPath:(id)arg3 toPath:(id)arg4;
- (_Bool)filesystemItemLinkOperation:(id)arg1 shouldLinkItemAtPath:(id)arg2 toPath:(id)arg3;
- (_Bool)moveItemAtURL:(id)arg1 toURL:(id)arg2 error:(id *)arg3;
- (_Bool)moveItemAtPath:(id)arg1 toPath:(id)arg2 error:(id *)arg3;
- (_Bool)filesystemItemMoveOperation:(id)arg1 shouldProceedAfterError:(id)arg2 movingItemAtPath:(id)arg3 toPath:(id)arg4;
- (_Bool)filesystemItemMoveOperation:(id)arg1 shouldMoveItemAtPath:(id)arg2 toPath:(id)arg3;
- (_Bool)copyItemAtURL:(id)arg1 toURL:(id)arg2 error:(id *)arg3;
- (_Bool)copyItemAtPath:(id)arg1 toPath:(id)arg2 error:(id *)arg3;
- (_Bool)filesystemItemCopyOperation:(id)arg1 shouldProceedAfterError:(id)arg2 copyingItemAtPath:(id)arg3 toPath:(id)arg4;
- (_Bool)filesystemItemCopyOperation:(id)arg1 shouldCopyItemAtPath:(id)arg2 toPath:(id)arg3;
@property id <NSFileManagerDelegate> delegate;
- (void)dealloc;
- (_Bool)setExtendedAttribute:(id)arg1 forKey:(id)arg2 atPath:(id)arg3 error:(id *)arg4;
- (_Bool)removeExtendedAttributeForKey:(id)arg1 atPath:(id)arg2 error:(id *)arg3;
- (id)extendedAttributeForKey:(id)arg1 atPath:(id)arg2 error:(id *)arg3;
- (id)extendedAttributesAtPath:(id)arg1 error:(id *)arg2;
- (id)componentsToDisplayForPath:(id)arg1;
- (id)stringWithFileSystemRepresentation:(const char *)arg1 length:(unsigned long long)arg2;
- (const char *)fileSystemRepresentationWithPath:(id)arg1;
- (_Bool)getFileSystemRepresentation:(char *)arg1 maxLength:(unsigned long long)arg2 withPath:(id)arg3;
- (id)fileSystemAttributesAtPath:(id)arg1;
- (_Bool)contentsEqualAtPath:(id)arg1 andPath:(id)arg2;
- (id)contentsAtPath:(id)arg1;
- (_Bool)createFileAtPath:(id)arg1 contents:(id)arg2 attributes:(id)arg3;
- (_Bool)createSymbolicLinkAtPath:(id)arg1 pathContent:(id)arg2;
- (id)pathContentOfSymbolicLinkAtPath:(id)arg1;
- (_Bool)createDirectoryAtPath:(id)arg1 attributes:(id)arg2;
- (id)subpathsAtPath:(id)arg1;
- (id)enumeratorAtPath:(id)arg1;
- (id)directoryContentsAtPath:(id)arg1;
- (id)directoryContentsAtPath:(id)arg1 matchingExtension:(id)arg2 options:(long long)arg3 keepExtension:(_Bool)arg4;
- (id)directoryContentsAtPath:(id)arg1 matchingExtension:(id)arg2 options:(long long)arg3 keepExtension:(_Bool)arg4 error:(id *)arg5;
- (_Bool)removeFileAtPath:(id)arg1 handler:(id)arg2;
- (id)displayNameAtPath:(id)arg1;
- (_Bool)isDeletableFileAtPath:(id)arg1;
- (_Bool)isExecutableFileAtPath:(id)arg1;
- (_Bool)isWritableFileAtPath:(id)arg1;
- (_Bool)isReadableFileAtPath:(id)arg1;
- (_Bool)fileExistsAtPath:(id)arg1 isDirectory:(_Bool *)arg2;
- (_Bool)fileExistsAtPath:(id)arg1;
- (_Bool)changeFileAttributes:(id)arg1 atPath:(id)arg2;
- (id)fileAttributesAtPath:(id)arg1 traverseLink:(_Bool)arg2;
- (_Bool)changeCurrentDirectoryPath:(id)arg1;
@property(readonly, copy) NSString *currentDirectoryPath;
- (_Bool)directoryCanBeCreatedAtPath:(id)arg1;
- (id)_displayPathForPath:(id)arg1;
- (long long)relationshipOfDirectory:(unsigned long long)arg1 inDomain:(unsigned long long)arg2 toURL:(id)arg3 error:(id *)arg4;
- (long long)relationshipOfURL:(id)arg1 toURL:(id)arg2 error:(id *)arg3;
- (_Bool)getRelationship:(long long *)arg1 ofDirectory:(unsigned long long)arg2 inDomain:(unsigned long long)arg3 toItemAtURL:(id)arg4 error:(id *)arg5;
- (_Bool)getRelationship:(long long *)arg1 ofDirectoryAtURL:(id)arg2 toItemAtURL:(id)arg3 error:(id *)arg4;
- (id)URLForDirectory:(unsigned long long)arg1 inDomain:(unsigned long long)arg2 appropriateForURL:(id)arg3 create:(_Bool)arg4 error:(id *)arg5;
- (id)_URLForTrashingItemAtURL:(id)arg1 create:(_Bool)arg2 error:(id *)arg3;
- (id)_URLForReplacingItemAtURL:(id)arg1 error:(id *)arg2;
- (id)URLsForDirectory:(unsigned long long)arg1 inDomains:(unsigned long long)arg2;
- (id)contentsOfDirectoryAtURL:(id)arg1 includingPropertiesForKeys:(id)arg2 options:(unsigned long long)arg3 error:(id *)arg4;
- (id)enumeratorAtURL:(id)arg1 includingPropertiesForKeys:(id)arg2 options:(unsigned long long)arg3 errorHandler:(CDUnknownBlockType)arg4;
- (id)mountedVolumeURLsIncludingResourceValuesForKeys:(id)arg1 options:(unsigned long long)arg2;
- (id)_info;
- (id)_web_pathWithUniqueFilenameForPath:(id)arg1;
- (id)_web_visibleItemsInDirectoryAtPath:(id)arg1;
- (void)_web_backgroundRemoveLeftoverFiles:(id)arg1;
- (_Bool)_web_removeFileOnlyAtPath:(id)arg1;
- (void)_web_backgroundRemoveFileAtPath:(id)arg1;
- (void)_performRemoveFileAtPath:(id)arg1;
- (_Bool)_web_createFileAtPath:(id)arg1 contents:(id)arg2 attributes:(id)arg3;
- (_Bool)_web_changeFinderAttributes:(id)arg1 forFileAtPath:(id)arg2;
- (_Bool)_web_createFileAtPathWithIntermediateDirectories:(id)arg1 contents:(id)arg2 attributes:(id)arg3 directoryAttributes:(id)arg4;
- (_Bool)_web_createDirectoryAtPathWithIntermediateDirectories:(id)arg1 attributes:(id)arg2;
- (_Bool)_web_changeFileAttributes_nowarn:(id)arg1 atPath:(id)arg2;
- (void)_web_noteFileChangedAtPath_nowarn:(id)arg1;
- (_Bool)_web_createIntermediateDirectoriesForPath_nowarn:(id)arg1 attributes:(id)arg2;
- (id)_web_startupVolumeName_nowarn;
- (id)_web_carbonPathForPath_nowarn:(id)arg1;
- (_Bool)_web_fileExistsAtPath_nowarn:(id)arg1 isDirectory:(_Bool *)arg2 traverseLink:(_Bool)arg3;

@end

__attribute__((visibility("hidden")))
@interface NSFileMultipleAccessClaim : NSFileAccessClaim
{
    NSMutableArray *_readingURLs;
    unsigned long long *_readingOptions;
    _Bool *_readingURLsDidChange;
    NSMutableArray *_writingURLs;
    unsigned long long *_writingOptions;
    _Bool *_writingURLsDidChange;
    NSMutableArray *_readingLocations;
    NSMutableArray *_writingLocations;
    NSFileAccessNode *_rootNode;
    unsigned long long _currentlyLinkResolvingURLIndex;
    long long _readingLinkResolutionCount;
}

- (_Bool)shouldBeRevokedPriorToInvokingAccessor;
- (_Bool)blocksClaim:(id)arg1;
- (void)itemAtLocation:(id)arg1 wasReplacedByItemAtLocation:(id)arg2;
- (void)devalueSelf;
- (void)invokeClaimer;
- (void)resolveURLsThenMaybeContinueInvokingClaimer:(CDUnknownBlockType)arg1;
- (void)granted;
- (_Bool)isBlockedByWritingItemAtLocation:(id)arg1 options:(unsigned long long)arg2;
- (_Bool)isBlockedByReadingItemAtLocation:(id)arg1 options:(unsigned long long)arg2;
- (_Bool)evaluateSelfWithRootNode:(id)arg1 checkSubarbitrability:(_Bool)arg2;
- (void)forwardUsingMessageSender:(CDUnknownBlockType)arg1 crashHandler:(CDUnknownBlockType)arg2;
- (void)finalize;
- (void)dealloc;
- (id)initWithClient:(id)arg1 messageParameters:(id)arg2 replySender:(CDUnknownBlockType)arg3;
- (id)initWithPurposeID:(id)arg1 intents:(id)arg2 claimer:(CDUnknownBlockType)arg3;

@end

__attribute__((visibility("hidden")))
@interface NSFilePresenterOperationRecord : NSObject
{
    NSString *operationDescription;
    long long state;
    id reactor;
}

+ (id)operationRecordWithDescription:(id)arg1;
@property id reactor; // @synthesize reactor;
@property(readonly) long long state; // @synthesize state;
@property(readonly) NSString *operationDescription; // @synthesize operationDescription;
- (id)description;
- (void)didEnd;
- (void)willEnd;
- (void)didBegin;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface NSFileReactorProxy : NSObject
{
    NSObject<OS_xpc_object> *_client;
    id _reactorID;
    CDUnknownBlockType _messageSender;
    NSFileAccessNode *_itemLocation;
}

- (void)collectDebuggingInformationWithCompletionHandler:(CDUnknownBlockType)arg1;
- (id)description;
- (id)descriptionWithIndenting:(id)arg1;
- (void)forwardUsingMessageSender:(CDUnknownBlockType)arg1;
- (id)itemLocation;
- (void)setItemLocation:(id)arg1;
- (CDUnknownBlockType)messageSender;
- (id)reactorID;
- (id)client;
- (void)finalize;
- (void)dealloc;
- (id)initWithClient:(id)arg1 reactorID:(id)arg2 messageSender:(CDUnknownBlockType)arg3;

@end

__attribute__((visibility("hidden")))
@interface NSFilePresenterProxy : NSFileReactorProxy
{
    NSObject<OS_dispatch_queue> *_queue;
    NSFileWatcher *_watcher;
    unsigned long long _writingRelinquishmentCount;
    id _currentWriterPurposeID;
    NSMutableArray *_previousWriterPurposeIDs;
    _Bool _didObserveMovingByWriter;
    _Bool _didObserveVersionChangingByWriter;
    _Bool _disconnected;
    _Bool _inSubarbiter;
}

+ (id)urlWithItemURL:(id)arg1 subitemPath:(id)arg2;
@property _Bool inSubarbiter; // @synthesize inSubarbiter=_inSubarbiter;
@property(readonly) _Bool disconnected;
- (void)disconnect;
- (void)forwardObservationMessageWithKind:(id)arg1 parameters:(id)arg2;
- (void)forwardRelinquishmentMessageWithKind:(id)arg1 parameters:(id)arg2 resultHandler:(CDUnknownBlockType)arg3;
- (void)observeVersionChangeOfKind:(id)arg1 withClientID:(id)arg2 name:(id)arg3 subitemPath:(id)arg4;
- (void)observeDisappearanceAtSubitemPath:(id)arg1;
- (void)observeUbiquityChangeAtSubitemPath:(id)arg1 withPhysicalURL:(id)arg2;
- (void)observeReconnectionByWriterWithPurposeID:(id)arg1;
- (void)observeDisconnectionByWriterWithPurposeID:(id)arg1;
- (void)observeMoveOfSubitemAtURL:(id)arg1 toURL:(id)arg2 byWriterWithPurposeID:(id)arg3;
- (void)observeMoveByWriterWithPurposeID:(id)arg1;
- (void)accommodateDeletionWithSubitemPath:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)saveChangesWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)relinquishToWritingClaimWithID:(id)arg1 options:(unsigned long long)arg2 purposeID:(id)arg3 subitemPath:(id)arg4 resultHandler:(CDUnknownBlockType)arg5;
- (void)relinquishToReadingClaimWithID:(id)arg1 options:(unsigned long long)arg2 purposeID:(id)arg3 resultHandler:(CDUnknownBlockType)arg4;
- (void)startWatchingWithQueue:(id)arg1 lastEventID:(id)arg2 unannouncedMoveHandler:(CDUnknownBlockType)arg3;
- (void)forwardUsingMessageSender:(CDUnknownBlockType)arg1;
- (void)setItemLocation:(id)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface NSFilePresenterRelinquishment : NSObject
{
    NSCountedSet *_blockingAccessClaimIDs;
    CDUnknownBlockType _reacquirer;
}

- (void)removeAllBlockingAccessClaimIDs;
- (void)removeBlockingAccessClaimID:(id)arg1;
- (void)removeBlockingAccessClaimID:(id)arg1 thenContinue:(CDUnknownBlockType)arg2;
- (void)setReacquirer:(CDUnknownBlockType)arg1;
- (_Bool)addBlockingAccessClaimID:(id)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface NSFilePromiseWriteToken : NSObject
{
    NSURL *promiseURL;
    NSURL *logicalURL;
}

@property(copy) NSURL *logicalURL; // @synthesize logicalURL;
@property(copy) NSURL *promiseURL; // @synthesize promiseURL;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface NSFileProviderProxy : NSFileReactorProxy
{
    _Bool _wantsWriteNotifications;
}

@property _Bool wantsWriteNotifications; // @synthesize wantsWriteNotifications=_wantsWriteNotifications;
- (void)observeEndOfWriteAtLocation:(id)arg1 forAccessClaim:(id)arg2;
- (void)observePresentationChangeOfKind:(id)arg1 withPresenter:(id)arg2 url:(id)arg3 newURL:(id)arg4;
- (void)provideLogicalURLForURL:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)providePhysicalURLForURL:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (CDUnknownBlockType)provideItemAtURL:(id)arg1 forAccessClaim:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)forwardUsingMessageSender:(CDUnknownBlockType)arg1;
- (void)setItemLocation:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface NSFileReadingClaim : NSFileAccessClaim
{
    NSURL *_url;
    _Bool _urlDidChange;
    unsigned long long _options;
    NSFileAccessNode *_location;
    NSFileAccessNode *_rootNode;
    long long _linkResolutionCount;
}

- (_Bool)shouldBeRevokedPriorToInvokingAccessor;
- (_Bool)blocksClaim:(id)arg1;
- (void)itemAtLocation:(id)arg1 wasReplacedByItemAtLocation:(id)arg2;
- (void)devalueSelf;
- (void)invokeClaimer;
- (void)resolveURLThenMaybeContinueInvokingClaimer:(CDUnknownBlockType)arg1;
- (void)granted;
- (_Bool)isBlockedByWritingItemAtLocation:(id)arg1 options:(unsigned long long)arg2;
- (_Bool)isBlockedByReadingItemAtLocation:(id)arg1 options:(unsigned long long)arg2;
- (_Bool)evaluateSelfWithRootNode:(id)arg1 checkSubarbitrability:(_Bool)arg2;
- (void)forwardUsingMessageSender:(CDUnknownBlockType)arg1 crashHandler:(CDUnknownBlockType)arg2;
- (void)dealloc;
- (id)initWithClient:(id)arg1 messageParameters:(id)arg2 replySender:(CDUnknownBlockType)arg3;
- (id)initWithPurposeID:(id)arg1 url:(id)arg2 options:(unsigned long long)arg3 claimer:(CDUnknownBlockType)arg4;

@end

__attribute__((visibility("hidden")))
@interface NSFileReadingWritingClaim : NSFileAccessClaim
{
    NSURL *_readingURL;
    _Bool _readingURLDidChange;
    unsigned long long _readingOptions;
    NSURL *_writingURL;
    _Bool _writingURLDidChange;
    unsigned long long _writingOptions;
    NSFileAccessNode *_readingLocation;
    NSFileAccessNode *_writingLocation;
    NSFileAccessNode *_rootNode;
    long long _readingLinkResolutionCount;
}

- (_Bool)blocksClaim:(id)arg1;
- (void)itemAtLocation:(id)arg1 wasReplacedByItemAtLocation:(id)arg2;
- (void)devalueSelf;
- (void)invokeClaimer;
- (void)resolveURLsThenMaybeContinueInvokingClaimer:(CDUnknownBlockType)arg1;
- (void)granted;
- (_Bool)isBlockedByWritingItemAtLocation:(id)arg1 options:(unsigned long long)arg2;
- (_Bool)isBlockedByReadingItemAtLocation:(id)arg1 options:(unsigned long long)arg2;
- (_Bool)evaluateSelfWithRootNode:(id)arg1 checkSubarbitrability:(_Bool)arg2;
- (void)forwardUsingMessageSender:(CDUnknownBlockType)arg1 crashHandler:(CDUnknownBlockType)arg2;
- (void)dealloc;
- (id)initWithClient:(id)arg1 messageParameters:(id)arg2 replySender:(CDUnknownBlockType)arg3;
- (id)initWithPurposeID:(id)arg1 readingURL:(id)arg2 options:(unsigned long long)arg3 writingURL:(id)arg4 options:(unsigned long long)arg5 claimer:(CDUnknownBlockType)arg6;

@end

__attribute__((visibility("hidden")))
@interface NSFileSubarbitrationClaim : NSFileAccessClaim
{
    NSArray *_readingURLs;
    unsigned long long _readingOptions;
    NSArray *_writingURLs;
    unsigned long long _writingOptions;
    CDUnknownBlockType _messageSender;
    NSArray *_readingLocations;
    NSArray *_writingLocations;
    NSFileAccessNode *_rootNode;
    NSMutableSet *_forwardedClaimIDs;
    NSMutableDictionary *_readRelinquishmentsByPresenterID;
    NSMutableDictionary *_writeRelinquishmentsByPresenterID;
}

- (void)forwardReacquisitionMessageWithKind:(id)arg1 parameters:(id)arg2 toPresenterForID:(id)arg3 usingReplySender:(CDUnknownBlockType)arg4;
- (void)forwardRelinquishmentMessageWithKind:(id)arg1 parameters:(id)arg2 toPresenter:(id)arg3 usingReplySender:(CDUnknownBlockType)arg4;
- (id)relinquishmentForMessageOfKind:(id)arg1 toPresenterForID:(id)arg2;
- (void)itemAtLocation:(id)arg1 wasReplacedByItemAtLocation:(id)arg2;
- (void)devalueSelf;
- (void)revoked;
- (void)invokeClaimer;
- (void)granted;
- (_Bool)isBlockedByWritingItemAtLocation:(id)arg1 options:(unsigned long long)arg2;
- (_Bool)isBlockedByReadingItemAtLocation:(id)arg1 options:(unsigned long long)arg2;
- (void)devalueOldClaim:(id)arg1;
- (void)evaluateNewClaim:(id)arg1;
- (_Bool)evaluateSelfWithRootNode:(id)arg1 checkSubarbitrability:(_Bool)arg2;
- (void)forwardUsingMessageSender:(CDUnknownBlockType)arg1 crashHandler:(CDUnknownBlockType)arg2;
- (CDUnknownBlockType)messageSender;
- (void)setMessageSender:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (id)initWithClient:(id)arg1 messageParameters:(id)arg2 replySender:(CDUnknownBlockType)arg3;
- (id)initWithReadingURLs:(id)arg1 options:(unsigned long long)arg2 writingURLs:(id)arg3 options:(unsigned long long)arg4 claimer:(CDUnknownBlockType)arg5;

@end

@interface NSFileVersion : NSObject
{
    NSURL *_fileURL;
    id _addition;
    id _deadVersionIdentifier;
    id _nonLocalVersion;
    NSURL *_contentsURL;
    _Bool _isBackup;
    NSString *_localizedName;
    NSString *_localizedComputerName;
    NSDate *_modificationDate;
    _Bool _isResolved;
    _Bool _contentsURLIsAccessed;
    NSString *_clientID;
    NSString *_name;
    _Bool _discardable;
}

+ (_Bool)removeOtherVersionsOfItemAtURL:(id)arg1 error:(id *)arg2;
+ (id)unresolvedConflictVersionsOfItemAtURL:(id)arg1;
+ (id)_ubiquityOnlyVersionsOfItemAtURL:(id)arg1 includeSaved:(_Bool)arg2;
+ (id)temporaryDirectoryURLForNewVersionOfItemAtURL:(id)arg1;
+ (id)addVersionOfItemAtURL:(id)arg1 withContentsOfURL:(id)arg2 options:(unsigned long long)arg3 error:(id *)arg4;
+ (id)versionOfItemAtURL:(id)arg1 forPersistentIdentifier:(id)arg2;
+ (void)getNonlocalVersionsOfItemAtURL:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
+ (id)otherVersionsOfItemAtURL:(id)arg1;
+ (id)currentVersionOfItemAtURL:(id)arg1;
+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (void)_removeTemporaryDirectoryAtURL:(id)arg1;
+ (id)_versionOfItemAtURL:(id)arg1 forClientID:(id)arg2 name:(id)arg3 temporaryStorageIdentifier:(id)arg4 evenIfDeleted:(_Bool)arg5;
+ (_Bool)_removeOtherVersionsOfItemAtURL:(id)arg1 temporaryStorageIdentifier:(id)arg2 error:(id *)arg3;
+ (id)_temporaryDirectoryURLForNewVersionOfItemAtURL:(id)arg1 temporaryStorageIdentifier:(id)arg2;
+ (id)_addVersionOfItemAtURL:(id)arg1 withContentsOfURL:(id)arg2 options:(unsigned long long)arg3 temporaryStorageIdentifier:(id *)arg4 error:(id *)arg5;
+ (id)_addVersionOfItemAtURL:(id)arg1 withContentsOfURL:(id)arg2 options:(unsigned long long)arg3 userInfo:(id)arg4 temporaryStorageIdentifier:(id *)arg5 error:(id *)arg6;
+ (id)_versionOfItemAtURL:(id)arg1 forPersistentIdentifier:(id)arg2 temporaryStorageIdentifier:(id)arg3;
+ (id)_otherNonpurgeableVersionsOfItemAtURL:(id)arg1 temporaryStorageIdentifier:(id)arg2;
+ (id)_otherVersionsOfItemAtURL:(id)arg1 temporaryStorageIdentifier:(id)arg2;
+ (id)_otherVersionsOfItemAtURL:(id)arg1 temporaryStorageIdentifier:(id)arg2 withoutOptions:(unsigned long long)arg3;
+ (struct NSObject *)_libraryForURL:(id)arg1 temporaryStorageIdentifier:(id *)arg2;
+ (struct NSObject *)_existingLibraryForURL:(id)arg1 temporaryStorageIdentifier:(id)arg2;
+ (_Bool)_permanentVersionStorageSupportedForURL:(id)arg1 temporaryStorageIdentifier:(id *)arg2 error:(id *)arg3;
+ (id)_makeTemporaryStorageIdentifier;
+ (id)_makePermanentStorageLibraryForURL:(id)arg1 temporaryStorageRequired:(_Bool *)arg2 error:(id *)arg3;
+ (_Bool)_isTemporaryStorageRequiredForGSError:(id)arg1 andURL:(id)arg2;
+ (id)_supportedGenerationalStorageClientIDs;
+ (id)_temporaryStorageLocationForIdentifier:(id)arg1;
+ (id)_autosaveDirectoryURLCreateIfNecessary:(_Bool)arg1;
+ (void)discoverUbiquitousVersionsOfItemAtURL:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
+ (void)_removeConflictObserver:(void *)arg1;
+ (void *)_addConflictObserverForItemAtURL:(id)arg1 statusChangedHandler:(CDUnknownBlockType)arg2;
+ (void)_markConflicts:(id)arg1 asHandledForItemAtURL:(id)arg2;
+ (_Bool)_conflictsExistForItemAtURL:(id)arg1;
+ (_Bool)unresolvedConflictsExistForItemAtURL:(id)arg1;
+ (id)versionsOfItemAtURL:(id)arg1;
@property(getter=isDiscardable) _Bool discardable; // @synthesize discardable=_discardable;
- (_Bool)removeAndReturnError:(id *)arg1;
- (id)replaceItemAtURL:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;
- (id)_oldReplaceItemAtURL:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;
@property(getter=isResolved) _Bool resolved;
@property(readonly) _Bool hasThumbnail;
@property(readonly) _Bool hasLocalContents;
@property(readonly, getter=isUbiquitous) _Bool ubiquitous;
@property(readonly, getter=isConflict) _Bool conflict;
@property(readonly, retain) id <NSCoding> persistentIdentifier;
@property(readonly) unsigned long long size;
@property(readonly, copy) NSDate *modificationDate;
@property(readonly, copy) NSString *localizedNameOfSavingComputer;
@property(readonly, copy) NSString *localizedName;
@property(readonly, copy) NSString *originalPOSIXName;
@property(readonly, copy) NSURL *URL;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)init;
- (_Bool)_preserveConflictVersionLocally;
@property(readonly, getter=_isBackup) _Bool _isBackup;
- (void)_overrideModificationDateWithDate:(id)arg1;
- (_Bool)_setDocumentInfo:(id)arg1;
- (id)_documentInfo;
- (id)_initWithFileURL:(id)arg1 nonLocalVersion:(id)arg2;
- (id)_initWithAddition:(id)arg1;
- (id)_initWithFileURL:(id)arg1 library:(id)arg2 clientID:(id)arg3 name:(id)arg4 contentsURL:(id)arg5 isBackup:(_Bool)arg6 revision:(id)arg7;
- (id)restoreOverItemAtURL:(id)arg1 error:(id *)arg2;

@end

__attribute__((visibility("hidden")))
@interface NSFileWatcher : NSObject
{
    NSObject<OS_dispatch_queue> *_queue;
    NSURL *_url;
    CDUnknownBlockType _observer;
    _Bool _isWatching;
    NSObject<OS_dispatch_source> *_eventSource;
    unsigned long long _lastObservedEventID;
    struct __FSEventStream *_eventStream;
    _Bool _eventsAreAboutDirectory;
    _Bool _isUnsettled;
    NSFileWatcherObservations *_itemObservations;
    NSMutableDictionary *_subitemObservationsByEventPath;
    NSURL *_fileReferenceURL;
    NSString *_formerPath;
    NSURL *_formerURL;
}

- (void)stop;
- (void)settle;
- (void)_coalesceSubitemObservations;
- (void)unsettle;
- (void)start;
- (void)setObserver:(CDUnknownBlockType)arg1;
- (void)setLastObservedEventID:(unsigned long long)arg1;
- (void)setURL:(id)arg1;
- (void)watchItem;
- (void)handleFSEventPath:(id)arg1 flags:(unsigned int)arg2 id:(unsigned long long)arg3;
- (void)dealloc;
- (id)initWithQueue:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface NSFileWatcherObservations : NSObject
{
    _Bool _attributesChanged;
    _Bool _contentsChanged;
    _Bool _deleted;
    _Bool _moved;
    NSString *_lastObservedPath;
    _Bool _didResetPath;
    NSString *_path;
}

- (void)notifyObserver:(CDUnknownBlockType)arg1;
- (id)description;
- (void)addAnnouncedMoveToPath:(id)arg1;
- (void)addDetectedMoveToPath:(id)arg1;
- (void)addDeletion;
- (void)addContentsChange;
- (void)addAttributeChange;
- (void)dealloc;
- (id)initWithPath:(id)arg1;

@end

@interface NSFileWrapper : NSObject <NSCoding>
{
    NSDictionary *_fileAttributes;
    NSString *_preferredFileName;
    NSString *_fileName;
    id _contents;
    id _icon;
    id _moreVars;
}

+ (id)_newContentsAtURL:(id)arg1 path:(id)arg2 itemKind:(id)arg3 oldChildrenByUniqueFileName:(id)arg4 options:(unsigned long long)arg5 error:(id *)arg6;
+ (_Bool)_canSafelyMapFilesAtPath:(id)arg1;
+ (_Bool)_forPath:(id)arg1 getItemKind:(id *)arg2 modificationDate:(id *)arg3;
+ (void)initialize;
+ (void)_removeTemporaryDirectoryAtURL:(id)arg1;
+ (_Bool)_finishWritingToURL:(id)arg1 byTakingContentsFromItemAtURL:(id)arg2 addingAttributes:(id)arg3 usingTemporaryDirectoryAtURL:(id)arg4 backupFileName:(id)arg5 error:(id *)arg6;
+ (_Bool)_finishWritingToURL:(id)arg1 byMovingItemAtURL:(id)arg2 addingAttributes:(id)arg3 error:(id *)arg4;
+ (void)_writeAttributes:(id)arg1 toURL:(id)arg2;
+ (id)_temporaryDirectoryURLForWritingToURL:(id)arg1 error:(id *)arg2;
+ (id)_pathForURL:(id)arg1 reading:(_Bool)arg2 error:(id *)arg3;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
@property(readonly, copy) NSURL *symbolicLinkDestinationURL;
@property(readonly, copy) NSData *regularFileContents;
- (id)keyForFileWrapper:(id)arg1;
@property(readonly, copy) NSDictionary *fileWrappers;
- (void)removeFileWrapper:(id)arg1;
- (void)_removeChild:(id)arg1 forUniqueFileName:(id)arg2;
- (id)_uniqueFileNameOfChild:(id)arg1;
- (id)addRegularFileWithContents:(id)arg1 preferredFilename:(id)arg2;
- (id)addFileWrapper:(id)arg1;
- (void)_resetFileModificationDate;
- (id)_addChild:(id)arg1 forUniqueFileName:(id)arg2;
- (void)_initDirectoryContents;
- (void)_removeParent:(id)arg1;
- (void)_addParent:(id)arg1;
@property(readonly, copy) NSData *serializedRepresentation;
- (id)_newImpl;
- (id)_initWithImpl:(id)arg1 preferredFileName:(id)arg2 uniqueFileName:(id)arg3 docInfo:(id)arg4 iconData:(id)arg5;
- (_Bool)writeToURL:(id)arg1 options:(unsigned long long)arg2 originalContentsURL:(id)arg3 error:(id *)arg4;
- (void)_updateDescendantFileNames;
- (id)_attributesToWrite;
- (_Bool)_writeContentsToURL:(id)arg1 path:(id)arg2 originalContentsURL:(id)arg3 tryHardLinking:(_Bool)arg4 didHardLinking:(_Bool *)arg5 error:(id *)arg6;
- (void)_forWritingToURL:(id)arg1 returnContentsLazyReadingError:(id *)arg2;
- (_Bool)readFromURL:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;
- (_Bool)_readContentsFromURL:(id)arg1 path:(id)arg2 itemKind:(id)arg3 options:(unsigned long long)arg4 error:(id *)arg5;
- (_Bool)matchesContentsOfURL:(id)arg1;
- (_Bool)_matchesItemKind:(id)arg1 modificationDate:(id)arg2;
@property(copy) NSDictionary *fileAttributes;
@property(copy) NSString *filename;
@property(copy) NSString *preferredFilename;
- (void)_observePreferredFileNameOfChild:(id)arg1;
@property(readonly, getter=isSymbolicLink) _Bool symbolicLink;
@property(readonly, getter=isRegularFile) _Bool regularFile;
@property(readonly, getter=isDirectory) _Bool directory;
- (void)dealloc;
- (id)initWithSerializedRepresentation:(id)arg1;
- (id)initSymbolicLinkWithDestinationURL:(id)arg1;
- (id)initRegularFileWithContents:(id)arg1;
- (id)initDirectoryWithFileWrappers:(id)arg1;
- (id)initWithURL:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;
- (id)_init;
- (id)init;
- (id)_fullDescription:(_Bool)arg1;

@end

@interface NSFileWrapperMoreIVars : NSObject
{
    NSURL *contentsURL;
    _Bool contentsMustBeReadWithoutMapping;
    _Bool attributesMustBeWrittenSoNoHardLinking;
    NSHashTable *parents;
    NSError *contentsLazyReadingError;
    NSDictionary *cachedDirectoryChildrenAsDictionary;
}

@end

__attribute__((visibility("hidden")))
@interface NSFileWritingClaim : NSFileAccessClaim
{
    NSURL *_url;
    _Bool _urlDidChange;
    unsigned long long _options;
    NSFileAccessNode *_location;
}

- (_Bool)blocksClaim:(id)arg1;
- (void)itemAtLocation:(id)arg1 wasReplacedByItemAtLocation:(id)arg2;
- (void)devalueSelf;
- (void)invokeClaimer;
- (void)resolveURLsThenContinueInvokingClaimer:(CDUnknownBlockType)arg1;
- (void)granted;
- (_Bool)isBlockedByWritingItemAtLocation:(id)arg1 options:(unsigned long long)arg2;
- (_Bool)isBlockedByReadingItemAtLocation:(id)arg1 options:(unsigned long long)arg2;
- (_Bool)evaluateSelfWithRootNode:(id)arg1 checkSubarbitrability:(_Bool)arg2;
- (void)forwardUsingMessageSender:(CDUnknownBlockType)arg1 crashHandler:(CDUnknownBlockType)arg2;
- (void)dealloc;
- (id)initWithClient:(id)arg1 messageParameters:(id)arg2 replySender:(CDUnknownBlockType)arg3;
- (id)initWithPurposeID:(id)arg1 url:(id)arg2 options:(unsigned long long)arg3 claimer:(CDUnknownBlockType)arg4;

@end

__attribute__((visibility("hidden")))
@interface NSFileWritingWritingClaim : NSFileAccessClaim
{
    NSURL *_url1;
    _Bool _url1DidChange;
    unsigned long long _options1;
    NSURL *_url2;
    _Bool _url2DidChange;
    unsigned long long _options2;
    NSFileAccessNode *_location1;
    NSFileAccessNode *_location2;
}

- (_Bool)blocksClaim:(id)arg1;
- (void)itemAtLocation:(id)arg1 wasReplacedByItemAtLocation:(id)arg2;
- (void)devalueSelf;
- (void)invokeClaimer;
- (void)resolveURLsThenContinueInvokingClaimer:(CDUnknownBlockType)arg1;
- (void)granted;
- (_Bool)isBlockedByWritingItemAtLocation:(id)arg1 options:(unsigned long long)arg2;
- (_Bool)isBlockedByReadingItemAtLocation:(id)arg1 options:(unsigned long long)arg2;
- (_Bool)evaluateSelfWithRootNode:(id)arg1 checkSubarbitrability:(_Bool)arg2;
- (void)forwardUsingMessageSender:(CDUnknownBlockType)arg1 crashHandler:(CDUnknownBlockType)arg2;
- (void)dealloc;
- (id)initWithClient:(id)arg1 messageParameters:(id)arg2 replySender:(CDUnknownBlockType)arg3;
- (id)initWithPurposeID:(id)arg1 url:(id)arg2 options:(unsigned long long)arg3 url:(id)arg4 options:(unsigned long long)arg5 claimer:(CDUnknownBlockType)arg6;

@end

__attribute__((visibility("hidden")))
@interface NSFilesystemItemCopyOperation : NSDirectoryTraversalOperation
{
    NSString *_destinationPath;
    NSMutableSet *_skippedPaths;
}

+ (id)filesystemItemCopyOperationWithSourcePath:(id)arg1 destinationPath:(id)arg2;
+ (id)_errorWithErrno:(int)arg1 sourcePath:(id)arg2 destinationPath:(id)arg3;
- (void)dealloc;
- (void)_handleFTSEntry:(struct _ftsent *)arg1;
- (_Bool)_validatePaths:(id *)arg1;
- (_Bool)_shouldProceedAfterErrno:(int)arg1 copyingItemAtPath:(const char *)arg2 toPath:(const char *)arg3;
- (_Bool)shouldProceedAfterError:(id)arg1 copyingItemAtPath:(id)arg2 toPath:(id)arg3;
- (_Bool)_shouldCopyItemAtPath:(const char *)arg1 toPath:(const char *)arg2;
- (_Bool)shouldCopyItemAtPath:(id)arg1 toPath:(id)arg2;
- (void)initWithSourcePath:(id)arg1 destinationPath:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface NSFilesystemItemLinkOperation : NSFilesystemItemCopyOperation
{
}

+ (id)filesystemItemLinkOperationWithSourcePath:(id)arg1 destinationPath:(id)arg2;
+ (_Bool)_needsStatInfo;
+ (id)_errorWithErrno:(int)arg1 sourcePath:(id)arg2 destinationPath:(id)arg3;
- (void)_handleFTSEntry:(struct _ftsent *)arg1;
- (_Bool)_validatePaths:(id *)arg1;
- (_Bool)_shouldLinkItemAtPath:(const char *)arg1 toPath:(const char *)arg2;
- (_Bool)shouldLinkItemAtPath:(id)arg1 toPath:(id)arg2;
- (_Bool)_shouldProceedAfterErrno:(int)arg1 linkingItemAtPath:(const char *)arg2 toPath:(const char *)arg3;
- (_Bool)shouldProceedAfterError:(id)arg1 linkingItemAtPath:(id)arg2 toPath:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface NSFilesystemItemMoveOperation : NSOperation
{
    id _delegate;
    NSString *_sourcePath;
    NSString *_destinationPath;
    NSError *_error;
}

+ (id)filesystemItemMoveOperationWithSourcePath:(id)arg1 destinationPath:(id)arg2;
+ (id)_errorWithErrno:(int)arg1 sourcePath:(id)arg2 destinationPath:(id)arg3;
- (void)main;
- (void)_setError:(id)arg1;
- (id)error;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (_Bool)filesystemItemCopyOperation:(id)arg1 shouldProceedAfterError:(id)arg2 copyingItemAtPath:(id)arg3 toPath:(id)arg4;
- (void)dealloc;
- (void)initWithSourcePath:(id)arg1 destinationPath:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface NSFilesystemItemRemoveOperation : NSOperation
{
    id _delegate;
    NSString *_removePath;
    NSError *_error;
    void *_state;
    _Bool _filterUnderbars;
}

+ (id)filesystemItemRemoveOperationWithPath:(id)arg1;
+ (id)_errorWithErrno:(int)arg1 atPath:(id)arg2;
- (void)dealloc;
- (void)main;
- (id)initWithPath:(id)arg1;
- (_Bool)_filtersUnderbars;
- (void)_setFilterUnderbars:(_Bool)arg1;
- (void)_setError:(id)arg1;
- (id)error;
- (void)setDelegate:(id)arg1;
- (id)delegate;

@end

@interface NSFunctionExpression : NSExpression
{
    NSExpression *_operand;
    SEL _selector;
    NSArray *_arguments;
}

+ (_Bool)supportsSecureCoding;
- (id)_expressionWithSubstitutionVariables:(id)arg1;
- (void)acceptVisitor:(id)arg1 flags:(unsigned long long)arg2;
- (_Bool)_shouldUseParensWithDescription;
- (id)predicateFormat;
- (id)binaryOperatorForSelector;
- (id)expressionValueWithObject:(id)arg1 context:(id)arg2;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)arguments;
- (SEL)selector;
- (id)operand;
- (id)function;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)allowEvaluation;
- (id)initWithTarget:(id)arg1 selectorName:(id)arg2 arguments:(id)arg3;
- (id)initWithExpressionType:(unsigned long long)arg1 operand:(id)arg2 selector:(SEL)arg3 argumentArray:(id)arg4;
- (id)initWithSelector:(SEL)arg1 argumentArray:(id)arg2;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface NSGB18030EncodingDetector : NSEncodingDetector
{
}

- (unsigned long long)recognizeString:(const char *)arg1 withDataLength:(unsigned long long)arg2 withReplacement:(const char *)arg3 withReplacementLength:(unsigned long long)arg4 inNewData:(char *)arg5 maxBufferLength:(unsigned long long)arg6 actualBufferLength:(unsigned long long *)arg7;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface NSGBKEncodingDetector : NSEncodingDetector
{
}

- (unsigned long long)recognizeString:(const char *)arg1 withDataLength:(unsigned long long)arg2 withReplacement:(const char *)arg3 withReplacementLength:(unsigned long long)arg4 inNewData:(char *)arg5 maxBufferLength:(unsigned long long)arg6 actualBufferLength:(unsigned long long *)arg7;
- (id)init;

@end

@interface NSGrammarCheckingResult : NSTextCheckingResult
{
    struct _NSRange _range;
    NSArray *_details;
}

- (id)grammarDetails;
- (_Bool)_adjustRangesWithOffset:(long long)arg1;
- (id)resultByAdjustingRangesWithOffset:(long long)arg1;
- (struct _NSRange)range;
- (unsigned long long)resultType;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithRange:(struct _NSRange)arg1 details:(id)arg2;

@end

@interface NSHTTPCookie (NSHTTPCookiePortCoding)
- (id)replacementObjectForPortCoder:(id)arg1;
@end

__attribute__((visibility("hidden")))
@interface NSISO2022EncodingDetector : NSEncodingDetector
{
}

@end

__attribute__((visibility("hidden")))
@interface NSHZGB2312EncodingDetector : NSISO2022EncodingDetector
{
}

- (unsigned long long)recognizeString:(const char *)arg1 withDataLength:(unsigned long long)arg2 withReplacement:(const char *)arg3 withReplacementLength:(unsigned long long)arg4 inNewData:(char *)arg5 maxBufferLength:(unsigned long long)arg6 actualBufferLength:(unsigned long long *)arg7;
- (id)init;

@end

@interface NSIBPrototypingLayoutConstraint : NSLayoutConstraint
{
}

+ (id)classFallbacksForKeyedArchiver;
- (_Bool)_isIBPrototypingLayoutConstraint;

@end

@interface NSISEngine : NSObject <NSISVariableDelegate>
{
    NSMapTable *_rows;
    NSMapTable *_rowsCrossIndex;
    NSISVariable *_headForObjectiveRow;
    NSMutableArray *_variablesWithValueRestrictionViolations;
    NSMutableArray *_pendingRemovals;
    id <NSISEngineDelegate> _delegate;
    NSMapTable *_brokenConstraintPositiveErrors;
    NSMapTable *_brokenConstraintNegativeErrors;
    NSMutableSet *_variablesWithIntegralizationViolations;
    struct __CFDictionary *_integralizationAdjustmentsForConstraintMarkers;
    CDUnknownBlockType _unsatisfiabilityHandler;
    unsigned long long _pivotCount;
    struct CGSize _engineScalingCoefficients;
    NSMutableDictionary *_recordedOperations;
    int _automaticOptimizationDisabledCount;
    int _engineDelegateCallsDisabledCount;
    int _variableDelegateCallsDisabledCount;
    unsigned int _totalChangeCount;
    unsigned int _changeCountAtLastOptimization;
    _Bool _lastOptimizationInvolvedIntegralization;
    _Bool _shouldIntegralize;
    _Bool _revertsAfterUnsatisfiabilityHandler;
    _Bool _accumulatingRemovals;
}

@property(nonatomic) struct CGSize engineScalingCoefficients; // @synthesize engineScalingCoefficients=_engineScalingCoefficients;
@property _Bool revertsAfterUnsatisfiabilityHandler; // @synthesize revertsAfterUnsatisfiabilityHandler=_revertsAfterUnsatisfiabilityHandler;
@property id <NSISEngineDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain) NSMutableSet *variablesWithIntegralizationViolations; // @synthesize variablesWithIntegralizationViolations=_variablesWithIntegralizationViolations;
@property(retain) NSMutableArray *variablesWithValueRestrictionViolations; // @synthesize variablesWithValueRestrictionViolations=_variablesWithValueRestrictionViolations;
@property(retain) NSISVariable *headForObjectiveRow; // @synthesize headForObjectiveRow=_headForObjectiveRow;
@property(retain) NSMapTable *rowsCrossIndex; // @synthesize rowsCrossIndex=_rowsCrossIndex;
@property(retain) NSMapTable *rows; // @synthesize rows=_rows;
- (_Bool)exerciseAmbiguityInVariable:(id)arg1;
- (_Bool)valueOfVariableIsAmbiguous:(id)arg1;
- (_Bool)incoming:(id *)arg1 andOutgoing:(id *)arg2 rowHeadsThatMakeValueAmbiguousForVariable:(id)arg3;
- (_Bool)bodyVarIsAmbiguous:(id)arg1 withPivotOfOutgoingRowHead:(id *)arg2;
- (id)candidateRedundantConstraints;
- (id)constraintsAffectingValueOfVariable:(id)arg1;
- (void)verifyInternalIntegrity;
@property(readonly, copy) NSString *description;
- (unsigned long long)pivotCount;
- (id)constraints;
- (void)enumerateOriginalConstraints:(CDUnknownBlockType)arg1;
- (_Bool)tryToChangeConstraintSuchThatMarker:(id)arg1 isReplacedByMarkerPlusDelta:(double)arg2 undoHandler:(CDUnknownBlockType)arg3;
- (void)constraintDidChangeSuchThatMarker:(id)arg1 shouldBeReplacedByMarkerPlusDelta:(double)arg2;
- (void)_coreReplaceMarker:(id)arg1 withMarkerPlusDelta:(double)arg2;
- (void)removeConstraintWithMarker:(id)arg1;
- (id)outgoingRowHeadForRemovingConstraintWithMarker:(id)arg1;
- (void)changeVariableToBeOptimized:(id)arg1 fromPriority:(double)arg2 toPriority:(double)arg3;
- (void)removeVariableToBeOptimized:(id)arg1 priority:(double)arg2;
- (void)addVariableToBeOptimized:(id)arg1 priority:(double)arg2;
- (_Bool)tryToAddConstraintWithMarker:(id)arg1 expression:(id)arg2 integralizationAdjustment:(double)arg3 mutuallyExclusiveConstraints:(id *)arg4;
- (_Bool)hasValue:(double *)arg1 forVariable:(id)arg2;
- (double)valueForVariable:(id)arg1;
- (void)withDelegateCallsDisabled:(CDUnknownBlockType)arg1;
- (void)withoutOptimizingAtEndRunBlockWithAutomaticOptimizationDisabled:(CDUnknownBlockType)arg1;
- (void)withAutomaticOptimizationDisabled:(CDUnknownBlockType)arg1;
- (void)withBehaviors:(unsigned long long)arg1 performModifications:(CDUnknownBlockType)arg2;
- (void)_flushPendingRemovals;
- (id)tryToOptimizeReturningMutuallyExclusiveConstraints;
- (unsigned long long)optimize;
@property _Bool shouldIntegralize;
- (unsigned long long)replayCommandsData:(id)arg1 verifyingIntegrity:(_Bool)arg2;
- (id)recordedCommandsData;
- (void)beginRecording;
- (void)dealloc;
- (id)init;
- (_Bool)tryUsingArtificialVariableToAddConstraintWithMarker:(id)arg1 rowBody:(id)arg2 usingInfeasibilityHandlingBehavior:(long long)arg3 mutuallyExclusiveConstraints:(id *)arg4;
- (_Bool)tryAddingDirectly:(id)arg1;
- (id)chooseHeadForRowBody:(id)arg1;
- (id)createExpressionBySubstitutingForRowHeadVariablesInExpression:(id)arg1;
- (void)fixupIntegralizationViolations;
- (id)variableToWorkOnAmongVariablesWithIntegralizationViolationsIgnoringLostCauses:(id)arg1 varsAlreadyAdjusted:(id)arg2;
- (unsigned long long)numberOfConstraintsEligibleForAdjustmentToIntegralizeVariable:(id)arg1 ignoringConstraintsWithMarkers:(id)arg2;
- (double)valueForVariableWithoutIntegralizationAdjustments:(id)arg1;
- (void)performModifications:(CDUnknownBlockType)arg1 withUnsatisfiableConstraintsHandler:(CDUnknownBlockType)arg2;
- (id)fixUpValueRestrictionViolationsWithInfeasibilityHandlingBehavior:(long long)arg1;
- (unsigned long long)minimizeConstantInObjectiveRowWithHead:(id)arg1;
- (id)chooseOutgoingRowHeadForIncomingRowHead:(id)arg1;
- (id)handleUnsatisfiableRowWithHead:(id)arg1 body:(id)arg2 usingInfeasibilityHandlingBehavior:(long long)arg3 mutuallyExclusiveConstraints:(id *)arg4;
- (id)fallbackMarkerForConstraintToBreakInRowWithHead:(id)arg1 body:(id)arg2;
- (id)errorVariableIntroducedByBreakingConstraintWithMarker:(id)arg1 errorIsPositive:(_Bool)arg2;
- (void)replaceMarker:(id)arg1 withMarkerPlusCoefficient:(double)arg2 timesVariable:(id)arg3;
- (void)pivotToMakeBodyVar:(id)arg1 newHeadOfRowWithHead:(id)arg2 andDropRow:(_Bool)arg3;
- (void)substituteOutAllOccurencesOfBodyVar:(id)arg1 withExpression:(id)arg2;
- (void)addExpression:(id)arg1 times:(double)arg2 toRowWithHead:(id)arg3 body:(id)arg4;
- (void)addExpression:(id)arg1 priority:(double)arg2 times:(double)arg3 toObjectiveRowWithHead:(id)arg4 body:(id)arg5;
- (void)addVariable:(id)arg1 coefficient:(double)arg2 toRowWithHead:(id)arg3 body:(id)arg4;
- (void)addVariable:(id)arg1 priority:(double)arg2 times:(double)arg3 toObjectiveRowWithHead:(id)arg4 body:(id)arg5;
- (void)removeBodyVarFromAllRows:(id)arg1;
- (void)removeRowWithHead:(id)arg1;
- (void)setRowWithHead:(id)arg1 body:(id)arg2;
- (void)setIntegralizationAdjustment:(double)arg1 forMarker:(id)arg2;
- (double)integralizationAdjustmentForMarker:(id)arg1;
- (id)nsis_descriptionOfVariable:(id)arg1;
- (_Bool)nsis_valueOfVariableIsUserObservable:(id)arg1;
- (_Bool)nsis_shouldIntegralizeVariable:(id)arg1;
- (void)nsis_valueOfVariable:(id)arg1 didChangeInEngine:(id)arg2;
- (id)markerForBrokenConstraintWithNegativeErrorVar:(id)arg1;
- (id)markerForBrokenConstraintWithPositiveErrorVar:(id)arg1;
- (void)setNegativeErrorVar:(id)arg1 forBrokenConstraintWithMarker:(id)arg2;
- (id)negativeErrorVarForBrokenConstraintWithMarker:(id)arg1;
- (id)_brokenConstraintNegativeErrorsIfAvailable;
- (id)_brokenConstraintNegativeErrors;
- (void)setPositiveErrorVar:(id)arg1 forBrokenConstraintWithMarker:(id)arg2;
- (id)positiveErrorVarForBrokenConstraintWithMarker:(id)arg1;
- (id)_brokenConstraintPositiveErrorsIfAvailable;
- (id)_brokenConstraintPositiveErrors;
- (void)rowCrossIndexNoteDroppedBodyVar:(id)arg1;
- (void)rowCrossIndexNoteBodyVariable:(id)arg1 wasRemovedFromRowWithHead:(id)arg2;
- (void)rowCrossIndexNoteBodyVariable:(id)arg1 wasAddedToRowWithHead:(id)arg2;
- (void)enumerateRowsCrossIndex:(CDUnknownBlockType)arg1;
- (id)rowHeadsForRowsContainingBodyVar:(id)arg1;
- (void)rawRemoveRowWithHead:(id)arg1;
- (void)rawSetRowWithHead:(id)arg1 body:(id)arg2;
- (id)allRowHeads;
- (void)enumerateRows:(CDUnknownBlockType)arg1;
- (id)rowBodyForObjectiveHead:(id)arg1;
- (id)rowBodyForNonObjectiveHead:(id)arg1;
- (id)rowBodyForHead:(id)arg1;
@property struct __CFDictionary *integralizationAdjustmentsForConstraintMarkers;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface NSISVariable : NSObject
{
    id <NSISVariableDelegate> _delegate;
    int _refCount;
    unsigned int _ident;
}

+ (id)variableWithName:(id)arg1 valueRestriction:(int)arg2 shouldBeMinimized:(_Bool)arg3;
+ (id)variableMarkingConstraint:(id)arg1 valueRestriction:(int)arg2 shouldBeMinimized:(_Bool)arg3;
+ (id)variableWithDelegate:(id)arg1 valueRestriction:(int)arg2 shouldBeMinimized:(_Bool)arg3;
@property id <NSISVariableDelegate> delegate; // @synthesize delegate=_delegate;
- (_Bool)_isDeallocating;
- (_Bool)_tryRetain;
- (unsigned long long)retainCount;
- (oneway void)release;
- (id)retain;
- (id)markedConstraint;
@property(readonly) _Bool shouldBeMinimized;
@property(readonly) int valueRestriction;
- (_Bool)valueIsUserVisible;
- (_Bool)markedConstraintIsEligibleForIntegralizationAdjustment;
- (double)allowedMagnitudeForIntegralizationAdjustmentOfMarkedConstraint;
- (_Bool)shouldBeIntegral;
- (id)description;
- (unsigned long long)hash;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface NSISInlineStorageVariable : NSISVariable <NSISVariableDelegate>
{
    NSString *_name;
    int _valueRestriction;
    _Bool _shouldBeMinimized;
}

@property _Bool shouldBeMinimized; // @synthesize shouldBeMinimized=_shouldBeMinimized;
@property int valueRestriction; // @synthesize valueRestriction=_valueRestriction;
@property(copy) NSString *name; // @synthesize name=_name;
- (oneway void)dealloc;
- (_Bool)nsis_valueOfVariableIsUserObservable:(id)arg1;
- (_Bool)nsis_shouldIntegralizeVariable:(id)arg1;
- (id)nsis_descriptionOfVariable:(id)arg1;
- (void)nsis_valueOfVariable:(id)arg1 didChangeInEngine:(id)arg2;
- (id)markedConstraint;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface NSISLinearExpression : NSObject <NSISRowBody, NSFastEnumeration>
{
    unsigned int inline_capacity;
    unsigned int var_count;
    double constant;
    union {
        struct {
            id stored_extern_marker;
            struct *slab;
            unsigned long long capacity;
        } extern_data;
        struct {
            unsigned long long aligner;
        } inline_slab;
        unsigned char padding[48];
        void *_workaround13455311;
    } data;
}

+ (id)acquireFromPoolForUseCase:(long long)arg1;
+ (id)newExpressionWithCapacity:(unsigned long long)arg1;
- (id)copyContentsAndReturnToPool;
- (void)returnToPool;
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
- (id)init;
- (id)initWithInlineCapacity:(unsigned long long)arg1;
- (void)verifyInternalIntegrity;
- (void)scaleBy:(double)arg1;
- (id)variablesArray;
- (unsigned long long)variableCount;
- (_Bool)enumerateVariablesAndCoefficientsUntil:(CDUnknownBlockType)arg1;
- (void)enumerateVariables:(CDUnknownBlockType)arg1;
- (void)enumerateVariablesAndCoefficients:(CDUnknownBlockType)arg1;
@property(readonly, copy) NSString *description;
- (void)replaceVariable:(id)arg1 withExpression:(id)arg2 processVariableNewToReceiver:(CDUnknownBlockType)arg3 processVariableDroppedFromReceiver:(CDUnknownBlockType)arg4;
- (void)replaceVariable:(id)arg1 withVariablePlusDelta:(double)arg2 timesVariable:(id)arg3 processVariableNewToReceiver:(CDUnknownBlockType)arg4 processVariableDroppedFromReceiver:(CDUnknownBlockType)arg5;
- (void)replaceVariable:(id)arg1 withVariablePlusDelta:(double)arg2;
- (_Bool)isConstant;
@property double constant;
- (double)incrementConstant:(double)arg1;
- (void)addVariable:(id)arg1 coefficient:(double)arg2 processVariableNewToReceiver:(CDUnknownBlockType)arg3 processVariableDroppedFromReceiver:(CDUnknownBlockType)arg4;
- (void)addVariable:(id)arg1 coefficient:(double)arg2;
- (void)addExpression:(id)arg1 times:(double)arg2 processVariableNewToReceiver:(CDUnknownBlockType)arg3 processVariableDroppedFromReceiver:(CDUnknownBlockType)arg4;
- (void)addExpression:(id)arg1 times:(double)arg2;
- (void)dealloc;
- (void)replaceVariable:(id)arg1 withVariable:(id)arg2 coefficient:(double)arg3;
- (void)setCoefficient:(double)arg1 forVariable:(id)arg2;
- (double)coefficientForVariable:(id)arg1;
- (void)removeVariable:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface NSISO2022CNEncodingDetector : NSISO2022EncodingDetector
{
}

- (unsigned long long)recognizeString:(const char *)arg1 withDataLength:(unsigned long long)arg2 withReplacement:(const char *)arg3 withReplacementLength:(unsigned long long)arg4 inNewData:(char *)arg5 maxBufferLength:(unsigned long long)arg6 actualBufferLength:(unsigned long long *)arg7;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface NSISO2022JP1EncodingDetector : NSISO2022EncodingDetector
{
}

- (unsigned long long)recognizeString:(const char *)arg1 withDataLength:(unsigned long long)arg2 withReplacement:(const char *)arg3 withReplacementLength:(unsigned long long)arg4 inNewData:(char *)arg5 maxBufferLength:(unsigned long long)arg6 actualBufferLength:(unsigned long long *)arg7;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface NSISO2022JP2EncodingDetector : NSISO2022EncodingDetector
{
}

- (unsigned long long)recognizeString:(const char *)arg1 withDataLength:(unsigned long long)arg2 withReplacement:(const char *)arg3 withReplacementLength:(unsigned long long)arg4 inNewData:(char *)arg5 maxBufferLength:(unsigned long long)arg6 actualBufferLength:(unsigned long long *)arg7;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface NSISO2022JPEncodingDetector : NSISO2022EncodingDetector
{
}

- (unsigned long long)recognizeString:(const char *)arg1 withDataLength:(unsigned long long)arg2 withReplacement:(const char *)arg3 withReplacementLength:(unsigned long long)arg4 inNewData:(char *)arg5 maxBufferLength:(unsigned long long)arg6 actualBufferLength:(unsigned long long *)arg7;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface NSISO2022KREncodingDetector : NSISO2022EncodingDetector
{
}

- (unsigned long long)recognizeString:(const char *)arg1 withDataLength:(unsigned long long)arg2 withReplacement:(const char *)arg3 withReplacementLength:(unsigned long long)arg4 inNewData:(char *)arg5 maxBufferLength:(unsigned long long)arg6 actualBufferLength:(unsigned long long *)arg7;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface NSISO885911EncodingDetector : NSSingleByteEncodingDetector
{
}

- (unsigned long long)recognizeString:(const char *)arg1 withDataLength:(unsigned long long)arg2 withReplacement:(const char *)arg3 withReplacementLength:(unsigned long long)arg4 inNewData:(char *)arg5 maxBufferLength:(unsigned long long)arg6 actualBufferLength:(unsigned long long *)arg7;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface NSISO88595EncodingDetector : NSSingleByteEncodingDetector
{
}

- (unsigned long long)recognizeString:(const char *)arg1 withDataLength:(unsigned long long)arg2 withReplacement:(const char *)arg3 withReplacementLength:(unsigned long long)arg4 inNewData:(char *)arg5 maxBufferLength:(unsigned long long)arg6 actualBufferLength:(unsigned long long *)arg7;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface NSISO88596EncodingDetector : NSSingleByteEncodingDetector
{
}

- (unsigned long long)recognizeString:(const char *)arg1 withDataLength:(unsigned long long)arg2 withReplacement:(const char *)arg3 withReplacementLength:(unsigned long long)arg4 inNewData:(char *)arg5 maxBufferLength:(unsigned long long)arg6 actualBufferLength:(unsigned long long *)arg7;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface NSISO88597EncodingDetector : NSSingleByteEncodingDetector
{
}

- (unsigned long long)recognizeString:(const char *)arg1 withDataLength:(unsigned long long)arg2 withReplacement:(const char *)arg3 withReplacementLength:(unsigned long long)arg4 inNewData:(char *)arg5 maxBufferLength:(unsigned long long)arg6 actualBufferLength:(unsigned long long *)arg7;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface NSISO88598EncodingDetector : NSSingleByteEncodingDetector
{
}

- (unsigned long long)recognizeString:(const char *)arg1 withDataLength:(unsigned long long)arg2 withReplacement:(const char *)arg3 withReplacementLength:(unsigned long long)arg4 inNewData:(char *)arg5 maxBufferLength:(unsigned long long)arg6 actualBufferLength:(unsigned long long *)arg7;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface NSISOLATIN10EncodingDetector : NSSingleByteEncodingDetector
{
}

- (unsigned long long)recognizeString:(const char *)arg1 withDataLength:(unsigned long long)arg2 withReplacement:(const char *)arg3 withReplacementLength:(unsigned long long)arg4 inNewData:(char *)arg5 maxBufferLength:(unsigned long long)arg6 actualBufferLength:(unsigned long long *)arg7;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface NSISOLATIN1EncodingDetector : NSSingleByteEncodingDetector
{
}

- (unsigned long long)recognizeString:(const char *)arg1 withDataLength:(unsigned long long)arg2 withReplacement:(const char *)arg3 withReplacementLength:(unsigned long long)arg4 inNewData:(char *)arg5 maxBufferLength:(unsigned long long)arg6 actualBufferLength:(unsigned long long *)arg7;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface NSISOLATIN2EncodingDetector : NSSingleByteEncodingDetector
{
}

- (unsigned long long)recognizeString:(const char *)arg1 withDataLength:(unsigned long long)arg2 withReplacement:(const char *)arg3 withReplacementLength:(unsigned long long)arg4 inNewData:(char *)arg5 maxBufferLength:(unsigned long long)arg6 actualBufferLength:(unsigned long long *)arg7;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface NSISOLATIN3EncodingDetector : NSSingleByteEncodingDetector
{
}

- (unsigned long long)recognizeString:(const char *)arg1 withDataLength:(unsigned long long)arg2 withReplacement:(const char *)arg3 withReplacementLength:(unsigned long long)arg4 inNewData:(char *)arg5 maxBufferLength:(unsigned long long)arg6 actualBufferLength:(unsigned long long *)arg7;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface NSISOLATIN4EncodingDetector : NSSingleByteEncodingDetector
{
}

- (unsigned long long)recognizeString:(const char *)arg1 withDataLength:(unsigned long long)arg2 withReplacement:(const char *)arg3 withReplacementLength:(unsigned long long)arg4 inNewData:(char *)arg5 maxBufferLength:(unsigned long long)arg6 actualBufferLength:(unsigned long long *)arg7;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface NSISOLATIN5EncodingDetector : NSSingleByteEncodingDetector
{
}

- (unsigned long long)recognizeString:(const char *)arg1 withDataLength:(unsigned long long)arg2 withReplacement:(const char *)arg3 withReplacementLength:(unsigned long long)arg4 inNewData:(char *)arg5 maxBufferLength:(unsigned long long)arg6 actualBufferLength:(unsigned long long *)arg7;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface NSISOLATIN6EncodingDetector : NSSingleByteEncodingDetector
{
}

- (unsigned long long)recognizeString:(const char *)arg1 withDataLength:(unsigned long long)arg2 withReplacement:(const char *)arg3 withReplacementLength:(unsigned long long)arg4 inNewData:(char *)arg5 maxBufferLength:(unsigned long long)arg6 actualBufferLength:(unsigned long long *)arg7;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface NSISOLATIN7EncodingDetector : NSSingleByteEncodingDetector
{
}

- (unsigned long long)recognizeString:(const char *)arg1 withDataLength:(unsigned long long)arg2 withReplacement:(const char *)arg3 withReplacementLength:(unsigned long long)arg4 inNewData:(char *)arg5 maxBufferLength:(unsigned long long)arg6 actualBufferLength:(unsigned long long *)arg7;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface NSISOLATIN8EncodingDetector : NSSingleByteEncodingDetector
{
}

- (unsigned long long)recognizeString:(const char *)arg1 withDataLength:(unsigned long long)arg2 withReplacement:(const char *)arg3 withReplacementLength:(unsigned long long)arg4 inNewData:(char *)arg5 maxBufferLength:(unsigned long long)arg6 actualBufferLength:(unsigned long long *)arg7;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface NSISOLATIN9EncodingDetector : NSSingleByteEncodingDetector
{
}

- (unsigned long long)recognizeString:(const char *)arg1 withDataLength:(unsigned long long)arg2 withReplacement:(const char *)arg3 withReplacementLength:(unsigned long long)arg4 inNewData:(char *)arg5 maxBufferLength:(unsigned long long)arg6 actualBufferLength:(unsigned long long *)arg7;
- (id)init;

@end

@interface NSISObjectiveLinearExpression : NSObject <NSISRowBody>
{
    struct __CFDictionary *_priorityMap;
    NSMutableArray *_variablesSortedByPriorityVectors;
    struct __CFData *_constant;
}

- (void)verifyInternalIntegrity;
- (void)leadingPriority:(double *)arg1 andValue:(double *)arg2 forVariable:(id)arg3;
- (id)restrictedVariableWithCoefficientOfLargestNegativeMagnitude;
- (void)replaceVariable:(id)arg1 withExpression:(id)arg2 processVariableNewToReceiver:(CDUnknownBlockType)arg3 processVariableDroppedFromReceiver:(CDUnknownBlockType)arg4;
- (void)replaceVariable:(id)arg1 withVariablePlusDelta:(double)arg2 timesVariable:(id)arg3 processVariableNewToReceiver:(CDUnknownBlockType)arg4 processVariableDroppedFromReceiver:(CDUnknownBlockType)arg5;
- (void)replaceVariable:(id)arg1 withVariablePlusDelta:(double)arg2;
- (void)addExpression:(id)arg1 priority:(double)arg2 times:(double)arg3 processVariableNewToReceiver:(CDUnknownBlockType)arg4 processVariableDroppedFromReceiver:(CDUnknownBlockType)arg5;
- (void)addVariable:(id)arg1 priority:(double)arg2 times:(double)arg3 processVariableNewToReceiver:(CDUnknownBlockType)arg4 processVariableDroppedFromReceiver:(CDUnknownBlockType)arg5;
- (void)addVariable:(id)arg1 priority:(double)arg2 times:(double)arg3;
- (void)setPriorityVector:(struct __CFData *)arg1 forKnownAbsentVariable:(id)arg2;
- (void)removeVariable:(id)arg1;
- (struct __CFData *)priorityVectorForVariable:(id)arg1;
- (unsigned long long)variableCount;
- (void)enumerateVariables:(CDUnknownBlockType)arg1;
- (_Bool)constantTermIsZero;
- (void)incrementConstantWithPriorityVector:(struct __CFData *)arg1 timesScalarCoefficient:(double)arg2;
- (void)incrementConstantWithPriority:(double)arg1 value:(double)arg2;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)initWithLinearExpression:(id)arg1 priority:(double)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface NSISPlaybackOperation : NSObject <NSISVariableDelegate>
{
    NSMutableDictionary *oldIdentsToNewVariables;
    NSMutableSet *variablesToIntegralize;
    NSMutableSet *userObservableVariables;
}

- (double)nsis_allowedMagnitudeForIntegralizationAdjustmentOfConstraintWithMarker:(id)arg1;
- (_Bool)nsis_valueOfVariableIsUserObservable:(id)arg1;
- (_Bool)nsis_shouldIntegralizeVariable:(id)arg1;
- (id)nsis_descriptionOfVariable:(id)arg1;
- (void)nsis_valueOfVariable:(id)arg1 didChangeInEngine:(id)arg2;
- (void)playbackOneAction:(id)arg1 onEngine:(id)arg2;
- (void)dealloc;
- (id)unwrapLinearExpression:(id)arg1;
- (id)unwrapVariable:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface NSISRestrictedToNonNegativeMarkerVariable : NSISVariable
{
}

- (id)markedConstraint;
- (_Bool)shouldBeMinimized;
- (int)valueRestriction;

@end

__attribute__((visibility("hidden")))
@interface NSISRestrictedToNonNegativeMarkerVariableToBeMinimized : NSISVariable
{
}

- (id)markedConstraint;
- (_Bool)shouldBeMinimized;
- (int)valueRestriction;

@end

__attribute__((visibility("hidden")))
@interface NSISRestrictedToNonNegativeVariable : NSISVariable
{
}

- (id)markedConstraint;
- (_Bool)shouldBeMinimized;
- (int)valueRestriction;

@end

__attribute__((visibility("hidden")))
@interface NSISRestrictedToNonNegativeVariableToBeMinimized : NSISVariable
{
}

- (id)markedConstraint;
- (_Bool)shouldBeMinimized;
- (int)valueRestriction;

@end

__attribute__((visibility("hidden")))
@interface NSISRestrictedToZeroMarkerVariable : NSISVariable
{
}

- (id)markedConstraint;
- (_Bool)shouldBeMinimized;
- (int)valueRestriction;

@end

__attribute__((visibility("hidden")))
@interface NSISUnrestrictedVariable : NSISVariable
{
}

- (id)markedConstraint;
- (_Bool)shouldBeMinimized;
- (int)valueRestriction;

@end

@interface NSInPredicateOperator : NSPredicateOperator
{
    unsigned long long _flags;
    NSSubstringPredicateOperator *_stringVersion;
}

+ (_Bool)supportsSecureCoding;
- (unsigned long long)options;
- (void)_setOptions:(unsigned long long)arg1;
- (_Bool)performPrimitiveOperationUsingObject:(id)arg1 andObject:(id)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)flags;
- (id)symbol;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)stringVersion;
- (id)initWithOperatorType:(unsigned long long)arg1 modifier:(unsigned long long)arg2 options:(unsigned long long)arg3;

@end

@interface NSIndexPath : NSObject <NSCopying, NSSecureCoding>
{
    unsigned long long *_indexes;
    unsigned long long _length;
    void *_reserved;
}

+ (_Bool)supportsSecureCoding;
+ (id)indexPathWithIndexes:(const unsigned long long *)arg1 length:(unsigned long long)arg2;
+ (id)indexPathWithIndex:(unsigned long long)arg1;
+ (id)indexPath;
+ (void)initialize;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (long long)compare:(id)arg1;
- (id)indexPathByAddingIndex:(unsigned long long)arg1;
- (id)indexPathByRemovingLastIndex;
- (void)getIndexes:(unsigned long long *)arg1;
- (void)getIndexes:(unsigned long long *)arg1 range:(struct _NSRange)arg2;
- (unsigned long long)indexAtPosition:(unsigned long long)arg1;
@property(readonly) unsigned long long length;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithIndexes:(const unsigned long long *)arg1 length:(unsigned long long)arg2;
- (id)initWithIndex:(unsigned long long)arg1;
- (id)init;

@end

@interface NSIndexSet : NSObject <NSCopying, NSMutableCopying, NSSecureCoding>
{
    struct {
        unsigned int _isEmpty:1;
        unsigned int _hasSingleRange:1;
        unsigned int _cacheValid:1;
        unsigned int _reservedArrayBinderController:29;
    } _indexSetFlags;
    union {
        struct {
            struct _NSRange _range;
        } _singleRange;
        struct {
            void *_data;
            void *_reserved;
        } _multipleRanges;
    } _internal;
}

+ (_Bool)supportsSecureCoding;
+ (id)indexSetWithIndexes:(const unsigned long long *)arg1 count:(unsigned long long)arg2;
+ (id)indexSetWithIndexesInRange:(struct _NSRange)arg1;
+ (id)indexSetWithIndex:(unsigned long long)arg1;
+ (id)indexSet;
- (void)enumerateRangesInRange:(struct _NSRange)arg1 options:(unsigned long long)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)enumerateRangesWithOptions:(unsigned long long)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)enumerateRangesUsingBlock:(CDUnknownBlockType)arg1;
- (id)indexesInRange:(struct _NSRange)arg1 options:(unsigned long long)arg2 passingTest:(CDUnknownBlockType)arg3;
- (id)indexesWithOptions:(unsigned long long)arg1 passingTest:(CDUnknownBlockType)arg2;
- (id)indexesPassingTest:(CDUnknownBlockType)arg1;
- (unsigned long long)indexInRange:(struct _NSRange)arg1 options:(unsigned long long)arg2 passingTest:(CDUnknownBlockType)arg3;
- (unsigned long long)indexWithOptions:(unsigned long long)arg1 passingTest:(CDUnknownBlockType)arg2;
- (unsigned long long)indexPassingTest:(CDUnknownBlockType)arg1;
- (void)enumerateIndexesInRange:(struct _NSRange)arg1 options:(unsigned long long)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)enumerateIndexesWithOptions:(unsigned long long)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)enumerateIndexesUsingBlock:(CDUnknownBlockType)arg1;
- (id)description;
- (id)_numberEnumerator;
- (_Bool)intersectsIndexesInRange:(struct _NSRange)arg1;
- (_Bool)containsIndexes:(id)arg1;
- (_Bool)containsIndexesInRange:(struct _NSRange)arg1;
- (_Bool)containsIndex:(unsigned long long)arg1;
- (struct _NSRange)rangeAtIndex:(unsigned long long)arg1;
- (unsigned long long)rangeCount;
- (unsigned long long)countOfIndexesInRange:(struct _NSRange)arg1;
- (unsigned long long)__getContainmentVector:(out _Bool *)arg1 inRange:(struct _NSRange)arg2;
- (unsigned long long)getIndexes:(unsigned long long *)arg1 maxCount:(unsigned long long)arg2 inIndexRange:(struct _NSRange *)arg3;
- (unsigned long long)indexLessThanOrEqualToIndex:(unsigned long long)arg1;
- (unsigned long long)indexGreaterThanOrEqualToIndex:(unsigned long long)arg1;
- (unsigned long long)indexLessThanIndex:(unsigned long long)arg1;
- (unsigned long long)indexGreaterThanIndex:(unsigned long long)arg1;
- (unsigned long long)_indexClosestToIndex:(unsigned long long)arg1 equalAllowed:(_Bool)arg2 following:(_Bool)arg3;
@property(readonly) unsigned long long lastIndex;
@property(readonly) unsigned long long firstIndex;
@property(readonly) unsigned long long count;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEqual:(id)arg1;
- (_Bool)isEqualToIndexSet:(id)arg1;
- (unsigned long long)hash;
- (unsigned long long)_indexOfRangeAfterOrContainingIndex:(unsigned long long)arg1;
- (unsigned long long)_indexOfRangeBeforeOrContainingIndex:(unsigned long long)arg1;
- (unsigned long long)_indexOfRangeContainingIndex:(unsigned long long)arg1;
- (Class)classForCoder;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithIndexes:(const unsigned long long *)arg1 count:(unsigned long long)arg2;
- (id)initWithIndexSet:(id)arg1;
- (void)_setContentToContentFromIndexSet:(id)arg1;
- (id)initWithIndexesInRange:(struct _NSRange)arg1;
- (id)initWithIndex:(unsigned long long)arg1;
- (id)init;
- (id)_init;
- (id)replacementObjectForPortCoder:(id)arg1;
- (unsigned long long)_indexAtIndex:(unsigned long long)arg1;

@end

@interface NSInputStream (NSCFInputStreamAdditions)
- (CDStruct_87dc826d)_cfStreamError;
@end

@interface NSInputStream (NSInputStream)
+ (id)inputStreamWithURL:(id)arg1;
+ (id)inputStreamWithFileAtPath:(id)arg1;
+ (id)inputStreamWithData:(id)arg1;
+ (id)allocWithZone:(struct _NSZone *)arg1;
- (unsigned long long)_cfTypeID;
- (_Bool)hasBytesAvailable;
- (_Bool)getBuffer:(char **)arg1 length:(unsigned long long *)arg2;
- (long long)read:(char *)arg1 maxLength:(unsigned long long)arg2;
@end

@interface NSInvocation (NSInvocationDebugDescription)
- (id)debugDescription;
@end

@interface NSInvocation (NSXPCConnectionExtensions)
- (_Bool)_hasBlockArgument;
- (void)setUserInfo:(id)arg1;
- (id)userInfo;
@end

@interface NSInvocationOperation : NSOperation
{
    id _inv;
    id _exception;
    void *_reserved2;
}

@property(readonly, retain) id result;
- (void)main;
@property(readonly, retain) NSInvocation *invocation;
- (void)dealloc;
- (id)initWithInvocation:(id)arg1;
- (id)initWithTarget:(id)arg1 selector:(SEL)arg2 object:(id)arg3;
- (id)init;

@end

@interface NSJSONSerialization : NSObject
{
    void *reserved[6];
}

+ (id)JSONObjectWithStream:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;
+ (long long)writeJSONObject:(id)arg1 toStream:(id)arg2 options:(unsigned long long)arg3 error:(id *)arg4;
+ (id)JSONObjectWithData:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;
+ (id)dataWithJSONObject:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;
+ (_Bool)isValidJSONObject:(id)arg1;
+ (id)allocWithZone:(struct _NSZone *)arg1;
- (id)init;

@end

@interface NSKeyPathExpression : NSFunctionExpression
{
}

- (id)keyPath;
- (id)predicateFormat;
- (id)pathExpression;
- (id)initWithOperand:(id)arg1 andKeyPath:(id)arg2;
- (id)initWithKeyPath:(id)arg1;
- (void)dealloc;

@end

@interface NSKeyPathSpecifierExpression : NSExpression
{
    NSString *_value;
}

+ (_Bool)supportsSecureCoding;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)expressionValueWithObject:(id)arg1 context:(id)arg2;
- (id)keyPath;
- (id)constantValue;
- (id)predicateFormat;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithObject:(id)arg1;
- (void)dealloc;

@end

@interface NSKeyValueAccessor : NSObject
{
    id _containerClassID;
    NSString *_key;
    CDUnknownFunctionPointerType _implementation;
    SEL _selector;
    unsigned long long _extraArgumentCount;
    void *_extraArgument1;
    void *_extraArgument2;
    void *_extraArgument3;
}

- (void *)extraArgument2;
- (void *)extraArgument1;
- (unsigned long long)extraArgumentCount;
- (id)key;
- (SEL)selector;
- (id)containerClassID;
- (void)dealloc;
- (id)initWithContainerClassID:(id)arg1 key:(id)arg2 implementation:(CDUnknownFunctionPointerType)arg3 selector:(SEL)arg4 extraArguments:(void *[3])arg5 count:(unsigned long long)arg6;

@end

__attribute__((visibility("hidden")))
@interface NSKeyValueArray : NSArray <NSKeyValueProxyCaching>
{
    NSObject *_container;
    NSString *_key;
    NSKeyValueNonmutatingArrayMethodSet *_methods;
}

+ (id)_proxyShare;
+ (CDStruct_7c9a8e9f *)_proxyNonGCPoolPointer;
- (id)objectsAtIndexes:(id)arg1;
- (id)objectAtIndex:(unsigned long long)arg1;
- (void)getObjects:(id *)arg1 range:(struct _NSRange)arg2;
- (unsigned long long)count;
- (void)dealloc;
- (void)_proxyNonGCFinalize;
- (CDStruct_a70f6672)_proxyLocator;
- (id)_proxyInitWithContainer:(id)arg1 getter:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface NSKeyValueChangeDictionary : NSDictionary
{
    CDStruct_e173081d _details;
    NSObject *_originalObservable;
    _Bool _isPriorNotification;
    _Bool _isRetainingObjects;
}

- (id)keyEnumerator;
- (id)objectForKey:(id)arg1;
- (unsigned long long)count;
- (void)dealloc;
- (void)retainObjects;
- (void)setOriginalObservable:(id)arg1;
- (void)setDetailsNoCopy:(CDStruct_e173081d)arg1 originalObservable:(id)arg2;
- (id)initWithDetailsNoCopy:(CDStruct_e173081d)arg1 originalObservable:(id)arg2 isPriorNotification:(_Bool)arg3;

@end

@interface NSKeyValueGetter : NSKeyValueAccessor
{
}

@end

__attribute__((visibility("hidden")))
@interface NSKeyValueProxyGetter : NSKeyValueGetter
{
    Class _proxyClass;
}

- (Class)proxyClass;
- (id)initWithContainerClassID:(id)arg1 key:(id)arg2 proxyClass:(Class)arg3;

@end

__attribute__((visibility("hidden")))
@interface NSKeyValueCollectionGetter : NSKeyValueProxyGetter
{
    NSKeyValueNonmutatingCollectionMethodSet *_methods;
}

- (id)methods;
- (void)dealloc;
- (id)initWithContainerClassID:(id)arg1 key:(id)arg2 methods:(id)arg3 proxyClass:(Class)arg4;

@end

__attribute__((visibility("hidden")))
@interface NSKeyValueProperty : NSObject <NSCopying>
{
    NSKeyValueContainerClass *_containerClass;
    NSString *_keyPath;
}

- (_Bool)matchesWithoutOperatorComponentsKeyPath:(id)arg1;
- (id)restOfKeyPathIfContainedByValueForKeyPath:(id)arg1;
- (id)dependentValueKeyOrKeysIsASet:(_Bool *)arg1;
- (void)object:(id)arg1 withObservance:(id)arg2 didChangeValueForKeyOrKeys:(id)arg3 recurse:(_Bool)arg4 forwardingValues:(CDStruct_a70f6672)arg5;
- (_Bool)object:(id)arg1 withObservance:(id)arg2 willChangeValueForKeyOrKeys:(id)arg3 recurse:(_Bool)arg4 forwardingValues:(CDStruct_a70f6672 *)arg5;
- (void)object:(id)arg1 didRemoveObservance:(id)arg2 recurse:(_Bool)arg3;
- (void)object:(id)arg1 didAddObservance:(id)arg2 recurse:(_Bool)arg3;
- (id)keyPathIfAffectedByValueForMemberOfKeys:(id)arg1;
- (id)keyPathIfAffectedByValueForKey:(id)arg1 exactMatch:(_Bool *)arg2;
- (Class)isaForAutonotifying;
- (id)keyPath;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)_initWithContainerClass:(id)arg1 keyPath:(id)arg2 propertiesBeingInitialized:(struct __CFSet *)arg3;

@end

__attribute__((visibility("hidden")))
@interface NSKeyValueComputedProperty : NSKeyValueProperty
{
    NSString *_operationName;
    NSString *_operationArgumentKeyPath;
    NSKeyValueProperty *_operationArgumentProperty;
}

- (_Bool)matchesWithoutOperatorComponentsKeyPath:(id)arg1;
- (void)object:(id)arg1 withObservance:(id)arg2 didChangeValueForKeyOrKeys:(id)arg3 recurse:(_Bool)arg4 forwardingValues:(CDStruct_a70f6672)arg5;
- (_Bool)object:(id)arg1 withObservance:(id)arg2 willChangeValueForKeyOrKeys:(id)arg3 recurse:(_Bool)arg4 forwardingValues:(CDStruct_a70f6672 *)arg5;
- (void)object:(id)arg1 didRemoveObservance:(id)arg2 recurse:(_Bool)arg3;
- (void)object:(id)arg1 didAddObservance:(id)arg2 recurse:(_Bool)arg3;
- (id)_keyPathIfAffectedByValueForMemberOfKeys:(id)arg1;
- (id)_keyPathIfAffectedByValueForKey:(id)arg1 exactMatch:(_Bool *)arg2;
- (Class)_isaForAutonotifying;
- (void)_addDependentValueKey:(id)arg1;
- (void)_givenPropertiesBeingInitialized:(struct __CFSet *)arg1 getAffectingProperties:(id)arg2;
- (id)description;
- (void)dealloc;
- (id)_initWithContainerClass:(id)arg1 keyPath:(id)arg2 propertiesBeingInitialized:(struct __CFSet *)arg3;

@end

__attribute__((visibility("hidden")))
@interface NSKeyValueContainerClass : NSObject
{
    Class _originalClass;
    CDUnknownFunctionPointerType _cachedObservationInfoImplementation;
    CDUnknownFunctionPointerType _cachedSetObservationInfoImplementation;
    _Bool _cachedSetObservationInfoTakesAnObject;
    struct {
        Class _field1;
        Class _field2;
        struct __CFSet *_field3;
        struct __CFDictionary *_field4;
    } *_notifyingInfo;
}

- (id)description;
- (id)initWithOriginalClass:(Class)arg1;

@end

__attribute__((visibility("hidden")))
@interface NSKeyValueMutableArray : NSMutableArray <NSKeyValueProxyCaching>
{
    NSObject *_container;
    NSString *_key;
}

+ (id)_proxyShare;
+ (CDStruct_7c9a8e9f *)_proxyNonGCPoolPointer;
- (void)setArray:(id)arg1;
- (void)dealloc;
- (void)_proxyNonGCFinalize;
- (id)_proxyInitWithContainer:(id)arg1 getter:(id)arg2;
- (CDStruct_a70f6672)_proxyLocator;

@end

__attribute__((visibility("hidden")))
@interface NSKeyValueFastMutableArray : NSKeyValueMutableArray
{
    NSKeyValueMutatingArrayMethodSet *_mutatingMethods;
}

- (void)replaceObjectsAtIndexes:(id)arg1 withObjects:(id)arg2;
- (void)replaceObjectAtIndex:(unsigned long long)arg1 withObject:(id)arg2;
- (void)removeObjectsAtIndexes:(id)arg1;
- (void)removeObjectAtIndex:(unsigned long long)arg1;
- (void)removeLastObject;
- (void)insertObjects:(id)arg1 atIndexes:(id)arg2;
- (void)insertObject:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)addObject:(id)arg1;
- (void)_proxyNonGCFinalize;
- (id)_proxyInitWithContainer:(id)arg1 getter:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface NSKeyValueFastMutableArray1 : NSKeyValueFastMutableArray
{
    NSKeyValueNonmutatingArrayMethodSet *_nonmutatingMethods;
}

+ (CDStruct_7c9a8e9f *)_proxyNonGCPoolPointer;
- (id)objectsAtIndexes:(id)arg1;
- (id)objectAtIndex:(unsigned long long)arg1;
- (void)getObjects:(id *)arg1 range:(struct _NSRange)arg2;
- (unsigned long long)count;
- (void)_proxyNonGCFinalize;
- (id)_proxyInitWithContainer:(id)arg1 getter:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface NSKeyValueFastMutableArray2 : NSKeyValueFastMutableArray
{
    NSKeyValueGetter *_valueGetter;
}

+ (CDStruct_7c9a8e9f *)_proxyNonGCPoolPointer;
- (id)objectsAtIndexes:(id)arg1;
- (id)objectAtIndex:(unsigned long long)arg1;
- (void)getObjects:(id *)arg1 range:(struct _NSRange)arg2;
- (unsigned long long)count;
- (id)_nonNilArrayValueWithSelector:(SEL)arg1;
- (void)_proxyNonGCFinalize;
- (id)_proxyInitWithContainer:(id)arg1 getter:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface NSKeyValueFastMutableCollection1Getter : NSKeyValueProxyGetter
{
    NSKeyValueNonmutatingCollectionMethodSet *_nonmutatingMethods;
    NSKeyValueMutatingCollectionMethodSet *_mutatingMethods;
}

- (id)mutatingMethods;
- (id)nonmutatingMethods;
- (void)dealloc;
- (id)initWithContainerClassID:(id)arg1 key:(id)arg2 nonmutatingMethods:(id)arg3 mutatingMethods:(id)arg4 proxyClass:(Class)arg5;

@end

__attribute__((visibility("hidden")))
@interface NSKeyValueFastMutableCollection2Getter : NSKeyValueProxyGetter
{
    NSKeyValueGetter *_baseGetter;
    NSKeyValueMutatingCollectionMethodSet *_mutatingMethods;
}

- (id)mutatingMethods;
- (id)baseGetter;
- (void)dealloc;
- (id)initWithContainerClassID:(id)arg1 key:(id)arg2 baseGetter:(id)arg3 mutatingMethods:(id)arg4 proxyClass:(Class)arg5;

@end

__attribute__((visibility("hidden")))
@interface NSKeyValueMutableOrderedSet : NSMutableOrderedSet <NSKeyValueProxyCaching>
{
    NSObject *_container;
    NSString *_key;
}

+ (id)_proxyShare;
+ (CDStruct_7c9a8e9f *)_proxyNonGCPoolPointer;
- (void)dealloc;
- (void)_proxyNonGCFinalize;
- (id)_proxyInitWithContainer:(id)arg1 getter:(id)arg2;
- (CDStruct_a70f6672)_proxyLocator;

@end

__attribute__((visibility("hidden")))
@interface NSKeyValueFastMutableOrderedSet : NSKeyValueMutableOrderedSet
{
    NSKeyValueMutatingOrderedSetMethodSet *_mutatingMethods;
}

- (void)replaceObjectsAtIndexes:(id)arg1 withObjects:(id)arg2;
- (void)replaceObjectAtIndex:(unsigned long long)arg1 withObject:(id)arg2;
- (void)removeObjectsAtIndexes:(id)arg1;
- (void)removeObjectAtIndex:(unsigned long long)arg1;
- (void)insertObjects:(id)arg1 atIndexes:(id)arg2;
- (void)insertObject:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)_proxyNonGCFinalize;
- (id)_proxyInitWithContainer:(id)arg1 getter:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface NSKeyValueFastMutableOrderedSet1 : NSKeyValueFastMutableOrderedSet
{
    NSKeyValueNonmutatingOrderedSetMethodSet *_nonmutatingMethods;
}

+ (CDStruct_7c9a8e9f *)_proxyNonGCPoolPointer;
- (id)objectsAtIndexes:(id)arg1;
- (id)objectAtIndex:(unsigned long long)arg1;
- (unsigned long long)indexOfObject:(id)arg1;
- (void)getObjects:(id *)arg1 range:(struct _NSRange)arg2;
- (unsigned long long)count;
- (void)_proxyNonGCFinalize;
- (id)_proxyInitWithContainer:(id)arg1 getter:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface NSKeyValueFastMutableOrderedSet2 : NSKeyValueFastMutableOrderedSet
{
    NSKeyValueGetter *_valueGetter;
}

+ (CDStruct_7c9a8e9f *)_proxyNonGCPoolPointer;
- (id)objectsAtIndexes:(id)arg1;
- (id)objectAtIndex:(unsigned long long)arg1;
- (unsigned long long)indexOfObject:(id)arg1;
- (void)getObjects:(id *)arg1 range:(struct _NSRange)arg2;
- (unsigned long long)count;
- (id)_nonNilOrderedSetValueWithSelector:(SEL)arg1;
- (void)_proxyNonGCFinalize;
- (id)_proxyInitWithContainer:(id)arg1 getter:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface NSKeyValueMutableSet : NSMutableSet <NSKeyValueProxyCaching>
{
    NSObject *_container;
    NSString *_key;
}

+ (id)_proxyShare;
+ (CDStruct_7c9a8e9f *)_proxyNonGCPoolPointer;
- (void)dealloc;
- (void)_proxyNonGCFinalize;
- (id)_proxyInitWithContainer:(id)arg1 getter:(id)arg2;
- (CDStruct_a70f6672)_proxyLocator;

@end

__attribute__((visibility("hidden")))
@interface NSKeyValueFastMutableSet : NSKeyValueMutableSet
{
    NSKeyValueMutatingSetMethodSet *_mutatingMethods;
}

- (void)unionSet:(id)arg1;
- (void)setSet:(id)arg1;
- (void)removeObject:(id)arg1;
- (void)removeAllObjects;
- (void)minusSet:(id)arg1;
- (void)intersectSet:(id)arg1;
- (void)addObjectsFromArray:(id)arg1;
- (void)addObject:(id)arg1;
- (void)_proxyNonGCFinalize;
- (id)_proxyInitWithContainer:(id)arg1 getter:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface NSKeyValueFastMutableSet1 : NSKeyValueFastMutableSet
{
    NSKeyValueNonmutatingSetMethodSet *_nonmutatingMethods;
}

+ (CDStruct_7c9a8e9f *)_proxyNonGCPoolPointer;
- (id)objectEnumerator;
- (id)member:(id)arg1;
- (unsigned long long)count;
- (void)_proxyNonGCFinalize;
- (id)_proxyInitWithContainer:(id)arg1 getter:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface NSKeyValueFastMutableSet2 : NSKeyValueFastMutableSet
{
    NSKeyValueGetter *_valueGetter;
}

+ (CDStruct_7c9a8e9f *)_proxyNonGCPoolPointer;
- (id)objectEnumerator;
- (id)member:(id)arg1;
- (unsigned long long)count;
- (id)_nonNilSetValueWithSelector:(SEL)arg1;
- (void)_proxyNonGCFinalize;
- (id)_proxyInitWithContainer:(id)arg1 getter:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface NSKeyValueIvarGetter : NSKeyValueGetter
{
}

- (id)initWithContainerClassID:(id)arg1 key:(id)arg2 ivar:(struct objc_ivar *)arg3;

@end

__attribute__((visibility("hidden")))
@interface NSKeyValueIvarMutableArray : NSKeyValueMutableArray
{
    struct objc_ivar *_ivar;
}

+ (CDStruct_7c9a8e9f *)_proxyNonGCPoolPointer;
- (void)replaceObjectsAtIndexes:(id)arg1 withObjects:(id)arg2;
- (void)replaceObjectAtIndex:(unsigned long long)arg1 withObject:(id)arg2;
- (void)removeObjectsAtIndexes:(id)arg1;
- (void)removeObjectAtIndex:(unsigned long long)arg1;
- (void)removeLastObject;
- (void)insertObjects:(id)arg1 atIndexes:(id)arg2;
- (void)insertObject:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)addObject:(id)arg1;
- (id)objectsAtIndexes:(id)arg1;
- (id)objectAtIndex:(unsigned long long)arg1;
- (void)getObjects:(id *)arg1 range:(struct _NSRange)arg2;
- (id)_nonNilMutableArrayValueWithSelector:(SEL)arg1;
- (void)_raiseNilValueExceptionWithSelector:(SEL)arg1;
- (unsigned long long)count;
- (void)_proxyNonGCFinalize;
- (id)_proxyInitWithContainer:(id)arg1 getter:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface NSKeyValueIvarMutableCollectionGetter : NSKeyValueProxyGetter
{
    struct objc_ivar *_ivar;
}

- (struct objc_ivar *)ivar;
- (id)initWithContainerClassID:(id)arg1 key:(id)arg2 containerIsa:(Class)arg3 ivar:(struct objc_ivar *)arg4 proxyClass:(Class)arg5;

@end

__attribute__((visibility("hidden")))
@interface NSKeyValueIvarMutableOrderedSet : NSKeyValueMutableOrderedSet
{
    struct objc_ivar *_ivar;
}

+ (CDStruct_7c9a8e9f *)_proxyNonGCPoolPointer;
- (void)replaceObjectsAtIndexes:(id)arg1 withObjects:(id)arg2;
- (void)replaceObjectAtIndex:(unsigned long long)arg1 withObject:(id)arg2;
- (void)removeObjectsAtIndexes:(id)arg1;
- (void)removeObjectAtIndex:(unsigned long long)arg1;
- (void)insertObjects:(id)arg1 atIndexes:(id)arg2;
- (void)insertObject:(id)arg1 atIndex:(unsigned long long)arg2;
- (id)objectsAtIndexes:(id)arg1;
- (id)objectAtIndex:(unsigned long long)arg1;
- (unsigned long long)indexOfObject:(id)arg1;
- (void)getObjects:(id *)arg1 range:(struct _NSRange)arg2;
- (id)_nonNilMutableOrderedSetValueWithSelector:(SEL)arg1;
- (void)_raiseNilValueExceptionWithSelector:(SEL)arg1;
- (unsigned long long)count;
- (void)_proxyNonGCFinalize;
- (id)_proxyInitWithContainer:(id)arg1 getter:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface NSKeyValueIvarMutableSet : NSKeyValueMutableSet
{
    struct objc_ivar *_ivar;
}

+ (CDStruct_7c9a8e9f *)_proxyNonGCPoolPointer;
- (void)unionSet:(id)arg1;
- (void)setSet:(id)arg1;
- (void)removeObject:(id)arg1;
- (void)removeAllObjects;
- (void)minusSet:(id)arg1;
- (void)intersectSet:(id)arg1;
- (void)addObjectsFromArray:(id)arg1;
- (void)addObject:(id)arg1;
- (id)objectEnumerator;
- (id)member:(id)arg1;
- (unsigned long long)count;
- (void)_proxyNonGCFinalize;
- (id)_proxyInitWithContainer:(id)arg1 getter:(id)arg2;

@end

@interface NSKeyValueSetter : NSKeyValueAccessor
{
}

@end

__attribute__((visibility("hidden")))
@interface NSKeyValueIvarSetter : NSKeyValueSetter
{
}

- (struct objc_ivar *)ivar;
- (id)initWithContainerClassID:(id)arg1 key:(id)arg2 containerIsa:(Class)arg3 ivar:(struct objc_ivar *)arg4;

@end

__attribute__((visibility("hidden")))
@interface NSKeyValueMethodGetter : NSKeyValueGetter
{
}

- (id)initWithContainerClassID:(id)arg1 key:(id)arg2 method:(struct objc_method *)arg3;

@end

__attribute__((visibility("hidden")))
@interface NSKeyValueMethodSetter : NSKeyValueSetter
{
    struct objc_method *_method;
}

- (struct objc_method *)method;
- (id)initWithContainerClassID:(id)arg1 key:(id)arg2 method:(struct objc_method *)arg3;

@end

__attribute__((visibility("hidden")))
@interface NSKeyValueMutatingCollectionMethodSet : NSObject
{
}

@end

__attribute__((visibility("hidden")))
@interface NSKeyValueMutatingArrayMethodSet : NSKeyValueMutatingCollectionMethodSet
{
    struct objc_method *insertObjectAtIndex;
    struct objc_method *removeObjectAtIndex;
    struct objc_method *replaceObjectAtIndex;
    struct objc_method *insertObjectsAtIndexes;
    struct objc_method *removeObjectsAtIndexes;
    struct objc_method *replaceObjectsAtIndexes;
}

@end

__attribute__((visibility("hidden")))
@interface NSKeyValueMutatingOrderedSetMethodSet : NSKeyValueMutatingCollectionMethodSet
{
    struct objc_method *insertObjectAtIndex;
    struct objc_method *removeObjectAtIndex;
    struct objc_method *replaceObjectAtIndex;
    struct objc_method *insertObjectsAtIndexes;
    struct objc_method *removeObjectsAtIndexes;
    struct objc_method *replaceObjectsAtIndexes;
}

@end

__attribute__((visibility("hidden")))
@interface NSKeyValueMutatingSetMethodSet : NSKeyValueMutatingCollectionMethodSet
{
    struct objc_method *addObject;
    struct objc_method *removeObject;
    struct objc_method *intersectSet;
    struct objc_method *minusSet;
    struct objc_method *unionSet;
    struct objc_method *setSet;
}

@end

__attribute__((visibility("hidden")))
@interface NSKeyValueNestedProperty : NSKeyValueProperty
{
    NSString *_relationshipKey;
    NSString *_keyPathFromRelatedObject;
    NSKeyValueUnnestedProperty *_relationshipProperty;
    NSString *_keyPathWithoutOperatorComponents;
    _Bool _isAllowedToResultInForwarding;
    id _dependentValueKeyOrKeys;
    _Bool _dependentValueKeyOrKeysIsASet;
}

- (_Bool)matchesWithoutOperatorComponentsKeyPath:(id)arg1;
- (id)dependentValueKeyOrKeysIsASet:(_Bool *)arg1;
- (void)object:(id)arg1 withObservance:(id)arg2 didChangeValueForKeyOrKeys:(id)arg3 recurse:(_Bool)arg4 forwardingValues:(CDStruct_a70f6672)arg5;
- (_Bool)object:(id)arg1 withObservance:(id)arg2 willChangeValueForKeyOrKeys:(id)arg3 recurse:(_Bool)arg4 forwardingValues:(CDStruct_a70f6672 *)arg5;
- (void)object:(id)arg1 didRemoveObservance:(id)arg2 recurse:(_Bool)arg3;
- (void)object:(id)arg1 didAddObservance:(id)arg2 recurse:(_Bool)arg3;
- (id)_keyPathIfAffectedByValueForMemberOfKeys:(id)arg1;
- (id)_keyPathIfAffectedByValueForKey:(id)arg1 exactMatch:(_Bool *)arg2;
- (Class)_isaForAutonotifying;
- (void)_addDependentValueKey:(id)arg1;
- (void)_givenPropertiesBeingInitialized:(struct __CFSet *)arg1 getAffectingProperties:(id)arg2;
- (id)description;
- (void)dealloc;
- (id)_initWithContainerClass:(id)arg1 keyPath:(id)arg2 firstDotIndex:(unsigned long long)arg3 propertiesBeingInitialized:(struct __CFSet *)arg4;

@end

__attribute__((visibility("hidden")))
@interface NSKeyValueNilOrderedSetEnumerator : NSEnumerator
{
}

- (id)nextObject;

@end

__attribute__((visibility("hidden")))
@interface NSKeyValueNilSetEnumerator : NSEnumerator
{
}

- (id)nextObject;

@end

__attribute__((visibility("hidden")))
@interface NSKeyValueNonmutatingCollectionMethodSet : NSObject
{
}

@end

__attribute__((visibility("hidden")))
@interface NSKeyValueNonmutatingArrayMethodSet : NSKeyValueNonmutatingCollectionMethodSet
{
    struct objc_method *count;
    struct objc_method *objectAtIndex;
    struct objc_method *getObjectsRange;
    struct objc_method *objectsAtIndexes;
}

@end

__attribute__((visibility("hidden")))
@interface NSKeyValueNonmutatingOrderedSetMethodSet : NSKeyValueNonmutatingCollectionMethodSet
{
    struct objc_method *count;
    struct objc_method *objectAtIndex;
    struct objc_method *indexOfObject;
    struct objc_method *getObjectsRange;
    struct objc_method *objectsAtIndexes;
}

@end

__attribute__((visibility("hidden")))
@interface NSKeyValueNonmutatingSetMethodSet : NSKeyValueNonmutatingCollectionMethodSet
{
    struct objc_method *count;
    struct objc_method *enumerator;
    struct objc_method *member;
}

@end

__attribute__((visibility("hidden")))
@interface NSKeyValueNotifyingMutableArray : NSKeyValueMutableArray
{
    NSMutableArray *_mutableArray;
}

+ (id)_proxyShare;
+ (CDStruct_7c9a8e9f *)_proxyNonGCPoolPointer;
- (void)replaceObjectsAtIndexes:(id)arg1 withObjects:(id)arg2;
- (void)replaceObjectAtIndex:(unsigned long long)arg1 withObject:(id)arg2;
- (void)removeObjectsAtIndexes:(id)arg1;
- (void)removeObjectAtIndex:(unsigned long long)arg1;
- (void)removeLastObject;
- (void)insertObjects:(id)arg1 atIndexes:(id)arg2;
- (void)insertObject:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)addObject:(id)arg1;
- (id)objectsAtIndexes:(id)arg1;
- (id)objectAtIndex:(unsigned long long)arg1;
- (void)getObjects:(id *)arg1 range:(struct _NSRange)arg2;
- (unsigned long long)count;
- (void)_proxyNonGCFinalize;
- (id)_proxyInitWithContainer:(id)arg1 getter:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface NSKeyValueNotifyingMutableCollectionGetter : NSKeyValueProxyGetter
{
    NSKeyValueProxyGetter *_mutableCollectionGetter;
}

- (id)mutableCollectionGetter;
- (void)dealloc;
- (id)initWithContainerClassID:(id)arg1 key:(id)arg2 mutableCollectionGetter:(id)arg3 proxyClass:(Class)arg4;

@end

__attribute__((visibility("hidden")))
@interface NSKeyValueNotifyingMutableOrderedSet : NSKeyValueMutableOrderedSet
{
    NSMutableOrderedSet *_mutableOrderedSet;
}

+ (id)_proxyShare;
+ (CDStruct_7c9a8e9f *)_proxyNonGCPoolPointer;
- (void)replaceObjectsAtIndexes:(id)arg1 withObjects:(id)arg2;
- (void)replaceObjectAtIndex:(unsigned long long)arg1 withObject:(id)arg2;
- (void)removeObjectsAtIndexes:(id)arg1;
- (void)removeObjectAtIndex:(unsigned long long)arg1;
- (void)insertObjects:(id)arg1 atIndexes:(id)arg2;
- (void)insertObject:(id)arg1 atIndex:(unsigned long long)arg2;
- (id)objectsAtIndexes:(id)arg1;
- (id)objectAtIndex:(unsigned long long)arg1;
- (unsigned long long)indexOfObject:(id)arg1;
- (void)getObjects:(id *)arg1 range:(struct _NSRange)arg2;
- (unsigned long long)count;
- (void)_proxyNonGCFinalize;
- (id)_proxyInitWithContainer:(id)arg1 getter:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface NSKeyValueNotifyingMutableSet : NSKeyValueMutableSet
{
    NSMutableSet *_mutableSet;
}

+ (id)_proxyShare;
+ (CDStruct_7c9a8e9f *)_proxyNonGCPoolPointer;
- (void)unionSet:(id)arg1;
- (void)setSet:(id)arg1;
- (void)removeObject:(id)arg1;
- (void)removeAllObjects;
- (void)minusSet:(id)arg1;
- (void)intersectSet:(id)arg1;
- (void)addObjectsFromArray:(id)arg1;
- (void)addObject:(id)arg1;
- (id)objectEnumerator;
- (id)member:(id)arg1;
- (unsigned long long)count;
- (void)_proxyNonGCFinalize;
- (id)_proxyInitWithContainer:(id)arg1 getter:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface NSWeakCallback : NSObject
{
    id _callback_next;
    CDUnknownFunctionPointerType _callback_function;
    id _callback_target;
}

@end

__attribute__((visibility("hidden")))
@interface NSKeyValueObservance : NSWeakCallback
{
    int _retainCountMinusOne;
    NSObject *_observer;
    NSKeyValueProperty *_property;
    unsigned long long _options;
    void *_context;
    NSObject *_originalObservable;
    unsigned long long _cachedUnrotatedHashComponent;
    _Bool _cachedIsShareable;
    NSPointerArray *_observationInfos;
}

- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)dealloc;
- (_Bool)_isDeallocating;
- (_Bool)_tryRetain;
- (unsigned long long)retainCount;
- (oneway void)release;
- (id)retain;
- (id)_initWithObserver:(id)arg1 property:(id)arg2 options:(unsigned long long)arg3 context:(void *)arg4 originalObservable:(id)arg5;

@end

__attribute__((visibility("hidden")))
@interface NSKeyValueObservationInfo : NSObject
{
    int _retainCountMinusOne;
    NSArray *_observances;
    unsigned long long _cachedHash;
    _Bool _cachedIsShareable;
    NSHashTable *_observables;
}

- (id)description;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)dealloc;
- (_Bool)_isDeallocating;
- (_Bool)_tryRetain;
- (unsigned long long)retainCount;
- (oneway void)release;
- (id)retain;
- (id)_initWithObservances:(id *)arg1 count:(unsigned long long)arg2;

@end

__attribute__((visibility("hidden")))
@interface NSKeyValueOrderedSet : NSOrderedSet <NSKeyValueProxyCaching>
{
    NSObject *_container;
    NSString *_key;
    NSKeyValueNonmutatingOrderedSetMethodSet *_methods;
}

+ (id)_proxyShare;
+ (CDStruct_7c9a8e9f *)_proxyNonGCPoolPointer;
- (id)objectsAtIndexes:(id)arg1;
- (id)objectAtIndex:(unsigned long long)arg1;
- (unsigned long long)indexOfObject:(id)arg1;
- (void)getObjects:(id *)arg1 range:(struct _NSRange)arg2;
- (unsigned long long)count;
- (void)dealloc;
- (void)_proxyNonGCFinalize;
- (CDStruct_a70f6672)_proxyLocator;
- (id)_proxyInitWithContainer:(id)arg1 getter:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface NSKeyValueProxyShareKey : NSObject <NSKeyValueProxyCaching>
{
    NSObject *_container;
    NSString *_key;
}

+ (id)_proxyShare;
+ (CDStruct_7c9a8e9f *)_proxyNonGCPoolPointer;
- (void)_proxyNonGCFinalize;
- (id)_proxyInitWithContainer:(id)arg1 getter:(id)arg2;
- (CDStruct_a70f6672)_proxyLocator;

@end

__attribute__((visibility("hidden")))
@interface NSKeyValueSet : NSSet <NSKeyValueProxyCaching>
{
    NSObject *_container;
    NSString *_key;
    NSKeyValueNonmutatingSetMethodSet *_methods;
}

+ (id)_proxyShare;
+ (CDStruct_7c9a8e9f *)_proxyNonGCPoolPointer;
- (id)objectEnumerator;
- (id)member:(id)arg1;
- (unsigned long long)count;
- (void)dealloc;
- (void)_proxyNonGCFinalize;
- (CDStruct_a70f6672)_proxyLocator;
- (id)_proxyInitWithContainer:(id)arg1 getter:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface NSKeyValueShareableObservanceKey : NSKeyValueObservance
{
}

@end

__attribute__((visibility("hidden")))
@interface NSKeyValueShareableObservationInfoKey : NSObject
{
    _Bool _addingNotRemoving;
    NSKeyValueObservationInfo *_baseObservationInfo;
    NSObject *_additionObserver;
    NSKeyValueProperty *_additionProperty;
    unsigned long long _additionOptions;
    void *_additionContext;
    NSObject *_additionOriginalObservable;
    NSKeyValueObservance *_removalObservance;
    unsigned long long _removalObservanceIndex;
}

@end

__attribute__((visibility("hidden")))
@interface NSKeyValueSlowGetter : NSKeyValueGetter
{
}

- (id)initWithContainerClassID:(id)arg1 key:(id)arg2 containerIsa:(Class)arg3;

@end

__attribute__((visibility("hidden")))
@interface NSKeyValueSlowMutableArray : NSKeyValueMutableArray
{
    NSKeyValueGetter *_valueGetter;
    NSKeyValueSetter *_valueSetter;
    _Bool _treatNilValuesLikeEmptyArrays;
    char _padding[3];
}

+ (CDStruct_7c9a8e9f *)_proxyNonGCPoolPointer;
- (void)replaceObjectsAtIndexes:(id)arg1 withObjects:(id)arg2;
- (void)replaceObjectAtIndex:(unsigned long long)arg1 withObject:(id)arg2;
- (void)removeObjectsAtIndexes:(id)arg1;
- (void)removeObjectAtIndex:(unsigned long long)arg1;
- (void)removeLastObject;
- (id)_createNonNilMutableArrayValueWithSelector:(SEL)arg1;
- (void)insertObjects:(id)arg1 atIndexes:(id)arg2;
- (void)insertObject:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)addObject:(id)arg1;
- (id)objectsAtIndexes:(id)arg1;
- (id)objectAtIndex:(unsigned long long)arg1;
- (void)getObjects:(id *)arg1 range:(struct _NSRange)arg2;
- (id)_nonNilArrayValueWithSelector:(SEL)arg1;
- (unsigned long long)count;
- (void)_raiseNilValueExceptionWithSelector:(SEL)arg1;
- (void)_proxyNonGCFinalize;
- (id)_proxyInitWithContainer:(id)arg1 getter:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface NSKeyValueSlowMutableCollectionGetter : NSKeyValueProxyGetter
{
    NSKeyValueGetter *_baseGetter;
    NSKeyValueSetter *_baseSetter;
}

- (_Bool)treatNilValuesLikeEmptyCollections;
- (id)baseSetter;
- (id)baseGetter;
- (void)dealloc;
- (id)initWithContainerClassID:(id)arg1 key:(id)arg2 baseGetter:(id)arg3 baseSetter:(id)arg4 containerIsa:(Class)arg5 proxyClass:(Class)arg6;

@end

__attribute__((visibility("hidden")))
@interface NSKeyValueSlowMutableOrderedSet : NSKeyValueMutableOrderedSet
{
    NSKeyValueGetter *_valueGetter;
    NSKeyValueSetter *_valueSetter;
    _Bool _treatNilValuesLikeEmptyOrderedSets;
    char _padding[3];
}

+ (CDStruct_7c9a8e9f *)_proxyNonGCPoolPointer;
- (void)replaceObjectsAtIndexes:(id)arg1 withObjects:(id)arg2;
- (void)replaceObjectAtIndex:(unsigned long long)arg1 withObject:(id)arg2;
- (void)removeObjectsAtIndexes:(id)arg1;
- (void)removeObjectAtIndex:(unsigned long long)arg1;
- (id)_createNonNilMutableOrderedSetValueWithSelector:(SEL)arg1;
- (void)insertObjects:(id)arg1 atIndexes:(id)arg2;
- (void)insertObject:(id)arg1 atIndex:(unsigned long long)arg2;
- (id)objectsAtIndexes:(id)arg1;
- (id)objectAtIndex:(unsigned long long)arg1;
- (unsigned long long)indexOfObject:(id)arg1;
- (void)getObjects:(id *)arg1 range:(struct _NSRange)arg2;
- (id)_nonNilOrderedSetValueWithSelector:(SEL)arg1;
- (unsigned long long)count;
- (void)_raiseNilValueExceptionWithSelector:(SEL)arg1;
- (void)_proxyNonGCFinalize;
- (id)_proxyInitWithContainer:(id)arg1 getter:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface NSKeyValueSlowMutableSet : NSKeyValueMutableSet
{
    NSKeyValueGetter *_valueGetter;
    NSKeyValueSetter *_valueSetter;
    _Bool _treatNilValuesLikeEmptySets;
    char _padding[3];
}

+ (CDStruct_7c9a8e9f *)_proxyNonGCPoolPointer;
- (void)unionSet:(id)arg1;
- (void)setSet:(id)arg1;
- (void)removeObject:(id)arg1;
- (void)removeAllObjects;
- (void)minusSet:(id)arg1;
- (void)intersectSet:(id)arg1;
- (void)addObjectsFromArray:(id)arg1;
- (void)addObject:(id)arg1;
- (id)_createMutableSetValueWithSelector:(SEL)arg1;
- (id)objectEnumerator;
- (id)member:(id)arg1;
- (unsigned long long)count;
- (id)_setValueWithSelector:(SEL)arg1;
- (void)_raiseNilValueExceptionWithSelector:(SEL)arg1;
- (void)_proxyNonGCFinalize;
- (id)_proxyInitWithContainer:(id)arg1 getter:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface NSKeyValueSlowSetter : NSKeyValueSetter
{
}

- (id)initWithContainerClassID:(id)arg1 key:(id)arg2 containerIsa:(Class)arg3;

@end

__attribute__((visibility("hidden")))
@interface NSKeyValueUndefinedGetter : NSKeyValueGetter
{
}

- (id)initWithContainerClassID:(id)arg1 key:(id)arg2 containerIsa:(Class)arg3;

@end

__attribute__((visibility("hidden")))
@interface NSKeyValueUndefinedSetter : NSKeyValueSetter
{
}

- (id)initWithContainerClassID:(id)arg1 key:(id)arg2 containerIsa:(Class)arg3;

@end

__attribute__((visibility("hidden")))
@interface NSKeyValueUnnestedProperty : NSKeyValueProperty
{
    NSArray *_affectingProperties;
    _Bool _cachedIsaForAutonotifyingIsValid;
    Class _cachedIsaForAutonotifying;
}

- (_Bool)matchesWithoutOperatorComponentsKeyPath:(id)arg1;
- (void)object:(id)arg1 withObservance:(id)arg2 didChangeValueForKeyOrKeys:(id)arg3 recurse:(_Bool)arg4 forwardingValues:(CDStruct_a70f6672)arg5;
- (_Bool)object:(id)arg1 withObservance:(id)arg2 willChangeValueForKeyOrKeys:(id)arg3 recurse:(_Bool)arg4 forwardingValues:(CDStruct_a70f6672 *)arg5;
- (void)object:(id)arg1 didRemoveObservance:(id)arg2 recurse:(_Bool)arg3;
- (void)object:(id)arg1 didAddObservance:(id)arg2 recurse:(_Bool)arg3;
- (id)keyPathIfAffectedByValueForMemberOfKeys:(id)arg1;
- (id)_keyPathIfAffectedByValueForMemberOfKeys:(id)arg1;
- (id)keyPathIfAffectedByValueForKey:(id)arg1 exactMatch:(_Bool *)arg2;
- (id)_keyPathIfAffectedByValueForKey:(id)arg1 exactMatch:(_Bool *)arg2;
- (Class)isaForAutonotifying;
- (Class)_isaForAutonotifying;
- (void)_addDependentValueKey:(id)arg1;
- (void)_givenPropertiesBeingInitialized:(struct __CFSet *)arg1 getAffectingProperties:(id)arg2;
- (id)description;
- (void)dealloc;
- (id)_initWithContainerClass:(id)arg1 key:(id)arg2 propertiesBeingInitialized:(struct __CFSet *)arg3;

@end

@interface NSKeyedArchiver : NSCoder
{
    void *_stream;
    unsigned long long _flags;
    id _delegate;
    id _containers;
    id _objects;
    id _objRefMap;
    id _replacementMap;
    id _classNameMap;
    id _conditionals;
    id _classes;
    unsigned long long _genericKey;
    void *_cache;
    unsigned long long _cacheSize;
    unsigned long long _estimatedCount;
    void *_reserved2;
    id _visited;
    void *_reserved0;
}

+ (id)classNameForClass:(Class)arg1;
+ (void)setClassName:(id)arg1 forClass:(Class)arg2;
+ (_Bool)archiveRootObject:(id)arg1 toFile:(id)arg2;
+ (id)archivedDataWithRootObject:(id)arg1;
+ (void)initialize;
- (void)setRequiresSecureCoding:(_Bool)arg1;
- (_Bool)requiresSecureCoding;
- (unsigned int)systemVersion;
- (long long)versionForClassName:(id)arg1;
- (void)encodeArrayOfObjCType:(const char *)arg1 count:(unsigned long long)arg2 at:(const void *)arg3;
- (void)encodeValueOfObjCType:(const char *)arg1 at:(const void *)arg2;
- (void)encodeValuesOfObjCTypes:(const char *)arg1;
- (void)encodeBytes:(const void *)arg1 length:(unsigned long long)arg2;
- (void)encodeDataObject:(id)arg1;
- (void)encodeRootObject:(id)arg1;
- (void)encodeByrefObject:(id)arg1;
- (void)encodeBycopyObject:(id)arg1;
- (void)encodeConditionalObject:(id)arg1;
- (void)encodeObject:(id)arg1;
- (void)_encodePropertyList:(id)arg1 forKey:(id)arg2;
- (void)encodeBytes:(const char *)arg1 length:(unsigned long long)arg2 forKey:(id)arg3;
- (void)encodeDouble:(double)arg1 forKey:(id)arg2;
- (void)encodeFloat:(float)arg1 forKey:(id)arg2;
- (void)encodeInt64:(long long)arg1 forKey:(id)arg2;
- (void)encodeInt32:(int)arg1 forKey:(id)arg2;
- (void)encodeInt:(int)arg1 forKey:(id)arg2;
- (void)encodeBool:(_Bool)arg1 forKey:(id)arg2;
- (void)_encodeArrayOfObjects:(id)arg1 forKey:(id)arg2;
- (void)encodeConditionalObject:(id)arg1 forKey:(id)arg2;
- (void)encodeObject:(id)arg1 forKey:(id)arg2;
- (void)replaceObject:(id)arg1 withObject:(id)arg2;
- (void)finishEncoding;
- (id)classNameForClass:(Class)arg1;
- (void)setClassName:(id)arg1 forClass:(Class)arg2;
@property unsigned long long outputFormat;
@property id <NSKeyedArchiverDelegate> delegate;
- (_Bool)allowsKeyedCoding;
- (id)description;
- (void)finalize;
- (void)dealloc;
- (id)initForWritingWithMutableData:(id)arg1;
- (id)_initWithOutput:(id)arg1;
- (id)init;
- (id)_blobForCurrentObject;
- (void)_setBlobForCurrentObject:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface NSKeyedPortCoder : NSConcretePortCoder
{
    id sndPort;
    id rcvPort;
    NSMutableDictionary *root;
    NSMutableArray *containers;
    NSMutableArray *components;
    _Bool mainDataFinished;
    unsigned long long nextGenericIndex;
    unsigned long long nextOutOfLineGenericIndex;
    _Bool isBycopy;
    _Bool isByref;
    _Bool isValid;
    NSMutableArray *importedObjects;
}

- (void)decodeReturnValueOfInvocation:(id)arg1 forKey:(id)arg2;
- (void)encodeReturnValueOfInvocation:(id)arg1 forKey:(id)arg2;
- (id)decodeInvocation;
- (void)encodeInvocation:(id)arg1;
- (id)decodeObject;
- (void)decodeValueOfObjCType:(const char *)arg1 at:(void *)arg2;
- (void *)decodeBytesWithReturnedLength:(unsigned long long *)arg1;
- (id)decodePortObject;
- (id)decodeDataObject;
- (id)_decodeObjectNoKey;
- (void)encodeBytes:(const void *)arg1 length:(unsigned long long)arg2;
- (void)encodeConditionalObject:(id)arg1;
- (void)encodeObject:(id)arg1;
- (void)encodeByrefObject:(id)arg1;
- (void)encodeBycopyObject:(id)arg1;
- (void)encodeValueOfObjCType:(const char *)arg1 at:(const void *)arg2;
- (void)encodePortObject:(id)arg1;
- (void)encodeDataObject:(id)arg1;
- (void)_encodeObjectNoKey:(id)arg1;
- (void)_setByref:(_Bool)arg1;
- (void)_setBycopy:(_Bool)arg1;
- (long long)versionForClassName:(id)arg1;
- (id)decodePortObjectForKey:(id)arg1;
- (id)decodeDataObjectForKey:(id)arg1;
- (id)_getOutOfLineObjectForKey:(id)arg1;
- (const char *)decodeBytesForKey:(id)arg1 returnedLength:(unsigned long long *)arg2;
- (long long)decodeIntegerForKey:(id)arg1;
- (double)decodeDoubleForKey:(id)arg1;
- (float)decodeFloatForKey:(id)arg1;
- (long long)decodeInt64ForKey:(id)arg1;
- (int)decodeInt32ForKey:(id)arg1;
- (int)decodeIntForKey:(id)arg1;
- (_Bool)decodeBoolForKey:(id)arg1;
- (id)_decodePropertyListForKey:(id)arg1;
- (id)decodeObjectForKey:(id)arg1;
- (id)_getObjectFromTopForKey:(id)arg1;
- (_Bool)containsValueForKey:(id)arg1;
- (void)encodePortObject:(id)arg1 forKey:(id)arg2;
- (void)encodeDataObject:(id)arg1 forKey:(id)arg2;
- (void)_addOutOfLineObject:(id)arg1 forKey:(id)arg2;
- (void)encodeBytes:(const char *)arg1 length:(unsigned long long)arg2 forKey:(id)arg3;
- (void)encodeInteger:(long long)arg1 forKey:(id)arg2;
- (void)encodeDouble:(double)arg1 forKey:(id)arg2;
- (void)encodeFloat:(float)arg1 forKey:(id)arg2;
- (void)encodeInt64:(long long)arg1 forKey:(id)arg2;
- (void)encodeInt32:(int)arg1 forKey:(id)arg2;
- (void)encodeInt:(int)arg1 forKey:(id)arg2;
- (void)encodeBool:(_Bool)arg1 forKey:(id)arg2;
- (void)encodeConditionalObject:(id)arg1 forKey:(id)arg2;
- (void)_encodePropertyList:(id)arg1 forKey:(id)arg2;
- (void)encodeObject:(id)arg1 forKey:(id)arg2;
- (void)_finishUpObject;
- (void)_prepareToEncodeObjectForKey:(id)arg1;
- (_Bool)allowsKeyedCoding;
- (void)_addObjectToTop:(id)arg1 forKey:(id)arg2;
- (id)_topContainer;
- (void)importObject:(id)arg1;
- (id)importedObjects;
- (_Bool)isByref;
- (_Bool)isBycopy;
- (id)_proxyForLocalObject:(id)arg1;
- (id)connection;
- (id)finishedComponents;
- (void)dispatch;
- (void)_buildMainData;
- (id)debugDescription;
- (void)invalidate;
- (void)dealloc;
- (id)initWithReceivePort:(id)arg1 sendPort:(id)arg2 components:(id)arg3;

@end

@interface NSKeyedUnarchiver : NSCoder
{
    id _delegate;
    unsigned int _flags;
    id _objRefMap;
    id _replacementMap;
    id _nameClassMap;
    id _tmpRefObjMap;
    id _refObjMap;
    int _genericKey;
    id _data;
    void *_offsetData;
    id _containers;
    id _objects;
    const char *_bytes;
    unsigned long long _len;
    id _helper;
    void *_reserved0;
}

+ (Class)classForClassName:(id)arg1;
+ (void)setClass:(Class)arg1 forClassName:(id)arg2;
+ (id)unarchiveObjectWithData:(id)arg1;
+ (id)unarchiveObjectWithFile:(id)arg1;
+ (void)initialize;
- (unsigned int)systemVersion;
- (long long)versionForClassName:(id)arg1;
- (void)decodeArrayOfObjCType:(const char *)arg1 count:(unsigned long long)arg2 at:(void *)arg3;
- (void)decodeValueOfObjCType:(const char *)arg1 at:(void *)arg2;
- (void)decodeValuesOfObjCTypes:(const char *)arg1;
- (void *)decodeBytesWithReturnedLength:(unsigned long long *)arg1;
- (id)decodeDataObject;
- (id)decodeObject;
- (unsigned int)_currentUniqueIdentifier;
- (id)_decodePropertyListForKey:(id)arg1;
- (const char *)decodeBytesForKey:(id)arg1 returnedLength:(unsigned long long *)arg2;
- (double)decodeDoubleForKey:(id)arg1;
- (float)decodeFloatForKey:(id)arg1;
- (long long)decodeInt64ForKey:(id)arg1;
- (int)decodeInt32ForKey:(id)arg1;
- (int)decodeIntForKey:(id)arg1;
- (_Bool)decodeBoolForKey:(id)arg1;
- (id)_decodeArrayOfObjectsForKey:(id)arg1;
- (void)setRequiresSecureCoding:(_Bool)arg1;
- (_Bool)requiresSecureCoding;
- (id)allowedClasses;
- (id)decodeObjectOfClasses:(id)arg1 forKey:(id)arg2;
- (id)decodeObjectOfClass:(Class)arg1 forKey:(id)arg2;
- (id)decodeObjectForKey:(id)arg1;
- (_Bool)containsValueForKey:(id)arg1;
- (void)_replaceObject:(id)arg1 withObject:(id)arg2;
- (void)replaceObject:(id)arg1 withObject:(id)arg2;
- (void)_temporaryMapReplaceObject:(id)arg1 withObject:(id)arg2;
- (void)finishDecoding;
- (void)setAllowedClasses:(id)arg1;
- (void)_setAllowedClassNames:(id)arg1;
- (id)_allowedClassNames;
- (Class)classForClassName:(id)arg1;
- (void)setClass:(Class)arg1 forClassName:(id)arg2;
@property id <NSKeyedUnarchiverDelegate> delegate;
- (_Bool)allowsKeyedCoding;
- (id)description;
- (void)finalize;
- (void)dealloc;
- (id)initWithStream:(id)arg1;
- (id)initForReadingWithData:(id)arg1;
- (id)_initWithStream:(struct __CFReadStream *)arg1 data:(id)arg2 topDict:(struct __CFDictionary *)arg3;
- (id)init;
- (id)_blobForCurrentObject;

@end

__attribute__((visibility("hidden")))
@interface NSLayoutConstraintParser : NSObject
{
    NSString *_line;
    const char *_lineChars;
    unsigned long long _lineLength;
    unsigned long long _opts;
    _Bool _useHorizontalArrangement;
    NSDictionary *_metrics;
    NSDictionary *_views;
    id <NSLayoutItem> _containerView;
    NSMutableArray *_constraints;
    NSMutableArray *_unflushedWidthConstraints;
    NSMutableArray *_alignmentConstraints;
    unsigned long long _currentCharacter;
    NSMutableArray *_incompleteConstraints;
    id <NSLayoutItem> _parsedLeftView;
    id <NSLayoutItem> _parsedRightView;
    id <NSLayoutItem> _parsedConstrainedWidthView;
}

+ (id)constraintsWithVisualFormat:(id)arg1 options:(unsigned long long)arg2 metrics:(id)arg3 views:(id)arg4;
- (void)finishConstraint;
- (void)findContainerView;
- (struct _NSRange)rangeOfName;
- (void)parseOp;
- (double)parseConstant;
- (void)parsePredicate;
- (void)parsePredicateList;
- (void)parsePredicateWithParentheses;
- (void)parseConnection;
- (void)flushWidthConstraints;
- (id)parseView;
- (void)parse;
- (id)layoutItemForKey:(id)arg1;
- (id)metricForKey:(id)arg1;
- (void)failWithDescription:(id)arg1;
- (id)description;
- (id)descriptionLineWithCurrentCharacterPointer;
- (id)constraints;
- (void)dealloc;
- (id)initWithFormat:(id)arg1 options:(unsigned long long)arg2 metrics:(id)arg3 views:(id)arg4;

@end

@interface NSLeafProxy <NSCopying>
{
    Class isa;
    NSString *dir;
    NSString *file;
    NSDocInfo *docInfo;
    long long refCount;
    id realObject;
}

+ (void)forwardInvocation:(id)arg1;
+ (id)alloc;
+ (id)allocWithZone:(struct _NSZone *)arg1;
- (_Bool)isProxy;
- (void)dealloc;
- (unsigned long long)retainCount;
- (id)autorelease;
- (_Bool)_isDeallocating;
- (_Bool)_tryRetain;
- (void)release;
- (id)retain;
- (void)reallyDealloc;
- (id)copy;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initDir:(id)arg1 file:(id)arg2 docInfo:(id)arg3;
- (id)methodSignatureForSelector:(SEL)arg1;
- (void)forwardInvocation:(id)arg1;

@end

@interface NSLengthFormatter : NSFormatter
{
    void *_formatter;
    _Bool _isForPersonHeight;
    void *_reserved[2];
}

- (id)attributedStringForObjectValue:(id)arg1 withDefaultAttributes:(id)arg2;
- (id)stringForObjectValue:(id)arg1;
- (_Bool)getObjectValue:(out id *)arg1 forString:(id)arg2 errorDescription:(out id *)arg3;
- (id)stringFromValue:(double)arg1 unit:(long long)arg2;
- (id)stringFromMeters:(double)arg1;
- (id)unitStringFromMeters:(double)arg1 usedUnit:(long long *)arg2;
- (id)unitStringFromValue:(double)arg1 unit:(long long)arg2;
@property(getter=isForPersonHeightUse) _Bool forPersonHeightUse;
@property long long unitStyle;
@property(copy) NSNumberFormatter *numberFormatter;
- (void)dealloc;
- (id)init;
- (long long)targetUnitFromMeters:(double)arg1;

@end

@interface NSStringPredicateOperator : NSPredicateOperator
{
    unsigned long long _flags;
}

+ (_Bool)supportsSecureCoding;
- (unsigned long long)options;
- (void)_setOptions:(unsigned long long)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)flags;
- (id)_modifierString;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithOperatorType:(unsigned long long)arg1 modifier:(unsigned long long)arg2 variant:(unsigned long long)arg3;

@end

__attribute__((visibility("hidden")))
@interface NSMatchingPredicateOperator : NSStringPredicateOperator
{
    int _contextLock;
    CDStruct_c69bce23 *_regexContext;
}

- (_Bool)performPrimitiveOperationUsingObject:(id)arg1 andObject:(id)arg2;
- (_Bool)_shouldEscapeForLike;
- (SEL)selector;
- (id)symbol;
- (void)finalize;
- (void)dealloc;
- (void)_clearContext;
- (id)initWithOperatorType:(unsigned long long)arg1 modifier:(unsigned long long)arg2 variant:(unsigned long long)arg3;

@end

__attribute__((visibility("hidden")))
@interface NSLikePredicateOperator : NSMatchingPredicateOperator
{
}

- (_Bool)_shouldEscapeForLike;
- (SEL)selector;
- (id)symbol;

@end

@interface NSLinguisticTagger : NSObject
{
    NSArray *_schemes;
    unsigned long long _options;
    NSString *_string;
    id _orthographyArray;
    id _tokenArray;
    id _reserved;
}

+ (_Bool)supportsLanguage:(id)arg1;
+ (id)availableTagSchemesForLanguage:(id)arg1;
- (void)enumerateTagsInRange:(struct _NSRange)arg1 scheme:(id)arg2 options:(unsigned long long)arg3 usingBlock:(CDUnknownBlockType)arg4;
- (id)_tokenDataForParagraphAtIndex:(unsigned long long)arg1 paragraphRange:(struct _NSRange *)arg2 tagScheme:(id)arg3;
- (id)_tokenDataForParagraphAtIndex:(unsigned long long)arg1 paragraphRange:(struct _NSRange *)arg2 requireLemmas:(_Bool)arg3 requirePartsOfSpeech:(_Bool)arg4 requireNamedEntities:(_Bool)arg5;
- (void)_tokenizeParagraphAtIndex:(unsigned long long)arg1 requireLemmas:(_Bool)arg2 requirePartsOfSpeech:(_Bool)arg3 requireNamedEntities:(_Bool)arg4;
- (id)_tokenDataForParagraphRange:(struct _NSRange)arg1 requireLemmas:(_Bool)arg2 requirePartsOfSpeech:(_Bool)arg3 requireNamedEntities:(_Bool)arg4;
- (void)_analyzeTokensInWordRange:(struct _NSRange)arg1 paragraphRange:(struct _NSRange)arg2;
- (void)_analyzeTokensInInterwordRange:(struct _NSRange)arg1 paragraphRange:(struct _NSRange)arg2;
- (void)_analyzePunctuationTokensInRange:(struct _NSRange)arg1 paragraphRange:(struct _NSRange)arg2;
- (void)_calculateSentenceRangesForParagraphRange:(struct _NSRange)arg1;
- (void)_acceptSentencesForParagraphRange:(struct _NSRange)arg1;
- (_Bool)_acceptSentenceTerminatorRange:(struct _NSRange)arg1 paragraphRange:(struct _NSRange)arg2 tokens:(struct _NSLTToken *)arg3 count:(unsigned long long)arg4 tokenIndex:(unsigned long long)arg5;
- (id)tagsInRange:(struct _NSRange)arg1 scheme:(id)arg2 options:(unsigned long long)arg3 tokenRanges:(id *)arg4;
- (id)possibleTagsAtIndex:(unsigned long long)arg1 scheme:(id)arg2 tokenRange:(struct _NSRange *)arg3 sentenceRange:(struct _NSRange *)arg4 scores:(id *)arg5;
- (id)tagAtIndex:(unsigned long long)arg1 scheme:(id)arg2 tokenRange:(struct _NSRange *)arg3 sentenceRange:(struct _NSRange *)arg4;
- (_Bool)_ngramTagsAndFrequenciesForMisspelledRange:(struct _NSRange)arg1 word:(id)arg2 tags:(id *)arg3 frequencies:(id *)arg4;
- (id)_rankedCandidatesForMisspelledRange:(struct _NSRange)arg1 candidates:(id)arg2;
- (id)_rankedCandidatesForMisspelledRange:(struct _NSRange)arg1 candidates:(id)arg2 contextualFrequencies:(id *)arg3 baseFrequencies:(id *)arg4;
- (struct _NSRange)sentenceRangeForRange:(struct _NSRange)arg1;
- (id)orthographyAtIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;
- (void)setOrthography:(id)arg1 range:(struct _NSRange)arg2;
- (void)stringEditedInRange:(struct _NSRange)arg1 changeInLength:(long long)arg2;
@property(retain) NSString *string;
- (id)_tagSchemeForScheme:(id)arg1;
@property(readonly, copy) NSArray *tagSchemes;
- (id)description;
- (void)dealloc;
- (id)initWithTagSchemes:(id)arg1 options:(unsigned long long)arg2;

@end

@interface NSLinkCheckingResult : NSTextCheckingResult
{
    struct _NSRange _range;
    NSURL *_url;
}

- (id)URL;
- (_Bool)_adjustRangesWithOffset:(long long)arg1;
- (id)resultByAdjustingRangesWithOffset:(long long)arg1;
- (struct _NSRange)range;
- (unsigned long long)resultType;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)description;
- (void)dealloc;
- (id)initWithRange:(struct _NSRange)arg1 URL:(id)arg2;

@end

@interface NSLocale (NSLocale)
+ (id)autoupdatingCurrentLocale;
- (Class)classForCoder;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)debugDescription;
@end

@interface NSLocale (NSLocale_LanguageExtras)
+ (id)mostPreferredLanguageOf:(id)arg1 withPreferredLanguages:(id)arg2 forUsage:(unsigned long long)arg3 options:(unsigned long long)arg4;
+ (id)mostPreferredLanguageOf:(id)arg1 forUsage:(unsigned long long)arg2 options:(unsigned long long)arg3;
+ (void)registerPreferredLanguage:(id)arg1 usage:(unsigned long long)arg2 confidence:(float)arg3;
+ (void)setPreferredLanguages:(id)arg1;
+ (id)systemLanguages;
@end

@interface NSLocalizableString : NSString
{
    NSString *_stringsFileKey;
    NSString *_developmentLanguageString;
}

+ (id)localizableStringWithStringsFileKey:(id)arg1 developmentLanguageString:(id)arg2;
- (void)setDevelopmentLanguageString:(id)arg1;
@property(readonly, copy) NSString *developmentLanguageString;
- (void)setStringsFileKey:(id)arg1;
@property(readonly, copy) NSString *stringsFileKey;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithStringsFileKey:(id)arg1 developmentLanguageString:(id)arg2;
- (void)encodeWithCoder:(id)arg1;
- (Class)classForCoder;
- (id)initWithCoder:(id)arg1;
- (unsigned short)characterAtIndex:(unsigned long long)arg1;
- (unsigned long long)length;
- (id)awakeAfterUsingCoder:(id)arg1;

@end

@interface NSLock : NSObject <NSLocking>
{
    void *_priv;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
@property(copy) NSString *name;
- (id)description;
- (void)unlock;
- (_Bool)tryLock;
- (_Bool)lockBeforeDate:(id)arg1;
- (void)lock;
- (void)finalize;
- (void)dealloc;
- (id)init;

@end

@interface NSPortNameServer : NSObject
{
}

+ (id)defaultPortNameServer;
+ (id)systemDefaultPortNameServer;
- (id)portForName:(id)arg1 onHost:(id)arg2;
- (_Bool)registerPort:(id)arg1 forName:(id)arg2;
- (_Bool)removePortForName:(id)arg1;
- (_Bool)registerPort:(id)arg1 name:(id)arg2;
- (id)portForName:(id)arg1 host:(id)arg2;
- (id)portForName:(id)arg1;

@end

@interface NSMachBootstrapServer : NSPortNameServer
{
}

+ (id)sharedInstance;
- (_Bool)removePortForName:(id)arg1;
- (id)portForName:(id)arg1 host:(id)arg2;
- (id)servicePortWithName:(id)arg1;
- (_Bool)registerPort:(id)arg1 name:(id)arg2;
- (id)portForName:(id)arg1;
- (id)portForName:(id)arg1 options:(unsigned long long)arg2;

@end

@interface NSPort : NSObject <NSCopying, NSCoding>
{
}

+ (id)portWithMachPort:(unsigned int)arg1;
+ (id)port;
+ (id)allocWithZone:(struct _NSZone *)arg1;
- (void)removeConnection:(id)arg1 fromRunLoop:(id)arg2 forMode:(id)arg3;
- (void)addConnection:(id)arg1 toRunLoop:(id)arg2 forMode:(id)arg3;
- (void)removeFromRunLoop:(id)arg1 forMode:(id)arg2;
- (void)scheduleInRunLoop:(id)arg1 forMode:(id)arg2;
- (_Bool)sendBeforeDate:(id)arg1 msgid:(unsigned long long)arg2 components:(id)arg3 from:(id)arg4 reserved:(unsigned long long)arg5;
- (_Bool)sendBeforeDate:(id)arg1 components:(id)arg2 from:(id)arg3 reserved:(unsigned long long)arg4;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (Class)classForCoder;
- (Class)classForPortCoder;
- (id)replacementObjectForCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
@property(readonly) unsigned long long reservedSpaceLength;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (unsigned int)machPort;
@property(readonly, getter=isValid) _Bool valid;
- (void)invalidate;
- (id)initWithMachPort:(unsigned int)arg1;

@end

@interface NSMachPort : NSPort
{
    id _delegate;
    unsigned long long _flags;
    unsigned int _machPort;
    unsigned long long _reserved;
}

+ (_Bool)sendBeforeTime:(double)arg1 streamData:(id)arg2 components:(id)arg3 to:(id)arg4 from:(id)arg5 msgid:(unsigned int)arg6 reserved:(unsigned long long)arg7;
+ (void)parseMachMessage:(void *)arg1 localPort:(id *)arg2 remotePort:(id *)arg3 msgid:(unsigned int *)arg4 components:(id *)arg5;
+ (void)_fixNSMachPortLeak;
+ (id)portWithMachPort:(unsigned int)arg1 options:(unsigned long long)arg2;
+ (id)portWithMachPort:(unsigned int)arg1;
+ (id)port;
+ (void)resetAllPorts;
- (void)finalize;
- (void)dealloc;
- (id)init;
- (id)initWithMachPort:(unsigned int)arg1;
- (id)initWithMachPort:(unsigned int)arg1 options:(unsigned long long)arg2;
- (void)handlePortMessage:(id)arg1;
- (void)addConnection:(id)arg1 toRunLoop:(id)arg2 forMode:(id)arg3;
- (void)removeFromRunLoop:(id)arg1 forMode:(id)arg2;
- (void)scheduleInRunLoop:(id)arg1 forMode:(id)arg2;
- (_Bool)sendBeforeDate:(id)arg1 msgid:(unsigned long long)arg2 components:(id)arg3 from:(id)arg4 reserved:(unsigned long long)arg5;
- (_Bool)sendBeforeDate:(id)arg1 components:(id)arg2 from:(id)arg3 reserved:(unsigned long long)arg4;
- (_Bool)sendBeforeTime:(double)arg1 streamData:(void *)arg2 components:(id)arg3 from:(id)arg4 msgid:(unsigned int)arg5;
- (id)delegate;
- (void)setDelegate:(id)arg1;
@property(readonly) unsigned int machPort;
- (void)invalidate;
- (_Bool)isValid;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (unsigned long long)retainCount;
- (_Bool)_tryRetain;
- (_Bool)_isDeallocating;
- (oneway void)release;
- (id)retain;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)_cfTypeID;

@end

@interface NSMassFormatter : NSFormatter
{
    void *_formatter;
    _Bool _isForPersonMassUse;
    void *_reserved[2];
}

@property(getter=isForPersonMassUse) _Bool forPersonMassUse; // @synthesize forPersonMassUse=_isForPersonMassUse;
- (id)stringFromValue:(double)arg1 unit:(long long)arg2;
- (id)stringFromKilograms:(double)arg1;
- (id)unitStringFromValue:(double)arg1 unit:(long long)arg2;
- (id)unitStringFromKilograms:(double)arg1 usedUnit:(long long *)arg2;
@property long long unitStyle;
@property(copy) NSNumberFormatter *numberFormatter;
- (void)dealloc;
- (id)init;
- (long long)targetUnitFromKilograms:(double)arg1;
- (id)attributedStringForObjectValue:(id)arg1 withDefaultAttributes:(id)arg2;
- (id)stringForObjectValue:(id)arg1;
- (_Bool)getObjectValue:(out id *)arg1 forString:(id)arg2 errorDescription:(out id *)arg3;

@end

@interface NSMessagePort : NSPort
{
    void *_port;
    id _delegate;
}

+ (void)_fixNSMessagePortLeak;
+ (_Bool)sendBeforeTime:(double)arg1 streamData:(id)arg2 components:(id)arg3 to:(id)arg4 from:(id)arg5 msgid:(unsigned int)arg6 reserved:(unsigned long long)arg7;
- (void)finalize;
- (void)dealloc;
- (unsigned long long)retainCount;
- (oneway void)release;
- (id)retain;
- (_Bool)_tryRetain;
- (_Bool)_isDeallocating;
- (id)init;
- (id)initWithRemoteName:(id)arg1;
- (id)initWithName:(id)arg1;
- (void)removeFromRunLoop:(id)arg1 forMode:(id)arg2;
- (void)scheduleInRunLoop:(id)arg1 forMode:(id)arg2;
- (_Bool)sendBeforeDate:(id)arg1 msgid:(unsigned long long)arg2 components:(id)arg3 from:(id)arg4 reserved:(unsigned long long)arg5;
- (_Bool)sendBeforeDate:(id)arg1 components:(id)arg2 from:(id)arg3 reserved:(unsigned long long)arg4;
- (_Bool)sendBeforeTime:(double)arg1 streamData:(void *)arg2 components:(id)arg3 from:(id)arg4 msgid:(unsigned int)arg5;
- (_Bool)setName:(id)arg1;
- (id)name;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (void)invalidate;
- (_Bool)isValid;

@end

@interface NSMessagePortNameServer : NSPortNameServer
{
}

+ (id)sharedInstance;
- (_Bool)removePortForName:(id)arg1;
- (_Bool)registerPort:(id)arg1 name:(id)arg2;
- (id)portForName:(id)arg1 host:(id)arg2;
- (id)portForName:(id)arg1;

@end

@interface NSMetadataItem : NSObject
{
    id _item;
    void *_reserved;
}

@property(readonly, copy) NSArray *attributes;
- (id)valuesForAttributes:(id)arg1;
- (id)valueForAttribute:(id)arg1;
- (id)valueForKey:(id)arg1;
- (void)_setQuery:(id)arg1;
- (id)_item;
- (void)dealloc;
- (id)_init:(CDUnion_a1fd0927)arg1;

@end

@interface NSMetadataQuery : NSObject
{
    unsigned long long _flags;
    double _interval;
    id _private[11];
    void *_reserved;
}

+ (_Bool)automaticallyNotifiesObserversForKey:(id)arg1;
+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (void)didEndPossibleFileOperation:(id)arg1;
+ (id)willBeginPossibleCreationOfItemAtURL:(id)arg1;
+ (id)willBeginPossibleDeletionOfItemAtURL:(id)arg1;
+ (id)willBeginPossibleMoveOfItemAtURL:(id)arg1 toURL:(id)arg2;
+ (Class)_stitchingClass;
- (id)valueOfAttribute:(id)arg1 forResultAtIndex:(unsigned long long)arg2;
@property(readonly, copy) NSArray *groupedResults;
@property(readonly, copy) NSDictionary *valueLists;
- (unsigned long long)indexOfResult:(id)arg1;
@property(readonly, copy) NSArray *results;
- (void)_zapResultArrayIfIdenticalTo:(id)arg1;
- (void)enumerateResultsWithOptions:(unsigned long long)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)enumerateResultsUsingBlock:(CDUnknownBlockType)arg1;
- (id)resultAtIndex:(unsigned long long)arg1;
@property(readonly) unsigned long long resultCount;
- (void)_update;
- (void)_enableAutoUpdates;
- (void)_disableAutoUpdates;
- (void)enableUpdates;
- (void)disableUpdates;
@property(readonly, getter=isStopped) _Bool stopped;
@property(readonly, getter=isGathering) _Bool gathering;
@property(readonly, getter=isStarted) _Bool started;
- (void)stopQuery;
- (void)_inOriginalContextInvokeBlock:(CDUnknownBlockType)arg1;
- (_Bool)startQuery;
- (void)_recreateQuery;
- (void)_resetQueryState;
- (id)_queryString;
- (void)_noteNote5:(id)arg1;
- (void)_noteNote4:(id)arg1;
- (void)_noteNote3:(id)arg1;
- (void)_noteNote2:(id)arg1;
- (void)_noteNote1:(id)arg1;
- (void)_postNotificationName:(id)arg1 userInfo:(id)arg2;
- (void)_setBatchingParams;
- (void)_setExternalDocumentsBundleIdentifier:(id)arg1;
- (id)_externalDocumentsBundleIdentifier;
- (void)setSearchItemURLs:(id)arg1;
- (id)searchItemURLs;
@property(copy) NSArray *searchItems;
@property(retain) NSOperationQueue *operationQueue;
@property(copy) NSArray *searchScopes;
@property double notificationBatchingInterval;
- (id)_allAttributes;
- (id)_sortingAttributes;
@property(copy) NSArray *groupingAttributes;
@property(copy) NSArray *valueListAttributes;
@property(copy) NSArray *sortDescriptors;
@property(copy) NSPredicate *predicate;
- (void)_validatePredicate:(id)arg1 withScopes:(id)arg2;
@property id <NSMetadataQueryDelegate> delegate;
- (void)_validateInvocationContext;
- (void)finalize;
- (void)dealloc;
- (id)init;

@end

@interface NSMetadataQueryAttributeValueTuple : NSObject
{
    id _attr;
    id _value;
    unsigned long long _count;
    void *_reserved;
}

@property(readonly) unsigned long long count;
@property(readonly, retain) id value;
@property(readonly, copy) NSString *attribute;
- (void)dealloc;
- (id)_init:(id)arg1 attribute:(id)arg2 value:(id)arg3 count:(unsigned long long)arg4;

@end

@interface NSMetadataQueryResultGroup : NSObject
{
    id _private[9];
    unsigned long long _private2[1];
    void *_reserved;
}

@property(readonly, copy) NSArray *results;
- (void)_zapResultArray;
- (id)resultAtIndex:(unsigned long long)arg1;
@property(readonly) unsigned long long resultCount;
@property(readonly, copy) NSArray *subgroups;
@property(readonly, retain) id value;
@property(readonly, copy) NSString *attribute;
- (void)_addResult:(unsigned long long)arg1;
- (void)dealloc;
- (id)_init:(id)arg1 attributes:(id)arg2 index:(unsigned long long)arg3 value:(id)arg4;

@end

@interface NSMethodSignature (NSXPCCoderAdditions)
- (_Bool)_cheapTypeString:(char *)arg1 maxLength:(long long)arg2;
@end

@interface NSMultiReadUniWriteLock : NSObject <NSLocking>
{
    void *_priv;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
- (id)name;
- (void)setName:(id)arg1;
- (id)description;
- (void)unlock;
- (void)lock;
- (_Bool)lockForWritingBeforeDate:(id)arg1;
- (_Bool)tryLockForWriting;
- (void)lockForWriting;
- (_Bool)lockForReadingBeforeDate:(id)arg1;
- (_Bool)tryLockForReading;
- (void)lockForReading;
- (void)finalize;
- (void)dealloc;
- (id)init;

@end

@interface NSMutableArray (NSKeyValueSorting)
- (void)sortUsingDescriptors:(id)arg1;
@end

@interface NSMutableArray (NSMutableArray)
- (id)initWithContentsOfURL:(id)arg1;
- (id)initWithContentsOfFile:(id)arg1;
- (void)removeObjectsFromIndices:(unsigned long long *)arg1 numIndices:(unsigned long long)arg2;
- (Class)classForCoder;
@end

@interface NSMutableArray (NSPredicateSupport)
- (void)filterUsingPredicate:(id)arg1;
@end

@interface NSMutableData (NSMutableData)
+ (id)dataWithLength:(unsigned long long)arg1;
+ (id)dataWithCapacity:(unsigned long long)arg1;
+ (id)allocWithZone:(struct _NSZone *)arg1;
- (id)initWithLength:(unsigned long long)arg1;
- (id)initWithCapacity:(unsigned long long)arg1;
- (void)setData:(id)arg1;
- (void)resetBytesInRange:(struct _NSRange)arg1;
- (void)replaceBytesInRange:(struct _NSRange)arg1 withBytes:(const void *)arg2;
- (void)increaseLengthBy:(unsigned long long)arg1;
- (void)appendData:(id)arg1;
- (void)appendBytes:(const void *)arg1 length:(unsigned long long)arg2;
- (void)replaceBytesInRange:(struct _NSRange)arg1 withBytes:(const void *)arg2 length:(unsigned long long)arg3;
- (_Bool)_isCompact;
- (Class)classForCoder;
- (void)setLength:(unsigned long long)arg1;
- (void *)mutableBytes;
@end

@interface NSMutableDictionary (NSKeyValueCoding)
- (void)setValue:(id)arg1 forKey:(id)arg2;
@end

@interface NSMutableDictionary (NSMutableDictionary)
- (id)initWithContentsOfURL:(id)arg1;
- (id)initWithContentsOfFile:(id)arg1;
- (Class)classForCoder;
@end

@interface NSMutableDictionary (NSURLExtras)
- (void)_web_setObject:(id)arg1 forUncopiedKey:(id)arg2;
- (void)_web_setBool:(_Bool)arg1 forKey:(id)arg2;
- (void)_web_setInt:(int)arg1 forKey:(id)arg2;
@end

@interface NSMutableIndexSet : NSIndexSet
{
    void *_reserved;
}

- (void)shiftIndexesStartingAtIndex:(unsigned long long)arg1 by:(long long)arg2;
- (void)_removeAndDecrementBy:(unsigned long long)arg1 startingAtIndex:(unsigned long long)arg2;
- (void)_incrementBy:(unsigned long long)arg1 startingAtIndex:(unsigned long long)arg2;
- (void)removeAllIndexes;
- (void)removeIndex:(unsigned long long)arg1;
- (void)removeIndexesInRange:(struct _NSRange)arg1;
- (void)addIndex:(unsigned long long)arg1;
- (void)addIndexesInRange:(struct _NSRange)arg1;
- (void)_mergeOverlappingRangesStartingAtIndex:(unsigned long long)arg1;
- (void)removeIndexesPassingTest:(CDUnknownBlockType)arg1;
- (void)removeIndexesInRange:(struct _NSRange)arg1 options:(unsigned long long)arg2 passingTest:(CDUnknownBlockType)arg3;
- (void)removeIndexesWithOptions:(unsigned long long)arg1 passingTest:(CDUnknownBlockType)arg2;
- (void)removeIndexesFromIndexSet:(id)arg1;
- (void)removeIndexes:(id)arg1;
- (void)addIndexes:(const unsigned long long *)arg1 count:(unsigned long long)arg2;
- (void)addIndexesFromIndexSet:(id)arg1;
- (void)addIndexes:(id)arg1;
- (void)_replaceRangeInArrayAtIndex:(unsigned long long)arg1 withRange:(struct _NSRange)arg2;
- (void)_removeRangeInArrayAtIndex:(unsigned long long)arg1;
- (void)_insertRange:(struct _NSRange)arg1 inArrayAtIndex:(unsigned long long)arg2;
- (void)_addRangeToArray:(struct _NSRange)arg1;
- (void)_ensureRangeCapacity:(unsigned long long)arg1;
- (Class)classForCoder;

@end

@interface NSMutableOrderedSet (NSKeyValueSorting)
- (void)sortUsingDescriptors:(id)arg1;
@end

@interface NSMutableOrderedSet (NSPredicateSupport)
- (void)filterUsingPredicate:(id)arg1;
@end

@interface NSRLEArray : NSObject <NSCopying, NSMutableCopying>
{
    struct _NSRefCountedRunArray *theList;
}

- (id)description;
- (unsigned long long)count;
- (id)objectAtRunIndex:(unsigned long long)arg1 length:(unsigned long long *)arg2;
- (id)objectAtIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2 runIndex:(unsigned long long *)arg3;
- (id)objectAtIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;
- (void)_makeNewListFrom:(struct _NSRefCountedRunArray *)arg1;
- (void)finalize;
- (void)dealloc;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithRefCountedRunArray:(struct _NSRefCountedRunArray *)arg1;
- (id)init;

@end

@interface NSMutableRLEArray : NSRLEArray
{
}

- (void)deleteObjectsInRange:(struct _NSRange)arg1;
- (void)replaceObjectsInRange:(struct _NSRange)arg1 withObject:(id)arg2 length:(unsigned long long)arg3;
- (void)insertObject:(id)arg1 range:(struct _NSRange)arg2;
- (void)_setBlockCapacity:(unsigned long long)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface NSMutableSet (NSMutableSet)
- (Class)classForCoder;
@end

@interface NSMutableSet (NSPredicateSupport)
- (void)filterUsingPredicate:(id)arg1;
@end

__attribute__((visibility("hidden")))
@interface NSMutableStringProxy : NSDistantObject
{
}

- (_Bool)getBytes:(void *)arg1 maxLength:(unsigned long long)arg2 usedLength:(unsigned long long *)arg3 encoding:(unsigned long long)arg4 options:(unsigned long long)arg5 range:(struct _NSRange)arg6 remainingRange:(struct _NSRange *)arg7;
- (void)getCString:(char *)arg1;
- (void)getCString:(char *)arg1 maxLength:(unsigned long long)arg2;
- (void)getCString:(char *)arg1 maxLength:(unsigned long long)arg2 range:(struct _NSRange)arg3 remainingRange:(struct _NSRange *)arg4;
- (void)getCharacters:(unsigned short *)arg1 range:(struct _NSRange)arg2;
- (void)getCharacters:(unsigned short *)arg1;

@end

@interface NSMutableStringProxyForMutableAttributedString : NSMutableString
{
    NSMutableAttributedString *mutableAttributedString;
}

- (void)replaceCharactersInRange:(struct _NSRange)arg1 withString:(id)arg2;
- (void)getCharacters:(unsigned short *)arg1 range:(struct _NSRange)arg2;
- (unsigned short)characterAtIndex:(unsigned long long)arg1;
- (unsigned long long)length;
- (void)finalize;
- (void)dealloc;
- (id)initWithMutableAttributedString:(id)arg1;

@end

@interface NSNotificationQueue : NSObject
{
    id _notificationCenter;
    id _asapQueue;
    id _asapObs;
    id _idleQueue;
    id _idleObs;
}

+ (id)defaultQueue;
- (void)dequeueNotificationsMatching:(id)arg1 coalesceMask:(unsigned long long)arg2;
- (void)enqueueNotification:(id)arg1 postingStyle:(unsigned long long)arg2 coalesceMask:(unsigned long long)arg3 forModes:(id)arg4;
- (void)enqueueNotification:(id)arg1 postingStyle:(unsigned long long)arg2;
- (void)_flushNotificationQueue;
- (void)dealloc;
- (id)initWithNotificationCenter:(id)arg1;
- (id)init;

@end

@interface NSNull (NSKeyValueCoding)
- (id)valueForKey:(id)arg1;
@end

@interface NSNull (NSNull)
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
@end

@interface NSNull (NSNullPortCoding)
- (id)replacementObjectForPortCoder:(id)arg1;
@end

__attribute__((visibility("hidden")))
@interface NSNullFileHandle : NSFileHandle
{
}

- (CDUnknownBlockType)readabilityHandler;
- (void)setReadabilityHandler:(CDUnknownBlockType)arg1;
- (CDUnknownBlockType)writeabilityHandler;
- (void)setWriteabilityHandler:(CDUnknownBlockType)arg1;
- (int)fileDescriptor;
- (void)closeFile;
- (void)synchronizeFile;
- (void)truncateFileAtOffset:(unsigned long long)arg1;
- (void)seekToFileOffset:(unsigned long long)arg1;
- (unsigned long long)seekToEndOfFile;
- (unsigned long long)offsetInFile;
- (void)writeData:(id)arg1;
- (id)readDataOfLength:(unsigned long long)arg1;
- (id)readDataToEndOfFile;
- (id)availableData;

@end

@interface NSNumberFormatter : NSFormatter
{
    NSMutableDictionary *_attributes;
    struct __CFNumberFormatter *_formatter;
    unsigned long long _counter;
    unsigned long long _behavior;
    NSRecursiveLock *_lock;
    unsigned long long _stateBitMask;
    void *_reserved[9];
}

+ (id)localizedStringFromNumber:(id)arg1 numberStyle:(unsigned long long)arg2;
+ (void)initialize;
+ (void)setDefaultFormatterBehavior:(unsigned long long)arg1;
+ (unsigned long long)defaultFormatterBehavior;
- (void)_setUsesCharacterDirection:(_Bool)arg1;
- (_Bool)_usesCharacterDirection;
@property(getter=isPartialStringValidationEnabled) _Bool partialStringValidationEnabled;
@property unsigned long long maximumSignificantDigits;
@property unsigned long long minimumSignificantDigits;
@property _Bool usesSignificantDigits;
@property(getter=isLenient) _Bool lenient;
@property(copy) NSString *currencyGroupingSeparator;
@property(copy) NSNumber *maximum;
@property(copy) NSNumber *minimum;
@property unsigned long long maximumFractionDigits;
@property unsigned long long minimumFractionDigits;
@property unsigned long long maximumIntegerDigits;
@property unsigned long long minimumIntegerDigits;
@property(copy) NSNumber *roundingIncrement;
@property unsigned long long roundingMode;
@property unsigned long long paddingPosition;
@property(copy) NSString *paddingCharacter;
@property(copy) NSNumber *multiplier;
@property unsigned long long formatWidth;
@property unsigned long long secondaryGroupingSize;
@property unsigned long long groupingSize;
@property(copy) NSString *exponentSymbol;
@property(copy) NSString *plusSign;
@property(copy) NSString *minusSign;
@property(copy) NSString *perMillSymbol;
@property(copy) NSString *percentSymbol;
- (_Bool)_hasSetInternationalCurrencySymbol;
@property(copy) NSString *internationalCurrencySymbol;
@property(copy) NSString *currencySymbol;
- (_Bool)_hasSetCurrencySymbol;
- (_Bool)_hasSetCurrencyCode;
@property(copy) NSString *currencyCode;
@property(copy) NSString *negativeSuffix;
@property(copy) NSString *negativePrefix;
@property(copy) NSString *positiveSuffix;
@property(copy) NSString *positivePrefix;
@property(copy) NSDictionary *textAttributesForNegativeInfinity;
@property(copy) NSString *negativeInfinitySymbol;
@property(copy) NSDictionary *textAttributesForPositiveInfinity;
@property(copy) NSString *positiveInfinitySymbol;
@property(copy) NSDictionary *textAttributesForNotANumber;
@property(copy) NSString *notANumberSymbol;
@property(copy) NSDictionary *textAttributesForNil;
@property(copy) NSString *nilSymbol;
@property(copy) NSDictionary *textAttributesForZero;
@property(copy) NSString *zeroSymbol;
@property(copy) NSString *groupingSeparator;
@property _Bool usesGroupingSeparator;
@property(copy) NSString *currencyDecimalSeparator;
@property _Bool alwaysShowsDecimalSeparator;
@property(copy) NSString *decimalSeparator;
@property _Bool allowsFloats;
@property(copy) NSDictionary *textAttributesForPositiveValues;
@property(copy) NSString *positiveFormat;
@property(copy) NSDictionary *textAttributesForNegativeValues;
@property(copy) NSString *negativeFormat;
@property unsigned long long formatterBehavior;
@property _Bool generatesDecimalNumbers;
@property(copy) NSLocale *locale;
@property unsigned long long numberStyle;
@property long long formattingContext;
- (id)numberFromString:(id)arg1;
- (id)stringFromNumber:(id)arg1;
- (_Bool)getObjectValue:(out id *)arg1 forString:(id)arg2 range:(inout struct _NSRange *)arg3 error:(out id *)arg4;
- (_Bool)getObjectValue:(out id *)arg1 forString:(id)arg2 errorDescription:(out id *)arg3;
- (id)attributedStringForObjectValue:(id)arg1 withDefaultAttributes:(id)arg2;
- (id)stringForObjectValue:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)finalize;
- (void)dealloc;
- (void)_reset;
- (id)init;
- (void *)__Keynote_NOOP;
- (void)_regenerateFormatter;
- (void)_clearFormatter;
- (_Bool)checkLocaleChange;
- (void)resetCheckLocaleChange;
- (void)resetCheckModify;
- (_Bool)checkModify;
- (void)clearPropertyBit;
- (void)setPropertyBit;
- (void *)getFormatter;

@end

@interface NSObject (NSArchiverCallBack)
- (id)replacementObjectForArchiver:(id)arg1;
- (Class)classForArchiver;
@end

@interface NSObject (NSDOAdditions)
+ (struct objc_method_description *)methodDescriptionForSelector:(SEL)arg1;
+ (struct objc_method_description *)instanceMethodDescriptionForSelector:(SEL)arg1;
- (_Bool)_conformsToProtocolNamed:(const char *)arg1;
- (struct objc_method_description *)methodDescriptionForSelector:(SEL)arg1;
@end

@interface NSObject (NSDelayedPerforming)
+ (void)cancelPreviousPerformRequestsWithTarget:(id)arg1;
+ (void)cancelPreviousPerformRequestsWithTarget:(id)arg1 selector:(SEL)arg2 object:(id)arg3;
- (void)performSelector:(SEL)arg1 withObject:(id)arg2 afterDelay:(double)arg3 inModes:(id)arg4;
- (void)performSelector:(SEL)arg1 object:(id)arg2 afterDelay:(double)arg3;
- (void)performSelector:(SEL)arg1 withObject:(id)arg2 afterDelay:(double)arg3;
@end

@interface NSObject (NSDeprecatedKeyValueObservingCustomization)
+ (void)setKeys:(id)arg1 triggerChangeNotificationsForDependentKey:(id)arg2;
@end

@interface NSObject (NSDiscardableContentProxy)
@property(readonly, retain) id autoContentAccessingProxy;
@end

@interface NSObject (NSDistantObjectAdditions)
+ (const char *)_localClassNameForClass;
- (const char *)_localClassNameForClass;
@end

@interface NSObject (NSKeyValueCoding)
+ (id)_createMutableArrayValueGetterWithContainerClassID:(id)arg1 key:(id)arg2;
+ (_Bool)accessInstanceVariablesDirectly;
- (void)setValuesForKeysWithDictionary:(id)arg1;
- (id)dictionaryWithValuesForKeys:(id)arg1;
- (void)setNilValueForKey:(id)arg1;
- (void)setValue:(id)arg1 forUndefinedKey:(id)arg2;
- (id)valueForUndefinedKey:(id)arg1;
- (id)mutableSetValueForKeyPath:(id)arg1;
- (id)mutableOrderedSetValueForKeyPath:(id)arg1;
- (id)mutableArrayValueForKeyPath:(id)arg1;
- (_Bool)validateValue:(inout id *)arg1 forKeyPath:(id)arg2 error:(out id *)arg3;
- (void)setValue:(id)arg1 forKeyPath:(id)arg2;
- (id)valueForKeyPath:(id)arg1;
- (id)mutableSetValueForKey:(id)arg1;
- (id)mutableOrderedSetValueForKey:(id)arg1;
- (id)mutableArrayValueForKey:(id)arg1;
- (_Bool)validateValue:(inout id *)arg1 forKey:(id)arg2 error:(out id *)arg3;
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (id)valueForKey:(id)arg1;
@end

@interface NSObject (NSKeyValueCodingPrivate)
+ (id)_createValuePrimitiveSetterWithContainerClassID:(id)arg1 key:(id)arg2;
+ (id)_createValuePrimitiveGetterWithContainerClassID:(id)arg1 key:(id)arg2;
+ (id)_createOtherValueSetterWithContainerClassID:(id)arg1 key:(id)arg2;
+ (id)_createOtherValueGetterWithContainerClassID:(id)arg1 key:(id)arg2;
+ (id)_createMutableSetValueGetterWithContainerClassID:(id)arg1 key:(id)arg2;
+ (id)_createMutableOrderedSetValueGetterWithContainerClassID:(id)arg1 key:(id)arg2;
+ (id)_createValueSetterWithContainerClassID:(id)arg1 key:(id)arg2;
+ (id)_createValueGetterWithContainerClassID:(id)arg1 key:(id)arg2;
@end

@interface NSObject (NSKeyValueObserverNotification)
- (void)didChangeValueForKey:(id)arg1 withSetMutation:(unsigned long long)arg2 usingObjects:(id)arg3;
- (void)willChangeValueForKey:(id)arg1 withSetMutation:(unsigned long long)arg2 usingObjects:(id)arg3;
- (void)didChange:(unsigned long long)arg1 valuesAtIndexes:(id)arg2 forKey:(id)arg3;
- (void)willChange:(unsigned long long)arg1 valuesAtIndexes:(id)arg2 forKey:(id)arg3;
- (void)didChangeValueForKey:(id)arg1;
- (void)willChangeValueForKey:(id)arg1;
@end

@interface NSObject (NSKeyValueObserverNotifying)
- (_Bool)_isKVOA;
@end

@interface NSObject (NSKeyValueObserverRegistration)
- (void)removeObserver:(id)arg1 forKeyPath:(id)arg2;
- (void)removeObserver:(id)arg1 forKeyPath:(id)arg2 context:(void *)arg3;
- (void)addObserver:(id)arg1 forKeyPath:(id)arg2 options:(unsigned long long)arg3 context:(void *)arg4;
- (void)_removeObserver:(id)arg1 forProperty:(id)arg2;
- (void)_addObserver:(id)arg1 forProperty:(id)arg2 options:(unsigned long long)arg3 context:(void *)arg4;
@end

@interface NSObject (NSKeyValueObserving)
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
@end

@interface NSObject (NSKeyValueObservingCustomization)
+ (_Bool)automaticallyNotifiesObserversForKey:(id)arg1;
+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (id)_keysForValuesAffectingValueForKey:(id)arg1;
@property void *observationInfo;
@end

@interface NSObject (NSKeyValueObservingPrivate)
+ (_Bool)_shouldAddObservationForwardersForKey:(id)arg1;
- (id)_implicitObservationInfo;
- (void)_changeValueForKey:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)_changeValueForKey:(id)arg1 key:(id)arg2 key:(id)arg3 usingBlock:(CDUnknownBlockType)arg4;
- (void)_didChangeValuesForKeys:(id)arg1;
- (void)_willChangeValuesForKeys:(id)arg1;
- (void)_notifyObserversForKeyPath:(id)arg1 change:(id)arg2;
@end

@interface NSObject (NSKeyedArchiverObjectSubstitution)
+ (id)classFallbacksForKeyedArchiver;
- (id)replacementObjectForKeyedArchiver:(id)arg1;
@property(readonly) Class classForKeyedArchiver;
@end

@interface NSObject (NSKeyedUnarchiverObjectSubstitution)
+ (Class)classForKeyedUnarchiver;
@end

@interface NSObject (NSObject)
+ (long long)version;
+ (void)setVersion:(long long)arg1;
+ (_Bool)implementsSelector:(SEL)arg1;
+ (_Bool)instancesImplementSelector:(SEL)arg1;
+ (void)load;
- (_Bool)implementsSelector:(SEL)arg1;
- (id)replacementObjectForCoder:(id)arg1;
- (_Bool)_allowsDirectEncoding;
- (Class)classForCoder;
- (id)awakeAfterUsingCoder:(id)arg1;
@end

@interface NSObject (NSObjectPortCoding)
+ (id)replacementObjectForPortCoder:(id)arg1;
- (id)replacementObjectForPortCoder:(id)arg1;
- (Class)classForPortCoder;
@end

@interface NSObject (NSThreadPerformAdditions)
- (void)performSelectorInBackground:(SEL)arg1 withObject:(id)arg2;
- (void)performSelector:(SEL)arg1 onThread:(id)arg2 withObject:(id)arg3 waitUntilDone:(_Bool)arg4;
- (void)performSelectorOnMainThread:(SEL)arg1 withObject:(id)arg2 waitUntilDone:(_Bool)arg3;
- (void)performSelectorOnMainThread:(SEL)arg1 withObject:(id)arg2 waitUntilDone:(_Bool)arg3 modes:(id)arg4;
- (void)performSelector:(SEL)arg1 onThread:(id)arg2 withObject:(id)arg3 waitUntilDone:(_Bool)arg4 modes:(id)arg5;
@end

@interface NSOperationQueue : NSObject
{
    id _private;
    void *_reserved;
}

+ (id)mainQueue;
+ (id)currentQueue;
+ (_Bool)automaticallyNotifiesObserversForKey:(id)arg1;
- (id)__;
- (id)description;
- (void)waitUntilAllOperationsAreFinished;
- (void)cancelAllOperations;
@property(copy) NSString *name;
@property NSObject<OS_dispatch_queue> *underlyingQueue;
@property long long qualityOfService;
- (void)setOvercommitsOperations:(_Bool)arg1;
- (_Bool)overcommitsOperations;
@property(getter=isSuspended) _Bool suspended;
@property long long maxConcurrentOperationCount;
@property(readonly) unsigned long long operationCount;
@property(readonly, copy) NSArray *operations;
- (void)addOperationWithBlock:(CDUnknownBlockType)arg1;
- (void)addOperations:(id)arg1 waitUntilFinished:(_Bool)arg2;
- (void)addOperation:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface NSOrderedSet (NSKeyValueCoding)
- (id)valueForKeyPath:(id)arg1;
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (id)valueForKey:(id)arg1;
- (id)_minForKeyPath:(id)arg1;
- (id)_maxForKeyPath:(id)arg1;
- (id)_countForKeyPath:(id)arg1;
- (id)_avgForKeyPath:(id)arg1;
- (id)_sumForKeyPath:(id)arg1;
@end

@interface NSOrderedSet (NSKeyValueCodingPrivate)
- (_Bool)_validateValue:(inout id *)arg1 forKeyPath:(id)arg2 ofObjectAtIndex:(unsigned long long)arg3 error:(out id *)arg4;
- (void)_setValue:(id)arg1 forKeyPath:(id)arg2 ofObjectAtIndex:(unsigned long long)arg3;
- (id)_mutableSetValueForKeyPath:(id)arg1 ofObjectAtIndex:(unsigned long long)arg2;
- (id)_mutableOrderedSetValueForKeyPath:(id)arg1 ofObjectAtIndex:(unsigned long long)arg2;
- (id)_mutableArrayValueForKeyPath:(id)arg1 ofObjectAtIndex:(unsigned long long)arg2;
- (id)_valueForKeyPath:(id)arg1 ofObjectAtIndex:(unsigned long long)arg2;
@end

@interface NSOrderedSet (NSKeyValueObserverRegistration)
- (void)removeObserver:(id)arg1 forKeyPath:(id)arg2;
- (void)removeObserver:(id)arg1 forKeyPath:(id)arg2 context:(void *)arg3;
- (void)addObserver:(id)arg1 forKeyPath:(id)arg2 options:(unsigned long long)arg3 context:(void *)arg4;
@end

@interface NSOrderedSet (NSKeyValueSorting)
- (id)sortedArrayUsingDescriptors:(id)arg1;
@end

@interface NSOrderedSet (NSPredicateSupport)
- (id)filteredOrderedSetUsingPredicate:(id)arg1;
@end

@interface NSOrthographyCheckingResult : NSTextCheckingResult
{
    struct _NSRange _range;
    NSOrthography *_orthography;
}

- (id)orthography;
- (_Bool)_adjustRangesWithOffset:(long long)arg1;
- (id)resultByAdjustingRangesWithOffset:(long long)arg1;
- (struct _NSRange)range;
- (unsigned long long)resultType;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)description;
- (void)dealloc;
- (id)initWithRange:(struct _NSRange)arg1 orthography:(id)arg2;

@end

@interface NSOutputStream (NSCFOutputStreamAdditions)
- (CDStruct_87dc826d)_cfStreamError;
@end

@interface NSOutputStream (NSOutputStream)
+ (id)outputStreamWithURL:(id)arg1 append:(_Bool)arg2;
+ (id)outputStreamToFileAtPath:(id)arg1 append:(_Bool)arg2;
+ (id)outputStreamToBuffer:(char *)arg1 capacity:(unsigned long long)arg2;
+ (id)outputStreamToMemory;
+ (id)allocWithZone:(struct _NSZone *)arg1;
- (unsigned long long)_cfTypeID;
- (_Bool)hasSpaceAvailable;
- (long long)write:(const char *)arg1 maxLength:(unsigned long long)arg2;
@end

__attribute__((visibility("hidden")))
@interface NSOwnedDictionaryProxy : NSDictionary
{
    id _owner;
}

- (id)objectForKey:(id)arg1;
- (id)keyEnumerator;
- (unsigned long long)count;
- (void)superRelease;
- (oneway void)release;
- (id)retain;
- (id)initWithOwner:(id)arg1;

@end

@interface NSPageData : NSData
{
    NSData *data;
    NSDate *_originalFileModDate;
    NSString *_originalFilePath;
}

+ (long long)_umask;
+ (void)initialize;
- (id)data;
- (id)initWithDataNoCopy:(id)arg1;
- (id)deserializer;
- (id)initFromSerializerStream:(id)arg1 length:(unsigned long long)arg2;
- (unsigned long long)writePath:(id)arg1 docInfo:(id)arg2 errorHandler:(id)arg3 remapContents:(_Bool)arg4 hardLinkPath:(id)arg5;
- (void)dealloc;
- (id)_mappedFile;
- (id)initWithContentsOfMappedFile:(id)arg1 withFileAttributes:(id)arg2;
- (id)initWithContentsOfMappedFile:(id)arg1;
- (id)initWithContentsOfFile:(id)arg1;
- (void)_setOriginalFileInfoFromFileAttributes:(id)arg1;
- (id)initWithData:(id)arg1;
- (id)initWithBytes:(const void *)arg1 length:(unsigned long long)arg2;
- (id)initWithBytesNoCopy:(void *)arg1 length:(unsigned long long)arg2;
- (id)init;
- (const void *)bytes;
- (unsigned long long)length;
- (unsigned long long)writeFile:(id)arg1;
- (unsigned long long)writeFd:(long long)arg1;

@end

__attribute__((visibility("hidden")))
@interface NSPathStore2 : NSString
{
    unsigned int _lengthAndRefCount;
    unsigned short _characters[0];
}

+ (id)pathWithComponents:(id)arg1;
+ (id)pathStoreWithCharacters:(const unsigned short *)arg1 length:(unsigned long long)arg2;
- (id)stringByResolvingSymlinksInPath;
- (id)_stringByResolvingSymlinksInPathUsingCache:(_Bool)arg1;
- (id)stringByStandardizingPath;
- (id)_stringByStandardizingPathUsingCache:(_Bool)arg1;
- (id)stringByExpandingTildeInPath;
- (id)stringByAbbreviatingWithTildeInPath;
- (id)stringByAppendingPathExtension:(id)arg1;
- (id)stringByDeletingPathExtension;
- (id)pathExtension;
- (id)stringByAppendingPathComponent:(id)arg1;
- (id)stringByDeletingLastPathComponent;
- (id)lastPathComponent;
- (_Bool)isAbsolutePath;
- (id)pathComponents;
- (_Bool)isEqualToString:(id)arg1;
- (unsigned long long)hash;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)getCharacters:(unsigned short *)arg1 range:(struct _NSRange)arg2;
- (unsigned short)characterAtIndex:(unsigned long long)arg1;
- (unsigned long long)length;

@end

@interface NSPhoneNumberCheckingResult : NSTextCheckingResult
{
    struct _NSRange _range;
    NSString *_phoneNumber;
    id _underlyingResult;
}

@property(readonly) void *underlyingResult;
- (id)phoneNumber;
- (_Bool)_adjustRangesWithOffset:(long long)arg1;
- (id)resultByAdjustingRangesWithOffset:(long long)arg1;
- (struct _NSRange)range;
- (unsigned long long)resultType;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)description;
- (void)dealloc;
- (id)initWithRange:(struct _NSRange)arg1 phoneNumber:(id)arg2;
- (id)initWithRange:(struct _NSRange)arg1 phoneNumber:(id)arg2 underlyingResult:(void *)arg3;

@end

@interface NSPinyinString : NSString
{
    NSString *_string;
    unsigned long long _syllableCount;
    unsigned long long _score;
    unsigned long long _rangeCount;
    unsigned long long _replacementCount;
    unsigned long long _transpositionCount;
    unsigned long long _insertionCount;
    unsigned long long _deletionCount;
    unsigned long long _firstModificationIndex;
    struct _NSRange *_ranges;
    _Bool _lastSyllableIsPartial;
}

+ (id)prefixesForInputString:(id)arg1;
+ (id)alternativesForInputString:(id)arg1;
- (struct _NSRange)nonPinyinRangeAtIndex:(unsigned long long)arg1;
- (unsigned long long)indexOfFirstModification;
- (unsigned long long)numberOfDeletions;
- (unsigned long long)numberOfInsertions;
- (unsigned long long)numberOfTranspositions;
- (unsigned long long)numberOfReplacements;
- (unsigned long long)numberOfNonPinyinRanges;
- (unsigned long long)score;
- (_Bool)lastSyllableIsPartial;
- (unsigned long long)syllableCount;
- (id)string;
- (Class)classForCoder;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)description;
- (id)nonPinyinIndexSet;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)initWithString:(id)arg1 syllableCount:(unsigned long long)arg2 lastSyllableIsPartial:(_Bool)arg3 score:(unsigned long long)arg4 replacementCount:(unsigned long long)arg5 transpositionCount:(unsigned long long)arg6 insertionCount:(unsigned long long)arg7 deletionCount:(unsigned long long)arg8 rangeCount:(unsigned long long)arg9 ranges:(struct _NSRange *)arg10;
- (id)initWithString:(id)arg1 syllableCount:(unsigned long long)arg2 lastSyllableIsPartial:(_Bool)arg3 score:(unsigned long long)arg4 replacementCount:(unsigned long long)arg5 transpositionCount:(unsigned long long)arg6 insertionCount:(unsigned long long)arg7 deletionCount:(unsigned long long)arg8 indexOfFirstModification:(unsigned long long)arg9 rangeCount:(unsigned long long)arg10 ranges:(struct _NSRange *)arg11;
- (unsigned short)characterAtIndex:(unsigned long long)arg1;
- (unsigned long long)length;

@end

@interface NSPlaceholderMutableString : NSMutableString
{
}

- (void)replaceCharactersInRange:(struct _NSRange)arg1 withString:(id)arg2;
- (unsigned short)characterAtIndex:(unsigned long long)arg1;
- (unsigned long long)length;
- (id)initWithFormat:(id)arg1 locale:(id)arg2 arguments:(struct __va_list_tag [1])arg3;
- (id)initWithCStringNoCopy:(char *)arg1 length:(unsigned long long)arg2 freeWhenDone:(_Bool)arg3;
- (id)initWithCString:(const char *)arg1 encoding:(unsigned long long)arg2;
- (id)initWithCharactersNoCopy:(unsigned short *)arg1 length:(unsigned long long)arg2 freeWhenDone:(_Bool)arg3;
- (id)initWithBytesNoCopy:(void *)arg1 length:(unsigned long long)arg2 encoding:(unsigned long long)arg3 freeWhenDone:(_Bool)arg4;
- (id)initWithUTF8String:(const char *)arg1;
- (id)initWithBytes:(const void *)arg1 length:(unsigned long long)arg2 encoding:(unsigned long long)arg3;
- (id)initWithString:(id)arg1;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)init;
- (void)dealloc;
- (_Bool)_tryRetain;
- (_Bool)_isDeallocating;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;
- (id)autorelease;

@end

__attribute__((visibility("hidden")))
@interface NSPlaceholderValue : NSNumber
{
    struct _NSZone *zoneForInstance;
}

+ (_Bool)supportsSecureCoding;
- (void)getValue:(void *)arg1;
- (const char *)objCType;
- (id)initWithCoder:(id)arg1;
- (id)initWithBytes:(const void *)arg1 objCType:(const char *)arg2;
- (id)init;
- (void)finalize;
- (void)dealloc;
- (_Bool)_tryRetain;
- (_Bool)_isDeallocating;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;
- (id)autorelease;

@end

__attribute__((visibility("hidden")))
@interface NSPlaceholderNumber : NSPlaceholderValue
{
}

+ (_Bool)supportsSecureCoding;
- (id)initWithCoder:(id)arg1;
- (id)initWithBool:(_Bool)arg1;
- (id)initWithDouble:(double)arg1;
- (id)initWithFloat:(float)arg1;
- (id)initWithUnsignedLongLong:(unsigned long long)arg1;
- (id)initWithLongLong:(long long)arg1;
- (id)initWithUnsignedLong:(unsigned long long)arg1;
- (id)initWithLong:(long long)arg1;
- (id)initWithUnsignedInteger:(unsigned long long)arg1;
- (id)initWithInteger:(long long)arg1;
- (id)initWithUnsignedInt:(unsigned int)arg1;
- (id)initWithInt:(int)arg1;
- (id)initWithUnsignedShort:(unsigned short)arg1;
- (id)initWithShort:(short)arg1;
- (id)initWithUnsignedChar:(unsigned char)arg1;
- (id)initWithChar:(BOOL)arg1;
- (id)init;

@end

@interface NSPlaceholderString : NSString
{
}

- (unsigned short)characterAtIndex:(unsigned long long)arg1;
- (unsigned long long)length;
- (id)initWithBytes:(const void *)arg1 length:(unsigned long long)arg2 encoding:(unsigned long long)arg3;
- (id)initWithData:(id)arg1 encoding:(unsigned long long)arg2;
- (id)initWithFormat:(id)arg1 locale:(id)arg2 arguments:(struct __va_list_tag [1])arg3;
- (id)initWithString:(id)arg1;
- (id)initWithCString:(const char *)arg1;
- (id)initWithCString:(const char *)arg1 length:(unsigned long long)arg2;
- (id)initWithBytesNoCopy:(void *)arg1 length:(unsigned long long)arg2 encoding:(unsigned long long)arg3 freeWhenDone:(_Bool)arg4;
- (id)initWithCStringNoCopy:(char *)arg1 length:(unsigned long long)arg2 freeWhenDone:(_Bool)arg3;
- (id)initWithCString:(const char *)arg1 encoding:(unsigned long long)arg2;
- (id)initWithCharacters:(const unsigned short *)arg1 length:(unsigned long long)arg2;
- (id)initWithCharactersNoCopy:(unsigned short *)arg1 length:(unsigned long long)arg2 freeWhenDone:(_Bool)arg3;
- (id)init;
- (void)dealloc;
- (_Bool)_tryRetain;
- (_Bool)_isDeallocating;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;
- (id)autorelease;

@end

@interface NSPortMessage : NSObject
{
    NSPort *localPort;
    NSPort *remotePort;
    NSMutableArray *components;
    unsigned int msgid;
    void *reserved2;
    void *reserved;
}

- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)sendBeforeDate:(id)arg1;
@property(readonly, copy) NSArray *components;
@property unsigned int msgid;
@property(readonly, retain) NSPort *receivePort;
@property(readonly, retain) NSPort *sendPort;
- (void)dealloc;
- (id)initWithReceivePort:(id)arg1 sendPort:(id)arg2 components:(id)arg3;
- (id)initWithSendPort:(id)arg1 receivePort:(id)arg2 components:(id)arg3;

@end

@interface NSProcessInfo : NSObject
{
    NSDictionary *environment;
    NSArray *arguments;
    NSString *hostName;
    NSString *name;
    long long automaticTerminationOptOutCounter;
}

+ (id)processInfo;
- (void)performActivityWithOptions:(unsigned long long)arg1 reason:(id)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)performActivityWithOptions:(unsigned long long)arg1 reason:(id)arg2 block:(CDUnknownBlockType)arg3;
- (void)_reactivateActivity:(id)arg1;
- (void)endActivity:(id)arg1;
- (id)beginActivityWithOptions:(unsigned long long)arg1 reason:(id)arg2;
- (void)endSystemBehaviorSuspension:(id)arg1;
- (id)beginSuspensionOfSystemBehaviors:(unsigned long long)arg1 reason:(id)arg2;
- (void)_enableAutomaticTerminationOnly:(id)arg1;
- (void)_disableAutomaticTerminationOnly:(id)arg1;
@property _Bool automaticTerminationSupportEnabled;
- (void)enableAutomaticTermination:(id)arg1;
- (void)disableAutomaticTermination:(id)arg1;
- (long long)_suddenTerminationDisablingCount;
- (void)_exitWhenSuddenTerminationEnabledWithStatus:(int)arg1;
- (void)_exitIfSuddenTerminationEnabledWithStatus:(int)arg1;
- (void)enableSuddenTermination;
- (void)disableSuddenTermination;
@property(readonly) double systemUptime;
- (_Bool)isTranslated;
@property(readonly) unsigned long long physicalMemory;
@property(readonly) unsigned long long activeProcessorCount;
@property(readonly) unsigned long long processorCount;
- (_Bool)isOperatingSystemAtLeastVersion:(CDStruct_2ec95fd7)arg1;
@property(readonly) CDStruct_2ec95fd7 operatingSystemVersion;
@property(readonly, copy) NSString *operatingSystemVersionString;
- (id)operatingSystemName;
- (unsigned long long)operatingSystem;
- (id)userHomeDirectory;
- (id)userFullName;
- (id)userName;
@property(readonly, copy) NSString *globallyUniqueString;
@property(readonly) int processIdentifier;
@property(copy) NSString *processName;
@property(readonly, copy) NSString *hostName;
- (void)setArguments:(id)arg1;
@property(readonly, copy) NSArray *arguments;
@property(readonly, copy) NSDictionary *environment;
- (void)dealloc;

@end

@interface NSProgress : NSObject <NSProgressPublisher>
{
    id _group;
    long long _reserved4;
    id _values;
    id _reserved5;
    CDUnknownBlockType _cancellationHandler;
    CDUnknownBlockType _pausingHandler;
    CDUnknownBlockType _prioritizationHandler;
    unsigned long long _flags;
    id _userInfoProxy;
    NSString *_publisherID;
    NSXPCConnection *_connection;
    long long _unpublishingBlockageCount;
    long long _disconnectingBlockageCount;
    long long _remoteObserverCount;
    NSMutableDictionary *_acknowledgementHandlersByBundleID;
    NSMutableDictionary *_lastNotificationTimesByKey;
    NSMutableDictionary *_userInfoLastNotificationTimesByKey;
    NSLock *_lock;
    NSMutableSet *_childrenGroups;
}

+ (id)_addSubscriberForFileURL:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
+ (id)addSubscriberForFileURL:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
+ (id)_addSubscriberForCategory:(id)arg1 usingPublishingHandler:(CDUnknownBlockType)arg2;
+ (void)_removeSubscriber:(id)arg1;
+ (void)removeSubscriber:(id)arg1;
+ (id)_addSubscriberForFileURL:(id)arg1 withPublishingHandler:(CDUnknownBlockType)arg2;
+ (id)addSubscriberForFileURL:(id)arg1 withPublishingHandler:(CDUnknownBlockType)arg2;
+ (id)keyPathsForValuesAffectingLocalizedAdditionalDescription;
+ (id)keyPathsForValuesAffectingLocalizedDescription;
+ (_Bool)automaticallyNotifiesObserversForKey:(id)arg1;
+ (id)progressWithTotalUnitCount:(long long)arg1;
+ (id)currentProgress;
+ (id)_registrarInterface;
+ (id)_subscriberInterface;
+ (id)_publisherInterface;
- (void)handleAcknowledgementByAppWithBundleIdentifier:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (oneway void)prioritize;
- (CDUnknownBlockType)prioritizationHandler;
- (void)setPrioritizationHandler:(CDUnknownBlockType)arg1;
- (_Bool)isPrioritizable;
- (void)setPrioritizable:(_Bool)arg1;
- (id)_publishingAppBundleIdentifier;
@property(readonly, getter=isOld) _Bool old;
- (void)acknowledgeWithSuccess:(_Bool)arg1;
- (oneway void)appWithBundleID:(id)arg1 didAcknowledgeWithSuccess:(_Bool)arg2;
- (oneway void)stopProvidingValues;
- (oneway void)startProvidingValuesWithInitialAcceptor:(CDUnknownBlockType)arg1;
- (CDUnknownBlockType)_acknowledgementHandlerForAppBundleIdentifier:(id)arg1;
- (CDUnknownBlockType)acknowledgementHandlerForAppBundleIdentifier:(id)arg1;
- (void)_setAcknowledgementHandler:(CDUnknownBlockType)arg1 forAppBundleIdentifier:(id)arg2;
- (void)setAcknowledgementHandler:(CDUnknownBlockType)arg1 forAppBundleIdentifier:(id)arg2;
- (void)_unpublish;
- (void)unpublish;
- (void)_unblockUnpublishing;
- (void)_unblockDisconnecting;
- (void)_publish;
- (void)publish;
@property(copy) NSString *kind;
- (id)ownedDictionaryObjectForKey:(id)arg1;
- (id)ownedDictionaryKeyEnumerator;
- (unsigned long long)ownedDictionaryCount;
@property(readonly, copy) NSDictionary *userInfo;
- (void)pause;
- (void)cancel;
@property(readonly) double fractionCompleted;
@property(readonly, getter=isIndeterminate) _Bool indeterminate;
@property(readonly, copy) NSString *description;
- (id)_indentedDescription:(unsigned long long)arg1;
- (void)setUserInfoObject:(id)arg1 forKey:(id)arg2;
- (void)_setUserInfoValue:(id)arg1 forKey:(id)arg2;
@property(copy) CDUnknownBlockType pausingHandler;
@property(copy) CDUnknownBlockType cancellationHandler;
@property(readonly, getter=isPaused) _Bool paused;
@property(readonly, getter=isCancelled) _Bool cancelled;
@property(getter=isPausable) _Bool pausable;
@property(getter=isCancellable) _Bool cancellable;
- (_Bool)isFinished;
@property(copy) NSString *localizedAdditionalDescription;
@property(copy) NSString *localizedDescription;
@property long long completedUnitCount;
- (void)_removeGroup:(id)arg1 fraction:(id)arg2 portion:(long long)arg3;
- (void)_updateGroup:(id)arg1 oldFraction:(id)arg2 newFraction:(id)arg3 portion:(long long)arg4;
- (void)_setCompletedUnitCount:(long long)arg1 totalUnitCount:(long long)arg2;
@property long long totalUnitCount;
- (void)_updateFractionCompletedFromOldFraction:(id)arg1 toNewFraction:(id)arg2;
- (void)_setValueForKeys:(CDUnknownBlockType)arg1 settingBlock:(CDUnknownBlockType)arg2;
- (void)_notifyRemoteObserversOfValueForKey:(id)arg1 inUserInfo:(_Bool)arg2;
- (void)__notifyRemoteObserversOfValueForKey:(id)arg1 inUserInfo:(_Bool)arg2;
- (void)resignCurrent;
- (void)becomeCurrentWithPendingUnitCount:(long long)arg1;
- (void)dealloc;
- (void)_setGroup:(id)arg1;
- (void)_addChild:(id)arg1 toGroup:(id)arg2 isPaused:(_Bool *)arg3 isCancelled:(_Bool *)arg4;
- (id)initWithParent:(id)arg1 userInfo:(id)arg2;
- (id)init;
- (void)_setRemoteValue:(id)arg1 forKey:(id)arg2 inUserInfo:(_Bool)arg3;
- (id)_initWithValues:(id)arg1;
- (void)acknowledge;
- (void)handleAcknowledgementByAppWithBundleIdentifer:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface NSProgressValues : NSObject <NSSecureCoding>
{
    NSMutableDictionary *_userInfo;
    _NSProgressFraction *_selfFraction;
    _NSProgressFraction *_childFraction;
    NSString *_localizedDescription;
    NSString *_localizedAdditionalDescription;
    _Bool _isCancellable;
    _Bool _isPausable;
    _Bool _isCancelled;
    _Bool _isPaused;
    NSString *_kind;
    _Bool _isPrioritizable;
}

+ (id)decodableClasses;
+ (_Bool)supportsSecureCoding;
+ (id)_derivedKeys;
- (id)overallFraction;
- (void)setTotalUnitCount:(long long)arg1;
- (long long)totalUnitCount;
- (void)setCompletedUnitCount:(long long)arg1;
- (long long)completedUnitCount;
- (void)setFractionCompleted:(double)arg1;
- (double)fractionCompleted;
- (void)setFinished:(_Bool)arg1;
- (_Bool)isFinished;
- (void)setIndeterminate:(_Bool)arg1;
- (_Bool)isIndeterminate;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)description;
- (id)_indentedDescription:(unsigned long long)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;

@end

@interface NSPropertyListSerialization : NSObject
{
    void *reserved[6];
}

+ (id)propertyListWithStream:(id)arg1 options:(unsigned long long)arg2 format:(unsigned long long *)arg3 error:(out id *)arg4;
+ (long long)writePropertyList:(id)arg1 toStream:(id)arg2 format:(unsigned long long)arg3 options:(unsigned long long)arg4 error:(out id *)arg5;
+ (id)propertyListWithData:(id)arg1 options:(unsigned long long)arg2 format:(unsigned long long *)arg3 error:(out id *)arg4;
+ (id)dataWithPropertyList:(id)arg1 format:(unsigned long long)arg2 options:(unsigned long long)arg3 error:(out id *)arg4;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)propertyListFromData:(id)arg1 mutabilityOption:(unsigned long long)arg2 format:(unsigned long long *)arg3 errorDescription:(out id *)arg4;
+ (id)dataFromPropertyList:(id)arg1 format:(unsigned long long)arg2 errorDescription:(out id *)arg3;
+ (_Bool)propertyList:(id)arg1 isValidForFormat:(unsigned long long)arg2;
- (id)init;

@end

@interface NSPurgeableData : NSMutableData <NSDiscardableContent>
{
    unsigned long long _length;
    int _accessCount;
    unsigned char _private[32];
    void *_reserved;
}

- (void)finalize;
- (void)dealloc;
- (id)initWithBytes:(void *)arg1 length:(unsigned long long)arg2 copy:(_Bool)arg3 deallocator:(CDUnknownBlockType)arg4;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)init;
- (_Bool)isContentDiscarded;
- (void)discardContentIfPossible;
- (void)_destroyMemory;
- (void)endContentAccess;
- (_Bool)beginContentAccess;
- (id)description;
- (void)setLength:(unsigned long long)arg1;
- (void *)mutableBytes;
- (const void *)bytes;
- (unsigned long long)length;

@end

@interface NSQuoteCheckingResult : NSSubstitutionCheckingResult
{
}

- (unsigned long long)resultType;

@end

@interface NSRTFD : NSMutableDictionary
{
    NSMutableDictionary *dict;
}

+ (void)initialize;
- (long long)validatePath:(id)arg1 ignore:(id)arg2;
- (id)addData:(id)arg1 name:(id)arg2;
- (id)copy;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)copy:(id)arg1 into:(id)arg2;
- (id)removeFile:(id)arg1;
- (id)dataForFile:(id)arg1;
- (id)addLink:(id)arg1;
- (id)addFile:(id)arg1;
- (id)_getDocInfoForKey:(id)arg1;
- (id)addCommon:(id)arg1 docInfo:(id)arg2 value:(id)arg3 zone:(struct _NSZone *)arg4;
- (id)replaceFile:(id)arg1 path:(id)arg2;
- (id)replaceFile:(id)arg1 data:(id)arg2;
- (id)getDocument:(id)arg1 docInfo:(id)arg2;
- (id)uniqueKey:(id)arg1;
- (id)createUniqueKey:(id)arg1;
- (id)createRandomKey:(id)arg1;
- (id)initWithDataRepresentation:(id)arg1;
- (id)dataRepresentation;
- (unsigned long long)saveToDocument:(id)arg1 removeBackup:(_Bool)arg2 errorHandler:(id)arg3;
- (unsigned long long)internalSaveTo:(id)arg1 removeBackup:(_Bool)arg2 errorHandler:(id)arg3;
- (id)tmpNameFromPath:(id)arg1;
- (id)tmpNameFromPath:(id)arg1 extension:(id)arg2;
- (id)nameFromPath:(id)arg1 extra:(id)arg2;
- (unsigned long long)internalSaveTo:(id)arg1 removeBackup:(_Bool)arg2 errorHandler:(id)arg3 temp:(id)arg4 backup:(id)arg5;
- (unsigned long long)internalWritePath:(id)arg1 errorHandler:(id)arg2 remapContents:(_Bool)arg3 hardLinkPath:(id)arg4;
- (unsigned long long)writePath:(id)arg1 docInfo:(id)arg2 errorHandler:(id)arg3 remapContents:(_Bool)arg4 hardLinkPath:(id)arg5;
- (unsigned long long)writePath:(id)arg1 docInfo:(id)arg2 errorHandler:(id)arg3 remapContents:(_Bool)arg4 markBusy:(_Bool)arg5 hardLinkPath:(id)arg6;
- (unsigned long long)initFromDocument:(id)arg1;
- (unsigned long long)initUnixFile:(id)arg1;
- (id)setPackage:(_Bool)arg1;
- (_Bool)isPackage;
- (void)removeObjectForKey:(id)arg1;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (id)keyEnumerator;
- (id)objectForKey:(id)arg1;
- (unsigned long long)count;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithContentsOfFile:(id)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithDictionary:(id)arg1 copyItems:(_Bool)arg2;
- (id)initWithObjects:(const id *)arg1 forKeys:(const id *)arg2 count:(unsigned long long)arg3;
- (id)init;
- (id)initFromElement:(id)arg1 ofDocument:(id)arg2;
- (unsigned long long)addDirNamed:(id)arg1 lazy:(_Bool)arg2;
- (unsigned long long)realAddDirNamed:(id)arg1;
- (unsigned long long)insertItem:(id)arg1 path:(id)arg2 dirInfo:(id)arg3 zone:(struct _NSZone *)arg4 plist:(id)arg5;
- (unsigned long long)addFileNamed:(id)arg1 fileAttributes:(id)arg2;
- (id)getDirInfo:(_Bool)arg1;
- (id)initWithPasteboardDataRepresentation:(id)arg1;
- (id)pasteboardDataRepresentation;
- (id)initFromSerialized:(id)arg1;
- (id)freeSerialized:(void *)arg1 length:(unsigned long long)arg2;
- (id)serialize:(void **)arg1 length:(unsigned long long *)arg2;
- (_Bool)_isLink:(id)arg1;

@end

@interface NSRecursiveLock : NSObject <NSLocking>
{
    void *_priv;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
- (_Bool)isLocking;
@property(copy) NSString *name;
- (id)description;
- (void)unlock;
- (_Bool)tryLock;
- (_Bool)lockBeforeDate:(id)arg1;
- (void)lock;
- (void)finalize;
- (void)dealloc;
- (id)init;

@end

@interface NSReplacementCheckingResult : NSSubstitutionCheckingResult
{
}

- (unsigned long long)resultType;

@end

@interface NSRunLoop (NSOrderedPerforming)
- (void)cancelPerformSelectorsWithTarget:(id)arg1;
- (void)cancelPerformSelector:(SEL)arg1 target:(id)arg2 argument:(id)arg3;
- (void)performSelector:(SEL)arg1 target:(id)arg2 argument:(id)arg3 order:(unsigned long long)arg4 modes:(id)arg5;
@end

@interface NSRunLoop (NSRunLoop)
+ (id)mainRunLoop;
+ (id)currentRunLoop;
+ (id)_new:(id)arg1;
- (_Bool)runBeforeDate:(id)arg1;
- (void)runUntilDate:(id)arg1;
- (void)run;
- (_Bool)runMode:(id)arg1 untilDate:(id)arg2;
- (_Bool)runMode:(id)arg1 beforeDate:(id)arg2;
- (void)acceptInputForMode:(id)arg1 beforeDate:(id)arg2;
- (void)_wakeup;
- (id)limitDateForMode:(id)arg1;
- (void)_invalidateTimers;
- (id)currentMode;
- (id)allModes;
- (_Bool)containsTimer:(id)arg1 forMode:(id)arg2;
- (id)timersForMode:(id)arg1;
- (void)removeTimer:(id)arg1 forMode:(id)arg2;
- (void)addTimer:(id)arg1 forMode:(id)arg2;
- (id)portsForMode:(id)arg1;
- (_Bool)containsPort:(id)arg1 forMode:(id)arg2;
- (void)removePort:(id)arg1 forMode:(id)arg2;
- (void)addPort:(id)arg1 forMode:(id)arg2;
- (id)description;
- (struct __CFRunLoop *)getCFRunLoop;
- (void)dealloc;
- (id)init;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)_removePort:(id)arg1 forMode:(id)arg2;
- (void)_addPort:(id)arg1 forMode:(id)arg2;
- (_Bool)_containsPort:(id)arg1 forMode:(id)arg2;
- (void)_portInvalidated:(id)arg1;
- (void)_enumerateInfoPairsWithBlock:(CDUnknownBlockType)arg1;
@end

__attribute__((visibility("hidden")))
@interface NSSHIFTJISEncodingDetector : NSEncodingDetector
{
}

- (unsigned long long)recognizeString:(const char *)arg1 withDataLength:(unsigned long long)arg2 withReplacement:(const char *)arg3 withReplacementLength:(unsigned long long)arg4 inNewData:(char *)arg5 maxBufferLength:(unsigned long long)arg6 actualBufferLength:(unsigned long long *)arg7;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface NSSearchPathEnumerator : NSEnumerator
{
    long long state;
    unsigned long long directory;
    unsigned long long domainMask;
}

- (id)nextObject;
- (id)initWithDirectory:(unsigned long long)arg1 domains:(unsigned long long)arg2;

@end

@interface NSSelfExpression : NSExpression
{
}

+ (_Bool)_allowsEvaluation;
+ (_Bool)supportsSecureCoding;
+ (id)defaultInstance;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (void)initialize;
- (id)expressionValueWithObject:(id)arg1 context:(id)arg2;
- (id)predicateFormat;
- (id)init;
- (id)_initPrivate;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)autorelease;
- (_Bool)_tryRetain;
- (_Bool)_isDeallocating;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;

@end

@interface NSSet (NSKeyValueCoding)
- (id)valueForKeyPath:(id)arg1;
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (id)valueForKey:(id)arg1;
- (id)_distinctUnionOfSetsForKeyPath:(id)arg1;
- (id)_distinctUnionOfObjectsForKeyPath:(id)arg1;
- (id)_distinctUnionOfArraysForKeyPath:(id)arg1;
- (id)_minForKeyPath:(id)arg1;
- (id)_maxForKeyPath:(id)arg1;
- (id)_countForKeyPath:(id)arg1;
- (id)_avgForKeyPath:(id)arg1;
- (id)_sumForKeyPath:(id)arg1;
@end

@interface NSSet (NSKeyValueObserverRegistration)
- (void)removeObserver:(id)arg1 forKeyPath:(id)arg2;
- (void)removeObserver:(id)arg1 forKeyPath:(id)arg2 context:(void *)arg3;
- (void)addObserver:(id)arg1 forKeyPath:(id)arg2 options:(unsigned long long)arg3 context:(void *)arg4;
@end

@interface NSSet (NSKeyValueSorting)
- (id)sortedArrayUsingDescriptors:(id)arg1;
@end

@interface NSSet (NSPredicateSupport)
- (id)filteredSetUsingPredicate:(id)arg1;
@end

@interface NSSet (NSSet)
+ (_Bool)supportsSecureCoding;
- (Class)classForCoder;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
@end

@interface NSSet (NSSetPortCoding)
- (id)replacementObjectForPortCoder:(id)arg1;
@end

@interface NSSetExpression : NSExpression
{
    NSExpression *_left;
    NSExpression *_right;
}

+ (_Bool)supportsSecureCoding;
- (id)expressionValueWithObject:(id)arg1 context:(id)arg2;
- (id)_expressionWithSubstitutionVariables:(id)arg1;
- (void)acceptVisitor:(id)arg1 flags:(unsigned long long)arg2;
- (id)rightExpression;
- (id)leftExpression;
- (id)predicateFormat;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)allowEvaluation;
- (void)dealloc;
- (id)initWithType:(unsigned long long)arg1 leftExpression:(id)arg2 rightExpression:(id)arg3;

@end

@interface NSSimpleAttributeDictionary : NSDictionary
{
    unsigned int numElements;
    unsigned int refCount;
    struct _NSSimpleAttributeDictionaryElement elements[1];
}

+ (id)newWithDictionary:(id)arg1;
+ (id)emptyAttributeDictionary;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (void)finalize;
- (void)dealloc;
- (id)keyEnumerator;
- (id)objectForKey:(id)arg1;
- (unsigned long long)slotForKey:(id)arg1;
- (unsigned long long)count;
- (id)newWithKey:(id)arg1 object:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface NSSimpleAttributeDictionaryEnumerator : NSEnumerator
{
    NSSimpleAttributeDictionary *dictionary;
    unsigned long long nextElement;
}

- (void)finalize;
- (void)dealloc;
- (id)nextObject;
- (id)initWithAttributeDictionary:(id)arg1;

@end

@interface NSSimpleOrthography : NSOrthography
{
    unsigned int _orthographyFlags;
}

+ (id)orthographyWithFlags:(unsigned int)arg1;
+ (void)initialize;
- (id)allLanguages;
- (id)allScripts;
- (id)dominantLanguage;
- (id)dominantLanguageForScript:(id)arg1;
- (id)languagesForScript:(id)arg1;
- (unsigned int)orthographyFlags;
- (id)languageMap;
- (id)dominantScript;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (Class)classForCoder;
- (id)initWithDominantScript:(id)arg1 languageMap:(id)arg2;
- (id)initWithFlags:(unsigned int)arg1;

@end

@interface NSSimpleRegularExpressionCheckingResult : NSRegularExpressionCheckingResult
{
    NSRegularExpression *_regularExpression;
    struct _NSRange _ranges[3];
}

- (id)rangeArray;
- (struct _NSRange)rangeAtIndex:(unsigned long long)arg1;
- (unsigned long long)numberOfRanges;
- (_Bool)_adjustRangesWithOffset:(long long)arg1;
- (struct _NSRange)range;
- (id)regularExpression;
- (void)dealloc;
- (id)initWithRangeArray:(id)arg1 regularExpression:(id)arg2;
- (id)initWithRanges:(struct _NSRange *)arg1 count:(unsigned long long)arg2 regularExpression:(id)arg3;

@end

@interface NSSocketPort : NSPort
{
    void *_receiver;
    id _connectors;
    void *_loops;
    void *_data;
    id _signature;
    id _delegate;
    id _lock;
    unsigned long long _maxSize;
    unsigned long long _useCount;
    unsigned long long _reserved;
}

+ (_Bool)sendBeforeTime:(double)arg1 streamData:(id)arg2 components:(id)arg3 to:(id)arg4 from:(id)arg5 msgid:(unsigned int)arg6 reserved:(unsigned long long)arg7;
+ (void)_fixNSSocketPortLeak;
+ (void)initialize;
- (void)_handleMessage:(struct __CFData *)arg1 from:(struct __CFData *)arg2 socket:(struct __CFSocket *)arg3;
- (void)handlePortMessage:(id)arg1;
- (void)addConnection:(id)arg1 toRunLoop:(id)arg2 forMode:(id)arg3;
- (void)removeFromRunLoop:(id)arg1 forMode:(id)arg2;
- (void)scheduleInRunLoop:(id)arg1 forMode:(id)arg2;
- (_Bool)sendBeforeDate:(id)arg1 msgid:(unsigned long long)arg2 components:(id)arg3 from:(id)arg4 reserved:(unsigned long long)arg5;
- (_Bool)sendBeforeDate:(id)arg1 components:(id)arg2 from:(id)arg3 reserved:(unsigned long long)arg4;
- (_Bool)sendBeforeTime:(double)arg1 streamData:(void *)arg2 components:(id)arg3 from:(id)arg4 msgid:(unsigned int)arg5;
- (struct __CFSocket *)_sendingSocketForPort:(id)arg1 beforeTime:(double)arg2;
- (id)description;
- (_Bool)_isDeallocating;
- (_Bool)_tryRetain;
- (unsigned long long)retainCount;
- (oneway void)release;
- (id)retain;
- (void)finalize;
- (void)dealloc;
- (id)initWithProtocolFamily:(int)arg1 socketType:(int)arg2 protocol:(int)arg3 socket:(int)arg4;
- (id)initWithProtocolFamily:(int)arg1 socketType:(int)arg2 protocol:(int)arg3 address:(id)arg4;
- (id)initRemoteWithProtocolFamily:(int)arg1 socketType:(int)arg2 protocol:(int)arg3 address:(id)arg4;
- (id)_initRemoteWithSignature:(id)arg1;
- (id)initRemoteWithTCPPort:(unsigned short)arg1 host:(id)arg2;
- (id)initWithTCPPort:(unsigned short)arg1;
- (id)init;
- (id)_initWithRetainedCFSocket:(struct __CFSocket *)arg1 protocolFamily:(int)arg2 socketType:(int)arg3 protocol:(int)arg4;
@property(readonly, copy) NSData *address;
@property(readonly) int socket;
@property(readonly) int protocol;
@property(readonly) int socketType;
@property(readonly) int protocolFamily;
- (id)signature;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (void)handleConnDeath:(id)arg1;
- (void)invalidate;
- (void)_incrementUseCount;
- (_Bool)isValid;

@end

@interface NSSortDescriptor : NSObject <NSSecureCoding, NSCopying>
{
    unsigned long long _sortDescriptorFlags;
    NSString *_key;
    SEL _selector;
    id _selectorOrBlock;
}

+ (_Bool)supportsSecureCoding;
+ (id)_defaultSelectorName;
+ (id)sortDescriptorWithKey:(id)arg1 ascending:(_Bool)arg2 comparator:(CDUnknownBlockType)arg3;
+ (id)sortDescriptorWithKey:(id)arg1 ascending:(_Bool)arg2 selector:(SEL)arg3;
+ (id)sortDescriptorWithKey:(id)arg1 ascending:(_Bool)arg2;
+ (void)initialize;
- (_Bool)isEqual:(id)arg1;
- (_Bool)_isEqualToSortDescriptor:(id)arg1;
@property(readonly, retain) id reversedSortDescriptor;
- (long long)compareObject:(id)arg1 toObject:(id)arg2;
- (id)description;
- (id)_selectorName;
- (void)_setSelectorName:(id)arg1;
@property(readonly) CDUnknownBlockType comparator;
@property(readonly) SEL selector;
@property(readonly) _Bool ascending;
- (void)_setAscending:(_Bool)arg1;
@property(readonly, copy) NSString *key;
- (void)_setKey:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)_disallowEvaluation;
- (void)allowEvaluation;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithKey:(id)arg1 ascending:(_Bool)arg2 comparator:(CDUnknownBlockType)arg3;
- (id)initWithKey:(id)arg1 ascending:(_Bool)arg2 selector:(SEL)arg3;
- (id)initWithKey:(id)arg1 ascending:(_Bool)arg2;
- (id)replacementObjectForPortCoder:(id)arg1;

@end

@interface NSSpellCheckingResult : NSTextCheckingResult
{
    struct _NSRange _range;
}

- (_Bool)_adjustRangesWithOffset:(long long)arg1;
- (id)resultByAdjustingRangesWithOffset:(long long)arg1;
- (struct _NSRange)range;
- (unsigned long long)resultType;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithRange:(struct _NSRange)arg1;

@end

@interface NSStream (NSSocketStreamCreationExtensions)
+ (void)getStreamsToHost:(id)arg1 port:(long long)arg2 inputStream:(id *)arg3 outputStream:(id *)arg4;
+ (void)getStreamsToHostWithName:(id)arg1 port:(long long)arg2 inputStream:(id *)arg3 outputStream:(id *)arg4;
@end

@interface NSStream (NSStream)
- (id)streamError;
- (unsigned long long)streamStatus;
- (void)removeFromRunLoop:(id)arg1 forMode:(id)arg2;
- (void)scheduleInRunLoop:(id)arg1 forMode:(id)arg2;
- (_Bool)setProperty:(id)arg1 forKey:(id)arg2;
- (id)propertyForKey:(id)arg1;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)close;
- (void)open;
@end

@interface NSStream (NSStreamBoundPairCreationExtensions)
+ (void)getBoundStreamsWithBufferSize:(unsigned long long)arg1 inputStream:(id *)arg2 outputStream:(id *)arg3;
@end

@interface NSSubqueryExpression : NSExpression
{
    NSExpression *_collection;
    NSExpression *_variableExpression;
    NSPredicate *_subpredicate;
}

+ (_Bool)supportsSecureCoding;
- (void)acceptVisitor:(id)arg1 flags:(unsigned long long)arg2;
- (_Bool)_shouldUseParensWithDescription;
- (id)_expressionWithSubstitutionVariables:(id)arg1;
- (id)expressionValueWithObject:(id)arg1 context:(id)arg2;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)predicate;
- (id)variable;
- (id)variableExpression;
- (id)collection;
- (id)predicateFormat;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)allowEvaluation;
- (id)initWithExpression:(id)arg1 usingIteratorExpression:(id)arg2 predicate:(id)arg3;
- (id)initWithExpression:(id)arg1 usingIteratorVariable:(id)arg2 predicate:(id)arg3;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface NSSubrangeData : NSData
{
    unsigned int _reserved:3;
    unsigned int _retainCount:29;
    struct _NSRange _range;
    NSData *_data;
}

- (void)dealloc;
- (id)initWithData:(id)arg1 range:(struct _NSRange)arg2;
- (id)init;
- (void)getBytes:(void *)arg1 range:(struct _NSRange)arg2;
- (void)getBytes:(void *)arg1 length:(unsigned long long)arg2;
- (void)getBytes:(void *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)_isCompact;
- (const void *)bytes;
- (unsigned long long)length;

@end

@interface NSSubstringPredicateOperator : NSStringPredicateOperator
{
    unsigned long long _position;
}

+ (_Bool)supportsSecureCoding;
- (_Bool)performPrimitiveOperationUsingObject:(id)arg1 andObject:(id)arg2;
- (id)symbol;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)position;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithOperatorType:(unsigned long long)arg1 modifier:(unsigned long long)arg2 variant:(unsigned long long)arg3 position:(unsigned long long)arg4;
- (SEL)selector;

@end

__attribute__((visibility("hidden")))
@interface NSSymbolicExpression : NSExpression
{
    NSString *_token;
}

+ (_Bool)supportsSecureCoding;
- (id)expressionValueWithObject:(id)arg1 context:(id)arg2;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)constantValue;
- (id)predicateFormat;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithString:(id)arg1;

@end

@interface NSTernaryExpression : NSExpression
{
    NSPredicate *_predicate;
    NSExpression *_trueExpression;
    NSExpression *_falseExpression;
}

+ (_Bool)supportsSecureCoding;
- (id)expressionValueWithObject:(id)arg1 context:(id)arg2;
- (id)_expressionWithSubstitutionVariables:(id)arg1;
- (void)acceptVisitor:(id)arg1 flags:(unsigned long long)arg2;
- (id)falseExpression;
- (id)trueExpression;
- (id)predicate;
- (id)predicateFormat;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)allowEvaluation;
- (void)dealloc;
- (id)initWithPredicate:(id)arg1 trueExpression:(id)arg2 falseExpression:(id)arg3;

@end

@interface NSThread : NSObject
{
    id _private;
    unsigned char _bytes[44];
}

+ (void)detachNewThreadSelector:(SEL)arg1 toTarget:(id)arg2 withObject:(id)arg3;
+ (_Bool)isDying;
+ (void)exit;
+ (id)currentThread;
+ (id)mainThread;
+ (id)callStackSymbols;
+ (id)callStackReturnAddresses;
+ (void)sleepForTimeInterval:(double)arg1;
+ (void)sleepUntilDate:(id)arg1;
+ (_Bool)setThreadPriority:(double)arg1;
+ (double)threadPriority;
+ (_Bool)isMultiThreaded;
+ (_Bool)isMainThread;
- (void)_nq:(id)arg1;
- (void)main;
- (void)start;
- (id)description;
- (void)cancel;
@property(readonly, getter=isCancelled) _Bool cancelled;
@property(readonly, getter=isFinished) _Bool finished;
@property(readonly, getter=isExecuting) _Bool executing;
@property(readonly) _Bool isMainThread;
@property double threadPriority;
@property long long qualityOfService;
@property unsigned long long stackSize;
@property(copy) NSString *name;
@property(readonly, retain) NSMutableDictionary *threadDictionary;
- (void)dealloc;
- (id)initWithTarget:(id)arg1 selector:(SEL)arg2 object:(id)arg3;
- (id)init;
- (_Bool)isDying;
- (id)runLoop;

@end

@interface NSTimeZone (NSTimeZone)
- (Class)classForCoder;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
@end

@interface NSTimeZone (NSTimeZonePortCoding)
- (id)replacementObjectForPortCoder:(id)arg1;
@end

@interface NSTimer (NSTimer)
+ (id)timerWithFireDate:(id)arg1 target:(id)arg2 selector:(SEL)arg3 userInfo:(id)arg4;
+ (id)scheduledTimerWithTimeInterval:(double)arg1 target:(id)arg2 selector:(SEL)arg3 userInfo:(id)arg4 repeats:(_Bool)arg5;
+ (id)timerWithTimeInterval:(double)arg1 target:(id)arg2 selector:(SEL)arg3 userInfo:(id)arg4 repeats:(_Bool)arg5;
+ (id)scheduledTimerWithTimeInterval:(double)arg1 invocation:(id)arg2 repeats:(_Bool)arg3;
+ (id)timerWithTimeInterval:(double)arg1 invocation:(id)arg2 repeats:(_Bool)arg3;
+ (id)allocWithZone:(struct _NSZone *)arg1;
- (double)_cffireTime;
- (CDStruct_e097db04)context;
- (void)setFireTime:(double)arg1;
- (double)fireTime;
- (double)interval;
- (long long)order;
- (struct __CFString *)copyDebugDescription;
- (id)userInfo;
- (void)setFireDate:(id)arg1;
- (id)fireDate;
- (void)fire;
- (void)setTolerance:(double)arg1;
- (double)tolerance;
- (double)timeInterval;
- (_Bool)isValid;
- (void)invalidate;
- (id)initWithFireDate:(id)arg1 interval:(double)arg2 target:(id)arg3 selector:(SEL)arg4 userInfo:(id)arg5 repeats:(_Bool)arg6;
@end

__attribute__((visibility("hidden")))
@interface NSTokenMatchingPredicateOperator : NSStringPredicateOperator
{
}

- (_Bool)performPrimitiveOperationUsingObject:(id)arg1 andObject:(id)arg2;
- (SEL)selector;
- (id)symbol;

@end

@interface NSTransitInformationCheckingResult : NSTextCheckingResult
{
    struct _NSRange _range;
    NSDictionary *_components;
    id _underlyingResult;
}

@property(readonly) void *underlyingResult;
- (id)components;
- (_Bool)_adjustRangesWithOffset:(long long)arg1;
- (id)resultByAdjustingRangesWithOffset:(long long)arg1;
- (struct _NSRange)range;
- (unsigned long long)resultType;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithRange:(struct _NSRange)arg1 components:(id)arg2;
- (id)initWithRange:(struct _NSRange)arg1 components:(id)arg2 underlyingResult:(void *)arg3;

@end

@interface NSTruePredicate : NSPredicate
{
}

+ (_Bool)_allowsEvaluation;
+ (_Bool)supportsSecureCoding;
+ (id)defaultInstance;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (void)initialize;
- (void)acceptVisitor:(id)arg1 flags:(unsigned long long)arg2;
- (_Bool)evaluateWithObject:(id)arg1 substitutionVariables:(id)arg2;
- (id)predicateFormat;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)autorelease;
- (_Bool)_tryRetain;
- (_Bool)_isDeallocating;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;
- (void)_validateForMetadataQueryScopes:(id)arg1;

@end

@interface NSURL (NSKeyValueObservingCustomization)
+ (_Bool)automaticallyNotifiesObserversForKey:(id)arg1;
@end

@interface NSURL (NSURL)
+ (id)URLByResolvingAliasFileAtURL:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;
+ (id)URLByResolvingBookmarkData:(id)arg1 options:(unsigned long long)arg2 relativeToURL:(id)arg3 bookmarkDataIsStale:(_Bool *)arg4 error:(id *)arg5;
+ (id)fileURLWithFileSystemRepresentation:(const char *)arg1 isDirectory:(_Bool)arg2 relativeToURL:(id)arg3;
+ (id)fileURLWithPath:(id)arg1 isDirectory:(_Bool)arg2;
+ (id)fileURLWithPath:(id)arg1;
+ (id)URLWithString:(id)arg1 relativeToURL:(id)arg2;
+ (id)URLWithString:(id)arg1;
+ (id)allocWithZone:(struct _NSZone *)arg1;
- (_Bool)isFileURL;
- (id)fragment;
- (id)query;
- (id)parameterString;
- (id)path;
- (id)relativePath;
- (id)password;
- (id)user;
- (id)port;
- (id)host;
- (id)standardizedURL;
- (id)absoluteURL;
- (id)absoluteString;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)initByResolvingAliasFileAtURL:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;
- (id)initByResolvingBookmarkData:(id)arg1 options:(unsigned long long)arg2 relativeToURL:(id)arg3 bookmarkDataIsStale:(_Bool *)arg4 error:(id *)arg5;
- (const char *)fileSystemRepresentation;
- (_Bool)getFileSystemRepresentation:(char *)arg1 maxLength:(unsigned long long)arg2;
- (id)initFileURLWithFileSystemRepresentation:(const char *)arg1 isDirectory:(_Bool)arg2 relativeToURL:(id)arg3;
- (id)initFileURLWithPath:(id)arg1 isDirectory:(_Bool)arg2;
- (id)initFileURLWithPath:(id)arg1;
- (id)initWithScheme:(id)arg1 host:(id)arg2 path:(id)arg3;
- (id)initWithString:(id)arg1;
- (id)init;
- (id)resourceSpecifier;
- (_Bool)_isAbsolute;
- (id)_relativeURLPath;
- (id)scheme;
- (id)baseURL;
- (id)relativeString;
- (void)finalize;
- (void)dealloc;
- (void)_freeClients;
- (struct __CFDictionary *)_clientsCreatingIfNecessary:(_Bool)arg1;
- (struct __CFURL *)_cfurl;
- (id)initWithString:(id)arg1 relativeToURL:(id)arg2;
- (unsigned long long)_cfTypeID;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)_isDeallocating;
- (_Bool)_tryRetain;
- (unsigned long long)retainCount;
- (oneway void)release;
- (id)retain;
@end

@interface NSURL (NSURLExtras)
+ (id)_web_URLWithComponents:(CDStruct_4f05a0fa)arg1;
+ (id)_web_URLWithString:(id)arg1 relativeToURL:(id)arg2;
- (_Bool)_web_isJavaScriptURL;
- (id)_web_suggestedFilenameWithMIMEType:(id)arg1;
- (id)_web_scriptIfJavaScriptURL;
- (CDStruct_4f05a0fa)_web_URLComponents;
@end

@interface NSURL (NSURLExtrasInternal)
+ (id)_URLWithData:(id)arg1 relativeToURL:(id)arg2;
+ (id)_URLWithDataAsString:(id)arg1 relativeToURL:(id)arg2;
- (id)_hostString;
- (id)_URLByEscapingSpacesAndControlChars;
- (id)_web_URLByRemovingUserAndQueryAndFragment_nowarn;
- (id)_web_URLByRemovingUserAndPath_nowarn;
- (id)_web_URLByRemovingLastPathComponent_nowarn;
@end

@interface NSURL (NSURLPathUtilities)
+ (id)fileURLWithPathComponents:(id)arg1;
@property(readonly, copy) NSURL *URLByResolvingSymlinksInPath;
@property(readonly, copy) NSURL *URLByStandardizingPath;
@property(readonly, copy) NSURL *URLByDeletingPathExtension;
- (id)URLByAppendingPathExtension:(id)arg1;
@property(readonly, copy) NSURL *URLByDeletingLastPathComponent;
- (id)URLByAppendingPathComponent:(id)arg1;
- (id)URLByAppendingPathComponent:(id)arg1 isDirectory:(_Bool)arg2;
@property(readonly, copy) NSString *pathExtension;
@property(readonly, copy) NSString *lastPathComponent;
@property(readonly, copy) NSArray *pathComponents;
@end

@interface NSURL (NSURLPromisedItems)
- (id)promisedItemResourceValuesForKeys:(id)arg1 error:(id *)arg2;
- (_Bool)getPromisedItemResourceValue:(out id *)arg1 forKey:(id)arg2 error:(out id *)arg3;
- (id)_valueFromFaultDictionary:(id)arg1 forKey:(id)arg2;
- (_Bool)checkPromisedItemIsReachableAndReturnError:(id *)arg1;
- (id)_fixedUpSideFaultError:(id)arg1;
- (id)_physicalURL;
- (void)_promiseExtensionRelease:(long long)arg1;
- (long long)_promiseExtensionConsume;
@end

@interface NSURLComponents : NSObject <NSCopying>
{
}

+ (id)componentsWithString:(id)arg1;
+ (id)componentsWithURL:(id)arg1 resolvingAgainstBaseURL:(_Bool)arg2;
+ (id)allocWithZone:(struct _NSZone *)arg1;
@property(copy) NSArray *queryItems;
@property(copy) NSString *percentEncodedFragment;
@property(copy) NSString *percentEncodedQuery;
@property(copy) NSString *percentEncodedPath;
@property(copy) NSString *percentEncodedHost;
@property(copy) NSString *percentEncodedPassword;
@property(copy) NSString *percentEncodedUser;
@property(copy) NSString *fragment;
@property(copy) NSString *query;
@property(copy) NSString *path;
@property(copy) NSNumber *port;
@property(copy) NSString *host;
@property(copy) NSString *password;
@property(copy) NSString *user;
@property(copy) NSString *scheme;
@property(readonly, copy) NSString *string;
- (id)URLRelativeToURL:(id)arg1;
@property(readonly, copy) NSURL *URL;
- (id)initWithString:(id)arg1;
- (id)initWithURL:(id)arg1 resolvingAgainstBaseURL:(_Bool)arg2;
- (id)init;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

__attribute__((visibility("hidden")))
@interface NSURLDirectoryEnumerator : NSDirectoryEnumerator
{
    struct __CFURLEnumerator *_enumerator;
    CDUnknownBlockType _errorHandler;
    _Bool shouldContinue;
}

@property(copy) CDUnknownBlockType errorHandler; // @synthesize errorHandler=_errorHandler;
- (void)finalize;
- (void)dealloc;
- (id)directoryAttributes;
- (id)fileAttributes;
- (unsigned long long)level;
- (void)skipDescendants;
- (void)skipDescendents;
- (id)nextObject;
- (id)initWithURL:(id)arg1 includingPropertiesForKeys:(id)arg2 options:(unsigned long long)arg3 errorHandler:(CDUnknownBlockType)arg4;

@end

@interface NSURLError : NSError
{
}

- (void)encodeWithCoder:(id)arg1;

@end

@interface NSURLFileTypeMappings : NSObject
{
    NSURLFileTypeMappingsInternal *_internal;
}

+ (id)sharedMappings;
- (id)extensionsForMIMEType:(id)arg1;
- (id)preferredExtensionForMIMEType:(id)arg1;
- (id)MIMETypeForExtension:(id)arg1;
- (id)_UTIMIMETypeForExtension:(id)arg1;
- (id)_UTIextensionForMIMEType:(id)arg1;
- (id)_init;

@end

__attribute__((visibility("hidden")))
@interface NSURLFileTypeMappingsInternal : NSObject
{
    NSDictionary *MIMETypeToExtensionList;
    NSDictionary *extensionToMIMEType;
}

- (id)init;

@end

__attribute__((visibility("hidden")))
@interface NSURLHostNameAddressInfo : NSObject
{
    double timestamp;
    struct addrinfo *addressInfo;
}

+ (void)asyncResolveWithCallbackClient:(id)arg1;
+ (id)addressInfoForHost:(id)arg1;
- (void)finalize;
- (void)dealloc;
- (double)_timestamp;
- (struct addrinfo *)addrinfo;
- (id)_initWithAddressInfo:(struct addrinfo *)arg1;

@end

__attribute__((visibility("hidden")))
@interface NSURLKeyValuePair : NSObject
{
    id key;
    id value;
    unsigned long long hash;
}

+ (id)pairWithKey:(id)arg1 value:(id)arg2;
+ (id)pair;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)description;
- (id)value;
- (id)key;
- (void)setValue:(id)arg1;
- (void)setKey:(id)arg1;
- (void)dealloc;
- (id)initWithKey:(id)arg1 value:(id)arg2;

@end

@interface NSURLQueryItem : NSObject <NSSecureCoding, NSCopying>
{
    NSString *_name;
    NSString *_value;
}

+ (_Bool)supportsSecureCoding;
+ (_Bool)automaticallyNotifiesObserversForKey:(id)arg1;
+ (id)queryItemWithName:(id)arg1 value:(id)arg2;
@property(readonly) NSString *value; // @synthesize value=_value;
@property(readonly) NSString *name; // @synthesize name=_name;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithName:(id)arg1 value:(id)arg2;
- (id)init;
- (void)finalize;
- (void)dealloc;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface NSURLQueue : NSObject
{
    unsigned long long count;
    NSURLQueueNode *head;
    NSURLQueueNode *tail;
    id monitor;
    _Bool waitOnTake;
    _Bool _pad1;
    _Bool _pad2;
    _Bool _pad3;
}

+ (id)newNode;
- (void)setWaitOnTake:(_Bool)arg1;
- (_Bool)waitOnTake;
- (unsigned long long)count;
- (_Bool)isEmpty;
- (long long)indexOf:(id)arg1;
- (void)clear;
- (_Bool)remove:(id)arg1;
- (id)peekAt:(unsigned long long)arg1;
- (id)peek;
- (id)take;
- (void)put:(id)arg1;
- (void)finalize;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface NSURLQueueNode : NSObject
{
    id object;
    NSURLQueueNode *next;
}

@end

__attribute__((visibility("hidden")))
@interface NSUTF16BaseEncodingDetector : NSEncodingDetector
{
}

@end

__attribute__((visibility("hidden")))
@interface NSUTF16BEEncodingDetector : NSUTF16BaseEncodingDetector
{
}

- (unsigned long long)recognizeString:(const char *)arg1 withDataLength:(unsigned long long)arg2 withReplacement:(const char *)arg3 withReplacementLength:(unsigned long long)arg4 inNewData:(char *)arg5 maxBufferLength:(unsigned long long)arg6 actualBufferLength:(unsigned long long *)arg7;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface NSUTF16EncodingDetector : NSUTF16BaseEncodingDetector
{
}

- (unsigned long long)recognizeString:(const char *)arg1 withDataLength:(unsigned long long)arg2 withReplacement:(const char *)arg3 withReplacementLength:(unsigned long long)arg4 inNewData:(char *)arg5 maxBufferLength:(unsigned long long)arg6 actualBufferLength:(unsigned long long *)arg7;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface NSUTF16LEEncodingDetector : NSUTF16BaseEncodingDetector
{
}

- (unsigned long long)recognizeString:(const char *)arg1 withDataLength:(unsigned long long)arg2 withReplacement:(const char *)arg3 withReplacementLength:(unsigned long long)arg4 inNewData:(char *)arg5 maxBufferLength:(unsigned long long)arg6 actualBufferLength:(unsigned long long *)arg7;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface NSUTF32BEEncodingDetector : NSEncodingDetector
{
}

- (unsigned long long)recognizeString:(const char *)arg1 withDataLength:(unsigned long long)arg2 withReplacement:(const char *)arg3 withReplacementLength:(unsigned long long)arg4 inNewData:(char *)arg5 maxBufferLength:(unsigned long long)arg6 actualBufferLength:(unsigned long long *)arg7;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface NSUTF32EncodingDetector : NSEncodingDetector
{
}

- (unsigned long long)recognizeString:(const char *)arg1 withDataLength:(unsigned long long)arg2 withReplacement:(const char *)arg3 withReplacementLength:(unsigned long long)arg4 inNewData:(char *)arg5 maxBufferLength:(unsigned long long)arg6 actualBufferLength:(unsigned long long *)arg7;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface NSUTF32LEEncodingDetector : NSEncodingDetector
{
}

- (unsigned long long)recognizeString:(const char *)arg1 withDataLength:(unsigned long long)arg2 withReplacement:(const char *)arg3 withReplacementLength:(unsigned long long)arg4 inNewData:(char *)arg5 maxBufferLength:(unsigned long long)arg6 actualBufferLength:(unsigned long long *)arg7;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface NSUTF7EncodingDetector : NSEncodingDetector
{
}

- (unsigned long long)recognizeString:(const char *)arg1 withDataLength:(unsigned long long)arg2 withReplacement:(const char *)arg3 withReplacementLength:(unsigned long long)arg4 inNewData:(char *)arg5 maxBufferLength:(unsigned long long)arg6 actualBufferLength:(unsigned long long *)arg7;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface NSUTF8EncodingDetector : NSEncodingDetector
{
}

- (unsigned long long)recognizeString:(const char *)arg1 withDataLength:(unsigned long long)arg2 withReplacement:(const char *)arg3 withReplacementLength:(unsigned long long)arg4 inNewData:(char *)arg5 maxBufferLength:(unsigned long long)arg6 actualBufferLength:(unsigned long long *)arg7;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface NSUTIPredicateOperator : NSPredicateOperator
{
}

- (_Bool)performPrimitiveOperationUsingObject:(id)arg1 andObject:(id)arg2;
- (id)predicateFormat;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (unsigned long long)variant;
- (id)initForVariant:(unsigned long long)arg1;

@end

@interface NSUUID : NSObject <NSCopying, NSSecureCoding>
{
}

+ (_Bool)supportsSecureCoding;
+ (id)UUID;
+ (id)allocWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (struct __CFString *)_cfUUIDString;
@property(readonly, copy) NSString *UUIDString;
- (void)getUUIDBytes:(unsigned char [16])arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)initWithUUIDBytes:(unsigned char [16])arg1;
- (id)initWithUUIDString:(id)arg1;
- (id)init;
- (unsigned long long)_cfTypeID;

@end

@interface NSUbiquitousKeyValueStore : NSObject
{
    id _private1;
    id _private2;
    id _private3;
    void *_private4;
    void *_reserved[3];
}

+ (void)_appWillDeactivate;
+ (void)_appWillActivate;
+ (void)_synchronizeStoresForced:(_Bool)arg1;
+ (id)additionalStoreWithIdentifier:(id)arg1;
+ (id)defaultStore;
- (void)setBool:(_Bool)arg1 forKey:(id)arg2;
- (_Bool)boolForKey:(id)arg1;
- (void)setDouble:(double)arg1 forKey:(id)arg2;
- (double)doubleForKey:(id)arg1;
- (void)setLongLong:(long long)arg1 forKey:(id)arg2;
- (long long)longLongForKey:(id)arg1;
- (void)setData:(id)arg1 forKey:(id)arg2;
- (id)dataForKey:(id)arg1;
- (void)setDictionary:(id)arg1 forKey:(id)arg2;
- (id)dictionaryForKey:(id)arg1;
- (void)setArray:(id)arg1 forKey:(id)arg2;
- (id)arrayForKey:(id)arg1;
- (void)setString:(id)arg1 forKey:(id)arg2;
- (id)stringForKey:(id)arg1;
- (unsigned long long)maximumTotalDataLength;
- (unsigned long long)maximumDataLengthPerKey;
- (unsigned long long)maximumKeyLength;
- (unsigned long long)maximumKeyCount;
- (void)_unregisterFromDaemon;
- (void)_registerToDaemon;
- (void)_configurationDidChange;
- (void)_sourceDidChange:(id)arg1;
- (_Bool)synchronize;
- (_Bool)_synchronizeForced:(_Bool)arg1;
- (_Bool)_synchronizeForced:(_Bool)arg1 notificationQueue:(id)arg2;
- (void)synchronizeWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)_scheduleRemoteSynchronization;
@property(readonly, copy) NSDictionary *dictionaryRepresentation;
- (void)registerDefaultValues:(id)arg1;
- (void)removeObjectForKey:(id)arg1;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (void)_adjustTimerForAutosync;
- (void)_adjustTimer:(id)arg1;
- (void)_syncConcurrently;
- (void)_syncConcurrentlyForced:(_Bool)arg1;
- (_Bool)synchronizeWithSourceForced:(_Bool)arg1;
- (id)objectForKey:(id)arg1;
- (void)_rethrowException:(id)arg1;
- (_Bool)_postDidChangeNotificationExternalChanges:(id)arg1 sourceChangeCount:(long long)arg2;
- (int)_storeChangeFromSourceChange:(int)arg1;
- (void)_setHasPendingSynchronize:(_Bool)arg1;
- (_Bool)_hasPendingSynchronize;
- (void)_setShouldAvoidSynchronize:(_Bool)arg1;
- (_Bool)_shouldAvoidSynchronize;
- (void)finalize;
- (void)dealloc;
- (id)init;
- (id)initWithBundleIdentifier:(id)arg1;
- (id)initWithBundleIdentifier:(id)arg1 storeIdentifier:(id)arg2;
- (id)initWithBundleIdentifier:(id)arg1 storeIdentifier:(id)arg2 additionalStore:(_Bool)arg3;
- (void)_useSourceSyncWithBlock:(CDUnknownBlockType)arg1;
- (void)_useSourceAsyncWithBlock:(CDUnknownBlockType)arg1;
- (void)_pleaseSynchronize:(id)arg1;

@end

@interface NSUnarchiver : NSCoder
{
    void *datax;
    unsigned long long cursor;
    struct _NSZone *objectZone;
    unsigned long long systemVersion;
    BOOL streamerVersion;
    BOOL swap;
    BOOL unused1;
    BOOL unused2;
    void *pointerTable;
    void *stringTable;
    id classVersions;
    long long lastLabel;
    void *map;
    void *allUnarchivedObjects;
    id reserved;
}

+ (id)classNameDecodedForArchiveClassName:(id)arg1;
+ (void)decodeClassName:(id)arg1 asClassName:(id)arg2;
+ (id)unarchiveObjectWithFile:(id)arg1;
+ (id)unarchiveObjectWithData:(id)arg1;
+ (void)initialize;
- (id)classNameDecodedForArchiveClassName:(id)arg1;
- (void)decodeClassName:(id)arg1 asClassName:(id)arg2;
- (id)decodeDataObject;
- (id)decodeObject;
- (void *)decodeBytesWithReturnedLength:(unsigned long long *)arg1;
- (void)decodeArrayOfObjCType:(const char *)arg1 count:(unsigned long long)arg2 at:(void *)arg3;
- (void)decodeValuesOfObjCTypes:(const char *)arg1;
- (void)decodeValueOfObjCType:(const char *)arg1 at:(void *)arg2;
- (id)data;
- (long long)versionForClassName:(id)arg1;
@property(readonly) unsigned int systemVersion;
@property(readonly, getter=isAtEnd) _Bool atEnd;
- (struct _NSZone *)objectZone;
- (void)setObjectZone:(struct _NSZone *)arg1;
- (void)_setAllowedClasses:(id)arg1;
- (void)replaceObject:(id)arg1 withObject:(id)arg2;
- (void)finalize;
- (void)dealloc;
- (id)initForReadingWithData:(id)arg1;

@end

@interface NSUndoManager : NSObject
{
    id _undoStack;
    id _redoStack;
    NSArray *_runLoopModes;
    unsigned long long _NSUndoManagerPrivate1;
    id _target;
    id _proxy;
    void *_NSUndoManagerPrivate2;
    void *_NSUndoManagerPrivate3;
}

+ (void)_endTopLevelGroupings;
+ (void)_setEndsTopLevelGroupingsAfterRunLoopIterations:(_Bool)arg1;
- (id)redoMenuTitleForUndoActionName:(id)arg1;
- (id)undoMenuTitleForUndoActionName:(id)arg1;
@property(readonly, copy) NSString *redoMenuItemTitle;
@property(readonly, copy) NSString *undoMenuItemTitle;
@property(readonly) _Bool redoActionIsDiscardable;
@property(readonly) _Bool undoActionIsDiscardable;
- (void)setActionIsDiscardable:(_Bool)arg1;
- (void)setActionName:(id)arg1;
- (void)_setGroupIdentifier:(id)arg1;
@property(readonly, copy) NSString *redoActionName;
@property(readonly, copy) NSString *undoActionName;
- (void)registerUndoWithTarget:(id)arg1 selector:(SEL)arg2 object:(id)arg3;
- (void)_forwardTargetInvocation:(id)arg1;
- (void)_registerUndoObject:(id)arg1;
- (id)_methodSignatureForTargetSelector:(SEL)arg1;
- (id)prepareWithInvocationTarget:(id)arg1;
- (void)removeAllActionsWithTarget:(id)arg1;
- (void)removeAllActions;
@property(readonly, getter=isRedoing) _Bool redoing;
@property(readonly, getter=isUndoing) _Bool undoing;
@property(readonly) _Bool canRedo;
@property(readonly) _Bool canUndo;
- (void)redo;
- (void)undoNestedGroup;
- (void)undo;
@property(copy) NSArray *runLoopModes;
@property unsigned long long levelsOfUndo;
@property _Bool groupsByEvent;
@property(readonly, getter=isUndoRegistrationEnabled) _Bool undoRegistrationEnabled;
- (void)enableUndoRegistration;
- (void)disableUndoRegistration;
- (void)endUndoGrouping;
- (_Bool)_endUndoGroupRemovingIfEmpty:(_Bool)arg1;
@property(readonly) long long groupingLevel;
- (void)beginUndoGrouping;
- (void)_postCheckpointNotification;
- (void)_prepareEventGrouping;
- (void)_cancelAutomaticTopLevelGroupEnding;
- (void)_scheduleAutomaticTopLevelGroupEnding;
- (void)_delayAutomaticTermination:(double)arg1;
- (void)finalize;
- (void)dealloc;
- (id)init;
- (void)_rollbackUndoGrouping;
- (void)_commitUndoGrouping;
- (void)_processEndOfEventNotification:(id)arg1;
- (_Bool)_shouldCoalesceTypingForText:(id)arg1:(id)arg2;
- (id)_undoStack;

@end

__attribute__((visibility("hidden")))
@interface NSUndoManagerProxy : NSProxy
{
    NSUndoManager *_manager;
    Class _targetClass;
}

- (_Bool)isKindOfClass:(Class)arg1;
- (void)forwardInvocation:(id)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (void)superRelease;
- (oneway void)release;
- (_Bool)_tryRetain;
- (id)retain;
- (id)initWithManager:(id)arg1 targetClass:(Class)arg2;

@end

__attribute__((visibility("hidden")))
@interface NSUnitFormatter : NSFormatter
{
    NSNumberFormatter *_numberFormatter;
    long long _unitStyle;
    struct UAMeasureFormat *_formatter;
    struct UPluralRules *_prules;
    _Bool _modified;
    NSString *_localeID;
}

- (id)unitStringFromValue:(double)arg1 unit:(unsigned long long)arg2;
- (id)stringForValue1:(double)arg1 unit1:(unsigned long long)arg2 value2:(double)arg3 unit2:(unsigned long long)arg4;
- (id)stringForValue:(double)arg1 unit:(unsigned long long)arg2;
@property long long unitStyle;
@property(copy) NSNumberFormatter *numberFormatter;
- (void)finalize;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface NSUnkeyedPortCoder : NSConcretePortCoder
{
    id sndPort;
    id rcvPort;
    NSDOStreamData *doStreamData;
    NSMutableArray *components;
    NSMutableArray *importedObjects;
    unsigned long long componentIndex;
    _Bool isBycopy;
    _Bool isByref;
    _Bool isValid;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (void)_enableLogging:(_Bool)arg1;
- (id)decodeRetainedObject;
- (void)encodeByrefObject:(id)arg1;
- (void)encodeBycopyObject:(id)arg1;
- (void)encodeObject:(id)arg1 isBycopy:(_Bool)arg2 isByref:(_Bool)arg3;
- (void)decodeReturnValue:(id)arg1;
- (void)encodeReturnValue:(id)arg1;
- (id)decodeInvocation;
- (void)encodeInvocation:(id)arg1;
- (void)decodeValueOfObjCType:(const char *)arg1 at:(void *)arg2;
- (void)encodeValueOfObjCType:(const char *)arg1 at:(const void *)arg2;
- (id)decodePortObject;
- (void)encodePortObject:(id)arg1;
- (void *)decodeBytesWithReturnedLength:(unsigned long long *)arg1;
- (void)encodeBytes:(const void *)arg1 length:(unsigned long long)arg2;
- (id)decodeDataObject;
- (void)encodeDataObject:(id)arg1;
- (long long)versionForClassName:(id)arg1;
- (_Bool)isByref;
- (_Bool)isBycopy;
- (id)_proxyForLocalObject:(id)arg1;
- (id)connection;
- (void)importObject:(id)arg1;
- (id)importedObjects;
- (id)finishedComponents;
- (id)components;
- (void)dealloc;
- (void)invalidate;
- (void)dispatch;
- (id)initWithReceivePort:(id)arg1 sendPort:(id)arg2 components:(id)arg3;
- (id)debugDescription;

@end

@interface NSUserActivity : NSObject
{
    id _internal;
    id _delegate;
    id _frameworkDelegate;
}

+ (void)_fetchUserActivityWithUUID:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
@property(readonly, retain) LSUserActivity *_internalUserActivity; // @synthesize _internalUserActivity=_internal;
- (void)setWebPageURL:(id)arg1;
- (id)webPageURL;
- (id)initWithTypeIdentifier:(id)arg1;
- (id)typeIdentifier;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (void)getContinuationStreamsWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)invalidate;
- (void)becomeCurrent;
@property _Bool supportsContinuationStreams; // @dynamic supportsContinuationStreams;
@property __weak id <NSUserActivityDelegate> delegate; // @dynamic delegate;
@property(copy) NSURL *webpageURL; // @dynamic webpageURL;
@property _Bool needsSave;
- (void)addUserInfoEntriesFromDictionary:(id)arg1;
@property(copy) NSDictionary *userInfo; // @dynamic userInfo;
@property(copy) NSString *title; // @dynamic title;
@property(readonly, copy) NSString *activityType; // @dynamic activityType;
- (void)dealloc;
- (id)initWithActivityType:(id)arg1;
- (id)init;
- (id)initWithInternalUserActivity:(id)arg1;
- (void)didReceiveInputStream:(id)arg1 outputStream:(id)arg2;
- (void)didSynchronizeActivity;
- (void)willSynchronizeActivity;
@property(setter=_setFrameworkDelegate:) __weak id <NSUserActivityDelegate> _frameworkDelegate; // @dynamic _frameworkDelegate;
@property(copy, setter=_setOptions:) NSDictionary *_options; // @dynamic _options;
- (void)_setLastActivityDate:(id)arg1;
@property(readonly, copy) NSDate *_lastActivityDate; // @dynamic _lastActivityDate;
@property(readonly) unsigned long long _suggestedActionType; // @dynamic _suggestedActionType;
@property(readonly, retain) NSUUID *_uniqueIdentifier; // @dynamic _uniqueIdentifier;
- (void)_removeFrameworkPayloadValueForKey:(id)arg1;
- (void)_updateFrameworkPayloadValue:(id)arg1 forKey:(id)arg2;
@property(copy, setter=_setFrameworkPayload:) NSDictionary *_frameworkPayload; // @dynamic _frameworkPayload;
- (void)_removeUserInfoValueForKey:(id)arg1;
- (void)_updateUserInfoValue:(id)arg1 forKey:(id)arg2;
- (id)_initWithTypeIdentifier:(id)arg1 suggestedActionType:(unsigned long long)arg2 options:(id)arg3;

@end

@interface NSUserDefaults (NSKeyValueCoding)
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (id)valueForKey:(id)arg1;
@end

@interface NSUserDefaults (NSUserDefaults)
+ (id)standardUserDefaults;
+ (void)resetStandardUserDefaults;
+ (void)setStandardUserDefaults:(id)arg1;
- (_Bool)objectIsForcedForKey:(id)arg1 inDomain:(id)arg2;
- (_Bool)objectIsForcedForKey:(id)arg1;
- (_Bool)synchronize;
- (void)removePersistentDomainForName:(id)arg1;
- (void)setPersistentDomain:(id)arg1 forName:(id)arg2;
- (id)persistentDomainForName:(id)arg1;
- (id)persistentDomainNames;
- (void)removeVolatileDomainForName:(id)arg1;
- (void)setVolatileDomain:(id)arg1 forName:(id)arg2;
- (id)volatileDomainForName:(id)arg1;
- (id)volatileDomainNames;
- (oneway void)release;
- (void)dealloc;
- (id)init;
- (id)initWithSuiteName:(id)arg1;
- (id)_initWithSuiteName:(id)arg1 container:(id)arg2;
- (id)initWithUser:(id)arg1;
- (void)registerDefaults:(id)arg1;
- (void)removeSuiteNamed:(id)arg1;
- (void)addSuiteNamed:(id)arg1;
- (void)setSearchList:(id)arg1;
- (id)searchList;
- (id)dictionaryRepresentation;
- (void)setURL:(id)arg1 forKey:(id)arg2;
- (void)setBool:(_Bool)arg1 forKey:(id)arg2;
- (void)setDouble:(double)arg1 forKey:(id)arg2;
- (void)setFloat:(float)arg1 forKey:(id)arg2;
- (void)setLong:(long long)arg1 forKey:(id)arg2;
- (void)setInteger:(long long)arg1 forKey:(id)arg2;
- (id)URLForKey:(id)arg1;
- (_Bool)boolForKey:(id)arg1;
- (double)doubleForKey:(id)arg1;
- (float)floatForKey:(id)arg1;
- (long long)longForKey:(id)arg1;
- (long long)integerForKey:(id)arg1;
- (id)stringArrayForKey:(id)arg1;
- (id)dataForKey:(id)arg1;
- (id)dictionaryForKey:(id)arg1;
- (id)arrayForKey:(id)arg1;
- (id)stringForKey:(id)arg1;
- (void)removeObjectForKey:(id)arg1 inDomain:(id)arg2;
- (void)setObject:(id)arg1 forKey:(id)arg2 inDomain:(id)arg3;
- (id)objectForKey:(id)arg1 inDomain:(id)arg2;
- (void)removeObjectForKey:(id)arg1;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (id)objectForKey:(id)arg1;
@end

@interface NSUserDefaults (NSUserDefaults_NSURLExtras)
+ (id)_web_preferredLanguageCode;
+ (void)_web_addDefaultsChangeObserver;
+ (void)_web_defaultsDidChange;
+ (void)_ensureAndLockPreferredLanguageLock;
@end

@interface NSValueTransformer : NSObject
{
}

+ (_Bool)allowsReverseTransformation;
+ (Class)transformedValueClass;
+ (id)valueTransformerNames;
+ (id)valueTransformerForName:(id)arg1;
+ (void)setValueTransformer:(id)arg1 forName:(id)arg2;
+ (id)_transformerRegistry;
- (id)reverseTransformedValue:(id)arg1;
- (id)transformedValue:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface NSVariableAssignmentExpression : NSExpression
{
    NSVariableExpression *_assignmentVariable;
    NSExpression *_subexpression;
}

+ (_Bool)supportsSecureCoding;
- (id)_expressionWithSubstitutionVariables:(id)arg1;
- (void)acceptVisitor:(id)arg1 flags:(unsigned long long)arg2;
- (id)expressionValueWithObject:(id)arg1 context:(id)arg2;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)predicateFormat;
- (id)subexpression;
- (id)variable;
- (id)assignmentVariable;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)allowEvaluation;
- (id)initWithAssignmentExpression:(id)arg1 expression:(id)arg2;
- (id)initWithAssignmentVariable:(id)arg1 expression:(id)arg2;
- (void)dealloc;

@end

@interface NSVariableExpression : NSExpression
{
    NSString *_variable;
}

+ (_Bool)supportsSecureCoding;
- (id)_expressionWithSubstitutionVariables:(id)arg1;
- (id)expressionValueWithObject:(id)arg1 context:(id)arg2;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)variable;
- (id)predicateFormat;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithObject:(id)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface NSWINDOWS1250EncodingDetector : NSSingleByteEncodingDetector
{
}

- (unsigned long long)recognizeString:(const char *)arg1 withDataLength:(unsigned long long)arg2 withReplacement:(const char *)arg3 withReplacementLength:(unsigned long long)arg4 inNewData:(char *)arg5 maxBufferLength:(unsigned long long)arg6 actualBufferLength:(unsigned long long *)arg7;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface NSWINDOWS1251EncodingDetector : NSSingleByteEncodingDetector
{
}

- (unsigned long long)recognizeString:(const char *)arg1 withDataLength:(unsigned long long)arg2 withReplacement:(const char *)arg3 withReplacementLength:(unsigned long long)arg4 inNewData:(char *)arg5 maxBufferLength:(unsigned long long)arg6 actualBufferLength:(unsigned long long *)arg7;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface NSWINDOWS1252EncodingDetector : NSSingleByteEncodingDetector
{
}

- (unsigned long long)recognizeString:(const char *)arg1 withDataLength:(unsigned long long)arg2 withReplacement:(const char *)arg3 withReplacementLength:(unsigned long long)arg4 inNewData:(char *)arg5 maxBufferLength:(unsigned long long)arg6 actualBufferLength:(unsigned long long *)arg7;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface NSWINDOWS1253EncodingDetector : NSSingleByteEncodingDetector
{
}

- (unsigned long long)recognizeString:(const char *)arg1 withDataLength:(unsigned long long)arg2 withReplacement:(const char *)arg3 withReplacementLength:(unsigned long long)arg4 inNewData:(char *)arg5 maxBufferLength:(unsigned long long)arg6 actualBufferLength:(unsigned long long *)arg7;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface NSWINDOWS1254EncodingDetector : NSSingleByteEncodingDetector
{
}

- (unsigned long long)recognizeString:(const char *)arg1 withDataLength:(unsigned long long)arg2 withReplacement:(const char *)arg3 withReplacementLength:(unsigned long long)arg4 inNewData:(char *)arg5 maxBufferLength:(unsigned long long)arg6 actualBufferLength:(unsigned long long *)arg7;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface NSWINDOWS1255EncodingDetector : NSSingleByteEncodingDetector
{
}

- (unsigned long long)recognizeString:(const char *)arg1 withDataLength:(unsigned long long)arg2 withReplacement:(const char *)arg3 withReplacementLength:(unsigned long long)arg4 inNewData:(char *)arg5 maxBufferLength:(unsigned long long)arg6 actualBufferLength:(unsigned long long *)arg7;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface NSWINDOWS1256EncodingDetector : NSSingleByteEncodingDetector
{
}

- (unsigned long long)recognizeString:(const char *)arg1 withDataLength:(unsigned long long)arg2 withReplacement:(const char *)arg3 withReplacementLength:(unsigned long long)arg4 inNewData:(char *)arg5 maxBufferLength:(unsigned long long)arg6 actualBufferLength:(unsigned long long *)arg7;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface NSWINDOWS1257EncodingDetector : NSSingleByteEncodingDetector
{
}

- (unsigned long long)recognizeString:(const char *)arg1 withDataLength:(unsigned long long)arg2 withReplacement:(const char *)arg3 withReplacementLength:(unsigned long long)arg4 inNewData:(char *)arg5 maxBufferLength:(unsigned long long)arg6 actualBufferLength:(unsigned long long *)arg7;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface NSWINDOWS1258EncodingDetector : NSSingleByteEncodingDetector
{
}

- (unsigned long long)recognizeString:(const char *)arg1 withDataLength:(unsigned long long)arg2 withReplacement:(const char *)arg3 withReplacementLength:(unsigned long long)arg4 inNewData:(char *)arg5 maxBufferLength:(unsigned long long)arg6 actualBufferLength:(unsigned long long *)arg7;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface NSWINDOWS874EncodingDetector : NSSingleByteEncodingDetector
{
}

- (unsigned long long)recognizeString:(const char *)arg1 withDataLength:(unsigned long long)arg2 withReplacement:(const char *)arg3 withReplacementLength:(unsigned long long)arg4 inNewData:(char *)arg5 maxBufferLength:(unsigned long long)arg6 actualBufferLength:(unsigned long long *)arg7;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface NSWINDOWS932EncodingDetector : NSEncodingDetector
{
}

- (unsigned long long)recognizeString:(const char *)arg1 withDataLength:(unsigned long long)arg2 withReplacement:(const char *)arg3 withReplacementLength:(unsigned long long)arg4 inNewData:(char *)arg5 maxBufferLength:(unsigned long long)arg6 actualBufferLength:(unsigned long long *)arg7;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface NSWINDOWS936EncodingDetector : NSEncodingDetector
{
}

- (unsigned long long)recognizeString:(const char *)arg1 withDataLength:(unsigned long long)arg2 withReplacement:(const char *)arg3 withReplacementLength:(unsigned long long)arg4 inNewData:(char *)arg5 maxBufferLength:(unsigned long long)arg6 actualBufferLength:(unsigned long long *)arg7;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface NSWINDOWS949EncodingDetector : NSEncodingDetector
{
}

- (unsigned long long)recognizeString:(const char *)arg1 withDataLength:(unsigned long long)arg2 withReplacement:(const char *)arg3 withReplacementLength:(unsigned long long)arg4 inNewData:(char *)arg5 maxBufferLength:(unsigned long long)arg6 actualBufferLength:(unsigned long long *)arg7;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface NSWINDOWS950EncodingDetector : NSEncodingDetector
{
}

- (unsigned long long)recognizeString:(const char *)arg1 withDataLength:(unsigned long long)arg2 withReplacement:(const char *)arg3 withReplacementLength:(unsigned long long)arg4 inNewData:(char *)arg5 maxBufferLength:(unsigned long long)arg6 actualBufferLength:(unsigned long long *)arg7;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface NSWeakPointerValue : NSValue
{
    void *_value;
    void *_weakValue;
}

- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)nonretainedObjectValue;
- (void)getValue:(void *)arg1;
- (const char *)objCType;
- (unsigned long long)hash;
- (_Bool)isEqualToValue:(id)arg1;
- (id)initWithPointer:(void *)arg1;

@end

@interface NSXMLParser : NSObject
{
    id _reserved0;
    id _delegate;
    id _reserved1;
    id _reserved2;
    id _reserved3;
    struct _xmlSAXHandler *_saxHandler;
    struct _xmlParserCtxt *_parserContext;
    unsigned long long _parserFlags;
    NSError *_error;
    NSMutableArray *_namespaces;
    struct __CFDictionary *_slowStringMap;
    _Bool _delegateAborted;
    _Bool _haveDetectedEncoding;
    NSData *_bomChunk;
    unsigned long long _chunkSize;
    NSSet *_allowedEntityURLs;
    NSURL *_url;
    unsigned long long _externalEntityResolvingPolicy;
}

+ (id)currentParser;
+ (void)setCurrentParser:(id)arg1;
- (void)_initializeSAX2Callbacks;
- (void)_popNamespaces;
- (void)_pushNamespaces:(id)arg1;
- (void)_setParserError:(long long)arg1;
- (void)_setExpandedParserError:(id)arg1;
- (void)finalize;
- (void)dealloc;
- (long long)columnNumber;
- (long long)lineNumber;
- (id)systemID;
- (id)publicID;
@property(readonly, copy) NSError *parserError;
- (void)abortParsing;
- (_Bool)parse;
- (_Bool)parseFromStream;
- (_Bool)finishIncrementalParse;
- (_Bool)parseData:(id)arg1;
- (_Bool)_handleParseResult:(long long)arg1;
- (_Bool)shouldContinueAfterFatalError;
- (void)setShouldContinueAfterFatalError:(_Bool)arg1;
@property _Bool shouldResolveExternalEntities;
@property _Bool shouldReportNamespacePrefixes;
@property _Bool shouldProcessNamespaces;
- (struct _xmlParserInput *)_xmlExternalEntityWithURL:(const char *)arg1 identifier:(const char *)arg2 context:(struct _xmlParserCtxt *)arg3 originalLoaderFunction:(CDUnknownFunctionPointerType)arg4;
@property unsigned long long externalEntityResolvingPolicy;
@property(copy) NSSet *allowedExternalEntityURLs;
@property id <NSXMLParserDelegate> delegate;
- (id)initWithStream:(id)arg1;
- (id)initForIncrementalParsing;
- (id)initWithData:(id)arg1;
- (id)initWithContentsOfURL:(id)arg1;

@end

@interface NSXPCCoder : NSCoder
{
    id <NSObject> _userInfo;
    id _reserved1;
}

@property(retain) id <NSObject> userInfo; // @synthesize userInfo=_userInfo;
- (void)dealloc;
- (id)init;
- (id)decodeXPCObjectOfType:(struct _xpc_type_s *)arg1 forKey:(id)arg2;
- (id)decodeXPCObjectForKey:(id)arg1;
- (void)encodeXPCObject:(id)arg1 forKey:(id)arg2;
- (_Bool)requiresSecureCoding;

@end

@interface NSXPCConnection : NSObject <NSXPCProxyCreating>
{
    void *_xconnection;
    id _incomingReplyInfo;
    NSObject<OS_dispatch_queue> *_userQueue;
    unsigned int _state;
    unsigned int _state2;
    CDUnknownBlockType _interruptionHandler;
    CDUnknownBlockType _invalidationHandler;
    id _exportInfo;
    id _replyTable;
    id _importInfo;
    id <NSObject> _otherInfo;
    id _reserved1;
    id _lock;
    NSXPCInterface *_remoteObjectInterface;
    NSString *_serviceName;
    NSXPCListenerEndpoint *_endpoint;
    id _eCache;
    id _dCache;
}

+ (void)endTransaction;
+ (void)beginTransaction;
+ (id)_currentBoost;
+ (id)currentConnection;
@property(retain) NSXPCInterface *remoteObjectInterface; // @synthesize remoteObjectInterface=_remoteObjectInterface;
- (void)_decodeProgressMessageWithData:(id)arg1;
- (void)_pauseProgress:(unsigned long long)arg1;
- (void)_cancelProgress:(unsigned long long)arg1;
- (void)_updateProgress:(unsigned long long)arg1 completed:(long long)arg2 total:(long long)arg3;
- (id)_xpcConnection;
- (void)_killConnection:(int)arg1;
- (void)_setTargetUserIdentifier:(unsigned int)arg1;
- (void)_setUUID:(id)arg1;
@property(readonly) unsigned int effectiveGroupIdentifier;
@property(readonly) unsigned int effectiveUserIdentifier;
@property(readonly) int processIdentifier;
@property(readonly) int auditSessionIdentifier;
- (void)_removeImportedProxy:(unsigned long long)arg1;
- (void)_addImportedProxy:(unsigned long long)arg1;
- (id)remoteObjectProxyWithTimeout:(double)arg1 errorHandler:(CDUnknownBlockType)arg2;
- (id)remoteObjectProxyWithUserInfo:(id)arg1 errorHandler:(CDUnknownBlockType)arg2;
- (id)remoteObjectProxyWithErrorHandler:(CDUnknownBlockType)arg1;
@property(readonly, retain) id remoteObjectProxy;
@property(retain) NSXPCInterface *exportedInterface;
@property(retain) id exportedObject;
- (void)_addClassToDecodeCache:(Class)arg1;
- (_Bool)_decodeCacheContainsClass:(Class)arg1;
- (void)_addClassToEncodeCache:(Class)arg1;
- (_Bool)_encodeCacheContainsClass:(Class)arg1;
- (id)description;
- (id)_errorDescription;
- (id)_queue;
- (void)_setQueue:(id)arg1;
- (id)replacementObjectForEncoder:(id)arg1 object:(id)arg2;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (void)setUserInfo:(id)arg1;
- (id)userInfo;
- (id)valueForEntitlement:(id)arg1;
- (CDStruct_6ad76789)auditToken;
- (void)setOptions:(unsigned long long)arg1;
- (id)_exportTable;
@property(readonly, retain) NSXPCListenerEndpoint *endpoint;
@property(readonly, copy) NSString *serviceName;
@property(copy) CDUnknownBlockType invalidationHandler;
@property(copy) CDUnknownBlockType interruptionHandler;
- (void)_sendInvocation:(id)arg1 proxyNumber:(unsigned long long)arg2 remoteInterface:(id)arg3 withErrorHandler:(CDUnknownBlockType)arg4 timeout:(double)arg5 userInfo:(id)arg6;
- (void)_sendInvocation:(id)arg1 proxyNumber:(unsigned long long)arg2 remoteInterface:(id)arg3 withErrorHandler:(CDUnknownBlockType)arg4 timeout:(double)arg5;
- (void)_sendInvocation:(id)arg1 proxyNumber:(unsigned long long)arg2 remoteInterface:(id)arg3 withErrorHandler:(CDUnknownBlockType)arg4;
- (void)_sendInvocation:(id)arg1 proxyNumber:(unsigned long long)arg2 remoteInterface:(id)arg3;
- (void)_sendDesistForProxyNumber:(unsigned long long)arg1;
- (void)addBarrierBlock:(CDUnknownBlockType)arg1;
- (void)invalidate;
- (void)stop;
- (void)start;
- (void)resume;
- (void)suspend;
- (void)finalize;
- (void)dealloc;
- (id)initWithListenerEndpoint:(id)arg1;
- (id)initWithEndpoint:(id)arg1;
- (id)initWithMachServiceName:(id)arg1;
- (id)initWithMachServiceName:(id)arg1 options:(unsigned long long)arg2;
- (id)initWithServiceName:(id)arg1;
- (id)initWithServiceName:(id)arg1 options:(unsigned long long)arg2;
- (id)_initWithPeerConnection:(id)arg1 name:(id)arg2 options:(unsigned long long)arg3;
- (id)init;
- (void)_decodeAndInvokeMessageWithData:(id)arg1;
- (void)_decodeAndInvokeReplyBlockWithData:(id)arg1 replyInfo:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface NSXPCDecoder : NSXPCCoder
{
    NSObject<OS_xpc_object> *_oolObjects;
    NSXPCInterface *_interface;
    SEL _replyToSelector;
    unsigned long long _genericIndex;
    void **_decoder;
    NSXPCConnection *_connection;
    struct *_collections[128];
    struct {
        unsigned long long offset;
        int type;
    } _rootObject;
    unsigned int _collectionPointer;
    id _allowedClassesList[128];
    long long _allowedClassesIndex;
}

+ (id)_createXPCObjectWithData:(id)arg1;
@property NSXPCConnection *_connection; // @synthesize _connection;
@property SEL replyToSelector; // @synthesize replyToSelector=_replyToSelector;
@property(retain) NSXPCInterface *interface; // @synthesize interface=_interface;
- (id)decodeXPCObjectOfType:(struct _xpc_type_s *)arg1 forKey:(id)arg2;
- (id)decodeXPCObjectForKey:(id)arg1;
- (const char *)_decodeCStringForKey:(id)arg1;
- (const char *)decodeBytesForKey:(id)arg1 returnedLength:(unsigned long long *)arg2;
- (long long)decodeIntegerForKey:(id)arg1;
- (double)decodeDoubleForKey:(id)arg1;
- (float)decodeFloatForKey:(id)arg1;
- (long long)decodeInt64ForKey:(id)arg1;
- (int)decodeInt32ForKey:(id)arg1;
- (int)decodeIntForKey:(id)arg1;
- (_Bool)decodeBoolForKey:(id)arg1;
- (id)_decodeArrayOfObjectsForKey:(id)arg1;
- (id)allowedClasses;
- (id)decodeObjectOfClasses:(id)arg1 forKey:(id)arg2;
- (id)decodeObjectOfClass:(Class)arg1 forKey:(id)arg2;
- (id)decodeObjectForKey:(id)arg1;
- (_Bool)containsValueForKey:(id)arg1;
- (id)decodeInvocation;
- (id)decodeObject;
- (void)decodeValueOfObjCType:(const char *)arg1 at:(void *)arg2;
- (void)_validateAllowedClass:(Class)arg1 forKey:(id)arg2 allowingInvocations:(_Bool)arg3;
- (_Bool)allowsKeyedCoding;
- (id)debugDescription;
- (void)finalize;
- (void)dealloc;
- (id)_initWithRootXPCObject:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface NSXPCEncoder : NSXPCCoder
{
    NSObject<OS_xpc_object> *_oolObjects;
    NSXPCConnection *_connection;
    struct __CFDictionary *_replacedObjects;
    struct __CFDictionary *_replacedByDelegateObjects;
    id <NSXPCEncoderDelegate> _delegate;
    _Bool _askForReplacement;
    void **_encoder;
    unsigned long long _genericIndex;
}

+ (id)_dataWithXPCObject:(id)arg1;
@property id <NSXPCEncoderDelegate> delegate; // @synthesize delegate=_delegate;
@property NSXPCConnection *_connection; // @synthesize _connection;
- (void)encodeConditionalObject:(id)arg1 forKey:(id)arg2;
- (void)encodeXPCObject:(id)arg1 forKey:(id)arg2;
- (void)_encodeCString:(const char *)arg1 forKey:(id)arg2;
- (void)encodeBytes:(const char *)arg1 length:(unsigned long long)arg2 forKey:(id)arg3;
- (void)encodeInteger:(long long)arg1 forKey:(id)arg2;
- (void)encodeDouble:(double)arg1 forKey:(id)arg2;
- (void)encodeFloat:(float)arg1 forKey:(id)arg2;
- (void)encodeInt64:(long long)arg1 forKey:(id)arg2;
- (void)encodeInt32:(int)arg1 forKey:(id)arg2;
- (void)encodeInt:(int)arg1 forKey:(id)arg2;
- (void)encodeBool:(_Bool)arg1 forKey:(id)arg2;
- (void)_encodeArrayOfObjects:(id)arg1 forKey:(id)arg2;
- (void)encodeObject:(id)arg1 forKey:(id)arg2;
- (void)_encodeObject:(id)arg1;
- (void)_checkObject:(id)arg1;
- (id)_replaceObject:(id)arg1;
- (void)encodeInvocation:(id)arg1;
- (void)encodeObject:(id)arg1;
- (void)encodeDataObject:(id)arg1;
- (void)encodeValueOfObjCType:(const char *)arg1 at:(const void *)arg2;
- (_Bool)allowsKeyedCoding;
- (id)_createRootXPCObject;
- (void)_insertIntoXPCObject:(id)arg1;
- (id)debugDescription;
- (void)finalize;
- (void)dealloc;
- (id)init;

@end

@interface NSXPCInterface : NSObject
{
    Protocol *_protocol;
    struct __CFDictionary *_methods2;
    id _reserved1;
}

+ (id)signatureForBlock:(id)arg1;
+ (id)interfaceWithProtocol:(id)arg1;
- (id)_interfaceForArgument:(unsigned long long)arg1 ofSelector:(SEL)arg2 reply:(_Bool)arg3;
- (id)_allowedClassesForSelector:(SEL)arg1 reply:(_Bool)arg2;
- (id)_verifiedMethodSignatureForReplyBlockOfSelector:(SEL)arg1;
- (id)_verifiedMethodSignatureForSelector:(SEL)arg1;
- (id)replyBlockSignatureForSelector:(SEL)arg1;
- (void)setReplyBlockSignature:(id)arg1 forSelector:(SEL)arg2;
- (Class)classForSelector:(SEL)arg1 argumentIndex:(unsigned long long)arg2 ofReply:(_Bool)arg3;
- (void)setClass:(Class)arg1 forSelector:(SEL)arg2 argumentIndex:(unsigned long long)arg3 ofReply:(_Bool)arg4;
- (id)interfaceForSelector:(SEL)arg1 argumentIndex:(unsigned long long)arg2 ofReply:(_Bool)arg3;
- (void)setInterface:(id)arg1 forSelector:(SEL)arg2 argumentIndex:(unsigned long long)arg3 ofReply:(_Bool)arg4;
- (id)classesForSelector:(SEL)arg1 argumentIndex:(unsigned long long)arg2 ofReply:(_Bool)arg3;
- (void)setClasses:(id)arg1 forSelector:(SEL)arg2 argumentIndex:(unsigned long long)arg3 ofReply:(_Bool)arg4;
@property Protocol *protocol;
- (id)debugDescription;
- (void)finalize;
- (void)dealloc;
- (id)init;

@end

@interface NSXPCListener : NSObject
{
    void *_xconnection;
    NSObject<OS_dispatch_queue> *_userQueue;
    void *reserved0;
    id <NSXPCListenerDelegate> _delegate;
    NSString *_serviceName;
    unsigned long long _state;
    id _reserved1;
    id _reserved2;
}

+ (id)_UUID;
+ (void)enableTransactions;
+ (id)anonymousListener;
+ (id)serviceListener;
@property id <NSXPCListenerDelegate> delegate; // @synthesize delegate=_delegate;
- (id)_xpcConnection;
- (id)_queue;
- (void)_setQueue:(id)arg1;
- (void)setOptions:(unsigned long long)arg1;
@property(readonly, retain) NSXPCListenerEndpoint *endpoint;
- (id)serviceName;
- (void)invalidate;
- (void)stop;
- (void)resume;
- (void)suspend;
- (id)description;
- (void)finalize;
- (void)dealloc;
- (id)initWithMachServiceName:(id)arg1;
- (id)initWithServiceName:(id)arg1;
- (id)_initShared;

@end

@interface NSXPCListenerEndpoint : NSObject <NSSecureCoding>
{
    void *_internal;
}

+ (_Bool)supportsSecureCoding;
- (void)_setEndpoint:(id)arg1;
- (id)_endpoint;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)finalize;
- (void)dealloc;
- (id)_initWithConnection:(id)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface _NSActivityAssertion : NSObject
{
    long long _ended;
    unsigned long long _options;
    NSString *_reason;
    unsigned int _systemSleepAssertionID;
    NSObject<OS_voucher> *_voucher;
    NSObject<OS_voucher> *_previousVoucher;
    id <NSObject> _xpcBoost;
}

+ (void)_performActivityWithOptions:(unsigned long long)arg1 reason:(id)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)_reactivate;
- (void)_end;
- (id)debugDescription;
- (void)dealloc;
- (id)_initWithActivityOptions:(unsigned long long)arg1 reason:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface _NSCallStackArray : NSArray
{
    void **_frames;
    unsigned long long _cnt;
    unsigned long long _ignore;
    char **_pcstrs;
    _Bool _wantSyms;
}

+ (id)arrayWithFrames:(void **)arg1 count:(unsigned long long)arg2 symbols:(_Bool)arg3;
- (id)descriptionWithLocale:(id)arg1 indent:(unsigned long long)arg2;
- (id)objectAtIndex:(unsigned long long)arg1;
- (unsigned long long)count;
- (void)finalize;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface _NSDOConversationInfo : NSObject
{
    id doConversation;
    unsigned long long doConversationCount;
    id doConversationRequest;
}

@end

__attribute__((visibility("hidden")))
@interface _NSDispatchData : NSData
{
}

+ (_Bool)supportsSecureCoding;
- (Class)classForCoder;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (_Bool)_allowsDirectEncoding;
- (_Bool)_isDispatchData;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)subdataWithRange:(struct _NSRange)arg1;
- (unsigned long long)hash;
- (void)getBytes:(void *)arg1 range:(struct _NSRange)arg2;
- (void)enumerateByteRangesUsingBlock:(CDUnknownBlockType)arg1;
- (void)getBytes:(void *)arg1 length:(unsigned long long)arg2;
- (void)getBytes:(void *)arg1;
- (const void *)bytes;
- (unsigned long long)length;

@end

__attribute__((visibility("hidden")))
@interface _NSFileManagerInfo : NSObject
{
    id _delegate;
    id _handler;
}

@end

__attribute__((visibility("hidden")))
@interface _NSIndexSetEnumerator : NSEnumerator
{
    NSIndexSet *_indexSet;
    unsigned long long _index;
}

- (id)nextObject;
- (void)dealloc;
- (id)initWithIndexSet:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _NSInlineData : NSData
{
    unsigned short _length;
}

- (id)initWithBytes:(const void *)arg1 length:(unsigned long long)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)_isCompact;
- (const void *)bytes;
- (unsigned long long)length;

@end

@interface _NSSharedValueTransformer : NSValueTransformer
{
}

- (_Bool)_isBooleanTransformer;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)copy;
- (_Bool)_tryRetain;
- (_Bool)_isDeallocating;
- (oneway void)release;
- (id)autorelease;
- (id)retain;

@end

__attribute__((visibility("hidden")))
@interface _NSNegateBooleanTransformer : _NSSharedValueTransformer
{
}

+ (Class)transformedValueClass;
- (_Bool)_isBooleanTransformer;
- (id)description;
- (id)transformedValue:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _NSIsNilTransformer : _NSNegateBooleanTransformer
{
}

+ (_Bool)supportsReverseTransformation;
- (id)description;
- (id)transformedValue:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _NSIsNotNilTransformer : _NSNegateBooleanTransformer
{
}

+ (_Bool)supportsReverseTransformation;
- (id)description;
- (id)transformedValue:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _NSJSONReader : NSObject
{
    id input;
    int kind;
    NSError *error;
}

+ (_Bool)validForJSON:(id)arg1 depth:(unsigned long long)arg2 allowFragments:(_Bool)arg3;
- (id)parseStream:(id)arg1 options:(unsigned long long)arg2;
- (id)parseData:(id)arg1 options:(unsigned long long)arg2;
- (unsigned long long)findEncodingFromData:(id)arg1 withBOMSkipLength:(unsigned long long *)arg2;
- (id)parseUTF8JSONData:(id)arg1 skipBytes:(unsigned long long)arg2 options:(unsigned long long)arg3;
- (void)setError:(id)arg1;
- (id)error;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface _NSJSONWriter : NSObject
{
    NSOutputStream *outputStream;
    int kind;
    char *dataBuffer;
    unsigned long long dataBufferLen;
    unsigned long long dataLen;
    _Bool freeDataBuffer;
    char *tempBuffer;
    unsigned long long tempBufferLen;
    long long totalDataWritten;
}

- (long long)appendString:(id)arg1 range:(struct _NSRange)arg2;
- (void)resizeTemporaryBuffer:(unsigned long long)arg1;
- (long long)writeRootObject:(id)arg1 toStream:(id)arg2 options:(unsigned long long)arg3 error:(id *)arg4;
- (id)dataWithRootObject:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;
- (void)finalize;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface _NSKeyedCoderOldStyleArray : NSObject
{
    void *_addr;
    unsigned long long _count;
    unsigned long long _size;
    BOOL _type;
    _Bool _decoded;
    char _padding[2];
}

- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)fillObjCType:(BOOL)arg1 count:(unsigned long long)arg2 at:(void *)arg3;
- (void)finalize;
- (void)dealloc;
- (id)initWithObjCType:(BOOL)arg1 count:(unsigned long long)arg2 at:(const void *)arg3;

@end

__attribute__((visibility("hidden")))
@interface _NSKeyedUnarchiveFromDataTransformer : _NSSharedValueTransformer
{
}

- (id)description;
- (id)reverseTransformedValue:(id)arg1;
- (id)transformedValue:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _NSKeyedUnarchiverHelper : NSObject
{
    NSArray *_white;
    unsigned int _lastRef;
    NSMutableArray *_allowedClasses;
}

- (_Bool)classNameAllowed:(Class)arg1;
- (void)setAllowedClassNames:(id)arg1;
- (id)allowedClassNames;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface _NSLocalNotificationCenter : NSDistributedNotificationCenter
{
}

@end

__attribute__((visibility("hidden")))
@interface _NSMetadataItemPrivateIvars : NSObject
{
    NSMetadataQuery *query;
}

@end

__attribute__((visibility("hidden")))
@interface _NSMetadataQueryPrivateIvars : NSObject
{
    _NSMetadataQueryResultArray *resultArray;
}

@end

__attribute__((visibility("hidden")))
@interface _NSMetadataQueryResultArray : NSArray
{
    id _query;
}

- (id)objectAtIndex:(unsigned long long)arg1;
- (unsigned long long)count;
- (void)finalize;
- (void)dealloc;
- (id)_init:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _NSMetadataQueryResultGroupArray : NSArray
{
    id _group;
}

- (id)objectAtIndex:(unsigned long long)arg1;
- (unsigned long long)count;
- (void)finalize;
- (void)dealloc;
- (id)_init:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _NSMetadataQuerySortingPseudoItem : NSObject
{
    id _attr;
}

- (id)valueForKey:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _NSNestedDictionary : NSMutableDictionary
{
    id _locals;
    id _bindings;
}

- (void)removeObjectForKey:(id)arg1;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (id)objectEnumerator;
- (id)keyEnumerator;
- (id)objectForKey:(id)arg1;
- (unsigned long long)count;
- (id)_recursiveAllValues;
- (id)_recursiveAllKeys;

@end

__attribute__((visibility("hidden")))
@interface _NSPlaceholderCharacterSet : NSCharacterSet
{
    NSCharacterSet *_original;
    NSCharacterSet *_invertedSet;
    struct {
        unsigned int _inverted:1;
        unsigned int _builtin:1;
        unsigned int _isCF:1;
        unsigned int _reserved:29;
    } _flags;
}

- (id)replacementObjectForCoder:(id)arg1;
- (id)replacementObjectForKeyedArchiver:(id)arg1;
- (void)dealloc;
- (_Bool)_tryRetain;
- (_Bool)_isDeallocating;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;
- (id)autorelease;
- (id)invertedSet;
- (_Bool)isEmpty;
- (id)bitmapRepresentation;
- (_Bool)isEqual:(id)arg1;
- (_Bool)hasMemberInPlane:(unsigned char)arg1;
- (_Bool)isSupersetOfSet:(id)arg1;
- (_Bool)longCharacterIsMember:(unsigned int)arg1;
- (_Bool)characterIsMember:(unsigned short)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (void)_expandInverted;
- (struct __CFCharacterSet *)_expandedCFCharacterSet;
- (id)initWithSet:(id)arg1 options:(unsigned long long)arg2;

@end

__attribute__((visibility("hidden")))
@interface _NSPlaceholderData : NSData
{
}

- (unsigned long long)retainCount;
- (id)retain;
- (oneway void)release;
- (id)initWithData:(id)arg1;
- (id)initWithBytes:(void *)arg1 length:(unsigned long long)arg2 copy:(_Bool)arg3 deallocator:(CDUnknownBlockType)arg4;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface _NSPredicateOperatorUtilities : NSObject
{
}

+ (long long)copyRegexFindSafePattern:(id)arg1 toBuffer:(unsigned short *)arg2;
+ (_Bool)doRegexForString:(id)arg1 pattern:(id)arg2 likeProtect:(_Bool)arg3 flags:(unsigned long long)arg4 context:(CDStruct_c69bce23 *)arg5;
+ (id)newStringFrom:(id)arg1 usingUnicodeTransforms:(unsigned long long)arg2;
+ (struct __CFLocale *)retainedLocale;

@end

__attribute__((visibility("hidden")))
@interface _NSPredicateUtilities : NSObject
{
}

+ (id)_constantValueClassesForSecureCoding;
+ (id)_operatorClassesForSecureCoding;
+ (id)_extendedExpressionClassesForSecureCoding;
+ (id)_expressionClassesForSecureCoding;
+ (id)_compoundPredicateClassesForSecureCoding;
+ (id)_predicateClassesForSecureCoding;
+ (id)_parserableCollectionDescription:(id)arg1;
+ (id)_parserableDateDescription:(id)arg1;
+ (id)_parserableStringDescription:(id)arg1;
+ (_Bool)_isReservedWordInParser:(id)arg1;
+ (id)inverseOrderKey:(id)arg1;
+ (id)distinct:(id)arg1;
+ (id)noindex:(id)arg1;
+ (id)onesComplement:(id)arg1;
+ (id)rightshift:(id)arg1 by:(id)arg2;
+ (id)leftshift:(id)arg1 by:(id)arg2;
+ (id)bitwiseXor:(id)arg1 with:(id)arg2;
+ (id)bitwiseOr:(id)arg1 with:(id)arg2;
+ (id)bitwiseAnd:(id)arg1 with:(id)arg2;
+ (id)distanceToLocation:(id)arg1 fromLocation:(id)arg2;
+ (id)now;
+ (id)objectFrom:(id)arg1 withIndex:(id)arg2;
+ (id)randomn:(id)arg1;
+ (id)random;
+ (id)castObject:(id)arg1 toType:(id)arg2;
+ (id)_convertStringToNumber:(id)arg1;
+ (id)lowercase:(id)arg1;
+ (id)uppercase:(id)arg1;
+ (id)tokenize:(id)arg1 using:(id)arg2;
+ (id)_collapseAndTokenize:(id)arg1 flags:(unsigned long long)arg2 locale:(id)arg3;
+ (id)_processAndTokenize:(id)arg1 flags:(unsigned long long)arg2 locale:(id)arg3;
+ (id)_doTokenization:(id)arg1 locale:(id)arg2;
+ (id)trunc:(id)arg1;
+ (id)abs:(id)arg1;
+ (id)ceiling:(id)arg1;
+ (id)floor:(id)arg1;
+ (id)exp:(id)arg1;
+ (id)raise:(id)arg1 toPower:(id)arg2;
+ (id)ln:(id)arg1;
+ (id)log:(id)arg1;
+ (id)sqrt:(id)arg1;
+ (id)modulus:(id)arg1 by:(id)arg2;
+ (id)divide:(id)arg1 by:(id)arg2;
+ (id)multiply:(id)arg1 by:(id)arg2;
+ (id)from:(id)arg1 subtract:(id)arg2;
+ (id)add:(id)arg1 to:(id)arg2;
+ (id)stddev:(id)arg1;
+ (id)mode:(id)arg1;
+ (id)median:(id)arg1;
+ (id)average:(id)arg1;
+ (id)max:(id)arg1;
+ (id)min:(id)arg1;
+ (id)count:(id)arg1;
+ (id)sum:(id)arg1;
+ (unsigned long long)_getCommonTypeFor:(id)arg1;
+ (unsigned long long)_getITypeFor:(const char *)arg1;
- (double)distanceFromLocation:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _NSProgressFraction : NSObject <NSSecureCoding, NSCopying>
{
    long long _completed;
    long long _total;
    _Bool _overflowed;
}

+ (_Bool)supportsSecureCoding;
+ (id)fractionWithCompleted:(long long)arg1 total:(long long)arg2;
+ (id)fractionWithDouble:(double)arg1;
@property long long total; // @synthesize total=_total;
@property long long completed; // @synthesize completed=_completed;
- (double)fractionCompleted;
- (_Bool)isFinished;
- (_Bool)isIndeterminate;
- (id)fractionBySimplifying;
- (void)simplify;
- (id)fractionByMultiplyingFraction:(id)arg1;
- (void)divideByValue:(long long)arg1;
- (void)multiplyByFraction:(id)arg1;
- (id)fractionBySubtractingFraction:(id)arg1;
- (void)subtractFraction:(id)arg1;
- (id)fractionByAddingFraction:(id)arg1;
- (void)addFraction:(id)arg1;
@property(readonly) _Bool overflowed;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCompleted:(long long)arg1 total:(long long)arg2;
- (void)_simplifyFromDouble:(double)arg1;

@end

__attribute__((visibility("hidden")))
@interface _NSProgressGroup : NSObject
{
    NSProgress *_parent;
    long long _portionOfParent;
    NSMutableSet *_children;
    _NSProgressFraction *_childrenFraction;
    unsigned long long _finishedChildrenCount;
    _Bool _closed;
}

- (id)description;
- (id)_indentedDescription:(unsigned long long)arg1;
- (void)stopNotifications;
- (void)close;
- (void)updateChildWithOldFraction:(id)arg1 newFraction:(id)arg2;
- (void)addChild:(id)arg1;
- (void)prioritize;
- (void)pause;
- (void)cancel;
- (id)parent;
- (void)dealloc;
- (id)initWithParent:(id)arg1 portion:(long long)arg2;

@end

__attribute__((visibility("hidden")))
@interface _NSProgressProxy : NSProgress
{
    id <NSProgressPublisher> _forwarder;
    _Bool _isOld;
    CDUnknownBlockType _unpublishingHandler;
}

- (_Bool)isOld;
- (void)_acknowledgeWithSuccess:(_Bool)arg1;
- (void)acknowledgeWithSuccess:(_Bool)arg1;
- (void)prioritize;
- (void)pause;
- (void)cancel;
- (void)unpublish;
- (void)publish;
- (void)setKind:(id)arg1;
- (void)setUserInfoObject:(id)arg1 forKey:(id)arg2;
- (void)setPrioritizationHandler:(CDUnknownBlockType)arg1;
- (void)setPrioritizable:(_Bool)arg1;
- (void)setPausingHandler:(CDUnknownBlockType)arg1;
- (void)setCancellationHandler:(CDUnknownBlockType)arg1;
- (void)setPausable:(_Bool)arg1;
- (void)setCancellable:(_Bool)arg1;
- (void)setLocalizedDescription:(id)arg1;
- (void)setCompletedUnitCount:(long long)arg1;
- (void)setTotalUnitCount:(long long)arg1;
- (void)resignCurrent;
- (void)becomeCurrentWithPendingUnitCount:(long long)arg1;
- (void)_invokeUnpublishingHandler;
- (void)_invokePublishingHandler:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (id)_initWithForwarder:(id)arg1 values:(id)arg2 isOld:(_Bool)arg3;

@end

__attribute__((visibility("hidden")))
@interface _NSProgressSubscriber : NSObject <NSProgressSubscriber>
{
    CDUnknownBlockType _publishingHandler;
    NSString *_subscriberID;
    NSMutableDictionary *_proxiesByPublisherID;
    NSXPCConnection *_connection;
    NSLock *_lock;
}

- (oneway void)removePublisherForID:(id)arg1;
- (oneway void)observePublisherForID:(id)arg1 value:(id)arg2 forKey:(id)arg3 inUserInfo:(_Bool)arg4;
- (oneway void)addPublisher:(id)arg1 forID:(id)arg2 withValues:(id)arg3 isOld:(_Bool)arg4;
- (void)stop;
- (void)startForFileURL:(id)arg1;
- (void)startForCategory:(id)arg1;
- (void)dealloc;
- (id)initWithPublishingHandler:(CDUnknownBlockType)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _NSProgressWithRemoteParent : NSProgress
{
    NSXPCConnection *_parentConnection;
    unsigned long long _sequence;
}

@property unsigned long long sequence; // @synthesize sequence=_sequence;
@property(retain) NSXPCConnection *parentConnection; // @synthesize parentConnection=_parentConnection;
- (void)_updateFractionCompletedFromOldFraction:(id)arg1 toNewFraction:(id)arg2;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface _NSStdIOFileHandle : NSConcreteFileHandle
{
}

- (oneway void)release;

@end

__attribute__((visibility("hidden")))
@interface _NSStringProxyForContext : NSString
{
    NSString *_string;
    NSFormatter *_formatter;
    id <NSCopying><NSSecureCoding><NSObject> _item;
}

@property(copy) id item; // @synthesize item=_item;
@property(copy) NSFormatter *formatter; // @synthesize formatter=_formatter;
@property(copy) NSString *string; // @synthesize string=_string;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)_dynamicContextEvaluation:(id)arg1 patternString:(id)arg2;
- (void)_retainFormatter:(id)arg1;
- (void)getCharacters:(unsigned short *)arg1 range:(struct _NSRange)arg2;
- (unsigned short)characterAtIndex:(unsigned long long)arg1;
- (unsigned long long)length;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface _NSThreadData : NSObject
{
    id dict;
    id name;
    id target;
    SEL selector;
    id argument;
    int seqNum;
    unsigned char qstate;
    BOOL qos;
    unsigned char cancel;
    unsigned char status;
    id performQ;
    NSMutableDictionary *performD;
    struct _opaque_pthread_attr_t {
        long long __sig;
        char __opaque[56];
    } attr;
    struct _opaque_pthread_t *tid;
    double pri;
    double defpri;
}

@end

__attribute__((visibility("hidden")))
@interface _NSThreadPerformInfo : NSObject
{
    id target;
    SEL selector;
    id argument;
    NSMutableArray *modes;
    NSCondition *waiter;
    char *signalled;
}

- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface _NSUnarchiveFromDataTransformer : _NSSharedValueTransformer
{
}

- (id)description;
- (id)reverseTransformedValue:(id)arg1;
- (id)transformedValue:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _NSUndoObject : NSObject
{
    _NSUndoObject *next;
    _NSUndoObject *previous;
    id _target;
}

- (id)target;
- (void)invoke;
- (_Bool)isEndMark;
- (_Bool)isBeginMark;
- (id)initWithTarget:(id)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface _NSUndoBeginMark : _NSUndoObject
{
    id _groupIdentifier;
    _Bool _isDiscardable;
}

- (id)description;
- (_Bool)isBeginMark;
- (void)setDiscardable:(_Bool)arg1;
- (_Bool)isDiscardable;
- (id)groupIdentifier;
- (void)setGroupIdentifier:(id)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface _NSUndoEndMark : _NSUndoObject
{
}

- (id)description;
- (_Bool)isEndMark;

@end

__attribute__((visibility("hidden")))
@interface _NSUndoInvocation : _NSUndoObject
{
    NSInvocation *_invocation;
}

- (id)description;
- (void)dealloc;
- (void)invoke;
- (id)initWithTarget:(id)arg1 invocation:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface _NSUndoLightInvocation : _NSUndoObject
{
    SEL _selector;
    id _arg;
}

- (id)description;
- (id)_argument;
- (void)dealloc;
- (void)invoke;
- (id)initWithTarget:(id)arg1 selector:(SEL)arg2 object:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface _NSUndoStack : NSObject
{
    unsigned long long _max;
    unsigned long long _count;
    unsigned long long _nestingLevel;
    _NSUndoObject *_head;
}

- (id)description;
- (void)removeObject:(id)arg1;
- (void)removeAllObjectsWithTarget:(id)arg1;
- (void)removeAllObjects;
- (unsigned long long)nestingLevel;
- (_Bool)popAndInvoke;
- (void)setDiscardable:(_Bool)arg1;
- (_Bool)isDiscardable;
- (void)markEnd;
- (void)markBegin;
- (id)topUndoObject;
- (id)groupIdentifier;
- (void)setGroupIdentifier:(id)arg1;
- (id)_beginMark;
- (id)popUndoObject;
- (void)push:(id)arg1;
- (void)setMax:(unsigned long long)arg1;
- (unsigned long long)count;
- (unsigned long long)max;
- (void)dealloc;
- (id)init;
- (void)_removeBottom;

@end

__attribute__((visibility("hidden")))
@interface _NSXPCBoost : NSObject
{
    NSObject<OS_xpc_object> *_event;
}

- (void)dealloc;
- (id)_initWithEvent:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _NSXPCConnectionClassCache : NSObject
{
    int _lock;
    NSMutableSet *_cache;
}

- (void)clear;
- (void)addClass:(Class)arg1;
- (_Bool)containsClass:(Class)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface _NSXPCConnectionExportInfo : NSObject
{
    id _exportedObject;
    NSXPCInterface *_exportedInterface;
    long long _exportCount;
}

@property long long exportCount; // @synthesize exportCount=_exportCount;
@property(retain) NSXPCInterface *exportedInterface; // @synthesize exportedInterface=_exportedInterface;
@property(retain) id exportedObject; // @synthesize exportedObject=_exportedObject;
- (id)description;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface _NSXPCConnectionExportedObjectTable : NSObject
{
    NSLock *_lock;
    struct __CFDictionary *_proxyNumberToObject;
    struct __CFDictionary *_objectToProxyNumber;
    unsigned long long _next;
    _Bool _valid;
}

- (id)description;
- (void)invalidate;
- (void)releaseExportedObject:(unsigned long long)arg1;
- (unsigned long long)proxyNumberForExportedObject:(id)arg1 interface:(id)arg2;
- (id)interfaceForProxyNumber:(unsigned long long)arg1;
- (void)setInterface:(id)arg1 forProxyNumber:(unsigned long long)arg2;
- (id)exportedObjectForProxyNumber:(unsigned long long)arg1;
- (void)setExportedObject:(id)arg1 forProxyNumber:(unsigned long long)arg2;
- (void)finalize;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface _NSXPCConnectionImportInfo : NSObject
{
    NSLock *_lock;
    struct __CFDictionary *_map;
}

- (_Bool)decrement:(unsigned long long)arg1;
- (void)increment:(unsigned long long)arg1;
- (void)finalize;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface _NSXPCConnectionIncomingReplyBlockInfo : NSObject
{
    CDUnknownBlockType _cleanupBlock;
    NSProgress *_progress;
}

@property(retain) NSProgress *progress; // @synthesize progress=_progress;
@property(copy) CDUnknownBlockType cleanupBlock; // @synthesize cleanupBlock=_cleanupBlock;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface _NSXPCConnectionIncomingReplyBlockTable : NSObject
{
    struct __CFDictionary *_replyTable;
    int _replyTableLock;
    unsigned long long _sequence;
}

- (id)progressForSequence:(unsigned long long)arg1;
- (unsigned long long)sequenceForIncomingReplyBlockWithProgress:(id)arg1 cleanupBlock:(CDUnknownBlockType)arg2;
- (_Bool)removeIncomingReplyBlockForSequence:(unsigned long long)arg1;
- (void)cleanupIncomingReplyBlocks;
- (void)finalize;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface _NSXPCConnectionReplyInfo : NSObject
{
    NSBlock *_replyBlock;
    CDUnknownBlockType _errorBlock;
    CDUnknownBlockType _cleanupBlock;
    SEL _selector;
    NSXPCInterface *_interface;
    NSDictionary *_userInfo;
    unsigned long long _proxyNumber;
}

@property unsigned long long proxyNumber; // @synthesize proxyNumber=_proxyNumber;
@property(retain) NSDictionary *userInfo; // @synthesize userInfo=_userInfo;
@property(retain) NSXPCInterface *interface; // @synthesize interface=_interface;
@property(copy) CDUnknownBlockType cleanupBlock; // @synthesize cleanupBlock=_cleanupBlock;
@property(copy) CDUnknownBlockType errorBlock; // @synthesize errorBlock=_errorBlock;
@property(copy) NSBlock *replyBlock; // @synthesize replyBlock=_replyBlock;
@property SEL selector; // @synthesize selector=_selector;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface _NSXPCConnectionReplyTable : NSObject
{
    NSObject<OS_xpc_object> *_replyTable;
    struct __CFDictionary *_progressTable;
    int _replyTableLock;
    unsigned long long _sequence;
}

- (id)progressForSequence:(unsigned long long)arg1;
- (void)removeProgressSequence:(unsigned long long)arg1;
- (unsigned long long)sequenceForProgress:(id)arg1;
- (id)copyReplyDictionaryForSequence:(unsigned long long)arg1;
- (unsigned long long)sequenceForEvent:(id)arg1;
- (void)finalize;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface _NSXPCDistantObject : NSObject <NSXPCProxyCreating, NSSecureCoding>
{
    NSXPCConnection *_connection;
    NSXPCInterface *_remoteInterface;
    struct __CFDictionary *_knownSelectors;
    int _selectorLock;
    unsigned long long _proxyNumber;
    _Bool _exported;
}

+ (_Bool)supportsSecureCoding;
@property _Bool _exported; // @synthesize _exported;
@property(retain) NSXPCInterface *_remoteInterface; // @synthesize _remoteInterface;
@property(retain) NSXPCConnection *_connection; // @synthesize _connection;
@property unsigned long long _proxyNumber; // @synthesize _proxyNumber;
- (id)remoteObjectProxyWithTimeout:(double)arg1 errorHandler:(CDUnknownBlockType)arg2;
- (id)remoteObjectProxyWithUserInfo:(id)arg1 errorHandler:(CDUnknownBlockType)arg2;
- (id)remoteObjectProxyWithErrorHandler:(CDUnknownBlockType)arg1;
- (id)remoteObjectProxy;
- (void)forwardInvocation:(id)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)finalize;
- (void)dealloc;
- (id)_initWithConnection:(id)arg1 exportedObject:(id)arg2 interface:(id)arg3;
- (id)_initWithConnection:(id)arg1 proxyNumber:(unsigned long long)arg2 interface:(id)arg3;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface _NSXPCDistantObjectWithError : _NSXPCDistantObject
{
    CDUnknownBlockType _errorBlock;
}

@property(copy) CDUnknownBlockType errorBlock; // @synthesize errorBlock=_errorBlock;
- (void)forwardInvocation:(id)arg1;
- (void)dealloc;
- (id)_initWithConnection:(id)arg1 proxyNumber:(unsigned long long)arg2 interface:(id)arg3 error:(CDUnknownBlockType)arg4;

@end

__attribute__((visibility("hidden")))
@interface _NSXPCDistantObjectSynchronousWithError : _NSXPCDistantObjectWithError
{
    double _timeout;
}

@property double timeout; // @synthesize timeout=_timeout;
- (void)forwardInvocation:(id)arg1;
- (id)_initWithConnection:(id)arg1 proxyNumber:(unsigned long long)arg2 interface:(id)arg3 error:(CDUnknownBlockType)arg4 timeout:(double)arg5;

@end

__attribute__((visibility("hidden")))
@interface _NSXPCDistantObjectWithUserInfoAndError : _NSXPCDistantObjectWithError
{
    NSDictionary *_userInfo;
}

- (void)forwardInvocation:(id)arg1;
- (void)dealloc;
- (id)_initWithConnection:(id)arg1 proxyNumber:(unsigned long long)arg2 interface:(id)arg3 userInfo:(id)arg4 error:(CDUnknownBlockType)arg5;

@end

__attribute__((visibility("hidden")))
@interface _NSXPCInterfaceMethodInfo : NSObject
{
    char *_replySignature;
    int _replyPosition;
    NSMutableArray *_replyArguments;
    NSMutableArray *_arguments;
}

@property int replyPosition; // @synthesize replyPosition=_replyPosition;
@property(retain) NSMutableArray *arguments; // @synthesize arguments=_arguments;
@property(retain) NSMutableArray *replyArguments; // @synthesize replyArguments=_replyArguments;
- (const char *)replySignature;
- (void)setReplySignature:(id)arg1;
- (void)finalize;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface _NSZeroData : NSData
{
}

+ (id)data;
- (id)initWithBytes:(void *)arg1 length:(unsigned long long)arg2 copy:(_Bool)arg3 deallocator:(CDUnknownBlockType)arg4;
- (unsigned long long)retainCount;
- (oneway void)release;
- (id)retain;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)_isCompact;
- (const void *)bytes;
- (unsigned long long)length;

@end

__attribute__((visibility("hidden")))
@interface __NSBundleTables : NSObject
{
    NSLock *_lock;
    NSMutableSet *_staticFrameworks;
    NSMutableSet *_loadedBundles;
    NSMutableSet *_loadedFrameworks;
    NSMutableDictionary *_resolvedPathToBundles;
    struct __CFDictionary *_bundleForClassMap;
}

+ (id)bundleTables;
- (id)loadedBundles;
- (id)allBundles;
- (id)allFrameworks;
- (void)setBundle:(id)arg1 forClass:(Class)arg2;
- (id)bundleForClass:(Class)arg1;
- (void)addStaticFrameworkBundles:(id)arg1;
- (void)addBundle:(id)arg1 type:(unsigned long long)arg2;
- (id)addBundle:(id)arg1 forPath:(id)arg2;
- (id)bundleForPath:(id)arg1;
- (void)removeBundle:(id)arg1 forPath:(id)arg2 type:(unsigned long long)arg3;
- (void)finalize;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface __NSConcreteURLComponents : NSURLComponents <NSCopying>
{
    int _lock;
    NSString *_urlString;
    struct _URIParseInfo _parseInfo;
    unsigned int _schemeComponentValid:1;
    unsigned int _userComponentValid:1;
    unsigned int _passwordComponentValid:1;
    unsigned int _hostComponentValid:1;
    unsigned int _portComponentValid:1;
    unsigned int _pathComponentValid:1;
    unsigned int _queryComponentValid:1;
    unsigned int _fragmentComponentValid:1;
    NSString *_schemeComponent;
    NSString *_userComponent;
    NSString *_passwordComponent;
    NSString *_hostComponent;
    NSNumber *_portComponent;
    NSString *_pathComponent;
    NSString *_queryComponent;
    NSString *_fragmentComponent;
}

+ (_Bool)automaticallyNotifiesObserversForKey:(id)arg1;
- (void)setQueryItems:(id)arg1;
- (id)queryItems;
- (void)setPercentEncodedFragment:(id)arg1;
- (id)percentEncodedFragment;
- (void)setPercentEncodedQuery:(id)arg1;
- (id)percentEncodedQuery;
- (void)setPercentEncodedPath:(id)arg1;
- (id)percentEncodedPath;
- (void)setPercentEncodedHost:(id)arg1;
- (id)percentEncodedHost;
- (void)setPercentEncodedPassword:(id)arg1;
- (id)percentEncodedPassword;
- (void)setPercentEncodedUser:(id)arg1;
- (id)percentEncodedUser;
- (void)setFragment:(id)arg1;
- (id)fragment;
- (void)setQuery:(id)arg1;
- (id)query;
- (void)setPath:(id)arg1;
- (id)path;
- (void)setPort:(id)arg1;
- (id)port;
- (void)setHost:(id)arg1;
- (id)host;
- (void)setPassword:(id)arg1;
- (id)password;
- (void)setUser:(id)arg1;
- (id)user;
- (void)setScheme:(id)arg1;
- (id)scheme;
- (id)string;
- (id)URLRelativeToURL:(id)arg1;
- (id)URL;
- (id)initWithString:(id)arg1;
- (id)initWithURL:(id)arg1 resolvingAgainstBaseURL:(_Bool)arg2;
- (id)init;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)finalize;
- (void)dealloc;
- (void)freeIvars;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface __NSConcreteUUID : NSUUID
{
    unsigned char _uuidBytes[16];
}

+ (_Bool)automaticallyNotifiesObserversForKey:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (Class)classForCoder;
- (id)description;
- (id)UUIDString;
- (CDStruct_bd2f613f)_cfUUIDBytes;
- (void)getUUIDBytes:(unsigned char [16])arg1;
- (_Bool)isEqual:(id)arg1;
- (id)initWithUUIDBytes:(unsigned char [16])arg1;
- (id)initWithUUIDString:(id)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface __NSLocalizedString : NSMutableString
{
    NSMutableString *original;
    NSDictionary *config;
}

- (unsigned long long)replaceOccurrencesOfString:(id)arg1 withString:(id)arg2 options:(unsigned long long)arg3 range:(struct _NSRange)arg4;
- (void)appendCharacters:(const unsigned short *)arg1 length:(unsigned long long)arg2;
- (void)setString:(id)arg1;
- (void)appendFormat:(id)arg1;
- (void)deleteCharactersInRange:(struct _NSRange)arg1;
- (void)appendString:(id)arg1;
- (void)insertString:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)replaceCharactersInRange:(struct _NSRange)arg1 withString:(id)arg2;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (const char *)_fastCStringContents:(_Bool)arg1;
- (const unsigned short *)_fastCharacterContents;
- (_Bool)isEqualToString:(id)arg1;
- (long long)compare:(id)arg1 options:(unsigned long long)arg2 range:(struct _NSRange)arg3 locale:(id)arg4;
- (id)substringWithRange:(struct _NSRange)arg1;
- (id)substringToIndex:(unsigned long long)arg1;
- (id)substringFromIndex:(unsigned long long)arg1;
- (void)getCharacters:(unsigned short *)arg1 range:(struct _NSRange)arg2;
- (void)dealloc;
- (unsigned short)characterAtIndex:(unsigned long long)arg1;
- (unsigned long long)length;
- (id)baseString;
- (id)formatConfiguration;
- (id)initWithString:(id)arg1 withFormatConfiguration:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface __NSObserver : NSObject
{
    NSNotificationCenter *nc;
    NSOperationQueue *queue;
    NSString *name;
    id object;
    CDUnknownBlockType block;
}

+ (void)forgetObserver:(id)arg1;
+ (_Bool)isAnObserver:(id)arg1;
+ (id)observerWithCenter:(id)arg1 queue:(id)arg2 name:(id)arg3 object:(id)arg4 block:(CDUnknownBlockType)arg5;
- (void)_doit:(id)arg1;
- (id)object;
- (id)name;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface __NSOperationInternal : NSObject
{
    unsigned char __pad1[8];
    NSOperation *__outerOp;
    NSOperation *__prevOp;
    NSOperation *__nextOp;
    NSOperation *__nextPriOp;
    NSOperationQueue *__queue;
    id __dependencies;
    id __down_dependencies;
    long long __unfinished_deps;
    CDUnknownBlockType __completion;
    void *__obsInfo;
    void *__implicitObsInfo;
    long long __seqno;
    double __thread_prio;
    id __children;
    int __RC;
    int __state;
    BOOL __prio;
    unsigned char __cached_isReady;
    unsigned char __isCancelled;
    unsigned char __isBarrier;
    int __qoses;
    struct _opaque_pthread_mutex_t __wait_mutex;
    struct _opaque_pthread_cond_t {
        long long __sig;
        char __opaque[40];
    } __wait_cond;
    struct _opaque_pthread_t *__pthread;
    char *__nameBuffer;
    id __activity;
    struct pthread_override_s *__ov;
    unsigned char __pad3[0];
}

+ (void)_observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 changeKind:(unsigned long long)arg3 oldValue:(id)arg4 newValue:(id)arg5 indexes:(id)arg6 context:(void *)arg7;
- (id)_activity;
- (id)__;
- (void)_start:(id)arg1;
- (id)_dependencies;
- (void)_removeDependency:(id)arg1 outer:(id)arg2;
- (void)_addDependency:(id)arg1 outer:(id)arg2;
- (void)_waitUntilFinishedOrTimeout:(double)arg1 outer:(id)arg2;
- (void)_waitUntilFinished:(id)arg1;
- (void)_setName:(id)arg1 outer:(id)arg2;
- (id)_name;
- (void)_setCompletionBlock:(CDUnknownBlockType)arg1 outer:(id)arg2;
- (CDUnknownBlockType)_completionBlock;
- (void)_setThreadPriority:(double)arg1 outer:(id)arg2;
- (double)_threadPriority;
- (void)_setQueuePriority:(long long)arg1 outer:(id)arg2;
- (long long)_queuePriority;
- (_Bool)_isReady;
- (_Bool)_isFinished;
- (_Bool)_isExecuting;
- (void)_cancel:(id)arg1;
- (_Bool)_isCancelled;
- (void)finalize;
- (void)dealloc;
- (void)_invalidate;
- (id)init:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface __NSOperationQueueInternal : NSObject
{
    struct _opaque_pthread_mutex_t __queueLock;
    NSOperation *__firstOperation;
    NSOperation *__lastOperation;
    NSOperation *__pendingFirstOperation;
    NSOperation *__pendingLastOperation;
    NSOperation *__firstPriOperation[5];
    NSOperation *__lastPriOperation[5];
    NSObject<OS_dispatch_queue> *__pending_barrier;
    long long __maxNumOps;
    int __actualMaxNumOps;
    int __numExecOps;
    unsigned int __unused2;
    unsigned char __mainQ;
    unsigned char __suspended;
    unsigned char __overcommit;
    BOOL __propertyQOS;
    NSObject<OS_dispatch_queue> *__dispatch_queue;
    char __nameBuffer[160];
}

- (void)finalize;
- (void)dealloc;
- (id)init;

@end

