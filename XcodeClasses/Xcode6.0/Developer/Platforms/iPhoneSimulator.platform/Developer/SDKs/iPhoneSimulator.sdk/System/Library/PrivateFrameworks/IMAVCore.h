//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/IMAVCore.framework/IMAVCore
// UUID: 752C88A3-AC8F-304F-B01C-32D8D6D86C62
//
//                           Arch: x86_64
//                Current version: 800.0.0
//          Compatibility version: 1.0.0
//                 Source version: 580.0.0.0.0
//            Minimum iOS version: 8.0.0
//                    SDK version: 8.0.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol AVConferenceDelegate
- (void)conference:(AVConference *)arg1 withCallID:(long long)arg2 networkHint:(_Bool)arg3;
- (void)conference:(AVConference *)arg1 videoQualityNotificationForCallID:(long long)arg2 isDegraded:(_Bool)arg3 isRemote:(_Bool)arg4;
- (void)conference:(AVConference *)arg1 cancelRelayRequest:(long long)arg2 requestDict:(NSDictionary *)arg3;
- (void)conference:(AVConference *)arg1 sendRelayUpdate:(long long)arg2 updateDict:(NSDictionary *)arg3;
- (void)conference:(AVConference *)arg1 inititiateRelayRequest:(long long)arg2 requestDict:(NSDictionary *)arg3;
- (void)serverDiedForConference:(AVConference *)arg1;
- (void)conference:(AVConference *)arg1 remoteVideoPaused:(_Bool)arg2 callID:(long long)arg3;
- (void)conference:(AVConference *)arg1 remoteAudioPaused:(_Bool)arg2 callID:(long long)arg3;
- (void)conference:(AVConference *)arg1 remoteVideoAttributesChanged:(VideoAttributes *)arg2 callID:(long long)arg3;
- (void)conference:(AVConference *)arg1 remoteScreenAttributesChanged:(VideoAttributes *)arg2 callID:(long long)arg3;
- (void)conference:(AVConference *)arg1 receivedFirstRemoteFrameForCallID:(long long)arg2;
- (void)conference:(AVConference *)arg1 updateOutputMeterLevel:(float)arg2;
- (void)conference:(AVConference *)arg1 updateInputMeterLevel:(float)arg2;
- (void)conference:(AVConference *)arg1 updateOutputFrequencyLevel:(NSData *)arg2;
- (void)conference:(AVConference *)arg1 updateInputFrequencyLevel:(NSData *)arg2;
- (void)conference:(AVConference *)arg1 didStopWithCallID:(long long)arg2 error:(NSError *)arg3;
- (void)conference:(AVConference *)arg1 didStartSession:(_Bool)arg2 withUserInfo:(NSDictionary *)arg3;
- (void)conference:(AVConference *)arg1 withCallID:(long long)arg2 remoteMediaStalled:(_Bool)arg3;

@optional
- (void)conference:(AVConference *)arg1 closeConnectionForCallID:(long long)arg2;
- (void)conference:(AVConference *)arg1 reinitializeCallForCallID:(unsigned int)arg2;
- (void)conference:(AVConference *)arg1 localAudioEnabled:(_Bool)arg2 forCallID:(unsigned int)arg3 error:(NSError *)arg4;
- (void)conference:(AVConference *)arg1 remoteAudioEnabled:(_Bool)arg2 forCallID:(unsigned int)arg3;
- (void)conference:(AVConference *)arg1 didChangeLocalVariablesForCallID:(long long)arg2;
- (void)conference:(AVConference *)arg1 didReceiveData:(NSData *)arg2 forCallID:(long long)arg3;
- (void)conference:(AVConference *)arg1 didReceiveARPLData:(NSData *)arg2 withCallID:(long long)arg3;
- (void)conference:(AVConference *)arg1 didStopWithCallID:(long long)arg2 error:(NSError *)arg3 callMetadata:(NSDictionary *)arg4;
- (void)conference:(AVConference *)arg1 didStartSession:(_Bool)arg2 withCallID:(long long)arg3 error:(NSError *)arg4;
- (void)conference:(AVConference *)arg1 localIPChange:(NSData *)arg2 withCallID:(long long)arg3;
@end

@protocol IMAVDaemonListenerProtocol <NSObject>
- (void)setupComplete:(_Bool)arg1 info:(NSDictionary *)arg2;
@end

@protocol IMAVDaemonProtocol <NSObject>
- (void)stopPreview;
- (void)startPreview;
@end

@protocol IMDaemonListenerProtocol <NSObject>
- (void)lastFailedMessageIDChanged:(long long)arg1;
- (void)unreadCountChanged:(long long)arg1;
- (void)databaseNoLongerFull;
- (void)databaseFull;
- (void)databaseUpdated:(NSString *)arg1;
- (void)databaseUpdated;
- (void)account:(NSString *)arg1 relay:(NSString *)arg2 handleCancel:(NSDictionary *)arg3 fromPerson:(NSDictionary *)arg4;
- (void)account:(NSString *)arg1 relay:(NSString *)arg2 handleUpdate:(NSDictionary *)arg3 fromPerson:(NSDictionary *)arg4;
- (void)account:(NSString *)arg1 relay:(NSString *)arg2 handleInitate:(NSDictionary *)arg3 fromPerson:(NSDictionary *)arg4;
- (void)account:(NSString *)arg1 postedError:(NSError *)arg2;
- (void)account:(NSString *)arg1 statusChanged:(NSDictionary *)arg2;
- (void)persistentProperty:(NSString *)arg1 changedTo:(id)arg2 from:(id)arg3;
- (void)property:(NSString *)arg1 changedTo:(id)arg2 from:(id)arg3;
- (void)showForgotPasswordNotificationForAccount:(NSString *)arg1;
- (void)showInvalidCertNotificationForAccount:(NSString *)arg1;
- (void)account:(NSString *)arg1 avAction:(unsigned int)arg2 withArguments:(NSDictionary *)arg3 toAVChat:(NSString *)arg4 isVideo:(_Bool)arg5;
- (void)account:(NSString *)arg1 conference:(NSString *)arg2 invitationSentSuccessfully:(_Bool)arg3;
- (void)account:(NSString *)arg1 conference:(NSString *)arg2 peerID:(NSString *)arg3 propertiesUpdated:(NSDictionary *)arg4;
- (void)account:(NSString *)arg1 conference:(NSString *)arg2 peerIDChangedFromID:(NSString *)arg3 toID:(NSString *)arg4;
- (void)account:(NSString *)arg1 conference:(NSString *)arg2 changedToNewConferenceID:(NSString *)arg3;
- (void)account:(NSString *)arg1 conference:(NSString *)arg2 receivedAVMessage:(unsigned int)arg3 from:(NSDictionary *)arg4 sessionID:(unsigned int)arg5 userInfo:(NSDictionary *)arg6;
- (void)account:(NSString *)arg1 conference:(NSString *)arg2 receivedUpdateFrom:(NSDictionary *)arg3 data:(NSData *)arg4;
- (void)account:(NSString *)arg1 conference:(NSString *)arg2 receivedCounterProposalFrom:(NSDictionary *)arg3 properties:(NSDictionary *)arg4;
- (void)account:(NSString *)arg1 conference:(NSString *)arg2 receivedCancelInvitationFrom:(NSDictionary *)arg3 properties:(NSDictionary *)arg4;
- (void)account:(NSString *)arg1 conference:(NSString *)arg2 receivedResponseToInvitationFrom:(NSDictionary *)arg3 properties:(NSDictionary *)arg4;
- (void)account:(NSString *)arg1 conference:(NSString *)arg2 receivedInvitationFrom:(NSDictionary *)arg3 properties:(NSDictionary *)arg4;
- (void)fileTransfer:(NSString *)arg1 updatedWithCurrentBytes:(unsigned long long)arg2 totalBytes:(unsigned long long)arg3 averageTransferRate:(unsigned long long)arg4;
- (void)fileTransfer:(NSString *)arg1 updatedWithProperties:(NSDictionary *)arg2;
- (void)fileTransfer:(NSString *)arg1 createdWithProperties:(NSDictionary *)arg2;
- (void)standaloneFileTransferRegistered:(NSString *)arg1;
- (void)frequentRepliesQuery:(NSString *)arg1 chatID:(NSString *)arg2 services:(NSArray *)arg3 finishedWithResult:(NSArray *)arg4 limit:(unsigned long long)arg5;
- (void)historicalMessageGUIDsDeleted:(NSArray *)arg1 chatGUIDs:(NSArray *)arg2 queryID:(NSString *)arg3;
- (void)attachmentQuery:(NSString *)arg1 chatID:(NSString *)arg2 services:(NSArray *)arg3 finishedWithResult:(NSArray *)arg4;
- (void)historyQuery:(NSString *)arg1 chatID:(NSString *)arg2 services:(NSArray *)arg3 finishedWithResult:(NSArray *)arg4 limit:(unsigned long long)arg5;
- (void)messageQuery:(NSString *)arg1 finishedWithResult:(IMMessageItem *)arg2 chatGUIDs:(NSArray *)arg3;
- (void)account:(NSString *)arg1 chat:(NSString *)arg2 style:(unsigned char)arg3 chatProperties:(NSDictionary *)arg4 member:(NSDictionary *)arg5 statusChanged:(int)arg6;
- (void)account:(NSString *)arg1 chat:(NSString *)arg2 style:(unsigned char)arg3 chatProperties:(NSDictionary *)arg4 statusChanged:(int)arg5 handleInfo:(NSArray *)arg6;
- (void)account:(NSString *)arg1 chat:(NSString *)arg2 style:(unsigned char)arg3 chatProperties:(NSDictionary *)arg4 error:(NSError *)arg5;
- (void)account:(NSString *)arg1 chat:(NSString *)arg2 style:(unsigned char)arg3 chatProperties:(NSDictionary *)arg4 messagesUpdated:(NSArray *)arg5;
- (void)account:(NSString *)arg1 chat:(NSString *)arg2 style:(unsigned char)arg3 chatProperties:(NSDictionary *)arg4 notifySentMessage:(IMMessageItem *)arg5 sendTime:(NSNumber *)arg6;
- (void)account:(NSString *)arg1 chat:(NSString *)arg2 style:(unsigned char)arg3 chatProperties:(NSDictionary *)arg4 messageUpdated:(IMItem *)arg5;
- (void)account:(NSString *)arg1 chat:(NSString *)arg2 style:(unsigned char)arg3 chatProperties:(NSDictionary *)arg4 messageReceived:(IMItem *)arg5;
- (void)account:(NSString *)arg1 chat:(NSString *)arg2 style:(unsigned char)arg3 chatProperties:(NSDictionary *)arg4 messageSent:(IMMessageItem *)arg5;
- (void)account:(NSString *)arg1 chat:(NSString *)arg2 style:(unsigned char)arg3 chatProperties:(NSDictionary *)arg4 updateProperties:(NSDictionary *)arg5;
- (void)account:(NSString *)arg1 chat:(NSString *)arg2 style:(unsigned char)arg3 chatProperties:(NSDictionary *)arg4 invitationReceived:(IMMessageItem *)arg5;
- (void)leftChat:(NSString *)arg1;
- (void)chat:(NSString *)arg1 displayNameUpdated:(NSString *)arg2;
- (void)chat:(NSString *)arg1 propertiesUpdated:(NSDictionary *)arg2;
- (void)chat:(NSString *)arg1 updated:(NSDictionary *)arg2;
- (void)account:(NSString *)arg1 buddyInfo:(NSDictionary *)arg2 commandDelivered:(NSNumber *)arg3 properties:(NSDictionary *)arg4;
- (void)account:(NSString *)arg1 buddyInfo:(NSDictionary *)arg2 commandReceived:(NSNumber *)arg3 properties:(NSDictionary *)arg4;
- (void)account:(NSString *)arg1 handleSubscriptionRequestFrom:(NSDictionary *)arg2 withMessage:(NSString *)arg3;
- (void)account:(NSString *)arg1 buddyProperties:(NSDictionary *)arg2 buddyPictures:(NSDictionary *)arg3;
- (void)account:(NSString *)arg1 groupsChanged:(NSArray *)arg2 error:(NSError *)arg3;
- (void)account:(NSString *)arg1 buddyPictureChanged:(NSString *)arg2 imageData:(NSData *)arg3 imageHash:(NSString *)arg4;
- (void)account:(NSString *)arg1 blockIdleStatusChanged:(_Bool)arg2;
- (void)account:(NSString *)arg1 blockingModeChanged:(unsigned int)arg2;
- (void)account:(NSString *)arg1 allowListChanged:(NSArray *)arg2;
- (void)account:(NSString *)arg1 blockListChanged:(NSArray *)arg2;
- (void)account:(NSString *)arg1 buddyPropertiesChanged:(NSArray *)arg2;
- (void)accountRemoved:(NSString *)arg1;
- (void)accountAdded:(NSString *)arg1 defaults:(NSDictionary *)arg2 service:(NSString *)arg3;
- (void)account:(NSString *)arg1 capabilitiesChanged:(unsigned long long)arg2;
- (void)account:(NSString *)arg1 defaultsChanged:(NSDictionary *)arg2;
- (void)account:(NSString *)arg1 loginStatusChanged:(unsigned int)arg2 message:(NSString *)arg3 reason:(int)arg4 properties:(NSDictionary *)arg5;
- (void)account:(NSString *)arg1 defaults:(NSDictionary *)arg2 blockList:(NSArray *)arg3 allowList:(NSArray *)arg4 blockingMode:(unsigned int)arg5 blockIdleStatus:(_Bool)arg6 status:(NSDictionary *)arg7 capabilities:(unsigned long long)arg8 serviceLoginStatus:(unsigned int)arg9 loginStatusMessage:(NSString *)arg10;
- (void)activeAccountsChanged:(NSArray *)arg1 forService:(NSString *)arg2;
- (void)defaultsChanged:(NSDictionary *)arg1 forService:(NSString *)arg2;
- (void)vcCapabilitiesChanged:(unsigned long long)arg1;
- (void)pendingACRequestComplete;
- (void)pendingVCRequestComplete;
- (void)setupComplete;
- (void)setupComplete:(_Bool)arg1 info:(NSDictionary *)arg2;
@end

@protocol IMSystemMonitorListener

@optional
- (void)systemDidEnterDataProtectionLock;
- (void)systemDidLeaveDataProtectionLock;
- (void)systemDidLeaveFirstDataProtectionLock;
- (void)systemScreenDidPowerDown;
- (void)systemScreenDidPowerUp;
- (void)systemDidUnlock;
- (void)systemDidLock;
- (void)systemDidLogout;
- (void)systemDidFastUserSwitchIn;
- (void)systemDidFastUserSwitchOut;
- (void)systemRestoreStateDidChange;
- (void)systemDidFinishMigration;
- (void)systemDidStopBackup;
- (void)systemDidStartBackup;
- (void)notificationCenterDidDisappear;
- (void)notificationCenterWillAppear;
- (void)systemApplicationDidResumeForEventsOnly;
- (void)systemApplicationDidSuspendForEventsOnly;
- (void)systemApplicationDidResume;
- (void)systemApplicationDidSuspend;
- (void)systemApplicationWillResignActive;
- (void)systemApplicationDidBecomeActive;
- (void)systemApplicationWillEnterForeground;
- (void)systemApplicationDidEnterBackground;
- (void)systemWillShutdown;
- (void)systemDidLeaveMemoryPressure;
- (void)systemDidEnterMemoryPressure;
- (void)systemDidWake;
- (void)systemWillSleep;
- (void)screenUnlocked;
- (void)screenLocked;
- (void)screenSaverDidStop;
- (void)screenSaverDidStart;
- (void)systemDidBecomeUnidle;
- (void)systemDidBecomeIdle;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@interface IMAVCallManager : NSObject
{
    IMPowerAssertion *_powerAssertion;
    NSMutableArray *_chatArray;
    NSMutableArray *_acChatProxyArray;
    NSMutableArray *_avChatProxyArray;
    NSMutableDictionary *_guidToACChatProxyMap;
    NSMutableDictionary *_guidToAVChatProxyMap;
    NSDate *_lastCallStateChange;
    int _avToken;
    int _acToken;
    unsigned int _avCallState;
    unsigned int _acCallState;
    unsigned int _telephonyCallState;
    unsigned int _globalCallState;
}

+ (id)sharedInstance;
@property(nonatomic, setter=_setTelephonyCallState:) unsigned int _telephonyCallState; // @synthesize _telephonyCallState;
- (id)_activeAudioCall;
- (id)_activeFaceTimeCall;
- (_Bool)_hasActiveAudioCall;
- (_Bool)_hasActiveFaceTimeCall;
- (_Bool)_hasActiveTelephonyCall;
@property(readonly, nonatomic) _Bool hasActiveCall;
- (void)_sendProxyUpdate;
- (void)_updateACChatProxyWithInfo:(id)arg1;
- (void)_updateAVChatProxyWithInfo:(id)arg1;
- (void)_addACChatProxy:(id)arg1;
- (void)_addAVChatProxy:(id)arg1;
- (void)_updateOverallChatState;
@property(readonly, nonatomic) unsigned int callState;
- (void)__setTelephonyCallState:(unsigned int)arg1;
- (void)_updateACCallState;
- (void)_setACCallState:(unsigned int)arg1 quietly:(_Bool)arg2;
- (void)_setACCallState:(unsigned int)arg1;
- (void)_updateAVCallState;
- (void)_setAVCallState:(unsigned int)arg1 quietly:(_Bool)arg2;
- (void)_setAVCallState:(unsigned int)arg1;
- (unsigned int)_callStateForType:(unsigned int)arg1;
- (unsigned int)_callState;
- (void)_postStateChangeIfNecessary;
- (void)_postStateChangeNamed:(id)arg1 fromState:(unsigned int)arg2 toState:(unsigned int)arg3 postType:(_Bool)arg4 type:(unsigned int)arg5;
- (void)_removeIMAVChatFromChatList:(id)arg1;
- (void)_addIMAVChatToChatList:(id)arg1;
- (id)_nonRetainingChatList;
@property(readonly, retain, nonatomic) NSArray *_FTCalls;
- (id)_copyMutableFTCalls;
- (id)_mutableFTCalls;
@property(readonly, retain, nonatomic) NSArray *calls;
- (id)_calls;
- (void)dealloc;
- (id)init;

@end

@interface IMAVCamera : NSObject
{
    id _internalDevice;
}

- (id)description;
- (void)dealloc;
@property(readonly, retain, nonatomic) NSString *uniqueID;
- (id)_AVCamera;
@property(readonly, nonatomic) _Bool isShutterOpen;
@property(readonly, nonatomic) _Bool isSuspended;
@property(readonly, nonatomic) _Bool hasShutter;
@property(readonly, nonatomic) _Bool isWideScreen;
@property(readonly, nonatomic) long long cameraStyle;
@property(readonly, retain, nonatomic) NSString *name;
- (id)init;
- (id)_initWithAVCamera:(id)arg1;

@end

@interface IMAVCameraController : NSObject
{
    NSMutableArray *_cameras;
    NSObject<OS_dispatch_queue> *_queue;
}

+ (id)sharedInstance;
@property(retain, nonatomic) IMAVCamera *currentCamera;
- (void)_loadSavedCamera;
- (void)_rebuildCameraList;
- (id)cameraWithDeviceID:(unsigned int)arg1;
@property(readonly, retain, nonatomic) NSArray *cameras;
- (void)dealloc;
- (id)init;

@end

@interface IMAVChat : NSObject <IMSystemMonitorListener>
{
    NSString *_GUID;
    NSString *_conferenceID;
    NSMutableArray *_participants;
    IMHandle *_initiator;
    IMAVChatParticipant *_localParticipant;
    NSMutableDictionary *_conferenceStateCache;
    NSNumber *_natType;
    NSMutableDictionary *_extraServerContext;
    NSDate *_dateCreated;
    NSDate *_dateStartedConnecting;
    NSDate *_dateConnected;
    NSDate *_dateEnded;
    NSDate *_dateReceivedRelayInitiate;
    NSDate *_dateReceivedRelayUpdate;
    NSDate *_interruptionBegan;
    NSDictionary *_pingTestResults;
    NSNumber *_frontCameraCaptureTime;
    NSNumber *_backCameraCaptureTime;
    NSNumber *_dataRate;
    NSNumber *_dataUploaded;
    NSNumber *_dataDownloaded;
    IMTimingCollection *_timingCollection;
    unsigned long long _localNetworkConnectionType;
    unsigned long long _remoteNetworkConnectionType;
    long long _pingTestResult;
    long long _networkCheckResult;
    NSDictionary *_callerProperties;
    NSObject<OS_dispatch_queue> *_conferenceQueue;
    NSTimer *_inviteTimeoutTimer;
    NSDate *_inviteTimeoutTimerStart;
    NSTimer *_firstFrameTimeoutTimer;
    NSTimer *_connectionTimeoutTimer;
    NSTimer *_breakBeforeMakeTimeoutTimer;
    NSData *_relayRemotePrimaryIdentifier;
    id _conferenceController;
    unsigned int _sessionID;
    NSError *_error;
    unsigned int _localState;
    unsigned int _lastPostedState;
    IMPair *_pendingPreemptiveRelayInitate;
    NSString *_callStatisticsGUID;
    struct CGSize _portraitAspectRatios;
    struct CGSize _landscapeAspectRatios;
    double _connectionTimeoutTime;
    double _invitationTimeoutTime;
    _Bool _hasGatheredInfo;
    _Bool _hasReceivedFirstFrame;
    _Bool _hasPendingAccept;
    _Bool _hasPendingInit;
    _Bool _isTerminating;
    _Bool _isCaller;
    _Bool _isVideo;
    _Bool _didRemoteMute;
    _Bool _didRemotePause;
    int _connectionType;
    _Bool _needsVideoRestart;
    _Bool _needsAudioRestart;
    _Bool _airplaneModeEnabled;
    _Bool _isVideoInterrupted;
    _Bool _isAudioInterrupted;
    _Bool _isCallUpgrade;
    _Bool _startedAudioSession;
    _Bool _connectionStarted;
    _Bool _isProxied;
    _Bool _wantsHoldMusic;
    _Bool _metadataFinalized;
}

+ (int)systemSupportsNewOutgoingConferenceTo:(id)arg1 isVideo:(_Bool)arg2;
+ (void)setDefaultConnectionTimeoutTime:(double)arg1;
+ (double)defaultConnectionTimeoutTime;
+ (void)setDefaultInvitationTimeoutTime:(double)arg1;
+ (double)defaultInvitationTimeoutTime;
+ (id)_avChatWithMatchingIMHandles:(id)arg1 video:(_Bool)arg2;
+ (id)_avChatConnectingFromIMHandle:(id)arg1;
+ (id)_avChatWaitingForReplyFromIMHandle:(id)arg1 orConferenceID:(id)arg2;
+ (id)_avChatInvitedByIMHandle:(id)arg1 orConferenceID:(id)arg2;
+ (id)_bestGuessAVChatWithIMHandle:(id)arg1 conferenceID:(id)arg2 sessionID:(unsigned int)arg3 properties:(id)arg4;
+ (id)_chatsWithIMAVChatState:(unsigned int)arg1;
+ (id)_acceptedChats;
+ (id)_connectedChats;
+ (id)_connectingChats;
+ (id)_outgoingInvitations;
+ (id)_incomingInvitations;
+ (id)_avChatWithGUID:(id)arg1;
+ (id)_avChatWithConferenceID:(id)arg1;
+ (id)_chatListLock;
+ (id)_nonFinalChat;
+ (id)_activeChat;
+ (id)_connectedChat;
+ (id)_chatList;
+ (id)_chatWithSessionID:(unsigned int)arg1;
+ (id)_avChatArray;
+ (id)avChatWithGUID:(id)arg1;
+ (id)chatsWithIMAVChatState:(unsigned int)arg1;
+ (id)acceptedChats;
+ (id)connectedChats;
+ (id)connectingChats;
+ (id)outgoingInvitations;
+ (id)incomingInvitations;
+ (id)nonFinalChat;
+ (id)activeChat;
+ (id)connectedChat;
+ (id)chatList;
+ (id)_proxyRepresentationForIMHandle:(id)arg1;
+ (id)_imHandleFromProxyRepresentation:(id)arg1;
@property(nonatomic, setter=_setNetworkCheckResult:) long long _networkCheckResult; // @synthesize _networkCheckResult;
@property(nonatomic, setter=_setPingTestResult:) long long _pingTestResult; // @synthesize _pingTestResult;
@property(retain, nonatomic, setter=_setPingTestResults:) NSDictionary *_pingTestResults; // @synthesize _pingTestResults;
@property(readonly, retain) NSDictionary *_extraServerContext; // @synthesize _extraServerContext;
@property(readonly, retain, nonatomic) NSArray *participants; // @synthesize participants=_participants;
@property(readonly, retain, nonatomic) IMAVChatParticipant *localParticipant; // @synthesize localParticipant=_localParticipant;
@property(readonly, nonatomic) unsigned int state; // @synthesize state=_localState;
@property(readonly, retain, nonatomic) NSDate *dateEnded; // @synthesize dateEnded=_dateEnded;
@property(readonly, retain, nonatomic) NSDate *dateCreated; // @synthesize dateCreated=_dateCreated;
@property(readonly, retain, nonatomic) NSDate *dateConnected; // @synthesize dateConnected=_dateConnected;
@property(nonatomic, setter=_setConferenceController:) id _conferenceController; // @synthesize _conferenceController;
- (void)_setGUID:(id)arg1;
@property(retain, nonatomic) NSString *GUID; // @synthesize GUID=_GUID;
@property(retain, nonatomic) NSString *conferenceID; // @synthesize conferenceID=_conferenceID;
@property(readonly, nonatomic) _Bool isCaller; // @synthesize isCaller=_isCaller;
@property(nonatomic, setter=_setWantsHoldMusic:) _Bool wantsHoldMusic; // @synthesize wantsHoldMusic=_wantsHoldMusic;
@property(readonly, nonatomic) _Bool isProxied; // @synthesize isProxied=_isProxied;
@property(retain, nonatomic, setter=_setRelayRemotePrimaryIdentifier:) NSData *_relayRemotePrimaryIdentifier; // @synthesize _relayRemotePrimaryIdentifier;
@property(nonatomic, setter=_setConnectionStarted:) _Bool _connectionStarted; // @synthesize _connectionStarted;
@property(nonatomic, setter=_setIsAudioInterrupted:) _Bool _isAudioInterrupted; // @synthesize _isAudioInterrupted;
@property(nonatomic, setter=_setIsVideoInterrupted:) _Bool _isVideoInterrupted; // @synthesize _isVideoInterrupted;
@property(retain, nonatomic, setter=setDataDownloaded:) NSNumber *dataDownloaded; // @synthesize dataDownloaded=_dataDownloaded;
@property(retain, nonatomic, setter=setDataUploaded:) NSNumber *dataUploaded; // @synthesize dataUploaded=_dataUploaded;
@property(retain, nonatomic, setter=setDataRate:) NSNumber *dataRate; // @synthesize dataRate=_dataRate;
@property(retain, nonatomic, setter=_setBackCameraCaptureTime:) NSNumber *_backCameraCaptureTime; // @synthesize _backCameraCaptureTime;
@property(retain, nonatomic, setter=_setFrontCameraCaptureTime:) NSNumber *_frontCameraCaptureTime; // @synthesize _frontCameraCaptureTime;
@property(retain, nonatomic, setter=_setInterruptionBegan:) NSDate *_interruptionBegan; // @synthesize _interruptionBegan;
@property(readonly, nonatomic) _Bool isVideo; // @synthesize isVideo=_isVideo;
@property(nonatomic, setter=_setNeedsVideoRestart:) _Bool _needsVideoRestart; // @synthesize _needsVideoRestart;
@property(nonatomic, setter=_setNeedsAudioRestart:) _Bool _needsAudioRestart; // @synthesize _needsAudioRestart;
@property(nonatomic, setter=_setRemoteNetworkConnectionType:) unsigned long long _remoteNetworkConnectionType; // @synthesize _remoteNetworkConnectionType;
@property(nonatomic, setter=_setLocalNetworkConnectionType:) unsigned long long _localNetworkConnectionType; // @synthesize _localNetworkConnectionType;
@property(retain, nonatomic, setter=_setNatType:) NSNumber *_natType; // @synthesize _natType;
@property(readonly, retain, nonatomic) IMHandle *initiatorIMHandle; // @synthesize initiatorIMHandle=_initiator;
@property(retain, nonatomic, setter=_setCallerProperties:) NSDictionary *callerProperties; // @synthesize callerProperties=_callerProperties;
@property(readonly, nonatomic) unsigned int sessionID; // @synthesize sessionID=_sessionID;
@property(nonatomic, setter=_setStartedAudioSession:) _Bool _startedAudioSession; // @synthesize _startedAudioSession;
@property(nonatomic, setter=_setIsCallUpgrade:) _Bool _isCallUpgrade; // @synthesize _isCallUpgrade;
@property(retain, nonatomic, setter=_setCallStatisticsGUID:) NSString *_callStatisticsGUID; // @synthesize _callStatisticsGUID;
@property(nonatomic, setter=_setConnectionType:) int _connectionType; // @synthesize _connectionType;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *_conferenceQueue; // @synthesize _conferenceQueue;
- (_Bool)_cachedBoolForKey:(id)arg1;
- (_Bool)_hasCachedBoolForKey:(id)arg1;
- (void)_cacheBool:(_Bool)arg1 forKey:(id)arg2;
- (void)_clearCache;
- (id)_timings;
- (void)_noteFirstFrame;
- (void)_postNotificationName:(id)arg1 participant:(id)arg2 userInfo:(id)arg3;
- (void)_postNotificationName:(id)arg1 userInfo:(id)arg2;
- (void)_handleAVError:(id)arg1;
@property(readonly, retain, nonatomic) NSArray *_imHandles;
@property(readonly, nonatomic) _Bool isUsingWifi;
@property(readonly, nonatomic) _Bool _usesRelay;
@property(readonly, nonatomic) NSNumber *_relayConnectDuration;
@property(readonly, nonatomic) NSNumber *_callDuration;
@property(readonly, nonatomic) NSNumber *_connectDuration;
@property(readonly, nonatomic) NSNumber *_currentNatType;
@property(readonly, nonatomic) NSNumber *_remoteNatType;
- (_Bool)isConferenceSilent;
@property(readonly, nonatomic) long long _bustedCallID;
- (void)_setDateConnected;
- (void)_setCreationDate;
@property(readonly, nonatomic) unsigned int endedReason;
@property(readonly, nonatomic) int endedError;
- (void)_setConferenceID:(id)arg1;
@property(readonly, retain, nonatomic) IMAccount *account;
@property(readonly, nonatomic) _Bool _isProxy;
- (void)resetWantsHoldMusic;
@property(readonly, retain, nonatomic) IMHandle *otherIMHandle;
- (id)participantMatchingIMHandle:(id)arg1;
- (id)vcPartyIDForIMHandle:(id)arg1;
- (id)participantWithID:(id)arg1;
- (id)participantWithAVConferenceCallID:(long long)arg1;
- (void)_applicationWillTerminate:(id)arg1;
- (void)handleGenericAVMessageFromParticipant:(id)arg1 type:(unsigned int)arg2 userInfo:(id)arg3;
- (void)_handleGenericAVMessageFromParticipant:(id)arg1 type:(unsigned int)arg2 userInfo:(id)arg3 handled:(_Bool)arg4;
- (void)_responseToVCInvite:(id)arg1;
- (void)__responseToVCInvite:(id)arg1;
- (_Bool)_processVCResponseDict:(id)arg1;
- (void)_setStateDisconnected;
- (void)declineInvitation;
- (void)declineInvitationWithResponse:(unsigned int)arg1;
- (void)acceptInvitationWithHoldMusic;
- (void)acceptInvitation;
- (void)invite:(id)arg1;
- (void)invite:(id)arg1 additionalPeers:(id)arg2;
- (void)cancelInvitation;
- (void)_cancelInvitationWithReason:(unsigned int)arg1 error:(int)arg2;
- (void)inviteAll;
- (void)_breakCallsIfNecessary:(_Bool)arg1;
- (_Bool)_isVideoUpgradeTo:(id)arg1;
- (_Bool)_isCallUpgradeTo:(id)arg1;
- (id)inviteesInfo;
- (void)endChatWithReason:(unsigned int)arg1 error:(int)arg2;
- (void)_endChatWithReason:(unsigned int)arg1 andError:(int)arg2;
- (void)endChatWithError:(int)arg1;
- (void)endChatWithReason:(unsigned int)arg1;
- (void)endChat;
- (void)beginChat;
- (id)description;
- (void)dealloc;
- (id)initOutgoingTo:(id)arg1 isVideo:(_Bool)arg2;
- (id)_initOutgoingTo:(id)arg1 isVideo:(_Bool)arg2 GUID:(id)arg3;
- (id)initIncomingFrom:(id)arg1 isVideo:(_Bool)arg2 callerProperties:(id)arg3;
- (id)_initWith:(id)arg1 invitedBy:(id)arg2 sessionID:(unsigned int)arg3 GUID:(id)arg4 video:(_Bool)arg5 extraProperties:(id)arg6;
@property(nonatomic) void *localVideoBackLayer;
@property(nonatomic) void *localVideoLayer;
- (void)setLocalAspectRatio:(struct CGSize)arg1 cameraOrientation:(unsigned int)arg2 cameraType:(unsigned int)arg3;
- (struct CGSize)localAspectRatioForCameraOrientation:(unsigned int)arg1 cameraType:(unsigned int)arg2;
@property(nonatomic) unsigned int cameraOrientation;
@property(nonatomic) unsigned int cameraType;
- (void)_postParticipantMediaChangeNotification:(id)arg1 cameraChanged:(_Bool)arg2 orientationChanged:(_Bool)arg3 aspectChanged:(_Bool)arg4 cameraWillSwitch:(_Bool)arg5 camera:(unsigned int)arg6 orientation:(unsigned int)arg7 aspect:(struct CGSize)arg8;
- (_Bool)stopPreview;
- (_Bool)startPreviewWithError:(id *)arg1;
@property(nonatomic) double connectionTimeoutTime;
@property(nonatomic) double invitationTimeoutTime;
- (void)_breakBeforeMakeTimer:(id)arg1;
- (void)_setBreakBeforeMakeTimer;
- (void)_clearBreakBeforeMakeTimer;
- (void)_firstFrameTimeout:(id)arg1;
- (void)_setFirstFrameTimeoutTimer;
- (void)_clearFirstFrameTimeoutTimer;
- (void)_reduceInvitationTimeoutTime;
- (void)_invitationTimeout:(id)arg1;
- (void)_setInvitationTimeoutTimer;
- (void)_clearInvitationTimeoutTimer;
- (void)_connectionTimeout:(id)arg1;
- (void)_setConnectionTimeoutTimer;
- (void)_clearConnectionTimeoutTimer;
- (void)conferencePersonWithID:(id)arg1 localIPDidChange:(id)arg2;
- (void)conferencePersonWithID:(id)arg1 sendRelayCancel:(id)arg2;
- (void)conferencePersonWithID:(id)arg1 sendRelayUpdate:(id)arg2;
- (void)conferencePersonWithID:(id)arg1 sendRelayRequest:(id)arg2;
- (void)conferencePersonWithID:(id)arg1 mediaDidStall:(_Bool)arg2;
- (void)conferencePersonWithID:(id)arg1 didDegrade:(_Bool)arg2;
- (void)conferencePersonWithID:(id)arg1 didPause:(_Bool)arg2;
- (void)conferencePersonWithID:(id)arg1 didMute:(_Bool)arg2;
- (void)_conferenceOtherParticipant:(id)arg1 didConnect:(_Bool)arg2;
- (void)conferenceAVConferenceCallID:(long long)arg1 didConnect:(_Bool)arg2;
- (void)conferenceDidStopWithCallID:(long long)arg1 error:(id)arg2;
- (void)_vccInitDidFinish:(id)arg1;
@property(nonatomic) _Bool isSendingAudio;
@property(readonly, nonatomic) _Bool didRemoteMute;
@property(nonatomic, setter=setRemoteMute:) _Bool isRemoteMute;
- (void)toggleMute;
@property(nonatomic, setter=setMute:) _Bool isMute;
@property(nonatomic) _Bool isSendingVideo;
@property(readonly, nonatomic) _Bool didRemotePause;
- (void)togglePaused;
@property(nonatomic, setter=setPaused:) _Bool isPaused;
@property(readonly, nonatomic) _Bool hasReceivedFirstFrame;
- (void)_handleRelayCancel:(id)arg1 fromParticipant:(id)arg2;
- (void)_handleRelayUpdate:(id)arg1 fromParticipant:(id)arg2;
- (void)_handleRelayInitate:(id)arg1 fromParticipant:(id)arg2;
- (void)_entitlementsChanged:(id)arg1;
- (void)_airplaneModeChanged:(id)arg1;
- (void)systemWillShutdown;
- (void)notificationCenterDidDisappear;
- (void)notificationCenterWillAppear;
- (void)systemApplicationDidResumeForEventsOnly;
- (void)systemApplicationDidResume;
- (void)systemApplicationDidSuspend;
- (void)systemApplicationWillEnterForeground;
- (void)systemApplicationDidEnterBackground;
- (void)systemApplicationDidBecomeActive;
- (void)_resumeVideoState;
- (void)_resumeAudioState;
- (void)_saveVideoRestartState;
- (void)_saveAudioRestartState;
- (void)systemDidFastUserSwitchOut;
- (void)_postStateToDelegateIfNecessary;
- (void)participant:(id)arg1 changedFromState:(unsigned int)arg2 toState:(unsigned int)arg3;
- (void)_setActiveConference;
@property(readonly, nonatomic) _Bool isActive; // @dynamic isActive;
@property(readonly, nonatomic) _Bool isStateFinal; // @dynamic isStateFinal;
- (id)_participantMatchingVCPartyID:(id)arg1;
@property(readonly, nonatomic) _Bool _allParticipantsUsingICE;
@property(readonly, retain, nonatomic) NSArray *remoteParticipants; // @dynamic remoteParticipants;
@property(readonly, retain, nonatomic) IMAVChatParticipant *initiatorParticipant; // @dynamic initiatorParticipant;
- (_Bool)_participantsCheckOut;
- (void)_initParticipantsWithIMHandles:(id)arg1;
- (_Bool)_moveVCPartyID:(id)arg1 toIndex:(unsigned int)arg2 inCount:(unsigned int)arg3;
- (void)_insertRemoteParticipant:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)_updateIMHandleInBuddyList:(id)arg1;
- (void)_peerID:(id)arg1 changedTo:(id)arg2;
- (void)setMetadataFinalized;
- (id)_proxyRepresentation;
- (id)_proxyRepresentationForIMAVChatParticipant:(id)arg1;
- (void)_submitCallEndedLoggingWithReason:(unsigned int)arg1 andError:(int)arg2;
- (void)__sendEndCallMetricToAWDWithReason:(unsigned int)arg1 andError:(int)arg2;
- (void)__sendEndCallMetricToViceroyWithReason:(unsigned int)arg1 andError:(int)arg2;
- (void)_submitCallInterruptionEndedLogging;
- (void)_submitCallInterruptionBeganLogging;
- (void)_submitCallConnectedLogging;
- (void)_submitCallStartedLoggingWithRecipientID:(id)arg1 isCaller:(_Bool)arg2 isVideo:(_Bool)arg3;

@end

@interface IMAVChatParticipant : NSObject
{
    _Bool _sendingAudio;
    _Bool _sendingVideo;
    _Bool _audioMuted;
    _Bool _videoPaused;
    _Bool _videoDegraded;
    _Bool _mediaStalled;
    _Bool _isInitiator;
    _Bool _inviteDelivered;
    _Bool _hasReinitiateCapability;
    unsigned int _state;
    unsigned int _cameraType;
    unsigned int _cameraOrientation;
    unsigned int _chatEndedReason;
    int _chatError;
    unsigned int _screenOrientation;
    float _volumeMeter;
    NSArray *_additionalPeers;
    NSString *_vcPartyID;
    IMHandle *_imHandle;
    IMHandle *_inviter;
    IMAVChat *_avChat;
    NSDictionary *_properties;
    NSString *_conferenceID;
    NSTimer *_connectTimeoutTimer;
    NSMutableArray *_participantsCallInfo;
    NSData *_inFrequencyLevel;
    NSData *_outFrequencyLevel;
    struct CGSize _remotePortraitOrientation;
    struct CGSize _remoteLandscapeOrientation;
    struct CGSize _remotePIPPortraitOrientation;
    struct CGSize _remotePIPLandscapeOrientation;
    struct CGRect _remotePortraitContentRect;
    struct CGRect _remoteLandscapeContentRect;
}

@property(retain, nonatomic) NSData *outFrequencyLevel; // @synthesize outFrequencyLevel=_outFrequencyLevel;
@property(retain, nonatomic) NSData *inFrequencyLevel; // @synthesize inFrequencyLevel=_inFrequencyLevel;
@property(nonatomic) float volumeMeter; // @synthesize volumeMeter=_volumeMeter;
@property(nonatomic) _Bool hasReinitiateCapability; // @synthesize hasReinitiateCapability=_hasReinitiateCapability;
@property(retain, nonatomic) NSMutableArray *_participantsCallInfo; // @synthesize _participantsCallInfo;
@property(nonatomic, setter=_setScreenOrientation:) unsigned int _screenOrientation; // @synthesize _screenOrientation;
@property(nonatomic, setter=_setRemoteLandscapeContentRect:) struct CGRect _remoteLandscapeContentRect; // @synthesize _remoteLandscapeContentRect;
@property(nonatomic, setter=_setRemotePortraitContentRect:) struct CGRect _remotePortraitContentRect; // @synthesize _remotePortraitContentRect;
@property(nonatomic, setter=_setRemotePIPLandscapeOrientation:) struct CGSize _remotePIPLandscapeOrientation; // @synthesize _remotePIPLandscapeOrientation;
@property(nonatomic, setter=_setRemotePIPPortraitOrientation:) struct CGSize _remotePIPPortraitOrientation; // @synthesize _remotePIPPortraitOrientation;
@property(retain, setter=_setConnectTimeoutTimer:) NSTimer *_connectTimeoutTimer; // @synthesize _connectTimeoutTimer;
@property(setter=_setInviteDelivered:) _Bool _inviteDelivered; // @synthesize _inviteDelivered;
@property(nonatomic, setter=_setRemoteLandscapeOrientation:) struct CGSize _remoteLandscapeOrientation; // @synthesize _remoteLandscapeOrientation;
@property(nonatomic, setter=_setRemotePortraitOrientation:) struct CGSize _remotePortraitOrientation; // @synthesize _remotePortraitOrientation;
@property(retain, nonatomic, setter=_setConferenceID:) NSString *_conferenceID; // @synthesize _conferenceID;
@property(retain, nonatomic) NSDictionary *properties; // @synthesize properties=_properties;
- (void)_setChatError:(int)arg1;
@property(nonatomic) int error; // @synthesize error=_chatError;
@property(readonly, nonatomic) unsigned int reasonChatEnded; // @synthesize reasonChatEnded=_chatEndedReason;
@property(readonly, nonatomic) _Bool isInitiator; // @synthesize isInitiator=_isInitiator;
- (void)setAVChat:(id)arg1;
@property(nonatomic) IMAVChat *avChat; // @synthesize avChat=_avChat;
@property(readonly, retain, nonatomic) IMHandle *invitedBy; // @synthesize invitedBy=_inviter;
@property(readonly, retain, nonatomic) IMHandle *imHandle; // @synthesize imHandle=_imHandle;
@property(setter=_setCameraOrientation:) unsigned int cameraOrientation; // @synthesize cameraOrientation=_cameraOrientation;
@property(setter=_setCameraType:) unsigned int cameraType; // @synthesize cameraType=_cameraType;
@property(retain, setter=setVCPartyID:) NSString *vcPartyID; // @synthesize vcPartyID=_vcPartyID;
@property(setter=setMediaStalled:) _Bool isMediaStalled; // @synthesize isMediaStalled=_mediaStalled;
@property(retain, nonatomic) NSArray *additionalPeers; // @synthesize additionalPeers=_additionalPeers;
@property(setter=setVideoDegraded:) _Bool isVideoDegraded; // @synthesize isVideoDegraded=_videoDegraded;
@property(nonatomic, setter=setVideoPaused:) _Bool isVideoPaused; // @synthesize isVideoPaused=_videoPaused;
@property(nonatomic, setter=setAudioMuted:) _Bool isAudioMuted; // @synthesize isAudioMuted=_audioMuted;
@property(readonly, nonatomic) _Bool isSendingVideo; // @synthesize isSendingVideo=_sendingVideo;
@property(readonly, nonatomic) _Bool isSendingAudio; // @synthesize isSendingAudio=_sendingAudio;
@property(nonatomic) unsigned int state; // @synthesize state=_state;
- (struct CGSize)localAspectRatioForCameraOrientation:(unsigned int)arg1 cameraType:(unsigned int)arg2;
- (struct CGSize)aspectRatioForCameraOrientation:(unsigned int)arg1 cameraType:(unsigned int)arg2;
- (struct CGRect)contentRectForCameraOrientation:(unsigned int)arg1 cameraType:(unsigned int)arg2;
- (void)sendAVMessage:(unsigned int)arg1 userInfo:(id)arg2;
- (void)_switchToUseNewIMHandle:(id)arg1;
- (void)_updateProperties:(id)arg1;
- (void)_processPropertyUpdate:(id)arg1;
- (void)_setState:(unsigned int)arg1 withReason:(unsigned int)arg2 andError:(int)arg3;
- (void)setStateToEndedWithReason:(unsigned int)arg1 andError:(int)arg2;
- (void)reinitializeCallForCallID:(unsigned int)arg1;
- (void)_hangupCallLaterIfReinitiateFails:(id)arg1;
- (void)_cleanupOrphanedCallInfos;
- (void)_noteInviteDelivered:(_Bool)arg1;
- (void)_handleIMAVResponse:(unsigned int)arg1;
- (id)_natType;
- (_Bool)_generateCallInfo:(id)arg1;
- (_Bool)_processResponseDictionary:(id)arg1 allowSecondConnection:(_Bool)arg2;
- (id)_processIncomingCallProperties:(id)arg1;
- (id)_callInfosWaitingForResponse;
- (id)_callInfosWaitingForAcceptAction;
- (id)_callInfoWithState:(long long)arg1;
- (void)requestIconIfNecessary;
@property(readonly, nonatomic) _Bool isLocalParticipant;
@property(readonly, retain, nonatomic) NSString *name;
- (void)dealloc;
- (id)description;
- (void)disconnectFromAVChat;
- (id)initAs:(id)arg1 invitedBy:(id)arg2 toChat:(id)arg3 account:(id)arg4;
- (void)updateStateForCurrentCallInfo:(unsigned int)arg1;
- (id)_callInfoForCallID:(long long)arg1;
- (long long)bestCallID;
@property(readonly, nonatomic) long long _activeCallID;
@property(readonly, nonatomic) _Bool hasConnectingSessions;
@property(readonly, nonatomic) _Bool hasUnfinishedSessions;
- (_Bool)matchesAVConferenceCallID:(long long)arg1;
- (id)callInfoBeingHandedOff;
- (void)_registerCallInfo:(id)arg1;
- (id)_initAs:(id)arg1 invitedBy:(id)arg2 sendingAudio:(_Bool)arg3 sendingVideo:(_Bool)arg4 usingICE:(_Bool)arg5 toChat:(id)arg6 inState:(unsigned int)arg7 withError:(int)arg8 andReason:(unsigned int)arg9 andVCPartyID:(id)arg10 account:(id)arg11;
- (id)init;
- (void)_connectTimeout:(id)arg1;
- (void)resetWaitingToConnectTimer;
- (void)setWaitingToConnect:(_Bool)arg1;
- (void)sendResponse:(unsigned int)arg1;
- (void)_sendResponse:(unsigned int)arg1 callInfo:(id)arg2;
- (void)cancelInvitation;
- (void)sendInvitation;
- (void)_reInitiate;
@property(nonatomic) void *videoBackLayer;
@property(nonatomic) void *videoLayer;
- (id)_proxyRepresentation;

@end

@interface IMAVChatParticipantCallInfo : NSObject
{
    NSDictionary *_relayInitiate;
    NSDictionary *_relayUpdate;
    NSDictionary *_relayCancel;
    NSData *_remoteNATIP;
    NSData *_localNATIP;
    NSData *_remoteICEData;
    NSData *_localICEData;
    NSString *_peerCN;
    NSNumber *_localNATType;
    NSNumber *_remoteNATType;
    unsigned int _callID;
    long long _state;
    _Bool _isBeingHandedOff;
    _Bool _isAudioPaused;
    _Bool _isVideoPaused;
    _Bool _isReinitiate;
    unsigned long long _localConnectionType;
    unsigned long long _remoteConnectionType;
    _Bool _inviteNeedsDelivery;
    NSData *_localSKEData;
    NSData *_remoteSKEData;
}

@property(nonatomic) _Bool inviteNeedsDelivery; // @synthesize inviteNeedsDelivery=_inviteNeedsDelivery;
@property(nonatomic) unsigned long long remoteConnectionType; // @synthesize remoteConnectionType=_remoteConnectionType;
@property(nonatomic) unsigned long long localConnectionType; // @synthesize localConnectionType=_localConnectionType;
@property(nonatomic) _Bool isReinitiate; // @synthesize isReinitiate=_isReinitiate;
@property(nonatomic) _Bool isVideoPaused; // @synthesize isVideoPaused=_isVideoPaused;
@property(readonly, nonatomic) _Bool isAudioPaused; // @synthesize isAudioPaused=_isAudioPaused;
@property(retain, nonatomic) NSData *remoteNATIP; // @synthesize remoteNATIP=_remoteNATIP;
@property(retain, nonatomic) NSData *localNATIP; // @synthesize localNATIP=_localNATIP;
@property(retain, nonatomic) NSNumber *remoteNATType; // @synthesize remoteNATType=_remoteNATType;
@property(retain, nonatomic) NSNumber *localNATType; // @synthesize localNATType=_localNATType;
@property(retain, nonatomic) NSString *peerCN; // @synthesize peerCN=_peerCN;
@property(retain, nonatomic) NSData *remoteSKEData; // @synthesize remoteSKEData=_remoteSKEData;
@property(retain, nonatomic) NSData *localSKEData; // @synthesize localSKEData=_localSKEData;
@property(retain, nonatomic) NSData *localICEData; // @synthesize localICEData=_localICEData;
@property(retain, nonatomic) NSData *remoteICEData; // @synthesize remoteICEData=_remoteICEData;
@property(nonatomic) _Bool isBeingHandedOff; // @synthesize isBeingHandedOff=_isBeingHandedOff;
@property(nonatomic) long long state; // @synthesize state=_state;
@property(nonatomic) unsigned int callID; // @synthesize callID=_callID;
@property(retain, nonatomic) NSDictionary *relayCancel; // @synthesize relayCancel=_relayCancel;
@property(retain, nonatomic) NSDictionary *relayUpdate; // @synthesize relayUpdate=_relayUpdate;
@property(retain, nonatomic) NSDictionary *relayInitiate; // @synthesize relayInitiate=_relayInitiate;
- (id)description;
@property(readonly, nonatomic) _Bool isFinished;
- (void)dealloc;
- (id)init;

@end

@interface IMAVChatParticipantProxy : NSObject
{
    NSDictionary *_info;
    IMAVChatProxy *_chat;
}

- (void)forwardInvocation:(id)arg1;
@property(readonly, nonatomic) _Bool _inviteDelivered;
@property(readonly, retain, nonatomic) NSString *name;
@property(readonly, retain, nonatomic) IMAVChat *avChat;
- (void)dealloc;
- (id)initWithDictionary:(id)arg1 chat:(id)arg2;

@end

@interface IMAVChatProxy : NSObject
{
    NSDictionary *_info;
}

- (void)forwardInvocation:(id)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (void)updateWithInfo:(id)arg1;
- (void)finalUpdate;
- (void)endChat;
- (void)declineInvitation;
- (void)cancelInvitation;
- (void)acceptInvitation;
- (void)invite:(id)arg1 additionalPeers:(id)arg2;
- (void)inviteAll;
@property(nonatomic) double connectionTimeoutTime;
@property(nonatomic) double invitationTimeoutTime;
@property(readonly, nonatomic) int endedError;
@property(readonly, nonatomic) unsigned int endedReason;
@property(nonatomic, setter=setMute:) _Bool isMute;
@property(readonly, nonatomic) _Bool isVideo;
@property(readonly, nonatomic) _Bool isCaller;
@property(readonly, nonatomic) _Bool isActive;
- (_Bool)_isProxy;
@property(readonly, retain, nonatomic) IMHandle *otherIMHandle;
@property(readonly, retain, nonatomic) IMHandle *initiatorIMHandle;
@property(readonly, retain, nonatomic) NSArray *remoteParticipants;
@property(readonly, retain, nonatomic) NSDate *dateEnded;
@property(readonly, retain, nonatomic) NSDate *dateConnected;
@property(readonly, retain, nonatomic) NSNumber *dataDownloaded;
@property(readonly, retain, nonatomic) NSNumber *dataUploaded;
@property(readonly, nonatomic) _Bool isSendingAudio;
@property(readonly, nonatomic) _Bool isStateFinal;
@property(readonly, nonatomic) unsigned int state;
@property(readonly, retain, nonatomic) NSString *conferenceID;
@property(readonly, nonatomic) long long callID;
@property(readonly, nonatomic) unsigned int sessionID;
@property(readonly, retain, nonatomic) NSString *GUID;
- (id)account;
- (id)description;
- (void)dealloc;

@end

@interface IMAVInterface : NSObject
{
    id _delegate;
}

+ (id)alloc;
+ (id)sharedInstance;
@property id delegate; // @synthesize delegate=_delegate;
- (void)updateAVChat:(id)arg1 withCallMetadata:(id)arg2;
- (long long)_runPingTestForChat:(id)arg1;
- (long long)_checkNetworkForChat:(id)arg1 requiresWifi:(_Bool)arg2;
- (_Bool)_submitEndCallMetric:(id)arg1 forCallID:(long long)arg2;
- (_Bool)_submitLoggingInformation:(id)arg1 forChat:(id)arg2;
- (void)avChat:(id)arg1 setLocalLandscapeAspectRatio:(struct CGSize)arg2 localPortraitAspectRatio:(struct CGSize)arg3;
- (void)endInterruptionForChat:(id)arg1;
- (void)startInterruptionForChat:(id)arg1;
@property(nonatomic) _Bool shouldKeepCameraRunning;
- (void)persistentProperty:(id)arg1 changedTo:(id)arg2 from:(id)arg3;
@property(readonly, nonatomic) id _controller;
@property(readonly, nonatomic) id controller;
- (void)processRemoteIPChanged:(id)arg1 fromParticipant:(id)arg2;
- (void)handleRelayCancel:(id)arg1 fromParticipant:(id)arg2 callInfo:(id)arg3;
- (void)handleRelayUpdate:(id)arg1 fromParticipant:(id)arg2 callInfo:(id)arg3;
- (void)handleRelayInitate:(id)arg1 fromParticipant:(id)arg2 callInfo:(id)arg3;
@property(readonly, nonatomic) _Bool supportsRelay;
@property(nonatomic) unsigned int maxBitrate;
- (void)setRemoteVideoLayersFromChat:(id)arg1 toChat:(id)arg2;
@property(nonatomic) void *localVideoBackLayer;
@property(nonatomic) void *localVideoLayer;
- (void)setRemoteVideoBackLayer:(void *)arg1 forChat:(id)arg2;
- (void *)remoteVideoBackLayerForChat:(id)arg1;
- (void)setRemoteVideoLayer:(void *)arg1 forChat:(id)arg2;
- (void *)remoteVideoLayerForChat:(id)arg1;
@property(readonly, nonatomic) _Bool supportsLayers;
- (id)avChat:(id)arg1 IPAndPortDataWithCallerIP:(id)arg2 callerSIPPort:(unsigned int)arg3 shouldFindExternalIP:(_Bool)arg4;
- (id)avChat:(id)arg1 IPAndPortDataWithCallerIPAndPortData:(id)arg2 shouldFindExternalIP:(_Bool)arg3;
- (id)natTypeForAVChat:(id)arg1;
- (id)getNatIPFromICEData:(id)arg1;
- (_Bool)avChat:(id)arg1 generateCallInfoForID:(id)arg2 service:(id)arg3 usingRelay:(_Bool)arg4 callInfo:(id)arg5;
- (void)avChat:(id)arg1 prepareConnectionWithCallInfo:(id)arg2;
- (int)avChat:(id)arg1 endConferenceForUserID:(id)arg2;
- (void)endAVConferenceWithChat:(id)arg1 callID:(long long)arg2;
- (int)endConferenceForAVChat:(id)arg1;
- (_Bool)stopPreview;
- (_Bool)startPreviewWithError:(id *)arg1;
@property(readonly, nonatomic) unsigned long long capabilities;
@property(readonly, nonatomic) unsigned long long capabilitiesOfCPU;
@property(readonly, nonatomic) unsigned long long capabilitiesOfNetwork;
- (void)avChat:(id)arg1 setValidatedIdentity:(struct __SecIdentity *)arg2;
- (void)avChat:(id)arg1 setSendingVideo:(_Bool)arg2;
- (_Bool)isSendingVideoForAVChat:(id)arg1;
- (void)avChat:(id)arg1 setSendingAudio:(_Bool)arg2;
- (_Bool)isSendingAudioForAVChat:(id)arg1;
- (void)avChat:(id)arg1 setRemoteMute:(_Bool)arg2;
- (_Bool)isRemoteMuteForAVChat:(id)arg1;
- (void)avChat:(id)arg1 setPaused:(_Bool)arg2;
- (_Bool)isPausedForAVChat:(id)arg1;
- (void)avChat:(id)arg1 setMute:(_Bool)arg2;
- (_Bool)isMuteForAVChat:(id)arg1;
@property(readonly, nonatomic) _Bool systemSupportsBackFacingCamera;
@property(readonly, nonatomic) _Bool systemSupportsFrontFacingCamera;
@property(readonly, nonatomic) _Bool systemCanAudioChat;
@property(readonly, nonatomic) _Bool systemCanVideoChat;
- (void)unsetDelegate:(id)arg1;
@property(readonly, nonatomic) _Bool isAVInterfaceReady;
- (void)chatStateUpdated;
@property(readonly, nonatomic) unsigned int overallChatState;
- (void)_notifyAboutPotentialCallForChat:(id)arg1;
- (void)_conferenceEnded:(id)arg1;
- (void)_conferenceWillStart:(id)arg1;
- (void)cleanupAVInterface;
- (void)initAVInterface;
- (void)_avChatDealloc:(id)arg1;
- (void)dealloc;

@end

@interface IMAVConferenceInterface : IMAVInterface <AVConferenceDelegate>
{
    NSMutableArray *_avConferencesToCleanup;
    NSMutableDictionary *_avConferences;
    NSLock *_avConferencesLock;
    _Bool _duringInit;
    _Bool _pendingCleanup;
}

+ (void)_postParticipantScreenAttributesChangeNotification:(id)arg1 cameraChanged:(_Bool)arg2 orientationChanged:(_Bool)arg3 aspectChanged:(_Bool)arg4 cameraWillSwitch:(_Bool)arg5 camera:(unsigned int)arg6 orentation:(unsigned int)arg7 aspect:(struct CGSize)arg8;
+ (void)_postParticipantMediaChangeNotification:(id)arg1 cameraChanged:(_Bool)arg2 orientationChanged:(_Bool)arg3 aspectChanged:(_Bool)arg4 contentRectChanged:(_Bool)arg5 cameraWillSwitch:(_Bool)arg6 camera:(unsigned int)arg7 orentation:(unsigned int)arg8 aspect:(struct CGSize)arg9 contentRect:(struct CGRect)arg10;
+ (_Bool)_useMultipleAVConference;
+ (_Bool)_forceRelayMode;
- (void)updateAVChat:(id)arg1 withCallMetadata:(id)arg2;
- (_Bool)_submitEndCallMetric:(id)arg1 forCallID:(long long)arg2;
- (_Bool)_submitLoggingInformation:(id)arg1 forChat:(id)arg2;
- (void)avChat:(id)arg1 setLocalLandscapeAspectRatio:(struct CGSize)arg2 localPortraitAspectRatio:(struct CGSize)arg3;
- (void)chatStateUpdated;
- (id)_controller;
@property(readonly, nonatomic) AVConference *controller;
- (void)processRemoteIPChanged:(id)arg1 fromParticipant:(id)arg2;
- (void)handleRelayCancel:(id)arg1 fromParticipant:(id)arg2 callInfo:(id)arg3;
- (void)handleRelayUpdate:(id)arg1 fromParticipant:(id)arg2 callInfo:(id)arg3;
- (void)handleRelayInitate:(id)arg1 fromParticipant:(id)arg2 callInfo:(id)arg3;
- (_Bool)supportsRelay;
- (void)setRemoteVideoLayersFromChat:(id)arg1 toChat:(id)arg2;
- (void)setLocalVideoBackLayer:(void *)arg1;
- (void *)localVideoBackLayer;
- (void)setRemoteVideoBackLayer:(void *)arg1 forChat:(id)arg2;
- (void *)remoteVideoBackLayerForChat:(id)arg1;
- (void)setLocalVideoLayer:(void *)arg1;
- (void *)localVideoLayer;
- (void)setRemoteVideoLayer:(void *)arg1 forChat:(id)arg2;
- (void *)remoteVideoLayerForChat:(id)arg1;
- (_Bool)supportsLayers;
- (void)serverDiedForConference:(id)arg1;
- (void)conference:(id)arg1 didChangeLocalVariablesForCallID:(long long)arg2;
- (void)conference:(id)arg1 localIPChange:(id)arg2 withCallID:(long long)arg3;
- (void)conference:(id)arg1 remoteVideoPaused:(_Bool)arg2 callID:(long long)arg3;
- (void)conference:(id)arg1 remoteAudioPaused:(_Bool)arg2 callID:(long long)arg3;
- (void)conference:(id)arg1 reinitializeCallForCallID:(unsigned int)arg2;
- (void)conference:(id)arg1 withCallID:(long long)arg2 remoteMediaStalled:(_Bool)arg3;
- (void)conference:(id)arg1 videoQualityNotificationForCallID:(long long)arg2 isDegraded:(_Bool)arg3 isRemote:(_Bool)arg4;
- (void)conference:(id)arg1 withCallID:(long long)arg2 networkHint:(_Bool)arg3;
- (void)conference:(id)arg1 cancelRelayRequest:(long long)arg2 requestDict:(id)arg3;
- (void)conference:(id)arg1 sendRelayUpdate:(long long)arg2 updateDict:(id)arg3;
- (void)conference:(id)arg1 inititiateRelayRequest:(long long)arg2 requestDict:(id)arg3;
- (void)conference:(id)arg1 remoteVideoAttributesChanged:(id)arg2 callID:(long long)arg3;
- (void)conference:(id)arg1 remoteScreenAttributesChanged:(id)arg2 callID:(long long)arg3;
- (void)conference:(id)arg1 receivedFirstRemoteFrameForCallID:(long long)arg2;
- (void)conference:(id)arg1 updateOutputFrequencyLevel:(id)arg2;
- (void)conference:(id)arg1 updateInputFrequencyLevel:(id)arg2;
- (void)conference:(id)arg1 updateOutputMeterLevel:(float)arg2;
- (void)conference:(id)arg1 updateInputMeterLevel:(float)arg2;
- (void)conference:(id)arg1 didStopWithCallID:(long long)arg2 error:(id)arg3;
- (void)conference:(id)arg1 didStopWithCallID:(long long)arg2 error:(id)arg3 callMetadata:(id)arg4;
- (void)conference:(id)arg1 didStartSession:(_Bool)arg2 withUserInfo:(id)arg3;
- (_Bool)avChat:(id)arg1 generateCallInfoForID:(id)arg2 service:(id)arg3 usingRelay:(_Bool)arg4 callInfo:(id)arg5;
- (void)avChat:(id)arg1 prepareConnectionWithCallInfo:(id)arg2;
- (id)natTypeForAVChat:(id)arg1;
- (id)getNatIPFromICEData:(id)arg1;
- (void)_notifyAboutPotentialCallForChat:(id)arg1;
- (int)avChat:(id)arg1 endConferenceForUserID:(id)arg2;
- (void)_avChatDealloc:(id)arg1;
- (void)endAVConferenceWithChat:(id)arg1 callID:(long long)arg2;
- (int)endConferenceForAVChat:(id)arg1;
- (_Bool)stopPreview;
- (_Bool)startPreviewWithError:(id *)arg1;
- (unsigned long long)capabilities;
- (unsigned long long)capabilitiesOfCPU;
- (unsigned long long)capabilitiesOfNetwork;
- (void)avChat:(id)arg1 setSendingVideo:(_Bool)arg2;
- (_Bool)isSendingVideoForAVChat:(id)arg1;
- (void)avChat:(id)arg1 setSendingAudio:(_Bool)arg2;
- (_Bool)isSendingAudioForAVChat:(id)arg1;
- (void)avChat:(id)arg1 setPaused:(_Bool)arg2;
- (_Bool)isPausedForAVChat:(id)arg1;
- (void)avChat:(id)arg1 setMute:(_Bool)arg2;
- (_Bool)isMuteForAVChat:(id)arg1;
- (void)_conferenceEnded:(id)arg1;
- (_Bool)isAVInterfaceReady;
- (void)initAVInterface;
- (void)_queueAVConferenceForCleanup:(id)arg1;
- (void)_cleanupAVInterface;
- (id)_avChatForConference:(id)arg1 callID:(long long)arg2 errorString:(id)arg3;
- (id)_imAVChatParticipantForConference:(id)arg1 callID:(long long)arg2 errorString:(id)arg3;
- (id)_avChatForConference:(id)arg1;
- (id)_conferenceForAVChat:(id)arg1;
- (id)_existingConferenceForAVChatGUID:(id)arg1;
- (id)_existingConferenceForAVChat:(id)arg1;
- (_Bool)_hasAVConferenceObjectsForChatsOtherThan:(id)arg1;
- (void)_configureAVConference:(id)arg1 forChat:(id)arg2;
- (void)_setAudioSessionPropertiesForChat:(id)arg1;
- (id)_getFaceTimeUUID;
- (void)dealloc;
- (id)init;

@end

@interface IMAVController : NSObject
{
    _Bool _blockMultipleIncomingInvitations;
    _Bool _blockOutgoingInvitationsDuringCall;
    _Bool _blockIncomingInvitationsDuringCall;
    NSMutableArray *_delegates;
}

+ (id)sharedInstance;
@property(nonatomic) _Bool blockIncomingInvitationsDuringCall; // @synthesize blockIncomingInvitationsDuringCall=_blockIncomingInvitationsDuringCall;
@property(nonatomic) _Bool blockOutgoingInvitationsDuringCall; // @synthesize blockOutgoingInvitationsDuringCall=_blockOutgoingInvitationsDuringCall;
@property(nonatomic) _Bool blockMultipleIncomingInvitations; // @synthesize blockMultipleIncomingInvitations=_blockMultipleIncomingInvitations;
@property(retain, nonatomic) NSMutableArray *_delegates; // @synthesize _delegates;
- (void)blockOnPendingVCInvitationsWithCapabilities:(long long)arg1;
- (void)_receivedPendingVCRequests;
- (void)_receivedPendingACRequests;
@property(readonly, nonatomic) _Bool _ready;
- (void)requestPendingACInvitations;
- (void)requestPendingVCInvitations;
@property(readonly, nonatomic) _Bool microphoneCapable;
@property(readonly, nonatomic) _Bool cameraCapable;
@property(readonly, nonatomic) _Bool hasRunningConference;
@property(readonly, nonatomic) _Bool hasActiveConference;
@property(readonly, nonatomic) _Bool microphoneConnected;
@property(readonly, nonatomic) _Bool cameraConnected;
- (void)updateActiveConference;
- (void)setHasActiveConference:(_Bool)arg1;
- (void)setHasRunningConference:(_Bool)arg1;
@property(readonly, nonatomic) unsigned int overallChatState;
- (void)pushCachedVCCapsToDaemon;
- (void)vcCapabilitiesChanged:(unsigned long long)arg1;
- (void)setIMAVCapabilities:(long long)arg1 toCaps:(long long)arg2;
- (void)_setServiceVCCaps:(unsigned long long)arg1 toCaps:(unsigned long long)arg2;
- (void)_dumpCaps;
@property(nonatomic) id <IMAVControllerDelegate> delegate;
- (void)removeDelegate:(id)arg1;
- (void)addDelegate:(id)arg1 queue:(id)arg2;
@property(readonly, retain, nonatomic) NSArray *delegates;
- (void)cancelVCRequestWithBuddy:(id)arg1 vcProps:(id)arg2 forAccount:(id)arg3 conferenceID:(id)arg4;
- (void)declineVCRequestWithBuddy:(id)arg1 response:(unsigned int)arg2 vcProps:(id)arg3 forAccount:(id)arg4 conferenceID:(id)arg5;
- (id)vcResponseInfoWithSessionID:(unsigned int)arg1;
- (void)declineVCRequestWithBuddy:(id)arg1 response:(unsigned int)arg2 vcProps:(id)arg3 conferenceID:(id)arg4;
- (id)init;
- (void)setupIMAVController;
- (void)_markSetup;
- (_Bool)_shouldRunACConferences;
- (_Bool)_shouldObserveConferences;
- (_Bool)_shouldRunConferences;

@end

@interface IMAVDVDController : NSObject
{
    _Bool _didPause;
}

+ (id)sharedInstance;
- (void)pause;
- (void)resume;
- (void)dealloc;
- (id)init;

@end

@interface IMAVDaemonController : NSObject
{
    IMRemoteObject<IMAVDaemonProtocol> *_remoteObject;
    IMLocalObject *_localObject;
    IMAVDaemonListener *_daemonListener;
    NSProtocolChecker *_protocol;
    NSString *_listenerID;
    NSMutableArray *_listeners;
    NSLock *_connectionLock;
    NSObject<OS_dispatch_queue> *_listenerLockQueue;
    NSObject<OS_dispatch_queue> *_remoteDaemonLockQueue;
    NSObject<OS_dispatch_queue> *_remoteMessageQueue;
    NSObject<OS_dispatch_queue> *_localObjectLockQueue;
    struct __CFRunLoopSource *_runLoopSource;
    _Bool _hasCheckedForDaemon;
    _Bool _acquiringDaemonConnection;
}

+ (id)sharedInstance;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *_remoteMessageQueue; // @synthesize _remoteMessageQueue;
@property(readonly, nonatomic) IMAVDaemonListener *listener; // @synthesize listener=_daemonListener;
- (void)forwardInvocation:(id)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (void)remoteObjectDiedNotification:(id)arg1;
- (void)localObjectDiedNotification:(id)arg1;
- (void)_remoteObjectDiedNotification:(id)arg1;
- (void)_localObjectDiedNotification:(id)arg1;
- (void)_disconnectFromDaemon;
- (void)_cleanUpConnection;
- (void)_connectToDaemon;
- (_Bool)_makeConnectionWithCompletionBlock:(CDUnknownBlockType)arg1;
- (_Bool)removeListenerID:(id)arg1;
- (_Bool)hasListenerForID:(id)arg1;
- (_Bool)addListenerID:(id)arg1;
- (void)_listenerSetUpdated;
- (void)_remoteObjectCleanup;
- (void)_localObjectCleanup;
- (_Bool)localObjectExists;
- (_Bool)remoteObjectExists;
- (void)_noteSetupComplete;
- (_Bool)isConnected;
- (_Bool)isConnecting;
- (_Bool)__isRemoteObjectValidOnQueue:(id)arg1;
- (_Bool)__isLocalObjectValidOnQueue:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface IMAVDaemonListener : NSObject
{
    NSMutableArray *_handlers;
    NSProtocolChecker *_protocol;
    _Bool _setupComplete;
    _Bool _postedSetupComplete;
}

@property(readonly, nonatomic) _Bool isSetupComplete; // @synthesize isSetupComplete=_setupComplete;
@property(readonly, nonatomic) NSArray *handlers; // @synthesize handlers=_handlers;
- (void)forwardInvocation:(id)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (void)setupComplete:(_Bool)arg1 info:(id)arg2;
- (void)removeHandler:(id)arg1;
- (void)addHandler:(id)arg1;
- (void)_noteDisconnected;
- (void)dealloc;
- (id)init;

@end

@interface IMAVHandler : NSObject
{
    NSMutableArray *_pendingChats;
    NSMutableArray *_pendingLookups;
}

+ (void)ensureHandlerSetup;
+ (void)initialize;
- (void)account:(id)arg1 conference:(id)arg2 invitationSentSuccessfully:(_Bool)arg3;
- (void)account:(id)arg1 relay:(id)arg2 handleCancel:(id)arg3 fromPerson:(id)arg4;
- (void)account:(id)arg1 relay:(id)arg2 handleUpdate:(id)arg3 fromPerson:(id)arg4;
- (void)account:(id)arg1 relay:(id)arg2 handleInitate:(id)arg3 fromPerson:(id)arg4;
- (void)account:(id)arg1 postedError:(id)arg2;
- (void)persistentProperty:(id)arg1 changedTo:(id)arg2 from:(id)arg3;
- (void)property:(id)arg1 changedTo:(id)arg2 from:(id)arg3;
- (void)account:(id)arg1 conference:(id)arg2 peerID:(id)arg3 propertiesUpdated:(id)arg4;
- (void)setupComplete;
- (void)pendingACRequestComplete;
- (void)pendingVCRequestComplete;
- (void)vcCapabilitiesChanged:(unsigned long long)arg1;
- (void)account:(id)arg1 avAction:(unsigned int)arg2 withArguments:(id)arg3 toAVChat:(id)arg4 isVideo:(_Bool)arg5;
- (void)_handleFilteredIncomingAVChatForNotification:(id)arg1;
- (void)_handleIncomingAVChatForNotification:(id)arg1;
- (void)_enqueueIMAVChatForNetworkActivation:(id)arg1;
- (void)_notifyOfFilteredIncomingInvitationFor:(id)arg1 notifyInvitationListeners:(_Bool)arg2;
- (void)_notifyOfIncomingInvitationFor:(id)arg1 notifyInvitationListeners:(_Bool)arg2;
- (void)account:(id)arg1 conference:(id)arg2 changedToNewConferenceID:(id)arg3;
- (void)account:(id)arg1 conference:(id)arg2 peerIDChangedFromID:(id)arg3 toID:(id)arg4;
- (void)account:(id)arg1 conference:(id)arg2 receivedAVMessage:(unsigned int)arg3 from:(id)arg4 sessionID:(unsigned int)arg5 userInfo:(id)arg6;
- (void)account:(id)arg1 conference:(id)arg2 receivedCancelInvitationFrom:(id)arg3 properties:(id)arg4;
- (void)account:(id)arg1 conference:(id)arg2 receivedResponseToInvitationFrom:(id)arg3 properties:(id)arg4;
- (void)account:(id)arg1 conference:(id)arg2 receivedInvitationFrom:(id)arg3 properties:(id)arg4;
- (void)_handleIncomingWithAccount:(id)arg1 fromHandle:(id)arg2 conference:(id)arg3 properites:(id)arg4 allowCall:(_Bool)arg5;
- (void)dealloc;

@end

@interface IMAVLocalPreviewClient : NSObject <IMSystemMonitorListener>
{
    _Bool _supportsPreview;
    _Bool _wantsPreview;
    _Bool _wantsPausedPreview;
    _Bool _wantsUnpausedPreview;
}

+ (id)sharedInstance;
@property(nonatomic) _Bool supportsPreview; // @synthesize supportsPreview=_supportsPreview;
- (void)didReceiveCommError;
- (void)didReceiveErrorFromCamera:(unsigned int)arg1 error:(id)arg2;
- (void)didChangeLocalScreenAttributes:(id)arg1;
- (void)didChangeLocalVideoAttributes:(id)arg1;
- (void)didReceiveFirstPreviewFrameFromCamera:(unsigned int)arg1;
- (void)didPausePreview;
- (void)didStopPreview;
- (void)didStartPreview;
- (void)systemScreenDidPowerDown;
- (void)systemScreenDidPowerUp;
- (void)systemApplicationWillEnterForeground;
- (void)systemApplicationDidEnterBackground;
- (void)endAnimationToPreview;
- (void)beginAnimationToPreview;
- (void)endAnimationToPIP;
- (void)beginAnimationToPIP;
@property(readonly, nonatomic) _Bool isPreviewRunning;
- (void)unpausePreview;
- (void)pausePreview;
- (void)stopPreview;
- (void)startPreview;
- (void)_avDaemonConnected;
- (void)_updatePreviewState;
- (_Bool)_shouldPreviewBeRunning;
- (void)setLocalScreenAttributes:(id)arg1;
- (id)localScreenAttributesForVideoAttributes:(id)arg1;
@property(nonatomic) void *localVideoBackLayer;
@property(nonatomic) void *localVideoLayer;
@property(nonatomic) IMAVCamera *localCamera;
@property(nonatomic) unsigned int cameraOrientation;
@property(nonatomic) unsigned int cameraType;
- (void)dealloc;
- (id)init;

@end

@interface IMAVMicrophone : NSObject
{
    id _internalDevice;
}

- (id)description;
@property(readonly, retain, nonatomic) NSString *uniqueID;
- (id)_AVAudioDevice;
@property(readonly, retain, nonatomic) NSString *name;
- (void)dealloc;
- (id)init;
- (id)_initWithAVAudioDevice:(id)arg1;

@end

@interface IMAVMicrophoneController : NSObject
{
    id _internal;
    NSMutableArray *_microphones;
    NSObject<OS_dispatch_queue> *_queue;
}

+ (id)sharedInstance;
@property(retain, nonatomic) IMAVMicrophone *currentMicrophone;
- (void)_loadSavedMicrophone;
- (void)_rebuildMicrophoneList;
- (void)dealloc;
@property(readonly, retain, nonatomic) NSArray *microphones;
- (id)init;

@end

@interface IMAVTelephonyManager : NSObject
{
    _Bool _isDesignatedAudioServiceProvider;
    _Bool _isDesignatedVideoServiceProvider;
    struct __CFMachPort *_ctServerMachPort;
    struct __CFUUID *_ctAudioToken;
    struct __CFUUID *_ctVideoToken;
}

+ (id)numberToDialForNumber:(id)arg1 dialAssist:(_Bool *)arg2;
+ (id)sharedInstance;
- (_Bool)_breakCSCallsIfNecessary;
- (_Bool)_wantsBreakBeforeMake;
- (void)stopWatchingForCTRequests;
- (void)startWatchingForCTRequests;
- (void)_chatStateChanged:(id)arg1;
- (void)notifyCallEndedForChat:(id)arg1;
- (void)_notifyMissedCallForInviteFromID:(id)arg1 isVideo:(_Bool)arg2;
- (void)notifyMissedCallForChat:(id)arg1;
- (void)notifyCallStartedForChat:(id)arg1;
- (void)notifyCallConnectingForChat:(id)arg1;
- (void)notifyCallConnectedForChat:(id)arg1;
- (_Bool)_isOnCallToID:(id)arg1;
- (void)_disconnectCSCallWithID:(id)arg1;
@property(readonly, nonatomic) unsigned int callState;
- (_Bool)_disconnectCTServerConnection;
- (_Bool)_reconnectCTServerConnectionIfNecessary;
- (_Bool)_setupCTServerConnection;
- (void)_cleanupMachInfo;
- (_Bool)_unregisterCTRequestService;
- (_Bool)_registerCTRequestService;
- (void)dealloc;
- (id)init;

@end

@interface IMHandle (AVChatExtensions)
@property(readonly, nonatomic) _Bool hasNoConferencingCaps;
@end

@interface NSArray (IMAVChatExtensions)
- (id)componentsJoinedIntoListWithMaxItems:(int)arg1;
@end

