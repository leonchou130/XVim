//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

#pragma mark Typedef'd Structures

typedef struct {
    char *_field1;
    _Bool _field2;
    char *_field3;
    double _field4;
    double _field5;
} CDStruct_875ffba5;

typedef struct {
    long long _field1;
    char *_field2;
    char *_field3;
    long long _field4;
    char *_field5;
    char *_field6;
} CDStruct_6b208136;

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/Frameworks/HealthKit.framework/HealthKit
// UUID: 5DC74CDE-BD08-3180-A30F-3F6D20F06E08
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 280.18.0.0.0
//            Minimum iOS version: 8.0.0
//                    SDK version: 8.0.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol HDServerInterface <NSObject>
- (void)fetchDiagnosticsWithKey:(NSString *)arg1 completion:(void (^)(NSString *, NSError *))arg2;
- (void)stopRecordingDataWithCompletion:(void (^)(_Bool, NSError *))arg1;
- (void)startRecordingDataToFile:(NSString *)arg1 completion:(void (^)(_Bool, NSError *))arg2;
- (void)stopReplayingDataWithCompletion:(void (^)(_Bool, NSError *))arg1;
- (void)startReplayingDataFromFile:(NSString *)arg1 repeat:(_Bool)arg2 completion:(void (^)(_Bool, NSError *))arg3;
- (void)stopFakingDataWithCompletion:(void (^)(_Bool, NSError *))arg1;
- (void)startFakingDataWithActivity:(long long)arg1 speed:(HKQuantity *)arg2 completion:(void (^)(_Bool, NSError *))arg3;
- (void)performMigrationWithCompletion:(void (^)(_Bool, NSError *))arg1;
- (void)getDatabaseSizeInBytesWithCompletion:(void (^)(NSNumber *, NSError *))arg1;
- (void)removeDefaultForKey:(NSString *)arg1 withCompletion:(void (^)(_Bool, NSError *))arg2;
- (void)setDefaultValue:(NSDictionary *)arg1 forKey:(NSString *)arg2 withCompletion:(void (^)(NSError *))arg3;
- (void)getDefaultForKey:(NSString *)arg1 withHandler:(void (^)(NSDictionary *, NSError *))arg2;
- (void)removePeripheral:(NSUUID *)arg1 withCompletion:(void (^)(_Bool, NSError *))arg2;
- (void)addPeripheral:(NSUUID *)arg1 name:(NSString *)arg2 forServices:(NSArray *)arg3 withCompletion:(void (^)(_Bool, NSError *))arg4;
- (void)performHealthServiceOperation:(NSString *)arg1 onSession:(unsigned long long)arg2 withParameters:(NSDictionary *)arg3 completion:(void (^)(NSString *, _Bool, NSError *))arg4;
- (void)getHealthServiceProperty:(NSString *)arg1 forSession:(unsigned long long)arg2 withHandler:(void (^)(id, NSError *))arg3;
- (void)removePairingForHealthService:(HKHealthService *)arg1 withCompletion:(void (^)(_Bool, NSError *))arg2;
- (void)addPairingForHealthService:(HKHealthService *)arg1 withCompletion:(void (^)(_Bool, NSError *))arg2;
- (void)getHealthServicePairingsWithHandler:(void (^)(NSArray *, NSError *))arg1;
- (void)endHealthServiceSession:(unsigned long long)arg1;
- (void)startHealthServiceSession:(HKHealthService *)arg1 withCompletion:(void (^)(unsigned long long, NSError *))arg2;
- (void)endHealthServiceDiscovery:(unsigned long long)arg1;
- (void)startHealthServiceDiscovery:(long long)arg1 withCompletion:(void (^)(unsigned long long, NSError *))arg2;
- (void)endBluetoothStatusUpdates;
- (void)beginBluetoothStatusUpdates:(void (^)(long long, NSError *))arg1;
- (void)setCharacteristic:(id)arg1 forDataType:(HKCharacteristicType *)arg2 handler:(void (^)(_Bool, NSError *))arg3;
- (void)fetchCharacteristicWithDataType:(HKObjectType *)arg1 handler:(void (^)(id, NSError *))arg2;
- (void)deleteMedicalIDDataWithCompletion:(void (^)(_Bool, NSError *))arg1;
- (void)updateMedicalIDData:(_HKMedicalIDData *)arg1 completion:(void (^)(_Bool, NSError *))arg2;
- (void)medicalIDDataCreateIfNecessary:(_Bool)arg1 completion:(void (^)(_HKMedicalIDData *, NSError *))arg2;
- (void)setDataCollectionOptionForType:(HKSampleType *)arg1 key:(NSString *)arg2 value:(NSNumber *)arg3 completion:(void (^)(_Bool, NSError *))arg4;
- (void)deleteSourceWithBundleIdentifier:(NSString *)arg1 completion:(void (^)(_Bool, NSError *))arg2;
- (void)deleteAllSamplesWithTypes:(NSArray *)arg1 sourceBundleIdentifier:(NSString *)arg2 completion:(void (^)(_Bool, NSError *))arg3;
- (void)setOrderedSources:(NSArray *)arg1 forObjectType:(HKObjectType *)arg2 completion:(void (^)(_Bool, NSError *))arg3;
- (void)orderedSourcesForObjectType:(HKObjectType *)arg1 completion:(void (^)(NSArray *, NSError *))arg2;
- (void)allSourcesWithCompletion:(void (^)(NSArray *, NSError *))arg1;
- (void)hasSourceWithBundleIdentifier:(NSString *)arg1 completion:(void (^)(_Bool, NSError *))arg2;
- (void)closeTransactionWithDataType:(HKObjectType *)arg1 anchor:(NSNumber *)arg2 ackTime:(NSNumber *)arg3 completion:(void (^)(_Bool, NSError *))arg4;
- (void)setBackgroundDeliveryFrequency:(long long)arg1 forDataType:(HKObjectType *)arg2 handler:(void (^)(_Bool, NSError *))arg3;
- (void)addSamples:(NSArray *)arg1 toWorkout:(HKWorkout *)arg2 completion:(void (^)(_Bool, NSError *))arg3;
- (void)deleteDataObjects:(NSArray *)arg1 handler:(void (^)(_Bool, NSError *))arg2;
- (void)saveDataObjects:(NSArray *)arg1 handler:(void (^)(_Bool, NSError *))arg2;
- (void)startCorrelationQuery:(NSUUID *)arg1 correlationType:(HKCorrelationType *)arg2 correlationFilter:(_HKFilter *)arg3 sampleFilters:(NSDictionary *)arg4 client:(id)arg5 handler:(void (^)(id, _Bool, NSError *))arg6;
- (void)startObserverQuery:(NSUUID *)arg1 sampleType:(HKSampleType *)arg2 filter:(_HKFilter *)arg3 client:(id)arg4 handler:(void (^)(id, _Bool, NSError *))arg5;
- (void)startAnchoredObjectQuery:(NSUUID *)arg1 sampleType:(HKSampleType *)arg2 filter:(_HKFilter *)arg3 anchor:(NSNumber *)arg4 limit:(unsigned long long)arg5 client:(id)arg6 handler:(void (^)(id, _Bool, NSError *))arg7;
- (void)startStatisticsCollectionQuery:(NSUUID *)arg1 sampleType:(HKSampleType *)arg2 filter:(_HKFilter *)arg3 anchorDate:(NSDate *)arg4 statisticsOptions:(unsigned long long)arg5 intervalComponents:(NSDateComponents *)arg6 shouldListenForUpdates:(_Bool)arg7 client:(id)arg8 handler:(void (^)(id, _Bool, NSError *))arg9;
- (void)startStatisticsQuery:(NSUUID *)arg1 sampleType:(HKSampleType *)arg2 filter:(_HKFilter *)arg3 statisticsOptions:(unsigned long long)arg4 client:(id)arg5 handler:(void (^)(id, _Bool, NSError *))arg6;
- (void)startSourcesQuery:(NSUUID *)arg1 sampleType:(HKSampleType *)arg2 filter:(_HKFilter *)arg3 client:(id)arg4 handler:(void (^)(id, _Bool, NSError *))arg5;
- (void)startSampleQuery:(NSUUID *)arg1 sampleType:(HKSampleType *)arg2 filter:(_HKFilter *)arg3 maxResults:(unsigned long long)arg4 sortDescriptors:(NSArray *)arg5 client:(id)arg6 handler:(void (^)(id, _Bool, NSError *))arg7;
- (void)endAuthorizationDelegateTransactionWithError:(NSError *)arg1;
- (void)beginAuthorizationDelegateTransactionWithSessionIdentifier:(NSUUID *)arg1 handler:(void (^)(HKSource *, NSError *))arg2;
- (void)resetAuthorizationStatusForBundleIdentifier:(NSString *)arg1 completion:(void (^)(_Bool, NSError *))arg2;
- (void)setRequestedAuthorizationForBundleIdentifier:(NSString *)arg1 shareTypes:(NSSet *)arg2 readTypes:(NSSet *)arg3 completion:(void (^)(_Bool, NSError *))arg4;
- (void)setAuthorizationStatuses:(NSDictionary *)arg1 forBundleIdentifier:(NSString *)arg2 completion:(void (^)(_Bool, NSError *))arg3;
- (void)allAuthorizationRecordsForType:(HKObjectType *)arg1 completion:(void (^)(NSDictionary *, NSError *))arg2;
- (void)allAuthorizationRecordsForBundleIdentifier:(NSString *)arg1 completion:(void (^)(NSDictionary *, NSError *))arg2;
- (void)requestAuthorizationToShareTypes:(NSSet *)arg1 readTypes:(NSSet *)arg2 shouldPrompt:(_Bool)arg3 completion:(void (^)(_Bool, NSError *))arg4;
- (void)authorizationStatusForType:(HKObjectType *)arg1 completion:(void (^)(NSNumber *, NSError *))arg2;
@end

@protocol HKAnchoredObjectQueryClient <HKQueryClient>
- (void)deliverDataObjects:(NSArray *)arg1 withAnchor:(NSNumber *)arg2 queryUUID:(NSUUID *)arg3;
@end

@protocol HKClientInterface <NSObject>
- (void)deliverSessionCharacteristics:(NSArray *)arg1 forService:(NSString *)arg2 toClient:(unsigned long long)arg3 withError:(NSError *)arg4;
- (void)deliverSessionTransitoryData:(NSDictionary *)arg1 toClient:(unsigned long long)arg2 withError:(NSError *)arg3;
- (void)deliverSessionHealthServiceStatus:(long long)arg1 toClient:(unsigned long long)arg2 finished:(_Bool)arg3 withError:(NSError *)arg4;
- (void)deliverDiscoveryHealthService:(HKHealthService *)arg1 toClient:(unsigned long long)arg2 finished:(_Bool)arg3 withError:(NSError *)arg4;
- (void)deliverBluetoothStatus:(long long)arg1 withError:(NSError *)arg2;
- (void)presentAuthorizationWithSessionIdentifier:(NSUUID *)arg1 completion:(void (^)(_Bool, NSError *))arg2;
@end

@protocol HKCorrelationQueryClient <HKQueryClient>
- (void)deliverCorrelations:(NSArray *)arg1 forQuery:(NSUUID *)arg2;
@end

@protocol HKObserverQueryClient <HKQueryClient>
- (void)dataUpdatedInDatabaseWithAnchor:(NSNumber *)arg1 query:(NSUUID *)arg2;
@end

@protocol HKQueryClient <NSObject>
- (void)deliverError:(NSError *)arg1 forQuery:(NSUUID *)arg2;
@end

@protocol HKQueryDelegate <NSObject>
- (void)queryDidFinishExecuting:(HKQuery *)arg1;
@end

@protocol HKQueryServer <NSObject>
- (void)deactivateServer;
@end

@protocol HKRestrictionInterface <NSObject>
- (void)isHealthAllowedWithReply:(void (^)(_Bool))arg1;
@end

@protocol HKSampleQueryClient <HKQueryClient>
- (void)deliverResultsBatch:(NSArray *)arg1 final:(_Bool)arg2 error:(NSError *)arg3 forQueryUUID:(NSUUID *)arg4 confirmationBlock:(void (^)(_Bool))arg5;
@end

@protocol HKSourceQueryClient <HKQueryClient>
- (void)deliverSources:(NSSet *)arg1 queryUUID:(NSUUID *)arg2;
@end

@protocol HKStatisticsCollectionQueryClient <HKQueryClient>
- (void)deliverResetStatisticsObjects:(NSArray *)arg1 forQuery:(NSUUID *)arg2;
- (void)deliverUpdatedStatistics:(HKStatistics *)arg1 anchor:(NSNumber *)arg2 forQuery:(NSUUID *)arg3;
- (void)deliverInitialStatisticsObjects:(NSArray *)arg1 anchor:(NSNumber *)arg2 forQuery:(NSUUID *)arg3;
@end

@protocol HKStatisticsQueryClient <HKQueryClient>
- (void)deliverStatistics:(HKStatistics *)arg1 forQuery:(NSUUID *)arg2;
@end

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSSecureCoding <NSCoding>
+ (_Bool)supportsSecureCoding;
@end

@protocol _HKAuthorizationPresentationController <NSObject>
- (void)presentWithSessionIdentifier:(NSUUID *)arg1 completion:(void (^)(_Bool, NSError *))arg2;
@end

@protocol _HKFactor <NSObject>
- (NSString *)unitString;
@end

@interface HKQuery : NSObject <HKQueryClient>
{
    HKSampleType *_sampleType;
    NSPredicate *_predicate;
    NSObject<OS_dispatch_queue> *_activationQueue;
    _Bool _receivedInitialResults;
    _Bool _hasBeenExecuted;
    NSUUID *_activationUUID;
    id <HKQueryDelegate> _delegate;
    _HKFilter *_filter;
    NSObject<OS_dispatch_queue> *_clientQueue;
    id <NSXPCProxyCreating> _serverProxy;
}

+ (void)_configureClientInterface:(id)arg1;
+ (id)_serverInterfaceProtocol;
+ (id)_clientInterfaceProtocol;
+ (id)serverInterface;
+ (id)clientInterface;
+ (id)predicateForWorkoutsWithOperatorType:(unsigned long long)arg1 totalDistance:(id)arg2;
+ (id)predicateForWorkoutsWithOperatorType:(unsigned long long)arg1 totalEnergyBurned:(id)arg2;
+ (id)predicateForWorkoutsWithOperatorType:(unsigned long long)arg1 duration:(double)arg2;
+ (id)predicateForWorkoutsWithWorkoutActivityType:(unsigned long long)arg1;
+ (id)predicateForCategorySamplesWithOperatorType:(unsigned long long)arg1 value:(long long)arg2;
+ (id)predicateForQuantitySamplesWithOperatorType:(unsigned long long)arg1 quantity:(id)arg2;
+ (id)predicateForObjectsFromWorkout:(id)arg1;
+ (id)predicateForObjectsWithNoCorrelation;
+ (id)predicateForObjectsWithUUIDs:(id)arg1;
+ (id)predicateForObjectWithUUID:(id)arg1;
+ (id)predicateForObjectsFromSources:(id)arg1;
+ (id)predicateForObjectsFromSource:(id)arg1;
+ (id)predicateForSamplesWithStartDate:(id)arg1 endDate:(id)arg2 options:(unsigned long long)arg3;
+ (id)predicateForObjectsWithMetadataKey:(id)arg1 operatorType:(unsigned long long)arg2 value:(id)arg3;
+ (id)predicateForObjectsWithMetadataKey:(id)arg1 allowedValues:(id)arg2;
+ (id)predicateForObjectsWithMetadataKey:(id)arg1;
@property(retain, nonatomic) id <NSXPCProxyCreating> serverProxy; // @synthesize serverProxy=_serverProxy;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *clientQueue; // @synthesize clientQueue=_clientQueue;
@property(readonly, nonatomic) _Bool hasBeenExecuted; // @synthesize hasBeenExecuted=_hasBeenExecuted;
@property(retain, nonatomic, getter=_filter) _HKFilter *filter; // @synthesize filter=_filter;
@property(readonly, nonatomic, getter=_hasReceivedInitialResults) _Bool receivedInitialResults; // @synthesize receivedInitialResults=_receivedInitialResults;
@property(readonly, nonatomic) __weak id <HKQueryDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) NSUUID *activationUUID; // @synthesize activationUUID=_activationUUID;
- (void).cxx_destruct;
@property(readonly) NSPredicate *predicate;
@property(readonly) HKSampleType *sampleType;
- (void)deliverError:(id)arg1 forQuery:(id)arg2;
- (CDUnknownBlockType)_queue_errorHandler;
- (_Bool)_queue_shouldStayAliveAfterInitialResults;
- (void)_queue_validate;
- (void)_queue_cleanupAfterDeactivation;
- (void)_queue_requestServerProxyWithUUID:(id)arg1 connection:(id)arg2 handler:(CDUnknownBlockType)arg3;
- (void)_queue_deactivate;
- (void)_queue_deliverErrorAndDeactivate:(id)arg1;
- (void)_queue_activateWithConnection:(id)arg1 isReactivation:(_Bool)arg2 withCompletion:(CDUnknownBlockType)arg3;
- (id)_predicateFilterClasses;
- (void)_throwInvalidArgumentExceptionIfHasBeenExecuted:(SEL)arg1;
- (void)_client_receivedInitialResults;
- (void)_dispatchAsyncToResourceQueue:(CDUnknownBlockType)arg1;
- (void)_dispatchSyncToResourceQueue:(CDUnknownBlockType)arg1;
- (void)_dispatchToClientForUUID:(id)arg1 block:(CDUnknownBlockType)arg2;
- (void)deactivate;
- (void)reactivateWithConnection:(id)arg1;
- (void)activateWithClientQueue:(id)arg1 connection:(id)arg2 delegate:(id)arg3 withCompletion:(CDUnknownBlockType)arg4;
- (id)_initWithDataType:(id)arg1 predicate:(id)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface HKAnchoredObjectQuery : HKQuery <HKAnchoredObjectQueryClient>
{
    CDUnknownBlockType _completionHandler;
    NSNumber *_anchor;
    unsigned long long _limit;
}

+ (void)_configureClientInterface:(id)arg1;
+ (id)_clientInterfaceProtocol;
@property(nonatomic) unsigned long long limit; // @synthesize limit=_limit;
@property(retain, nonatomic) NSNumber *anchor; // @synthesize anchor=_anchor;
@property(readonly, nonatomic) CDUnknownBlockType completionHandler; // @synthesize completionHandler=_completionHandler;
- (void).cxx_destruct;
- (CDUnknownBlockType)_queue_errorHandler;
- (void)_queue_validate;
- (void)_queue_cleanupAfterDeactivation;
- (void)_queue_requestServerProxyWithUUID:(id)arg1 connection:(id)arg2 handler:(CDUnknownBlockType)arg3;
- (void)deliverDataObjects:(id)arg1 withAnchor:(id)arg2 queryUUID:(id)arg3;
- (id)initWithType:(id)arg1 predicate:(id)arg2 anchor:(unsigned long long)arg3 limit:(unsigned long long)arg4 completionHandler:(CDUnknownBlockType)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface HKUnit : NSObject <NSSecureCoding>
{
    long long _reduceToken;
    _HKFactorization *_dimensionReduction;
    _HKFactorization *_baseUnitReduction;
    double _reducedProportionalSize;
    double _scaleOffset;
}

+ (_Bool)supportsSecureCoding;
+ (_Bool)_isValidUnitString:(id)arg1;
+ (id)_nullUnit;
+ (long long)energyFormatterUnitFromUnit:(id)arg1;
+ (id)unitFromEnergyFormatterUnit:(long long)arg1;
+ (long long)lengthFormatterUnitFromUnit:(id)arg1;
+ (id)unitFromLengthFormatterUnit:(long long)arg1;
+ (long long)massFormatterUnitFromUnit:(id)arg1;
+ (id)unitFromMassFormatterUnit:(long long)arg1;
+ (id)unitFromString:(id)arg1;
+ (id)percentUnit;
+ (id)countUnit;
+ (id)siemenUnit;
+ (id)siemenUnitWithMetricPrefix:(long long)arg1;
+ (id)degreeFahrenheitUnit;
+ (id)degreeCelsiusUnit;
+ (id)kelvinUnit;
+ (id)kilocalorieUnit;
+ (id)calorieUnit;
+ (id)kilojoulesUnit;
+ (id)jouleUnit;
+ (id)jouleUnitWithMetricPrefix:(long long)arg1;
+ (id)dayUnit;
+ (id)hourUnit;
+ (id)minuteUnit;
+ (id)milliseconds;
+ (id)secondUnit;
+ (id)secondUnitWithMetricPrefix:(long long)arg1;
+ (id)atmosphereUnit;
+ (id)centimeterOfWaterUnit;
+ (id)millimeterOfMercuryUnit;
+ (id)pascalUnit;
+ (id)pascalUnitWithMetricPrefix:(long long)arg1;
+ (id)pintImperialUnit;
+ (id)pintUSUnit;
+ (id)fluidOunceImperialUnit;
+ (id)fluidOunceUSUnit;
+ (id)literUnit;
+ (id)literUnitWithMetricPrefix:(long long)arg1;
+ (id)inchUnit;
+ (id)footUnit;
+ (id)mileUnit;
+ (id)meterUnit;
+ (id)meterUnitWithMetricPrefix:(long long)arg1;
+ (id)_moles;
+ (id)moleUnitWithMolarMass:(double)arg1;
+ (id)moleUnitWithMetricPrefix:(long long)arg1 molarMass:(double)arg2;
+ (id)stoneUnit;
+ (id)ounceUnit;
+ (id)poundUnit;
+ (id)gramUnit;
+ (id)gramUnitWithMetricPrefix:(long long)arg1;
+ (id)_prefixStringForMetricPrefix:(long long)arg1;
+ (id)_foodEnergyUnitForLocale:(id)arg1;
+ (id)_temperatureUnitForLocale:(id)arg1;
+ (id)_personMassUnitForLocale:(id)arg1;
+ (id)_distanceUnitForLocale:(id)arg1;
+ (id)_heightUnitForLocale:(id)arg1;
@property(readonly, nonatomic) double scaleOffset; // @synthesize scaleOffset=_scaleOffset;
- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (double)_reducedProportionalSize;
- (id)_baseUnitReduction;
- (id)_baseUnitReductionAndProportionalSize:(out double *)arg1 withCycleSet:(id)arg2;
- (void)_reduceIfNecessaryWithCycleSet:(id)arg1;
- (id)_computeBaseUnitReductionAndProportionalSize:(out double *)arg1 withCycleSet:(id)arg2;
@property(readonly, nonatomic) _HKFactorization *_baseUnits;
- (id)_dimensionReduction;
- (_Bool)_isCompatibleWithDimension:(id)arg1;
- (_Bool)_isCompatibleWithUnit:(id)arg1;
- (double)_valueByConvertingValue:(double)arg1 toUnit:(id)arg2;
- (_Bool)isNull;
- (id)description;
- (_Bool)isEqual:(id)arg1;
@property(readonly, nonatomic) _HKDimension *dimension;
@property(readonly) NSString *unitString;
- (id)reciprocalUnit;
- (id)unitRaisedToPower:(long long)arg1;
- (id)unitDividedByUnit:(id)arg1;
- (id)unitMultipliedByUnit:(id)arg1;
- (id)_init;
- (id)init;

@end

@interface HKBaseUnit : HKUnit <_HKFactor>
{
    NSString *_unitString;
    NSString *_prefix;
    NSString *_root;
    _Bool _uniqued;
    double _proportionalSize;
}

+ (_Bool)supportsSecureCoding;
+ (id)_rootUnitWithDefinition:(CDStruct_875ffba5)arg1;
+ (id)_uniquedUnitWithPrefix:(id)arg1 conversionConstant:(id)arg2 rootUnit:(id)arg3;
+ (id)_uniquedUnitWithPrefix:(id)arg1 rootUnit:(id)arg2;
+ (id)_uniquedRootUnitFromDefinition:(CDStruct_875ffba5)arg1;
+ (id)_uniquedRootUnit:(id)arg1;
+ (id)unitFromString:(id)arg1;
@property(readonly, nonatomic) double proportionalSize; // @synthesize proportionalSize=_proportionalSize;
- (void).cxx_destruct;
- (id)awakeAfterUsingCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)_unitByPrefixing:(id)arg1 withConversionConstant:(id)arg2;
- (id)_initWithUnitString:(id)arg1 proportionalSize:(double)arg2 scaleOffset:(double)arg3;
- (id)_computeBaseUnitReductionAndProportionalSize:(out double *)arg1 withCycleSet:(id)arg2;
- (id)_baseUnits;
- (id)unitString;
@property(readonly) unsigned long long hash;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic) _HKBaseDimension *dimension;
@property(readonly) Class superclass;

@end

@interface HKBiologicalSexObject : NSObject
{
    long long _biologicalSex;
}

@property(readonly) long long biologicalSex; // @synthesize biologicalSex=_biologicalSex;
- (id)_initWithBiologicalSex:(long long)arg1;

@end

@interface HKBloodTypeObject : NSObject
{
    long long _bloodType;
}

@property(readonly) long long bloodType; // @synthesize bloodType=_bloodType;
- (id)_initWithBloodType:(long long)arg1;

@end

@interface HKObject : NSObject <NSSecureCoding>
{
    NSUUID *_UUID;
    HKSource *_source;
    NSDictionary *_metadata;
    NSString *_sourceBundleIdentifier;
    NSDate *_creationDate;
}

+ (_Bool)supportsSecureCoding;
+ (id)_newDataObjectWithMetadata:(id)arg1 config:(CDUnknownBlockType)arg2;
@property(copy, nonatomic, getter=_creationDate, setter=_setCreationDate:) NSDate *creationDate; // @synthesize creationDate=_creationDate;
@property(copy, nonatomic, getter=_sourceBundleIdentifier, setter=_setSourceBundleIdentifier:) NSString *sourceBundleIdentifier; // @synthesize sourceBundleIdentifier=_sourceBundleIdentifier;
- (void).cxx_destruct;
- (void)_setSource:(id)arg1;
@property(readonly) HKSource *source;
- (void)_setMetadata:(id)arg1;
@property(readonly, copy) NSDictionary *metadata;
- (void)_setUUID:(id)arg1;
@property(readonly) NSUUID *UUID;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)_valueDescription;
- (id)description;
- (id)_validateConfiguration;
- (_Bool)validateForSaving:(id *)arg1;
- (void)_validateForCreation;
- (id)_init;
- (id)init;

@end

@interface HKSample : HKObject
{
    HKSampleType *_sampleType;
    NSDate *_startDate;
    NSDate *_endDate;
}

+ (_Bool)supportsSecureCoding;
+ (id)_newSampleWithType:(id)arg1 startDate:(id)arg2 endDate:(id)arg3 metadata:(id)arg4 config:(CDUnknownBlockType)arg5;
- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)description;
- (void)_setEndDate:(id)arg1;
@property(readonly) NSDate *endDate;
- (void)_setStartDate:(id)arg1;
@property(readonly) NSDate *startDate;
@property(readonly) HKSampleType *sampleType;
- (void)_setSampleType:(id)arg1;
- (id)_validateConfiguration;

@end

@interface HKCategorySample : HKSample
{
    long long _value;
}

+ (_Bool)supportsSecureCoding;
+ (id)categorySampleWithType:(id)arg1 value:(long long)arg2 startDate:(id)arg3 endDate:(id)arg4;
+ (id)categorySampleWithType:(id)arg1 value:(long long)arg2 startDate:(id)arg3 endDate:(id)arg4 metadata:(id)arg5;
- (void)_setValue:(long long)arg1;
@property(readonly) long long value;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)_valueDescription;
- (id)_validateConfiguration;
@property(readonly) HKCategoryType *categoryType;
- (id)init;

@end

@interface HKObjectType : NSObject <NSSecureCoding, NSCopying>
{
    NSString *_identifier;
    long long _code;
    Class _dataObjectClass;
}

+ (_Bool)supportsSecureCoding;
+ (id)workoutType;
+ (id)correlationTypeForIdentifier:(id)arg1;
+ (id)characteristicTypeForIdentifier:(id)arg1;
+ (id)categoryTypeForIdentifier:(id)arg1;
+ (id)quantityTypeForIdentifier:(id)arg1;
+ (id)dataTypeWithCode:(long long)arg1;
+ (void)_insertCode:(long long)arg1 forIdentifier:(id)arg2;
+ (id)_allDataTypeIdentifiers;
+ (_Bool)_allowAuthorizationForSharing:(_Bool)arg1 types:(id)arg2 entitlements:(id)arg3 disallowedTypes:(id)arg4;
+ (_Bool)_allowAuthorizationForReadingWithTypes:(id)arg1 entitlements:(id)arg2 disallowedTypes:(id)arg3;
+ (_Bool)_allowAuthorizationForSharingWithTypes:(id)arg1 entitlements:(id)arg2 disallowedTypes:(id)arg3;
- (void).cxx_destruct;
- (id)awakeAfterUsingCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (_Bool)_requiresAuthorization;
@property(readonly, nonatomic) Class dataObjectClass;
@property(readonly, nonatomic) long long code;
@property(readonly) NSString *identifier;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)_initWithDefinition:(CDStruct_6b208136 *)arg1;
- (id)init;
- (_Bool)_allowAuthorizationForReadingWithEntitlements:(id)arg1;
- (_Bool)_allowAuthorizationForSharingWithEntitlements:(id)arg1;

@end

@interface HKSampleType : HKObjectType
{
}

@end

@interface HKCategoryType : HKSampleType
{
}

+ (void)_insertCode:(long long)arg1 forIdentifier:(id)arg2;
- (long long)_defaultValue;
- (_Bool)_acceptsValue:(long long)arg1;

@end

@interface HKCharacteristicType : HKObjectType
{
}

+ (void)_insertCode:(long long)arg1 forIdentifier:(id)arg2;

@end

@interface HKConductanceUnit : HKBaseUnit
{
}

- (id)dimension;

@end

@interface HKCorrelation : HKSample <NSSecureCoding>
{
    NSMutableDictionary *_objects;
}

+ (_Bool)supportsSecureCoding;
+ (id)correlationWithType:(id)arg1 startDate:(id)arg2 endDate:(id)arg3 objects:(id)arg4 metadata:(id)arg5;
+ (id)correlationWithType:(id)arg1 startDate:(id)arg2 endDate:(id)arg3 objects:(id)arg4;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)_validateConfiguration;
- (id)_allTypes;
- (void)_removeAllCorrelatedObjects;
- (_Bool)_containsObjects;
- (void)_filterCorrelatedObjectsWithFilterDictionary:(id)arg1;
- (id)objectsForType:(id)arg1;
- (void)_addCorrelatedObjects:(id)arg1;
- (void)_addCorrelatedObject:(id)arg1;
@property(readonly) HKCorrelationType *correlationType;
- (id)description;
@property(readonly, copy) NSSet *objects;
- (id)_init;

// Remaining properties
@property(readonly, getter=_UUID) NSUUID *UUID;

@end

@interface HKCorrelationQuery : HKQuery <HKCorrelationQueryClient>
{
    NSDictionary *_samplePredicates;
    NSDictionary *_filterDictionary;
    CDUnknownBlockType _completionHandler;
}

+ (void)_configureClientInterface:(id)arg1;
+ (id)_clientInterfaceProtocol;
@property(readonly, nonatomic) CDUnknownBlockType completionHandler; // @synthesize completionHandler=_completionHandler;
- (void).cxx_destruct;
- (void)_queue_cleanupAfterDeactivation;
- (id)_predicateFilterClasses;
- (CDUnknownBlockType)_queue_errorHandler;
- (void)_queue_validate;
- (void)_queue_requestServerProxyWithUUID:(id)arg1 connection:(id)arg2 handler:(CDUnknownBlockType)arg3;
- (void)deliverCorrelations:(id)arg1 forQuery:(id)arg2;
@property(readonly, copy) HKCorrelationType *correlationType;
@property(readonly, copy) NSDictionary *samplePredicates;
- (id)initWithType:(id)arg1 predicate:(id)arg2 samplePredicates:(id)arg3 completion:(CDUnknownBlockType)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface HKCorrelationType : HKSampleType
{
}

+ (void)_insertCode:(long long)arg1 forIdentifier:(id)arg2;
- (_Bool)_requiresAuthorization;

@end

@interface HKEnergyUnit : HKBaseUnit
{
}

- (id)dimension;

@end

@interface HKHealthService : NSObject <NSCopying, NSSecureCoding>
{
    long long _type;
    NSUUID *_identifier;
    NSString *_name;
    double _lastConnection;
    NSString *_serviceId;
}

+ (_Bool)supportsSecureCoding;
@property(copy, nonatomic) NSString *serviceId; // @synthesize serviceId=_serviceId;
@property(nonatomic) double lastConnection; // @synthesize lastConnection=_lastConnection;
@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
@property(readonly, nonatomic) NSUUID *identifier; // @synthesize identifier=_identifier;
@property(readonly, nonatomic) long long type; // @synthesize type=_type;
- (void).cxx_destruct;
- (id)_localizedHealthServiceType;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)_initWithType:(long long)arg1 identifier:(id)arg2 name:(id)arg3 serviceId:(id)arg4;
- (id)initUnknownServiceWithIdentifier:(id)arg1 name:(id)arg2 serviceId:(id)arg3;
- (id)initWithType:(long long)arg1 identifier:(id)arg2 name:(id)arg3;
- (id)init;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface HKHealthServiceDiscovery : NSObject
{
    long long _serviceType;
    unsigned long long _discoveryIdentifier;
    CDUnknownBlockType _discoveryHandler;
}

@property(copy, nonatomic) CDUnknownBlockType discoveryHandler; // @synthesize discoveryHandler=_discoveryHandler;
@property(nonatomic) unsigned long long discoveryIdentifier; // @synthesize discoveryIdentifier=_discoveryIdentifier;
@property(readonly, nonatomic) long long serviceType; // @synthesize serviceType=_serviceType;
- (void).cxx_destruct;
- (id)initForAllTypes;
- (id)initWithType:(long long)arg1;

@end

@interface HKHealthServiceSession : NSObject
{
    NSArray *_interestedTransitoryKeys;
    CDUnknownBlockType _transitoryDataHandler;
    HKHealthService *_service;
    NSLock *_propertyLock;
    unsigned long long _sessionIdentifier;
    CDUnknownBlockType _sessionHandler;
    CDUnknownBlockType _characteristicsHandler;
}

@property(copy, nonatomic) CDUnknownBlockType characteristicsHandler; // @synthesize characteristicsHandler=_characteristicsHandler;
@property(copy, nonatomic) CDUnknownBlockType sessionHandler; // @synthesize sessionHandler=_sessionHandler;
@property(nonatomic) unsigned long long sessionIdentifier; // @synthesize sessionIdentifier=_sessionIdentifier;
@property(retain, nonatomic) NSLock *propertyLock; // @synthesize propertyLock=_propertyLock;
@property(readonly, nonatomic) HKHealthService *service; // @synthesize service=_service;
- (void).cxx_destruct;
@property(copy) CDUnknownBlockType transitoryDataHandler;
@property(retain) NSArray *interestedTransitoryKeys;
- (id)initWithService:(id)arg1;

@end

@interface HKHealthStore : NSObject <HKClientInterface, HKQueryDelegate>
{
    NSXPCConnection *_connection;
    _HKHealthStoreProxy *_connectionProxy;
    NSObject<OS_dispatch_queue> *_clientQueue;
    NSObject<OS_dispatch_queue> *_queryQueue;
    NSMutableSet *_queries;
    NSMutableDictionary *_discoveries;
    NSMutableSet *_discoveriesEnded;
    NSMutableDictionary *_sessions;
    NSMutableSet *_sessionsEnded;
    id <_HKAuthorizationPresentationController> _authorizationPresentationController;
    CDUnknownBlockType _authorizationDelegateTransactionErrorHandler;
    CDUnknownBlockType _bluetoothStatusHandler;
}

+ (_Bool)isHealthDataAvailable;
@property(copy, nonatomic) CDUnknownBlockType bluetoothStatusHandler; // @synthesize bluetoothStatusHandler=_bluetoothStatusHandler;
@property(readonly, nonatomic, getter=_queries) NSSet *queries; // @synthesize queries=_queries;
- (void).cxx_destruct;
- (void)setDataCollectionOptionForType:(id)arg1 key:(id)arg2 value:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)deleteMedicalIDDataWithCompletion:(CDUnknownBlockType)arg1;
- (void)deleteMedicalIDData;
- (void)updateMedicalIDData:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)updateMedicalIDData:(id)arg1;
- (void)fetchMedicalIDDataCreateIfNecessary:(_Bool)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)fetchMedicalIDDataWithCompletion:(CDUnknownBlockType)arg1;
- (id)_remoteObjectProxyWithActionCompletion:(CDUnknownBlockType)arg1;
- (void)diagnosticsForKey:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)stopRecordingDataWithCompletion:(CDUnknownBlockType)arg1;
- (void)startRecordingDataToFile:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)stopReplayingDataWithCompletion:(CDUnknownBlockType)arg1;
- (void)startReplayingDataFromFile:(id)arg1 repeat:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)stopFakingDataWithCompletion:(CDUnknownBlockType)arg1;
- (void)startFakingDataWithActivity:(long long)arg1 speed:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)performMigrationWithCompletion:(CDUnknownBlockType)arg1;
- (void)getDatabaseUsageInBytesWithCompletion:(CDUnknownBlockType)arg1;
- (void)deliverSessionCharacteristics:(id)arg1 forService:(id)arg2 toClient:(unsigned long long)arg3 withError:(id)arg4;
- (void)deliverSessionTransitoryData:(id)arg1 toClient:(unsigned long long)arg2 withError:(id)arg3;
- (void)deliverSessionHealthServiceStatus:(long long)arg1 toClient:(unsigned long long)arg2 finished:(_Bool)arg3 withError:(id)arg4;
- (void)deliverDiscoveryHealthService:(id)arg1 toClient:(unsigned long long)arg2 finished:(_Bool)arg3 withError:(id)arg4;
- (void)deliverBluetoothStatus:(long long)arg1 withError:(id)arg2;
- (void)_addEndedSession:(id)arg1;
- (void)_addEndedDiscovery:(id)arg1;
- (void)performHealthServiceOperation:(id)arg1 onSession:(id)arg2 withParameters:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)getHealthServiceProperty:(id)arg1 forSession:(id)arg2 withHandler:(CDUnknownBlockType)arg3;
- (void)unregisterPeripheralIdentifier:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)registerPeripheralIdentifier:(id)arg1 name:(id)arg2 services:(id)arg3 withCompletion:(CDUnknownBlockType)arg4;
- (void)removeHealthServicePairing:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)addHealthServicePairing:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)healthServicePairingsWithHandler:(CDUnknownBlockType)arg1;
- (void)previousHealthServicePairingsWithHandler:(CDUnknownBlockType)arg1;
- (id)activeHealthServiceSessions;
- (void)endHealthServiceSession:(id)arg1;
- (void)startHealthServiceSession:(id)arg1 withHandler:(CDUnknownBlockType)arg2;
- (id)activeHealthServiceDiscoveries;
- (void)endHealthServiceDiscovery:(id)arg1;
- (void)_startHealthServiceExtendedDiscovery:(id)arg1 withHandler:(CDUnknownBlockType)arg2;
- (void)startAllHealthServicesDiscoveryWithHandler:(CDUnknownBlockType)arg1;
- (void)startHealthServiceDiscovery:(id)arg1 withHandler:(CDUnknownBlockType)arg2;
- (void)endBluetoothStatusUpdates;
- (void)startBluetoothStatusUpdates:(CDUnknownBlockType)arg1;
- (void)removeDefaultForKey:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)getDefaultValueForKey:(id)arg1 withHandler:(CDUnknownBlockType)arg2;
- (void)setDefaultValue:(id)arg1 forKey:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)dealloc;
- (void)_handleInterruption;
- (id)_serverProxyForSelector:(SEL)arg1 sanitizedErrorHandler:(CDUnknownBlockType)arg2;
- (void)_closeTransactionWithType:(id)arg1 anchor:(id)arg2 ackTime:(id)arg3;
- (void)disableAllBackgroundDeliveryWithCompletion:(CDUnknownBlockType)arg1;
- (void)disableBackgroundDeliveryForType:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)enableBackgroundDeliveryForType:(id)arg1 frequency:(long long)arg2 withCompletion:(CDUnknownBlockType)arg3;
- (void)_setBackgroundDeliveryFrequencyDataType:(id)arg1 frequency:(long long)arg2 withCompletion:(CDUnknownBlockType)arg3;
- (void)queryDidFinishExecuting:(id)arg1;
- (void)addSamples:(id)arg1 toWorkout:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (_Bool)_setCharacteristic:(id)arg1 forDataType:(id)arg2 error:(id *)arg3;
- (void)_fetchCharacteristicForDataTypeSynchronous:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (_Bool)_setBloodType:(long long)arg1 error:(id *)arg2;
- (id)bloodTypeWithError:(id *)arg1;
- (_Bool)_setBiologicalSex:(long long)arg1 error:(id *)arg2;
- (id)biologicalSexWithError:(id *)arg1;
- (_Bool)_setDateOfBirth:(id)arg1 error:(id *)arg2;
- (id)dateOfBirthWithError:(id *)arg1;
- (void)stopQuery:(id)arg1;
- (void)executeQuery:(id)arg1;
- (void)_deleteObjects:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)deleteObject:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)saveObjects:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)saveObject:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)presentAuthorizationWithSessionIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_clientQueue_invokeAuthorizationDelegateTransactionErrorHandlerWithError:(id)arg1;
- (void)endAuthorizationDelegateTransactionWithError:(id)arg1;
- (void)beginAuthorizationDelegateTransactionWithSessionIdentifier:(id)arg1 sourceHandler:(CDUnknownBlockType)arg2 errorHandler:(CDUnknownBlockType)arg3;
- (void)resetAuthorizationStatusForBundleIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)setRequestedAuthorizationForBundleIdentifier:(id)arg1 shareTypes:(id)arg2 readTypes:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)setAuthorizationStatuses:(id)arg1 forBundleIdentifier:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)allAuthorizationRecordsForType:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)allAuthorizationRecordsForBundleIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_throwIfAuthorizationDisallowedForSharing:(_Bool)arg1 types:(id)arg2;
- (void)requestAuthorizationToShareTypes:(id)arg1 readTypes:(id)arg2 shouldPrompt:(_Bool)arg3 completion:(CDUnknownBlockType)arg4;
- (void)requestAuthorizationToShareTypes:(id)arg1 readTypes:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (long long)authorizationStatusForType:(id)arg1;
- (void)deleteSourceWithBundleIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)deleteAllSamplesWithTypes:(id)arg1 sourceBundleIdentifier:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)setOrderedSources:(id)arg1 forObjectType:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)orderedSourcesForObjectType:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)allSourcesWithCompletion:(CDUnknownBlockType)arg1;
- (void)hasSourceWithBundleIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)initWithListenerEndpoint:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface HKLengthUnit : HKBaseUnit
{
}

- (id)dimension;

@end

@interface HKMassUnit : HKBaseUnit
{
}

- (id)dimension;

@end

@interface HKObserverQuery : HKQuery
{
    CDUnknownBlockType _updateHandler;
}

+ (void)_configureClientInterface:(id)arg1;
+ (id)_clientInterfaceProtocol;
@property(readonly, nonatomic) CDUnknownBlockType updateHandler; // @synthesize updateHandler=_updateHandler;
- (void).cxx_destruct;
- (CDUnknownBlockType)_queue_errorHandler;
- (_Bool)_queue_shouldStayAliveAfterInitialResults;
- (void)_queue_validate;
- (void)_queue_cleanupAfterDeactivation;
- (void)_queue_requestServerProxyWithUUID:(id)arg1 connection:(id)arg2 handler:(CDUnknownBlockType)arg3;
- (void)dataUpdatedInDatabaseWithAnchor:(id)arg1 query:(id)arg2;
- (id)initWithSampleType:(id)arg1 predicate:(id)arg2 updateHandler:(CDUnknownBlockType)arg3;

@end

@interface HKPressureUnit : HKBaseUnit
{
}

- (id)dimension;

@end

@interface HKQuantity : NSObject <NSSecureCoding, NSCopying>
{
    double _value;
    HKUnit *_unit;
}

+ (_Bool)supportsSecureCoding;
+ (id)quantityWithUnit:(id)arg1 doubleValue:(double)arg2;
@property(readonly, nonatomic, getter=_unit) HKUnit *unit; // @synthesize unit=_unit;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (long long)compare:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)description;
- (_Bool)isCompatibleWithUnit:(id)arg1;
- (double)doubleValueForUnit:(id)arg1;
- (id)_initWithUnit:(id)arg1 doubleValue:(double)arg2;
- (id)init;

@end

@interface HKQuantitySample : HKSample
{
    HKQuantity *_quantity;
}

+ (_Bool)supportsSecureCoding;
+ (id)quantitySampleWithType:(id)arg1 quantity:(id)arg2 startDate:(id)arg3 endDate:(id)arg4;
+ (id)quantitySampleWithType:(id)arg1 quantity:(id)arg2 startDate:(id)arg3 endDate:(id)arg4 metadata:(id)arg5;
- (void).cxx_destruct;
- (void)_setQuantity:(id)arg1;
@property(readonly) HKQuantity *quantity;
@property(readonly) HKQuantityType *quantityType;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)_valueDescription;
- (id)_validateConfiguration;

@end

@interface HKQuantityType : HKSampleType
{
    long long _aggregationStyle;
    NSString *_unitString;
    HKUnit *_canonicalUnit;
    long long _canonicalUnitToken;
}

+ (void)_insertCode:(long long)arg1 forIdentifier:(id)arg2;
- (void).cxx_destruct;
- (void)validateUnitFromString:(id)arg1;
- (void)validateUnit:(id)arg1;
@property(readonly, nonatomic) _HKDimension *dimension;
@property(readonly, nonatomic) HKUnit *canonicalUnit;
@property(readonly) long long aggregationStyle;
- (_Bool)isCompatibleWithUnit:(id)arg1;
- (id)_initWithDefinition:(CDStruct_6b208136 *)arg1;

@end

@interface HKQueryTransaction : NSObject
{
    HKObjectType *_dataType;
    NSNumber *_anchor;
}

- (void).cxx_destruct;
- (void)closeTransaction;
- (id)initWithDataType:(id)arg1 anchor:(id)arg2;

@end

@interface HKSampleQuery : HKQuery
{
    unsigned long long _limit;
    NSArray *_sortDescriptors;
    NSMutableArray *_results;
    CDUnknownBlockType _resultHandler;
}

+ (void)_configureClientInterface:(id)arg1;
+ (id)_clientInterfaceProtocol;
@property(readonly, nonatomic) CDUnknownBlockType resultHandler; // @synthesize resultHandler=_resultHandler;
- (void).cxx_destruct;
- (void)_queue_cleanupAfterDeactivation;
- (void)_queue_validate;
- (CDUnknownBlockType)_queue_errorHandler;
- (void)_queue_requestServerProxyWithUUID:(id)arg1 connection:(id)arg2 handler:(CDUnknownBlockType)arg3;
- (void)deliverResultsBatch:(id)arg1 final:(_Bool)arg2 error:(id)arg3 forQueryUUID:(id)arg4 confirmationBlock:(CDUnknownBlockType)arg5;
@property(readonly, copy) NSArray *sortDescriptors;
@property(readonly) unsigned long long limit;
- (id)initWithSampleType:(id)arg1 predicate:(id)arg2 limit:(unsigned long long)arg3 sortDescriptors:(id)arg4 resultsHandler:(CDUnknownBlockType)arg5;

@end

@interface HKScalarUnit : HKBaseUnit
{
}

- (id)dimension;

@end

@interface HKSource : NSObject <NSSecureCoding, NSCopying>
{
    NSString *_name;
    NSString *_bundleIdentifier;
    _Bool _localDevice;
    NSString *_productType;
    unsigned long long _options;
}

+ (_Bool)supportsSecureCoding;
+ (id)_sourceNameWithRepresentsCurrentDevice:(_Bool)arg1 defaultSource:(_Bool)arg2;
+ (id)_currentSourceProductType:(_Bool)arg1;
+ (id)_sourceBundleIdentifierWithEntitlements:(id)arg1;
+ (_Bool)_representsCurrentDeviceWithBundleIdentifier:(id)arg1;
+ (id)defaultSource;
@property(nonatomic, getter=_options, setter=_setOptions:) unsigned long long options; // @synthesize options=_options;
@property(retain, nonatomic, getter=_productType, setter=_setProductType:) NSString *productType; // @synthesize productType=_productType;
@property(nonatomic, getter=_isLocalDevice, setter=_setLocalDevice:) _Bool localDevice; // @synthesize localDevice=_localDevice;
- (void).cxx_destruct;
- (void)_setBundleIdentifier:(id)arg1;
@property(readonly) NSString *bundleIdentifier;
- (void)_setName:(id)arg1;
@property(readonly) NSString *name;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)_init;
- (id)init;
- (_Bool)_requiresAuthorization;
- (_Bool)_isPreferredSource;
- (_Bool)_isApplication;

@end

@interface HKSourceQuery : HKQuery <HKSourceQueryClient>
{
    CDUnknownBlockType _completionHandler;
}

+ (void)_configureClientInterface:(id)arg1;
+ (id)_clientInterfaceProtocol;
@property(readonly, nonatomic) CDUnknownBlockType completionHandler; // @synthesize completionHandler=_completionHandler;
- (void).cxx_destruct;
- (CDUnknownBlockType)_queue_errorHandler;
- (void)_queue_validate;
- (void)_queue_cleanupAfterDeactivation;
- (void)_queue_requestServerProxyWithUUID:(id)arg1 connection:(id)arg2 handler:(CDUnknownBlockType)arg3;
- (void)deliverSources:(id)arg1 queryUUID:(id)arg2;
- (id)initWithSampleType:(id)arg1 samplePredicate:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface HKStatistics : NSObject <NSSecureCoding, NSCopying>
{
    HKQuantityType *_quantityType;
    NSDate *_startDate;
    NSDate *_endDate;
    NSArray *_sources;
    unsigned long long _dataCount;
    HKQuantity *_averageQuantity;
    HKQuantity *_minimumQuantity;
    HKQuantity *_maximumQuantity;
    NSDictionary *_averageQuantityBySource;
    NSDictionary *_minimumQuantityBySource;
    NSDictionary *_maximumQuantityBySource;
    HKQuantity *_sumQuantity;
    NSDictionary *_sumQuantityBySource;
}

+ (_Bool)supportsSecureCoding;
+ (void)_validateOptions:(unsigned long long)arg1 forDataType:(id)arg2;
@property(retain, nonatomic) NSDictionary *sumQuantityBySource; // @synthesize sumQuantityBySource=_sumQuantityBySource;
@property(retain, nonatomic) HKQuantity *sumQuantity; // @synthesize sumQuantity=_sumQuantity;
@property(retain, nonatomic) NSDictionary *maximumQuantityBySource; // @synthesize maximumQuantityBySource=_maximumQuantityBySource;
@property(retain, nonatomic) NSDictionary *minimumQuantityBySource; // @synthesize minimumQuantityBySource=_minimumQuantityBySource;
@property(retain, nonatomic) NSDictionary *averageQuantityBySource; // @synthesize averageQuantityBySource=_averageQuantityBySource;
@property(retain, nonatomic) HKQuantity *maximumQuantity; // @synthesize maximumQuantity=_maximumQuantity;
@property(retain, nonatomic) HKQuantity *minimumQuantity; // @synthesize minimumQuantity=_minimumQuantity;
@property(retain, nonatomic) HKQuantity *averageQuantity; // @synthesize averageQuantity=_averageQuantity;
@property(nonatomic) unsigned long long dataCount; // @synthesize dataCount=_dataCount;
- (void).cxx_destruct;
- (void)_setSources:(id)arg1;
@property(readonly) NSArray *sources;
- (void)_setEndDate:(id)arg1;
@property(readonly) NSDate *endDate;
- (void)_setStartDate:(id)arg1;
@property(readonly) NSDate *startDate;
@property(readonly) HKQuantityType *quantityType;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)_initAsCopyOf:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)sumQuantityForSource:(id)arg1;
- (id)maximumQuantityForSource:(id)arg1;
- (id)minimumQuantityForSource:(id)arg1;
- (id)averageQuantityForSource:(id)arg1;
- (id)_initWithDataType:(id)arg1 startDate:(id)arg2 endDate:(id)arg3;
- (id)init;

@end

@interface HKStatisticsCollection : NSObject
{
    CDUnknownBlockType _emptyStatisticsConstructor;
    double _approximateStatisticsInterval;
    NSMutableDictionary *_statisticsByIndex;
    NSSet *_cachedSources;
    NSLock *_statisticsLock;
    NSDate *_anchorDate;
    NSDateComponents *_statisticsInterval;
}

@property(readonly, nonatomic) NSDateComponents *statisticsInterval; // @synthesize statisticsInterval=_statisticsInterval;
@property(readonly, nonatomic) NSDate *anchorDate; // @synthesize anchorDate=_anchorDate;
- (void).cxx_destruct;
- (id)_statisticsPeriodAndIndex:(long long *)arg1 forDate:(id)arg2;
- (void)_enumerateStatisticsIndexesFromDate:(id)arg1 toDate:(id)arg2 withBlock:(CDUnknownBlockType)arg3;
- (void)_timePeriodForStatisticsAtIndex:(long long)arg1 startDate:(id *)arg2 endDate:(id *)arg3;
- (id)_statisticsForIndex:(long long)arg1;
- (id)_timePeriodForDate:(id)arg1;
- (void)_enumerateTimePeriodsFromDate:(id)arg1 toDate:(id)arg2 withBlock:(CDUnknownBlockType)arg3;
- (void)_resetStatistics:(id)arg1;
- (_Bool)_insertStatistics:(id)arg1;
- (void)_clearSourcesCache;
- (id)_minSumQuantityStatistics;
- (id)_maxSumQuantityStatistics;
- (id)sources;
- (id)statistics;
- (void)enumerateStatisticsFromDate:(id)arg1 toDate:(id)arg2 withBlock:(CDUnknownBlockType)arg3;
- (id)statisticsForDate:(id)arg1;
- (id)_initWithAnchorDate:(id)arg1 statisticsInterval:(id)arg2 emptyStatisticsConstructor:(CDUnknownBlockType)arg3;
- (id)_initWithAnchorDate:(id)arg1 statisticsInterval:(id)arg2;
- (id)init;

@end

@interface HKStatisticsCollectionQuery : HKQuery <HKStatisticsCollectionQueryClient>
{
    NSDate *_anchorDate;
    unsigned long long _options;
    NSDateComponents *_intervalComponents;
    CDUnknownBlockType _initialResultsHandler;
    CDUnknownBlockType _statisticsUpdateHandler;
    NSNumber *_lastAnchor;
    HKStatisticsCollection *_statisticsCollection;
}

+ (void)_configureClientInterface:(id)arg1;
+ (id)_clientInterfaceProtocol;
@property(retain) HKStatisticsCollection *statisticsCollection; // @synthesize statisticsCollection=_statisticsCollection;
@property(retain) NSNumber *lastAnchor; // @synthesize lastAnchor=_lastAnchor;
@property(copy, nonatomic) CDUnknownBlockType statisticsUpdateHandler; // @synthesize statisticsUpdateHandler=_statisticsUpdateHandler;
@property(copy, nonatomic) CDUnknownBlockType initialResultsHandler; // @synthesize initialResultsHandler=_initialResultsHandler;
- (void).cxx_destruct;
- (void)_queue_deliverStatisticsObjects:(id)arg1 forQuery:(id)arg2;
- (void)deliverResetStatisticsObjects:(id)arg1 forQuery:(id)arg2;
- (void)deliverUpdatedStatistics:(id)arg1 anchor:(id)arg2 forQuery:(id)arg3;
- (void)_queue_deliverInitialStatisticsObjects:(id)arg1 anchor:(id)arg2 queryUUID:(id)arg3;
- (void)deliverInitialStatisticsObjects:(id)arg1 anchor:(id)arg2 forQuery:(id)arg3;
- (CDUnknownBlockType)_queue_errorHandler;
- (void)_queue_deliverError:(id)arg1;
- (void)_queue_validate;
- (_Bool)_queue_shouldStayAliveAfterInitialResults;
- (void)_queue_cleanupAfterDeactivation;
- (void)_queue_requestServerProxyWithUUID:(id)arg1 connection:(id)arg2 handler:(CDUnknownBlockType)arg3;
@property(readonly, copy) NSDateComponents *intervalComponents;
@property(readonly) unsigned long long options;
@property(readonly) NSDate *anchorDate;
- (id)initWithQuantityType:(id)arg1 quantitySamplePredicate:(id)arg2 options:(unsigned long long)arg3 anchorDate:(id)arg4 intervalComponents:(id)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface HKStatisticsQuery : HKQuery <HKStatisticsQueryClient>
{
    CDUnknownBlockType _completionHandler;
    unsigned long long _options;
}

+ (void)_configureClientInterface:(id)arg1;
+ (id)_clientInterfaceProtocol;
@property(nonatomic) unsigned long long options; // @synthesize options=_options;
@property(readonly, nonatomic) CDUnknownBlockType completionHandler; // @synthesize completionHandler=_completionHandler;
- (void).cxx_destruct;
- (void)deliverStatistics:(id)arg1 forQuery:(id)arg2;
- (CDUnknownBlockType)_queue_errorHandler;
- (void)_queue_validate;
- (void)_queue_cleanupAfterDeactivation;
- (void)_queue_requestServerProxyWithUUID:(id)arg1 connection:(id)arg2 handler:(CDUnknownBlockType)arg3;
- (id)initWithQuantityType:(id)arg1 quantitySamplePredicate:(id)arg2 options:(unsigned long long)arg3 completionHandler:(CDUnknownBlockType)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface HKTemperatureUnit : HKBaseUnit
{
}

- (id)dimension;

@end

@interface HKTimeUnit : HKBaseUnit
{
}

- (id)dimension;

@end

@interface HKVolumeUnit : HKBaseUnit
{
}

- (id)dimension;

@end

@interface HKWorkout : HKSample
{
    unsigned long long _workoutActivityType;
    double _duration;
    NSArray *_workoutEvents;
    HKQuantity *_totalEnergyBurned;
    HKQuantity *_totalDistance;
    unsigned long long _goalType;
    HKQuantity *_goal;
}

+ (_Bool)supportsSecureCoding;
+ (id)_workoutWithActivityType:(unsigned long long)arg1 startDate:(id)arg2 endDate:(id)arg3 workoutEvents:(id)arg4 duration:(double)arg5 totalEnergyBurned:(id)arg6 totalDistance:(id)arg7 goalType:(unsigned long long)arg8 goal:(id)arg9 metadata:(id)arg10;
+ (id)workoutWithActivityType:(unsigned long long)arg1 startDate:(id)arg2 endDate:(id)arg3 duration:(double)arg4 totalEnergyBurned:(id)arg5 totalDistance:(id)arg6 metadata:(id)arg7;
+ (id)workoutWithActivityType:(unsigned long long)arg1 startDate:(id)arg2 endDate:(id)arg3 workoutEvents:(id)arg4 totalEnergyBurned:(id)arg5 totalDistance:(id)arg6 metadata:(id)arg7;
+ (id)workoutWithActivityType:(unsigned long long)arg1 startDate:(id)arg2 endDate:(id)arg3;
@property(retain, nonatomic, getter=_goal, setter=_setGoal:) HKQuantity *goal; // @synthesize goal=_goal;
@property(nonatomic, getter=_goalType, setter=_setGoalType:) unsigned long long goalType; // @synthesize goalType=_goalType;
@property(readonly, copy) NSArray *workoutEvents; // @synthesize workoutEvents=_workoutEvents;
- (void).cxx_destruct;
- (void)_setTotalDistance:(id)arg1;
@property(readonly) HKQuantity *totalDistance;
- (void)_setTotalEnergyBurned:(id)arg1;
@property(readonly) HKQuantity *totalEnergyBurned;
- (void)_setDuration:(double)arg1;
@property(readonly) double duration;
- (void)_setWorkoutEvents:(id)arg1;
- (void)_setWorkoutActivityType:(unsigned long long)arg1;
@property(readonly) unsigned long long workoutActivityType;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)_validateWorkoutEvents:(id)arg1;
- (id)_validateConfiguration;
- (id)description;

@end

@interface HKWorkoutEvent : NSObject <NSSecureCoding>
{
    long long _type;
    NSDate *_date;
}

+ (_Bool)supportsSecureCoding;
+ (_Bool)_validType:(long long)arg1;
+ (id)workoutEventWithType:(long long)arg1 date:(id)arg2;
- (void).cxx_destruct;
- (id)awakeAfterUsingCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)_assertPropertiesValid;
@property(readonly, copy) NSDate *date;
@property(readonly) long long type;
- (id)init;
- (id)_init;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)description;

@end

@interface HKWorkoutType : HKSampleType
{
}

@end

@interface NSComparisonPredicate (HKFilterExtension)
- (id)_parseComparisonPredicateWithKeyPath:(id)arg1 predicateOperatorType:(unsigned long long)arg2 value:(id)arg3 dataTypes:(id)arg4 filterClasses:(id)arg5;
- (id)hk_filterRepresentationForDataTypes:(id)arg1 filterClasses:(id)arg2;
@end

@interface NSCompoundPredicate (HKFilterExtension)
- (id)hk_filterRepresentationForDataTypes:(id)arg1 filterClasses:(id)arg2;
@end

@interface NSDate (HKDate)
+ (id)hk_ISO8601DateFromString:(id)arg1;
+ (id)hk_formatterISO8601;
- (id)hk_ISO8601String;
@end

@interface NSDateComponents (HKStatisticsCollection)
- (long long)hk_maxComponentValue;
- (id)_hk_dateByAddingFilteredInterval:(long long)arg1 toDate:(id)arg2;
- (id)hk_dateByAddingInterval:(long long)arg1 toDate:(id)arg2;
- (double)hk_approximateDuration;
@end

@interface NSDictionary (HKMetadata)
+ (_Bool)_hk_validateMetadataValueContent:(id)arg1 forKey:(id)arg2 error:(id *)arg3;
+ (Class)_hk_expectedClassForKey:(id)arg1;
+ (_Bool)hk_acceptsMetadataKey:(id)arg1;
+ (_Bool)hk_acceptsMetadataValue:(id)arg1;
+ (id)hk_acceptedMetadataValueClasses;
+ (id)hk_acceptedMetadataKeyClasses;
+ (id)hk_secureCodingClasses;
- (_Bool)hk_validateMetadataKeysAndValuesWithError:(id *)arg1;
@end

@interface NSError (HealthKit)
+ (id)hk_error:(long long)arg1 format:(id)arg2;
+ (id)hk_error:(long long)arg1 description:(id)arg2;
- (_Bool)hk_isInternalFailureError;
- (_Bool)hk_isInvalidArgumentError;
- (_Bool)hk_isAuthorizationNotDeterminedError;
- (_Bool)hk_isAuthorizationDeniedError;
- (_Bool)hk_isDatabaseAccessibilityError;
@end

@interface NSFileHandle (Additions)
- (_Bool)hk_readValue:(void *)arg1 ofSize:(unsigned long long)arg2;
- (_Bool)hk_writeValue:(const void *)arg1 size:(unsigned long long)arg2;
@end

@interface NSPredicate (HKFilterExtension)
- (id)hk_filterRepresentationForDataTypes:(id)arg1 filterClasses:(id)arg2;
@end

@interface NSString (Base64)
- (_Bool)hk_isBase64;
@end

@interface _HKAuthorizationRecord : NSObject <NSCopying, NSSecureCoding>
{
    long long _status;
    long long _request;
}

+ (_Bool)supportsSecureCoding;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (_Bool)isCompatibleStatus:(long long)arg1;
- (_Bool)requestedReading;
- (_Bool)requestedSharing;
@property(readonly) long long request;
@property(readonly) long long status;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithAuthorizationStatus:(long long)arg1 authorizationRequest:(long long)arg2;

@end

__attribute__((visibility("hidden")))
@interface _HKDimension : NSObject
{
    _HKFactorization *_reduction;
    long long _reductionToken;
}

+ (id)dimensionFromString:(id)arg1;
- (void).cxx_destruct;
- (id)_baseDimensions;
- (id)description;
- (id)reduction;

@end

__attribute__((visibility("hidden")))
@interface _HKBaseDimension : _HKDimension <_HKFactor>
{
    NSString *_name;
    HKBaseUnit *_reducibleBaseUnit;
    HKUnit *_reducedUnit;
    double _reductionCoefficient;
}

+ (id)_uniquedDefinedDimensionWithName:(id)arg1;
+ (id)_uniquedDimensionWithName:(id)arg1 configuration:(CDUnknownBlockType)arg2;
+ (id)nullDimension;
+ (id)conductance;
+ (id)temperature;
+ (id)time;
+ (id)energy;
+ (id)pressure;
+ (id)volume;
+ (id)length;
+ (id)mass;
@property(nonatomic) double reductionCoefficient; // @synthesize reductionCoefficient=_reductionCoefficient;
@property(retain, nonatomic) HKUnit *reducedUnit; // @synthesize reducedUnit=_reducedUnit;
@property(retain, nonatomic) HKBaseUnit *reducibleBaseUnit; // @synthesize reducibleBaseUnit=_reducibleBaseUnit;
@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (id)_baseDimensions;
- (id)_initWithName:(id)arg1;
- (id)unitString;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
- (_Bool)isEqual:(id)arg1;
- (_Bool)canBeReduced;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

@interface _HKBehavior : NSObject
{
}

+ (id)currentDeviceProductType;
+ (id)currentDeviceDisplayName;
+ (_Bool)isAppleInternalInstall;
+ (_Bool)isDeviceSupported;

@end

@interface _HKCFGExpression : NSObject
{
}

- (unsigned long long)_minimumLength;
- (id)_label;
- (void)_tryNodesWithContext:(id)arg1 solutionTest:(CDUnknownBlockType)arg2;

@end

@interface _HKCFGTerminal : _HKCFGExpression
{
}

+ (id)terminalMatchingSequenceOfCharactersInSet:(id)arg1;
+ (id)terminalMatchingDoubleWithCondition:(CDUnknownBlockType)arg1;
+ (id)terminalMatchingAnyDouble;
+ (id)terminalMatchingIntegerWithCondition:(CDUnknownBlockType)arg1;
+ (id)terminalMatchingAnyInteger;
+ (id)terminalMatchingCharacterInString:(id)arg1;
+ (id)terminalMatchingCharacterInSet:(id)arg1;
+ (id)terminalMatchingString:(id)arg1;
+ (id)terminalMatchingString:(id)arg1 caseSensitive:(_Bool)arg2;
- (id)characterSet;
- (unsigned long long)_minimumLength;
- (id)_label;
- (_Bool)_scanValue:(id *)arg1 withScanner:(id)arg2;
- (void)_tryNodesWithContext:(id)arg1 solutionTest:(CDUnknownBlockType)arg2;

@end

__attribute__((visibility("hidden")))
@interface _HKCFGCharacterSequenceTerminal : _HKCFGTerminal
{
    NSCharacterSet *_characterSet;
}

@property(copy, nonatomic) NSCharacterSet *characterSet; // @synthesize characterSet=_characterSet;
- (void).cxx_destruct;
- (unsigned long long)_minimumLength;
- (id)_label;
- (_Bool)_scanValue:(id *)arg1 withScanner:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface _HKCFGCharacterTerminal : _HKCFGTerminal
{
    NSCharacterSet *_characterSet;
}

@property(copy, nonatomic) NSCharacterSet *characterSet; // @synthesize characterSet=_characterSet;
- (void).cxx_destruct;
- (unsigned long long)_minimumLength;
- (id)_label;
- (_Bool)_scanValue:(id *)arg1 withScanner:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface _HKCFGDoubleTerminal : _HKCFGTerminal
{
    CDUnknownBlockType _condition;
}

@property(copy, nonatomic) CDUnknownBlockType condition; // @synthesize condition=_condition;
- (void).cxx_destruct;
- (id)characterSet;
- (unsigned long long)_minimumLength;
- (id)_label;
- (_Bool)_scanValue:(id *)arg1 withScanner:(id)arg2;

@end

@interface _HKCFGNode : NSObject
{
    struct _NSRange _rangeOfString;
}

@property(nonatomic) struct _NSRange rangeOfString; // @synthesize rangeOfString=_rangeOfString;
- (id)evaluate;
- (id)initWithRangeOfString:(struct _NSRange)arg1;

@end

__attribute__((visibility("hidden")))
@interface _HKCFGEmptyStringNode : _HKCFGNode
{
    CDUnknownBlockType _evaluator;
}

+ (id)nodeWithEvaluator:(CDUnknownBlockType)arg1;
- (void).cxx_destruct;
- (id)evaluate;

@end

__attribute__((visibility("hidden")))
@interface _HKCFGIntegerTerminal : _HKCFGTerminal
{
    CDUnknownBlockType _condition;
}

@property(copy, nonatomic) CDUnknownBlockType condition; // @synthesize condition=_condition;
- (void).cxx_destruct;
- (id)characterSet;
- (unsigned long long)_minimumLength;
- (id)_label;
- (_Bool)_scanValue:(id *)arg1 withScanner:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface _HKCFGNodeCache : NSObject
{
    NSMutableDictionary *_cache;
}

- (void).cxx_destruct;
- (void)cacheNodes:(id)arg1 forPosition:(unsigned long long)arg2 nonTerminal:(id)arg3 lengthAllowance:(unsigned long long)arg4;
- (id)nodesForPosition:(unsigned long long)arg1 nonTerminal:(id)arg2 withLengthAllowance:(unsigned long long)arg3;
- (id)init;

@end

@interface _HKCFGNonTerminal : _HKCFGExpression
{
    NSString *_label;
    NSMutableArray *_replacementRules;
    NSCharacterSet *_charactersToBeSkipped;
}

+ (id)nonTerminalWithLabel:(id)arg1;
@property(copy, nonatomic) NSCharacterSet *charactersToBeSkipped; // @synthesize charactersToBeSkipped=_charactersToBeSkipped;
- (void).cxx_destruct;
- (void)_invalidate;
- (void)_checkForCycles:(id)arg1;
- (void)_checkForCycles;
- (id)_replacementRules;
- (id)_parseTreeWithContext:(id)arg1;
- (unsigned long long)_minimumLength;
- (id)_label;
- (_Bool)_tryNodesForExpressions:(id)arg1 nodes:(id)arg2 context:(id)arg3 solutionTest:(CDUnknownBlockType)arg4;
- (void)_tryNodesWithContext:(id)arg1 solutionTest:(CDUnknownBlockType)arg2;
- (void)addReplacementRuleWithExpressions:(id)arg1 nodeEvaluator:(CDUnknownBlockType)arg2;
- (id)initWithLabel:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _HKCFGNonTerminalNode : _HKCFGNode
{
    NSArray *_nodes;
    id _value;
    _HKCFGReplacementRule *_rule;
}

+ (id)nodeWithChildren:(id)arg1 rule:(id)arg2 rangeOfString:(struct _NSRange)arg3;
@property(readonly, nonatomic) _HKCFGReplacementRule *rule; // @synthesize rule=_rule;
- (void).cxx_destruct;
- (id)evaluate;

@end

__attribute__((visibility("hidden")))
@interface _HKCFGParseContext : NSObject
{
    NSScanner *_scanner;
    unsigned long long _lengthAllowance;
    unsigned long long _recursiveDepth;
    _HKCFGNodeCache *_cache;
}

@property(readonly, nonatomic) _HKCFGNodeCache *cache; // @synthesize cache=_cache;
@property(readonly, nonatomic) unsigned long long recursiveDepth; // @synthesize recursiveDepth=_recursiveDepth;
@property(readonly, nonatomic) unsigned long long lengthAllowance; // @synthesize lengthAllowance=_lengthAllowance;
@property(readonly, nonatomic) NSScanner *scanner; // @synthesize scanner=_scanner;
- (void).cxx_destruct;
- (void)increaseLengthAllowance:(unsigned long long)arg1;
- (void)decreaseLengthAllowance:(unsigned long long)arg1;
- (void)decrementRecursiveDepth;
- (void)incrementRecursiveDepth;
- (id)initWithScanner:(id)arg1 lengthAllowance:(unsigned long long)arg2;

@end

__attribute__((visibility("hidden")))
@interface _HKCFGReplacementRule : NSObject
{
    NSString *_description;
    NSArray *_rightHandSide;
    CDUnknownBlockType _nodeEvaluator;
    unsigned long long _lengthIncrease;
}

+ (id)ruleWithLHS:(id)arg1 RHS:(id)arg2 nodeEvaluator:(CDUnknownBlockType)arg3;
@property(readonly, nonatomic) unsigned long long lengthIncrease; // @synthesize lengthIncrease=_lengthIncrease;
@property(readonly, copy, nonatomic) CDUnknownBlockType nodeEvaluator; // @synthesize nodeEvaluator=_nodeEvaluator;
@property(readonly, copy, nonatomic) NSArray *rightHandSide; // @synthesize rightHandSide=_rightHandSide;
- (void).cxx_destruct;
- (id)description;

@end

__attribute__((visibility("hidden")))
@interface _HKCFGStringTerminal : _HKCFGTerminal
{
    _Bool _caseSensitive;
    NSString *_string;
}

@property(nonatomic) _Bool caseSensitive; // @synthesize caseSensitive=_caseSensitive;
@property(copy, nonatomic) NSString *string; // @synthesize string=_string;
- (void).cxx_destruct;
- (id)characterSet;
- (unsigned long long)_minimumLength;
- (id)_label;
- (_Bool)_scanValue:(id *)arg1 withScanner:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface _HKCFGTerminalNode : _HKCFGNode
{
    id _value;
}

+ (id)nodeWithValue:(id)arg1 rangeOfString:(struct _NSRange)arg2;
- (void).cxx_destruct;
- (id)evaluate;

@end

@interface _HKFilter : NSObject <NSSecureCoding, NSCopying>
{
}

+ (_Bool)supportsSecureCoding;
+ (_Bool)filter:(id)arg1 acceptsDataObject:(id)arg2;
+ (id)filterForKeyPath:(id)arg1 predicateOperatorType:(unsigned long long)arg2 value:(id)arg3 dataTypes:(id)arg4;
+ (id)filterByCombiningFilters:(id)arg1 compoundType:(unsigned long long)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (_Bool)acceptsDataObject:(id)arg1;

@end

@interface _HKCategoryValueFilter : _HKFilter
{
    NSNumber *_comparisonValue;
    HKCategoryType *_dataType;
    unsigned long long _operatorType;
}

+ (_Bool)supportsSecureCoding;
+ (id)filterForKeyPath:(id)arg1 predicateOperatorType:(unsigned long long)arg2 value:(id)arg3 dataTypes:(id)arg4;
+ (id)filterWithOperatorType:(unsigned long long)arg1 comparisonValue:(id)arg2 dataType:(id)arg3;
@property(readonly, nonatomic) unsigned long long operatorType; // @synthesize operatorType=_operatorType;
@property(readonly, nonatomic) HKCategoryType *dataType; // @synthesize dataType=_dataType;
@property(readonly, nonatomic) NSNumber *comparisonValue; // @synthesize comparisonValue=_comparisonValue;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (_Bool)acceptsDataObject:(id)arg1;

@end

@interface _HKCharacteristic : NSObject
{
}

+ (_Bool)_validateBloodType:(id)arg1 error:(id *)arg2;
+ (_Bool)_validateBiologicalSex:(id)arg1 error:(id *)arg2;
+ (_Bool)_validateDateOfBirth:(id)arg1 error:(id *)arg2;
+ (_Bool)_validateCharacteristic:(id)arg1 forDataType:(id)arg2 error:(id *)arg3;

@end

@interface _HKMetadataFilter : _HKFilter
{
    NSString *_key;
    unsigned long long _operatorType;
}

+ (_Bool)supportsSecureCoding;
+ (_Bool)_acceptsOperatorType:(unsigned long long)arg1;
+ (id)filterForKeyPath:(id)arg1 predicateOperatorType:(unsigned long long)arg2 value:(id)arg3 dataTypes:(id)arg4;
@property(readonly, nonatomic) unsigned long long operatorType; // @synthesize operatorType=_operatorType;
@property(readonly, copy, nonatomic) NSString *key; // @synthesize key=_key;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (_Bool)acceptsDataObject:(id)arg1;
- (id)_initWithKey:(id)arg1 operatorType:(unsigned long long)arg2;

@end

@interface _HKComparisonMetadataFilter : _HKMetadataFilter
{
    id _value;
}

+ (_Bool)supportsSecureCoding;
+ (_Bool)_acceptsOperatorType:(unsigned long long)arg1;
+ (id)filterWithKey:(id)arg1 operatorType:(unsigned long long)arg2 value:(id)arg3;
@property(readonly, nonatomic) id value; // @synthesize value=_value;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (_Bool)acceptsDataObject:(id)arg1;
- (id)_initWithKey:(id)arg1 operatorType:(unsigned long long)arg2 value:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface _HKCompoundDimension : _HKDimension
{
    _HKFactorization *_baseDimensions;
}

+ (id)dimensionWithBaseDimensions:(id)arg1;
- (void).cxx_destruct;
- (id)_baseDimensions;
- (id)_initWithBaseDimensions:(id)arg1;

@end

@interface _HKCompoundFilter : _HKFilter
{
    NSArray *_subfilters;
    unsigned long long _compoundType;
}

+ (_Bool)supportsSecureCoding;
+ (id)filterWithSubfilters:(id)arg1 compoundType:(unsigned long long)arg2;
@property(readonly, nonatomic) unsigned long long compoundType; // @synthesize compoundType=_compoundType;
@property(readonly, nonatomic) NSArray *subfilters; // @synthesize subfilters=_subfilters;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (_Bool)acceptsDataObject:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _HKCompoundUnit : HKUnit
{
    _HKFactorization *_baseUnits;
    _HKDimension *_dimension;
    int _dimensionLock;
}

+ (_Bool)supportsSecureCoding;
+ (id)unitWithBaseUnits:(id)arg1;
- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)_computeBaseUnitReductionAndProportionalSize:(out double *)arg1 withCycleSet:(id)arg2;
- (id)_baseUnits;
- (id)dimension;
- (id)unitString;
- (id)_initWithBaseUnits:(id)arg1;

@end

@interface _HKContainsMetadataFilter : _HKMetadataFilter
{
    NSSet *_allowedValues;
}

+ (_Bool)supportsSecureCoding;
+ (_Bool)_acceptsOperatorType:(unsigned long long)arg1;
+ (id)filterWithKey:(id)arg1 operatorType:(unsigned long long)arg2 values:(id)arg3;
@property(readonly, nonatomic) NSSet *allowedValues; // @synthesize allowedValues=_allowedValues;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (_Bool)acceptsDataObject:(id)arg1;
- (id)_initWithKey:(id)arg1 values:(id)arg2 operatorType:(unsigned long long)arg3;

@end

@interface _HKContextFreeGrammar : NSObject
{
    NSMutableSet *_nonTerminals;
    NSMutableSet *_terminals;
    NSCharacterSet *_terminalCharacters;
    _HKCFGNonTerminal *_rootNonTerminal;
    CDUnknownBlockType _emptyStringEvaluator;
}

+ (id)grammarWithRootNonTerminal:(id)arg1 emptyStringEvaluator:(CDUnknownBlockType)arg2;
+ (id)grammarWithRootNonTerminal:(id)arg1;
@property(readonly, nonatomic) CDUnknownBlockType emptyStringEvaluator; // @synthesize emptyStringEvaluator=_emptyStringEvaluator;
@property(readonly, nonatomic) _HKCFGNonTerminal *rootNonTerminal; // @synthesize rootNonTerminal=_rootNonTerminal;
- (void).cxx_destruct;
- (void)_gatherExpressionsStartingAt:(id)arg1;
- (void)_gatherExpressions;
- (void)invalidate;
- (id)parseTreeForString:(id)arg1;
- (id)initWithRootNonTerminal:(id)arg1 emptyStringEvaluator:(CDUnknownBlockType)arg2;

@end

@interface _HKCorrelationFilter : _HKFilter
{
    unsigned long long _operatorType;
}

+ (_Bool)supportsSecureCoding;
+ (id)filterForKeyPath:(id)arg1 predicateOperatorType:(unsigned long long)arg2 value:(id)arg3 dataTypes:(id)arg4;
+ (id)filterWithOperatorType:(unsigned long long)arg1;
@property(readonly, nonatomic) unsigned long long operatorType; // @synthesize operatorType=_operatorType;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (_Bool)acceptsDataObject:(id)arg1;

@end

@interface _HKEntitlements : NSObject
{
}

+ (id)entitlementsWithApplicationIdentifier:(id)arg1;
+ (id)entitlementsWithDictionary:(id)arg1;
+ (id)entitlementsWithConnection:(id)arg1;
+ (void)_setEntitlementsForCurrentTask:(id)arg1;
+ (id)entitlementsForCurrentTask;
- (id)valueForEntitlement:(id)arg1;
- (id)stringForEntitlement:(id)arg1;
- (_Bool)hasEntitlement:(id)arg1;
- (id)applicationIdentifier;

@end

__attribute__((visibility("hidden")))
@interface _HKDictionaryEntitlements : _HKEntitlements
{
    NSDictionary *_entitlements;
}

- (void).cxx_destruct;
- (id)valueForEntitlement:(id)arg1;
- (id)_initWithDictionary:(id)arg1;

@end

@interface _HKEmergencyContact : NSObject <NSSecureCoding, NSCopying>
{
    NSString *_name;
    NSString *_phoneNumber;
    NSString *_relationship;
}

+ (_Bool)supportsSecureCoding;
@property(retain, nonatomic) NSString *relationship; // @synthesize relationship=_relationship;
@property(retain, nonatomic) NSString *phoneNumber; // @synthesize phoneNumber=_phoneNumber;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface _HKEndDateFilter : _HKFilter
{
    NSDate *_comparisonDate;
    unsigned long long _operatorType;
}

+ (_Bool)supportsSecureCoding;
+ (id)filterForKeyPath:(id)arg1 predicateOperatorType:(unsigned long long)arg2 value:(id)arg3 dataTypes:(id)arg4;
+ (id)filterWithOperatorType:(unsigned long long)arg1 comparisonDate:(id)arg2;
@property(readonly, nonatomic) unsigned long long operatorType; // @synthesize operatorType=_operatorType;
@property(readonly, nonatomic) NSDate *comparisonDate; // @synthesize comparisonDate=_comparisonDate;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (_Bool)acceptsDataObject:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _HKFactorization : NSObject <NSCopying, NSSecureCoding>
{
    NSMapTable *_factors;
}

+ (_Bool)supportsSecureCoding;
+ (id)factorizationFromString:(id)arg1 factorGrammar:(id)arg2;
+ (id)factorizationWithFactorsAndExponents:(id)arg1;
+ (id)factorizationWithFactor:(id)arg1 exponent:(long long)arg2;
+ (id)factorization;
- (void).cxx_destruct;
- (void)_raiseToExponent:(long long)arg1;
- (void)_multiplyByFactorization:(id)arg1;
- (void)_multiplyByFactor:(id)arg1 exponent:(long long)arg2;
- (_Bool)_hasSameFactorsAndExponentsAs:(id)arg1;
- (long long)_exponentForFactor:(id)arg1;
- (id)_allFactors;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)unitString;
- (long long)exponentForFactor:(id)arg1;
- (id)anyFactor;
- (unsigned long long)factorCount;
- (void)enumerateFactorsWithHandler:(CDUnknownBlockType)arg1;
- (id)factorizationByRaisingToExponent:(long long)arg1;
- (id)reciprocal;
- (id)factorizationByDividing:(id)arg1;
- (id)factorizationByMultiplying:(id)arg1;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface _HKHealthStoreProxy : NSObject
{
    HKHealthStore *_healthStore;
}

@property(nonatomic) __weak HKHealthStore *healthStore; // @synthesize healthStore=_healthStore;
- (void).cxx_destruct;
- (void)forwardInvocation:(id)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;

@end

__attribute__((visibility("hidden")))
@interface _HKIdentifierLookupTable : NSObject
{
    NSMapTable *_identifierMapTable;
    int _lookupTableSpinLock;
}

- (void).cxx_destruct;
- (void)_insertCode:(long long)arg1 forIdentifier:(id)arg2;
- (_Bool)codeForIdentifier:(id)arg1 code:(long long *)arg2;
- (void)setCode:(long long)arg1 forIdentifier:(id)arg2;
- (id)initWithDictionary:(id)arg1;

@end

@interface _HKMedicalIDData : NSObject <NSSecureCoding, NSCopying>
{
    _Bool _isDisabled;
    NSData *_pictureData;
    NSString *_name;
    NSDate *_birthdate;
    HKQuantity *_height;
    HKQuantity *_weight;
    long long _bloodType;
    NSNumber *_isOrganDonor;
    NSArray *_emergencyContacts;
    NSString *_medicalConditions;
    NSString *_medicalNotes;
    NSString *_allergyInfo;
    NSString *_medicationInfo;
    NSDate *_dateSaved;
    long long _schemaVersion;
}

+ (_Bool)supportsSecureCoding;
@property(nonatomic) long long schemaVersion; // @synthesize schemaVersion=_schemaVersion;
@property(retain, nonatomic) NSDate *dateSaved; // @synthesize dateSaved=_dateSaved;
@property(retain, nonatomic) NSString *medicationInfo; // @synthesize medicationInfo=_medicationInfo;
@property(retain, nonatomic) NSString *allergyInfo; // @synthesize allergyInfo=_allergyInfo;
@property(retain, nonatomic) NSString *medicalNotes; // @synthesize medicalNotes=_medicalNotes;
@property(retain, nonatomic) NSString *medicalConditions; // @synthesize medicalConditions=_medicalConditions;
@property(retain, nonatomic) NSArray *emergencyContacts; // @synthesize emergencyContacts=_emergencyContacts;
@property(retain, nonatomic) NSNumber *isOrganDonor; // @synthesize isOrganDonor=_isOrganDonor;
@property(nonatomic) long long bloodType; // @synthesize bloodType=_bloodType;
@property(retain, nonatomic) HKQuantity *weight; // @synthesize weight=_weight;
@property(retain, nonatomic) HKQuantity *height; // @synthesize height=_height;
@property(retain, nonatomic) NSDate *birthdate; // @synthesize birthdate=_birthdate;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
@property(retain, nonatomic) NSData *pictureData; // @synthesize pictureData=_pictureData;
@property(nonatomic) _Bool isDisabled; // @synthesize isDisabled=_isDisabled;
- (void).cxx_destruct;
- (_Bool)hasAnyData;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface _HKMutableFactorization : _HKFactorization
{
}

- (void)raiseToExponent:(long long)arg1;
- (void)divideByFactorization:(id)arg1;
- (void)multiplyByFactorization:(id)arg1;
- (void)multiplyByFactor:(id)arg1 exponent:(long long)arg2;

@end

@interface _HKPropertyComparisonFilter : _HKFilter
{
    NSString *_lhPropertyName;
    NSString *_rhPropertyName;
    unsigned long long _operatorType;
}

+ (_Bool)supportsSecureCoding;
+ (id)filterWithLeftHandPropertyName:(id)arg1 rightHandPropertyName:(id)arg2 operator:(unsigned long long)arg3;
@property(readonly, nonatomic) unsigned long long operatorType; // @synthesize operatorType=_operatorType;
@property(readonly, nonatomic) NSString *rhPropertyName; // @synthesize rhPropertyName=_rhPropertyName;
@property(readonly, nonatomic) NSString *lhPropertyName; // @synthesize lhPropertyName=_lhPropertyName;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithLeftHandPropertyName:(id)arg1 rightHandPropertyName:(id)arg2 operator:(unsigned long long)arg3;

@end

@interface _HKQuantityFilter : _HKFilter
{
    HKQuantity *_comparisonQuantity;
    HKQuantityType *_dataType;
    unsigned long long _operatorType;
}

+ (_Bool)supportsSecureCoding;
+ (id)filterForKeyPath:(id)arg1 predicateOperatorType:(unsigned long long)arg2 value:(id)arg3 dataTypes:(id)arg4;
+ (id)filterWithOperatorType:(unsigned long long)arg1 comparisonQuantity:(id)arg2 dataType:(id)arg3;
@property(readonly, nonatomic) unsigned long long operatorType; // @synthesize operatorType=_operatorType;
@property(readonly, nonatomic) HKQuantityType *dataType; // @synthesize dataType=_dataType;
@property(readonly, nonatomic) HKQuantity *comparisonQuantity; // @synthesize comparisonQuantity=_comparisonQuantity;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (_Bool)acceptsDataObject:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _HKSecTaskEntitlements : _HKEntitlements
{
    struct __SecTask *_secTask;
    NSString *_applicationIdentifier;
}

- (void).cxx_destruct;
- (id)applicationIdentifier;
- (id)valueForEntitlement:(id)arg1;
- (void)dealloc;
- (id)_initWithSecTask:(struct __SecTask *)arg1;

@end

@interface _HKSourceFilter : _HKFilter
{
    NSSet *_sources;
}

+ (_Bool)supportsSecureCoding;
+ (id)_filterForInOperatorWithKeyPath:(id)arg1 value:(id)arg2 dataTypes:(id)arg3;
+ (id)_filterForComparisonWithKeyPath:(id)arg1 value:(id)arg2 dataTypes:(id)arg3;
+ (id)filterForKeyPath:(id)arg1 predicateOperatorType:(unsigned long long)arg2 value:(id)arg3 dataTypes:(id)arg4;
+ (id)filterWithSources:(id)arg1;
@property(readonly, nonatomic) NSSet *sources; // @synthesize sources=_sources;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (_Bool)acceptsDataObject:(id)arg1;

@end

@interface _HKStartDateFilter : _HKFilter
{
    NSDate *_comparisonDate;
    unsigned long long _operatorType;
}

+ (_Bool)supportsSecureCoding;
+ (id)filterForKeyPath:(id)arg1 predicateOperatorType:(unsigned long long)arg2 value:(id)arg3 dataTypes:(id)arg4;
+ (id)filterWithOperatorType:(unsigned long long)arg1 comparisonDate:(id)arg2;
@property(readonly, nonatomic) unsigned long long operatorType; // @synthesize operatorType=_operatorType;
@property(readonly, nonatomic) NSDate *comparisonDate; // @synthesize comparisonDate=_comparisonDate;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (_Bool)acceptsDataObject:(id)arg1;

@end

@interface _HKTimePeriod : NSObject <NSSecureCoding>
{
    NSDate *_startDate;
    NSDate *_endDate;
}

+ (_Bool)supportsSecureCoding;
+ (id)timePeriodWithStartDate:(id)arg1 endDate:(id)arg2;
@property(readonly, nonatomic) NSDate *endDate; // @synthesize endDate=_endDate;
@property(readonly, nonatomic) NSDate *startDate; // @synthesize startDate=_startDate;
- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (_Bool)startsAfterDate:(id)arg1;
- (_Bool)endsBeforeDate:(id)arg1;
- (_Bool)containsDate:(id)arg1;
- (long long)compareByEndDate:(id)arg1;
- (long long)compareByStartDate:(id)arg1;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (_Bool)overlapsTimePeriod:(id)arg1;
- (_Bool)containsTimePeriod:(id)arg1;
- (id)_initWithStartDate:(id)arg1 endDate:(id)arg2;

@end

@interface _HKUUIDFilter : _HKFilter
{
    NSSet *_UUIDs;
}

+ (_Bool)supportsSecureCoding;
+ (id)_filterForInOperatorWithKeyPath:(id)arg1 value:(id)arg2 dataTypes:(id)arg3;
+ (id)_filterForComparisonWithKeyPath:(id)arg1 value:(id)arg2 dataTypes:(id)arg3;
+ (id)filterForKeyPath:(id)arg1 predicateOperatorType:(unsigned long long)arg2 value:(id)arg3 dataTypes:(id)arg4;
+ (id)filterWithUUIDs:(id)arg1;
@property(readonly, nonatomic) NSSet *UUIDs; // @synthesize UUIDs=_UUIDs;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (_Bool)acceptsDataObject:(id)arg1;

@end

@interface _HKWorkoutActivityTypeFilter : _HKFilter
{
    unsigned long long _workoutActivityType;
    unsigned long long _operatorType;
}

+ (_Bool)supportsSecureCoding;
+ (id)filterForKeyPath:(id)arg1 predicateOperatorType:(unsigned long long)arg2 value:(id)arg3 dataTypes:(id)arg4;
+ (id)filterWithWorkoutActivityType:(unsigned long long)arg1 operatorType:(unsigned long long)arg2;
@property(readonly, nonatomic) unsigned long long operatorType; // @synthesize operatorType=_operatorType;
@property(readonly, nonatomic) unsigned long long workoutActivityType; // @synthesize workoutActivityType=_workoutActivityType;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (_Bool)acceptsDataObject:(id)arg1;

@end

@interface _HKWorkoutDurationFilter : _HKFilter
{
    double _duration;
    unsigned long long _operatorType;
}

+ (_Bool)supportsSecureCoding;
+ (id)filterForKeyPath:(id)arg1 predicateOperatorType:(unsigned long long)arg2 value:(id)arg3 dataTypes:(id)arg4;
+ (id)filterWithDuration:(double)arg1 operatorType:(unsigned long long)arg2;
@property(readonly, nonatomic) unsigned long long operatorType; // @synthesize operatorType=_operatorType;
@property(readonly, nonatomic) double duration; // @synthesize duration=_duration;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (_Bool)acceptsDataObject:(id)arg1;

@end

@interface _HKWorkoutFilter : _HKFilter
{
    NSUUID *_workoutUUID;
}

+ (_Bool)supportsSecureCoding;
+ (id)filterForKeyPath:(id)arg1 predicateOperatorType:(unsigned long long)arg2 value:(id)arg3 dataTypes:(id)arg4;
+ (id)filterWithWorkoutUUID:(id)arg1;
@property(readonly, nonatomic) NSUUID *workoutUUID; // @synthesize workoutUUID=_workoutUUID;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (_Bool)acceptsDataObject:(id)arg1;

@end

@interface _HKWorkoutGoalFilter : _HKFilter
{
    HKQuantity *_comparisonQuantity;
    unsigned long long _goalType;
    unsigned long long _operatorType;
}

+ (_Bool)supportsSecureCoding;
+ (id)filterForKeyPath:(id)arg1 predicateOperatorType:(unsigned long long)arg2 value:(id)arg3 dataTypes:(id)arg4;
+ (id)filterWithComparisonQuantity:(id)arg1 goalType:(unsigned long long)arg2 operatorType:(unsigned long long)arg3;
@property(readonly, nonatomic) unsigned long long operatorType; // @synthesize operatorType=_operatorType;
@property(readonly, nonatomic) unsigned long long goalType; // @synthesize goalType=_goalType;
@property(readonly, nonatomic) HKQuantity *comparisonQuantity; // @synthesize comparisonQuantity=_comparisonQuantity;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (_Bool)acceptsDataObject:(id)arg1;

@end

@interface _HKWorkoutGoalTypeFilter : _HKFilter
{
    unsigned long long _goalType;
    unsigned long long _operatorType;
}

+ (_Bool)supportsSecureCoding;
+ (id)filterForKeyPath:(id)arg1 predicateOperatorType:(unsigned long long)arg2 value:(id)arg3 dataTypes:(id)arg4;
+ (id)filterWithGoalType:(unsigned long long)arg1 operatorType:(unsigned long long)arg2;
@property(readonly, nonatomic) unsigned long long operatorType; // @synthesize operatorType=_operatorType;
@property(readonly, nonatomic) unsigned long long goalType; // @synthesize goalType=_goalType;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (_Bool)acceptsDataObject:(id)arg1;

@end

@interface _HKWorkoutTotalDistanceFilter : _HKFilter
{
    HKQuantity *_totalDistance;
    unsigned long long _operatorType;
}

+ (_Bool)supportsSecureCoding;
+ (id)filterForKeyPath:(id)arg1 predicateOperatorType:(unsigned long long)arg2 value:(id)arg3 dataTypes:(id)arg4;
+ (id)filterWithTotalDistance:(id)arg1 operatorType:(unsigned long long)arg2;
@property(readonly, nonatomic) unsigned long long operatorType; // @synthesize operatorType=_operatorType;
@property(readonly, nonatomic) HKQuantity *totalDistance; // @synthesize totalDistance=_totalDistance;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (_Bool)acceptsDataObject:(id)arg1;

@end

@interface _HKWorkoutTotalEnergyBurnedFilter : _HKFilter
{
    HKQuantity *_totalEnergyBurned;
    unsigned long long _operatorType;
}

+ (_Bool)supportsSecureCoding;
+ (id)filterForKeyPath:(id)arg1 predicateOperatorType:(unsigned long long)arg2 value:(id)arg3 dataTypes:(id)arg4;
+ (id)filterWithTotalEnergyBurned:(id)arg1 operatorType:(unsigned long long)arg2;
@property(readonly, nonatomic) unsigned long long operatorType; // @synthesize operatorType=_operatorType;
@property(readonly, nonatomic) HKQuantity *totalEnergyBurned; // @synthesize totalEnergyBurned=_totalEnergyBurned;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (_Bool)acceptsDataObject:(id)arg1;

@end

