//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct AudioStreamBasicDescription {
    double mSampleRate;
    unsigned int mFormatID;
    unsigned int mFormatFlags;
    unsigned int mBytesPerPacket;
    unsigned int mFramesPerPacket;
    unsigned int mBytesPerFrame;
    unsigned int mChannelsPerFrame;
    unsigned int mBitsPerChannel;
    unsigned int mReserved;
};

struct AudioUnitMeterClipping {
    float peakValueSinceLastCall;
    unsigned char sawInfinity;
    unsigned char sawNotANumber;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct NSNumber {
    Class _field1;
};

struct PowerMeter {
    _Bool mInstantaneousMode;
    double mSampleRate;
    double mPeakDecay1;
    double mPeakDecay;
    double mDecay1;
    double mDecay;
    int mPrevBlockSize;
    int mPeakHoldCount;
    double mPeak;
    double mAveragePowerPeak;
    double mMaxPeak;
    struct AudioUnitMeterClipping mClipping;
    double mAveragePowerF;
    float m_vAvePower[16];
    int mAveragePowerI;
};

struct UIEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct UIOffset {
    double _field1;
    double _field2;
};

struct _NSRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct vector<float, std::__1::allocator<float>> {
    float *__begin_;
    float *__end_;
    struct __compressed_pair<float *, std::__1::allocator<float>> {
        float *__first_;
    } __end_cap_;
};

#pragma mark Typedef'd Structures

typedef struct {
    double beginTime;
    double endTime;
} CDStruct_73a5d3ca;

typedef struct {
    float scale;
    double vDeltaWaveformToTimeBaseline;
    double vDeltaTimeBaselineToTitleBaseline;
    double vDeltaTitleBaselineToDateBaseline;
    double vDeltaDateBaselineToControlsTop;
    double vDeltaControlsBottomToBottom;
    double vDeltaControlsTopToNavigationBottom;
    _Bool hIsWaveformFlushToEdges;
    double hDeltaAdditionalInsetFromWaveformEdge;
    double hDeltaControlButtonsSpacing;
    double hDeltaTrimProgressInset;
    double hDeltaAcousticAnnotationLabelToWaveformRight;
    double hTrimModeInset;
    double hDetailNavigationBarInset;
    double hPresentedRecordMemoHeight;
    double vDeltaLockNotificationListTop;
    double vDeltaLockNotificationListTopToRecordingTextBaseline;
    double vDeltaLockAbsoluteTopToWaveformTop;
    double vDeltaLockNotificationListBottom;
    double vDeltaLockNotificationListBottomToRecordingTimeBaseline;
} CDStruct_66e6f92a;

// Template types
typedef struct vector<float, std::__1::allocator<float>> {
    float *__begin_;
    float *__end_;
    struct __compressed_pair<float *, std::__1::allocator<float>> {
        float *__first_;
    } __end_cap_;
} vector_ec52ae8c;

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/VoiceMemos.framework/VoiceMemos
// UUID: E32D64C8-7133-33CC-BA16-262E96231BAD
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 400.0.0.0.0
//            Minimum iOS version: 8.0.0
//                    SDK version: 8.0.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol AVCaptureAudioDataOutputSampleBufferDelegate <NSObject>

@optional
- (void)captureOutput:(AVCaptureOutput *)arg1 didOutputSampleBuffer:(struct opaqueCMSampleBuffer *)arg2 fromConnection:(AVCaptureConnection *)arg3;
@end

@protocol GLKViewDelegate <NSObject>
- (void)glkView:(GLKView *)arg1 drawInRect:(struct CGRect)arg2;
@end

@protocol MPAVRoutingControllerDelegate <NSObject>

@optional
- (void)routingController:(MPAVRoutingController *)arg1 didFailToPickRouteWithError:(NSError *)arg2;
- (void)routingControllerExternalScreenTypeDidChange:(MPAVRoutingController *)arg1;
- (void)routingControllerAvailableRoutesDidChange:(MPAVRoutingController *)arg1;
@end

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSFetchedResultsControllerDelegate

@optional
- (NSString *)controller:(NSFetchedResultsController *)arg1 sectionIndexTitleForSectionName:(NSString *)arg2;
- (void)controllerDidChangeContent:(NSFetchedResultsController *)arg1;
- (void)controllerWillChangeContent:(NSFetchedResultsController *)arg1;
- (void)controller:(NSFetchedResultsController *)arg1 didChangeSection:(id <NSFetchedResultsSectionInfo>)arg2 atIndex:(unsigned long long)arg3 forChangeType:(unsigned long long)arg4;
- (void)controller:(NSFetchedResultsController *)arg1 didChangeObject:(id)arg2 atIndexPath:(NSIndexPath *)arg3 forChangeType:(unsigned long long)arg4 newIndexPath:(NSIndexPath *)arg5;
@end

@protocol NSMutableCopying
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSSecureCoding <NSCoding>
+ (_Bool)supportsSecureCoding;
@end

@protocol RCAVPlayerDelegate <NSObject>
- (void)playerDidBecomeInvalid:(RCAVPlayer *)arg1;
- (void)playerCurrentTimeDidChange:(RCAVPlayer *)arg1;
- (void)playerCurrentRateDidChange:(RCAVPlayer *)arg1;
- (void)playerCurrentItemDidBecomeReadyToPlay:(RCAVPlayer *)arg1;
@end

@protocol RCAVWaveformViewControllerDelegate
- (void)audioWaveformControllerDidChangeAVTimes:(RCAVWaveformViewController *)arg1;
- (void)audioWaveformControllerDidChangeAVState:(RCAVWaveformViewController *)arg1;
- (void)audioWaveformControllerDidChangeWaveformDataSource:(RCAVWaveformViewController *)arg1;
@end

@protocol RCCaptureOutputWriterDelegate <NSObject>
- (void)captureOutputWriter:(RCCaptureOutputWriter *)arg1 didOutputSampleBuffer:(struct opaqueCMSampleBuffer *)arg2;
- (void)captureOutputWriter:(RCCaptureOutputWriter *)arg1 didFinishWritingToOutputFileAtURL:(NSURL *)arg2 error:(NSError *)arg3;
- (void)captureOutputWriter:(RCCaptureOutputWriter *)arg1 willFinishWritingToOutputFileAtURL:(NSURL *)arg2 error:(NSError *)arg3;
- (void)captureOutputWriter:(RCCaptureOutputWriter *)arg1 didResumeWritingToOutputFileAtURL:(NSURL *)arg2;
- (void)captureOutputWriter:(RCCaptureOutputWriter *)arg1 didPauseWritingToOutputFileAtURL:(NSURL *)arg2;
- (void)captureOutputWriter:(RCCaptureOutputWriter *)arg1 didStartWritingToOutputFileAtURL:(NSURL *)arg2;
- (void)captureOutputWriter:(RCCaptureOutputWriter *)arg1 captureSessionDidTerminateWithError:(NSError *)arg2;
@end

@protocol RCCaptureSessionObserver <NSObject>
- (void)captureSession:(RCCaptureSession *)arg1 destinationFragmentDurationDidChangeToDuration:(double)arg2;
- (void)captureSession:(RCCaptureSession *)arg1 rateDidChangeToRate:(float)arg2;
- (void)captureSession:(RCCaptureSession *)arg1 didFinishWithSuccess:(_Bool)arg2;
@end

@protocol RCCurrentRecordingViewControllerDelegate <NSObject>
- (void)currentRecordingViewController:(RCCurrentRecordingViewController *)arg1 didDeterminteAvailability:(_Bool)arg2;
- (void)currentRecordingViewController:(RCCurrentRecordingViewController *)arg1 didChangeAVState:(RCAVState *)arg2;
- (void)currentRecordingViewControllerRecordingDidEnd:(RCCurrentRecordingViewController *)arg1;
@end

@protocol RCDictionaryPListRepresentationCoding <NSObject>
- (NSDictionary *)dictionaryPListRepresentation;
- (id)initWithDictionaryPListRepresentation:(NSDictionary *)arg1;
@end

@protocol RCGLWaveformRendererDelegate <NSObject>
- (void)waveformRendererDidSynchronizeToDisplayLink:(RCGLWaveformRenderer *)arg1;
- (void)waveformRendererContentDidFinishLoading:(RCGLWaveformRenderer *)arg1;
- (void)waveformRenderer:(RCGLWaveformRenderer *)arg1 contentWidthDidChange:(double)arg2;
@end

@protocol RCGLWaveformViewDelegate <NSObject>
- (void)waveformViewController:(RCGLWaveformViewController *)arg1 didChangeToSelectedTimeRange:(CDStruct_73a5d3ca)arg2;
- (void)waveformViewControllerDidEndEditingSelectedTimeRange:(RCGLWaveformViewController *)arg1;
- (void)waveformViewControllerWillBeginEditingSelectedTimeRange:(RCGLWaveformViewController *)arg1;
- (void)waveformViewController:(RCGLWaveformViewController *)arg1 didScrubToTime:(double)arg2 finished:(_Bool)arg3;
@end

@protocol RCPreviewControllerObserver <NSObject>
- (void)previewController:(RCPreviewController *)arg1 playbackDidStopPlayingWithError:(NSError *)arg2;
- (void)previewController:(RCPreviewController *)arg1 playbackTimeDidJumpWithPreviousTime:(double)arg2;
- (void)previewController:(RCPreviewController *)arg1 playbackDidBeginWithRate:(float)arg2;

@optional
- (void)previewControllerDidChangePreparingState:(RCPreviewController *)arg1;
- (void)previewController:(RCPreviewController *)arg1 playbackTimeDidUpdateToCurrentTime:(double)arg2;
@end

@protocol RCSSavedRecordingServiceClientProtocol <NSObject>
@end

@protocol RCSSavedRecordingServiceProtocol <NSObject>
- (oneway void)fetchExportingCompositionAVURLs:(void (^)(NSSet *))arg1;
- (oneway void)enableOrphanHandlingWithCompletionBlock:(void (^)(NSError *))arg1;
- (oneway void)disableOrphanHandlingWithCompletionBlock:(void (^)(NSError *))arg1;
- (oneway void)enableOrphanedFragmentCleanupForCompositionAVURL:(NSURL *)arg1;
- (oneway void)disableOrphanedFragmentCleanupForCompositionAVURL:(NSURL *)arg1;
- (oneway void)endAccessSessionWithToken:(RCSSavedRecordingAccessToken *)arg1;
- (oneway void)prepareToTrimCompositionAVURL:(NSURL *)arg1 accessRequestHandler:(void (^)(RCSSavedRecordingAccessToken *, NSError *))arg2;
- (oneway void)prepareToExportCompositionAVURL:(NSURL *)arg1 cacheWaveform:(_Bool)arg2 accessRequestHandler:(void (^)(RCSSavedRecordingAccessToken *, NSError *))arg3;
- (oneway void)prepareToPreviewCompositionAVURL:(NSURL *)arg1 accessRequestHandler:(void (^)(RCSSavedRecordingAccessToken *, NSError *))arg2;
- (oneway void)prepareToCaptureToCompositionAVURL:(NSURL *)arg1 accessRequestHandler:(void (^)(RCSSavedRecordingAccessToken *, NSError *))arg2;
@end

@protocol RCUIClientCurrentRecordingViewController <NSObject>
- (void)currentRecordingAVStateDidChange:(RCAVState *)arg1;
- (void)currentRecordingDidEnd;
@end

@protocol RCUIServiceCurrentRecordingViewController <NSObject>
- (void)loadCaptureStateWithCompletionBlock:(void (^)(RCAVState *))arg1;
- (void)dismissLockscreenInterface;
- (void)presentLockscreenInterfaceWithBackgroundColor:(UIColor *)arg1 waveformForegroundColor:(UIColor *)arg2;
- (void)setScreenUpdatesDisabled:(_Bool)arg1;
@end

@protocol RCWaveformDataSourceObserver <NSObject>
- (void)waveformDataSource:(RCWaveformDataSource *)arg1 didLoadWaveformSegment:(RCWaveformSegment *)arg2;
- (void)waveformDataSourceDidFinishLoading:(RCWaveformDataSource *)arg1;
@end

@protocol RCWaveformGeneratorSegmentOutputObserver <NSObject>
- (void)waveformGenerator:(RCWaveformGenerator *)arg1 didLoadWaveformSegment:(RCWaveformSegment *)arg2;
- (void)waveformGeneratorDidFinishLoading:(RCWaveformGenerator *)arg1 error:(NSError *)arg2;
- (void)waveformGeneratorWillBeginLoading:(RCWaveformGenerator *)arg1;
@end

@protocol RCWaveformSelectionOverlayDelegate <NSObject>
- (double)waveformSelectionOverlay:(RCWaveformSelectionOverlay *)arg1 timeForOffset:(double)arg2;
- (double)waveformSelectionOverlay:(RCWaveformSelectionOverlay *)arg1 offsetForTime:(double)arg2;
- (double)waveformSelectionOverlay:(RCWaveformSelectionOverlay *)arg1 willChangeAssetCurrentTime:(double)arg2 isTracking:(_Bool)arg3;
- (CDStruct_73a5d3ca)waveformSelectionOverlay:(RCWaveformSelectionOverlay *)arg1 willChangeSelectedTimeRange:(CDStruct_73a5d3ca)arg2 isTracking:(_Bool)arg3;
- (void)waveformSelectionOverlay:(RCWaveformSelectionOverlay *)arg1 didFinishTrackingSelectionBeginTime:(_Bool)arg2 endTime:(_Bool)arg3 assetCurrentTime:(_Bool)arg4;
- (void)waveformSelectionOverlay:(RCWaveformSelectionOverlay *)arg1 willBeginTrackingSelectionBeginTime:(_Bool)arg2 endTime:(_Bool)arg3 assetCurrentTime:(_Bool)arg4;
@end

@protocol UIActionSheetDelegate <NSObject>

@optional
- (void)actionSheet:(UIActionSheet *)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)actionSheet:(UIActionSheet *)arg1 willDismissWithButtonIndex:(long long)arg2;
- (void)didPresentActionSheet:(UIActionSheet *)arg1;
- (void)willPresentActionSheet:(UIActionSheet *)arg1;
- (void)actionSheetCancel:(UIActionSheet *)arg1;
- (void)actionSheet:(UIActionSheet *)arg1 clickedButtonAtIndex:(long long)arg2;
@end

@protocol UIActivityItemSource <NSObject>
- (id)activityViewController:(UIActivityViewController *)arg1 itemForActivityType:(NSString *)arg2;
- (id)activityViewControllerPlaceholderItem:(UIActivityViewController *)arg1;

@optional
- (UIImage *)activityViewController:(UIActivityViewController *)arg1 thumbnailImageForActivityType:(NSString *)arg2 suggestedSize:(struct CGSize)arg3;
- (NSString *)activityViewController:(UIActivityViewController *)arg1 dataTypeIdentifierForActivityType:(NSString *)arg2;
- (NSString *)activityViewController:(UIActivityViewController *)arg1 subjectForActivityType:(NSString *)arg2;
@end

@protocol UIScrollViewDelegate <NSObject>

@optional
- (void)scrollViewDidScrollToTop:(UIScrollView *)arg1;
- (_Bool)scrollViewShouldScrollToTop:(UIScrollView *)arg1;
- (void)scrollViewDidEndZooming:(UIScrollView *)arg1 withView:(UIView *)arg2 atScale:(double)arg3;
- (void)scrollViewWillBeginZooming:(UIScrollView *)arg1 withView:(UIView *)arg2;
- (UIView *)viewForZoomingInScrollView:(UIScrollView *)arg1;
- (void)scrollViewDidEndScrollingAnimation:(UIScrollView *)arg1;
- (void)scrollViewDidEndDecelerating:(UIScrollView *)arg1;
- (void)scrollViewWillBeginDecelerating:(UIScrollView *)arg1;
- (void)scrollViewDidEndDragging:(UIScrollView *)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewWillEndDragging:(UIScrollView *)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (void)scrollViewWillBeginDragging:(UIScrollView *)arg1;
- (void)scrollViewDidZoom:(UIScrollView *)arg1;
- (void)scrollViewDidScroll:(UIScrollView *)arg1;
@end

@interface AVPlayerItem (RCAdditions)
- (double)_rawDurationInSeconds;
@property(readonly, nonatomic) _Bool rc_isDurationAvailable;
@property(readonly, nonatomic) double rc_durationInSeconds;
@property(nonatomic, setter=rc_setPreviewTimeRange:) CDStruct_73a5d3ca rc_previewTimeRange;
@property(readonly, nonatomic) CDStruct_73a5d3ca rc_playableTimeRange;
@end

@interface AVURLAsset (RCAdditions)
+ (id)rc_preciseTimingAssetWithURL:(id)arg1;
@property(readonly, nonatomic) double rc_durationInSeconds;
@end

@interface MPAVRoute (RCAdditions)
@property(readonly, nonatomic) long long rc_audioRouteType;
@property(readonly, nonatomic) _Bool rc_shouldExpectFaceContact;
@end

@interface NSFileManager (RCAdditions)
- (_Bool)rc_fileExistsAndIsInValidRecordingURL:(id)arg1;
- (id)rc_uniqueFileSystemURLWithPreferredURL:(id)arg1 uniquenessFormatString:(id)arg2;
- (_Bool)rc_isRestrictedByFileProtectionFromReadingAtPath:(id)arg1;
- (_Bool)rc_isRestrictedByFileProtectionFromWritingAtPath:(id)arg1;
- (_Bool)rc_isRestrictedByFileProtectionFromCreatingItemsInDirectory:(id)arg1;
- (long long)rc_dataProtectionKeyBagState;
@end

@interface NSLayoutConstraint (RCAdditions)
+ (id)rc_constraintsWithVisualFormat:(id)arg1 options:(unsigned long long)arg2 metrics:(id)arg3 views:(id)arg4 label:(id)arg5;
+ (id)rc_viewsInConstraints:(id)arg1;
+ (id)rc_constraintsBySizingView:(id)arg1 toSize:(struct CGSize)arg2;
+ (id)rc_constraintsByAttachingView:(id)arg1 toView:(id)arg2 alongEdges:(unsigned long long)arg3 insets:(struct UIEdgeInsets)arg4;
+ (id)rc_constraintsByAttachingView:(id)arg1 toView:(id)arg2 alongEdges:(unsigned long long)arg3 relatedBy:(long long)arg4 insets:(struct UIEdgeInsets)arg5;
+ (id)rc_constraintsByCenteringView:(id)arg1 withView:(id)arg2 alongAxes:(unsigned long long)arg3 offset:(struct UIOffset)arg4;
+ (_Bool)rc_areConstraints:(id)arg1 equalToConstraints:(id)arg2;
- (void)rc_setIdentifierWithLabel:(id)arg1;
- (id)rc_debugIdentifierWithBaseLabel:(id)arg1;
- (_Bool)rc_isEqualToConstraint:(id)arg1;
@end

@interface NSNumber (RCAdditions)
- (long long)rc_persistentIDValue;
@end

@interface NSString (RCAdditions)
+ (id)rc_stringWithPersistentID:(long long)arg1;
- (long long)rc_persistentIDValue;
- (id)rc_stringByReplacingBreakingWithNonBreakingSpaces;
@end

@interface NSURL (RCAdditions)
- (id)rc_URLByReplacingPathExtensionWithExtension:(id)arg1;
- (id)rc_URLByAppendingStringToLastComponentBasename:(id)arg1;
@end

@interface RCAVPlayer : AVPlayer
{
    _Bool _valid;
    id _periodicTimeObserverToken;
    AVPlayerItem *_AVPlayerItemBeingObserved;
    double _updateRate;
    id <RCAVPlayerDelegate> _delegate;
}

@property(nonatomic) __weak id <RCAVPlayerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) double updateRate; // @synthesize updateRate=_updateRate;
- (void).cxx_destruct;
- (void)_invalidate;
- (void)_rateDidChange;
- (void)_periodicTimeUpdate;
- (void)_currentItemBecameReadyToPlay;
- (void)_endObservingObservedPlayerItem;
- (void)_beginObservingPlayerItem:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)_AVAudioSessionMediaServicesWereResetNotification:(id)arg1;
- (void)_AVAudioSessionMediaServicesWereLostNotification:(id)arg1;
@property(readonly, nonatomic) _Bool isReadyToPlay;
- (void)replaceCurrentItemWithPlayerItem:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface RCAVState : NSObject <NSSecureCoding, NSCopying>
{
    long long _AVCaptureState;
    long long _AVPreviewState;
}

+ (id)inactiveState;
+ (_Bool)supportsSecureCoding;
@property(nonatomic) long long AVPreviewState; // @synthesize AVPreviewState=_AVPreviewState;
@property(nonatomic) long long AVCaptureState; // @synthesize AVCaptureState=_AVCaptureState;
- (id)_assetStateByTransitioningItermediateStatesToGoalStates;
- (id)_assetStateByChangingToCaptureState:(long long)arg1 previewState:(long long)arg2;
@property(readonly, nonatomic) _Bool isPreviewActiveOrPreparing;
@property(readonly, nonatomic) _Bool isCaptureActiveOrPreparing;
@property(readonly, nonatomic) _Bool isCaptureActiveOrPreparingOrResumable;
@property(readonly, nonatomic) _Bool isPreviewActive;
@property(readonly, nonatomic) _Bool isPreviewPreparing;
@property(readonly, nonatomic) _Bool isPreviewInactive;
@property(readonly, nonatomic) _Bool isCapturePaused;
@property(readonly, nonatomic) _Bool isCaptureActive;
@property(readonly, nonatomic) _Bool isCapturePreparing;
@property(readonly, nonatomic) _Bool isCaptureInactive;
- (id)assetStateByChangingToPreviewState:(long long)arg1;
- (id)assetStateByChangingToPreviewRate:(float)arg1;
- (id)assetStateByTogglingPreview;
- (id)assetStateByChangingToCaptureState:(long long)arg1;
- (id)assetStateByCaptureState;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface RCAVWaveformViewController : UIViewController <RCGLWaveformViewDelegate, RCPreviewControllerObserver, RCCaptureSessionObserver>
{
    double _defaultVisibleDuration;
    long long _batchUpdatingDisplayableTimesCount;
    _Bool _needsUpdateDisplayableTime;
    _Bool _showingSelectionOverlayEnabled;
    _Bool _screenUpdatesDisabled;
    RCPreviewController *_activePreviewController;
    RCCaptureSession *_activeCaptureSession;
    RCCompositionController *_activeCaptureCompositionController;
    _Bool _currentTimeTracksCapturedEndPoint;
    _Bool _autocenterCurrentTimeIndicatorAlways;
    _Bool _clipsTimeMarkersToDuration;
    _Bool _userInteractionEnabled;
    _Bool _selectionOverlayVisible;
    RCWaveformDataSource *_waveformDataSource;
    id <RCAVWaveformViewControllerDelegate> _delegate;
    RCAVState *_AVState;
    double _nextPreviewStartTime;
    double _currentTime;
    double _duration;
    RCUIConfiguration *_UIConfiguration;
    RCLayoutMetrics *_layoutMetrics;
    double _maximumSelectionDuration;
    RCGLWaveformViewController *_waveformViewController;
    CDStruct_73a5d3ca _highlightTimeRange;
}

@property(retain, nonatomic) RCGLWaveformViewController *waveformViewController; // @synthesize waveformViewController=_waveformViewController;
@property(nonatomic) double maximumSelectionDuration; // @synthesize maximumSelectionDuration=_maximumSelectionDuration;
@property(readonly, nonatomic, getter=isSelectionOverlayVisible) _Bool selectionOverlayVisible; // @synthesize selectionOverlayVisible=_selectionOverlayVisible;
@property(nonatomic, getter=isUserInteractionEnabled) _Bool userInteractionEnabled; // @synthesize userInteractionEnabled=_userInteractionEnabled;
@property(nonatomic) _Bool clipsTimeMarkersToDuration; // @synthesize clipsTimeMarkersToDuration=_clipsTimeMarkersToDuration;
@property(nonatomic) _Bool autocenterCurrentTimeIndicatorAlways; // @synthesize autocenterCurrentTimeIndicatorAlways=_autocenterCurrentTimeIndicatorAlways;
@property(nonatomic) _Bool screenUpdatesDisabled; // @synthesize screenUpdatesDisabled=_screenUpdatesDisabled;
@property(retain, nonatomic) RCLayoutMetrics *layoutMetrics; // @synthesize layoutMetrics=_layoutMetrics;
@property(copy, nonatomic) RCUIConfiguration *UIConfiguration; // @synthesize UIConfiguration=_UIConfiguration;
@property(nonatomic) double duration; // @synthesize duration=_duration;
@property(nonatomic) _Bool currentTimeTracksCapturedEndPoint; // @synthesize currentTimeTracksCapturedEndPoint=_currentTimeTracksCapturedEndPoint;
@property(nonatomic) double currentTime; // @synthesize currentTime=_currentTime;
@property(nonatomic) CDStruct_73a5d3ca highlightTimeRange; // @synthesize highlightTimeRange=_highlightTimeRange;
@property(readonly, nonatomic) double nextPreviewStartTime; // @synthesize nextPreviewStartTime=_nextPreviewStartTime;
@property(readonly, nonatomic) RCAVState *AVState; // @synthesize AVState=_AVState;
@property(retain, nonatomic) RCPreviewController *activePreviewController; // @synthesize activePreviewController=_activePreviewController;
@property(retain, nonatomic) RCCaptureSession *activeCaptureSession; // @synthesize activeCaptureSession=_activeCaptureSession;
@property(nonatomic) __weak id <RCAVWaveformViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) RCWaveformDataSource *waveformDataSource; // @synthesize waveformDataSource=_waveformDataSource;
- (void).cxx_destruct;
- (void)_endShowingSelectionOverlayWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)_beginShowingSelectionOverlay;
- (void)_updateInterfaceForAVState;
- (unsigned long long)_currentTimeDisplayOptionsIgnoringSelectionOverlayState:(_Bool)arg1;
- (unsigned long long)_currentTimeDisplayOptions;
- (void)_setSelectionOverlayEnabled:(_Bool)arg1;
- (void)_updateDisplayableTimesWithBlock:(CDUnknownBlockType)arg1;
- (void)_didUpdateDisplayableTime;
- (void)_updateCurrentTimeForCapturedInput;
- (void)_setWaveformDataSource:(id)arg1 initialTime:(double)arg2;
- (void)_applicationDidEnterBackgroundNotification:(id)arg1;
- (void)_applicationWillEnterForegroundNotification:(id)arg1;
- (void)captureSession:(id)arg1 didFinishWithSuccess:(_Bool)arg2;
- (void)captureSession:(id)arg1 rateDidChangeToRate:(float)arg2;
- (void)captureSession:(id)arg1 destinationFragmentDurationDidChangeToDuration:(double)arg2;
- (void)previewController:(id)arg1 playbackTimeDidUpdateToCurrentTime:(double)arg2;
- (void)previewController:(id)arg1 playbackDidStopPlayingWithError:(id)arg2;
- (void)previewController:(id)arg1 playbackTimeDidJumpWithPreviousTime:(double)arg2;
- (void)previewController:(id)arg1 playbackDidBeginWithRate:(float)arg2;
- (void)waveformViewController:(id)arg1 didChangeToSelectedTimeRange:(CDStruct_73a5d3ca)arg2;
- (void)waveformViewControllerDidEndEditingSelectedTimeRange:(id)arg1;
- (void)waveformViewControllerWillBeginEditingSelectedTimeRange:(id)arg1;
- (void)waveformViewController:(id)arg1 didScrubToTime:(double)arg2 finished:(_Bool)arg3;
@property(readonly, nonatomic) CDStruct_73a5d3ca selectedTimeRange;
- (void)setSelectedTimeRange:(CDStruct_73a5d3ca)arg1 animationDuration:(double)arg2;
- (void)hidSelectionOverlayWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)showSelectionOverlay;
@property(readonly, nonatomic) double currentTimeIndicatorCoordinate;
@property(readonly, nonatomic) double waveformBottomLineInset;
- (struct CGRect)waveformRectForLayoutBounds:(struct CGRect)arg1;
- (struct CGRect)annotatedWaveformRectForLayoutBounds:(struct CGRect)arg1;
- (CDStruct_73a5d3ca)setHighlightTimeRange;
@property(nonatomic) CDStruct_73a5d3ca visibleTimeRange;
@property(readonly, nonatomic) CDStruct_73a5d3ca nextPreviewTimeRange;
- (void)setAVState:(id)arg1;
- (void)reloadWaveformDataSource:(id)arg1 initialTime:(double)arg2;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLayoutSubviews;
- (void)viewDidLoad;
- (void)dealloc;
- (id)initWithWaveformDataSource:(id)arg1 delegate:(id)arg2;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface RCAcousticAnnotationView : UIView
{
    struct CGGradient *_decibelMarkerBackgroundGradient;
    RCUIConfiguration *_UIConfiguration;
    RCLayoutMetrics *_layoutMetrics;
    double _gradientAlpha;
}

+ (double)requiredWidth;
@property(nonatomic) double gradientAlpha; // @synthesize gradientAlpha=_gradientAlpha;
@property(retain, nonatomic) RCLayoutMetrics *layoutMetrics; // @synthesize layoutMetrics=_layoutMetrics;
@property(copy, nonatomic) RCUIConfiguration *UIConfiguration; // @synthesize UIConfiguration=_UIConfiguration;
- (void).cxx_destruct;
- (id)_zeroMarkerAttributes;
- (id)_decibelMarkersAttributes;
- (void)_reloadGradient;
- (void)drawRect:(struct CGRect)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (struct CGSize)intrinsicContentSize;
- (struct CGRect)annotationBoundaryRect;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface RCActionSheetAlertController : UIAlertController
{
}

@end

@interface RCActionSheetController : NSObject <UIActionSheetDelegate>
{
    _Bool _showing;
    NSString *_alertTitle;
    NSString *_alertMessage;
    NSString *_cancelButtonTitle;
    NSArray *_actionButtonTitles;
    _Bool _dismissWhenDismissIsEnabled;
    UIResponder *_originalFirstResponder;
    RCActionSheetAlertController *_alertController;
    UIViewController *_modalItemPresentationViewController;
    _Bool _autoDismissDisabled;
    _Bool _enabled;
    UIViewController *_accessoryViewController;
    CDUnknownBlockType _actionHandlerBlock;
}

@property(readonly, copy, nonatomic) CDUnknownBlockType actionHandlerBlock; // @synthesize actionHandlerBlock=_actionHandlerBlock;
@property(readonly, nonatomic) UIViewController *accessoryViewController; // @synthesize accessoryViewController=_accessoryViewController;
@property(nonatomic) _Bool enabled; // @synthesize enabled=_enabled;
@property(nonatomic) _Bool autoDismissDisabled; // @synthesize autoDismissDisabled=_autoDismissDisabled;
- (void).cxx_destruct;
- (void)_willDismiss;
- (void)_invokeActionHandlerWithActionIndex:(long long)arg1;
- (void)dismissWithActionIndex:(long long)arg1 invokeActionHandler:(_Bool)arg2;
- (void)dismissWithActionIndex:(long long)arg1;
- (void)cancel;
- (void)showInView:(id)arg1 actionHandlerBlock:(CDUnknownBlockType)arg2;
- (void)showInViewController:(id)arg1 actionHandlerBlock:(CDUnknownBlockType)arg2;
- (void)dealloc;
- (id)initWithTitle:(id)arg1 cancelTitle:(id)arg2 actionTitles:(id)arg3 accessoryViewController:(id)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface RCAudioRouteBarButtonContainer : UIView
{
}

- (struct CGRect)hitRect;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;

@end

@interface RCAudioRouteBarButtonItem : UIBarButtonItem
{
    UIView *_contentView;
    UIButton *_button;
    UIColor *_toggleSpeakerSpeakerRouteChosenColor;
    UIColor *_toggleSpeakerOtherRouteChosenColor;
    _Bool _needsButtonUpdate;
}

+ (id)newAudioRouteItem;
- (void).cxx_destruct;
- (void)_toggleSpeakerAction;
- (void)_showAvailableRoutesAction;
- (void)_audioRouteControllerPickedRouteDidChangeNotification:(id)arg1;
- (void)_audioRouteControllerAvailableRoutesMaskDidChangeNotification:(id)arg1;
- (void)_updateButton;
- (void)_setNeedsUpdateButton;
- (void)dealloc;
- (id)initAudioRouteItem;

@end

@interface RCAudioSessionRoutingAssertion : NSObject
{
    NSString *_debugLabel;
    _Bool _requiresActiveAudioSession;
    long long _priority;
}

+ (id)newCaptureAssertionNamed:(id)arg1;
+ (id)newPreviewAssertionNamed:(id)arg1;
+ (id)newForegroundAppAssertion;
+ (id)newForegroundAppAssertionRequiringActiveAudioSession:(_Bool)arg1;
@property(readonly, nonatomic) long long priority; // @synthesize priority=_priority;
@property(readonly, nonatomic) _Bool requiresActiveAudioSession; // @synthesize requiresActiveAudioSession=_requiresActiveAudioSession;
- (void).cxx_destruct;
- (void)dealloc;
- (id)description;
- (id)initWithDebugLabel:(id)arg1 requiresActiveAudioSession:(_Bool)arg2 priority:(long long)arg3;
- (id)init;

@end

@interface RCAudioSessionRoutingController : NSObject <MPAVRoutingControllerDelegate>
{
    _Bool _useVoiceMemoSettings;
    _Bool _expectsFaceContactWhenHandsetSelected;
    _Bool _hasAppliedUserDefaultForRouteSetting;
    _Bool _shouldReportUserDefaultForRouteSetting;
    struct __CFArray *_weakSessionRoutingAssertions;
    _RCMPRoutingController *_routingController;
    MPAVRoute *_cachedPickedRoute;
    NSArray *_cachedPickableRoutes;
}

+ (id)sharedRouteController;
@property(readonly, nonatomic) _Bool shouldReportUserDefaultForRouteSetting; // @synthesize shouldReportUserDefaultForRouteSetting=_shouldReportUserDefaultForRouteSetting;
@property(readonly, nonatomic) _Bool hasAppliedUserDefaultForRouteSetting; // @synthesize hasAppliedUserDefaultForRouteSetting=_hasAppliedUserDefaultForRouteSetting;
@property(readonly, nonatomic) NSArray *cachedPickableRoutes; // @synthesize cachedPickableRoutes=_cachedPickableRoutes;
@property(readonly, nonatomic) MPAVRoute *cachedPickedRoute; // @synthesize cachedPickedRoute=_cachedPickedRoute;
@property(readonly, nonatomic) _RCMPRoutingController *routingController; // @synthesize routingController=_routingController;
@property(readonly, nonatomic) struct __CFArray *weakSessionRoutingAssertions; // @synthesize weakSessionRoutingAssertions=_weakSessionRoutingAssertions;
@property(nonatomic) _Bool expectsFaceContactWhenHandsetSelected; // @synthesize expectsFaceContactWhenHandsetSelected=_expectsFaceContactWhenHandsetSelected;
@property(nonatomic) _Bool useVoiceMemoSettings; // @synthesize useVoiceMemoSettings=_useVoiceMemoSettings;
- (void).cxx_destruct;
- (void)_pickAudioDeviceRouteType:(long long)arg1;
- (void)_pickSpeakerAudioDeviceRoute;
- (void)_pickHandsetAudioDeviceRoute;
- (void)_setShouldRouteToSpeakerUserDefaultValue:(_Bool)arg1;
- (_Bool)_routeDefaultBoolForKey:(id)arg1 nonVoiceMemoAppValue:(_Bool)arg2;
- (unsigned long long)_availableRoutesMask;
- (unsigned long long)_RCAudioRouteMaskForRoutes:(id)arg1;
- (_Bool)_wirelessRouteIsPickedOrPreferred;
- (_Bool)_speakerIsUserDefaultRoute;
- (_Bool)_speakerRouteIsPickedOrPreferred;
- (void)_updateProximitySetting;
- (void)_updateSpeakerRouteDefault;
- (void)_applyUserDefaultAudioRoute;
- (void)_deactivateAudioSessionCategory;
- (void)_activateAudioSessionCategory;
- (void)_updateAudioSessionActiveStateImmediately:(_Bool)arg1;
- (_Bool)_requireAudioSessionCategoryActiveForAssertions:(id)arg1;
- (void)_setWeakSessionRoutingAssertions:(struct __CFArray *)arg1 applyImmediately:(_Bool)arg2;
- (void)routingControllerAvailableRoutesDidChange:(id)arg1;
- (void)routingControllerIsRoutingToAirPlayMirrorDestinationDidChange:(id)arg1;
- (void)fetchActiveInputRouteWithCompletionHandler:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) NSString *activeInputRouteName;
@property(readonly, nonatomic) _Bool isRoutingToPhoneCall;
@property(readonly, nonatomic) long long selectedRouteType;
@property(readonly, nonatomic) NSString *selectedRouteName;
@property(readonly, nonatomic) unsigned long long availableRoutesMask;
- (void)toggleSpeaker;
- (void)showAvailableRoutes;
- (void)removeRouteAssertion:(id)arg1;
- (void)addRouteAssertion:(id)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface RCAudioTrimmingModalItem : NSObject
{
    AVAssetExportSession *_exportSession;
    NSString *_sourcePath;
    NSString *_destinationPath;
    _Bool _playing;
    _Bool _isBeingDismissed;
    _Bool _cancelTrimRequested;
    RCTrimTimeRangeOperation *_trimOperation;
    NSOperationQueue *_trimOperationQueue;
    RCActionSheetController *_presentedActionSheetController;
    RCAudioTrimmingModalItemViewController *_trimmingViewController;
    _Bool _deletesDestinationPathWhenDone;
    id <RCAudioTrimmingModalItemDelegate> _delegate;
    double _maximumTrimmedDuration;
    RCSavedRecording *_recording;
}

+ (id)exportableAudioFormatPathExtensionWithSourceURL:(id)arg1;
@property(readonly, nonatomic) RCSavedRecording *recording; // @synthesize recording=_recording;
@property(nonatomic) double maximumTrimmedDuration; // @synthesize maximumTrimmedDuration=_maximumTrimmedDuration;
@property(nonatomic) _Bool deletesDestinationPathWhenDone; // @synthesize deletesDestinationPathWhenDone=_deletesDestinationPathWhenDone;
@property(readonly, copy, nonatomic) NSString *destinationPath; // @synthesize destinationPath=_destinationPath;
@property(readonly, copy, nonatomic) NSString *sourcePath; // @synthesize sourcePath=_sourcePath;
@property(nonatomic) __weak id <RCAudioTrimmingModalItemDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)_applicationWillResignActive:(id)arg1;
- (void)_dismissAnimated:(_Bool)arg1;
- (void)dismiss;
- (void)_handleTrimSheetActionWithClickedButtonIndex:(unsigned long long)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)showWithPresentationViewController:(id)arg1 message:(id)arg2 trimButtonTitle:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (void)dealloc;
- (id)initWithDelegate:(id)arg1 sourcePath:(id)arg2 destinationPath:(id)arg3;
- (id)init;

@end

@interface RCAudioTrimmingModalItemView : UIView
{
}

- (void)didMoveToSuperview;

@end

@interface RCAudioTrimmingModalItemViewController : UIViewController <RCAVWaveformViewControllerDelegate>
{
    UIView *_nonWaveformContentView;
    RCAVWaveformViewController *_waveformViewController;
    RCFileInputWaveformDataSource *_waveformDataSource;
    UILabel *_timeDisplayLabel;
    UIButton *_playPauseButton;
    AVPlayerItem *_playerItem;
    RCUIConfiguration *_defaultUIConfiguration;
    RCUIConfiguration *_disabledUIConfiguration;
    RCUIConfiguration *_progressUIConfiguration;
    _Bool _showsProgress;
    _Bool _enabled;
    float _progress;
    NSURL *_audioURL;
    double _maximumDuration;
    RCPreviewController *_previewController;
}

@property(nonatomic, getter=isEnabled) _Bool enabled; // @synthesize enabled=_enabled;
@property(nonatomic) float progress; // @synthesize progress=_progress;
@property(nonatomic) _Bool showsProgress; // @synthesize showsProgress=_showsProgress;
@property(readonly, nonatomic) RCPreviewController *previewController; // @synthesize previewController=_previewController;
@property(readonly, nonatomic) double maximumDuration; // @synthesize maximumDuration=_maximumDuration;
@property(readonly, copy, nonatomic) NSURL *audioURL; // @synthesize audioURL=_audioURL;
- (void).cxx_destruct;
- (id)_playStateImageForAVPreviewState:(long long)arg1;
- (void)_playPauseAction;
- (void)_pausePreviewing;
- (void)_beginOrResumePreviewing;
- (void)_updateAudioStateInterface;
- (id)_currentUIConfiguration;
- (void)audioWaveformControllerDidChangeAVState:(id)arg1;
- (void)audioWaveformControllerDidChangeAVTimes:(id)arg1;
- (void)audioWaveformControllerDidChangeWaveformDataSource:(id)arg1;
- (struct CGSize)_calculatedPreferredContentSize;
- (void)updateViewConstraints;
- (void)viewDidLoad;
- (void)loadView;
- (void)_updateProgressView;
@property(readonly, nonatomic) CDStruct_73a5d3ca selectedTimeRange;
- (id)initWithAudioURL:(id)arg1 maximumDuration:(double)arg2;

@end

@interface RCCaptureFormat : NSObject
{
}

+ (id)AVAssetAuthoringMetadataWithCreationDate:(id)arg1;
+ (void)_AVAssetExportDetermineSettingsForExportingAsset:(id)arg1 outputExtensionWithFallbacks:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
+ (void)AVAssetExportDetermineSettingsForExportingAsset:(id)arg1 preferredOutputExtension:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
+ (id)AVAssetExportPresetForExportingToExtension:(id)arg1;
+ (id)AVMediaTypeForFileExtension:(id)arg1;
+ (id)AVFileTypeUTIForFileExtension:(id)arg1;
+ (id)fileFormatsDirectlyImportable;
+ (id)fileExtensionsSupported;
+ (id)fileExtensionForAssetExport;
+ (id)fileExtensionForIntermediateAssetCapture;

@end

@interface RCCaptureInputDevice : NSObject <RCCaptureSessionObserver>
{
    _Bool _inputAvailable;
    NSString *_activeInputRouteName;
    RCAudioSessionRoutingController *_audioRouteController;
    _RCCaptureInputDeviceSession *_pendingInputSession;
    _RCCaptureInputDeviceSession *_preparingInputSession;
    _RCCaptureInputDeviceSession *_activeInputSession;
}

+ (id)sharedCaptureDevice;
@property(retain, nonatomic) _RCCaptureInputDeviceSession *activeInputSession; // @synthesize activeInputSession=_activeInputSession;
@property(retain, nonatomic) _RCCaptureInputDeviceSession *preparingInputSession; // @synthesize preparingInputSession=_preparingInputSession;
@property(retain, nonatomic) _RCCaptureInputDeviceSession *pendingInputSession; // @synthesize pendingInputSession=_pendingInputSession;
@property(readonly, nonatomic) RCAudioSessionRoutingController *audioRouteController; // @synthesize audioRouteController=_audioRouteController;
@property(readonly, nonatomic) NSString *activeInputRouteName; // @synthesize activeInputRouteName=_activeInputRouteName;
@property(readonly, nonatomic, getter=isInputAvailable) _Bool inputAvailable; // @synthesize inputAvailable=_inputAvailable;
- (void).cxx_destruct;
- (id)_inputSessionForCaptureSession:(id)arg1;
- (_Bool)_removeInputSessionForCaptureSession:(id)arg1 attemptToBeginPending:(_Bool)arg2;
- (id)_activeOrPreparingCaptureSession;
- (void)_beginPendingSession;
- (void)_setPendingCaptureSession:(id)arg1 useStartSoundEffect:(_Bool)arg2 sessionPreparedBlock:(CDUnknownBlockType)arg3;
- (void)_handleDidEndCaptureSession:(id)arg1 success:(_Bool)arg2;
- (void)_updateSelectedRouteAndPostNotification:(_Bool)arg1;
- (void)_updateInputAvailabilityAndPostNotification:(_Bool)arg1;
- (void)captureSession:(id)arg1 destinationFragmentDurationDidChangeToDuration:(double)arg2;
- (void)captureSession:(id)arg1 rateDidChangeToRate:(float)arg2;
- (void)captureSession:(id)arg1 didFinishWithSuccess:(_Bool)arg2;
- (void)_pickedRouteDidChangeNotification:(id)arg1;
- (void)_availableRoutesMaskDidChangeNotification:(id)arg1;
- (void)_captureDeviceWasDisconnectedNotification:(id)arg1;
- (void)_captureDeviceWasConnectedNotification:(id)arg1;
@property(readonly, nonatomic) _Bool canExitApplication;
@property(readonly, nonatomic, getter=isPhoneCallRouteActive) _Bool phoneCallRouteActive;
@property(readonly, nonatomic) RCCaptureSession *activeCaptureSession; // @dynamic activeCaptureSession;
- (void)fetchActiveInputRouteWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)finishRecordingWithSession:(id)arg1 sessionFinishedBlock:(CDUnknownBlockType)arg2;
- (void)beginRecordingWithCaptureWaveformDataSource:(id)arg1 useStartSoundEffect:(_Bool)arg2 sessionPreparedBlock:(CDUnknownBlockType)arg3 sessionFinishedBlock:(CDUnknownBlockType)arg4;
- (id)_init;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface RCWaveformDataSource : NSObject <RCWaveformGeneratorSegmentOutputObserver>
{
    RCMutableWaveform *_accumulatorWaveform;
    _Bool _hasStartedLoading;
    _Bool _hasSavedGeneratedWaveform;
    NSObject<OS_dispatch_queue> *_queue;
    NSObject<OS_dispatch_queue> *_observerQueue;
    RCWaveformGenerator *_waveformGenerator;
    NSURL *_generatedWaveformOutputURL;
    NSHashTable *_weakObservers;
}

@property(readonly, nonatomic) _Bool hasSavedGeneratedWaveform; // @synthesize hasSavedGeneratedWaveform=_hasSavedGeneratedWaveform;
@property(readonly, nonatomic) _Bool hasStartedLoading; // @synthesize hasStartedLoading=_hasStartedLoading;
@property(readonly, nonatomic) NSHashTable *weakObservers; // @synthesize weakObservers=_weakObservers;
@property(readonly, nonatomic) NSURL *generatedWaveformOutputURL; // @synthesize generatedWaveformOutputURL=_generatedWaveformOutputURL;
@property(readonly, nonatomic) RCWaveformGenerator *waveformGenerator; // @synthesize waveformGenerator=_waveformGenerator;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *observerQueue; // @synthesize observerQueue=_observerQueue;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(readonly, nonatomic) RCWaveform *accumulatorWaveform; // @synthesize accumulatorWaveform=_accumulatorWaveform;
- (void).cxx_destruct;
- (void)_performObserversBlock:(CDUnknownBlockType)arg1;
- (void)_performOnObserversBlock:(CDUnknownBlockType)arg1;
- (void)waveformGenerator:(id)arg1 didLoadWaveformSegment:(id)arg2;
- (void)waveformGeneratorDidFinishLoading:(id)arg1 error:(id)arg2;
- (void)waveformGeneratorWillBeginLoading:(id)arg1;
- (void)setAccumulatorWaveformSegments:(id)arg1;
- (void)saveGeneratedWaveformIfNecessary;
- (id)saveableWaveform;
- (id)synchronouslyApproximateWaveformSegmentsByReadingCurrentFileAheadTimeRange:(CDStruct_73a5d3ca)arg1;
@property(readonly, nonatomic) double averagePowerLevelsRate;
- (id)segmentsInCompositionByConvertingFromActiveLoadingFragment:(id)arg1;
- (id)waveformSegmentsInTimeRange:(CDStruct_73a5d3ca)arg1;
@property(readonly, nonatomic) CDStruct_73a5d3ca timeRangeToHighlight;
@property(readonly, nonatomic) double duration;
@property(readonly, nonatomic) float loadingProgress;
@property(readonly, nonatomic) _Bool canceled;
@property(readonly, nonatomic) _Bool finished;
- (_Bool)setPaused:(_Bool)arg1;
- (_Bool)waitUntilFinished;
- (void)finishLoadingWithCompletionTimeoutDate:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)beginLoading;
- (void)removeObserver:(id)arg1;
- (void)addObserver:(id)arg1;
- (void)dealloc;
- (id)initWithWaveformGenerator:(id)arg1 generatedWaveformOutputURL:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface RCCaptureInputWaveformDataSource : RCWaveformDataSource <AVCaptureAudioDataOutputSampleBufferDelegate>
{
    _Bool _overdub;
    _Bool _canUpdateCaptureComposition;
    RCMutableComposition *_capturedComposition;
    RCMutableCompositionFragment *_capturedFragment;
    RCComposition *_destinationComposition;
    RCCompositionFragment *_destinationFragment;
    RCWaveform *_baseWaveform;
    double _updatedCapturedFragmentDuration;
    double _finalCapturedFragmentDuration;
    double _captureInsertionTimeInComposition;
    double _captureInsertionDurationInComposition;
    NSArray *_captureInitialDecomposedFragments;
}

@property(readonly, nonatomic) NSArray *captureInitialDecomposedFragments; // @synthesize captureInitialDecomposedFragments=_captureInitialDecomposedFragments;
@property(readonly, nonatomic) double captureInsertionDurationInComposition; // @synthesize captureInsertionDurationInComposition=_captureInsertionDurationInComposition;
@property(readonly, nonatomic) double captureInsertionTimeInComposition; // @synthesize captureInsertionTimeInComposition=_captureInsertionTimeInComposition;
@property(readonly, nonatomic) _Bool canUpdateCaptureComposition; // @synthesize canUpdateCaptureComposition=_canUpdateCaptureComposition;
@property(readonly, nonatomic) double finalCapturedFragmentDuration; // @synthesize finalCapturedFragmentDuration=_finalCapturedFragmentDuration;
@property(readonly, nonatomic) double updatedCapturedFragmentDuration; // @synthesize updatedCapturedFragmentDuration=_updatedCapturedFragmentDuration;
@property(readonly, nonatomic) RCWaveform *baseWaveform; // @synthesize baseWaveform=_baseWaveform;
@property(readonly, nonatomic, getter=isOverdub) _Bool overdub; // @synthesize overdub=_overdub;
@property(readonly, nonatomic) RCCompositionFragment *destinationFragment; // @synthesize destinationFragment=_destinationFragment;
@property(readonly, nonatomic) RCComposition *destinationComposition; // @synthesize destinationComposition=_destinationComposition;
- (void).cxx_destruct;
- (void)_truncateAccumulatedWaveformSegmentsToEndTime:(double)arg1;
- (void)_extendAccumulatedWaveformSegmentsToMatchFinalDuration:(double)arg1;
- (void)_modifyAccumulatedWaveformSegmentsToMatchFinalDuration:(double)arg1;
- (void)_updateCapturedComposition:(_Bool)arg1;
- (double)_fragmentDuration;
- (void)_captureSesionCompletedWithFinalizedDuration:(double)arg1;
- (void)waveformGeneratorDidFinishLoading:(id)arg1 error:(id)arg2;
- (void)appendAveragePowerLevelsByDigestingWaveformSegment:(id)arg1;
- (void)flushPendingCapturedSampleBuffers;
- (_Bool)appendAveragePowerLevelsByDigestingCapturedSampleBuffer:(struct opaqueCMSampleBuffer *)arg1;
- (void)undoCapture;
- (double)duration;
@property(readonly, nonatomic) RCMutableCompositionFragment *capturedFragment; // @synthesize capturedFragment=_capturedFragment;
@property(readonly, nonatomic) RCMutableComposition *capturedComposition; // @synthesize capturedComposition=_capturedComposition;
- (id)segmentsInCompositionByConvertingFromActiveLoadingFragment:(id)arg1;
- (CDStruct_73a5d3ca)timeRangeToHighlight;
- (id)waveformSegmentsInTimeRange:(CDStruct_73a5d3ca)arg1;
- (id)_captureSegmentsInComponentWaveform:(id)arg1 captureTimeRange:(CDStruct_73a5d3ca)arg2 componentWaveformSegmentOffset:(double)arg3;
- (_Bool)setPaused:(_Bool)arg1;
- (_Bool)waitUntilFinishedWithFinalizedDestinationFragmentDuration:(double)arg1;
- (void)finishLoadingWithCompletionTimeoutDate:(id)arg1 finalizedFragmentDuration:(double)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (_Bool)waitUntilFinished;
- (void)finishLoadingWithCompletionTimeoutDate:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)startLoading;
- (void)_initializeCaptureComposition;
- (id)initWithDestinationComposition:(id)arg1 destinationFragment:(id)arg2 isOverdub:(_Bool)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface RCCaptureOutputWriter : NSObject <AVCaptureAudioDataOutputSampleBufferDelegate>
{
    _Bool _waitingForAVCaptureSessionDidStart;
    _Bool _handledAVCaptureSessionTerminatedAbnormally;
    _Bool _handledAVCaptureSessionFailedToStart;
    _Bool _isProcessingSamples;
    long long _AVCaptureSessionStartupState;
    unsigned long long _sampleBuffersWritten;
    NSMutableArray *_delegateBlocks;
    struct {
        long long value;
        int timescale;
        unsigned int flags;
        long long epoch;
    } _sampleBuffersWrittenDuration;
    _Bool _finalizedAssetEncounteredError;
    double _maxRecordedDuration;
    unsigned long long _maxRecordedFileSize;
    AVCaptureSession *_AVCaptureSession;
    long long _writerState;
    id <RCCaptureOutputWriterDelegate> _captureOutputDelegate;
    NSURL *_finalizedAssetURL;
    double _finalizedAssetDuration;
    NSObject<OS_dispatch_queue> *_queue;
    NSUUID *_recordingSessionID;
    NSURL *_activeOutputFileURL;
    NSDate *_recordingCreationDate;
    AVAssetWriter *_assetWriter;
    NSObject<OS_dispatch_queue> *_sampleBufferQueue;
    AVCaptureAudioDataOutput *_sampleBufferDataOutput;
}

@property(retain, nonatomic) AVCaptureAudioDataOutput *sampleBufferDataOutput; // @synthesize sampleBufferDataOutput=_sampleBufferDataOutput;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *sampleBufferQueue; // @synthesize sampleBufferQueue=_sampleBufferQueue;
@property(retain, nonatomic) AVAssetWriter *assetWriter; // @synthesize assetWriter=_assetWriter;
@property(retain, nonatomic) NSDate *recordingCreationDate; // @synthesize recordingCreationDate=_recordingCreationDate;
@property(retain, nonatomic) NSURL *activeOutputFileURL; // @synthesize activeOutputFileURL=_activeOutputFileURL;
@property(copy, nonatomic) NSUUID *recordingSessionID; // @synthesize recordingSessionID=_recordingSessionID;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(readonly, nonatomic) _Bool finalizedAssetEncounteredError; // @synthesize finalizedAssetEncounteredError=_finalizedAssetEncounteredError;
@property(readonly, nonatomic) double finalizedAssetDuration; // @synthesize finalizedAssetDuration=_finalizedAssetDuration;
@property(readonly, nonatomic) NSURL *finalizedAssetURL; // @synthesize finalizedAssetURL=_finalizedAssetURL;
@property(nonatomic) __weak id <RCCaptureOutputWriterDelegate> captureOutputDelegate; // @synthesize captureOutputDelegate=_captureOutputDelegate;
@property(nonatomic) long long writerState; // @synthesize writerState=_writerState;
@property(readonly, nonatomic) AVCaptureSession *AVCaptureSession; // @synthesize AVCaptureSession=_AVCaptureSession;
- (void).cxx_destruct;
- (long long)_writerState;
- (void)_setWriterState:(long long)arg1;
- (void)_checkIfRecordingSessionEverStarted:(id)arg1;
- (void)_clearSampleDataOutput;
- (void)_prepareCaptureSessionOutputsIfNecessary;
- (void)_scheduleMainThreadDelegateBlock:(CDUnknownBlockType)arg1;
- (void)_finalizeAssetWriting;
- (_Bool)_setupAssetWriter:(id *)arg1 sampleBufferRef:(struct opaqueCMSampleBuffer *)arg2;
- (void)_unregisterForCatpureSessionNotifications;
- (void)_registerForCatpureSessionNotifications;
- (_Bool)_handleEncounteredFatalAssetWriterError;
- (void)_sessionErrored:(id)arg1;
- (void)_sessionDidStopRunning:(id)arg1;
- (_Bool)_handleNotificationAsSessionStartFailure;
- (void)_sessionDidStartRunning:(id)arg1;
- (void)_interruptionDidBegin:(id)arg1;
- (void)captureOutput:(id)arg1 didOutputSampleBuffer:(struct opaqueCMSampleBuffer *)arg2 fromConnection:(id)arg3;
- (void)stopCaptureSession;
- (_Bool)startCaptureSession;
- (void)endWriting;
- (void)resumeWriting;
- (void)pauseWriting;
- (_Bool)startWritingToOutputFileURL:(id)arg1 creationDate:(id)arg2 beginPaused:(_Bool)arg3 captureOutputDelegate:(id)arg4;
@property(nonatomic) unsigned long long maxRecordedFileSize; // @synthesize maxRecordedFileSize=_maxRecordedFileSize;
@property(nonatomic) double maxRecordedDuration; // @synthesize maxRecordedDuration=_maxRecordedDuration;
@property(readonly, nonatomic) double assetWritingCheckpointInterval;
- (void)dealloc;
- (id)initWithAVCaptureSession:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface RCCaptureSession : NSObject <RCCaptureOutputWriterDelegate, RCWaveformDataSourceObserver>
{
    RCCaptureOutputWriter *_captureOutputWriter;
    unsigned long long _backgroundTaskIdentifier;
    NSObject<OS_dispatch_group> *_endCaptureTaskGroup;
    RCAudioSessionRoutingAssertion *_captureRouteAssertion;
    long long _sessionCaptureState;
    NSString *_sessionRouteName;
    NSDate *_captureStartDate;
    _Bool _handledFinishedCapturingAfterCompletionSound;
    _Bool _handlingDidFinishCapturing;
    _Bool _deleteCapturedOutWhenFinished;
    _Bool _destinationShouldBeDeleted;
    _Bool _captureBeginSoundEffectDisabled;
    _Bool _captureEndSoundEffectDisabled;
    NSHashTable *_weakObservers;
    RCCaptureInputDevice *_inputDevice;
    RCCaptureInputWaveformDataSource *_captureWaveformDataSource;
}

+ (void)playCaptureDidFinishSoundEffectWithCompletionBlock:(CDUnknownBlockType)arg1;
+ (void)playCaptureWillStartSoundEffectWithCompletionBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) RCCaptureInputWaveformDataSource *captureWaveformDataSource; // @synthesize captureWaveformDataSource=_captureWaveformDataSource;
@property(readonly, nonatomic) RCCaptureInputDevice *inputDevice; // @synthesize inputDevice=_inputDevice;
- (void).cxx_destruct;
- (void)_setDisableSBMediaHUD:(_Bool)arg1;
- (_Bool)_openAVCaptureSessionAndWaitUntilRunning;
- (_Bool)_attachInputToCaptureSession:(id)arg1;
- (void)_closeCaptureSession;
- (void)_deleteCaptureDestinationAndPostDidEndNotification:(id)arg1;
- (void)_onMainQueueHandleCaptureDidFinishCapturingAfterCompletionSound;
- (_Bool)_handleFinishWritingByRestartingCaptureForError:(id)arg1 testOnly:(_Bool)arg2;
- (void)_handleCaptureSessionDidError:(id)arg1;
- (void)_beginAVCapturingToDestinationInitiallyPaused:(_Bool)arg1;
- (void)_setPostPrepareRequestedState:(long long)arg1;
- (void)_postToObserversWithBlock:(CDUnknownBlockType)arg1;
- (void)_enumerateCaptureSessionObserversWithBlock:(CDUnknownBlockType)arg1;
- (void)_applicationWillTerminateNotification:(id)arg1;
- (void)_captureInputDeviceRouteDidChangeNotification:(id)arg1;
- (void)_captureInputDeviceAvailabilityDidChangeNotification:(id)arg1;
- (void)captureOutputWriter:(id)arg1 didFinishWritingToOutputFileAtURL:(id)arg2 error:(id)arg3;
- (void)captureOutputWriter:(id)arg1 willFinishWritingToOutputFileAtURL:(id)arg2 error:(id)arg3;
- (void)captureOutputWriter:(id)arg1 didResumeWritingToOutputFileAtURL:(id)arg2;
- (void)captureOutputWriter:(id)arg1 didPauseWritingToOutputFileAtURL:(id)arg2;
- (void)captureOutputWriter:(id)arg1 didStartWritingToOutputFileAtURL:(id)arg2;
- (void)captureOutputWriter:(id)arg1 didOutputSampleBuffer:(struct opaqueCMSampleBuffer *)arg2;
- (void)captureOutputWriter:(id)arg1 captureSessionDidTerminateWithError:(id)arg2;
- (void)waveformDataSource:(id)arg1 didLoadWaveformSegment:(id)arg2;
- (void)waveformDataSourceDidFinishLoading:(id)arg1;
- (void)disableCaptureEndSoundEffect;
- (void)disableCaptureBeginSoundEffect;
@property(readonly, nonatomic) RCAVState *AVState;
@property(readonly, nonatomic) _Bool isCaptureSessionFinished;
- (_Bool)isCapturePaused;
- (_Bool)isCaptureActive;
- (_Bool)isPreparing;
@property(readonly, nonatomic) double captureDestinationComposedDuration;
- (void)deleteCapturedOutWhenFinished;
- (void)finishCapturing;
- (void)resumeCapturing;
- (_Bool)canResumeCapturingAtCompositionDestinationTime:(double)arg1;
- (void)pauseCapturing;
- (void)prepareToCaptureWithPreparedHandler:(CDUnknownBlockType)arg1;
- (void)removeCaptureSessionObserver:(id)arg1;
- (void)addCaptureSessionObserver:(id)arg1;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)initWithInputDevice:(id)arg1 captureWaveformDataSource:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface RCChronologicalAnnotationView : UIView
{
    double _majorTickTimeUnit;
    double _majorTickMinimumSpacing;
    unsigned long long _maximumMajorUnitsInVisibleDuration;
    RCUIConfiguration *_UIConfiguration;
    UIColor *_backgroundDebugColor;
    CDStruct_73a5d3ca _visibleTimeRange;
    CDStruct_73a5d3ca _markerClippingRange;
}

@property(retain, nonatomic) UIColor *backgroundDebugColor; // @synthesize backgroundDebugColor=_backgroundDebugColor;
@property(copy, nonatomic) RCUIConfiguration *UIConfiguration; // @synthesize UIConfiguration=_UIConfiguration;
@property(nonatomic) CDStruct_73a5d3ca markerClippingRange; // @synthesize markerClippingRange=_markerClippingRange;
@property(nonatomic) unsigned long long maximumMajorUnitsInVisibleDuration; // @synthesize maximumMajorUnitsInVisibleDuration=_maximumMajorUnitsInVisibleDuration;
@property(nonatomic) CDStruct_73a5d3ca visibleTimeRange; // @synthesize visibleTimeRange=_visibleTimeRange;
- (void).cxx_destruct;
- (id)_timeLabelAttributes;
- (void)_updateMajorTickTimeUnit;
- (void)_loadMajorTickMinimumSpacing;
- (void)setFrame:(struct CGRect)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (struct CGSize)labelsSize;
- (id)description;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface RCComposition : NSObject <NSMutableCopying, NSCopying, RCDictionaryPListRepresentationCoding>
{
    NSURL *_savedRecordingURI;
    NSDate *_creationDate;
    NSURL *_composedAVURL;
    NSURL *_composedWaveformURL;
    NSArray *_decomposedFragments;
    NSArray *_composedFragments;
    double _cachedComposedAVURLDuration;
}

+ (id)_compositionFragmentsFolderForComposedAVURL:(id)arg1;
+ (id)_compositionMetadataURLForComposedAVURL:(id)arg1;
+ (id)_compositionMetadataURLForCompositionBundleURL:(id)arg1;
+ (id)compositionBundleURLForComposedAVURL:(id)arg1;
+ (id)compositionWithComposedAVURL:(id)arg1;
+ (id)compositionLoadedForSavedRecordingURI:(id)arg1 createIfNeeded:(_Bool)arg2;
+ (id)compositionLoadedForComposedAVURL:(id)arg1 createIfNeeded:(_Bool)arg2;
+ (id)compositionLoadedFromCompositionBundleURL:(id)arg1;
+ (id)_compositionLoadedFromMetadataURL:(id)arg1 composedAVURL:(id)arg2 savedRecordingURI:(id)arg3 createIfNeeded:(_Bool)arg4;
+ (id)_unitTestingCompositionWithDecomposedFragments:(id)arg1;
@property(nonatomic) double cachedComposedAVURLDuration; // @synthesize cachedComposedAVURLDuration=_cachedComposedAVURLDuration;
@property(readonly, nonatomic) NSArray *composedFragments; // @synthesize composedFragments=_composedFragments;
@property(retain, nonatomic) NSArray *decomposedFragments; // @synthesize decomposedFragments=_decomposedFragments;
@property(readonly, nonatomic) NSURL *composedWaveformURL; // @synthesize composedWaveformURL=_composedWaveformURL;
@property(readonly, nonatomic) NSURL *composedAVURL; // @synthesize composedAVURL=_composedAVURL;
@property(readonly, nonatomic) NSDate *creationDate; // @synthesize creationDate=_creationDate;
@property(retain, nonatomic) NSURL *savedRecordingURI; // @synthesize savedRecordingURI=_savedRecordingURI;
- (void).cxx_destruct;
- (id)_calcualteComposedFragments;
- (double)_composedDuration;
- (void)recacheComposedDuration;
- (id)compositionByDuplicatingResourcesToDestinationComposedAVURL:(id)arg1;
- (_Bool)saveMetadataToDefaultLocation;
- (void)deleteFromFilesystem;
- (void)enumerateOrphanedFragmentsWithBlock:(CDUnknownBlockType)arg1;
- (id)newRandomFragmentWithInsertionTimeRangeInComposition:(CDStruct_73a5d3ca)arg1 pathExtension:(id)arg2;
- (id)compositionByClippingToComposedTimeRange:(CDStruct_73a5d3ca)arg1;
- (id)compositionByDeletingAndSplittingAtComposedTimeRange:(CDStruct_73a5d3ca)arg1;
- (id)composedFragmentsIntersectingTimeRange:(CDStruct_73a5d3ca)arg1;
- (unsigned long long)estimatedFileSizeOfComposedAssetIncludingRelatedResources:(_Bool)arg1;
- (unsigned long long)_fileSizeOfComposedAssetsIncludingRelatedResources:(_Bool)arg1;
- (unsigned long long)fileSizeOfAssetsIncludingRelatedResources:(_Bool)arg1;
@property(readonly, nonatomic) NSString *title;
@property(readonly, nonatomic) double composedDuration;
- (void)setSavedRecordingURIFromRecoveredRecordingURI:(id)arg1;
- (id)dictionaryPListRepresentation;
- (id)initWithDictionaryPListRepresentation:(id)arg1;
@property(readonly, copy) NSString *description;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithComposedAVURL:(id)arg1 savedRecordingURI:(id)arg2 decomposedFragments:(id)arg3 composedFragments:(id)arg4;
- (id)compositionAsset;
- (id)playableAsset;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface RCCompositionComposedAssetWriter : NSObject
{
    AVAssetExportSession *_exportSession;
    RCWaveformDataSource *_waveformDataSource;
    _Bool _canGenerateWaveform;
    _Bool _canGenerateWaveformByProcessingAVURL;
    _Bool _canSaveCompositionMetadata;
    RCComposition *_composition;
}

@property(nonatomic) _Bool canSaveCompositionMetadata; // @synthesize canSaveCompositionMetadata=_canSaveCompositionMetadata;
@property(nonatomic) _Bool canGenerateWaveformByProcessingAVURL; // @synthesize canGenerateWaveformByProcessingAVURL=_canGenerateWaveformByProcessingAVURL;
@property(nonatomic) _Bool canGenerateWaveform; // @synthesize canGenerateWaveform=_canGenerateWaveform;
@property(readonly, nonatomic) RCComposition *composition; // @synthesize composition=_composition;
- (void).cxx_destruct;
- (void)_writeCompositionWaveformForFinalizedAssetWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)_writeCompositionWaveformForFinalizedAssetFromFragmentsWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)_writeCompositionWithCompletionHandler:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) float progress;
- (void)cancel;
- (void)writeCompositionWithCompletionBlock:(CDUnknownBlockType)arg1;
- (id)initWithComposition:(id)arg1;

@end

@interface RCCompositionController : NSObject
{
    _Bool _hasStartedRecording;
    NSMutableDictionary *_accessTokensByName;
    NSMutableArray *_undoableCompositionItemStack;
    RCComposition *_composition;
    RCCaptureSession *_activeCaptureSession;
}

+ (id)compositionControllerForComposedAVURL:(id)arg1;
@property(readonly, nonatomic) RCCaptureSession *activeCaptureSession; // @synthesize activeCaptureSession=_activeCaptureSession;
@property(retain, nonatomic) RCComposition *composition; // @synthesize composition=_composition;
- (void).cxx_destruct;
- (id)_compositionByReplacingDecomposedFragments:(id)arg1;
- (void)_eaccess_saveCompositionAfterCommitingFinalizedCaptureDataSource:(id)arg1;
- (void)_eaccess_saveCompositionAfterAppendingInProgressCaptureDataSource:(id)arg1;
- (void)_eaccess_repairDecomposedFragmentMetadataIfNecessaryAndSave:(_Bool)arg1;
- (void)_eaccess_saveCompositionAndRecordingDuration:(_Bool)arg1;
- (void)_reloadComposition;
- (id)_nextCaptureWaveformDataSourceWithDestinationTimeRange:(CDStruct_73a5d3ca)arg1 isOverdub:(_Bool)arg2;
- (void)_endAccessSessionWithToken:(id)arg1;
- (void)rcs_repairDecomposedFragmentMetadataIfNecessary;
- (void)rcs_composeToFinalDestinationAndDeleteDecomposedFragments:(_Bool)arg1 composeWaveform:(_Bool)arg2 canGenerateWaveformByProcessingAVURL:(_Bool)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (void)deleteCompositionFromFileSystem;
- (void)deleteCompositionFromFileSystemAndDatabase;
@property(readonly, nonatomic) _Bool isTopUndoableCompositionFromCapture;
@property(readonly, nonatomic) unsigned long long countOfUndoableCompositions;
- (void)performCompositionRedoWithRedoItem:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)performCompositionUndoWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)sanitizeWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)finalizingComposedAssetWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)endTrimAccessSession;
- (void)beginAccessSessionToTrimWithAssetReadyBlock:(CDUnknownBlockType)arg1;
- (void)beginAccessSessionToExportWithAssetReadyBlock:(CDUnknownBlockType)arg1;
- (void)beginAccessSessionToPlayTimeRange:(CDStruct_73a5d3ca)arg1 readyToPlayBlock:(CDUnknownBlockType)arg2;
- (void)activeRecordingSessionWillFinish;
- (void)beginRecordingWithInputDevice:(id)arg1 captureInsertionRange:(CDStruct_73a5d3ca)arg2 isUndoable:(_Bool)arg3 isOverdub:(_Bool)arg4 sessionPreparedBlock:(CDUnknownBlockType)arg5 sessionFinishedBlock:(CDUnknownBlockType)arg6;
- (void)endAccessSessions;
- (void)endPreviewAccessSession;
- (void)endEditing;
- (void)beginEditing;
@property(readonly, nonatomic) NSURL *savedRecordingURI;
- (id)init;
- (id)initWithComposition:(id)arg1;
- (id)activityViewController:(id)arg1 thumbnailImageForActivityType:(id)arg2 suggestedSize:(struct CGSize)arg3;
- (id)activityViewController:(id)arg1 subjectForActivityType:(id)arg2;
- (id)activityViewControllerPlaceholderItem:(id)arg1;
- (id)activityViewController:(id)arg1 itemForActivityType:(id)arg2;
- (id)_activitySourceRecording;

@end

@interface RCCompositionFragment : NSObject <NSMutableCopying, NSCopying, RCDictionaryPListRepresentationCoding>
{
    CDStruct_73a5d3ca _timeRangeInContentToUse;
    NSURL *_AVOutputURL;
    double _contentDuration;
    CDStruct_73a5d3ca _timeRangeInComposition;
}

@property(nonatomic) CDStruct_73a5d3ca timeRangeInComposition; // @synthesize timeRangeInComposition=_timeRangeInComposition;
@property(nonatomic) CDStruct_73a5d3ca timeRangeInContentToUse; // @synthesize timeRangeInContentToUse=_timeRangeInContentToUse;
@property(nonatomic) double contentDuration; // @synthesize contentDuration=_contentDuration;
@property(retain, nonatomic) NSURL *AVOutputURL; // @synthesize AVOutputURL=_AVOutputURL;
- (void).cxx_destruct;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)dictionaryPListRepresentation;
- (id)initWithDictionaryPListRepresentation:(id)arg1;
- (id)fragmentByIntersectingTimeRangeInCompositionWithTimeRange:(CDStruct_73a5d3ca)arg1;
- (unsigned long long)fileSizeOfAssetsIncludingRelatedResources:(_Bool)arg1;
- (void)moveAssetsToFragment:(id)arg1;
- (void)deleteFromFilesystem;
@property(readonly, nonatomic) NSURL *waveformURL;
@property(readonly, copy) NSString *description;
- (id)initWithAVOutputURL:(id)arg1 contentDuration:(double)arg2 timeRangeInContentToUse:(CDStruct_73a5d3ca)arg3 timeRangeInComposition:(CDStruct_73a5d3ca)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface RCCompositionWaveformDataSource : RCWaveformDataSource <RCWaveformDataSourceObserver>
{
    NSObject<OS_dispatch_queue> *_searialQueue;
    float _progressOfFinishedFragments;
    float _progressWeightPerFragment;
    _RCTimeRangeFileInputWaveformDataSource *_activeFragmentDataSource;
    _Bool _preferLoadingFragmentWaveforms;
    _Bool _saveGeneratedWaveform;
    _Bool _highlightLastDecomposedFragment;
    RCComposition *_composition;
    NSOperationQueue *_fragmentLoadingOperationQueue;
}

@property(retain, nonatomic) NSOperationQueue *fragmentLoadingOperationQueue; // @synthesize fragmentLoadingOperationQueue=_fragmentLoadingOperationQueue;
@property(nonatomic) _Bool highlightLastDecomposedFragment; // @synthesize highlightLastDecomposedFragment=_highlightLastDecomposedFragment;
@property(nonatomic) _Bool saveGeneratedWaveform; // @synthesize saveGeneratedWaveform=_saveGeneratedWaveform;
@property(readonly, nonatomic) _Bool preferLoadingFragmentWaveforms; // @synthesize preferLoadingFragmentWaveforms=_preferLoadingFragmentWaveforms;
@property(readonly, nonatomic) RCComposition *composition; // @synthesize composition=_composition;
- (void).cxx_destruct;
- (void)waveformDataSource:(id)arg1 didLoadWaveformSegment:(id)arg2;
- (void)waveformDataSourceDidFinishLoading:(id)arg1;
- (void)waveformGeneratorDidFinishLoading:(id)arg1 error:(id)arg2;
- (CDStruct_73a5d3ca)timeRangeToHighlight;
- (id)saveableWaveform;
- (double)duration;
- (id)synchronouslyApproximateWaveformSegmentsByReadingCurrentFileAheadTimeRange:(CDStruct_73a5d3ca)arg1;
- (void)finishLoadingWithCompletionTimeoutDate:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (_Bool)_synchronouslyAppendSegmentsForAVContentURL:(id)arg1 isDecomposedFragment:(_Bool)arg2 sourceTimeRange:(CDStruct_73a5d3ca)arg3 destinationTime:(double)arg4;
- (float)loadingProgress;
- (void)startLoading;
- (id)initWithComposition:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface RCContentSizeLayoutConstraint : NSLayoutConstraint
{
    id _autoitem;
    id _preferredContentSizeDidChangeObserver;
    _Bool _isConstantUpdatingConstraint;
    double _textStyleDefaultBodyLeading;
    _Bool _autoUpdatingConstantShrinks;
    double _defaultConstant;
    double _additionalConstant;
    NSString *_textStyle;
    CDUnknownBlockType _constantLoadingBlock;
}

+ (double)_maximumWidthOfStrings:(id)arg1 withFont:(id)arg2;
+ (id)baselineConstraintForView:(id)arg1 attribute:(long long)arg2 relation:(long long)arg3 toAutoitem:(id)arg4 defaultConstant:(double)arg5;
+ (id)baselineConstraintForAutoitem:(id)arg1 relation:(long long)arg2 toView:(id)arg3 attribute:(long long)arg4 defaultConstant:(double)arg5;
+ (id)constraintForAutoitem:(id)arg1 additionalConstant:(double)arg2 constantWidthSizingStringsLoadingBlock:(CDUnknownBlockType)arg3;
+ (id)constraintForAutoitem:(id)arg1 additionalConstant:(double)arg2 constantLoadingBlock:(CDUnknownBlockType)arg3;
+ (id)constraintForAutoitem:(id)arg1 constrainedItem:(id)arg2 attribute:(long long)arg3 relatedBy:(long long)arg4 toItem:(id)arg5 attribute:(long long)arg6 multiplier:(double)arg7 defaultConstant:(double)arg8;
+ (id)constraintForAutoitem:(id)arg1 attribute:(long long)arg2 relatedBy:(long long)arg3 toItem:(id)arg4 attribute:(long long)arg5 multiplier:(double)arg6 defaultConstant:(double)arg7;
+ (id)_constraintForAutoitem:(id)arg1 constrainedItem:(id)arg2 attribute:(long long)arg3 relatedBy:(long long)arg4 toItem:(id)arg5 attribute:(long long)arg6 multiplier:(double)arg7 defaultConstant:(double)arg8 additionalConstant:(double)arg9 initialize:(_Bool)arg10;
@property(copy, nonatomic) CDUnknownBlockType constantLoadingBlock; // @synthesize constantLoadingBlock=_constantLoadingBlock;
@property(copy, nonatomic) NSString *textStyle; // @synthesize textStyle=_textStyle;
@property(nonatomic) double additionalConstant; // @synthesize additionalConstant=_additionalConstant;
@property(nonatomic) double defaultConstant; // @synthesize defaultConstant=_defaultConstant;
@property(nonatomic) _Bool autoUpdatingConstantShrinks; // @synthesize autoUpdatingConstantShrinks=_autoUpdatingConstantShrinks;
- (void).cxx_destruct;
- (void)_reloadPreferredContentSize:(_Bool)arg1;
- (void)_updatePreferredContentSize;
- (void)_forceUpdatePreferredContentSize;
- (double)_defaultConstantByFixingUpDefaultConstant:(double)arg1;
- (void)dealloc;

@end

@interface RCControlsView : UIView
{
    _Bool _showsBottomSeparatorLine;
    _Bool _canEnableCaptureButton;
    _Bool _canEnablePreviewButton;
    _Bool _canEnableDoneButton;
    _Bool _canRecord;
    id <RCControlsViewDelegate> _delegate;
    long long _controlsConfiguration;
    RCAVState *_AVState;
    RCLayoutMetrics *_layoutMetrics;
    double _topPadding;
    NSLayoutConstraint *_topPaddingCn;
    UIButton *_leftPlayStateButton;
    UIButton *_doneButton;
    RCRecorderStateButton *_recordingStateButton;
    UIAlertController *_noMicAlertViewController;
    UIColor *_bottomSeparatorLineColor;
}

@property(nonatomic) _Bool canRecord; // @synthesize canRecord=_canRecord;
@property(readonly, nonatomic) UIColor *bottomSeparatorLineColor; // @synthesize bottomSeparatorLineColor=_bottomSeparatorLineColor;
@property(readonly, nonatomic) UIAlertController *noMicAlertViewController; // @synthesize noMicAlertViewController=_noMicAlertViewController;
@property(readonly, nonatomic) RCRecorderStateButton *recordingStateButton; // @synthesize recordingStateButton=_recordingStateButton;
@property(readonly, nonatomic) UIButton *doneButton; // @synthesize doneButton=_doneButton;
@property(readonly, nonatomic) UIButton *leftPlayStateButton; // @synthesize leftPlayStateButton=_leftPlayStateButton;
@property(readonly, nonatomic) NSLayoutConstraint *topPaddingCn; // @synthesize topPaddingCn=_topPaddingCn;
@property(nonatomic) _Bool canEnableDoneButton; // @synthesize canEnableDoneButton=_canEnableDoneButton;
@property(nonatomic) _Bool canEnablePreviewButton; // @synthesize canEnablePreviewButton=_canEnablePreviewButton;
@property(nonatomic) _Bool canEnableCaptureButton; // @synthesize canEnableCaptureButton=_canEnableCaptureButton;
@property(nonatomic) _Bool showsBottomSeparatorLine; // @synthesize showsBottomSeparatorLine=_showsBottomSeparatorLine;
@property(nonatomic) double topPadding; // @synthesize topPadding=_topPadding;
@property(retain, nonatomic) RCLayoutMetrics *layoutMetrics; // @synthesize layoutMetrics=_layoutMetrics;
@property(copy, nonatomic) RCAVState *AVState; // @synthesize AVState=_AVState;
@property(nonatomic) long long controlsConfiguration; // @synthesize controlsConfiguration=_controlsConfiguration;
@property(nonatomic) __weak id <RCControlsViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)_inputAvailabilityDidChangeNotification:(id)arg1;
- (void)_doneButtonPressed:(id)arg1;
- (void)_playStateButtonPressed:(id)arg1;
- (void)_recordingStateButtonPressed:(id)arg1;
- (id)_leftPlayStateImageForAVPreviewState:(long long)arg1;
- (void)_updateButtonsAnimated:(_Bool)arg1;
- (_Bool)_isRecordingOrPausedRecording;
- (_Bool)_isCaptureButtonEnabled;
- (_Bool)_isPreviewButtonEnabled;
- (long long)_AVPreviewState;
- (long long)_AVCaptureState;
- (void)performFailedToStartRecordingActions;
- (void)performRecordButtonPress;
- (id)_recordButton;
- (void)setControlsConfiguration:(long long)arg1 animate:(_Bool)arg2;
- (void)drawRect:(struct CGRect)arg1;
- (struct CGSize)intrinsicContentSize;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)updateConstraints;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface RCCurrentRecordingRemoteViewController : _UIRemoteViewController <RCUIClientCurrentRecordingViewController>
{
    id <RCCurrentRecordingViewControllerDelegate> _delegate;
}

+ (id)exportedInterface;
+ (id)serviceViewControllerInterface;
+ (_Bool)shouldPropagateAppearanceCustomizations;
@property(nonatomic) __weak id <RCCurrentRecordingViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)currentRecordingAVStateDidChange:(id)arg1;
- (void)currentRecordingDidEnd;
- (void)viewServiceDidTerminateWithError:(id)arg1;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface RCCurrentRecordingViewController : UIViewController <RCCurrentRecordingViewControllerDelegate, RCUIServiceCurrentRecordingViewController>
{
    _Bool _screenUpdatesDisabled;
    _Bool _isDisplayingLockscreenInterface;
    UIColor *_presentationBackgroundColor;
    UIColor *_waveformForegroundColor;
    RCCurrentRecordingRemoteViewController *_remoteViewController;
    id <RCCurrentRecordingViewControllerDelegate> _delegate;
    RCAVState *_AVState;
}

+ (Class)remoteViewControllerClass;
+ (id)serviceViewControllerClassName;
@property(retain, nonatomic) RCAVState *AVState; // @synthesize AVState=_AVState;
@property(nonatomic) __weak id <RCCurrentRecordingViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)_failedToBecomeReadyWithMessage:(id)arg1;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (void)currentRecordingViewController:(id)arg1 didChangeAVState:(id)arg2;
- (void)currentRecordingViewControllerRecordingDidEnd:(id)arg1;
- (void)currentRecordingViewController:(id)arg1 didDeterminteAvailability:(_Bool)arg2;
- (void)loadCaptureStateWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)dismissLockscreenInterface;
- (void)presentLockscreenInterfaceWithBackgroundColor:(id)arg1 waveformForegroundColor:(id)arg2;
- (void)setScreenUpdatesDisabled:(_Bool)arg1;
- (void)insertRemoteViewController:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (_Bool)shouldAutomaticallyForwardRotationMethods;
- (_Bool)shouldAutomaticallyForwardAppearanceMethods;
- (id)initWithDelegate:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface RCDevice : NSObject
{
}

+ (unsigned long long)timeDisplayUpdateFrameInterval;
+ (double)audioInputWaveformFlushInterval;

@end

@interface RCEntityRevision : NSManagedObject
{
}

- (void)setRecordingID:(long long)arg1;
@property(readonly, nonatomic) long long recordingID;
- (void)setRevisionID:(long long)arg1;
@property(readonly, nonatomic) long long revisionID;
- (void)setRevisionType:(long long)arg1;
@property(readonly, nonatomic) long long revisionType;

@end

@interface RCExtAudioFilePipe : NSObject
{
    NSObject<OS_dispatch_queue> *_accessQueue;
    unsigned long long _accessQueueID;
    struct OpaqueExtAudioFile *_audioFileRef;
    struct AudioStreamBasicDescription _outputFormatDescriptionStruct;
    struct AudioStreamBasicDescription _sourceFormatDescriptionStruct;
    NSURL *_sourceURL;
    unsigned long long _sourceFileSize;
}

@property(readonly, nonatomic) unsigned long long sourceFileSize; // @synthesize sourceFileSize=_sourceFileSize;
@property(readonly, nonatomic) NSURL *sourceURL; // @synthesize sourceURL=_sourceURL;
- (void).cxx_destruct;
- (void)_accessExtAudioFileWithBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) struct AudioStreamBasicDescription *outputFormatDescription;
@property(readonly, nonatomic) struct AudioStreamBasicDescription *sourceFormatDescription;
- (int)readConvertedFramesIntoBuffer:(id)arg1 requestedFrameCount:(int)arg2;
- (long long)sourceCurrentFrameIndex;
- (_Bool)seekToSourceFrameIndex:(long long)arg1;
- (long long)sourceFrameIndexForTime:(double)arg1;
- (void)performTransactionWithBlock:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (id)initWithURL:(id)arg1 outputFrameRate:(double)arg2 outputFormatID:(unsigned int)arg3;

@end

@interface RCFileInputWaveformDataSource : RCWaveformDataSource
{
    NSObject<OS_dispatch_queue> *_serialQueue;
    double _cachedDuration;
    float _loadingProgress;
    NSURL *_AVFileURL;
}

@property(readonly, copy, nonatomic) NSURL *AVFileURL; // @synthesize AVFileURL=_AVFileURL;
- (void).cxx_destruct;
- (double)duration;
- (void)saveGeneratedWaveformIfNecessary;
- (id)synchronouslyApproximateWaveformSegmentsByReadingCurrentFileAheadTimeRange:(CDStruct_73a5d3ca)arg1;
- (_Bool)setPaused:(_Bool)arg1;
- (void)finishLoadingWithCompletionTimeoutDate:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)startLoading;
- (void)setLoadingProgress:(float)arg1;
- (float)loadingProgress;
@property(readonly, nonatomic) _Bool savesGeneratedWaveform; // @dynamic savesGeneratedWaveform;
- (id)initWithAVFileURL:(id)arg1 savesGeneratedWaveform:(_Bool)arg2 segmentFlushInterval:(double)arg3;
- (id)initWithAVFileURL:(id)arg1;

@end

@interface RCGLKView : GLKView
{
    _Bool _isCreatingSnapshot;
}

+ (Class)layerClass;
@property(readonly, nonatomic) _Bool isCreatingSnapshot; // @synthesize isCreatingSnapshot=_isCreatingSnapshot;
- (void)didMoveToWindow;
@property(readonly, nonatomic) _Bool isRenderingContextValid;
- (void)setFrame:(struct CGRect)arg1;
- (id)snapshot;
- (void)_renderVisibleTimeRange;

@end

@interface RCGLKViewEAGLLayer : CAEAGLLayer
{
}

- (void)setDrawableProperties:(id)arg1;

@end

@interface RCGLWaveformRenderer : UIViewController <GLKViewDelegate, RCWaveformDataSourceObserver>
{
    EAGLContext *_eaglContext;
    CADisplayLink *_displayLink;
    unsigned int _vertexBuffers[2];
    CDStruct_73a5d3ca _renderedTimeRange;
    _Bool _renderedTimeRangeIsApproximatedWaveform;
    CDStruct_73a5d3ca _highlightTimeRange;
    vector_ec52ae8c _waveformVertexData;
    unsigned long long _renderedWaveformVertices;
    unsigned int _shaderProgram;
    int _projectionUniform;
    int _modelviewUniform;
    int _foregroundColorUniform;
    int _highlightColorUniform;
    int _highlightColorTimelineRange;
    _Bool _buffersInitialized;
    _Bool _shadersInitialized;
    _Bool _preparedForRendering;
    _Bool _creatingSnapshot;
    _Bool _centerKeylineRendered;
    struct CGRect _lastViewportRect;
    double _cachedContentWidth;
    _Bool _contentWidthDirty;
    CALayer *_modelviewLayer;
    _Bool _isAnimatingModelview;
    _Bool _needsVisibleRangeRendering;
    _Bool _paused;
    RCWaveformDataSource *_dataSource;
    id <RCGLWaveformRendererDelegate> _rendererDelegate;
    double _spacingWidth;
    double _dataPointWidth;
    RCUIConfiguration *_UIConfiguration;
    CDStruct_73a5d3ca _visibleTimeRange;
}

@property(nonatomic) CDStruct_73a5d3ca visibleTimeRange; // @synthesize visibleTimeRange=_visibleTimeRange;
@property(copy, nonatomic) RCUIConfiguration *UIConfiguration; // @synthesize UIConfiguration=_UIConfiguration;
@property(nonatomic) double dataPointWidth; // @synthesize dataPointWidth=_dataPointWidth;
@property(nonatomic) double spacingWidth; // @synthesize spacingWidth=_spacingWidth;
@property(nonatomic, getter=isPaused) _Bool paused; // @synthesize paused=_paused;
@property(nonatomic) __weak id <RCGLWaveformRendererDelegate> rendererDelegate; // @synthesize rendererDelegate=_rendererDelegate;
@property(retain, nonatomic) RCWaveformDataSource *dataSource; // @synthesize dataSource=_dataSource;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)_didBecomeActiveNotification:(id)arg1;
- (void)_willResignActiveNotification:(id)arg1;
- (void)_teardownNotifications;
- (void)_setupNotifications;
- (unsigned int)_compileShaderOfType:(unsigned int)arg1 pathToSource:(id)arg2;
- (void)_performOrDispatchToMainThread:(CDUnknownBlockType)arg1;
- (id)_pathForShader:(id)arg1;
- (double)_timeForPixelOffset:(float)arg1;
- (double)_timeForPixelOffset:(float)arg1 withVisibleTimeRange:(CDStruct_73a5d3ca)arg2;
- (float)_pixelOffsetForTime:(double)arg1;
- (float)_pixelsPerSecond;
- (float)_pixelsPerSecondWithVisibleTimeRange:(CDStruct_73a5d3ca)arg1;
- (void)_updateForegroundColor;
- (void)_updateClearColor;
- (void)_updateModelview;
- (void)_updateProjection;
- (_Bool)_currentViewportRequiresRenderingNewSegments;
- (void)_renderCenterKeylineIfNeeded;
- (void)_renderVisibleTimeRange;
- (void)_renderSegments:(id)arg1 isApproximatedWaveform:(_Bool)arg2;
- (void)_updateHighlightTimeRange;
- (CDStruct_73a5d3ca)_highlightTimeRange;
- (void)_clearRenderingState;
- (void)_draw:(id)arg1;
- (void)_setVisibleRangeNeedsRendering;
- (void)_setNeedsRendering;
- (void)_displayLinkDidUpdate:(id)arg1;
- (void)_stopRendering;
- (void)_startRendering;
- (void)_stopUpdating;
- (void)_startUpdating;
- (double)_nonCachedContentWidth;
- (void)_prepareForRendering;
- (void)_setupShaders;
- (void)_setupBuffers;
- (void)_setupGL;
- (void)animationDidStop:(id)arg1 finished:(_Bool)arg2;
- (void)waveformDataSourceDidFinishLoading:(id)arg1;
- (void)waveformDataSource:(id)arg1 didLoadWaveformSegment:(id)arg2;
- (void)glkViewRenderingContextValidityDidChange:(id)arg1;
- (void)glkView:(id)arg1 drawInRect:(struct CGRect)arg2;
- (id)rasterizeVisibleTimeRangeWithImageSize:(struct CGSize)arg1;
@property(readonly, nonatomic) struct CGRect visibleRect;
- (double)timeAtHorizontalOffset:(double)arg1 withVisibleTimeRange:(CDStruct_73a5d3ca)arg2;
- (double)timeAtHorizontalOffset:(double)arg1;
- (double)pointsPerSecondWithVisibleTimeRange:(CDStruct_73a5d3ca)arg1;
- (double)horizontalOffsetAtTime:(double)arg1 withVisibleTimeRange:(CDStruct_73a5d3ca)arg2;
- (double)horizontalOffsetAtTime:(double)arg1;
@property(readonly, nonatomic) double contentWidth;
- (void)setVisibleTimeRange:(CDStruct_73a5d3ca)arg1 withAnimationDuration:(double)arg2;
@property(nonatomic) CDStruct_73a5d3ca highlightTimeRange;
- (void)willMoveToParentViewController:(id)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)loadView;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface RCGLWaveformViewController : UIViewController <UIScrollViewDelegate, RCGLWaveformRendererDelegate, RCWaveformSelectionOverlayDelegate>
{
    RCWaveformScrollView *_scrollView;
    RCGLWaveformRenderer *_rendererController;
    RCWaveformSelectionOverlay *_selectionOverlay;
    RCAcousticAnnotationView *_acousticAnnotationView;
    UIView *_bottomLineView;
    UIView *_topLineView;
    NSMutableArray *_timeMarkerViews;
    NSTimer *_overlayAutoscrollTimer;
    CDStruct_73a5d3ca _visibleTimeRangeBeforeSelectionTracking;
    _Bool _timeMarkerViewsNeedInitialLayout;
    _Bool _timeMarkerViewsUpdatesDisabled;
    _Bool _scrubbing;
    _Bool _dragEnding;
    _Bool _shouldUpdateInDisplayLink;
    float _resumingToForegroundAutoscrollRate;
    double _layoutWidth;
    double _timeBeganAutoscrolling;
    _Bool _isScrollViewAutoScrolling;
    _Bool _isScrollViewAutoScrollingPaused;
    double _overlayAutoscrollRateForSelectionTracking;
    double _overlayAutoscrollBaseDuration;
    _Bool _scrubbingEnabled;
    _Bool _screenUpdatesDisabled;
    _Bool _playing;
    _Bool _clipTimeMarkersToDuration;
    _Bool _selectedTimeRangeEditingEnabled;
    _Bool _selectedTimeRangeScrubbingEnabled;
    id <RCGLWaveformViewDelegate> _delegate;
    RCUIConfiguration *_UIConfiguration;
    RCLayoutMetrics *_layoutMetrics;
    unsigned long long _currentTimeDisplayOptions;
    double _currentTime;
    double _duration;
    double _selectionVisibleMargin;
    double _maximumSelectionDuration;
    CDStruct_73a5d3ca _visibleTimeRange;
    CDStruct_73a5d3ca _highlightTimeRange;
    CDStruct_73a5d3ca _selectedTimeRange;
}

@property(nonatomic, getter=isSelectedTimeRangeEditingEnabled) _Bool selectedTimeRangeScrubbingEnabled; // @synthesize selectedTimeRangeScrubbingEnabled=_selectedTimeRangeScrubbingEnabled;
@property(nonatomic) double maximumSelectionDuration; // @synthesize maximumSelectionDuration=_maximumSelectionDuration;
@property(nonatomic) double selectionVisibleMargin; // @synthesize selectionVisibleMargin=_selectionVisibleMargin;
@property(nonatomic) CDStruct_73a5d3ca selectedTimeRange; // @synthesize selectedTimeRange=_selectedTimeRange;
@property(nonatomic) CDStruct_73a5d3ca highlightTimeRange; // @synthesize highlightTimeRange=_highlightTimeRange;
@property(nonatomic) CDStruct_73a5d3ca visibleTimeRange; // @synthesize visibleTimeRange=_visibleTimeRange;
@property(nonatomic) double duration; // @synthesize duration=_duration;
@property(nonatomic) double currentTime; // @synthesize currentTime=_currentTime;
@property(nonatomic) _Bool clipTimeMarkersToDuration; // @synthesize clipTimeMarkersToDuration=_clipTimeMarkersToDuration;
@property(nonatomic) unsigned long long currentTimeDisplayOptions; // @synthesize currentTimeDisplayOptions=_currentTimeDisplayOptions;
@property(retain, nonatomic) RCLayoutMetrics *layoutMetrics; // @synthesize layoutMetrics=_layoutMetrics;
@property(copy, nonatomic) RCUIConfiguration *UIConfiguration; // @synthesize UIConfiguration=_UIConfiguration;
@property(nonatomic) _Bool playing; // @synthesize playing=_playing;
@property(nonatomic) _Bool screenUpdatesDisabled; // @synthesize screenUpdatesDisabled=_screenUpdatesDisabled;
@property(nonatomic) _Bool scrubbingEnabled; // @synthesize scrubbingEnabled=_scrubbingEnabled;
@property(nonatomic) __weak id <RCGLWaveformViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)_displayLinkDidUpdate:(id)arg1;
- (void)_stopDisplayLink;
- (void)_startDisplayLink;
- (void)_scrollViewPanGestureRecognized:(id)arg1;
- (void)_layoutTimeMarkerViewsForCurrentlyVisibleTimeRange;
- (void)_setTimeMarkerViewsNeedInitialLayout:(_Bool)arg1;
- (struct CGRect)_frameForTimeMarkerView:(id)arg1;
- (void)_updateCurrentTimeDisplay;
- (_Bool)_shouldCenterTimeIndicator;
- (void)_updateSelectionOverlayWithAnimationDuration:(double)arg1;
- (void)_updateVisibleAreaWithAnimationDuration:(double)arg1;
- (void)fixupScrollPositionToMatchIndicatorPositionTime;
- (_Bool)_shouldAutoAnimateScrollChanges;
- (void)_updateAnnotationViews;
- (void)_updateWaveformViewContentSizeAndOffset;
- (void)_setTimeMarkerViewUpdatesDisabled:(_Bool)arg1;
- (void)_autoscrollOverlayIfNecessary;
- (void)_updateRendererControllerPausedState;
- (void)_applyUIConfiguration;
- (void)_setSelectedTimeRange:(CDStruct_73a5d3ca)arg1 updateVisibleTimeRange:(_Bool)arg2 notifyDelegate:(_Bool)arg3 animationDuration:(double)arg4;
- (void)_setVisibleTimeRange:(CDStruct_73a5d3ca)arg1 animationDuration:(double)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (CDStruct_73a5d3ca)_visibleTimeRangeForCurrentSelectionTimeRange;
- (void)waveformRendererDidSynchronizeToDisplayLink:(id)arg1;
- (void)waveformRendererContentDidFinishLoading:(id)arg1;
- (void)waveformRenderer:(id)arg1 contentWidthDidChange:(double)arg2;
- (double)waveformSelectionOverlay:(id)arg1 timeForOffset:(double)arg2;
- (double)waveformSelectionOverlay:(id)arg1 offsetForTime:(double)arg2;
- (double)waveformSelectionOverlay:(id)arg1 willChangeAssetCurrentTime:(double)arg2 isTracking:(_Bool)arg3;
- (CDStruct_73a5d3ca)waveformSelectionOverlay:(id)arg1 willChangeSelectedTimeRange:(CDStruct_73a5d3ca)arg2 isTracking:(_Bool)arg3;
- (void)waveformSelectionOverlay:(id)arg1 didFinishTrackingSelectionBeginTime:(_Bool)arg2 endTime:(_Bool)arg3 assetCurrentTime:(_Bool)arg4;
- (void)waveformSelectionOverlay:(id)arg1 willBeginTrackingSelectionBeginTime:(_Bool)arg2 endTime:(_Bool)arg3 assetCurrentTime:(_Bool)arg4;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)_scrubbingDidFinish;
- (void)scrollViewWillEndDragging:(id)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (void)scrollViewDidScroll:(id)arg1;
- (_Bool)_isScrubbing;
- (_Bool)_isScrubbingSelectionTimeRange;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewWillLayoutSubviews;
- (void)viewDidLoad;
- (void)viewDidLayoutSubviews;
- (_Bool)isScrollViewAutoScrolling;
@property(readonly, nonatomic, getter=isAutoscrolling) _Bool autoscrolling; // @synthesize autoscrolling=_isScrollViewAutoScrolling;
- (void)setAutoscrolling:(_Bool)arg1;
- (void)endAutoscrolling;
- (void)pauseAutoscrolling;
- (void)resumeAutoscrollingIfPaused;
- (void)beginAutoscrollingAtTime:(double)arg1 atRate:(float)arg2;
@property(nonatomic, getter=isSelectedTimeRangeEditingEnabled) _Bool selectedTimeRangeEditingEnabled; // @synthesize selectedTimeRangeEditingEnabled=_selectedTimeRangeEditingEnabled;
- (void)setSelectedTimeRange:(CDStruct_73a5d3ca)arg1 animationDuration:(double)arg2;
- (CDStruct_73a5d3ca)timeRangeByInsettingVisibleTimeRange:(CDStruct_73a5d3ca)arg1 inset:(double)arg2;
- (CDStruct_73a5d3ca)setHighlightTimeRange;
- (void)setVisibleTimeRange:(CDStruct_73a5d3ca)arg1 animationDuration:(double)arg2;
- (double)currentTimeIndicatorCoordinate;
- (struct CGRect)waveformRectForLayoutBounds:(struct CGRect)arg1;
@property(retain, nonatomic) RCWaveformDataSource *dataSource;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface RCLayoutMetrics : NSObject <NSCopying>
{
    CDStruct_66e6f92a _metricInfo;
    NSString *_label;
    double _hPresentedRecordMemoHeight;
}

+ (id)largeVerticalMetrics;
+ (id)normalVerticalMetrcis;
+ (id)largeHorizontalMetrics;
+ (id)defaultMetrics;
- (void).cxx_destruct;
@property(nonatomic) double hPresentedRecordMemoHeight; // @synthesize hPresentedRecordMemoHeight=_hPresentedRecordMemoHeight;
- (void)setMetricInfo:(CDStruct_66e6f92a)arg1;
@property(readonly, nonatomic) double vDeltaLockNotificationListBottomToRecordingTimeBaseline;
@property(readonly, nonatomic) double vDeltaLockNotificationListBottom;
@property(readonly, nonatomic) double vDeltaLockAbsoluteTopToWaveformTop;
- (double)vDeltaLockNotificationListTopToRecordingTextBaseline;
- (double)vDeltaLockNotificationListTop;
@property(readonly, nonatomic) double hDetailNavigationBarInset;
@property(readonly, nonatomic) double hTrimModeInset;
@property(readonly, nonatomic) double hDeltaAcousticAnnotationLabelToWaveformRight;
@property(readonly, nonatomic) double hDeltaTrimProgressInset;
@property(readonly, nonatomic) double hDeltaControlButtonsSpacing;
@property(readonly, nonatomic) double hDeltaAdditionalInsetFromWaveformEdge;
@property(readonly, nonatomic) _Bool hIsWaveformFlushToEdges;
@property(readonly, nonatomic) double vDeltaControlsTopToNavigationBottom;
@property(readonly, nonatomic) double vDeltaControlsBottomToBottom;
@property(readonly, nonatomic) double vDeltaDateBaselineToControlsTop;
@property(readonly, nonatomic) double vDeltaTitleBaselineToDateBaseline;
@property(readonly, nonatomic) double vDeltaTimeBaselineToTitleBaseline;
@property(readonly, nonatomic) double vDeltaWaveformToTimeBaseline;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
- (id)initWithLabel:(id)arg1;

@end

@interface RCMutableComposition : RCComposition
{
}

- (void)recacheComposedDuration;

// Remaining properties
@property(retain, nonatomic) NSArray *decomposedFragments;

@end

@interface RCMutableCompositionFragment : RCCompositionFragment
{
}

- (void)intersectWithTimeRange:(CDStruct_73a5d3ca)arg1;

// Remaining properties
@property(retain, nonatomic) NSURL *AVOutputURL;
@property(nonatomic) double contentDuration;
@property(nonatomic) CDStruct_73a5d3ca timeRangeInComposition;
@property(nonatomic) CDStruct_73a5d3ca timeRangeInContentToUse;

@end

@interface RCWaveform : NSObject <NSMutableCopying, NSCopying, NSCoding>
{
    NSMutableArray *_segments;
    unsigned long long _decodedVersion;
}

+ (id)waveformWithContentsOfURL:(id)arg1 minimumRequiredVersion:(unsigned long long)arg2;
+ (id)waveformURLForAVURL:(id)arg1;
+ (void)initialize;
@property(readonly, nonatomic) NSArray *segments; // @synthesize segments=_segments;
- (void).cxx_destruct;
- (void)_mergeBoundarySegmentsInArray:(id)arg1;
- (id)_mutableSegmentsIntersectingTimeRange:(CDStruct_73a5d3ca)arg1 intersectionRange:(struct _NSRange *)arg2;
- (id)_mutableSegmentsByClippingToTimeRange:(CDStruct_73a5d3ca)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (struct _NSRange)rangeOfSegmentsIntersectingTimeRange:(CDStruct_73a5d3ca)arg1;
- (id)segmentsByClippingToTimeRange:(CDStruct_73a5d3ca)arg1;
- (_Bool)saveContentsToURL:(id)arg1;
@property(readonly, nonatomic) unsigned long long averagePowerLevelsRate;
- (_Bool)isWaveformDataEqualToDataInWaveform:(id)arg1;
- (_Bool)hasUniformPowerLevel:(float)arg1;
- (id)initWithSegments:(id)arg1;
- (id)init;

@end

@interface RCMutableWaveform : RCWaveform
{
}

- (id)classForCoder;
- (void)removeAllSegments;
- (void)removeSegment:(id)arg1;
- (void)addSegments:(id)arg1;
- (void)addSegment:(id)arg1;
- (_Bool)clipToTimeRange:(CDStruct_73a5d3ca)arg1;
- (id)segments;
- (void)setSegments:(id)arg1;

@end

@interface RCOverlayBarLayer : CALayer
{
    CALayer *_topKnob;
    CALayer *_bar;
    CALayer *_bottomKnob;
    UIColor *_color;
}

@property(retain, nonatomic) UIColor *color; // @synthesize color=_color;
- (void).cxx_destruct;
- (void)_loadWithColor:(id)arg1 selectionExtentIncludingKnobs:(double)arg2 topKnob:(_Bool)arg3 bottomKnob:(_Bool)arg4;
- (id)barComponents;
- (id)initWithColor:(id)arg1 selectionExtentIncludingKnobs:(double)arg2 topKnob:(_Bool)arg3 bottomKnob:(_Bool)arg4;

@end

@interface RCPreviewController : NSObject <RCAVPlayerDelegate>
{
    _Bool _resetUseVoiceMemoSettingsValue;
    _Bool _voiceMemoSettingEnabledNeedsReset;
    _Bool _isPreparingForPreview;
    double _currentTimeTarget;
    double _currentRateTarget;
    RCAudioSessionRoutingAssertion *_activePreviewRouteAssertion;
    RCAudioSessionRoutingAssertion *_preparingToPreviewRouteAssertion;
    NSUUID *_preparingToPreviewRouteAssertionSessionUUID;
    NSHashTable *_weakObservers;
    NSMutableDictionary *_monitoredDispatchSourcesByURL;
    _Bool _useVoiceMemoSettings;
    AVPlayerItem *_AVPlayerItem;
    RCAVState *_AVState;
    double _currentTimeDelegateUpdateRate;
    RCAVPlayer *_AVPlayer;
}

@property(readonly, nonatomic) RCAVPlayer *AVPlayer; // @synthesize AVPlayer=_AVPlayer;
@property(nonatomic) _Bool useVoiceMemoSettings; // @synthesize useVoiceMemoSettings=_useVoiceMemoSettings;
@property(nonatomic) double currentTimeDelegateUpdateRate; // @synthesize currentTimeDelegateUpdateRate=_currentTimeDelegateUpdateRate;
@property(retain, nonatomic) RCAVState *AVState; // @synthesize AVState=_AVState;
@property(retain, nonatomic) AVPlayerItem *AVPlayerItem; // @synthesize AVPlayerItem=_AVPlayerItem;
- (void).cxx_destruct;
- (void)_audioRouteControllerWillDeactivateAudioSessionNotification:(id)arg1;
- (void)_applicationWillEnterForegroundNotification:(id)arg1;
- (void)_applicationDidEnterBackgroundNotification:(id)arg1;
- (void)_postDelegateCurrentTimeUpdate;
- (void)_postDelegateCurrentRateChangeToRate:(float)arg1;
- (_Bool)_monitorUnderlyingAssetPathInPlayerItem:(id)arg1 assetDisappearedBlock:(CDUnknownBlockType)arg2;
- (void)_stopMonitoringUnderylingAssetPath;
- (void)_handleUnderlyingAssetDisappeared;
- (void)_handleDidStopPlaybackWithError:(id)arg1;
- (void)_performWithObserversBlock:(CDUnknownBlockType)arg1;
- (id)_AVPlayerIfActive;
- (id)_recreateAVPlayer;
- (void)_readyToPlay_playPlayer:(id)arg1;
- (void)_setPreparingToPlay:(_Bool)arg1 notifyObservers:(_Bool)arg2;
- (void)handlePreviewEnded;
- (void)playerCurrentTimeDidChange:(id)arg1;
- (void)playerCurrentRateDidChange:(id)arg1;
- (void)_playerCurrentRateDidChangeToRate:(float)arg1 hadPlaybackItem:(_Bool)arg2;
- (void)playerCurrentItemDidBecomeReadyToPlay:(id)arg1;
- (void)playerDidBecomeInvalid:(id)arg1;
- (void)removeObserver:(id)arg1;
- (void)addObserver:(id)arg1;
@property(readonly, nonatomic) float rate;
- (void)setRate:(float)arg1;
@property(nonatomic) double currentTime;
@property(nonatomic) CDStruct_73a5d3ca playableTimeRange;
- (void)stop;
- (void)pause;
- (void)playOrRestart;
- (void)playWithTimeRange:(CDStruct_73a5d3ca)arg1 startTime:(double)arg2;
- (void)_endActivePreviewRouteAssertion;
- (void)_beginActivePreviewRouteAssertion;
- (void)_beginPreparingToPreviewRouteAssertion;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface RCRecorderStateButton : UIButton
{
    UIColor *_outerColor;
    CALayer *_innerLayer;
    UIColor *_innerColor;
    _Bool _realEnabledState;
    _Bool _isForceDisabled;
    long long _AVCaptureState;
}

@property(nonatomic) _Bool isForceDisabled; // @synthesize isForceDisabled=_isForceDisabled;
@property(nonatomic) long long AVCaptureState; // @synthesize AVCaptureState=_AVCaptureState;
- (void).cxx_destruct;
- (void)_drawOuterCircle;
- (double)_currentStateInnerDrawingAlpha;
- (double)_currentStateTopLevelDrawingAlpha;
- (struct CGSize)intrinsicContentSize;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)layoutSubviews;
- (void)drawRect:(struct CGRect)arg1;
- (void)setSelected:(_Bool)arg1;
- (void)setHighlighted:(_Bool)arg1;
- (void)setEnabled:(_Bool)arg1;
- (id)init;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface RCSSavedRecordingAccessToken : NSObject <NSSecureCoding, NSCoding, NSCopying>
{
    unsigned long long _accessType;
    NSURL *_compositionAVURL;
    NSUUID *_identifier;
    NSString *_accessName;
}

+ (_Bool)supportsSecureCoding;
+ (id)tokenWithName:(id)arg1 accessType:(unsigned long long)arg2 compositionAVURL:(id)arg3;
@property(readonly, copy, nonatomic) NSString *accessName; // @synthesize accessName=_accessName;
@property(readonly, copy, nonatomic) NSUUID *identifier; // @synthesize identifier=_identifier;
@property(readonly, nonatomic) NSURL *compositionAVURL; // @synthesize compositionAVURL=_compositionAVURL;
@property(readonly, nonatomic) unsigned long long accessType; // @synthesize accessType=_accessType;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)initWithName:(id)arg1 accessType:(unsigned long long)arg2 compositionAVURL:(id)arg3 identifier:(id)arg4;

@end

@interface RCSSavedRecordingService : NSObject <RCSSavedRecordingServiceClientProtocol, RCSSavedRecordingServiceProtocol>
{
    NSObject<OS_dispatch_queue> *_serialQueue;
    NSObject<OS_dispatch_queue> *_completionQueue;
    int _exportingCompositionAVURLsDistributedNotificationToken;
    NSXPCConnection *_xpcConnection;
    id <RCSSavedRecordingServiceProtocol> _serviceProxy;
    NSMutableDictionary *_pendingServiceCompletionHandlers;
    NSSet *_exportingCompositionAVURLs;
}

+ (id)sharedService;
@property(retain, nonatomic) NSSet *exportingCompositionAVURLs; // @synthesize exportingCompositionAVURLs=_exportingCompositionAVURLs;
- (void).cxx_destruct;
- (void)_handleExportingCompositionAVURLsDidChange;
- (void)_onQueueInvalidatePendingCompletionHandlerWithToken:(id)arg1 withError:(id)arg2;
- (void)_onQueueInvalidatePendingCompletionHandlersWithError:(id)arg1;
- (void)_onQueueRemovePendingServiceMessageReplyBlockInvalidationHandlerForToken:(struct NSNumber *)arg1;
- (struct NSNumber *)_onQueueAddPendingServiceMessageReplyBlockInvalidationHandler:(CDUnknownBlockType)arg1;
- (void)_sendServiceMessage:(SEL)arg1 withBasicReplyBlock:(CDUnknownBlockType)arg2 messagingBlock:(CDUnknownBlockType)arg3;
- (void)_sendServiceMessage:(SEL)arg1 accessRequestReplyBlock:(CDUnknownBlockType)arg2 messagingBlock:(CDUnknownBlockType)arg3;
- (void)_onQueueCloseServiceConnection;
- (id)serviceProxy;
- (oneway void)fetchExportingCompositionAVURLs:(CDUnknownBlockType)arg1;
- (oneway void)enableOrphanHandlingWithCompletionBlock:(CDUnknownBlockType)arg1;
- (oneway void)disableOrphanHandlingWithCompletionBlock:(CDUnknownBlockType)arg1;
- (oneway void)enableOrphanedFragmentCleanupForCompositionAVURL:(id)arg1;
- (oneway void)disableOrphanedFragmentCleanupForCompositionAVURL:(id)arg1;
- (oneway void)endAccessSessionWithToken:(id)arg1;
- (oneway void)prepareToTrimCompositionAVURL:(id)arg1 accessRequestHandler:(CDUnknownBlockType)arg2;
- (oneway void)prepareToExportCompositionAVURL:(id)arg1 cacheWaveform:(_Bool)arg2 accessRequestHandler:(CDUnknownBlockType)arg3;
- (oneway void)prepareToPreviewCompositionAVURL:(id)arg1 accessRequestHandler:(CDUnknownBlockType)arg2;
- (oneway void)prepareToCaptureToCompositionAVURL:(id)arg1 accessRequestHandler:(CDUnknownBlockType)arg2;
- (void)closeServiceConnection;
- (void)openServiceConnection;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface RCSSavedRecordingServiceConnection : NSXPCConnection
{
}

+ (id)clientInterface;
+ (id)serviceInterface;
+ (id)newConnection;

@end

@interface RCSavedRecording : NSManagedObject <UIActivityItemSource>
{
    AVAsset *_avAsset;
    NSString *_path;
    _Bool _pathWasInvalid;
    _Bool _ignoreChangeForEntityRevision;
    _Bool _hasPendingChangeAffectingEntityRevision;
}

+ (id)localizedStringForRecordingLabel:(long long)arg1;
+ (id)propertiesAffectingEntityRevision;
@property(readonly, nonatomic) _Bool hasPendingChangeAffectingEntityRevision; // @synthesize hasPendingChangeAffectingEntityRevision=_hasPendingChangeAffectingEntityRevision;
- (void).cxx_destruct;
- (id)activityViewController:(id)arg1 thumbnailImageForActivityType:(id)arg2 suggestedSize:(struct CGSize)arg3;
- (id)activityViewController:(id)arg1 subjectForActivityType:(id)arg2;
- (id)activityViewController:(id)arg1 itemForActivityType:(id)arg2;
- (id)activityViewControllerPlaceholderItem:(id)arg1;
- (id)_activityURLCreateIfNecessary:(_Bool)arg1;
- (void)_validatePath;
@property(nonatomic, getter=isBeingMade) _Bool beingMade; // @dynamic beingMade;
- (id)_inProgressBeingMadeLockfilePath;
@property(readonly, nonatomic) AVAsset *avAsset;
@property(readonly, nonatomic) NSString *detailLabel;
@property(readonly, nonatomic) NSString *label;
- (id)_labelAllowingEmptyString:(_Bool)arg1;
@property(readonly, copy, nonatomic) NSURL *URIRepresentation;
@property(readonly, copy, nonatomic) NSURL *url;
@property(copy, nonatomic) NSString *path; // @dynamic path;
@property(nonatomic, getter=isSynced) _Bool synced;
@property(nonatomic, getter=isPendingRestore) _Bool pendingRestore; // @dynamic pendingRestore;
@property(nonatomic) long long recordingID;
@property(nonatomic) long long iTunesPersistentID;
@property(copy, nonatomic) NSString *customLabel; // @dynamic customLabel;
@property(nonatomic) long long labelPreset;
@property(nonatomic) double duration;
- (void)willSave;
- (void)willChangeValueForKey:(id)arg1;
- (void)awakeFromFetch;
- (void)awakeFromInsert;

// Remaining properties
@property(copy, nonatomic) NSDate *date; // @dynamic date;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface RCSavedRecordingCompositionController : RCCompositionController
{
    NSURL *_savedRecordingURI;
}

+ (id)compositionControllerForExistingSavedRecordingURI:(id)arg1;
+ (id)compositionControllerForCreatingSavedRecording;
@property(readonly, nonatomic) NSURL *savedRecordingURI; // @synthesize savedRecordingURI=_savedRecordingURI;
- (void).cxx_destruct;
- (void)performCompositionRedoWithRedoItem:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)performCompositionUndoWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)deleteCompositionFromFileSystemAndDatabase;
- (id)initWithExistingSavedRecordingURI:(id)arg1;
- (void)activeRecordingSessionWillFinish;
- (void)beginRecordingWithInputDevice:(id)arg1 captureInsertionRange:(CDStruct_73a5d3ca)arg2 isUndoable:(_Bool)arg3 isOverdub:(_Bool)arg4 sessionPreparedBlock:(CDUnknownBlockType)arg5 sessionFinishedBlock:(CDUnknownBlockType)arg6;
- (void)setComposition:(id)arg1;
- (id)initWithComposition:(id)arg1;

@end

@interface RCSavedRecordingPreviewController : RCPreviewController
{
    _Bool _postPrepareShouldPlay;
    CDStruct_73a5d3ca _postPrepareTimeRange;
    double _postPrepareStartTime;
    RCCompositionController *_compositionController;
}

+ (id)sharedRecordingPreviewController;
@property(retain, nonatomic) RCCompositionController *compositionController; // @synthesize compositionController=_compositionController;
- (void).cxx_destruct;
- (void)playerCurrentRateDidChange:(id)arg1;
- (void)setCurrentTime:(double)arg1;
- (CDStruct_73a5d3ca)playableTimeRange;
- (void)setPlayableTimeRange:(CDStruct_73a5d3ca)arg1;
- (double)currentTime;
- (void)stop;
- (void)pause;
- (void)playOrRestart;
- (void)playWithTimeRange:(CDStruct_73a5d3ca)arg1 startTime:(double)arg2;

@end

@interface RCSavedRecordingsModel : NSObject <NSFetchedResultsControllerDelegate>
{
    int _notifyToken;
    NSManagedObjectModel *_model;
    NSManagedObjectContext *_context;
    NSFetchRequest *_savedRecordingsFetchRequest;
    NSFetchedResultsController *_fetchController;
    _Bool _valid;
    long long _isSavingDisabledCount;
}

+ (id)_copyFileIntoRecordingsDirectory:(id)arg1;
+ (void)_insertRecordingWithImportableAudioURL:(id)arg1 name:(id)arg2 date:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
+ (void)_importImportableRecordingWithSourceAudioURL:(id)arg1 name:(id)arg2 date:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
+ (void)importRecordingWithSourceAudioURL:(id)arg1 name:(id)arg2 date:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
+ (void)determineImportabilityOfRecordingWithAudioURL:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
+ (id)creationDateFromStandardRecordingURL:(id)arg1;
+ (id)standardURLForRecordingWithCreationDate:(id)arg1;
+ (id)savedRecordingsDirectory;
+ (id)sharedModelForQueue:(id)arg1;
+ (id)sharedModel;
+ (void)initialize;
@property(nonatomic) long long isSavingDisabledCount; // @synthesize isSavingDisabledCount=_isSavingDisabledCount;
@property _Bool valid; // @synthesize valid=_valid;
- (void).cxx_destruct;
- (void)_handleInternalModelDidSaveNotification:(id)arg1;
- (void)_handleExternalModelDidSaveNotification:(id)arg1;
- (void)_postRecordingsModelDidChangeForNotificationName:(id)arg1;
- (void)_scheduleAutomaticRecordingDeletions;
- (void)_deleteRecordingsWithDurationLessThan:(double)arg1 passingTest:(CDUnknownBlockType)arg2;
- (id)_entityRevisionWithRecordingID:(long long)arg1;
- (void)_setNextEntityRevisionID:(long long)arg1 save:(_Bool)arg2;
- (long long)_nextEntityRevisionID;
- (void)_setNextRecordingID:(long long)arg1 save:(_Bool)arg2;
- (long long)_nextRecordingID;
- (void)_migrateDatabaseIfNecessary;
- (_Bool)deleteDatabaseProperty:(id)arg1;
- (id)valueForDatabaseProperty:(id)arg1;
- (_Bool)setValue:(id)arg1 forDatabaseProperty:(id)arg2;
- (_Bool)setValue:(id)arg1 forDatabaseProperty:(id)arg2 save:(_Bool)arg3;
- (void)performWithSavingDisabled:(CDUnknownBlockType)arg1;
- (void)performBlockAndWait:(CDUnknownBlockType)arg1;
- (void)save;
- (void)_enumerateSavedRecordingsAndEntityRevisionInArrayOfManagedObjects:(id)arg1 createIfNeeded:(_Bool)arg2 block:(CDUnknownBlockType)arg3;
- (void)saveIfNecessary;
- (_Bool)saveManagedObjectContext:(id *)arg1;
- (id)recordingsForSpotlightSearch:(id)arg1;
- (id)_labelPresetsForQuery:(id)arg1;
- (_Bool)hasExistingRecordingForAudioFile:(id)arg1;
- (void)deleteRecording:(id)arg1;
- (id)insertRecordingWithAudioFile:(id)arg1 duration:(double)arg2 date:(id)arg3 customLabelBase:(id)arg4;
- (id)insertRecordingWithAudioFile:(id)arg1 duration:(double)arg2 date:(id)arg3;
- (id)nextRecordingDefaultLabelWithCustomLabelBase:(id)arg1;
- (id)_allCustomLabels;
- (void)_deleteOrphanedEntityRevisionsAndSave:(_Bool)arg1;
- (void)enumerateExistingRecordingsSinceEntityRevision:(long long)arg1 withBlock:(CDUnknownBlockType)arg2;
- (id)entityRevisionsForRecording:(id)arg1;
@property(readonly, nonatomic) long long currentEntityRevision;
- (void)enumerateExistingRecordingsWithBlock:(CDUnknownBlockType)arg1;
- (id)fetchSavedRecordingIDs;
- (id)_recordingWithRecordingID:(long long)arg1;
- (id)recordingWithITunesPersistentID:(long long)arg1;
- (id)recordingWithURIRepresentation:(id)arg1;
- (id)recordingWithID:(id)arg1;
- (id)indexPathForRecording:(id)arg1;
- (id)recordingAtIndex:(unsigned long long)arg1;
@property(readonly, nonatomic) NSArray *recordings;
@property(readonly, nonatomic) unsigned long long count;
- (void)controllerDidChangeContent:(id)arg1;
- (void)controller:(id)arg1 didChangeObject:(id)arg2 atIndexPath:(id)arg3 forChangeType:(unsigned long long)arg4 newIndexPath:(id)arg5;
- (void)dealloc;
- (id)_initWithManagedObjectContext:(id)arg1;
- (id)init;

@end

@interface RCSelectionTouchTrackingInfo : NSObject
{
    double _lastLocation;
    UITouch *_touch;
    double _trackingOffset;
    long long _selectionBarType;
    long long _selectionAffinity;
}

@property(nonatomic) long long selectionAffinity; // @synthesize selectionAffinity=_selectionAffinity;
@property(nonatomic) long long selectionBarType; // @synthesize selectionBarType=_selectionBarType;
@property(nonatomic) double trackingOffset; // @synthesize trackingOffset=_trackingOffset;
@property(nonatomic) __weak UITouch *touch; // @synthesize touch=_touch;
- (void).cxx_destruct;
- (id)description;
- (void)updateTrackingInfo;

@end

@interface RCShareMemoViewController : UIActivityViewController
{
    RCCompositionController *_compositionController;
}

+ (id)_newPresentedPrepareFailureAlertControllerForComposition:(id)arg1;
+ (id)_newPresentedPrepareAlertControllerForComposition:(id)arg1 dismissHandler:(CDUnknownBlockType)arg2;
+ (void)prepareToShareComposition:(id)arg1 ignoringInteraction:(_Bool)arg2 shouldContinuePreparingBlock:(CDUnknownBlockType)arg3 preparedHandler:(CDUnknownBlockType)arg4;
+ (void)presentInViewController:(id)arg1 composition:(id)arg2 ignoringInteraction:(_Bool)arg3 shouldContinuePreparingBlock:(CDUnknownBlockType)arg4 preparedToPresentBlock:(CDUnknownBlockType)arg5;
+ (id)unsupportedActivityTypes;
@property(readonly, nonatomic) RCCompositionController *compositionController; // @synthesize compositionController=_compositionController;
- (void).cxx_destruct;
- (_Bool)prefersStatusBarHidden;
- (unsigned long long)supportedInterfaceOrientations;
- (void)viewWillDisappear:(_Bool)arg1;
- (id)initWithCompositionController:(id)arg1;

@end

@interface RCTelephonyController : NSObject
{
}

+ (id)sharedTelephonyController;
@property(readonly, nonatomic) _Bool isCallPresent;

@end

@interface RCTextLayer : CALayer
{
    struct CGSize _cachedSize;
    unsigned long long _cachedSizeHash;
    NSString *_text;
    UIFont *_font;
    UIColor *_textColor;
    long long _preferredAlignment;
    long long _textAlignment;
}

@property(nonatomic) long long textAlignment; // @synthesize textAlignment=_textAlignment;
@property(nonatomic) long long preferredAlignment; // @synthesize preferredAlignment=_preferredAlignment;
@property(retain, nonatomic) UIColor *textColor; // @synthesize textColor=_textColor;
@property(retain, nonatomic) UIFont *font; // @synthesize font=_font;
@property(copy, nonatomic) NSString *text; // @synthesize text=_text;
- (void).cxx_destruct;
- (void)drawInContext:(struct CGContext *)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (struct CGRect)textRectWithAlignment:(long long)arg1 inLayoutBounds:(struct CGRect)arg2;
- (struct CGSize)_displaySize;
- (void)sizeToFit;
- (id)_attributes;
- (id)init;

@end

@interface RCTrimTimeRangeOperation : NSOperation
{
    _Bool _canSimulateTrimmingProgress;
    float _simulatedProgress;
    _Bool _trimMode;
    CDUnknownBlockType _progressUpdateBlock;
    CDStruct_73a5d3ca _timeRange;
}

@property(copy, nonatomic) CDUnknownBlockType progressUpdateBlock; // @synthesize progressUpdateBlock=_progressUpdateBlock;
@property(readonly, nonatomic) _Bool trimMode; // @synthesize trimMode=_trimMode;
@property(readonly, nonatomic) CDStruct_73a5d3ca timeRange; // @synthesize timeRange=_timeRange;
- (void).cxx_destruct;
- (void)_postFinalProgressUpdateNotification;
- (float)_progress;
- (void)simulateTrimmingProgress;
- (void)setCanSimulateTrimmingProgress:(_Bool)arg1;
- (void)updateExportSessionProgressWithInterval:(double)arg1;
@property(readonly, nonatomic) _Bool progressShouldContinueUpdating;
@property(readonly, nonatomic) double progress;
- (void)main;
- (void)start;
- (id)initWithTimeRange:(CDStruct_73a5d3ca)arg1 trimMode:(long long)arg2;

// Remaining properties
@property(readonly, nonatomic) NSError *error; // @dynamic error;
@property(readonly, nonatomic) double exportedDuration; // @dynamic exportedDuration;
@property(readonly, nonatomic) _Bool success; // @dynamic success;

@end

@interface RCTrimAudioFileOperation : RCTrimTimeRangeOperation
{
    RCCompositionComposedAssetWriter *_assetWriter;
    _Bool _success;
    _Bool _createWaveform;
    NSError *_error;
    double _exportedDuration;
    NSURL *_sourceURL;
    NSURL *_destinationURL;
}

+ (id)exportableAudioFormatPathExtensionWithSourceURL:(id)arg1;
@property(readonly, nonatomic) _Bool createWaveform; // @synthesize createWaveform=_createWaveform;
@property(readonly, copy, nonatomic) NSURL *destinationURL; // @synthesize destinationURL=_destinationURL;
@property(readonly, copy, nonatomic) NSURL *sourceURL; // @synthesize sourceURL=_sourceURL;
- (double)exportedDuration;
- (id)error;
- (_Bool)success;
- (void).cxx_destruct;
- (double)progress;
- (void)main;
- (void)cancel;
- (id)initWithSourceURL:(id)arg1 destinationURL:(id)arg2 createWaveform:(_Bool)arg3 timeRange:(CDStruct_73a5d3ca)arg4 trimMode:(long long)arg5;

@end

@interface RCTrimCompositionOperation : RCTrimTimeRangeOperation
{
    NSObject<OS_dispatch_queue> *_serialQueue;
    double _durationOfFragmentsBeingTrimmed;
    double _subTaskProgressAmounts[2];
    double _lastPostedProgress;
    NSOperationQueue *_subOperationQueue;
    RCTrimAudioFileOperation *_trimAudioFileSubOperation;
    _Bool _success;
    NSError *_error;
    double _exportedDuration;
    RCComposition *_sourceComposition;
    NSURL *_destinationComposedAVURL;
}

+ (id)_intermediateTrimmedWaveformURLForFragment:(id)arg1;
+ (id)_intermediateTrimmedAVOutputURLForFragment:(id)arg1;
@property(readonly, copy, nonatomic) NSURL *destinationComposedAVURL; // @synthesize destinationComposedAVURL=_destinationComposedAVURL;
@property(readonly, copy, nonatomic) RCComposition *sourceComposition; // @synthesize sourceComposition=_sourceComposition;
- (double)exportedDuration;
- (id)error;
- (_Bool)success;
- (void).cxx_destruct;
- (void)_performSyncOnSerialQueue:(CDUnknownBlockType)arg1;
- (_Bool)_isSaveToCopyOperation;
- (double)progress;
- (id)performTrimOnFragmentsWithDestinationComposition:(id)arg1;
- (id)performTrimOnComposedAVURLWithDestinationComposition:(id)arg1;
- (void)main;
- (void)cancel;
- (id)initWithSourceComposition:(id)arg1 destinationComposedAVURL:(id)arg2 timeRange:(CDStruct_73a5d3ca)arg3 trimMode:(long long)arg4;

@end

@interface RCTrimSavedRecordingOperation : RCTrimCompositionOperation
{
    RCSavedRecording *_sourceRecording;
    RCSavedRecording *_destinationRecording;
}

@property(readonly, nonatomic) RCSavedRecording *destinationRecording; // @synthesize destinationRecording=_destinationRecording;
@property(readonly, nonatomic) RCSavedRecording *sourceRecording; // @synthesize sourceRecording=_sourceRecording;
- (void).cxx_destruct;
- (void)main;
- (id)initWithSourceRecording:(id)arg1 destinationRecording:(id)arg2 timeRange:(CDStruct_73a5d3ca)arg3 trimMode:(long long)arg4;

@end

@interface RCTrimmedCompositionWaveformDataSource : RCCompositionWaveformDataSource
{
    NSURL *_destinationWaveformURL;
}

@property(readonly, nonatomic) NSURL *destinationWaveformURL; // @synthesize destinationWaveformURL=_destinationWaveformURL;
- (void).cxx_destruct;
- (id)generatedWaveformOutputURL;
- (_Bool)preferLoadingFragmentWaveforms;
- (id)initWithSourceComposition:(id)arg1 destinationWaveformURL:(id)arg2;

@end

@interface RCUIConfiguration : NSObject <NSCopying>
{
    _Bool _waveformBoundaryLineDimInSelectionMode;
    _Bool _showsWaveformCenterline;
    float _minimumDecibelDisplayRange;
    float _maximumDecibelDisplayRange;
    NSString *_debugIdentifier;
    UIColor *_backgroundColor;
    UIColor *_waveformColor;
    UIColor *_waveformBoundaryLineColor;
    UIColor *_waveformHighlightColor;
    UIColor *_timeLineMarkerColor;
    UIColor *_timeLineTimeColor;
    UIColor *_acousticValueColor;
    UIColor *_acousticGradientMaskEndColor;
    double _acousticAnnotationVerticalMargin;
    UIColor *_playbackPositionBarColor;
    UIColor *_playbackPositionTimeColor;
    UIColor *_selectionOverlayColor;
    UIColor *_selectionOverlayEndpointBarColor;
    UIColor *_selectionOverlayEndpointTimeColor;
}

+ (id)defaultConfiguration;
@property(retain, nonatomic) UIColor *selectionOverlayEndpointTimeColor; // @synthesize selectionOverlayEndpointTimeColor=_selectionOverlayEndpointTimeColor;
@property(retain, nonatomic) UIColor *selectionOverlayEndpointBarColor; // @synthesize selectionOverlayEndpointBarColor=_selectionOverlayEndpointBarColor;
@property(retain, nonatomic) UIColor *selectionOverlayColor; // @synthesize selectionOverlayColor=_selectionOverlayColor;
@property(retain, nonatomic) UIColor *playbackPositionTimeColor; // @synthesize playbackPositionTimeColor=_playbackPositionTimeColor;
@property(retain, nonatomic) UIColor *playbackPositionBarColor; // @synthesize playbackPositionBarColor=_playbackPositionBarColor;
@property(nonatomic) float maximumDecibelDisplayRange; // @synthesize maximumDecibelDisplayRange=_maximumDecibelDisplayRange;
@property(nonatomic) float minimumDecibelDisplayRange; // @synthesize minimumDecibelDisplayRange=_minimumDecibelDisplayRange;
@property(nonatomic) double acousticAnnotationVerticalMargin; // @synthesize acousticAnnotationVerticalMargin=_acousticAnnotationVerticalMargin;
@property(retain, nonatomic) UIColor *acousticGradientMaskEndColor; // @synthesize acousticGradientMaskEndColor=_acousticGradientMaskEndColor;
@property(retain, nonatomic) UIColor *acousticValueColor; // @synthesize acousticValueColor=_acousticValueColor;
@property(retain, nonatomic) UIColor *timeLineTimeColor; // @synthesize timeLineTimeColor=_timeLineTimeColor;
@property(retain, nonatomic) UIColor *timeLineMarkerColor; // @synthesize timeLineMarkerColor=_timeLineMarkerColor;
@property(nonatomic) _Bool showsWaveformCenterline; // @synthesize showsWaveformCenterline=_showsWaveformCenterline;
@property(nonatomic) _Bool waveformBoundaryLineDimInSelectionMode; // @synthesize waveformBoundaryLineDimInSelectionMode=_waveformBoundaryLineDimInSelectionMode;
@property(retain, nonatomic) UIColor *waveformHighlightColor; // @synthesize waveformHighlightColor=_waveformHighlightColor;
@property(retain, nonatomic) UIColor *waveformBoundaryLineColor; // @synthesize waveformBoundaryLineColor=_waveformBoundaryLineColor;
@property(retain, nonatomic) UIColor *waveformColor; // @synthesize waveformColor=_waveformColor;
@property(retain, nonatomic) UIColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
@property(retain, nonatomic) NSString *debugIdentifier; // @synthesize debugIdentifier=_debugIdentifier;
- (void).cxx_destruct;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface RCWaveformGenerator : NSObject
{
    long long _state;
    NSObject<OS_dispatch_semaphore> *_digestPausedSemaphore;
    NSObject<OS_dispatch_queue> *_queue;
    NSObject<OS_dispatch_queue> *_notificationQueue;
    double _totalDigestedTime;
    double _totalFlushedTime;
    NSHashTable *_weakObservers;
    NSMutableArray *_internalFinishedLoadingBlockUUIDs;
    NSMutableArray *_internalFinishedLoadingBlocks;
    RCExtAudioFilePipe *_activeExtAudioFile;
    NSOperationQueue *_loadingQueue;
    struct PowerMeter _samplePowerMeter;
    _Bool _isSampleRateKnown;
    vector_ec52ae8c _powerLevelBuffer;
    float _powerLevelBufferLastPushedValue;
    unsigned long long _powerLevelsConsumedSinceLastFlush;
    unsigned long long _framesConsumedSinceLastFlush;
    long long _framesNeededForNextDB;
    long long _framesNeededForNextFlush;
    NSError *_loadingError;
    unsigned long long _pauseCount;
    _Bool _canceled;
    double _segmentFlushInterval;
    long long _overviewUnitsPerSecond;
}

@property(readonly, nonatomic) _Bool canceled; // @synthesize canceled=_canceled;
@property(readonly, nonatomic) long long state; // @synthesize state=_state;
@property(nonatomic) long long overviewUnitsPerSecond; // @synthesize overviewUnitsPerSecond=_overviewUnitsPerSecond;
@property(readonly, nonatomic) double segmentFlushInterval; // @synthesize segmentFlushInterval=_segmentFlushInterval;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)_onLoadingQueue_appendPowerMeterValuesFromRawAudioData:(void *)arg1 frameCount:(long long)arg2 format:(const struct AudioStreamBasicDescription *)arg3 isPredigest:(_Bool)arg4;
- (void)_onLoadingQueue_appendSegment:(id)arg1;
- (void)_onLoadingQueue_pushAveragePowerLevel:(float)arg1;
- (void)_onLoadingQueue_digestAveragePowerLevel:(float)arg1;
- (void)_onLoadingQueue_flushRemainingData;
- (void)_onLoadingQueue_flushWithNextSegmentWithEndTime:(double)arg1 isPredigest:(_Bool)arg2;
- (void)_onLoadingQueue_flushWaveformSegment:(id)arg1;
- (void)_appendAveragePowerLevelsByDigestingWaveformSegments:(id)arg1;
- (id)synchronouslyApproximateWaveformForAVContentURL:(id)arg1 byReadingCurrentFileAheadTimeRange:(CDStruct_73a5d3ca)arg2;
- (void)_onQueue_appendAveragePowerLevelsByDigestingTimeRange:(CDStruct_73a5d3ca)arg1 inExtAudioFile:(id)arg2 sourceFormat:(struct AudioStreamBasicDescription *)arg3 outputFormat:(struct AudioStreamBasicDescription *)arg4;
- (void)_appendAveragePowerLevelsByDigestingTimeRange:(CDStruct_73a5d3ca)arg1 inExtAudioFile:(id)arg2 sourceFormat:(struct AudioStreamBasicDescription *)arg3 outputFormat:(struct AudioStreamBasicDescription *)arg4;
- (void)_appendPowerMeterValuesFromDataInAudioFile:(id)arg1 progressBlock:(CDUnknownBlockType)arg2;
- (void)_appendPowerMeterValuesFromSampleBuffer:(struct opaqueCMSampleBuffer *)arg1;
- (void)_appendAveragePowerLevel:(float)arg1;
- (void)_performObserversBlock:(CDUnknownBlockType)arg1;
- (void)_performInternalFinishedLoadingBlocksAndFinishObservers;
- (void)_performLoadingFinishedBlock:(CDUnknownBlockType)arg1 internalBlockUUID:(id)arg2 isTimeout:(_Bool)arg3;
- (void)_finishLoadingByTerminating:(_Bool)arg1 loadingFinishedBlockTimeoutDate:(id)arg2 loadingFinishedBlock:(CDUnknownBlockType)arg3;
- (_Bool)_isCanceled;
- (double)totalDigestedTime;
- (double)totalFlushedTime;
- (void)finishLoadingWithCompletionTimeoutDate:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)terminateLoadingImmediately;
@property(nonatomic) _Bool paused;
- (void)beginLoading;
@property(readonly, nonatomic) _Bool idle;
@property(readonly, nonatomic) _Bool finished;
@property(readonly, nonatomic) _Bool loadable;
- (_Bool)appendAveragePowerLevelsByDigestingWaveform:(id)arg1;
- (_Bool)appendAveragePowerLevel:(float)arg1;
- (_Bool)appendAveragePowerLevelsByDigestingWaveformSegments:(id)arg1;
- (_Bool)appendAveragePowerLevelsByDigestingContentsOfAudioFileURL:(id)arg1 progressBlock:(CDUnknownBlockType)arg2;
- (_Bool)appendAveragePowerLevelsByDigestingSampleBuffer:(struct opaqueCMSampleBuffer *)arg1;
- (void)flushPendingCapturedSampleBuffers;
- (void)removeSegmentOutputObserver:(id)arg1;
- (void)addSegmentOutputObserver:(id)arg1;
- (id)initWithSamplingParametersFromGenerator:(id)arg1;
- (id)initWithSegmentFlushInterval:(double)arg1;

@end

@interface RCWaveformRasterizationOperation : NSOperation
{
    RCGLWaveformRenderer *_renderer;
    RCCompositionWaveformDataSource *_dataSource;
    _Bool _loadingSuccessful;
    RCComposition *_composition;
    UIImage *_rasterizedImage;
    struct CGSize _imageSize;
}

+ (id)waveformImageForComposition:(id)arg1 imageSize:(struct CGSize)arg2;
@property(readonly, nonatomic) UIImage *rasterizedImage; // @synthesize rasterizedImage=_rasterizedImage;
@property(readonly, nonatomic) struct CGSize imageSize; // @synthesize imageSize=_imageSize;
@property(readonly, nonatomic) RCComposition *composition; // @synthesize composition=_composition;
- (void).cxx_destruct;
- (void)main;
@property(copy, nonatomic) RCUIConfiguration *UIConfiguration;
- (id)initWithComposition:(id)arg1 imageSize:(struct CGSize)arg2;

@end

@interface RCWaveformScrollView : UIScrollView
{
    unsigned long long _ignoreContentOffsetChangesCount;
}

- (struct CGRect)convertRect:(struct CGRect)arg1 fromView:(id)arg2 inPresentationLayer:(_Bool)arg3;
- (struct CGPoint)contentOffsetInPresentationLayer:(_Bool)arg1;
- (void)setContentOffset:(struct CGPoint)arg1 animated:(_Bool)arg2;
- (void)setContentOffset:(struct CGPoint)arg1;
- (void)endIgnoringContentOffsetChanges;
- (void)beginIgnoringContentOffsetChanges;

@end

@interface RCWaveformSegment : NSObject <NSCoding>
{
    NSData *_averagePowerLevelData;
    CDStruct_73a5d3ca _timeRange;
}

+ (id)_mergedSegmentByResamplingWithMergeableSegments:(id)arg1 mergedLevelsDuration:(double)arg2;
+ (id)_mergedSegmentByFastMergingWithMergeableSegments:(id)arg1 mergedLevelsDuration:(double)arg2;
+ (id)_segmentByMergingMergableSegments:(id)arg1;
+ (id)_segmentsByJoiningSegment:(id)arg1 toSegmentIfNecessaryWithGreaterSegment:(id)arg2 averagePowerLevelJoinLimit:(unsigned long long)arg3;
+ (id)_discontinuityRepairedSegmentsByGrowingToFillGapsInSegments:(id)arg1;
+ (id)segmentsByMergingSegments:(id)arg1 preferredSegmentDuration:(double)arg2;
+ (id)segmentsByShiftingSegments:(id)arg1 byTimeOffset:(double)arg2;
+ (id)segmentsByReparingDiscontinuitiesInSegments:(id)arg1;
+ (id)emptySegmentWithTimeRange:(CDStruct_73a5d3ca)arg1;
+ (void)initialize;
@property(readonly, nonatomic) CDStruct_73a5d3ca timeRange; // @synthesize timeRange=_timeRange;
- (id).cxx_construct;
- (void).cxx_destruct;
- (id)_segmentsByJoiningIfNecessaryGreaterSegment:(id)arg1 averagePowerLevelJoinLimit:(unsigned long long)arg2;
- (id)_segmentWithValuesInContainedTimeRange:(CDStruct_73a5d3ca)arg1;
- (id)segmentByClippingToTimeRange:(CDStruct_73a5d3ca)arg1;
- (id)segmentsByJoiningIfSmallSegment:(id)arg1 averagePowerLevelJoinLimit:(unsigned long long)arg2;
- (id)segmentsByJoiningIfSmallSegment:(id)arg1;
- (id)copyWithAdjustedTimeRange:(CDStruct_73a5d3ca)arg1;
- (id)copyWithTimeRangeOffsetByTimeOffset:(double)arg1;
- (_Bool)isWaveformDataEqualToDataInSegment:(id)arg1;
- (_Bool)hasUniformPowerLevel:(float)arg1;
@property(readonly, nonatomic) long long averagePowerLevelsCount;
@property(readonly, nonatomic) const float *averagePowerLevels;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)description;
- (id)simpleDescription;
- (id)verboseDescription;
- (id)initWithTimeRange:(CDStruct_73a5d3ca)arg1 averagePowerLevelVector:(vector_ec52ae8c *)arg2;
- (id)_initWithTimeRange:(CDStruct_73a5d3ca)arg1 averagePowerLevelData:(id)arg2;
- (id)initWithTimeRange:(CDStruct_73a5d3ca)arg1 averagePowerLevelData:(id)arg2;

@end

@interface RCWaveformSegmentAccumulator : NSObject <RCWaveformGeneratorSegmentOutputObserver>
{
    _Bool _finishedSuccessfully;
    RCWaveformGenerator *_generator;
    NSMutableArray *_segments;
}

@property(readonly, nonatomic) _Bool finishedSuccessfully; // @synthesize finishedSuccessfully=_finishedSuccessfully;
@property(retain, nonatomic) NSMutableArray *segments; // @synthesize segments=_segments;
@property(retain, nonatomic) RCWaveformGenerator *generator; // @synthesize generator=_generator;
- (void).cxx_destruct;
- (_Bool)waitUntilFinished;
- (void)waveformGeneratorDidFinishLoading:(id)arg1 error:(id)arg2;
- (void)waveformGenerator:(id)arg1 didLoadWaveformSegment:(id)arg2;
- (void)waveformGeneratorWillBeginLoading:(id)arg1;
- (void)dealloc;
- (id)initWithWaveformGenerator:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface RCWaveformSelectionOverlay : UIView
{
    struct UIEdgeInsets _selectionAreaInsets;
    struct CGRect _selectionRect;
    RCOverlayBarLayer *_beginTimeSelection;
    RCOverlayBarLayer *_endTimeSelection;
    CALayer *_middleSelectionOverlay;
    RCOverlayBarLayer *_currentTimeBar;
    RCTextLayer *_beginTimeLayer;
    RCTextLayer *_endTimeLayer;
    _Bool _beginTimeLayerOffsetForThumb;
    _Bool _endTimeLayerOffsetForThumb;
    NSMutableDictionary *_trackedTouches;
    double _requestedAnimatedLayoutDuration;
    _Bool _requestedNonAnimatedLayout;
    _Bool _sublayersCreated;
    _Bool _editingEnabled;
    _Bool _displayingSelectionTimes;
    id <RCWaveformSelectionOverlayDelegate> _delegate;
    double _selectedTimeRangeMinimumDuration;
    double _selectedTimeRangeMaximumDuration;
    double _assetCurrentTime;
    double _assetDuration;
    RCUIConfiguration *_UIConfiguration;
    double _trackedAssetCurrentTime;
    CDStruct_73a5d3ca _selectedTimeRange;
}

@property(nonatomic) double trackedAssetCurrentTime; // @synthesize trackedAssetCurrentTime=_trackedAssetCurrentTime;
@property(nonatomic, getter=isDisplayingSelectionTimes) _Bool displayingSelectionTimes; // @synthesize displayingSelectionTimes=_displayingSelectionTimes;
@property(nonatomic, getter=isEditingEnabled) _Bool editingEnabled; // @synthesize editingEnabled=_editingEnabled;
@property(readonly, nonatomic) struct CGRect selectionRect; // @synthesize selectionRect=_selectionRect;
@property(copy, nonatomic) RCUIConfiguration *UIConfiguration; // @synthesize UIConfiguration=_UIConfiguration;
@property(nonatomic) double assetDuration; // @synthesize assetDuration=_assetDuration;
@property(nonatomic) double assetCurrentTime; // @synthesize assetCurrentTime=_assetCurrentTime;
@property(nonatomic) double selectedTimeRangeMaximumDuration; // @synthesize selectedTimeRangeMaximumDuration=_selectedTimeRangeMaximumDuration;
@property(nonatomic) double selectedTimeRangeMinimumDuration; // @synthesize selectedTimeRangeMinimumDuration=_selectedTimeRangeMinimumDuration;
@property(readonly, nonatomic) CDStruct_73a5d3ca selectedTimeRange; // @synthesize selectedTimeRange=_selectedTimeRange;
@property(nonatomic) __weak id <RCWaveformSelectionOverlayDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (struct CGRect)_alternateEndTimeRectWithSizedTextLayer:(id)arg1;
- (struct CGRect)_endTimeRectWithSizedTextLayer:(id)arg1 isOffsetForThumb:(_Bool *)arg2;
- (_Bool)_shouldDisplayEndTimeText;
- (struct CGRect)_alternateBeginTimeRectWithSizedTextLayer:(id)arg1;
- (struct CGRect)_beginTimeRectWithSizedTextLayer:(id)arg1 isOffsetForThumb:(_Bool *)arg2;
- (_Bool)_shouldOffsetSelectionBarTypeForThumb:(long long)arg1;
- (_Bool)_shouldDisplayBeginTimeText;
- (_Bool)__shouldDisplayEndTimeText;
- (_Bool)__shouldDisplayBeginTimeText;
- (id)_touchTrackingInfoForSelectionBarTye:(long long)arg1;
- (struct CGRect)_middleTimeRectWithFont:(id)arg1;
- (double)_minimumOverlayWidth;
- (double)_minimumOverlaySelectionWidth;
- (_Bool)_drawsSelectionForWidth:(double)arg1;
- (struct CGRect)_selectionRectForSelectedTimeRange:(CDStruct_73a5d3ca)arg1;
- (struct CGRect)_selectionHighlightBounds;
- (struct CGRect)_selectionBoundsIncludingKnobs;
- (double)_effectiveSelectionWidth;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)_clearStaleTouches;
- (void)_updateSelectedTimeRangeForTrackedTouchesAnimated:(_Bool)arg1;
- (_Bool)_beginTrackingSelectionBar:(id)arg1 selectionBarType:(long long)arg2 withTouch:(id)arg3;
- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;
- (id)_hitSelectionForPoint:(struct CGPoint)arg1;
- (void)layoutSubviews;
- (void)_setWantsAnimatedLayoutDuration:(double)arg1;
- (void)_createSublayersIfNeeded;
- (void)_clearSublayers;
- (void)_autoUpdateIsDisplayingSelectionTimes;
@property(readonly, nonatomic) long long endTimeIndicatorSelectionAffinity;
@property(readonly, nonatomic) long long beginTimeIndicatorSelectionAffinity;
@property(readonly, nonatomic) double currentTimeIndicatorCoordinate;
- (void)setFrame:(struct CGRect)arg1;
- (void)reloadSelectionOffsets;
- (void)setSelectedTimeRange:(CDStruct_73a5d3ca)arg1;
- (void)setSelectedTimeRange:(CDStruct_73a5d3ca)arg1 withAnimationDuration:(double)arg2;
- (void)setSelectionRect:(struct CGRect)arg1;
- (id)initWithDelegate:(id)arg1 height:(double)arg2 selectionAreaInsets:(struct UIEdgeInsets)arg3;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface UIApplication (RCAdditions)
+ (double)rc_animationDragCoefficient;
+ (_Bool)rc_isRunningInStoreDemoMode;
+ (_Bool)rc_shouldMakeUIForDefaultPNG;
- (void)rc_createDefaultPNG;
- (id)rc_rootViewController;
@end

@interface UIFont (RCAdditions)
+ (id)rcs_ultraLightMonospacedFontOfSize:(double)arg1;
@property(readonly, nonatomic) NSString *rc_textStyle;
@end

@interface UILabel (RCAdditions)
+ (void)rc_transitionFromLabel:(id)arg1 toLabelWithText:(id)arg2 sizeNewLabelToFit:(_Bool)arg3 duration:(double)arg4 newLabelTransitionCompleteHandler:(CDUnknownBlockType)arg5;
- (double)rc_distanceFromBaselineToCoordinate:(double)arg1 inView:(id)arg2;
@property(readonly, nonatomic) double rc_capOffsetFromTop;
@property(readonly, nonatomic) double rc_baselineOffsetFromBottom;
@end

@interface UINavigationController (RCAdditions)
- (void)rc_changeTopNavigationItemPropertiesToPropertiesInNavigationItem:(id)arg1 animated:(_Bool)arg2;
@end

@interface UINavigationItem (RCAdditions)
- (void)rc_copyPropertiesFromItem:(id)arg1;
- (void)rc_copyPropertiesFromItem:(id)arg1 animated:(_Bool)arg2;
@end

@interface UITextField (RCAdditions)
- (void)rc_resignFirstResponderWithoutDismissingKeyboardForDuration:(double)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)rc_copyKeyboardSettingsFromTextField:(id)arg1;
@end

@interface UIView (RCAdditions)
+ (void)rc_prepareToAutolayoutProperDescendantsOfView:(id)arg1 inConstraints:(id)arg2;
+ (void)rc_beginDebuggingAutolayout;
+ (void)rc_performAnimateableChangesWithAnimationDuration:(double)arg1 setupBlock:(CDUnknownBlockType)arg2 animatablesBlock:(CDUnknownBlockType)arg3 completion:(CDUnknownBlockType)arg4;
+ (void)rc_endDisablingAnimations;
+ (void)rc_beginDisablingAnimations;
- (void)rc_loadInvariantConstraintsWithBlock:(CDUnknownBlockType)arg1;
- (void)rc_reloadConstraintsNamed:(id)arg1 stalenessToken:(id)arg2 loadConstraintsBlock:(CDUnknownBlockType)arg3;
- (void)rc_removeNamedConstraints;
- (void)rc_removeConstraintsNamed:(id)arg1;
- (void)rc_setNamedConstraints:(id)arg1 forName:(id)arg2;
- (id)_rc_constraintsNamed:(id)arg1;
- (id)_rc_constraintsByNameDictionary:(_Bool)arg1;
- (_Bool)rc_replaceConstraints:(id)arg1 withConstraints:(id)arg2;
- (_Bool)rc_replaceConstraint:(id)arg1 withConstraints:(id)arg2;
- (void)rc_addConstraints:(id)arg1;
- (void)rc_addConstraint:(id)arg1;
- (void)rc_removeConstraints:(id)arg1;
- (void)rc_removeConstraint:(id)arg1;
- (void)rc_addConstraintsForFittingToMinimumSize;
- (_Bool)rc_isProperDescendantOfView:(id)arg1;
- (void)rc_layoutBelowIfNeeded;
- (void)rc_updateConstraintsAndLayoutSubtree;
- (id)rc_autolayoutView;
- (_Bool)rc_canAnimate;
@property(nonatomic, setter=rc_setAutoUpdatingTextStyle:) NSString *rc_autoUpdatingTextStyle;
@property(nonatomic, setter=rc_setCharge:) float rc_charge;
- (void)rc_showAllViewBoundsRecursively:(_Bool)arg1;
@end

@interface UIViewController (RCAdditions)
- (void)rc_ensureIsInterfaceOrientationMask:(unsigned long long)arg1 preferredOrientation:(long long)arg2 doneEnsuringBlock:(CDUnknownBlockType)arg3;
- (_Bool)rc_isDescendantOfViewController:(id)arg1;
- (id)rc_navigationItemForPresentingNavigationItem:(id)arg1 forViewController:(id)arg2;
- (void)rc_loadViewIfNecessary;
- (_Bool)rc_hasAxisWithRegularSizeClassOrGreater;
- (_Bool)rc_isVerticalSizeClassRegularOrGreater;
- (_Bool)rc_isHorizontalSizeClassRegularOrGreater;
- (_Bool)rc_isPrimaryLayoutAxis:(long long)arg1;
- (_Bool)rc_canAnimate;
- (void)rc_addChildViewWithViewController:(id)arg1 toView:(id)arg2;
- (void)rc_addChildViewWithViewController:(id)arg1;
- (void)rc_runAutomatedDebuggingTestsWithCompletion:(CDUnknownBlockType)arg1;
@end

@interface UIViewController (RCUIKitDebugging)
+ (id)recursiveDescription;
- (id)recursiveDescription;
- (id)_recursiveDescriptionWithInset:(id)arg1;
@end

@interface _RCCaptureInputDeviceSession : NSObject
{
    NSMutableArray *_sessionFinishedBlocks;
    _Bool _useStartSoundEffect;
    _Bool _captureSessionWasActivated;
    RCCaptureInputDevice *_captureInputDevice;
    RCCaptureSession *_captureSession;
    CDUnknownBlockType _sessionPreparedBlock;
}

@property(copy, nonatomic) CDUnknownBlockType sessionPreparedBlock; // @synthesize sessionPreparedBlock=_sessionPreparedBlock;
@property(nonatomic) _Bool captureSessionWasActivated; // @synthesize captureSessionWasActivated=_captureSessionWasActivated;
@property(retain, nonatomic) RCCaptureSession *captureSession; // @synthesize captureSession=_captureSession;
@property(nonatomic) _Bool useStartSoundEffect; // @synthesize useStartSoundEffect=_useStartSoundEffect;
@property(readonly, nonatomic) __weak RCCaptureInputDevice *captureInputDevice; // @synthesize captureInputDevice=_captureInputDevice;
- (void).cxx_destruct;
- (void)invokeSessionFinishedBlocksWithError:(id)arg1;
- (void)addSessionFinishedBlock:(CDUnknownBlockType)arg1;
- (id)description;
- (void)dealloc;
- (id)initWithCaptureInputDevice:(id)arg1;

@end

@interface _RCCompositionUndoItem : NSObject
{
    RCComposition *_composition;
    NSString *_reasonAccessTokenName;
}

@property(nonatomic) NSString *reasonAccessTokenName; // @synthesize reasonAccessTokenName=_reasonAccessTokenName;
@property(copy, nonatomic) RCComposition *composition; // @synthesize composition=_composition;
- (void).cxx_destruct;

@end

@interface _RCMPRoutingController : MPAVRoutingController
{
    AVAudioSession *_audioSession;
    _Bool _isCategoryActive;
    _Bool _hasCategoryEverBeenActive;
    _Bool _disableRouteChangeNotificationHandling;
    _Bool _needsOutputRoutesFetch;
    NSArray *_cachedRoutes;
    NSString *_activeInputRouteName;
    NSString *_AVAudioSessionCategory;
    NSString *_AVSystemControllerCategory;
}

@property(readonly, nonatomic) NSString *AVSystemControllerCategory; // @synthesize AVSystemControllerCategory=_AVSystemControllerCategory;
@property(readonly, nonatomic) NSString *AVAudioSessionCategory; // @synthesize AVAudioSessionCategory=_AVAudioSessionCategory;
@property(readonly, nonatomic) NSString *activeInputRouteName; // @synthesize activeInputRouteName=_activeInputRouteName;
- (void).cxx_destruct;
- (_Bool)_determineIfAudioOutputCategoryIsCurrent;
- (void)_configureAudioCategory;
- (void)routingToAirPlayMirroringDidChangeNotification:(id)arg1;
- (void)audioSessionRouteChangeNotification:(id)arg1;
- (void)audioSessionInterruptionNotification:(id)arg1;
- (_Bool)routeOtherThanHandsetAndSpeakerAvailable;
- (void)fetchAvailableRoutesWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)makeAudioSessionCategoryActive:(_Bool)arg1;
- (void)setIsCategoryActive:(_Bool)arg1;
@property(readonly, nonatomic) _Bool isRoutingToPhoneCall;
@property(readonly, nonatomic) _Bool isRoutingToAirPlayMirrorDestination;
@property(readonly, nonatomic) _Bool isAudioSessionAppropriateForQueryingInputRoutes;
@property(readonly, nonatomic) _Bool isAudioSessionAppropriateForQueryingOutputRoutes;
@property(readonly, nonatomic) _Bool isTemporarilyIgnoringRouteChangeNotifications;
- (_Bool)isCategoryConfiguredForVoiceMemos;
@property(readonly, nonatomic) _Bool hasCategoryEverBeenActive;
- (void)dealloc;
- (id)initWithName:(id)arg1;

@end

@interface _RCTimeRangeFileInputWaveformDataSource : RCFileInputWaveformDataSource
{
    _Bool _isDecomposedFragment;
    double _destinationBeginTime;
    CDStruct_73a5d3ca _sourceTimeRange;
}

@property(nonatomic) CDStruct_73a5d3ca sourceTimeRange; // @synthesize sourceTimeRange=_sourceTimeRange;
@property(nonatomic) double destinationBeginTime; // @synthesize destinationBeginTime=_destinationBeginTime;
@property(nonatomic) _Bool isDecomposedFragment; // @synthesize isDecomposedFragment=_isDecomposedFragment;
- (void)saveGeneratedWaveformIfNecessary;

@end

@interface _RCUIViewNamedConstraints : NSObject
{
    NSString *_name;
    NSArray *_constraints;
    id _stalenessToken;
}

@property(readonly, copy, nonatomic) id stalenessToken; // @synthesize stalenessToken=_stalenessToken;
@property(readonly, nonatomic) NSArray *constraints; // @synthesize constraints=_constraints;
@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (id)initWithName:(id)arg1 constraints:(id)arg2 stalenessToken:(id)arg3;

@end

@interface _RCViewAutoUpdatingFontObserver : NSObject
{
    id _notificationObserver;
    id _target;
}

+ (_Bool)canObserveFontsForTarget:(id)arg1;
@property(readonly, nonatomic) __weak id target; // @synthesize target=_target;
- (void).cxx_destruct;
- (void)dealloc;
- (void)applyCurrentContentSizeToTarget;
- (id)initWithTarget:(id)arg1;

@end

