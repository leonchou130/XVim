//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CGPoint {
    double _field1;
    double _field2;
};

struct CGRect {
    struct CGPoint _field1;
    struct CGSize _field2;
};

struct CGSize {
    double _field1;
    double _field2;
};

struct UIEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct _NSRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices
// UUID: B9892031-FFCD-34A2-9778-30EDE8E9DCB9
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 2933.5.5.0.0
//            Minimum iOS version: 8.0.0
//                    SDK version: 8.0.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol BSXPCCoding <NSObject>
- (void)encodeWithXPCDictionary:(NSObject<OS_xpc_object> *)arg1;
- (id)initWithXPCDictionary:(NSObject<OS_xpc_object> *)arg1;
@end

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSSecureCoding <NSCoding>
+ (_Bool)supportsSecureCoding;
@end

@protocol SBFLegibilitySettingsProvider <NSObject>
@property(readonly, retain, nonatomic) _UILegibilitySettings *legibilitySettings;
@property(nonatomic) id <SBFLegibilitySettingsProviderDelegate> delegate;
@end

@protocol SBFLegibilitySettingsProviderDelegate
- (void)providerLegibilitySettingsChanged:(id <SBFLegibilitySettingsProvider>)arg1;
@end

@protocol SBFWallpaperViewLegibilityObserver <NSObject>
- (void)wallpaperView:(SBFWallpaperView *)arg1 legibilitySettingsDidChange:(_UILegibilitySettings *)arg2;
@end

@protocol SBNumberPadDelegate <NSObject>

@optional
- (void)buttonCancelled:(UIControl *)arg1;
- (void)buttonDown:(UIControl *)arg1;
- (void)buttonUp:(UIControl *)arg1;
@end

@protocol SBSUICarDisplayNowPlayingHostInterface
@end

@protocol SBSUICarDisplayNowPlayingInterface
- (void)switchToState:(SBSUICarDisplayNowPlayingStateContext *)arg1;
@end

@protocol SBSUIRemoteAlertItemContentHostInterface
- (void)setPreferredContentSize:(struct CGSize)arg1;
@end

@protocol SBSUIRemoteAlertItemContentServiceInterface
- (void)getPreferredContentSizeWithReplyBlock:(void (^)(struct CGSize))arg1;
@end

@protocol SBUIBiometricEventObserver <NSObject>
- (void)biometricEventMonitor:(SBUIBiometricEventMonitor *)arg1 handleBiometricEvent:(unsigned long long)arg2;
@end

@protocol SBUIEmergencyCallHostInterface
- (void)dismiss;
@end

@protocol SBUIEmergencyCallServiceInterface
- (void)noteViewMovedOffscreenTemporarily;
- (void)noteTintColorForBackgroundStyleChanged:(UIColor *)arg1;
- (void)backgroundStyle:(void (^)(long long))arg1;
@end

@protocol SBUIPasscodeEntryFieldDelegate <NSObject>

@optional
- (void)passcodeEntryFieldTextDidChange:(SBUIPasscodeEntryField *)arg1;
- (_Bool)passcodeEntryField:(SBUIPasscodeEntryField *)arg1 shouldInsertText:(NSString *)arg2;
- (void)passcodeEntryFieldDidCancelEntry:(SBUIPasscodeEntryField *)arg1;
- (void)passcodeEntryFieldDidAcceptEntry:(SBUIPasscodeEntryField *)arg1;
@end

@protocol SBUIPasscodeLockNumberPadDelegate <NSObject>

@optional
- (void)passcodeLockNumberPadEmergencyCallButtonHit:(SBUIPasscodeLockNumberPad *)arg1;
- (void)passcodeLockNumberPadBackspaceButtonHit:(SBUIPasscodeLockNumberPad *)arg1;
- (void)passcodeLockNumberPadCancelButtonHit:(SBUIPasscodeLockNumberPad *)arg1;
- (void)passcodeLockNumberPad:(SBUIPasscodeLockNumberPad *)arg1 keyCancelled:(UIControl<SBUIPasscodeNumberPadButton> *)arg2;
- (void)passcodeLockNumberPad:(SBUIPasscodeLockNumberPad *)arg1 keyUp:(UIControl<SBUIPasscodeNumberPadButton> *)arg2;
- (void)passcodeLockNumberPad:(SBUIPasscodeLockNumberPad *)arg1 keyDown:(UIControl<SBUIPasscodeNumberPadButton> *)arg2;
@end

@protocol SBUIPasscodeLockView <NSObject>
@property(nonatomic) unsigned long long biometricMatchMode;
@property(retain, nonatomic) id <SBFLegibilitySettingsProvider> backgroundLegibilitySettingsProvider;
@property(retain, nonatomic) UIColor *customBackgroundColor;
@property(nonatomic) double backgroundAlpha;
@property(nonatomic) _Bool showsEmergencyCallButton;
@property(nonatomic) _Bool showsStatusField;
@property(nonatomic) _Bool playsKeypadSounds;
@property(readonly, nonatomic) NSString *passcode;
@property(readonly, nonatomic) int style;
@property(nonatomic) id <SBUIPasscodeLockViewDelegate> delegate;
- (void)setAllowsStatusTextUpdatingOnResignFirstResponder:(_Bool)arg1;
- (void)updateStatusText:(NSString *)arg1 subtitle:(NSString *)arg2 animated:(_Bool)arg3;
- (void)autofillForSuccessfulMesaAttemptWithCompletion:(void (^)(void))arg1;
- (void)resetForFailedMesaAttemptWithStatusText:(NSString *)arg1 andSubtitle:(NSString *)arg2;
- (void)reset;
- (void)resetForScreenOff;
- (void)resetForFailedPasscode;
@end

@protocol SBUIPasscodeLockView_Internal <SBUIPasscodeLockView>

@optional
- (void)_noteDeviceHasBeenUnlockedOnceSinceBoot:(_Bool)arg1;
@end

@protocol SBUIPasscodeNumberPadButton <NSObject>
- (NSString *)stringCharacter;
- (int)characterType;
@end

@protocol SBUIRemoteAlertHostInterface
- (void)setSupportedInterfaceOrientationOverride:(unsigned long long)arg1;
- (void)setShouldDisableFadeInAnimation:(_Bool)arg1;
- (void)setShouldDismissOnUILock:(_Bool)arg1;
- (void)setStatusBarHidden:(_Bool)arg1 withDuration:(double)arg2;
- (void)setDesiredAutoLockDuration:(double)arg1;
- (void)setIdleTimerDisabled:(_Bool)arg1 forReason:(NSString *)arg2;
- (void)setDesiredStatusBarStyleOverrides:(int)arg1;
- (void)setDismissalAnimationStyle:(long long)arg1;
- (void)setAllowsAlertStacking:(_Bool)arg1;
- (void)setBackgroundStyle:(long long)arg1 withDuration:(double)arg2;
- (void)setWallpaperTunnelActive:(_Bool)arg1;
- (void)setAllowsMenuButtonDismissal:(_Bool)arg1;
- (void)setDesiredHardwareButtonEvents:(long long)arg1;
- (void)dismissAndLockUIIfNecessary;
- (void)dismiss;
- (void)setAllowsBanners:(_Bool)arg1;
@end

@protocol SBUIRemoteAlertServiceInterface

@optional
- (void)noteActivatedForCustomReason:(NSString *)arg1;
- (void)handleDoubleHeightStatusBarTap;
- (void)handleHeadsetButtonPressed:(_Bool)arg1;
- (void)handleVolumeDownButtonPressed;
- (void)handleVolumeUpButtonPressed;
- (void)handleLockButtonPressed;
- (void)handleHomeButtonPressed;
@end

@protocol TITextCheckerSupport <NSObject>
- (void)appendWordToTextCheckerLocalDictionary:(NSString *)arg1;
- (void)requestTextCheckerLocalDictionaryWithCompletionHandler:(void (^)(NSData *))arg1;
- (void)string:(NSString *)arg1 isExemptFromTextCheckerWithCompletionHandler:(void (^)(_Bool))arg2;
@end

@protocol TPNumberPadButtonProtocol <NSObject>
@property unsigned int character;
- (id)initForCharacter:(unsigned int)arg1;
@end

@protocol UITextFieldDelegate <NSObject>

@optional
- (_Bool)textFieldShouldReturn:(UITextField *)arg1;
- (_Bool)textFieldShouldClear:(UITextField *)arg1;
- (_Bool)textField:(UITextField *)arg1 shouldChangeCharactersInRange:(struct _NSRange)arg2 replacementString:(NSString *)arg3;
- (void)textFieldDidEndEditing:(UITextField *)arg1;
- (_Bool)textFieldShouldEndEditing:(UITextField *)arg1;
- (void)textFieldDidBeginEditing:(UITextField *)arg1;
- (_Bool)textFieldShouldBeginEditing:(UITextField *)arg1;
@end

@protocol _SBUISwitcherPageHostInterface
@end

@protocol _SBUISwitcherPageProviderInterface
@end

@protocol _SBUIWidgetHost <NSObject>
- (void)invalidatePreferredViewSize;
- (void)requestLaunchOfURL:(NSURL *)arg1;
- (void)requestPresentationOfViewController:(NSString *)arg1 presentationStyle:(long long)arg2 context:(NSDictionary *)arg3 completion:(void (^)(void))arg4;
@end

@interface NSString (SBPasscodeLockEntryFieldExtras)
- (_Bool)isNewline;
- (_Bool)isSingleCharacterAndMemberOfSet:(id)arg1;
@end

@interface SBBlackBackdropSettings : _UIBackdropViewSettings
{
}

- (double)blurRadius;
- (id)combinedTintColor;

@end

@interface SBEmptyButtonView : UIView <TPNumberPadButtonProtocol>
{
    unsigned int _char;
}

@property unsigned int character; // @synthesize character=_char;
- (struct CGSize)intrinsicContentSize;
- (id)initForCharacter:(unsigned int)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SBInteractionPassThroughView : UIView
{
}

- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;

@end

@interface SBLightPasscodeNumberPadButton : TPNumberPadLightStyleButton <SBUIPasscodeNumberPadButton>
{
}

+ (double)_numberPadButtonOuterCircleDiameter;
+ (struct UIEdgeInsets)paddingOutsideRing;
+ (struct CGSize)defaultSize;
- (id)stringCharacter;
- (int)characterType;
- (id)initForCharacter:(unsigned int)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SBLockOverlayStyleProperties : NSObject
{
    UIColor *_primaryColor;
    UIColor *_secondaryColor;
    UIColor *_tintColor;
    double _tintAlpha;
    double _blurRadius;
    unsigned long long _style;
    long long _quality;
    _UIBackdropViewSettings *_settings;
}

@property(readonly, nonatomic) double blurRadius; // @synthesize blurRadius=_blurRadius;
@property(readonly, nonatomic) UIColor *tintColor; // @synthesize tintColor=_tintColor;
@property(readonly, nonatomic) double tintAlpha; // @synthesize tintAlpha=_tintAlpha;
@property(readonly, nonatomic) long long graphicsQuality; // @synthesize graphicsQuality=_quality;
@property(readonly, nonatomic) unsigned long long style; // @synthesize style=_style;
- (id)_stringForStyle;
- (id)_stringForQuality;
- (id)_settingsForStyle;
- (void)_configure;
- (id)description;
- (void)dealloc;
- (id)initWithStyle:(unsigned long long)arg1 quality:(long long)arg2;

@end

@interface SBLockOverlayStylePropertiesFactory : NSObject
{
    NSMutableDictionary *_deviceQualityToProperties;
    unsigned long long _style;
}

+ (id)overlayPropertiesFactoryWithStyle:(unsigned long long)arg1;
@property(readonly, nonatomic) unsigned long long style; // @synthesize style=_style;
- (id)_fetchAndCachePropsForDeviceQuality:(long long)arg1;
- (id)propertiesWithGraphicsQuality:(long long)arg1;
- (id)propertiesWithDeviceDefaultGraphicsQuality;
- (void)dealloc;
- (id)initWithStyle:(unsigned long long)arg1;

@end

@interface SBNumberPadWithDelegate : TPNumberPad
{
    id <SBNumberPadDelegate> _delegate;
}

@property(nonatomic) id <SBNumberPadDelegate> delegate; // @synthesize delegate=_delegate;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (id)buttonForPoint:(struct CGPoint)arg1 forEvent:(id)arg2;
- (void)buttonCancelled:(id)arg1;
- (void)buttonDown:(id)arg1;
- (void)buttonUp:(id)arg1;

@end

@interface SBPasscodeKeyboard : UIKeyboard
{
    SBUIPasscodeLockViewWithKeyboard *_lockView;
}

- (void)maximize;
- (void)minimize;
- (_Bool)shouldSaveMinimizationState;
- (_Bool)canDismiss;
- (_Bool)isActive;
- (id)initWithFrame:(struct CGRect)arg1 lockView:(id)arg2;

@end

@interface SBPasscodeNumberPadButton : TPNumberPadDarkStyleButton <SBUIPasscodeNumberPadButton>
{
}

+ (double)_numberPadButtonOuterCircleDiameter;
+ (struct UIEdgeInsets)paddingOutsideRing;
+ (struct CGSize)defaultSize;
+ (id)_stringCharacterForCharacter:(unsigned int)arg1;
+ (int)_characterTypeForCharacter:(unsigned int)arg1;
- (id)stringCharacter;
- (int)characterType;
- (id)initForCharacter:(unsigned int)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SBSUICarDisplayNowPlayingStateContext : NSObject <NSSecureCoding>
{
    NSString *_stateName;
    NSString *_animationName;
    NSString *_associatedBundleID;
}

+ (_Bool)supportsSecureCoding;
+ (id)contextWithState:(id)arg1 animationName:(id)arg2;
@property(copy, nonatomic) NSString *associatedBundleID; // @synthesize associatedBundleID=_associatedBundleID;
@property(copy, nonatomic) NSString *animationName; // @synthesize animationName=_animationName;
@property(copy, nonatomic) NSString *stateName; // @synthesize stateName=_stateName;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)description;
- (void)dealloc;
- (id)initWithState:(id)arg1 animationName:(id)arg2;

@end

@interface SBSUICarDisplayNowPlayingViewController : UIViewController <SBSUICarDisplayNowPlayingInterface>
{
}

+ (id)_exportedInterface;
+ (id)_remoteViewControllerInterface;
- (void)switchToState:(id)arg1;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

@end

@interface SBSUIRemoteAlertItemContentViewController : UIViewController <SBSUIRemoteAlertItemContentServiceInterface>
{
}

+ (id)_exportedInterface;
+ (id)_remoteViewControllerInterface;
- (void)getPreferredContentSizeWithReplyBlock:(CDUnknownBlockType)arg1;
- (void)viewDidLayoutSubviews;
- (void)invalidatePreferredContentSize;
- (void)viewDidLoad;

@end

@interface SBSUIWallpaperMotionButton : SBFButton
{
    UILabel *_leftLabel;
    UILabel *_rightLabel;
    double _maxRightLabelWidth;
    _UIBackdropView *_backdropView;
}

- (double)_maxRightLabelWidth;
- (double)_separationWidth;
- (double)_labelHorizontalPadding;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)layoutSubviews;
- (id)_newBackdropView;
- (void)_updateForStateChange;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SBSUIWallpaperPreviewView : UIView
{
    UITapGestureRecognizer *_tapGestureRecognizer;
    SBSUIWallpaperMotionButton *_motionButton;
    SBFLockScreenDateView *_dateView;
    SBFWallpaperView *_wallpaperView;
}

@property(retain, nonatomic) SBFWallpaperView *wallpaperView; // @synthesize wallpaperView=_wallpaperView;
@property(retain, nonatomic) SBFLockScreenDateView *dateView; // @synthesize dateView=_dateView;
- (void)_updateMotionEffectsButton;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (double)_motionButtonInset;
- (void)_layoutMotionButton;
- (void)_layoutDateView;
- (void)_layoutWallpaperView;
- (void)layoutSubviews;
- (void)_toggleMotion;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SBSUIWallpaperPreviewViewController : UIViewController <SBFWallpaperViewLegibilityObserver, SBFLegibilitySettingsProvider>
{
    NSTimer *_dateTimer;
    id <SBFLegibilitySettingsProviderDelegate> _delegate;
    UIImage *_wallpaperImage;
    NSDictionary *_proceduralWallpaper;
    NSDictionary *_proceduralWallpaperOptions;
    _Bool _colorSamplingEnabled;
    _Bool _allowScrolling;
    SBFLockScreenSimpleDateFormatter *_dateFormatter;
    long long _variant;
    NSString *_name;
    _Bool _motionEnabled;
}

@property(nonatomic) _Bool motionEnabled; // @synthesize motionEnabled=_motionEnabled;
@property(nonatomic) id <SBFLegibilitySettingsProviderDelegate> delegate; // @synthesize delegate=_delegate;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)_startDateTimer;
- (void)_stopDateTimer;
- (void)_updateDateView;
- (id)_dateView;
- (id)_wallpaperView;
- (id)_previewView;
- (id)_proceduralWallpaperViewWithFrame:(struct CGRect)arg1 variant:(long long)arg2;
- (id)_wallpaperViewWithFrame:(struct CGRect)arg1 variant:(long long)arg2 options:(id)arg3;
- (id)_wallpaperViewWithFrame:(struct CGRect)arg1 image:(id)arg2 supportsCropping:(_Bool)arg3;
- (id)_wallpaperViewWithFrame:(struct CGRect)arg1;
- (id)_backdropWallpaperView;
- (void)wallpaperView:(id)arg1 legibilitySettingsDidChange:(id)arg2;
@property(readonly, retain, nonatomic) _UILegibilitySettings *legibilitySettings;
- (void)setWallpaperForLocations:(long long)arg1;
- (double)_parallaxFactor;
@property(readonly) UIImage *wallpaperImage;
@property(nonatomic) _Bool colorSamplingEnabled;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)loadView;
- (void)dealloc;
- (id)initWithScrollableImage:(id)arg1;
- (id)initWithImage:(id)arg1 name:(id)arg2;
- (id)initWithProceduralWallpaper:(id)arg1 options:(id)arg2;
- (id)initWithWallpaperVariant:(long long)arg1;
- (id)initWithColorSamplingEnabled:(_Bool)arg1;
- (id)initWithImage:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SBSimplePasscodeEntryFieldButton : TPRevealingRingView
{
    _Bool _useLightStyle;
}

- (void)setCustomBackgroundColor:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1 paddingOutsideRing:(struct UIEdgeInsets)arg2 useLightStyle:(_Bool)arg3;

@end

@interface SBUIPasscodeEntryField : UIView <UITextFieldDelegate>
{
    id <SBUIPasscodeEntryFieldDelegate> _delegate;
    UITextField *_textField;
    NSMutableCharacterSet *_numericTrimmingSet;
    _Bool _ignoreCallbacks;
    _Bool _resigningFirstResponder;
    UIColor *_customBackgroundColor;
}

@property(retain, nonatomic) UIColor *customBackgroundColor; // @synthesize customBackgroundColor=_customBackgroundColor;
@property(nonatomic) id <SBUIPasscodeEntryFieldDelegate> delegate; // @synthesize delegate=_delegate;
- (_Bool)textFieldShouldReturn:(id)arg1;
- (_Bool)textField:(id)arg1 shouldChangeCharactersInRange:(struct _NSRange)arg2 replacementString:(id)arg3;
- (_Bool)textFieldShouldBeginEditing:(id)arg1;
- (void)notePasscodeFieldDidAcceptEntry;
- (void)notePasscodeFieldTextDidChange;
- (_Bool)shouldInsertPasscodeText:(id)arg1;
- (void)_autofillForMesaWithCompletion:(CDUnknownBlockType)arg1;
- (void)_handleKeyUIEvent:(id)arg1 source:(int)arg2;
- (struct CGSize)_viewSize;
@property(readonly, nonatomic, getter=_textField) UITextField *textField; // @synthesize textField=_textField;
- (void)_resetForFailedPasscode:(_Bool)arg1 playUnlockFailedSound:(_Bool)arg2;
- (_Bool)_hasAnyCharacters;
- (void)_deleteLastCharacter;
- (void)_appendString:(id)arg1;
- (_Bool)_baseResignFirstResponder;
- (_Bool)_baseBecomeFirstResponder;
- (void)_setLuminosityBoost:(double)arg1;
- (_Bool)resignFirstResponder;
- (_Bool)becomeFirstResponder;
- (_Bool)isFirstResponder;
- (_Bool)canBecomeFirstResponder;
- (void)setBackgroundAlpha:(double)arg1;
- (void)resetForFailedPasscode;
- (void)reset;
@property(copy, nonatomic) NSString *stringValue; // @dynamic stringValue;
- (void)deleteLastCharacter;
- (void)appendString:(id)arg1;
- (void)dealloc;
- (id)initWithDefaultSizeAndLightStyle:(_Bool)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SBUIAlphanumericPasscodeEntryField : SBUIPasscodeEntryField
{
    UIView *_leftPaddingView;
    UIView *_rightPaddingView;
    UIView *_springView;
    UIView *_springViewParent;
}

- (void)_resetForFailedPasscode:(_Bool)arg1 playUnlockFailedSound:(_Bool)arg2;
- (void)notePasscodeFieldTextDidChange;
- (void)_autofillForMesaWithCompletion:(CDUnknownBlockType)arg1;
- (void)setBackgroundAlpha:(double)arg1;
- (void)setCustomBackgroundColor:(id)arg1;
@property(readonly, nonatomic) UITextInputTraits *textInputTraits;
- (void)layoutSubviews;
- (void)dealloc;
- (id)initWithDefaultSizeAndLightStyle:(_Bool)arg1;

@end

@interface SBUIAppleLogoView : UIView
{
}

- (void)layoutSubviews;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1 useWhiteLogo:(_Bool)arg2;
- (id)initWithFrame:(struct CGRect)arg1 inverted:(_Bool)arg2;
- (id)initWithFrame:(struct CGRect)arg1 appearance:(long long)arg2;

@end

@interface SBUIBiometricEventMonitor : NSObject
{
    BiometricKit *_biometricKit;
    id <SBUIBiometricEventMonitorDelegate> _delegate;
    NSHashTable *_observers;
    unsigned long long _lastEvent;
    NSCountedSet *_matchingDisabledRequesters;
    NSCountedSet *_fingerDetectRequesters;
    NSCountedSet *_activePasscodeViews;
    _Bool _matchingEnabled;
    _Bool _fingerDetectionEnabled;
    _Bool _screenIsOff;
    _Bool _deviceLocked;
    _Bool _lockScreenTopmost;
    _Bool _shouldSendFingerOffNotification;
}

+ (id)sharedInstance;
@property(readonly, nonatomic, getter=isMatchingEnabled) _Bool matchingEnabled; // @synthesize matchingEnabled=_matchingEnabled;
@property(nonatomic) id <SBUIBiometricEventMonitorDelegate> delegate; // @synthesize delegate=_delegate;
- (void)_profileSettingsChanged:(id)arg1;
@property(readonly, nonatomic) unsigned long long lockoutState;
- (void)disableMatchingForPasscodeView:(id)arg1;
- (void)enableMatchingForPasscodeView:(id)arg1;
- (void)_updateHandlersForEvent:(unsigned long long)arg1;
- (void)noteScreenWillTurnOn;
- (void)noteScreenDidTurnOff;
- (void)noteScreenWillTurnOff;
- (void)_reevaluateMatching;
- (void)_setDeviceLocked:(_Bool)arg1;
- (void)setLockScreenTopmost:(_Bool)arg1;
- (void)_setMatchingEnabled:(_Bool)arg1;
- (void)_stopMatching;
- (void)_startMatching;
- (void)_stopFingerDetection;
- (void)_startFingerDetection;
- (void)setFingerDetectEnabled:(_Bool)arg1 requester:(id)arg2;
- (void)setMatchingDisabled:(_Bool)arg1 requester:(id)arg2;
- (id)stringForEvent:(unsigned long long)arg1;
- (_Bool)hasEnrolledIdentities;
- (void)removeObserver:(id)arg1;
- (void)addObserver:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface SBUIButton : UIButton
{
    struct UIEdgeInsets _hitAreaAdjustments;
}

@property(nonatomic) struct UIEdgeInsets hitAreaAdjustments; // @synthesize hitAreaAdjustments=_hitAreaAdjustments;
- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SBUIEmergencyCallHostViewController : _UIRemoteViewController <SBUIEmergencyCallHostInterface>
{
    _UIBackdropView *_blurView;
    UIColor *_tintColor;
    long long _backgroundStyle;
    double _blurRadius;
    _Bool _blursSelf;
}

+ (id)serviceViewControllerInterface;
+ (id)exportedInterface;
+ (void)requestEmergencyCallControllerWithCompletion:(CDUnknownBlockType)arg1;
@property(retain, nonatomic) UIColor *tintColor; // @synthesize tintColor=_tintColor;
@property(nonatomic) double blurRadius; // @synthesize blurRadius=_blurRadius;
@property(nonatomic) long long backgroundStyle; // @synthesize backgroundStyle=_backgroundStyle;
@property(nonatomic) _Bool blursSelf; // @synthesize blursSelf=_blursSelf;
- (void)_createAndAddBlurViewIfNecessary;
- (void)viewWillAppear:(_Bool)arg1;
- (void)dismiss;
- (id)tintColorForBackgroundStyle:(long long)arg1 outBlurRadius:(double *)arg2;
- (void)dealloc;

@end

@interface SBUIEmergencyCallServiceViewController : UIViewController <SBUIEmergencyCallServiceInterface>
{
    long long _backgroundStyle;
    UIColor *_tintColor;
}

+ (id)_exportedInterface;
+ (id)_remoteViewControllerInterface;
@property(readonly, retain, nonatomic) UIColor *tintColor; // @synthesize tintColor=_tintColor;
@property(nonatomic) long long backgroundStyle; // @synthesize backgroundStyle=_backgroundStyle;
- (void)noteViewMovedOffscreenTemporarily;
- (void)noteTintColorForBackgroundStyleChanged:(id)arg1;
- (void)backgroundStyle:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

@end

@interface SBUINumericPasscodeEntryFieldBase : SBUIPasscodeEntryField
{
    NSMutableCharacterSet *_numericTrimmingSet;
    unsigned long long _maxNumbersAllowed;
    _Bool _allowsNewlineAcceptance;
    _Bool _autoAcceptWhenMaxNumbersMet;
}

@property(nonatomic) _Bool autoAcceptWhenMaxNumbersMet; // @synthesize autoAcceptWhenMaxNumbersMet=_autoAcceptWhenMaxNumbersMet;
@property(nonatomic) unsigned long long maxNumbersAllowed; // @synthesize maxNumbersAllowed=_maxNumbersAllowed;
@property(nonatomic) _Bool allowsNewlineAcceptance; // @synthesize allowsNewlineAcceptance=_allowsNewlineAcceptance;
- (_Bool)_hasMaxDigitsSpecified;
- (void)_reallyAppendString:(id)arg1;
- (void)_appendString:(id)arg1;
- (void)_deleteLastCharacter;
- (_Bool)shouldInsertPasscodeText:(id)arg1;
- (_Bool)resignFirstResponder;
- (void)dealloc;
- (id)initWithDefaultSizeAndLightStyle:(_Bool)arg1;

@end

@interface SBUIFourDigitPasscodeEntryField : SBUINumericPasscodeEntryFieldBase
{
    UIView *_leftPaddingView;
    UIView *_rightPaddingView;
    UIView *_characterIndicatorsContainerView;
    NSMutableArray *_characterIndicators;
    double _backgroundAlpha;
    UIView *_springView;
    UIView *_springViewParent;
}

- (struct UIEdgeInsets)_entryFieldPaddingOutsideRing;
- (struct CGRect)_entryFieldBoundsWithXOffset:(double)arg1;
- (void)_autofillForMesaWithCompletion:(CDUnknownBlockType)arg1;
- (struct CGSize)_viewSize;
- (void)_resetForFailedPasscode:(_Bool)arg1 playUnlockFailedSound:(_Bool)arg2;
- (_Bool)_hasAnyCharacters;
- (void)_setLuminosityBoost:(double)arg1;
- (void)_deleteLastCharacter;
- (void)_appendString:(id)arg1;
- (void)layoutSubviews;
- (void)reset;
- (void)setCustomBackgroundColor:(id)arg1;
- (void)setBackgroundAlpha:(double)arg1;
- (void)dealloc;
- (id)initWithDefaultSizeAndLightStyle:(_Bool)arg1;

@end

@interface SBUIIOSurfaceAssertion : NSObject <BSXPCCoding>
{
}

- (void)encodeWithXPCDictionary:(id)arg1;
- (id)initWithXPCDictionary:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SBUIKeyboardEnablementManager : NSObject
{
    NSHashTable *_disabledContexts;
    _Bool _disabled;
}

+ (id)sharedInstance;
- (id)description;
- (void)enableAutomaticAppearanceForContext:(id)arg1;
- (void)disableAutomaticAppearanceForContext:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface SBUILockOverlayView : SBInteractionPassThroughView
{
    id <SBUILockOverlayViewDelegate> _delegate;
    UIResizableView *_textContainerView;
    UILabel *_titleLabel;
    UILabel *_subtitleLabel;
    UIButton *_actionButton;
    SBLockOverlayStylePropertiesFactory *_underlayPropertiesFactory;
    unsigned long long _style;
    _UILegibilitySettings *_legibilitySettings;
}

@property(readonly, nonatomic) _UILegibilitySettings *legibilitySettings; // @synthesize legibilitySettings=_legibilitySettings;
@property(readonly, nonatomic) unsigned long long style; // @synthesize style=_style;
@property(readonly, nonatomic) SBLockOverlayStylePropertiesFactory *underlayPropertiesFactory; // @synthesize underlayPropertiesFactory=_underlayPropertiesFactory;
@property(readonly, nonatomic) UIButton *actionButton; // @synthesize actionButton=_actionButton;
@property(readonly, nonatomic) UILabel *subtitleLabel; // @synthesize subtitleLabel=_subtitleLabel;
@property(readonly, nonatomic) UILabel *titleLabel; // @synthesize titleLabel=_titleLabel;
@property(nonatomic) id <SBUILockOverlayViewDelegate> delegate; // @synthesize delegate=_delegate;
- (double)_maxLabelWidth;
- (void)_sizeView:(id)arg1 forFixedWith:(_Bool)arg2;
- (unsigned long long)_numberOfLinesForText:(id)arg1 font:(id)arg2 size:(struct CGSize)arg3;
- (void)_buttonPressed;
- (id)_actionFont;
- (id)_subtitleFont;
- (id)_titleFont;
- (void)layoutSubviews;
- (id)_legibilitySettingsForStyle:(unsigned long long)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 style:(unsigned long long)arg2;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SBUILongNumericPasscodeEntryField : SBUINumericPasscodeEntryFieldBase
{
    UIView *_leftPaddingView;
    UIView *_rightPaddingView;
    SBUIButton *_okButton;
    _Bool _showsOkButton;
    UILabel *_promptLabel;
    _Bool _showsPromptLabel;
    _Bool _firstResponder;
    UIView *_springView;
    UIView *_springViewParent;
}

@property(nonatomic) _Bool showsPromptLabel; // @synthesize showsPromptLabel=_showsPromptLabel;
@property(readonly, nonatomic) UILabel *promptLabel; // @synthesize promptLabel=_promptLabel;
@property(nonatomic) _Bool showsOkButton; // @synthesize showsOkButton=_showsOkButton;
@property(readonly, nonatomic) UIButton *okButton; // @synthesize okButton=_okButton;
- (_Bool)textFieldShouldBeginEditing:(id)arg1;
- (void)_resetForFailedPasscode:(_Bool)arg1 playUnlockFailedSound:(_Bool)arg2;
- (void)_autofillForMesaWithCompletion:(CDUnknownBlockType)arg1;
- (struct CGSize)_viewSize;
- (void)_getPasscodeFieldSize:(struct CGSize *)arg1 okButtonSize:(struct CGSize *)arg2;
- (void)_okButtonHit;
- (void)_handleKeyUIEvent:(id)arg1;
- (void)setBackgroundAlpha:(double)arg1;
- (void)setCustomBackgroundColor:(id)arg1;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)layoutSubviews;
- (_Bool)resignFirstResponder;
- (_Bool)canResignFirstResponder;
- (_Bool)isFirstResponder;
- (_Bool)becomeFirstResponder;
- (_Bool)canBecomeFirstResponder;
- (void)dealloc;
- (id)initWithDefaultSizeAndLightStyle:(_Bool)arg1;

@end

@interface SBUIPasscodeLockNumberPad : UIView <SBNumberPadDelegate>
{
    SBNumberPadWithDelegate *_numberPad;
    id <SBUIPasscodeLockNumberPadDelegate> _delegate;
    UIView *_leftPaddingView;
    UIView *_rightPaddingView;
    UIView *_bottomPaddingView;
    SBUIButton *_emergencyCallButton;
    SBUIButton *_backspaceButton;
    SBUIButton *_cancelButton;
    UIControl<SBUIPasscodeNumberPadButton> *_downButton;
    _Bool _showsBackspaceButton;
    _Bool _showsEmergencyCallButton;
    _Bool _showsCancelButton;
    UIColor *_customBackgroundColor;
    _Bool _useLightStyle;
}

+ (struct UIEdgeInsets)_inputButtonCircleSpacing;
+ (struct CGSize)_inputButtonCircleSize;
+ (id)_buttonForCharacter:(unsigned int)arg1 withLightStyle:(_Bool)arg2;
@property(retain, nonatomic) UIControl<SBUIPasscodeNumberPadButton> *downButton; // @synthesize downButton=_downButton;
@property(nonatomic) _Bool showsCancelButton; // @synthesize showsCancelButton=_showsCancelButton;
@property(nonatomic) _Bool showsEmergencyCallButton; // @synthesize showsEmergencyCallButton=_showsEmergencyCallButton;
@property(nonatomic) _Bool showsBackspaceButton; // @synthesize showsBackspaceButton=_showsBackspaceButton;
@property(nonatomic) id <SBUIPasscodeLockNumberPadDelegate> delegate; // @synthesize delegate=_delegate;
- (void)_emergencyCallButtonHit;
- (void)_backspaceButtonHit;
- (void)_cancelButtonHit;
- (void)_configureAdditionalButtons;
- (id)_fontForAncillaryButton;
- (void)_setLuminosityBoost:(double)arg1;
- (double)_distanceToTopOfFirstButton;
- (void)_numberPadTouchDrag:(id)arg1 forEvent:(id)arg2;
- (void)_numberPadTouchCancelled:(id)arg1 forEvent:(id)arg2;
- (void)_numberPadTouchUp:(id)arg1 forEvent:(id)arg2;
- (void)_numberPadTouchDown:(id)arg1 forEvent:(id)arg2;
- (void)setCustomBackgroundColor:(id)arg1;
- (void)setBackgroundAlpha:(double)arg1;
- (void)dealloc;
- (id)initWithDefaultSizeAndLightStyle:(_Bool)arg1;
@property(readonly, nonatomic) NSArray *buttons;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SBUIPasscodeLockViewBase : UIView <SBUIBiometricEventObserver, SBFLegibilitySettingsProviderDelegate, SBUIPasscodeLockView_Internal, SBUIPasscodeLockView>
{
    id <SBUIPasscodeLockViewDelegate_Internal> _delegate;
    int _style;
    NSString *_passcode;
    _Bool _playsKeypadSounds;
    _Bool _showsEmergencyCallButton;
    _Bool _showsStatusField;
    _Bool _becameVisible;
    double _backgroundAlpha;
    UIColor *_customBackgroundColor;
    SBUIPasscodeEntryField *_entryField;
    id <SBFLegibilitySettingsProvider> _backgroundLegibilitySettingsProvider;
    double _luminanceBoost;
    double _currentBacklightLevel;
    _UILegibilitySettings *_legibilitySettings;
    _Bool _allowsStatusTextUpdatingOnResignFirstResponder;
    _Bool _mesaLockedOut;
    unsigned long long _biometricMatchMode;
    _Bool _deviceHasBeenUnlockedOnceSinceBoot;
    _Bool _shouldResetForFailedPasscodeAttempt;
    NSString *_statusText;
    NSString *_statusSubtitleText;
    unsigned long long _statusState;
}

@property(nonatomic, getter=_statusState, setter=_setStatusState:) unsigned long long statusState; // @synthesize statusState=_statusState;
@property(nonatomic) _Bool shouldResetForFailedPasscodeAttempt; // @synthesize shouldResetForFailedPasscodeAttempt=_shouldResetForFailedPasscodeAttempt;
@property(readonly, copy, nonatomic, getter=_statusSubtitleText) NSString *statusSubtitleText; // @synthesize statusSubtitleText=_statusSubtitleText;
@property(readonly, copy, nonatomic, getter=_statusText) NSString *statusText; // @synthesize statusText=_statusText;
@property(nonatomic) unsigned long long biometricMatchMode; // @synthesize biometricMatchMode=_biometricMatchMode;
@property(nonatomic, getter=_luminosityBoost, setter=_setLuminosityBoost:) double luminosityBoost; // @synthesize luminosityBoost=_luminanceBoost;
@property(retain, nonatomic) id <SBFLegibilitySettingsProvider> backgroundLegibilitySettingsProvider; // @synthesize backgroundLegibilitySettingsProvider=_backgroundLegibilitySettingsProvider;
@property(retain, nonatomic, getter=_entryField, setter=_setEntryField:) SBUIPasscodeEntryField *_entryField; // @synthesize _entryField;
@property(retain, nonatomic) UIColor *customBackgroundColor; // @synthesize customBackgroundColor=_customBackgroundColor;
@property(nonatomic) double backgroundAlpha; // @synthesize backgroundAlpha=_backgroundAlpha;
@property(nonatomic) _Bool showsStatusField; // @synthesize showsStatusField=_showsStatusField;
@property(nonatomic) _Bool showsEmergencyCallButton; // @synthesize showsEmergencyCallButton=_showsEmergencyCallButton;
@property(readonly, nonatomic) NSString *passcode; // @synthesize passcode=_passcode;
@property(nonatomic) int style; // @synthesize style=_style;
@property(nonatomic) id <SBUIPasscodeLockViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void)biometricEventMonitor:(id)arg1 handleBiometricEvent:(unsigned long long)arg2;
- (void)updateStatusTextForBioEvent:(unsigned long long)arg1 animated:(_Bool)arg2;
- (void)providerLegibilitySettingsChanged:(id)arg1;
- (void)_notifyDelegatePasscodeEnteredViaMesa;
- (void)_handleBiometricEvent:(unsigned long long)arg1;
- (void)_resetForFailedMesaAttempt;
- (void)_resetStatusText;
- (void)_evaluateLuminance;
- (double)_luminanceBoostFromDisplayBrightness;
- (double)_luminanceBoostFromLegibility;
- (void)_screenBrightnessReallyDidChange;
- (void)_clearBrightnessChangeTimer;
- (void)_noteBioMatchingEnabledDidChange;
- (void)_noteScreenBrightnessDidChange;
- (void)_noteDeviceHasBeenUnlockedOnceSinceBoot:(_Bool)arg1;
- (_Bool)_wantsBiometricAuthentication;
- (void)_resetForFailedPasscode:(_Bool)arg1;
- (id)_defaultStatusText;
- (unsigned long long)_statusStateForLockoutState:(unsigned long long)arg1;
- (void)updateStatusTextAnimated:(_Bool)arg1;
- (void)updateStatusText:(id)arg1 subtitle:(id)arg2 animated:(_Bool)arg3;
- (void)_setStatusSubtitleText:(id)arg1;
- (void)_setStatusText:(id)arg1;
- (void)_updateStatusStateForLockout;
- (void)_sendDelegateKeypadKeyUp;
- (void)_sendDelegateKeypadKeyDown;
- (void)_luminanceBoostDidChange;
- (void)_setLegibilitySettings:(id)arg1;
- (_Bool)_isBoundsPortraitOriented;
- (long long)_orientation;
- (void)didMoveToWindow;
- (void)willMoveToWindow:(id)arg1;
- (_Bool)isFirstResponder;
- (_Bool)canResignFirstResponder;
- (_Bool)resignFirstResponder;
- (_Bool)becomeFirstResponder;
- (_Bool)canBecomeFirstResponder;
- (void)autofillForSuccessfulMesaAttemptWithCompletion:(CDUnknownBlockType)arg1;
- (void)resetForFailedMesaAttemptWithStatusText:(id)arg1 andSubtitle:(id)arg2;
@property(nonatomic) _Bool playsKeypadSounds; // @dynamic playsKeypadSounds;
- (void)setAllowsStatusTextUpdatingOnResignFirstResponder:(_Bool)arg1;
- (void)reset;
- (void)resetForScreenOff;
- (void)resetForFailedPasscode;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SBUIPasscodeLockViewFactory : NSObject
{
}

+ (void)_warmupKBDIfNecessary;
+ (id)_passcodeLockViewForStyle:(int)arg1 withLightStyle:(_Bool)arg2;
+ (id)lightPasscodeLockViewForStyle:(int)arg1;
+ (id)lightPasscodeLockViewForUsersCurrentStyle;
+ (id)passcodeLockViewForStyle:(int)arg1;
+ (id)passcodeLockViewForUsersCurrentStyle;

@end

@interface SBUIPasscodeLockViewWithKeypad : SBUIPasscodeLockViewBase <SBUIPasscodeLockNumberPadDelegate, SBUIPasscodeEntryFieldDelegate>
{
    UILabel *_statusTitleView;
    UILabel *_statusSubtitleView;
    UIView *_statusBackgroundView;
    SBUIPasscodeLockNumberPad *_numberPad;
    UIView *_topToStatusFieldOrEntryFieldFiller;
    UIView *_entryFieldToNumberPadFiller;
    UIView *_leftToNumberPadFiller;
    UIView *_rightToNumberPadFiller;
    UIView *_bottomToNumberPadFiller;
    NSString *_lastCharacterBeforeBackspace;
    _Bool _undoInputOnTouchCancellation;
    _Bool _useLightStyle;
}

@property(retain, nonatomic) UILabel *statusSubtitleView; // @synthesize statusSubtitleView=_statusSubtitleView;
@property(retain, nonatomic) UILabel *statusTitleView; // @synthesize statusTitleView=_statusTitleView;
@property(retain, nonatomic) NSString *lastCharacterBeforeBackspace; // @synthesize lastCharacterBeforeBackspace=_lastCharacterBeforeBackspace;
@property(nonatomic, getter=_undoInputOnTouchCancellation, setter=_setUndoInputOnTouchCancellation:) _Bool undoInputOnTouchCancellation; // @synthesize undoInputOnTouchCancellation=_undoInputOnTouchCancellation;
- (void)passcodeEntryFieldTextDidChange:(id)arg1;
- (_Bool)passcodeEntryField:(id)arg1 shouldInsertText:(id)arg2;
- (void)passcodeEntryFieldDidCancelEntry:(id)arg1;
- (void)passcodeEntryFieldDidAcceptEntry:(id)arg1;
- (void)passcodeLockNumberPadEmergencyCallButtonHit:(id)arg1;
- (void)passcodeLockNumberPadBackspaceButtonHit:(id)arg1;
- (void)passcodeLockNumberPadCancelButtonHit:(id)arg1;
- (void)passcodeLockNumberPad:(id)arg1 keyCancelled:(id)arg2;
- (void)passcodeLockNumberPad:(id)arg1 keyUp:(id)arg2;
- (void)passcodeLockNumberPad:(id)arg1 keyDown:(id)arg2;
- (_Bool)_usesLightStyle;
- (id)_numericEntryFieldIfExists;
- (double)_numberPadOffsetFromTopOfScreen;
- (void)_noteKeyUp:(id)arg1;
- (void)_noteBackspaceHit;
- (void)_noteStringEntered:(id)arg1 eligibleForPlayingSounds:(_Bool)arg2;
- (void)_notifyDelegatePasscodeCancelled;
- (void)_notifyDelegatePasscodeEntered;
- (void)_toggleForStatusField;
- (void)_layoutStatusView;
- (id)_newStatusSubtitleView;
- (id)_newStatusTitleView;
- (double)_statusTitleWidth;
- (void)updateStatusText:(id)arg1 subtitle:(id)arg2 animated:(_Bool)arg3;
- (id)_statusSubtitleViewTitleFont;
- (id)_statusTitleViewTitleFont;
- (double)_entryFieldBottomYDistanceFromNumberPadTopButton;
- (void)_setHasInput:(_Bool)arg1;
- (_Bool)_includesStatusView;
- (id)_newEntryField;
- (id)_numberPad;
- (id)_statusBackgroundView;
- (id)_statusSubtitleView;
- (id)_statusTitleView;
- (void)_luminanceBoostDidChange;
- (void)setShowsStatusField:(_Bool)arg1;
- (void)setShowsEmergencyCallButton:(_Bool)arg1;
- (void)setBackgroundAlpha:(double)arg1;
- (void)setCustomBackgroundColor:(id)arg1;
- (void)reset;
- (void)resetForFailedPasscode;
- (id)passcode;
- (void)layoutSubviews;
- (double)backgroundAlpha;
- (void)dealloc;
- (id)initWithLightStyle:(_Bool)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SBUIPasscodeLockViewLongNumericKeypad : SBUIPasscodeLockViewWithKeypad
{
}

- (id)_longNumericEntryField;
- (_Bool)_showsPromptLabelOnEntryField;
- (void)updateStatusText:(id)arg1 subtitle:(id)arg2 animated:(_Bool)arg3;
- (double)_entryFieldBottomYDistanceFromNumberPadTopButton;
- (void)_setHasInput:(_Bool)arg1;
- (_Bool)_includesStatusView;
- (id)_newEntryField;
- (id)initWithLightStyle:(_Bool)arg1;

@end

@interface SBUIPasscodeLockViewSIMLockKeypad : SBUIPasscodeLockViewLongNumericKeypad
{
    UILabel *_statusSubtitleView;
    UIView *_entryFieldFiller;
    double _targetEntryFieldFillerAlpha;
    _Bool _isShowingStatus;
    UIView *_statusSpringView;
    UIView *_statusSpringViewParent;
}

- (double)_distanceFromLastLineBaselineToTextFieldBoundsHeight:(id)arg1;
- (double)_distanceToFirstLineBaseline:(id)arg1;
- (id)_statusSubtitleFont;
- (double)_subtitleBaselineYOffsetFromTopOfEntryField;
- (double)_subtitleBaselineYOffsetFromTopOfNumberPad;
- (double)_expectedDistanceBetweenTitleAndSubtitleBaselines;
- (double)_expectedYOffsetBetweenTitleAndSubtitleViews;
- (void)_sizeLabel:(id)arg1;
- (void)_setText:(id)arg1 onLabel:(id)arg2;
- (_Bool)_needsToHideTextFieldForStatus;
- (void)_shakeStatus;
- (void)layoutSubviews;
- (void)_layoutStatusView;
- (void)setBackgroundAlpha:(double)arg1;
- (void)setCustomBackgroundColor:(id)arg1;
- (void)_setHasInput:(_Bool)arg1;
- (void)resetForFailedPasscode;
- (_Bool)_showsPromptLabelOnEntryField;
- (void)forceShowStatus:(_Bool)arg1;
@property(copy, nonatomic) NSString *statusSubtitle; // @dynamic statusSubtitle;
@property(copy, nonatomic) NSString *statusTitle; // @dynamic statusTitle;
- (void)dealloc;
- (id)initWithLightStyle:(_Bool)arg1;

@end

@interface SBUIPasscodeLockViewSimple4DigitKeypad : SBUIPasscodeLockViewWithKeypad
{
}

- (double)_entryFieldBottomYDistanceFromNumberPadTopButton;
- (id)_newEntryField;
- (id)initWithLightStyle:(_Bool)arg1;

@end

@interface SBUIPasscodeLockViewWithKeyboard : SBUIPasscodeLockViewBase <SBUIPasscodeEntryFieldDelegate>
{
    SBPasscodeKeyboard *_keyboard;
    SBUIAlphanumericPasscodeEntryField *_alphaEntryField;
    UILabel *_statusField;
    UILabel *_statusSubtitleView;
    UIView *_statusFieldBackground;
    SBUIRingViewLabelButton *_emergencyCallButton;
    UIView *_emergencyCallToTopFiller;
    UIView *_emergencyCallLeftFiller;
    UIView *_emergencyCallRightFiller;
    UIView *_statusFieldToTopOrEmergencyCallBottomFiller;
    UIView *_entryFieldToBottomFiller;
    _Bool _wasMinimizedWhenAnimationStarted;
    _Bool _previousKeyboardShowedInlineCandidates;
    _Bool _disableAnimationsDuringMinMax;
    _Bool _triedToMinMaxWhileRotating;
    _Bool _isAnimating;
    _Bool _usesLightStyle;
}

@property(retain, nonatomic) UILabel *statusSubtitleView; // @synthesize statusSubtitleView=_statusSubtitleView;
@property(retain, nonatomic) UILabel *statusField; // @synthesize statusField=_statusField;
- (void)updateStatusText:(id)arg1 subtitle:(id)arg2 animated:(_Bool)arg3;
- (void)_handleDidRotateNotification:(id)arg1;
- (void)_handleWillAnimateNotification:(id)arg1;
- (void)_handleWillRotateNotification:(id)arg1;
- (double)_statusTitleWidth;
- (double)_statusFieldHeight;
- (double)_keyboardToEntryFieldOffset;
- (struct CGRect)_keyboardFrameForInterfaceOrientation:(long long)arg1;
- (void)_maximize;
- (void)_minimize;
- (void)_setMinimized:(_Bool)arg1;
- (_Bool)_isMinimized;
- (_Bool)_canMinMaxKeyboard;
- (void)_layoutForMinimizationState:(_Bool)arg1;
- (void)_toggleForStatusField;
- (void)_toggleForEmergencyCall;
- (void)_acceptOrCancelReturnKeyPress;
- (id)_newStatusSubtitleView;
- (id)_newStatusField;
- (void)passcodeEntryFieldTextDidChange:(id)arg1;
- (_Bool)passcodeEntryField:(id)arg1 shouldInsertText:(id)arg2;
- (void)passcodeEntryFieldDidCancelEntry:(id)arg1;
- (void)passcodeEntryFieldDidAcceptEntry:(id)arg1;
- (void)_notifyDelegatePasscodeCancelled;
- (void)_notifyDelegateThatEmergencyCallButtonWasPressed;
- (void)_notifyDelegatePasscodeEntered;
- (void)_hardwareReturnKeyPressed:(id)arg1;
- (void)_geometryChanged:(id)arg1;
- (_Bool)resignFirstResponder;
- (_Bool)becomeFirstResponder;
- (void)layoutSubviews;
- (void)setShowsStatusField:(_Bool)arg1;
- (void)setShowsEmergencyCallButton:(_Bool)arg1;
- (void)setBackgroundAlpha:(double)arg1;
- (void)setCustomBackgroundColor:(id)arg1;
- (id)passcode;
- (void)_luminanceBoostDidChange;
- (double)backgroundAlpha;
- (void)dealloc;
- (id)initWithLightStyle:(_Bool)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SBUIPasscodeTextField : UITextField
{
}

- (void)_handleKeyUIEvent:(id)arg1;
- (_Bool)resignFirstResponder;
- (_Bool)becomeFirstResponder;
- (void)dealloc;

@end

@interface SBUIPasscodeViewWithLockScreenStyle : UIView
{
    UIView<SBUIPasscodeLockView> *_passcodeView;
    _UIBackdropView *_blurView;
    double _blurRadius;
    _Bool _blurEnabled;
}

@property(readonly, nonatomic) UIView<SBUIPasscodeLockView> *passcodeView; // @synthesize passcodeView=_passcodeView;
- (void)setBlurEnabled:(_Bool)arg1;
- (void)layoutSubviews;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 includeBlur:(_Bool)arg2 passcodeViewGenerator:(CDUnknownBlockType)arg3;

@end

@interface SBUIRemoteAlertServiceViewController : UIViewController <SBUIRemoteAlertServiceInterface>
{
}

+ (id)_exportedInterface;
+ (id)_remoteViewControllerInterface;
- (void)noteActivatedForCustomReason:(id)arg1;
- (void)handleDoubleHeightStatusBarTap;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

@end

@interface SBUIRingViewLabelButton : UIControl
{
    TPRevealingRingView *_ringView;
    UILabel *_label;
}

@property(readonly, nonatomic) UILabel *label; // @synthesize label=_label;
@property(readonly, nonatomic) TPRevealingRingView *backgroundRing; // @synthesize backgroundRing=_ringView;
- (void)setHighlighted:(_Bool)arg1;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SBUISizeObservingView : UIView
{
    _Bool _delegateInterestedInSizeChanges;
    id <SBUISizeObservingViewDelegate> _delegate;
}

@property(nonatomic) id <SBUISizeObservingViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void)setFrame:(struct CGRect)arg1;
- (void)setBounds:(struct CGRect)arg1;

@end

@interface SBUISnapshotAction : BSAction
{
}

- (void)sendResponse:(id)arg1;
@property(readonly, nonatomic) SBUISnapshotContext *context;
- (id)initWithContext:(id)arg1 handler:(CDUnknownBlockType)arg2;

@end

@interface SBUISnapshotActionResponse : BSActionResponse
{
}

- (id)initWithInfo:(id)arg1 error:(id)arg2;
- (id)_initWithIOSurfaceAssertion:(id)arg1;

@end

@interface SBUISnapshotContext : NSObject <BSXPCCoding>
{
    UIScreen *_screen;
    _Bool _excludesNotificationCenter;
}

+ (id)snapshotContextForScreen:(id)arg1;
@property(nonatomic) _Bool excludesNotificationCenter; // @synthesize excludesNotificationCenter=_excludesNotificationCenter;
@property(retain, nonatomic) UIScreen *screen; // @synthesize screen=_screen;
- (void)encodeWithXPCDictionary:(id)arg1;
- (id)initWithXPCDictionary:(id)arg1;
- (void)dealloc;
- (id)initWithScreen:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SBUISnapshotService : NSObject
{
}

- (void)snapshotScreenWithContext:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;

@end

@interface SBWhiteBackdropSettings : _UIBackdropViewSettings
{
}

- (double)blurRadius;
- (id)combinedTintColor;

@end

@interface UIResizableView : UIView
{
}

- (struct CGSize)sizeThatFits:(struct CGSize)arg1;

@end

@interface UIView (SBUtilities)
- (void)sb_setBoundsAndPositionFromFrame:(struct CGRect)arg1;
@end

@interface _SBUISwitcherPageServiceViewController : UIViewController <_SBUISwitcherPageProviderInterface>
{
}

+ (id)_exportedInterface;
+ (id)_remoteViewControllerInterface;
- (void)didReceiveMemoryWarning;
- (void)viewDidLoad;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

@end

@interface _SBUIWidgetViewController : UIViewController <_SBUIWidgetHost>
{
    NSString *_widgetIdentifier;
    id <_SBUIWidgetHost> _widgetHost;
}

@property(nonatomic) id <_SBUIWidgetHost> widgetHost; // @synthesize widgetHost=_widgetHost;
@property(copy, nonatomic) NSString *widgetIdentifier; // @synthesize widgetIdentifier=_widgetIdentifier;
- (void)invalidatePreferredViewSize;
- (void)requestLaunchOfURL:(id)arg1;
- (void)requestPresentationOfViewController:(id)arg1 presentationStyle:(long long)arg2 context:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)setVisibleWidgetsIDs:(id)arg1;
- (void)hostDidDismiss;
- (void)hostWillDismiss;
- (void)hostDidPresent;
- (void)hostWillPresent;
@property(readonly, nonatomic) struct CGSize preferredViewSize;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

