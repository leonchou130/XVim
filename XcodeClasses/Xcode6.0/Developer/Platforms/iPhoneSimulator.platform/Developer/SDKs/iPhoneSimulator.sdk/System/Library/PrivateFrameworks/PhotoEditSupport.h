//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CGAffineTransform {
    double a;
    double b;
    double c;
    double d;
    double tx;
    double ty;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct UIEdgeInsets {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
};

#pragma mark Typedef'd Structures

typedef struct {
    unsigned char blue;
    unsigned char green;
    unsigned char red;
    unsigned char alpha;
} CDStruct_76a42933;

typedef struct {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
} CDStruct_818bb265;

typedef struct {
    struct CGPoint _field1[2];
    float _field2;
    _Bool _field3;
} CDStruct_defeeb22;

typedef struct {
    CDStruct_818bb265 _field1;
    CDStruct_818bb265 _field2;
    CDStruct_818bb265 _field3;
} CDStruct_9b5b21f5;

typedef struct {
    struct CGPoint _field1;
    struct CGPoint _field2;
    float *_field3;
    float _field4;
    int _field5;
    int _field6;
    float _field7;
    float _field8;
    float _field9;
    float _field10;
    float _field11;
    float _field12;
    struct CGPoint _field13;
    struct CGPoint _field14;
    float _field15;
    int _field16;
    int _field17;
    int _field18;
    int _field19;
} CDStruct_74df0099;

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/PhotoEditSupport.framework/PhotoEditSupport
// UUID: 367FFB52-9C5C-30CD-A694-23B5A0523783
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 2369.0.0.0.0
//            Minimum iOS version: 8.0.0
//                    SDK version: 8.0.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@interface AutoEncodeDecodeObject : NSObject <NSCopying>
{
    NSArray *_keysToEncode;
}

@property(retain, nonatomic) NSArray *keysToEncode; // @synthesize keysToEncode=_keysToEncode;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (_Bool)isEqualToObject:(id)arg1;
- (id)description;
- (id)getKeysToEncode;

@end

@interface BLAdjustmentModel : NSObject
{
    double _whiteLevel;
    double _blackLevel;
    double _brightness;
    double _contrast;
    double _autoShadowsMaxLevel;
    double _autoBlackLevelAtShadowsMaxLevel;
    long long _highlightShadowAdjustVersion;
    _Bool _hasPentaCurve;
    _Bool _reprocessPentaCurve;
    struct {
        long long type;
        double x;
        double y;
        double ri;
        double gq;
        double b;
    } _whiteBalance;
    _Bool _hasWhiteBalance;
    _Bool _reprocessWhiteBalance;
    double _saturation;
    _Bool _useVibrancy;
    _Bool _hasSaturation;
    _Bool _reprocessSaturation;
    double _faceBalanceWarmth;
    _Bool _hasFaceBalance;
    _Bool _reprocessFaceBalance;
    double _saturationSky;
    double _saturationGrass;
    _Bool _hasSkyAndGrass;
    _Bool _reprocessSkyAndGrass;
    double _underwaterBalanceDepthStrength;
    double _underwaterBalanceWaterBlend;
    _Bool _hasUnderwaterBalance;
    _Bool _reprocessUnderwaterBalance;
    _Bool _hasColor;
    _Bool _hasExposure;
    _Bool _isChainBuilt;
    double _histogramBlackPoint;
    double _histogramWhitePoint;
    double _histogramAverageLinearRed;
    double _histogramAverageLinearGreen;
    double _histogramAverageLinearBlue;
    CIFilter *_curvesFilter;
    CIFilter *_colorFilter;
    CIFilter *_vibranceFilter;
    CIFilter *_faceBalanceFilter;
    CIFilter *_skyAndGrassFilter;
    CIFilter *_underwaterBalanceFilter;
    CIFilter *_highlightsAndShadowsFilter;
    CIFilter *_tempAndTintFilter;
    CIFilter *_colorBalanceFilter;
}

+ (id)rampImage;
+ (id)exposureValuesForToneCurveData:(id)arg1 highlightsAndShadowsData:(id)arg2 andHistogramData:(id)arg3;
+ (struct CGPoint)pointOnCurveFromPoint:(struct CGPoint)arg1 withSlope:(double)arg2 andCurveData:(double *)arg3;
@property(retain, nonatomic) CIFilter *colorBalanceFilter; // @synthesize colorBalanceFilter=_colorBalanceFilter;
@property(retain, nonatomic) CIFilter *tempAndTintFilter; // @synthesize tempAndTintFilter=_tempAndTintFilter;
@property(retain, nonatomic) CIFilter *highlightsAndShadowsFilter; // @synthesize highlightsAndShadowsFilter=_highlightsAndShadowsFilter;
@property(retain, nonatomic) CIFilter *underwaterBalanceFilter; // @synthesize underwaterBalanceFilter=_underwaterBalanceFilter;
@property(retain, nonatomic) CIFilter *skyAndGrassFilter; // @synthesize skyAndGrassFilter=_skyAndGrassFilter;
@property(retain, nonatomic) CIFilter *faceBalanceFilter; // @synthesize faceBalanceFilter=_faceBalanceFilter;
@property(retain, nonatomic) CIFilter *vibranceFilter; // @synthesize vibranceFilter=_vibranceFilter;
@property(retain, nonatomic) CIFilter *colorFilter; // @synthesize colorFilter=_colorFilter;
@property(retain, nonatomic) CIFilter *curvesFilter; // @synthesize curvesFilter=_curvesFilter;
- (id)adjustedImageFromImage:(id)arg1;
- (void)releaseChain;
- (void)buildChain;
- (_Bool)hasExposure;
- (_Bool)hasColor;
- (_Bool)hasAdjustments;
- (void)reset;
- (void)dealloc;
- (void)updateAdjustmentsDictionary:(id)arg1 andAnalysisDictionary:(id)arg2;
- (id)init;
- (id)initWithAdjustmentsDictionary:(id)arg1 andAnalysisDictionary:(id)arg2;

@end

@interface BLAuraFilter : CIFilter
{
    _Bool _needsReprocess;
    float _lastAmount;
    float _lastSaturationHighPoint;
    long long _lastVersion;
    CIImage *_inputImage;
    NSNumber *_inputAmount;
    NSNumber *_inputSaturationHighPoint;
    NSNumber *_inputVersion;
    CIFilter *_colorCubeFilter;
}

@property(retain, nonatomic) CIFilter *colorCubeFilter; // @synthesize colorCubeFilter=_colorCubeFilter;
@property(copy, nonatomic) NSNumber *inputVersion; // @synthesize inputVersion=_inputVersion;
@property(copy, nonatomic) NSNumber *inputSaturationHighPoint; // @synthesize inputSaturationHighPoint=_inputSaturationHighPoint;
@property(copy, nonatomic) NSNumber *inputAmount; // @synthesize inputAmount=_inputAmount;
@property(retain, nonatomic) CIImage *inputImage; // @synthesize inputImage=_inputImage;
- (void).cxx_destruct;
- (id)outputImage;
- (void)setDefaults;
- (id)init;

@end

@interface BLBaseLayerStack : NSObject
{
    NSMutableArray *_layers;
    double _brushSize;
    double _brushSoftness;
    struct CGImage *_brushImageRef;
    _Bool _shouldNotify;
    int _maskLongEdgeSize;
    struct CGSize _maskSize;
    struct CGAffineTransform _viewToMaskTransform;
    struct CGAffineTransform _inverseViewToMaskTransform;
    struct CGAffineTransform _flippedViewToMaskTransform;
    struct CGAffineTransform _inverseFlippedViewToMaskTransform;
}

@property(nonatomic) _Bool shouldNotify; // @synthesize shouldNotify=_shouldNotify;
@property(nonatomic) int maskLongEdgeSize; // @synthesize maskLongEdgeSize=_maskLongEdgeSize;
@property(readonly, nonatomic) struct CGAffineTransform inverseFlippedViewToMaskTransform; // @synthesize inverseFlippedViewToMaskTransform=_inverseFlippedViewToMaskTransform;
@property(nonatomic) struct CGAffineTransform flippedViewToMaskTransform; // @synthesize flippedViewToMaskTransform=_flippedViewToMaskTransform;
@property(readonly, nonatomic) struct CGAffineTransform inverseViewToMaskTransform; // @synthesize inverseViewToMaskTransform=_inverseViewToMaskTransform;
@property(nonatomic) struct CGAffineTransform viewToMaskTransform; // @synthesize viewToMaskTransform=_viewToMaskTransform;
@property(nonatomic) struct CGSize maskSize; // @synthesize maskSize=_maskSize;
@property(readonly, nonatomic) NSMutableArray *layers; // @synthesize layers=_layers;
- (void)dealloc;
- (double)maskArea;
- (_Bool)readyToDraw;
- (_Bool)haveLayerMask;
@property(nonatomic) NSDictionary *strokesDataDictionary;
- (double)timestamp;
@property(nonatomic) double workingImageScaleFactor;
@property(retain, nonatomic) UIImage *workingImage;
@property(retain, nonatomic) BLPixelImageBuffer *workingImageBuffer;
- (id)imageLayer;
- (struct CGImage *)brushImageRefWithSize:(float)arg1 softness:(float)arg2;
- (struct CGImage *)newImageForRect:(struct CGRect)arg1 inDestRect:(struct CGRect)arg2 andScale:(double)arg3;

@end

@interface BLBlackAndWhiteFilter : CIFilter
{
    _Bool _needsReprocess;
    float _lastAmount;
    _Bool _lastAppySepia;
    _Bool _lastApplyGrain;
    struct CGRect _lastDestinationRect;
    long long _lastVersion;
    float _lastPhototone;
    float _lastNeutralGamma;
    int _lastPreset;
    CIImage *_inputImage;
    NSNumber *_inputAmount;
    NSNumber *_inputApplySepia;
    NSNumber *_inputApplyGrain;
    CIVector *_inputDestinationRect;
    CIVector *_inputHueStrengthArray;
    NSNumber *_inputVersion;
    NSNumber *_inputPhototone;
    NSNumber *_inputNeutralGamma;
    NSNumber *_inputPreset;
    NSNumber *_inputPadding;
    CIFilter *_colorCubeFilterBW;
    CIFilter *_colorCubeFilterGrain;
    BLPixelImageBuffer *_grainImage;
    NSData *_precomputedCube;
    CIVector *_lastHueStrengthArray;
}

@property(retain, nonatomic) CIVector *lastHueStrengthArray; // @synthesize lastHueStrengthArray=_lastHueStrengthArray;
@property(retain, nonatomic) NSData *precomputedCube; // @synthesize precomputedCube=_precomputedCube;
@property(retain, nonatomic) BLPixelImageBuffer *grainImage; // @synthesize grainImage=_grainImage;
@property(retain, nonatomic) CIFilter *colorCubeFilterGrain; // @synthesize colorCubeFilterGrain=_colorCubeFilterGrain;
@property(retain, nonatomic) CIFilter *colorCubeFilterBW; // @synthesize colorCubeFilterBW=_colorCubeFilterBW;
@property(copy, nonatomic) NSNumber *inputPadding; // @synthesize inputPadding=_inputPadding;
@property(copy, nonatomic) NSNumber *inputPreset; // @synthesize inputPreset=_inputPreset;
@property(copy, nonatomic) NSNumber *inputNeutralGamma; // @synthesize inputNeutralGamma=_inputNeutralGamma;
@property(copy, nonatomic) NSNumber *inputPhototone; // @synthesize inputPhototone=_inputPhototone;
@property(copy, nonatomic) NSNumber *inputVersion; // @synthesize inputVersion=_inputVersion;
@property(copy, nonatomic) CIVector *inputHueStrengthArray; // @synthesize inputHueStrengthArray=_inputHueStrengthArray;
@property(copy, nonatomic) CIVector *inputDestinationRect; // @synthesize inputDestinationRect=_inputDestinationRect;
@property(copy, nonatomic) NSNumber *inputApplyGrain; // @synthesize inputApplyGrain=_inputApplyGrain;
@property(copy, nonatomic) NSNumber *inputApplySepia; // @synthesize inputApplySepia=_inputApplySepia;
@property(copy, nonatomic) NSNumber *inputAmount; // @synthesize inputAmount=_inputAmount;
@property(retain, nonatomic) CIImage *inputImage; // @synthesize inputImage=_inputImage;
- (void).cxx_destruct;
- (id)outputImage;
- (id)applyGrain:(id)arg1 cube:(id)arg2 destRect:(struct CGRect)arg3 padding:(float)arg4;
- (id)loadGrain:(id)arg1 destRect:(struct CGRect)arg2 padding:(float)arg3;
- (id)generateGrain:(id)arg1 destRect:(struct CGRect)arg2;
- (void)setDefaults;
- (id)init;

@end

@interface BLBrushStroke : AutoEncodeDecodeObject
{
    _Bool _erase;
    _Bool _magicEdges;
    _Bool _startPointSet;
    int _type;
    int _destinationWidth;
    float _opacity;
    float _size;
    float _softness;
    double _timestamp;
    NSMutableData *_offsets;
    struct CGPoint _startPoint;
    struct CGPoint _lastPoint;
    struct CGRect _strokeRect;
}

@property(nonatomic) struct CGRect strokeRect; // @synthesize strokeRect=_strokeRect;
@property(retain, nonatomic) NSMutableData *offsets; // @synthesize offsets=_offsets;
@property(nonatomic) struct CGPoint lastPoint; // @synthesize lastPoint=_lastPoint;
@property(nonatomic) _Bool startPointSet; // @synthesize startPointSet=_startPointSet;
@property(nonatomic) struct CGPoint startPoint; // @synthesize startPoint=_startPoint;
@property(nonatomic) float softness; // @synthesize softness=_softness;
@property(nonatomic) float size; // @synthesize size=_size;
@property(nonatomic) float opacity; // @synthesize opacity=_opacity;
@property(nonatomic) _Bool magicEdges; // @synthesize magicEdges=_magicEdges;
@property(nonatomic) _Bool erase; // @synthesize erase=_erase;
@property(nonatomic) int destinationWidth; // @synthesize destinationWidth=_destinationWidth;
@property(nonatomic) int type; // @synthesize type=_type;
@property(nonatomic) double timestamp; // @synthesize timestamp=_timestamp;
- (void)dealloc;
- (id)init;
- (int)numberOfPoints;
- (void)replayPointsWithScale:(float)arg1 pointBlock:(CDUnknownBlockType)arg2;
- (void)addPoint:(struct CGPoint)arg1;
- (id)keysToEncode;

@end

@interface BLImage : NSObject <NSCopying>
{
    UIImage *_UIImage;
    struct CGImage *_CGImage;
    CIImage *_CIImage;
    int _storageType;
    struct CGSize _size;
    _Bool _isPlaceholder;
    int _askedImageType;
    int _obtainedImageType;
}

+ (id)abbreviatedDescriptionWithImageType:(int)arg1;
+ (id)descriptionWithImageType:(int)arg1;
+ (id)imageWithImage:(id)arg1;
@property(nonatomic) _Bool isPlaceholder; // @synthesize isPlaceholder=_isPlaceholder;
@property(nonatomic) int obtainedImageType; // @synthesize obtainedImageType=_obtainedImageType;
@property(nonatomic) int askedImageType; // @synthesize askedImageType=_askedImageType;
@property(readonly, nonatomic) int storageType; // @synthesize storageType=_storageType;
- (id)description;
@property(readonly, nonatomic) unsigned long long memoryUsage;
@property(readonly, nonatomic) double scale;
@property(readonly, nonatomic) long long imageOrientation;
@property(readonly, nonatomic) struct CGSize size;
- (id)CIImage;
- (struct CGImage *)CGImage;
- (id)UIImage;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithFileAtURL:(id)arg1;
- (id)init;

@end

@interface BLCGImage : BLImage
{
}

- (id)CIImage;
- (id)UIImage;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithFileAtURL:(id)arg1;
- (id)initWithCGImage:(struct CGImage *)arg1;

@end

@interface BLImageBuffer : NSObject
{
    CIContext *_ciContext;
    struct CGColorSpace *_colorSpace;
    int _colorManagement;
    struct CGSize _size;
}

@property(readonly, nonatomic) struct CGSize size; // @synthesize size=_size;
- (id)image;
- (void)readPixelsByAddressInBlock:(CDUnknownBlockType)arg1;
- (void)renderCIImage:(id)arg1;
- (id)ciImage;
- (void)dealloc;
- (id)initWithSize:(struct CGSize)arg1 colorManagement:(int)arg2;
- (id)initWithSize:(struct CGSize)arg1 colorManagement:(int)arg2 ciContext:(id)arg3 colorSpace:(struct CGColorSpace *)arg4;

@end

@interface BLPixelImageBuffer : BLImageBuffer
{
}

+ (id)bufferWithSize:(struct CGSize)arg1 colorManagement:(int)arg2;
+ (id)bufferWithImage:(id)arg1 colorManagement:(int)arg2;
- (id)image;
- (void)drawInContext:(struct CGContext *)arg1 rect:(struct CGRect)arg2;
- (void)accessPixelsByAddressInBlock:(CDUnknownBlockType)arg1;
- (void)accessPixelsByContextInBlock:(CDUnknownBlockType)arg1;

@end

@interface BLCGPixelImageBuffer : BLPixelImageBuffer
{
    struct CGContext *_bitmapContext;
    unsigned long long _rowBytes;
    NSMutableData *_bitmapData;
}

@property(retain, nonatomic) NSMutableData *bitmapData; // @synthesize bitmapData=_bitmapData;
- (void)readPixelsByAddressInBlock:(CDUnknownBlockType)arg1;
- (void)accessPixelsByAddressInBlock:(CDUnknownBlockType)arg1;
- (void)accessPixelsByContextInBlock:(CDUnknownBlockType)arg1;
- (void)renderCIImage:(id)arg1;
- (id)ciImage;
- (void)dealloc;
- (id)initWithSize:(struct CGSize)arg1 colorManagement:(int)arg2;

@end

@interface BLCIImage : BLImage
{
}

- (struct CGImage *)CGImage;
- (id)UIImage;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithFileAtURL:(id)arg1;
- (id)initWithCIImage:(id)arg1;

@end

@interface BLCVPixelImageBuffer : BLPixelImageBuffer
{
    struct __CVBuffer *_pixelBuffer;
    struct CGContext *_cgcontext;
}

- (struct CGContext *)cgcontext;
- (struct __CVBuffer *)pixelBuffer;
- (void)accessPixelsByContextInBlock:(CDUnknownBlockType)arg1;
- (void)accessPixelsByAddressInBlock:(CDUnknownBlockType)arg1;
- (void)readPixelsByAddressInBlock:(CDUnknownBlockType)arg1;
- (void)renderCIImage:(id)arg1;
- (id)ciImage;
- (void)dealloc;
- (id)initWithSize:(struct CGSize)arg1 colorManagement:(int)arg2;

@end

@interface BLCannyEdgeAutoThres : NSObject
{
    int _cols;
    int _rows;
    float _sigma;
    char *_dataPointer;
    int *_smoothedImg;
    int *_deriv_x;
    int *_deriv_y;
    int *_magnitude;
    char *_nonMaxSup;
    float *_anglePointer;
}

- (void)follow_edges:(char *)arg1 edgeMagPtr:(int *)arg2 lowVal:(int)arg3;
- (void)apply_hysteresis:(char *)arg1;
- (void)non_max_supp;
- (void)magnitude_x_y;
- (void)derivative_x_y;
- (void)genGaussianKernel:(float *)arg1;
- (void)gaussianSmooth;
- (void)CannyEdge:(char *)arg1 rows:(int)arg2 cols:(int)arg3 output:(char *)arg4 outputAngle:(float *)arg5;

@end

@interface BLColorMatrix : NSObject
{
}

+ (CDStruct_9b5b21f5)warmCoolMatrix:(float)arg1;
+ (CDStruct_9b5b21f5)matrix:(float)arg1 numBlocks:(int)arg2 matrices:(CDStruct_9b5b21f5 *)arg3;
+ (CDStruct_9b5b21f5)mix:(float)arg1 matrix1:(CDStruct_9b5b21f5)arg2 matrix2:(CDStruct_9b5b21f5)arg3;
+ (CDStruct_818bb265)mix:(float)arg1 channelMix1:(CDStruct_818bb265)arg2 channelMix2:(CDStruct_818bb265)arg3;

@end

@interface BLCropModel : NSObject
{
    struct CGSize _nsqPhotoSize;
    float _angle;
    float _cropConstrain;
    struct CGSize _photoSize;
    struct CGRect _cropRect;
}

+ (_Bool)validateCropRectFor0Angle:(struct CGRect)arg1;
@property float cropConstrain; // @synthesize cropConstrain=_cropConstrain;
@property float angle; // @synthesize angle=_angle;
@property(readonly) struct CGSize photoSize; // @synthesize photoSize=_photoSize;
- (struct CGRect)bestCropRectForIntialCropRect:(struct CGRect)arg1 inTrialRect:(struct CGRect)arg2 withFaceDictionaries:(id)arg3;
- (int)scoreFaces:(id)arg1 ForTransform:(struct CGAffineTransform)arg2;
- (struct CGAffineTransform)transformForTrialCropRect:(struct CGRect)arg1;
- (id)croppedImageFromImage:(id)arg1;
- (void)setCropAndAngleFromCIAffineTransform:(struct CGAffineTransform)arg1 andCICrop:(struct CGRect)arg2 forSourceSize:(struct CGSize)arg3;
- (struct CGAffineTransform)ciAffineTransformForSourceSize:(struct CGSize)arg1;
- (struct CGRect)ciCropRectForSourceSize:(struct CGSize)arg1;
- (struct CGImage *)newAspectedPreviewFromImage:(struct CGImage *)arg1 forSize:(struct CGSize)arg2 withNewCropRect:(struct CGRect)arg3 andOrientation:(long long)arg4;
- (struct CGRect)newCropRectForRatio:(float)arg1 withCropRect:(struct CGRect)arg2 andFaceDictionaries:(id)arg3;
- (struct CGAffineTransform)CGAffineTransformForSize:(struct CGSize)arg1;
- (struct CGAffineTransform)CGAffineTransform;
- (struct CGImage *)newRenderedCroppedImageFromImage:(struct CGImage *)arg1 forSize:(struct CGSize)arg2 andOrientation:(long long)arg3;
- (struct CGImage *)newRenderedCroppedImageFromImage:(struct CGImage *)arg1 forSize:(struct CGSize)arg2;
- (struct CGSize)croppedSizeForSize:(struct CGSize)arg1;
- (struct CGSize)croppedSize;
- (struct CGRect)normalizedIntersectionPointsForCropWithLineFromPoint:(struct CGPoint)arg1 toPoint:(struct CGPoint)arg2;
- (void)changeCropAspectRatioTo:(float)arg1 withNewCropRect:(struct CGRect)arg2;
- (void)adjustEdgeForDragAction:(int)arg1 withAmount:(struct CGPoint)arg2 andLockAspectRatio:(_Bool)arg3;
- (void)translate:(float)arg1 atAngle:(float)arg2;
- (void)scale:(float)arg1 fromPoint:(struct CGPoint)arg2;
- (void)rotate:(float)arg1 fromPoint:(struct CGPoint)arg2;
- (struct CGRect)recomputeCropRect:(struct CGRect)arg1 forStraightenAngle:(float)arg2;
- (struct CGPoint)maxAllowableEdgeAdjustmentForDragAction:(int)arg1 withDirection:(struct CGPoint)arg2 andLockAspectRatio:(_Bool)arg3;
- (struct CGRect)maxAllowedPanWithCropRect:(struct CGRect)arg1;
- (float)maxAllowedTranslateWithDirection:(float)arg1;
- (int)touchedImageSidesForCurrentCrop;
- (float)maxAllowedScaleFromPoint:(struct CGPoint)arg1 scaleUp:(_Bool)arg2;
- (float)maxAllowedRotationFromPoint:(struct CGPoint)arg1 counterClockwise:(_Bool)arg2;
- (void)calculateCornerPoints:(struct CGPoint *)arg1 forCropRect:(struct CGRect)arg2;
- (void)calculateCornerPoints:(struct CGPoint *)arg1;
@property struct CGRect cropRect; // @synthesize cropRect=_cropRect;
- (void)reset;
- (_Bool)hasCrop;
- (id)initWithModel:(id)arg1;
- (id)initWithSize:(struct CGSize)arg1;
- (id)initWithSize:(struct CGSize)arg1 andDictionary:(id)arg2;

@end

@interface BLDramaFilter : CIFilter
{
    _Bool _needsReprocess;
    float _lastAmount;
    float _lastPhototone;
    float _lastNeutralGamma;
    CIImage *_inputImage;
    NSNumber *_inputAmount;
    CIVector *_inputHueStrengthArray;
    NSNumber *_inputPhototone;
    NSNumber *_inputNeutralGamma;
    CIFilter *_colorCubeFilterDrama;
    NSData *_precomputedCube;
    CIVector *_lastHueStrengthArray;
}

@property(retain, nonatomic) CIVector *lastHueStrengthArray; // @synthesize lastHueStrengthArray=_lastHueStrengthArray;
@property(retain, nonatomic) NSData *precomputedCube; // @synthesize precomputedCube=_precomputedCube;
@property(retain, nonatomic) CIFilter *colorCubeFilterDrama; // @synthesize colorCubeFilterDrama=_colorCubeFilterDrama;
@property(copy, nonatomic) NSNumber *inputNeutralGamma; // @synthesize inputNeutralGamma=_inputNeutralGamma;
@property(copy, nonatomic) NSNumber *inputPhototone; // @synthesize inputPhototone=_inputPhototone;
@property(copy, nonatomic) CIVector *inputHueStrengthArray; // @synthesize inputHueStrengthArray=_inputHueStrengthArray;
@property(copy, nonatomic) NSNumber *inputAmount; // @synthesize inputAmount=_inputAmount;
@property(retain, nonatomic) CIImage *inputImage; // @synthesize inputImage=_inputImage;
- (void).cxx_destruct;
- (id)outputImage;
- (void)setDefaults;
- (id)init;

@end

@interface BLDuotoneFilter : CIFilter
{
    _Bool _needsReprocess;
    float _lastAmount;
    float _lastStrength;
    _Bool _lastAddColor;
    long long _lastVersion;
    CIImage *_inputImage;
    NSNumber *_inputAmount;
    NSNumber *_inputStrength;
    NSNumber *_inputAddColor;
    NSNumber *_inputVersion;
    CIFilter *_colorCubeFilter;
}

@property(retain, nonatomic) CIFilter *colorCubeFilter; // @synthesize colorCubeFilter=_colorCubeFilter;
@property(copy, nonatomic) NSNumber *inputVersion; // @synthesize inputVersion=_inputVersion;
@property(copy, nonatomic) NSNumber *inputAddColor; // @synthesize inputAddColor=_inputAddColor;
@property(copy, nonatomic) NSNumber *inputStrength; // @synthesize inputStrength=_inputStrength;
@property(copy, nonatomic) NSNumber *inputAmount; // @synthesize inputAmount=_inputAmount;
@property(retain, nonatomic) CIImage *inputImage; // @synthesize inputImage=_inputImage;
- (void).cxx_destruct;
- (id)outputImage;

@end

@interface BLEdgeAwareMaskFilter : CIFilter
{
    float *_cubeData;
    CDStruct_76a42933 _currentInputColor;
    CIFilter *_ciColorCubeFilter;
    CDStruct_76a42933 _inputColor;
}

@property CDStruct_76a42933 inputColor; // @synthesize inputColor=_inputColor;
- (void).cxx_destruct;
- (id)outputImage;
- (_Bool)isDataUpToDate;
- (void)setInputImage:(id)arg1;
- (id)cubeData;
- (unsigned long long)dataLength;
- (void)labFromRed:(float)arg1 green:(float)arg2 blue:(float)arg3 lunminance:(float *)arg4 a:(float *)arg5 b:(float *)arg6;
- (void)dealloc;
- (id)init;

@end

@interface BLEffectManager : NSObject
{
}

+ (id)effectManager;
+ (void)invertContext:(struct CGContext *)arg1;
+ (void)fillContext:(struct CGContext *)arg1 withColor:(id)arg2;
+ (struct CGContext *)newContextFromContext:(struct CGContext *)arg1;
+ (struct CGContext *)newContext:(struct CGContext *)arg1 withSaturation:(float)arg2;
+ (struct CGContext *)newContext:(struct CGContext *)arg1 lineOperation:(CDUnknownBlockType)arg2;
+ (struct CGContext *)newContext:(struct CGContext *)arg1 pixelOperation:(CDUnknownBlockType)arg2;
+ (void)performLineBlock:(CDUnknownBlockType)arg1 onContext:(struct CGContext *)arg2;
+ (void)performBlock:(CDUnknownBlockType)arg1 onContext:(struct CGContext *)arg2;
+ (void)performLineBlock:(CDUnknownBlockType)arg1 fromContext:(struct CGContext *)arg2 toContext:(struct CGContext *)arg3;
+ (void)performBlock:(CDUnknownBlockType)arg1 fromContext:(struct CGContext *)arg2 toContext:(struct CGContext *)arg3;
+ (struct CGImage *)newBrushImageRefWithSize:(float)arg1 softness:(float)arg2 brightness:(float)arg3;
+ (struct CGContext *)newGrayscaleContextWithSize:(struct CGSize)arg1 clear:(_Bool)arg2;
+ (struct CGContext *)newContextWithSize:(struct CGSize)arg1 clear:(_Bool)arg2 alpha:(_Bool)arg3;
+ (struct CGContext *)newContextWithSize:(struct CGSize)arg1 clear:(_Bool)arg2;

@end

@interface BLHistogramAnalysis : NSObject
{
    double _blackPoint;
    double _whitePoint;
    double _blackPointRed;
    double _whitePointRed;
    double _blackPointGreen;
    double _whitePointGreen;
    double _blackPointBlue;
    double _whitePointBlue;
    double _averageLinearRed;
    double _averageLinearBlue;
    double _averageLinearGreen;
}

@property(nonatomic) double averageLinearGreen; // @synthesize averageLinearGreen=_averageLinearGreen;
@property(nonatomic) double averageLinearBlue; // @synthesize averageLinearBlue=_averageLinearBlue;
@property(nonatomic) double averageLinearRed; // @synthesize averageLinearRed=_averageLinearRed;
@property(nonatomic) double whitePointBlue; // @synthesize whitePointBlue=_whitePointBlue;
@property(nonatomic) double blackPointBlue; // @synthesize blackPointBlue=_blackPointBlue;
@property(nonatomic) double whitePointGreen; // @synthesize whitePointGreen=_whitePointGreen;
@property(nonatomic) double blackPointGreen; // @synthesize blackPointGreen=_blackPointGreen;
@property(nonatomic) double whitePointRed; // @synthesize whitePointRed=_whitePointRed;
@property(nonatomic) double blackPointRed; // @synthesize blackPointRed=_blackPointRed;
@property(nonatomic) double whitePoint; // @synthesize whitePoint=_whitePoint;
@property(nonatomic) double blackPoint; // @synthesize blackPoint=_blackPoint;
- (id)analysisDictionary;
- (id)description;
- (void)dealloc;
- (id)initWithAnalysisDictionary:(id)arg1;
- (id)initWithBLImage:(id)arg1;

@end

@interface BLHorizonDetection : NSObject
{
    char *_grayScale;
    char *_rgb;
    char *_orgEdge;
    char *_processedEdge;
    char *_bwLabelSceneMap;
    int _rows;
    int _cols;
    int _isHor;
    int _numLines;
    float _scaleFactor;
    CDStruct_74df0099 *_detectedLinePointer;
    CDStruct_defeeb22 *_detectedHorPointerH;
    float *_edgeAngle;
}

+ (void)findHorizonForImage:(id)arg1 horizonLineH:(CDStruct_defeeb22 *)arg2;
- (void)edgeOrientationAnalysisFindModes:(char *)arg1;
- (void)preProcessEdgeAnglePDF;
- (void)preProcessEdgeCC;
- (void)preProcessEdgeCheckNB;
- (void)imageStatisticalAnalysis:(unsigned int *)arg1 numCC:(int)arg2;
- (void)sceneClassification;
- (void)lineOverlapHorBW:(CDStruct_74df0099 *)arg1 numLines:(int)arg2;
- (void)horizonDetection;
- (void)applyLineFilters;
- (void)findHorizon:(id)arg1 horizonLineH:(CDStruct_defeeb22 *)arg2;
- (void)extractGrayRGBData:(id)arg1;

@end

@interface BLImagePatch : NSObject
{
    struct CGImage *_imageRef;
    struct CGImage *_maskRef;
    struct CGRect _rect;
}

+ (id)patchFromRect:(struct CGRect)arg1 inImage:(struct CGImage *)arg2 withMask:(struct CGImage *)arg3;
+ (id)patchFromRect:(struct CGRect)arg1 inImage:(struct CGImage *)arg2;
- (id)description;
- (void)drawInContext:(struct CGContext *)arg1;
- (void)translateOriginByPoint:(struct CGPoint)arg1;
- (struct CGImage *)image;
- (struct CGPoint)origin;
- (struct CGSize)size;
- (struct CGRect)rect;
- (void)dealloc;
- (id)initWithImageRef:(struct CGImage *)arg1 andRect:(struct CGRect)arg2 andMask:(struct CGImage *)arg3;
- (id)initWithImageRef:(struct CGImage *)arg1 andRect:(struct CGRect)arg2;

@end

@interface BLImagePatchList : NSObject
{
    struct CGImage *_baseImage;
    struct CGSize _size;
    NSMutableArray *_patchArray;
}

+ (id)imagePatchListWithSingleImage:(struct CGImage *)arg1;
- (id)description;
- (struct CGSize)size;
- (long long)count;
- (void)drawInContext:(struct CGContext *)arg1;
- (void)removeAllPatches;
- (void)addPatch:(id)arg1;
- (void)dealloc;
- (id)initWithImage:(struct CGImage *)arg1;

@end

@interface BLKey : NSObject
{
}

+ (id)keyForString:(id)arg1;

@end

@interface BLPEModel : NSObject
{
    BLPixelImageBuffer *_sourceImageBuffer;
    _Bool _sourceImageDidChange;
    _Bool _processingFX;
    NSMutableDictionary *_TiltShiftProcessingCache;
    NSMutableDictionary *_AdaptiveGradientProcessingCache;
    NSMutableDictionary *_InkProcessingCache;
    _Bool _liveInteraction;
    CIFilter *_vintageFilter;
    CIFilter *_photoFiltersFilter;
    CIFilter *_duotoneFilter;
    CIFilter *_auraFilter;
    CIFilter *_blackAndWhiteFilter;
    CIFilter *_dramaFilter;
    CIFilter *_warmAndCoolFilter;
}

@property(retain, nonatomic) CIFilter *warmAndCoolFilter; // @synthesize warmAndCoolFilter=_warmAndCoolFilter;
@property(retain, nonatomic) CIFilter *dramaFilter; // @synthesize dramaFilter=_dramaFilter;
@property(retain, nonatomic) CIFilter *blackAndWhiteFilter; // @synthesize blackAndWhiteFilter=_blackAndWhiteFilter;
@property(retain, nonatomic) CIFilter *auraFilter; // @synthesize auraFilter=_auraFilter;
@property(retain, nonatomic) CIFilter *duotoneFilter; // @synthesize duotoneFilter=_duotoneFilter;
@property(retain, nonatomic) CIFilter *photoFiltersFilter; // @synthesize photoFiltersFilter=_photoFiltersFilter;
@property(retain, nonatomic) CIFilter *vintageFilter; // @synthesize vintageFilter=_vintageFilter;
@property(nonatomic) _Bool liveInteraction; // @synthesize liveInteraction=_liveInteraction;
- (id)ciImageWithInk:(id)arg1 cache:(id)arg2 groupIndex:(int)arg3 withOptionsObject:(id)arg4 gradientRect:(struct CGRect)arg5 padding:(double)arg6 liveInteraction:(_Bool)arg7;
- (id)imageWithInk:(id)arg1 cache:(id)arg2 groupIndex:(int)arg3 withOptionsObject:(id)arg4 gradientRect:(struct CGRect)arg5 padding:(double)arg6 liveInteraction:(_Bool)arg7;
- (id)imageWithAdaptiveGradientV2:(id)arg1 cache:(id)arg2 groupIndex:(int)arg3 withCenter:(struct CGPoint)arg4 withSize:(double)arg5 withAngle:(float)arg6 gradientRect:(struct CGRect)arg7 liveInteraction:(_Bool)arg8;
- (id)imageWithAdaptiveGradientV1:(id)arg1 cache:(id)arg2 groupIndex:(int)arg3 withCenter:(struct CGPoint)arg4 withSize:(double)arg5 withAngle:(float)arg6 gradientRect:(struct CGRect)arg7 liveInteraction:(_Bool)arg8;
- (id)processFX_NonCI:(id)arg1 tiltShiftCache:(id)arg2 groupIndex:(int)arg3 amount:(float)arg4 withOptionsObject:(id)arg5 analysisDictionary:(id)arg6 destRect:(struct CGRect)arg7 padding:(double)arg8;
- (id)ciImageProcessFX_CI:(id)arg1 groupIndex:(int)arg2 amount:(float)arg3 withOptionsObject:(id)arg4 analysisDictionary:(id)arg5 destRect:(struct CGRect)arg6 padding:(double)arg7;
- (id)processFX_CI:(id)arg1 groupIndex:(int)arg2 amount:(float)arg3 withOptionsObject:(id)arg4 analysisDictionary:(id)arg5 destRect:(struct CGRect)arg6 padding:(double)arg7;
- (id)ciImageWithGroupIndex:(int)arg1 amount:(float)arg2 withOptionsObject:(id)arg3 analysisDictionary:(id)arg4 destRect:(struct CGRect)arg5 padding:(double)arg6;
- (_Bool)canRenderCIImageWithGroupIndex:(int)arg1 amount:(float)arg2 withOptionsObject:(id)arg3;
- (id)thumbImageWithGroupIndex:(int)arg1 amount:(float)arg2 version:(int)arg3;
- (id)imageWithGroupIndex:(int)arg1 amount:(float)arg2 withOptionsObject:(id)arg3 analysisDictionary:(id)arg4 destRect:(struct CGRect)arg5 padding:(double)arg6;
- (_Bool)needInkProcessingCacheForGroupIndex:(int)arg1 andAmount:(float)arg2;
- (_Bool)needAdaptiveGradientProcessingCacheForGroupIndex:(int)arg1 andAmount:(float)arg2;
- (_Bool)needTiltShiftProcessingCacheForGroupIndex:(int)arg1 andAmount:(float)arg2;
- (void)updateSourceImageBuffer:(id)arg1;
- (void)updateSourceImage:(id)arg1;
- (void)dealloc;
- (void)releaseCachedFilters;
- (id)initWithSourceImageBuffer:(id)arg1;
- (id)initWithSourceImage:(id)arg1;

@end

@interface BLPerceptualBlendFilter : CIFilter
{
    CIImage *_inputImage;
    CIImage *_inputBackgroundImage;
    CIImage *_inputMaskImage;
}

@property(retain) CIImage *inputMaskImage; // @synthesize inputMaskImage=_inputMaskImage;
@property(retain) CIImage *inputBackgroundImage; // @synthesize inputBackgroundImage=_inputBackgroundImage;
@property(retain) CIImage *inputImage; // @synthesize inputImage=_inputImage;
- (void).cxx_destruct;
- (id)outputImage;

@end

@interface BLPhotoEffectsModel : NSObject
{
    int _effectGroupIndex;
    float _effectValue;
    _Bool _hasAdjustments;
    NSMutableDictionary *_adjustments;
    NSDictionary *_analysis;
    BLPEModel *_model;
}

- (id)ciImageWithPhotoEffectsForCIImage:(id)arg1 inDestRect:(struct CGRect)arg2 withPadding:(double)arg3;
- (id)ciImageWithPhotoEffectsForImageBuffer:(id)arg1 inDestRect:(struct CGRect)arg2 withPadding:(double)arg3;
- (id)imageWithPhotoEffectsForImageBuffer:(id)arg1 inDestRect:(struct CGRect)arg2 withPadding:(double)arg3;
- (id)imageWithPhotoEffectsForImage:(id)arg1 inDestRect:(struct CGRect)arg2 withPadding:(double)arg3;
- (double)paddingForSize:(struct CGSize)arg1;
- (_Bool)hasFastDownstreamEffects;
- (_Bool)canRenderCI;
- (_Bool)hasEdgeEffects;
- (_Bool)needsPadding;
- (_Bool)hasInkEffects;
- (_Bool)hasPhotoEffects;
- (void)dealloc;
- (id)initWithAdjustmentsDictionary:(id)arg1 andAnalysisDictionary:(id)arg2 ignoreEdgeEffects:(_Bool)arg3;
- (id)initWithAdjustmentsDictionary:(id)arg1 andAnalysisDictionary:(id)arg2;

@end

@interface BLPhotoFiltersFilter : CIFilter
{
    _Bool _needsReprocess;
    int _lastAmount;
    float _lastStrength;
    CIImage *_inputImage;
    NSNumber *_inputAmount;
    NSNumber *_inputStrength;
    CIFilter *_ciPhotoEffectFilter;
    CIFilter *_ciMatrix;
    CIFilter *_maskFilter;
}

@property(retain, nonatomic) CIFilter *maskFilter; // @synthesize maskFilter=_maskFilter;
@property(retain, nonatomic) CIFilter *ciMatrix; // @synthesize ciMatrix=_ciMatrix;
@property(retain, nonatomic) CIFilter *ciPhotoEffectFilter; // @synthesize ciPhotoEffectFilter=_ciPhotoEffectFilter;
@property(copy, nonatomic) NSNumber *inputStrength; // @synthesize inputStrength=_inputStrength;
@property(copy, nonatomic) NSNumber *inputAmount; // @synthesize inputAmount=_inputAmount;
@property(retain, nonatomic) CIImage *inputImage; // @synthesize inputImage=_inputImage;
- (void).cxx_destruct;
- (id)outputImage;
- (void)setDefaults;
- (id)init;

@end

@interface BLProbabalisticHoughTransform : NSObject
{
    int _cols;
    int _rows;
    float _rho;
    float _theta;
    int _threshold;
    int _lineLength;
    int _lineGap;
    int _numGoodLines;
}

- (void)leastSquareSmooth:(CDStruct_74df0099 *)arg1;
- (CDStruct_74df0099 *)houghLinesProbabalistic:(char *)arg1 rows:(int)arg2 cols:(int)arg3 numLines:(int *)arg4;

@end

@interface BLPromiseImage : BLImage
{
    struct CGImage *_sourceCGImage;
    BLImagePatchList *_imagePatchList;
    BLImagePatchList *_repairImagePatchList;
    BLPixelImageBuffer *_flattenedImageBuffer;
    long long _backOrientation;
    long long _initialOrientation;
    long long _actualOrientation;
    struct CGSize _sourceSize;
    BLCropModel *_userCropModel;
    BLCropModel *_cropModel;
    BLAdjustmentModel *_adjustmentModel;
    BLPhotoEffectsModel *_photoEffectsModel;
    BLRetouchModel *_retouchModel;
    BLRepairModel *_repairModel;
    NSLock *_drawLock;
    NSDictionary *_adjustments;
    NSDictionary *_analysis;
}

+ (void)convertXMP:(id)arg1 toAdjustments:(id)arg2 andAnalysis:(id)arg3 size:(struct CGSize)arg4 image:(id)arg5 needsHistogram:(_Bool *)arg6;
+ (struct CGSize)maximumSizeForFlattening;
+ (id)imageWithImage:(id)arg1;
@property(readonly, nonatomic) struct CGSize sourceSize; // @synthesize sourceSize=_sourceSize;
- (id)flattenedImageInBoundingSize:(struct CGSize)arg1;
- (id)flattenedImageInBoundingSize:(struct CGSize)arg1 shouldScaleForScreen:(_Bool)arg2;
- (id)flattenedPixelImageBufferInBoundingSize:(struct CGSize)arg1 shouldScaleForScreen:(_Bool)arg2;
- (id)flattenedImageInBoundingSize:(struct CGSize)arg1 shouldScaleForScreen:(_Bool)arg2 progressBlock:(CDUnknownBlockType)arg3;
- (_Bool)_flattenInContext:(struct CGContext *)arg1 targetSize:(struct CGSize)arg2 progressBlock:(CDUnknownBlockType)arg3;
- (struct CGSize)_targetSizeForBoundingSize:(struct CGSize)arg1 shouldScaleForScreen:(_Bool)arg2;
- (id)CIImage;
- (id)UIImage;
- (struct CGImage *)CGImage;
- (struct CGSize)maximumSize;
- (void)_drawImagePatchListInContext:(struct CGContext *)arg1 imagePatchList:(id)arg2 size:(struct CGSize)arg3 drawScaleX:(double)arg4 drawScaleY:(double)arg5 totalPadding:(double)arg6;
- (void)drawInContext:(struct CGContext *)arg1 forRect:(struct CGRect)arg2 andSize:(struct CGSize)arg3;
- (void)prepareForDrawing;
- (id)flattenedImageFromRect:(struct CGRect)arg1 forSize:(struct CGSize)arg2;
- (id)repairLayerStack;
- (void)setRepairLayerStack:(id)arg1;
- (id)retouchLayerStack;
- (void)setRetouchLayerStack:(id)arg1;
- (_Bool)hasRotation;
- (_Bool)hasRedeye;
- (_Bool)hasRepair;
- (_Bool)hasRepairOrRedeye;
- (_Bool)hasRetouch;
- (_Bool)hasFastDownstreamEffects;
- (_Bool)hasEdgeEffects;
- (_Bool)hasInkEffects;
- (_Bool)hasPhotoEffects;
- (_Bool)hasColor;
- (_Bool)hasExposure;
- (_Bool)hasCrop;
- (_Bool)hasEdits;
- (void)dealloc;
- (id)initWithCGImage:(struct CGImage *)arg1 orImagePatchList:(id)arg2 flattenedImageBuffer:(id)arg3 backOrientation:(long long)arg4 orientation:(long long)arg5 userCrop:(struct CGRect)arg6 adjustmentData:(id)arg7 andAnalysisData:(id)arg8 andOptionFlags:(int)arg9;
- (id)initWithCGImage:(struct CGImage *)arg1 flattenedImageBuffer:(id)arg2 orientation:(long long)arg3 adjustmentData:(id)arg4 andAnalysisData:(id)arg5 andOptionFlags:(int)arg6;
- (id)initWithImagePatchList:(id)arg1 backOrientation:(long long)arg2 orientation:(long long)arg3 adjustmentData:(id)arg4 andAnalysisData:(id)arg5 andOptionFlags:(int)arg6;
- (id)initWithPromiseImage:(id)arg1 userCrop:(struct CGRect)arg2 andOptionFlags:(int)arg3;
- (id)initWithPromiseImage:(id)arg1 andOptionFlags:(int)arg2;
- (id)initWithCGImage:(struct CGImage *)arg1 backOrientation:(long long)arg2 orientation:(long long)arg3 adjustmentData:(id)arg4 andAnalysisData:(id)arg5 andOptionFlags:(int)arg6;
- (id)initWithCGImage:(struct CGImage *)arg1 orientation:(long long)arg2 adjustmentData:(id)arg3 andAnalysisData:(id)arg4 andOptionFlags:(int)arg5;
- (id)initWithCGImage:(struct CGImage *)arg1 orientation:(long long)arg2 adjustmentData:(id)arg3 andAnalysisData:(id)arg4;

@end

@interface BLRedEyeBrushTap : AutoEncodeDecodeObject
{
    int _destinationWidth;
    double _timestamp;
    NSDictionary *_eyeRepairData;
    struct CGPoint _point;
}

@property(retain, nonatomic) NSDictionary *eyeRepairData; // @synthesize eyeRepairData=_eyeRepairData;
@property(nonatomic) struct CGPoint point; // @synthesize point=_point;
@property(nonatomic) int destinationWidth; // @synthesize destinationWidth=_destinationWidth;
@property(nonatomic) double timestamp; // @synthesize timestamp=_timestamp;
- (void)dealloc;
- (id)init;
- (id)keysToEncode;

@end

@interface BLRepairBrushStroke : BLBrushStroke
{
    struct CGPoint _repairTextureOffset;
}

@property(nonatomic) struct CGPoint repairTextureOffset; // @synthesize repairTextureOffset=_repairTextureOffset;
- (id)keysToEncode;

@end

@interface BLRepairLayerStack : BLBaseLayerStack
{
    int _mode;
    UIImage *_analysisImage;
    UIImage *_sourceImage;
    UIImage *_repairSourceImage;
    UIImage *_redEyeSourceImage;
    struct CGSize _repairSourceSize;
    struct CGSize _redEyeSourceSize;
}

+ (id)layerStack;
+ (id)addAutoRedEyeCorrection:(id)arg1 toCurrentStrokesDataDictionary:(id)arg2 forSourceSize:(struct CGSize)arg3;
+ (int)maxEdgeSize;
@property(nonatomic) int mode; // @synthesize mode=_mode;
@property(nonatomic) struct CGSize redEyeSourceSize; // @synthesize redEyeSourceSize=_redEyeSourceSize;
@property(retain, nonatomic) UIImage *redEyeSourceImage; // @synthesize redEyeSourceImage=_redEyeSourceImage;
@property(nonatomic) struct CGSize repairSourceSize; // @synthesize repairSourceSize=_repairSourceSize;
@property(retain, nonatomic) UIImage *repairSourceImage; // @synthesize repairSourceImage=_repairSourceImage;
@property(retain, nonatomic) UIImage *sourceImage; // @synthesize sourceImage=_sourceImage;
@property(retain, nonatomic) UIImage *analysisImage; // @synthesize analysisImage=_analysisImage;
- (void)repairChanged;
- (void)redEyeChanged;
- (id)imagePatchListForLayerStack;
- (struct CGContext *)newContextForRect:(struct CGRect)arg1 inDestRect:(struct CGRect)arg2 andScale:(double)arg3;
- (struct CGImage *)newImageForRect:(struct CGRect)arg1 inDestRect:(struct CGRect)arg2 andScale:(double)arg3;
- (_Bool)readyToDrawForMode:(int)arg1;
@property(nonatomic) UIImage *redEyeRepairedImage;
- (double)timestamp;
- (void)dealloc;
- (_Bool)hasRedEye;
- (_Bool)hasRepair;
- (_Bool)haveLayerMask;
- (_Bool)readyToDraw;
- (void)setStrokesDataDictionary:(id)arg1;
- (id)strokesDataDictionary;
- (id)init;

@end

@interface BLRepairModel : NSObject
{
    NSDictionary *_strokesDataDictionary;
    BLRepairLayerStack *_layerStack;
    NSLock *_lock;
}

- (id)imagePatchList;
- (_Bool)hasLayerStack;
- (id)layerStack;
- (void)setLayerStack:(id)arg1;
- (void)buildLayerStackWithAnalysisImage:(id)arg1 andRepairImage:(id)arg2;
- (_Bool)hasRedeye;
- (_Bool)hasRepair;
- (_Bool)hasRepairOrRedeye;
- (void)dealloc;
- (id)initWithAdjustmentsDictionary:(id)arg1;

@end

@interface BLRetouchLayer : NSObject
{
    _Bool _enabled;
    int _brushType;
    BLRetouchLayer *_layerBelow;
    BLBaseLayerStack *_layerStack;
}

+ (id)layer;
@property(nonatomic) BLBaseLayerStack *layerStack; // @synthesize layerStack=_layerStack;
@property(nonatomic) BLRetouchLayer *layerBelow; // @synthesize layerBelow=_layerBelow;
@property(nonatomic) int brushType; // @synthesize brushType=_brushType;
@property(nonatomic) _Bool enabled; // @synthesize enabled=_enabled;
- (id)init;
@property(readonly, nonatomic) _Bool hasLayerMask;
@property(nonatomic) NSData *layerData;
- (struct CGContext *)newContextForRect:(struct CGRect)arg1 inDestRect:(struct CGRect)arg2 andScale:(double)arg3;
- (struct CGImage *)newImageForRect:(struct CGRect)arg1 inDestRect:(struct CGRect)arg2 andScale:(double)arg3;
@property(readonly, nonatomic) struct CGSize imageSize;
- (_Bool)boolForKey:(id)arg1;

@end

@interface BLRetouchEffectLayer : BLRetouchLayer
{
    struct CGRect _area;
    _Bool _startFilled;
    NSMutableArray *_brushStrokes;
    _Bool _strokeInProgress;
    CDStruct_76a42933 _samplePixel;
    float _edgeDetectSize;
    struct CGContext *_edgeDetectContextRef;
    float _amount;
    struct CGContext *_layerMask;
}

@property(readonly, nonatomic) _Bool strokeInProgress; // @synthesize strokeInProgress=_strokeInProgress;
@property(nonatomic) float amount; // @synthesize amount=_amount;
@property(nonatomic) struct CGRect area; // @synthesize area=_area;
@property(nonatomic) struct CGContext *layerMask; // @synthesize layerMask=_layerMask;
- (struct CGContext *)edgeDetectContextRefForSize:(float)arg1;
- (void)strokeDidFinish;
@property(copy, nonatomic) NSMutableArray *brushStrokes;
- (struct CGRect)drawBrushAtLocation:(struct CGPoint)arg1 opacity:(float)arg2 erase:(_Bool)arg3 magicEdges:(_Bool)arg4 brushSize:(float)arg5 brushSoftness:(float)arg6;
- (struct CGRect)doDrawBrushAtLocation:(struct CGPoint)arg1 opacity:(float)arg2 erase:(_Bool)arg3 magicEdges:(_Bool)arg4 brushSize:(float)arg5 brushSoftness:(float)arg6 firstPoint:(_Bool)arg7;
- (struct CGContext *)newContextForRect:(struct CGRect)arg1 inDestRect:(struct CGRect)arg2 andScale:(double)arg3;
- (struct CGImage *)newImageFromContextWithEffect:(struct CGContext *)arg1;
- (struct CGContext *)newContextWithEffect:(struct CGContext *)arg1;
- (void)fillMask;
- (void)performFill;
- (void)clearMask;
- (struct CGImage *)newMaskImage;
- (void)fillMaskWithValue:(double)arg1;
- (void)releaseMask;
- (struct CGRect)imageFrame;
- (struct CGRect)maskFrame;
- (_Bool)solidBrush;
- (void)setEnabled:(_Bool)arg1;
- (_Bool)hasAmount;
- (_Bool)isAffectingOutput;
- (_Bool)hasLayerMask;
- (void)setLayerData:(id)arg1;
- (id)layerData;
- (void)dealloc;
- (id)init;

@end

@interface BLRetouchBlurLayer : BLRetouchEffectLayer
{
    _Bool _sharpen;
    int _radius;
    double _radiusScale;
}

+ (id)layerWithBlur:(int)arg1;
+ (id)layerWithSharpen:(int)arg1;
@property(nonatomic) _Bool sharpen; // @synthesize sharpen=_sharpen;
@property(nonatomic) double radiusScale; // @synthesize radiusScale=_radiusScale;
@property(nonatomic) int radius; // @synthesize radius=_radius;
- (struct CGContext *)newContextForRect:(struct CGRect)arg1 inDestRect:(struct CGRect)arg2 andScale:(double)arg3;
- (int)radiusToApply;
- (_Bool)hasAmount;
- (struct CGContext *)newContextWithEffect:(struct CGContext *)arg1;

@end

@interface BLRetouchExposureLayer : BLRetouchEffectLayer
{
    float _currentExposure;
    float *_cubeData;
    float _exposure;
}

+ (id)layerWithExposure:(float)arg1;
@property(nonatomic) float exposure; // @synthesize exposure=_exposure;
- (void)dealloc;
- (struct CGImage *)newImageFromContextWithEffect:(struct CGContext *)arg1;
- (id)cubeData;

@end

@interface BLRetouchImageLayer : BLRetouchLayer
{
    BLPixelImageBuffer *_imageBuffer;
    UIImage *_image;
    double _imageScaleFactor;
}

@property(nonatomic) double imageScaleFactor; // @synthesize imageScaleFactor=_imageScaleFactor;
@property(retain, nonatomic) UIImage *image; // @synthesize image=_image;
@property(retain, nonatomic) BLPixelImageBuffer *imageBuffer; // @synthesize imageBuffer=_imageBuffer;
- (struct CGContext *)newContextForRect:(struct CGRect)arg1 inDestRect:(struct CGRect)arg2 andScale:(double)arg3;
- (struct CGSize)imageSize;
- (void)dealloc;

@end

@interface BLRetouchLayerStack : BLBaseLayerStack
{
    struct CGContext *_labContextRef;
    CDStruct_76a42933 _edgeAwareColor;
}

+ (id)layerStack;
- (double)timestamp;
- (int)disabledBrushTypes;
- (_Bool)haveLayerMask;
- (_Bool)readyToDraw;
- (int)maxEdgeSize;
- (void)setStrokesDataDictionary:(id)arg1;
- (id)strokesDataDictionary;
- (void)findEdgesInRect:(struct CGRect)arg1 result:(struct CGContext *)arg2;
- (void)updateLabColorsInRect:(struct CGRect)arg1;
- (void)sampleEdgeDetectColorFromRect:(struct CGRect)arg1;
- (void)buildEdgeDetectFromImage:(id)arg1;
- (void)addLayer:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface BLRetouchModel : NSObject
{
    NSDictionary *_strokesDataDictionary;
    BLRetouchLayerStack *_layerStack;
    NSLock *_lock;
}

- (id)imageForWorkingImageBuffer:(id)arg1 workingTransform:(struct CGAffineTransform)arg2 inDestRect:(struct CGRect)arg3 withPadding:(double)arg4;
- (id)imageForWorkingImage:(id)arg1 workingTransform:(struct CGAffineTransform)arg2 inDestRect:(struct CGRect)arg3 withPadding:(double)arg4;
- (double)paddingForSize:(struct CGSize)arg1;
- (_Bool)needsPadding;
- (_Bool)hasLayerStack;
- (id)layerStack;
- (void)setLayerStack:(id)arg1;
- (void)buildLayerStackWithMaskSourceImage:(id)arg1;
- (_Bool)hasRetouch;
- (void)dealloc;
- (id)initWithAdjustmentsDictionary:(id)arg1;

@end

@interface BLRetouchRedEyeLayer : BLRetouchLayer
{
    CIImage *_ciSourceImage;
    NSMutableArray *_eyePoints;
    UIImage *_repairSourceImage;
    UIImage *_repairedImage;
}

+ (id)addAutoRedEyeCorrection:(id)arg1 toLayerData:(id)arg2 maskSize:(struct CGSize)arg3 newTimestampIncrement:(double *)arg4;
+ (long long)indexOfPointNear:(struct CGPoint)arg1 inEyePoints:(id)arg2 andMaskSize:(struct CGSize)arg3;
@property(retain, nonatomic) UIImage *repairedImage; // @synthesize repairedImage=_repairedImage;
@property(retain, nonatomic) UIImage *repairSourceImage; // @synthesize repairSourceImage=_repairSourceImage;
- (void)clearRedEyes;
- (struct CGContext *)newContextForRect:(struct CGRect)arg1 inDestRect:(struct CGRect)arg2 andScale:(double)arg3;
- (struct CGRect)area;
- (void)dealloc;
- (struct CGRect)tapAtPoint:(struct CGPoint)arg1 actualLocation:(struct CGPoint *)arg2 foundEye:(_Bool *)arg3 addedEye:(_Bool *)arg4;
- (void)setLayerData:(id)arg1;
- (id)layerData;
- (long long)indexOfPointNear:(struct CGPoint)arg1;
@property(copy, nonatomic) NSMutableArray *eyePoints; // @synthesize eyePoints=_eyePoints;
- (void)repairRedEyes;
- (struct CGRect)maskFrame;
- (_Bool)hasLayerMask;
- (float)amount;
- (void)hasLayerMaskDidChange;

@end

@interface BLRetouchReefBlurOperator : NSObject
{
}

+ (struct CGContext *)newContext:(struct CGContext *)arg1 withBlur:(double)arg2;
+ (struct CGContext *)newContext:(struct CGContext *)arg1 withUnsharpMask:(double)arg2 threshold:(double)arg3 strength:(double)arg4;

@end

@interface BLRetouchReefRepairOperator : NSObject
{
    void *_buffer;
    int _rowBytes;
    int _width;
    int _height;
    void *_maskBuffer;
    int _maskRowBytes;
    int _maskWidth;
    int _maskHeight;
    int _brushSize;
    struct CGRect _maskRect;
}

+ (int)borderWithBrushSize:(int)arg1;
- (id).cxx_construct;
- (void)repairWithOffset:(struct CGPoint)arg1;
- (struct CGPoint)analyzeOffset;
- (void)repair;
- (void)setBrushSize:(int)arg1;
- (void)setMaskData:(void *)arg1 rowBytes:(int)arg2 width:(int)arg3 height:(int)arg4;
- (void)setMaskRect:(struct CGRect)arg1;
- (id)initWithRepairSourceData:(void *)arg1 rowBytes:(int)arg2 width:(int)arg3 height:(int)arg4;

@end

@interface BLRetouchRepairLayer : BLRetouchEffectLayer
{
    struct CGContext *_repairAnalysisImageContextRef;
    NSMutableData *_repairAnalysisImageRasterData;
    int _repairAnalysisBufferWidth;
    int _repairAnalysisBufferHeight;
    int _repairAnalysisBufferRowBytes;
    _Bool _isNotFinalStroke;
    int _totalStrokeArea;
    UIImage *_repairAnalysisImage;
    UIImage *_repairSourceImage;
    BLImagePatchList *_repairPatchList;
    struct CGRect _brushStrokeRect;
}

@property(nonatomic) int totalStrokeArea; // @synthesize totalStrokeArea=_totalStrokeArea;
@property(retain, nonatomic) BLImagePatchList *repairPatchList; // @synthesize repairPatchList=_repairPatchList;
@property(nonatomic) struct CGRect brushStrokeRect; // @synthesize brushStrokeRect=_brushStrokeRect;
@property(retain, nonatomic) UIImage *repairSourceImage; // @synthesize repairSourceImage=_repairSourceImage;
@property(retain, nonatomic) UIImage *repairAnalysisImage; // @synthesize repairAnalysisImage=_repairAnalysisImage;
- (void)dealloc;
- (id)init;
- (_Bool)solidBrush;
- (struct CGContext *)newContextForRect:(struct CGRect)arg1 inDestRect:(struct CGRect)arg2 andScale:(double)arg3;
- (void)strokeDidFinish;
- (void)setBrushStrokes:(id)arg1;
- (struct CGRect)drawBrushAtLocation:(struct CGPoint)arg1 opacity:(float)arg2 erase:(_Bool)arg3 magicEdges:(_Bool)arg4 brushSize:(float)arg5 brushSoftness:(float)arg6;

@end

@interface BLRetouchSaturationLayer : BLRetouchEffectLayer
{
    float _saturation;
}

+ (id)layerWithSaturation:(float)arg1;
@property(nonatomic) float saturation; // @synthesize saturation=_saturation;
- (void)dealloc;
- (struct CGContext *)newContextWithEffect:(struct CGContext *)arg1;

@end

@interface BLSleepAssertionManager : NSObject
{
    NSObject<OS_dispatch_semaphore> *m_assertionSemaphore;
    long long m_assertionCount;
    _Bool m_waiting;
    int m_assertionLock;
    long long m_idleCount;
    int m_idleLock;
}

+ (id)sharedInstance;
- (void)releaseIdleAssertion;
- (void)takeIdleAssertion;
- (void)waitForOutstandingSleepAssertions;
- (void)releaseSleepAssertion;
- (void)takeSleepAssertion;
- (void)dealloc;
- (id)retain;
- (id)autorelease;
- (oneway void)release;
- (id)init;
- (id)hidden;

@end

@interface BLTextureImageBuffer : BLImageBuffer
{
    unsigned int _accumlatorTexture;
    unsigned int _accumlatorFramebuffer;
    EAGLContext *_eaglContext;
    CIImage *_ciImage;
}

- (void)renderCIImage:(id)arg1;
- (id)ciImage;
- (void)readPixelsByAddressInBlock:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (id)initWithSize:(struct CGSize)arg1 colorManagement:(int)arg2;

@end

@interface BLUIImage : BLImage
{
}

- (id)CIImage;
- (struct CGImage *)CGImage;
- (long long)imageOrientation;
- (double)scale;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithFileAtURL:(id)arg1;
- (id)initWithUIImage:(id)arg1;

@end

@interface BLUnderwaterBalanceFilter : CIFilter
{
    _Bool _needsReprocess;
    float _lastDepthStrength;
    float _lastWaterBlend;
    CIImage *_inputImage;
    NSNumber *_inputDepthStrength;
    NSNumber *_inputWaterBlend;
    CIVector *_inputAverageLinearColor;
    CIFilter *_underwaterBalanceFilter;
    CIFilter *_underwaterGamma1Filter;
    CIFilter *_underwaterGamma2Filter;
    CIFilter *_underwaterColorMatrixRGB2YIQFilter;
    CIFilter *_underwaterColorMatrixYFilter;
    CIFilter *_underwaterColorMatrixIQFilter;
    CIFilter *_underwaterColorMatrixScaleFilter;
    CIFilter *_underwaterAdditionFilter;
    CIFilter *_underwaterColorMatrixYIQ2RGBFilter;
}

@property(retain, nonatomic) CIFilter *underwaterColorMatrixYIQ2RGBFilter; // @synthesize underwaterColorMatrixYIQ2RGBFilter=_underwaterColorMatrixYIQ2RGBFilter;
@property(retain, nonatomic) CIFilter *underwaterAdditionFilter; // @synthesize underwaterAdditionFilter=_underwaterAdditionFilter;
@property(retain, nonatomic) CIFilter *underwaterColorMatrixScaleFilter; // @synthesize underwaterColorMatrixScaleFilter=_underwaterColorMatrixScaleFilter;
@property(retain, nonatomic) CIFilter *underwaterColorMatrixIQFilter; // @synthesize underwaterColorMatrixIQFilter=_underwaterColorMatrixIQFilter;
@property(retain, nonatomic) CIFilter *underwaterColorMatrixYFilter; // @synthesize underwaterColorMatrixYFilter=_underwaterColorMatrixYFilter;
@property(retain, nonatomic) CIFilter *underwaterColorMatrixRGB2YIQFilter; // @synthesize underwaterColorMatrixRGB2YIQFilter=_underwaterColorMatrixRGB2YIQFilter;
@property(retain, nonatomic) CIFilter *underwaterGamma2Filter; // @synthesize underwaterGamma2Filter=_underwaterGamma2Filter;
@property(retain, nonatomic) CIFilter *underwaterGamma1Filter; // @synthesize underwaterGamma1Filter=_underwaterGamma1Filter;
@property(retain, nonatomic) CIFilter *underwaterBalanceFilter; // @synthesize underwaterBalanceFilter=_underwaterBalanceFilter;
@property(copy, nonatomic) CIVector *inputAverageLinearColor; // @synthesize inputAverageLinearColor=_inputAverageLinearColor;
@property(copy, nonatomic) NSNumber *inputWaterBlend; // @synthesize inputWaterBlend=_inputWaterBlend;
@property(copy, nonatomic) NSNumber *inputDepthStrength; // @synthesize inputDepthStrength=_inputDepthStrength;
@property(retain, nonatomic) CIImage *inputImage; // @synthesize inputImage=_inputImage;
- (void).cxx_destruct;
- (id)outputImage;
- (void)setDefaults;
- (id)init;

@end

@interface BLVintageFilter : CIFilter
{
    _Bool _needsReprocess;
    int _lastAmount;
    float _lastStrength;
    CIImage *_inputImage;
    NSNumber *_inputAmount;
    NSNumber *_inputStrength;
    CIFilter *_colorCubeFilter;
    CIFilter *_maskFilter;
}

@property(retain, nonatomic) CIFilter *maskFilter; // @synthesize maskFilter=_maskFilter;
@property(retain, nonatomic) CIFilter *colorCubeFilter; // @synthesize colorCubeFilter=_colorCubeFilter;
@property(copy, nonatomic) NSNumber *inputStrength; // @synthesize inputStrength=_inputStrength;
@property(copy, nonatomic) NSNumber *inputAmount; // @synthesize inputAmount=_inputAmount;
@property(retain, nonatomic) CIImage *inputImage; // @synthesize inputImage=_inputImage;
- (void).cxx_destruct;
- (id)outputImage;
- (void)setDefaults;
- (id)init;

@end

@interface CIImage (ASCII)
- (id)bl_imageToAlphaChannel;
- (id)bl_imageFromAlphaChannel;
- (id)bl_moveBlueToAlpha;
- (id)bl_moveAlphaToBlue;
@end

@interface NSArray (Additions)
- (id)bl_firstObjectWithStringValue:(id)arg1 forKey:(id)arg2;
- (_Bool)bl_containsObjectIdenticalTo:(id)arg1;
- (id)bl_nextToLastObject;
- (id)bl_secondObject;
- (id)bl_objectAtIndexNoThrow:(long long)arg1;
- (id)bl_objectOrNullAtIndex:(unsigned long long)arg1;
- (id)bl_objectAtIndex:(unsigned long long)arg1 defaultValue:(id)arg2;
- (struct CGRect)bl_rectAtIndex:(unsigned long long)arg1 defaultValue:(struct CGRect)arg2;
- (struct CGRect)bl_rectAtIndex:(unsigned long long)arg1;
- (double)bl_doubleAtIndex:(unsigned long long)arg1 defaultValue:(double)arg2;
- (double)bl_doubleAtIndex:(unsigned long long)arg1;
- (float)bl_floatAtIndex:(unsigned long long)arg1 defaultValue:(float)arg2;
- (float)bl_floatAtIndex:(unsigned long long)arg1;
- (long long)bl_intAtIndex:(unsigned long long)arg1 defaultValue:(long long)arg2;
- (long long)bl_intAtIndex:(unsigned long long)arg1;
- (_Bool)bl_boolAtIndex:(unsigned long long)arg1 defaultValue:(_Bool)arg2;
- (_Bool)b_boolAtIndex:(unsigned long long)arg1;
@end

@interface NSCoder (Additions)
- (void)decodeObjectsForKeys:(id)arg1 forObject:(id)arg2;
- (void)encodeObjectsForKeys:(id)arg1 forObject:(id)arg2;
- (void)encodeObjectIfNotNil:(id)arg1 forKey:(id)arg2;
@end

@interface NSDictionary (Additions)
- (id)bl_dictionaryByRemovingValuesForKey:(id)arg1;
- (id)bl_dictionaryBySwappingValuesWithDictionary:(id)arg1;
- (id)bl_objectForIndex:(int)arg1;
- (id)bl_nonRetainedObjectForKey:(id)arg1;
- (id)bl_objectOrNullForKey:(id)arg1;
- (id)bl_objectForKey:(id)arg1 defaultValue:(id)arg2;
- (struct CGAffineTransform)bl_affineTransformForKey:(id)arg1;
- (struct CGPoint)bl_pointFromStringForKey:(id)arg1 defaultValue:(struct CGPoint)arg2;
- (struct CGPoint)bl_pointFromStringForKey:(id)arg1;
- (struct CGRect)bl_rectFromStringForKey:(id)arg1 defaultValue:(struct CGRect)arg2;
- (struct CGRect)bl_rectFromStringForKey:(id)arg1;
- (struct CGRect)bl_rectForKey:(id)arg1 defaultValue:(struct CGRect)arg2;
- (struct CGRect)bl_rectForKey:(id)arg1;
- (double)bl_doubleForKey:(id)arg1 defaultValue:(double)arg2;
- (double)bl_doubleForKey:(id)arg1;
- (float)bl_floatForKey:(id)arg1 defaultValue:(float)arg2;
- (float)bl_floatForKey:(id)arg1;
- (long long)bl_integerForKey:(id)arg1 defaultValue:(long long)arg2;
- (int)bl_intForKey:(id)arg1 defaultValue:(int)arg2;
- (long long)bl_integerForKey:(id)arg1;
- (int)bl_intForKey:(id)arg1;
- (_Bool)bl_boolForKey:(id)arg1 defaultValue:(_Bool)arg2;
- (_Bool)bl_boolForKey:(id)arg1;
@end

@interface NSMutableArray (Additions)
- (void)bl_moveIdenticalObjectToFirst:(id)arg1;
- (void)bl_insertObject:(id)arg1 usingFunction:(CDUnknownFunctionPointerType)arg2 context:(void *)arg3;
- (void)bl_addObjectsFromArrayIfIdenticalNotPresent:(id)arg1;
- (void)bl_addObjectIfIdenticalNotPresent:(id)arg1;
- (void)bl_addObjectsFromArrayIfNotPresent:(id)arg1;
- (void)bl_addObjectIfNotPresent:(id)arg1;
- (void)bl_addObjectIfNotNil:(id)arg1;
@end

@interface NSMutableDictionary (Additions)
- (void)bl_setObject:(id)arg1 forIndex:(int)arg2;
- (void)bl_copyObjectsFromDictionaryRemoveIfNotPresent:(id)arg1 forKeys:(id)arg2;
- (void)bl_copyObjectFromDictionaryRemoveIfNotPresent:(id)arg1 forKey:(id)arg2;
- (void)bl_copyObjectsFromDictionary:(id)arg1 forKeys:(id)arg2;
- (void)bl_copyObjectFromDictionary:(id)arg1 forKey:(id)arg2;
- (void)bl_setObjectIfNotPresent:(id)arg1 forKey:(id)arg2;
- (void)bl_setPointAsStringIfNotPresent:(struct CGPoint)arg1 forKey:(id)arg2;
- (void)bl_setRectAsStringIfNotPresent:(struct CGRect)arg1 forKey:(id)arg2;
- (void)bl_setRectIfNotPresent:(struct CGRect)arg1 forKey:(id)arg2;
- (void)bl_setDoubleIfNotPresent:(double)arg1 forKey:(id)arg2;
- (void)bl_setFloatIfNotPresent:(float)arg1 forKey:(id)arg2;
- (void)bl_setIntIfNotPresent:(int)arg1 forKey:(id)arg2;
- (void)bl_setBoolIfNotPresent:(_Bool)arg1 forKey:(id)arg2;
- (void)bl_setObjectIfNotNil:(id)arg1 forKey:(id)arg2;
- (void)bl_setAffineTransform:(struct CGAffineTransform)arg1 forKey:(id)arg2;
- (void)bl_setNonRetainedObject:(id)arg1 forKey:(id)arg2;
- (void)bl_setPointAsString:(struct CGPoint)arg1 forKey:(id)arg2;
- (void)bl_setRectAsString:(struct CGRect)arg1 forKey:(id)arg2;
- (void)bl_setRect:(struct CGRect)arg1 forKey:(id)arg2;
- (void)bl_setDouble:(double)arg1 forKey:(id)arg2;
- (void)bl_setFloat:(float)arg1 forKey:(id)arg2;
- (void)bl_setInteger:(long long)arg1 forKey:(id)arg2;
- (void)bl_setInt:(int)arg1 forKey:(id)arg2;
- (void)bl_setBool:(_Bool)arg1 forKey:(id)arg2;
@end

@interface NSObject (Additions)
- (void)setValuesForKeysToNil:(id)arg1;
@end

@interface NSPointerArray (Additions)
- (id)bl_firstObject;
@end

@interface NSString (Additions)
- (id)setterName;
@end

@interface UIImage (Additions)
+ (long long)bl_orientationForImageOrientation:(long long)arg1 rotatedBy90DegreeTurnsClockwise:(int)arg2;
+ (int)bl_inverseOrientationForImageOrientation:(long long)arg1;
+ (struct CGAffineTransform)bl_transformForImageOrientation:(long long)arg1 andSize:(struct CGSize)arg2;
+ (int)bl_rotationAngleForImageOrientation:(long long)arg1;
+ (_Bool)bl_isMirroredForImageOrientation:(long long)arg1;
+ (_Bool)bl_isSizeSwappedForImageOrientation:(long long)arg1;
+ (long long)bl_imageOrientationForExifOrientation:(int)arg1;
+ (int)bl_exifOrientationForImageOrientation:(long long)arg1;
+ (id)bl_stretchyImageNamed:(id)arg1;
+ (id)bl_stretchyImageNamed:(id)arg1 hStretch:(_Bool)arg2 vStretch:(_Bool)arg3;
+ (id)bl_stretchyVersionH:(_Bool)arg1 V:(_Bool)arg2 forImage:(id)arg3;
+ (void)bl_saveToStretchyCache:(id)arg1 forKey:(id)arg2;
+ (id)bl_printImageNamed:(id)arg1;
+ (id)bl_resizablePrintImageNamed:(id)arg1 resizableImageWithCapInsets:(struct UIEdgeInsets)arg2 resizingMode:(long long)arg3;
+ (void)bl_end2xImageCaching;
+ (void)bl_begin2xImageCaching;
+ (void)bl_2xCacheMemoryWarning:(id)arg1;
+ (void)bl_set2xImageCache:(id)arg1;
+ (id)bl_darkenImage:(id)arg1 blackAlpha:(double)arg2;
+ (id)bl_maskImageFromAlphaChannelOfImage:(id)arg1 drawnIntoRect:(struct CGRect)arg2;
+ (id)bl_flattenedPatternImage:(id)arg1 intoSize:(struct CGSize)arg2;
+ (id)bl_flattenedStretchableImage:(id)arg1 intoSize:(struct CGSize)arg2;
- (id)bl_transparentBorderImage:(unsigned long long)arg1;
- (void)bl_saveToDocumentsFolder:(id)arg1;
- (id)bl_bezeledImageWithShadowRed:(double)arg1 green:(double)arg2 blue:(double)arg3 alpha:(double)arg4 fillRed:(double)arg5 green:(double)arg6 blue:(double)arg7 alpha:(double)arg8 drawShadow:(_Bool)arg9;
- (id)bl_stretchyImageWithLeftCapWidth:(int)arg1 topCapHeight:(int)arg2;
- (id)bl_stretchyVersion;
- (id)bl_stretchyVVersion;
- (id)bl_stretchyHVersion;
- (id)bl_stretchyVersionH:(_Bool)arg1 V:(_Bool)arg2;
- (void)bl_saveToStretchyCache:(id)arg1 forKey:(id)arg2;
- (id)bl_colorAtX:(int)arg1 y:(int)arg2;
- (float)bl_lumaAtX:(int)arg1 y:(int)arg2;
- (float)bl_lumaAtX:(int)arg1 y:(int)arg2 sampleSize:(float)arg3;
- (CDStruct_76a42933)bl_pixelAtX:(int)arg1 y:(int)arg2;
- (CDStruct_76a42933)bl_pixelAtX:(int)arg1 y:(int)arg2 sampleSize:(float)arg3;
- (id)bl_fixAspectedThumbnailWithMediaAspectRatio:(double)arg1;
- (id)bl_flattenedImageWithSize:(struct CGSize)arg1 frame:(struct CGRect)arg2 scale:(double)arg3;
- (id)bl_flattenedImageFromRect:(struct CGRect)arg1;
- (id)bl_flattenedImageFromRect:(struct CGRect)arg1 opaque:(_Bool)arg2;
- (id)bl_hFlippedImage;
- (id)bl_flattenedImageWithSquareOfSize:(int)arg1;
- (id)bl_flattenedImageWithSquareOfSize:(int)arg1 scale:(int)arg2;
- (id)bl_flattenedImageRotatedBy90DegreeTurnsClockwise:(long long)arg1;
- (id)bl_flattenedImageInBoundingSize:(struct CGSize)arg1 preserveOrientation:(_Bool)arg2 boundingScale:(double)arg3;
- (id)bl_flattenedImageInBoundingSize:(struct CGSize)arg1;
- (id)bl_flattenedImage;
- (id)bl_flattenedImageWithSize:(struct CGSize)arg1;
- (id)bl_flattenedImageWithSize:(struct CGSize)arg1 opaque:(_Bool)arg2;
- (id)bl_flattenedImageWithSize:(struct CGSize)arg1 opaque:(_Bool)arg2 scale:(int)arg3;
- (void)bl_drawInRect:(struct CGRect)arg1 fromRect:(struct CGRect)arg2;
- (struct CGRect)bl_rect;
- (id)description;
@end

@interface UIImage (PhotoEffects)
+ (float)inkEffectsSaturationFromAmount:(float)arg1;
+ (float)defaultFXValue;
+ (id)defaultForFXKey:(id)arg1;
+ (id)defaultForFXKey:(id)arg1 groupIndex:(int)arg2 value:(float)arg3;
+ (_Bool)integerOnlyValuesForGroupIndex:(int)arg1;
+ (int)maximumValueForGroupIndex:(int)arg1;
+ (int)minimumValueForGroupIndex:(int)arg1;
+ (_Bool)wantFXAsymetricWidthDisplayForGroup:(int)arg1 value:(float)arg2;
+ (_Bool)wantFXCenterWidthDisplayForGroup:(int)arg1 value:(float)arg2;
+ (_Bool)wantFXAngleInteractionForGroup:(int)arg1 value:(float)arg2;
+ (_Bool)wantFXCenterSizeInteractionForGroup:(int)arg1 value:(float)arg2;
+ (_Bool)wantFXSingleTouchCenterAndSizeInteractionForGroup:(int)arg1 value:(float)arg2;
+ (_Bool)wantFXCenterPointInteractionForGroup:(int)arg1 value:(float)arg2;
+ (id)imageWithInk_colorThumbnails:(float)arg1 sourceImageBuffer:(id)arg2;
+ (id)ciImageWithInk_renderWithInput:(id)arg1 withTexture1:(id)arg2 withTexture2:(id)arg3 withTexture3:(id)arg4 withStrength:(double)arg5 withSaturation:(float)arg6 thumbnailMode:(_Bool)arg7;
+ (id)imageBufferWithInk_blendTexture:(id)arg1 options:(id)arg2 gradientRect:(struct CGRect)arg3 padding:(double)arg4 liveInteraction:(_Bool)arg5 textureName:(id)arg6;
+ (int)imageWithTiltShift:(float)arg1 withBufferIn:(void *)arg2 withBufferOut:(void *)arg3 withBytesPerRow:(unsigned long long)arg4 withBytesPerRowOrg:(unsigned long long)arg5 withWidth:(int)arg6 withHeight:(int)arg7 withTiltShiftData:(void *)arg8 withCenter:(struct CGPoint)arg9 withSize:(double)arg10 withAngle:(float)arg11 destRect:(struct CGRect)arg12 padding:(double)arg13 scale:(int)arg14;
+ (void)tiltShiftPrepareLivePreview:(void *)arg1 fromBuffer:(id)arg2;
+ (int)imageWithArtisticEdge:(float)arg1 withBufferIn:(void *)arg2 withBufferOut:(void *)arg3 withBytesPerRow:(unsigned long long)arg4 withBytesPerRowOrg:(unsigned long long)arg5 withWidth:(int)arg6 withHeight:(int)arg7 destRect:(struct CGRect)arg8 padding:(double)arg9 scale:(int)arg10;
- (void)dumpTexture:(struct __CVBuffer *)arg1;
@end

