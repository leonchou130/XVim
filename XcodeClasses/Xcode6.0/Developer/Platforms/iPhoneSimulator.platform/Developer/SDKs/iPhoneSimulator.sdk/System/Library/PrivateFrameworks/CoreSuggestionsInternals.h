//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct Mutex;

struct Options {
    int _field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    long long _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
};

struct Prog;

struct RE2 {
    struct Mutex *_field1;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field2;
    struct Options _field3;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field4;
    _Bool _field5;
    struct Regexp *_field6;
    struct Regexp *_field7;
    struct Prog *_field8;
    struct Prog *_field9;
    _Bool _field10;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *_field11;
    int _field12;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field13;
    int _field14;
    struct map<std::__1::basic_string<char>, int, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, int>>> *_field15;
    struct map<int, std::__1::basic_string<char>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, std::__1::basic_string<char>>>> *_field16;
};

struct Regexp;

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct _opaque_pthread_mutex_t {
    long long __sig;
    char __opaque[56];
};

struct _xmlDoc;

struct _xmlHashTable;

struct _xmlNode;

struct _xmlParserInput;

struct _xmlParserNodeInfo;

struct _xmlValidState;

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    unsigned long long _field1;
                    unsigned long long _field2;
                    char *_field3;
                } _field1;
                struct __short {
                    union {
                        unsigned char _field1;
                        char _field2;
                    } _field1;
                    char _field2[23];
                } _field2;
                struct __raw {
                    unsigned long long _field1[3];
                } _field3;
            } _field1;
        } _field1;
    } _field1;
};

struct map<int, std::__1::basic_string<char>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, std::__1::basic_string<char>>>>;

struct map<std::__1::basic_string<char>, int, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, int>>>;

#pragma mark Typedef'd Structures

typedef struct {
    char _field1[3];
    unsigned long long _field2;
    unsigned short _field3;
} CDStruct_fcaecfc9;

typedef struct {
    struct {
        unsigned short bom;
        unsigned short tag;
    } _featureType;
    _Bool hasInhumanHeaders;
    _Bool inhumanEmailAddress;
    _Bool inhumanAuthorName;
    _Bool inhumanBody;
    _Bool isTemplate;
} CDStruct_f96224e3;

// Ambiguous groups
typedef struct {
    unsigned short _field1;
    unsigned short _field2;
} CDStruct_d65e47c4;

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/CoreSuggestionsInternals.framework/CoreSuggestionsInternals
// UUID: E7AB7391-AA2C-3115-87CD-F46D6B7AAD12
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 126.2.0.0.0
//            Minimum iOS version: 8.0.0
//                    SDK version: 8.0.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol JSExport
@end

@protocol MSSearchDelegate <NSObject>

@optional
- (void)search:(MSSearch *)arg1 didFinishWithError:(NSError *)arg2;
- (_Bool)search:(MSSearch *)arg1 didFindResults:(NSArray *)arg2;
@end

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSSecureCoding <NSCoding>
+ (_Bool)supportsSecureCoding;
@end

@protocol SGEntityKey <NSObject>
+ (_Bool)isSupportedEntityType:(long long)arg1;
- (id)initWithSerialized:(NSString *)arg1;
- (NSString *)serialize;
@end

@protocol SGIntervalTreeProtocol <JSExport>
- (NSArray *)query:(unsigned long long)arg1 end:(unsigned long long)arg2;
- (void)remove:(NSString *)arg1;
- (void)store:(unsigned long long)arg1 end:(unsigned long long)arg2 key:(NSString *)arg3;
- (id)init;

@optional
- (NSArray *)query:(unsigned long long)arg1 end:(unsigned long long)arg2 __JS_EXPORT_AS__query:(id)arg3;
- (void)store:(unsigned long long)arg1 end:(unsigned long long)arg2 key:(NSString *)arg3 __JS_EXPORT_AS__store:(id)arg4;
@end

@protocol SGMailClient <NSObject>
- (void)requestRichDownloadOfMessagesWithReferences:(NSArray *)arg1;
- (NSError *)messagesWithIds:(NSSet *)arg1 onMessage:(void (^)(SGSimpleMailMessage *, NSString *, _Bool *))arg2;
- (NSError *)allMessagesSince:(NSDate *)arg1 onMessage:(void (^)(SGSimpleMailMessage *, NSString *, _Bool *))arg2;
@end

@protocol SGPipelineDissector <NSObject>
- (void)dissect:(SGPipelineEntity *)arg1;
@end

@protocol SGReverseTemplateJS
- (void)setAssetPath:(NSURL *)arg1 locale:(NSString *)arg2;
- (void)emailToOutput:(NSDictionary *)arg1 reply:(void (^)(NSArray *, NSArray *))arg2;
- (void)shouldDownloadFull:(NSDictionary *)arg1 reply:(void (^)(_Bool))arg2;
@end

@protocol SGSeekable <NSObject>
@property(readonly) unsigned long long offsetInFile;
- (void)seekToFileOffset:(unsigned long long)arg1;
- (const void *)dataOfLength:(unsigned long long)arg1;
@end

@interface EKEvent (Suggestions)
- (_Bool)sg_isCuratedEventFromSuggestionNewerThan:(double)arg1;
@end

@interface MFMailMessage (SGUtility)
- (id)sg_bestAlternativePart;
@end

@interface SGAggregateLogging : NSObject
{
}

+ (id)anonymousHashForEvent:(id)arg1;
+ (void)clearDistributionKey:(id)arg1;
+ (void)pushDistributionValue:(double)arg1 forKey:(id)arg2;
+ (void)assetVersion;
+ (void)contactRejected:(id)arg1;
+ (void)contactConfirmed:(id)arg1;
+ (void)eventRejected:(id)arg1;
+ (void)eventConfirmed:(id)arg1;
+ (void)contactsSuggested:(id)arg1 withElapsedTime:(unsigned long long)arg2;
+ (void)eventsSuggested:(id)arg1 withElapsedTime:(unsigned long long)arg2;
+ (void)performedAction:(id)arg1 onEvent:(id)arg2;
+ (void)performedAction:(id)arg1 onContact:(id)arg2;
+ (void)pushValue:(double)arg1 toDistKeyWithSuffix:(id)arg2;
+ (void)incrementKeyWithSuffix:(id)arg1;
+ (void)incrementKeyWithSuffix:(id)arg1 by:(unsigned long long)arg2;
+ (void)messagesFoundAfterUndisplayablyLost:(unsigned long long)arg1;
+ (void)messagesUndisplayablyLost:(long long)arg1;
+ (void)messagesDeleted:(unsigned long long)arg1;
+ (void)messagesFound:(unsigned long long)arg1;
+ (void)messagesPruned:(unsigned long long)arg1;
+ (void)messagesLost:(unsigned long long)arg1;
+ (void)messagesAdded:(unsigned long long)arg1;
+ (id)aggregateKeyForKeySuffix:(id)arg1;

@end

@interface SGAsset : NSObject
{
    NSString *_fileName;
    NSString *_resourcePath;
    CDUnknownBlockType _onUpdate;
}

+ (int)assetVersion;
+ (void)forEachInstance:(CDUnknownBlockType)arg1;
+ (void)triggerAssetUpdated;
+ (void)updateAssetMetadata;
+ (void)asyncUpdateAssetMetadata;
+ (void)initialize;
- (void).cxx_destruct;
- (id)path;
- (id)initWithFileName:(id)arg1 fileExtension:(id)arg2 resourceBundle:(id)arg3 onUpdate:(CDUnknownBlockType)arg4;

@end

@interface SGContactDetail : NSObject <NSCopying>
{
    NSString *_value;
    NSString *_label;
    NSString *_sourceKey;
    NSString *_context;
    SGDuplicateKey *_duplicateKey;
}

+ (id)contactDetail:(id)arg1 label:(id)arg2 duplicateKey:(id)arg3 sourceKey:(id)arg4 context:(id)arg5;
@property(readonly, nonatomic) SGDuplicateKey *duplicateKey; // @synthesize duplicateKey=_duplicateKey;
@property(readonly, nonatomic) NSString *context; // @synthesize context=_context;
@property(readonly, nonatomic) NSString *sourceKey; // @synthesize sourceKey=_sourceKey;
@property(readonly, nonatomic) NSString *label; // @synthesize label=_label;
@property(readonly, nonatomic) NSString *value; // @synthesize value=_value;
- (void).cxx_destruct;
- (unsigned long long)hash;
- (_Bool)isEqualToContactDetail:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (id)loadOrigin:(id)arg1;
- (id)initWithValue:(id)arg1 label:(id)arg2 duplicateKey:(id)arg3 sourceKey:(id)arg4 context:(id)arg5;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface SGContactDetailKey : NSObject <SGEntityKey>
{
    SGIdentityKey *_identityKey;
    NSString *_label;
    NSString *_value;
}

+ (_Bool)isSupportedEntityType:(long long)arg1;
+ (id)prefixForForIdentityKey:(id)arg1;
@property(readonly, nonatomic) NSString *value; // @synthesize value=_value;
@property(readonly, nonatomic) NSString *label; // @synthesize label=_label;
@property(readonly, nonatomic) SGIdentityKey *identityKey; // @synthesize identityKey=_identityKey;
- (void).cxx_destruct;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
- (_Bool)isEqualToContactDetailKey:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (id)initWithIdentityKey:(id)arg1 label:(id)arg2 normalizedValue:(id)arg3;
- (id)serialize;
- (id)initWithSerialized:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

@interface SGEntity : NSObject
{
    NSMutableSet *_participants;
    NSMutableSet *_tags;
    unsigned int _state;
    SGRecordId *_recordId;
    SGDuplicateKey *_duplicateKey;
    NSString *_sourceKey;
    NSString *_content;
    NSString *_title;
    double _creationTimestamp;
    double _lastModifiedTimestamp;
    SGSimpleTimeRange *_timeRange;
    NSData *_structuredData;
    double _quality;
    NSMutableSet *_locations;
    long long _masterEntityId;
}

@property(nonatomic) unsigned int state; // @synthesize state=_state;
@property(nonatomic) long long masterEntityId; // @synthesize masterEntityId=_masterEntityId;
@property(retain, nonatomic) NSMutableSet *locations; // @synthesize locations=_locations;
@property(nonatomic) double quality; // @synthesize quality=_quality;
@property(retain, nonatomic) NSData *structuredData; // @synthesize structuredData=_structuredData;
@property(readonly, nonatomic) NSSet *tags; // @synthesize tags=_tags;
@property(retain, nonatomic) SGSimpleTimeRange *timeRange; // @synthesize timeRange=_timeRange;
@property(nonatomic) double lastModifiedTimestamp; // @synthesize lastModifiedTimestamp=_lastModifiedTimestamp;
@property(nonatomic) double creationTimestamp; // @synthesize creationTimestamp=_creationTimestamp;
@property(retain, nonatomic) NSString *title; // @synthesize title=_title;
@property(retain, nonatomic) NSString *content; // @synthesize content=_content;
@property(retain, nonatomic) NSString *sourceKey; // @synthesize sourceKey=_sourceKey;
@property(retain, nonatomic) SGDuplicateKey *duplicateKey; // @synthesize duplicateKey=_duplicateKey;
@property(retain, nonatomic) SGRecordId *recordId; // @synthesize recordId=_recordId;
- (void).cxx_destruct;
- (id)fieldsToSaveOnConfirmation;
- (id)extraKeyTag;
- (void)addTag:(id)arg1;
- (void)addParticipant:(id)arg1 type:(unsigned int)arg2;
- (id)participantsWithRoleType:(unsigned int)arg1;
@property(readonly, nonatomic) NSSet *participants;
- (_Bool)isFromForwardedMessage;
- (_Bool)isCancelled;
- (id)loadOrigin:(id)arg1;
- (void)validate;
- (unsigned long long)hash;
- (_Bool)isEqualToEntity:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (id)init;

@end

@interface SGContactEntity : SGEntity
{
}

+ (id)contactEntityWithTitle:(id)arg1 duplicateKey:(id)arg2 recordId:(id)arg3 masterEntityId:(long long)arg4;
+ (id)contactEntityFromEntity:(id)arg1;
- (id)initWithDuplicateKey:(id)arg1 recordId:(id)arg2 masterEntityId:(long long)arg3 title:(id)arg4;

@end

@interface SGCuratedContactKey : NSObject <SGEntityKey>
{
    SGIdentityKey *_identityKey;
}

+ (_Bool)isSupportedEntityType:(long long)arg1;
@property(readonly, nonatomic) SGIdentityKey *identityKey; // @synthesize identityKey=_identityKey;
- (void).cxx_destruct;
@property(readonly, copy) NSString *description;
- (_Bool)isEqualToCuratedContactKey:(id)arg1;
- (_Bool)isEqual:(id)arg1;
@property(readonly) unsigned long long hash;
- (id)serialize;
- (id)initWithSerialized:(id)arg1;
- (id)initWithExternalId:(int)arg1;
- (id)initWithIdentityKey:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

@interface SGCuratedEventKey : NSObject <SGEntityKey>
{
    NSString *_externalId;
}

+ (_Bool)isSupportedEntityType:(long long)arg1;
@property(readonly, nonatomic) NSString *externalId; // @synthesize externalId=_externalId;
- (void).cxx_destruct;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
- (_Bool)isEqualToCuratedEventKey:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (id)initWithExternalId:(id)arg1;
- (id)serialize;
- (id)initWithSerialized:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

@interface SGDataDetectorDissector : NSObject <SGPipelineDissector>
{
    long long _scannerOptions;
}

+ (_Bool)stringHasDatesOrTimes:(id)arg1;
+ (void)initialize;
- (void)dissect:(id)arg1;
- (id)init;
- (id)initWithSigs:(_Bool)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SGDataDetectorMatch : NSObject
{
    unsigned int _matchType;
    NSString *_valueString;
    struct _NSRange _range;
    struct _NSRange _labelRange;
    struct _NSRange _valueRange;
}

@property(readonly, nonatomic) NSString *valueString; // @synthesize valueString=_valueString;
@property(readonly, nonatomic) struct _NSRange valueRange; // @synthesize valueRange=_valueRange;
@property(readonly, nonatomic) struct _NSRange labelRange; // @synthesize labelRange=_labelRange;
@property(readonly, nonatomic) struct _NSRange range; // @synthesize range=_range;
@property(readonly, nonatomic) unsigned int matchType; // @synthesize matchType=_matchType;
- (void).cxx_destruct;
- (id)description;
- (id)initWithMatchType:(unsigned int)arg1 range:(struct _NSRange)arg2 labelRange:(struct _NSRange)arg3 valueRange:(struct _NSRange)arg4 valueString:(id)arg5;

@end

@interface SGDataNormalization : NSObject
{
}

@end

@interface SGDeduper : NSObject
{
}

+ (id)dedupeContactDetails:(id)arg1;
+ (id)nearDuplicateEKEventOfPseudoEventTitle:(id)arg1 inEKEventsWithSameStartTime:(id)arg2;
+ (id)nearDuplicateOfPseudoEventTitle:(id)arg1 inCuratedEventsWithSameStartTime:(id)arg2;
+ (CDUnknownBlockType)resolveContactDetailUsingIsCuratedFn:(CDUnknownBlockType)arg1 labelLengthFn:(CDUnknownBlockType)arg2;
+ (CDUnknownBlockType)resolveSGContactDetailsPreferringCuratedDetails;
+ (CDUnknownBlockType)resolveSGObjectsPreferringCuratedDetails;
+ (CDUnknownBlockType)resolveByScoreBreakTiesArbitrarily:(CDUnknownBlockType)arg1;
+ (CDUnknownBlockType)resolveByPairs:(CDUnknownBlockType)arg1;
+ (CDUnknownBlockType)bucketerWithMapping:(CDUnknownBlockType)arg1;
+ (id)dedupe:(id)arg1 bucketer:(CDUnknownBlockType)arg2 resolver:(CDUnknownBlockType)arg3;

@end

@interface SGDetectedAttributeDissector : NSObject <SGPipelineDissector>
{
}

+ (_Bool)isPhoneContext:(id)arg1;
+ (_Bool)isAddressContext:(id)arg1;
+ (void)initialize;
- (id)detailTypeFromPrefix:(id)arg1;
- (id)getLineContaining:(struct _NSRange)arg1 inText:(id)arg2;
- (void)dissect:(id)arg1;
- (id)filterDangerousSigDetections:(id)arg1 onEntity:(id)arg2;
- (id)filterDangerousSigEmailDetections:(id)arg1 onEntity:(id)arg2;
- (id)filterDangerousSigAddressDetections:(id)arg1 onEntity:(id)arg2;
- (id)filterDangerousSigPhoneDetections:(id)arg1 onEntity:(id)arg2;
- (id)detectionFromBodyDDMatch:(id)arg1 onEntity:(id)arg2;
- (id)detectionFromSignatureDDMatch:(id)arg1 onEntity:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SGDuplicateKey : NSObject
{
    long long _entityType;
    NSObject<SGEntityKey> *_entityKey;
    SGDuplicateKey *_parentKey;
}

+ (id)duplicateKeyForPseudoEventWithDomain:(id)arg1 groupId:(id)arg2 parentKey:(id)arg3;
+ (id)duplicateKeyForCuratedEventWithExternalID:(id)arg1;
+ (id)duplicateKeyForPseudoContactWithIdentity:(id)arg1 parentKey:(id)arg2;
+ (id)duplicateKeyForCuratedContactWithExternalId:(int)arg1;
+ (id)duplicateKeyForEmailWithSource:(id)arg1 messageId:(id)arg2;
@property(readonly, nonatomic) SGDuplicateKey *parentKey; // @synthesize parentKey=_parentKey;
@property(readonly, nonatomic) NSObject<SGEntityKey> *entityKey; // @synthesize entityKey=_entityKey;
@property(readonly, nonatomic) long long entityType; // @synthesize entityType=_entityType;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSString *compositeHash;
- (id)pseudoEventKey;
- (id)emailKey;
- (id)identityKey;
- (id)pseudoContactKey;
- (id)curatedContactKey;
- (id)contactDetailKey;
- (id)curatedEventKey;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqualToDuplicateKey:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)serialize;
- (id)initWithSerializedEntityKey:(id)arg1 entityType:(long long)arg2 serializedParentKey:(id)arg3;
- (id)initWithSerialized:(id)arg1;
- (id)initWithEntityKey:(id)arg1 entityType:(long long)arg2 parentKey:(id)arg3;

@end

@interface SGEmailKey : NSObject <SGEntityKey>
{
    NSString *_source;
    NSString *_messageId;
    long long _messageIdHash;
}

+ (_Bool)isSupportedEntityType:(long long)arg1;
@property(readonly, nonatomic) long long messageIdHash; // @synthesize messageIdHash=_messageIdHash;
@property(readonly, nonatomic) NSString *messageId; // @synthesize messageId=_messageId;
@property(readonly, nonatomic) NSString *source; // @synthesize source=_source;
- (void).cxx_destruct;
- (id)messageURL;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
- (_Bool)isEqualToEmailKey:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (id)serialize;
- (id)initWithSerialized:(id)arg1;
- (id)initWithSource:(id)arg1 messageId:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

@interface SGExtractionDissector : NSObject <SGPipelineDissector>
{
    NSXPCConnection *_xpcConnection;
    id <SGReverseTemplateJS> _reverseTemplateJS;
    SGAsset *_asset;
}

+ (id)addressDictionaryToString:(id)arg1;
+ (id)addParams:(id)arg1 toParameterizedString:(id)arg2;
+ (id)parseISO8601:(id)arg1;
- (void).cxx_destruct;
- (void)dissect:(id)arg1;
- (id)entityForJS:(id)arg1;
- (id)entityForOutputItem:(id)arg1 parentEntity:(id)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SGFakeMailClient : NSObject <SGMailClient>
{
    NSMutableArray *_messages;
    NSMutableArray *_fullDownloadRequests;
}

@property(readonly) NSArray *fullDownloadRequests; // @synthesize fullDownloadRequests=_fullDownloadRequests;
- (void).cxx_destruct;
- (void)requestRichDownloadOfMessagesWithReferences:(id)arg1;
- (id)messagesWithIds:(id)arg1 onMessage:(CDUnknownBlockType)arg2;
- (id)allMessagesSince:(id)arg1 onMessage:(CDUnknownBlockType)arg2;
- (void)addMessage:(id)arg1 source:(id)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SGFlight : NSObject
{
    NSString *_flightno;
    NSString *_airline;
    NSString *_departureAirportDescription;
    NSString *_arrivalAirportDescription;
}

@property(readonly, nonatomic) NSString *arrivalAirportDescription; // @synthesize arrivalAirportDescription=_arrivalAirportDescription;
@property(readonly, nonatomic) NSString *departureAirportDescription; // @synthesize departureAirportDescription=_departureAirportDescription;
@property(readonly, nonatomic) NSString *airline; // @synthesize airline=_airline;
@property(readonly, nonatomic) NSString *flightno; // @synthesize flightno=_flightno;
- (void).cxx_destruct;
- (id)description;
- (id)initWithCarrier:(id)arg1 flightNo:(id)arg2 depDesc:(id)arg3 arrDesc:(id)arg4;

@end

@interface SGFlightData : NSObject
{
    id <SGSeekable> _flightsFh;
    SGOffsetDictionary *_flightDataOffsets;
    SGAsset *_flightsUpdateAsset;
    id <SGSeekable> _flightsUpdateFh;
    SGOffsetDictionary *_flightUpdateDataOffsets;
    id <SGSeekable> _airportsFh;
    SGOffsetDictionary *_airportDataOffsets;
    SGAsset *_airportsUpdateAsset;
    id <SGSeekable> _airportsUpdateFh;
    SGOffsetDictionary *_airportUpdateDataOffsets;
    NSDictionary *_carrierNames;
    NSDictionary *_carrierCodesByName;
    SGAsset *_carrierUpdateAsset;
    NSDictionary *_carrierUpdateNames;
    NSDictionary *_carrierUpdateCodesByName;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (id)airportCodeForAirportName:(id)arg1 flightCarrier:(id)arg2 flightNumber:(unsigned short)arg3;
- (id)airportsServicedByCarrier:(id)arg1 flightNumber:(unsigned short)arg2;
- (id)airportsServicedByCarrier:(id)arg1 flightNumber:(unsigned short)arg2 withDataOffset:(id)arg3 andFileHandle:(id)arg4;
- (id)nameForCarrier:(id)arg1;
- (id)carrierIataCodeForCarrierName:(id)arg1;
- (id)carrierIataCodes;
- (id)latitudeAndLongitudeForAirport:(id)arg1;
- (id)latitudeAndLongitudeForAirport:(id)arg1 withDataOffset:(id)arg2 andFileHandle:(id)arg3;
- (id)timezoneOlsonCodeForAirport:(id)arg1;
- (id)timezoneOlsonCodeForAirport:(id)arg1 withDataOffset:(id)arg2 andFileHandle:(id)arg3;
- (id)namesForAirport:(id)arg1;
- (id)namesForAirport:(id)arg1 withDataOffset:(id)arg2 andFileHandle:(id)arg3;
- (id)airportIataCodes;
- (id)airportIataCodesForDataOffset:(id)arg1;
- (void)updateCarriers;
- (void)updateAirports;
- (void)updateFlights;
- (id)init;

@end

@interface SGHtmlEntities : NSObject
{
}

+ (id)decodeEntities:(id)arg1;

@end

@interface SGHtmlParserDissector : NSObject <SGPipelineDissector>
{
}

- (void)dissect:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SGHtmlParserDissectorTask : NSObject
{
    NSData *_utf8;
    NSMutableArray *_plainTextLines;
    unsigned long long _plainTextLinesTotalLength;
    NSMutableArray *_plainTextLineToHTMLOffset;
    _Bool _currentLineIsCollapsed;
    NSMutableString *_currentLineText;
    struct _xmlParserCtxt {
        struct _xmlSAXHandler *_field1;
        void *_field2;
        struct _xmlDoc *_field3;
        int _field4;
        int _field5;
        char *_field6;
        char *_field7;
        int _field8;
        int _field9;
        struct _xmlParserInput *_field10;
        int _field11;
        int _field12;
        struct _xmlParserInput **_field13;
        struct _xmlNode *_field14;
        int _field15;
        int _field16;
        struct _xmlNode **_field17;
        int _field18;
        struct _xmlParserNodeInfoSeq {
            unsigned long long _field1;
            unsigned long long _field2;
            struct _xmlParserNodeInfo *_field3;
        } _field19;
        int _field20;
        int _field21;
        int _field22;
        int _field23;
        int _field24;
        int _field25;
        struct _xmlValidCtxt {
            void *_field1;
            CDUnknownFunctionPointerType _field2;
            CDUnknownFunctionPointerType _field3;
            struct _xmlNode *_field4;
            int _field5;
            int _field6;
            struct _xmlNode **_field7;
            unsigned int _field8;
            struct _xmlDoc *_field9;
            int _field10;
            struct _xmlValidState *_field11;
            int _field12;
            int _field13;
            struct _xmlValidState *_field14;
            struct _xmlAutomata *_field15;
            struct _xmlAutomataState *_field16;
        } _field26;
        int _field27;
        int _field28;
        char *_field29;
        char *_field30;
        int _field31;
        int _field32;
        char **_field33;
        long long _field34;
        long long _field35;
        int _field36;
        int _field37;
        int _field38;
        char *_field39;
        char *_field40;
        char *_field41;
        int *_field42;
        int _field43;
        int _field44;
        int *_field45;
        int _field46;
        struct _xmlParserInput *_field47;
        int _field48;
        int _field49;
        int _field50;
        int _field51;
        void *_field52;
        int _field53;
        int _field54;
        void *_field55;
        int _field56;
        int _field57;
        struct _xmlDict *_field58;
        char **_field59;
        int _field60;
        int _field61;
        char *_field62;
        char *_field63;
        char *_field64;
        int _field65;
        int _field66;
        int _field67;
        char **_field68;
        int *_field69;
        void **_field70;
        struct _xmlHashTable *_field71;
        struct _xmlHashTable *_field72;
        int _field73;
        int _field74;
        int _field75;
        int _field76;
        struct _xmlNode *_field77;
        int _field78;
        struct _xmlAttr *_field79;
        struct _xmlError {
            int _field1;
            int _field2;
            char *_field3;
            int _field4;
            char *_field5;
            int _field6;
            char *_field7;
            char *_field8;
            char *_field9;
            int _field10;
            int _field11;
            void *_field12;
            void *_field13;
        } _field80;
        int _field81;
        unsigned long long _field82;
        unsigned long long _field83;
        struct _xmlParserNodeInfo *_field84;
        int _field85;
        int _field86;
        struct _xmlParserNodeInfo *_field87;
        int _field88;
        unsigned long long _field89;
    } *_parserContext;
    _Bool _renderingSuspended;
    NSMutableIndexSet *_quotedRegions;
    NSMutableIndexSet *_tabularRegions;
    unsigned long long _bytesConsumedInPreviousPasses;
    unsigned long long _depth;
    NSMutableIndexSet *_depthsWithActiveRegions;
    NSHashTable *_activeRegions;
    NSMutableArray *_activeRegionStartPositionStack;
    NSMutableArray *_activeRegionIndexSetStack;
    unsigned long long _quoteToEndFromPosition;
}

- (void).cxx_destruct;
- (void)enterRegion:(id)arg1;
- (void)tagEnd;
- (void)tagStart;
- (void)startTable;
- (void)startQuotedRegion;
- (void)textContent:(const char *)arg1 len:(int)arg2;
- (void)resumeRendering;
- (void)suspendRendering;
- (void)uncollapseCurrentLine;
- (void)newBlock;
- (void)quoteToEnd;
- (void)processCurrentLineOfText;
- (void)process:(id)arg1;

@end

@interface SGIdentityKey : NSObject <NSCopying>
{
    NSString *_content;
    unsigned long long _type;
}

+ (_Bool)isSupportedEntityType:(long long)arg1;
+ (unsigned long long)identityTypeForKeyPart:(id)arg1;
+ (id)keyForContactExternalId:(int)arg1;
+ (id)keyForNormalizedEmail:(id)arg1;
+ (id)keyForEmail:(id)arg1;
@property(readonly, nonatomic) unsigned long long type; // @synthesize type=_type;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSString *externalId;
- (id)identityKey;
- (id)emailAddress;
- (_Bool)hasEmailAddress;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqualToIdentityKey:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (id)serialize;
- (id)initWithType:(unsigned long long)arg1 content:(id)arg2;
- (id)initWithSerialized:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface SGIdentityName : NSObject
{
    NSString *_privFullName;
    NSString *_firstname;
    NSString *_surname;
    NSString *_middlename;
    NSString *_prefix;
    NSString *_suffix;
}

+ (void)initialize;
+ (id)nameWithString:(id)arg1;
@property(readonly, nonatomic) NSString *suffix; // @synthesize suffix=_suffix;
@property(readonly, nonatomic) NSString *prefix; // @synthesize prefix=_prefix;
@property(readonly, nonatomic) NSString *middlename; // @synthesize middlename=_middlename;
@property(readonly, nonatomic) NSString *surname; // @synthesize surname=_surname;
@property(readonly, nonatomic) NSString *firstname; // @synthesize firstname=_firstname;
- (void).cxx_destruct;
- (id)toSGName;
- (id)initWithWesternName:(id)arg1;
- (id)segmentWesternNameWithNameParts:(id)arg1 andPrefix:(id)arg2;
- (id)initWithSpanishName:(id)arg1;
- (id)initWithVietnameseName:(id)arg1;
- (id)initWithChineseName:(id)arg1;
- (id)initWithJapaneseName:(id)arg1;
- (id)initWithKoreanName:(id)arg1;
- (id)initWithString:(id)arg1;
@property(readonly, nonatomic) NSString *fullName;

@end

@interface SGInhumanDissector : NSObject <SGPipelineDissector>
{
}

- (void)dissect:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SGInhumans : NSObject
{
}

+ (_Bool)areHumanHeaders:(id)arg1;
+ (_Bool)isInhumanBody:(id)arg1;
+ (_Bool)isInhuman:(id)arg1;
+ (_Bool)isInhumanEmailAddress:(id)arg1;
+ (_Bool)isInhumanName:(id)arg1;
+ (void)initialize;

@end

@interface SGIntervalTree : NSObject <SGIntervalTreeProtocol>
{
    NSMutableDictionary *_keyToInterval;
    NSMutableIndexSet *_treePositions;
    _Bool _treeFrozen;
    _Bool _treeKeyed;
    SGIntervalTreeNode *_root;
}

- (void).cxx_destruct;
- (void)rekeyTree;
- (void)rebuildTree;
- (void)addPosition:(unsigned long long)arg1;
- (id)query:(unsigned long long)arg1 end:(unsigned long long)arg2;
- (void)remove:(id)arg1;
- (void)store:(unsigned long long)arg1 end:(unsigned long long)arg2 key:(id)arg3;
- (id)init;

@end

@interface SGIntervalTreeNode : NSObject
{
    _Bool _hasIndex;
    unsigned long long _index;
    SGIntervalTreeNode *_left;
    _Bool _hasLeftIndex;
    unsigned long long _leftIndex;
    SGIntervalTreeNode *_right;
    _Bool _hasRightIndex;
    unsigned long long _rightIndex;
    NSMutableSet *_keys;
}

- (void).cxx_destruct;
- (_Bool)isSpannedByRight:(unsigned long long)arg1;
- (_Bool)isSpannedByLeft:(unsigned long long)arg1;
- (unsigned long long)getMax;
- (unsigned long long)getMin;
- (_Bool)isSpannedBy:(struct _NSRange)arg1;
- (void)insertIndex:(unsigned long long)arg1;
- (void)assignKey:(id)arg1 forRange:(struct _NSRange)arg2;
- (void)queryRange:(struct _NSRange)arg1 toResults:(id)arg2;
- (id)queryRange:(struct _NSRange)arg1;
- (void)storePosition:(unsigned long long)arg1;
- (id)init;

@end

@interface SGLabeledValue : NSObject
{
    NSString *_label;
    NSString *_value;
}

@property(readonly, nonatomic) NSString *value; // @synthesize value=_value;
@property(readonly, nonatomic) NSString *label; // @synthesize label=_label;
- (void).cxx_destruct;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqualToLabeledValue:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (id)initWithLabel:(id)arg1 value:(id)arg2;

@end

@interface SGMailPatterns : NSObject
{
}

+ (id)messageSeparatorPattern;
+ (id)quotedRegionStartPattern;
+ (id)headersPattern;
+ (id)headerPattern;
+ (id)headerPattern:(id)arg1;
+ (id)replyAttributionPattern;
+ (void)initialize;

@end

@interface SGMailQuoteDissector : NSObject <SGPipelineDissector>
{
    _Bool _paranoid;
}

+ (void)initialize;
- (void)dissect:(id)arg1;
- (id)quotedRegionsFrom:(id)arg1 htmlQuotedRegions:(id)arg2;
- (id)quotedRegionsFrom:(id)arg1;
- (id)_xWrote:(id)arg1 utf16:(id)arg2 htmlQuotedRegions:(id)arg3;
- (id)_tofuRegions:(id)arg1 utf16:(id)arg2;
- (id)initParanoid;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SGMailServicesClient : NSObject <SGMailClient>
{
    _Bool _ignoreEmptyMessages;
}

@property(nonatomic) _Bool ignoreEmptyMessages; // @synthesize ignoreEmptyMessages=_ignoreEmptyMessages;
- (void)requestRichDownloadOfMessagesWithReferences:(id)arg1;
- (id)messagesWithIds:(id)arg1 onMessage:(CDUnknownBlockType)arg2;
- (id)allMessagesSince:(id)arg1 onMessage:(CDUnknownBlockType)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SGMailServicesDelegate : NSObject <MSSearchDelegate>
{
    NSObject<OS_dispatch_semaphore> *_done;
    CDUnknownBlockType _callback;
    _Bool _ignoreEmpty;
    NSError *_error;
}

@property(readonly, nonatomic) NSError *error; // @synthesize error=_error;
- (void).cxx_destruct;
- (void)search:(id)arg1 didFinishWithError:(id)arg2;
- (_Bool)search:(id)arg1 didFindResults:(id)arg2;
- (void)wait;
- (id)initWithCallback:(CDUnknownBlockType)arg1 ignoreEmpty:(_Bool)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SGMicrodataDocument : NSObject
{
    NSMutableDictionary *_htmlIds;
    NSMutableArray *_items;
}

@property(readonly, nonatomic) NSArray *items; // @synthesize items=_items;
@property(readonly, nonatomic) NSDictionary *htmlIds; // @synthesize htmlIds=_htmlIds;
- (void).cxx_destruct;
- (id)init;
- (void)addItem:(id)arg1;
- (void)setHtmlIdItemScope:(id)arg1 forHtmlId:(id)arg2;
- (id)asJsonLd;
- (id)jsonLdForItem:(id)arg1;

@end

@interface SGMicrodataItemScope : NSObject
{
    NSMutableArray *_itemProps;
}

@property(readonly, nonatomic) NSArray *itemProps; // @synthesize itemProps=_itemProps;
- (void).cxx_destruct;
- (_Bool)isReferencedBy:(id)arg1;
- (void)addItemProp:(id)arg1;
- (id)init;

@end

@interface SGMicrodataItem : SGMicrodataItemScope
{
    NSMutableArray *_itemRef;
    NSSet *_itemType;
}

@property(readonly, nonatomic) NSArray *itemRef; // @synthesize itemRef=_itemRef;
@property(readonly, nonatomic) NSSet *itemType; // @synthesize itemType=_itemType;
- (void).cxx_destruct;
- (id)initWithItemType:(id)arg1 itemRef:(id)arg2;
- (void)resolveItemRefsWithDocument:(id)arg1;

@end

@interface SGMicrodataItemProp : NSObject
{
    NSString *_propertyName;
    NSString *_stringValue;
    SGMicrodataItem *_itemValue;
}

@property(readonly, nonatomic) SGMicrodataItem *itemValue; // @synthesize itemValue=_itemValue;
@property(readonly, nonatomic) NSString *stringValue; // @synthesize stringValue=_stringValue;
@property(readonly, nonatomic) NSString *propertyName; // @synthesize propertyName=_propertyName;
- (void).cxx_destruct;
- (id)initWithName:(id)arg1 value:(id)arg2;

@end

@interface SGMicrodataParser : NSObject
{
    SGMicrodataParserStackItem *_stackItem;
}

+ (id)parse:(id)arg1;
+ (id)whitespaceSplit:(id)arg1;
@property(readonly, nonatomic) SGMicrodataParserStackItem *stackItem; // @synthesize stackItem=_stackItem;
- (void).cxx_destruct;
- (void)textContent:(id)arg1;
- (void)endElement;
- (void)startElement:(id)arg1 withAttributes:(id)arg2;
- (id)initWithDocument:(id)arg1;

@end

@interface SGMicrodataParserStackItem : NSObject
{
    SGMicrodataDocument *_document;
    SGMicrodataParserStackItem *_parent;
    NSArray *_textConsumers;
    NSArray *_itemScopes;
}

@property(readonly) NSArray *itemScopes; // @synthesize itemScopes=_itemScopes;
@property(readonly) NSArray *textConsumers; // @synthesize textConsumers=_textConsumers;
@property(readonly) SGMicrodataParserStackItem *parent; // @synthesize parent=_parent;
@property(readonly) SGMicrodataDocument *document; // @synthesize document=_document;
- (void).cxx_destruct;
- (id)initWithParent:(id)arg1 item:(id)arg2 htmlId:(id)arg3 textConsumer:(id)arg4;
- (id)initWithDocument:(id)arg1;

@end

@interface SGNameInversionPredictor : NSObject
{
    struct __CFDictionary *_tradToTrie;
    NSDictionary *_tradToInversionRate;
    double _confidenceThreshold;
}

+ (_Bool)shouldInvertFirst:(id)arg1 last:(id)arg2;
+ (id)sharedInstance;
- (void).cxx_destruct;
- (_Bool)shouldInvertFirst:(id)arg1 last:(id)arg2 underNamingTradition:(id)arg3;
- (double)inversionRateForNamingTradition:(id)arg1;
- (double)firstNameLikelihood:(id)arg1 underNamingTradition:(id)arg2 default:(double)arg3;
- (struct _CFBurstTrie *)trieForNamingTradition:(id)arg1;
- (float)decodeTriePayload:(unsigned int)arg1;
- (_Bool)shouldInvertFirst:(id)arg1 last:(id)arg2;
- (void)dealloc;
- (id)init;

@end

@interface SGNames : NSObject
{
}

+ (_Bool)shouldInvertOrderOfFirst:(id)arg1 last:(id)arg2;
+ (id)cjkSpacersToWhiteSpace:(id)arg1;
+ (id)cjkSpacerCharacters;
+ (id)nameStringFromEmailAddress:(id)arg1;
+ (id)possibleNameStringFromEmailAddress:(id)arg1;
+ (id)sgNameFromString:(id)arg1;
+ (id)bestName:(id)arg1;
+ (id)surnameFromName:(id)arg1;
+ (_Bool)unnormalizedNamesApproximatelyMatch:(id)arg1 and:(id)arg2 threshold:(double)arg3;
+ (_Bool)unnormalizedNamesApproximatelyMatch:(id)arg1 and:(id)arg2;
+ (_Bool)namesApproximatelyMatch:(id)arg1 and:(id)arg2 threshold:(double)arg3;
+ (_Bool)namesApproximatelyMatch:(id)arg1 and:(id)arg2;
+ (double)unnormalizedNameSimilarity:(id)arg1 and:(id)arg2;
+ (double)nameSimilarity:(id)arg1 and:(id)arg2;
+ (id)handleLastNameFirstOrder:(id)arg1;
+ (id)cleanName:(id)arg1;
+ (id)universalCleanName:(id)arg1;
+ (id)stripAndReturnHonorifics:(id)arg1;
+ (id)stripHonorifics:(id)arg1;
+ (_Bool)isDifficultName:(id)arg1;
+ (_Bool)isCommonVietnameseSurname:(id)arg1;
+ (_Bool)isCommonNameWordUtf8:(const char *)arg1 length:(unsigned long long)arg2;
+ (_Bool)isCommonNameWord:(id)arg1;
+ (void)initialize;

@end

@interface SGNicknames : NSObject
{
}

+ (id)nicknamesForName:(id)arg1;

@end

@interface SGNotifications : NSObject
{
}

+ (void)notifyGlobalChanges;

@end

@interface SGOffsetDictionary : NSObject
{
    unsigned short _count;
    CDStruct_fcaecfc9 *_carrierEntries;
    CDStruct_fcaecfc9 *_mruCarrierEntry;
    unsigned long long _payloadOffset;
    unsigned long long _totalPayloadSize;
    unsigned long long _sizeFactor;
}

- (id)fullMappingFromFile:(id)arg1;
- (id)stringValueForKey:(const char *)arg1 fromFile:(id)arg2;
- (long long)payloadCountForKey:(const char *)arg1;
- (unsigned long long)seekLocationForKey:(const char *)arg1;
- (unsigned long long)payloadLengthForKey:(const char *)arg1;
- (CDStruct_fcaecfc9 *)carrierEntryForKey:(const char *)arg1;
- (void)dealloc;
- (id)initWithFilehandle:(id)arg1 sizeFactor:(unsigned long long)arg2 keyLength:(int)arg3 singleByteOffset:(_Bool)arg4;

@end

@interface SGOrigin (Internal)
+ (id)originForDuplicateKey:(id)arg1 sourceKey:(id)arg2 store:(id)arg3;
- (void)addDetailsFromOriginatingContactEntity:(id)arg1 store:(id)arg2;
- (void)addDetailsFromOriginatingGenericEntity:(id)arg1;
@end

@interface SGParallelDissector : NSObject <SGPipelineDissector>
{
    NSArray *_dissectors;
}

+ (id)parallelDissectorWithDissectors:(id)arg1;
- (void).cxx_destruct;
- (void)dissect:(id)arg1;
- (id)initWithDissectors:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SGPatterns : NSObject
{
    NSString *_classKey;
    NSArray *_langResolutionOrder;
    NSCache *_compiledRegexes2;
    NSString *_language;
    NSMutableSet *_regexpKeysSeen;
    int _localLanguageVersion;
}

+ (id)fallbackLanguageCodeForCountryCode:(id)arg1;
+ (id)countryCodeFromLanguageCode:(id)arg1;
+ (id)languagePartOfLanguageCode:(id)arg1;
+ (void)pauseCacheEvictionTemporarily;
+ (void)_reinstateDeath;
+ (void)clearAllRegexCaches;
+ (void)useAllLanguagesAtOnce:(_Bool)arg1;
+ (id)patternsForClass:(Class)arg1;
+ (void)forceLanguageTo:(id)arg1;
+ (void)changeLanguageOrPatternData;
+ (void)initialize;
- (void).cxx_destruct;
- (void)_becomeImmuneToDeath;
- (void)_clearRegexCache;
- (id)regex2ForKey:(id)arg1;
- (id)rawValueForKey:(id)arg1;
- (id)rawValuesForKey:(id)arg1;
- (id)_calculateLangResolutionOrder;
- (void)reset;
- (id)init;

@end

@interface SGPipeline : NSObject <SGPipelineDissector>
{
    NSArray *_dissectors;
    NSObject<OS_dispatch_queue> *_queue;
    NSObject<OS_dispatch_semaphore> *_semaphore;
    NSObject<OS_dispatch_queue> *_andThenQueue;
}

+ (id)quotedRegionPipeline;
+ (id)fullPipeline;
+ (id)customPipeline:(id)arg1;
- (void).cxx_destruct;
- (void)dissectEntity:(id)arg1 andStore:(id)arg2;
- (void)dissectEntity:(id)arg1 andStore:(id)arg2 andThen:(CDUnknownBlockType)arg3;
- (void)dissect:(id)arg1 andStore:(id)arg2;
- (void)dissect:(id)arg1 andThen:(CDUnknownBlockType)arg2;
- (void)dissect:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SGPipelineEntity : SGEntity
{
    NSMutableArray *_enrichments;
    NSString *_plainTextContentCache;
    _Bool _plainTextContentCacheGenerated;
    struct _opaque_pthread_mutex_t _plainTextContentCacheLock;
    _Bool _fullDownloadRequested;
    CDStruct_f96224e3 _inhumanFeatures;
    NSIndexSet *_plainTextQuotedRegions;
    NSIndexSet *_plainTextTabularRegions;
    struct __DDResult *_dataDetectorsSignature;
    NSArray *_plainTextLines;
    unsigned long long *_htmlOffsets;
    NSArray *_plainTextDetectedData;
    NSMutableDictionary *_emailToCanonicalEmailCache;
    NSArray *_headers;
    struct _NSRange _plainTextSigRange;
}

+ (id)emailAddress:(id)arg1 forIdentity:(id)arg2 parent:(id)arg3 curated:(_Bool)arg4 context:(id)arg5;
+ (id)phoneNumber:(id)arg1 forIdentity:(id)arg2 parent:(id)arg3 curated:(_Bool)arg4 context:(id)arg5;
+ (id)address:(id)arg1 forIdentity:(id)arg2 parent:(id)arg3 curated:(_Bool)arg4 context:(id)arg5;
@property(readonly, nonatomic) NSArray *headers; // @synthesize headers=_headers;
@property(readonly, nonatomic) NSMutableDictionary *emailToCanonicalEmailCache; // @synthesize emailToCanonicalEmailCache=_emailToCanonicalEmailCache;
@property(retain, nonatomic) NSArray *plainTextDetectedData; // @synthesize plainTextDetectedData=_plainTextDetectedData;
@property(readonly, nonatomic) unsigned long long *htmlOffsets; // @synthesize htmlOffsets=_htmlOffsets;
@property(readonly, nonatomic) NSArray *plainTextLines; // @synthesize plainTextLines=_plainTextLines;
@property(nonatomic) struct __DDResult *dataDetectorsSignature; // @synthesize dataDetectorsSignature=_dataDetectorsSignature;
@property(nonatomic) struct _NSRange plainTextSigRange; // @synthesize plainTextSigRange=_plainTextSigRange;
@property(retain, nonatomic) NSIndexSet *plainTextTabularRegions; // @synthesize plainTextTabularRegions=_plainTextTabularRegions;
@property(retain, nonatomic) NSIndexSet *plainTextQuotedRegions; // @synthesize plainTextQuotedRegions=_plainTextQuotedRegions;
- (void).cxx_destruct;
- (id)debugRegions;
- (id)description;
- (id)templateShortName;
- (_Bool)isInhuman;
@property(readonly, getter=hasFullDownloadBeenRequested) _Bool fullDownloadRequested;
- (void)requestFullDownload;
- (void)chopOffContentAfterIndex:(unsigned long long)arg1;
- (void)chopOffContentBeforeIndex:(unsigned long long)arg1;
@property(readonly, nonatomic) CDStruct_f96224e3 *inhumanFeatures;
@property(readonly, nonatomic) NSString *plainTextContent;
- (void)enumeratePlainTextLines:(CDUnknownBlockType)arg1;
- (void)setPlainTextLines:(id)arg1 utf8Offsets:(id)arg2;
- (void)enumeratePeople:(CDUnknownBlockType)arg1;
- (_Bool)isPerson;
@property(readonly, nonatomic) NSArray *emailAddresses;
@property(readonly, nonatomic) NSArray *addresses;
@property(readonly, nonatomic) NSArray *phoneNumbers;
- (id)contactDetailsWithType:(unsigned long long)arg1;
@property(readonly, nonatomic) NSString *authorEmail;
- (void)addParticipant:(id)arg1 type:(unsigned int)arg2;
- (void)addParticipants:(id)arg1 type:(unsigned int)arg2;
- (void)addCuratedEmailAddress:(id)arg1;
- (void)addDetectedEmailAddress:(id)arg1 forIdentity:(id)arg2 context:(id)arg3;
- (void)addCuratedPhoneNumber:(id)arg1;
- (void)addDetectedPhoneNumber:(id)arg1 forIdentity:(id)arg2 context:(id)arg3;
- (void)addCuratedPostalAddress:(id)arg1;
- (void)addDetectedPostalAddress:(id)arg1 forIdentity:(id)arg2 context:(id)arg3;
- (void)addDetection:(id)arg1 forIdentity:(id)arg2;
- (void)addEnrichment:(id)arg1;
@property(readonly, nonatomic) NSArray *enrichments;
- (void)dealloc;
- (id)initWithCuratedContactWithABRecordID:(int)arg1 sourceKey:(id)arg2 name:(id)arg3 creationTimestamp:(id)arg4 lastModifiedTimestamp:(id)arg5 emailAddresses:(id)arg6 phoneNumbers:(id)arg7 postalAddresses:(id)arg8;
- (id)initWithContactDetailWithKey:(id)arg1 type:(unsigned long long)arg2 curated:(_Bool)arg3 parent:(id)arg4 value:(id)arg5 context:(id)arg6;
- (id)initWithSimpleCalendarEvent:(id)arg1 fromSource:(id)arg2;
- (id)initWithEmailMessage:(id)arg1 fromSource:(id)arg2;
- (id)initWithPseudoContactWithKey:(id)arg1 parent:(id)arg2 name:(id)arg3;
- (id)initWithDuplicateKey:(id)arg1 title:(id)arg2 parent:(id)arg3;
- (id)initWithParent:(id)arg1;
- (id)initWithDuplicateKey:(id)arg1 title:(id)arg2;
- (id)initPrivately;
- (id)init;

@end

@interface SGPlainTextContentCursor : NSObject
{
    NSIndexSet *_quoted;
    struct _NSRange _sig;
    struct __CFString *_str;
    unsigned long long _len;
    struct {
        unsigned short buffer[64];
        struct __CFString *theString;
        unsigned short *directUniCharBuffer;
        char *directCStringBuffer;
        struct {
            long long location;
            long long length;
        } rangeToBuffer;
        long long bufferedRangeStart;
        long long bufferedRangeEnd;
    } _ib;
    unsigned long long _pos;
}

@property(nonatomic) unsigned long long pos; // @synthesize pos=_pos;
- (void).cxx_destruct;
- (void)seekToEnd;
- (void)seekToStart;
- (_Bool)backwardToString:(id)arg1 consume:(_Bool)arg2;
- (_Bool)forwardToString:(id)arg1 consume:(_Bool)arg2;
- (void)backwardWhile:(CDUnknownBlockType)arg1;
- (void)forwardWhile:(CDUnknownBlockType)arg1;
- (_Bool)backward;
- (_Bool)forward;
- (void)dealloc;
- (id)initWithEntity:(id)arg1;

@end

@interface SGPreferenceManager : NSObject
{
    NSUserDefaults *_suggestionsDefaults;
    NSObject<OS_dispatch_queue> *_settingsUpdateQueue;
}

+ (id)defaultManager;
- (void).cxx_destruct;
- (void)registerBlock:(CDUnknownBlockType)arg1;
- (id)init;

@end

@interface SGPreferenceStorage : NSObject
{
}

+ (id)defaultsForTests;
+ (void)setSuggestionsEnabledForTests:(_Bool)arg1;
+ (id)defaults;
+ (void)removeDeprecatedDefaults;
+ (void)registerBlockOnSuggestionsSettingsChange:(CDUnknownBlockType)arg1;
+ (void)setReharvestKey:(_Bool)arg1;
+ (_Bool)showPastEvents;
+ (_Bool)reharvestKey;
+ (_Bool)suggestionsEnabled;
+ (long long)suggestionsLogLevel;
+ (void)resetAllPreferences;

@end

@interface SGPreparedStatement : NSObject <NSCopying>
{
    struct sqlite3_stmt *_stmt;
}

@property(readonly, nonatomic) struct sqlite3_stmt *stmt; // @synthesize stmt=_stmt;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithStatementPointer:(struct sqlite3_stmt *)arg1;

@end

@interface SGPseudoContactKey : NSObject <SGEntityKey>
{
    SGIdentityKey *_identityKey;
}

+ (_Bool)isSupportedEntityType:(long long)arg1;
@property(readonly, nonatomic) SGIdentityKey *identityKey; // @synthesize identityKey=_identityKey;
- (void).cxx_destruct;
@property(readonly, copy) NSString *description;
- (_Bool)isEqualToPseudoContactKey:(id)arg1;
- (_Bool)isEqual:(id)arg1;
@property(readonly) unsigned long long hash;
- (id)serialize;
- (id)initWithSerialized:(id)arg1;
- (id)initWithIdentityKey:(id)arg1;
- (id)initWithNormalizedEmail:(id)arg1;
- (id)initWithEmail:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

@interface SGPseudoEventKey : NSObject <SGEntityKey>
{
    NSString *_serialized;
    NSString *_domain;
    NSString *_groupId;
}

+ (_Bool)isSupportedEntityType:(long long)arg1;
@property(readonly, nonatomic) NSString *groupId; // @synthesize groupId=_groupId;
@property(readonly, nonatomic) NSString *domain; // @synthesize domain=_domain;
- (void).cxx_destruct;
@property(readonly, copy) NSString *description;
- (id)serialize;
@property(readonly) unsigned long long hash;
- (_Bool)isEqualToPseudoEventKey:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (id)initWithGloballyUniqueId:(id)arg1;
- (id)initWithDomain:(id)arg1 groupId:(id)arg2;
- (id)initWithSerialized:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

@interface SGRTCLogging : NSObject <NSCoding>
{
    NSString *_path;
    NSMutableArray *_loggedEvents;
    struct _opaque_pthread_mutex_t _lock;
    NSTimer *_persistenceTimer;
    NSThread *_persistenceTimerThread;
    double _storeCreationDate;
    NSNumber *_version;
}

+ (id)inMemoryLogger;
+ (_Bool)createEmptyFileAtPath:(id)arg1;
+ (id)defaultLogger;
+ (id)defaultPath;
- (void).cxx_destruct;
- (id)metricNameForShortName:(id)arg1;
- (id)shortNameForMetricNamed:(id)arg1;
- (id)getLoggingString;
- (int)version;
- (void)enumerateLoggedEvents:(CDUnknownBlockType)arg1;
- (double)storeAge;
- (_Bool)storeToDisk;
- (_Bool)resetLogs;
- (_Bool)sendLogsUsingRTC;
- (void)logExceptionFromTemplate:(id)arg1;
- (void)logEventResponseWithTemplateShortName:(id)arg1 latencyInMs:(unsigned long long)arg2;
- (void)persistLogs;
- (void)updateAndScheduleDiskWrite;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)loggedEvents;
- (void)dealloc;
- (id)initWithFilename:(id)arg1;
- (id)initWithInMemoryStore;
- (id)init;

@end

@interface SGRawKey : NSObject <SGEntityKey>
{
    NSString *_seralized;
}

+ (_Bool)isSupportedEntityType:(long long)arg1;
- (void).cxx_destruct;
@property(readonly) unsigned long long hash;
- (_Bool)isEqualToRawKey:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (id)serialize;
- (id)initWithSerialized:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;

@end

@interface SGRe2 : NSObject
{
    char *_patternString;
    struct RE2 *_pattern;
    NSArray *_subregexps;
    _Bool _isTrivial;
    long long _isTrivialOnceToken;
}

+ (id)convertPerlStyleLiteralToRegexpString:(id)arg1;
- (void).cxx_destruct;
- (id)traceMatchesInString:(id)arg1;
- (id)description;
- (_Bool)_enumerateMatchesInUtf8:(const char *)arg1 fromString:(id)arg2 ngroups:(unsigned long long)arg3 block:(CDUnknownBlockType)arg4;
- (void)enumerateMatchesInUtf8:(const char *)arg1 fromString:(id)arg2 ngroups:(unsigned long long)arg3 block:(CDUnknownBlockType)arg4;
- (void)enumerateMatchesInString:(id)arg1 ngroups:(unsigned long long)arg2 block:(CDUnknownBlockType)arg3;
- (_Bool)matchesUtf8:(const char *)arg1;
- (_Bool)matchesString:(id)arg1;
- (_Bool)existsInUtf8:(const char *)arg1;
- (_Bool)existsInString:(id)arg1;
- (_Bool)isTrivial;
- (void)dealloc;
- (id)initWithSubregexps:(id)arg1;
- (id)initWithRegexp:(id)arg1;

@end

@interface SGReplyParserDissector : NSObject <SGPipelineDissector>
{
}

- (void)dissect:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SGReverseTemplateJS : NSObject <SGReverseTemplateJS>
{
    JSVirtualMachine *_jsVM;
    NSMutableArray *_memoryMappedFiles;
    JSContext *_jsContext;
    SGReverseTemplatesJSDataDetectors *_dd;
    SGAsset *_asset;
    NSURL *_assetPath;
}

- (void).cxx_destruct;
- (void)emailToOutput:(id)arg1 reply:(CDUnknownBlockType)arg2;
- (void)shouldDownloadFull:(id)arg1 reply:(CDUnknownBlockType)arg2;
- (id)emailToOutput:(id)arg1 setForExceptionTemplates:(id)arg2;
- (_Bool)shouldDownloadFull:(id)arg1;
- (void)setAssetPath:(id)arg1 locale:(id)arg2;
- (id)loadJSFromASCIIFile:(id)arg1;
- (void)resetVM;
- (void)killVM;
- (id)init;

@end

@interface SGReverseTemplatesJSDataDetectors : NSObject
{
    NSMutableDictionary *_scanners;
    NSSet *_availLocales;
    NSDateFormatter *_dateFormatter;
    NSDateFormatter *_naiveDateFormatter;
    NSDateFormatter *_noTimeFormatter;
}

- (void).cxx_destruct;
- (id)runDataDetectors:(id)arg1 locale:(id)arg2 epoch:(double)arg3;
- (void)dealloc;
- (id)init;

@end

@interface SGScales : NSObject
{
    NSMutableDictionary *_series;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (id)description;
- (void)enumerateStats:(CDUnknownBlockType)arg1;
- (void)recordTime:(double)arg1 forKey:(id)arg2;
- (void)reset;
- (id)init;

@end

@interface SGScalesSeriesInfo : NSObject
{
    double _n;
    double _mean;
    double _m2;
}

@property(nonatomic) double m2; // @synthesize m2=_m2;
@property(nonatomic) double mean; // @synthesize mean=_mean;
@property(nonatomic) double n; // @synthesize n=_n;

@end

@interface SGSeekableData : NSObject <SGSeekable>
{
    NSData *_data;
    const void *_bytes;
    unsigned long long _offsetInFile;
}

@property(readonly) unsigned long long offsetInFile; // @synthesize offsetInFile=_offsetInFile;
- (void).cxx_destruct;
- (void)seekToFileOffset:(unsigned long long)arg1;
- (const void *)dataOfLength:(unsigned long long)arg1;
- (id)initWithMemoryMappedURL:(id)arg1;
- (id)initWithMemoryMappedPath:(id)arg1;
- (id)initWithData:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SGSignatureDissector : NSObject <SGPipelineDissector>
{
}

+ (void)initialize;
- (_Bool)shouldIgnoreSignature:(id)arg1;
- (void)dissect:(id)arg1;
- (struct _NSRange)miniSignatureRange:(id)arg1;
- (struct _NSRange)hmmSignatureRangeWithContent:(id)arg1 detectedData:(id)arg2 quotedRegions:(id)arg3;
- (struct _NSRange)hmmSignatureRange:(id)arg1;
- (struct _NSRange)hmmPlausibleSignatureRange:(id)arg1;
- (struct _NSRange)findSignaturePrefix:(id)arg1;
- (struct _NSRange)findValediction:(id)arg1;
- (id)findSignaturePrefixesInEntity:(id)arg1 withSignaturePrefixes:(id)arg2;
- (id)findValedictionCommencedSignatureRanges:(id)arg1;
- (struct _NSRange)signatureRange:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SGSimpleParticipant : NSObject <NSCopying>
{
    unsigned int _role;
    SGIdentityKey *_identityKey;
}

+ (id)participantWithKey:(id)arg1 roleType:(unsigned int)arg2;
@property(retain, nonatomic) SGIdentityKey *identityKey; // @synthesize identityKey=_identityKey;
@property(nonatomic) unsigned int role; // @synthesize role=_role;
- (void).cxx_destruct;
- (_Bool)isEqualToSimpleParticipant:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithKey:(id)arg1 roleType:(unsigned int)arg2;

@end

@interface SGSqlEntityStore : NSObject
{
    SGSqliteDatabase *_db;
    NSString *_path;
    SGSuggestHistory *_history;
    _Bool _identityStoreDirty;
}

+ (id)sqlStoreWithFilename:(id)arg1;
+ (void)deletePreparedSqlStoreInMemory;
+ (void)prepareSqlStoreInMemoryByClearingExistingStore:(id)arg1;
+ (void)prepareSqlStoreInMemory;
+ (id)sqlStoreInMemory;
+ (id)defaultStore;
+ (id)defaultPath;
- (void).cxx_destruct;
- (id)duplicateKeysMatchingAnyTag:(id)arg1;
- (_Bool)isLocked;
- (void)unlock;
- (void)lock;
- (void)deleteEntitiesByDuplicateKey:(id)arg1;
- (id)confirmedFieldValuesForEntity:(id)arg1;
- (id)recordIdForKey:(id)arg1;
- (id)loadEventByRecordId:(id)arg1;
- (id)loadEventByKey:(id)arg1;
- (id)suggestEventsStartingAt:(double)arg1 endingAt:(double)arg2 limitTo:(unsigned long long)arg3 additionalWhereClause:(id)arg4 options:(unsigned int)arg5 onPrep:(CDUnknownBlockType)arg6;
- (id)suggestEventsStartingAt:(double)arg1 endingAt:(double)arg2 prefix:(id)arg3 limitTo:(unsigned long long)arg4;
- (id)suggestEventsStartingAt:(double)arg1 endingAt:(double)arg2 limitTo:(unsigned long long)arg3;
- (id)suggestEventsStartingAt:(double)arg1 endingAt:(double)arg2 prefix:(id)arg3 limitTo:(unsigned long long)arg4 options:(unsigned int)arg5;
- (id)suggestEventsStartingAt:(double)arg1 endingAt:(double)arg2 limitTo:(unsigned long long)arg3 options:(unsigned int)arg4;
- (id)_filterOutAllButAcceptedWithUpdatedFields:(id)arg1;
- (id)_filterOutNotActedOnEvents:(id)arg1;
- (id)_filterOutActedOnEvents:(id)arg1;
- (id)_filterOutCancelledEvents:(id)arg1;
- (id)_filterOutOlderVersionsOfPseudoEvents:(id)arg1;
- (id)_filterOutUndisplayableEntities:(id)arg1;
- (id)_eventFromSqlResult:(struct sqlite3_stmt *)arg1;
- (id)loadContactDetailsForRecordId:(id)arg1 type:(unsigned long long)arg2;
- (id)loadContactDetailsWithWhereClause:(id)arg1 onPrep:(CDUnknownBlockType)arg2 type:(unsigned long long)arg3 dedupeAgainst:(id)arg4;
- (id)suggestContactByRecordId:(id)arg1;
- (id)loadContactByRecordId:(id)arg1;
- (id)suggestContactByKey:(id)arg1;
- (id)suggestContactsByMasterEntityQuery:(id)arg1 bindings:(CDUnknownBlockType)arg2;
- (id)suggestContactByMasterEntityId:(long long)arg1;
- (id)displayableEntities:(id)arg1;
- (id)pinnedEntities:(id)arg1;
- (_Bool)contactEntityIsActedOn:(id)arg1;
- (_Bool)entityIsDisplayable:(id)arg1;
- (id)_sanitizeWildcard:(id)arg1;
- (id)_sanitizePrefix:(id)arg1;
- (_Bool)_removeEntitiesWhere:(id)arg1 onPrep:(CDUnknownBlockType)arg2;
- (void)_deleteTimeRangesByEntityId:(long long)arg1;
- (long long)_writeEntityToDb:(id)arg1;
- (void)_addIndexingTagsTo:(id)arg1;
- (long long)writeEntityFields:(id)arg1;
- (void)writeEntity:(id)arg1;
- (id)loadEntitiesByEntityKey:(id)arg1 entityType:(long long)arg2 resolveDuplicates:(CDUnknownBlockType)arg3;
- (id)loadEntityByKey:(id)arg1;
- (id)loadEntityByRecordId:(id)arg1;
- (void)clearAllTables;
- (void)createTables;
- (_Bool)clearDatabase;
- (long long)schemaVersion;
- (long long)latestSchemaVersion;
- (id)historyForTesting;
- (id)dbHandleForTesting;
- (id)initWithFilename:(id)arg1;
- (id)selectEntityQuery:(id)arg1;
- (unsigned long long)entityCount;
- (id)allPseudoContacts;
- (id)allCuratedContacts;
- (id)allContactsWithEntityType:(unsigned long long)arg1;
- (id)entityFromSqlResult:(struct sqlite3_stmt *)arg1;

@end

@interface SGSqliteDatabase : NSObject
{
    struct sqlite3 *_db;
    struct _opaque_pthread_mutex_t _lock;
    int _transactionDepth;
    NSString *_filename;
    _Bool _enabled;
    NSCache *_queryCache;
}

+ (id)sqliteDatabaseInMemoryWithError:(id *)arg1;
+ (id)sqliteDatabaseWithFilename:(id)arg1 error:(id *)arg2;
- (void).cxx_destruct;
- (_Bool)isEnabled;
- (void)disableDb;
- (void)enableDb;
- (id)description;
- (void)transaction:(CDUnknownBlockType)arg1;
- (_Bool)prepAndRunQuery:(id)arg1 onPrep:(CDUnknownBlockType)arg2 onRow:(CDUnknownBlockType)arg3 onError:(CDUnknownBlockType)arg4;
- (void)prepQuery:(id)arg1 onPrep:(CDUnknownBlockType)arg2 onError:(CDUnknownBlockType)arg3;
- (_Bool)runQuery:(struct sqlite3_stmt *)arg1 onRow:(CDUnknownBlockType)arg2;
- (_Bool)runQuery:(struct sqlite3_stmt *)arg1 onRow:(CDUnknownBlockType)arg2 onError:(CDUnknownBlockType)arg3;
- (id)errorMessage:(int)arg1;
@property(readonly, nonatomic) struct sqlite3 *handle;
- (void)dealloc;
- (id)initWithFilename:(id)arg1 error:(id *)arg2;

@end

@interface SGStorageContact : NSObject
{
    NSMutableSet *_profiles;
    long long detectedPhonesOnce;
    NSArray *internalDetectedPhones;
    long long detectedAddressesOnce;
    NSArray *internalDetectedAddresses;
    long long detectedEmailAddressesOnce;
    NSArray *internalDetectedEmailAddresses;
    long long _masterEntityId;
    SGRecordId *_recordId;
}

+ (id)mergeAll:(id)arg1;
+ (id)contactWithMasterEntityId:(long long)arg1;
+ (id)contactFromContactEntity:(id)arg1;
@property(readonly, nonatomic) SGRecordId *recordId; // @synthesize recordId=_recordId;
@property(readonly, nonatomic) long long masterEntityId; // @synthesize masterEntityId=_masterEntityId;
- (void).cxx_destruct;
- (id)convertToContact:(id)arg1;
- (id)loadEmailAddressDetailsFrom:(id)arg1;
- (id)loadAddressDetailsFrom:(id)arg1;
- (id)loadPhoneDetailsFrom:(id)arg1;
- (void)reload;
- (void)merge:(id)arg1;
- (_Bool)canMerge:(id)arg1;
@property(readonly, nonatomic) NSString *name;
- (id)allNames;
- (id)profiles;
- (void)addProfile:(id)arg1;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqualToStorageContact:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (id)init;

@end

@interface SGStorageEvent : NSObject
{
    _Bool _curated;
    unsigned int _state;
    SGDuplicateKey *_duplicateKey;
    NSString *_sourceKey;
    NSString *_content;
    NSString *_title;
    double _creationTimestamp;
    double _lastModifiedTimestamp;
    SGSimpleTimeRange *_when;
    NSArray *_locations;
    NSSet *_tags;
    NSData *_structuredData;
}

+ (id)storageEventFromEntity:(id)arg1 usingStore:(id)arg2;
@property(readonly, nonatomic) _Bool curated; // @synthesize curated=_curated;
@property(readonly, nonatomic) unsigned int state; // @synthesize state=_state;
@property(readonly, nonatomic) NSData *structuredData; // @synthesize structuredData=_structuredData;
@property(readonly, nonatomic) NSSet *tags; // @synthesize tags=_tags;
@property(readonly, nonatomic) NSArray *locations; // @synthesize locations=_locations;
@property(readonly, nonatomic) SGSimpleTimeRange *when; // @synthesize when=_when;
@property(readonly, nonatomic) double lastModifiedTimestamp; // @synthesize lastModifiedTimestamp=_lastModifiedTimestamp;
@property(readonly, nonatomic) double creationTimestamp; // @synthesize creationTimestamp=_creationTimestamp;
@property(readonly, nonatomic) NSString *title; // @synthesize title=_title;
@property(readonly, nonatomic) NSString *content; // @synthesize content=_content;
@property(readonly, nonatomic) NSString *sourceKey; // @synthesize sourceKey=_sourceKey;
@property(readonly, nonatomic) SGDuplicateKey *duplicateKey; // @synthesize duplicateKey=_duplicateKey;
- (void).cxx_destruct;
- (id)fieldsToSaveOnConfirmation;
- (id)extraKeyTag;
- (_Bool)isAllDay;
- (_Bool)isCancelled;
- (_Bool)isFromSuggestions;
- (_Bool)isFromDataDetectors;
- (id)initWithDuplicateKey:(id)arg1 sourceKey:(id)arg2 content:(id)arg3 title:(id)arg4 creationTimestamp:(double)arg5 lastModifiedTimestamp:(double)arg6 tags:(id)arg7 when:(id)arg8 locations:(id)arg9 structuredData:(id)arg10 state:(unsigned int)arg11 curated:(_Bool)arg12;
- (id)convertToEvent:(id)arg1;

@end

@interface SGStorageLocation : NSObject <NSCopying, NSSecureCoding>
{
    unsigned long long _locationType;
    NSString *_label;
    NSString *_address;
    double _latitude;
    double _longitude;
    double _accuracy;
    double _quality;
}

+ (_Bool)supportsSecureCoding;
@property(readonly, nonatomic) double quality; // @synthesize quality=_quality;
@property(readonly, nonatomic) double accuracy; // @synthesize accuracy=_accuracy;
@property(readonly, nonatomic) double longitude; // @synthesize longitude=_longitude;
@property(readonly, nonatomic) double latitude; // @synthesize latitude=_latitude;
@property(readonly, nonatomic) NSString *address; // @synthesize address=_address;
@property(readonly, nonatomic) NSString *label; // @synthesize label=_label;
@property(readonly, nonatomic) unsigned long long locationType; // @synthesize locationType=_locationType;
- (void).cxx_destruct;
- (id)description;
- (id)convertToLocation;
- (long long)compare:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEqualToStorageLocation:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithType:(unsigned long long)arg1 label:(id)arg2 address:(id)arg3 latitude:(double)arg4 longitude:(double)arg5 accuracy:(double)arg6 quality:(double)arg7;
- (id)initWithType:(unsigned long long)arg1 label:(id)arg2 latitude:(double)arg3 longitude:(double)arg4 accuracy:(double)arg5 quality:(double)arg6;
- (id)initWithType:(unsigned long long)arg1 label:(id)arg2 address:(id)arg3 accuracy:(double)arg4 quality:(double)arg5;

@end

@interface SGStorageParticipant : NSObject
{
    unsigned int _role;
    SGStorageContact *_contact;
    SGIdentityKey *_participatingIdentity;
}

+ (id)participantWithContact:(id)arg1 participatingIdentity:(id)arg2 roleType:(unsigned int)arg3;
@property(retain, nonatomic) SGIdentityKey *participatingIdentity; // @synthesize participatingIdentity=_participatingIdentity;
@property(retain, nonatomic) SGStorageContact *contact; // @synthesize contact=_contact;
@property(nonatomic) unsigned int role; // @synthesize role=_role;
- (void).cxx_destruct;

@end

@interface SGSuggestHistory : NSObject
{
    NSUbiquitousKeyValueStore *_backingKVStore;
    NSMutableSet *_eventHashes;
    NSMutableSet *_contactHashes;
    NSMutableSet *_dontUpdate;
    struct _opaque_pthread_mutex_t _lock;
}

+ (void)reset;
+ (id)hashesForEvent:(id)arg1;
+ (id)deviceSalt;
+ (id)identitySalt;
+ (id)sharedSuggestHistory;
- (void).cxx_destruct;
- (void)rejectFieldValuesForStorageEvent:(id)arg1;
- (void)addFieldValues:(id)arg1 forStorageEvent:(id)arg2;
- (_Bool)hasStorageEventWithRejectedFields:(id)arg1;
- (_Bool)hasStorageEvent:(id)arg1;
- (_Bool)hasEventWithRejectedFields:(id)arg1;
- (_Bool)hasFieldValues:(id)arg1 forStorageEvent:(id)arg2;
- (_Bool)hasFieldValues:(id)arg1 forEvent:(id)arg2;
- (_Bool)hasContact:(id)arg1 usingStore:(id)arg2;
- (_Bool)hasContactDetail:(id)arg1 forContact:(id)arg2 usingStore:(id)arg3;
- (_Bool)isValidSuggestion:(id)arg1;
- (_Bool)isUpdatableEvent:(id)arg1;
- (_Bool)isUpdatableContact:(id)arg1;
- (_Bool)hasEvent:(id)arg1;
- (_Bool)hasContact:(id)arg1;
- (void)rejectEvent:(id)arg1;
- (void)confirmEvent:(id)arg1;
- (void)rejectContact:(id)arg1;
- (void)handleSyncedDataChanged:(id)arg1;
- (void)reset;
- (id)hashesForContact:(id)arg1;
- (id)keysForContact:(id)arg1;
- (void)pushAll;
- (void)setInternalStateAccordingToKVS;
- (void)pushDontUpdate;
- (void)pushContacts;
- (void)pushEvents;
- (id)description;
- (void)dealloc;
- (id)setForKey:(id)arg1;
- (id)deviceSalt;
- (id)identitySalt;
- (id)init;

@end

@interface SGThreadParser : NSObject
{
}

+ (void)enumeratePreviousMessages:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
+ (void)enumeratePreviousMessages:(id)arg1 inEntity:(id)arg2 usingBlock:(CDUnknownBlockType)arg3;
+ (id)nextMessage:(id)arg1;
+ (id)nextMessage:(id)arg1 entity:(id)arg2;
+ (id)emailFrom:(id)arg1;
+ (id)emailFrom:(id)arg1 entity:(id)arg2;
+ (id)stripChevrons:(id)arg1;
+ (void)initialize;

@end

@interface SGTinyLinusMeData : NSObject
{
    NSString *_firstName;
    NSString *_lastName;
    NSString *_compositeName;
    NSSet *_normalizedPhones;
    NSSet *_normalizedEmails;
    NSSet *_addresses;
}

+ (void)clearCache;
+ (id)fetchWithAddressBook:(void *)arg1;
+ (id)fetch;
@property(readonly, nonatomic) NSSet *addresses; // @synthesize addresses=_addresses;
@property(readonly, nonatomic) NSSet *normalizedEmails; // @synthesize normalizedEmails=_normalizedEmails;
@property(readonly, nonatomic) NSSet *normalizedPhones; // @synthesize normalizedPhones=_normalizedPhones;
@property(readonly, nonatomic) NSString *compositeName; // @synthesize compositeName=_compositeName;
@property(readonly, nonatomic) NSString *lastName; // @synthesize lastName=_lastName;
@property(readonly, nonatomic) NSString *firstName; // @synthesize firstName=_firstName;
- (void).cxx_destruct;

@end

@interface SGTokenizer : NSObject
{
}

+ (id)tokenize:(id)arg1;

@end

@interface SGWeakAsset : NSObject
{
    SGAsset *_asset;
}

@property(readonly) __weak SGAsset *asset; // @synthesize asset=_asset;
- (void).cxx_destruct;
- (id)initWithAsset:(id)arg1;

@end

@interface SGWords : NSObject
{
}

+ (id)normalizeWord:(id)arg1;

@end

@interface Slice : NSObject
{
    struct {
        unsigned short category;
        unsigned short subtype;
    } _type;
    unsigned long long _start;
    unsigned long long _end;
}

+ (id)sliceWithType:(CDStruct_d65e47c4)arg1 range:(struct _NSRange)arg2;
+ (id)sliceWithType:(CDStruct_d65e47c4)arg1 start:(unsigned long long)arg2 end:(unsigned long long)arg3;
@property(readonly, nonatomic) unsigned long long end; // @synthesize end=_end;
@property(readonly, nonatomic) unsigned long long start; // @synthesize start=_start;
@property(readonly, nonatomic) CDStruct_d65e47c4 type; // @synthesize type=_type;
- (id)description;
- (long long)compare:(id)arg1;
@property(readonly, nonatomic) struct _NSRange range;
- (id)initWithType:(CDStruct_d65e47c4)arg1 range:(struct _NSRange)arg2;
- (id)initWithType:(CDStruct_d65e47c4)arg1 start:(unsigned long long)arg2 end:(unsigned long long)arg3;

@end

