//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CGAffineTransform {
    double a;
    double b;
    double c;
    double d;
    double tx;
    double ty;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint _field1;
    struct CGSize _field2;
};

struct CGSize {
    double _field1;
    double _field2;
};

struct FBProcessTimes {
    double beginUserCPUElapsedTime;
    double beginSystemCPUElapsedTime;
    double beginIdleCPUElapsedTime;
    double beginApplicationCPUElapsedTime;
};

#pragma mark Typedef'd Structures

typedef struct {
    unsigned int _field1[8];
} CDStruct_6ad76789;

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard
// UUID: A306300D-36C1-382A-BC9B-0E0D65E39092
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 120.1.0.0.0
//            Minimum iOS version: 8.0.0
//                    SDK version: 8.0.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol BKSProcessDelegate <NSObject>
- (void)process:(BKSProcess *)arg1 isBeingDebugged:(_Bool)arg2;
- (void)processWillExpire:(BKSProcess *)arg1;
- (void)process:(BKSProcess *)arg1 taskStateDidChange:(int)arg2;
@end

@protocol BKSSystemApplicationDelegate <NSObject>
+ (_Bool)systemApplicationIsAliveForWatchdog:(BKSSystemApplication *)arg1;
+ (_Bool)systemApplicationShouldWaitForDataMigration:(BKSSystemApplication *)arg1;
@end

@protocol BSTransactionObserver <NSObject>

@optional
- (void)transactionDidComplete:(BSTransaction *)arg1;
@end

@protocol BSWatchdogDelegate <NSObject>

@optional
- (void)watchdogCancelled:(BSWatchdog *)arg1;
- (void)watchdogFired:(BSWatchdog *)arg1;
- (void)watchdogStarted:(BSWatchdog *)arg1;
@end

@protocol BSXPCConnectionListenerHandler <NSObject>
- (void)handleIncomingConnection:(NSObject<OS_xpc_object> *)arg1 forService:(NSString *)arg2;
@end

@protocol FBApplicationProcessDelegate <FBProcessDelegate>
@end

@protocol FBApplicationProcessLaunchTransactionObserver <BSTransactionObserver>

@optional
- (void)transaction:(FBApplicationProcessLaunchTransaction *)arg1 didLaunchProcess:(FBApplicationProcess *)arg2;
- (void)transaction:(FBApplicationProcessLaunchTransaction *)arg1 willLaunchProcess:(FBApplicationProcess *)arg2;
@end

@protocol FBApplicationProcessObserver <FBProcessObserver>

@optional
- (void)applicationProcessDebuggingStateDidChange:(FBApplicationProcess *)arg1;
- (void)applicationProcessDidExit:(FBApplicationProcess *)arg1 withContext:(FBApplicationProcessExitContext *)arg2;
- (void)applicationProcessDidLaunch:(FBApplicationProcess *)arg1;
- (void)applicationProcessWillLaunch:(FBApplicationProcess *)arg1;
@end

@protocol FBProcessDelegate <NSObject>
- (void)noteProcess:(FBProcess *)arg1 didUpdateState:(FBProcessState *)arg2;
- (void)noteProcessDidExit:(FBProcess *)arg1;
@end

@protocol FBProcessManagerObserver <NSObject>
- (void)processManager:(FBProcessManager *)arg1 didRemoveProcess:(FBProcess *)arg2;
- (void)processManager:(FBProcessManager *)arg1 didAddProcess:(FBProcess *)arg2;
@end

@protocol FBProcessObserver <NSObject>

@optional
- (void)process:(FBProcess *)arg1 stateDidChangeFromState:(FBProcessState *)arg2 toState:(FBProcessState *)arg3;
- (void)processDidExit:(FBProcess *)arg1;
@end

@protocol FBSSceneDelegate <NSObject>
- (void)scene:(FBSScene *)arg1 didReceiveActions:(NSSet *)arg2;
- (void)scene:(FBSScene *)arg1 didUpdateWithDiff:(FBSSceneSettingsDiff *)arg2 transitionContext:(FBSSceneTransitionContext *)arg3 completion:(void (^)(FBSWorkspaceSceneUpdateResponse *))arg4;
@end

@protocol FBSSceneUpdater <NSObject>
- (void)scene:(FBSScene *)arg1 didReceiveActions:(NSSet *)arg2;
- (void)scene:(FBSScene *)arg1 didUpdateClientSettings:(FBSSceneClientSettings *)arg2 withDiff:(FBSSceneClientSettingsDiff *)arg3 transitionContext:(FBSSceneTransitionContext *)arg4;
- (void)scene:(FBSScene *)arg1 didDetachContext:(FBSSceneContext *)arg2;
- (void)scene:(FBSScene *)arg1 didReceiveUpdateToContext:(FBSSceneContext *)arg2;
- (void)scene:(FBSScene *)arg1 didAttachContext:(FBSSceneContext *)arg2;
- (_Bool)willObserveContextsManually;
- (void)unregisterDelegateForSceneID:(NSString *)arg1;
- (void)registerDelegate:(id <FBSSceneUpdaterDelegate>)arg1 forSceneID:(NSString *)arg2;
@end

@protocol FBSceneBoundsDelegate <NSObject>
- (void)sceneDidChangeBounds:(FBScene *)arg1;
@end

@protocol FBSceneClient <NSObject>
- (void)host:(id <FBSceneHost>)arg1 didReceiveActions:(NSSet *)arg2;
- (void)host:(id <FBSceneHost>)arg1 didInvalidateWithTransitionContext:(FBSSceneTransitionContext *)arg2 completion:(void (^)(void))arg3;
- (void)host:(id <FBSceneHost>)arg1 didUpdateSettings:(FBSSceneSettings *)arg2 withDiff:(FBSSceneSettingsDiff *)arg3 transitionContext:(FBSSceneTransitionContext *)arg4 completion:(void (^)(void))arg5;
@end

@protocol FBSceneClientProvider <NSObject>
- (void)endTransaction;
- (void)beginTransaction;
- (void)unregisterHost:(id <FBSceneHost>)arg1;
- (id <FBSceneClient>)registerHost:(id <FBSceneHost>)arg1 withInitialClientSettings:(FBSSceneClientSettings *)arg2;
- (void)registerInvalidationAction:(FBSceneClientProviderInvalidationAction *)arg1;
@end

@protocol FBSceneDelegate <NSObject>
- (void)scene:(FBScene *)arg1 didReceiveActions:(NSSet *)arg2;
- (void)scene:(FBScene *)arg1 didUpdateClientSettingsWithDiff:(FBSSceneClientSettingsDiff *)arg2 oldClientSettings:(FBSSceneClientSettings *)arg3 transitionContext:(FBSSceneTransitionContext *)arg4;
- (void)scene:(FBScene *)arg1 handleUpdateSettingsWithBlock:(FBSSceneTransitionContext * (^)(FBSMutableSceneSettings *))arg2;
- (void)scene:(FBScene *)arg1 handleUpdateToSettings:(FBSSceneSettings *)arg2 withTransitionContext:(FBSSceneTransitionContext *)arg3;
@end

@protocol FBSceneHost
@property(readonly, retain, nonatomic) FBSDisplay *display;
@property(readonly, copy, nonatomic) NSString *identifier;
- (void)client:(id <FBSceneClient>)arg1 didReceiveActions:(NSSet *)arg2;
- (void)client:(id <FBSceneClient>)arg1 didUpdateClientSettings:(FBSSceneClientSettings *)arg2 withDiff:(FBSSceneClientSettingsDiff *)arg3 transitionContext:(FBSSceneTransitionContext *)arg4;
- (void)client:(id <FBSceneClient>)arg1 detachContext:(FBWindowContext *)arg2;
- (void)client:(id <FBSceneClient>)arg1 updateContext:(FBWindowContext *)arg2;
- (void)client:(id <FBSceneClient>)arg1 attachContext:(FBWindowContext *)arg2;
@end

@protocol FBSceneManagerObserver <NSObject>
- (void)sceneManager:(FBSceneManager *)arg1 didDestroyScene:(FBScene *)arg2;
- (void)sceneManager:(FBSceneManager *)arg1 willDestroyScene:(FBScene *)arg2;
- (void)sceneManager:(FBSceneManager *)arg1 didCommitUpdateForScene:(FBScene *)arg2 transactionID:(unsigned long long)arg3;
- (void)sceneManager:(FBSceneManager *)arg1 willCommitUpdateForScene:(FBScene *)arg2 transactionID:(unsigned long long)arg3;
- (void)sceneManager:(FBSceneManager *)arg1 willUpdateScene:(FBScene *)arg2 withSettings:(FBSSceneSettings *)arg3 transitionContext:(FBSSceneTransitionContext *)arg4;
- (void)sceneManager:(FBSceneManager *)arg1 didCreateScene:(FBScene *)arg2 withClient:(id <FBSceneClient>)arg3;
@end

@protocol FBSceneTransformTarget <NSObject>
- (void)transformDidInvalidate:(FBSceneTransform *)arg1;
- (void)transformDidUpdate:(FBSceneTransform *)arg1;
@end

@protocol FBSynchronizedTransaction <NSObject>
@property(nonatomic) id <FBSynchronizedTransactionDelegate> synchronizationDelegate;
- (void)performSynchronizedCommit;
- (_Bool)isReadyForSynchronizedCommit;
@end

@protocol FBSynchronizedTransactionDelegate <NSObject>
- (void)synchronizedTransaction:(FBTransaction<FBSynchronizedTransaction> *)arg1 didCommitSynchronizedTransactions:(NSArray *)arg2;
- (void)synchronizedTransaction:(FBTransaction<FBSynchronizedTransaction> *)arg1 willCommitSynchronizedTransactions:(NSArray *)arg2;
- (void)synchronizedTransactionReadyToCommit:(FBTransaction<FBSynchronizedTransaction> *)arg1;
@end

@protocol FBUpdateSceneTransactionObserver <BSTransactionObserver>

@optional
- (void)updateSceneTransactionDidCommitUpdate:(FBUpdateSceneTransaction *)arg1;
- (void)updateSceneTransactionWillCommitUpdate:(FBUpdateSceneTransaction *)arg1;
- (void)updateSceneTransactionWillUpdateScene:(FBUpdateSceneTransaction *)arg1;
- (void)updateSceneTransactionDidCreateScene:(FBUpdateSceneTransaction *)arg1;
@end

@protocol FBWindowContextAppearance <NSObject>
@property(readonly, nonatomic) double level;
@property(readonly, nonatomic) struct CGRect referenceFrame;
@property(readonly, nonatomic, getter=isContextHosted) _Bool contextHosted;
@property(nonatomic) unsigned long long appearanceStyle;
@property(retain, nonatomic) UIColor *backgroundColorWhileNotHosting;
@property(retain, nonatomic) UIColor *backgroundColorWhileHosting;
@end

@protocol FBWindowContextHostSnapshotView
@property(readonly, nonatomic) id IOSurface;
@end

@protocol FBWindowContextHostViewDelegate <NSObject>
- (void)windowContextHostViewHostedContextsDidChange:(FBWindowContextHostView *)arg1;
@end

@protocol FBWindowContextManagerObserver <NSObject>

@optional
- (void)windowContextManager:(FBWindowContextManager *)arg1 didRepositionContext:(FBWindowContext *)arg2 from:(unsigned long long)arg3 to:(unsigned long long)arg4;
- (void)windowContextManagerDidStopTrackingContexts:(FBWindowContextManager *)arg1;
- (void)windowContextManagerWillStartTrackingContexts:(FBWindowContextManager *)arg1;
@end

@protocol FBWorkspaceServerSceneEventHandler <NSObject>
- (void)sceneDidReceiveActions:(FBSWorkspaceSceneActionsEvent *)arg1;
- (void)sceneDidUpdateClientSettings:(FBSWorkspaceSceneClientSettingsChangedEvent *)arg1;
- (void)sceneDetachContext:(FBSWorkspaceSceneContextEvent *)arg1;
- (void)sceneUpdateContext:(FBSWorkspaceSceneContextEvent *)arg1;
- (void)sceneAttachContext:(FBSWorkspaceSceneContextEvent *)arg1;
@end

@protocol LSApplicationWorkspaceObserverProtocol <NSObject>

@optional
- (void)networkUsageChanged:(_Bool)arg1;
- (void)applicationInstallsDidPrioritize:(NSArray *)arg1;
- (void)applicationInstallsDidCancel:(NSArray *)arg1;
- (void)applicationInstallsDidResume:(NSArray *)arg1;
- (void)applicationInstallsDidPause:(NSArray *)arg1;
- (void)applicationInstallsArePrioritized:(NSArray *)arg1 arePaused:(NSArray *)arg2;
- (void)applicationsDidFailToUninstall:(NSArray *)arg1;
- (void)pluginsDidUninstall:(NSArray *)arg1;
- (void)applicationsDidUninstall:(NSArray *)arg1;
- (void)pluginsWillUninstall:(NSArray *)arg1;
- (void)applicationsWillUninstall:(NSArray *)arg1;
- (void)applicationsDidFailToInstall:(NSArray *)arg1;
- (void)pluginsDidInstall:(NSArray *)arg1;
- (void)applicationsDidInstall:(NSArray *)arg1;
- (void)applicationsWillInstall:(NSArray *)arg1;
- (void)applicationInstallsDidUpdateIcon:(NSArray *)arg1;
- (void)applicationInstallsDidChange:(NSArray *)arg1;
- (void)applicationInstallsDidStart:(NSArray *)arg1;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@interface BSSettings (UIApplicationClientSettings)
- (_Bool)isUIApplicationClientSettings;
@end

@interface FBFileLogger : BSFileLogger
{
}

- (id)logPreferenceDomain;
- (id)logPreferenceName;

@end

@interface FBAppLibraryLogger : FBFileLogger
{
}

- (_Bool)shouldEnableOnInternalBuilds;
- (int)maxLogSize;
- (void)_setEnabled:(_Bool)arg1;
- (id)name;
- (_Bool)isEnabled;

@end

@interface FBApplicationDefaults : NSObject
{
    long long _interfaceOrientation;
    long long _backgroundStyle;
    long long _statusBarStyle;
    _Bool _statusBarHidden;
    _Bool _statusBarHiddenWhenVerticallyCompact;
}

@property(nonatomic) _Bool statusBarHiddenWhenVerticallyCompact; // @synthesize statusBarHiddenWhenVerticallyCompact=_statusBarHiddenWhenVerticallyCompact;
@property(nonatomic) _Bool statusBarHidden; // @synthesize statusBarHidden=_statusBarHidden;
@property(nonatomic) long long statusBarStyle; // @synthesize statusBarStyle=_statusBarStyle;
@property(nonatomic) long long backgroundStyle; // @synthesize backgroundStyle=_backgroundStyle;
@property(nonatomic) long long interfaceOrientation; // @synthesize interfaceOrientation=_interfaceOrientation;
- (id)init;

@end

@interface FBBundleInfo : NSObject
{
    LSApplicationProxy *_proxy;
    NSString *_displayName;
    NSString *_bundleIdentifier;
    NSString *_bundleVersion;
    NSString *_bundleType;
    NSURL *_bundleURL;
}

@property(retain, nonatomic) NSURL *bundleURL; // @synthesize bundleURL=_bundleURL;
@property(copy, nonatomic) NSString *bundleType; // @synthesize bundleType=_bundleType;
@property(copy, nonatomic) NSString *bundleVersion; // @synthesize bundleVersion=_bundleVersion;
@property(copy, nonatomic) NSString *bundleIdentifier; // @synthesize bundleIdentifier=_bundleIdentifier;
@property(copy, nonatomic) NSString *displayName; // @synthesize displayName=_displayName;
@property(readonly, retain, nonatomic, getter=_proxy) LSApplicationProxy *proxy; // @synthesize proxy=_proxy;
- (void)dealloc;
- (id)initWithApplicationProxy:(id)arg1;

@end

@interface FBApplicationInfo : FBBundleInfo
{
    NSURL *_executableURL;
    NSURL *_bundleContainerURL;
    NSURL *_dataContainerURL;
    NSURL *_sandboxURL;
    double _lastModifiedDate;
    NSString *_preferenceDomain;
    NSString *_signerIdentity;
    NSDictionary *_environmentVariables;
    NSDictionary *_entitlements;
    _Bool _provisioningProfileValidated;
    NSString *_sdkVersion;
    NSArray *_customMachServices;
    unsigned long long _type;
    NSArray *_requiredCapabilities;
    NSArray *_tags;
    NSArray *_deviceFamilies;
    _Bool _enabled;
    _Bool _newsstand;
    _Bool _restricted;
    _Bool _beta;
    FBMutableApplicationDefaults *_defaults;
    NSSet *_backgroundModes;
    NSSet *_supportedInterfaceOrientations;
    _Bool _exitsOnSuspend;
    _Bool _requiresPersistentWiFi;
    float _minimumBrightnessLevel;
    NSArray *_externalAccessoryProtocols;
    long long _ratingRank;
    NSArray *_folderNames;
    NSString *_fallbackFolderName;
    _Bool _installing;
    _Bool _uninstalling;
    NSObject<OS_dispatch_queue> *_workQueue;
}

@property(nonatomic, getter=_isUninstalling, setter=_setUninstalling:) _Bool uninstalling; // @synthesize uninstalling=_uninstalling;
@property(nonatomic, getter=_isInstalling, setter=_setInstalling:) _Bool installing; // @synthesize installing=_installing;
@property(readonly, nonatomic) long long ratingRank; // @synthesize ratingRank=_ratingRank;
@property(readonly, retain, nonatomic) NSArray *externalAccessoryProtocols; // @synthesize externalAccessoryProtocols=_externalAccessoryProtocols;
@property(readonly, nonatomic) float minimumBrightnessLevel; // @synthesize minimumBrightnessLevel=_minimumBrightnessLevel;
@property(readonly, nonatomic) _Bool requiresPersistentWiFi; // @synthesize requiresPersistentWiFi=_requiresPersistentWiFi;
@property(readonly, nonatomic, getter=isExitsOnSuspend) _Bool exitsOnSuspend; // @synthesize exitsOnSuspend=_exitsOnSuspend;
@property(readonly, retain, nonatomic) FBApplicationDefaults *defaults; // @synthesize defaults=_defaults;
@property(readonly, nonatomic, getter=isBeta) _Bool beta; // @synthesize beta=_beta;
@property(readonly, nonatomic, getter=isRestricted) _Bool restricted; // @synthesize restricted=_restricted;
@property(readonly, nonatomic, getter=isNewsstand) _Bool newsstand; // @synthesize newsstand=_newsstand;
@property(readonly, nonatomic, getter=isEnabled) _Bool enabled; // @synthesize enabled=_enabled;
@property(readonly, retain, nonatomic) NSArray *tags; // @synthesize tags=_tags;
@property(readonly, retain, nonatomic) NSArray *deviceFamilies; // @synthesize deviceFamilies=_deviceFamilies;
@property(readonly, retain, nonatomic) NSArray *requiredCapabilities; // @synthesize requiredCapabilities=_requiredCapabilities;
@property(readonly, nonatomic) unsigned long long type; // @synthesize type=_type;
@property(readonly, retain, nonatomic) NSArray *customMachServices; // @synthesize customMachServices=_customMachServices;
@property(readonly, copy, nonatomic) NSString *sdkVersion; // @synthesize sdkVersion=_sdkVersion;
@property(readonly, nonatomic, getter=isProvisioningProfileValidated) _Bool provisioningProfileValidated; // @synthesize provisioningProfileValidated=_provisioningProfileValidated;
@property(readonly, retain, nonatomic) NSDictionary *entitlements; // @synthesize entitlements=_entitlements;
@property(readonly, retain, nonatomic) NSDictionary *environmentVariables; // @synthesize environmentVariables=_environmentVariables;
@property(readonly, copy, nonatomic) NSString *signerIdentity; // @synthesize signerIdentity=_signerIdentity;
@property(readonly, copy, nonatomic) NSString *preferenceDomain; // @synthesize preferenceDomain=_preferenceDomain;
@property(readonly, nonatomic) double lastModifiedDate; // @synthesize lastModifiedDate=_lastModifiedDate;
@property(readonly, retain, nonatomic) NSURL *sandboxURL; // @synthesize sandboxURL=_sandboxURL;
@property(readonly, retain, nonatomic) NSURL *dataContainerURL; // @synthesize dataContainerURL=_dataContainerURL;
@property(readonly, retain, nonatomic) NSURL *bundleContainerURL; // @synthesize bundleContainerURL=_bundleContainerURL;
@property(readonly, retain, nonatomic) NSURL *executableURL; // @synthesize executableURL=_executableURL;
- (id)_localizedGenreFromDictionary:(id)arg1;
- (id)_localizedGenreNameForID:(long long)arg1;
- (void)_cacheFolderNamesForSystemApp:(id)arg1;
- (id)_configureEnvironment:(id)arg1;
- (long long)_computeRatingRank;
- (id)_copyiTunesMetadata;
- (void)_buildDefaultsFromInfoPlist:(id)arg1;
- (id)_computeSupportedInterfaceOrientations:(id)arg1;
- (id)_uniqueDeviceIdentifier;
- (void)_acceptApplicationSignatureIdentity;
- (id)_preferenceDomain;
- (double)_lastModifiedDateForPath:(id)arg1;
- (unsigned long long)_applicationType:(id)arg1;
- (id)description;
- (_Bool)builtOnOrAfterSDKVersion:(id)arg1;
- (void)acceptApplicationSignatureIdentity;
- (_Bool)supportsInterfaceOrientation:(long long)arg1;
- (_Bool)supportsBackgroundMode:(id)arg1;
@property(readonly, retain, nonatomic) NSString *fallbackFolderName; // @synthesize fallbackFolderName=_fallbackFolderName;
@property(readonly, retain, nonatomic) NSArray *folderNames; // @synthesize folderNames=_folderNames;
@property(readonly, nonatomic) long long signatureState; // @dynamic signatureState;
- (void)dealloc;
- (id)initWithApplicationProxy:(id)arg1;

@end

@interface FBApplicationLibrary : NSObject <LSApplicationWorkspaceObserverProtocol>
{
    LSApplicationWorkspace *_applicationWorkspace;
    NSObject<OS_dispatch_queue> *_observerQueue;
    NSHashTable *_observerQueue_observers;
    NSObject<OS_dispatch_queue> *_workQueue;
    NSMutableDictionary *_workQueue_installedApplicationsByBundleID;
    NSMutableDictionary *_workQueue_placeholdersByBundleID;
    _Bool _workQueue_usingNetwork;
    unsigned long long _workQueue_synchronizationActionCount;
    NSMutableArray *_workQueue_pendingSynchronizationExecutionBlocks;
    NSObject<OS_dispatch_queue> *_callOutQueue;
    NSObject<OS_dispatch_group> *_preInstallGroup;
    _Bool _usingNetwork;
}

+ (id)sharedInstance;
@property(readonly, nonatomic, getter=isUsingNetwork) _Bool usingNetwork; // @synthesize usingNetwork=_usingNetwork;
- (void)applicationsDidFailToUninstall:(id)arg1;
- (void)applicationsWillUninstall:(id)arg1;
- (void)applicationsDidFailToInstall:(id)arg1;
- (void)applicationsWillInstall:(id)arg1;
- (void)applicationInstallsDidPrioritize:(id)arg1;
- (void)applicationInstallsDidCancel:(id)arg1;
- (void)applicationInstallsDidResume:(id)arg1;
- (void)applicationInstallsDidPause:(id)arg1;
- (void)applicationInstallsArePrioritized:(id)arg1 arePaused:(id)arg2;
- (void)networkUsageChanged:(_Bool)arg1;
- (void)applicationsDidUninstall:(id)arg1;
- (void)applicationsDidInstall:(id)arg1;
- (void)applicationInstallsDidUpdateIcon:(id)arg1;
- (void)applicationInstallsDidChange:(id)arg1;
- (void)applicationInstallsDidStart:(id)arg1;
- (_Bool)_workQueue_applicationHasBeenModified:(id)arg1 applicationProxy:(id)arg2;
- (void)_workQueue_notePlaceholdersModifiedSignificantly:(id)arg1;
- (id)_workQueue_placeholderForProxy:(id)arg1 updateExistingIfNecessary:(_Bool)arg2 createIfNecessary:(_Bool)arg3 wasCreated:(_Bool *)arg4;
- (id)_workQueue_applicationInfoForProxy:(id)arg1 createIfNecessary:(_Bool)arg2 wasCreated:(_Bool *)arg3;
- (id)_workQueue_applicationsForProxies:(id)arg1 createIfNecessary:(_Bool)arg2 createdPlaceholders:(const id *)arg3 existingApplications:(const id *)arg4 unmappedProxies:(const id *)arg5;
- (id)_workQueue_placeholdersForProxies:(id)arg1 updateExistingIfNecessary:(_Bool)arg2 createIfNecessary:(_Bool)arg3 createdPlaceholders:(const id *)arg4 existingPlaceholders:(const id *)arg5 unmappedProxies:(const id *)arg6;
- (void)_reload;
- (void)_workQueue_decrementSynchronizationActionCount;
- (void)_workQueue_incrementSynchronizationActionCount;
- (void)_workQueue_executeInstallSynchronizationBlock:(CDUnknownBlockType)arg1;
- (void)_sendToObservers:(id)arg1 networkUsageDidChange:(id)arg2 usingNetwork:(_Bool)arg3;
- (void)_sendToObservers:(id)arg1 didRemoveApplications:(id)arg2;
- (void)_sendToObservers:(id)arg1 didReplaceApplications:(id)arg2 withApplications:(id)arg3;
- (void)_sendToObservers:(id)arg1 didAddApplications:(id)arg2;
- (void)_sendToObservers:(id)arg1 didCancelPlaceholders:(id)arg2;
- (void)_sendToObservers:(id)arg1 didAddPlaceholders:(id)arg2;
- (void)_dispatchToObservers:(id)arg1 synchronously:(_Bool)arg2 preBlock:(CDUnknownBlockType)arg3 block:(CDUnknownBlockType)arg4;
- (id)_observers;
- (void)executeOrPendInstallSynchronizationBlock:(CDUnknownBlockType)arg1;
@property(readonly, copy) NSString *description;
- (void)removeObserver:(id)arg1;
- (void)addObserver:(id)arg1;
- (void)uninstallApplication:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)placeholderWithBundleIdentifier:(id)arg1;
- (id)allPlaceholders;
- (id)installedApplicationWithBundleIdentifier:(id)arg1;
- (id)allInstalledApplications;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FBApplicationPlaceholder : FBBundleInfo
{
    NSObject<OS_dispatch_queue> *_queue;
    _Bool _queue_isNewsstand;
    _Bool _queue_isRestricted;
    _Bool _queue_installType;
    double _queue_cachedPercentComplete;
    NSProgress *_queue_progress;
    NSMutableSet *_queue_observers;
}

- (void)_noteChangedSignificantly;
- (void)_setProxy:(id)arg1 force:(_Bool)arg2;
@property(retain, nonatomic, getter=_proxy, setter=_setProxy:) LSApplicationProxy *proxy;
- (_Bool)_queue_setProgress:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)_queue_stopObservingProgress:(id)arg1;
- (void)_queue_startObservingProgress:(id)arg1;
- (void)_queue_progressChanged;
- (double)_normalizedProgress:(double)arg1;
- (id)_iconDictionary;
- (void)_sendToObserversPlaceholderDidChangeSignificantly:(id)arg1;
- (void)_sendToObserversInstallPhaseDidChange:(id)arg1;
- (void)_sendToObserversInstallStateDidChange:(id)arg1;
- (void)_sendToObserversPausabilityDidChange:(id)arg1;
- (void)_sendToObserversCancellabilityDidChange:(id)arg1;
- (void)_sendToObserversPercentCompleteDidChange:(id)arg1;
- (void)_dispatchToObservers:(id)arg1 block:(CDUnknownBlockType)arg2;
- (id)_queue_observers;
- (id)description;
- (void)removeObserver:(id)arg1;
- (void)addObserver:(id)arg1;
- (void)resume;
- (void)pause;
- (void)cancel;
- (void)prioritize;
@property(readonly, nonatomic, getter=isPausable) _Bool pausable;
@property(readonly, nonatomic, getter=isCancellable) _Bool cancellable;
@property(readonly, nonatomic) unsigned long long installPhase;
@property(readonly, nonatomic) unsigned long long installState;
@property(readonly, nonatomic) unsigned long long installType;
@property(readonly, nonatomic) double percentComplete;
@property(readonly, nonatomic, getter=isRestricted) _Bool restricted;
@property(readonly, nonatomic, getter=isNewsstand) _Bool newsstand;
- (void)dealloc;
- (id)initWithApplicationProxy:(id)arg1;

@end

@interface FBProcess : NSObject
{
    NSObject<OS_dispatch_queue> *_queue;
    FBProcessState *_state;
    NSString *_name;
    NSString *_jobLabel;
    NSString *_bundleIdentifier;
    NSObject<OS_dispatch_queue> *_callOutQueue;
    FBWorkspace *_workspace;
    NSHashTable *_observers;
    id <FBProcessDelegate> _delegate;
    int _unsafe_pid;
    BSProcessDeathWatcher *_processDeathObserver;
}

@property(readonly, retain, nonatomic) FBWorkspace *workspace; // @synthesize workspace=_workspace;
- (void)_queue_toggleProcessDeathObserver:(_Bool)arg1;
- (void)_queue_processDidExit;
- (void)_queue_callExitObservers;
- (void)_queue_enumerateObserversWithBlock:(CDUnknownBlockType)arg1;
- (id)_createWorkspace;
- (id)_queue;
@property(nonatomic, getter=_queue_visibility, setter=_queue_setVisibility:) int queue_visibility;
- (int)_queue_effectiveVisibilityForVisibility:(int)arg1;
@property(nonatomic, getter=_queue_taskState, setter=_queue_setTaskState:) int queue_taskState;
- (_Bool)_queue_isForeground;
@property(copy, nonatomic, getter=_queue_jobLabel, setter=_queue_setJobLabel:) NSString *queue_jobLabel;
@property(nonatomic, getter=_queue_isRunning, setter=_queue_setRunning:) _Bool queue_running;
@property(copy, nonatomic, getter=_queue_name, setter=_queue_setName:) NSString *queue_name;
@property(nonatomic, getter=_queue_pid, setter=_queue_setPid:) int queue_pid;
- (void)_queue_updateStateWithBlock:(CDUnknownBlockType)arg1;
@property(nonatomic, getter=_queue_delegate) id <FBProcessDelegate> delegate;
- (id)_workspace;
- (id)description;
- (void)removeObserver:(id)arg1;
- (void)addObserver:(id)arg1;
@property(readonly, copy, nonatomic) FBProcessState *state;
@property(readonly, copy, nonatomic) NSString *jobLabel;
@property(readonly, copy, nonatomic) NSString *bundleIdentifier;
@property(readonly, copy, nonatomic) NSString *name;
- (void)dealloc;
- (id)initWithBundleID:(id)arg1 pid:(int)arg2 callOutQueue:(id)arg3;
- (_Bool)isExtensionProcess;
- (_Bool)isSystemApplicationProcess;
- (_Bool)isApplicationProcess;

@end

@interface FBApplicationProcess : FBProcess <BKSProcessDelegate, BSWatchdogDelegate>
{
    BKSApplicationDataStore *_dataStore;
    NSMutableSet *_allowedLockedFilePaths;
    NSMutableArray *_queuedSceneBlocksToExecuteAfterLaunch;
    FBApplicationProcessExitContext *_exitContext;
    FBProcessExecutionContext *_executionContext;
    FBApplicationWatchdog *_watchdog;
    _Bool _bootstrapped;
    _Bool _bootstrapFailed;
    _Bool _isBeingDebugged;
    _Bool _hasFinishedLaunching;
    double _launchWatchdogTimeRemaining;
    int _pendingExit;
    BSMachSendRight *_taskNamePort;
    BSMachSendRight *_taskPort;
    BSMachSendRight *_gsEventPort;
    long long _terminationReason;
    int _defaultSceneSuspendType;
    FBProcessCPUStatistics *_cpuStatistics;
    double _execTime;
    BKSProcess *_bksProcess;
    BKSProcessAssertion *_launchProcessAssertion;
    BKSProcessAssertion *_continuousProcessAssertion;
    _Bool _beingDebugged;
    _Bool _supportsBackgroundTaskAssertions;
    _Bool _supportsSuspendOnLock;
    _Bool _recordingAudio;
    _Bool _nowPlayingWithAudio;
    _Bool _connectedToExternalAccessory;
    FBApplicationInfo *_applicationInfo;
}

+ (void)deleteAllJobs;
@property(nonatomic, getter=_queue_taskPort, setter=_queue_setTaskPort:) BSMachSendRight *taskPort; // @synthesize taskPort=_taskPort;
@property(readonly, retain, nonatomic, getter=_queue_cpuStatistics) FBProcessCPUStatistics *cpuStatistics; // @synthesize cpuStatistics=_cpuStatistics;
@property(nonatomic, getter=isConnectedToExternalAccessory) _Bool connectedToExternalAccessory; // @synthesize connectedToExternalAccessory=_connectedToExternalAccessory;
@property(nonatomic, getter=isNowPlayingWithAudio) _Bool nowPlayingWithAudio; // @synthesize nowPlayingWithAudio=_nowPlayingWithAudio;
@property(nonatomic, getter=isRecordingAudio) _Bool recordingAudio; // @synthesize recordingAudio=_recordingAudio;
@property(readonly, nonatomic, getter=_queue_supportsSuspendOnLock) _Bool supportsSuspendOnLock; // @synthesize supportsSuspendOnLock=_supportsSuspendOnLock;
@property(readonly, nonatomic, getter=_queue_supportsBackgroundTaskAssertions) _Bool supportsBackgroundTaskAssertions; // @synthesize supportsBackgroundTaskAssertions=_supportsBackgroundTaskAssertions;
@property(readonly, nonatomic, getter=_queue_hasFinishedLaunching) _Bool hasFinishedLaunching; // @synthesize hasFinishedLaunching=_hasFinishedLaunching;
- (void)process:(id)arg1 isBeingDebugged:(_Bool)arg2;
- (void)processWillExpire:(id)arg1;
- (void)process:(id)arg1 taskStateDidChange:(int)arg2;
- (void)watchdogCancelled:(id)arg1;
- (void)watchdogFired:(id)arg1;
- (void)watchdogStarted:(id)arg1;
- (void)_queue_dropContinuousProcessAssertion;
- (void)_queue_dropLaunchProcessAssertion;
- (void)_queue_takeLaunchProcessAssertion;
- (_Bool)_queue_shouldWatchdogWithDeclineReason:(id *)arg1;
- (void)_queue_cancelWatchdogTimer;
- (void)_queue_startWatchdogTimerOfType:(int)arg1 withDuration:(double)arg2;
- (void)_queue_killForReason:(long long)arg1 andReport:(_Bool)arg2 withDescription:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)_queue_watchdogTerminateWithReason:(int)arg1 format:(id)arg2;
- (unsigned long long)_queue_noteExitedForForceQuit:(_Bool)arg1;
- (_Bool)_queue_isBeingPtraced;
- (_Bool)_queue_isBeingDebugged;
- (void)_queue_forceCrashReportWithReason:(int)arg1 description:(id)arg2;
- (void)_queue_waitToExecOrExit;
- (void)_queue_killWithSignal:(int)arg1;
- (void)_queue_doGracefulKillWithCompletion:(CDUnknownBlockType)arg1 withWatchdog:(_Bool)arg2;
- (id)_queue_lockedFilePathsIgnoringAllowed;
- (_Bool)_queue_consideredUnderLock;
- (int)_queue_calculateDefaultSceneSuspendType;
- (_Bool)_queue_supportsContinuousBackgroundMode;
- (_Bool)_queue_isSystemApplication;
- (int)_queue_ourTaskStateForBKSTaskState:(int)arg1;
- (id)_queue_name;
- (void)_queue_setAllowedLockedFilePaths:(id)arg1;
- (void)_queue_setBeingDebugged:(_Bool)arg1;
- (id)_queue_executionContext;
- (void)_queue_setTaskState:(int)arg1;
- (void)_queue_setVisibility:(int)arg1;
- (int)_queue_bksVisibilityForVisibility:(int)arg1;
- (int)_queue_effectiveVisibilityForSceneSettings:(id)arg1;
- (int)_queue_effectiveVisibilityForVisibility:(int)arg1;
- (int)_queue_effectiveVisibilityForVisibility:(int)arg1 underLock:(_Bool)arg2;
- (void)_queue_invalidateBKSProcess;
- (void)_queue_setupBKSProcess;
- (id)_queue_internalDebugEnvironmentVariables;
- (_Bool)_queue_finishLaunch;
- (_Bool)_queue_bootstrapAndExec;
- (void)_queue_enumerateApplicationObserversWithBlock:(CDUnknownBlockType)arg1;
- (id)_queue_UIRemoteAppPortName;
- (id)_queue_GSEventPortName;
- (id)_workspaceServer;
- (id)_workspace;
- (void)_queue_executeLaunchCompletionBlocks;
- (void)_queue_executeBlockAfterLaunchCompletes:(CDUnknownBlockType)arg1;
- (void)executeBlockAfterLaunchCompletes:(CDUnknownBlockType)arg1;
- (void)_queue_sceneNeedsGracefulExit:(id)arg1 withExitCompletion:(CDUnknownBlockType)arg2;
- (void)_queue_sceneLifecycleStateChanged:(id)arg1;
@property(readonly, nonatomic, getter=_queue_launchWatchdogTimeRemaining) double launchWatchdogTimeRemaining;
@property(readonly, nonatomic, getter=_queue_execTime) double execTime;
@property(readonly, nonatomic, getter=_queue_terminationReason) long long terminationReason;
@property(readonly, nonatomic, getter=_queue_defaultSuspendType) int defaultSuspendType;
- (void)_queue_setSupportsBackgroundTaskAssertions:(_Bool)arg1;
- (void)_queue_setSupportsSuspendOnLock:(_Bool)arg1;
- (void)_queue_processReallyDidExit;
- (void)_queue_processDidExit;
- (void)noteWorkspaceLocked:(_Bool)arg1;
- (void)stop;
- (void)launchIfNecessary;
- (_Bool)bootstrapAndExec;
- (id)UIRemoteAppPortName;
- (id)GSEventPortName;
- (id)GSEventPort;
- (double)elapsedCPUTime;
- (void)_queue_callExitObservers;
- (id)_applicationWorkspace;
- (id)_createWorkspace;
- (_Bool)isSystemApplicationProcess;
- (_Bool)isApplicationProcess;
- (void)killForReason:(long long)arg1 andReport:(_Bool)arg2 withDescription:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)killForReason:(long long)arg1 andReport:(_Bool)arg2 withDescription:(id)arg3;
@property(retain, nonatomic) FBProcessExecutionContext *executionContext; // @dynamic executionContext;
@property(readonly, retain, nonatomic) FBApplicationProcessExitContext *exitContext;
@property(readonly, retain, nonatomic) FBApplicationInfo *applicationInfo; // @synthesize applicationInfo=_applicationInfo;
- (void)setPendingExit:(_Bool)arg1;
- (_Bool)isPendingExit;
@property(nonatomic, getter=isBeingDebugged) _Bool beingDebugged; // @synthesize beingDebugged=_beingDebugged;
- (void)dealloc;
- (id)initWithApplicationInfo:(id)arg1 pid:(int)arg2 callOutQueue:(id)arg3;
- (id)initWithApplicationInfo:(id)arg1 callOutQueue:(id)arg2;
- (id)initWithBundleID:(id)arg1 pid:(int)arg2 callOutQueue:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(nonatomic) id <FBApplicationProcessDelegate> delegate;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FBApplicationProcessExitContext : NSObject
{
    FBProcessState *_stateBeforeExiting;
    unsigned long long _launchdExitReason;
    unsigned long long _exitReason;
    long long _terminationReason;
}

+ (unsigned long long)exitReasonForLaunchdExitReason:(unsigned long long)arg1;
+ (id)descriptionForExitReason:(unsigned long long)arg1;
@property(readonly, copy, nonatomic) FBProcessState *stateBeforeExiting; // @synthesize stateBeforeExiting=_stateBeforeExiting;
@property(readonly, nonatomic) long long terminationReason; // @synthesize terminationReason=_terminationReason;
@property(readonly, nonatomic) unsigned long long exitReason; // @synthesize exitReason=_exitReason;
- (_Bool)fairPlayFailure;
- (_Bool)consideredJetsam;
@property(readonly, nonatomic) int terminationSignal;
@property(readonly, nonatomic) int exitCode;
@property(readonly, nonatomic) _Bool exitedNormally;
@property(readonly, nonatomic) long long exitStatus;
- (id)description;
- (void)dealloc;
- (id)initWithExitReason:(unsigned long long)arg1 terminationReason:(long long)arg2 state:(id)arg3;

@end

@interface FBTransaction : BSTransaction
{
}

- (id)queue;
- (void)removeAllMilestonesWithReason:(id)arg1;
- (id)init;

@end

@interface FBApplicationProcessLaunchTransaction : FBTransaction <FBProcessManagerObserver, FBApplicationProcessObserver>
{
    FBProcessManager *_processManager;
    NSString *_bundleID;
    FBApplicationProcess *_process;
    CDUnknownBlockType _executionContextProvider;
    FBWaitForProcessDeathTransaction *_deathTransaction;
    FBProcessExecutionContext *_executionContext;
    _Bool _processIsValid;
    _Bool _failedLaunch;
    _Bool _exited;
}

@property(readonly, nonatomic) _Bool exited; // @synthesize exited=_exited;
@property(readonly, nonatomic) _Bool failedLaunch; // @synthesize failedLaunch=_failedLaunch;
@property(readonly, retain, nonatomic) FBApplicationProcess *process; // @synthesize process=_process;
- (void)applicationProcessDidExit:(id)arg1 withContext:(id)arg2;
- (void)applicationProcessDidLaunch:(id)arg1;
- (void)applicationProcessWillLaunch:(id)arg1;
- (void)processManager:(id)arg1 didRemoveProcess:(id)arg2;
- (void)processManager:(id)arg1 didAddProcess:(id)arg2;
- (void)_queue_launchProcess:(id)arg1;
- (void)_queue_noteExited;
- (id)_customizedDescriptionProperties;
- (void)_childTransactionDidComplete:(id)arg1;
- (void)_didComplete;
- (_Bool)_canBeInterrupted;
- (void)_begin;
- (void)removeObserver:(id)arg1;
- (void)addObserver:(id)arg1;
- (void)dealloc;
- (id)initWithApplicationBundleID:(id)arg1 executionContextProvider:(CDUnknownBlockType)arg2;
- (id)initWithApplicationProcess:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FBSynchronizedTransactionGroup : FBTransaction <FBSynchronizedTransaction, FBSynchronizedTransactionDelegate>
{
    _Bool _didCommit;
    _Bool _readyForCommit;
    NSMutableSet *_synchronizedTransactions;
    NSMutableSet *_synchronizedTransactionsAwaitingCommitReadiness;
    NSMutableSet *_synchronizedTransactionsReadyToCommit;
    id <FBSynchronizedTransactionDelegate> _synchronizationDelegate;
}

@property(nonatomic) id <FBSynchronizedTransactionDelegate> synchronizationDelegate; // @synthesize synchronizationDelegate=_synchronizationDelegate;
- (void)synchronizedTransaction:(id)arg1 didCommitSynchronizedTransactions:(id)arg2;
- (void)synchronizedTransaction:(id)arg1 willCommitSynchronizedTransactions:(id)arg2;
- (void)synchronizedTransactionReadyToCommit:(id)arg1;
- (void)performSynchronizedCommit;
- (_Bool)isReadyForSynchronizedCommit;
- (void)_performSynchronizedCommit:(id)arg1;
- (void)addSynchronizedTransaction:(id)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FBApplicationUpdateScenesTransaction : FBSynchronizedTransactionGroup <FBApplicationProcessLaunchTransactionObserver, FBUpdateSceneTransactionObserver>
{
    FBApplicationProcessLaunchTransaction *_processLaunchTransaction;
    _Bool _processLaunched;
    NSString *_bundleID;
    FBSceneManager *_sceneManager;
    FBProcessManager *_processManager;
    NSMutableArray *_updateSceneTransactions;
    NSMutableArray *_pendingUpdateSceneBlocks;
    FBApplicationProcess *_process;
}

@property(readonly, retain, nonatomic) NSString *bundleID; // @synthesize bundleID=_bundleID;
- (void)updateSceneTransactionDidCommitUpdate:(id)arg1;
- (void)updateSceneTransactionWillCommitUpdate:(id)arg1;
- (void)updateSceneTransactionWillUpdateScene:(id)arg1;
- (void)updateSceneTransactionDidCreateScene:(id)arg1;
- (void)transaction:(id)arg1 didLaunchProcess:(id)arg2;
- (void)transaction:(id)arg1 willLaunchProcess:(id)arg2;
- (void)_executeSceneUpdatesIfAppropriate;
- (void)_performSynchronizedCommit:(id)arg1;
- (id)_customizedDescriptionProperties;
- (void)_didComplete;
- (_Bool)_canBeInterrupted;
- (void)_childTransactionDidComplete:(id)arg1;
- (void)_didRemoveChildTransaction:(id)arg1;
- (void)_willAddChildTransaction:(id)arg1;
- (void)removeObserver:(id)arg1;
- (void)addObserver:(id)arg1;
- (void)updateSceneWithIdentifier:(id)arg1 display:(id)arg2 newSettings:(id)arg3 transitionContext:(id)arg4 clientProviderProvider:(CDUnknownBlockType)arg5 initialClientSettingsProvider:(CDUnknownBlockType)arg6;
- (void)updateSceneWithIdentifier:(id)arg1 display:(id)arg2 newSettings:(id)arg3 transitionContext:(id)arg4 initialClientSettingsProvider:(CDUnknownBlockType)arg5;
@property(readonly, retain, nonatomic) FBApplicationProcess *process; // @synthesize process=_process;
- (void)dealloc;
- (id)initWithApplicationBundleID:(id)arg1 executionContextProvider:(CDUnknownBlockType)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FBApplicationWatchdog : BSWatchdog
{
    int _type;
}

+ (id)stringForType:(int)arg1;
@property(readonly, nonatomic) int type; // @synthesize type=_type;
- (id)description;
- (id)initWithType:(int)arg1 timeout:(double)arg2 queue:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (id)initWithTimeout:(double)arg1 queue:(id)arg2 completion:(CDUnknownBlockType)arg3;

@end

@interface FBDefaultLogger : FBFileLogger
{
}

- (int)maxLogSize;
- (void)_setEnabled:(_Bool)arg1;
- (id)name;
- (_Bool)isEnabled;

@end

@interface FBDisplay : FBSDisplay
{
}

@end

@interface FBDisplayManager : NSObject
{
    NSHashTable *_observers;
    NSMapTable *_displayIDToFBSDisplayMap;
    NSMutableSet *_displaysDebouncing;
    FBSDisplay *_mainDisplay;
}

+ (id)mainDisplay;
+ (id)sharedInstance;
@property(retain, nonatomic) FBSDisplay *mainDisplay; // @synthesize mainDisplay=_mainDisplay;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)_broadcastFBSDisplayDidConnect:(id)arg1;
- (void)_displayDidDebounce:(id)arg1 broadcast:(_Bool)arg2;
- (void)_debounceDisplay:(id)arg1 broadcast:(_Bool)arg2;
- (void)_caDisplayDidConnect:(id)arg1 debounce:(_Bool)arg2 broadcast:(_Bool)arg3;
- (void)_caDisplayDidDisconnect:(id)arg1;
- (_Bool)_caDisplayIsMainDisplay:(id)arg1;
- (id)_fbsDisplayForCADisplay:(id)arg1;
- (void)_initializeDisplays;
- (id)description;
- (void)removeObserver:(id)arg1;
- (void)addObserver:(id)arg1;
- (id)displays;
- (id)init;

@end

@interface FBExtensionProcess : FBProcess
{
}

- (_Bool)isExtensionProcess;

@end

@interface FBLayerHost : CALayerHost
{
    FBWindowContext *_windowContext;
    double _scale;
    double _rotation;
    struct CGPoint _translation;
}

@property(nonatomic) struct CGPoint translation; // @synthesize translation=_translation;
@property(nonatomic) double rotation; // @synthesize rotation=_rotation;
@property(nonatomic) double scale; // @synthesize scale=_scale;
@property(readonly, retain, nonatomic) FBWindowContext *windowContext; // @synthesize windowContext=_windowContext;
- (id)description;
- (void)setDebug:(_Bool)arg1;
- (void)dealloc;
- (id)initWithWindowContext:(id)arg1;

@end

@interface FBLayerHostContainer : CALayer
{
    double _scale;
    double _rotation;
    struct CGPoint _translation;
}

@property(nonatomic) struct CGPoint translation; // @synthesize translation=_translation;
@property(nonatomic) double rotation; // @synthesize rotation=_rotation;
@property(nonatomic) double scale; // @synthesize scale=_scale;
- (id)description;
- (void)setDebug:(_Bool)arg1;

@end

@interface FBMutableApplicationDefaults : FBApplicationDefaults
{
}


// Remaining properties
@property(nonatomic) long long backgroundStyle; // @dynamic backgroundStyle;
@property(nonatomic) long long interfaceOrientation; // @dynamic interfaceOrientation;
@property(nonatomic) _Bool statusBarHidden; // @dynamic statusBarHidden;
@property(nonatomic) _Bool statusBarHiddenWhenVerticallyCompact; // @dynamic statusBarHiddenWhenVerticallyCompact;
@property(nonatomic) long long statusBarStyle; // @dynamic statusBarStyle;
@end

@interface FBProcessExecutionContext : NSObject
{
    NSArray *_arguments;
    NSDictionary *_environment;
    NSURL *_standardOutputURL;
    NSURL *_standardErrorURL;
    _Bool _waitForDebugger;
    _Bool _disableASLR;
    _Bool _checkForLeaks;
    long long _launchIntent;
    unsigned int _launchAssertionFlags;
    double _watchdogExtension;
}

+ (double)watchdogIntervalForLaunchIntent:(long long)arg1;
@property(nonatomic) double watchdogExtension; // @synthesize watchdogExtension=_watchdogExtension;
@property(nonatomic) unsigned int launchAssertionFlags; // @synthesize launchAssertionFlags=_launchAssertionFlags;
@property(nonatomic) long long launchIntent; // @synthesize launchIntent=_launchIntent;
@property(nonatomic) _Bool checkForLeaks; // @synthesize checkForLeaks=_checkForLeaks;
@property(nonatomic) _Bool disableASLR; // @synthesize disableASLR=_disableASLR;
@property(nonatomic) _Bool waitForDebugger; // @synthesize waitForDebugger=_waitForDebugger;
@property(retain, nonatomic) NSURL *standardErrorURL; // @synthesize standardErrorURL=_standardErrorURL;
@property(retain, nonatomic) NSURL *standardOutputURL; // @synthesize standardOutputURL=_standardOutputURL;
@property(retain, nonatomic) NSDictionary *environment; // @synthesize environment=_environment;
@property(retain, nonatomic) NSArray *arguments; // @synthesize arguments=_arguments;
- (unsigned int)_launchAssertionFlags;
- (double)_launchWatchdogInterval;
- (void)dealloc;

@end

@interface FBMutableProcessExecutionContext : FBProcessExecutionContext
{
}


// Remaining properties
@property(retain, nonatomic) NSArray *arguments;
@property(nonatomic) _Bool checkForLeaks;
@property(nonatomic) _Bool disableASLR;
@property(retain, nonatomic) NSDictionary *environment;
@property(nonatomic) unsigned int launchAssertionFlags;
@property(nonatomic) long long launchIntent;
@property(retain, nonatomic) NSURL *standardErrorURL;
@property(retain, nonatomic) NSURL *standardOutputURL;
@property(nonatomic) _Bool waitForDebugger;
@property(nonatomic) double watchdogExtension;
@end

@interface FBOcclusionsStack : NSObject
{
    NSCountedSet *_levels;
    NSMutableDictionary *_levelToCompositeOcclusions;
    NSMutableDictionary *_keyToEntry;
    NSMutableArray *_orderedEntries;
    NSMutableSet *_dirtyKeys;
}

- (void)_adjustEntry:(id)arg1 forLevel:(double)arg2 occlusions:(id)arg3;
- (id)occlusionsAppliedToKey:(id)arg1;
- (id)dirtyKeys;
- (_Bool)isDirty;
- (void)enumerateKeysByLevelWithBlock:(CDUnknownBlockType)arg1;
- (void)removeKey:(id)arg1;
- (void)setKey:(id)arg1 toLevel:(double)arg2 withOcclusions:(id)arg3;
- (_Bool)isEmpty;
- (void)dealloc;
- (id)init;

@end

@interface FBOcclusionsStackEntry : NSObject
{
    NSString *_key;
    double _level;
    NSSet *_occlusions;
    NSOrderedSet *_orderedOcclusions;
}

@property(readonly, copy, nonatomic) NSOrderedSet *orderedOcclusions; // @synthesize orderedOcclusions=_orderedOcclusions;
@property(nonatomic) double level; // @synthesize level=_level;
@property(readonly, copy, nonatomic) NSString *key; // @synthesize key=_key;
- (id)description;
@property(copy, nonatomic) NSSet *occlusions;
- (void)dealloc;
- (id)initWithKey:(id)arg1;

@end

@interface FBOrderedRequesters : NSObject
{
    NSMutableArray *_bands[4];
}

- (id)description;
- (void)prioritizeRequester:(id)arg1;
- (void)removeRequester:(id)arg1;
- (void)addRequester:(id)arg1 toBand:(int)arg2;
- (_Bool)containsRequester:(id)arg1 inBand:(int)arg2;
- (id)requesters;
- (id)frontmostRequester;
- (void)dealloc;
- (id)init;

@end

@interface FBPreferences : NSObject
{
    NSObject<OS_dispatch_queue> *_queue;
    NSMutableSet *_enabledLogNames;
}

+ (id)sharedInstance;
- (id)_extractEnabledLoggersFromPreferenceDomain:(id)arg1;
- (void)_queue_reload;
- (id)description;
- (_Bool)isLogEnabled:(id)arg1;
- (id)enabledLogNames;
- (void)reload;
- (void)dealloc;
- (id)init;

@end

@interface FBProcessCPUStatistics : NSObject
{
    BSMachSendRight *_taskNamePort;
    struct FBProcessTimes _times;
}

- (double)_elapsedCPUTime;
- (void)_hostwideUserElapsedCPUTime:(double *)arg1 systemElapsedCPUTime:(double *)arg2 idleElapsedCPUTime:(double *)arg3;
- (void)_getApplicationCPUTimesForUser:(double *)arg1 system:(double *)arg2 idle:(double *)arg3;
- (id)descriptionForCrashReport;
- (void)update;
@property(readonly, nonatomic) double totalElapsedIdleTime;
@property(readonly, nonatomic) double totalElapsedSystemTime;
@property(readonly, nonatomic) double totalElapsedUserTime;
@property(readonly, nonatomic) double totalElapsedTime;
- (void)dealloc;
- (id)initWithTaskNamePort:(id)arg1;

@end

@interface FBProcessManager : NSObject <FBApplicationProcessDelegate, FBApplicationProcessObserver>
{
    NSObject<OS_dispatch_queue> *_queue;
    NSObject<OS_dispatch_queue> *_callOutQueue;
    NSHashTable *_observers;
    NSMapTable *_processesByPID;
    NSMapTable *_processesByBundleID;
    FBApplicationProcess *_systemAppProcess;
    BKSProcessAssertion *_systemAppProcessAssertion;
    FBApplicationProcess *_foregroundAppProcess;
    int _workspaceLocked;
    int _workspaceLockedToken;
}

+ (id)sharedInstance;
@property(readonly, retain, nonatomic) FBApplicationProcess *systemApplicationProcess; // @synthesize systemApplicationProcess=_systemAppProcess;
- (void)_updateWorkspaceLockedState;
- (void)_queue_notifyObserversUsingBlock:(CDUnknownBlockType)arg1 completion:(CDUnknownBlockType)arg2;
- (id)_queue_processForPID:(int)arg1;
- (id)_queue_processesForBundleIdentifier:(id)arg1;
- (void)_queue_removeProcess:(id)arg1 withBundleID:(id)arg2 pid:(int)arg3;
- (void)_queue_addProcess:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)applicationProcessWillLaunch:(id)arg1;
- (void)noteProcess:(id)arg1 didUpdateState:(id)arg2;
- (void)noteProcessDidExit:(id)arg1;
- (id)_serviceClientAddedWithPID:(int)arg1 isUIApp:(_Bool)arg2 isExtension:(_Bool)arg3 bundleID:(id)arg4;
- (id)_serviceClientAddedWithAuditToken:(CDStruct_6ad76789 *)arg1;
- (id)_serviceClientAddedWithConnection:(id)arg1;
- (id)_systemServiceClientAdded:(id)arg1;
- (_Bool)_isWorkspaceLocked;
@property(readonly, copy) NSString *description;
- (id)createApplicationProcessForBundleID:(id)arg1 withExecutionContext:(id)arg2;
- (id)createApplicationProcessForBundleID:(id)arg1;
- (id)applicationProcessForPID:(int)arg1;
- (id)processForPID:(int)arg1;
- (id)applicationProcessesForBundleIdentifier:(id)arg1;
- (id)processesForBundleIdentifier:(id)arg1;
- (id)allApplicationProcesses;
- (id)allProcesses;
- (void)removeObserver:(id)arg1;
- (void)addObserver:(id)arg1;
- (_Bool)ping;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FBProcessQueueFactory : NSObject
{
}

+ (id)createProcessQueueForBundleID:(id)arg1 pid:(int)arg2;

@end

@interface FBProcessState : NSObject <NSCopying>
{
    int _pid;
    _Bool _running;
    _Bool _foreground;
    int _taskState;
    int _visibility;
    int _effectiveVisibility;
}

@property(nonatomic) int effectiveVisibility; // @synthesize effectiveVisibility=_effectiveVisibility;
@property(nonatomic) int visibility; // @synthesize visibility=_visibility;
@property(nonatomic) int taskState; // @synthesize taskState=_taskState;
@property(nonatomic, getter=isForeground) _Bool foreground; // @synthesize foreground=_foreground;
@property(nonatomic, getter=isRunning) _Bool running; // @synthesize running=_running;
@property(nonatomic) int pid; // @synthesize pid=_pid;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEqual:(id)arg1;
- (id)description;
- (id)initWithPid:(int)arg1;
- (id)init;

@end

@interface FBWindow : UIWindow
{
}

- (id)recursiveDescription;

@end

@interface FBRootWindow : FBWindow <FBSceneTransformTarget>
{
    UIView *_sceneContainerView;
    NSHashTable *_transforms;
    _Bool _mainDisplay;
}

+ (_Bool)_isSecure;
- (void)transformDidInvalidate:(id)arg1;
- (void)transformDidUpdate:(id)arg1;
- (void)_noteScreenDidChangeMode:(id)arg1;
- (void)_updateTransforms;
- (void)setScreen:(id)arg1;
- (void)updateSceneSettings;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (_Bool)_shouldApplyHorizontalPixelScaleTransform;
- (_Bool)_shouldPrepareScreenForWindow;
- (_Bool)_appearsInLoupe;
- (_Bool)_isOffsetByScreenJail;
- (_Bool)_usesWindowServerHitTesting;
- (_Bool)_isRotatedByScreenJail;
- (_Bool)_isClippedByScreenJail;
- (_Bool)_isScaledByScreenJail;
- (_Bool)_isConstrainedByScreenJail;
- (_Bool)_isWindowServerHostingManaged;
- (void)removeSceneTransform:(id)arg1;
- (void)attachSceneTransform:(id)arg1;
- (id)sceneContainerView;
- (void)dealloc;
- (id)initWithDisplay:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FBSDisplay (FBDisplay)
- (id)_screen;
@end

@interface FBScene : NSObject <FBSceneHost>
{
    FBWindowContextManager *_contextManager;
    FBWindowContextHostManager *_contextHostManager;
    _Bool _valid;
    id <FBSceneDelegate> _delegate;
    id <FBSceneClient> _client;
    id <FBSceneClientProvider> _clientProvider;
    FBProcess *_clientProcess;
    NSString *_identifier;
    FBSDisplay *_display;
    FBSMutableSceneSettings *_mutableSettings;
    FBSSceneSettings *_settings;
    FBSSceneClientSettings *_clientSettings;
    id <FBSceneBoundsDelegate> _boundsDelegate;
    unsigned long long _transactionID;
    _Bool _lockedForMutation;
}

@property(readonly, retain, nonatomic) FBSMutableSceneSettings *mutableSettings; // @synthesize mutableSettings=_mutableSettings;
@property(nonatomic, setter=_setBoundsDelegate:) id <FBSceneBoundsDelegate> _boundsDelegate; // @synthesize _boundsDelegate;
@property(nonatomic, setter=_setLockedForMutation:) _Bool _lockedForMutation; // @synthesize _lockedForMutation;
@property(readonly, nonatomic) unsigned long long _transactionID; // @synthesize _transactionID;
@property(readonly, retain, nonatomic) id <FBSceneClientProvider> clientProvider; // @synthesize clientProvider=_clientProvider;
@property(readonly, retain, nonatomic) id <FBSceneClient> client; // @synthesize client=_client;
@property(nonatomic) id <FBSceneDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic, getter=isValid) _Bool valid; // @synthesize valid=_valid;
@property(readonly, retain, nonatomic) FBProcess *clientProcess; // @synthesize clientProcess=_clientProcess;
@property(readonly, retain, nonatomic) FBSSceneClientSettings *clientSettings; // @synthesize clientSettings=_clientSettings;
@property(readonly, retain, nonatomic) FBSSceneSettings *settings; // @synthesize settings=_settings;
@property(readonly, retain, nonatomic) FBWindowContextHostManager *contextHostManager; // @synthesize contextHostManager=_contextHostManager;
@property(readonly, retain, nonatomic) FBWindowContextManager *contextManager; // @synthesize contextManager=_contextManager;
@property(readonly, retain, nonatomic) FBSDisplay *display; // @synthesize display=_display;
@property(readonly, copy, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
- (void)_handleSceneClientMessage:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)client:(id)arg1 didReceiveActions:(id)arg2;
- (void)client:(id)arg1 didUpdateClientSettings:(id)arg2 withDiff:(id)arg3 transitionContext:(id)arg4;
- (void)client:(id)arg1 detachContext:(id)arg2;
- (void)client:(id)arg1 updateContext:(id)arg2;
- (void)client:(id)arg1 attachContext:(id)arg2;
- (id)_descriptionWithMultilinePrefix:(id)arg1;
- (unsigned long long)_incrementTransactionID;
- (void)_invalidateWithTransitionContext:(id)arg1;
- (void)_applyMutableSettings:(id)arg1 withTransitionContext:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)debugDescription;
- (id)description;
- (void)sendActions:(id)arg1;
- (void)updateSettingsWithBlock:(CDUnknownBlockType)arg1;
- (void)updateSettings:(id)arg1 withTransitionContext:(id)arg2;
- (void)dealloc;
- (id)initWithIdentifier:(id)arg1 display:(id)arg2 initialClientSettings:(id)arg3 clientProvider:(id)arg4;

@end

@interface FBSceneClientProviderInvalidationAction : NSObject
{
    BSAction *_action;
}

- (void)invalidate;
- (void)dealloc;
- (id)init;
- (id)initWithHandler:(CDUnknownBlockType)arg1;

@end

@interface FBSceneContextContainerView : UIView
{
}

@end

@interface FBSceneEventQueue : BSEventQueue
{
}

@end

@interface FBSceneManager : NSObject <FBSceneDelegate, FBWindowContextManagerObserver>
{
    id <FBSceneManagerDelegate> _delegate;
    NSHashTable *_observers;
    NSMutableDictionary *_displayToRootWindow;
    NSMutableDictionary *_displayToOcclusionsStack;
    unsigned long long _synchronizationBlockDepth;
    unsigned int _synchronizationPort;
    NSMutableDictionary *_scenesByID;
    NSMapTable *_providerToSceneMap;
    NSHashTable *_providersWithOpenTransactions;
    FBSSceneClientSettingsDiffInspector *_clientSettingsDiffInspector;
    _Bool _applyingOrientationTransform;
    int _orientationNotificationToken;
    int _lastOrientation;
    FBSceneEventQueue *_eventQueue;
}

+ (void)synchronizeChanges:(CDUnknownBlockType)arg1;
+ (id)sharedInstance;
@property(nonatomic) id <FBSceneManagerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)windowContextManagerDidStopTrackingContexts:(id)arg1;
- (void)windowContextManagerWillStartTrackingContexts:(id)arg1;
- (void)scene:(id)arg1 didReceiveActions:(id)arg2;
- (void)scene:(id)arg1 didUpdateClientSettingsWithDiff:(id)arg2 oldClientSettings:(id)arg3 transitionContext:(id)arg4;
- (void)scene:(id)arg1 handleUpdateSettingsWithBlock:(CDUnknownBlockType)arg2;
- (void)scene:(id)arg1 handleUpdateToSettings:(id)arg2 withTransitionContext:(id)arg3;
- (void)_orientationChanged:(long long)arg1;
- (void)_noteSceneChangedLevel:(id)arg1;
- (void)_noteSceneChangedFrame:(id)arg1;
- (void)_noteSceneMovedToBackground:(id)arg1;
- (void)_stopContextHostingForScene:(id)arg1;
- (void)_noteSceneMovedToForeground:(id)arg1;
- (void)_startContextHostingForScene:(id)arg1;
- (void)_positionWrapperViewInRootViewOrderedCorrectly:(id)arg1 rootWindow:(id)arg2;
- (void)_updateMainDisplayRootWindowTransformsToWindow:(id)arg1;
- (id)_rootWindowForDisplay:(id)arg1;
- (void)_reEvaluateNeedForRootWindowOnDisplay:(id)arg1;
- (void)_enqueueObserverCalloutsForScene:(id)arg1 eventName:(id)arg2 withBlock:(CDUnknownBlockType)arg3;
- (void)_enqueueEventForScene:(id)arg1 withName:(id)arg2 block:(CDUnknownBlockType)arg3;
- (id)_occlusionStackForDisplay:(id)arg1 creatingIfNecessary:(_Bool)arg2;
- (void)_destroyScene:(id)arg1 withTransitionContext:(id)arg2;
- (void)_updateScene:(id)arg1 withSettings:(id)arg2 transitionContext:(id)arg3;
- (void)_applyMutableSettings:(id)arg1 toScene:(id)arg2 asUpdate:(_Bool)arg3 withTransitionContext:(id)arg4;
- (void)_sendOutstandingOcclusionChangesWithTransitionContext:(id)arg1;
- (void)_endSynchronizationBlock;
- (void)_beginSynchronizationBlock;
@property(readonly, copy) NSString *description;
- (void)shutdown:(_Bool)arg1;
- (void)removeDefaultTransform:(id)arg1 forDisplay:(id)arg2;
- (void)attachDefaultTransform:(id)arg1 forDisplay:(id)arg2;
- (void)destroyScene:(id)arg1 withTransitionContext:(id)arg2;
- (id)createSceneWithIdentifier:(id)arg1 settings:(id)arg2 initialClientSettings:(id)arg3 clientProvider:(id)arg4 transitionContext:(id)arg5;
- (id)createSceneWithIdentifier:(id)arg1 display:(id)arg2 settings:(id)arg3 initialClientSettings:(id)arg4 clientProvider:(id)arg5 transitionContext:(id)arg6;
- (id)scenesPassingTest:(CDUnknownBlockType)arg1;
- (id)scenesMatchingPredicate:(id)arg1;
- (void)enumerateScenesWithBlock:(CDUnknownBlockType)arg1;
- (id)sceneWithIdentifier:(id)arg1;
- (id)contextManagerForSceneID:(id)arg1;
- (id)hostManagerForSceneID:(id)arg1;
- (void)removeObserver:(id)arg1;
- (void)addObserver:(id)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FBSceneTransform : NSObject
{
    struct CGAffineTransform _transform;
    NSHashTable *_targets;
}

+ (struct CGAffineTransform)concatenateTransforms:(id)arg1;
@property(nonatomic) struct CGAffineTransform transform; // @synthesize transform=_transform;
- (void)removeTransformTarget:(id)arg1;
- (void)addTransformTarget:(id)arg1;
- (id)description;
- (void)dealloc;
- (id)_initWithTransform:(struct CGAffineTransform)arg1;
- (id)init;

@end

@interface FBSceneRotationTransform : FBSceneTransform
{
    long long _degrees;
    double _radians;
}

@property(nonatomic) long long degrees; // @synthesize degrees=_degrees;
@property(nonatomic) double radians; // @synthesize radians=_radians;
- (void)_updateTransform;
- (id)description;
- (id)initWithRadians:(double)arg1;
- (id)initWithDegrees:(long long)arg1;

@end

@interface FBServiceClientAuthenticator : NSObject
{
    NSString *_entitlement;
    unsigned long long _credentials;
}

+ (id)sharedForegroundUIAppClientAuthenticator;
+ (id)sharedUIAppClientAuthenticator;
+ (id)sharedSystemClientAuthenticator;
- (int)_authenticateAuditToken:(CDStruct_6ad76789 *)arg1 connection:(id)arg2 entitlement:(id)arg3 withResult:(CDUnknownBlockType)arg4;
- (int)authenticateConnection:(id)arg1 forEntitlement:(id)arg2 withResult:(CDUnknownBlockType)arg3;
- (int)authenticateAuditToken:(CDStruct_6ad76789 *)arg1 forEntitlement:(id)arg2 withResult:(CDUnknownBlockType)arg3;
- (int)authenticateConnection:(id)arg1 withResult:(CDUnknownBlockType)arg2;
- (int)authenticateAuditToken:(CDStruct_6ad76789 *)arg1 withResult:(CDUnknownBlockType)arg2;
- (id)initWithEntitlement:(id)arg1 additionalCredentials:(unsigned long long)arg2;
- (id)initWithCredentials:(unsigned long long)arg1;
- (id)initWithEntitlement:(id)arg1;
- (id)init;

@end

@interface FBSystemApp : UIApplication <FBSceneClient, FBSSceneUpdater, BKSSystemApplicationDelegate, FBSceneClientProvider>
{
    FBSceneClientProviderInvalidationAction *_invalidationAction;
    NSMutableDictionary *_scenesByIdentifier;
    NSMapTable *_hostsByIdentifier;
    NSMutableDictionary *_initialClientSettingsByIdentifier;
}

+ (_Bool)systemApplicationIsAliveForWatchdog:(id)arg1;
+ (_Bool)systemApplicationShouldWaitForDataMigration:(id)arg1;
+ (_Bool)rendersLocally;
+ (_Bool)registerAsSystemApp;
+ (_Bool)shouldFixMainThreadPriority;
+ (_Bool)shouldCheckInWithBackboard;
- (void)scene:(id)arg1 didReceiveActions:(id)arg2;
- (void)scene:(id)arg1 didUpdateClientSettings:(id)arg2 withDiff:(id)arg3 transitionContext:(id)arg4;
- (void)scene:(id)arg1 didDetachContext:(id)arg2;
- (void)scene:(id)arg1 didReceiveUpdateToContext:(id)arg2;
- (void)scene:(id)arg1 didAttachContext:(id)arg2;
- (void)_updateSceneSettingsForScene:(id)arg1 context:(id)arg2;
- (_Bool)willObserveContextsManually;
- (void)unregisterDelegateForSceneID:(id)arg1;
- (void)registerDelegate:(id)arg1 forSceneID:(id)arg2;
- (void)host:(id)arg1 didReceiveActions:(id)arg2;
- (void)host:(id)arg1 didInvalidateWithTransitionContext:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)host:(id)arg1 didUpdateSettings:(id)arg2 withDiff:(id)arg3 transitionContext:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (void)endTransaction;
- (void)beginTransaction;
- (void)unregisterHost:(id)arg1;
- (id)registerHost:(id)arg1 withInitialClientSettings:(id)arg2;
- (void)registerInvalidationAction:(id)arg1;
- (id)_newSceneForWindow:(id)arg1 oldDisplay:(id)arg2 newDisplay:(id)arg3;
- (_Bool)openURL:(id)arg1;
- (_Bool)canOpenURL:(id)arg1;
- (_Bool)_saveSnapshotWithName:(id)arg1;
- (_Bool)handleDoubleHeightStatusBarTap:(long long)arg1;
- (void)resetIdleTimerAndUndim;
- (_Bool)isSuspendedUnderLock;
- (_Bool)isSuspendedEventsOnly;
- (_Bool)isSuspended;
- (_Bool)isFrontBoard;
- (unsigned long long)lastExitReason;
- (void)sendActionsToBackboard:(id)arg1;
- (id)fbsSceneWithIdentifier:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FBSystemAppScene : FBSScene <FBSSceneDelegate>
{
    FBSSceneImpl *_scene;
    id <FBSSceneDelegate> _delegate;
    BSAction *_invalidationAction;
}

- (void)scene:(id)arg1 didReceiveActions:(id)arg2;
- (void)scene:(id)arg1 didUpdateWithDiff:(id)arg2 transitionContext:(id)arg3 completion:(CDUnknownBlockType)arg4;
@property(readonly, copy) NSString *description;
- (id)_descriptionWithMultilinePrefix:(id)arg1;
- (void)detachSceneContext:(id)arg1;
- (void)attachSceneContext:(id)arg1;
- (void)detachContext:(id)arg1;
- (void)attachContext:(id)arg1;
- (void)sendActions:(id)arg1;
- (void)updateClientSettingsWithBlock:(CDUnknownBlockType)arg1;
- (void)updateClientSettings:(id)arg1 withTransitionContext:(id)arg2;
- (id)fbsDisplay;
- (id)display;
- (id)contexts;
- (id)clientSettings;
- (id)settings;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (id)identifier;
- (void)dealloc;
- (id)_initWithSceneImpl:(id)arg1 invalidationAction:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FBSystemService : NSObject
{
    FBApplicationLibrary *_library;
    id <FBSystemServiceDelegate> _delegate;
    NSObject<OS_dispatch_queue> *_queue;
    FBSystemServiceServer *_server;
}

+ (id)sharedInstance;
@property(retain, nonatomic) FBSystemServiceServer *server; // @synthesize server=_server;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(nonatomic) id <FBSystemServiceDelegate> delegate; // @synthesize delegate=_delegate;
- (_Bool)_isWhitelistedLaunchSuspendedApp:(id)arg1;
- (_Bool)_requiresOpenApplicationEntitlement:(id)arg1 options:(id)arg2 originalSource:(id)arg3;
- (void)_performExitTasksForRelaunch:(_Bool)arg1;
- (void)handleActions:(id)arg1 source:(id)arg2 withResult:(CDUnknownBlockType)arg3;
- (void)_activateURL:(id)arg1 application:(id)arg2 options:(id)arg3 source:(id)arg4 originalSource:(id)arg5 withResult:(CDUnknownBlockType)arg6;
- (void)activateURL:(id)arg1 application:(id)arg2 options:(id)arg3 source:(id)arg4 originalSource:(id)arg5 withResult:(CDUnknownBlockType)arg6;
- (void)_reallyActivateApplication:(id)arg1 options:(id)arg2 source:(id)arg3 originalSource:(id)arg4 withResult:(CDUnknownBlockType)arg5;
- (void)_activateApplication:(id)arg1 options:(id)arg2 source:(id)arg3 originalSource:(id)arg4 withResult:(CDUnknownBlockType)arg5;
- (void)activateApplication:(id)arg1 options:(id)arg2 source:(id)arg3 originalSource:(id)arg4 withResult:(CDUnknownBlockType)arg5;
- (void)canActivateApplication:(id)arg1 withResult:(CDUnknownBlockType)arg2;
- (void)terminateApplicationGroup:(long long)arg1 forReason:(long long)arg2 andReport:(_Bool)arg3 withDescription:(id)arg4 source:(id)arg5;
- (void)terminateApplication:(id)arg1 forReason:(long long)arg2 andReport:(_Bool)arg3 withDescription:(id)arg4 source:(id)arg5;
- (void)_terminateProcess:(id)arg1 forReason:(long long)arg2 andReport:(_Bool)arg3 withDescription:(id)arg4;
- (void)exitAndRelaunch:(_Bool)arg1 withOptions:(unsigned long long)arg2;
- (int)pidForApplication:(id)arg1;
- (id)systemApplicationBundleIdentifier;
- (void)prepareForExitAndRelaunch:(_Bool)arg1;
- (void)exitAndRelaunch:(_Bool)arg1;
- (void)shutdownAndReboot:(_Bool)arg1;
- (void)dealloc;
- (id)initWithQueue:(id)arg1;

@end

@interface FBSystemServiceServer : BSBaseXPCServer
{
}

+ (id)sharedInstance;
- (id)_stringFromMessage:(id)arg1 key:(char *)arg2;
- (void)_handleShutdown:(id)arg1 forClient:(id)arg2;
- (void)_handleTerminateApplicationGroup:(id)arg1;
- (void)_handleTerminateApplication:(id)arg1;
- (void)_handleActions:(id)arg1;
- (void)_handleActivateURL:(id)arg1;
- (void)_handleActivateApplication:(id)arg1;
- (void)_handleCanActivateApplication:(id)arg1;
- (void)_handlePidForApplication:(id)arg1;
- (void)_handleSystemApplicationBundleIdentifier:(id)arg1;
- (void)_handleSetNextWakeInterval:(id)arg1 forClient:(id)arg2;
- (void)_handleAppRequestBrightness:(id)arg1 forClient:(id)arg2;
- (void)_handleGetBadgeValue:(id)arg1 forClient:(id)arg2;
- (void)_handleSetBadgeValue:(id)arg1 forClient:(id)arg2;
- (void)_handleUIAppCheckIn:(id)arg1 forClient:(id)arg2;
- (void)_handleConnect:(id)arg1 forClient:(id)arg2;
- (void)_handleIsClientLoggingEnabled:(id)arg1 forClient:(id)arg2;
- (void)queue_handleMessage:(id)arg1 client:(id)arg2;
- (void)queue_clientRemoved:(id)arg1;
- (void)queue_clientAdded:(id)arg1;
- (Class)queue_classForNewClientConnection:(id)arg1;
- (_Bool)ping;
- (void)dealloc;

@end

@interface FBSystemServiceServerClient : BSBasicServerClient
{
    _Bool _uiApp;
    NSString *_bundleID;
    _Bool _extension;
    NSString *_bundlePath;
}

@property(retain, nonatomic) NSString *bundlePath; // @synthesize bundlePath=_bundlePath;
@property(readonly, retain, nonatomic) NSString *bundleID; // @synthesize bundleID=_bundleID;
@property(nonatomic, getter=isExtension) _Bool extension; // @synthesize extension=_extension;
@property(nonatomic, getter=isUIApp) _Bool UIApp; // @synthesize UIApp=_uiApp;
@property(readonly, nonatomic) int pid;
- (id)description;
- (void)dealloc;
- (id)initWithConnection:(id)arg1;

@end

@interface FBTransactionWatchdog : BSWatchdog
{
    FBTransaction *_transaction;
}

@property(readonly, retain, nonatomic) FBTransaction *transaction; // @synthesize transaction=_transaction;
- (void)_dumpDebugInfo;
- (void)_watchdogTimerFired;
- (void)invalidate;
- (void)dealloc;
- (id)initWithTransaction:(id)arg1;

@end

@interface FBUIApplicationClientSettings : BSMutableSettings
{
}

- (_Bool)isUIApplicationClientSettings;
@property(nonatomic) _Bool allowCPUThrottlingWhenResuming;
@property(nonatomic) double watchdogExtension;

@end

@interface FBUIApplicationResignActiveAssertion : NSObject
{
    _Bool _relinquished;
    FBSDisplay *_display;
    long long _reason;
}

@property(nonatomic) long long reason; // @synthesize reason=_reason;
@property(retain, nonatomic) FBSDisplay *display; // @synthesize display=_display;
- (id)description;
- (void)relinquish;
- (void)dealloc;
- (id)initWithReason:(long long)arg1 forDisplay:(id)arg2;

@end

@interface FBUIApplicationResignActiveManager : NSObject <FBSceneManagerObserver, FBProcessManagerObserver>
{
    NSCountedSet *_activeReasons;
    NSHashTable *_activeAssertions;
    NSMutableSet *_eligibleProcesses;
}

+ (id)sharedInstance;
- (void)processManager:(id)arg1 didRemoveProcess:(id)arg2;
- (void)processManager:(id)arg1 didAddProcess:(id)arg2;
- (void)sceneManager:(id)arg1 didDestroyScene:(id)arg2;
- (void)sceneManager:(id)arg1 willDestroyScene:(id)arg2;
- (void)sceneManager:(id)arg1 didCommitUpdateForScene:(id)arg2 transactionID:(unsigned long long)arg3;
- (void)sceneManager:(id)arg1 willCommitUpdateForScene:(id)arg2 transactionID:(unsigned long long)arg3;
- (void)sceneManager:(id)arg1 willUpdateScene:(id)arg2 withSettings:(id)arg3 transitionContext:(id)arg4;
- (void)sceneManager:(id)arg1 didCreateScene:(id)arg2 withClient:(id)arg3;
- (void)_untrackProcess:(id)arg1;
- (void)_trackProcess:(id)arg1;
- (void)_noteSceneWillUpdate:(id)arg1 oldSettings:(id)arg2 newSettings:(id)arg3;
- (void)_sendResumeActiveForReason:(long long)arg1 toProcess:(id)arg2;
- (void)_sendResignActiveForReason:(long long)arg1 toProcess:(id)arg2;
- (void)_sendResumeActiveForReason:(long long)arg1;
- (void)_sendResignActiveForReason:(long long)arg1;
- (void)_sendResumeActiveToProcess:(id)arg1;
- (void)_sendResignActiveToProcess:(id)arg1;
- (_Bool)_areEligibleSceneSettings:(id)arg1 forProcess:(id)arg2;
- (_Bool)_isEligibleScene:(id)arg1 forSettings:(id)arg2;
- (_Bool)_isEligibleScene:(id)arg1;
- (_Bool)_isEligibleProcess:(id)arg1;
- (_Bool)_isEligibleDisplay:(id)arg1;
- (void)_removeDeactivationReason:(long long)arg1;
- (void)_addDeactivationReason:(long long)arg1;
- (void)removeAssertion:(id)arg1;
- (void)addAssertion:(id)arg1;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FBUIApplicationService : NSObject
{
    id <FBUIApplicationServiceDelegate> _delegate;
    NSObject<OS_dispatch_queue> *_queue;
}

+ (id)sharedInstance;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(nonatomic) id <FBUIApplicationServiceDelegate> delegate; // @synthesize delegate=_delegate;
- (_Bool)handleApplicationProcess:(id)arg1 setNextWakeInterval:(double)arg2;
- (void)handleApplicationProcess:(id)arg1 requestBrightness:(double)arg2 completion:(CDUnknownBlockType)arg3;
- (void)handleApplication:(id)arg1 getBadgeValueWithCompletion:(CDUnknownBlockType)arg2;
- (void)handleApplication:(id)arg1 setBadgeValue:(id)arg2;
- (void)dealloc;
- (id)initWithQueue:(id)arg1;

@end

@interface FBWorkspace : NSObject <FBSceneClientProvider>
{
    BSZeroingWeakReference *_zeroingWeakDelegate;
    BSZeroingWeakReference *_zeroingWeakProcess;
    FBWorkspaceServer *_server;
    NSMapTable *_hostToClientMap;
    NSObject<OS_dispatch_queue> *_queue;
    NSObject<OS_dispatch_queue> *_callOutQueue;
    FBSceneClientProviderInvalidationAction *_invalidationAction;
    _Bool _willInvalidate;
    _Bool _invalidated;
}

- (void)server:(id)arg1 handleDestroySceneRequest:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;
- (void)server:(id)arg1 handleCreateSceneRequest:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;
- (void)endTransaction;
- (void)beginTransaction;
- (void)unregisterHost:(id)arg1;
- (id)registerHost:(id)arg1 withInitialClientSettings:(id)arg2;
- (void)registerInvalidationAction:(id)arg1;
- (id)_newSceneWithHost:(id)arg1 initialClientSettings:(id)arg2;
- (id)_newWorkspaceServer;
- (id)_server;
- (id)_queue;
- (void)_queue_enumerateScenes:(CDUnknownBlockType)arg1;
- (void)_queue_invalidateAllScenes;
- (void)_queue_willInvalidateAllScenes;
- (void)_queue_fireInvalidationAction;
- (void)sendActions:(id)arg1;
@property(readonly, retain, nonatomic) BSAuditToken *auditToken;
@property(readonly, nonatomic) FBProcess *process;
@property(nonatomic) id <FBWorkspaceDelegate> delegate;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)initWithParentProcess:(id)arg1 queue:(id)arg2 callOutQueue:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FBUIApplicationWorkspace : FBWorkspace
{
}

- (id)_applicationServer;
- (id)_newSceneWithHost:(id)arg1 initialClientSettings:(id)arg2;
- (id)_newWorkspaceServer;
- (void)_queue_parentProcessDidExitWithContext:(id)arg1;

@end

@interface FBWorkspaceScene : NSObject <FBWorkspaceServerSceneEventHandler, FBSceneClient>
{
    id <FBSceneHost> _host;
    FBWorkspace *_workspace;
    NSObject<OS_dispatch_queue> *_workspaceQueue;
    NSString *_identifier;
    FBSDisplay *_display;
    FBSSceneSettings *_settings;
    FBSSceneClientSettings *_clientSettings;
    _Bool _sentCreationEvent;
    _Bool _invalidated;
}

@property(copy, nonatomic, getter=_workspaceQueue_sceneSettings, setter=_workspaceQueue_setSceneSettings:) FBSSceneSettings *sceneSettings; // @synthesize sceneSettings=_settings;
@property(nonatomic, getter=_workspaceQueue_hasSentCreationEvent, setter=_workspaceQueue_setSentCreationEvent:) _Bool sentCreationEvent; // @synthesize sentCreationEvent=_sentCreationEvent;
- (void)sceneDidReceiveActions:(id)arg1;
- (void)sceneDidUpdateClientSettings:(id)arg1;
- (void)sceneDetachContext:(id)arg1;
- (void)sceneUpdateContext:(id)arg1;
- (void)sceneAttachContext:(id)arg1;
- (void)host:(id)arg1 didReceiveActions:(id)arg2;
- (void)host:(id)arg1 didInvalidateWithTransitionContext:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)host:(id)arg1 didUpdateSettings:(id)arg2 withDiff:(id)arg3 transitionContext:(id)arg4 completion:(CDUnknownBlockType)arg5;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
- (id)_descriptionWithMultilinePrefix:(id)arg1;
- (void)_workspaceQueue_sendDestroyWithTransitionContext:(id)arg1 responseEventHandler:(CDUnknownBlockType)arg2;
- (void)_workspaceQueue_sendSettingsDiff:(id)arg1 transitionContext:(id)arg2 responseEventHandler:(CDUnknownBlockType)arg3;
- (void)_workspaceQueue_invalidate;
- (id)_workspaceQueue;
- (id)_workspaceQueue_process;
- (void)_workspaceQueue_dispatchClientBlockIfNecessary:(CDUnknownBlockType)arg1;
- (void)invalidate;
@property(readonly, copy, nonatomic) FBSSceneSettings *settings;
@property(readonly, nonatomic) id <FBSceneHost> host;
@property(readonly, nonatomic) FBWorkspace *parentWorkspace;
@property(readonly, copy, nonatomic) NSString *identifier;
- (void)dealloc;
- (id)initWithParentWorkspace:(id)arg1 host:(id)arg2 initialClientSettings:(id)arg3;

// Remaining properties
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FBUIApplicationWorkspaceScene : FBWorkspaceScene
{
    NSMutableArray *_watchdogStack;
    BKSProcessAssertion *_launchBoostahAssertion;
    BKSProcessAssertion *_resumeProcessAssertion;
    BKSProcessAssertion *_suspendingProcessAssertion;
    BKSProcessAssertion *_seoProcessAssertion;
    BKSProcessAssertion *_deliverMessageProcessAssertion;
    unsigned long long _deliverMessageProcessAssertionCount;
    int _suspendType;
    _Bool _createResponseReceived;
    _Bool _transitioningToForeground;
}

@property(readonly, nonatomic, getter=_workspaceQueue_isTransitioningToForeground) _Bool transitioningToForeground; // @synthesize transitioningToForeground=_transitioningToForeground;
- (void)_workspaceQueue_dropAllProcessAssertions;
- (void)_workspaceQueue_dropDeliverMessageProcessAssertion:(_Bool)arg1;
- (void)_workspaceQueue_dropDeliverMessageProcessAssertion;
- (void)_workspaceQueue_takeDeliverMessageProcessAssertionWithTransitionContext:(id)arg1;
- (void)_workspaceQueue_dropSuspendingProcessAssertion;
- (void)_workspaceQueue_takeSuspendingProcessAssertion;
- (void)_workspaceQueue_dropSEOProcessAssertion;
- (void)_workspaceQueue_takeSEOProcessAssertionWithTransitionContext:(id)arg1;
- (void)_workspaceQueue_dropResumeProcessAssertion;
- (void)_workspaceQueue_takeResumeProcessAssertionWithTransitionContext:(id)arg1;
- (id)_workspaceQueue_newProcessAssertionForReason:(unsigned int)arg1 withName:(id)arg2 transitionContext:(id)arg3;
- (unsigned long long)_workspaceQueue_determineSceneActionFromSettings:(id)arg1 toSettings:(id)arg2;
- (long long)_workspaceQueue_lifecycleStateForSettings:(id)arg1;
- (void)_workspaceQueue_cancelAllWatchdogTimers;
- (void)_workspaceQueue_cancelWatchdogTimer:(id)arg1;
- (id)_workspaceQueue_createWatchdogForSceneAction:(unsigned long long)arg1 transitionContext:(id)arg2;
- (int)_workspaceQueue_pid;
- (id)_workspaceQueue_process;
- (id)_workspaceQueue_clientSettingsFromTransitionContext:(id)arg1;
- (void)_dispatchBlockAfterProcessLaunch:(CDUnknownBlockType)arg1;
- (void)_workspaceQueue_deactivateResponseReceived:(id)arg1;
- (void)_workspaceQueue_deactivateForSEO:(_Bool)arg1 withSettings:(id)arg2 transitionContext:(id)arg3 eventBlock:(CDUnknownBlockType)arg4;
- (void)_workspaceQueue_activateResponseReceived:(id)arg1;
- (void)_workspaceQueue_activateForSEO:(_Bool)arg1 withSettings:(id)arg2 transitionContext:(id)arg3 eventBlock:(CDUnknownBlockType)arg4;
- (void)host:(id)arg1 didInvalidateWithTransitionContext:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)host:(id)arg1 didUpdateSettings:(id)arg2 withDiff:(id)arg3 transitionContext:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (void)_workspaceQueue_takeAssertionsForDeactivation:(_Bool)arg1 transitionContext:(id)arg2;
- (void)_workspaceQueue_invalidate;
- (id)parentWorkspace;
- (void)dealloc;
- (id)initWithParentWorkspace:(id)arg1 host:(id)arg2 initialClientSettings:(id)arg3;

@end

@interface FBWorkspaceServer : NSObject
{
    NSObject<OS_dispatch_queue> *_queue;
    NSObject<OS_xpc_object> *_connection;
    BSSignal *_invalidateSignal;
    NSMutableDictionary *_sceneIDToSceneHandlerMap;
    NSMutableArray *_messagesQueuedForSend;
    id <FBWorkspaceServerDelegate> _delegate;
    unsigned long long _transactionBlockDepth;
    _Bool _triedToSendMessageInTransaction;
}

- (id)_handlerForSceneID:(id)arg1;
- (void)_queue_deserializeEventFromMessage:(id)arg1 ofType:(Class)arg2 withHandlerBlock:(CDUnknownBlockType)arg3;
- (void)_queue_deserializeEventFromMessage:(id)arg1 ofType:(Class)arg2 withSceneHandlerBlock:(CDUnknownBlockType)arg3;
- (void)_queue_handleSceneDetachContext:(id)arg1;
- (void)_queue_handleSceneUpdateContext:(id)arg1;
- (void)_queue_handleSceneAttachContext:(id)arg1;
- (void)_queue_handleSceneDidReceiveActions:(id)arg1;
- (void)_queue_handleSceneDidUpdateClientSettings:(id)arg1;
- (void)_queue_handleDestroySceneRequest:(id)arg1;
- (void)_queue_handleCreateSceneRequest:(id)arg1;
- (void)_queue_handleMessage:(id)arg1;
- (_Bool)_queue_handleMessage:(id)arg1 withType:(long long)arg2;
- (void)_queue_sendReplyForMessage:(id)arg1 withEvent:(id)arg2;
- (void)_queue_sendMessage:(long long)arg1 withMessagePacker:(CDUnknownBlockType)arg2 withReplyHandler:(CDUnknownBlockType)arg3;
- (void)_queue_sendMessage:(long long)arg1 withEvent:(id)arg2 withResponseEvent:(CDUnknownBlockType)arg3 ofType:(Class)arg4;
- (void)_queue_sendMessage:(long long)arg1 withEvent:(id)arg2;
- (id)_queue;
- (void)_queue_clientExited;
- (void)_queue_invalidate;
- (void)_queue_setXPCConnection:(id)arg1;
- (void)endTransaction;
- (void)beginTransaction;
- (void)sendSceneActionsEvent:(id)arg1;
- (void)sendActionsEvent:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)sendDestroySceneEvent:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)sendSceneUpdateEvent:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)sendCreateSceneEvent:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)unregisterSceneEventHandlerForSceneID:(id)arg1;
- (void)registerSceneEventHandler:(id)arg1 forSceneID:(id)arg2;
- (id)auditToken;
@property(nonatomic) id <FBWorkspaceServerDelegate> delegate;
- (void)invalidate;
- (void)dealloc;
- (id)initWithQueue:(id)arg1;

@end

@interface FBUIApplicationWorkspaceServer : FBWorkspaceServer
{
}

- (_Bool)_queue_handleMessage:(id)arg1 withType:(long long)arg2;
- (void)sendProcessAssertionExpirationImminent;
- (void)sendExitEventWithCompletion:(CDUnknownBlockType)arg1;
- (void)sendLaunchEvent:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;

@end

@interface FBUpdateSceneTransaction : FBTransaction <FBSceneManagerObserver, FBSynchronizedTransaction>
{
    FBSceneManager *_sceneManager;
    NSString *_sceneID;
    FBSDisplay *_display;
    FBSSceneSettings *_newSceneSettings;
    FBSSceneTransitionContext *_transitionContext;
    FBSSceneClientSettings *_clientSettings;
    id <FBSceneClientProvider> _clientProvider;
    FBProcess *_process;
    CDUnknownBlockType _clientProviderProvider;
    CDUnknownBlockType _clientSettingsProvider;
    FBWaitForSceneDestructionTransaction *_destuctionTransaction;
    id <FBSynchronizedTransactionDelegate> _synchronizationDelegate;
    unsigned long long _transactionID;
    _Bool _willCommitUpdateFinished;
    _Bool _waitsForSceneCommit;
    _Bool _readyToCommit;
    _Bool _didCommit;
    _Bool _destroyed;
    id _context;
}

@property(nonatomic) id <FBSynchronizedTransactionDelegate> synchronizationDelegate; // @synthesize synchronizationDelegate=_synchronizationDelegate;
- (void)_enumerateUpdateSceneObserversWithBlock:(CDUnknownBlockType)arg1;
- (void)performSynchronizedCommit;
- (_Bool)isReadyForSynchronizedCommit;
- (void)sceneManager:(id)arg1 didDestroyScene:(id)arg2;
- (void)sceneManager:(id)arg1 willDestroyScene:(id)arg2;
- (void)sceneManager:(id)arg1 didCommitUpdateForScene:(id)arg2 transactionID:(unsigned long long)arg3;
- (void)sceneManager:(id)arg1 willCommitUpdateForScene:(id)arg2 transactionID:(unsigned long long)arg3;
- (void)sceneManager:(id)arg1 willUpdateScene:(id)arg2 withSettings:(id)arg3 transitionContext:(id)arg4;
- (void)sceneManager:(id)arg1 didCreateScene:(id)arg2 withClient:(id)arg3;
- (id)_customizedDescriptionProperties;
- (void)_didInterruptWithReason:(id)arg1;
- (_Bool)_canBeInterrupted;
- (void)_childTransactionDidComplete:(id)arg1;
- (void)_didComplete;
- (void)_begin;
- (void)_performCommit;
- (void)_commitSceneOrWait;
- (void)_updateScene;
- (void)_createScene;
- (void)_commitSceneUpdate:(CDUnknownBlockType)arg1;
- (void)removeObserver:(id)arg1;
- (void)addObserver:(id)arg1;
@property(nonatomic) _Bool waitsForSceneCommit;
@property(retain, nonatomic) id context;
@property(readonly, nonatomic) _Bool destroyed;
@property(readonly, retain, nonatomic) FBSSceneTransitionContext *transitionContext;
@property(readonly, retain, nonatomic) FBSSceneSettings *newSettings;
@property(readonly, retain, nonatomic) FBSDisplay *display;
@property(readonly, retain, nonatomic) NSString *sceneIdentifier;
@property(readonly, retain, nonatomic) FBScene *scene;
- (void)dealloc;
- (id)initWithSceneToCreate:(id)arg1 display:(id)arg2 newSettings:(id)arg3 transitionContext:(id)arg4 clientProvider:(id)arg5 initialClientSettings:(id)arg6;
- (id)initWithSceneToUpdate:(id)arg1 newSettings:(id)arg2 transitionContext:(id)arg3;
- (id)initWithSceneIdentifier:(id)arg1 process:(id)arg2 display:(id)arg3 newSettings:(id)arg4 transitionContext:(id)arg5 clientProviderProvider:(CDUnknownBlockType)arg6 initialClientSettingsProvider:(CDUnknownBlockType)arg7;
- (id)_initWithSceneIdentifier:(id)arg1 display:(id)arg2 newSettings:(id)arg3 transitionContext:(id)arg4 clientProvider:(id)arg5 initialClientSettings:(id)arg6;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FBUpdateWorkspaceScenesTransaction : FBTransaction
{
    FBApplicationProcessLaunchTransaction *_processLaunchTransaction;
    FBSceneManager *_sceneManager;
    FBProcessManager *_processManager;
    NSMutableArray *_updateSceneTransactions;
    FBWorkspace *_workspace;
    FBProcess *_process;
}

- (void)_childTransactionDidComplete:(id)arg1;
- (void)_didRemoveChildTransaction:(id)arg1;
- (void)_willAddChildTransaction:(id)arg1;
- (id)addUpdateSceneTransactionForSceneIdentifier:(id)arg1 display:(id)arg2 newSettings:(id)arg3 transitionContext:(id)arg4 initialClientSettingsProvider:(CDUnknownBlockType)arg5;
@property(readonly, nonatomic) _Bool processLaunchFailed;
@property(readonly, nonatomic) _Bool processExited;
@property(readonly, retain, nonatomic) FBProcess *process;
@property(readonly, retain, nonatomic) FBWorkspace *workspace;
@property(readonly, retain, nonatomic) NSArray *updateSceneTransactions;
- (void)dealloc;
- (id)initWithWorkspace:(id)arg1;

@end

@interface FBWaitForProcessDeathTransaction : FBTransaction <FBProcessObserver>
{
    FBProcessManager *_manager;
    FBProcess *_process;
    double _timeout;
    BSWatchdog *_watchdog;
}

@property(readonly, nonatomic) double timeout; // @synthesize timeout=_timeout;
@property(readonly, retain, nonatomic) FBProcess *process; // @synthesize process=_process;
- (void)processDidExit:(id)arg1;
- (id)_customizedDescriptionProperties;
- (void)_didComplete;
- (void)_begin;
- (void)dealloc;
- (id)initWithProcess:(id)arg1 timeout:(double)arg2;
- (id)initWithProcess:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FBWaitForSceneDestructionTransaction : FBTransaction <FBSceneManagerObserver>
{
    FBSceneManager *_sceneManager;
    FBScene *_sceneToWaitForDeath;
}

@property(readonly, retain, nonatomic) FBScene *scene; // @synthesize scene=_sceneToWaitForDeath;
- (void)sceneManager:(id)arg1 didDestroyScene:(id)arg2;
- (void)sceneManager:(id)arg1 willDestroyScene:(id)arg2;
- (void)sceneManager:(id)arg1 didCommitUpdateForScene:(id)arg2 transactionID:(unsigned long long)arg3;
- (void)sceneManager:(id)arg1 willCommitUpdateForScene:(id)arg2 transactionID:(unsigned long long)arg3;
- (void)sceneManager:(id)arg1 willUpdateScene:(id)arg2 withSettings:(id)arg3 transitionContext:(id)arg4;
- (void)sceneManager:(id)arg1 didCreateScene:(id)arg2 withClient:(id)arg3;
- (id)_customizedDescriptionProperties;
- (void)_didComplete;
- (void)_begin;
- (void)dealloc;
- (id)initWithScene:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FBWindowContext : NSObject
{
    unsigned int _contextID;
    double _level;
    unsigned int _identifier;
}

+ (id)contextWithID:(unsigned int)arg1 level:(double)arg2;
+ (id)contextWithFBSContext:(id)arg1;
@property(readonly, nonatomic) double level; // @synthesize level=_level;
@property(readonly, nonatomic) unsigned int identifier; // @synthesize identifier=_identifier;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)init;
- (id)initWithContextID:(unsigned int)arg1 level:(double)arg2;

@end

@interface FBWindowContextHostInfo : NSObject <FBWindowContextManagerObserver>
{
    FBWindowContextManager *_contextManager;
    FBScene *_scene;
    FBWindowContextHostWrapperView *_wrapperView;
    NSMutableSet *_hiddenContexts;
    NSDictionary *_realContextHostViewChangedProperties;
    NSDictionary *_realContextHostViewOriginalProperties;
}

@property(retain, nonatomic) NSDictionary *realContextHostViewOriginalProperties; // @synthesize realContextHostViewOriginalProperties=_realContextHostViewOriginalProperties;
@property(retain, nonatomic) NSDictionary *realContextHostViewChangedProperties; // @synthesize realContextHostViewChangedProperties=_realContextHostViewChangedProperties;
@property(readonly, retain, nonatomic) NSMutableSet *hiddenContexts; // @synthesize hiddenContexts=_hiddenContexts;
@property(readonly, retain, nonatomic) FBWindowContextHostWrapperView *wrapperView; // @synthesize wrapperView=_wrapperView;
- (void)windowContextManager:(id)arg1 didRepositionContext:(id)arg2 from:(unsigned long long)arg3 to:(unsigned long long)arg4;
- (void)dealloc;
- (id)initWithContextManager:(id)arg1 hostManager:(id)arg2 scene:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FBWindowContextHostManager : NSObject <FBWindowContextHostViewDelegate>
{
    FBWindowContextManager *_contextManager;
    FBScene *_scene;
    NSString *_identifier;
    UIColor *_defaultBackgroundColorWhileHosting;
    UIColor *_defaultBackgroundColorWhileNotHosting;
    FBWindowContextHostView *_hostView;
    _Bool _suspended;
    _Bool _invalidated;
    FBOrderedRequesters *_hostRequesters;
    NSMutableDictionary *_hostRequesterInfo;
    NSHashTable *_observers;
    id <FBWindowContextHostManagerDelegate> _delegate;
    struct {
        unsigned int delegateOverrideRequester:1;
        unsigned int delegateShouldEnableContextHostingForRequester:1;
    } _flags;
}

@property(readonly, nonatomic) FBScene *scene; // @synthesize scene=_scene;
@property(copy, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
- (void)windowContextHostViewHostedContextsDidChange:(id)arg1;
- (void)_updateHostViewFrameForRequester:(id)arg1;
- (void)_notePropertiesSetOnRealContextHostViewWhichIReallyNeedToChangeAndIKnowWhatImDoingISwear:(id)arg1 originalProperties:(id)arg2 forRequester:(id)arg3;
- (id)_realContextHostViewWhichIReallyNeedToAccessAndIKnowWhatImDoingISwear;
- (unsigned long long)_populateContextIDs:(unsigned int *)arg1 forSnapshotExcludingContexts:(id)arg2;
- (id)_hostViewForRequester:(id)arg1 enableAndOrderFront:(_Bool)arg2;
- (id)_hostViewForRequester:(id)arg1;
- (struct CGImage *)_snapshotCGImageRefForFrame:(struct CGRect)arg1 excludingContexts:(id)arg2 opaque:(_Bool)arg3 outTransform:(struct CGAffineTransform *)arg4 outIOSurfaceRef:(id *)arg5;
- (id)_overrideRequesterIfNecessary:(id)arg1;
- (void)_removeRequesterInfo:(id)arg1;
- (void)_applyRequesterInfo:(id)arg1;
- (id)_infoForRequester:(id)arg1;
- (struct CGImage *)snapshotCGImageRefForFrame:(struct CGRect)arg1 excludingContexts:(id)arg2 opaque:(_Bool)arg3 outTransform:(struct CGAffineTransform *)arg4;
- (id)snapshotUIImageForFrame:(struct CGRect)arg1 excludingContexts:(id)arg2 opaque:(_Bool)arg3 outTransform:(struct CGAffineTransform *)arg4;
- (id)snapshotViewWithFrame:(struct CGRect)arg1 excludingContexts:(id)arg2 opaque:(_Bool)arg3;
- (void)setContextId:(unsigned int)arg1 hidden:(_Bool)arg2 forRequester:(id)arg3;
- (id)visibleContexts;
- (void)orderRequesterFront:(id)arg1;
- (void)disableHostingForRequester:(id)arg1;
- (void)resumeContextHosting;
- (void)suspendContextHosting;
- (void)invalidate;
- (void)enableHostingForRequester:(id)arg1 priority:(long long)arg2;
- (void)enableHostingForRequester:(id)arg1 orderFront:(_Bool)arg2;
- (id)hostViewForRequester:(id)arg1 enableAndOrderFront:(_Bool)arg2 appearanceStyle:(unsigned long long)arg3;
- (id)hostViewForRequester:(id)arg1 enableAndOrderFront:(_Bool)arg2;
- (id)hostViewForRequester:(id)arg1 appearanceStyle:(unsigned long long)arg2;
- (id)hostViewForRequester:(id)arg1;
@property(readonly, copy) NSString *description;
- (unsigned long long)contextCount;
@property(copy, nonatomic) UIColor *defaultBackgroundColorWhileNotHosting;
@property(copy, nonatomic) UIColor *defaultBackgroundColorWhileHosting;
- (void)removeObserver:(id)arg1;
- (void)addObserver:(id)arg1;
@property(nonatomic) id <FBWindowContextHostManagerDelegate> delegate;
- (void)dealloc;
- (id)initWithContextManager:(id)arg1 scene:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FBWindowContextHostSnapshotView : UIView <FBWindowContextHostSnapshotView>
{
    id _surface;
}

@property(readonly, nonatomic) id IOSurface; // @synthesize IOSurface=_surface;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)_initWithFrame:(struct CGRect)arg1 CGImage:(struct CGImage *)arg2 transform:(struct CGAffineTransform)arg3 surface:(id)arg4;

@end

@interface FBWindowContextHostView : UIView <FBWindowContextManagerObserver, FBSceneBoundsDelegate>
{
    FBScene *_scene;
    FBLayerHostContainer *_contentLayer;
    UIScreen *_screen;
    _Bool _counteractUIScreenJail;
    id <FBWindowContextHostViewDelegate> _delegate;
    FBWindowContextManager *_contextManager;
    FBWindowContextHostViewContentLayerDelegate *_contentLayerDelegate;
    NSMutableArray *_layerHosts;
    NSMutableSet *_hiddenContexts;
    NSMutableOrderedSet *_contexts;
}

@property(readonly, retain, nonatomic) FBScene *scene; // @synthesize scene=_scene;
@property(nonatomic) id <FBWindowContextHostViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void)sceneDidChangeBounds:(id)arg1;
- (void)windowContextManager:(id)arg1 didRepositionContext:(id)arg2 from:(unsigned long long)arg3 to:(unsigned long long)arg4;
@property(readonly, copy) NSString *description;
- (void)_noteHostingStatusChanged;
- (id)window;
- (id)_hitTest:(struct CGPoint)arg1 withEvent:(id)arg2 windowServerHitTestWindow:(id)arg3;
- (_Bool)hasContent;
- (_Bool)isHosting;
@property(copy, nonatomic) NSSet *hiddenContexts;
@property(retain, nonatomic) FBWindowContextManager *contextManager;
- (void)_adjustLayerFrameAndTransform:(id)arg1;
- (void)setDebug:(_Bool)arg1;
- (void)dealloc;
- (id)initWithScene:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FBWindowContextHostViewContentLayerDelegate : NSObject
{
}

- (id)actionForLayer:(id)arg1 forKey:(id)arg2;

@end

@interface FBWindowContextHostWrapperView : UIView <FBWindowContextAppearance>
{
    FBWindowContextHostManager *_manager;
    unsigned long long _appearanceStyle;
    UIColor *_backgroundColorWhileNotHosting;
    UIColor *_backgroundColorWhileHosting;
}

@property(readonly, nonatomic) FBWindowContextHostManager *manager; // @synthesize manager=_manager;
@property(nonatomic) unsigned long long appearanceStyle; // @synthesize appearanceStyle=_appearanceStyle;
- (void)_setAppearanceStyle:(unsigned long long)arg1 force:(_Bool)arg2;
- (id)_stringForAppearanceStyle;
@property(readonly, copy) NSString *description;
- (id)window;
- (id)_hitTest:(struct CGPoint)arg1 withEvent:(id)arg2 windowServerHitTestWindow:(id)arg3;
- (void)_didRemoveSubview:(id)arg1;
- (void)didAddSubview:(id)arg1;
@property(retain, nonatomic) UIColor *backgroundColorWhileNotHosting;
@property(retain, nonatomic) UIColor *backgroundColorWhileHosting;
@property(readonly, nonatomic) double level;
@property(readonly, nonatomic) struct CGRect referenceFrame; // @dynamic referenceFrame;
@property(readonly, nonatomic, getter=isContextHosted) _Bool contextHosted; // @dynamic contextHosted;
- (void)clearManager;
- (void)updateBackgroundColor;
- (void)updateFrame;
- (void)_toggleBackgroundColorIfNecessary;
- (id)_backgroundColorWhileNotHosting;
- (id)_backgroundColorWhileHosting;
- (void)_hostingStatusChanged;
- (_Bool)_isReallyHosting;
- (void)dealloc;
- (id)initWithHostManager:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FBWindowContextManager : NSObject
{
    NSHashTable *_observers;
    NSMutableOrderedSet *_orderedContexts;
    id <FBWindowContextManagerDelegate> _delegate;
    NSString *_identifier;
}

@property(copy, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
@property(nonatomic) id <FBWindowContextManagerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)_enumerateObserversWithBlock:(CDUnknownBlockType)arg1;
- (id)description;
- (id)contexts;
- (void)removeObserver:(id)arg1;
- (void)addObserver:(id)arg1;
- (void)removeContext:(id)arg1;
- (void)addContext:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface FBWorkspaceConnectionListener : NSObject <BSXPCConnectionListenerHandler>
{
    NSObject<OS_dispatch_queue> *_connectionDispatcherQueue;
}

+ (id)sharedInstance;
- (void)handleIncomingConnection:(id)arg1 forService:(id)arg2;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FBWorkspaceEvent : BSEventQueueEvent
{
}

- (void)execute;

@end

@interface FBWorkspaceEventQueue : BSEventQueue
{
}

+ (id)sharedInstance;
- (void)_noteQueueDidUnlock;
- (void)_noteQueueDidLock;
- (void)_noteWillExecuteEvent:(id)arg1;
- (void)_noteWillCancelEventsWithName:(id)arg1 count:(unsigned long long)arg2;
- (void)_noteWillPendEvents:(id)arg1 atPosition:(int)arg2;
- (_Bool)_shouldProcessEvent:(id)arg1 enqueuedDuringExecutionOfEvent:(id)arg2;
- (void)executeOrPrependEvents:(id)arg1;
- (void)executeOrPrependEvent:(id)arg1;
- (void)executeOrAppendEvent:(id)arg1;

@end

@interface FBWorkspaceEventQueueLock : BSEventQueueLock
{
}

- (id)initWithReason:(id)arg1;

@end

@interface FBWorkspaceLogger : FBFileLogger
{
    _Bool _useOverrideDestinations;
    unsigned long long _overrideDestinations;
}

- (void)willBeginLoggingToPath:(id)arg1;
- (void)_configureOverrideDestinationForString:(id)arg1;
- (void)reloadFromDefaults;
- (unsigned long long)logDestinations;
- (id)logPrefixForCategory:(id)arg1 destination:(unsigned long long)arg2;
- (int)maxLogSize;
- (int)maxLogCount;
- (void)_setEnabled:(_Bool)arg1;
- (id)name;
- (_Bool)isEnabled;
- (id)init;

@end

@interface NSString (FWWSpringBoardContextHosting)
- (_Bool)fbs_hasBeenOverridenAlready;
- (void)fbs_setHasBeenOverriddenAlready:(_Bool)arg1;
@end

