//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CGAffineTransform {
    double a;
    double b;
    double c;
    double d;
    double tx;
    double ty;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct UIEdgeInsets {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
};

struct UIOffset {
    double horizontal;
    double vertical;
};

struct _NSRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/MPUFoundation.framework/MPUFoundation
// UUID: 8E408E7D-A7A4-3D14-A3EE-9327B1CAA5B1
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 662.36.0.0.0
//            Minimum iOS version: 8.0.0
//                    SDK version: 8.0.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol MPStoreDownloadManagerObserver <NSObject>

@optional
- (void)downloadManager:(MPStoreDownloadManager *)arg1 downloadPurchaseDidFinish:(MPStoreDownload *)arg2;
- (void)downloadManager:(MPStoreDownloadManager *)arg1 downloadDidProgress:(MPStoreDownload *)arg2;
- (void)downloadManager:(MPStoreDownloadManager *)arg1 downloadDidFinish:(MPStoreDownload *)arg2;
- (void)downloadManager:(MPStoreDownloadManager *)arg1 didAddDownloads:(NSArray *)arg2 removeDownloads:(NSArray *)arg3;
@end

@protocol MPUActionTableViewDataSource <UITableViewDataSource>
+ (NSArray *)actionCellConfigurationClasses;
- (_Bool)shouldShowActionCellConfiguration:(Class)arg1;
- (void)reloadActionRowsAnimated:(_Bool)arg1;
- (long long)numberOfActionRowsInTableView:(UITableView *)arg1;
- (Class)cellConfigurationForIndexPath:(NSIndexPath *)arg1;
@end

@protocol MPUAutoupdatingTextContainer <MPUTextContainer>
@property(readonly, nonatomic) MPUTextContainerContentSizeUpdater *MPU_contentSizeUpdater;
@end

@protocol MPUTextContainer <NSObject>

@optional
@property(copy, nonatomic) NSAttributedString *attributedText;
@property(retain, nonatomic) UIFont *font;
@end

@protocol MPUTransportButton <NSObject>
@property(readonly, nonatomic) MPUTransportButtonEventHandler *transportButtonEventHandler;
- (void)applyTransportButtonAttributes:(MPUTransportButtonAttributes *)arg1;
@end

@protocol MPUViewControllerFactory <NSObject>
+ (UIViewController *)viewControllerForIdentifier:(NSString *)arg1 withDataSource:(MPUDataSource *)arg2;
+ (UIViewController *)viewControllerForIdentifier:(NSString *)arg1 withQuery:(MPMediaQuery *)arg2;
+ (UIViewController *)viewControllerForIdentifier:(NSString *)arg1;
+ (void)registerViewControllerIdentifier:(NSString *)arg1 withConfigurationBlock:(MPUViewControllerConfiguration * (^)(void))arg2;
+ (void)registerViewControllerIdentifier:(NSString *)arg1 withConfiguration:(MPUViewControllerConfiguration *)arg2;
+ (MPUDataSource *)dataSourceForViewControllerIdentifier:(NSString *)arg1 withQuery:(MPMediaQuery *)arg2;
+ (MPUDataSource *)dataSourceForViewControllerIdentifier:(NSString *)arg1;
+ (MPUViewControllerConfiguration *)configurationForViewControllerIdentifier:(NSString *)arg1;
@end

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSMutableCopying
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSSecureCoding <NSCoding>
+ (_Bool)supportsSecureCoding;
@end

@protocol UIDynamicItem <NSObject>
@property(nonatomic) struct CGAffineTransform transform;
@property(readonly, nonatomic) struct CGRect bounds;
@property(nonatomic) struct CGPoint center;
@end

@protocol UIScrollViewDelegate <NSObject>

@optional
- (void)scrollViewDidScrollToTop:(UIScrollView *)arg1;
- (_Bool)scrollViewShouldScrollToTop:(UIScrollView *)arg1;
- (void)scrollViewDidEndZooming:(UIScrollView *)arg1 withView:(UIView *)arg2 atScale:(double)arg3;
- (void)scrollViewWillBeginZooming:(UIScrollView *)arg1 withView:(UIView *)arg2;
- (UIView *)viewForZoomingInScrollView:(UIScrollView *)arg1;
- (void)scrollViewDidEndScrollingAnimation:(UIScrollView *)arg1;
- (void)scrollViewDidEndDecelerating:(UIScrollView *)arg1;
- (void)scrollViewWillBeginDecelerating:(UIScrollView *)arg1;
- (void)scrollViewDidEndDragging:(UIScrollView *)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewWillEndDragging:(UIScrollView *)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (void)scrollViewWillBeginDragging:(UIScrollView *)arg1;
- (void)scrollViewDidZoom:(UIScrollView *)arg1;
- (void)scrollViewDidScroll:(UIScrollView *)arg1;
@end

@protocol UIStateRestoring <NSObject>

@optional
@property(readonly, nonatomic) Class objectRestorationClass;
@property(readonly, nonatomic) id <UIStateRestoring> restorationParent;
- (void)applicationFinishedRestoringState;
- (void)decodeRestorableStateWithCoder:(NSCoder *)arg1;
- (void)encodeRestorableStateWithCoder:(NSCoder *)arg1;
@end

@protocol UITableViewDataSource <NSObject>
- (UITableViewCell *)tableView:(UITableView *)arg1 cellForRowAtIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 numberOfRowsInSection:(long long)arg2;

@optional
- (void)tableView:(UITableView *)arg1 moveRowAtIndexPath:(NSIndexPath *)arg2 toIndexPath:(NSIndexPath *)arg3;
- (void)tableView:(UITableView *)arg1 commitEditingStyle:(long long)arg2 forRowAtIndexPath:(NSIndexPath *)arg3;
- (long long)tableView:(UITableView *)arg1 sectionForSectionIndexTitle:(NSString *)arg2 atIndex:(long long)arg3;
- (NSArray *)sectionIndexTitlesForTableView:(UITableView *)arg1;
- (_Bool)tableView:(UITableView *)arg1 canMoveRowAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)tableView:(UITableView *)arg1 canEditRowAtIndexPath:(NSIndexPath *)arg2;
- (NSString *)tableView:(UITableView *)arg1 titleForFooterInSection:(long long)arg2;
- (NSString *)tableView:(UITableView *)arg1 titleForHeaderInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(UITableView *)arg1;
@end

@protocol UITableViewDelegate <NSObject, UIScrollViewDelegate>

@optional
- (void)tableView:(UITableView *)arg1 performAction:(SEL)arg2 forRowAtIndexPath:(NSIndexPath *)arg3 withSender:(id)arg4;
- (_Bool)tableView:(UITableView *)arg1 canPerformAction:(SEL)arg2 forRowAtIndexPath:(NSIndexPath *)arg3 withSender:(id)arg4;
- (_Bool)tableView:(UITableView *)arg1 shouldShowMenuForRowAtIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 indentationLevelForRowAtIndexPath:(NSIndexPath *)arg2;
- (NSIndexPath *)tableView:(UITableView *)arg1 targetIndexPathForMoveFromRowAtIndexPath:(NSIndexPath *)arg2 toProposedIndexPath:(NSIndexPath *)arg3;
- (void)tableView:(UITableView *)arg1 didEndEditingRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 willBeginEditingRowAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)tableView:(UITableView *)arg1 shouldIndentWhileEditingRowAtIndexPath:(NSIndexPath *)arg2;
- (NSArray *)tableView:(UITableView *)arg1 editActionsForRowAtIndexPath:(NSIndexPath *)arg2;
- (NSString *)tableView:(UITableView *)arg1 titleForDeleteConfirmationButtonForRowAtIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 editingStyleForRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didDeselectRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didSelectRowAtIndexPath:(NSIndexPath *)arg2;
- (NSIndexPath *)tableView:(UITableView *)arg1 willDeselectRowAtIndexPath:(NSIndexPath *)arg2;
- (NSIndexPath *)tableView:(UITableView *)arg1 willSelectRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didUnhighlightRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didHighlightRowAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)tableView:(UITableView *)arg1 shouldHighlightRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 accessoryButtonTappedForRowWithIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 accessoryTypeForRowWithIndexPath:(NSIndexPath *)arg2;
- (UIView *)tableView:(UITableView *)arg1 viewForFooterInSection:(long long)arg2;
- (UIView *)tableView:(UITableView *)arg1 viewForHeaderInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 estimatedHeightForFooterInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 estimatedHeightForHeaderInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 estimatedHeightForRowAtIndexPath:(NSIndexPath *)arg2;
- (double)tableView:(UITableView *)arg1 heightForFooterInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 heightForHeaderInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 heightForRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didEndDisplayingFooterView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 didEndDisplayingHeaderView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 didEndDisplayingCell:(UITableViewCell *)arg2 forRowAtIndexPath:(NSIndexPath *)arg3;
- (void)tableView:(UITableView *)arg1 willDisplayFooterView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 willDisplayHeaderView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 willDisplayCell:(UITableViewCell *)arg2 forRowAtIndexPath:(NSIndexPath *)arg3;
@end

@protocol UIViewControllerRestoration
+ (UIViewController *)viewControllerWithRestorationIdentifierPath:(NSArray *)arg1 coder:(NSCoder *)arg2;
@end

@protocol _UIBasicAnimationFactory <NSObject>
- (CABasicAnimation *)_basicAnimationForView:(UIView *)arg1 withKeyPath:(NSString *)arg2;

@optional
- (CAMediaTimingFunction *)_timingFunctionForAnimationInView:(UIView *)arg1 withKeyPath:(NSString *)arg2;
- (CAMediaTimingFunction *)_timingFunctionForAnimation;
@end

@protocol _UIDynamicReferenceSystem <NSObject>
- (struct CGRect)bounds;

@optional
- (struct CGPoint)convertPoint:(struct CGPoint)arg1 fromView:(UIView *)arg2;
- (struct CGPoint)convertPoint:(struct CGPoint)arg1 toView:(UIView *)arg2;
- (struct CGRect)_dynamicReferenceBounds;
@end

@interface MPMediaQuery (MPUSearchDataSourceAdditions)
- (id)_MPUSDS_searchPredicate;
@end

@interface MPUAbbreviatingLabel : UILabel
{
    NSMutableArray *_textRepresentationSizes;
    NSArray *_textRepresentations;
}

@property(copy, nonatomic) NSArray *textRepresentations; // @synthesize textRepresentations=_textRepresentations;
- (void).cxx_destruct;
- (void)_setTextRepresentation:(id)arg1;
- (void)_selectBestRepresentation;
- (void)_calculateTextSizes;
- (void)setNumberOfLines:(long long)arg1;
- (void)setText:(id)arg1;
- (void)setAttributedText:(id)arg1;
- (void)setBounds:(struct CGRect)arg1;
- (void)setFont:(id)arg1;

@end

@interface MPUCellConfiguration : NSObject
{
}

+ (_Bool)wantsScrollViewDidEndDecelerating;
+ (_Bool)wantsScrollViewDidScrollInScrollView;
+ (_Bool)wantsScrollViewDidScroll;
+ (double)expandedTableViewCellHeight;
+ (double)tableViewCellHeight;
+ (Class)tableViewCellClass;
+ (id)tableViewCellBackgroundColor;
+ (long long)tableViewSeparatorStyle;
+ (struct UIEdgeInsets)tableViewSeparatorInset;
+ (id)tableViewSeparatorColor;
+ (id)tableViewBackgroundColor;
+ (void)handleScrollViewDidEndDeceleratingForCell:(id)arg1 viewController:(id)arg2;
+ (void)handleScrollViewDidScrollForCell:(id)arg1 inScrollView:(id)arg2 viewController:(id)arg3;
+ (void)handleScrollViewDidScrollForCell:(id)arg1 viewController:(id)arg2;
+ (void)didEndDisplayingCell:(id)arg1 withViewController:(id)arg2 atIndex:(unsigned long long)arg3;
+ (void)willDisplayCell:(id)arg1 inTableView:(id)arg2 withViewController:(id)arg3 atIndex:(unsigned long long)arg4;
+ (void)configureView:(id)arg1 asynchronously:(_Bool)arg2 forEntity:(id)arg3 withBlock:(CDUnknownBlockType)arg4;
+ (id)reuseIdentifier;
+ (id)mediaEntityPropertiesToFetch;
+ (void)configureCellAfterDeceleration:(id)arg1 withViewController:(id)arg2 entity:(id)arg3 atIndex:(unsigned long long)arg4 animated:(_Bool)arg5;
+ (void)configureCellForSizing:(id)arg1;
+ (void)configureDownloadStatusForCell:(id)arg1 withViewController:(id)arg2 entity:(id)arg3 atIndex:(unsigned long long)arg4 animated:(_Bool)arg5;
+ (void)configureCell:(id)arg1 withViewController:(id)arg2 entity:(id)arg3 atIndex:(unsigned long long)arg4 animated:(_Bool)arg5;

@end

@interface MPUActionCellConfiguration : MPUCellConfiguration
{
}

+ (void)performActionForCell:(id)arg1 withViewController:(id)arg2;

@end

@interface MPUAnimationFactory : NSObject <_UIBasicAnimationFactory>
{
    _Bool _removedOnCompletion;
    NSArray *_allowedKeyPaths;
    NSString *_fillMode;
    double _timeOffset;
    CAMediaTimingFunction *_timingFunction;
}

@property(retain, nonatomic) CAMediaTimingFunction *timingFunction; // @synthesize timingFunction=_timingFunction;
@property(nonatomic) double timeOffset; // @synthesize timeOffset=_timeOffset;
@property(nonatomic, getter=isRemovedOnCompletion) _Bool removedOnCompletion; // @synthesize removedOnCompletion=_removedOnCompletion;
@property(copy, nonatomic) NSString *fillMode; // @synthesize fillMode=_fillMode;
@property(copy, nonatomic) NSArray *allowedKeyPaths; // @synthesize allowedKeyPaths=_allowedKeyPaths;
- (void).cxx_destruct;
- (id)_timingFunctionForAnimation;
- (id)_basicAnimationForView:(id)arg1 withKeyPath:(id)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPUBlockAnimationDelegate : NSObject
{
    CDUnknownBlockType _completionHandler;
}

@property(readonly, copy, nonatomic) CDUnknownBlockType completionHandler; // @synthesize completionHandler=_completionHandler;
- (void).cxx_destruct;
- (void)animationDidStop:(id)arg1 finished:(_Bool)arg2;
- (id)initWithCompletionHandler:(CDUnknownBlockType)arg1;

@end

@interface MPUBorderConfiguration : NSObject <NSCopying>
{
    double _borderAlpha;
    UIColor *_borderColor;
    double _borderWidth;
    double _fillAlpha;
    UIColor *_fillColor;
    double _dropShadowAlpha;
    UIColor *_dropShadowColor;
    unsigned long long _dropShadowEdges;
    double _dropShadowWidth;
}

@property(nonatomic) double dropShadowWidth; // @synthesize dropShadowWidth=_dropShadowWidth;
@property(nonatomic) unsigned long long dropShadowEdges; // @synthesize dropShadowEdges=_dropShadowEdges;
@property(retain, nonatomic) UIColor *dropShadowColor; // @synthesize dropShadowColor=_dropShadowColor;
@property(nonatomic) double dropShadowAlpha; // @synthesize dropShadowAlpha=_dropShadowAlpha;
@property(retain, nonatomic) UIColor *fillColor; // @synthesize fillColor=_fillColor;
@property(nonatomic) double fillAlpha; // @synthesize fillAlpha=_fillAlpha;
@property(nonatomic) double borderWidth; // @synthesize borderWidth=_borderWidth;
@property(retain, nonatomic) UIColor *borderColor; // @synthesize borderColor=_borderColor;
@property(nonatomic) double borderAlpha; // @synthesize borderAlpha=_borderAlpha;
- (void).cxx_destruct;
@property(readonly, nonatomic, getter=isFullyTransparent) _Bool fullyTransparent;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)init;

@end

@interface MPUBorderDrawingCache : NSObject
{
    MPUBorderView *_borderView;
    NSCache *_images;
    double _displayScale;
}

@property(nonatomic) double displayScale; // @synthesize displayScale=_displayScale;
- (void).cxx_destruct;
- (void)_invalidate;
- (id)_borderView;
- (void)_applicationDidReceiveMemoryWarning:(id)arg1;
- (id)imageForBorderConfiguration:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface MPUBorderView : UIView
{
    _Bool _hidesWhenFullyTransparent;
    MPUBorderConfiguration *_borderConfiguration;
}

+ (double)requiredOutsetForDropShadow;
@property(nonatomic) _Bool hidesWhenFullyTransparent; // @synthesize hidesWhenFullyTransparent=_hidesWhenFullyTransparent;
@property(copy, nonatomic) MPUBorderConfiguration *borderConfiguration; // @synthesize borderConfiguration=_borderConfiguration;
- (void).cxx_destruct;
- (void)drawRect:(struct CGRect)arg1;
@property(readonly, nonatomic) struct UIEdgeInsets resizableImageCapInsets;
@property(readonly, nonatomic) double requiredOutsetForDropShadow;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface MPUStackItemView : UIView
{
}

- (void)setCenter:(struct CGPoint)arg1;
- (void)didCompleteItemViewConfiguration;
- (void)willBeginItemViewConfiguration;
- (void)prepareForReuse;

@end

@interface MPUImageStackItemView : MPUStackItemView
{
    UIImageView *_imageView;
    UIImage *_image;
    double _imageAlpha;
    struct CGRect _imageContentsRect;
    struct CGAffineTransform _imageTransform;
}

@property(nonatomic) struct CGAffineTransform imageTransform; // @synthesize imageTransform=_imageTransform;
@property(nonatomic) struct CGRect imageContentsRect; // @synthesize imageContentsRect=_imageContentsRect;
@property(nonatomic) double imageAlpha; // @synthesize imageAlpha=_imageAlpha;
@property(retain, nonatomic) UIImage *image; // @synthesize image=_image;
- (void).cxx_destruct;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface MPUBorderedImageStackItemView : MPUImageStackItemView
{
    UIImageView *_borderImageView;
    MPUBorderConfiguration *_borderConfiguration;
    MPUBorderDrawingCache *_borderDrawingCache;
}

@property(retain, nonatomic) MPUBorderDrawingCache *borderDrawingCache; // @synthesize borderDrawingCache=_borderDrawingCache;
@property(copy, nonatomic) MPUBorderConfiguration *borderConfiguration; // @synthesize borderConfiguration=_borderConfiguration;
- (void).cxx_destruct;
- (void)_updateBorderImageView;
- (void)_borderDrawingCacheWasInvalidated:(id)arg1;
- (void)layoutSubviews;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface MPUCellInvalidationContext : NSObject
{
    _Bool _invalidateEverything;
    _Bool _invalidateDownloadStatus;
    _Bool _invalidateLayout;
    _Bool _animated;
}

@property(nonatomic, getter=isAnimated) _Bool animated; // @synthesize animated=_animated;
@property(nonatomic) _Bool invalidateLayout; // @synthesize invalidateLayout=_invalidateLayout;
@property(nonatomic) _Bool invalidateDownloadStatus; // @synthesize invalidateDownloadStatus=_invalidateDownloadStatus;
@property(nonatomic) _Bool invalidateEverything; // @synthesize invalidateEverything=_invalidateEverything;

@end

@interface MPUContentSizeLayoutConstraint : NSLayoutConstraint
{
    MPUNotificationObserver *_preferredContentSizeDidChangeObserver;
    double _textStyleDefaultLeading;
    _Bool _isBaselineConstraint;
    _Bool _isLineNumberConstraint;
    unsigned long long _numberOfLines;
    UILabel *_targetLabel;
    double _fontSizeMultiplier;
    double _defaultSizeConstant;
    NSString *_textStyle;
}

+ (id)constraintWithItem:(id)arg1 attribute:(long long)arg2 relatedBy:(long long)arg3 toItem:(id)arg4 attribute:(long long)arg5 multiplier:(double)arg6 autoupdatingConstantFromLabel:(id)arg7 textStyle:(id)arg8 numberOfLines:(unsigned long long)arg9;
+ (id)constraintWithAutoupdatingBaselineOfView:(id)arg1 relation:(long long)arg2 toView:(id)arg3 attribute:(long long)arg4 withTextStyle:(id)arg5 multiplier:(double)arg6 nonStandardLeading:(double)arg7;
+ (id)constraintWithAutoupdatingBaselineOfView:(id)arg1 relation:(long long)arg2 toView:(id)arg3 attribute:(long long)arg4 withTextStyle:(id)arg5 nonStandardLeading:(double)arg6;
+ (id)constraintWithAutoupdatingBaselineOfView:(id)arg1 toView:(id)arg2 attribute:(long long)arg3 withTextStyle:(id)arg4 nonStandardLeading:(double)arg5;
+ (id)contentSizeAutoupdatingConstraintWithItem:(id)arg1 attribute:(long long)arg2 relatedBy:(long long)arg3 toItem:(id)arg4 attribute:(long long)arg5 multiplier:(double)arg6 textStyle:(id)arg7 defaultSizeConstant:(double)arg8;
@property(copy, nonatomic) NSString *textStyle; // @synthesize textStyle=_textStyle;
@property(nonatomic) double defaultSizeConstant; // @synthesize defaultSizeConstant=_defaultSizeConstant;
@property(nonatomic) double fontSizeMultiplier; // @synthesize fontSizeMultiplier=_fontSizeMultiplier;
- (void).cxx_destruct;
- (void)_updatePreferredContentSize;

@end

@interface MPUDataSource : NSObject <NSCoding>
{
    long long _invalidationIgnoreCount;
    long long _numberOfIgnoredInvalidations;
    long long _entityType;
}

@property(readonly, nonatomic) long long entityType; // @synthesize entityType=_entityType;
- (void)_didInvalidate;
- (void)_willInvalidate;
- (unsigned long long)_globalIndexForIndexPath:(id)arg1;
@property(readonly, nonatomic) _Bool usesSections;
@property(readonly, nonatomic) _Bool showsIndexBar;
@property(readonly, nonatomic) _Bool showsEntityCountFooter;
- (id)sectionEntities;
- (unsigned long long)indexOfSectionEntity:(id)arg1;
- (id)sectionEntityAtIndex:(unsigned long long)arg1;
- (struct _NSRange)rangeOfSectionAtIndex:(unsigned long long)arg1;
- (void)preloadSectionEntities;
- (void)preloadEntities;
- (id)playbackContextForIndex:(unsigned long long)arg1;
@property(readonly, nonatomic) unsigned long long numberOfSections;
- (id)localizedSectionTitleAtIndex:(unsigned long long)arg1;
@property(readonly, nonatomic) NSArray *localizedSectionIndexTitles;
- (void)_invalidateCalculatedEntities;
- (void)invalidate;
- (void)endIgnoringInvalidation;
- (void)beginIgnoringInvalidation;
- (_Bool)isIgnoringInvalidation;
@property(readonly, nonatomic) _Bool isEmpty;
- (unsigned long long)indexOfSectionForSectionTitleAtIndex:(unsigned long long)arg1;
- (unsigned long long)indexOfEntity:(id)arg1;
- (_Bool)entityIsNowPlayingAtIndex:(unsigned long long)arg1;
@property(readonly, nonatomic) NSString *entityCountFormat;
- (id)entityAtIndexPath:(id)arg1;
- (id)entityAtIndex:(unsigned long long)arg1;
- (id)entities;
- (long long)editingTypeForEntityAtIndexPath:(id)arg1;
- (long long)editingTypeForEntityAtIndex:(unsigned long long)arg1;
- (_Bool)canEditEntityAtIndex:(unsigned long long)arg1;
- (void)deleteEntityAtIndexPath:(id)arg1;
- (void)deleteEntityAtIndex:(unsigned long long)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (_Bool)canEditEntityAtIndexPath:(id)arg1;
- (_Bool)canSelectEntityAtIndex:(unsigned long long)arg1;
- (id)anyEntity;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithEntityType:(long long)arg1;

@end

@interface MPUDataSourceConfiguration : NSObject
{
    Class _dataSourceClass;
    NSString *_dataSourceCachingKey;
    CDUnknownBlockType _defaultQueryCreationBlock;
    long long _entityType;
}

+ (id)configurationWithDataSourceClass:(Class)arg1;
@property(nonatomic) long long entityType; // @synthesize entityType=_entityType;
@property(copy, nonatomic) CDUnknownBlockType defaultQueryCreationBlock; // @synthesize defaultQueryCreationBlock=_defaultQueryCreationBlock;
@property(copy, nonatomic) NSString *dataSourceCachingKey; // @synthesize dataSourceCachingKey=_dataSourceCachingKey;
@property(readonly, nonatomic) Class dataSourceClass; // @synthesize dataSourceClass=_dataSourceClass;
- (void).cxx_destruct;
- (id)initWithDataSourceClass:(Class)arg1;

@end

@interface MPUDataSourceController : NSObject
{
    _Bool _viewControllerIsVisible;
    _Bool _shouldReloadWhenViewControllerIsVisible;
    MPUDataSource *_dataSource;
    id <MPUDataSourceControllerDelegate> _delegate;
    MPUNotificationObserver *_willInvalidateObserver;
    MPUNotificationObserver *_didInvalidateObserver;
}

@property(nonatomic) _Bool shouldReloadWhenViewControllerIsVisible; // @synthesize shouldReloadWhenViewControllerIsVisible=_shouldReloadWhenViewControllerIsVisible;
@property(nonatomic) _Bool viewControllerIsVisible; // @synthesize viewControllerIsVisible=_viewControllerIsVisible;
@property(retain, nonatomic) MPUNotificationObserver *didInvalidateObserver; // @synthesize didInvalidateObserver=_didInvalidateObserver;
@property(retain, nonatomic) MPUNotificationObserver *willInvalidateObserver; // @synthesize willInvalidateObserver=_willInvalidateObserver;
@property(nonatomic) __weak id <MPUDataSourceControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) MPUDataSource *dataSource; // @synthesize dataSource=_dataSource;
- (void).cxx_destruct;
- (void)_didInvalidate;
- (void)_willInvalidate;
- (void)viewControllerDidDisappear;
- (void)viewControllerDidAppear;
- (id)initWithDataSource:(id)arg1 delegate:(id)arg2;

@end

@interface MPUDataSourceViewController : UIViewController <UIStateRestoring, UIViewControllerRestoration>
{
    long long _reloadDataOnceToken;
    _Bool _visible;
    _Bool _shouldReloadWhenVisible;
    MPUDataSource *_dataSource;
}

+ (id)viewControllerWithRestorationIdentifierPath:(id)arg1 coder:(id)arg2;
@property(retain, nonatomic) MPUDataSource *dataSource; // @synthesize dataSource=_dataSource;
@property(nonatomic) _Bool shouldReloadWhenVisible; // @synthesize shouldReloadWhenVisible=_shouldReloadWhenVisible;
@property(nonatomic, getter=isVisible) _Bool visible; // @synthesize visible=_visible;
- (void).cxx_destruct;
- (void)_setDataSource:(id)arg1 shouldReloadData:(_Bool)arg2;
- (void)_MPUStandardViewController_dataSourceDidInvalidateNotification:(id)arg1;
- (void)_MPUStandardViewController_dataSourceWillInvalidateNotification:(id)arg1;
- (void)reloadData;
- (void)dataSourceDidInvalidate;
- (void)dataSourceWillInvalidate;
@property(readonly, nonatomic) MPUQueryDataSource *queryDataSource;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)decodeRestorableStateWithCoder:(id)arg1;
- (void)encodeRestorableStateWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithDataSource:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) Class objectRestorationClass;
@property(readonly, nonatomic) id <UIStateRestoring> restorationParent;
@property(readonly) Class superclass;

@end

@interface MPUEmphasizedText : NSObject <NSCopying, NSMutableCopying, NSSecureCoding>
{
    NSMutableSet *_emphasisRangesSet;
    id _string;
}

+ (_Bool)supportsSecureCoding;
+ (id)emphasizedTextUsingString:(id)arg1 emphasisSubstring:(id)arg2 options:(unsigned long long)arg3;
+ (id)emphasizedTextUsingString:(id)arg1 emphasisDelimiter:(id)arg2;
+ (id)emphasizedTextWithString:(id)arg1;
- (void).cxx_destruct;
- (id)newAttributedStringWithTextAttributes:(id)arg1;
- (id)newAttributedStringWithRegularTextAttributes:(id)arg1 emphasizedTextAttributes:(id)arg2;
- (void)enumerateEmphasisRangesUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, copy, nonatomic) NSString *string;
@property(readonly, copy, nonatomic) NSArray *emphasisRanges;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)description;
- (id)initWithString:(id)arg1 emphasisRanges:(id)arg2;

@end

@interface MPUFallAnimator : NSObject
{
}

+ (void)animateFallForView:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;

@end

@interface MPUKeyValueObserver : NSObject
{
    id _observedObject;
    NSString *_observedKeyPath;
    CDUnknownBlockType _observationHandler;
    NSOperationQueue *_queue;
}

+ (id)observerForKeyPath:(id)arg1 object:(id)arg2 queue:(id)arg3 observationHandler:(CDUnknownBlockType)arg4;
@property(retain, nonatomic) NSOperationQueue *queue; // @synthesize queue=_queue;
@property(copy, nonatomic) CDUnknownBlockType observationHandler; // @synthesize observationHandler=_observationHandler;
@property(copy, nonatomic) NSString *observedKeyPath; // @synthesize observedKeyPath=_observedKeyPath;
@property(retain, nonatomic) id observedObject; // @synthesize observedObject=_observedObject;
- (void).cxx_destruct;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)dealloc;
- (id)initWithKeyPath:(id)arg1 object:(id)arg2 queue:(id)arg3 observationHandler:(CDUnknownBlockType)arg4;

@end

@interface MPUMarqueeView : UIView
{
    NSUUID *_currentAnimationID;
    long long _lastEnableOptions;
    _Bool _marqueeEnabled;
    double _contentGap;
    UIView *_contentView;
    id <MPUMarqueeViewDelegate> _delegate;
    double _marqueeDelay;
    double _marqueeScrollRate;
    struct CGSize _contentSize;
}

@property(nonatomic, getter=isMarqueeEnabled) _Bool marqueeEnabled; // @synthesize marqueeEnabled=_marqueeEnabled;
@property(nonatomic) double marqueeScrollRate; // @synthesize marqueeScrollRate=_marqueeScrollRate;
@property(nonatomic) double marqueeDelay; // @synthesize marqueeDelay=_marqueeDelay;
@property(nonatomic) __weak id <MPUMarqueeViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) UIView *contentView; // @synthesize contentView=_contentView;
@property(nonatomic) struct CGSize contentSize; // @synthesize contentSize=_contentSize;
@property(nonatomic) double contentGap; // @synthesize contentGap=_contentGap;
- (void).cxx_destruct;
- (void)_tearDownMarqueeAnimation;
- (void)_createMarqueeAnimationIfNeededWithOptions:(long long)arg1;
- (void)resetMarqueePosition;
- (void)setMarqueeEnabled:(_Bool)arg1 withOptions:(long long)arg2;
- (void)animationDidStop:(id)arg1 finished:(_Bool)arg2;
- (void)setFrame:(struct CGRect)arg1;
- (void)setBounds:(struct CGRect)arg1;
- (void)layoutSubviews;
- (void)didMoveToWindow;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface MPUMutableEmphasizedText : MPUEmphasizedText
{
}

- (void)removeEmphasisRange:(struct _NSRange)arg1;
- (void)addEmphasisRange:(struct _NSRange)arg1;
@property(copy, nonatomic) NSArray *emphasisRanges;
@property(readonly, nonatomic) NSMutableString *mutableString;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithString:(id)arg1 emphasisRanges:(id)arg2;

@end

@interface MPUUserActivityContainerItem : NSObject <NSCopying, NSMutableCopying>
{
    MPMediaEntity *_selectedMediaEntity;
    MPMediaEntity *_visualReferenceMediaEntity;
    long long _containerItemType;
}

@property(readonly, nonatomic) MPMediaEntity *visualReferenceMediaEntity; // @synthesize visualReferenceMediaEntity=_visualReferenceMediaEntity;
@property(readonly, nonatomic) MPMediaEntity *selectedMediaEntity; // @synthesize selectedMediaEntity=_selectedMediaEntity;
@property(readonly, nonatomic) long long containerItemType; // @synthesize containerItemType=_containerItemType;
- (void).cxx_destruct;
@property(readonly, nonatomic) _MPUProtoBufUserActivityContainerItem *protoBufUserActivityContainerItem;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)description;
- (id)initWithProtoBufUserActivityContainerItem:(id)arg1;
- (id)initWithContainerItemType:(long long)arg1;
- (id)init;

@end

@interface MPUMutableUserActivityContainerItem : MPUUserActivityContainerItem
{
}

@property(retain, nonatomic) MPMediaEntity *visualReferenceMediaEntity;
@property(retain, nonatomic) MPMediaEntity *selectedMediaEntity;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface MPUUserActivityContext : NSObject <NSCopying, NSMutableCopying>
{
    NSArray *_containerItems;
    long long _originatorType;
    long long _originatorVersion;
}

@property(readonly, nonatomic) long long originatorVersion; // @synthesize originatorVersion=_originatorVersion;
@property(readonly, nonatomic) long long originatorType; // @synthesize originatorType=_originatorType;
@property(readonly, copy, nonatomic) NSArray *containerItems; // @synthesize containerItems=_containerItems;
- (void).cxx_destruct;
- (id)contextByRemovingContainerItem:(id)arg1;
- (id)contextByInsertingContainerItem:(id)arg1 afterContainerItem:(id)arg2;
- (id)containerItemFollowingContainerItem:(id)arg1;
@property(readonly, copy, nonatomic) NSData *dataRepresentation;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)description;
- (id)initWithDataRepresentation:(id)arg1;

@end

@interface MPUMutableUserActivityContext : MPUUserActivityContext
{
    NSMutableArray *_containerItems;
}

- (void).cxx_destruct;
- (void)removeContainerItem:(id)arg1;
- (void)insertContainerItem:(id)arg1 afterContainerItem:(id)arg2;
- (void)addContainerItem:(id)arg1;
@property(nonatomic) long long originatorVersion;
@property(nonatomic) long long originatorType;
@property(copy, nonatomic) NSArray *containerItems;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface MPUNotificationObserver : NSObject
{
    id _notificationObservationToken;
}

+ (id)observerWithName:(id)arg1 object:(id)arg2 queue:(id)arg3 observationHandler:(CDUnknownBlockType)arg4;
@property(retain, nonatomic) id notificationObservationToken; // @synthesize notificationObservationToken=_notificationObservationToken;
- (void).cxx_destruct;
- (void)dealloc;
- (id)initWithName:(id)arg1 object:(id)arg2 queue:(id)arg3 observationHandler:(CDUnknownBlockType)arg4;

@end

@interface MPUNowPlayingIndicatorView : UIControl
{
    NSMutableArray *_levelViews;
    _Bool _showsLevelGutters;
    double _interLevelSpacing;
    double _levelCornerRadius;
    double _levelWidth;
    double _maximumLevelHeight;
    double _minimumLevelHeight;
    long long _numberOfLevels;
    long long _playbackState;
    UIColor *_levelGuttersColor;
}

@property(retain, nonatomic) UIColor *levelGuttersColor; // @synthesize levelGuttersColor=_levelGuttersColor;
@property(nonatomic) _Bool showsLevelGutters; // @synthesize showsLevelGutters=_showsLevelGutters;
@property(nonatomic) long long playbackState; // @synthesize playbackState=_playbackState;
@property(nonatomic) long long numberOfLevels; // @synthesize numberOfLevels=_numberOfLevels;
@property(nonatomic) double minimumLevelHeight; // @synthesize minimumLevelHeight=_minimumLevelHeight;
@property(nonatomic) double maximumLevelHeight; // @synthesize maximumLevelHeight=_maximumLevelHeight;
@property(nonatomic) double levelWidth; // @synthesize levelWidth=_levelWidth;
@property(nonatomic) double levelCornerRadius; // @synthesize levelCornerRadius=_levelCornerRadius;
@property(nonatomic) double interLevelSpacing; // @synthesize interLevelSpacing=_interLevelSpacing;
- (void).cxx_destruct;
- (void)_updateLevelAnimations;
- (void)_reloadLevelViews;
- (void)_removeAllAnimations:(_Bool)arg1;
- (void)tintColorDidChange;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface MPUOperationLIFOQueue : NSOperationQueue
{
}

- (void)_addLIFODependencyToOperations:(id)arg1;
- (void)setMaxConcurrentOperationCount:(long long)arg1;
- (void)addOperationWithBlock:(CDUnknownBlockType)arg1;
- (void)addOperations:(id)arg1 waitUntilFinished:(_Bool)arg2;
- (void)addOperation:(id)arg1;
- (id)init;

@end

@interface MPUPinningView : UIView
{
    UIView *_containerView;
    CALayer *_effectivePinningSourceLayer;
    UIView *_contentView;
    UIView *_pinningSourceView;
}

@property(retain, nonatomic) UIView *pinningSourceView; // @synthesize pinningSourceView=_pinningSourceView;
@property(retain, nonatomic) UIView *contentView; // @synthesize contentView=_contentView;
- (void).cxx_destruct;
- (_Bool)_updateEffectivePinningSourceView;
- (void)_unregisterKVOObserversForLayer:(id)arg1;
- (void)_registerKVOObserversForLayer:(id)arg1;
- (void)_configureMatchMoveAnimation;
- (void)_prepareForDefaultImageSnapshotNotification:(id)arg1;
- (void)_applicationWillEnterForegroundNotification:(id)arg1;
- (void)_applicationDidBecomeActiveNotification:(id)arg1;
- (void)layoutSubviews;
- (void)didMoveToWindow;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface MPUQueryDataSource : MPUDataSource
{
    NSArray *_entities;
    NSMutableSet *_additionalUniqueItemPropertiesToFetch;
    _Bool _invalidateWhenEnteringForeground;
    MPMediaQuerySectionInfo *_sectionInfo;
    _Bool _ignoringInvalidationDueToBackgroundApplicationState;
    MPMediaQuery *_query;
}

@property(nonatomic) _Bool ignoringInvalidationDueToBackgroundApplicationState; // @synthesize ignoringInvalidationDueToBackgroundApplicationState=_ignoringInvalidationDueToBackgroundApplicationState;
@property(readonly, nonatomic) MPMediaQuery *query; // @synthesize query=_query;
- (void).cxx_destruct;
- (id)_sectionInfo;
- (void)_postInvalidationNotificationIfNeeded;
- (void)_invalidateIfNeeded;
- (_Bool)_deleteHidesFromCloudForIndex:(unsigned long long)arg1 hidesAll:(out _Bool *)arg2;
- (void)_mediaLibraryDynamicPropertiesDidChangeNotification:(id)arg1;
- (void)_mediaLibraryDisplayValuesDidChangeNotification:(id)arg1;
- (void)_mediaLibraryDidChangeNotification:(id)arg1;
- (void)_isCloudEnabledDidChangeNotification:(id)arg1;
- (void)_defaultMediaLibraryDidChangeNotification:(id)arg1;
- (void)_applicationDidEnterBackground:(id)arg1;
- (void)_applicationWillEnterForeground:(id)arg1;
- (void)removeAdditionalMediaEntityPropertiesToFetch:(id)arg1;
- (void)addAdditionalMediaEntityPropertiesToFetch:(id)arg1;
- (_Bool)showsEntityCountFooter;
- (struct _NSRange)rangeOfSectionAtIndex:(unsigned long long)arg1;
- (unsigned long long)indexOfSectionForSectionTitleAtIndex:(unsigned long long)arg1;
- (id)localizedSectionTitleAtIndex:(unsigned long long)arg1;
- (id)localizedSectionIndexTitles;
- (unsigned long long)numberOfSections;
- (_Bool)showsIndexBar;
- (_Bool)isEmpty;
- (void)_invalidateCalculatedEntities;
- (id)queryForEntityAtIndexPath:(id)arg1;
- (id)queryForEntityAtIndex:(unsigned long long)arg1;
- (id)entities;
- (long long)editingTypeForEntityAtIndex:(unsigned long long)arg1;
- (void)deleteEntityAtIndex:(unsigned long long)arg1;
- (unsigned long long)count;
- (_Bool)canSelectEntityAtIndex:(unsigned long long)arg1;
- (_Bool)canEditEntityAtIndex:(unsigned long long)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithQuery:(id)arg1 entityType:(long long)arg2;
- (id)initWithEntityType:(long long)arg1;

@end

@interface MPUSearchDataSource : MPUQueryDataSource
{
    NSOperationQueue *_operationQueue;
    _MPUSearchOperation *_searchOperation;
    NSArray *_searchResults;
    MPUQueryDataSource *_dataSource;
    NSString *_searchString;
}

@property(readonly, nonatomic) NSString *searchString; // @synthesize searchString=_searchString;
@property(readonly, nonatomic) MPUQueryDataSource *dataSource; // @synthesize dataSource=_dataSource;
- (void).cxx_destruct;
- (id)_searchPropertiesForGroupingType:(long long)arg1;
- (void)_searchOperation:(id)arg1 didFinishWithResults:(id)arg2;
- (void)filterResultsUsingSearchString:(id)arg1;
- (id)entities;
- (unsigned long long)count;
- (void)dealloc;
- (id)initWithDataSource:(id)arg1 operationQueue:(id)arg2;
- (id)initWithDataSource:(id)arg1;

@end

@interface MPUSpringAnimationFactory : MPUAnimationFactory
{
    double _damping;
    double _mass;
    double _stiffness;
    double _velocity;
}

@property(nonatomic) double velocity; // @synthesize velocity=_velocity;
@property(nonatomic) double stiffness; // @synthesize stiffness=_stiffness;
@property(nonatomic) double mass; // @synthesize mass=_mass;
@property(nonatomic) double damping; // @synthesize damping=_damping;
- (id)_basicAnimationForView:(id)arg1 withKeyPath:(id)arg2;

@end

@interface MPUStackView : UIView
{
    struct {
        struct CGSize baseSize;
        struct CGRect bounds;
        struct CGPoint centerInLocalCoordinates;
        _Bool forcesIntegralX;
        _Bool forcesIntegralY;
        struct UIOffset maximumRelativeOffsetStep;
        double scale;
        struct CGSize sizeInsetStep;
        struct CGPoint vanishingPoint;
    } _configuration;
    long long _distanceIgnoreCount;
    NSMutableArray *_items;
    UIWindow *_window;
    id <MPUStackViewDataSource> _dataSource;
    Class _itemClass;
    NSString *_itemReuseIdentifier;
    long long _numberOfItems;
    UIView *_perspectiveTargetView;
}

@property(nonatomic) __weak UIView *perspectiveTargetView; // @synthesize perspectiveTargetView=_perspectiveTargetView;
@property(readonly, nonatomic) long long numberOfItems; // @synthesize numberOfItems=_numberOfItems;
@property(readonly, nonatomic) NSArray *items; // @synthesize items=_items;
@property(readonly, nonatomic) NSString *itemReuseIdentifier; // @synthesize itemReuseIdentifier=_itemReuseIdentifier;
@property(readonly, nonatomic) Class itemClass; // @synthesize itemClass=_itemClass;
@property(nonatomic) __weak id <MPUStackViewDataSource> dataSource; // @synthesize dataSource=_dataSource;
- (void).cxx_destruct;
- (void)_updateGeometryFieldsInConfiguration;
- (id)_dequeueReusableItem;
- (void)updateForChangedDistanceFromVanishingPoint;
- (struct CGSize)sizeOfItemAtIndex:(double)arg1;
- (void)reloadDataWithTransition:(long long)arg1;
- (void)reloadData;
- (struct UIOffset)relativeOffsetOfItemAtIndex:(double)arg1 withCenter:(struct CGPoint)arg2;
- (id)itemAtIndex:(long long)arg1;
- (void)endIgnoringDistanceUpdates;
- (void)beginIgnoringDistanceUpdates;
@property(nonatomic) struct CGPoint vanishingPoint;
@property(nonatomic) struct CGSize sizeInsetStep;
@property(nonatomic) struct UIOffset maximumRelativeOffsetStep;
@property(nonatomic) _Bool forcesIntegralY;
@property(nonatomic) _Bool forcesIntegralX;
@property(nonatomic) struct CGSize baseSize;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)setCenter:(struct CGPoint)arg1;
- (void)setBounds:(struct CGRect)arg1;
- (void)layoutSubviews;
- (void)didMoveToWindow;
- (void)didMoveToSuperview;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 itemClass:(Class)arg2 itemReuseIdentifier:(id)arg3;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface MPUStandardImageStackItemView : MPUImageStackItemView
{
    MPUBorderConfiguration *_borderConfiguration;
    MPUBorderView *_borderView;
    _Bool _hasPendingBorderUpdates;
    _Bool _isBeingConfigured;
    double _dropShadowAlpha;
    UIColor *_dropShadowColor;
    unsigned long long _dropShadowEdges;
    double _dropShadowWidth;
    double _overlayBorderWidth;
    double _overlayBorderAlpha;
    UIColor *_overlayBorderColor;
    double _overlayCenterAlpha;
    UIColor *_overlayCenterColor;
}

@property(retain, nonatomic) UIColor *overlayCenterColor; // @synthesize overlayCenterColor=_overlayCenterColor;
@property(nonatomic) double overlayCenterAlpha; // @synthesize overlayCenterAlpha=_overlayCenterAlpha;
@property(retain, nonatomic) UIColor *overlayBorderColor; // @synthesize overlayBorderColor=_overlayBorderColor;
@property(nonatomic) double overlayBorderAlpha; // @synthesize overlayBorderAlpha=_overlayBorderAlpha;
@property(nonatomic) double overlayBorderWidth; // @synthesize overlayBorderWidth=_overlayBorderWidth;
@property(nonatomic) double dropShadowWidth; // @synthesize dropShadowWidth=_dropShadowWidth;
@property(nonatomic) unsigned long long dropShadowEdges; // @synthesize dropShadowEdges=_dropShadowEdges;
@property(retain, nonatomic) UIColor *dropShadowColor; // @synthesize dropShadowColor=_dropShadowColor;
@property(nonatomic) double dropShadowAlpha; // @synthesize dropShadowAlpha=_dropShadowAlpha;
- (void).cxx_destruct;
- (void)_updateForBorderViewChange;
- (void)didCompleteItemViewConfiguration;
- (void)willBeginItemViewConfiguration;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface MPUStringTruncationStrategy : NSObject
{
    NSDictionary *_textAttributes;
    NSString *_truncationTokenFormat;
    NSString *_componentsNameSingular;
    NSString *_componentsNamePlural;
    struct CGSize _drawingSize;
}

+ (id)truncationStrategyWithTextAttributes:(id)arg1 drawingSize:(struct CGSize)arg2;
@property(copy, nonatomic) NSString *componentsNamePlural; // @synthesize componentsNamePlural=_componentsNamePlural;
@property(copy, nonatomic) NSString *componentsNameSingular; // @synthesize componentsNameSingular=_componentsNameSingular;
@property(copy, nonatomic) NSString *truncationTokenFormat; // @synthesize truncationTokenFormat=_truncationTokenFormat;
@property(readonly, nonatomic) struct CGSize drawingSize; // @synthesize drawingSize=_drawingSize;
@property(readonly, nonatomic) NSDictionary *textAttributes; // @synthesize textAttributes=_textAttributes;
- (void).cxx_destruct;
- (id)initWithTextAttributes:(id)arg1 drawingSize:(struct CGSize)arg2;

@end

@interface MPUTableViewController : MPUDataSourceViewController <MPStoreDownloadManagerObserver, MPUActionTableViewDataSource, UITableViewDelegate>
{
    _Bool _shouldUpdateVisibleCellsWhenVisible;
    _Bool _hasAppearedOnce;
    UITableView *_tableView;
    long long _numberOfActionRows;
    NSMutableArray *_visibleActionRows;
    Class _cellConfigurationClass;
}

+ (Class)_tableViewClass;
+ (id)actionCellConfigurationClasses;
+ (id)viewControllerWithRestorationIdentifierPath:(id)arg1 coder:(id)arg2;
+ (Class)invalidationContextClass;
+ (_Bool)usesCellConfigurations;
+ (_Bool)wantsAutolayoutSizedTableViewRows;
@property(readonly, nonatomic) Class cellConfigurationClass; // @synthesize cellConfigurationClass=_cellConfigurationClass;
- (void).cxx_destruct;
- (void)_reloadActionRowsAnimated:(_Bool)arg1 skipTableViewUpdates:(_Bool)arg2;
- (void)_loadCellConfiguration;
- (void)_updateVisibleCellsForDownloads:(id)arg1 updateAllCells:(_Bool)arg2;
- (void)_setCellConfigurationClass:(Class)arg1;
- (id)_createTableView;
@property(readonly, nonatomic) struct CGPoint contentOffsetRevealingFirstDataSourceSection;
- (id)reuseIdentifierForCellAtIndexPath:(id)arg1;
- (void)configureCell:(id)arg1 atIndexPath:(id)arg2 withEntity:(id)arg3 invalidationContext:(id)arg4;
@property(readonly, nonatomic) _Bool shouldScrollToFirstDataSourceSectionOnInitialAppearance;
- (_Bool)isTableViewLoaded;
- (Class)actionCellConfigurationClassForIndexPath:(id)arg1;
@property(readonly, nonatomic) UITableView *tableView;
- (id)tableView:(id)arg1 targetIndexPathForMoveFromRowAtIndexPath:(id)arg2 toProposedIndexPath:(id)arg3;
- (void)tableView:(id)arg1 didEndEditingRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 willBeginEditingRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (_Bool)tableView:(id)arg1 shouldHighlightRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 editingStyleForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 commitEditingStyle:(long long)arg2 forRowAtIndexPath:(id)arg3;
- (_Bool)tableView:(id)arg1 canEditRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 sectionForSectionIndexTitle:(id)arg2 atIndex:(long long)arg3;
- (id)sectionIndexTitlesForTableView:(id)arg1;
- (void)tableView:(id)arg1 didEndDisplayingCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)reloadActionRowsAnimated:(_Bool)arg1;
- (_Bool)shouldShowActionCellConfiguration:(Class)arg1;
- (long long)sectionForDataSourceSection:(long long)arg1;
- (long long)numberOfActionRowsInTableView:(id)arg1;
- (id)indexPathForDataSourceIndex:(long long)arg1;
- (long long)indexOfFirstDataSourceSection;
- (long long)dataSourceSectionForSection:(long long)arg1;
- (long long)dataSourceIndexForIndexPath:(id)arg1;
- (Class)cellConfigurationForIndexPath:(id)arg1;
- (void)_configureCellsAfterScroll;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewDidScroll:(id)arg1;
- (void)downloadManager:(id)arg1 downloadPurchaseDidFinish:(id)arg2;
- (void)downloadManager:(id)arg1 downloadDidFinish:(id)arg2;
- (void)downloadManager:(id)arg1 didAddDownloads:(id)arg2 removeDownloads:(id)arg3;
- (void)setDataSource:(id)arg1;
- (void)reloadData;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)viewDidAppear:(_Bool)arg1;
- (void)setEditing:(_Bool)arg1 animated:(_Bool)arg2;
- (void)encodeRestorableStateWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithDataSource:(id)arg1 cellConfigurationClass:(Class)arg2;
- (id)initWithDataSource:(id)arg1;
- (_Bool)respondsToSelector:(SEL)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPUTextContainerContentSizeUpdater : NSObject
{
    id <MPUTextContainer> _textContainer;
    NSString *_lastSeenPreferredContentSizeCategory;
}

@property(retain, nonatomic) NSString *lastSeenPreferredContentSizeCategory; // @synthesize lastSeenPreferredContentSizeCategory=_lastSeenPreferredContentSizeCategory;
@property(nonatomic) __weak id <MPUTextContainer> textContainer; // @synthesize textContainer=_textContainer;
- (void).cxx_destruct;
- (void)_updateTextStyleFonts;
- (void)_preferredContentSizeCategoryDidChange:(id)arg1;
- (void)ensureTextStyleFontsMatchPreferredTextStyleFonts;
- (void)dealloc;
- (id)init;

@end

@interface MPUTextDrawing : NSObject
{
    NSString *_text;
    NSAttributedString *_attributedText;
    UIImage *_image;
    double _firstBaselineOffsetFromTop;
    double _lastBaselineOffsetFromBottom;
}

- (void)_setLastBaselineOffsetFromBottom:(double)arg1;
@property(nonatomic) double lastBaselineOffsetFromBottom; // @synthesize lastBaselineOffsetFromBottom=_lastBaselineOffsetFromBottom;
- (void)_setFirstBaselineOffsetFromTop:(double)arg1;
@property(nonatomic) double firstBaselineOffsetFromTop; // @synthesize firstBaselineOffsetFromTop=_firstBaselineOffsetFromTop;
- (void)_setImage:(id)arg1;
@property(retain, nonatomic) UIImage *image; // @synthesize image=_image;
- (void)_setAttributedText:(id)arg1;
@property(copy, nonatomic) NSAttributedString *attributedText; // @synthesize attributedText=_attributedText;
- (void)_setText:(id)arg1;
@property(copy, nonatomic) NSString *text; // @synthesize text=_text;
- (void).cxx_destruct;

@end

@interface MPUTextDrawingCache : NSObject
{
    NSStringDrawingContext *_stringDrawingContext;
    unsigned long long _cacheCostScale;
    unsigned long long _cacheSize;
    NSMutableDictionary *_cachesForOtherAllowedSizes;
    NSCache *_drawingsForCurrentAllowedSize;
    struct CGSize _referenceSizeForCostComputation;
    NSHashTable *_invalidationObservers;
    unsigned long long _invalidationNotificationCoalescingRequestsCount;
    _Bool _wasInvalidatedWithoutNotifyingObservers;
    NSOperationQueue *_preHeatingOperationQueue;
    _Bool _opaque;
    NSDictionary *_textAttributes;
    unsigned long long _maximumNumberOfLines;
    double _displayScale;
    CDUnknownBlockType _textEmphasizer;
    NSDictionary *_emphasizedTextAttributes;
    NSDictionary *_regularTextAttributes;
    struct CGSize _allowedSize;
}

+ (id)_drawingForText:(id)arg1 fromCache:(id)arg2 usingStringDrawingContext:(id)arg3 allowedSize:(struct CGSize)arg4 textAttributes:(id)arg5 opaque:(_Bool)arg6 displayScale:(double)arg7 textEmphasizer:(CDUnknownBlockType)arg8 regularTextAttributes:(id)arg9 emphasizedTextAttributes:(id)arg10 cacheSize:(unsigned long long)arg11 cacheCostScale:(unsigned long long)arg12 referenceSizeForCostComputation:(struct CGSize)arg13;
@property(copy, nonatomic) NSDictionary *regularTextAttributes; // @synthesize regularTextAttributes=_regularTextAttributes;
@property(copy, nonatomic) NSDictionary *emphasizedTextAttributes; // @synthesize emphasizedTextAttributes=_emphasizedTextAttributes;
@property(copy, nonatomic) CDUnknownBlockType textEmphasizer; // @synthesize textEmphasizer=_textEmphasizer;
@property(nonatomic) double displayScale; // @synthesize displayScale=_displayScale;
@property(nonatomic, getter=isOpaque) _Bool opaque; // @synthesize opaque=_opaque;
@property(nonatomic) unsigned long long maximumNumberOfLines; // @synthesize maximumNumberOfLines=_maximumNumberOfLines;
@property(copy, nonatomic) NSDictionary *textAttributes; // @synthesize textAttributes=_textAttributes;
@property(nonatomic) struct CGSize allowedSize; // @synthesize allowedSize=_allowedSize;
- (void).cxx_destruct;
- (struct CGSize)_validateAllowedSize:(struct CGSize)arg1;
- (void)_updateReferenceSizeForCostComputation;
- (void)_updateMaximumNumberOfLines;
- (void)_notifyInvalidationObservers;
- (void)_invalidate;
- (id)_keyForAllowedSize:(struct CGSize)arg1;
- (void)_ensureDrawingsForCurrentAllowedSizeCacheIsReady;
- (void)_drawingsForCurrentAllowedSizeWereInvalidated;
- (void)_applicationDidReceiveMemoryWarning:(id)arg1;
- (void)preHeatForStrings:(id)arg1;
- (void)endCoalescingInvalidationNotifications;
- (void)beginCoalescingInvalidationNotifications;
- (void)removeInvalidationObserver:(id)arg1;
- (void)addInvalidationObserver:(id)arg1;
- (id)drawingForText:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface MPUTransportButton : UIButton <MPUTransportButton>
{
    MPUTransportButtonEventHandler *_transportButtonEventHandler;
}

- (void).cxx_destruct;
- (void)applyTransportButtonAttributes:(id)arg1;
@property(readonly, nonatomic) MPUTransportButtonEventHandler *transportButtonEventHandler;
- (_Bool)shouldTrack;
- (void)endTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (void)cancelTrackingWithEvent:(id)arg1;
- (_Bool)beginTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (_Bool)isEnabled;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPUTransportButtonAttributes : NSObject
{
    UIImage *_image;
    struct CGRect _frame;
    struct CGRect _expandedTouchRect;
}

@property(nonatomic) struct CGRect expandedTouchRect; // @synthesize expandedTouchRect=_expandedTouchRect;
@property(nonatomic) struct CGRect frame; // @synthesize frame=_frame;
@property(retain, nonatomic) UIImage *image; // @synthesize image=_image;
- (void).cxx_destruct;

@end

@interface MPUTransportButtonEventHandler : NSObject
{
    NSObject<OS_dispatch_source> *_longPressTimer;
    _Bool _longPress;
    _Bool _shouldFakeEnabled;
    _Bool _supportsTapWhenDisabled;
    UIButton *_button;
    double _minimumLongPressDuration;
}

@property(nonatomic) _Bool supportsTapWhenDisabled; // @synthesize supportsTapWhenDisabled=_supportsTapWhenDisabled;
@property(nonatomic) double minimumLongPressDuration; // @synthesize minimumLongPressDuration=_minimumLongPressDuration;
@property(nonatomic) __weak UIButton *button; // @synthesize button=_button;
- (void).cxx_destruct;
- (void)_clearLongPressTimer;
- (void)_longPressTimerAction;
- (_Bool)shouldForceTrackingEnabled;
- (_Bool)shouldFakeEnabled;
- (id)performHitTestingBlock:(CDUnknownBlockType)arg1;
- (void)endTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (void)cancelTrackingWithEvent:(id)arg1;
- (void)beginTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (void)dealloc;
- (id)init;

@end

@interface MPUTransportControl : NSObject <NSCopying>
{
    _Bool _enabled;
    _Bool _highlighted;
    _Bool _supportsLongPress;
    _Bool _acceptsTapsWhenDisabled;
    int _group;
    long long _type;
}

+ (long long)_transportControlTypeForCommand:(unsigned int)arg1;
+ (_Bool)_transportControlSupportsHighlightingForCommand:(unsigned int)arg1;
+ (_Bool)_transportControlAcceptsTapsWhenDisabledForType:(long long)arg1;
+ (int)_ordinalForTransportControlType:(long long)arg1;
+ (int)_groupForTransportControlType:(long long)arg1;
+ (id)transportControlWithType:(long long)arg1 group:(int)arg2;
+ (id)availableTransportControlsForMediaRemoteCommands:(struct __CFArray *)arg1 controlsCount:(unsigned long long)arg2;
@property(nonatomic) _Bool acceptsTapsWhenDisabled; // @synthesize acceptsTapsWhenDisabled=_acceptsTapsWhenDisabled;
@property(nonatomic) _Bool supportsLongPress; // @synthesize supportsLongPress=_supportsLongPress;
@property(nonatomic, getter=isHighlighted) _Bool highlighted; // @synthesize highlighted=_highlighted;
@property(nonatomic, getter=isEnabled) _Bool enabled; // @synthesize enabled=_enabled;
@property(readonly, nonatomic) int group; // @synthesize group=_group;
@property(readonly, nonatomic) long long type; // @synthesize type=_type;
- (long long)_compare:(id)arg1 ordering:(long long)arg2;
- (long long)_priority;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)initWithType:(long long)arg1 group:(int)arg2;

@end

@interface MPUViewControllerConfiguration : NSObject
{
    _Bool _wantsModalPresentation;
    _Bool _wantsNavigationController;
    Class _cellConfigurationClass;
    Class _viewControllerClass;
    NSString *_aggregateStatisticDisplayCountKey;
    MPUDataSourceConfiguration *_dataSourceConfiguration;
    CDUnknownBlockType _configurationBlock;
    Class _navigationControllerClass;
}

+ (id)configurationWithViewControllerClass:(Class)arg1 cellConfigurationClass:(Class)arg2;
+ (id)configurationWithViewControllerClass:(Class)arg1;
@property(retain, nonatomic) Class navigationControllerClass; // @synthesize navigationControllerClass=_navigationControllerClass;
@property(nonatomic) _Bool wantsNavigationController; // @synthesize wantsNavigationController=_wantsNavigationController;
@property(nonatomic) _Bool wantsModalPresentation; // @synthesize wantsModalPresentation=_wantsModalPresentation;
@property(copy, nonatomic) CDUnknownBlockType configurationBlock; // @synthesize configurationBlock=_configurationBlock;
@property(retain, nonatomic) MPUDataSourceConfiguration *dataSourceConfiguration; // @synthesize dataSourceConfiguration=_dataSourceConfiguration;
@property(copy, nonatomic) NSString *aggregateStatisticDisplayCountKey; // @synthesize aggregateStatisticDisplayCountKey=_aggregateStatisticDisplayCountKey;
@property(readonly, nonatomic) Class viewControllerClass; // @synthesize viewControllerClass=_viewControllerClass;
@property(readonly, nonatomic) Class cellConfigurationClass; // @synthesize cellConfigurationClass=_cellConfigurationClass;
- (void).cxx_destruct;
- (id)initWithViewControllerClass:(Class)arg1 cellConfigurationClass:(Class)arg2;
- (id)initWithViewControllerClass:(Class)arg1;

@end

@interface MPUViewControllerFactory : NSObject <MPUViewControllerFactory, UIViewControllerRestoration>
{
}

+ (id)_existingViewControllerWithRestorationIdentifierPath:(id)arg1;
+ (id)_allConfigurations;
+ (id)viewControllerWithRestorationIdentifierPath:(id)arg1 coder:(id)arg2;
+ (id)viewControllerForIdentifier:(id)arg1 withDataSource:(id)arg2;
+ (id)viewControllerForIdentifier:(id)arg1 withQuery:(id)arg2;
+ (id)viewControllerForIdentifier:(id)arg1;
+ (void)registerViewControllerIdentifiers;
+ (void)registerViewControllerIdentifier:(id)arg1 withConfigurationBlock:(CDUnknownBlockType)arg2;
+ (void)registerViewControllerIdentifier:(id)arg1 withConfiguration:(id)arg2;
+ (id)dataSourceForViewControllerIdentifier:(id)arg1 withQuery:(id)arg2;
+ (id)dataSourceForViewControllerIdentifier:(id)arg1;
+ (id)configurationForViewControllerIdentifier:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface NSAttributedString (MPUDynamicType)
- (id)MPU_tallestFontFromAttributes;
- (_Bool)MPU_hasUniformFont;
- (id)MPU_attributedStringByUpdatingTextStyleFontsToPreferredTextStyleFonts;
@end

@interface NSLayoutConstraint (MPUAutolayout)
+ (id)constraintsBySizingView:(id)arg1 toSize:(struct CGSize)arg2;
+ (id)constraintsByAttachingView:(id)arg1 toView:(id)arg2 inCorner:(unsigned long long)arg3 offset:(struct UIOffset)arg4;
+ (id)constraintsByCenteringAndContainingView:(id)arg1 inView:(id)arg2 insets:(struct UIEdgeInsets)arg3;
+ (id)constraintsByAttachingView:(id)arg1 toView:(id)arg2 alongEdges:(unsigned long long)arg3 insets:(struct UIEdgeInsets)arg4;
+ (id)constraintsByCenteringView:(id)arg1 withView:(id)arg2 alongAxes:(int)arg3 offset:(struct UIOffset)arg4;
@end

@interface UIApplication (MPUAdditions)
+ (long long)MPU_compareContentSizeCategory:(id)arg1 toContentSizeCategory:(id)arg2;
- (_Bool)MPU_isPreferredContentSizeCategoryLessThan:(id)arg1;
- (_Bool)MPU_isPreferredContentSizeCategoryGreaterThan:(id)arg1;
@end

@interface UILabel (MPUAdditions) <MPUAutoupdatingTextContainer>
@property(nonatomic, setter=MPU_setAutomaticallyUpdatesTextStyleFontsToPreferredTextStyleFonts:) _Bool MPU_automaticallyUpdatesTextStyleFontsToPreferredTextStyleFonts;
@property(readonly, nonatomic) MPUTextContainerContentSizeUpdater *MPU_contentSizeUpdater;
- (void)MPU_configureWithTextAttributes:(id)arg1;

// Remaining properties
@property(copy, nonatomic) NSAttributedString *attributedText;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(retain, nonatomic) UIFont *font;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@end

@interface UITextField (MPUAdditions) <MPUAutoupdatingTextContainer>
@property(nonatomic, setter=MPU_setAutomaticallyUpdatesTextStyleFontsToPreferredTextStyleFonts:) _Bool MPU_automaticallyUpdatesTextStyleFontsToPreferredTextStyleFonts;
@property(readonly, nonatomic) MPUTextContainerContentSizeUpdater *MPU_contentSizeUpdater;

// Remaining properties
@property(copy, nonatomic) NSAttributedString *attributedText;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(retain, nonatomic) UIFont *font;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@end

@interface UITextView (MPUAdditions) <MPUAutoupdatingTextContainer>
@property(nonatomic, setter=MPU_setAutomaticallyUpdatesTextStyleFontsToPreferredTextStyleFonts:) _Bool MPU_automaticallyUpdatesTextStyleFontsToPreferredTextStyleFonts;
@property(readonly, nonatomic) MPUTextContainerContentSizeUpdater *MPU_contentSizeUpdater;

// Remaining properties
@property(copy, nonatomic) NSAttributedString *attributedText;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(retain, nonatomic) UIFont *font;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@end

@interface UITraitCollection (MPUAdditions)
@property(readonly, nonatomic) _Bool MPU_hasRegularWidth;
@property(readonly, nonatomic) _Bool MPU_hasCompactWidth;
@end

@interface UIView (MPUAutoLayout)
- (id)initForAutolayout;
@end

@interface UIViewController (MPUFoundationAdditions)
@property(copy, nonatomic, getter=MPU_identifier, setter=MPU_setIdentifier:) NSString *MPU_identifier;
@end

@interface UIViewController (MPUViewControllerFactory)
- (id)MPUViewControllerConfiguration;
@end

@interface UIViewController (MPUViewControllerFactoryRestoration)
- (id)_childViewControllerWithRestorationIdentifier:(id)arg1;
@end

@interface UIWindow (MPUAdditions)
@property(readonly, nonatomic) struct CGSize MPU_rootViewSize;
@end

@interface _MPUFallAnimatorDynamicItem : NSObject <UIDynamicItem>
{
    struct CGPoint _center;
    struct CGRect _bounds;
    struct CGAffineTransform _transform;
}

@property(nonatomic) struct CGAffineTransform transform; // @synthesize transform=_transform;
@property(nonatomic) struct CGPoint center; // @synthesize center=_center;
@property(nonatomic) struct CGRect bounds; // @synthesize bounds=_bounds;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface _MPUFallAnimatorDynamicSystem : NSObject <_UIDynamicReferenceSystem>
{
}

- (struct CGRect)bounds;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface _MPUMarqueeContentView : UIView
{
}

+ (Class)layerClass;

@end

@interface _MPUProtoBufUserActivityContainerItem : PBCodable <NSCopying>
{
    int _containerItemType;
    MIPMultiverseIdentifier *_selectedMultiverseIdentifier;
    MIPMultiverseIdentifier *_visualReferenceMultiverseIdentifier;
    struct {
        unsigned int containerItemType:1;
    } _has;
}

@property(retain, nonatomic) MIPMultiverseIdentifier *visualReferenceMultiverseIdentifier; // @synthesize visualReferenceMultiverseIdentifier=_visualReferenceMultiverseIdentifier;
@property(retain, nonatomic) MIPMultiverseIdentifier *selectedMultiverseIdentifier; // @synthesize selectedMultiverseIdentifier=_selectedMultiverseIdentifier;
@property(nonatomic) int containerItemType; // @synthesize containerItemType=_containerItemType;
- (void).cxx_destruct;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasVisualReferenceMultiverseIdentifier;
@property(readonly, nonatomic) _Bool hasSelectedMultiverseIdentifier;
@property(nonatomic) _Bool hasContainerItemType;

@end

@interface _MPUProtoBufUserActivityContext : PBCodable <NSCopying>
{
    NSMutableArray *_containerItems;
    int _originatorType;
    int _originatorVersion;
    struct {
        unsigned int originatorType:1;
        unsigned int originatorVersion:1;
    } _has;
}

@property(nonatomic) int originatorVersion; // @synthesize originatorVersion=_originatorVersion;
@property(nonatomic) int originatorType; // @synthesize originatorType=_originatorType;
@property(retain, nonatomic) NSMutableArray *containerItems; // @synthesize containerItems=_containerItems;
- (void).cxx_destruct;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasOriginatorVersion;
@property(nonatomic) _Bool hasOriginatorType;
- (id)containerItemsAtIndex:(unsigned long long)arg1;
- (unsigned long long)containerItemsCount;
- (void)addContainerItems:(id)arg1;
- (void)clearContainerItems;

@end

@interface _MPUSearchOperation : NSOperation
{
    long long _entityType;
    MPMediaQuery *_query;
    MPUSearchDataSource *_dataSource;
    NSString *_searchString;
}

@property(readonly, copy, nonatomic) NSString *searchString; // @synthesize searchString=_searchString;
@property(readonly, nonatomic) __weak MPUSearchDataSource *dataSource; // @synthesize dataSource=_dataSource;
- (void).cxx_destruct;
- (void)main;
- (void)executeSearch;
- (id)description;
- (id)initWithSearchDataSource:(id)arg1 searchString:(id)arg2;

@end

@interface _MPUStackItemReuseCache : NSObject
{
}

+ (void)unregisterStackViewForReuseIdentifier:(id)arg1;
+ (void)registerStackViewForReuseIdentifier:(id)arg1;
+ (void)enqueueReusableStackItem:(id)arg1 forReuseIdentifier:(id)arg2;
+ (id)dequeueReusableStackItemWithIdentifier:(id)arg1;

@end

