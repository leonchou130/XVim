//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CGAffineTransform {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct NSObject {
    Class _field1;
};

struct PLImageTableEntryFooter_s {
    struct {
        unsigned char _field1;
        unsigned char _field2;
        unsigned char _field3;
        unsigned char _field4;
        unsigned char _field5;
        unsigned char _field6;
        unsigned char _field7;
        unsigned char _field8;
        unsigned char _field9;
        unsigned char _field10;
        unsigned char _field11;
        unsigned char _field12;
        unsigned char _field13;
        unsigned char _field14;
        unsigned char _field15;
        unsigned char _field16;
    } _field1;
    unsigned int _field2;
    unsigned int _field3;
    int _field4;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct changeList_s {
    NSMutableSet *inserted;
    NSMutableSet *updated;
    NSMutableSet *deleted;
};

struct contentChanges_s {
    NSMutableArray *container;
    NSMutableArray *updatedContent;
};

struct flock {
    long long _field1;
    long long _field2;
    int _field3;
    short _field4;
    short _field5;
};

#pragma mark Typedef'd Structures

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

typedef struct {
    double _field1;
    double _field2;
    double _field3;
} CDStruct_39925896;

typedef struct {
    double _field1;
    double _field2;
} CDStruct_c3b9c2ee;

typedef struct {
    int retries;
    int state;
} CDStruct_691a9b3b;

typedef struct {
    long long _field1;
    int _field2;
    unsigned int _field3;
    long long _field4;
} CDStruct_198678f7;

typedef struct {
    int _field1;
    struct CGSize _field2;
    struct CGRect _field3;
    struct CGRect _field4;
    unsigned int _field5;
    int _field6;
    int _field7;
    double _field8[4];
    double _field9[4];
    unsigned int _field10;
} CDStruct_0d559a47;

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices
// UUID: 4D6EE002-2667-3C82-A101-2DFACF0C3B6B
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 2369.0.0.0.0
//            Minimum iOS version: 8.0.0
//                    SDK version: 8.0.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol CLLocationManagerDelegate <NSObject>

@optional
- (void)locationManager:(CLLocationManager *)arg1 didVisit:(CLVisit *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 didFinishDeferredUpdatesWithError:(NSError *)arg2;
- (void)locationManagerDidResumeLocationUpdates:(CLLocationManager *)arg1;
- (void)locationManagerDidPauseLocationUpdates:(CLLocationManager *)arg1;
- (void)locationManager:(CLLocationManager *)arg1 didStartMonitoringForRegion:(CLRegion *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 didChangeAuthorizationStatus:(int)arg2;
- (void)locationManager:(CLLocationManager *)arg1 monitoringDidFailForRegion:(CLRegion *)arg2 withError:(NSError *)arg3;
- (void)locationManager:(CLLocationManager *)arg1 didFailWithError:(NSError *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 didExitRegion:(CLRegion *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 didEnterRegion:(CLRegion *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 rangingBeaconsDidFailForRegion:(CLBeaconRegion *)arg2 withError:(NSError *)arg3;
- (void)locationManager:(CLLocationManager *)arg1 didRangeBeacons:(NSArray *)arg2 inRegion:(CLBeaconRegion *)arg3;
- (void)locationManager:(CLLocationManager *)arg1 didDetermineState:(long long)arg2 forRegion:(CLRegion *)arg3;
- (_Bool)locationManagerShouldDisplayHeadingCalibration:(CLLocationManager *)arg1;
- (void)locationManager:(CLLocationManager *)arg1 didUpdateHeading:(CLHeading *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 didUpdateLocations:(NSArray *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 didUpdateToLocation:(CLLocation *)arg2 fromLocation:(CLLocation *)arg3;
@end

@protocol CPLLibraryManagerDelegate <NSObject>
- (void)libraryManagerHasChangesToPull:(CPLLibraryManager *)arg1;
- (void)libraryManagerDidStartSynchronization:(CPLLibraryManager *)arg1;
- (void)libraryManagerStatusDidChange:(CPLLibraryManager *)arg1;

@optional
- (NSString *)displayableName;
- (void)libraryManagerDidChangeConfiguration:(CPLLibraryManager *)arg1;
@end

@protocol CPLResourceProgressDelegate <NSObject>
- (void)libraryManager:(CPLLibraryManager *)arg1 uploadDidFinishForResourceTransferTask:(CPLResourceTransferTask *)arg2 withError:(NSError *)arg3;
- (void)libraryManager:(CPLLibraryManager *)arg1 uploadDidStartForResourceTransferTask:(CPLResourceTransferTask *)arg2;
- (void)libraryManager:(CPLLibraryManager *)arg1 backgroundDownloadDidFinishForResource:(CPLResource *)arg2;
- (void)libraryManager:(CPLLibraryManager *)arg1 downloadDidFinishForResourceTransferTask:(CPLResourceTransferTask *)arg2 withError:(NSError *)arg3;
- (void)libraryManager:(CPLLibraryManager *)arg1 downloadDidStartForResourceTransferTask:(CPLResourceTransferTask *)arg2;

@optional
- (void)sizeOfResourcesToUploadDidChangeForLibraryManager:(CPLLibraryManager *)arg1;
- (void)libraryManager:(CPLLibraryManager *)arg1 uploadDidProgress:(float)arg2 forResourceTransferTask:(CPLResourceTransferTask *)arg3;
- (void)libraryManager:(CPLLibraryManager *)arg1 downloadDidProgress:(float)arg2 forResourceTransferTask:(CPLResourceTransferTask *)arg3;
- (void)libraryManager:(CPLLibraryManager *)arg1 backgroundDownloadDidFailForResource:(CPLResource *)arg2;
@end

@protocol CPLStatusDelegate <NSObject>
- (void)statusDidChange:(CPLStatus *)arg1;
@end

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSFastEnumeration
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSSecureCoding <NSCoding>
+ (_Bool)supportsSecureCoding;
@end

@protocol PLAlbumContainer <PLAssetContainerList>
@property(readonly, retain, nonatomic) NSString *_typeDescription;
@property(readonly, retain, nonatomic) NSString *_prettyDescription;
@property(readonly, nonatomic) unsigned long long unreadAlbumsCount;
@property(readonly, nonatomic) int filter;
@property(readonly, copy, nonatomic) CDUnknownBlockType albumsSortingComparator;
@property(readonly, nonatomic) _Bool isFolder;
@property(readonly, nonatomic) unsigned long long albumsCount;
- (void)preheatAlbumsAtIndexes:(NSIndexSet *)arg1 forProperties:(NSArray *)arg2 relationships:(NSArray *)arg3;
- (void)preheatAlbumsForProperties:(NSArray *)arg1 relationships:(NSArray *)arg2;
- (void)updateAlbumsOrderIfNeeded;
- (_Bool)needsReordering;
- (void)setNeedsReordering;
- (_Bool)albumHasFixedOrder:(struct NSObject *)arg1;
- (_Bool)canEditAlbums;
- (short)albumListType;
- (_Bool)hasAtLeastOneAlbum;
- (NSMutableOrderedSet *)albums;
- (NSNumber *)identifier;
@end

@protocol PLAlbumProtocol <PLAssetContainer>
@property(nonatomic) int pendingItemsType;
@property(nonatomic) int pendingItemsCount;
@property(readonly, copy, nonatomic) CDUnknownBlockType sortingComparator;
@property(readonly, retain, nonatomic) NSURL *groupURL;
@property(retain, nonatomic) NSString *importSessionID;
@property(retain, nonatomic) NSDictionary *slideshowSettings;
@property(readonly, nonatomic) _Bool shouldDeleteWhenEmpty;
@property(readonly, nonatomic) _Bool canContributeToCloudSharedAlbum;
@property(readonly, nonatomic) _Bool isRecentlyAddedAlbum;
@property(readonly, nonatomic) _Bool isMultipleContributorCloudSharedAlbum;
@property(readonly, nonatomic) _Bool isFamilyCloudSharedAlbum;
@property(readonly, nonatomic) _Bool isOwnedCloudSharedAlbum;
@property(readonly, nonatomic) _Bool isInTrash;
@property(readonly, nonatomic) _Bool isFolder;
@property(readonly, nonatomic) _Bool isStandInAlbum;
@property(readonly, nonatomic) _Bool isPendingPhotoStreamAlbum;
@property(readonly, nonatomic) _Bool isCloudSharedAlbum;
@property(readonly, nonatomic) _Bool isPhotoStreamAlbum;
@property(readonly, nonatomic) _Bool isWallpaperAlbum;
@property(readonly, nonatomic) _Bool isPanoramasAlbum;
@property(readonly, nonatomic) _Bool isCameraAlbum;
@property(readonly, nonatomic) _Bool isLibrary;
@property(readonly, retain, nonatomic) UIImage *posterImage;
@property(nonatomic) _Bool hasUnseenContentBoolValue;
@property(readonly, retain, nonatomic) NSMutableOrderedSet *mutableAssets;
@property(readonly, nonatomic) int kindValue;
@property(readonly, retain, nonatomic) NSNumber *kind;
- (void)batchFetchAssets:(NSOrderedSet *)arg1;
- (void)reducePendingItemsCountBy:(unsigned long long)arg1;

@optional
@property(readonly, copy, nonatomic) NSString *name;
- (void)setUINotificationsEnabled:(_Bool)arg1;
- (NSMutableIndexSet *)filteredIndexesForPredicate:(NSPredicate *)arg1;
@end

@protocol PLAssetChangeObserver
- (void)assetsDidChange:(PLAssetChangeNotification *)arg1;
@end

@protocol PLAssetContainer <NSObject, PLDiagnosticsProvider>
@property(readonly, copy, nonatomic) NSArray *localizedLocationNames;
@property(readonly, nonatomic) _Bool canShowAvalancheStacks;
@property(readonly, nonatomic) _Bool canShowComments;
@property(retain, nonatomic) PLManagedAsset *tertiaryKeyAsset;
@property(retain, nonatomic) PLManagedAsset *secondaryKeyAsset;
@property(retain, nonatomic) PLManagedAsset *keyAsset;
@property(readonly, nonatomic) _Bool isEmpty;
@property(readonly, nonatomic) unsigned long long videosCount;
@property(readonly, nonatomic) unsigned long long photosCount;
@property(readonly, nonatomic) unsigned long long assetsCount;
@property(readonly, nonatomic) unsigned long long approximateCount;
@property(readonly, retain, nonatomic) NSOrderedSet *assets;
@property(readonly, copy, nonatomic) NSString *localizedTitle;
@property(readonly, retain, nonatomic) NSString *title;
@property(readonly, retain, nonatomic) NSString *uuid;
- (_Bool)canPerformEditOperation:(unsigned long long)arg1;

@optional
@property(readonly, retain, nonatomic) NSDate *endDate;
@property(readonly, retain, nonatomic) NSDate *startDate;
@end

@protocol PLAssetContainerList <NSObject, PLDiagnosticsProvider>
@property(readonly, nonatomic) unsigned long long containersCount;
- (NSString *)containersRelationshipName;
- (PLPhotoLibrary *)photoLibrary;
- (NSManagedObjectContext *)managedObjectContext;
- (_Bool)canEditContainers;
- (_Bool)isEmpty;
- (NSOrderedSet *)containers;
@end

@protocol PLAssetContainerListChangeObserver
- (void)assetContainerListDidChange:(PLAssetContainerListChangeNotification *)arg1;
@end

@protocol PLBBPendingBulletinsBatchDelegate <NSObject>
- (PLBBBulletin *)bulletinsBatch:(PLBBPendingBulletinsBatch *)arg1 bulletinByMergingPersistedListWithBulletin:(PLBBBulletin *)arg2;
- (_Bool)bulletinsBatch:(PLBBPendingBulletinsBatch *)arg1 shouldAllowAlertsFromContactWithEmail:(NSString *)arg2;
- (void)bulletinsBatch:(PLBBPendingBulletinsBatch *)arg1 didProcessReadyBulletins:(NSArray *)arg2 stillPending:(_Bool)arg3;
@end

@protocol PLCloudScenarioConsumer <NSObject>
- (void)consumeScenario:(PLCloudScenario *)arg1 withCompletionHandler:(void (^)(PLCloudScenarioExecutionResult *))arg2;
@end

@protocol PLCloudSharedAlbumProtocol <PLAlbumProtocol>
@property(nonatomic) _Bool cloudNotificationsEnabled;
@property(readonly, retain, nonatomic) NSDate *cloudFirstRecentBatchDate;
@property(readonly, retain, nonatomic) NSOrderedSet *cloudAlbumSubscriberRecords;
@property(readonly, retain, nonatomic) NSString *localizedSharedWithLabel;
@property(readonly) int cloudRelationshipStateLocalValue;
@property(readonly) int cloudRelationshipStateValue;
@property(retain, nonatomic) NSString *cloudPersonID;
@property(retain, nonatomic) NSDate *cloudLastContributionDate;
@property(retain, nonatomic) NSDate *cloudCreationDate;
@property(retain, nonatomic) NSDate *cloudLastInterestingChangeDate;
@property(retain, nonatomic) NSNumber *cloudMultipleContributorsEnabledLocal;
@property(retain, nonatomic) NSNumber *cloudMultipleContributorsEnabled;
@property(retain, nonatomic) NSNumber *cloudPublicURLEnabledLocal;
@property(retain, nonatomic) NSNumber *cloudPublicURLEnabled;
@property unsigned long long unseenAssetsCountIntegerValue;
@property(retain, nonatomic) NSNumber *unseenAssetsCount;
@property(retain, nonatomic) NSOrderedSet *invitationRecords;
@property(retain, nonatomic) NSString *publicURL;
@property(retain, nonatomic) NSDate *cloudSubscriptionDate;
@property(retain, nonatomic) NSString *cloudOwnerHashedPersonID;
@property(retain, nonatomic) NSString *cloudOwnerEmail;
@property(retain, nonatomic) NSString *cloudOwnerFullName;
@property(retain, nonatomic) NSString *cloudOwnerLastName;
@property(retain, nonatomic) NSString *cloudOwnerFirstName;
@property(retain, nonatomic) NSDictionary *cloudMetadata;
@property(retain, nonatomic) NSString *cloudGUID;
- (void)userDeleteSubscriberRecord:(PLCloudSharedAlbumInvitationRecord *)arg1;
- (void)getUnseenStartMarkerIndex:(unsigned long long *)arg1 count:(unsigned long long *)arg2 showsProgress:(_Bool *)arg3;
- (void)updateCloudLastContributionDateWithDate:(NSDate *)arg1;
- (void)updateCloudLastInterestingChangeDateWithDate:(NSDate *)arg1;
- (NSString *)cloudOwnerDisplayNameIncludingEmail:(_Bool)arg1 allowsEmail:(_Bool)arg2;
- (NSString *)localizedSharedByLabelAllowsEmail:(_Bool)arg1;
@end

@protocol PLDerivedAlbumListOrigin
- (void)enumerateDerivedAlbumLists:(void (^)(struct NSObject *))arg1;
- (void)unregisterAllDerivedAlbums;
- (void)registerDerivedAlbumList:(struct NSObject *)arg1;
@end

@protocol PLDerivedAlbumOrigin
- (void)enumerateDerivedAlbums:(void (^)(struct NSObject *))arg1;
- (void)unregisterAllDerivedAlbums;
- (void)registerDerivedAlbum:(struct NSObject *)arg1;
@end

@protocol PLDerivedNotification <NSObject>
+ (id)notificationForDerivedObject:(id)arg1 priorChangeState:(id)arg2 forBackingObjectNotification:(PLChangeNotification *)arg3;
@end

@protocol PLDiagnosticsProvider <NSObject>

@optional
- (NSString *)diagnosticInformation;
- (_Bool)supportsDiagnosticInformation;
@end

@protocol PLForegroundObserver <NSObject>
- (void)foregroundMonitor:(PLForegroundMonitor *)arg1 changedStateToForeground:(_Bool)arg2 context:(id)arg3;
@end

@protocol PLIndexMapperDataSource <NSObject>
@property(readonly, copy, nonatomic) NSIndexSet *filteredIndexes;
- (_Bool)shouldIncludeObjectAtIndex:(unsigned long long)arg1;
@end

@protocol PLIndexMappersDataOrigin <NSObject>
- (_Bool)hasDerivedIndexMappers;
- (void)enumerateDerivedIndexMappers:(void (^)(NSObject<PLIndexMapperDataSource><PLIndexMappingCache> *))arg1;
@end

@protocol PLIndexMappingCache <NSObject>
@property(readonly, copy, nonatomic) id <NSObject><NSCopying> cachedIndexMapState;
- (Class)derivedChangeNotificationClass;
- (_Bool)mappedDataSourceChanged:(PLContainerChangeNotification *)arg1 remoteNotificationData:(NSDictionary *)arg2;

@optional
- (id)currentStateForChange;
@end

@protocol PLManagedObjectContextPTPNotificationDelegate <NSObject>
- (void)managedObjectContext:(PLManagedObjectContext *)arg1 libraryChangedWithInsertedAssetIDs:(NSArray *)arg2 deletedAssetIDs:(NSArray *)arg3 changedAssetIDs:(NSArray *)arg4;
@end

@protocol PLMomentAssetData <NSObject>
@property(readonly, retain, nonatomic) NSObject<NSCopying> *uniqueObjectID;
@property(nonatomic) _Bool reverseLocationDataIsValid;
@property(retain, nonatomic) NSData *reverseLocationData;
@property(retain, nonatomic) id <PLMomentData> moment;
@property(retain, nonatomic) NSDate *dateCreated;
@property(retain, nonatomic) CLLocation *location;
- (NSString *)globalUUID;
- (_Bool)isDeleted;
- (_Bool)visibilityStateIsEqualToState:(short)arg1;
- (long long)compareToAsset:(id <PLMomentAssetData>)arg1;

@optional
@property(retain, nonatomic) NSString *customCollectionUUID;
@property(retain, nonatomic) NSString *customCollectionName;
@property(retain, nonatomic) NSString *customMomentUUID;
@property(retain, nonatomic) NSString *customMomentName;
@property(readonly, retain, nonatomic) NSString *cloudAssetGUID;
@property(nonatomic) short width;
@property(nonatomic) short height;
@property(nonatomic) short kindSubtype;
@property(nonatomic) short kind;
@property(nonatomic) _Bool favorite;
@property(nonatomic) double duration;
@property(retain, nonatomic) NSDate *modificationDate;
@property(readonly, retain, nonatomic) NSString *uuid;
@end

@protocol PLMomentAssetData_Private <PLMomentAssetData>

@optional
- (_Bool)hasChanges;
- (_Bool)isPhoto;
- (_Bool)isAvalancheStackPhoto;
- (_Bool)isInterestingForAvalanche;
- (NSString *)avalancheUUID;
@end

@protocol PLMomentContainer <NSObject>
- (NSOrderedSet *)moments;
@end

@protocol PLMomentData <NSObject>
@property(retain, nonatomic) NSArray *userTitles;
@property(retain, nonatomic) NSString *uuid;
@property(nonatomic) short generationType;
@property(nonatomic) _Bool reverseLocationDataIsValid;
@property(retain, nonatomic) NSData *reverseLocationData;
@property(nonatomic) int cachedCount;
@property(retain, nonatomic) id <PLMomentListData> megaMomentList;
@property(retain, nonatomic) id <PLMomentListData> yearMomentList;
@property(retain, nonatomic) NSOrderedSet *assets;
@property(retain, nonatomic) CLLocation *approximateLocation;
@property(readonly, retain, nonatomic) NSObject<NSCopying> *uniqueObjectID;
@property(retain, nonatomic) NSDate *representativeDate;
@property(retain, nonatomic) NSDate *endDate;
@property(retain, nonatomic) NSDate *startDate;
- (void)removeAssetData:(id <PLMomentAssetData>)arg1;
- (void)replaceAssetDataAtIndex:(unsigned long long)arg1 withAssetData:(id <PLMomentAssetData>)arg2;
- (void)delete;
- (_Bool)isDeleted;
@end

@protocol PLMomentData_Private <PLMomentData>

@optional
@property(nonatomic) int cachedVideosCount;
@property(nonatomic) int cachedPhotosCount;
@end

@protocol PLMomentGenerationDataManagement <NSObject>
- (NSDictionary *)homeAddressDictionary;
- (_Bool)isNetworkReachable;
- (void)stopObservingNetworkReachabilityChanges;
- (void)beginObservingNetworkReachabilityChangesWithBlock:(void (^)(_Bool))arg1;
- (NSArray *)allAssetsToBeIncludedInMomentsWithError:(id *)arg1;
- (NSArray *)allMomentListsWithInvalidReverseLocationDataForLevel:(short)arg1;
- (NSArray *)allMomentListsForLevel:(short)arg1;
- (NSArray *)allMomentsWithInvalidReverseLocationData;
- (NSArray *)allMomentsWithError:(id *)arg1;
- (void)resetOnFailure;
- (_Bool)save:(id *)arg1;
- (_Bool)hasChanges;
- (id <PLMomentData>)insertNewMoment;
- (id <PLMomentListData>)insertNewMomentListForGranularityLevel:(short)arg1;
- (Class)momentAssetDataClass;
- (Class)momentDataClass;
- (Class)momentListDataClassForGranularityLevel:(short)arg1;
- (id <PLMomentListData>)findOrCreateYearMomentListForYear:(long long)arg1;
- (id <PLMomentListData>)yearMomentListForYear:(long long)arg1 wantsEarliest:(_Bool)arg2;
- (id <PLMomentListData>)momentListContainingDate:(NSDate *)arg1 forLevel:(short)arg2 wantsEarliest:(_Bool)arg3;
- (NSArray *)momentsBetweenDate:(NSDate *)arg1 andDate:(NSDate *)arg2 sorted:(_Bool)arg3;
- (NSArray *)momentsSinceDate:(NSDate *)arg1;
- (id <PLMomentListData>)momentListWithUniqueID:(NSObject<NSCopying> *)arg1 forLevel:(short)arg2 error:(id *)arg3;
- (id <PLMomentData>)momentWithUniqueID:(NSObject<NSCopying> *)arg1 error:(id *)arg2;
- (id <PLMomentAssetData>)assetWithUniqueID:(NSObject<NSCopying> *)arg1 error:(id *)arg2;
- (_Bool)saveAnalysisMetadata:(NSDictionary *)arg1;
- (NSDictionary *)analysisMetadata;
- (_Bool)saveServerVersionInfo:(NSDictionary *)arg1;
- (NSDictionary *)serverVersionInfo;
- (void)setMomentAnalysisNeeded:(_Bool)arg1;
- (_Bool)isMomentAnalysisNeeded;
- (void)performDataTransaction:(void (^)(void))arg1 synchronously:(_Bool)arg2 completionHandler:(void (^)(void))arg3;
- (void)performBlock:(void (^)(void))arg1 synchronously:(_Bool)arg2 completionHandler:(void (^)(void))arg3;

@optional
- (NSString *)replayLogPath;
- (_Bool)wantsMomentReplayLogging;
- (NSSet *)deletedObjects;
- (NSSet *)updatedObjects;
- (NSSet *)insertedObjects;
- (void)analysisCompletedWithSuccess:(_Bool)arg1;
- (void)pendingChangesUpdated:(unsigned long long)arg1;
@end

@protocol PLMomentGenerationDataManagement_Private <PLMomentGenerationDataManagement>

@optional
- (NSDictionary *)generationOptions;
- (void)setupPhotoLibrary;
- (void)refreshObject:(id <PLMomentAssetData>)arg1 mergeChanges:(_Bool)arg2;
- (void)insertMomentIntoAllMoments:(id <PLMomentData>)arg1 atIndex:(unsigned long long)arg2;
- (void)removeMomentFromAllMoments:(id <PLMomentData>)arg1;
- (NSOrderedSet *)allMomentsInLibrary;
@end

@protocol PLMomentListData <NSObject>
@property(retain, nonatomic) NSArray *userTitles;
@property(retain, nonatomic) NSOrderedSet *moments;
@property(nonatomic) short generationType;
@property(nonatomic) _Bool reverseLocationDataIsValid;
@property(retain, nonatomic) NSData *reverseLocationData;
@property(nonatomic) int sortIndex;
@property(readonly, retain, nonatomic) NSObject<NSCopying> *uniqueObjectID;
@property(nonatomic) short granularityLevel;
@property(retain, nonatomic) NSDate *representativeDate;
@property(retain, nonatomic) NSDate *endDate;
@property(retain, nonatomic) NSDate *startDate;
- (void)addMomentToFront:(id <PLMomentData>)arg1;
- (void)removeMoments:(NSOrderedSet *)arg1;
- (void)addMoments:(NSOrderedSet *)arg1;
- (void)delete;
- (_Bool)isDeleted;

@optional
- (NSString *)momentListDebugDescription;
@end

@protocol PLOrderKeyObject <NSObject>
- (NSManagedObject *)childManagedObject;
- (NSString *)secondaryOrderSortKey;
- (void)setIsSpecial:(_Bool)arg1;
- (_Bool)isSpecial;
- (void)setOrderValue:(long long)arg1;
- (long long)orderValue;
@end

@protocol PLPhotoBakedThumbnailsDelegate
- (void)decorateThumbnail:(PLPhotoBakedThumbnails *)arg1 inContext:(struct CGContext *)arg2;
@end

@protocol PLPhotoEditDataExporter <NSObject>
+ (NSData *)dataFromPhotoEditModel:(PLPhotoEditModel *)arg1 imageWidth:(unsigned long long)arg2 imageHeight:(unsigned long long)arg3 exifOrientation:(int)arg4;
+ (NSString *)formatVersion;
+ (NSString *)formatIdentifier;
@end

@protocol PLPhotoEditDataImporter <NSObject>
+ (NSDictionary *)debugDescriptionForPhotoEditData:(NSData *)arg1 formatIdentifier:(NSString *)arg2 formatVersion:(NSString *)arg3;
+ (_Bool)loadPhotoEditData:(NSData *)arg1 formatIdentifier:(NSString *)arg2 formatVersion:(NSString *)arg3 intoModel:(PLPhotoEditMutableModel *)arg4 baseOrientation:(long long)arg5;
+ (_Bool)canInterpretDataWithFormatIdentifier:(NSString *)arg1 formatVersion:(NSString *)arg2;
@end

@protocol PLPreheatItemSource <NSObject>
- (PLPreheatItem *)originalPreheatItemForAsset:(id <_PLImageLoadingAsset>)arg1 optimalSourcePixelSize:(struct CGSize)arg2 options:(unsigned int)arg3;
- (PLPreheatItem *)preheatItemForAsset:(id <_PLImageLoadingAsset>)arg1 format:(int)arg2 optimalSourcePixelSize:(struct CGSize)arg3 options:(unsigned int)arg4;

@optional
- (NSData *)imageDataAtIndex:(unsigned long long)arg1 width:(int *)arg2 height:(int *)arg3 bytesPerRow:(int *)arg4 dataWidth:(int *)arg5 dataHeight:(int *)arg6 dataOffset:(int *)arg7;
- (void)preheatImageDataAtIndexes:(NSIndexSet *)arg1 completionHandler:(void (^)(UIImage *, _Bool))arg2;
@end

@protocol PLThumbPersistenceManager <PLPreheatItemSource>
@property(readonly, nonatomic) struct CGSize imageSize;
@property(readonly, nonatomic) _Bool isReadOnly;
@property(readonly, nonatomic) int imageLength;
@property(readonly, nonatomic) int imageRowBytes;
@property(readonly, nonatomic) int imageHeight;
@property(readonly, nonatomic) int imageWidth;
@property(readonly, nonatomic) int imageFormat;
@property(readonly, nonatomic) NSString *path;
- (NSString *)_debugDescription;
- (_Bool)usesThumbIdentifiers;
- (void)endThumbnailSafePropertyUpdatesOnAsset:(PLManagedAsset *)arg1 withToken:(id)arg2;
- (id)beginThumbnailSafePropertyUpdatesOnAsset:(PLManagedAsset *)arg1;
- (_Bool)copyEntryFromOriginalAsset:(PLManagedAsset *)arg1 toAsset:(PLManagedAsset *)arg2;
- (PLMappedImageData *)imageDataWithIdentifier:(NSString *)arg1 orIndex:(unsigned long long)arg2 width:(int *)arg3 height:(int *)arg4 bytesPerRow:(int *)arg5 dataWidth:(int *)arg6 dataHeight:(int *)arg7 dataOffset:(int *)arg8;
- (void)setImageDataForEntry:(const void *)arg1 withIdentifier:(NSString *)arg2 orIndex:(unsigned long long)arg3 asset:(PLManagedAsset *)arg4;
- (void)setImageForEntry:(UIImage *)arg1 withIdentifier:(NSString *)arg2 orIndex:(unsigned long long)arg3 videoDuration:(NSNumber *)arg4 photoUUID:(NSString *)arg5;

@optional
- (long long)entryCount;
- (void)preheatImageDataAtIndexes:(NSIndexSet *)arg1 completionHandler:(void (^)(UIImage *, _Bool))arg2;
- (void)preheatImageDataAtIndex:(unsigned long long)arg1 completionHandler:(void (^)(UIImage *, _Bool))arg2;
- (NSString *)thumbnailPathForThumbIdentifier:(NSString *)arg1;
- (UIImage *)imageWithIdentifier:(NSString *)arg1;
- (void)deleteEntryWithIdentifier:(NSString *)arg1 orIndex:(unsigned long long)arg2 uuid:(NSString *)arg3;
@end

@protocol PLUserEditableAlbumProtocol <PLAlbumProtocol>
@property(readonly, retain, nonatomic) NSMutableOrderedSet *userEditableAssets;
- (void)insertInternalUserEditableAssets:(NSArray *)arg1 atIndexes:(NSIndexSet *)arg2 trimmedVideoPathInfo:(NSDictionary *)arg3 commentText:(NSString *)arg4;
@end

@protocol UIActivityItemSource <NSObject>
- (id)activityViewController:(UIActivityViewController *)arg1 itemForActivityType:(NSString *)arg2;
- (id)activityViewControllerPlaceholderItem:(UIActivityViewController *)arg1;

@optional
- (UIImage *)activityViewController:(UIActivityViewController *)arg1 thumbnailImageForActivityType:(NSString *)arg2 suggestedSize:(struct CGSize)arg3;
- (NSString *)activityViewController:(UIActivityViewController *)arg1 dataTypeIdentifierForActivityType:(NSString *)arg2;
- (NSString *)activityViewController:(UIActivityViewController *)arg1 subjectForActivityType:(NSString *)arg2;
@end

@protocol _CIFilterProperties
- (CIFilter *)_initFromProperties:(NSArray *)arg1;
- (NSArray *)_outputProperties;
@end

@protocol _PLImageLoadingAsset <NSObject>
- (_Bool)isTimelapsePlaceholder;
- (PLManagedAsset *)managedAssetForPhotoLibrary:(PLPhotoLibrary *)arg1;
- (_Bool)duration;
- (_Bool)isCloudPlaceholder;
- (_Bool)isCloudPhotoLibraryAsset;
- (long long)cloudSharedAssetPlaceholderKind;
- (_Bool)isCloudSharedAsset;
- (_Bool)isInFlight;
- (NSURL *)fileURLForFullsizeRenderImage;
- (NSURL *)fileURLForFullsizeRenderVideo;
- (NSString *)pathForAdjustmentFile;
- (NSString *)pathForPenultimateFullsizeRenderImageFile;
- (NSString *)reservedPathForLargeDisplayableImageFileForceLarge:(_Bool)arg1 forceUpgradeFromSubstandardIfNecessary:(_Bool)arg2 outImageType:(long long *)arg3;
- (NSString *)pathForSubstandardFullsizeRenderImageFile;
- (NSString *)pathForOriginalFile;
- (int)orientation;
- (_Bool)isPartOfBurst;
- (_Bool)isJPEG;
- (_Bool)isVideo;
- (NSString *)uniformTypeIdentifier;
- (NSManagedObjectID *)objectID;
- (struct CGSize)imageSize;
- (NSString *)thumbnailIdentifier;
- (_Bool)complete;
- (short)kindSubtype;
- (short)kind;
- (short)savedAssetType;
- (NSString *)uuid;
- (unsigned long long)effectiveThumbnailIndex;
- (NSString *)debugFilename;
- (_Bool)hasAdjustments;
- (_Bool)hasLegacyAdjustments;
- (long long)originalImageOrientation;
- (NSURL *)assetsLibraryURL;
- (double)aspectRatio;
- (PLPhotoLibrary *)pl_photoLibrary;
@end

@interface AssetCollectionInfo : NSObject <NSSecureCoding>
{
    _Bool _isMine;
    _Bool _hasVideoAsset;
    _Bool _isDeletable;
    NSString *_GUID;
    NSString *_personID;
    NSDictionary *_metaData;
    NSNumber *_width;
    NSNumber *_height;
    NSDate *_timestamp;
}

+ (_Bool)supportsSecureCoding;
@property(readonly, retain, nonatomic) NSDate *timestamp; // @synthesize timestamp=_timestamp;
@property(readonly, retain, nonatomic) NSNumber *height; // @synthesize height=_height;
@property(readonly, retain, nonatomic) NSNumber *width; // @synthesize width=_width;
@property(readonly, retain, nonatomic) NSDictionary *metaData; // @synthesize metaData=_metaData;
@property(readonly, nonatomic) _Bool isDeletable; // @synthesize isDeletable=_isDeletable;
@property(readonly, nonatomic) _Bool hasVideoAsset; // @synthesize hasVideoAsset=_hasVideoAsset;
@property(readonly, nonatomic) _Bool isMine; // @synthesize isMine=_isMine;
@property(readonly, retain, nonatomic) NSString *personID; // @synthesize personID=_personID;
@property(readonly, retain, nonatomic) NSString *GUID; // @synthesize GUID=_GUID;
- (void)dealloc;
- (id)description;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithAssetCollection:(id)arg1;

@end

@interface CIFilter (PLManagedAdjustment)
+ (id)_pl_filterArrayFromProperties:(id)arg1 inputImageExtent:(struct CGRect)arg2;
+ (id)_pl_propertyArrayFromFilters:(id)arg1 inputImageExtent:(struct CGRect)arg2;
@end

@interface CLLocation (PLLocationHash)
- (id)pl_newSurroundingLocationsHashes;
- (int)pl_locationHash;
@end

@interface NSArray (Additions)
- (unsigned long long)pl_indexOfLastObjectInRange:(struct _NSRange)arg1 passingTest:(CDUnknownBlockType)arg2;
- (unsigned long long)pl_indexOfLastObjectPassingTest:(CDUnknownBlockType)arg1;
- (unsigned long long)pl_indexOfFirstObjectInRange:(struct _NSRange)arg1 passingTest:(CDUnknownBlockType)arg2;
- (unsigned long long)pl_indexOfFirstObjectPassingTest:(CDUnknownBlockType)arg1;
- (id)pl_arrayOfUniqueObjectsNotInOrderedSet:(id)arg1;
- (unsigned long long)pl_countOfObjectsPassingTest:(CDUnknownBlockType)arg1;
- (id)pl_shortDescription;
@end

@interface NSData (PhotoLibraryAdditions)
+ (id)pl_dataWithMappedContentsOfFileDescriptor:(int)arg1;
+ (id)pl_dataWithMappedContentsOfFileHandle:(id)arg1;
- (void)pl_adviceDoNotNeed;
- (void)pl_adviceWillNeed;
- (unsigned long long)pl_advisoryLength;
@end

@interface NSFileManager (PhotoLibraryAdditions)
- (_Bool)ensureDirectoryExistsAtPath:(id)arg1;
- (_Bool)removeDirectoryAtPathIfEmpty:(id)arg1 ancestors:(int)arg2;
- (_Bool)removeItemsAtPaths:(id)arg1;
- (id)pathsAtDirectory:(id)arg1 withNameFamily:(id)arg2;
- (_Bool)directoryExistsAtPath:(id)arg1;
- (id)tmpFileForVideoTranscodeWithExtension:(id)arg1;
@end

@interface NSIndexSet (PLAdditions)
- (id)pl_indexSetAdjustedForInsertions:(id)arg1;
- (id)pl_indexSetAdjustedForDeletions:(id)arg1;
- (id)_pl_indexSetByUpdatingWithChangedIndexes:(id)arg1 asInserts:(_Bool)arg2;
- (id)pl_shortDescription;
@end

@interface NSKeyedUnarchiver (MLKeyedUnarchiverAdditions)
- (id)moments_safeInitForReadingWithData:(id)arg1;
@end

@interface NSKeyedUnarchiver (PLKeyedUnarchiverAdditions)
+ (id)pl_safeUnarchiveObjectWithFile:(id)arg1;
+ (id)pl_safeUnarchiveObjectWithData:(id)arg1;
- (id)pl_safeInitForReadingWithData:(id)arg1;
@end

@interface NSManagedObjectContext (PLManagedObjectContext)
- (id)photoLibrary;
- (_Bool)isUserInterfaceContext;
- (void)pl_refresh;
@end

@interface NSManagedObjectID (PLManagedObject)
- (id)pl_shortURI;
@end

@interface NSMutableDictionary (PLUnmanagedAdjustmentHelper)
- (void)pl_enforceCorrectValuesForMinKey:(id)arg1 maxKey:(id)arg2;
- (void)pl_applyOrientation:(long long)arg1 toNormalizedPointWithXKey:(id)arg2 yKey:(id)arg3;
@end

@interface NSMutableIndexSet (PLAdditions)
- (void)pl_adjustIndexesForInsertions:(id)arg1;
- (void)pl_adjustIndexesForDeletions:(id)arg1;
@end

@interface NSMutableOrderedSet (PLAdditions)
- (void)pl_insertObjects:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)pl_removeObjectsInArray:(id)arg1;
- (void)pl_addObjectsFromArray:(id)arg1;
@end

@interface NSMutableOrderedSet (PLMomentAdditions)
- (void)ml_insertObjects:(id)arg1 atIndex:(unsigned long long)arg2;
@end

@interface NSMutableSet (PLAdditions)
- (void)pl_addObjectIfNotNil:(id)arg1;
@end

@interface NSOrderedSet (PLAdditions)
- (_Bool)pl_isSortedUsingComparator:(CDUnknownBlockType)arg1;
- (unsigned long long)pl_indexOfObjectIdenticalTo:(id)arg1;
- (id)pl_shortDescription;
@end

@interface NSSet (PLAdditions)
- (unsigned long long)pl_countOfObjectsPassingTest:(CDUnknownBlockType)arg1;
@end

@interface PFAdjustment : NSObject
{
    _Bool _enabled;
    unsigned long long _formatVersion;
    NSString *_identifier;
    NSDictionary *_settings;
    NSString *_autoIdentifier;
    NSDictionary *_autoSettings;
    NSString *_maskUUID;
}

+ (_Bool)isValidArchiveDictionary:(id)arg1 errors:(id)arg2;
@property(readonly, nonatomic) NSString *maskUUID; // @synthesize maskUUID=_maskUUID;
@property(readonly, nonatomic) _Bool enabled; // @synthesize enabled=_enabled;
@property(readonly, nonatomic) NSDictionary *autoSettings; // @synthesize autoSettings=_autoSettings;
@property(readonly, nonatomic) NSString *autoIdentifier; // @synthesize autoIdentifier=_autoIdentifier;
@property(readonly, nonatomic) NSDictionary *settings; // @synthesize settings=_settings;
@property(readonly, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
@property(readonly, nonatomic) unsigned long long formatVersion; // @synthesize formatVersion=_formatVersion;
- (void).cxx_destruct;
- (id)debugDescription;
- (id)description;
- (id)initWithIdentifier:(id)arg1 settings:(id)arg2 autoIdentifier:(id)arg3 autoSettings:(id)arg4 enabled:(_Bool)arg5 maskUUID:(id)arg6;
- (id)initWithIdentifier:(id)arg1 settings:(id)arg2 autoIdentifier:(id)arg3 autoSettings:(id)arg4 enabled:(_Bool)arg5;
- (id)initWithIdentifier:(id)arg1 settings:(id)arg2 enabled:(_Bool)arg3;
- (id)init;
- (id)archiveDictionary;
- (id)initWithArchiveDictionary:(id)arg1;

@end

@interface PFAdjustmentSerialization : NSObject
{
}

+ (id)deserializeDictionaryFromData:(id)arg1 error:(id *)arg2;
+ (id)serializeDictionary:(id)arg1 error:(id *)arg2;
+ (id)deserializeAdjustmentsFromData:(id)arg1 error:(id *)arg2;
+ (id)serializeAdjustments:(id)arg1 error:(id *)arg2;
+ (_Bool)validateValue:(id)arg1 isOfType:(Class)arg2 errors:(id)arg3;
+ (_Bool)validateArchive:(id)arg1 containsEntryWithKey:(id)arg2 ofType:(Class)arg3 errors:(id)arg4;

@end

@interface PFAdjustmentStack : NSObject <NSCopying, NSFastEnumeration>
{
    NSArray *_adjustments;
    NSOrderedSet *_maskUUIDs;
    unsigned long long _formatVersion;
}

+ (_Bool)isValidEnvelopeDictionary:(id)arg1 errors:(id)arg2;
- (void).cxx_destruct;
- (id)debugDescription;
- (id)description;
- (unsigned long long)count;
- (id)maskUUIDs;
- (id)adjustmentsWithIdentifier:(id)arg1;
- (id)firstAdjustmentWithIdentifier:(id)arg1;
- (id)adjustmentAtIndex:(unsigned long long)arg1;
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithAdjustments:(id)arg1;
- (id)init;
- (id)envelopeDictionary;
- (id)initWithEnvelopeDictionary:(id)arg1;

@end

@interface PFZlibDataCompression : NSObject
{
}

+ (id)decompressData:(id)arg1 options:(id)arg2 error:(id *)arg3;
+ (id)compressData:(id)arg1 options:(id)arg2 error:(id *)arg3;
- (id)init;

@end

@interface PFZlibDataCompressionOptions : NSObject
{
    int _compressionLevel;
    int _strategy;
    int _windowBits;
    int _memoryLevel;
    int _chunkSize;
}

+ (id)defaultOptions;
@property(nonatomic) int chunkSize; // @synthesize chunkSize=_chunkSize;
@property(nonatomic) int memoryLevel; // @synthesize memoryLevel=_memoryLevel;
@property(nonatomic) int windowBits; // @synthesize windowBits=_windowBits;
@property(nonatomic) int strategy; // @synthesize strategy=_strategy;
@property(nonatomic) int compressionLevel; // @synthesize compressionLevel=_compressionLevel;
- (void)setCompressionStrategy:(int)arg1;

@end

@interface PFZlibDataDecompressionOptions : NSObject
{
    _Bool _decompressAllAtOnce;
    int _windowBits;
    CDUnknownBlockType _createBuffer;
    CDUnknownBlockType _growData;
}

+ (id)defaultOptions;
@property(nonatomic) _Bool decompressAllAtOnce; // @synthesize decompressAllAtOnce=_decompressAllAtOnce;
@property(copy, nonatomic) CDUnknownBlockType growData; // @synthesize growData=_growData;
@property(copy, nonatomic) CDUnknownBlockType createBuffer; // @synthesize createBuffer=_createBuffer;
@property(nonatomic) int windowBits; // @synthesize windowBits=_windowBits;
- (void).cxx_destruct;

@end

@interface PLManagedObject : NSManagedObject
{
}

- (void)willSave;
@property(readonly, copy, nonatomic) NSString *pl_shortDescription;
@property(readonly, copy, nonatomic) NSString *shortObjectIDURI;
@property(readonly, nonatomic) _Bool isRegisteredWithUserInterfaceContext;
@property(readonly, retain, nonatomic) PLPhotoLibrary *photoLibrary;

@end

@interface PLAdditionalAssetAttributes : PLManagedObject
{
}

- (void)willSave;
- (_Bool)validateForUpdate:(id *)arg1;
- (_Bool)validateForInsert:(id *)arg1;
@property(retain, nonatomic) NSString *longDescription;

// Remaining properties
@property(retain, nonatomic) PLManagedAsset *asset; // @dynamic asset;
@property(retain, nonatomic) PLAssetDescription *assetDescription; // @dynamic assetDescription;
@property(retain, nonatomic) NSManagedObject *cloudMaster; // @dynamic cloudMaster;
@property(retain, nonatomic) NSSet *cloudResources; // @dynamic cloudResources;
@property(retain, nonatomic) NSString *creatorBundleID; // @dynamic creatorBundleID;
@property(retain, nonatomic) NSString *customCollectionName; // @dynamic customCollectionName;
@property(retain, nonatomic) NSString *customCollectionUUID; // @dynamic customCollectionUUID;
@property(retain, nonatomic) NSString *customMomentName; // @dynamic customMomentName;
@property(retain, nonatomic) NSString *customMomentUUID; // @dynamic customMomentUUID;
@property(retain, nonatomic) NSString *editorBundleID; // @dynamic editorBundleID;
@property(retain, nonatomic) NSString *exifTimestampString; // @dynamic exifTimestampString;
@property(retain, nonatomic) NSNumber *externalUsageIntent; // @dynamic externalUsageIntent;
@property(retain, nonatomic) id importSessionID; // @dynamic importSessionID;
@property(retain, nonatomic) NSSet *keywords; // @dynamic keywords;
@property(retain, nonatomic) NSNumber *locationHash; // @dynamic locationHash;
@property(retain, nonatomic) id originalAssetsUUID; // @dynamic originalAssetsUUID;
@property(retain, nonatomic) NSString *originalFilename; // @dynamic originalFilename;
@property(retain, nonatomic) NSNumber *originalFilesize; // @dynamic originalFilesize;
@property(retain, nonatomic) NSData *originalHash; // @dynamic originalHash;
@property(retain, nonatomic) NSNumber *originalHeight; // @dynamic originalHeight;
@property(retain, nonatomic) NSNumber *originalOrientation; // @dynamic originalOrientation;
@property(retain, nonatomic) NSString *originalPath; // @dynamic originalPath;
@property(retain, nonatomic) NSNumber *originalResourceChoice; // @dynamic originalResourceChoice;
@property(retain, nonatomic) NSNumber *originalWidth; // @dynamic originalWidth;
@property(retain, nonatomic) NSString *publicGlobalUUID; // @dynamic publicGlobalUUID;
@property(retain, nonatomic) NSData *reverseLocationData; // @dynamic reverseLocationData;
@property(retain, nonatomic) NSNumber *reverseLocationDataIsValid; // @dynamic reverseLocationDataIsValid;
@property(retain, nonatomic) NSString *timeZoneName; // @dynamic timeZoneName;
@property(retain, nonatomic) NSString *title; // @dynamic title;
@property(retain, nonatomic) NSManagedObject *unmanagedAdjustment; // @dynamic unmanagedAdjustment;
@property(retain, nonatomic) NSNumber *uploadAttempts; // @dynamic uploadAttempts;

@end

@interface PLAggregateAlbumList : NSObject <PLAssetContainerListChangeObserver, PLAlbumContainer>
{
    NSMutableOrderedSet *_allAlbums;
    NSMutableOrderedSet *_childAlbumLists;
    int _filter;
}

+ (struct NSObject *)albumListWithFilter:(int)arg1 inPhotoLibrary:(id)arg2;
@property(nonatomic) int filter; // @synthesize filter=_filter;
- (id)containersRelationshipName;
- (_Bool)canEditContainers;
- (_Bool)isEmpty;
@property(readonly, nonatomic) unsigned long long containersCount;
- (id)containers;
@property(readonly, retain, nonatomic) NSString *_typeDescription;
@property(readonly, retain, nonatomic) NSString *_prettyDescription;
- (id)photoLibrary;
- (void)preheatAlbumsAtIndexes:(id)arg1 forProperties:(id)arg2 relationships:(id)arg3;
- (void)preheatAlbumsForProperties:(id)arg1 relationships:(id)arg2;
- (void)updateAlbumsOrderIfNeeded;
- (_Bool)needsReordering;
- (void)setNeedsReordering;
@property(readonly, copy, nonatomic) CDUnknownBlockType albumsSortingComparator;
- (_Bool)albumHasFixedOrder:(struct NSObject *)arg1;
@property(readonly, nonatomic) _Bool isFolder;
- (_Bool)canEditAlbums;
- (short)albumListType;
- (id)managedObjectContext;
@property(readonly, nonatomic) unsigned long long unreadAlbumsCount;
- (_Bool)hasAtLeastOneAlbum;
@property(readonly, nonatomic) unsigned long long albumsCount;
- (id)albums;
- (id)identifier;
- (void)assetContainerListDidChange:(id)arg1;
- (void)_invalidateAllAlbums;
- (void)dealloc;
- (id)initWithFilter:(int)arg1 inPhotoLibrary:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PLChangeNotification : NSNotification
{
}

+ (id)notificationWithName:(id)arg1 object:(id)arg2 userInfo:(id)arg3;
- (void)_calculateDiffs;
@property(readonly, retain, nonatomic) PLChangeNotificationCenter *changeNotificationCenter;

@end

@interface PLContainerChangeNotification : PLChangeNotification
{
    id _object;
    PLObjectSnapshot *_snapshot;
    NSArray *_changedObjects;
    _Bool _didCalculateDiffs;
    _Bool _shouldReload;
    NSIndexSet *_deletedIndexes;
    NSIndexSet *_insertedIndexes;
    NSIndexSet *_movedIndexes;
    struct __CFArray *_movedFromIndexes;
    NSIndexSet *_changedIndexes;
    _Bool _countDidChange;
}

- (unsigned long long)snapshotIndexForContainedObject:(id)arg1;
@property(readonly, retain, nonatomic) NSArray *changedObjects;
@property(readonly, retain, nonatomic) NSArray *insertedObjects;
@property(readonly, retain, nonatomic) NSArray *deletedObjects;
@property(readonly, nonatomic) _Bool countDidChange;
@property(readonly, retain, nonatomic) NSIndexSet *changedIndexesRelativeToSnapshot;
@property(readonly, retain, nonatomic) NSIndexSet *changedIndexes;
@property(readonly, nonatomic) _Bool hasMoves;
- (void)enumerateMovesWithBlock:(CDUnknownBlockType)arg1;
@property(readonly, retain, nonatomic) NSIndexSet *insertedIndexes;
@property(readonly, retain, nonatomic) NSIndexSet *deletedIndexes;
@property(readonly, nonatomic) _Bool shouldReload;
- (id)name;
- (id)object;
- (void)dealloc;
- (id)init;
- (void)_calculateDiffs;
- (void)_calculateDiffsIfNecessary;
- (_Bool)_getOldSet:(id *)arg1 newSet:(id *)arg2;
@property(readonly, retain, nonatomic) NSString *_diffDescription;
@property(readonly, retain, nonatomic) PLObjectSnapshot *snapshot;
@property(readonly, retain, nonatomic) NSString *_contentRelationshipName;
@property(readonly, retain, nonatomic) NSArray *_changedObjects;
@property(readonly, retain, nonatomic) PLManagedObject *_managedObject;
@property(nonatomic, setter=_setDidCalculateDiffs:) _Bool _didCalculateDiffs;
- (id)_initWithObject:(id)arg1 snapshot:(id)arg2 changedObjects:(id)arg3;
- (id)_init;

@end

@interface PLAssetContainerListChangeNotification : PLContainerChangeNotification
{
    NSDictionary *_userInfo;
}

+ (id)notificationWithSimulatedReloadRequestForContainerList:(id)arg1;
+ (id)notificationWithContainerList:(id)arg1 snapshot:(id)arg2 changedContainers:(id)arg3;
@property(readonly, retain, nonatomic) NSObject<PLAlbumContainer> *albumList;
@property(readonly, retain, nonatomic) id <PLAssetContainerList> assetContainerList;
- (id)description;
- (id)userInfo;
- (id)name;
- (void)dealloc;
- (id)_contentRelationshipName;

@end

@interface PLAggregateAlbumListChangeNotification : PLAssetContainerListChangeNotification
{
    PLAggregateAlbumList *_albumList;
    PLAssetContainerListChangeNotification *_note;
    unsigned long long _indexOffet;
}

+ (id)notificationForAggregateAlbumList:(id)arg1 fromAlbumListChangeNotification:(id)arg2 indexOffset:(unsigned long long)arg3;
- (_Bool)_getOldSet:(id *)arg1 newSet:(id *)arg2;
- (id)changedObjects;
- (id)insertedObjects;
- (id)deletedObjects;
- (unsigned long long)snapshotIndexForContainedObject:(id)arg1;
- (id)changedIndexesRelativeToSnapshot;
- (id)changedIndexes;
- (void)enumerateMovesWithBlock:(CDUnknownBlockType)arg1;
- (id)insertedIndexes;
- (id)deletedIndexes;
- (_Bool)shouldReload;
- (struct NSObject *)albumList;
- (id)object;
- (void)dealloc;
- (id)initWithAggregateAlbumList:(id)arg1 fromAlbumListChangeNotification:(id)arg2 indexOffset:(unsigned long long)arg3;

@end

@interface PLAssetChangeNotification : PLChangeNotification
{
    NSSet *_updatedAssets;
}

+ (id)notificationWithChangedAssets:(id)arg1;
@property(copy, nonatomic) NSSet *updatedAssets; // @synthesize updatedAssets=_updatedAssets;
- (id)description;
- (id)userInfo;
- (id)object;
- (id)name;
- (void)dealloc;
- (id)_initWithChangedObjects:(id)arg1;
- (id)_init;

@end

@interface PLAssetContainerChangeNotification : PLContainerChangeNotification
{
    _Bool _titleDidChange;
    _Bool _keyAssetDidChange;
    NSDictionary *_userInfo;
}

+ (id)notificationWithContainer:(id)arg1 snapshot:(id)arg2 changedAssets:(id)arg3;
- (void)_calculateDiffs;
- (_Bool)_getOldSet:(id *)arg1 newSet:(id *)arg2;
- (id)_contentRelationshipName;
- (id)assetContainer;
- (_Bool)hasDeletes;
@property(readonly, nonatomic) _Bool keyAssetDidChange;
@property(readonly, nonatomic) _Bool titleDidChange;
@property(readonly, retain, nonatomic) NSObject<PLAlbumProtocol> *album;
@property(readonly, retain, nonatomic) id <PLAssetContainer> container;
- (id)description;
- (id)userInfo;
- (id)name;
- (void)dealloc;

@end

@interface PLAssetDescription : PLManagedObject
{
}

- (void)willSave;
- (void)prepareForDeletion;

// Remaining properties
@property(retain, nonatomic) PLAdditionalAssetAttributes *assetAttributes; // @dynamic assetAttributes;
@property(retain, nonatomic) NSString *longDescription; // @dynamic longDescription;

@end

@interface PLAssetFormats : NSObject
{
}

+ (_Bool)isAlbumVideoPath:(id)arg1;
+ (_Bool)transformForImage:(struct CGImage *)arg1 captureOrientation:(int)arg2 format:(int)arg3 sizeInOut:(struct CGSize *)arg4 contextSizeOut:(struct CGSize *)arg5 transformOut:(struct CGAffineTransform *)arg6;
+ (struct CGSize)scaledSizeForSize:(struct CGSize)arg1 format:(int)arg2 capLength:(_Bool)arg3;
+ (_Bool)formatIsFullscreen:(int)arg1;
+ (_Bool)formatSizeIsShortSide:(int)arg1;
+ (_Bool)formatIsBadgedForVideo:(int)arg1;
+ (_Bool)formatIsCropped:(int)arg1;
+ (unsigned long long)maxLongSideForFullSizeFormat:(int)arg1;
+ (unsigned long long)minShortSideForFullSizeFormat:(int)arg1;
+ (unsigned long long)desiredLongSideForFullSizeFormat:(int)arg1;
+ (id)descriptionForFormat:(int)arg1;
+ (struct CGSize)sizeForFormat:(int)arg1;

@end

@interface PLAssetSharingUtilities : NSObject
{
}

+ (id)assetForVideoURL:(id)arg1 metadata:(id)arg2 outAudioMix:(id *)arg3 outVideoComposition:(id *)arg4;
+ (id)playerItemForVideoFilePath:(id)arg1 metadata:(id)arg2;
+ (id)_playerItemForVideoAssetURL:(id)arg1;
+ (id)playerItemForVideoURL:(id)arg1 fallbackFilePath:(id)arg2;
+ (id)exportSessionForVideoFilePath:(id)arg1 metadata:(id)arg2 exportPreset:(id)arg3;
+ (id)exportSessionForVideoURL:(id)arg1 fallbackFilePath:(id)arg2 exportPreset:(id)arg3;
+ (id)_objectBuilderFromVideoFilePath:(id)arg1 metadata:(id)arg2;
+ (long long)_estimatedOutputFileLengthForDuration:(double)arg1 exportPreset:(id)arg2 exportProperties:(id)arg3;
+ (double)_durationForVideoFilePath:(id)arg1;
+ (double)_durationForVideoAssetURL:(id)arg1;
+ (long long)estimatedOutputFileLengthForVideoFilePath:(id)arg1 metadata:(id)arg2 exportPreset:(id)arg3 exportProperties:(id)arg4;
+ (long long)estimatedOutputFileLengthForVideoURL:(id)arg1 fallbackFilePath:(id)arg2 exportPreset:(id)arg3 exportProperties:(id)arg4;
+ (id)filePathForVideoURL:(id)arg1 outMetadata:(id *)arg2;
+ (struct CGImage *)_thumbnailForAssetURL:(id)arg1 useAspect:(_Bool)arg2;
+ (struct CGImage *)aspectRatioThumbnailForAssetURL:(id)arg1;
+ (struct CGImage *)thumbnailForAssetURL:(id)arg1;

@end

@interface PLAssetToAlbumOrder : PLManagedObject <PLOrderKeyObject>
{
    _Bool _isSpecial;
}

+ (id)newAssetOrderForAsset:(id)arg1 album:(id)arg2;
@property(nonatomic) _Bool isSpecial; // @synthesize isSpecial=_isSpecial;
@property(readonly, copy) NSString *description;
- (void)didSave;
- (id)childManagedObject;
- (id)secondaryOrderSortKey;

// Remaining properties
@property(retain, nonatomic) PLManagedAlbum *album; // @dynamic album;
@property(retain, nonatomic) PLManagedAsset *asset; // @dynamic asset;
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(nonatomic) long long orderValue; // @dynamic orderValue;
@property(readonly) Class superclass;

@end

@interface PLAssetToAlbumOrderingManager : NSObject
{
    PLPhotoLibrary *_photoLibrary;
}

+ (void)logAlbum:(id)arg1;
+ (void)logAssetsToOrder:(id)arg1;
+ (id)sharedManager;
- (void)updateAlbumCounts:(id)arg1 inLibrary:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)updateChildCollectionsUsingTransientOrdersByFolderOID:(id)arg1 inLibrary:(id)arg2;
- (void)updateAlbumAssetsUsingTransientOrdersByAlbumOID:(id)arg1 inLibrary:(id)arg2;
- (void)_updateOrderOfChildrenInParent:(id)arg1 usingTransientOrders:(id)arg2;
- (void)updateOrderValuesForAlbumOIDs:(id)arg1 inLibrary:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)updateOrderValuesForAlbums:(id)arg1 managedObjectContext:(id)arg2;
- (void)_updateOrderKeysForParent:(id)arg1 childToOrderKeyMap:(id)arg2;
- (void)fixupOrderKeys:(id)arg1 withSpacing:(long long)arg2;
- (long long)defaultOrderKeySpacing;
- (_Bool)hasValidOrderKey:(id)arg1;
- (void)ensureValidOrderKey:(id)arg1;
- (long long)compareOrderKeyObject:(id)arg1 withObject:(id)arg2;
- (id)photoLibrary;
- (void)dealloc;
- (id)init;

@end

@interface PLAssetsSaver : NSObject
{
    NSMutableArray *__pendingSaveAssetJobs;
}

+ (id)publicAssetsLibraryErrorFromPrivateError:(id)arg1;
+ (id)publicAssetsLibraryErrorFromPrivateDomain:(id)arg1 withPrivateCode:(long long)arg2;
+ (id)sharedAssetsSaver;
@property(retain, nonatomic) NSMutableArray *_pendingSaveAssetJobs; // @synthesize _pendingSaveAssetJobs=__pendingSaveAssetJobs;
- (void)saveSyncedAssets:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)importFilesWithMasterPath:(id)arg1 sidecarFileInfo:(id)arg2 intoEventWithName:(id)arg3 importSessionIdentifier:(id)arg4 isPhotoStreamsPublishCandidate:(_Bool)arg5;
- (void)copyAssetToCameraRoll:(id)arg1;
- (void)reenqueueAssetUUIDsForPhotoStreamPublication:(id)arg1;
- (void)deletePhotoStreamAssetsWithUUIDs:(id)arg1 streamID:(id)arg2;
- (void)deletePhotoStreamDataForStreamID:(id)arg1;
- (void)saveOneWayATCSyncedImage:(id)arg1 imageData:(id)arg2 eventUUID:(id)arg3 properties:(id)arg4 completionBlock:(CDUnknownBlockType)arg5;
- (void)savePhotoStreamVideoAtPath:(id)arg1 properties:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)savePhotoStreamImage:(id)arg1 imageData:(id)arg2 properties:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (void)saveVideoAtPath:(id)arg1 properties:(id)arg2 completionTarget:(id)arg3 completionSelector:(SEL)arg4 contextInfo:(void *)arg5;
- (void)saveVideoAtPath:(id)arg1 properties:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)saveImage:(id)arg1 imageData:(id)arg2 properties:(id)arg3 completionTarget:(id)arg4 completionSelector:(SEL)arg5 contextInfo:(void *)arg6;
- (void)saveImageData:(id)arg1 properties:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)saveImage:(id)arg1 properties:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)saveImageRef:(struct CGImage *)arg1 orientation:(long long)arg2 imageData:(id)arg3 properties:(id)arg4 completionBlock:(CDUnknownBlockType)arg5;
- (void)_saveVideoAtPath:(id)arg1 properties:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)_saveImage:(id)arg1 imageData:(id)arg2 properties:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (CDUnknownBlockType)_createWriteVideoCompletionBlockWithVideoPath:(id)arg1 target:(id)arg2 selector:(SEL)arg3 contextInfo:(void *)arg4;
- (CDUnknownBlockType)_createWriteImageCompletionBlockWithImage:(id)arg1 target:(id)arg2 selector:(SEL)arg3 contextInfo:(void *)arg4;
- (void)saveCameraAvalancheWithUUID:(id)arg1 allAssetUUIDs:(id)arg2 allAssets:(id)arg3 stackAsset:(id)arg4 completionBlock:(CDUnknownBlockType)arg5;
- (void)regenerateVideoThumbnailsForVideo:(id)arg1 withCreationDate:(id)arg2 progressStack:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (void)saveCameraVideoAtPath:(id)arg1 withMetadata:(id)arg2 thumbnailImage:(id)arg3 createPreviewWellImage:(_Bool)arg4 progressStack:(id)arg5 isSlalom:(_Bool)arg6 assetAdjustments:(id)arg7 videoHandler:(CDUnknownBlockType)arg8 requestEnqueuedBlock:(CDUnknownBlockType)arg9 completionBlock:(CDUnknownBlockType)arg10;
- (id)saveCameraImage:(id)arg1 metadata:(id)arg2 additionalProperties:(id)arg3 diagnostics:(id)arg4 previouslyPendingAsset:(id)arg5 requestEnqueuedBlock:(CDUnknownBlockType)arg6;
- (void)saveCameraImage:(id)arg1 metadata:(id)arg2 additionalProperties:(id)arg3 requestEnqueuedBlock:(CDUnknownBlockType)arg4;
- (id)_addCameraAssetToLibraryWithPath:(id)arg1 thumbnailImage:(id)arg2 assetUUID:(id)arg3 metadata:(id)arg4 assetType:(short)arg5 kind:(short)arg6 kindSubtype:(short)arg7 avalancheUUID:(id)arg8 completionHandler:(CDUnknownBlockType)arg9;
- (void)queueJobDictionary:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)queueJobDictionary:(id)arg1 asset:(id)arg2 requestEnqueuedBlock:(CDUnknownBlockType)arg3 completionBlock:(CDUnknownBlockType)arg4 imageSurface:(void *)arg5 previewImageSurface:(void *)arg6;
- (id)_saveIsolationQueue;
- (void)_setIsTakingPhoto:(_Bool)arg1;
- (void)setAvalancheInProgress:(_Bool)arg1 uuid:(id)arg2;
- (void)batchSavePendingAssetJobs;
- (void)requestAsynchronousImageForAssetOID:(id)arg1 withFormat:(int)arg2 allowPlaceholder:(_Bool)arg3 wantURLOnly:(_Bool)arg4 networkAccessAllowed:(_Bool)arg5 trackCPLDownload:(_Bool)arg6 completionBlock:(CDUnknownBlockType)arg7;
- (id)requestSynchronousImageForAssetOID:(id)arg1 withFormat:(int)arg2 allowPlaceholder:(_Bool)arg3 wantURLOnly:(_Bool)arg4 networkAccessAllowed:(_Bool)arg5 trackCPLDownload:(_Bool)arg6 outImageDataInfo:(id *)arg7 outCPLDownloadContext:(id *)arg8;
- (id)pathForNewAssetOfType:(short)arg1 extension:(id)arg2;
- (void)_requestAccess;
- (void)dealloc;
- (id)init;

@end

@interface PLAvalanche : NSObject <PLAssetContainer, PLAssetChangeObserver>
{
    NSString *_uuid;
    NSOrderedSet *_assets;
    PLPhotoLibrary *_photoLibrary;
    NSIndexSet *__originalAutoPickIndexes;
    NSMutableIndexSet *__autoPickIndexes;
    NSIndexSet *__originalUserFavoriteIndexes;
    NSMutableIndexSet *__userFavoriteIndexes;
    unsigned long long __originalStackIndex;
    unsigned long long __stackIndex;
    PLManagedAsset *__aNewPick;
    PLManagedAsset *__anOldPick;
    CDUnknownBlockType __completionHandler;
}

+ (_Bool)shouldHideAvalanchesFromPhotoStream;
+ (_Bool)shouldOnlyShowAvalanchePicks;
+ (struct CGRect)frameOfTopImageInStackForStackFrame:(struct CGRect)arg1;
+ (id)partialAvalancheStackForImage:(id)arg1 backgroundColor:(id)arg2;
+ (id)avalancheStackForImage:(id)arg1 backgroundColor:(id)arg2;
+ (void)removeFavoriteStatus:(id)arg1;
+ (unsigned long long)_calculateStackAssetForAssetCount:(unsigned long long)arg1 autoPicks:(id)arg2 userFavorites:(id)arg3;
+ (id)_assetAmongAssets:(id)arg1 fromIndexes:(id)arg2 excludingIndexes:(id)arg3;
+ (id)_visibleIndexesAmongAssets:(id)arg1 fromUserFavoriteIndexes:(id)arg2 stackIndex:(unsigned long long)arg3;
+ (void)_updateMembershipForAssets:(id)arg1 autoPicks:(id)arg2 stackAsset:(id)arg3 userFavorites:(id)arg4 deleteNonPicks:(_Bool)arg5;
+ (id)_updatePropertiesForAssets:(id)arg1 autoPicks:(id)arg2 stackAsset:(id)arg3 userFavorites:(id)arg4 deleteNonPicks:(_Bool)arg5;
+ (void)_handleUpdatesForContextWillSave:(id)arg1;
+ (unsigned long long)countForAvalancheUUID:(id)arg1 inLibrary:(id)arg2;
+ (id)assetsWithAvalancheUUID:(id)arg1 inManagedObjectContext:(id)arg2;
@property(copy, nonatomic, setter=_setCompletionHandler:) CDUnknownBlockType _completionHandler; // @synthesize _completionHandler=__completionHandler;
@property(retain, nonatomic, setter=_setAnOldPick:) PLManagedAsset *_anOldPick; // @synthesize _anOldPick=__anOldPick;
@property(retain, nonatomic, setter=_setANewPick:) PLManagedAsset *_aNewPick; // @synthesize _aNewPick=__aNewPick;
@property(nonatomic) unsigned long long _stackIndex; // @synthesize _stackIndex=__stackIndex;
@property(nonatomic) unsigned long long _originalStackIndex; // @synthesize _originalStackIndex=__originalStackIndex;
@property(retain, nonatomic) NSMutableIndexSet *_userFavoriteIndexes; // @synthesize _userFavoriteIndexes=__userFavoriteIndexes;
@property(retain, nonatomic) NSIndexSet *_originalUserFavoriteIndexes; // @synthesize _originalUserFavoriteIndexes=__originalUserFavoriteIndexes;
@property(retain, nonatomic) NSMutableIndexSet *_autoPickIndexes; // @synthesize _autoPickIndexes=__autoPickIndexes;
@property(retain, nonatomic) NSIndexSet *_originalAutoPickIndexes; // @synthesize _originalAutoPickIndexes=__originalAutoPickIndexes;
@property(retain, nonatomic) PLPhotoLibrary *photoLibrary; // @synthesize photoLibrary=_photoLibrary;
@property(retain, nonatomic) NSOrderedSet *assets; // @synthesize assets=_assets;
@property(retain, nonatomic) NSString *uuid; // @synthesize uuid=_uuid;
@property(readonly, copy, nonatomic) NSArray *localizedLocationNames;
@property(readonly, nonatomic) _Bool canShowAvalancheStacks;
@property(readonly, nonatomic) _Bool canShowComments;
- (_Bool)canPerformEditOperation:(unsigned long long)arg1;
@property(retain, nonatomic) PLManagedAsset *tertiaryKeyAsset;
@property(retain, nonatomic) PLManagedAsset *secondaryKeyAsset;
@property(retain, nonatomic) PLManagedAsset *keyAsset;
@property(readonly, nonatomic) _Bool isEmpty;
@property(readonly, nonatomic) unsigned long long videosCount;
@property(readonly, nonatomic) unsigned long long photosCount;
@property(readonly, nonatomic) unsigned long long assetsCount;
@property(readonly, nonatomic) unsigned long long approximateCount;
@property(readonly, copy, nonatomic) NSString *localizedTitle;
@property(readonly, retain, nonatomic) NSString *title;
- (id)proposedStackAssetAfterRemovingFavorite:(id)arg1;
- (_Bool)isAutoPick:(id)arg1;
- (_Bool)isUserFavorite:(id)arg1;
- (void)removeUserFavorite:(id)arg1;
- (void)addUserFavorite:(id)arg1;
- (void)_recalculateStackAsset;
- (id)stackAsset;
- (id)userFavorites;
- (id)autoPicks;
- (void)applyTrashedState:(short)arg1;
- (void)assetsDidChange:(id)arg1;
- (void)applyChangesAndDeleteNonPicks:(_Bool)arg1 currentContainer:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)initWithUUID:(id)arg1 photoLibrary:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, retain, nonatomic) NSDate *endDate;
@property(readonly) unsigned long long hash;
@property(readonly, retain, nonatomic) NSDate *startDate;
@property(readonly) Class superclass;

@end

@interface PLBBBulletin : NSObject
{
    long long _bulletinType;
    NSString *_senderName;
    NSString *_senderEmailAddress;
    NSString *_albumTitle;
    NSString *_photosBatchID;
    NSString *_mainAssetUUID;
    _Bool _mainAssetIsMine;
    _Bool _mainAssetIsVideo;
    _Bool _containsBatchFirstKnownAsset;
    NSMutableSet *_assetUUIDs;
    long long _assetCount;
    NSMutableSet *_placeholderAssetUUIDs;
    NSMutableSet *_lowResThumbAssetUUIDs;
    int _invitationState;
    NSString *_firstCommentGUID;
    NSDate *_commentDate;
    NSString *_commentText;
    long long _commentCount;
    _Bool _commentIsCaption;
    _Bool _suppressAlert;
    NSMutableSet *_senderNames;
    _Bool _forMultipleAsset;
    _Bool _allMultipleAssetIsMine;
    _Bool _isMixedType;
    unsigned long long _recordID;
    unsigned long long _replacedBulletinRecordID;
    unsigned long long _originalRecordID;
    NSString *_albumUUID;
    NSString *_albumCloudGUID;
    NSDate *_date;
    NSDate *_originalDate;
    NSDate *_expirationDate;
}

@property _Bool suppressAlert; // @synthesize suppressAlert=_suppressAlert;
@property(readonly) NSDate *expirationDate; // @synthesize expirationDate=_expirationDate;
@property(copy) NSDate *originalDate; // @synthesize originalDate=_originalDate;
@property(readonly) NSDate *date; // @synthesize date=_date;
@property(readonly) NSString *senderEmailAddress; // @synthesize senderEmailAddress=_senderEmailAddress;
@property(readonly) NSString *mainAssetUUID; // @synthesize mainAssetUUID=_mainAssetUUID;
@property(readonly) NSString *albumCloudGUID; // @synthesize albumCloudGUID=_albumCloudGUID;
@property(readonly) NSString *albumUUID; // @synthesize albumUUID=_albumUUID;
@property unsigned long long originalRecordID; // @synthesize originalRecordID=_originalRecordID;
@property unsigned long long replacedBulletinRecordID; // @synthesize replacedBulletinRecordID=_replacedBulletinRecordID;
@property unsigned long long recordID; // @synthesize recordID=_recordID;
@property(readonly) long long bulletinType; // @synthesize bulletinType=_bulletinType;
- (id)_localizedCountFormatter;
- (_Bool)assetWithUUID:(id)arg1 didChangePlaceholderKindTo:(short)arg2 fromOldKind:(short)arg3;
- (_Bool)isCommentPiggyBackedOnPhotosAddedBulletin;
- (id)description;
@property(readonly) NSDictionary *dictionaryRepresentation;
@property(readonly) NSArray *suppressionContexts;
@property(readonly) _Bool hasThumbnail;
@property(readonly) NSString *destinationURLString;
@property(readonly) NSString *message;
@property(readonly) NSString *title;
@property(readonly) double completionPercentage;
@property(readonly) _Bool thumbnailAssetIsPlaceholder;
@property(readonly) _Bool allAssetsAreFullResolution;
- (id)bulletinByMergingWithBulletinDictionary:(id)arg1;
- (id)bulletinByMergingWithBulletin:(id)arg1;
@property(readonly) _Bool canMergeWithPersistedBulletins;
- (void)dealloc;
- (id)_initWithLikesCount:(long long)arg1 commentDate:(id)arg2 firstCommentGUID:(id)arg3 toAssetWithUUID:(id)arg4 photosBatchID:(id)arg5 mainAssetIsMine:(_Bool)arg6 mainAssetIsVideo:(_Bool)arg7 inAlbumWithTitle:(id)arg8 albumUUID:(id)arg9 albumCloudGUID:(id)arg10 assetUUIDs:(id)arg11 placeholderAssetUUIDs:(id)arg12 lowResThumbAssetUUIDs:(id)arg13 senderNames:(id)arg14 forMultipleAsset:(_Bool)arg15 allMultipleAssetIsMine:(_Bool)arg16 isMixedType:(_Bool)arg17;
- (id)_initWithCommentsCount:(long long)arg1 commentDate:(id)arg2 firstCommentGUID:(id)arg3 toAssetWithUUID:(id)arg4 photosBatchID:(id)arg5 mainAssetIsMine:(_Bool)arg6 mainAssetIsVideo:(_Bool)arg7 inAlbumWithTitle:(id)arg8 albumUUID:(id)arg9 albumCloudGUID:(id)arg10 assetUUIDs:(id)arg11 placeholderAssetUUIDs:(id)arg12 lowResThumbAssetUUIDs:(id)arg13;
- (id)initWithLikeAdded:(id)arg1;
- (id)initWithCommentAdded:(id)arg1;
- (id)_initWithPhotosAddedBulletin:(id)arg1 mergedWithBulletinDictionary:(id)arg2;
- (id)_initWithPhotosAddedBulletin:(id)arg1 mergedWithBulletin:(id)arg2;
- (id)initWithAssetAdded:(id)arg1 atIndex:(unsigned long long)arg2 toAlbum:(id)arg3;
- (id)initWithMultipleContributorEnabledForAlbum:(id)arg1;
- (id)initWithInvitationRecordStatusChanged:(id)arg1;
- (id)initWithInvitationAlbum:(id)arg1;
- (id)_initWithType:(long long)arg1;
- (id)init;

@end

@interface PLBBBulletinsManager : NSObject <PLBBPendingBulletinsBatchDelegate>
{
    NSObject<OS_dispatch_queue> *_isolationQueue;
    NSObject<OS_dispatch_source> *_saveTimerSource;
    PLXPCTransaction *_saveTimerTransaction;
    NSObject<OS_dispatch_source> *_pendingChangesTimerSource;
    PLXPCTransaction *_pendingChangesTimerTransaction;
    NSMutableDictionary *_dirtyPlist;
    NSMutableArray *_pendingBulletins;
    NSMutableArray *_pendingBatches;
    NSMutableIndexSet *_pendingDeleteRecordIDs;
    _Bool _badgeCountIsInvalid;
    _Bool _enableTemporaryDebugMode;
    void *_addressBook;
    int _alertFiltrationEnabled;
}

+ (id)sharedManager;
- (void)_resetAlertFiltration;
- (_Bool)_alertFiltrationEnabled;
- (_Bool)_shouldAllowAlertsFromContactWithEmail:(id)arg1;
- (void *)addressBook;
- (void)_saveDirtyChanges;
- (void)_setNeedsSaving;
- (id)_currentPlistContents;
- (id)_editablePlistContents;
- (id)_plistFilePath;
- (void)discardAllBulletins;
- (void)forceWriteUnsavedChanges;
- (void)getThumbnailImageDataForBulletinWithRecordID:(unsigned long long)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)calculateCurrentBadgeCountWithCompletionHandler:(CDUnknownBlockType)arg1;
- (id)bulletinsBatch:(id)arg1 bulletinByMergingPersistedListWithBulletin:(id)arg2;
- (_Bool)bulletinsBatch:(id)arg1 shouldAllowAlertsFromContactWithEmail:(id)arg2;
- (void)bulletinsBatch:(id)arg1 didProcessReadyBulletins:(id)arg2 stillPending:(_Bool)arg3;
- (id)_currentPendingBatch;
- (unsigned long long)_generateUniqueRecordID;
- (void)_processPendingChanges;
- (void)_scheduleProcessPendingChanges;
- (void)_deleteBulletinsForAssetWithUUID:(id)arg1 shouldDeleteCommentsOrLikeBulletins:(_Bool)arg2 shouldDeletePhotosAddedToAlbumBulletins:(_Bool)arg3;
- (_Bool)_bulletinType:(long long)arg1 matchesCommentsOrLikeBulletins:(_Bool)arg2 andPhotosAddedToAlbumBulletins:(_Bool)arg3;
- (void)_deleteBulletinsForAlbumWithUUID:(id)arg1 bulletinTypes:(id)arg2;
- (void)_addPendingBulletins:(id)arg1;
- (void)clearAllBulletinsUpToRecordID:(unsigned long long)arg1;
- (_Bool)_invitationBulletinExistsForAlbum:(id)arg1;
- (void)noteUserDidLeavePhotosApplication;
- (void)noteUserDidDeleteSharedAssetsWithUUIDs:(id)arg1;
- (void)noteUserDidDeleteSharedAlbumWithUUID:(id)arg1;
- (void)noteUserDidReadCommentOnSharedAsset:(id)arg1;
- (void)noteUserDidNavigateAwayFromSharedAlbum:(id)arg1;
- (void)noteUserDidNavigateIntoSharedAlbum:(id)arg1;
- (void)noteUserDidViewCloudFeedContent:(long long)arg1;
- (void)noteSharedAssetCommentsUnreadStatusDidChange:(id)arg1;
- (void)noteSharedAlbumUnseenStatusDidChange:(id)arg1;
- (void)noteDidReceiveLike:(id)arg1 mstreamdInfo:(id)arg2;
- (void)noteDidReceiveComment:(id)arg1 mstreamdInfo:(id)arg2;
- (void)noteDidChangePlaceholderKindForAsset:(id)arg1 fromOldKind:(short)arg2 forSharedAlbum:(id)arg3 mstreamdInfo:(id)arg4;
- (void)noteDidReceiveAsset:(id)arg1 atIndex:(unsigned long long)arg2 forSharedAlbum:(id)arg3 mstreamdInfo:(id)arg4;
- (void)noteMultipleContributorStatusChangedForAlbum:(id)arg1 mstreamdInfo:(id)arg2;
- (void)noteInvitationRecordStatusChanged:(id)arg1 fromOldState:(long long)arg2 mstreamdInfo:(id)arg3;
- (void)noteDidDeleteSharedAssetsWithUUIDs:(id)arg1;
- (void)noteDidDeleteSharedAlbum:(id)arg1;
- (void)noteDidReceiveInvitationForSharedAlbum:(id)arg1;
@property(readonly) NSArray *currentBulletinDictionaries;
- (void)setEnableTemporaryDebugMode:(_Bool)arg1;
- (_Bool)enableTemporaryDebugMode;
- (void)dealloc;
- (id)_initSharedInstance;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PLBBPendingBulletinsBatch : NSObject
{
    NSObject<OS_dispatch_queue> *_isolationQueue;
    NSMutableArray *_pendingBulletins;
    NSObject<OS_dispatch_source> *_coalescingTimerSource;
    PLXPCTransaction *_coalescingTimerTransaction;
    NSObject<OS_dispatch_source> *_downloadTimerSource;
    PLXPCTransaction *_downloadTimerTransaction;
    int _currentState;
    _Bool _downloadTimerExpired;
    id <PLBBPendingBulletinsBatchDelegate> _delegate;
}

@property id <PLBBPendingBulletinsBatchDelegate> delegate; // @synthesize delegate=_delegate;
- (void)_startDownloadTimer;
- (void)_cancelDownloadTimer;
- (void)_cancelCoalescingTimer;
- (void)_evaluateAndProcessPendingBulletins;
- (void)_scheduleEvaluatePendingBulletins;
- (void)noteAssetWithUUID:(id)arg1 didChangePlaceholderKindTo:(short)arg2 fromOldKind:(short)arg3;
- (void)removeBulletinsWithAlbumUUID:(id)arg1 bulletinTypes:(id)arg2;
- (void)removeBulletinsWithAssetUUID:(id)arg1 deleteCommentsOrLikesBulletin:(_Bool)arg2 deletePhotosAddedToAlbumBulletin:(_Bool)arg3;
- (_Bool)addBulletin:(id)arg1 forMergeOnly:(_Bool)arg2;
- (void)_transitionToStateForEvent:(int)arg1;
- (void)_trackCompletionPercentageForState:(int)arg1;
@property(readonly) _Bool canAcceptMergeBulletins;
@property(readonly) _Bool canAcceptNewBulletins;
- (void)dealloc;
- (id)initWithIsolationQueue:(id)arg1;

@end

@interface PLDaemonJob : NSObject
{
    NSObject<OS_xpc_object> *_xpcReply;
    PLXPCTransaction *_transaction;
    NSObject<OS_xpc_object> *_connection;
}

+ (void)runDaemonSideWithXPCEvent:(id)arg1 connection:(id)arg2;
@property(readonly, retain, nonatomic) NSObject<OS_xpc_object> *connection; // @synthesize connection=_connection;
@property(nonatomic) NSObject<OS_xpc_object> *xpcReply;
- (void)run;
- (_Bool)shouldArchiveXPCToDisk;
- (void)archiveXPCToDisk:(id)arg1;
- (void)encodeToXPCObject:(id)arg1;
- (id)initFromXPCObject:(id)arg1 connection:(id)arg2;
@property(readonly, retain, nonatomic) NSError *replyError;
@property(readonly, nonatomic) _Bool replyIsError;
@property(readonly, nonatomic) _Bool clientWantsReply;
- (void)runDaemonSide;
- (void)handleReply;
- (void)sendToAssetsdWithReply;
- (void)sendToAssetsd;
- (long long)daemonOperation;
- (void)dealloc;

@end

@interface PLBulletinsTestDaemonJob : PLDaemonJob
{
    long long _bulletinType;
    NSString *_albumUUID;
    NSArray *_addedAssetUUIDs;
    PLPhotoLibrary *_photoLibrary;
}

+ (void)notifyCommentWasReceivedForAssets:(id)arg1;
+ (void)notifyLikeWasReceivedForAssets:(id)arg1;
+ (void)notifyAssets:(id)arg1 wereAddedToAlbum:(id)arg2;
+ (void)notifyInvitationWasReceivedForAlbum:(id)arg1;
@property(retain, nonatomic) PLPhotoLibrary *photoLibrary; // @synthesize photoLibrary=_photoLibrary;
@property(retain, nonatomic) NSArray *addedAssetUUIDs; // @synthesize addedAssetUUIDs=_addedAssetUUIDs;
@property(retain, nonatomic) NSString *albumUUID; // @synthesize albumUUID=_albumUUID;
@property long long bulletinType; // @synthesize bulletinType=_bulletinType;
- (void)runDaemonSide;
- (void)run;
- (long long)daemonOperation;
- (id)initFromXPCObject:(id)arg1 connection:(id)arg2;
- (void)encodeToXPCObject:(id)arg1;
- (void)dealloc;

@end

@interface PLCloudTrigger : NSObject
{
    NSObject<OS_dispatch_queue> *_triggerQueue;
    NSMutableDictionary *_subscriptions;
    unsigned long long _type;
}

@property(readonly, nonatomic) unsigned long long type; // @synthesize type=_type;
- (void)activate;
- (void)triggerWithContextObject:(id)arg1;
@property(readonly, retain, nonatomic) NSDictionary *subscriptions;
- (void)unsubscribeWithInstance:(id)arg1;
- (void)subscribeWithInstance:(id)arg1 selector:(SEL)arg2;
- (void)dealloc;
- (id)initWithType:(unsigned long long)arg1;

@end

@interface PLCloudStatelessTrigger : PLCloudTrigger
{
}

+ (void)trigger;
- (void)activate;

@end

@interface PLCLoudSettingsChangedTrigger : PLCloudStatelessTrigger
{
}

- (id)init;

@end

@interface PLCPLStatus : NSObject <CPLStatusDelegate>
{
    id _progressSubscriber;
    NSProgress *_progress;
    CPLStatus *_cplStatus;
    double _syncProgress;
    id <PLCPLStatusDelegate> _delegate;
}

@property(retain, nonatomic, setter=_setProgress:) NSProgress *progress; // @synthesize progress=_progress;
@property(nonatomic) id <PLCPLStatusDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) double syncProgress; // @synthesize syncProgress=_syncProgress;
- (void)statusDidChange:(id)arg1;
- (void)_teardown;
- (void)_setup;
- (void)_unsubscribeFromProgress;
- (void)_subscribeToProgress;
- (void)_setSyncProgress:(double)arg1;
- (void)_updateSyncProgress;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
@property(readonly, nonatomic) _Bool isExceedingQuota;
@property(readonly, nonatomic) _Bool isSyncing;
@property(readonly, retain, nonatomic) NSDate *lastSuccessfulSyncDate;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PLCacheDeleteTrigger : PLCloudTrigger
{
    _Bool _activated;
}

- (void)activate;

@end

@interface PLCachedImage : UIImage
{
    NSDictionary *_metadata;
    int _format;
    PLLoadRequestKey *_cacheKey;
}

@property(copy, nonatomic) PLLoadRequestKey *cacheKey; // @synthesize cacheKey=_cacheKey;
@property(retain, nonatomic) NSDictionary *metadata; // @synthesize metadata=_metadata;
@property(nonatomic) int format; // @synthesize format=_format;
- (id)description;
- (void)dealloc;

@end

@interface PLCameraPreviewImageWellChangeNotification : PLChangeNotification
{
    UIImage *_image;
    NSString *_uuid;
}

+ (id)notification;
@property(readonly, retain, nonatomic) NSString *assetUUID;
@property(readonly, retain, nonatomic) UIImage *image;
- (id)description;
- (id)object;
- (id)userInfo;
- (id)name;
- (void)dealloc;
- (id)init;
- (id)_init;

@end

@interface PLChangeNode : NSObject
{
    NSObject<OS_xpc_object> *_hubConnection;
    Class _changeHubClass;
    unsigned char _nodeUUID[16];
    int _notifyToken;
    NSObject<OS_dispatch_queue> *_isolationQueue;
    unsigned long long _lastKnownChangeHubEventIndex;
}

+ (id)localChangeEventFromChangeHubEvent:(id)arg1;
+ (id)_descriptionForEvent:(id)arg1;
+ (id)sharedNode;
- (void)_processDelayedAssetsForFileSystemPersistencyFromChangeHubEvent:(id)arg1 transaction:(id)arg2;
- (void)_processDelayedAlbumCountUpdatesFromChangeHubEvent:(id)arg1 transaction:(id)arg2;
- (void)processDelayedAlbumCountUpdates:(id)arg1 transaction:(id)arg2;
- (void)_processDelayedAlbumOrderUpdatesFromChangeHubEvent:(id)arg1 transaction:(id)arg2;
- (void)processDelayedAlbumOrderUpdates:(id)arg1 transaction:(id)arg2;
- (void)_processDelayedSearchIndexUpdatesFromChangeHubEvent:(id)arg1 transaction:(id)arg2;
- (void)_processDelayedSearchIndexUpdates:(id)arg1 transaction:(id)arg2;
- (void)processDelayedAssetsForFileSystemPersistency:(id)arg1 transaction:(id)arg2;
- (void)_processDelayedDupeAnalysisFromChangeHubEvent:(id)arg1 transaction:(id)arg2;
- (void)processDelayedDupeAnalysisNormalInserts:(id)arg1 cloudInserts:(id)arg2 transaction:(id)arg3;
- (void)_processCloudFeedUpdateDataFromChangeHubEvent:(id)arg1 transaction:(id)arg2;
- (void)processDelayedCloudFeedAlbumUpdates:(id)arg1 assetInserts:(id)arg2 assetUpdates:(id)arg3 commentInserts:(id)arg4 invitationRecordUpdates:(id)arg5 deletionEntries:(id)arg6 transaction:(id)arg7;
- (void)processDelayedMomentChangesWithTransaction:(id)arg1;
- (void)_processDeletionsFromChangeHubEvent:(id)arg1 transaction:(id)arg2;
- (void)forceUserInterfaceReload;
- (_Bool)isEventOriginatingFromHere:(id)arg1;
- (void)processRemoteEvents:(id)arg1;
- (void)fetchNewEventsFromChangeHub;
- (void)handleRemoteChangeHubRequest:(id)arg1;
- (void)setupHubConnection;
- (id)sendEventToChangeHub:(id)arg1 transaction:(id)arg2;
- (void)sendChangeHubEventForDidSaveNotification:(id)arg1;
- (void)printChangeStore;
- (void)disconnectManagedObjectContext:(id)arg1;
- (void)connectManagedObjectContext:(id)arg1;
- (void)distributeRemoteChangeHubEvent:(id)arg1 withGroup:(id)arg2 transaction:(id)arg3;
- (void)distributeRemoteContextDidSaveEvent:(id)arg1 withGroup:(id)arg2 transaction:(id)arg3;
- (id)createXPCObjectFromDidSaveNotification:(id)arg1 updatedAttributesByObjectID:(id)arg2 updatedRelationshipsByObjectID:(id)arg3;
- (void)dealloc;
- (id)init;

@end

@interface PLChangeNotificationCenter : NSObject
{
    _Bool _isProcessingRemoteDidSave;
    int _cameraPreviewChangeListenerCount;
    NSNumber *_cameraPreviewChangedToken;
    NSMutableArray *_snapshots;
    struct changeList_s _changedAlbumLists;
    struct contentChanges_s _albumListsContent;
    struct changeList_s _changedAlbums;
    struct contentChanges_s _albumsContent;
    struct changeList_s _changedAssets;
    NSMutableSet *_assetsWithCloudCommentChanges;
    struct contentChanges_s _momentsContent;
    struct changeList_s _changedMoments;
    struct contentChanges_s _momentListsContent;
    struct changeList_s _changedMomentLists;
    struct changeList_s _changedCloudFeedEntries;
    PLManagedObjectContext *_moc;
    NSMutableArray *_enqueuedNotifications;
    NSMapTable *_changedInflightAssetsAlbumsToSnapshots;
    NSDictionary *_remoteNotificationData;
    _Bool _isOverloaded;
    NSMutableSet *_overloadedObjects;
}

+ (void)forceFetchingAlbumReload;
+ (void)getInsertedAssetCount:(unsigned long long *)arg1 deletedAssetCount:(unsigned long long *)arg2 updatedAssets:(id)arg3 fromContextDidChangeNotification:(id)arg4;
+ (id)allManagedObjectKeysStrategy;
+ (id)defaultCenter;
- (void)removeCameraPreviewWellImageChangeObserver:(id)arg1;
- (void)addCameraPreviewWellImageChangeObserver:(id)arg1;
- (void)_unregisterForCameraPreviewWellChanges;
- (void)_registerForCameraPreviewWellChanges;
- (void)managedObjectContext:(id)arg1 didProcessRemoteContextSave:(id)arg2 usingObjectIDs:(_Bool)arg3;
- (void)managedObjectContext:(id)arg1 willProcessRemoteContextSave:(id)arg2 usingObjectIDs:(_Bool)arg3 isCoalescedEvent:(_Bool)arg4;
- (void)managedObjectContextWasOverloaded:(id)arg1 withNotificationData:(id)arg2 usingObjectIDs:(_Bool)arg3;
- (void)managedObjectContextWillBeOverloaded:(id)arg1 withNotificationData:(id)arg2 usingObjectIDs:(_Bool)arg3;
@property(readonly, nonatomic) _Bool _shouldForceFetchingAlbumsToReload;
- (id)_takeSnapshotOfObject:(id)arg1 useCommitedValues:(_Bool)arg2;
- (id)_takeSnapshotFromCommittedValuesOfObject:(id)arg1;
- (id)_takeSnapshotOfObject:(id)arg1;
- (void)_takeSnapshotsFromContext:(id)arg1 forRemoteContextSaveNotification:(id)arg2 usingObjectIDs:(_Bool)arg3;
- (id)_snapshotForObject:(id)arg1;
- (id)descriptionOfSplitChanges;
- (id)_keysOfInterestForObject:(id)arg1;
- (_Bool)_isInterestedInUpdatesOfObject:(id)arg1;
- (void)_postEnqueuedNotifications;
- (void)_enqueueNotification:(id)arg1 object:(id)arg2 userInfoWithObjects:(const id *)arg3 forKeys:(const id *)arg4 count:(unsigned long long)arg5;
- (void)_enqueueNotification:(id)arg1 object:(id)arg2 userInfo:(id)arg3;
- (void)_enqueueAssetContainerListChangeNotification:(id)arg1;
- (void)_enqueueAlbumChangeNotification:(id)arg1;
- (void)_enqueueInvitationRecordsChangeNotification:(id)arg1;
- (void)_enqueueAssetContainerChangeNotification:(id)arg1;
- (void)_evaluateUpdatedAssets;
- (void)_evaluateContainersWithUpdatedContent;
- (void)_splitContextDidChangeNotification:(id)arg1;
- (void)_cleanupState;
- (void)_enqueueAssetChangeNotification;
- (void)_enqueueMomentListChangeNotifications;
- (void)_enqueueMomentChangeNotifications;
- (void)_enqueueCloudFeedEntriesChangeNotifications;
- (void)_enqueueCloudCommentsNotifications;
- (void)_enqueueAlbumNotifications;
- (void)_enqueueAlbumListNotifications;
- (void)_enqueuePhotoLibraryNotifications;
- (void)_sendNotificationsForSplitChanges;
- (void)postShouldReloadNotification;
- (void)enumerateIndexMappingCachesForObject:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (id)_toOneRelationshipsOfInterestForObject:(id)arg1;
- (id)_attributesOfInterestForObject:(id)arg1;
- (id)_orderedRelationshipsOfInterestForObject:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)processContextDidSaveNotification:(id)arg1;
- (void)processContextDidChangeNotification:(id)arg1;
- (void)inflightAssetsAlbumWillChange:(id)arg1;
- (void)_saveCurrentStateForAlbum:(id)arg1;
- (void)removeObserver:(id)arg1 name:(id)arg2 object:(id)arg3;
- (void)removeObserver:(id)arg1;
- (id)addObserverForName:(id)arg1 object:(id)arg2 queue:(id)arg3 usingBlock:(CDUnknownBlockType)arg4;
- (void)addObserver:(id)arg1 selector:(SEL)arg2 name:(id)arg3 object:(id)arg4;
- (void)removeShouldReloadObserver:(id)arg1;
- (void)addShouldReloadObserver:(id)arg1;
- (void)removeAssetChangeObserver:(id)arg1;
- (void)addAssetChangeObserver:(id)arg1;
- (void)removeCloudFeedEntriesObserver:(id)arg1;
- (void)addCloudFeedEntriesObserver:(id)arg1;
- (void)removeInvitationRecordsObserver:(id)arg1;
- (void)addInvitationRecordsObserver:(id)arg1;
- (void)removeCloudCommentsChangeObserver:(id)arg1 asset:(id)arg2;
- (void)addCloudCommentsChangeObserver:(id)arg1 asset:(id)arg2;
- (void)removeAssetContainerListChangeObserver:(id)arg1 containerList:(id)arg2;
- (void)addAssetContainerListChangeObserver:(id)arg1 containerList:(id)arg2;
- (void)removeAssetContainerChangeObserver:(id)arg1 container:(id)arg2;
- (void)addAssetContainerChangeObserver:(id)arg1 container:(id)arg2;
@property(readonly, retain, nonatomic) NSNotificationCenter *backingCenter;
- (void)enqueueNotification:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface PLClientServerTransaction : NSObject
{
    NSString *_transactionToken;
}

+ (id)transactionFromUserInfo:(id)arg1;
+ (void)removeTransactionFromUserInfo:(id)arg1;
+ (void)addTransaction:(id)arg1 toUserInfo:(id)arg2;
+ (id)transactionTokenFromXPCDictionary:(id)arg1;
+ (void)addTokenForTransaction:(id)arg1 toXPCDictionary:(id)arg2;
+ (void)handleOutstandingTransactions:(CDUnknownBlockType)arg1;
+ (id)_outstandingTransactionPaths;
+ (id)beginServerTransactionWithToken:(id)arg1;
+ (id)beginClientTransaction;
+ (id)_queue;
+ (id)_fileManager;
+ (id)_transactionsDirectory;
@property(copy, nonatomic) NSString *transactionToken; // @synthesize transactionToken=_transactionToken;
- (void)dealloc;
- (void)completeTransaction;
- (void)abortTransaction;
- (void)stillAlive;

@end

@interface PLCloudAppInForegroundTrigger : PLCloudStatelessTrigger
{
}

- (id)init;

@end

@interface PLCloudBackgroundTransferMonitor : NSObject
{
    NSObject<OS_dispatch_queue> *_isolationQueue;
    NSMutableDictionary *_pendingBGTransfers;
}

+ (id)identifierForResource:(id)arg1;
+ (id)sharedInstance;
- (void)onCompletedResource:(id)arg1 invokeBlock:(CDUnknownBlockType)arg2;
- (void)completeBackgroundTransferForResource:(id)arg1 withError:(id)arg2;
- (void)completeBackgroundTransferWithIdentifier:(id)arg1 withError:(id)arg2;
- (void)abandonTransfersForItemIdentifier:(id)arg1;
- (void)abandonAllBackgroundTransfers;
- (void)dealloc;
- (id)init;

@end

@interface PLCloudCommentsChangeNotification : PLContainerChangeNotification
{
    NSDictionary *_userInfo;
}

+ (id)notificationWithAsset:(id)arg1 snapshot:(id)arg2;
- (id)_contentRelationshipName;
@property(readonly, retain, nonatomic) PLManagedAsset *asset;
- (id)description;
- (id)userInfo;
- (id)name;
- (void)dealloc;

@end

@interface PLCloudScenarioProducer : NSObject
{
    NSArray *_triggers;
    id <PLCloudScenarioConsumer> _consumer;
}

@property(retain, nonatomic) id <PLCloudScenarioConsumer> consumer; // @synthesize consumer=_consumer;
@property(retain, nonatomic) NSArray *triggers; // @synthesize triggers=_triggers;
- (void)activate;
- (void)unsubscribeFromTriggerType:(unsigned long long)arg1;
- (void)subscribeToTriggerType:(unsigned long long)arg1 withSelector:(SEL)arg2;
- (void)dealloc;

@end

@interface PLCloudDownloadAgent : PLCloudScenarioProducer
{
    NSObject<OS_dispatch_queue> *_agentQueue;
    CDStruct_691a9b3b _walkStatus[4];
    PLPhotoLibrary *_localLibrary;
    PLCloudPhotoLibraryManager *_remoteLibrary;
}

@property(retain) PLCloudPhotoLibraryManager *remoteLibrary; // @synthesize remoteLibrary=_remoteLibrary;
@property(retain) PLPhotoLibrary *localLibrary; // @synthesize localLibrary=_localLibrary;
- (void)appInForeground:(id)arg1;
- (void)metadataStable:(id)arg1;
- (void)metadataChanged:(id)arg1;
- (void)systemStarted:(id)arg1;
- (void)activate;
- (void)resetWalkStatus;
- (void)prefetchResources;
- (void)prefetchLastWeeksOriginals;
- (void)prefetchLastWeeksFull;
- (void)prefetchAllThumbnails;
- (void)beginPopulatingResourcesOfType:(unsigned long long)arg1 withFetchRequest:(id)arg2 then:(CDUnknownBlockType)arg3;
- (void)_beginPopulatingResourcesOfType:(unsigned long long)arg1 withFetchRequest:(id)arg2 startingAtOffset:(unsigned long long)arg3 then:(CDUnknownBlockType)arg4;
- (void)cplResourcesForFetchRequest:(id)arg1 ofType:(unsigned long long)arg2 startingAtOffset:(unsigned long long)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)downloadResources:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
- (unsigned long long)batchSize;
- (int)typeToIndex:(unsigned long long)arg1;
- (void)dealloc;
- (id)init;

@end

@interface PLCloudOperation : NSObject
{
    PLCloudPhotoLibraryManager *_connection;
    _Bool _running;
    unsigned long long _cost;
    long long _createdAt;
    CPLResource *_resource;
    PLCloudScenario *_scenario;
}

@property _Bool running; // @synthesize running=_running;
@property(readonly, retain, nonatomic) PLCloudPhotoLibraryManager *connection; // @synthesize connection=_connection;
@property(readonly, retain, nonatomic) PLCloudScenario *scenario; // @synthesize scenario=_scenario;
@property(retain, nonatomic) CPLResource *resource; // @synthesize resource=_resource;
@property(readonly, nonatomic) long long createdAt; // @synthesize createdAt=_createdAt;
@property(readonly, nonatomic) unsigned long long cost; // @synthesize cost=_cost;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)runOperationWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)requestCancel;
- (void)dealloc;
- (id)initWithScenario:(id)arg1 cloudConnection:(id)arg2;

@end

@interface PLCloudDownloadOperation : PLCloudOperation
{
    _Bool _cancelled;
}

- (id)description;
- (void)runOperationWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)markAsLocallyAvailable:(_Bool)arg1;
- (unsigned long long)cost;
- (void)requestCancel;

@end

@interface PLCloudExecutingScenario : NSObject
{
    PLCloudScenario *_scenario;
    CDUnknownBlockType _completionCallback;
    PLCloudScenarioExecutionResult *_executionState;
}

@property(retain, nonatomic) PLCloudScenarioExecutionResult *executionState; // @synthesize executionState=_executionState;
@property(copy, nonatomic) CDUnknownBlockType completionCallback; // @synthesize completionCallback=_completionCallback;
@property(retain, nonatomic) PLCloudScenario *scenario; // @synthesize scenario=_scenario;
- (void)dealloc;

@end

@interface PLCloudFeedEntry : PLManagedObject
{
}

+ (id)entityName;
+ (id)entityInManagedObjectContext:(id)arg1;
+ (id)entryWithURIRepresentation:(id)arg1 inLibrary:(id)arg2;
+ (id)allEntriesInManagedObjectContext:(id)arg1;
+ (id)firstEntryWithType:(long long)arg1 albumGUID:(id)arg2 inLibrary:(id)arg3;
+ (id)recentAssetsEntriesInLibrary:(id)arg1 limit:(long long)arg2;
+ (id)recentEntriesInLibrary:(id)arg1 earliestDate:(id)arg2 latestDate:(id)arg3 limit:(long long)arg4;
+ (id)allEntriesInLibrary:(id)arg1;
+ (id)entriesSortDescriptorsAscending:(_Bool)arg1;
- (_Bool)shouldBeRemovedFromPhotoLibrary:(id)arg1;
@property(readonly, nonatomic) long long entryPriority;
@property(readonly, nonatomic) long long entryType;
@property(readonly, nonatomic) NSURL *URIRepresentation;

// Remaining properties
@property(retain, nonatomic) NSString *entryAlbumGUID; // @dynamic entryAlbumGUID;
@property(retain, nonatomic) NSDate *entryDate; // @dynamic entryDate;
@property(retain, nonatomic) NSString *entryInvitationRecordGUID; // @dynamic entryInvitationRecordGUID;
@property(retain, nonatomic) NSNumber *entryPriorityNumber; // @dynamic entryPriorityNumber;
@property(retain, nonatomic) NSNumber *entryTypeNumber; // @dynamic entryTypeNumber;

@end

@interface PLCloudFeedAssetsEntry : PLCloudFeedEntry
{
}

+ (id)entityName;
- (_Bool)shouldBeRemovedFromPhotoLibrary:(id)arg1;
@property(readonly, nonatomic) NSMutableOrderedSet *mutableEntryAssets;

// Remaining properties
@property(retain, nonatomic) NSOrderedSet *entryAssets; // @dynamic entryAssets;

@end

@interface PLCloudFeedCommentsEntry : PLCloudFeedEntry
{
}

+ (id)entityName;
- (_Bool)shouldBeRemovedFromPhotoLibrary:(id)arg1;
@property(readonly, nonatomic) NSMutableOrderedSet *mutableEntryComments;
@property(readonly, nonatomic) NSMutableOrderedSet *mutableEntryLikeComments;

// Remaining properties
@property(retain, nonatomic) NSString *entryCloudAssetGUID; // @dynamic entryCloudAssetGUID;
@property(retain, nonatomic) NSOrderedSet *entryComments; // @dynamic entryComments;
@property(retain, nonatomic) NSOrderedSet *entryLikeComments; // @dynamic entryLikeComments;

@end

@interface PLCloudFeedEntriesChangeNotification : PLChangeNotification
{
    _Bool _shouldReload;
    NSSet *_insertedEntries;
    NSSet *_updatedEntries;
    NSSet *_deletedEntries;
}

+ (id)notificationWithInsertedEntries:(id)arg1 updatedEntries:(id)arg2 deletedEntries:(id)arg3;
+ (id)notificationWithFullReload;
@property(copy, nonatomic) NSSet *deletedEntries; // @synthesize deletedEntries=_deletedEntries;
@property(copy, nonatomic) NSSet *updatedEntries; // @synthesize updatedEntries=_updatedEntries;
@property(copy, nonatomic) NSSet *insertedEntries; // @synthesize insertedEntries=_insertedEntries;
@property(nonatomic) _Bool shouldReload; // @synthesize shouldReload=_shouldReload;
- (id)userInfo;
- (id)object;
- (id)name;
- (void)dealloc;
- (id)_initWithInsertedEntries:(id)arg1 updatedEntries:(id)arg2 deletedEntries:(id)arg3;
- (id)_initWithFullReload;

@end

@interface PLCloudFeedEntriesManager : NSObject
{
    PLPhotoLibrary *__library;
}

+ (id)sharedManager;
@property(readonly, retain, nonatomic) PLPhotoLibrary *_library; // @synthesize _library=__library;
- (_Bool)_tryMergingComment:(id)arg1 withEntry:(id)arg2;
- (void)_mergeEntriesAroundDate:(id)arg1;
- (void)_splitEntriesAtDate:(id)arg1;
- (void)_mergeOlderEntry:(id)arg1 intoMoreRecentEntry:(id)arg2;
- (void)_addAsset:(id)arg1 toEntry:(id)arg2;
- (CDUnknownBlockType)_commentSortingComparator;
- (CDUnknownBlockType)_assetSortingComparator;
- (_Bool)_shouldMergeAsset:(id)arg1 intoEntry:(id)arg2;
- (_Bool)_shouldIgnoreInvitationRecord:(id)arg1;
- (_Bool)_shouldIgnoreComment:(id)arg1;
- (_Bool)_shouldIgnoreAsset:(id)arg1;
- (_Bool)_commentIsBatchCaption:(id)arg1;
- (_Bool)_wasCommentPublishedBeforeSubscription:(id)arg1;
- (_Bool)_wasAssetPublishedBeforeSubscription:(id)arg1;
- (id)_subscriptionDateForSharedAlbum:(id)arg1;
- (id)_dateForAsset:(id)arg1;
- (void)_noteContentDeletionAffectingCommentsEntry:(id)arg1;
- (void)_noteContentDeletionAffectingAssetsEntry:(id)arg1;
- (void)_noteDidUpdateInvitationRecord:(id)arg1;
- (void)_noteDidReceiveSharedComment:(id)arg1;
- (void)_noteDidReceiveSharedComments:(id)arg1;
- (void)_noteDidReceiveSharedAssetPublishedBeforeSubscription:(id)arg1;
- (void)_noteDidReceiveSharedAsset:(id)arg1;
- (void)_noteContentDeletionAffectingAlbumCreatedEntry:(id)arg1;
- (void)_noteContentDeletionAffectingInvitationResponseEntry:(id)arg1;
- (void)_noteContentDeletionAffectingSubscriptionEntry:(id)arg1;
- (void)_noteContentDeletionAffectingInvitationEntry:(id)arg1;
- (void)_noteDidUpdateSharedAlbum:(id)arg1;
- (void)rebuildAllEntries:(CDUnknownBlockType)arg1;
- (void)processAlbumUpdates:(id)arg1 assetInserts:(id)arg2 assetUpdates:(id)arg3 commentInserts:(id)arg4 invitationRecordUpdates:(id)arg5 deletionEntries:(id)arg6 completionHandler:(CDUnknownBlockType)arg7;
- (id)_singleEntryOfType:(long long)arg1 forInvitationRecord:(id)arg2;
- (id)_invitationDeclinedEntryForInvitationRecord:(id)arg1;
- (id)_invitationAcceptedEntryForInvitationRecord:(id)arg1;
- (id)_singleEntryOfType:(long long)arg1 forSharedAlbum:(id)arg2;
- (id)_albumCreatedEntryForSharedAlbum:(id)arg1;
- (id)_subscriptionEntryForSharedAlbum:(id)arg1;
- (id)_invitationReceivedEntryForSharedAlbum:(id)arg1;
- (void)_getEarliestDate:(id *)arg1 latestDate:(id *)arg2 forRangeOfContiguousCommentsEntriesAroundDate:(id)arg3;
- (id)_firstEntryRelativeToDate:(id)arg1 ascending:(_Bool)arg2 includeSameDate:(_Bool)arg3;
- (id)_firstEntryOnOrAfterDate:(id)arg1;
- (id)_firstEntryAfterDate:(id)arg1;
- (id)_firstEntryOnOrBeforeDate:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface PLCloudInflightTask : NSObject
{
    CDUnknownBlockType _progressBlock;
    CDUnknownBlockType _completionHandler;
}

@property(readonly) CDUnknownBlockType completionHandler;
@property(readonly) CDUnknownBlockType progressBlock;
- (void)dealloc;
- (id)initWithProgressBlock:(CDUnknownBlockType)arg1 completionHandler:(CDUnknownBlockType)arg2;

@end

@interface PLCloudMaster : PLManagedObject
{
}

+ (id)entityInManagedObjectContext:(id)arg1;
+ (id)entityName;
+ (id)allCloudMastersInManagedObjectContext:(id)arg1;
+ (id)cloudMastersWithGUIDs:(id)arg1 inManagedObjectContext:(id)arg2;
+ (id)cloudMasterWithGUID:(id)arg1 inManagedObjectContext:(id)arg2;
+ (id)insertIntoPhotoLibrary:(id)arg1 withCloudMasterGUID:(id)arg2;
- (id)description;
- (id)cloudResourceForResourceType:(unsigned long long)arg1;
- (void)awakeFromInsert;
- (id)cplResourceForResourceType:(unsigned long long)arg1;

// Remaining properties
@property(retain, nonatomic) NSSet *assetAttributes; // @dynamic assetAttributes;
@property(nonatomic) short cloudLocalState; // @dynamic cloudLocalState;
@property(retain, nonatomic) NSString *cloudMasterGUID; // @dynamic cloudMasterGUID;
@property(nonatomic) short cloudServerState; // @dynamic cloudServerState;
@property(retain, nonatomic) NSDate *creationDate; // @dynamic creationDate;
@property(retain, nonatomic) NSString *filename; // @dynamic filename;
@property(nonatomic) short fullSizeJPEGSource; // @dynamic fullSizeJPEGSource;
@property(retain, nonatomic) NSDate *importDate; // @dynamic importDate;
@property(retain, nonatomic) NSManagedObject *mediaMetadata; // @dynamic mediaMetadata;
@property(retain, nonatomic) NSString *mediaMetadataType; // @dynamic mediaMetadataType;
@property(retain, nonatomic) NSSet *resources; // @dynamic resources;
@property(retain, nonatomic) NSString *uniformTypeIdentifier; // @dynamic uniformTypeIdentifier;

@end

@interface PLCloudMasterMediaMetadata : PLManagedObject
{
}


// Remaining properties
@property(retain, nonatomic) PLCloudMaster *cloudMaster; // @dynamic cloudMaster;
@property(retain, nonatomic) NSData *data; // @dynamic data;
@end

@interface PLCloudMetadataChangedTrigger : PLCloudStatelessTrigger
{
}

- (id)init;

@end

@interface PLCloudMetadataStableTrigger : PLCloudStatelessTrigger
{
}

- (id)init;

@end

@interface PLCloudPendingResourceTask : NSObject
{
    CPLResourceTransferTask *_transferTask;
    NSMutableDictionary *_pendingTasks;
    NSDate *_lastUpdated;
    _Bool _completed;
}

- (id)lastUpdated;
- (id)taskIDs;
- (void)cancelAllTask;
- (void)cancelTaskWithIdentifier:(id)arg1;
- (void)reportCompletionWithError:(id)arg1;
- (void)reportProgress:(float)arg1;
- (id)addProgressBlock:(CDUnknownBlockType)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)keepAlive;
- (void)dealloc;
- (void)setTransferTask:(id)arg1;
- (id)initWithProgressBlock:(CDUnknownBlockType)arg1 completionHandler:(CDUnknownBlockType)arg2 forTaskIdentifier:(id)arg3;

@end

@interface PLCloudPhotoLibraryBatchContainer : NSObject
{
    _Bool _wasSplit;
    _Bool _reachedMinSplit;
    CPLChangeBatch *_batch;
    unsigned long long _retryCount;
}

@property(nonatomic) _Bool reachedMinSplit; // @synthesize reachedMinSplit=_reachedMinSplit;
@property(nonatomic) _Bool wasSplit; // @synthesize wasSplit=_wasSplit;
@property(nonatomic) unsigned long long retryCount; // @synthesize retryCount=_retryCount;
@property(retain, nonatomic) CPLChangeBatch *batch; // @synthesize batch=_batch;
- (id)batchesSplitForError;
- (id)lastAddedRecord;
- (void)incrementRetryCount;
- (void)addRecord:(id)arg1;
- (unsigned long long)count;
- (void)dealloc;
- (id)init;

@end

@interface PLCloudPhotoLibraryBatchManager : NSObject
{
    NSMutableArray *_batches;
    PLCloudPhotoLibraryBatchContainer *_currentBatch;
    _Bool _wasDrained;
    NSMutableSet *_masterHistory;
    unsigned long long _resourceBudget;
}

- (_Bool)isAboveMaximumResourceBudget;
- (long long)currentBatchCount;
- (id)drainBatches;
- (void)reset;
- (void)addRecord:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface PLCloudPhotoLibraryError : NSObject
{
}

+ (id)createErrorWithType:(long long)arg1 withDebugMessage:(id)arg2;
+ (id)createErrorWithType:(long long)arg1;
+ (id)userMessageForErrorType:(long long)arg1;

@end

@interface PLCloudPhotoLibraryManager : NSObject <CPLResourceProgressDelegate, CPLLibraryManagerDelegate, PLForegroundObserver>
{
    NSMutableArray *_uploadBatchArray;
    unsigned long long _lastKnownChangeHubEventIndex;
    NSString *_lastKnownStoreUUID;
    _Bool _wasRebuild;
    int _notifyToken;
    NSObject<OS_dispatch_queue> *_isolationQueue;
    NSObject<OS_xpc_object> *_hubConnection;
    unsigned char _nodeUUID[16];
    NSMutableArray *_cameraAsset;
    _Bool _processingChange;
    unsigned long long _mode;
    _Bool _pushOnIdle;
    _Bool _pullOnIdle;
    _Bool _modeChangePending;
    _Bool _closeLibrary;
    _Bool _initialUpload;
    unsigned long long _uploadCounterCheck;
    unsigned long long _downloadCounterCheck;
    NSMutableArray *_downloadedDeleteUuid;
    PLPhotoLibrary *_photoLibrary;
    CPLLibraryManager *_cplLibrary;
    _Bool _stopping;
    _Bool _stopped;
    _Bool _needToResume;
    _Bool _needSoftReset;
    _Bool _pausing;
    unsigned long long _defaultResourceDownloadType;
    PLCloudTaskManager *_taskManager;
    NSObject<OS_dispatch_source> *_unpauseDispatchTimer;
}

+ (id)descriptionForResourceType:(unsigned long long)arg1;
- (id)getCPLState;
- (void)foregroundMonitor:(id)arg1 changedStateToForeground:(_Bool)arg2 context:(id)arg3;
- (void)sizeOfResourcesToUploadDidChangeForLibraryManager:(id)arg1;
- (void)libraryManager:(id)arg1 uploadDidFinishForResourceTransferTask:(id)arg2 withError:(id)arg3;
- (void)libraryManager:(id)arg1 uploadDidStartForResourceTransferTask:(id)arg2;
- (void)libraryManager:(id)arg1 backgroundDownloadDidFailForResource:(id)arg2;
- (void)libraryManager:(id)arg1 backgroundDownloadDidFinishForResource:(id)arg2;
- (void)_recoverFromPauseUnderDiskPressureIfNeeded;
- (void)_updateAsset:(id)arg1 withImageFileURL:(id)arg2;
- (void)_updateThumbnailDataForAsset:(id)arg1 withImageFileURL:(id)arg2;
- (short)_placeHolderKindFromCPLResourceType:(unsigned long long)arg1;
- (void)_addAlternateOriginalResource:(id)arg1 forAsset:(id)arg2;
- (void)_updateWithCPLResource:(id)arg1;
- (void)takeStatisticsSnapshotSinceDate:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)_copyTemporaryAssetToFinalPhotoLocationWithResourceIdentity:(id)arg1 withExtension:(id)arg2 withName:(id)arg3;
- (void)_linkFileFrom:(id)arg1 to:(id)arg2;
- (void)libraryManager:(id)arg1 downloadDidFinishForResourceTransferTask:(id)arg2 withError:(id)arg3;
- (void)libraryManager:(id)arg1 downloadDidStartForResourceTransferTask:(id)arg2;
- (void)libraryManager:(id)arg1 downloadDidProgress:(float)arg2 forResourceTransferTask:(id)arg3;
- (void)libraryManagerHasChangesToPull:(id)arg1;
- (void)libraryManagerDidStartSynchronization:(id)arg1;
- (void)libraryManagerStatusDidChange:(id)arg1;
- (void)deleteCPLPlist;
- (void)saveStoreUUID:(id)arg1;
- (void)saveCPLPlistVersion:(id)arg1 forVersionKey:(id)arg2;
- (id)readCPLPlist;
- (void)processDownloadBatchWithSession:(id)arg1;
- (void)_handleRelationRecords:(id)arg1 inLibrary:(id)arg2;
- (void)_handleExpungedRecords:(id)arg1 inLibrary:(id)arg2;
- (void)_handleDeleteRecords:(id)arg1 inLibrary:(id)arg2;
- (void)_handleAssetRecords:(id)arg1 andMasterRecords:(id)arg2 inLibrary:(id)arg3;
- (void)_handleAlbumRecords:(id)arg1 inLibrary:(id)arg2;
- (void)downloadFromCloud;
- (_Bool)needResetSyncErrorType:(id)arg1;
- (id)lastKnownCloudVersionFromDisk;
- (void)_cleanUploadedResources:(id)arg1;
- (void)_processUploadBatchWithStartupFailureCount:(unsigned long long)arg1;
- (void)processUploadBatch;
- (void)prepareEventForUploadProcess:(id)arg1;
- (unsigned long long)diskSpaceLevel;
- (id)createBatchesForChanges:(id)arg1 withContainerChangeForAsset:(_Bool)arg2;
- (_Bool)asset:(id)arg1 isInOrderList:(id)arg2;
- (_Bool)asset:(id)arg1 isIn:(id)arg2;
- (void)sortData:(id)arg1 withMode:(int)arg2 forAssets:(id *)arg3 adjustedAssets:(id *)arg4 andAlbums:(id *)arg5 andOrders:(id *)arg6 inManagedObjectContext:(id)arg7;
- (void)sortRelationshipData:(id)arg1 forRelationshipUpdate:(id *)arg2 inManagedObjectContext:(id)arg3;
- (_Bool)shouldProcessDuringInitialUpload:(id)arg1;
- (id)filterCloudDeleteForKey:(const char *)arg1 fromEvent:(id)arg2;
- (void)uploadToCloudForEvents:(id)arg1;
- (void)_incrementUploadAttemptsAndPushStateForAssets:(id)arg1;
- (void)uploadFullPhotoLibraryToCloud;
- (void)sendAssets:(id)arg1 toBatchManager:(id)arg2;
- (void)sendAlbums:(id)arg1 toBatchManager:(id)arg2;
- (_Bool)createPathIfNeeded:(id)arg1;
- (void)fetchNewEventsFromChangeHub;
- (void)dumpStatusIncludingDaemon:(_Bool)arg1;
- (void)addLogMark:(id)arg1;
- (void)doSoftResetSync;
- (void)_doResetSync:(_Bool)arg1;
- (void)deleteResourcesIfSafe:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)downloadAsset:(id)arg1 resourceType:(unsigned long long)arg2 highPriority:(_Bool)arg3 clientBundleID:(id)arg4 taskDidBeginHandler:(CDUnknownBlockType)arg5 progressBlock:(CDUnknownBlockType)arg6 completionHandler:(CDUnknownBlockType)arg7;
- (void)downloadResource:(id)arg1 highPriority:(_Bool)arg2 clientBundleID:(id)arg3 taskDidBeginHandler:(CDUnknownBlockType)arg4 progressBlock:(CDUnknownBlockType)arg5 completionHandler:(CDUnknownBlockType)arg6;
- (void)fetchPublicURLForAsset:(id)arg1 resourceType:(unsigned long long)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (_Bool)isResourceTransferTaskAliveWithTaskWithIdentifier:(id)arg1;
- (void)cancelResourceTransferTaskWithIdentifier:(id)arg1;
- (void)sync;
- (void)setupHubConnection;
- (void)unregisterToChangeHubNotification;
- (unsigned int)registerToChangeHubNotification;
- (void)_processNextTransaction;
- (_Bool)_setupTimerForUnpause;
- (void)_stopUnpauseTimer;
- (void)transitionToState:(unsigned long long)arg1;
- (_Bool)_canExternallyTransitionToNewLibraryModeIgnoringPause:(_Bool)arg1;
- (void)_runOnIsolationQueueAfterDelayInSeconds:(unsigned long long)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)_runBlockOnIsolationQueue:(CDUnknownBlockType)arg1;
- (void)resume;
- (void)stopAll;
- (void)stop;
- (void)pause;
- (void)unpause;
- (void)resetFlags;
- (void)dealloc;
- (void)_deactivateCPLLibrary;
- (void)notifyCPLLibraryOnReset;
- (void)_cleanupCPLLibrary;
- (void)_resetCPLLibrary;
- (void)closeCPLLibrary;
- (void)deactivateCPLLibrary;
- (void)openCPLLibrary;
- (void)deleteExpiredTrashBinObjects;
- (id)init;
- (void)updateLastKnownIndexFromChangeHub;
- (id)_debugNameForMode:(unsigned long long)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PLCloudPruneAgent : PLCloudScenarioProducer
{
    long long _lastPruneRequest;
    NSObject<OS_dispatch_queue> *_agentQueue;
    CDStruct_691a9b3b _walkStatus[5];
    PLPhotoLibrary *_localLibrary;
    PLCloudPhotoLibraryManager *_remoteLibrary;
}

@property(retain) PLCloudPhotoLibraryManager *remoteLibrary; // @synthesize remoteLibrary=_remoteLibrary;
@property(retain) PLPhotoLibrary *localLibrary; // @synthesize localLibrary=_localLibrary;
- (void)settingsChanged:(id)arg1;
- (void)standardPruningKick:(id)arg1;
- (void)appInForeground:(id)arg1;
- (void)systemStarted:(id)arg1;
- (void)activate;
- (void)resetWalkStatus;
- (void)emergencyPrune;
- (void)pruneResources;
- (void)pruneOlderMediums;
- (void)pruneOlderOriginals;
- (void)pruneResources:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
- (void)pruneResourcesOfType:(unsigned long long)arg1 then:(CDUnknownBlockType)arg2;
- (void)pruneResourcesOfType:(unsigned long long)arg1 createdBeforeDate:(id)arg2 then:(CDUnknownBlockType)arg3;
- (void)beginPruningResourcesOfType:(unsigned long long)arg1 withFetchRequest:(id)arg2 then:(CDUnknownBlockType)arg3;
- (void)_beginPruningResourcesOfType:(unsigned long long)arg1 withFetchRequest:(id)arg2 startingAtOffset:(unsigned long long)arg3 then:(CDUnknownBlockType)arg4;
- (void)cplResourcesForFetchRequest:(id)arg1 ofType:(unsigned long long)arg2 startingAtOffset:(unsigned long long)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (_Bool)pruningEnabled;
- (_Bool)spaceAvailable:(long long *)arg1 totalSpace:(long long *)arg2;
- (unsigned long long)batchSize;
- (int)typeToIndex:(unsigned long long)arg1;
- (void)dealloc;
- (id)init;

@end

@interface PLCloudPruneOperation : PLCloudOperation
{
    _Bool _cancelled;
}

- (void)runOperationWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)markAsLocallyAvailable:(_Bool)arg1;
- (void)_resetCloudPlaceholderKindForAsset:(id)arg1;
- (_Bool)canPruneResource;
- (id)_cloudResourceForCPLResource:(id)arg1 inPhotoLibrary:(id)arg2 outAssetsAffected:(id)arg3;
- (_Bool)keepOriginalsEnabled;
- (unsigned long long)cost;
- (void)requestCancel;

@end

@interface PLCloudResource : PLManagedObject
{
}

+ (id)entityInManagedObjectContext:(id)arg1;
+ (id)entityName;
+ (void)markResource:(id)arg1 asLocallyAvailable:(_Bool)arg2 inPhotoLibrary:(id)arg3;
+ (id)allCloudResourcesInManagedObjectContext:(id)arg1;
+ (id)insertIntoPhotoLibrary:(id)arg1 forAsset:(id)arg2 withCPLResource:(id)arg3;
- (id)cplResourceWithItemIdentifier:(id)arg1 includeFile:(_Bool)arg2;
- (void)applyPropertiesFromCloudResource:(id)arg1 forAsset:(id)arg2;
- (id)description;
- (id)localPathForAsset:(id)arg1;

// Remaining properties
@property(retain, nonatomic) PLAdditionalAssetAttributes *assetAttributes; // @dynamic assetAttributes;
@property(retain, nonatomic) PLCloudMaster *cloudMaster; // @dynamic cloudMaster;
@property(retain, nonatomic) NSString *filePath; // @dynamic filePath;
@property(nonatomic) long long fileSize; // @dynamic fileSize;
@property(retain, nonatomic) NSString *fingerprint; // @dynamic fingerprint;
@property(nonatomic) int height; // @dynamic height;
@property(nonatomic) _Bool isAvailable; // @dynamic isAvailable;
@property(nonatomic) _Bool isFlattened; // @dynamic isFlattened;
@property(nonatomic) _Bool isLocallyAvailable; // @dynamic isLocallyAvailable;
@property(retain, nonatomic) NSDate *lastOnDemandDownloadDate; // @dynamic lastOnDemandDownloadDate;
@property(retain, nonatomic) NSDate *prunedAt; // @dynamic prunedAt;
@property(nonatomic) int type; // @dynamic type;
@property(retain, nonatomic) NSString *uniformTypeIdentifier; // @dynamic uniformTypeIdentifier;
@property(nonatomic) int width; // @dynamic width;

@end

@interface PLCloudScenario : NSObject
{
    NSArray *_operations;
    NSProgress *_progress;
    unsigned long long _priority;
}

@property(nonatomic) unsigned long long priority; // @synthesize priority=_priority;
@property(retain, nonatomic) NSProgress *progress; // @synthesize progress=_progress;
@property(retain, nonatomic) NSArray *operations; // @synthesize operations=_operations;
- (void)requestCancel;
- (void)dealloc;

@end

@interface PLCloudScenarioExecutionResult : NSObject
{
    _Bool _duplicateScenario;
    NSMutableArray *_failedOperations;
    NSMutableArray *_successfullOperations;
}

@property(retain, nonatomic) NSMutableArray *successfullOperations; // @synthesize successfullOperations=_successfullOperations;
@property(retain, nonatomic) NSMutableArray *failedOperations; // @synthesize failedOperations=_failedOperations;
@property(nonatomic) _Bool duplicateScenario; // @synthesize duplicateScenario=_duplicateScenario;
- (void)dealloc;
- (id)init;

@end

@interface PLCloudScheduler : NSObject <PLCloudScenarioConsumer>
{
    NSObject<OS_dispatch_queue> *_backlogSync;
    NSObject<OS_dispatch_queue> *_operationsQueue;
    int _concurrencyLevel;
    NSMutableOrderedSet *_pendingOperations;
    NSMutableDictionary *_pendingScenarios;
}

- (void)consumeScenario:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
- (void)runNextOperation;
- (void)completeOperation:(id)arg1 withError:(id)arg2;
- (void)reporioritizeBacklogOperations;
- (unsigned long long)operationsBacklogLimit;
- (void)dealloc;
- (id)initWithConfiguration:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PLCloudSchedulerConfiguration : NSObject
{
    NSArray *_triggers;
    NSArray *_scenarioProducers;
    unsigned long long _concurrencyLevel;
}

@property(nonatomic) unsigned long long concurrencyLevel; // @synthesize concurrencyLevel=_concurrencyLevel;
@property(retain, nonatomic) NSArray *scenarioProducers; // @synthesize scenarioProducers=_scenarioProducers;
@property(retain, nonatomic) NSArray *triggers; // @synthesize triggers=_triggers;

@end

@interface _PLGenericAlbum : PLManagedObject
{
}

+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (id)entityInManagedObjectContext:(id)arg1;
+ (id)entityName;
+ (id)insertInManagedObjectContext:(id)arg1;

// Remaining properties
@property(retain, nonatomic) NSMutableSet *albumLists; // @dynamic albumLists;
@property(nonatomic) long long albumToFolderOrderKey; // @dynamic albumToFolderOrderKey;
@property(nonatomic) int cachedCount; // @dynamic cachedCount;
@property(nonatomic) int cachedPhotosCount; // @dynamic cachedPhotosCount;
@property(nonatomic) int cachedVideosCount; // @dynamic cachedVideosCount;
@property(retain, nonatomic) PLManagedAsset *customKeyAsset; // @dynamic customKeyAsset;
@property(nonatomic) _Bool customSortAscending; // @dynamic customSortAscending;
@property(nonatomic) int customSortKey; // @dynamic customSortKey;
@property(retain, nonatomic) PLManagedAsset *keyAsset; // @dynamic keyAsset;
@property(retain, nonatomic) NSNumber *kind; // @dynamic kind;
@property(retain, nonatomic) PLManagedFolder *parentFolder; // @dynamic parentFolder;
@property(nonatomic) int pendingItemsCount; // @dynamic pendingItemsCount;
@property(nonatomic) int pendingItemsType; // @dynamic pendingItemsType;
@property(retain, nonatomic) PLManagedAsset *secondaryKeyAsset; // @dynamic secondaryKeyAsset;
@property(retain, nonatomic) NSDictionary *slideshowSettings; // @dynamic slideshowSettings;
@property(retain, nonatomic) PLManagedAsset *tertiaryKeyAsset; // @dynamic tertiaryKeyAsset;
@property(retain, nonatomic) NSString *title; // @dynamic title;
@property(retain, nonatomic) NSString *uuid; // @dynamic uuid;

@end

@interface PLGenericAlbum : _PLGenericAlbum <PLAlbumProtocol, PLDerivedAlbumOrigin, PLIndexMappersDataOrigin, PLOrderKeyObject>
{
    _Bool _isSpecial;
    NSObject<PLIndexMappingCache> *_derivededAlbums[5];
    _Bool isRegisteredForChanges;
    _Bool didRegisteredWithUserInterfaceContext;
}

+ (void)addSingletonObjectsToContext:(id)arg1;
+ (id)albumsMatchingPredicate:(id)arg1 inManagedObjectContext:(id)arg2;
+ (id)albumWithKind:(int)arg1 inManagedObjectContext:(id)arg2;
+ (id)insertAlbumWithKind:(int)arg1 title:(id)arg2 uuid:(id)arg3 inManagedObjectContext:(id)arg4;
+ (id)eventsWithName:(id)arg1 andImportSessionIdentifier:(id)arg2 inManagedObjectContext:(id)arg3;
+ (id)albumsWithCloudGUIDs:(id)arg1 inManagedObjectContext:(id)arg2;
+ (id)albumsWithCloudGUID:(id)arg1 inManagedObjectContext:(id)arg2;
+ (id)albumsWithUUID:(id)arg1 inManagedObjectContext:(id)arg2;
+ (id)albumsWithKind:(int)arg1 inManagedObjectContext:(id)arg2;
+ (id)allAlbumsRegisteredWithManagedObjectContext:(id)arg1;
+ (id)allSyncedAlbumsInManagedObjectContext:(id)arg1;
+ (id)allAlbumsInManagedObjectContext:(id)arg1;
+ (struct NSObject *)albumFromGroupURL:(id)arg1 photoLibrary:(id)arg2;
+ (id)insertNewSyncedFolderWithTitle:(id)arg1 intoLibrary:(id)arg2;
+ (id)insertNewFolderWithTitle:(id)arg1 intoLibrary:(id)arg2;
+ (id)insertNewFaceAlbumIntoLibrary:(id)arg1;
+ (id)insertNewCloudSharedAlbumWithTitle:(id)arg1 lastInterestingDate:(id)arg2 intoLibrary:(id)arg3;
+ (id)insertNewSyncedEventIntoLibrary:(id)arg1;
+ (id)insertNewSyncedEventWithTitle:(id)arg1 intoLibrary:(id)arg2;
+ (id)insertNewAlbumIntoLibrary:(id)arg1;
+ (id)insertNewAlbumWithTitle:(id)arg1 intoLibrary:(id)arg2;
+ (id)insertNewAlbumWithKind:(int)arg1 title:(id)arg2 intoLibrary:(id)arg3;
+ (id)_insertNewAlbumWithKind:(int)arg1 title:(id)arg2 lastInterestingDate:(id)arg3 intoLibrary:(id)arg4;
+ (id)albumsMatchingPredicate:(id)arg1 inLibrary:(id)arg2;
+ (id)cloudAlbumsInLibrary:(id)arg1;
+ (id)albumsToResetInLibrary:(id)arg1;
+ (id)albumsToUploadInitiallyInLibrary:(id)arg1 limit:(unsigned long long)arg2;
+ (id)includeUnpushedParentsForAlbums:(id)arg1 limit:(unsigned long long)arg2;
+ (id)_unpushedParentsOfAlbums:(id)arg1;
+ (id)albumsForStreamID:(id)arg1 inLibrary:(id)arg2;
+ (id)albumWithName:(id)arg1 inLibrary:(id)arg2;
+ (id)albumWithObjectID:(id)arg1 inLibrary:(id)arg2;
+ (id)albumWithCloudGUID:(id)arg1 inLibrary:(id)arg2;
+ (id)albumWithUUID:(id)arg1 inLibrary:(id)arg2;
+ (id)allAlbumsInLibrary:(id)arg1;
+ (id)filesystemImportProgressAlbumInLibrary:(id)arg1;
+ (id)otaRestoreProgressAlbumInLibrary:(id)arg1;
+ (id)syncProgressAlbumInLibrary:(id)arg1;
+ (id)trashBinAlbumInLibrary:(id)arg1;
+ (id)iTunesLibraryAlbumInLibrary:(id)arg1;
+ (id)wallpaperAlbumInLibrary:(id)arg1;
+ (id)allPhotoStreamAssetsAlbumInLibrary:(id)arg1;
+ (id)allNonPhotoStreamAssetsAlbumInLibrary:(id)arg1;
+ (id)allFavoritesAlbumInLibrary:(id)arg1;
+ (id)allVideosAlbumInLibrary:(id)arg1;
+ (id)allHorizontalPanoramasAlbumInLibrary:(id)arg1;
+ (id)allVerticalPanoramasAlbumInLibrary:(id)arg1;
+ (id)allPanoramasAlbumInLibrary:(id)arg1;
+ (id)allAssetsAlbumInLibrary:(id)arg1;
+ (id)recentlyAddedAlbumInLibrary:(id)arg1;
+ (id)cameraRollAlbumInLibrary:(id)arg1;
+ (id)rootFolderInLibrary:(id)arg1;
+ (id)_singletonManagedAlbumWithKind:(int)arg1 library:(id)arg2;
+ (id)_singletonFetchingAlbumWithKind:(int)arg1 library:(id)arg2;
+ (id)uuidFromGroupURL:(id)arg1;
+ (_Bool)isFolder:(int)arg1;
+ (id)keyPathsForValuesAffectingKindValue;
+ (id)localizedTitleForAlbumKind:(int)arg1;
+ (id)keyPathsForValuesAffectingName;
@property(nonatomic) _Bool didRegisteredWithUserInterfaceContext; // @synthesize didRegisteredWithUserInterfaceContext;
@property(nonatomic) _Bool isRegisteredForChanges; // @synthesize isRegisteredForChanges;
- (void)enumerateDerivedIndexMappers:(CDUnknownBlockType)arg1;
- (_Bool)hasDerivedIndexMappers;
- (void)enumerateDerivedAlbums:(CDUnknownBlockType)arg1;
- (void)unregisterAllDerivedAlbums;
- (void)registerDerivedAlbum:(struct NSObject *)arg1;
@property(readonly, copy) NSString *description;
- (id)_prettyDescription;
- (id)_compactDebugDescription;
- (id)_kindDescription;
- (void)updateAlbumFolderRelation:(id)arg1 inLibrary:(id)arg2;
- (unsigned long long)countForAssetsOfKind:(short)arg1;
- (void)unregisterForChanges;
- (void)registerForChanges;
- (void)reducePendingItemsCountBy:(unsigned long long)arg1;
- (void)batchFetchAssets:(id)arg1;
- (id)assetsByObjectIDAtIndexes:(id)arg1;
@property(readonly, copy, nonatomic) CDUnknownBlockType sortingComparator;
@property(readonly, retain, nonatomic) NSURL *groupURL;
@property(readonly, nonatomic) _Bool shouldDeleteWhenEmpty;
- (_Bool)canPerformEditOperation:(unsigned long long)arg1;
@property(readonly, copy, nonatomic) NSArray *localizedLocationNames;
@property(readonly, nonatomic) _Bool canShowAvalancheStacks;
@property(readonly, nonatomic) _Bool canShowComments;
@property(readonly, nonatomic) _Bool canContributeToCloudSharedAlbum;
@property(readonly, nonatomic) _Bool isMultipleContributorCloudSharedAlbum;
@property(readonly, nonatomic) _Bool isFamilyCloudSharedAlbum;
@property(readonly, nonatomic) _Bool isOwnedCloudSharedAlbum;
@property(readonly, nonatomic) _Bool isRootFolder;
@property(readonly, nonatomic) _Bool isFolder;
@property(readonly, nonatomic) _Bool isStandInAlbum;
@property(readonly, nonatomic) _Bool isPendingPhotoStreamAlbum;
@property(readonly, nonatomic) _Bool isRecentlyAddedAlbum;
@property(readonly, nonatomic) _Bool isCloudSharedAlbum;
@property(readonly, nonatomic) _Bool isPhotoStreamAlbum;
@property(readonly, nonatomic) _Bool isOwnPhotoStreamAlbum;
@property(readonly, nonatomic) _Bool isSmartAlbum;
@property(readonly, nonatomic) _Bool isWallpaperAlbum;
@property(readonly, nonatomic) _Bool isPanoramasAlbum;
@property(readonly, nonatomic) _Bool isCameraAlbum;
@property(readonly, nonatomic) _Bool isLibrary;
@property(nonatomic) int kindValue;
@property(readonly, retain, nonatomic) UIImage *posterImage;
@property(readonly, copy, nonatomic) NSString *name;
@property(readonly, copy, nonatomic) NSString *localizedTitle;
@property(nonatomic) _Bool hasUnseenContentBoolValue;
@property(readonly, nonatomic) unsigned long long videosCount;
@property(readonly, nonatomic) unsigned long long photosCount;
@property(readonly, nonatomic) _Bool isEmpty;
- (unsigned long long)count;
@property(readonly, nonatomic) unsigned long long assetsCount;
@property(readonly, nonatomic) unsigned long long approximateCount;
- (void)willTurnIntoFault;
- (void)awakeFromFetch;
- (void)awakeFromInsert;
@property(readonly, retain, nonatomic) PLPhotoLibrary *photoLibrary;
- (void)applyTrashedState:(short)arg1;
- (void)_applyTrashedState:(short)arg1 date:(_Bool)arg2:(id)arg3;
@property(readonly, nonatomic) _Bool isInTrash;
- (_Bool)canMoveToTrash;
- (void)delete;
- (id)childKeyForOrdering;
- (id)newOrderKeyChild:(id)arg1;
- (id)sortedOrderKeysForChildrenUsingMap:(id)arg1;
- (id)childToOrderKeyMap;
- (void)didSave;
- (id)childManagedObject;
- (id)secondaryOrderSortKey;
- (void)setIsSpecial:(_Bool)arg1;
- (_Bool)isSpecial;
- (void)setOrderValue:(long long)arg1;
- (long long)orderValue;
@property(retain, nonatomic) NSDictionary *slideshowSettings;
- (void)setKind:(id)arg1;
@property(readonly, retain, nonatomic) NSNumber *kind;
@property(retain, nonatomic) NSString *title;
@property(nonatomic, getter=isPinned, setter=setPinned:) _Bool pinned;
@property(retain, nonatomic) NSString *cloudGUID; // @dynamic cloudGUID;
@property(retain, nonatomic) NSString *uuid;
- (void)dealloc;
- (void)applyPropertiesFromAlbumChange:(id)arg1;
- (id)cplAlbumChange;
- (id)_itemIdentifier;

// Remaining properties
@property(readonly, retain, nonatomic) NSOrderedSet *assets; // @dynamic assets;
@property(nonatomic) short cloudLocalState; // @dynamic cloudLocalState;
@property(nonatomic) short cloudServerState; // @dynamic cloudServerState;
@property(readonly, copy) NSString *debugDescription;
@property(retain, nonatomic) NSDate *endDate; // @dynamic endDate;
@property(readonly) unsigned long long hash;
@property(retain, nonatomic) NSString *importSessionID; // @dynamic importSessionID;
@property(retain, nonatomic) PLManagedAsset *keyAsset; // @dynamic keyAsset;
@property(readonly, retain, nonatomic) NSMutableOrderedSet *mutableAssets; // @dynamic mutableAssets;
@property(nonatomic) int pendingItemsCount; // @dynamic pendingItemsCount;
@property(nonatomic) int pendingItemsType; // @dynamic pendingItemsType;
@property(retain, nonatomic) PLManagedAsset *secondaryKeyAsset; // @dynamic secondaryKeyAsset;
@property(retain, nonatomic) NSDate *startDate; // @dynamic startDate;
@property(readonly) Class superclass;
@property(retain, nonatomic) PLManagedAsset *tertiaryKeyAsset; // @dynamic tertiaryKeyAsset;
@property(retain, nonatomic) NSDate *trashedDate; // @dynamic trashedDate;
@property(nonatomic) short trashedState; // @dynamic trashedState;

@end

@interface _PLManagedAlbum : PLGenericAlbum
{
}

+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (id)entityInManagedObjectContext:(id)arg1;
+ (id)entityName;
+ (id)insertInManagedObjectContext:(id)arg1;

@end

@interface PLManagedAlbum : _PLManagedAlbum <PLUserEditableAlbumProtocol>
{
    _Bool _resolvingConflicts;
    _Bool _albumShouldBeAutomaticallyDeleted;
    _Bool _needsPersistenceUpdate;
}

+ (void)clearAssetOrderByAbumUUIDs;
+ (id)assetOrderByAbumUUIDs;
+ (id)pathToAssetAlbumOrderStructure;
+ (id)keyPathsForValuesAffectingVideosCount;
+ (id)keyPathsForValuesAffectingPhotosCount;
+ (id)keyPathsForValuesAffectingApproximateCount;
+ (id)baseSearchIndexPredicate;
@property(nonatomic) _Bool needsPersistenceUpdate; // @synthesize needsPersistenceUpdate=_needsPersistenceUpdate;
@property(nonatomic) _Bool albumShouldBeAutomaticallyDeleted; // @synthesize albumShouldBeAutomaticallyDeleted=_albumShouldBeAutomaticallyDeleted;
@property(nonatomic) _Bool resolvingConflicts; // @synthesize resolvingConflicts=_resolvingConflicts;
- (void)refreshAssets;
- (id)filteredIndexesForPredicate:(id)arg1;
- (void)addAssetUsingiTunesAlbumOrder:(id)arg1;
- (void)sortAssetsUsingiTunesAlbumOrder;
- (id)_assetOrderByAssetUUID;
- (id)_orderComparisonValueForAsset:(id)arg1 iTunesLookupOrder:(id)arg2;
- (void)removePersistedFileSystemData;
- (void)persistMetadataToFileSystem;
- (void)_recalculateCachedCounts;
- (void)replaceAssetsAtIndexes:(id)arg1 withAssets:(id)arg2;
- (void)removeAssetsAtIndexes:(id)arg1;
- (void)insertAssets:(id)arg1 atIndexes:(id)arg2;
@property(readonly, nonatomic) unsigned long long videosCount;
@property(readonly, nonatomic) unsigned long long photosCount;
- (unsigned long long)_cachedCountForMigration;
@property(readonly, nonatomic) _Bool isEmpty;
@property(readonly, nonatomic) unsigned long long assetsCount;
@property(readonly, nonatomic) unsigned long long approximateCount;
- (unsigned long long)_albumStandInCount;
- (void)unregisterForChanges;
- (void)registerForChanges;
- (id)_keysToBeObserved;
- (void)_updateCountsIfNeeded:(id)arg1;
- (void)_updateKeyAssetsIfNeeded:(id)arg1;
- (void)_updateKeyAssetsAndCountsIfNeeded;
- (id)_expectedKeyAssets:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)removeInternalUserEditableAssetsAtIndexes:(id)arg1;
- (void)insertInternalUserEditableAssets:(id)arg1 atIndexes:(id)arg2 trimmedVideoPathInfo:(id)arg3 commentText:(id)arg4;
- (void)insertInternalUserEditableAssets:(id)arg1 atIndexes:(id)arg2;
- (id)internalUserEditableAssetsAtIndexes:(id)arg1;
- (void)getInternalUserEditableAssets:(id *)arg1 range:(struct _NSRange)arg2;
- (id)objectInInternalUserEditableAssetsAtIndex:(unsigned long long)arg1;
- (unsigned long long)indexInInternalUserEditableAssetsOfObject:(id)arg1;
- (unsigned long long)countOfInternalUserEditableAssets;
@property(readonly, retain, nonatomic) NSMutableOrderedSet *userEditableAssets;
- (void)didSave;
- (void)willSave;
- (_Bool)isValidKindForPersistence;
- (void)prepareForDeletion;
@property(readonly, retain, nonatomic) NSMutableOrderedSet *mutableAssets;
- (id)childKeyForOrdering;
- (id)newOrderKeyChild:(id)arg1;
- (id)sortedOrderKeysForChildrenUsingMap:(id)arg1;
- (id)childToOrderKeyMap;
- (_Bool)supportsAssetOrderKeys;
- (_Bool)_shouldCopyAssetToCameraRollBeforeAdding:(id)arg1;
- (_Bool)canPerformEditOperation:(unsigned long long)arg1;
- (id)searchIndexContents;

// Remaining properties
@property(retain, nonatomic) NSSet *assetOrders; // @dynamic assetOrders;
@property(retain, nonatomic) NSOrderedSet *assets; // @dynamic assets;
@property(readonly, nonatomic) _Bool canContributeToCloudSharedAlbum;
@property(readonly, nonatomic) _Bool canShowAvalancheStacks;
@property(readonly, nonatomic) _Bool canShowComments;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly, retain, nonatomic) NSDate *endDate;
@property(readonly, retain, nonatomic) NSURL *groupURL;
@property(nonatomic) _Bool hasUnseenContentBoolValue;
@property(readonly) unsigned long long hash;
@property(retain, nonatomic) NSString *importSessionID;
@property(readonly, nonatomic) _Bool isCameraAlbum;
@property(readonly, nonatomic) _Bool isCloudSharedAlbum;
@property(readonly, nonatomic) _Bool isFamilyCloudSharedAlbum;
@property(readonly, nonatomic) _Bool isFolder;
@property(readonly, nonatomic) _Bool isInTrash;
@property(readonly, nonatomic) _Bool isLibrary;
@property(readonly, nonatomic) _Bool isMultipleContributorCloudSharedAlbum;
@property(readonly, nonatomic) _Bool isOwnedCloudSharedAlbum;
@property(readonly, nonatomic) _Bool isPanoramasAlbum;
@property(readonly, nonatomic) _Bool isPendingPhotoStreamAlbum;
@property(readonly, nonatomic) _Bool isPhotoStreamAlbum;
@property(readonly, nonatomic) _Bool isRecentlyAddedAlbum;
@property(readonly, nonatomic) _Bool isStandInAlbum;
@property(readonly, nonatomic) _Bool isWallpaperAlbum;
@property(retain, nonatomic) PLManagedAsset *keyAsset;
@property(readonly, retain, nonatomic) NSNumber *kind;
@property(readonly, nonatomic) int kindValue;
@property(readonly, copy, nonatomic) NSArray *localizedLocationNames;
@property(readonly, copy, nonatomic) NSString *localizedTitle;
@property(readonly, copy, nonatomic) NSString *name;
@property(nonatomic) int pendingItemsCount;
@property(nonatomic) int pendingItemsType;
@property(readonly, retain, nonatomic) UIImage *posterImage;
@property(retain, nonatomic) PLManagedAsset *secondaryKeyAsset;
@property(readonly, nonatomic) _Bool shouldDeleteWhenEmpty;
@property(retain, nonatomic) NSDictionary *slideshowSettings;
@property(readonly, copy, nonatomic) CDUnknownBlockType sortingComparator;
@property(readonly, retain, nonatomic) NSDate *startDate;
@property(readonly) Class superclass;
@property(retain, nonatomic) PLManagedAsset *tertiaryKeyAsset;
@property(readonly, retain, nonatomic) NSString *title;
@property(readonly, retain, nonatomic) NSString *uuid;

@end

@interface PLCloudSharedAlbum : PLManagedAlbum <PLCloudSharedAlbumProtocol>
{
    _Bool _deleteFromDBOnly;
}

+ (id)cloudOwnerDisplayNameWithFirstName:(id)arg1 lastName:(id)arg2 fullName:(id)arg3 emailKey:(id)arg4 includingEmail:(_Bool)arg5 allowsEmail:(_Bool)arg6;
+ (id)localizedSharedByLabelWithFirstName:(id)arg1 lastName:(id)arg2 fullName:(id)arg3 emailKey:(id)arg4 isOwned:(_Bool)arg5 allowsEmail:(_Bool)arg6;
+ (id)allCloudSharedAlbumsInLibrary:(id)arg1;
+ (id)cloudSharedAlbumWithGUID:(id)arg1 inLibrary:(id)arg2;
+ (id)entityName;
+ (id)entityInManagedObjectContext:(id)arg1;
- (id)activityViewControllerSubject:(id)arg1;
- (id)activityViewController:(id)arg1 thumbnailForActivityType:(id)arg2;
- (id)activityViewController:(id)arg1 itemsForActivityType:(id)arg2;
- (id)activityViewControllerPlaceholderItems:(id)arg1;
- (void)persistRecoveryMetadata;
- (void)userDeleteSubscriberRecord:(id)arg1;
@property(readonly, retain, nonatomic) NSOrderedSet *cloudAlbumSubscriberRecords; // @dynamic cloudAlbumSubscriberRecords;
@property(retain, nonatomic) NSString *cloudOwnerEmail;
- (void)publishBatchOfOriginalAssets:(id)arg1 withBatchCommentText:(id)arg2 andTrimmedVideoPathInfo:(id)arg3 isNewAlbum:(_Bool)arg4;
- (void)updateCloudLastContributionDateWithDate:(id)arg1;
- (void)updateCloudLastInterestingChangeDateWithDate:(id)arg1;
- (id)cloudOwnerDisplayNameIncludingEmail:(_Bool)arg1 allowsEmail:(_Bool)arg2;
@property(readonly, retain, nonatomic) NSDate *cloudFirstRecentBatchDate;
@property(readonly, nonatomic) _Bool canContributeToCloudSharedAlbum;
@property(readonly, nonatomic) _Bool isMultipleContributorCloudSharedAlbum;
@property(readonly, nonatomic) _Bool isFamilyCloudSharedAlbum;
@property(readonly, nonatomic) _Bool isOwnedCloudSharedAlbum;
@property(readonly, retain, nonatomic) NSString *localizedSharedWithLabel;
- (id)localizedSharedByLabelAllowsEmail:(_Bool)arg1;
@property(readonly) int cloudRelationshipStateLocalValue;
@property(readonly) int cloudRelationshipStateValue;
@property(readonly, copy, nonatomic) CDUnknownBlockType sortingComparator;
- (id)_expectedKeyAssets:(id)arg1;
- (void)delete;
- (void)deleteFromDatabaseOnly;
- (id)albumDirectoryPath;
- (void)prepareForDeletion;
- (void)willSave;
- (void)awakeFromInsert;
- (void)getUnseenStartMarkerIndex:(unsigned long long *)arg1 count:(unsigned long long *)arg2 showsProgress:(_Bool *)arg3;
@property unsigned long long unseenAssetsCountIntegerValue;
@property(nonatomic) _Bool hasUnseenContentBoolValue;

// Remaining properties
@property(readonly, nonatomic) unsigned long long approximateCount;
@property(retain, nonatomic) NSOrderedSet *assets; // @dynamic assets;
@property(readonly, nonatomic) unsigned long long assetsCount;
@property(readonly, nonatomic) _Bool canShowAvalancheStacks;
@property(readonly, nonatomic) _Bool canShowComments;
@property(nonatomic) short cloudAlbumSubtype; // @dynamic cloudAlbumSubtype;
@property(retain, nonatomic) NSDate *cloudCreationDate; // @dynamic cloudCreationDate;
@property(retain, nonatomic) NSString *cloudGUID; // @dynamic cloudGUID;
@property(retain, nonatomic) NSDate *cloudLastContributionDate; // @dynamic cloudLastContributionDate;
@property(retain, nonatomic) NSDate *cloudLastInterestingChangeDate; // @dynamic cloudLastInterestingChangeDate;
@property(retain, nonatomic) NSDictionary *cloudMetadata; // @dynamic cloudMetadata;
@property(retain, nonatomic) NSNumber *cloudMultipleContributorsEnabled; // @dynamic cloudMultipleContributorsEnabled;
@property(retain, nonatomic) NSNumber *cloudMultipleContributorsEnabledLocal; // @dynamic cloudMultipleContributorsEnabledLocal;
@property(nonatomic) _Bool cloudNotificationsEnabled; // @dynamic cloudNotificationsEnabled;
@property(retain, nonatomic) NSNumber *cloudOwnerEmailKey; // @dynamic cloudOwnerEmailKey;
@property(retain, nonatomic) NSString *cloudOwnerFirstName; // @dynamic cloudOwnerFirstName;
@property(retain, nonatomic) NSString *cloudOwnerFullName; // @dynamic cloudOwnerFullName;
@property(retain, nonatomic) NSString *cloudOwnerHashedPersonID; // @dynamic cloudOwnerHashedPersonID;
@property(retain, nonatomic) NSString *cloudOwnerLastName; // @dynamic cloudOwnerLastName;
@property(retain, nonatomic) NSString *cloudPersonID; // @dynamic cloudPersonID;
@property(retain, nonatomic) NSNumber *cloudPublicURLEnabled; // @dynamic cloudPublicURLEnabled;
@property(retain, nonatomic) NSNumber *cloudPublicURLEnabledLocal; // @dynamic cloudPublicURLEnabledLocal;
@property(retain, nonatomic) NSNumber *cloudRelationshipState; // @dynamic cloudRelationshipState;
@property(retain, nonatomic) NSNumber *cloudRelationshipStateLocal; // @dynamic cloudRelationshipStateLocal;
@property(retain, nonatomic) NSDate *cloudSubscriptionDate; // @dynamic cloudSubscriptionDate;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly, retain, nonatomic) NSDate *endDate;
@property(readonly, retain, nonatomic) NSURL *groupURL;
@property(retain, nonatomic) NSNumber *hasUnseenContent; // @dynamic hasUnseenContent;
@property(readonly) unsigned long long hash;
@property(retain, nonatomic) NSString *importSessionID;
@property(retain, nonatomic) NSOrderedSet *invitationRecords; // @dynamic invitationRecords;
@property(readonly, nonatomic) _Bool isCameraAlbum;
@property(readonly, nonatomic) _Bool isCloudSharedAlbum;
@property(readonly, nonatomic) _Bool isEmpty;
@property(readonly, nonatomic) _Bool isFolder;
@property(readonly, nonatomic) _Bool isInTrash;
@property(readonly, nonatomic) _Bool isLibrary;
@property(retain, nonatomic) NSNumber *isOwned; // @dynamic isOwned;
@property(readonly, nonatomic) _Bool isPanoramasAlbum;
@property(readonly, nonatomic) _Bool isPendingPhotoStreamAlbum;
@property(readonly, nonatomic) _Bool isPhotoStreamAlbum;
@property(readonly, nonatomic) _Bool isRecentlyAddedAlbum;
@property(readonly, nonatomic) _Bool isStandInAlbum;
@property(readonly, nonatomic) _Bool isWallpaperAlbum;
@property(retain, nonatomic) PLManagedAsset *keyAsset;
@property(readonly, retain, nonatomic) NSNumber *kind;
@property(readonly, nonatomic) int kindValue;
@property(readonly, copy, nonatomic) NSArray *localizedLocationNames;
@property(readonly, copy, nonatomic) NSString *localizedTitle;
@property(readonly, retain, nonatomic) NSMutableOrderedSet *mutableAssets;
@property(readonly, copy, nonatomic) NSString *name;
@property(nonatomic) int pendingItemsCount;
@property(nonatomic) int pendingItemsType;
@property(readonly, nonatomic) unsigned long long photosCount;
@property(readonly, retain, nonatomic) UIImage *posterImage;
@property(retain, nonatomic) NSString *publicURL; // @dynamic publicURL;
@property(retain, nonatomic) PLManagedAsset *secondaryKeyAsset;
@property(readonly, nonatomic) _Bool shouldDeleteWhenEmpty;
@property(retain, nonatomic) NSDictionary *slideshowSettings;
@property(readonly, retain, nonatomic) NSDate *startDate;
@property(readonly) Class superclass;
@property(retain, nonatomic) PLManagedAsset *tertiaryKeyAsset;
@property(readonly, retain, nonatomic) NSString *title;
@property(retain, nonatomic) NSNumber *unseenAssetsCount; // @dynamic unseenAssetsCount;
@property(readonly, retain, nonatomic) NSString *uuid;
@property(readonly, nonatomic) unsigned long long videosCount;

@end

@interface PLCloudSharedAlbumInvitationRecord : PLManagedObject
{
}

+ (id)cloudSharedAlbumInvitationRecordsWithAlbumGUID:(id)arg1 inLibrary:(id)arg2;
+ (id)cloudSharedAlbumInvitationRecordWithGUID:(id)arg1 inLibrary:(id)arg2;
+ (id)insertNewInvitationRecordIntoAlbum:(id)arg1 withFirstName:(id)arg2 lastName:(id)arg3 fullName:(id)arg4 emails:(id)arg5 phones:(id)arg6 inLibrary:(id)arg7;
+ (id)entityName;
+ (id)entityInManagedObjectContext:(id)arg1;
- (id)invitationStateDescription;
- (void)setInviteeEmails:(id)arg1 phones:(id)arg2;
@property(readonly, nonatomic) NSArray *inviteePhones;
@property(readonly, nonatomic) NSArray *inviteeEmails;
- (id)inviteeDisplayNameIncludingEmail:(_Bool)arg1;
- (void)delete;
- (void)dealloc;
- (void)prepareForDeletion;
- (void)willSave;
- (void)awakeFromInsert;
- (id)init;

// Remaining properties
@property(retain, nonatomic) PLCloudSharedAlbum *album; // @dynamic album;
@property(retain, nonatomic) NSString *albumGUID; // @dynamic albumGUID;
@property(retain, nonatomic) NSString *cloudGUID; // @dynamic cloudGUID;
@property(retain, nonatomic) NSNumber *invitationState; // @dynamic invitationState;
@property(retain, nonatomic) NSNumber *invitationStateLocal; // @dynamic invitationStateLocal;
@property(nonatomic) NSNumber *inviteeEmailKey; // @dynamic inviteeEmailKey;
@property(retain, nonatomic) NSString *inviteeFirstName; // @dynamic inviteeFirstName;
@property(retain, nonatomic) NSString *inviteeFullName; // @dynamic inviteeFullName;
@property(nonatomic) NSString *inviteeHashedPersonID; // @dynamic inviteeHashedPersonID;
@property(retain, nonatomic) NSString *inviteeLastName; // @dynamic inviteeLastName;
@property(retain, nonatomic) NSDate *inviteeSubscriptionDate; // @dynamic inviteeSubscriptionDate;
@property(nonatomic) _Bool isMine; // @dynamic isMine;

@end

@interface PLCloudSharingJob : PLDaemonJob
{
    PLPhotoLibrary *_photoLibrary;
    NSString *_archiveFilename;
    _Bool _shouldPrioritize;
}

+ (void)deleteAllRecoveryEvents;
+ (id)recoveredEventsIgnoringEvent:(id)arg1;
+ (id)archiveDirectory;
@property(nonatomic) _Bool shouldPrioritize; // @synthesize shouldPrioritize=_shouldPrioritize;
- (void)dealloc;
- (void)runAndWaitForMessageToBeSent;
- (void)runDaemonSide;
- (id)initFromXPCObject:(id)arg1 connection:(id)arg2;
- (_Bool)shouldArchiveXPCToDisk;
- (void)archiveXPCToDisk:(id)arg1;
@property(readonly, retain, nonatomic) PLPhotoLibrary *transientPhotoLibrary;
- (id)serialOperationQueue;
- (id)init;

@end

@interface PLCloudSharedAssetSaveJob : PLCloudSharingJob
{
    _Bool _replacingOriginalWithDerivative;
    AssetCollectionInfo *_currentAssetCollectionInfo;
    _Bool _isVideo;
    NSString *_currentFilePath;
    NSString *_currentCloudAssetGUID;
    unsigned long long _currentCloudAssetMediaAssetType;
    NSString *_cloudAlbumGUID;
    NSString *_cloudPersonID;
    MSASAssetCollection *_currentCloudAssetCollection;
    NSArray *_assetCollectionInfos;
    NSArray *_cloudAssetGUIDsToDelete;
    long long _jobType;
    NSDictionary *_mstreamdInfoDictionary;
}

+ (id)placeholderImageProperties;
+ (id)nextDCIMSaveFileURLForCloudPersonID:(id)arg1 cloudAlbumGUID:(id)arg2 fileExtension:(id)arg3;
+ (id)_dcimDirectoryForFileURL:(id)arg1;
+ (id)pathForInFlightAssetCollectionWithGUID:(id)arg1 mediaAssetType:(unsigned long long)arg2;
+ (id)_lightweightReimportPhotoCloudSharingAlbumInfoForAlbumWithCloudGUID:(id)arg1 cloudPersonID:(id)arg2;
+ (_Bool)_lightweightReimportCacheDirectoryExists;
+ (void)replaceRecentlyUploadedOriginalWithDerivativeForCollection:(id)arg1 inAlbum:(id)arg2 personID:(id)arg3;
+ (void)deleteCloudSharedAssetsWithCloudGUIDs:(id)arg1 info:(id)arg2;
+ (void)saveCloudSharedAssetAtPath:(id)arg1 forAssetCollectionWithGUID:(id)arg2 mediaAssetType:(unsigned long long)arg3 albumGUID:(id)arg4 personID:(id)arg5 info:(id)arg6 shouldPrioritize:(_Bool)arg7;
+ (void)downloadPendingAssetsForPersonID:(id)arg1 info:(id)arg2;
+ (void)processMetadataForAssetCollections:(id)arg1 inAlbum:(id)arg2 personID:(id)arg3 info:(id)arg4;
@property(retain, nonatomic) NSDictionary *mstreamdInfoDictionary; // @synthesize mstreamdInfoDictionary=_mstreamdInfoDictionary;
@property(nonatomic) long long jobType; // @synthesize jobType=_jobType;
@property(retain, nonatomic) NSArray *cloudAssetGUIDsToDelete; // @synthesize cloudAssetGUIDsToDelete=_cloudAssetGUIDsToDelete;
@property(nonatomic) _Bool isVideo; // @synthesize isVideo=_isVideo;
@property(retain, nonatomic) NSArray *assetCollectionInfos; // @synthesize assetCollectionInfos=_assetCollectionInfos;
@property(retain, nonatomic) MSASAssetCollection *currentCloudAssetCollection; // @synthesize currentCloudAssetCollection=_currentCloudAssetCollection;
@property(retain, nonatomic) NSString *cloudPersonID; // @synthesize cloudPersonID=_cloudPersonID;
@property(retain, nonatomic) NSString *cloudAlbumGUID; // @synthesize cloudAlbumGUID=_cloudAlbumGUID;
@property(nonatomic) unsigned long long currentCloudAssetMediaAssetType; // @synthesize currentCloudAssetMediaAssetType=_currentCloudAssetMediaAssetType;
@property(retain, nonatomic) NSString *currentCloudAssetGUID; // @synthesize currentCloudAssetGUID=_currentCloudAssetGUID;
@property(retain, nonatomic) NSString *currentFilePath; // @synthesize currentFilePath=_currentFilePath;
- (unsigned long long)_insertionIndexForAsset:(id)arg1 inAlbum:(id)arg2;
- (void)executeDaemonOperationReplaceRecentlyUploadedOriginalJobType;
- (void)executeDaemonOperationDeleteAssetJobType;
- (void)executeDaemonOperationDownloadPendingAssetsJobType;
- (void)executeDaemonOperationSaveAssetMetadataForCollectionsJobType;
- (short)attemptLightweightReimportAssetData;
- (void)saveJobAssetWithPlaceholderKind:(short)arg1;
- (_Bool)_processSaveAssetWithPlaceholderKind:(short)arg1 withAssetDataFilePath:(id)arg2;
- (void)_processInFlightCommentsForAsset:(id)arg1 inAlbum:(id)arg2 inPhotoLibrary:(id)arg3;
- (_Bool)_parseISO6709String:(id)arg1 outLatitude:(double *)arg2 outLongitude:(double *)arg3;
- (_Bool)_createPlaceHolderInSharedAlbum:(id)arg1;
- (void)executeDaemonOperationSaveAssetJobType;
- (short)placeHolderKindFromAssetMetadataType:(unsigned long long)arg1;
- (_Bool)isProcessingThumbnail;
- (void)runDaemonSide;
- (void)run;
- (long long)daemonOperation;
- (void)dealloc;
- (id)description;
- (id)init;
- (id)initFromXPCObject:(id)arg1 connection:(id)arg2;
- (void)encodeToXPCObject:(id)arg1;

@end

@interface PLCloudSharedComment : PLManagedObject
{
}

+ (id)cloudSharedCommentWithGUID:(id)arg1 inLibrary:(id)arg2;
+ (id)cloudSharedCommentWithGUIDs:(id)arg1 inLibrary:(id)arg2;
+ (id)insertNewCommentIntoAsset:(id)arg1 commentDate:(id)arg2 withText:(id)arg3 isLike:(_Bool)arg4 isMyComment:(_Bool)arg5 inLibrary:(id)arg6;
+ (id)entityName;
+ (id)entityInManagedObjectContext:(id)arg1;
@property(readonly, nonatomic) NSString *commenterFullName;
@property(readonly, nonatomic) NSString *commenterLastName;
@property(readonly, nonatomic) NSString *commenterFirstName;
@property(readonly, nonatomic) NSString *commenterEmail;
- (_Bool)canBeDeletedByUser;
- (id)commenterDisplayName;
- (_Bool)isInterestingForAlbumsSorting;
- (_Bool)shouldNotifyAsBulletinWithMediaStreamInfo:(id)arg1 asCaptionOnly:(_Bool *)arg2;
- (_Bool)_isInterestingToUser;
@property(readonly, nonatomic) _Bool isLikeBoolValue;
@property(readonly, nonatomic) PLCloudFeedCommentsEntry *cloudFeedEntry;
- (id)asset;
- (void)dealloc;
- (void)prepareForDeletion;
- (void)willSave;
- (void)awakeFromInsert;
- (id)init;

// Remaining properties
@property(retain, nonatomic) PLCloudFeedCommentsEntry *cloudFeedCommentEntry; // @dynamic cloudFeedCommentEntry;
@property(retain, nonatomic) PLCloudFeedCommentsEntry *cloudFeedLikeCommentEntry; // @dynamic cloudFeedLikeCommentEntry;
@property(retain, nonatomic) NSString *cloudGUID; // @dynamic cloudGUID;
@property(retain, nonatomic) NSDate *commentClientDate; // @dynamic commentClientDate;
@property(retain, nonatomic) NSDate *commentDate; // @dynamic commentDate;
@property(retain, nonatomic) NSString *commentText; // @dynamic commentText;
@property(retain, nonatomic) NSString *commentType; // @dynamic commentType;
@property(retain, nonatomic) PLManagedAsset *commentedAsset; // @dynamic commentedAsset;
@property(retain, nonatomic) NSString *commenterHashedPersonID; // @dynamic commenterHashedPersonID;
@property(retain, nonatomic) NSNumber *isBatchComment; // @dynamic isBatchComment;
@property(retain, nonatomic) NSNumber *isCaption; // @dynamic isCaption;
@property(retain, nonatomic) NSNumber *isDeletable; // @dynamic isDeletable;
@property(retain, nonatomic) NSNumber *isLike; // @dynamic isLike;
@property(retain, nonatomic) NSNumber *isMyComment; // @dynamic isMyComment;
@property(retain, nonatomic) PLManagedAsset *likedAsset; // @dynamic likedAsset;

@end

@interface PLCloudSharedCommentsJob : PLCloudSharingJob
{
    long long _jobType;
    NSArray *_msASComments;
    NSString *_commentGUID;
    NSString *_assetGUID;
    NSString *_albumGUID;
    NSDictionary *_mstreamdInfoDictionary;
}

+ (id)directoryPathForInFlightComments:(_Bool)arg1;
+ (void)locallyProcessDeletedComments:(id)arg1 info:(id)arg2;
+ (void)locallyProcessAddedComments:(id)arg1 assetGUID:(id)arg2 albumGUID:(id)arg3 info:(id)arg4;
+ (void)deleteSharedCommentFromServer:(id)arg1;
+ (void)publishCommentToServer:(id)arg1;
@property(retain, nonatomic) NSDictionary *mstreamdInfoDictionary; // @synthesize mstreamdInfoDictionary=_mstreamdInfoDictionary;
@property(retain, nonatomic) NSString *albumGUID; // @synthesize albumGUID=_albumGUID;
@property(retain, nonatomic) NSString *assetGUID; // @synthesize assetGUID=_assetGUID;
@property(retain, nonatomic) NSString *commentGUID; // @synthesize commentGUID=_commentGUID;
@property(retain, nonatomic) NSArray *msASComments; // @synthesize msASComments=_msASComments;
@property(nonatomic) long long jobType; // @synthesize jobType=_jobType;
- (void)executeDeleteCommentFromServer;
- (void)executePublishCommentToServer;
- (void)executeProcessServerNotificationOfCommentChanges;
- (void)runDaemonSide;
- (_Bool)shouldArchiveXPCToDisk;
- (void)run;
- (long long)daemonOperation;
- (void)dealloc;
- (id)description;
- (id)initFromXPCObject:(id)arg1 connection:(id)arg2;
- (void)encodeToXPCObject:(id)arg1;

@end

@interface PLCloudSharedDeleteAlbumsJob : PLCloudSharingJob
{
    NSArray *_albumCloudGUIDsToDelete;
}

+ (void)deleteLocalAlbumsForMSASAlbumGUIDs:(id)arg1;
@property(retain, nonatomic) NSArray *albumCloudGUIDsToDelete; // @synthesize albumCloudGUIDsToDelete=_albumCloudGUIDsToDelete;
- (void)runDaemonSide;
- (void)run;
- (long long)daemonOperation;
- (void)dealloc;
- (id)description;
- (id)initFromXPCObject:(id)arg1 connection:(id)arg2;
- (void)encodeToXPCObject:(id)arg1;

@end

@interface PLCloudSharedUpdateAlbumMetadataJob : PLCloudSharingJob
{
    NSDictionary *_metadata;
}

+ (void)updateAlbumMetadata:(id)arg1;
@property(retain, nonatomic) NSDictionary *metadata; // @synthesize metadata=_metadata;
- (id)_argumentsDictionaryFromXPCEvent:(id)arg1;
- (id)_argumentsDictionaryAsData:(id)arg1;
- (void)runDaemonSide;
- (void)run;
- (long long)daemonOperation;
- (id)description;
- (void)dealloc;
- (id)initFromXPCObject:(id)arg1 connection:(id)arg2;
- (void)encodeToXPCObject:(id)arg1;

@end

@interface PLCloudSharingEnablingJob : PLCloudSharingJob
{
    _Bool _enableSharing;
}

+ (void)deleteAllLocalSharedAlbumsInLibrary:(id)arg1 keepPendingAlbums:(_Bool)arg2;
+ (void)enableCloudSharing:(_Bool)arg1;
@property(nonatomic) _Bool enableSharing; // @synthesize enableSharing=_enableSharing;
- (void)runDaemonSide;
- (_Bool)shouldArchiveXPCToDisk;
- (void)run;
- (long long)daemonOperation;
- (id)description;
- (id)initFromXPCObject:(id)arg1 connection:(id)arg2;
- (void)encodeToXPCObject:(id)arg1;

@end

@interface PLCloudSharingInvitationChangeJob : PLCloudSharingJob
{
    NSArray *_MSASSharingRelationships;
    long long _relationshipChangeType;
    NSString *_albumGUID;
    NSString *_resendInvitationGUID;
    long long _jobType;
    NSDictionary *_mstreamdInfoDictionary;
}

+ (void)resendPendingInvitationWithGUID:(id)arg1 albumGUID:(id)arg2;
+ (void)sendServerPendingInvitationsForAlbumWithGUID:(id)arg1;
+ (void)saveServerStateLocallyForSharingInvitationRelationships:(id)arg1 changeType:(long long)arg2 info:(id)arg3;
+ (void)saveServerStateLocallyForSharingACLRelationships:(id)arg1 changeType:(long long)arg2 info:(id)arg3;
@property(retain, nonatomic) NSDictionary *mstreamdInfoDictionary; // @synthesize mstreamdInfoDictionary=_mstreamdInfoDictionary;
@property(nonatomic) long long jobType; // @synthesize jobType=_jobType;
@property(retain, nonatomic) NSString *resendInvitationGUID; // @synthesize resendInvitationGUID=_resendInvitationGUID;
@property(retain, nonatomic) NSString *albumGUID; // @synthesize albumGUID=_albumGUID;
@property(nonatomic) long long relationshipChangeType; // @synthesize relationshipChangeType=_relationshipChangeType;
@property(retain, nonatomic) NSArray *MSASSharingRelationships; // @synthesize MSASSharingRelationships=_MSASSharingRelationships;
- (void)executeSendServerPendingInvitationsForAlbumWithGUID;
- (void)executeSaveServerStateLocallyForSharingACLRelationships;
- (void)executeSaveServerStateLocallyForSharingInvitationRelationships;
- (void)runDaemonSide;
- (_Bool)shouldArchiveXPCToDisk;
- (void)run;
- (long long)daemonOperation;
- (void)dealloc;
- (id)description;
- (id)initFromXPCObject:(id)arg1 connection:(id)arg2;
- (void)encodeToXPCObject:(id)arg1;

@end

@interface PLCloudSharingResetJob : PLCloudSharingJob
{
}

+ (void)resetAllLocalState;
- (void)runDaemonSide;
- (void)run;
- (long long)daemonOperation;

@end

@interface PLCloudSharingViewedStateChangeJob : PLCloudSharingJob
{
    _Bool _albumHasUnseenContent;
    _Bool _assetCollectionHasUnreadComments;
    long long _jobType;
    NSString *_albumGUID;
    long long _albumUnviewedAssetCount;
    NSString *_assetCollectionGUID;
    NSDate *_assetCollectionLastViewedCommentDate;
}

+ (void)setLastViewedCommentDate:(id)arg1 forAssetCollection:(id)arg2 inAlbum:(id)arg3;
+ (void)markAssetCollection:(id)arg1 asHavingUnreadComments:(_Bool)arg2 inAlbum:(id)arg3;
+ (void)updateUnviewedAssetCollectionCount:(int)arg1 forAlbum:(id)arg2;
+ (void)markAlbum:(id)arg1 asHavingUnseenContent:(_Bool)arg2;
@property(retain, nonatomic) NSDate *assetCollectionLastViewedCommentDate; // @synthesize assetCollectionLastViewedCommentDate=_assetCollectionLastViewedCommentDate;
@property(nonatomic) _Bool assetCollectionHasUnreadComments; // @synthesize assetCollectionHasUnreadComments=_assetCollectionHasUnreadComments;
@property(retain, nonatomic) NSString *assetCollectionGUID; // @synthesize assetCollectionGUID=_assetCollectionGUID;
@property(nonatomic) long long albumUnviewedAssetCount; // @synthesize albumUnviewedAssetCount=_albumUnviewedAssetCount;
@property(nonatomic) _Bool albumHasUnseenContent; // @synthesize albumHasUnseenContent=_albumHasUnseenContent;
@property(retain, nonatomic) NSString *albumGUID; // @synthesize albumGUID=_albumGUID;
@property(nonatomic) long long jobType; // @synthesize jobType=_jobType;
- (void)_executeAssetLastViewedCommentDateChangedWithGroup;
- (void)_executeAssetCommentsReadStateChangedWithGroup;
- (void)_executeAlbumUnviewedAssetCountChangedWithGroup;
- (void)_executeAlbumViewedStateChanged;
- (void)runDaemonSide;
- (void)run;
- (long long)daemonOperation;
- (void)dealloc;
- (id)description;
- (id)initFromXPCObject:(id)arg1 connection:(id)arg2;
- (void)encodeToXPCObject:(id)arg1;

@end

@interface PLCloudStorageInfo : NSObject
{
    long long _totalBytes;
    long long _availableBytes;
    long long _usedBytes;
    long long _cameraRollBackupBytes;
}

+ (id)storageInfoWithTotal:(long long)arg1 available:(long long)arg2 used:(long long)arg3 cameraRollBackupBytes:(long long)arg4;
@property(nonatomic) long long cameraRollBackupBytes; // @synthesize cameraRollBackupBytes=_cameraRollBackupBytes;
@property(nonatomic) long long usedBytes; // @synthesize usedBytes=_usedBytes;
@property(nonatomic) long long availableBytes; // @synthesize availableBytes=_availableBytes;
@property(nonatomic) long long totalBytes; // @synthesize totalBytes=_totalBytes;
- (id)initWithTotalQuotaBytes:(long long)arg1 totalAvailableBytes:(long long)arg2 totalUsedBytes:(long long)arg3 cameraRollBackupBytes:(long long)arg4;

@end

@interface PLCloudStreamShareJob : PLCloudSharingJob
{
    NSArray *_mediaSources;
    NSString *_albumCloudGUID;
    NSString *_albumName;
    NSString *_commentText;
    NSArray *_recipientsInfo;
}

+ (void)publishMediaFromSources:(id)arg1 toNewSharedAlbumWithName:(id)arg2 withCommentText:(id)arg3 recipients:(id)arg4;
+ (void)publishMediaFromSources:(id)arg1 toSharedAlbum:(id)arg2 withCommentText:(id)arg3;
@property(retain, nonatomic) NSArray *recipientsInfo; // @synthesize recipientsInfo=_recipientsInfo;
@property(retain, nonatomic) NSString *commentText; // @synthesize commentText=_commentText;
@property(retain, nonatomic) NSString *albumName; // @synthesize albumName=_albumName;
@property(retain, nonatomic) NSString *albumCloudGUID; // @synthesize albumCloudGUID=_albumCloudGUID;
@property(retain, nonatomic) NSArray *mediaSources; // @synthesize mediaSources=_mediaSources;
- (void)executeDaemonOperation;
- (id)description;
- (_Bool)shouldArchiveXPCToDisk;
- (long long)daemonOperation;
- (void)run;
- (void)runDaemonSide;
- (id)initFromXPCObject:(id)arg1 connection:(id)arg2;
- (void)encodeToXPCObject:(id)arg1;
- (void)addInfosForRecipients:(id)arg1;

@end

@interface PLCloudSystemStartedTrigger : PLCloudTrigger
{
    _Bool _activated;
    PLCloudPhotoLibraryManager *_cloudLibraryManager;
}

+ (void)triggerWithCloudLibraryManager:(id)arg1;
+ (id)sharedInstance;
@property(readonly, retain, nonatomic) PLCloudPhotoLibraryManager *cloudLibraryManager; // @synthesize cloudLibraryManager=_cloudLibraryManager;
- (void)setCloudLibraryManager:(id)arg1;
- (void)activate;
- (void)start;

@end

@interface PLCloudTaskManager : NSObject
{
    NSMutableDictionary *_pendingTaskForTaskIdentifier;
    NSMutableDictionary *_resourceForTaskIdentifier;
    NSMutableDictionary *_highPriorityResourceToTaskIdentifierMap;
    NSMutableDictionary *_lowPriorityResourceToTaskIdentifierMap;
}

- (id)_identifierForResource:(id)arg1;
- (void)reportCompletionForResource:(id)arg1 withError:(id)arg2 highPriority:(_Bool)arg3;
- (void)reportProgress:(float)arg1 forResource:(id)arg2 highPriority:(_Bool)arg3;
- (id)addProgressBlock:(CDUnknownBlockType)arg1 completionHandler:(CDUnknownBlockType)arg2 forResource:(id)arg3 highPriority:(_Bool)arg4;
- (void)cancelTaskWithTaskIdentifier:(id)arg1;
- (id)getPendingTaskForTaskIdentifier:(id)arg1;
- (void)createPendingTaskWithProgressBlock:(CDUnknownBlockType)arg1 completionHandler:(CDUnknownBlockType)arg2 forResource:(id)arg3 highPriority:(_Bool)arg4 withTaskIdentifier:(id)arg5;
- (void)setPendingTaskWithTransferTask:(id)arg1 withTaskIdentifier:(id)arg2;
- (void)reset;
- (void)removeTaskIdentifiersForResource:(id)arg1 highPriority:(_Bool)arg2;
- (void)setTaskIdentifiers:(id)arg1 forResource:(id)arg2 highPriority:(_Bool)arg3;
- (id)taskIdentifiersForResource:(id)arg1 highPriority:(_Bool)arg2;
- (id)taskForResource:(id)arg1 highPriority:(_Bool)arg2;
- (id)firstTaskIdentifierForResource:(id)arg1 highPriority:(_Bool)arg2;
- (_Bool)hasTaskIdentifierForResource:(id)arg1 highPriority:(_Bool)arg2;
- (void)dealloc;
- (id)init;

@end

@interface PLDateRangeFormatter : NSObject
{
    _Bool _autoUpdateOnChanges;
    _Bool _includeDayNumbers;
    _Bool _includeDayNumbersWhenMonthsDiffer;
    _Bool _useRelativeDayFormatting;
    _Bool _useShortMonths;
    _Bool _useShortDaysInRanges;
    _Bool _useTime;
    _Bool _yearOnly;
    _Bool _timeOnly;
    NSDateFormatter *__sameDayDateFormatter;
    NSDateFormatter *__sameDayNoYearDateFormatter;
    NSDateFormatter *__dayOfTheWeekDateFormatter;
    NSDateFormatter *__relativeDateFormatterDay;
    NSDateFormatter *__yearDateFormatter;
    struct UDateIntervalFormat *__monthDayIntervalFormat;
    struct UDateIntervalFormat *__monthDayNoYearIntervalFormat;
    struct UDateIntervalFormat *__differentMonthDayIntervalFormat;
    struct UDateIntervalFormat *__differentMonthDayNoYearIntervalFormat;
    struct UDateIntervalFormat *__dayOfTheWeekIntervalFormat;
    struct UDateIntervalFormat *__timeIntervalFormat;
    struct UDateIntervalFormat *__yearIntervalFormat;
    NSLocale *__currentLocale;
}

+ (void)_dumpAllDateCombinationsWithFormatters;
@property(retain, nonatomic, setter=_setCurrentLocale:) NSLocale *_currentLocale; // @synthesize _currentLocale=__currentLocale;
@property(nonatomic) _Bool timeOnly; // @synthesize timeOnly=_timeOnly;
@property(nonatomic) _Bool yearOnly; // @synthesize yearOnly=_yearOnly;
@property(nonatomic) _Bool useTime; // @synthesize useTime=_useTime;
@property(nonatomic) _Bool useShortDaysInRanges; // @synthesize useShortDaysInRanges=_useShortDaysInRanges;
@property(nonatomic) _Bool useShortMonths; // @synthesize useShortMonths=_useShortMonths;
@property(nonatomic) _Bool useRelativeDayFormatting; // @synthesize useRelativeDayFormatting=_useRelativeDayFormatting;
@property(nonatomic) _Bool includeDayNumbersWhenMonthsDiffer; // @synthesize includeDayNumbersWhenMonthsDiffer=_includeDayNumbersWhenMonthsDiffer;
@property(nonatomic) _Bool includeDayNumbers; // @synthesize includeDayNumbers=_includeDayNumbers;
- (void)_dumpDateCombinations;
- (id)_relativeCombinationsForDate:(id)arg1;
- (void)_updateStartAndEndDatesAndDumpDateCombinationWithStartDate:(id)arg1 endDate:(id)arg2 currentDate:(id)arg3 dateFormatter:(id)arg4 calendarUnit:(unsigned long long)arg5 value:(long long)arg6;
- (id)_dateCombinationAfterUpdatingStartAndEndDatesWithStartDate:(id)arg1 endDate:(id)arg2 currentDate:(id)arg3 dateFormatter:(id)arg4 calendarUnit:(unsigned long long)arg5 value:(long long)arg6;
- (void)_updateCurrentDateAndDumpDateCombinationWithStartDate:(id)arg1 endDate:(id)arg2 currentDate:(id)arg3 dateFormatter:(id)arg4 calendarUnit:(unsigned long long)arg5 value:(long long)arg6;
- (id)_dateCombinationAfterUpdatingCurrentDateWithStartDate:(id)arg1 endDate:(id)arg2 currentDate:(id)arg3 dateFormatter:(id)arg4 calendarUnit:(unsigned long long)arg5 value:(long long)arg6;
- (void)_updateDateComponents:(id)arg1 withValueValue:(long long)arg2 forCalendarUnit:(unsigned long long)arg3;
- (void)_dumpDateCombinationWithStartDate:(id)arg1 endDate:(id)arg2 currentDate:(id)arg3 dateFormatter:(id)arg4;
- (id)_dateCombinationWithStartDate:(id)arg1 endDate:(id)arg2 currentDate:(id)arg3 dateFormatter:(id)arg4;
- (void)configureForFormatPreset:(unsigned long long)arg1;
- (void)_significantTimeChange:(id)arg1;
- (void)_localeChanged:(id)arg1;
- (void)_postChangeNotification;
@property(nonatomic) _Bool autoUpdateOnChanges;
- (id)formattedDate:(id)arg1;
- (id)formattedDateRangeWithStartDate:(id)arg1 endDate:(id)arg2;
- (id)formattedDateRangeWithStartDate:(id)arg1 endDate:(id)arg2 currentDate:(id)arg3;
- (_Bool)_date:(id)arg1 isWithinDaysInThePast:(long long)arg2;
- (_Bool)_date:(id)arg1 isWithinDaysInThePast:(long long)arg2 fromCurrentDate:(id)arg3;
@property(readonly, nonatomic) struct UDateIntervalFormat *_yearIntervalFormat; // @synthesize _yearIntervalFormat=__yearIntervalFormat;
@property(readonly, nonatomic) struct UDateIntervalFormat *_timeIntervalFormat; // @synthesize _timeIntervalFormat=__timeIntervalFormat;
@property(readonly, nonatomic) struct UDateIntervalFormat *_dayOfTheWeekIntervalFormat; // @synthesize _dayOfTheWeekIntervalFormat=__dayOfTheWeekIntervalFormat;
@property(readonly, nonatomic) struct UDateIntervalFormat *_differentMonthDayNoYearIntervalFormat; // @synthesize _differentMonthDayNoYearIntervalFormat=__differentMonthDayNoYearIntervalFormat;
@property(readonly, nonatomic) struct UDateIntervalFormat *_differentMonthDayIntervalFormat; // @synthesize _differentMonthDayIntervalFormat=__differentMonthDayIntervalFormat;
@property(readonly, nonatomic) struct UDateIntervalFormat *_monthDayNoYearIntervalFormat; // @synthesize _monthDayNoYearIntervalFormat=__monthDayNoYearIntervalFormat;
@property(readonly, nonatomic) struct UDateIntervalFormat *_monthDayIntervalFormat; // @synthesize _monthDayIntervalFormat=__monthDayIntervalFormat;
@property(readonly, retain, nonatomic) NSDateFormatter *_relativeDateFormatterDay; // @synthesize _relativeDateFormatterDay=__relativeDateFormatterDay;
@property(readonly, retain, nonatomic) NSDateFormatter *_yearDateFormatter; // @synthesize _yearDateFormatter=__yearDateFormatter;
@property(readonly, retain, nonatomic) NSDateFormatter *_dayOfTheWeekDateFormatter; // @synthesize _dayOfTheWeekDateFormatter=__dayOfTheWeekDateFormatter;
@property(readonly, retain, nonatomic) NSDateFormatter *_sameDayNoYearDateFormatter; // @synthesize _sameDayNoYearDateFormatter=__sameDayNoYearDateFormatter;
@property(readonly, retain, nonatomic) NSDateFormatter *_sameDayDateFormatter; // @synthesize _sameDayDateFormatter=__sameDayDateFormatter;
- (id)_dayDifferentMonthsTemplate;
- (id)_dayTemplate;
- (id)_sameMonthTemplate;
- (void)_invalidateFormats;
- (id)_formattedDateWithUDateFormatter:(struct UDateIntervalFormat *)arg1 startDate:(id)arg2 endDate:(id)arg3;
- (void)_releaseUDateFormatter:(struct UDateIntervalFormat *)arg1;
- (struct UDateIntervalFormat *)_newUDateFormatterForLocale:(id)arg1 template:(id)arg2;
- (void)dealloc;
- (id)init;

@end

@interface PLDelayedFiledSystemDeletions : NSObject
{
    NSMutableArray *_deletionInfos;
}

+ (id)deletionsFromChangeHubEvent:(id)arg1;
+ (void)appendDescriptionForEvent:(id)arg1 toComponents:(id)arg2;
+ (void)waitForAllDelayedDeletionsToFinish;
+ (id)filesystemDeletionQueue;
- (id)initWithFilesystemDeletionInfos:(id)arg1;
- (void)deleteAllRemainingFilesAndThumbnailsWithPhotoLibrary:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)appendToXPCMessage:(id)arg1 managedObjectContext:(id)arg2;
- (void)addFilesystemDeletionInfo:(id)arg1;
- (void)dealloc;
- (id)debugDescription;

@end

@interface PLManagedObjectContext : NSManagedObjectContext
{
    _Bool _hasMetadataChanges;
    _Bool _isConnectedToChangeHub;
    _Bool _mergingChanges;
    _Bool _savingDuringMerge;
    _Bool _isInitializingSingletons;
    _Bool _isBackingALAssetsLibrary;
    _Bool _suspendClientServerTransactions;
    PLMergePolicy *_mergePolicy;
    PLDelayedFiledSystemDeletions *_delayedDeletions;
    NSMutableArray *_delayedMomentAssetUpdates;
    NSMapTable *_delayedMomentAssetDeletions;
    NSMutableSet *_delayedCloudFeedDeletionEntries;
    NSMutableArray *_delayedCloudFeedAlbumUpdates;
    NSMutableArray *_delayedCloudFeedAssetInserts;
    NSMutableArray *_delayedCloudFeedAssetUpdates;
    NSMutableArray *_delayedCloudFeedCommentInserts;
    NSMutableArray *_delayedCloudFeedInvitationRecordUpdates;
    NSMutableArray *_delayedDupeAnalysisNormalInserts;
    NSMutableArray *_delayedDupeAnalysisCloudInserts;
    NSMutableSet *_delayedAssetsForFileSystemPersistency;
    NSMutableDictionary *_delayedSearchIndexUpdateUUIDs;
    NSMutableSet *_avalancheUUIDsForUpdate;
    NSMutableArray *_uuidForCloudDeletion;
    NSMutableArray *_albumUuidForCloudDeletion;
    NSMutableSet *_delayedAlbumOrderUpdates;
    NSMutableSet *_delayedAlbumCountUpdates;
    NSMutableDictionary *_updatedObjectsAttributes;
    NSMutableDictionary *_updatedObjectsRelationships;
    PLPhotoLibrary *_photoLibrary;
    id <PLManagedObjectContextPTPNotificationDelegate> _ptpNotificationDelegate;
    _Bool _regenerateVideoThumbnails;
    int _changeSource;
    NSObject<OS_xpc_object> *changeHubConnection;
}

+ (_Bool)assetsLibraryLoggingEnabled;
+ (void)handleUnknownMergeEvent;
+ (void)mergeChangesFromRemoteContextSave:(id)arg1 intoAllContextsNotIdenticalTo:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
+ (void)mergeIntoAllContextsChangesFromRemoteContextSave:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
+ (void)delayedAlbumCountUpdatesFromChangeHubEvent:(id)arg1 countUpdates:(id *)arg2;
+ (void)delayedAlbumOrderingUpdatesFromChangeHubEvent:(id)arg1 orderingUpdates:(id *)arg2;
+ (void)delayedSearchIndexUpdatesFromChangeHubEvent:(id)arg1 updates:(id *)arg2;
+ (void)delayedAssetsForFileSystemPersistencyUpdatesFromChangeHubEvent:(id)arg1 assetUpdates:(id *)arg2;
+ (void)delayedDupeAnalysisDataFromChangeHubEvent:(id)arg1 normalInserts:(id *)arg2 cloudInserts:(id *)arg3;
+ (void)delayedCloudFeedDataFromChangeHubEvent:(id)arg1 albumUpdates:(id *)arg2 assetInserts:(id *)arg3 assetUpdates:(id *)arg4 commentInserts:(id *)arg5 invitationRecordUpdates:(id *)arg6 deletionEntries:(id *)arg7;
+ (void)delayedMomentDataFromChangeHubEvent:(id)arg1 insertsAndUpdates:(id *)arg2 deletes:(id *)arg3;
+ (id)relationshipNamesForIndexValues:(unsigned long long)arg1 entity:(id)arg2;
+ (unsigned long long)indexValueForRelationshipNames:(id)arg1 entity:(id)arg2;
+ (id)attributeNamesForIndexValues:(unsigned long long)arg1 entity:(id)arg2;
+ (unsigned long long)indexValueForAttributeNames:(id)arg1 entity:(id)arg2;
+ (id)_propertyNamesForIndexValues:(unsigned long long)arg1 entity:(id)arg2 propertyNamesByIndexByEntityNames:(id)arg3;
+ (unsigned long long)_indexValueForPropertyNames:(id)arg1 entityName:(id)arg2 indexesByPropertyNamesByEntityNames:(id)arg3;
+ (id)_indexesByRelationshipNamesByEntityNames;
+ (id)_relationshipNamesByIndexByEntityNames;
+ (id)_indexesByAttributeNamesByEntityNames;
+ (id)_attributeNamesByIndexByEntityNames;
+ (void)__prepareEntityPropertyLookups;
+ (id)allContextsNotIdenticalTo:(void *)arg1;
+ (id)sharedPersistentStoreCoordinator;
+ (id)managedObjectModel;
+ (id)managedObjectModelURL;
+ (_Bool)storeIsOldEnough;
+ (void)getStoreURL:(id *)arg1 options:(id *)arg2 forFileURL:(id)arg3;
+ (void)getStoreURL:(id *)arg1 options:(id *)arg2;
+ (_Bool)hasConfiguredPhotoLibrary;
+ (void)configurePersistentStoreCoordinator:(id)arg1;
+ (_Bool)_rebuildAndRetryPersistentStoreWithURL:(id)arg1 options:(id)arg2 coordinator:(id)arg3 forced:(_Bool)arg4;
+ (_Bool)_openAndMigrateStoreWithURL:(id)arg1 options:(id)arg2 coordinator:(id)arg3 forceSourceModelVersion:(id)arg4;
+ (void)recordVersion:(int)arg1 forStore:(id)arg2 extraMetadata:(id)arg3;
+ (_Bool)hasAtLeastOneAsset;
+ (id)databasePath;
+ (_Bool)databaseIsMissing;
+ (void)moveOldStoreAside;
+ (_Bool)moveStoreFromURL:(id)arg1 toURL:(id)arg2 error:(id *)arg3;
+ (_Bool)canMergeRemoteChanges;
+ (_Bool)useModelMigratorToCreateDatabase;
+ (id)contextForDatabaseCreation:(const char *)arg1;
+ (id)contextForPhotoLibrary:(id)arg1 name:(const char *)arg2;
@property(nonatomic) _Bool isBackingALAssetsLibrary; // @synthesize isBackingALAssetsLibrary=_isBackingALAssetsLibrary;
@property(nonatomic) _Bool isInitializingSingletons; // @synthesize isInitializingSingletons=_isInitializingSingletons;
@property(nonatomic) _Bool regenerateVideoThumbnails; // @synthesize regenerateVideoThumbnails=_regenerateVideoThumbnails;
@property(nonatomic) int changeSource; // @synthesize changeSource=_changeSource;
@property(nonatomic) _Bool suspendClientServerTransactions; // @synthesize suspendClientServerTransactions=_suspendClientServerTransactions;
@property(nonatomic) _Bool hasMetadataChanges; // @synthesize hasMetadataChanges=_hasMetadataChanges;
@property(retain, nonatomic) PLDelayedFiledSystemDeletions *delayedDeletions; // @synthesize delayedDeletions=_delayedDeletions;
@property(readonly, nonatomic) _Bool savingDuringMerge; // @synthesize savingDuringMerge=_savingDuringMerge;
@property(readonly, nonatomic) _Bool mergingChanges; // @synthesize mergingChanges=_mergingChanges;
@property(nonatomic) NSObject<OS_xpc_object> *changeHubConnection; // @synthesize changeHubConnection;
- (void)_contextObjectsDidChange:(id)arg1;
- (void)tearDownLocalChangeNotifications;
- (void)setupLocalChangeNotifications;
- (void)_informPTPDelegateAboutChangesFromRemoteContextSaveNotification:(id)arg1;
- (void)_getInsertedIDs:(id)arg1 deletedIDs:(id)arg2 changedIDs:(id)arg3 ofEntityKind:(id)arg4 fromRemoteContextDidSaveNotification:(id)arg5;
- (void)_mergeChangesFromDidSaveDictionary:(id)arg1 usingObjectIDs:(_Bool)arg2;
- (void)_notifyALAssetsLibraryWithChanges:(id)arg1 usingObjectIDs:(_Bool)arg2;
- (id)pl_fetchObjectsWithIDs:(id)arg1;
- (id)pl_fetchObjectsWithIDs:(id)arg1 rootEntity:(id)arg2;
- (_Bool)_tooManyAssetChangesToHandle:(unsigned long long)arg1;
- (void)appendDelayedAlbumCountUpdatesToXPCMessage:(id)arg1;
- (void)getDelayedAlbumCountUpdates:(id *)arg1;
- (void)recordAssetForAlbumCountUpdate:(id)arg1;
- (void)recordAlbumCountUpdate:(id)arg1;
- (void)appendDelayedAlbumOrderingUpdatesToXPCMessage:(id)arg1;
- (void)getDelayedAlbumOrderingUpdates:(id *)arg1;
- (void)recordAlbumForOrderingUpdate:(id)arg1;
- (id)getAndClearRecordedAlbumForCloudDeletion;
- (void)recordAlbumForCloudDeletion:(id)arg1;
- (id)getAndClearRecordedAssetForCloudDeletion;
- (void)recordAssetForCloudDeletion:(id)arg1;
- (id)getAndClearRecordedAvalancheUUIDsForUpdate;
- (void)recordAvalancheUUIDForUpdate:(id)arg1;
- (void)getDelayedSearchIndexUpdates:(id *)arg1;
- (void)appendDelayedSearchIndexUpdatesToXPCMessage:(id)arg1;
- (void)recordAlbumForSearchIndexUpdate:(id)arg1;
- (void)recordAssetForSearchIndexUpdate:(id)arg1;
- (void)recordAdditionalAssetAttributesForSearchIndexUpdate:(id)arg1;
- (void)_recordAlbumUUIDForSearchIndexUpdate:(id)arg1 isInsert:(_Bool)arg2;
- (void)_recordAssetUUIDForSearchIndexUpdate:(id)arg1 isInsert:(_Bool)arg2;
- (void)_recordManagedObjectUUID:(id)arg1 forSearchIndexUpdateKey:(id)arg2;
- (void)getDelayedAssetsForFilesystemPersistencyUpdates:(id *)arg1;
- (void)appendDelayedAssetsForFileSystemPersistencyUpdate:(id)arg1;
- (void)recordAssetForFileSystemPersistencyUpdate:(id)arg1;
- (void)appendDelayedDupeAnalysisToXPCMessage:(id)arg1;
- (void)getDelayedDupeAnalysisNormalInserts:(id *)arg1 cloudInserts:(id *)arg2;
- (void)recordAssetForDupeAnalysis:(id)arg1;
- (void)_recordStreamAssetForDupeAnalyzis:(id)arg1;
- (void)_recordNormalAssetForDupeAnalyzis:(id)arg1;
- (void)appendDelayedCloudFeedDataToXPCMessage:(id)arg1;
- (void)getDelayedCloudFeedAlbumUpdates:(id *)arg1 assetInserts:(id *)arg2 assetUpdates:(id *)arg3 commentInserts:(id *)arg4 invitationRecordUpdates:(id *)arg5 deletionEntries:(id *)arg6;
- (void)recordInvitationRecordForCloudFeedUpdate:(id)arg1;
- (void)recordCommentForCloudFeedUpdate:(id)arg1;
- (void)recordAssetForCloudFeedUpdate:(id)arg1;
- (void)recordAlbumForCloudFeedUpdate:(id)arg1;
- (void)appendDelayedMomentDataToXPCMessage:(id)arg1;
- (void)getDelayedMomentInsertsAndUpdates:(id *)arg1 deletes:(id *)arg2;
- (void)recordAssetForMomentUpdate:(id)arg1;
- (void)registerFilesystemDeletionInfo:(id)arg1;
- (_Bool)_isValidDelete:(id)arg1;
- (void)getAndClearUpdatedObjectsAttributes:(id *)arg1 relationships:(id *)arg2;
- (void)recordManagedObjectWillSave:(id)arg1;
- (void)disconnectFromChangeHub;
- (void)connectToChangeHub;
- (_Bool)obtainPermanentIDsForObjects:(id)arg1 error:(id *)arg2;
- (_Bool)save:(id *)arg1;
- (unsigned long long)countForFetchRequest:(id)arg1 error:(id *)arg2;
- (id)executeFetchRequest:(id)arg1 error:(id *)arg2;
- (id)existingObjectWithID:(id)arg1 error:(id *)arg2;
- (_Bool)isReadOnly;
- (void)withDispatchGroup:(id)arg1 performBlock:(CDUnknownBlockType)arg2;
- (void)setGlobalValue:(id)arg1 forKey:(id)arg2;
- (id)globalValueForKey:(id)arg1;
- (long long)context:(id)arg1 shouldHandleInaccessibleFault:(id)arg2 forObjectID:(id)arg3 andTrigger:(id)arg4;
@property(readonly, nonatomic) _Bool isUserInterfaceContext;
@property(nonatomic) id <PLManagedObjectContextPTPNotificationDelegate> ptpNotificationDelegate; // @synthesize ptpNotificationDelegate=_ptpNotificationDelegate;
@property(nonatomic) PLPhotoLibrary *photoLibrary;
- (void)dealloc;
- (id)initWithConcurrencyType:(unsigned long long)arg1 useSharedPersistentStoreCoordinator:(_Bool)arg2;

@end

@interface PLDisconnectedManagedObjectContext : PLManagedObjectContext
{
}

+ (_Bool)canMergeRemoteChanges;
+ (_Bool)useModelMigratorToCreateDatabase;
- (void)disconnectFromChangeHub;
- (void)connectToChangeHub;

@end

@interface PLDiskSpaceManagement : NSObject
{
}

+ (unsigned long long)performCloudSharingSpaceManagementWithBytesToPurge:(unsigned long long)arg1 shouldFreeSpace:(_Bool)arg2 fromPhotoLibrary:(id)arg3;
+ (_Bool)_removeCloudSharedAsset:(id)arg1;
+ (unsigned long long)_scanAndDeleteCacheFilesInDirectory:(id)arg1 shouldFreeSpace:(_Bool)arg2 bytesToPurge:(unsigned long long)arg3;

@end

@interface PLDupeManager : NSObject
{
    NSMutableArray *_normalAssetsObjectIDsToAnalyze;
    NSMutableDictionary *_cloudAssetsToAnalyze;
    NSMutableArray *_assetsWithUpdatedVisibility;
    _Bool _doneWithCloudAssets;
    _Bool _isRebuilding;
    NSMutableSet *_normalInserts;
    NSMutableSet *_cloudInserts;
    PLPhotoLibrary *_photoLibrary;
    long long _once;
    NSCountedSet *_pauseReasons;
    NSSet *_softPauseReasons;
    double _rebuildStartTime;
}

+ (_Bool)_computeHashForAsset:(id)arg1;
+ (id)hashForAsset:(id)arg1;
+ (void)_setPlaceHolderHashOnAsset:(id)arg1;
+ (id)placeholderHash;
+ (id)_hashForFileAtPath:(id)arg1 utiType:(id)arg2;
+ (_Bool)resetDupesAnalysisForOfflineStore:(id)arg1 resetHashes:(_Bool)arg2;
+ (_Bool)_resetDupesAnalysisInManagedObjectContext:(id)arg1 resetHashes:(_Bool)arg2;
+ (id)sharedInstance;
- (void)resumeAnalysisWithReason:(id)arg1;
- (void)pauseAnalysisWithReason:(id)arg1;
- (void)_resetSoftPauseReasons;
- (void)persistPublicGlobalUUIDsForAssets:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)launchDupeAnalysisIfNeeded;
- (void)analyzeDupesWithNormalInserts:(id)arg1 cloudInserts:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)_analyzeDupes;
- (void)_continueAnalysis;
- (short)_analyzeDupesForCloudInsertsForManagedObjectContext:(id)arg1;
- (_Bool)_analyzeDupeForCloudAssetsAndHashes:(id)arg1 andPublicGlobalUUIDs:(id)arg2 forManagedObjectContext:(id)arg3;
- (short)_analyzeDupesForNormalInsertsForManagedObjectContext:(id)arg1;
- (void)resetDupesAnalysisResetHashes:(_Bool)arg1;
- (void)_analyzeDupesForRebuild;
- (void)_continueAnalysisForRebuildOrPause;
- (void)_continueAnalysisForRebuild;
- (void)_performAnalysisTransaction:(CDUnknownBlockType)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (short)_adjustCloudAssetVisibilityStateForManagedObjectContext:(id)arg1;
- (short)_computeAssetHashesForManagedObjectContext:(id)arg1;
- (short)_analyzeNormalAssetsForManagedObjectContext:(id)arg1;
- (void)_analyzeDupeForNormalAsset:(id)arg1;
- (void)_removeCloudAssetFromAnalysis:(id)arg1;
- (id)_duplicateCloudAssetForHash:(id)arg1 orPublicGlobalUUID:(id)arg2;
- (_Bool)_prepareCloudAssetsToAnalyzeForManagedObjectContext:(id)arg1;
- (void)_updateVisibilityState:(short)arg1 forAsset:(id)arg2;
- (void)_noteAssetVisibilityDidChange:(id)arg1;
- (short)_computeCloudAssetHashesForManagedObjectContext:(id)arg1;
@property(readonly, nonatomic) PLPhotoLibrary *photoLibrary;
- (void)dealloc;
- (id)init;

@end

@interface PLEmailAddressManager : NSObject
{
    NSMutableDictionary *_keysForEmails;
    NSMutableDictionary *_emailsForKey;
    int _maxKey;
    NSString *_plistPath;
}

+ (id)sharedManager;
- (void)_loadDictionariesIfNeeded;
- (id)emailAddressForKey:(id)arg1;
- (id)keyForEmailAddress:(id)arg1;
- (void)dealloc;

@end

@interface PLImageSource : NSObject
{
}

@property(readonly, nonatomic) unsigned short sourceIdentifier;
- (id)newImageForAsset:(id)arg1 createMetadata:(id *)arg2;

@end

@interface PLPhotoLibraryImageSource : PLImageSource
{
    int _imageFormat;
}

- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)newImageForAsset:(id)arg1 createMetadata:(id *)arg2;
- (id)description;
@property(readonly, nonatomic) int imageFormat;
- (unsigned short)sourceIdentifier;
- (id)initWithImageFormat:(int)arg1;

@end

@interface PLFaceDetectingImageSource : PLPhotoLibraryImageSource
{
}

- (unsigned short)sourceIdentifier;
- (id)newImageForAsset:(id)arg1 createMetadata:(id *)arg2;

@end

@interface _PLFetchingAlbum : PLGenericAlbum
{
}

+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (id)entityInManagedObjectContext:(id)arg1;
+ (id)entityName;
+ (id)insertInManagedObjectContext:(id)arg1;

@end

@interface PLFetchingAlbum : _PLFetchingAlbum
{
    unsigned long long _countForDisplay;
    unsigned long long _photosCount;
    unsigned long long _videosCount;
    int _emptyState;
    NSArray *_cachedKeyAssets;
    NSPredicate *_ALAssetsGroupFilterPredicate;
}

+ (id)sortDescriptorsForAlbumKind:(int)arg1;
+ (id)predicateForAlbumKind:(int)arg1;
+ (id)_panoramasAlbumPredicate;
+ (_Bool)contextShouldIgnoreChangesForALAssetsGroupFilterPredicate;
+ (_Bool)contextShouldIgnoreChangesForFetchRequest;
+ (_Bool)contextShouldIgnoreChangesForFetchedAssetsSet;
+ (_Bool)contextShouldIgnoreChangesForFetchedAssets;
@property(retain, nonatomic) NSPredicate *ALAssetsGroupFilterPredicate; // @synthesize ALAssetsGroupFilterPredicate=_ALAssetsGroupFilterPredicate;
- (_Bool)mayHaveAssetsInCommon:(id)arg1;
- (id)fastPointerAccessSetForAssets:(id)arg1;
@property(readonly, nonatomic) _Bool hasAssetsCache;
- (void)updateSnapshotAndClearCaches:(id)arg1;
- (void)setTertiaryKeyAsset:(id)arg1;
- (void)setSecondaryKeyAsset:(id)arg1;
- (void)setKeyAsset:(id)arg1;
- (id)tertiaryKeyAsset;
- (id)secondaryKeyAsset;
- (id)keyAsset;
- (id)_cachedKeyAssets;
- (id)filteredIndexesForPredicate:(id)arg1;
- (void)batchFetchAssets:(id)arg1;
- (_Bool)canPerformEditOperation:(unsigned long long)arg1;
- (unsigned long long)countForAssetsOfKind:(short)arg1;
- (unsigned long long)_fetchedCountForAssetsOfKind:(short)arg1;
- (_Bool)isEmpty;
- (unsigned long long)approximateCount;
- (unsigned long long)count;
- (id)mutableAssets;
- (void)setAssets:(id)arg1;
- (id)assets;
- (id)_performFetchWithRequest:(id)arg1;
- (id)primitiveAssets;
@property(readonly, retain, nonatomic) NSPredicate *extraFilterPredicate;
@property(retain, nonatomic) NSFetchRequest *fetchRequest;
- (void)setupFetchRequest;
- (unsigned long long)batchSize;
- (void)didTurnIntoFault;
- (void)awakeFromInsert;
- (void)awakeFromFetch;
- (void)dealloc;

// Remaining properties
@property(retain, nonatomic) NSData *customQueryParameters; // @dynamic customQueryParameters;
@property(retain, nonatomic) NSString *customQueryType; // @dynamic customQueryType;
@property(retain, nonatomic) NSOrderedSet *fetchedAssets; // @dynamic fetchedAssets;

@end

@interface PLFileSystemAssetImporter : NSObject
{
    PLPhotoLibrary *_photoLibrary;
    NSString *_photoLibraryStoreUUID;
    NSMutableIndexSet *_thumbIndexes;
    _Bool _hasProcessedAnyAssets;
    NSMutableSet *_existingUUIDs;
    NSMutableDictionary *_existingUUIDsByPath;
    NSMutableDictionary *_existingOIDsByUUID;
    unsigned long long _thumbnailBatchFetchSize;
}

@property(nonatomic) unsigned long long thumbnailBatchFetchSize; // @synthesize thumbnailBatchFetchSize=_thumbnailBatchFetchSize;
@property(retain, nonatomic) NSMutableDictionary *existingOIDsByUUID; // @synthesize existingOIDsByUUID=_existingOIDsByUUID;
@property(retain, nonatomic) NSMutableDictionary *existingUUIDsByPath; // @synthesize existingUUIDsByPath=_existingUUIDsByPath;
@property(retain, nonatomic) NSMutableSet *existingUUIDs; // @synthesize existingUUIDs=_existingUUIDs;
- (unsigned long long)nextThumbnailIndex;
- (void)addAvailableThumbnailIndex:(unsigned long long)arg1;
- (_Bool)setupVideoAsset:(id)arg1 withURL:(id)arg2;
- (_Bool)setupPhotoAsset:(id)arg1 withURL:(id)arg2;
- (void)setModificationAndCreationDateOnAsset:(id)arg1 withURL:(id)arg2;
- (id)addAssetWithURLs:(id)arg1;
- (id)addAssetWithURLs:(id)arg1 forceInsert:(_Bool)arg2 forceUpdate:(_Bool)arg3;
- (id)assetURLisInDatabase:(id)arg1;
- (id)_addAssetWithURL:(id)arg1 existingOID:(id)arg2;
- (void)dealloc;
- (id)initWithPhotoLibrary:(id)arg1;

@end

@interface PLFileSystemImportAsset : NSObject
{
    int assetKind;
    NSMutableSet *_urls;
    NSDate *_dateCreated;
    struct NSObject *_destinationAlbum;
}

@property(nonatomic) int assetKind; // @synthesize assetKind;
@property(retain, nonatomic) NSObject<PLAlbumProtocol> *destinationAlbum; // @synthesize destinationAlbum=_destinationAlbum;
@property(retain, nonatomic) NSDate *dateCreated; // @synthesize dateCreated=_dateCreated;
@property(retain, nonatomic) NSMutableSet *urls; // @synthesize urls=_urls;
- (id)description;
- (long long)compare:(id)arg1;
- (void)dealloc;
- (_Bool)isCameraKit;
- (id)initWithURLs:(id)arg1 creationDate:(id)arg2 destinationAlbum:(struct NSObject *)arg3 assetKind:(int)arg4;

@end

@interface PLFilesystemDeletionInfo : NSObject
{
    NSString *_directory;
    NSString *_filename;
    NSURL *_objectIDURI;
    NSArray *_fileURLs;
    unsigned long long _thumbnailIndex;
    NSString *_thumbnailIdentifier;
    NSString *_uuid;
    unsigned long long _timestamp;
}

+ (id)deletionInfoWithAsset:(id)arg1;
@property(readonly) unsigned long long timestamp; // @synthesize timestamp=_timestamp;
@property(readonly, retain) NSString *uuid; // @synthesize uuid=_uuid;
@property(retain) NSString *thumbnailIdentifier; // @synthesize thumbnailIdentifier=_thumbnailIdentifier;
@property(readonly) unsigned long long thumbnailIndex; // @synthesize thumbnailIndex=_thumbnailIndex;
@property(retain) NSArray *fileURLs; // @synthesize fileURLs=_fileURLs;
@property(readonly, retain) NSURL *objectIDURI; // @synthesize objectIDURI=_objectIDURI;
@property(readonly, retain) NSString *filename; // @synthesize filename=_filename;
@property(readonly, retain) NSString *directory; // @synthesize directory=_directory;
- (id)description;
- (void)dealloc;
- (id)initWithObjectIDURI:(id)arg1 directory:(id)arg2 filename:(id)arg3 fileURLs:(id)arg4 thumbnailIndex:(unsigned long long)arg5 thumbnailIdentifier:(id)arg6 uuid:(id)arg7 timestamp:(unsigned long long)arg8;

@end

@interface PLFilteredAlbum : NSObject <PLUserEditableAlbumProtocol, PLCloudSharedAlbumProtocol, PLIndexMapperDataSource, PLIndexMappingCache>
{
    PLIndexMapper *_indexMapper;
    NSMutableIndexSet *_filteredIndexes;
    _Bool _backingAlbumSupportsEdits;
    _Bool _backingAlbumSupportsCloudShared;
    NSMutableOrderedSet *_weak_assets;
    _Bool isObservingContextChanges;
    int filter;
    struct NSObject *_backingAlbum;
    NSPredicate *predicate;
    NSArray *_filterParameters;
}

+ (id)filteredIndexesInAlbum:(struct NSObject *)arg1 predicate:(id)arg2;
+ (id)descriptionForAlbumFilter:(int)arg1 parameters:(id)arg2;
+ (id)predicateForAlbumFilter:(int)arg1 parameters:(id)arg2;
+ (struct NSObject *)unfilteredAlbum:(struct NSObject *)arg1;
+ (struct NSObject *)filteredAlbum:(struct NSObject *)arg1 intersectFilter:(int)arg2;
+ (struct NSObject *)filteredAlbum:(struct NSObject *)arg1 predicate:(id)arg2;
+ (struct NSObject *)filteredAlbum:(struct NSObject *)arg1 filter:(int)arg2 parameters:(id)arg3;
+ (struct NSObject *)filteredAlbum:(struct NSObject *)arg1 filter:(int)arg2;
@property(readonly, nonatomic) NSArray *filterParameters; // @synthesize filterParameters=_filterParameters;
@property(nonatomic) _Bool isObservingContextChanges; // @synthesize isObservingContextChanges;
@property(retain, nonatomic) NSPredicate *predicate; // @synthesize predicate;
@property(nonatomic) int filter; // @synthesize filter;
@property(retain, nonatomic) NSObject<PLAlbumProtocol> *backingAlbum; // @synthesize backingAlbum=_backingAlbum;
- (void)insertInternalUserEditableAssets:(id)arg1 atIndexes:(id)arg2 trimmedVideoPathInfo:(id)arg3 commentText:(id)arg4;
- (void)replaceFilteredAssetsAtIndexes:(id)arg1 withFilteredValues:(id)arg2;
- (void)replaceObjectInFilteredAssetsAtIndex:(unsigned long long)arg1 withObject:(id)arg2;
- (void)removeFilteredAssetsAtIndexes:(id)arg1;
- (void)insertFilteredAssets:(id)arg1 atIndexes:(id)arg2;
- (void)removeObjectFromFilteredAssetsAtIndex:(unsigned long long)arg1;
- (void)insertObject:(id)arg1 inFilteredAssetsAtIndex:(unsigned long long)arg2;
- (id)_editableBackingAlbum;
- (void)getFilteredAssets:(id *)arg1 range:(struct _NSRange)arg2;
- (id)filteredAssetsAtIndexes:(id)arg1;
- (id)objectInFilteredAssetsAtIndex:(unsigned long long)arg1;
- (unsigned long long)indexInFilteredAssetsOfObject:(id)arg1;
- (unsigned long long)countOfFilteredAssets;
- (Class)derivedChangeNotificationClass;
- (_Bool)mappedDataSourceChanged:(id)arg1 remoteNotificationData:(id)arg2;
- (_Bool)shouldIncludeObjectAtIndex:(unsigned long long)arg1;
- (id)currentStateForChange;
@property(readonly, copy, nonatomic) id <NSObject><NSCopying> cachedIndexMapState;
@property(readonly, copy, nonatomic) NSIndexSet *filteredIndexes;
@property(readonly, retain, nonatomic) PLIndexMapper *indexMapper;
- (id)initWithBackingAlbum:(struct NSObject *)arg1 filter:(int)arg2 parameters:(id)arg3;
- (id)initWithBackingAlbum:(struct NSObject *)arg1 predicate:(id)arg2;
- (void)_commonInitWithBackingAlbum:(struct NSObject *)arg1 predicate:(id)arg2;
- (void)reducePendingItemsCountBy:(unsigned long long)arg1;
@property(nonatomic) int pendingItemsType;
@property(nonatomic) int pendingItemsCount;
- (void)backingContextDidChange:(id)arg1;
- (void)userDeleteSubscriberRecord:(id)arg1;
- (void)getUnseenStartMarkerIndex:(unsigned long long *)arg1 count:(unsigned long long *)arg2 showsProgress:(_Bool *)arg3;
- (void)updateCloudLastContributionDateWithDate:(id)arg1;
- (void)updateCloudLastInterestingChangeDateWithDate:(id)arg1;
- (id)cloudOwnerDisplayNameIncludingEmail:(_Bool)arg1 allowsEmail:(_Bool)arg2;
@property(readonly, retain, nonatomic) NSOrderedSet *cloudAlbumSubscriberRecords;
@property(nonatomic) _Bool cloudNotificationsEnabled;
@property(readonly, retain, nonatomic) NSDate *cloudFirstRecentBatchDate;
@property(readonly, retain, nonatomic) NSString *localizedSharedWithLabel;
- (id)localizedSharedByLabelAllowsEmail:(_Bool)arg1;
@property(readonly) int cloudRelationshipStateLocalValue;
@property(readonly) int cloudRelationshipStateValue;
@property(retain, nonatomic) NSDate *cloudLastContributionDate;
@property(retain, nonatomic) NSDate *cloudCreationDate;
@property(retain, nonatomic) NSDate *cloudLastInterestingChangeDate;
@property(retain, nonatomic) NSNumber *cloudMultipleContributorsEnabledLocal;
@property(retain, nonatomic) NSNumber *cloudMultipleContributorsEnabled;
@property(retain, nonatomic) NSNumber *cloudPublicURLEnabledLocal;
@property(retain, nonatomic) NSNumber *cloudPublicURLEnabled;
@property unsigned long long unseenAssetsCountIntegerValue;
@property(retain, nonatomic) NSNumber *unseenAssetsCount;
@property(retain, nonatomic) NSOrderedSet *invitationRecords;
@property(retain, nonatomic) NSString *cloudPersonID;
@property(retain, nonatomic) NSString *publicURL;
@property(retain, nonatomic) NSDate *cloudSubscriptionDate;
@property(retain, nonatomic) NSString *cloudOwnerHashedPersonID;
@property(retain, nonatomic) NSString *cloudOwnerEmail;
@property(retain, nonatomic) NSString *cloudOwnerFullName;
@property(retain, nonatomic) NSString *cloudOwnerLastName;
@property(retain, nonatomic) NSString *cloudOwnerFirstName;
@property(retain, nonatomic) NSDictionary *cloudMetadata;
@property(retain, nonatomic) NSString *cloudGUID;
- (id)_cloudSharedBackingAlbum;
- (void)batchFetchAssets:(id)arg1;
@property(readonly, copy, nonatomic) CDUnknownBlockType sortingComparator;
@property(readonly, retain, nonatomic) NSURL *groupURL;
@property(retain, nonatomic) NSString *importSessionID;
@property(retain, nonatomic) NSDictionary *slideshowSettings;
@property(readonly, nonatomic) _Bool shouldDeleteWhenEmpty;
- (_Bool)canPerformEditOperation:(unsigned long long)arg1;
@property(readonly, copy, nonatomic) NSArray *localizedLocationNames;
@property(readonly, nonatomic) _Bool canShowAvalancheStacks;
@property(readonly, nonatomic) _Bool canShowComments;
@property(readonly, nonatomic) _Bool canContributeToCloudSharedAlbum;
@property(readonly, nonatomic) _Bool isRecentlyAddedAlbum;
@property(readonly, nonatomic) _Bool isMultipleContributorCloudSharedAlbum;
@property(readonly, nonatomic) _Bool isFamilyCloudSharedAlbum;
@property(readonly, nonatomic) _Bool isOwnedCloudSharedAlbum;
@property(readonly, nonatomic) _Bool isInTrash;
@property(readonly, nonatomic) _Bool isFolder;
@property(readonly, nonatomic) _Bool isStandInAlbum;
@property(readonly, nonatomic) _Bool isPendingPhotoStreamAlbum;
@property(readonly, nonatomic) _Bool isCloudSharedAlbum;
@property(readonly, nonatomic) _Bool isPhotoStreamAlbum;
@property(readonly, nonatomic) _Bool isWallpaperAlbum;
@property(readonly, nonatomic) _Bool isPanoramasAlbum;
@property(readonly, nonatomic) _Bool isCameraAlbum;
@property(readonly, nonatomic) _Bool isLibrary;
@property(readonly, retain, nonatomic) UIImage *posterImage;
@property(retain, nonatomic) PLManagedAsset *tertiaryKeyAsset;
@property(retain, nonatomic) PLManagedAsset *secondaryKeyAsset;
@property(retain, nonatomic) PLManagedAsset *keyAsset;
@property(readonly, copy, nonatomic) NSString *name;
@property(readonly, copy, nonatomic) NSString *localizedTitle;
@property(readonly, nonatomic) unsigned long long videosCount;
@property(readonly, nonatomic) unsigned long long photosCount;
@property(readonly, nonatomic) _Bool isEmpty;
@property(nonatomic) _Bool hasUnseenContentBoolValue;
- (unsigned long long)count;
@property(readonly, nonatomic) unsigned long long assetsCount;
@property(readonly, nonatomic) unsigned long long approximateCount;
@property(readonly, retain, nonatomic) NSMutableOrderedSet *userEditableAssets;
@property(readonly, retain, nonatomic) NSMutableOrderedSet *mutableAssets;
@property(readonly, retain, nonatomic) NSOrderedSet *assets;
@property(readonly, nonatomic) int kindValue;
@property(readonly, retain, nonatomic) NSNumber *kind;
@property(readonly, retain, nonatomic) NSString *title;
@property(readonly, retain, nonatomic) NSString *uuid;
@property(nonatomic) NSMutableOrderedSet *_assets;
@property(readonly, copy) NSString *description;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, retain, nonatomic) NSDate *endDate;
@property(readonly) unsigned long long hash;
@property(readonly, retain, nonatomic) NSDate *startDate;
@property(readonly) Class superclass;

@end

@interface PLFilteredAlbumChangeNotification : PLAssetContainerChangeNotification <PLIndexMapperDataSource, PLDerivedNotification>
{
    PLFilteredAlbum *_album;
    NSIndexSet *_oldFilteredIndexes;
    NSIndexSet *_filteredIndexes;
    PLIndexMapper *_indexMapper;
    PLAssetContainerChangeNotification *_backingNotification;
}

+ (id)notificationForDerivedObject:(id)arg1 priorChangeState:(id)arg2 forBackingObjectNotification:(id)arg3;
- (id)_changedObjects;
- (_Bool)_getOldSet:(id *)arg1 newSet:(id *)arg2;
- (id)_diffDescription;
@property(readonly, copy) NSString *description;
- (_Bool)countDidChange;
- (_Bool)keyAssetDidChange;
- (_Bool)titleDidChange;
- (_Bool)shouldReload;
- (id)album;
- (id)object;
- (void)dealloc;
- (id)initWithFilteredAlbum:(id)arg1 priorChangeState:(id)arg2 albumChangeNotification:(id)arg3;
- (id)init;
- (_Bool)shouldIncludeObjectAtIndex:(unsigned long long)arg1;
@property(copy, nonatomic) NSIndexSet *filteredIndexes;
@property(readonly, retain, nonatomic) PLIndexMapper *indexMapper;
@property(readonly, retain, nonatomic) NSIndexSet *updatedFilteredIndexes;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PLFilteredAlbumList : NSObject <PLAlbumContainer, PLIndexMapperDataSource, PLIndexMappingCache, PLDerivedAlbumListOrigin>
{
    PLIndexMapper *_indexMapper;
    NSMutableIndexSet *_filteredIndexes;
    NSMutableOrderedSet *_weak_albums;
    NSObject<PLIndexMappingCache> *_derivedAlbumLists[5];
    int filter;
    PLManagedAlbumList *backingAlbumList;
    NSPredicate *predicate;
}

+ (id)filteredAlbumList:(id)arg1 filter:(int)arg2;
@property(retain, nonatomic) NSPredicate *predicate; // @synthesize predicate;
@property(nonatomic) int filter; // @synthesize filter;
@property(retain, nonatomic) PLManagedAlbumList *backingAlbumList; // @synthesize backingAlbumList;
- (void)enumerateDerivedAlbumLists:(CDUnknownBlockType)arg1;
- (void)unregisterAllDerivedAlbums;
- (void)registerDerivedAlbumList:(struct NSObject *)arg1;
- (void)replaceFilteredAlbumsAtIndexes:(id)arg1 withFilteredValues:(id)arg2;
- (void)replaceObjectInFilteredAlbumsAtIndex:(unsigned long long)arg1 withObject:(id)arg2;
- (void)removeFilteredAlbumsAtIndexes:(id)arg1;
- (void)insertFilteredAlbums:(id)arg1 atIndexes:(id)arg2;
- (void)removeObjectFromFilteredAlbumsAtIndex:(unsigned long long)arg1;
- (void)insertObject:(id)arg1 inFilteredAlbumsAtIndex:(unsigned long long)arg2;
- (void)getFilteredAlbums:(id *)arg1 range:(struct _NSRange)arg2;
- (id)filteredAlbumsAtIndexes:(id)arg1;
- (id)objectInFilteredAlbumsAtIndex:(unsigned long long)arg1;
- (unsigned long long)indexInFilteredAlbumsOfObject:(id)arg1;
- (unsigned long long)countOfFilteredAlbums;
@property(retain, nonatomic) NSMutableOrderedSet *_albums;
- (Class)derivedChangeNotificationClass;
- (_Bool)mappedDataSourceChanged:(id)arg1 remoteNotificationData:(id)arg2;
- (_Bool)shouldIncludeObjectAtIndex:(unsigned long long)arg1;
@property(readonly, copy, nonatomic) id <NSObject><NSCopying> cachedIndexMapState;
@property(readonly, copy, nonatomic) NSIndexSet *filteredIndexes;
@property(readonly, retain, nonatomic) PLIndexMapper *indexMapper;
@property(readonly, nonatomic) unsigned long long unreadAlbumsCount;
- (void)_invalidateFilteredIndexes;
@property(readonly, retain, nonatomic) NSString *_prettyDescription;
@property(readonly, retain, nonatomic) NSString *_typeDescription;
- (id)managedObjectContext;
- (id)identifier;
- (void)_backingContextDidChange:(id)arg1;
- (id)containersRelationshipName;
- (_Bool)canEditContainers;
- (_Bool)isEmpty;
@property(readonly, nonatomic) unsigned long long containersCount;
- (id)containers;
@property(readonly, copy) NSString *description;
@property(readonly, retain, nonatomic) PLPhotoLibrary *photoLibrary;
- (_Bool)hasAtLeastOneAlbum;
@property(readonly, nonatomic) unsigned long long albumsCount;
@property(readonly, retain, nonatomic) NSMutableOrderedSet *albums;
- (void)preheatAlbumsAtIndexes:(id)arg1 forProperties:(id)arg2 relationships:(id)arg3;
- (void)preheatAlbumsForProperties:(id)arg1 relationships:(id)arg2;
- (void)updateAlbumsOrderIfNeeded;
- (_Bool)needsReordering;
- (void)setNeedsReordering;
@property(readonly, copy, nonatomic) CDUnknownBlockType albumsSortingComparator;
- (_Bool)albumHasFixedOrder:(struct NSObject *)arg1;
@property(readonly, nonatomic) _Bool isFolder;
@property(readonly, nonatomic) _Bool canEditAlbums;
@property(readonly, nonatomic) short albumListType;
- (void)dealloc;
- (id)initWithBackingAlbumList:(id)arg1 filter:(int)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PLFilteredAlbumListChangeNotification : PLAssetContainerListChangeNotification <PLIndexMapperDataSource>
{
    PLFilteredAlbumList *_albumList;
    NSIndexSet *_oldFilteredIndexes;
    NSIndexSet *_filteredIndexes;
    PLIndexMapper *_indexMapper;
    PLAssetContainerListChangeNotification *_backingNotification;
}

+ (id)notificationForDerivedObject:(id)arg1 priorChangeState:(id)arg2 forBackingObjectNotification:(id)arg3;
- (id)_changedObjects;
- (_Bool)_getOldSet:(id *)arg1 newSet:(id *)arg2;
- (id)_diffDescription;
@property(readonly, copy) NSString *description;
- (_Bool)countDidChange;
- (_Bool)shouldReload;
- (id)albumList;
- (id)object;
- (void)dealloc;
- (id)initWithFilteredAlbumList:(id)arg1 albumListChangeNotification:(id)arg2;
- (id)init;
- (_Bool)shouldIncludeObjectAtIndex:(unsigned long long)arg1;
@property(copy, nonatomic) NSIndexSet *filteredIndexes;
@property(readonly, retain, nonatomic) PLIndexMapper *indexMapper;
@property(readonly, retain, nonatomic) NSIndexSet *updatedFilteredIndexes;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PLShuffledAlbum : NSObject <PLIndexMappingCache, PLAlbumProtocol>
{
    struct __CFArray *_toBackingMap;
    struct __CFArray *_fromBackingMap;
    struct NSObject *_backingAlbum;
    PLManagedAsset *_startingAsset;
    NSMutableOrderedSet *_assets;
}

+ (struct NSObject *)unshuffledAlbum:(struct NSObject *)arg1;
+ (struct NSObject *)shuffledAlbum:(struct NSObject *)arg1 startingAsset:(id)arg2;
@property(retain, nonatomic) NSMutableOrderedSet *_assets; // @synthesize _assets;
- (void)batchFetchAssets:(id)arg1;
@property(readonly, copy, nonatomic) CDUnknownBlockType sortingComparator;
@property(readonly, retain, nonatomic) NSURL *groupURL;
@property(retain, nonatomic) NSString *importSessionID;
@property(retain, nonatomic) NSDictionary *slideshowSettings;
@property(readonly, nonatomic) _Bool shouldDeleteWhenEmpty;
- (_Bool)canPerformEditOperation:(unsigned long long)arg1;
@property(readonly, copy, nonatomic) NSArray *localizedLocationNames;
@property(readonly, nonatomic) _Bool canShowAvalancheStacks;
@property(readonly, nonatomic) _Bool canShowComments;
@property(readonly, nonatomic) _Bool canContributeToCloudSharedAlbum;
@property(readonly, nonatomic) _Bool isRecentlyAddedAlbum;
@property(readonly, nonatomic) _Bool isMultipleContributorCloudSharedAlbum;
@property(readonly, nonatomic) _Bool isFamilyCloudSharedAlbum;
@property(readonly, nonatomic) _Bool isOwnedCloudSharedAlbum;
@property(readonly, nonatomic) _Bool isInTrash;
@property(readonly, nonatomic) _Bool isFolder;
@property(readonly, nonatomic) _Bool isStandInAlbum;
@property(readonly, nonatomic) _Bool isPendingPhotoStreamAlbum;
@property(readonly, nonatomic) _Bool isCloudSharedAlbum;
@property(readonly, nonatomic) _Bool isPhotoStreamAlbum;
@property(readonly, nonatomic) _Bool isWallpaperAlbum;
@property(readonly, nonatomic) _Bool isPanoramasAlbum;
@property(readonly, nonatomic) _Bool isCameraAlbum;
@property(readonly, nonatomic) _Bool isLibrary;
@property(readonly, retain, nonatomic) UIImage *posterImage;
@property(retain, nonatomic) PLManagedAsset *tertiaryKeyAsset;
@property(retain, nonatomic) PLManagedAsset *secondaryKeyAsset;
@property(retain, nonatomic) PLManagedAsset *keyAsset;
@property(readonly, copy, nonatomic) NSString *name;
- (void)reducePendingItemsCountBy:(unsigned long long)arg1;
@property(nonatomic) int pendingItemsType;
@property(nonatomic) int pendingItemsCount;
@property(nonatomic) _Bool hasUnseenContentBoolValue;
@property(readonly, nonatomic) unsigned long long videosCount;
@property(readonly, nonatomic) unsigned long long photosCount;
@property(readonly, nonatomic) _Bool isEmpty;
- (unsigned long long)count;
@property(readonly, nonatomic) unsigned long long assetsCount;
@property(readonly, nonatomic) unsigned long long approximateCount;
@property(readonly, retain, nonatomic) NSMutableOrderedSet *mutableAssets;
@property(readonly, retain, nonatomic) NSOrderedSet *assets;
@property(readonly, copy, nonatomic) NSString *localizedTitle;
@property(readonly, retain, nonatomic) NSString *title;
@property(readonly, nonatomic) int kindValue;
@property(readonly, retain, nonatomic) NSNumber *kind;
@property(readonly, retain, nonatomic) NSString *uuid;
- (void)dealloc;
- (id)init;
@property(readonly, retain, nonatomic) PLManagedAsset *startingAsset;
@property(readonly, retain, nonatomic) NSObject<PLAlbumProtocol> *backingAlbum;
- (id)initWithBackingAlbum:(struct NSObject *)arg1 startingAsset:(id)arg2;
@property(readonly, copy) NSString *description;
- (Class)derivedChangeNotificationClass;
- (_Bool)mappedDataSourceChanged:(id)arg1 remoteNotificationData:(id)arg2;
@property(readonly, copy, nonatomic) id <NSObject><NSCopying> cachedIndexMapState;
- (void)createShuffledIndexesMaps;
- (void)createShuffledIndexesMapsIfNeeded;
- (struct __CFArray *)fromBackingMap;
- (void)replaceObjectInShuffledAssetsAtIndex:(unsigned long long)arg1 withObject:(id)arg2;
- (void)removeObjectFromShuffledAssetsAtIndex:(unsigned long long)arg1;
- (void)insertObject:(id)arg1 inShuffledAssetsAtIndex:(unsigned long long)arg2;
- (id)objectInShuffledAssetsAtIndex:(unsigned long long)arg1;
- (unsigned long long)indexInShuffledAssetsOfObject:(id)arg1;
- (unsigned long long)countOfShuffledAssets;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, retain, nonatomic) NSDate *endDate;
@property(readonly) unsigned long long hash;
@property(readonly, retain, nonatomic) NSDate *startDate;
@property(readonly) Class superclass;

@end

@interface PLFilteredShuffledAlbum : PLShuffledAlbum
{
    int _filter;
    NSPredicate *_filterPredicate;
}

+ (struct NSObject *)_shuffledAlbumWithAlbum:(struct NSObject *)arg1 filter:(int)arg2 startingAsset:(id)arg3;
@property(readonly, retain, nonatomic) NSPredicate *filterPredicate; // @synthesize filterPredicate=_filterPredicate;
@property(readonly, nonatomic) int filter; // @synthesize filter=_filter;
- (unsigned long long)count;
- (void)dealloc;
- (id)initWithBackingAlbum:(struct NSObject *)arg1 filter:(int)arg2 startingAsset:(id)arg3;
- (struct NSObject *)unshuffledAlbum;
- (void)createShuffledIndexesMaps;

@end

@interface PLForegroundMonitor : NSObject
{
    NSObject<OS_dispatch_queue> *_queue;
    NSCountedSet *_interestingApplications;
    NSMutableSet *_foregroundApplications;
    NSMapTable *_observers;
    _Bool _isMonitoringApplicationStates;
}

+ (id)sharedInstance;
- (void)_applicationStateDidChange:(id)arg1;
- (void)_applicationDidMoveToBackgroundLocked:(id)arg1;
- (void)_applicationDidMoveToForegroundLocked:(id)arg1;
- (void)_stopMonitoringApplicationStatesLocked;
- (void)_startMonitoringApplicationStatesLocked;
- (void)removeForegroundObserver:(id)arg1 context:(id)arg2;
- (void)addForegroundObserver:(id)arg1 context:(id)arg2;
- (void)stopWatchingApplicationWithBundleIdentifier:(id)arg1;
- (void)startWatchingApplicationWithBundleIdentifier:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface PLImageCache : NSObject
{
    PLImageLoadingThread *_loader;
    PLImageCacheList *_cacheList;
}

- (id)newImageLoadingQueue;
- (void)_addImageToCache:(id)arg1;
- (void)invalidateCachedImageForSource:(id)arg1 asset:(id)arg2;
- (id)cachedImageFromSource:(id)arg1 forAsset:(id)arg2 loadIfNeeded:(_Bool)arg3 synchronously:(_Bool)arg4 priority:(int)arg5 forImageLoadingQueue:(id)arg6;
- (id)_cachedImageFromSource:(id)arg1 asset:(id)arg2;
- (void)_uncacheImage:(id)arg1;
- (id)_imageLoader;
- (void)dealloc;
- (id)init;
- (void)resumeLoading;
- (void)pauseLoading;
- (void)cancelLoadFromSource:(id)arg1 asset:(id)arg2 imageLoadingQueue:(id)arg3;
- (void)removeImageLoadingQueue:(id)arg1;
- (id)newCachedImageWithImageContents:(void *)arg1 orientation:(long long)arg2 metadata:(id)arg3 fromSource:(id)arg4 asset:(id)arg5;
- (id)cachedImageFromSource:(id)arg1 asset:(id)arg2 loadIfNeeded:(_Bool)arg3 synchronously:(_Bool)arg4 priority:(int)arg5 forImageLoadingQueue:(id)arg6 completion:(CDUnknownBlockType)arg7;

@end

@interface PLImageCacheList : NSObject
{
    NSObject<OS_dispatch_queue> *_isolation;
    unsigned int _length;
    unsigned int _lastFailLocation;
    id *_keys;
    unsigned long long *_keyHashes;
    id *_images;
    PLLoadRequestKey *_dummy[1];
}

+ (id)newImageCacheList;
- (void)removeImageForKey:(id)arg1;
- (id)imageForKey:(id)arg1;
- (void)setImage:(id)arg1 forKey:(id)arg2;
- (void)dealloc;
- (id)_init;
- (id)init;

@end

@interface PLImageLoadRequest : NSObject
{
    NSManagedObjectID *_assetID;
    PLImageSource *_source;
    NSMutableSet *_queues;
    int _priority;
    NSMutableArray *_completionBlocks;
    PLLoadRequestKey *_key;
}

+ (id)requestWithAsset:(id)arg1 source:(id)arg2 priority:(int)arg3 completion:(CDUnknownBlockType)arg4 loadingQueue:(id)arg5;
@property(readonly, retain, nonatomic) PLImageSource *source; // @synthesize source=_source;
@property(nonatomic) int priority; // @synthesize priority=_priority;
- (void)notifyImageLoadingQueuesOfImageAvailability:(id)arg1;
- (_Bool)someImageLoadingQueuesRegistered;
- (_Bool)isImageLoadingQueueRegistered:(id)arg1;
- (void)deregisterImageLoadingQueue:(id)arg1;
- (void)registerImageLoadingQueue:(id)arg1;
- (id)debugDescription;
- (void)addCompletionBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) NSArray *completionBlocks;
- (_Bool)isEqual:(id)arg1;
@property(readonly, retain, nonatomic) PLLoadRequestKey *key;
- (id)assetInPhotoLibrary:(id)arg1;
- (void)dealloc;
- (id)initWithAsset:(id)arg1 source:(id)arg2 priority:(int)arg3;

@end

@interface PLImageLoadingQueue : NSObject
{
    id <PLImageLoadingQueueDelegate> _delegate;
    PLImageCache *_cache;
    NSLock *_lock;
}

@property(nonatomic) id <PLImageLoadingQueueDelegate> delegate; // @synthesize delegate=_delegate;
- (void)imageIsAvailable:(id)arg1 forAsset:(id)arg2 fromSource:(id)arg3 completionBlocks:(id)arg4;
- (void)invalidateImageFromSource:(id)arg1 forAsset:(id)arg2;
- (void)cancelLoadFromSource:(id)arg1 forAsset:(id)arg2;
- (id)loadImageSynchronously:(_Bool)arg1 fromSource:(id)arg2 forAsset:(id)arg3 priority:(int)arg4 completion:(CDUnknownBlockType)arg5;
- (id)loadImageSynchronously:(_Bool)arg1 fromSource:(id)arg2 forAsset:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (id)loadImageSynchronously:(_Bool)arg1 fromSource:(id)arg2 forAsset:(id)arg3 loadIfNeeded:(_Bool)arg4;
- (id)loadImageSynchronously:(_Bool)arg1 fromSource:(id)arg2 forAsset:(id)arg3 priority:(int)arg4;
- (id)loadImageSynchronously:(_Bool)arg1 fromSource:(id)arg2 forAsset:(id)arg3;
- (void)resumeLoading;
- (void)pauseLoading;
- (void)stopLoading;
- (void)dealloc;
- (id)initWithImageCache:(id)arg1;

@end

@interface PLImageLoadingThread : NSObject
{
    _Bool _running;
    _Bool _paused;
    _Bool _canceled;
    NSMutableSet *_queues;
    NSMutableDictionary *_requestsByKey;
    NSObject<OS_dispatch_queue> *_isolation;
    NSObject<OS_dispatch_queue> *_workQueue;
    NSObject<OS_dispatch_queue> *_highestPriorityQueue;
    NSMutableArray *_highestPriorityRequests;
    NSObject<OS_dispatch_queue> *_highPriorityQueue;
    NSMutableArray *_highPriorityRequests;
    NSObject<OS_dispatch_queue> *_normalPriorityQueue;
    NSMutableArray *_normalPriorityRequests;
    PLPhotoLibrary *_library;
    PLImageCache *_weak_cache;
}

- (void)_serviceRequest:(id)arg1;
- (void)_serviceRequestFrom:(id)arg1;
- (_Bool)_dequeueRequest:(id)arg1;
- (void)_requeueRequest:(id)arg1 oldPriority:(int)arg2;
- (void)_enqueueRequest:(id)arg1;
- (void)cancelLoadFromSource:(id)arg1 asset:(id)arg2 imageLoadingQueue:(id)arg3;
- (id)loadImageFromSource:(id)arg1 asset:(id)arg2 forImageLoadingQueue:(id)arg3 synchronously:(_Bool)arg4 priority:(int)arg5 completion:(CDUnknownBlockType)arg6;
- (void)removeImageLoadingQueue:(id)arg1;
- (void)addImageLoadingQueue:(id)arg1;
- (void)resume;
- (void)pause;
- (void)stop;
- (void)cacheWasDeallocated;
- (void)_start;
- (void)dealloc;
- (id)_imageCache;
- (void)_setImageCache:(id)arg1;
- (id)initWithImageCache:(id)arg1;

@end

@interface PLImageTable : NSObject <PLThumbPersistenceManager>
{
    int _format;
    NSString *_path;
    struct CGSize _thumbnailSize;
    int _imageRowBytes;
    int _imageLength;
    int _entryLength;
    _Bool _readOnly;
    _Bool _dying;
    int _fid;
    long long _fileLength;
    long long _entryCount;
    unsigned long long _segmentLength;
    unsigned long long _segmentCount;
    NSMutableArray *_allSegments;
    NSMutableIndexSet *_preheatIndexes;
    NSObject<OS_dispatch_queue> *_preheatIndexIsolation;
    NSObject<OS_dispatch_queue> *_preheatQueue;
}

+ (void)writeImage:(id)arg1 toData:(id *)arg2 thumbnailFormat:(int)arg3 videoDuration:(id)arg4 width:(int *)arg5 height:(int *)arg6 bytesPerRow:(int *)arg7 dataWidth:(int *)arg8 dataHeight:(int *)arg9 dataOffset:(int *)arg10;
+ (void)releaseSegmentCache;
@property(readonly, nonatomic) int imageLength; // @synthesize imageLength=_imageLength;
@property(readonly, nonatomic) int imageRowBytes; // @synthesize imageRowBytes=_imageRowBytes;
@property(readonly, nonatomic) int imageFormat; // @synthesize imageFormat=_format;
@property(readonly, nonatomic) NSString *path; // @synthesize path=_path;
- (id)originalPreheatItemForAsset:(id)arg1 optimalSourcePixelSize:(struct CGSize)arg2 options:(unsigned int)arg3;
- (id)preheatItemForAsset:(id)arg1 format:(int)arg2 optimalSourcePixelSize:(struct CGSize)arg3 options:(unsigned int)arg4;
- (id)imageDataAtIndex:(unsigned long long)arg1 width:(int *)arg2 height:(int *)arg3 bytesPerRow:(int *)arg4 dataWidth:(int *)arg5 dataHeight:(int *)arg6 dataOffset:(int *)arg7;
- (void)preheatImageDataAtIndex:(unsigned long long)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)preheatImageDataAtIndexes:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)_doPreheatWithCompletionHandler:(CDUnknownBlockType)arg1;
- (id)_getAndClearPreheatIndexes;
- (id)imageDataWithIdentifier:(id)arg1 orIndex:(unsigned long long)arg2 width:(int *)arg3 height:(int *)arg4 bytesPerRow:(int *)arg5 dataWidth:(int *)arg6 dataHeight:(int *)arg7 dataOffset:(int *)arg8;
- (id)_debugDescription;
- (void)finishUnicornEntryAtIndex:(unsigned long long)arg1 withImageData:(id)arg2 imageSize:(struct CGSize)arg3 asset:(id)arg4;
- (void)setImageDataForEntry:(const void *)arg1 withIdentifier:(id)arg2 orIndex:(unsigned long long)arg3 asset:(id)arg4;
- (void)setImageForEntry:(id)arg1 withIdentifier:(id)arg2 orIndex:(unsigned long long)arg3 videoDuration:(id)arg4 photoUUID:(id)arg5;
@property(readonly, nonatomic) struct CGSize imageSize;
- (void)_verifyThumbnailDataForIndex:(unsigned long long)arg1 uuid:(id)arg2;
- (void)compactWithOccupiedIndexes:(id)arg1;
- (id)preflightCompactionWithOccupiedIndexes:(id)arg1;
- (_Bool)_compactWithOccupiedIndexes:(id)arg1 outPhotoUUIDToIndexMap:(id *)arg2;
@property(readonly, nonatomic) NSDictionary *photoUUIDToIndexMap;
- (void)endThumbnailSafePropertyUpdatesOnAsset:(id)arg1 withToken:(id)arg2;
- (id)beginThumbnailSafePropertyUpdatesOnAsset:(id)arg1;
- (_Bool)copyEntryFromOriginalAsset:(id)arg1 toAsset:(id)arg2;
- (void)deleteEntryWithIdentifier:(id)arg1 orIndex:(unsigned long long)arg2 uuid:(id)arg3;
- (void)_flushEntryAtAddress:(void *)arg1;
- (void)_flushEntryAtAddress:(void *)arg1 count:(int)arg2;
- (void)_addEntriesIfNecessaryForIndex:(long long)arg1;
- (void)_setEntryCount:(long long)arg1;
- (long long)entryCount;
- (void)_adviseWillNeedEntriesInRange:(struct _NSRange)arg1;
- (id)dataForEntryAtIndex:(unsigned long long)arg1 createIfNeeded:(_Bool)arg2;
- (void)_updateSegmentCount;
- (void)_reloadSegmentAtIndex:(long long)arg1;
- (void)_releaseSegment:(id)arg1;
- (void)_releaseSegmentAtIndex:(long long)arg1;
- (id)_segmentAtIndex:(long long)arg1;
- (_Bool)usesThumbIdentifiers;
@property(readonly, nonatomic) _Bool isReadOnly;
- (unsigned long long)_segmentLength;
- (int)_fileDescriptor;
- (void)dealloc;
@property(readonly, nonatomic) int imageHeight;
@property(readonly, nonatomic) int imageWidth;
- (id)initWithPath:(id)arg1 imageFormat:(int)arg2;
- (id)initWithPath:(id)arg1 imageFormat:(int)arg2 readOnly:(_Bool)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PLImageTableSegment : NSObject
{
    PLImageTable *_imageTable;
    unsigned long long _index;
    void *_ptr;
    unsigned long long _length;
    _Bool _dying;
}

- (void *)bytes;
- (void)dealloc;
- (oneway void)release;
- (id)initWithImageTable:(id)arg1 offset:(long long)arg2 length:(unsigned long long)arg3;
- (id)initWithImageTable:(id)arg1 index:(unsigned long long)arg2 length:(unsigned long long)arg3 idealAddress:(void *)arg4;

@end

@interface PLImageWriter : NSObject <PLPhotoBakedThumbnailsDelegate>
{
    NSMutableArray *_highPriorityJobs;
    NSCountedSet *_unfinishedHighPriorityJobs;
    unsigned long long _highPrioritySequentialJobCount;
    NSMutableArray *_lowPriorityJobs;
    NSCountedSet *_unfinishedLowPriorityJobs;
    NSRecursiveLock *_jobsLock;
    int _unfinishedJobCount;
    int _jobQueueAvailabilityToken;
    _Bool _writerThreadRunning;
    _Bool _databaseIsCorrupt;
    PLXPCTransaction *_transaction;
    NSMutableDictionary *_inProgressAvalancheFds;
}

+ (void)decorateThumbnailInRect:(struct CGRect)arg1 size:(struct CGSize)arg2 duration:(id)arg3 inContext:(struct CGContext *)arg4 format:(int)arg5;
+ (void)decorateThumbnail:(id)arg1 inContext:(struct CGContext *)arg2;
+ (_Bool)setAdjustmentsForNewPhoto:(id)arg1 withEffectFilterName:(id)arg2 filteredImagePath:(id)arg3 isSubstandardRender:(_Bool)arg4;
+ (id)sharedWriter;
- (void)_writerThread;
- (void)_processJob:(id)arg1;
- (void)_processSyncedVideoSaveJob:(id)arg1;
- (void)_processVideoSaveJob:(id)arg1;
- (_Bool)_sufficientDiskSpaceToCopyVideoAtPath:(id)arg1;
- (void)_setAdjustmentsForNewVideo:(id)arg1 withAdjustmentsDictionary:(id)arg2;
- (void)_processVideoJob:(id)arg1;
- (void)decorateThumbnail:(id)arg1 inContext:(struct CGContext *)arg2;
- (void)_decorateThumbnail:(id)arg1;
- (void)_processDaemonJob:(id)arg1;
- (void)_processCrashRecoveryJob:(id)arg1;
- (void)_handleAvalancheCrashRecovery:(id)arg1;
- (void)_processIngestedSyncedAssetJob:(id)arg1;
- (void)_processSavePhotoStreamImageToCameraRollJob:(id)arg1;
- (void)_processReenqueueAssetUUIDsToPhotoStreamJob:(id)arg1;
- (void)_enablePhotoStreamJob:(id)arg1;
- (void)_processDeletePhotoStreamAssetsWithUUIDs:(id)arg1;
- (void)_processDeletePhotoStreamDataJob:(id)arg1;
- (void)_processAutodeleteEmptyAlbumJob:(id)arg1;
- (void)_processImportImageJob:(id)arg1;
- (void)_processAvalancheJob:(id)arg1;
- (void)_processBatchImageJob:(id)arg1;
- (void)_removeInProgressExtendedAttributesForFileAtURL:(id)arg1;
- (void)_processImageJob:(id)arg1;
- (void)setAvalancheInProgress:(_Bool)arg1 uuid:(id)arg2;
- (id)uuidFromIncomingFilename:(id)arg1;
- (void)_removeTransientKeys:(id)arg1;
- (id)pathForNewAssetPathAtAlbumDirectoryPath:(id)arg1 assetType:(unsigned int)arg2 extension:(id)arg3;
- (id)cameraAssetPathForNewAssetWithExtension:(id)arg1;
- (_Bool)enqueueJob:(id)arg1;
- (void)_decrementJobCount:(id)arg1;
- (void)_incrementJobCount:(id)arg1;
- (void)_postJobQueueNotificationIsAvailable:(_Bool)arg1;
- (_Bool)canEnqueueJob:(id)arg1;
- (_Bool)_isHighPriorityJob:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface PLImportFileManager : NSObject
{
}

+ (_Bool)isCameraDirectoryFolderName:(id)arg1;
+ (_Bool)isImportDirectoryFolderName:(id)arg1;
- (_Bool)removeUnusedDCIMDirectoryAtPath:(id)arg1;
- (id)nextAvailableFilePathInDirectory:(id)arg1 withExtension:(id)arg2;
- (id)urlForNewDCIMFolderWithFolderNumber:(long long *)arg1;
- (id)_DCIMFolderNameWithNumber:(long long)arg1;
- (id)_dcimDirectory;

@end

@interface PLInFlightAssetsAlbum : NSObject <PLAlbumProtocol, PLIndexMappingCache, PLDerivedAlbumOrigin>
{
    NSFetchRequest *_fetchRequest;
    NSMutableOrderedSet *_albumOIDs;
    NSMutableOrderedSet *_inflightAssets;
    unsigned long long _photosCount;
    unsigned long long _videosCount;
    NSCache *__assetCache;
    PLManagedAlbum *_backingAlbum;
    _Bool _sessionLimited;
    id _weak_assets;
    NSObject<PLIndexMappingCache> *_derivedAlbums[5];
    _Bool __notificationsEnabled;
}

+ (struct NSObject *)inFlightAssetsAlbumWithBackingAlbum:(struct NSObject *)arg1;
@property(nonatomic) _Bool _notificationsEnabled; // @synthesize _notificationsEnabled=__notificationsEnabled;
@property(readonly, retain, nonatomic) PLManagedAlbum *backingAlbum; // @synthesize backingAlbum=_backingAlbum;
- (id)filteredIndexesForPredicate:(id)arg1;
- (void)startNewSession;
@property(nonatomic) _Bool sessionLimited;
- (void)removeObjectFromMergedAssetsAtIndex:(unsigned long long)arg1;
- (void)insertObject:(id)arg1 inMergedAssetsAtIndex:(unsigned long long)arg2;
- (void)getMergedAssets:(id *)arg1 range:(struct _NSRange)arg2;
- (id)objectInMergedAssetsAtIndex:(unsigned long long)arg1;
- (unsigned long long)indexInMergedAssetsOfObject:(id)arg1;
- (unsigned long long)countOfMergedAssets;
- (id)managedObjectsForOIDs:(id)arg1;
- (id)managedObjectsAtAlbumIndexes:(id)arg1;
- (id)managedObjectAtAlbumIndex:(unsigned long long)arg1;
- (id)managedObjectForOID:(id)arg1;
- (unsigned long long)batchSize;
- (_Bool)hasDerivedIndexMappers;
- (void)enumerateDerivedAlbums:(CDUnknownBlockType)arg1;
- (void)unregisterAllDerivedAlbums;
- (void)registerDerivedAlbum:(struct NSObject *)arg1;
- (void)setUINotificationsEnabled:(_Bool)arg1;
- (void)clearAssetCaches;
@property(readonly, copy, nonatomic) CDUnknownBlockType sortingComparator;
- (void)batchFetchAssets:(id)arg1;
- (id)assetsByObjectIDAtIndexes:(id)arg1;
- (void)reducePendingItemsCountBy:(unsigned long long)arg1;
@property(nonatomic) int pendingItemsType;
@property(nonatomic) int pendingItemsCount;
@property(readonly, retain, nonatomic) NSURL *groupURL;
@property(retain, nonatomic) NSString *importSessionID;
@property(retain, nonatomic) NSDictionary *slideshowSettings;
@property(readonly, nonatomic) _Bool shouldDeleteWhenEmpty;
- (_Bool)canPerformEditOperation:(unsigned long long)arg1;
@property(readonly, copy, nonatomic) NSArray *localizedLocationNames;
@property(readonly, nonatomic) _Bool canShowAvalancheStacks;
@property(readonly, nonatomic) _Bool canShowComments;
@property(readonly, nonatomic) _Bool canContributeToCloudSharedAlbum;
@property(readonly, nonatomic) _Bool isRecentlyAddedAlbum;
@property(readonly, nonatomic) _Bool isMultipleContributorCloudSharedAlbum;
@property(readonly, nonatomic) _Bool isFamilyCloudSharedAlbum;
@property(readonly, nonatomic) _Bool isOwnedCloudSharedAlbum;
@property(readonly, nonatomic) _Bool isInTrash;
@property(readonly, nonatomic) _Bool isFolder;
@property(readonly, nonatomic) _Bool isStandInAlbum;
@property(readonly, nonatomic) _Bool isPendingPhotoStreamAlbum;
@property(readonly, nonatomic) _Bool isCloudSharedAlbum;
@property(readonly, nonatomic) _Bool isPhotoStreamAlbum;
@property(readonly, nonatomic) _Bool isWallpaperAlbum;
@property(readonly, nonatomic) _Bool isPanoramasAlbum;
@property(readonly, nonatomic) _Bool isCameraAlbum;
@property(readonly, nonatomic) _Bool isLibrary;
@property(readonly, retain, nonatomic) UIImage *posterImage;
@property(retain, nonatomic) PLManagedAsset *tertiaryKeyAsset;
@property(retain, nonatomic) PLManagedAsset *secondaryKeyAsset;
@property(retain, nonatomic) PLManagedAsset *keyAsset;
@property(readonly, copy, nonatomic) NSString *localizedTitle;
@property(nonatomic) _Bool hasUnseenContentBoolValue;
@property(readonly, nonatomic) unsigned long long videosCount;
@property(readonly, nonatomic) unsigned long long photosCount;
@property(readonly, nonatomic) _Bool isEmpty;
- (unsigned long long)count;
@property(readonly, nonatomic) unsigned long long assetsCount;
@property(readonly, nonatomic) unsigned long long approximateCount;
@property(readonly, retain, nonatomic) NSMutableOrderedSet *mutableAssets;
@property(readonly, retain, nonatomic) NSOrderedSet *assets;
@property(readonly, nonatomic) int kindValue;
@property(readonly, retain, nonatomic) NSNumber *kind;
@property(readonly, retain, nonatomic) NSString *title;
@property(readonly, retain, nonatomic) NSString *uuid;
- (unsigned long long)countForAssetsOfKind:(short)arg1;
- (unsigned long long)_fetchedCountForAssetsOfKind:(short)arg1;
- (id)_albumOIDs;
- (void)_resetAlbumOIDs;
- (id)fetchRequest;
@property(nonatomic) NSMutableOrderedSet *_assets;
- (Class)derivedChangeNotificationClass;
- (_Bool)mappedDataSourceChanged:(id)arg1 remoteNotificationData:(id)arg2;
- (id)currentStateForChange;
@property(readonly, copy, nonatomic) id <NSObject><NSCopying> cachedIndexMapState;
- (void)_fetchAndUpdateInflightAssetsWithUUIDs:(id)arg1;
- (void)removeInflightAssets:(id)arg1;
- (void)addInFlightAsset:(id)arg1;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)initWithBackingAlbum:(struct NSObject *)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, retain, nonatomic) NSDate *endDate;
@property(readonly) unsigned long long hash;
@property(readonly, copy, nonatomic) NSString *name;
@property(readonly, retain, nonatomic) NSDate *startDate;
@property(readonly) Class superclass;

@end

@interface PLInFlightAssetsAlbumChangeNotification : PLAssetContainerChangeNotification
{
    PLInFlightAssetsAlbum *_album;
    PLAssetContainerChangeNotification *_backingNotification;
    NSOrderedSet *_oldOIDs;
    NSMutableSet *_uniquedOIDs;
    _Bool _keyAssetDidChange;
}

+ (id)notificationForDerivedObject:(id)arg1 priorChangeState:(id)arg2 forBackingObjectNotification:(id)arg3;
@property(readonly, retain, nonatomic) NSOrderedSet *oldOIDs; // @synthesize oldOIDs=_oldOIDs;
@property(readonly, retain, nonatomic) PLAssetContainerChangeNotification *backingNotification; // @synthesize backingNotification=_backingNotification;
@property(readonly, retain, nonatomic) PLInFlightAssetsAlbum *album; // @synthesize album=_album;
- (id)_changedObjects;
- (_Bool)_getOldSet:(id *)arg1 newSet:(id *)arg2;
- (id)_diffDescription;
- (id)description;
- (_Bool)keyAssetDidChange;
- (_Bool)titleDidChange;
- (id)object;
- (void)dealloc;
- (id)initWithInFlightAssetsAlbum:(id)arg1 priorChangeState:(id)arg2 albumChangeNotification:(id)arg3;

@end

@interface PLIndexMapper : NSObject
{
    id <PLIndexMapperDataSource> _dataSource;
}

- (_Bool)applyContainerChangeNotification:(id)arg1 changeTypes:(int)arg2 toFilteredIndexes:(id)arg3;
- (unsigned long long)backingIndexForIndex:(unsigned long long)arg1;
- (id)backingIndexesForIndexes:(id)arg1;
- (unsigned long long)indexForBackingIndex:(unsigned long long)arg1;
- (id)indexesForBackingIndexes:(id)arg1;
- (id)initWithDataSource:(id)arg1;

@end

@interface PLInvitationRecordsChangeNotification : PLContainerChangeNotification
{
    _Bool _invitationRecordsDidChange;
    NSDictionary *_userInfo;
}

+ (id)notificationWithAlbum:(id)arg1 snapshot:(id)arg2;
- (void)_calculateDiffs;
@property(readonly, retain, nonatomic) PLGenericAlbum *album;
- (id)name;
@property(readonly, nonatomic) _Bool invitationRecordsDidChange;
- (id)userInfo;

@end

@interface PLJPEGDataImage : UIImage
{
    NSData *_plData;
}

+ (id)pl_imageWithStoredJPEGData:(id)arg1;
- (void)dealloc;
- (id)pl_imageJPEGData;

@end

@interface PLKeywordManager : NSObject
{
    PLPhotoLibrary *_photoLibrary;
    PLManagedObjectContext *_libraryContext;
    PLGatekeeperClient *_assetsdClient;
}

+ (id)writeQueue;
- (_Bool)setKeywords:(id)arg1 forAssetUUID:(id)arg2;
- (id)keywordObjectsForKeywords:(id)arg1;
- (id)keywordsForAssetWithUUID:(id)arg1;
- (id)allKeywords;
- (void)dealloc;
- (id)initWithPhotoLibrary:(id)arg1;

@end

@interface PLLargeImageLoader : NSObject <PLPreheatItemSource>
{
    int _format;
}

@property(nonatomic) int format; // @synthesize format=_format;
- (id)originalPreheatItemForAsset:(id)arg1 optimalSourcePixelSize:(struct CGSize)arg2 options:(unsigned int)arg3;
- (id)preheatItemForAsset:(id)arg1 format:(int)arg2 optimalSourcePixelSize:(struct CGSize)arg3 options:(unsigned int)arg4;
- (id)initWithFormat:(int)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PLLoadRequestKey : NSObject <NSCopying>
{
    unsigned short _sourceID;
    NSManagedObjectID *_objectID;
    unsigned long long _hash;
}

+ (id)keyWithSource:(id)arg1 asset:(id)arg2;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;

@end

@interface PLLocationController : NSObject <CLLocationManagerDelegate>
{
    CLLocationManager *_locationManager;
    NSMutableArray *_locationPendingAssets;
    NSDictionary *_exifDictionary;
    NSString *_locationStr;
    _Bool _isEnabled;
    _Bool _isUpdating;
    _Bool _isHeadingEnabled;
}

+ (id)sharedInstance;
+ (void)setUsesEffectiveBundleIdentifier:(_Bool)arg1;
+ (_Bool)usesEffectiveBundleIdentifier;
- (void)_assetContainerChanged:(id)arg1;
- (void)locationManager:(id)arg1 didUpdateLocations:(id)arg2;
- (void)_updatePendingAssets;
- (void)addLocationToMediaWithAssetURLWhenAvailable:(id)arg1 deviceOrientation:(int)arg2 cameraWasRearFacing:(_Bool)arg3;
- (_Bool)_addLocationToAsset:(id)arg1;
- (id)locationString;
- (id)locationDictionaryForImageWithDeviceOrientation:(int)arg1 rearFacingCamera:(_Bool)arg2;
- (id)location;
- (void)_stopUpdating;
- (void)_startUpdating;
- (void)setHeadingEnabled:(_Bool)arg1;
- (void)setEnabled:(_Bool)arg1;
- (void)_applicationStateChanged:(id)arg1;
- (void)_updateLocationRunState;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PLLocationUtils : NSObject
{
}

+ (_Bool)canUseCoordinate:(CDStruct_c3b9c2ee)arg1;

@end

@interface _PLManagedAdjustment : PLManagedObject
{
}

+ (id)entityInManagedObjectContext:(id)arg1;
+ (id)entityName;
+ (id)insertInManagedObjectContext:(id)arg1;

@end

@interface PLManagedAdjustment : _PLManagedAdjustment
{
}

+ (void)fixupAssetSizeFromAdjustments:(id)arg1;
+ (id)ciFiltersForAdjustmentsOnManagedAsset:(id)arg1 forDestinationImageSize:(struct CGSize)arg2 withOriginalImageSize:(struct CGSize)arg3 effectFilterCount:(unsigned long long *)arg4;
+ (id)ciFiltersForAdjustmentsOnManagedAsset:(id)arg1 forDestinationImageSize:(struct CGSize)arg2 effectFilterCount:(unsigned long long *)arg3;
+ (id)ciFiltersForAdjustmentsOnManagedAsset:(id)arg1 forDestinationImageSize:(struct CGSize)arg2;
+ (void)convertStraightenAngle:(double)arg1 andCropRect:(struct CGRect)arg2 toAffineTransform:(struct CGAffineTransform *)arg3 andCropRect:(struct CGRect *)arg4;
+ (void)convertAffineTransform:(struct CGAffineTransform)arg1 andCropRect:(struct CGRect)arg2 toStraightenAngle:(double *)arg3 andCropRect:(struct CGRect *)arg4;
+ (struct CGRect)convertCropRect:(struct CGRect)arg1 fromImageSize:(struct CGSize)arg2 toImageSize:(struct CGSize)arg3;
+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (id)insertInPhotoLibrary:(id)arg1;
- (id)metadataProperties;
@property(nonatomic) int adjustmentType;

// Remaining properties
@property(copy, nonatomic) PLManagedAsset *asset; // @dynamic asset;
@property(copy, nonatomic) NSString *filterName; // @dynamic filterName;
@property(copy, nonatomic) NSDictionary *filterSettings; // @dynamic filterSettings;

@end

@interface _PLManagedAlbumList : PLManagedObject
{
}

+ (id)entityInManagedObjectContext:(id)arg1;
+ (id)entityName;
+ (id)insertInManagedObjectContext:(id)arg1;

@end

@interface PLManagedAlbumList : _PLManagedAlbumList <PLAlbumContainer, PLDerivedAlbumListOrigin, PLIndexMappersDataOrigin>
{
    NSObject<PLIndexMappingCache> *_derivedAlbumLists[5];
    _Bool isRegisteredForChanges;
    _Bool didRegisteredWithUserInterfaceContext;
}

+ (void)restoreAlbumListFromPersistedDataAtPath:(id)arg1 library:(id)arg2;
+ (void)persistAlbumListUUIDs:(id)arg1 type:(short)arg2 allowsOverwrite:(_Bool)arg3;
+ (_Bool)isValidPathForPersistence:(id)arg1;
+ (_Bool)isValidTypeForPersistence:(short)arg1;
+ (void)pushChangesFromAlbumContainer:(id)arg1 toAlbumContainer:(id)arg2;
+ (id)_validAlbumsFromSource:(id)arg1 destination:(id)arg2;
+ (_Bool)_albumOrderMatchesFrom:(id)arg1 inDestination:(id)arg2;
+ (id)allStreamedAlbumsListInManagedObjectContext:(id)arg1;
+ (id)placesAlbumListInManagedObjectContext:(id)arg1;
+ (id)facesAlbumListInManagedObjectContext:(id)arg1;
+ (id)eventListInManagedObjectContext:(id)arg1;
+ (id)importListInManagedObjectContext:(id)arg1;
+ (id)albumListInManagedObjectContext:(id)arg1;
+ (void)addSingletonObjectsToContext:(id)arg1;
+ (id)_albumListWithType:(short)arg1 inManagedObjectContext:(id)arg2;
+ (id)_typeDescriptionForAlbumListType:(short)arg1;
+ (unsigned long long)priorityForAlbumKind:(int)arg1;
+ (_Bool)albumKindHasFixedOrder:(int)arg1;
+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (id)wallpaperAlbumListInPhotoLibrary:(id)arg1;
+ (id)allStreamedAlbumsListInPhotoLibrary:(id)arg1;
+ (id)placesAlbumListInPhotoLibrary:(id)arg1;
+ (id)facesAlbumListInPhotoLibrary:(id)arg1;
+ (id)eventListInPhotoLibrary:(id)arg1;
+ (id)importListInPhotoLibrary:(id)arg1;
+ (id)albumListInPhotoLibrary:(id)arg1;
+ (id)_singletonListWithType:(short)arg1 library:(id)arg2;
+ (void)initialize;
@property(nonatomic) _Bool didRegisteredWithUserInterfaceContext; // @synthesize didRegisteredWithUserInterfaceContext;
@property(nonatomic) _Bool isRegisteredForChanges; // @synthesize isRegisteredForChanges;
- (void)didSave;
- (void)willSave;
- (void)unregisterForChanges;
- (void)registerForChanges;
- (void)enumerateDerivedIndexMappers:(CDUnknownBlockType)arg1;
- (_Bool)hasDerivedIndexMappers;
- (void)enumerateDerivedAlbumLists:(CDUnknownBlockType)arg1;
- (void)unregisterAllDerivedAlbums;
- (void)registerDerivedAlbumList:(struct NSObject *)arg1;
- (void)preheatAlbumsAtIndexes:(id)arg1 forProperties:(id)arg2 relationships:(id)arg3;
- (void)preheatAlbumsForProperties:(id)arg1 relationships:(id)arg2;
- (void)updateAlbumsOrderIfNeeded;
- (_Bool)needsReordering;
- (void)setNeedsReordering;
- (void)insertIntoOrderedAlbumsAtIndexByPriorityForAlbum:(id)arg1;
@property(readonly, copy, nonatomic) CDUnknownBlockType albumsSortingComparator;
- (_Bool)albumHasFixedOrder:(struct NSObject *)arg1;
- (id)containersRelationshipName;
- (_Bool)canEditContainers;
- (_Bool)isEmpty;
@property(readonly, nonatomic) unsigned long long containersCount;
- (id)containers;
@property(readonly, retain, nonatomic) NSString *_typeDescription;
@property(readonly, retain, nonatomic) NSString *_prettyDescription;
@property(readonly, nonatomic) int filter;
@property(readonly, nonatomic) _Bool isFolder;
@property(readonly, nonatomic) _Bool canEditAlbums;
@property(readonly, nonatomic) unsigned long long unreadAlbumsCount;
@property(readonly, nonatomic) _Bool hasAtLeastOneAlbum;
@property(readonly, nonatomic) unsigned long long albumsCount;
- (id)_albumsCountFetchRequest;
@property(readonly, retain, nonatomic) NSMutableOrderedSet *albums;
@property(nonatomic) short albumListType;
- (void)willTurnIntoFault;
- (void)awakeFromFetch;
- (void)awakeFromInsert;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(retain, nonatomic) NSString *uuid; // @dynamic uuid;

@end

@interface PLManagedAsset : PLManagedObject <UIActivityItemSource, PLMomentAssetData_Private, _PLImageLoadingAsset>
{
    _Bool _didPrepareForDeletion;
    _Bool _isRegisteredForChanges;
    _Bool _needsMomentUpdate;
    _Bool _disableDupeAnalysis;
    _Bool _disableFileSystemPersistency;
    _Bool _didPersistEAs;
    _Bool _didLoadReverseGeo;
    _Bool _isLocatedAtHome;
    _Bool _setCustomCreationDate;
    _Bool _setCustomLocation;
    NSString *_reverseGeoDescription;
    NSURL *cachedNonPersistedVideoPlaybackURL;
    NSDate *cachedNonPersistedVideoPlaybackURLExpiration;
    NSError *cachedNonPersistedVideoPlaybackURLError;
    UIImage *inflightImageInMemory;
    NSString *inflightImagePath;
    UIImage *inflightIndexSheetImage;
    NSDictionary *inflightMetadata;
}

+ (id)uuidFromAssetURL:(id)arg1;
+ (id)uuidFromAssetURL:(id)arg1 fileExtension:(id *)arg2 sidecarIndex:(id *)arg3;
+ (id)fileURLFromAssetURL:(id)arg1 photoLibrary:(id)arg2;
+ (id)photoFromAssetURL:(id)arg1 photoLibrary:(id)arg2 sidecar:(id *)arg3;
+ (id)photoFromAssetURL:(id)arg1 photoLibrary:(id)arg2;
+ (id)assetsLibraryURLWithUUID:(id)arg1 extension:(id)arg2;
+ (int)wildcatStackFormat;
+ (int)wildcatPhotoScrubberFormat;
+ (int)formatForThumbnailGeneration;
+ (int)wildcatIndexSheetFormat;
+ (int)landscapeScrubberThumbnailFormat;
+ (int)portraitScrubberThumbnailFormat;
+ (int)masterThumbnailFormat;
+ (int)feedEntryThumbnailFormat;
+ (int)largestNonJPEGThumbnailFormat;
+ (int)indexSheetUnbakedFormat;
+ (int)indexSheetBakedFormat;
+ (int)posterThumbnailFormat;
+ (int)thumbnailFormat;
+ (int)fullSizeImageFormat;
+ (id)preferredFileExtensionForType:(id)arg1;
+ (_Bool)isValidFileExtensionForImport:(id)arg1;
+ (id)diagnosticFilePathForMainFilePath:(id)arg1;
+ (id)extensionForMediumThumbnailFile;
+ (id)extensionForLargeThumbnailFile;
+ (int)imageFormatFromAdjustmentBaseVersion:(long long)arg1;
+ (long long)adjustmentBaseVersionFromImageFormat:(int)arg1;
+ (id)pathForAdjustmentDirectoryWithMutationsDirectory:(id)arg1;
+ (id)assetBaseFilenameForAdjustmentFilePath:(id)arg1;
+ (id)pathForMutationsDirectoryWithDirectory:(id)arg1 filename:(id)arg2;
+ (id)URLForMetadataWithExtension:(id)arg1 forMediaInMainDirectory:(id)arg2 withFilename:(id)arg3;
+ (id)abbreviatedMetadataDirectoryForDirectory:(id)arg1;
+ (short)assetTypeFromUniformTypeIdentifier:(id)arg1;
+ (id)uniformTypeIdentifierFromPathExtension:(id)arg1 assetType:(short)arg2;
+ (id)keyPathsForValuesAffectingIsJPEG;
+ (id)bestCreationDateForAssetAtURL:(id)arg1 modificationDate:(id *)arg2 creationDateString:(id *)arg3;
+ (_Bool)guaranteedFlashOffForAssetAtURL:(id)arg1;
+ (id)keyPathsForValuesAffectingIsPhotoStreamPhoto;
+ (id)keyPathsForValuesAffectingGpsCoordinate;
+ (id)keyPathsForValuesAffectingImageSize;
+ (CDStruct_c3b9c2ee)locationFromAVAsset:(id)arg1;
+ (struct CGSize)dimensionsForAVAsset:(id)arg1;
+ (struct CGSize)dimensionsForVideoAtURL:(id)arg1;
+ (id)assetWithObjectID:(id)arg1 inManagedObjectContext:(id)arg2;
+ (id)assetWithUUID:(id)arg1 inManagedObjectContext:(id)arg2;
+ (id)pathsForAllIncompleteAssetsInManagedObjectContext:(id)arg1;
+ (id)incompleteAssetsInManagedObjectContext:(id)arg1;
+ (id)_pathsByAssetUUIDFromFetchResults:(id)arg1 absolute:(_Bool)arg2;
+ (id)assetsWithSavedAssetType:(short)arg1 inManagedObjectContext:(id)arg2;
+ (unsigned long long)countUsedAssetsWithKind:(short)arg1 inManagedObjectContext:(id)arg2;
+ (unsigned long long)countAssetsWithKind:(short)arg1 inManagedObjectContext:(id)arg2;
+ (void)extractDirectory:(id *)arg1 andFilename:(id *)arg2 fromMainFileURL:(id)arg3;
+ (id)_insertAssetIntoPhotoLibrary:(id)arg1 mainFileURL:(id)arg2 savedAssetType:(short)arg3 replacementUUID:(id)arg4 imageSource:(struct CGImageSource **)arg5 imageData:(id *)arg6 isPlaceholder:(_Bool)arg7;
+ (id)insertAssetIntoPhotoLibrary:(id)arg1 mainFileURL:(id)arg2 savedAssetType:(short)arg3 replacementUUID:(id)arg4 imageSource:(struct CGImageSource **)arg5 imageData:(id *)arg6;
+ (id)insertAssetIntoPhotoLibrary:(id)arg1 mainFileURL:(id)arg2 savedAssetType:(short)arg3 replacementUUID:(id)arg4 imageSource:(struct CGImageSource **)arg5 imageData:(id *)arg6 isPlaceholder:(_Bool)arg7;
+ (id)fetchPredicateForLegacyRequiredResourcesLocallyAvailable;
+ (short)_correctedOrientation:(short)arg1;
+ (id)locationFromLocationData:(id)arg1 timestampIfMissing:(id)arg2 outUsesCompactFormat:(_Bool *)arg3;
+ (id)assetWithObjectID:(id)arg1 inLibrary:(id)arg2;
+ (id)assetsWithUUIDs:(id)arg1 includePendingChanges:(_Bool)arg2 inLibrary:(id)arg3;
+ (id)assetsWithUUIDs:(id)arg1 inLibrary:(id)arg2;
+ (id)assetWithUUID:(id)arg1 inLibrary:(id)arg2;
+ (id)entityInManagedObjectContext:(id)arg1;
+ (id)entityName;
+ (id)insertInManagedObjectContext:(id)arg1;
+ (id)_fakeGeo;
+ (id)baseSearchIndexPredicate;
+ (long long)pfAdjustmentsBaseVersionFromAdjustmentBaseVersion:(long long)arg1;
+ (long long)adjustmentBaseVersionFromPFAdjustmentsBaseVersion:(long long)arg1;
+ (id)cloudAssetsInLibrary:(id)arg1;
+ (id)assetsToResetInLibrary:(id)arg1;
+ (id)assetsToUploadInitiallyInLibrary:(id)arg1 limit:(unsigned long long)arg2;
+ (_Bool)assetTypeIsSupportedForUpload:(short)arg1;
+ (id)_supportedAssetTypesForUpload;
+ (id)assetsWithCloudAssetUUIDs:(id)arg1 inLibrary:(id)arg2;
+ (id)assetWithCloudAssetUUID:(id)arg1 inLibrary:(id)arg2;
+ (void)fixupCloudPhotoLibraryAsset:(id)arg1 withMasterIdentifier:(id)arg2 inLibrary:(id)arg3;
+ (void)fixupCloudPhotoLibraryAsset:(id)arg1 withMasterRecord:(id)arg2 inLibrary:(id)arg3;
+ (id)createCloudPhotoLibraryAssetWithAssetRecord:(id)arg1 masterRecord:(id)arg2 inLibrary:(id)arg3;
+ (short)PLPhotoHDRTypeFromCPLAssetHDRType:(unsigned long long)arg1;
+ (unsigned long long)CPLAssetHDRTypeFromPLPhotoHDRType:(short)arg1;
+ (void)markAssetAsRecentlyUsed:(id)arg1;
+ (id)persistedRecentlyUsedGUIDS;
+ (id)recentlyUsedGUIDsPath;
+ (id)sortedCloudSharedAssetsWithPlaceholderKind:(short)arg1 ascending:(_Bool)arg2 inLibrary:(id)arg3;
+ (id)cloudSharedAssetsWithGUIDs:(id)arg1 inLibrary:(id)arg2;
+ (id)allCloudSharedAssetsInLibrary:(id)arg1;
@property(nonatomic) _Bool disableFileSystemPersistency; // @synthesize disableFileSystemPersistency=_disableFileSystemPersistency;
@property(nonatomic) _Bool disableDupeAnalysis; // @synthesize disableDupeAnalysis=_disableDupeAnalysis;
@property(nonatomic) _Bool needsMomentUpdate; // @synthesize needsMomentUpdate=_needsMomentUpdate;
@property(retain, nonatomic) NSDictionary *inflightMetadata; // @synthesize inflightMetadata;
@property(retain, nonatomic) UIImage *inflightIndexSheetImage; // @synthesize inflightIndexSheetImage;
@property(retain, nonatomic) NSString *inflightImagePath; // @synthesize inflightImagePath;
@property(retain, nonatomic) UIImage *inflightImageInMemory; // @synthesize inflightImageInMemory;
@property(retain, nonatomic) NSError *cachedNonPersistedVideoPlaybackURLError; // @synthesize cachedNonPersistedVideoPlaybackURLError;
@property(retain, nonatomic) NSDate *cachedNonPersistedVideoPlaybackURLExpiration; // @synthesize cachedNonPersistedVideoPlaybackURLExpiration;
@property(retain, nonatomic) NSURL *cachedNonPersistedVideoPlaybackURL; // @synthesize cachedNonPersistedVideoPlaybackURL;
- (id)activityViewController:(id)arg1 itemForActivityType:(id)arg2;
- (id)activityViewControllerPlaceholderItem:(id)arg1;
- (long long)compareToAsset:(id)arg1;
- (_Bool)isInterestingForAvalanche;
- (_Bool)visibilityStateIsEqualToState:(short)arg1;
@property(readonly, retain, nonatomic) NSObject<NSCopying> *uniqueObjectID;
- (id)globalUUID;
- (id)shortenedFilePath;
@property(readonly, retain, nonatomic) NSURL *assetURL;
- (id)assetURLForSidecarFile:(id)arg1;
- (id)assetURLWithExtension:(id)arg1;
@property(readonly, retain, nonatomic) UIImage *wallpaperFullScreenImage;
@property(readonly, copy, nonatomic) NSString *textBadgeString;
- (id)filteredImage:(id)arg1 withCIContext:(id)arg2;
- (id)pasteBoardRepresentation;
- (id)largestAvailableDataRepresentationAndType:(id *)arg1;
- (void)_getLargestAvailableDataRepresentation:(id *)arg1 type:(id *)arg2;
- (id)newLowResolutionFullScreenImage;
- (id)newFullSizeImage;
- (id)newFullScreenImage:(const struct __CFDictionary **)arg1;
- (id)indexSheetImage;
- (id)imageWithFormat:(int)arg1 outImageProperties:(const struct __CFDictionary **)arg2;
- (id)imageWithFormat:(int)arg1;
- (id)pathForDiagnosticFile;
@property(readonly, copy, nonatomic) NSString *pathForLegacySlalomRegionsArchive;
@property(readonly, nonatomic) _Bool isMogul;
@property(readonly, copy, nonatomic) NSString *pathForXMPFile;
@property(readonly, copy, nonatomic) NSURL *fileURLForPrebakedPortraitScrubberThumbnails;
@property(readonly, copy, nonatomic) NSString *pathForPrebakedPortraitScrubberThumbnails;
@property(readonly, copy, nonatomic) NSURL *fileURLForPrebakedLandscapeScrubberThumbnails;
@property(readonly, copy, nonatomic) NSString *pathForPrebakedLandscapeScrubberThumbnails;
- (void)synchronouslyGenerateFullsizeRenderImageIfNecessaryAtPath:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
- (void)_asyncGenerateRenderImageFileWithSize:(struct CGSize)arg1 formatIdentifier:(id)arg2 formatVersion:(id)arg3 adjustmentDataBlob:(id)arg4 originalImageFilePath:(id)arg5 originalImageEXIFOrientation:(long long)arg6 renderedImageFilePath:(id)arg7 completionHandler:(CDUnknownBlockType)arg8;
- (void)generateLargeThumbnailFileIfNecessary;
- (id)reservedPathForLargeDisplayableImageFileForceLarge:(_Bool)arg1 forceUpgradeFromSubstandardIfNecessary:(_Bool)arg2 outImageType:(long long *)arg3;
- (id)calculateReturnPathForForceLarge:(_Bool)arg1 forceUpgradeFromSubstandardIfNecessary:(_Bool)arg2 outImageType:(long long *)arg3;
@property(readonly, copy, nonatomic) NSString *pathForLargeDisplayableImageFile;
@property(readonly, copy, nonatomic) NSString *pathForVideoFile;
@property(readonly, copy, nonatomic) NSString *pathForVideoPreviewFile;
@property(readonly, copy, nonatomic) NSString *pathForTrimmedVideoFile;
@property(readonly, copy, nonatomic) NSString *pathForPrebakedWildcatThumbnailsFile;
- (id)fileURLForFullsizeRenderImage;
@property(readonly, copy, nonatomic) NSURL *fileURLForThumbnailFile;
- (id)fileURLForMetadataWithExtension:(id)arg1;
- (id)pathForMetadataWithExtension:(id)arg1;
@property(readonly, copy, nonatomic) NSString *pathForMetadataDirectory;
@property(readonly, copy, nonatomic) NSString *fileExtension;
@property(readonly, copy, nonatomic) NSArray *allUniformTypeIdentifiers;
- (id)allFileExtensions;
- (id)fileURLForSidecarFile:(id)arg1;
@property(readonly, copy, nonatomic) NSString *pathForOriginalFile;
- (id)pathForSideCarImageFile;
@property(readonly, copy, nonatomic) NSString *pathForSmallVideoFile;
@property(readonly, copy, nonatomic) NSString *pathForMediumVideoFile;
- (id)fileURLForMediumThumbnailFile;
@property(readonly, copy, nonatomic) NSString *pathForMediumThumbnailFile;
- (id)fileURLForFullsizeRenderVideo;
@property(readonly, copy, nonatomic) NSURL *fileURLForLargeThumbnailFile;
@property(readonly, copy, nonatomic) NSString *pathForLargeThumbnailFile;
- (id)pathForFullsizeImageFile;
- (id)pathForAdjustmentFile;
- (id)pathForPenultimateFullsizeRenderImageFile;
- (id)pathForFullsizeRenderVideoFile;
- (id)pathForSubstandardFullsizeRenderImageFile;
- (id)pathForFullsizeRenderImageFile;
- (_Bool)_migrateKeyedArchiverAdjustmentsToPropertyListSerializationFormat;
- (_Bool)_migrateLegacySLMAdjustments;
- (_Bool)migrateLegacyAdjustments;
- (_Bool)_setDefaultSlowMotionAdjustments;
- (_Bool)setDefaultAdjustmentsIfNecessary;
- (void)synchronouslyFetchAdjustmentDataWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)setAdjustmentDataBlob:(id)arg1 formatIdentifier:(id)arg2 formatVersion:(id)arg3 baseVersion:(long long)arg4 editorBundleID:(id)arg5 renderedContentURL:(id)arg6 penultimateRenderedJPEGData:(id)arg7 isSubstandardRender:(_Bool)arg8 fullSizeRenderSize:(struct CGSize)arg9;
- (void)setAdjustmentDataBlob:(id)arg1 formatIdentifier:(id)arg2 formatVersion:(id)arg3 baseVersion:(long long)arg4 editorBundleID:(id)arg5 renderedContentURL:(id)arg6 penultimateRenderedJPEGData:(id)arg7;
- (void)revertToOriginal;
- (_Bool)_isResourceAvailableForResourceType:(unsigned long long)arg1;
- (unsigned long long)CPLResourceTypeFromVideoFormat:(int)arg1;
- (unsigned long long)CPLResourceTypeFromImageFormat:(int)arg1;
@property(readonly, copy, nonatomic) NSSet *allFileURLs;
@property(readonly, copy, nonatomic) NSSet *filePathsWithoutThumbs;
@property(readonly, copy, nonatomic) NSString *pathForAdjustmentDirectory;
- (id)pathForMutationsDirectory;
@property(readonly, copy, nonatomic) NSURL *mainFileURL;
- (_Bool)isSavedPhotosAsset;
- (_Bool)couldBeStoredInDCIM;
- (void)updateAssetKindFromUniformTypeIdentifier;
- (void)setUniformTypeIdentifierFromPathExtension:(id)arg1;
- (_Bool)isPartOfBurst;
@property(readonly, nonatomic) _Bool isJPEG;
- (id)mutableSidecarFiles;
@property(readonly, copy, nonatomic) NSArray *sortedSidecarFiles;
- (_Bool)hasJustBeenHidden;
- (_Bool)hasJustBeenShown;
- (_Bool)isTimelapsePlaceholder;
- (_Bool)isIncludedInCloudFeeds;
- (_Bool)isIncludedInMoments;
- (_Bool)isCloudPlaceholder;
- (_Bool)canPerformEditOperation:(unsigned long long)arg1;
@property(readonly, nonatomic) _Bool allowsWallpaperEditing;
- (_Bool)isEditable;
@property(readonly, nonatomic) _Bool isAudio;
- (_Bool)_hasPanoramaDimensions;
- (_Bool)isPanorama;
@property(readonly, nonatomic) _Bool isPhoto;
@property(readonly, nonatomic) _Bool isHDVideo;
@property(readonly, nonatomic) _Bool isStreamedVideo;
@property(readonly, nonatomic) _Bool isVideo;
@property(readonly, nonatomic) id <PLCloudSharedAlbumProtocol> cloudShareAlbum;
@property(readonly, nonatomic) _Bool isCloudPhotoLibraryAsset;
- (long long)cloudSharedAssetPlaceholderKind;
@property(readonly, nonatomic) _Bool isCloudSharedAsset;
@property(readonly, nonatomic) _Bool isUsedByiPhoto;
@property(readonly, nonatomic) _Bool isPhotoStreamPhoto;
@property(nonatomic) CDStruct_c3b9c2ee gpsCoordinate;
- (id)managedAssetForPhotoLibrary:(id)arg1;
@property(nonatomic) struct CGSize imageSize;
- (id)_imageDataForThumbGeneration;
- (void)generateAndUpdateThumbnailsWithPreviewImage:(id)arg1 thumbnailImage:(id)arg2 fromImageSource:(struct CGImageSource *)arg3 imageData:(id)arg4 thumbnailDataByFormatID:(struct __CFDictionary *)arg5 updateExistingLargePreview:(_Bool)arg6;
- (_Bool)setVideoInfoFromFileAtURL:(id)arg1 fullSizeRenderURL:(id)arg2 overwriteOriginalProperties:(_Bool)arg3;
- (void)setSavedAssetTypeFromImageProperties:(id)arg1;
- (void)setOriginalSizeAndOrientationFromImageProperties:(id)arg1;
- (void)setSizeAndOrientationFromImageProperties:(id)arg1;
- (void)setHDRFlagFromImageProperties:(id)arg1;
- (void)setThumbnailDataFromImageProperties:(id)arg1;
- (void)setLocationFromImageProperties:(id)arg1;
- (id)pictureTransferProtocolInformationWithAlbumsObjectIDs:(id)arg1;
- (_Bool)setAttributesFromMainFileURL:(id)arg1 fullSizeRenderURL:(id)arg2 savedAssetType:(short)arg3 isPlaceholder:(_Bool)arg4 overwriteOriginalProperties:(_Bool)arg5 imageSource:(struct CGImageSource **)arg6 imageData:(id *)arg7;
- (id)locationFromFileURL:(id)arg1;
- (id)addFaceWithRelativeRect:(struct CGRect)arg1 identifier:(short)arg2 albumUUID:(id)arg3;
- (id)faceWithIdentifier:(short)arg1;
- (void)setCustomMetadataWithPersistedFileSystemAttributes;
- (void)synchronizeWithPersistedFileSystemAttributes;
- (void)persistMetadataToFilesystem;
- (void)didSetCustomLocation;
- (void)didSetCustomDateCreated;
- (id)addedDateData;
- (id)dateCreatedData;
- (_Bool)hasLegacyRequiredResourcesLocallyAvailable;
- (_Bool)hasOriginalFile;
- (_Bool)isValidTypeForPersistence;
- (id)_prettyDescription;
- (id)_compactDebugDescription;
- (id)_kindDescription;
- (id)_savedAssetTypeDescription;
- (id)_highDynamicRangeTypeDescription;
- (void)unregisterForChanges;
- (void)registerForChanges;
- (_Bool)_isValidUTI:(id)arg1 forService:(id)arg2;
- (_Bool)_isSavedAssetTypeValid:(short)arg1;
@property(readonly, retain, nonatomic) UIImage *inflightImage;
@property(nonatomic) _Bool isInFlight;
- (id)pathToOriginalVideoFile;
- (_Bool)hasGPS;
@property(retain, nonatomic) PLManagedAsset *originalAsset;
- (id)mutableAlbumsBeingTertiaryKeyAssetFor;
- (id)mutableAlbumsBeingSecondaryKeyAssetFor;
- (id)mutableAlbumsBeingKeyAssetFor;
- (id)mutableAlbumsBeingCustomKeyAssetFor;
- (id)adjustmentsXMPRepresentation;
- (void)updateAdjustmentsWithAdjustmentMetadata:(id)arg1;
- (void)updateAdjustmentsWithFiltersAndIdentifiers:(id)arg1;
- (id)_settingsDictionaryFromFilters:(id)arg1 inputImageExtent:(struct CGRect)arg2;
- (id)_settingsDictionaryFromFilter:(id)arg1;
- (id)_serializedPropertyDataFromFilter:(id)arg1;
- (void)removeLegacyAdjustments;
- (id)addAdjustment;
- (id)mutableAdjustments;
- (_Bool)hasLegacyAdjustments;
- (id)debugFilename;
- (long long)originalImageOrientation;
- (id)assetsLibraryURL;
- (double)aspectRatio;
- (id)pl_photoLibrary;
- (void)didSave;
- (void)willSave;
- (void)updatePanoramosity;
- (_Bool)validateForUpdate:(id *)arg1;
- (_Bool)validateForInsert:(id *)arg1;
- (void)applyTrashedState:(short)arg1;
- (_Bool)isInTrash;
- (_Bool)canMoveToTrash;
- (void)deleteFromDatabaseOnly;
- (void)delete;
- (_Bool)isDeletableFromAssetsLibrary;
- (_Bool)isEditableFromAssetsLibrary;
- (void)_loadReverseGeoIfNeeded;
- (_Bool)isLocatedAtHome;
- (id)reverseGeoDescription;
- (id)avalanchePickDescription;
- (_Bool)isAvalanchePhoto;
- (_Bool)isAvalancheStackPhoto;
- (_Bool)avalanchePickTypeIsVisible;
@property(retain, nonatomic) CLLocation *location;
- (void)setLocationFromCoordinate:(CDStruct_c3b9c2ee)arg1;
- (id)locationMergedWithAssetMetadataIfCompact:(_Bool)arg1;
- (_Bool)isLocatedAtCoordinates:(CDStruct_c3b9c2ee)arg1;
- (void)prepareForDeletion;
- (_Bool)isFavorite;
- (id)thumbnailIdentifier;
@property unsigned long long effectiveThumbnailIndex;
@property(retain, nonatomic) NSString *customCollectionUUID;
@property(retain, nonatomic) NSString *customCollectionName;
@property(retain, nonatomic) NSString *customMomentUUID;
@property(retain, nonatomic) NSString *customMomentName;
@property(nonatomic) _Bool reverseLocationDataIsValid;
@property(retain, nonatomic) NSData *reverseLocationData;
- (void)didTurnIntoFault;
- (void)willTurnIntoFault;
- (void)awakeFromSnapshotEvents:(unsigned long long)arg1;
- (void)awakeFromFetch;
- (void)awakeFromInsert;
- (void)dealloc;
- (void)_appendAssetTextDataToAsset:(id)arg1;
- (void)_appendKeywords:(id)arg1 toAsset:(id)arg2;
- (void)_appendDateCreatedToAsset:(id)arg1 dateFormatter:(id)arg2;
- (void)_appendGEODataToAsset:(id)arg1;
- (void)getSearchIndexContents:(id)arg1 dateFormatter:(id)arg2 keywords:(id)arg3;
@property(retain, nonatomic) NSData *searchCategoryData;
@property(nonatomic, setter=setSearchDataValid:) _Bool isSearchDataValid;
- (id)_searchDataCreateIfNeeded;
- (void)writeXMPWithProperties:(id)arg1 orientation:(int)arg2;
- (void)_writeXMPSidecarWithProperties:(id)arg1 orientation:(int)arg2;
- (_Bool)_writeXMPHeaderWithProperties:(id)arg1 orientation:(int)arg2;
- (void)generateThumbnailsWithImageSource:(struct CGImageSource *)arg1 imageData:(id)arg2 updateExistingLargePreview:(_Bool)arg3 allowMediumPreview:(_Bool)arg4 outSmallThumbnail:(id *)arg5 outLargeThumbnail:(id *)arg6;
- (void)_computePreCropThumbnailSize:(struct CGSize *)arg1 andPostCropSize:(struct CGSize *)arg2 forOrientedOriginalSize:(struct CGSize)arg3 andCroppedSize:(struct CGSize)arg4 isLargeThumbnail:(_Bool)arg5;
@property(retain, nonatomic) NSString *title;
@property(retain, nonatomic) NSString *longDescription;
@property(nonatomic) int locationHash;
@property(nonatomic) short embeddedThumbnailHeight;
@property(nonatomic) short embeddedThumbnailWidth;
@property(nonatomic) int embeddedThumbnailLength;
@property(nonatomic) int embeddedThumbnailOffset;
@property(readonly, retain, nonatomic) NSData *embeddedThumbnailData;
@property(readonly, nonatomic) _Bool hasEmbeddedThumbnail;
@property(retain, nonatomic) NSString *importSessionID;
@property(retain, nonatomic) NSString *originalPath;
@property(nonatomic) int originalFilesize;
@property(nonatomic) short originalOrientation;
@property(retain, nonatomic) NSString *originalFilename;
@property(nonatomic) long long externalUsageIntent;
@property(retain, nonatomic) NSString *publicGlobalUUID;
@property(retain, nonatomic) NSData *originalHash;
@property(nonatomic) short originalWidth;
@property(nonatomic) short originalHeight;
@property(retain, nonatomic) NSString *originalAssetsUUID;
@property(retain, nonatomic) NSString *editorBundleID;
@property(retain, nonatomic) NSString *creatorBundleID;
- (_Bool)canGenerateDerivatives;
- (_Bool)supportsCloudUpload;
- (id)cplResourceForResourceType:(unsigned long long)arg1;
- (id)cloudResourceForResourceType:(unsigned long long)arg1;
- (id)utiForResourceType:(unsigned long long)arg1;
- (void)updateAssetAlbumRelation:(id)arg1 inLibrary:(id)arg2;
- (long long)orderInAlbumCloudUuid:(id)arg1 fromRelations:(id)arg2;
- (void)applyResourcesFromAssetChange:(id)arg1;
- (void)markCloudResourceOfType:(unsigned long long)arg1 asLocallyAvailable:(_Bool)arg2;
- (unsigned long long)_cplAdjustmentSourceTypeFromPLAdjustmentBaseVersion:(long long)arg1;
- (long long)_plAdjustmentBaseVersionFromCPLAdjustmentSourceType:(unsigned long long)arg1;
- (void)applyPropertiesFromAssetChange:(id)arg1;
- (_Bool)_location:(id)arg1 isEqualToLocationForUpdating:(id)arg2;
- (void)_applyPropertiesFromCloudMaster:(id)arg1;
- (void)_createCloudMasterFromMasterChange:(id)arg1;
- (void)applyResourcesFromMasterChange:(id)arg1;
- (struct CGSize)_targetSizeForInputSize:(struct CGSize)arg1 maxPixelSize:(unsigned long long)arg2;
- (id)cplRelationsForAsset;
- (unsigned long long)_cplAssetSubtypeFromPLAssetSubtype:(short)arg1;
- (short)_plAssetSubtypeFromCPLAssetSubtype:(unsigned long long)arg1;
- (int)_avalancheTypeFromCplBurstFlags:(unsigned long long)arg1;
- (unsigned long long)_cplBurstFlagsForAsset;
- (id)cplAssetChangeWithMasterID:(id)arg1 withChangeType:(unsigned long long)arg2;
- (id)_generateVideoResourcesFromURL:(id)arg1 withIdentifier:(id)arg2 shouldGenerateVideoDerivatives:(_Bool)arg3;
- (void)_createResourcesFromExistingCloudResources:(id)arg1 withItemIdentifier:(id)arg2 fileURLToGenerateDerivatives:(id)arg3 applyAdjustment:(_Bool)arg4 validResources:(id)arg5 invalidResources:(id)arg6;
- (void)_debugPrintAdjustmentState;
- (void)applyResourceChangeToCPLAsset:(id)arg1 withIdentifier:(id)arg2 forChangeType:(unsigned long long)arg3;
- (void)applyPropertiesChangeToCPLAssetChange:(id)arg1 withMasterID:(id)arg2;
- (id)_createVideoResourceFromVideoURL:(id)arg1 withResourceType:(unsigned long long)arg2 itemIdentifier:(id)arg3 applyVideoAdjustments:(_Bool)arg4;
- (id)_fileNameFormatForResourceType:(unsigned long long)arg1;
- (id)_createCPLResourceFromResourcePath:(id)arg1 withResourceType:(unsigned long long)arg2 uniformTypeIdentifier:(id)arg3 itemIdentifier:(id)arg4 imageSize:(struct CGSize)arg5;
- (id)_createImageResourceForResourceType:(unsigned long long)arg1 withPreviewImagePath:(id)arg2 itemIdentifier:(id)arg3;
- (struct CGSize)_sizeOfImageAtURL:(id)arg1;
- (id)_itemIdentifier;
- (id)_generatePosterFrameForVideoAtURL:(id)arg1 withResourceType:(unsigned long long)arg2 itemIdentifier:(id)arg3;
- (void)_migrateResourcePathForMaster:(id)arg1;
- (id)cplMasterChange;
- (id)existingCloudMaster;
- (void)incrementUploadAttempts;
- (void)setUploadAttempts:(short)arg1;
- (short)uploadAttempts;
- (void)setOriginalResourceChoice:(unsigned long long)arg1;
- (unsigned long long)originalResourceChoice;
@property(retain, nonatomic) PLCloudMaster *cloudMaster;
@property(retain, nonatomic) NSSet *cloudResources;
@property(nonatomic) _Bool userCloudSharedLiked;
- (void)userReadAllCloudSharedComments;
- (void)userDeleteCloudSharedComment:(id)arg1;
- (id)userAddCloudSharedCommentWithText:(id)arg1;
- (_Bool)cloudHasSameOwnerAsAsset:(id)arg1;
- (int)cloudCommentsStatusForOwnedAsset:(_Bool)arg1;
- (void)deleteComment:(id)arg1;
- (void)addComment:(id)arg1;
@property(readonly, nonatomic) unsigned long long totalCommentsCount;
@property(readonly, nonatomic) NSString *cloudOwnerFullName;
@property(readonly, nonatomic) NSString *cloudOwnerLastName;
@property(readonly, nonatomic) NSString *cloudOwnerFirstName;
@property(readonly, nonatomic) NSString *cloudOwnerEmail;

// Remaining properties
@property(retain, nonatomic) NSDate *addedDate; // @dynamic addedDate;
@property(retain, nonatomic) PLAdditionalAssetAttributes *additionalAttributes; // @dynamic additionalAttributes;
@property(retain, nonatomic) NSOrderedSet *adjustments; // @dynamic adjustments;
@property(retain, nonatomic) NSSet *albumOrders; // @dynamic albumOrders;
@property(retain, nonatomic) NSSet *albums; // @dynamic albums;
@property(retain, nonatomic) NSSet *albumsBeingCustomKeyAssetFor; // @dynamic albumsBeingCustomKeyAssetFor;
@property(retain, nonatomic) NSSet *albumsBeingKeyAssetFor; // @dynamic albumsBeingKeyAssetFor;
@property(retain, nonatomic) NSSet *albumsBeingSecondaryKeyAssetFor; // @dynamic albumsBeingSecondaryKeyAssetFor;
@property(retain, nonatomic) NSSet *albumsBeingTertiaryKeyAssetFor; // @dynamic albumsBeingTertiaryKeyAssetFor;
@property(nonatomic) int avalanchePickType; // @dynamic avalanchePickType;
@property(retain, nonatomic) NSString *avalancheUUID; // @dynamic avalancheUUID;
@property(readonly, retain, nonatomic) NSString *cloudAssetGUID;
@property(retain, nonatomic) NSString *cloudBatchID; // @dynamic cloudBatchID;
@property(retain, nonatomic) NSDate *cloudBatchPublishDate; // @dynamic cloudBatchPublishDate;
@property(retain, nonatomic) NSString *cloudCollectionGUID; // @dynamic cloudCollectionGUID;
@property(retain, nonatomic) NSOrderedSet *cloudComments; // @dynamic cloudComments;
@property(retain, nonatomic) NSNumber *cloudDownloadRequests; // @dynamic cloudDownloadRequests;
@property(retain, nonatomic) PLCloudFeedAssetsEntry *cloudFeedAssetsEntry; // @dynamic cloudFeedAssetsEntry;
@property(nonatomic) _Bool cloudHasCommentsByMe; // @dynamic cloudHasCommentsByMe;
@property(nonatomic) _Bool cloudHasCommentsConversation; // @dynamic cloudHasCommentsConversation;
@property(nonatomic) _Bool cloudHasUnseenComments; // @dynamic cloudHasUnseenComments;
@property(nonatomic) _Bool cloudIsDeletable; // @dynamic cloudIsDeletable;
@property(nonatomic) _Bool cloudIsMyAsset; // @dynamic cloudIsMyAsset;
@property(retain, nonatomic) NSDate *cloudLastViewedCommentDate; // @dynamic cloudLastViewedCommentDate;
@property(nonatomic) short cloudLocalState; // @dynamic cloudLocalState;
@property(retain, nonatomic) NSString *cloudOwnerHashedPersonID; // @dynamic cloudOwnerHashedPersonID;
@property(nonatomic) short cloudPlaceholderKind; // @dynamic cloudPlaceholderKind;
@property(retain, nonatomic) NSDate *cloudServerPublishDate; // @dynamic cloudServerPublishDate;
@property(nonatomic) short cloudServerState; // @dynamic cloudServerState;
@property(nonatomic) _Bool complete; // @dynamic complete;
@property(retain, nonatomic) NSDate *dateCreated; // @dynamic dateCreated;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(retain, nonatomic) NSString *directory; // @dynamic directory;
@property(nonatomic) double duration; // @dynamic duration;
@property(retain, nonatomic) NSSet *faces; // @dynamic faces;
@property(nonatomic) _Bool favorite; // @dynamic favorite;
@property(retain, nonatomic) NSString *filename; // @dynamic filename;
@property(nonatomic) _Bool hasAdjustments; // @dynamic hasAdjustments;
@property(readonly) unsigned long long hash;
@property(nonatomic) short height; // @dynamic height;
@property(nonatomic) _Bool hidden; // @dynamic hidden;
@property(nonatomic) short highDynamicRangeType; // @dynamic highDynamicRangeType;
@property(nonatomic) short kind; // @dynamic kind;
@property(nonatomic) short kindSubtype; // @dynamic kindSubtype;
@property(retain, nonatomic) NSDate *lastSharedDate; // @dynamic lastSharedDate;
@property(retain, nonatomic) NSOrderedSet *likeComments; // @dynamic likeComments;
@property(retain, nonatomic) NSData *locationData; // @dynamic locationData;
@property(retain, nonatomic) NSDate *modificationDate; // @dynamic modificationDate;
@property(retain, nonatomic) PLMoment *moment; // @dynamic moment;
@property(nonatomic) short orientation; // @dynamic orientation;
@property(nonatomic) short savedAssetType; // @dynamic savedAssetType;
@property(retain, nonatomic) NSManagedObject *searchData; // @dynamic searchData;
@property(retain, nonatomic) NSSet *sidecarFiles; // @dynamic sidecarFiles;
@property(nonatomic) double sortToken; // @dynamic sortToken;
@property(readonly) Class superclass;
@property(nonatomic) int thumbnailIndex; // @dynamic thumbnailIndex;
@property(retain, nonatomic) NSDate *trashedDate; // @dynamic trashedDate;
@property(nonatomic) short trashedState; // @dynamic trashedState;
@property(retain, nonatomic) NSString *uniformTypeIdentifier; // @dynamic uniformTypeIdentifier;
@property(retain, nonatomic) id uuid; // @dynamic uuid;
@property(nonatomic) short visibilityState; // @dynamic visibilityState;
@property(nonatomic) short width; // @dynamic width;

@end

@interface PLManagedFace : PLManagedObject
{
}

+ (id)entityInManagedObjectContext:(id)arg1;
+ (id)entityName;
+ (id)insertInManagedObjectContext:(id)arg1;
- (void)delete;
@property(nonatomic) short identifier;
@property(nonatomic) struct CGRect relativeRect;

// Remaining properties
@property(retain, nonatomic) NSString *albumUUID; // @dynamic albumUUID;
@property(retain, nonatomic) PLManagedAsset *asset; // @dynamic asset;

@end

@interface PLManagedFaceAlbum : PLManagedAlbum
{
}

+ (id)entityInManagedObjectContext:(id)arg1;
+ (id)entityName;
+ (id)insertInManagedObjectContext:(id)arg1;
@property(nonatomic) int keyAssetFaceThumbnailIndex;
@property(nonatomic) short keyAssetFaceIdentifier;

@end

@interface PLManagedFolder : PLGenericAlbum <PLAlbumContainer>
{
    _Bool _adjustingChildOrderKeys;
    _Bool _needsPersistenceUpdate;
}

+ (id)entityInManagedObjectContext:(id)arg1;
+ (id)entityName;
+ (id)insertInManagedObjectContext:(id)arg1;
@property(nonatomic) _Bool needsPersistenceUpdate; // @synthesize needsPersistenceUpdate=_needsPersistenceUpdate;
- (void)refreshCollections;
- (void)removeChildCollections:(id)arg1;
- (void)addChildCollections:(id)arg1;
- (void)removeChildCollectionsObject:(id)arg1;
- (void)addChildCollectionsObject:(id)arg1;
- (void)replaceChildCollectionsAtIndexes:(id)arg1 withChildCollections:(id)arg2;
- (void)removeChildCollectionsAtIndexes:(id)arg1;
- (void)insertChildCollections:(id)arg1 atIndexes:(id)arg2;
- (void)replaceObjectInChildCollectionsAtIndex:(unsigned long long)arg1 withObject:(id)arg2;
- (void)removeObjectFromChildCollectionsAtIndex:(unsigned long long)arg1;
- (void)insertObject:(id)arg1 inChildCollectionsAtIndex:(unsigned long long)arg2;
@property(readonly, retain, nonatomic) NSString *_typeDescription;
@property(readonly, retain, nonatomic) NSString *_prettyDescription;
- (void)removePersistedFileSystemData;
- (void)persistMetadataToFileSystem;
- (_Bool)isValidKindForPersistence;
@property(readonly, nonatomic) unsigned long long unreadAlbumsCount;
@property(readonly, nonatomic) int filter;
- (void)preheatAlbumsAtIndexes:(id)arg1 forProperties:(id)arg2 relationships:(id)arg3;
- (void)preheatAlbumsForProperties:(id)arg1 relationships:(id)arg2;
- (void)updateAlbumsOrderIfNeeded;
- (_Bool)needsReordering;
- (void)setNeedsReordering;
@property(readonly, copy, nonatomic) CDUnknownBlockType albumsSortingComparator;
- (_Bool)albumHasFixedOrder:(struct NSObject *)arg1;
- (_Bool)canEditAlbums;
- (short)albumListType;
- (_Bool)hasAtLeastOneAlbum;
@property(readonly, nonatomic) unsigned long long albumsCount;
- (id)albums;
- (id)identifier;
- (id)containersRelationshipName;
- (_Bool)canEditContainers;
@property(readonly, nonatomic) unsigned long long containersCount;
- (id)containers;
- (_Bool)canPerformEditOperation:(unsigned long long)arg1;
- (unsigned long long)videosCount;
- (unsigned long long)photosCount;
- (_Bool)isEmpty;
- (unsigned long long)count;
- (unsigned long long)assetsCount;
- (unsigned long long)approximateCount;
- (id)mutableAssets;
- (id)assets;
- (void)prepareForDeletion;
- (void)didSave;
- (void)willSave;
- (void)_handleChildOrderKeys;
- (_Bool)_childOrderKeysAreValid;
- (id)childKeyForOrdering;
- (id)newOrderKeyChild:(id)arg1;
- (id)sortedOrderKeysForChildrenUsingMap:(id)arg1;
- (id)childToOrderKeyMap;

// Remaining properties
@property(retain, nonatomic) NSOrderedSet *childCollections; // @dynamic childCollections;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) _Bool isFolder;
@property(readonly) Class superclass;

@end

@interface _PLManagedKeyword : PLManagedObject
{
}

+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (id)entityInManagedObjectContext:(id)arg1;
+ (id)entityName;
+ (id)insertInManagedObjectContext:(id)arg1;

// Remaining properties
@property(retain, nonatomic) NSString *title; // @dynamic title;

@end

@interface PLManagedKeyword : _PLManagedKeyword
{
}

@end

@interface PLMappedImageData : NSMutableData
{
    PLImageTableSegment *_segment;
    void *_bytes;
    unsigned long long _length;
    _Bool _freeBytes;
    NSData *_pl_data;
}

- (void)dealloc;
- (_Bool)pl_writeToPath:(id)arg1;
- (unsigned long long)pl_advisoryLength;
@property(copy, nonatomic) NSString *photoUUID;
- (_Bool)uuidIsEqual:(id)arg1;
@property(nonatomic) unsigned int imageHeight;
@property(nonatomic) unsigned int imageWidth;
- (unsigned long long)lengthIncludingFooter;
- (unsigned long long)length;
- (void *)mutableBytes;
- (const void *)bytes;
- (struct PLImageTableEntryFooter_s *)_footer;
- (id)brokencopy;
- (id)initWithEntryLength:(unsigned long long)arg1;
- (id)initWithThumbnailPath:(id)arg1;
- (id)initWithImageTableSegment:(id)arg1 bytes:(void *)arg2 length:(unsigned long long)arg3;

@end

@interface PLMergePolicy : NSMergePolicy
{
}

- (_Bool)resolveConflicts:(id)arg1 error:(id *)arg2;

@end

@interface PLModelMigrator : NSObject
{
    double startTime;
    NSFileManager *_fileManager;
    PLXPCTransaction *_transaction;
    PLPhotoLibrary *_photoLibrary;
    long long _photoLibraryOnce;
    NSDictionary *_syncedPropertiesByUUID;
}

+ (_Bool)_repairSingletonObjectsInDatabaseUsingContext:(id)arg1 error:(id *)arg2;
+ (void)repairSingletonObjectsInDatabaseWithCompletionHandler:(CDUnknownBlockType)arg1;
+ (_Bool)_repairSingletonObjectsInDatabaseForOfflineStore:(id)arg1;
+ (_Bool)_deletePhotoCloudSharingMetadataInManagedObjectContext:(id)arg1 error:(id *)arg2;
+ (_Bool)_deletePhotoStreamAssetReferencesInStore:(id)arg1;
+ (_Bool)_deleteCloudSharedAndSyncedAssetReferencesInStore:(id)arg1;
+ (_Bool)_batchOfflineDeleteFromDatabaseOnlyAssets:(id)arg1 inManagedObjectContext:(id)arg2 error:(id *)arg3;
+ (_Bool)_fixupEditorBundleIDsInStore:(id)arg1;
+ (_Bool)_forceDupeAnalysis;
+ (_Bool)_moveMyPhotoStreamToAlbumsListInStore:(id)arg1;
+ (_Bool)_fixupAssetPersistence:(id)arg1;
+ (_Bool)_fixVideoDimensionsInStore:(id)arg1;
+ (_Bool)_fixVideoDimensionsForAsset:(id)arg1;
+ (_Bool)_populateHasAdjustmentsForAssetsInStore:(id)arg1;
+ (_Bool)_generateAddedDateForAssetsInStore:(id)arg1;
+ (void)fixAddedDateForAsset:(id)arg1;
+ (_Bool)_migrateLegacySlomoAdjustmentsInStore:(id)arg1 fromLegacySLMFormat:(_Bool)arg2;
+ (int)_migrateLegacySlomoAdjustmentsForAsset:(id)arg1;
+ (_Bool)_batchFetchedObjects:(id)arg1 inMOC:(id)arg2 batchSize:(unsigned long long)arg3 objectHandler:(CDUnknownBlockType)arg4 error:(id *)arg5;
+ (_Bool)_fixCorruptedOrientationsInStore:(id)arg1;
+ (_Bool)_convertManagedAdjustmentsInStore:(id)arg1;
+ (_Bool)_shouldConvertManagedAdjustmentsForAsset:(id)arg1;
+ (_Bool)_forceAlbumMetadataToDiskInStore:(id)arg1;
+ (_Bool)_resetAndReimportUnmanagedAdjustmentInStore:(id)arg1;
+ (_Bool)_populateUnmanagedAdjustmentsFromFileSystemInManagedObjectContext:(id)arg1;
+ (void)fixupUnmanagedAdjustmentsFromFileSystemForAsset:(id)arg1;
+ (_Bool)_setupRootFolderInStore:(id)arg1;
+ (_Bool)_addLocationHashesToAssets:(id)arg1;
+ (_Bool)_addAlbumOrderKeys:(id)arg1;
+ (_Bool)_addUUIDsToCollectionLists:(id)arg1 skipMomentLists:(_Bool)arg2;
+ (_Bool)_rebuildAllMomentsInStore:(id)arg1;
+ (_Bool)_fixupSyncedAssetAttributesInStore:(id)arg1;
+ (_Bool)_resetDupesAnalysisInStore:(id)arg1 resetHashes:(_Bool)arg2;
+ (_Bool)_fixupKeyAssetsForAlbumsInStore:(id)arg1;
+ (_Bool)_fixupCloudResourcesInStore:(id)arg1;
+ (_Bool)_removeAllWallpaperAssetsInStore:(id)arg1;
+ (_Bool)_fixupSharedStreamOrientationsInStore:(id)arg1;
+ (_Bool)_fixupAlbumOrderInAlbumListInStore:(id)arg1;
+ (_Bool)_fixupImportedAssetsInStore:(id)arg1;
+ (_Bool)_fixupImportedEventsInStore:(id)arg1;
+ (_Bool)_updateKindSubtypeForPanoramaPhotosNeedsReset:(_Bool)arg1 inStore:(id)arg2;
+ (_Bool)_initiateLightweightReimportOfAllPhotoCloudSharingMetadataInStore:(id)arg1;
+ (_Bool)_populateLightweightReimportDirectoryWithPhotoCloudSharingAssetsInManagedObjectContext:(id)arg1 error:(id *)arg2;
+ (_Bool)_postProcessFromVersion6006Store:(id)arg1;
+ (void)applyDataProtectionToAllPhotosFiles;
+ (void)applyDataProtectionToPhotosPaths:(id)arg1;
+ (_Bool)skipDataProtectionForFilePath:(id)arg1;
+ (_Bool)_fixupBrokenBurstPicksInStore:(id)arg1;
+ (_Bool)_invalidateSearchIndexDataInStore:(id)arg1;
+ (_Bool)_populateDurationAndHDRTypeFromAdditionalAssetAttributesInStore:(id)arg1;
+ (_Bool)_migrateTransformableUUIDsToStringsInStore:(id)arg1;
+ (_Bool)isPostProcessingLightweightMigration;
+ (_Bool)processWelterweightMigrationStageOnStore:(id)arg1 fromVersion:(int)arg2 toVersion:(int)arg3 migrationContext:(id)arg4;
+ (void)postProcessFixesAfterOTARestoreForCompleteAsset:(id)arg1;
+ (_Bool)postProcessMigratedStore:(id)arg1 fromVersion:(int)arg2;
+ (_Bool)attemptLightweightMigrationFromVersion:(id)arg1 onStore:(id)arg2 withMetadata:(id)arg3 orStoreURL:(id)arg4 options:(id)arg5 coordinator:(id)arg6;
+ (id)managedObjectModelForLightweightMigrationStageWithURL:(id)arg1;
+ (id)nextRequiredStagedMigrationVersionAfterVersion:(id)arg1;
+ (_Bool)didCreateSqliteErrorFileForLightweightMigration;
+ (void)_applySyncedProperties:(id)arg1 toAsset:(id)arg2;
+ (id)_newSyncedPropertiesByAssetUUIDs:(_Bool)arg1;
+ (id)_dateWithiTunesTimeInterval:(double)arg1;
+ (void)_forceCreateIndexOnOrderedAssets:(_Bool)arg1;
+ (_Bool)shouldRebuildDCIMSubDirectoryAtURL:(id)arg1 directoryEnumerator:(id)arg2 assetsKind:(int *)arg3;
+ (void)forceImportFileSystemDataIntoDatabase;
+ (void)setDidImportFileSystemAssets:(_Bool)arg1;
+ (id)modelMigrator;
+ (id)sharedModelMigratorForImport;
+ (id)eventNameFromDate:(id)arg1;
+ (id)generateAssetUUIDForPathPlist;
+ (void)archiveAssetUUIDForPathPlist:(id)arg1;
+ (id)archivedAssetUUIDForURL:(id)arg1;
+ (id)assetUUIDForPathPlistURL;
+ (void)importAfterCrash:(id)arg1 dictionariesByPhotoStreamID:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
+ (_Bool)didImportFileSystemAssets;
+ (void)dontImportFileSystemDataIntoDatabase;
+ (_Bool)restartingAfterOTAMigration;
+ (_Bool)restartingAfterRestoreFromBackup;
+ (long long)secondsNeededToCleanupModelAfteriTunesRestore;
+ (void)recalculateCachedCounts;
+ (void)repairPotentialModelCorruption;
+ (void)cleanupModelAfterRestoreFromiTunes;
+ (void)loadFileSystemDataIntoDatabase;
+ (void)waitForDataMigratorToExit;
+ (void)_createDatabase;
+ (void)createDatabase;
+ (int)checkForceMigrationTypeRequestedAndGetOptionalSourceModelVersion:(id *)arg1;
+ (id)descriptionForForceMigrationType:(int)arg1;
+ (_Bool)debug_resetThumbnailsAndInitiateRebuildRequest;
+ (_Bool)_removeEvents:(id)arg1;
+ (_Bool)_disableICloudPhoto;
+ (_Bool)_verifyCloudAssetsLocalAvailability:(id)arg1;
+ (_Bool)_resetThumbnailsAndInitiateRebuildRequest;
+ (_Bool)postProcessThumbnailsOnly;
+ (void)validateCurrentModelVersion;
+ (int)currentModelVersion;
@property(retain, nonatomic) NSFileManager *fileManager; // @synthesize fileManager=_fileManager;
- (id)importFileSystemImportAssets:(id)arg1 forceUpdate:(_Bool)arg2;
- (id)_syncedPropertiesForAssetUUID:(id)arg1;
- (void)importAfterCrash:(id)arg1 dictionariesByPhotoStreamID:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)collectContentsOfDirectoryURL:(id)arg1 forAddingToAlbum:(id)arg2 intoAssetsArray:(id)arg3 assetsKind:(int)arg4;
- (void)collectFileURLs:(id)arg1 forAddingToAlbum:(id)arg2 intoAssetsArray:(id)arg3 assetsKind:(int)arg4 testCreationDates:(_Bool)arg5;
- (void)_importAllDCIMAssets;
- (id)_orderedAssetsToImportCameraRollOnly:(_Bool)arg1;
- (_Bool)shouldRebuildDCIMDirectoryAtURL:(id)arg1 directoryEnumerator:(id)arg2 isPhotoStream:(_Bool *)arg3 isCPLAssets:(_Bool *)arg4 cameraRollOnly:(_Bool)arg5;
- (void)resumePhotoStreams;
- (void)pausePhotoStreams;
- (void)dontImportFileSystemDataIntoDatabase;
- (void)recalculateCachedCountsWithSemaphore:(id)arg1;
- (void)repairPotentialModelCorruption;
- (void)cleanupModelAfterRestoreFromiTunes;
- (long long)secondsNeededToCleanupModelAfteriTunesRestore;
- (void)loadFileSystemDataIntoDatabase;
@property(readonly, nonatomic) PLPhotoLibrary *photoLibrary;
- (void)dealloc;
- (id)init;
- (id)initWithImplicitTransaction:(_Bool)arg1;

@end

@interface PLMoment : PLManagedObject <PLAssetContainer, PLMomentData_Private>
{
    PLMomentNameInfo *_cachedNameInfo;
    _Bool _loadedNameInfo;
    _Bool isRegisteredForChanges;
    _Bool didRegisteredWithUserInterfaceContext;
}

+ (id)entityInManagedObjectContext:(id)arg1;
+ (id)entityName;
+ (id)allAssetsIncludedInMomentsInLibrary:(id)arg1;
+ (id)allMomentsInLibrary:(id)arg1;
+ (id)allAssetsIncludedInMomentsInManagedObjectContext:(id)arg1 error:(id *)arg2;
+ (id)allMomentsRequiringAnalysisInManagedObjectContext:(id)arg1 error:(id *)arg2;
+ (id)allMomentsInManagedObjectContext:(id)arg1 error:(id *)arg2;
+ (id)insertNewMomentInManagedObjectContext:(id)arg1 error:(id *)arg2;
@property(nonatomic) _Bool didRegisteredWithUserInterfaceContext; // @synthesize didRegisteredWithUserInterfaceContext;
@property(nonatomic) _Bool isRegisteredForChanges; // @synthesize isRegisteredForChanges;
@property(retain, nonatomic) NSArray *userTitles;
- (void)removeAssetData:(id)arg1;
- (void)replaceAssetDataAtIndex:(unsigned long long)arg1 withAssetData:(id)arg2;
@property(readonly, retain, nonatomic) NSObject<NSCopying> *uniqueObjectID;
- (void)removeAssets:(id)arg1;
- (void)addAssets:(id)arg1;
- (void)removeAssetsObject:(id)arg1;
- (void)addAssetsObject:(id)arg1;
- (void)replaceAssetsAtIndexes:(id)arg1 withAssets:(id)arg2;
- (void)removeAssetsAtIndexes:(id)arg1;
- (void)insertAssets:(id)arg1 atIndexes:(id)arg2;
- (void)replaceObjectInAssetsAtIndex:(unsigned long long)arg1 withObject:(id)arg2;
- (void)removeObjectFromAssetsAtIndex:(unsigned long long)arg1;
- (void)insertObject:(id)arg1 inAssetsAtIndex:(unsigned long long)arg2;
- (void)didTurnIntoFault;
- (id)mutableAssets;
- (void)willSave;
- (_Bool)validateForUpdate:(id *)arg1;
- (_Bool)validateForInsert:(id *)arg1;
- (_Bool)_validateForInsertOrUpdate:(id *)arg1;
- (void)delete;
- (id)diagnosticInformation;
- (_Bool)supportsDiagnosticInformation;
@property(retain, nonatomic) PLManagedAsset *tertiaryKeyAsset;
@property(retain, nonatomic) PLManagedAsset *secondaryKeyAsset;
@property(retain, nonatomic) PLManagedAsset *keyAsset;
- (void)invalidateNameInfo;
@property(readonly, copy, nonatomic) NSArray *localizedLocationNames;
@property(readonly, copy, nonatomic) NSString *localizedTitle;
- (void)_updateCachedNameInfoIfNeeded;
@property(readonly, nonatomic) _Bool canShowAvalancheStacks;
@property(readonly, nonatomic) _Bool canShowComments;
- (_Bool)canPerformEditOperation:(unsigned long long)arg1;
@property(readonly, nonatomic) _Bool isEmpty;
@property(readonly, nonatomic) unsigned long long videosCount;
@property(readonly, nonatomic) unsigned long long photosCount;
@property(readonly, nonatomic) unsigned long long assetsCount;
@property(readonly, nonatomic) unsigned long long approximateCount;
- (void)unregisterForChanges;
- (void)registerForChanges;
@property(retain, nonatomic) CLLocation *approximateLocation;
- (void)dealloc;
- (void)willTurnIntoFault;
- (void)awakeFromFetch;
- (void)awakeFromInsert;
- (struct CGImage *)posterImage;
- (id)groupURL;
- (_Bool)isCloudSharedAlbum;

// Remaining properties
@property(retain, nonatomic) NSData *approximateLocationData; // @dynamic approximateLocationData;
@property(retain, nonatomic) NSOrderedSet *assets; // @dynamic assets;
@property(nonatomic) int cachedCount; // @dynamic cachedCount;
@property(nonatomic) int cachedPhotosCount; // @dynamic cachedPhotosCount;
@property(nonatomic) int cachedVideosCount; // @dynamic cachedVideosCount;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(retain, nonatomic) NSDate *endDate; // @dynamic endDate;
@property(nonatomic) short generationType; // @dynamic generationType;
@property(readonly) unsigned long long hash;
@property(retain, nonatomic) PLMomentList *megaMomentList; // @dynamic megaMomentList;
@property(retain, nonatomic) PLMomentLibrary *momentLibrary; // @dynamic momentLibrary;
@property(retain, nonatomic) NSDate *representativeDate; // @dynamic representativeDate;
@property(retain, nonatomic) NSData *reverseLocationData; // @dynamic reverseLocationData;
@property(nonatomic) _Bool reverseLocationDataIsValid; // @dynamic reverseLocationDataIsValid;
@property(retain, nonatomic) NSDate *startDate; // @dynamic startDate;
@property(readonly) Class superclass;
@property(retain, nonatomic) NSString *title; // @dynamic title;
@property(retain, nonatomic) NSString *title2; // @dynamic title2;
@property(retain, nonatomic) NSString *title3; // @dynamic title3;
@property(retain, nonatomic) NSString *uuid; // @dynamic uuid;
@property(retain, nonatomic) PLMomentList *yearMomentList; // @dynamic yearMomentList;

@end

@interface PLMomentAnalyzer : NSObject
{
    NSObject<OS_dispatch_queue> *_workQueue;
    PLMomentAnalyzerWorkThread *_geoWorkThread;
    unsigned long long _mode;
    double _analysisStartTime;
    _Bool _delayedSavePending;
    unsigned long long _objectUpdatesSinceSave;
    NSMutableOrderedSet *_pendingGEORequests;
    NSMutableSet *_activeGEORequests;
    NSMutableSet *_processingMomentUuids;
    NSMutableSet *_megaMomentListIdsToProcess;
    NSMutableSet *_yearMomentListIdsToProcess;
    NSDateFormatter *_shortDateFormatter;
    NSDateFormatter *_dayOfTheWeekDateFormatter;
    id <PLMomentGenerationDataManagement> _momentDataManager;
    _Bool _analyzingAllMoments;
    _Bool _skippedMomentsDuringAnalysis;
    _Bool _passSuccess;
    unsigned long long _errorState;
    int _errorBackoffLevel;
    int _triesAtCurrentBackoffLevel;
    _Bool _networkObservingReachability;
    _Bool _needToUpdateInvalidMomentsWhenPossible;
    NSDictionary *_homeAddressDictionary;
    CLLocation *_homeLocation;
    id <GEOMapItemPrivate> _homeMapItem;
    NSString *_languageAndLocale;
    NSString *_lastGeoProviderId;
    NSOrderedSet *_defaultDominantGeoOrderingForMoment;
    NSOrderedSet *_defaultSecondaryLocationGeoOrderingForMoment;
    NSOrderedSet *_defaultDominantGeoOrderingForMegaMoment;
    NSOrderedSet *_defaultSecondaryLocationGeoOrderingForMegaMoment;
    NSOrderedSet *_defaultSecondaryGeoOrderingForYear;
    double _lastNetworkForcedAbortTime;
    double _timeToWaitBeforeNextRequest;
    double _lastRevGeoRequestTime;
    NSDate *_lastGeoVersionFileFetchDate;
    unsigned long long _lastGeoVersionFileVersion;
    NSDictionary *_serverVersionInfo;
    double _lastServerVersionInfoFetchAttemptTime;
    unsigned long long _currentRevGeoServerVersionNum;
    _Bool _pendingServerVersionInfoFetch;
    _Bool _addCountyIfNeeded;
    _Bool _noResultErrorIsSuccess;
    double _revGeoServerVersionInfoFetchNewVersionInterval;
    NSString *_revGeoServerVersionInfoURL;
    NSString *_currentProviderId;
    _Bool _momentAnalysisPaused;
    id <PLMomentGenerationDataManagement> _momentGenerationDataManager;
}

@property(nonatomic) id <PLMomentGenerationDataManagement> momentGenerationDataManager; // @synthesize momentGenerationDataManager=_momentGenerationDataManager;
- (void)resumeMomentAnalysis;
- (void)pauseMomentAnalysis;
- (void)_setMomentAnalysisPaused:(_Bool)arg1;
- (_Bool)updateInfoForMomentListWithMomentListId:(id)arg1;
- (_Bool)updateInfoForYearMomentLists:(id)arg1;
- (_Bool)updateInfoForMegaMomentLists:(id)arg1;
- (_Bool)updateInfoForMomentWithMomentId:(id)arg1 fromOnDemandRequest:(_Bool)arg2;
- (_Bool)updateInfoForMoments:(id)arg1 invalidOnly:(_Bool)arg2;
- (_Bool)_shouldProcessMoments:(id)arg1;
- (void)updateInfoForInvalidMomentsIfNeeded;
- (void)updateInfoForAllMoments;
- (void)_reAnalyzeCachedDataAndProcessOnlyHomeChanges:(_Bool)arg1;
- (unsigned long long)_errorTypeForError:(id)arg1;
- (_Bool)_isNetworkReachable;
- (void)_stopObservingReachabilityChanges;
- (void)_startObservingReachabilityChanges;
- (void)_networkReachabilityDidChange:(_Bool)arg1;
- (id)_userSuppliedTitlesForCountedSet:(id)arg1;
- (id)_localizedNamesForNameInfoArray:(id)arg1 namesUsed:(id)arg2 includeHome:(_Bool)arg3 outAddedHome:(_Bool *)arg4;
- (id)_simpleNamesForNameInfoArray:(id)arg1;
- (id)_dominantPlacesInPlaceInfoArray:(id)arg1 orderType:(unsigned long long)arg2 totalPlaceCount:(unsigned long long)arg3 includeAllPlaces:(_Bool)arg4 includeHome:(_Bool)arg5 homeAtEnd:(_Bool)arg6 atLastLevel:(_Bool)arg7 outOtherNonDominantPlaces:(id)arg8;
- (_Bool)_markInvalidLowQualityAssetsInMoment:(id)arg1 withCurrentProviderId:(id)arg2;
- (void)_updateInfoForAllMomentsWithReAnalyzeType:(unsigned long long)arg1;
- (_Bool)_canProcessMoments;
- (void)_setLocationDataValidForMomentId:(id)arg1;
- (unsigned long long)_significantPlaceCountInMap:(id)arg1;
- (id)_resetAndSortedNameInfoArray:(id)arg1 homeAtEnd:(_Bool)arg2;
- (void)_updateSecondaryInfoInCompoundNameInfo:(id)arg1 withRevGeoPlaces:(id)arg2 primaryCompoundNameInfo:(id)arg3 defaultGeoOrderingSet:(id)arg4 dominantPlaces:(id)arg5 otherNonDominantPlaces:(id)arg6 ordersCheckedOrUsed:(id)arg7 dominantOrder:(unsigned long long)arg8 usedHome:(_Bool)arg9;
- (id)_suffixForNameInfoArray:(id)arg1 afterOrderType:(unsigned long long)arg2;
- (id)_updateDominantInfoInCompoundNameInfo:(id)arg1 withRevGeoPlaces:(id)arg2 defaultGeoOrderingSet:(id)arg3 includeAllPlaces:(_Bool)arg4 includeHome:(_Bool)arg5 homeAtEnd:(_Bool)arg6 outOtherNonDominantPlaces:(id)arg7 outOrdersCheckedOrUsed:(id)arg8 outOrderUsed:(unsigned long long *)arg9 outUsedHome:(_Bool *)arg10;
- (void)_updateAllInfoInCompoundNameInfo:(id)arg1 andCompoundSecondaryNameInfo:(id)arg2 withRevGeoPlaces:(id)arg3 includeHome:(_Bool)arg4 primaryGeoOrderingSet:(id)arg5 secondaryGeoOrderingSet:(id)arg6;
- (void)_addOrUpdateNameInfo:(id)arg1 inPlaceInfoMap:(id)arg2;
- (unsigned long long)_indexForGeoOrder:(unsigned long long)arg1 inPrioritySet:(id)arg2;
- (unsigned long long)_geoOrderInPrioritySet:(id)arg1 atIndex:(unsigned long long)arg2;
- (id)_suffixForGeoPlace:(id)arg1 afterOrderType:(unsigned long long)arg2 homePlace:(id)arg3;
- (id)_geoLocationForCoordinate:(CDStruct_c3b9c2ee)arg1 date:(id)arg2;
- (void)_reverseGeocodeMoment:(id)arg1 shouldFilterIfInProgress:(_Bool)arg2 invalidOnly:(_Bool)arg3;
- (void)_finishedProcessingMomentWithUuid:(id)arg1 withSuccess:(_Bool)arg2;
- (_Bool)_startingToProcessMomentWithUuid:(id)arg1;
- (void)_processYearMomentLists;
- (unsigned long long)_processYearMomentList:(id)arg1;
- (void)_processMegaMomentLists;
- (unsigned long long)_processMegaMomentList:(id)arg1;
- (void)_processPendingGEORequests;
- (void)_processNextTransaction;
- (void)_waitForReachability;
- (void)_processNextAnalysisTransaction;
- (void)_analysisDidComplete:(_Bool)arg1;
- (void)_analysisComplete;
- (void)_saveDataIfReachedObjectChangeThreshold;
- (void)_saveDataIfNeededAfterTimeDiff:(double)arg1;
- (void)_saveNow;
- (void)_processGEORequestWithRequestInfo:(id)arg1;
- (id)_compactPlaceDescriptionForMapItem:(id)arg1;
- (_Bool)_updateHomeLocationInRevGeoInfo:(id)arg1 forLocation:(id)arg2 withHomeLocation:(id)arg3;
- (void)_finalizeDataForMoment:(id)arg1 withMomentLocationInfo:(id)arg2 success:(_Bool)arg3;
- (void)_addRevGeoPlacesAndUserTitlesFromAssets:(id)arg1 toPlacesArray:(id)arg2 toMomentTitles:(id)arg3 toCollectionTitles:(id)arg4;
- (void)_enqueueReverseGeocodeMomentWithRequestInfo:(id)arg1 shouldFilterIfInProgress:(_Bool)arg2;
- (void)_updateErrorStateWithSuccess:(_Bool)arg1 errorType:(unsigned long long)arg2;
- (void)_finishedGEORequestInfo:(id)arg1 withSuccess:(_Bool)arg2 errorType:(unsigned long long)arg3;
- (void)_setErrorState:(unsigned long long)arg1;
- (void)_resetErrorState;
- (void)addressBookChanged;
- (void)_updateHomeLocation;
- (void)_forwardGeocodeAddressDictionaryOnGeoThread:(id)arg1 withCompletionBlock:(CDUnknownBlockType)arg2;
- (void)_forwardGeocodeAddressDictionary:(id)arg1 withCompletionBlock:(CDUnknownBlockType)arg2;
- (void)_runOnWorkQueueAferSeconds:(double)arg1 block:(CDUnknownBlockType)arg2;
- (void)_runBlockOnWorkQueue:(CDUnknownBlockType)arg1;
@property(readonly, retain, nonatomic) id <PLMomentGenerationDataManagement> _momentDataManager;
@property(readonly, retain, nonatomic) CLLocation *_homeLocation;
- (void)_updateCurrentProviderIdWithCountryCode:(id)arg1;
- (void)_updateCurrentProviderId;
- (id)_currentProviderId;
- (void)_updateInformationForGeoProviderIfNeeded;
- (void)_updateInformationForGeoProviderIfNeededOnWorkQueue;
- (void)_countryCodeChanged:(id)arg1;
- (_Bool)_updateLanguageIfNeeded;
- (_Bool)_updateHomeAddressIfNeeded;
- (id)_locationFromDictionary:(id)arg1;
- (id)_dictionaryFromLocation:(id)arg1;
- (void)_saveGlobalMetadata;
- (void)_fetchServerVersionInfo;
- (void)_updateLocalServerVersionInfo:(id)arg1;
- (_Bool)_markInvalidOutOfDateAssetsInMoment:(id)arg1 forCurrentCountryVersionMap:(id)arg2 withCurrentProviderId:(id)arg3;
- (_Bool)_loadServerVersionInfo;
- (void)_updateDateFormattersForLocale:(id)arg1;
- (_Bool)setVersionInfoURLIfAvailable:(id)arg1;
- (void)_updateRevGeoServerFetchInfoConfig;
- (void)_finalizeInitOnWorkQueue;
- (id)init;
- (void)startAnalyzer;
- (void)_checkForNewServerVersionInfoIfNeeded;
- (void)dealloc;

@end

@interface PLMomentAnalyzerGeoRequestInfo : NSObject
{
    unsigned long long _requestType;
    NSObject<NSCopying> *_momentId;
    NSString *_momentUuid;
    NSArray *_assetIds;
    id <GEOMapServiceTicket> _reverseGeocodeRequest;
    unsigned long long _failureCount;
    NSArray *_extraAssetIds;
    NSArray *_extraLocations;
    PLRevGeoLocationInfo *_revGeoLocationInfo;
}

@property(retain, nonatomic) PLRevGeoLocationInfo *revGeoLocationInfo; // @synthesize revGeoLocationInfo=_revGeoLocationInfo;
@property(copy, nonatomic) NSArray *extraLocations; // @synthesize extraLocations=_extraLocations;
@property(copy, nonatomic) NSArray *extraAssetIds; // @synthesize extraAssetIds=_extraAssetIds;
@property(nonatomic) unsigned long long failureCount; // @synthesize failureCount=_failureCount;
@property(retain, nonatomic) id <GEOMapServiceTicket> reverseGeocodeRequest; // @synthesize reverseGeocodeRequest=_reverseGeocodeRequest;
@property(copy, nonatomic) NSArray *assetIds; // @synthesize assetIds=_assetIds;
@property(copy, nonatomic) NSString *momentUuid; // @synthesize momentUuid=_momentUuid;
@property(retain, nonatomic) NSObject<NSCopying> *momentId; // @synthesize momentId=_momentId;
@property(nonatomic) unsigned long long requestType; // @synthesize requestType=_requestType;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)description;
@property(readonly, nonatomic, getter=hasExtraData) _Bool extraData;
- (void)dealloc;
- (id)initWithRequestType:(unsigned long long)arg1 momentId:(id)arg2 momentUuid:(id)arg3 assetIds:(id)arg4 reverseGeocodeRequest:(id)arg5;

@end

@interface PLMomentAnalyzerWorkThread : NSThread
{
    NSPort *_dummyPort;
}

- (void)cancel;
- (void)removeDummyPort;
- (void)main;
- (void)dealloc;
- (id)init;

@end

@interface PLMomentCluster : NSObject
{
    short _generationType;
    NSString *__title;
    NSObject<NSCopying> *__objectID;
    NSDate *__startingDate;
    NSDate *__endingDate;
    CLLocation *__approximateLocation;
    NSMutableArray *__mutableNodes;
    NSMutableSet *__nodesWithLocation;
    NSCountedSet *__splitTags;
    NSCountedSet *__mergeTags;
}

+ (double)nameOccurrenceCutoff;
@property(retain, nonatomic, setter=_setMergeTags:) NSCountedSet *_mergeTags; // @synthesize _mergeTags=__mergeTags;
@property(retain, nonatomic, setter=_setSplitTags:) NSCountedSet *_splitTags; // @synthesize _splitTags=__splitTags;
@property(readonly, nonatomic) NSMutableSet *_nodesWithLocation; // @synthesize _nodesWithLocation=__nodesWithLocation;
@property(copy, nonatomic, setter=_setNodes:) NSMutableArray *_mutableNodes; // @synthesize _mutableNodes=__mutableNodes;
@property(nonatomic) short generationType; // @synthesize generationType=_generationType;
- (void)_setEndingDate:(id)arg1;
@property(retain, nonatomic) NSDate *endingDate; // @synthesize endingDate=__endingDate;
- (void)_setStartingDate:(id)arg1;
@property(retain, nonatomic) NSDate *startingDate; // @synthesize startingDate=__startingDate;
@property(readonly, nonatomic) NSObject<NSCopying> *objectID; // @synthesize objectID=__objectID;
@property(retain, nonatomic) NSString *title; // @synthesize title=__title;
- (unsigned long long)expandFromNode:(id)arg1 withNeighbors:(id)arg2 inClustering:(id)arg3 minimumNumberOfPoints:(unsigned long long)arg4;
@property(readonly, nonatomic) CLLocation *approximateLocation; // @synthesize approximateLocation=__approximateLocation;
- (void)_correctStartAndEndDates;
- (void)removeNodesFromCluster:(id)arg1;
- (void)removeNodes:(id)arg1;
- (void)removeNode:(id)arg1 nilCluster:(_Bool)arg2;
- (void)addNodes:(id)arg1;
- (void)addNodesFromCluster:(id)arg1;
- (void)addNode:(id)arg1;
- (id)mergeTags;
- (id)mergeTagAboveCutoff:(double)arg1;
- (id)splitTags;
- (_Bool)hasMerges;
- (_Bool)hasSplits;
- (_Bool)isTagged;
@property(readonly, copy, nonatomic) NSArray *nodes;
- (id)description;
- (void)dealloc;
- (id)initWithObjectID:(id)arg1;
- (id)initWithMoment:(id)arg1;
- (id)init;
- (void)commonPLMomentClusterInitialization;

@end

@interface PLMomentClustering : NSObject
{
    _Bool _dirty;
    _Bool _shouldApplyUserInfluenceBeforeClustering;
    _Bool _accumulatesSmallClusters;
    _Bool _spatialJoinsAdjacentClusters;
    CDUnknownBlockType _progressBlock;
    NSArray *_clusters;
    NSSet *_insertedClusters;
    NSSet *_updatedClusters;
    NSSet *_deletedClusters;
    double _sigma;
    double _theta;
    unsigned long long _accumulationSize;
    double _accumulationTimeInterval;
    double _accumulationJoinThreshold;
    double _accumulationRejectionThreshold;
    double _accumulationRejectionTimeInterval;
    double _spatialJoinTimeInterval;
    double _spatialJoinThreshold;
    unsigned long long __minimumNumberOfNodes;
    unsigned long long __numberOfVisitedNodes;
    unsigned long long __totalNumberOfNodes;
    PLMomentNodeCache *__nodeCache;
    CLGeocoder *__geocoder;
    NSMutableDictionary *__markedNodesByObjectID;
    NSMutableDictionary *__clustersByObjectID;
    NSMutableDictionary *__clustersByNodeObjectID;
}

+ (double)maximumClusterTime;
@property(readonly, nonatomic) NSMutableDictionary *_clustersByNodeObjectID; // @synthesize _clustersByNodeObjectID=__clustersByNodeObjectID;
@property(readonly, nonatomic) NSMutableDictionary *_clustersByObjectID; // @synthesize _clustersByObjectID=__clustersByObjectID;
@property(readonly, nonatomic) NSMutableDictionary *_markedNodesByObjectID; // @synthesize _markedNodesByObjectID=__markedNodesByObjectID;
@property(readonly, nonatomic) CLGeocoder *_geocoder; // @synthesize _geocoder=__geocoder;
@property(readonly, nonatomic) PLMomentNodeCache *_nodeCache; // @synthesize _nodeCache=__nodeCache;
@property(nonatomic, setter=_setTotalNumberOfNodes:) unsigned long long _totalNumberOfNodes; // @synthesize _totalNumberOfNodes=__totalNumberOfNodes;
@property(nonatomic, setter=_setNumberOfVisitedNodes:) unsigned long long _numberOfVisitedNodes; // @synthesize _numberOfVisitedNodes=__numberOfVisitedNodes;
@property(nonatomic, setter=_setMinimumNumberOfNodes:) unsigned long long _minimumNumberOfNodes; // @synthesize _minimumNumberOfNodes=__minimumNumberOfNodes;
@property(nonatomic) double spatialJoinThreshold; // @synthesize spatialJoinThreshold=_spatialJoinThreshold;
@property(nonatomic) double spatialJoinTimeInterval; // @synthesize spatialJoinTimeInterval=_spatialJoinTimeInterval;
@property(nonatomic) _Bool spatialJoinsAdjacentClusters; // @synthesize spatialJoinsAdjacentClusters=_spatialJoinsAdjacentClusters;
@property(nonatomic) double accumulationRejectionTimeInterval; // @synthesize accumulationRejectionTimeInterval=_accumulationRejectionTimeInterval;
@property(nonatomic) double accumulationRejectionThreshold; // @synthesize accumulationRejectionThreshold=_accumulationRejectionThreshold;
@property(nonatomic) double accumulationJoinThreshold; // @synthesize accumulationJoinThreshold=_accumulationJoinThreshold;
@property(nonatomic) double accumulationTimeInterval; // @synthesize accumulationTimeInterval=_accumulationTimeInterval;
@property(nonatomic) unsigned long long accumulationSize; // @synthesize accumulationSize=_accumulationSize;
@property(nonatomic) _Bool accumulatesSmallClusters; // @synthesize accumulatesSmallClusters=_accumulatesSmallClusters;
@property(nonatomic) _Bool shouldApplyUserInfluenceBeforeClustering; // @synthesize shouldApplyUserInfluenceBeforeClustering=_shouldApplyUserInfluenceBeforeClustering;
@property(nonatomic, getter=isDirty, setter=_setDirty:) _Bool dirty; // @synthesize dirty=_dirty;
@property(nonatomic) double theta; // @synthesize theta=_theta;
@property(nonatomic) double sigma; // @synthesize sigma=_sigma;
- (void)_setDeletedClusters:(id)arg1;
@property(copy, nonatomic) NSSet *deletedClusters; // @synthesize deletedClusters=_deletedClusters;
- (void)_setUpdatedClusters:(id)arg1;
@property(copy, nonatomic) NSSet *updatedClusters; // @synthesize updatedClusters=_updatedClusters;
- (void)_setInsertedClusters:(id)arg1;
@property(copy, nonatomic) NSSet *insertedClusters; // @synthesize insertedClusters=_insertedClusters;
- (void)_setClusters:(id)arg1;
@property(copy, nonatomic) NSArray *clusters; // @synthesize clusters=_clusters;
@property(copy, nonatomic) CDUnknownBlockType progressBlock; // @synthesize progressBlock=_progressBlock;
- (void)markNodeForDiagnosis:(id)arg1;
@property(readonly, nonatomic) _Bool hasMarkedNodes;
- (id)_clustersByMergingUserInfluencedClusters:(id)arg1;
- (id)_clustersBySplittingUserInfluencedClusters:(id)arg1;
- (id)clustersByApplyingUserInfluenceToClusters:(id)arg1;
- (id)spatialJoinClustersFromClusters:(id)arg1;
- (id)accumulateSmallClustersFromClusters:(id)arg1;
- (id)neighborsOfTaggedNode:(id)arg1;
- (id)neighborsOfNode:(id)arg1;
- (id)temporalSnapshotOfNode:(id)arg1 withRange:(double)arg2;
- (id)clustersWithNodes:(id)arg1 sigma:(double)arg2 theta:(double)arg3;
- (void)generateClustersForAssets:(id)arg1 withCompletionBlock:(CDUnknownBlockType)arg2;
- (id)generateClustersForAssets:(id)arg1;
- (void)dealloc;
- (id)initWithManagedMoments:(id)arg1;
- (id)init;
- (void)_commonPLMomentClusteringManagerInitialization;

@end

@interface PLMomentGeneration : NSObject
{
    NSMutableSet *_pendingInsertsAndUpdates;
    NSMutableDictionary *_pendingDeletes;
    NSObject<OS_dispatch_queue> *_pendingIsolation;
    PLMomentAnalyzer *_pairedAnalyzer;
    id <PLMomentGenerationDataManagement> _momentGenerationDataManager;
    PLMomentAnalyzer *_analyzer;
}

+ (id)_insertYearMomentListsForMoments:(id)arg1 earliestDate:(id)arg2 latestDate:(id)arg3 inMomentDataManager:(id)arg4;
+ (id)_insertMegaMomentListsForMoments:(id)arg1 inMomentDataManager:(id)arg2;
+ (void)_updateMoment:(id)arg1 fromCluster:(id)arg2 inManager:(id)arg3;
+ (id)_insertMomentsForAssets:(id)arg1 inManager:(id)arg2 withAffectedMoments:(id)arg3;
+ (id)generateSplitCustomMomentUUID;
+ (id)generateMergeCustomMomentUUID;
+ (_Bool)_rebuildAllMomentListsWithDataManager:(id)arg1 error:(id *)arg2;
@property(nonatomic) PLMomentAnalyzer *analyzer; // @synthesize analyzer=_analyzer;
@property(nonatomic) id <PLMomentGenerationDataManagement> momentGenerationDataManager; // @synthesize momentGenerationDataManager=_momentGenerationDataManager;
- (void)clearUserInfluencedMoments;
- (id)allMomentsMetadataWriteToFile:(id)arg1;
- (id)_detailsForMoment:(id)arg1;
- (id)_nameForMomentGenerationType:(short)arg1;
- (id)allAssetMetadataWriteToFile:(id)arg1;
- (id)_logEntryForAssets:(id)arg1 isBatchUpdate:(_Bool)arg2;
- (void)_appendAssetsToReplayLog:(id)arg1 forBatchUpdate:(_Bool)arg2;
- (id)_detailsForAsset:(id)arg1 simpleOnly:(_Bool)arg2;
- (_Bool)_writeDetails:(id)arg1 toFilepath:(id)arg2 withDefaultFilename:(id)arg3;
- (id)_rangesForAssetsCount:(unsigned long long)arg1;
- (id)_insertYearMomentListsForMoments:(id)arg1 earliestDate:(id)arg2 latestDate:(id)arg3 inMomentDataManager:(id)arg4;
- (id)_insertMegaMomentListsForMoments:(id)arg1 inMomentDataManager:(id)arg2;
- (id)_insertMomentsForAssets:(id)arg1 inManager:(id)arg2 withAffectedMoments:(id)arg3;
- (void)rebuildAllMomentLists:(CDUnknownBlockType)arg1;
- (_Bool)_rebuildAllMomentsInManager:(id)arg1 shouldAnalyze:(_Bool)arg2 error:(id *)arg3;
- (_Bool)_deleteAllMomentDataInManager:(id)arg1 incremental:(_Bool)arg2 error:(id *)arg3;
- (void)rebuildAllMomentsIncremental:(_Bool)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)generateWithIncrementalDataCompletionHandler:(CDUnknownBlockType)arg1;
- (void)generateWithAssetInsertsAndUpdates:(id)arg1 andDeletes:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)saveChangesForAssetInsertsAndUpdates:(id)arg1 andDeletes:(id)arg2;
- (_Bool)_isAsset:(id)arg1 identicalToAssetForMoments:(id)arg2;
- (id)_newPublicGlobalUUIDsToAssetsMappingWithAssets:(id)arg1;
- (id)affectedMomentsForAssetDateCreated:(id)arg1 inManager:(id)arg2;
- (void)dealloc;
- (id)init;
- (_Bool)rebuildAllMomentsWithManager:(id)arg1 error:(id *)arg2;

@end

@interface PLMomentGenerationDataManager : NSObject <PLMomentGenerationDataManagement_Private>
{
    PLXPCTransaction *_keepAliveTransaction;
    CDUnknownBlockType _reachabilityBlock;
    void *_addressBook;
    PLMomentGeneration *_generator;
    PLMomentAnalyzer *_analyzer;
    NSDictionary *_generationOptions;
    _Bool _observingReachability;
    NSManagedObjectContext *_managedObjectContext;
    PLPhotoLibrary *_momentGenerationLibrary;
}

+ (_Bool)isManagedObjectContextMomentarilyBlessed:(id)arg1;
+ (_Bool)isManagerMomentarilyBlessed:(id)arg1;
+ (void)setManagerMomentarilyBlessed:(id)arg1;
+ (id)sharedMomentGenerationDataManager;
@property(retain, nonatomic) PLPhotoLibrary *momentGenerationLibrary; // @synthesize momentGenerationLibrary=_momentGenerationLibrary;
@property(retain, nonatomic) NSManagedObjectContext *managedObjectContext; // @synthesize managedObjectContext=_managedObjectContext;
- (id)replayLogPath;
- (_Bool)wantsMomentReplayLogging;
- (id)insertNewMoment;
- (id)insertNewMomentListForGranularityLevel:(short)arg1;
- (id)allAssetsToBeIncludedInMomentsWithError:(id *)arg1;
- (id)allMomentListsWithInvalidReverseLocationDataForLevel:(short)arg1;
- (id)allMomentListsForLevel:(short)arg1;
- (id)allMomentsWithInvalidReverseLocationData;
- (id)allMomentsWithError:(id *)arg1;
- (id)findOrCreateYearMomentListForYear:(long long)arg1;
- (id)yearMomentListForYear:(long long)arg1 wantsEarliest:(_Bool)arg2;
- (id)momentListContainingDate:(id)arg1 forLevel:(short)arg2 wantsEarliest:(_Bool)arg3;
- (id)momentsBetweenDate:(id)arg1 andDate:(id)arg2 sorted:(_Bool)arg3;
- (id)momentsSinceDate:(id)arg1;
- (void)_removeKeepAlive;
- (void)_updateKeepAlive;
- (id)homeAddressDictionary;
- (id)_currentHomeAddressDictionary;
- (id)_addressDictionaryForABRecord:(void *)arg1 identifier:(int)arg2;
@property(readonly, nonatomic) void *_addressBook;
- (_Bool)isNetworkReachable;
- (void)stopObservingNetworkReachabilityChanges;
- (void)beginObservingNetworkReachabilityChangesWithBlock:(CDUnknownBlockType)arg1;
- (void)_networkReachabilityDidChange:(id)arg1;
- (id)generationOptions;
- (void)pendingChangesUpdated:(unsigned long long)arg1;
- (void)insertMomentIntoAllMoments:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)removeMomentFromAllMoments:(id)arg1;
- (id)allMomentsInLibrary;
- (void)resetOnFailure;
- (_Bool)save:(id *)arg1;
- (Class)momentAssetDataClass;
- (Class)momentListDataClassForGranularityLevel:(short)arg1;
- (Class)momentDataClass;
- (_Bool)hasChanges;
- (void)refreshObject:(id)arg1 mergeChanges:(_Bool)arg2;
- (id)momentListWithUniqueID:(id)arg1 forLevel:(short)arg2 error:(id *)arg3;
- (id)momentWithUniqueID:(id)arg1 error:(id *)arg2;
- (id)assetWithUniqueID:(id)arg1 error:(id *)arg2;
- (id)analysisMetadata;
- (_Bool)saveAnalysisMetadata:(id)arg1;
- (id)serverVersionInfo;
- (_Bool)saveServerVersionInfo:(id)arg1;
- (id)_serverVersionInfoFilePath;
- (id)_metadataPath;
- (void)setMomentAnalysisNeeded:(_Bool)arg1;
- (_Bool)isMomentAnalysisNeeded;
- (id)deletedObjects;
- (id)updatedObjects;
- (id)insertedObjects;
- (void)performDataTransaction:(CDUnknownBlockType)arg1 synchronously:(_Bool)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)performBlock:(CDUnknownBlockType)arg1 synchronously:(_Bool)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)setupPhotoLibrary;
- (id)analyzer;
- (id)generator;
- (void)reloadGenerationOptions;
- (void)_finalizeInit;
- (void)dealloc;
- (id)initWithManagedObjectContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PLMomentLibrary : PLManagedObject <PLAssetContainerList, PLMomentContainer>
{
}

+ (void)addSingletonObjectsToContext:(id)arg1;
+ (id)sharedMomentLibraryInManagedObjectContext:(id)arg1 createIfNecessary:(_Bool)arg2;
+ (id)sharedMomentLibraryInManagedObjectContext:(id)arg1;
+ (id)entityInManagedObjectContext:(id)arg1;
+ (id)entityName;
- (void)removeMoments:(id)arg1;
- (void)addMoments:(id)arg1;
- (void)removeMomentsObject:(id)arg1;
- (void)addMomentsObject:(id)arg1;
- (void)replaceMomentsAtIndexes:(id)arg1 withMoments:(id)arg2;
- (void)removeMomentsAtIndexes:(id)arg1;
- (void)insertMoments:(id)arg1 atIndexes:(id)arg2;
- (void)replaceObjectInMomentsAtIndex:(unsigned long long)arg1 withObject:(id)arg2;
- (void)removeObjectFromMomentsAtIndex:(unsigned long long)arg1;
- (void)insertObject:(id)arg1 inMomentsAtIndex:(unsigned long long)arg2;
- (id)_typeDescription;
- (id)containersRelationshipName;
- (_Bool)canEditContainers;
- (_Bool)isEmpty;
@property(readonly, nonatomic) unsigned long long containersCount;
- (id)containers;
- (void)prepareForDeletion;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(retain, nonatomic) NSOrderedSet *moments; // @dynamic moments;
@property(readonly) Class superclass;

@end

@interface PLMomentList : PLManagedObject <PLAssetContainerList, PLMomentListData>
{
    PLMomentNameInfo *_cachedNameInfo;
    _Bool _loadedNameInfo;
}

+ (id)descriptionForGranularityLevel:(short)arg1;
+ (id)findOrCreateYearMomentListForYear:(long long)arg1 inManagedObjectContext:(id)arg2;
+ (id)findOrCreateMegaMomentListForLeftoverMomentsInMonth:(long long)arg1 inYear:(long long)arg2 withDay:(long long)arg3 inManagedObjectContext:(id)arg4;
+ (id)allMomentListsRequiringAnalysisInManagedObjectContext:(id)arg1 forLevel:(short)arg2 error:(id *)arg3;
+ (id)allMomentListsRequiringAnalysisInManagedObjectContext:(id)arg1 error:(id *)arg2;
+ (id)allMomentListsInManagedObjectContext:(id)arg1 forLevel:(short)arg2 error:(id *)arg3;
+ (id)allMomentListsInManagedObjectContext:(id)arg1 forLevel:(short)arg2 error:(id *)arg3 returnsObjectsAsFaults:(_Bool)arg4;
+ (id)allMomentListsInLibrary:(id)arg1 forLevel:(short)arg2;
+ (id)allMomentListsInLibrary:(id)arg1 forLevel:(short)arg2 returnsObjectsAsFaults:(_Bool)arg3;
+ (id)entityInManagedObjectContext:(id)arg1;
+ (id)entityName;
@property(retain, nonatomic) NSArray *userTitles;
- (id)momentListDebugDescription;
- (void)addMoment:(id)arg1 forMegaMomentAtIndex:(unsigned long long)arg2;
- (void)removeMoments:(id)arg1 forMomentListLevel:(short)arg2;
- (void)addMoments:(id)arg1 forMomentListLevel:(short)arg2;
- (void)removeMoment:(id)arg1 forMomentListLevel:(short)arg2;
- (void)addMoment:(id)arg1 forMomentListLevel:(short)arg2;
- (void)addMomentToFront:(id)arg1;
- (void)removeMoments:(id)arg1;
- (void)addMoments:(id)arg1;
@property(readonly, retain, nonatomic) NSObject<NSCopying> *uniqueObjectID;
- (void)removeMomentsForYear:(id)arg1;
- (void)addMomentsForYear:(id)arg1;
- (void)removeMomentsForYearObject:(id)arg1;
- (void)addMomentsForYearObject:(id)arg1;
- (void)replaceMomentsForYearAtIndexes:(id)arg1 withMomentsForYear:(id)arg2;
- (void)removeMomentsForYearAtIndexes:(id)arg1;
- (void)insertMomentsForYear:(id)arg1 atIndexes:(id)arg2;
- (void)replaceObjectInMomentsForYearAtIndex:(unsigned long long)arg1 withObject:(id)arg2;
- (void)removeObjectFromMomentsForYearAtIndex:(unsigned long long)arg1;
- (void)insertObject:(id)arg1 inMomentsForYearAtIndex:(unsigned long long)arg2;
- (void)removeMomentsForMegaMoment:(id)arg1;
- (void)addMomentsForMegaMoment:(id)arg1;
- (void)removeMomentsForMegaMomentObject:(id)arg1;
- (void)addMomentsForMegaMomentObject:(id)arg1;
- (void)replaceMomentsForMegaMomentAtIndexes:(id)arg1 withMomentsForMegaMoment:(id)arg2;
- (void)removeMomentsForMegaMomentAtIndexes:(id)arg1;
- (void)insertMomentsForMegaMoment:(id)arg1 atIndexes:(id)arg2;
- (void)replaceObjectInMomentsForMegaMomentAtIndex:(unsigned long long)arg1 withObject:(id)arg2;
- (void)removeObjectFromMomentsForMegaMomentAtIndex:(unsigned long long)arg1;
- (void)insertObject:(id)arg1 inMomentsForMegaMomentAtIndex:(unsigned long long)arg2;
- (void)didTurnIntoFault;
- (id)pl_debugDescription;
- (id)diagnosticInformation;
- (_Bool)supportsDiagnosticInformation;
- (void)invalidateNameInfo;
@property(readonly, retain, nonatomic) NSArray *localizedLocationNames;
@property(readonly, retain, nonatomic) NSString *localizedTitle;
- (void)_updateCachedNameInfoIfNeeded;
@property(retain, nonatomic) NSOrderedSet *moments;
- (id)_typeDescription;
- (id)containersRelationshipName;
- (_Bool)canEditContainers;
- (_Bool)isEmpty;
@property(readonly, nonatomic) unsigned long long containersCount;
- (id)containers;
- (void)willSave;
- (_Bool)validateForUpdate:(id *)arg1;
- (_Bool)validateForInsert:(id *)arg1;
- (_Bool)_validateForInsertOrUpdate:(id *)arg1;
- (void)dealloc;
- (_Bool)isMeaningful;
- (void)delete;
- (void)awakeFromInsert;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(retain, nonatomic) NSDate *endDate; // @dynamic endDate;
@property(nonatomic) short generationType; // @dynamic generationType;
@property(nonatomic) short granularityLevel; // @dynamic granularityLevel;
@property(readonly) unsigned long long hash;
@property(retain, nonatomic) NSOrderedSet *momentsForMegaMoment; // @dynamic momentsForMegaMoment;
@property(retain, nonatomic) NSOrderedSet *momentsForYear; // @dynamic momentsForYear;
@property(retain, nonatomic) NSDate *representativeDate; // @dynamic representativeDate;
@property(retain, nonatomic) NSData *reverseLocationData; // @dynamic reverseLocationData;
@property(nonatomic) _Bool reverseLocationDataIsValid; // @dynamic reverseLocationDataIsValid;
@property(nonatomic) int sortIndex; // @dynamic sortIndex;
@property(retain, nonatomic) NSDate *startDate; // @dynamic startDate;
@property(readonly) Class superclass;
@property(retain, nonatomic) NSString *title; // @dynamic title;
@property(retain, nonatomic) NSString *title2; // @dynamic title2;
@property(retain, nonatomic) NSString *title3; // @dynamic title3;
@property(retain, nonatomic) NSString *uuid; // @dynamic uuid;

@end

@interface PLMomentListCluster : NSObject
{
    unsigned long long _month;
    unsigned long long _year;
    unsigned long long _numberOfMoments;
    unsigned long long _numberOfAssets;
    NSMutableSet *__moments;
}

@property(readonly, nonatomic) NSMutableSet *_moments; // @synthesize _moments=__moments;
@property(readonly, nonatomic) unsigned long long numberOfAssets; // @synthesize numberOfAssets=_numberOfAssets;
@property(readonly, nonatomic) unsigned long long numberOfMoments; // @synthesize numberOfMoments=_numberOfMoments;
@property(readonly, nonatomic) unsigned long long year; // @synthesize year=_year;
@property(readonly, nonatomic) unsigned long long month; // @synthesize month=_month;
- (unsigned long long)peak;
- (void)removeMoment:(id)arg1;
- (void)addMoment:(id)arg1;
- (void)dealloc;
- (id)initWithMonth:(unsigned long long)arg1 year:(unsigned long long)arg2;
- (id)init;

@end

@interface PLMomentListClustering : NSObject
{
    _Bool _allowsCollectionInfluencing;
    _Bool _allowsCollectionAccumulation;
    _Bool _allowsYearAccumulation;
    double __maximumTimeThreshold;
    double __maximumTimeThresholdBetweenMomentsWithLocation;
    double __maximumTimeThresholdFromPeakMatch;
    double __maximumTimeThresholdBetweenMomentsWithoutLocation;
    double __maximumTimeThresholdFromPeakWithoutLocation;
    double __maximumDistanceThresholdBetweenMoments;
    double __maximumDistanceThresholdFromPeak;
    double __maximumDistanceBetweenAccumulatedMoments;
    unsigned long long __defaultNumberOfAssetsRequiredForSeeding;
    unsigned long long __defaultMaxFailuresForExpansion;
    double __megamomentAccumulationMaximumTimeThreshold;
    unsigned long long __minimumNumberOfAssetsToAvoidMegamomentAccumulation;
    unsigned long long __minimumNumberOfAssetsToAvoidYearAccumulation;
    NSMutableDictionary *__clustersByYearAndMonth;
    NSMutableSet *__visitedMoments;
    NSMapTable *__cachedLocationsByMoment;
    NSMutableDictionary *__cachedCollectionTagByMomentID;
    NSDateFormatter *__debugDateFormatter;
}

+ (double)maximumTimeThresholdBetweenMoments;
@property(readonly, nonatomic) NSDateFormatter *_debugDateFormatter; // @synthesize _debugDateFormatter=__debugDateFormatter;
@property(retain, nonatomic, setter=_setCachedCollectionTagByMomentID:) NSMutableDictionary *_cachedCollectionTagByMomentID; // @synthesize _cachedCollectionTagByMomentID=__cachedCollectionTagByMomentID;
@property(retain, nonatomic, setter=_setCachedLocationsByMoment:) NSMapTable *_cachedLocationsByMoment; // @synthesize _cachedLocationsByMoment=__cachedLocationsByMoment;
@property(readonly, nonatomic) NSMutableSet *_visitedMoments; // @synthesize _visitedMoments=__visitedMoments;
@property(readonly, nonatomic) NSMutableDictionary *_clustersByYearAndMonth; // @synthesize _clustersByYearAndMonth=__clustersByYearAndMonth;
@property(readonly, nonatomic) unsigned long long _minimumNumberOfAssetsToAvoidYearAccumulation; // @synthesize _minimumNumberOfAssetsToAvoidYearAccumulation=__minimumNumberOfAssetsToAvoidYearAccumulation;
@property(readonly, nonatomic) unsigned long long _minimumNumberOfAssetsToAvoidMegamomentAccumulation; // @synthesize _minimumNumberOfAssetsToAvoidMegamomentAccumulation=__minimumNumberOfAssetsToAvoidMegamomentAccumulation;
@property(readonly, nonatomic) double _megamomentAccumulationMaximumTimeThreshold; // @synthesize _megamomentAccumulationMaximumTimeThreshold=__megamomentAccumulationMaximumTimeThreshold;
@property(readonly, nonatomic) unsigned long long _defaultMaxFailuresForExpansion; // @synthesize _defaultMaxFailuresForExpansion=__defaultMaxFailuresForExpansion;
@property(readonly, nonatomic) unsigned long long _defaultNumberOfAssetsRequiredForSeeding; // @synthesize _defaultNumberOfAssetsRequiredForSeeding=__defaultNumberOfAssetsRequiredForSeeding;
@property(readonly, nonatomic) double _maximumDistanceBetweenAccumulatedMoments; // @synthesize _maximumDistanceBetweenAccumulatedMoments=__maximumDistanceBetweenAccumulatedMoments;
@property(readonly, nonatomic) double _maximumDistanceThresholdFromPeak; // @synthesize _maximumDistanceThresholdFromPeak=__maximumDistanceThresholdFromPeak;
@property(readonly, nonatomic) double _maximumDistanceThresholdBetweenMoments; // @synthesize _maximumDistanceThresholdBetweenMoments=__maximumDistanceThresholdBetweenMoments;
@property(readonly, nonatomic) double _maximumTimeThresholdFromPeakWithoutLocation; // @synthesize _maximumTimeThresholdFromPeakWithoutLocation=__maximumTimeThresholdFromPeakWithoutLocation;
@property(readonly, nonatomic) double _maximumTimeThresholdBetweenMomentsWithoutLocation; // @synthesize _maximumTimeThresholdBetweenMomentsWithoutLocation=__maximumTimeThresholdBetweenMomentsWithoutLocation;
@property(readonly, nonatomic) double _maximumTimeThresholdFromPeakMatch; // @synthesize _maximumTimeThresholdFromPeakMatch=__maximumTimeThresholdFromPeakMatch;
@property(readonly, nonatomic) double _maximumTimeThresholdBetweenMomentsWithLocation; // @synthesize _maximumTimeThresholdBetweenMomentsWithLocation=__maximumTimeThresholdBetweenMomentsWithLocation;
@property(readonly, nonatomic) double _maximumTimeThreshold; // @synthesize _maximumTimeThreshold=__maximumTimeThreshold;
@property(nonatomic) _Bool allowsYearAccumulation; // @synthesize allowsYearAccumulation=_allowsYearAccumulation;
@property(nonatomic) _Bool allowsCollectionAccumulation; // @synthesize allowsCollectionAccumulation=_allowsCollectionAccumulation;
@property(nonatomic) _Bool allowsCollectionInfluencing; // @synthesize allowsCollectionInfluencing=_allowsCollectionInfluencing;
- (id)generateYearMomentListsForMoments:(id)arg1 earliestDate:(id)arg2 latestDate:(id)arg3 inManager:(id)arg4;
- (id)generateMegaMomentListsForMoments:(id)arg1 inManager:(id)arg2;
- (id)_cachedLocationForMoment:(id)arg1;
- (void)_verifyMomentsAreSorted:(id)arg1;
- (void)_createMomentListTagCacheForMoments:(id)arg1;
- (void)_createMomentListClusterCacheForMoments:(id)arg1;
- (_Bool)_updateMegaMomentList:(id)arg1 withRejectedMoments:(id)arg2;
- (unsigned long long)_expandMegaMomentList:(id)arg1 fromPeakMoment:(id)arg2 towardMoments:(id)arg3 forwards:(_Bool)arg4 outRejectedMoments:(id)arg5;
- (_Bool)_isDateInMoment:(id)arg1 inDateRangeOfLastMoment:(id)arg2 withDelta:(double)arg3 forwards:(_Bool)arg4;
- (_Bool)_shouldMegaMomentList:(id)arg1 includeMoment:(id)arg2 withPeakMoment:(id)arg3 recentMoment:(id)arg4 recentMomentWithLocation:(id)arg5 forwards:(_Bool)arg6 haveRejectedMomentsForDistance:(_Bool)arg7;
- (id)_insertNewMegaMomentListWithMoment:(id)arg1 inManager:(id)arg2;
- (void)dealloc;
- (id)init;

@end

@interface PLMomentNameInfo : NSObject
{
    _Bool _locationInfoIsValid;
    PLRevGeoCompoundNameInfo *__primaryNameInfo;
    PLRevGeoCompoundNameInfo *__secondaryNameInfo;
    NSArray *__orderedNames;
}

+ (id)_localizedNameForName:(id)arg1;
@property(retain, nonatomic, setter=_setOrderedNames:) NSArray *_orderedNames; // @synthesize _orderedNames=__orderedNames;
@property(retain, nonatomic) PLRevGeoCompoundNameInfo *_secondaryNameInfo; // @synthesize _secondaryNameInfo=__secondaryNameInfo;
@property(retain, nonatomic) PLRevGeoCompoundNameInfo *_primaryNameInfo; // @synthesize _primaryNameInfo=__primaryNameInfo;
- (id)componentsForSecondaryTitle;
- (id)componentsForPrimaryTitle;
- (id)localizedPrimaryTitle;
- (_Bool)locationInfoIsValid;
- (void)dealloc;
- (id)initWithMomentList:(id)arg1;
- (id)initWithMoment:(id)arg1;

@end

@interface PLMomentNode : NSObject
{
    _Bool _marked;
    _Bool _visited;
    NSObject<NSCopying> *__objectID;
    CLLocation *__location;
    NSDate *__creationDate;
    PLMomentCluster *__cluster;
    unsigned long long __userTagType;
    NSString *__userTag;
    NSNumber *_cacheInsertionIndex;
}

@property(retain, nonatomic) NSNumber *cacheInsertionIndex; // @synthesize cacheInsertionIndex=_cacheInsertionIndex;
@property(nonatomic, getter=isVisited) _Bool visited; // @synthesize visited=_visited;
@property(nonatomic, getter=isMarked) _Bool marked; // @synthesize marked=_marked;
@property(readonly, nonatomic) NSString *userTag; // @synthesize userTag=__userTag;
@property(readonly, nonatomic) unsigned long long userTagType; // @synthesize userTagType=__userTagType;
@property(nonatomic) PLMomentCluster *cluster; // @synthesize cluster=__cluster;
@property(readonly, retain, nonatomic) NSDate *creationDate; // @synthesize creationDate=__creationDate;
@property(readonly, nonatomic) CLLocation *location; // @synthesize location=__location;
@property(readonly, retain, nonatomic) NSObject<NSCopying> *objectID; // @synthesize objectID=__objectID;
- (_Bool)isTagged;
@property(readonly, nonatomic) CDStruct_c3b9c2ee coordinate;
- (id)description;
- (void)dealloc;
- (id)initWithPartialFetchDictionary:(id)arg1;
- (id)initWithManagedAsset:(id)arg1;

@end

@interface PLMomentNodeCache : NSObject
{
    NSMutableDictionary *__nodesByObjectID;
    NSMutableDictionary *__nodesByUserTag;
    NSMutableArray *__nodesByRowID;
    struct sqlite3 *__momentsDatabase;
    struct sqlite3_stmt *__spatialInsertStatement;
    struct sqlite3_stmt *__temporalInsertStatement;
    struct sqlite3_stmt *__spatialSelectStatement;
    struct sqlite3_stmt *__temporalSelectStatement;
}

@property(readonly, nonatomic) struct sqlite3_stmt *_temporalSelectStatement; // @synthesize _temporalSelectStatement=__temporalSelectStatement;
@property(readonly, nonatomic) struct sqlite3_stmt *_spatialSelectStatement; // @synthesize _spatialSelectStatement=__spatialSelectStatement;
@property(readonly, nonatomic) struct sqlite3_stmt *_temporalInsertStatement; // @synthesize _temporalInsertStatement=__temporalInsertStatement;
@property(readonly, nonatomic) struct sqlite3_stmt *_spatialInsertStatement; // @synthesize _spatialInsertStatement=__spatialInsertStatement;
@property(readonly, nonatomic) struct sqlite3 *_momentsDatabase; // @synthesize _momentsDatabase=__momentsDatabase;
@property(readonly, nonatomic) NSMutableArray *_nodesByRowID; // @synthesize _nodesByRowID=__nodesByRowID;
@property(readonly, nonatomic) NSMutableDictionary *_nodesByUserTag; // @synthesize _nodesByUserTag=__nodesByUserTag;
@property(readonly, nonatomic) NSMutableDictionary *_nodesByObjectID; // @synthesize _nodesByObjectID=__nodesByObjectID;
- (id)taggedNeighborsOfNode:(id)arg1;
- (id)nodesWithTag:(id)arg1;
- (id)spatialNeighborsOfNodes:(id)arg1 forSigma:(double)arg2;
- (id)temporalNeighborsOfNode:(id)arg1 forTheta:(double)arg2;
- (id)nodesWithinMinDate:(double)arg1 maxDate:(double)arg2;
- (unsigned long long)countOfTemporalNeighborsOfNode:(id)arg1 forTheta:(double)arg2;
- (id)tieBreakerForNode:(id)arg1;
- (id)nodeWithPartialAssetDictionary:(id)arg1;
- (id)nodeForAsset:(id)arg1;
- (void)performBatch:(CDUnknownBlockType)arg1;
- (void)prepareAndExecuteStatement:(const char *)arg1;
- (void)executePreparedStatement:(struct sqlite3_stmt *)arg1 withStatementBlock:(CDUnknownBlockType)arg2;
- (struct sqlite3_stmt *)prepareStatement:(const char *)arg1;
- (void)addNodeByUserTag:(id)arg1;
- (void)insertNode:(id)arg1;
- (void)closeMomentsDatabase;
- (void)setupMomentsDatabase;
- (void)openMomentsDatabase;
- (void)dealloc;
- (id)init;

@end

@interface PLMomentTemporalSnapshot : NSObject
{
    NSMutableSet *__nodes;
    double __range;
    double __distance;
}

@property(readonly, nonatomic) double distance; // @synthesize distance=__distance;
@property(readonly, nonatomic) double range; // @synthesize range=__range;
@property(readonly, nonatomic) NSMutableSet *nodes; // @synthesize nodes=__nodes;
- (id)initWithNodes:(id)arg1 inRange:(double)arg2;

@end

@interface PLObjectSnapshot : NSObject
{
    PLManagedObject *_managedObject;
    NSKnownKeysDictionary *_snapshotValues;
    struct __CFDictionary *_indexMaps;
}

+ (struct __CFDictionary *)_createIndexMapsSnapshotForManagedObject:(id)arg1 changeNotificationCenter:(id)arg2;
+ (id)snapshotForManagedObject:(id)arg1 changeNotificationCenter:(id)arg2 useCommitedValues:(_Bool)arg3;
@property(readonly, retain, nonatomic) PLManagedObject *managedObject; // @synthesize managedObject=_managedObject;
- (void)setAssetsSnapshot:(id)arg1;
- (id)_allSnapshotValuesDescription;
- (id)_snapshotValueForProperty:(id)arg1;
- (id)description;
- (id)filteredIndexesForFilter:(id)arg1;
- (id)indexMapStateForDerivedObject:(id)arg1;
- (_Bool)hasSnapshotValueForProperty:(id)arg1;
- (id)snapshotValueForProperty:(id)arg1;
- (id)initWithManagedObject:(id)arg1 properties:(id)arg2 toOneRelationships:(id)arg3 indexMaps:(struct __CFDictionary *)arg4 useCommitedValues:(_Bool)arg5;
- (void)dealloc;
- (id)init;

@end

@interface PLPTPdAssetEnumerator : NSObject <NSFastEnumeration>
{
    PLManagedObjectContext *_managedObjectContext;
    NSArray *_assetObjectIDs;
    NSArray *_albumObjectIDs;
    NSArray *_resultStore;
}

+ (id)enumeratorWithAssetObjectIDs:(id)arg1 albumObjectIDs:(id)arg2 managedObjectContext:(id)arg3;
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
- (void)dealloc;
- (id)init;
- (id)assetsFromOffset:(unsigned long long)arg1 count:(unsigned long long)arg2;
- (unsigned long long)getPTPdInfo:(id *)arg1 count:(unsigned long long)arg2 fetchOffset:(unsigned long long)arg3;

@end

@interface PLPTPdAssetManager : NSObject <PLManagedObjectContextPTPNotificationDelegate>
{
    NSObject<PhotoLibraryPTPDelegate> *_delegate;
    NSArray *_albumObjectIDs;
    NSString *_firstDCIMFolderServiced;
    NSSet *_availableAssetIDs;
    PLPhotoLibrary *_photoLibrary;
    int _libraryStatus;
    NSObject<OS_dispatch_queue> *availableAssetsQueue;
    NSFileManager *fileManager;
}

@property(retain, nonatomic) NSFileManager *fileManager; // @synthesize fileManager;
- (void)managedObjectContext:(id)arg1 libraryChangedWithInsertedAssetIDs:(id)arg2 deletedAssetIDs:(id)arg3 changedAssetIDs:(id)arg4;
- (void)deleteAsset:(struct NSObject *)arg1;
- (id)infoForAsset:(struct NSObject *)arg1;
- (id)assetsInAssociation:(struct NSObject *)arg1;
- (id)associationsInAlbum:(struct NSObject *)arg1;
- (id)infoForAlbum:(struct NSObject *)arg1;
- (id)albumHandles;
@property(readonly, retain, nonatomic) PLPhotoLibrary *photoLibrary;
- (void)handlePhotoLibraryAvailableNotification;
- (void)dealloc;
- (id)init;
- (_Bool)libraryIsAvailable;
- (_Bool)ptpCanDeleteFiles;
- (id)ptpInformationForPhotosWithPrimaryKeys:(id)arg1;
- (id)ptpInformationForPhotoWithObjectID:(id)arg1;
@property(nonatomic) NSObject<PhotoLibraryPTPDelegate> *delegate;
- (void)setPtpDelegate:(id)arg1;
- (_Bool)ptpDeletePhotoWithKey:(struct NSObject *)arg1 andExtension:(id)arg2;
- (id)ptpThumbnailForPhotoWithKey:(struct NSObject *)arg1;
- (id)ptpInformationForFilesInDirectory:(id)arg1;
- (id)_ptpInformationForAllAssets;
- (id)_fetchObjectIDsForAssetsExposedToPTPFromObjectIDs:(id)arg1;
- (id)_allAssetObjectIDs;
- (_Bool)_isPTPAlbum:(id)arg1;
@property(readonly, retain, nonatomic) NSArray *albumObjectIDs;
@property(readonly, retain) PLManagedObjectContext *managedObjectContext;
- (void)_performBlockAndWait:(CDUnknownBlockType)arg1;
- (void)_performTransactionAndWait:(CDUnknownBlockType)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PLPersistedAlbumMetadata : NSObject
{
    _Bool _pinned;
    _Bool _inTrash;
    _Bool _customSortAscending;
    _Bool _allowsOverwite;
    _Bool _isFolder;
    int _customSortKey;
    NSString *_title;
    NSString *_uuid;
    NSString *_cloudGUID;
    NSNumber *_kind;
    NSString *_customKeyAssetUUID;
    NSMutableOrderedSet *_assetUUIDs;
    PLGenericAlbum *_genericAlbum;
    NSURL *_metadataURL;
}

+ (_Bool)isValidPath:(id)arg1;
@property(readonly, nonatomic) _Bool isFolder; // @synthesize isFolder=_isFolder;
@property(retain, nonatomic) NSURL *metadataURL; // @synthesize metadataURL=_metadataURL;
@property(retain, nonatomic) PLGenericAlbum *genericAlbum; // @synthesize genericAlbum=_genericAlbum;
@property(nonatomic) _Bool allowsOverwite; // @synthesize allowsOverwite=_allowsOverwite;
@property(retain, nonatomic) NSMutableOrderedSet *assetUUIDs; // @synthesize assetUUIDs=_assetUUIDs;
@property(retain, nonatomic) NSString *customKeyAssetUUID; // @synthesize customKeyAssetUUID=_customKeyAssetUUID;
@property(nonatomic) int customSortKey; // @synthesize customSortKey=_customSortKey;
@property(nonatomic) _Bool customSortAscending; // @synthesize customSortAscending=_customSortAscending;
@property(nonatomic, getter=isInTrash) _Bool inTrash; // @synthesize inTrash=_inTrash;
@property(nonatomic, getter=isPinned) _Bool pinned; // @synthesize pinned=_pinned;
@property(retain, nonatomic) NSNumber *kind; // @synthesize kind=_kind;
@property(retain, nonatomic) NSString *cloudGUID; // @synthesize cloudGUID=_cloudGUID;
@property(retain, nonatomic) NSString *uuid; // @synthesize uuid=_uuid;
@property(retain, nonatomic) NSString *title; // @synthesize title=_title;
- (void)_saveMetadata;
- (void)_readMetadata;
- (id)description;
- (void)updateChildrenOrderingInAlbum:(id)arg1 includePendingAssetChanges:(_Bool)arg2;
- (id)insertAlbumFromDataInManagedObjectContext:(id)arg1;
- (void)removePersistedAlbumData;
- (void)persistAlbumData;
- (id)extensionForKind:(id)arg1;
- (id)initWithTitle:(id)arg1 uuid:(id)arg2 cloudGUID:(id)arg3 kind:(id)arg4 assetUUIDs:(id)arg5;
- (id)initWithPersistedDataAtPath:(id)arg1;
- (id)initWithPLGenericAlbum:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface PLPersonInfoManager : NSObject
{
    NSMutableDictionary *_personDictsForPersonID;
    NSString *_plistPath;
}

+ (id)sharedManager;
- (void)setPersonInfo:(id)arg1 forPersonID:(id)arg2;
- (id)personInfoForPersonID:(id)arg1;
- (void)removePersistedInfo;
- (void)_loadDictionariesIfNeeded;
- (id)plistPath;
- (void)clearCacheForPersonID:(id)arg1;
- (id)phonesForInvitationRecordGUID:(id)arg1;
- (id)emailsForInvitationRecordGUID:(id)arg1;
- (void)deleteEmailsAndPhonesForInvitationRecordGUID:(id)arg1;
- (void)setEmails:(id)arg1 phones:(id)arg2 forInvitationRecordGUID:(id)arg3;
- (id)emailForPersonID:(id)arg1;
- (id)fullNameForPersonID:(id)arg1;
- (id)lastNameForPersonID:(id)arg1;
- (id)firstNameForPersonID:(id)arg1;
- (void)setFirstName:(id)arg1 lastName:(id)arg2 fullName:(id)arg3 email:(id)arg4 forPersonID:(id)arg5;
- (void)dealloc;
- (id)init;

@end

@interface PLPhotoBakedThumbnails : NSObject
{
    int _format;
    int _singleThumbnailImageLength;
    unsigned long long _count;
    _Bool _dataIsMutable;
    NSData *_thumbnailData;
    NSMutableArray *_thumbnailImages;
    NSMutableDictionary *_options;
    NSData *_optionsData;
    _Bool _optionsAccessed;
    _Bool _missingHeader;
    struct CGSize _size;
}

+ (_Bool)saveBakedThumbnailsOfImages:(id)arg1 toFile:(id)arg2 format:(int)arg3 orientation:(int *)arg4 options:(id)arg5 delegate:(id)arg6;
+ (id)thumbnailsWithContentsOfFile:(id)arg1 format:(int)arg2;
- (id)_thumbnailData;
- (_Bool)writeBorderedThumbnailOfImage:(struct CGImage *)arg1 toBuffer:(void *)arg2 orientation:(int *)arg3 format:(int)arg4 formatInfo:(const CDStruct_0d559a47 *)arg5 delegate:(id)arg6;
@property(readonly, nonatomic) struct CGRect imageRect;
@property(readonly, nonatomic) unsigned int bitmapInfo;
@property(readonly, nonatomic) struct CGSize size;
@property(readonly, nonatomic) int bytesPerPixel;
@property(readonly, nonatomic) int bitsPerComponent;
@property(readonly, retain, nonatomic) NSData *optionsData;
@property(readonly, retain, nonatomic) NSMutableDictionary *options;
@property(readonly, nonatomic) int format;
- (struct CGImage *)thumbnailImageAtIndex:(long long)arg1;
- (char *)thumbnailBytesAtIndex:(long long)arg1;
- (unsigned long long)thumbnailLength;
- (id)thumbnailDataAtIndex:(long long)arg1;
- (unsigned long long)count;
- (_Bool)saveToFile:(id)arg1;
- (id)serializedData;
- (id)description;
- (void)dealloc;
- (id)initWithImages:(id)arg1 format:(int)arg2 orientation:(int *)arg3 options:(id)arg4 delegate:(id)arg5;
- (id)initWithContentsOfFile:(id)arg1 format:(int)arg2;
- (id)initWithContentsOfFile:(id)arg1 format:(int)arg2 readOnly:(_Bool)arg3;
- (id)initWithData:(id)arg1 format:(int)arg2;
- (id)initWithData:(id)arg1 format:(int)arg2 readOnly:(_Bool)arg3;

@end

@interface PLPhotoBakedThumbnailsCollection : NSObject
{
    NSData *_data;
    NSMutableDictionary *_bakedThumbnails;
}

+ (void)setTesting:(_Bool)arg1;
- (void)saveToFile:(id)arg1;
- (void)setBakedThumbnails:(id)arg1 forFormat:(int)arg2;
- (id)bakedThumbnailsForFormat:(int)arg1;
- (id)availableFormats;
- (void)_parseDataWithContentsOfFile:(id)arg1;
- (void)dealloc;
- (id)initWithContentsOfFile:(id)arg1;
- (id)init;

@end

@interface PLPhotoDCFObject : NSObject
{
    NSString *_name;
    int _number;
}

+ (id)validDCFNameForName:(id)arg1 requiredLength:(int)arg2 nameLength:(int)arg3 number:(int *)arg4 numberRange:(struct _NSRange)arg5 suffix:(id)arg6;
- (void)setWriteIsPending:(_Bool)arg1;
- (id)description;
- (long long)compare:(id)arg1;
- (int)number;
- (id)name;
- (void)dealloc;
- (id)initWithName:(id)arg1 number:(int)arg2;

@end

@interface PLPhotoDCFDirectory : PLPhotoDCFObject
{
    PLPhotoDCIMDirectory *_dcimDirectory;
    struct __CFDictionary *_fileGroupsByNumber;
    int _maxFileGroupNumber;
    int _lastUsedFileGroupNumber;
    _Bool _considerInvalidFileGroups;
}

+ (id)fileGroupRequiredEmptyExtensions;
+ (id)fileGroupRequiredEmptyPrefixes;
+ (void)initializeFileGroupPrefixAndExtensions;
@property _Bool considerInvalidFileGroups; // @synthesize considerInvalidFileGroups=_considerInvalidFileGroups;
- (void)setWriteIsPending:(_Bool)arg1;
- (void)removeFileGroup:(id)arg1;
- (id)nextAvailableVideoFileGroupWithExtension:(id)arg1;
- (id)nextAvailableFileGroup;
- (id)_nextAvailableFileGroupWithPrefix:(id)arg1 extension:(id)arg2;
- (id)fileGroups;
- (_Bool)isEntensionValid:(id)arg1;
- (void)ensureDirectoryExists;
- (id)fullPath;
- (_Bool)canAddVideo;
- (_Bool)canAddImage;
- (_Bool)_canAddItemWithPrefix:(id)arg1;
- (_Bool)_canAddItemWithPrefix:(id)arg1 minimumFileGroupNumber:(int)arg2;
- (_Bool)canAddFileGroupWithGroupNumber:(int)arg1;
- (unsigned int)_calculateBaseDirectoryValue;
- (id)dcimDirectory;
- (void)dealloc;
- (id)initWithName:(id)arg1 number:(int)arg2 dcimDirectory:(id)arg3;
- (id)_lastUsedFileGroupUserInfoKey;

@end

@interface PLPhotoDCFFileGroup : PLPhotoDCFObject
{
    id _delegate;
    PLPhotoDCFDirectory *_directory;
    NSString *_directoryPath;
    NSString *_prebakedThumbnailPath;
    NSString *_videoFileExtension;
    NSMutableSet *_extensions;
    NSDate *_date;
    NSString *_preferredExtension;
    unsigned long long _hash;
    unsigned int _hashComputed:1;
    unsigned int _addedExtensions:1;
    unsigned int _writeIsPending:1;
}

+ (id)allMetadataFileExtensions;
- (_Bool)isWritePending;
- (void)setWriteIsPending:(_Bool)arg1;
- (void)deleteFiles;
- (_Bool)hasPrebakedWildcatThumbnails;
- (_Bool)hasPrebakedPortraitScrubberThumbnails;
- (_Bool)hasPrebakedLandscapeScrubberThumbnails;
- (_Bool)hasPrebakedThumbnail;
- (_Bool)hasVideoFile;
- (_Bool)hasThumbnail;
- (id)pathForVideoPreviewFile;
- (id)pathForLowResolutionFile;
- (id)pathForPrebakedWildcatThumbnailsFile;
- (id)pathForPrebakedPortraitScrubberThumbnails;
- (id)pathForPrebakedLandscapeScrubberThumbnails;
- (id)pathForPrebakedThumbnail;
- (id)pathForThumbnailFile;
- (id)videoPreviewFilename;
- (id)lowResolutionFilename;
- (id)prebakedWildcatThumbnailsFilename;
- (id)prebakedPortraitScrubberThumbnailsFilename;
- (id)prebakedLandscapeScrubberThumbnailsFilename;
- (id)prebakedThumbnailFilename;
- (id)thumbnailFilename;
- (id)pathForTrimmedVideoFile;
- (id)pathForVideoFile;
- (id)pathForFullSizeImage;
- (void)createMetadataDirectoryIfNecessary;
- (id)pathForMetadataWithGroupName;
- (id)pathForMetadata;
- (id)pathForGroupWithoutExtension;
- (id)pathForContainingDirectory;
- (id)extensions;
- (void)forceAddExtensionsFromMetadataDirectory;
- (void)addExtensionsFromMetadataDirectory;
- (id)description;
- (long long)compare:(id)arg1;
- (void)setDate:(id)arg1;
- (id)date;
- (void)addExtension:(id)arg1;
- (_Bool)isValidImage;
- (_Bool)hasObsoleteFiles;
- (void)deleteObsoleteFiles;
- (_Bool)isValid;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)imageSourceTypeHint;
- (id)directory;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (void)dealloc;
- (id)initWithName:(id)arg1 number:(int)arg2 directory:(id)arg3;

@end

@interface PLPhotoDCIMDirectory : NSObject
{
    NSString *_dcimPath;
    NSString *_miscPath;
    NSString *_posterImagePath;
    NSMutableArray *_topLevelDirectories;
    struct __CFDictionary *_topLevelDirectoriesByNumber;
    struct __CFSet *_unusableTopLevelDirectoryNumbers;
    int _lastUsedDirectoryNumber;
    NSMutableDictionary *_userInfo;
    _Bool _userInfoDidChange;
    struct flock *_dcimDirectoryLock;
    int _dcimDirectoryLockDescriptor;
}

- (void)setHasChangedExternally:(_Bool)arg1;
- (_Bool)hasChangedExternally;
- (void)unlockDirectory;
- (void)lockDirectory;
- (id)countOfAllPhotosAndVideos;
- (void)countOfAllPhotos:(int *)arg1 andVideos:(int *)arg2 stopAfterFirst:(_Bool)arg3;
- (id)nextAvailableDirectory;
- (void)clearDCFDirectories;
- (id)dcfDirectories;
- (void)setUserInfoObject:(id)arg1 forKey:(id)arg2;
- (id)userInfoObjectForKey:(id)arg1;
- (void)reloadUserInfo;
- (void)recreateInfoPlist;
- (id)userInfo;
- (void)saveUserInfo;
- (id)posterImagePath;
- (id)miscPath;
- (id)dcimPath;
- (void)dealloc;
- (id)initWithDCIMPath:(id)arg1;
- (id)_userInfoPath;
- (_Bool)isValidVideoExtension:(id)arg1;
- (_Bool)isValidImageExtension:(id)arg1;

@end

@interface PLPhotoDerivativeUtilities : NSObject
{
}

+ (id)generateDerivativeForMSAsset:(id)arg1 derivativeType:(int)arg2 withSpecificationInfo:(id)arg3 collectionGUID:(id)arg4;
+ (_Bool)resizeImageForUtiType:(id)arg1 masterFilePath:(id)arg2 derivedSize:(struct CGSize)arg3 derivedAssetPath:(id)arg4;

@end

@interface PLPhotoEditAdjustmentsVersion : NSObject
{
    unsigned long long _majorVersion;
    unsigned long long _minorVersion;
    NSString *_platform;
}

+ (id)versionFromString:(id)arg1;
+ (id)versionWithMajor:(unsigned long long)arg1 minor:(unsigned long long)arg2 platform:(id)arg3;
@property(readonly, copy, nonatomic) NSString *platform; // @synthesize platform=_platform;
@property(readonly, nonatomic) unsigned long long minorVersion; // @synthesize minorVersion=_minorVersion;
@property(readonly, nonatomic) unsigned long long majorVersion; // @synthesize majorVersion=_majorVersion;
- (id)description;
- (_Bool)isEqualToAdjustmentVersion:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (long long)compare:(id)arg1;
@property(readonly, nonatomic) NSString *string;
- (id)initWithMajor:(unsigned long long)arg1 minor:(unsigned long long)arg2;
- (void)dealloc;
- (id)initWithMajor:(unsigned long long)arg1 minor:(unsigned long long)arg2 platform:(id)arg3;

@end

@interface PLPhotoEditModel : NSObject <NSCopying>
{
    NSString *_effectFilterName;
    long long _effectFilterVersion;
    _Bool _smartToneEnabled;
    double _smartToneLevel;
    double _autoSmartToneLevel;
    NSString *_autoSmartToneIdentifier;
    double _brightnessLevelOffset;
    double _contrastLevelOffset;
    double _exposureLevelOffset;
    double _shadowsLevelOffset;
    double _blackPointLevelOffset;
    double _highlightsLevelOffset;
    _Bool _smartColorEnabled;
    double _autoSmartColorLevel;
    NSString *_autoSmartColorIdentifier;
    double _smartColorLevel;
    double _colorContrastLevelOffset;
    double _colorVibrancyLevelOffset;
    double _colorCastLevelOffset;
    _Bool _smartBWEnabled;
    double _smartBWLevel;
    double _bwStrengthLevelOffset;
    double _bwNeutralGammaLevelOffset;
    double _bwToneLevelOffset;
    double _bwHueLevelOffset;
    double _bwGrainLevelOffset;
    _Bool _whiteBalanceEnabled;
    double _whiteBalanceFaceI;
    double _whiteBalanceFaceQ;
    double _whiteBalanceFaceStrength;
    double _whiteBalanceFaceWarmth;
    double _straightenAngle;
    struct CGRect _normalizedCropRect;
    long long _cropConstraintWidth;
    long long _cropConstraintHeight;
    unsigned long long _rotation;
    NSDictionary *_smartToneStatistics;
    NSDictionary *_smartColorStatistics;
    NSDictionary *_smartBWStatistics;
    NSDictionary *_autoWhiteBalanceSettings;
    NSString *_autoWhiteBalanceIdentifier;
    NSArray *_redEyeCorrections;
    NSArray *_autoRedEyeCorrections;
    NSArray *_legacyAutoEnhanceFilters;
    _Bool _legacyAutoEnhanceIsOn;
}

+ (double)angleForRotation:(unsigned long long)arg1;
+ (double)referenceStraightenAngleOfType:(long long)arg1;
+ (double)referenceWhiteBalanceFaceWarmthLevelOfType:(long long)arg1;
+ (double)referenceWhiteBalanceFaceStrengthLevelOfType:(long long)arg1;
+ (double)referenceWhiteBalanceFaceQLevelOfType:(long long)arg1;
+ (double)referenceWhiteBalanceFaceILevelOfType:(long long)arg1;
+ (double)referenceBWGrainLevelOfType:(long long)arg1;
+ (double)referenceBWHueLevelOfType:(long long)arg1;
+ (double)referenceBWToneLevelOfType:(long long)arg1;
+ (double)referenceBWNeutralGammaLevelOfType:(long long)arg1;
+ (double)referenceBWStrengthLevelOfType:(long long)arg1;
+ (double)_referenceValueOfType:(long long)arg1 fromLevels:(CDStruct_39925896)arg2;
+ (double)referenceSmartBWLevelOfType:(long long)arg1;
+ (double)referenceColorCastLevelOfType:(long long)arg1;
+ (double)referenceColorVibrancyLevelOfType:(long long)arg1;
+ (double)referenceColorContrastLevelOfType:(long long)arg1;
+ (double)referenceSmartColorLevelOfType:(long long)arg1;
+ (double)referenceBlackPointLevelOfType:(long long)arg1;
+ (double)referenceShadowsLevelOfType:(long long)arg1;
+ (double)referenceHighlightsLevelOfType:(long long)arg1;
+ (double)referenceExposureLevelOfType:(long long)arg1;
+ (double)referenceContrastLevelOfType:(long long)arg1;
+ (double)referenceBrightnessLevelOfType:(long long)arg1;
+ (double)referenceSmartToneLevelOfType:(long long)arg1;
+ (unsigned long long)identityRotation;
+ (long long)identityCropConstraint;
+ (struct CGRect)identityNormalizedCropRect;
+ (int)identityOrientation;
+ (void)_loadReferenceLevelsFromCIFilterWithName:(id)arg1 attributeKeys:(id)arg2 intoLevelStructs:(struct **)arg3;
+ (void)_loadSubfilterReferenceLevelsIfNeeded;
@property(readonly, nonatomic) _Bool legacyAutoEnhanceIsOn; // @synthesize legacyAutoEnhanceIsOn=_legacyAutoEnhanceIsOn;
@property(readonly, copy, nonatomic) NSArray *legacyAutoEnhanceFilters; // @synthesize legacyAutoEnhanceFilters=_legacyAutoEnhanceFilters;
@property(readonly, copy, nonatomic) NSArray *autoRedEyeCorrections; // @synthesize autoRedEyeCorrections=_autoRedEyeCorrections;
@property(readonly, copy, nonatomic) NSArray *redEyeCorrections; // @synthesize redEyeCorrections=_redEyeCorrections;
@property(readonly, copy, nonatomic) NSString *autoWhiteBalanceIdentifier; // @synthesize autoWhiteBalanceIdentifier=_autoWhiteBalanceIdentifier;
@property(readonly, copy, nonatomic) NSDictionary *autoWhiteBalanceSettings; // @synthesize autoWhiteBalanceSettings=_autoWhiteBalanceSettings;
@property(readonly, nonatomic) double straightenAngle; // @synthesize straightenAngle=_straightenAngle;
@property(readonly, nonatomic) long long cropConstraintHeight; // @synthesize cropConstraintHeight=_cropConstraintHeight;
@property(readonly, nonatomic) long long cropConstraintWidth; // @synthesize cropConstraintWidth=_cropConstraintWidth;
@property(readonly, nonatomic) struct CGRect normalizedCropRect; // @synthesize normalizedCropRect=_normalizedCropRect;
@property(readonly, nonatomic) unsigned long long rotation; // @synthesize rotation=_rotation;
@property(readonly, nonatomic) double whiteBalanceFaceWarmth; // @synthesize whiteBalanceFaceWarmth=_whiteBalanceFaceWarmth;
@property(readonly, nonatomic) double whiteBalanceFaceStrength; // @synthesize whiteBalanceFaceStrength=_whiteBalanceFaceStrength;
@property(readonly, nonatomic) double whiteBalanceFaceQ; // @synthesize whiteBalanceFaceQ=_whiteBalanceFaceQ;
@property(readonly, nonatomic) double whiteBalanceFaceI; // @synthesize whiteBalanceFaceI=_whiteBalanceFaceI;
@property(readonly, nonatomic, getter=isWhiteBalanceEnabled) _Bool whiteBalanceEnabled; // @synthesize whiteBalanceEnabled=_whiteBalanceEnabled;
@property(readonly, nonatomic) double bwGrainLevelOffset; // @synthesize bwGrainLevelOffset=_bwGrainLevelOffset;
@property(readonly, nonatomic) double bwHueLevelOffset; // @synthesize bwHueLevelOffset=_bwHueLevelOffset;
@property(readonly, nonatomic) double bwToneLevelOffset; // @synthesize bwToneLevelOffset=_bwToneLevelOffset;
@property(readonly, nonatomic) double bwNeutralGammaLevelOffset; // @synthesize bwNeutralGammaLevelOffset=_bwNeutralGammaLevelOffset;
@property(readonly, nonatomic) double bwStrengthLevelOffset; // @synthesize bwStrengthLevelOffset=_bwStrengthLevelOffset;
@property(readonly, nonatomic) double smartBWLevel; // @synthesize smartBWLevel=_smartBWLevel;
@property(readonly, copy, nonatomic) NSDictionary *smartBWStatistics; // @synthesize smartBWStatistics=_smartBWStatistics;
@property(readonly, nonatomic, getter=isSmartBWEnabled) _Bool smartBWEnabled; // @synthesize smartBWEnabled=_smartBWEnabled;
@property(readonly, nonatomic) double colorCastLevelOffset; // @synthesize colorCastLevelOffset=_colorCastLevelOffset;
@property(readonly, nonatomic) double colorVibrancyLevelOffset; // @synthesize colorVibrancyLevelOffset=_colorVibrancyLevelOffset;
@property(readonly, nonatomic) double colorContrastLevelOffset; // @synthesize colorContrastLevelOffset=_colorContrastLevelOffset;
@property(readonly, nonatomic) double smartColorLevel; // @synthesize smartColorLevel=_smartColorLevel;
@property(readonly, copy, nonatomic) NSString *autoSmartColorIdentifier; // @synthesize autoSmartColorIdentifier=_autoSmartColorIdentifier;
@property(readonly, nonatomic) double autoSmartColorLevel; // @synthesize autoSmartColorLevel=_autoSmartColorLevel;
@property(readonly, copy, nonatomic) NSDictionary *smartColorStatistics; // @synthesize smartColorStatistics=_smartColorStatistics;
@property(readonly, nonatomic, getter=isSmartColorEnabled) _Bool smartColorEnabled; // @synthesize smartColorEnabled=_smartColorEnabled;
@property(readonly, nonatomic) double blackPointLevelOffset; // @synthesize blackPointLevelOffset=_blackPointLevelOffset;
@property(readonly, nonatomic) double shadowsLevelOffset; // @synthesize shadowsLevelOffset=_shadowsLevelOffset;
@property(readonly, nonatomic) double highlightsLevelOffset; // @synthesize highlightsLevelOffset=_highlightsLevelOffset;
@property(readonly, nonatomic) double exposureLevelOffset; // @synthesize exposureLevelOffset=_exposureLevelOffset;
@property(readonly, nonatomic) double contrastLevelOffset; // @synthesize contrastLevelOffset=_contrastLevelOffset;
@property(readonly, nonatomic) double brightnessLevelOffset; // @synthesize brightnessLevelOffset=_brightnessLevelOffset;
@property(readonly, nonatomic) double smartToneLevel; // @synthesize smartToneLevel=_smartToneLevel;
@property(readonly, copy, nonatomic) NSString *autoSmartToneIdentifier; // @synthesize autoSmartToneIdentifier=_autoSmartToneIdentifier;
@property(readonly, nonatomic) double autoSmartToneLevel; // @synthesize autoSmartToneLevel=_autoSmartToneLevel;
@property(readonly, copy, nonatomic) NSDictionary *smartToneStatistics; // @synthesize smartToneStatistics=_smartToneStatistics;
@property(readonly, nonatomic, getter=isSmartToneEnabled) _Bool smartToneEnabled; // @synthesize smartToneEnabled=_smartToneEnabled;
@property(readonly, nonatomic) long long effectFilterVersion; // @synthesize effectFilterVersion=_effectFilterVersion;
@property(readonly, copy, nonatomic) NSString *effectFilterName; // @synthesize effectFilterName=_effectFilterName;
- (id)_debugDictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasIdentityCrop;
- (_Bool)isIdentityModel;
- (_Bool)isGeometryEqualToPhotoEditModel:(id)arg1;
- (_Bool)isVisuallyEqualToPhotoEditModel:(id)arg1;
- (_Bool)isEqualToPhotoEditModel:(id)arg1;
- (void)_copyValuesFromModel:(id)arg1 interpolationStartModel:(id)arg2 progress:(double)arg3;
- (id)mutableCopy;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)init;

@end

@interface PLPhotoEditMutableModel : PLPhotoEditModel
{
    long long _transactionDepth;
    _UIDynamicValueAnimation *_currentCopyAnimation;
}

- (void)removeRedEyeCorrections:(id)arg1;
- (void)addRedEyeCorrections:(id)arg1;
@property(nonatomic) _Bool legacyAutoEnhanceIsOn;
@property(copy, nonatomic) NSArray *legacyAutoEnhanceFilters;
@property(copy, nonatomic) NSArray *autoRedEyeCorrections;
@property(copy, nonatomic) NSArray *redEyeCorrections;
@property(copy, nonatomic) NSString *autoWhiteBalanceIdentifier;
@property(copy, nonatomic) NSDictionary *autoWhiteBalanceSettings;
@property(nonatomic) unsigned long long rotation;
- (void)setCropConstraintWidth:(long long)arg1 height:(long long)arg2;
@property(nonatomic) struct CGRect normalizedCropRect;
@property(nonatomic) double straightenAngle;
@property(nonatomic) double whiteBalanceFaceWarmth;
@property(nonatomic) double whiteBalanceFaceStrength;
@property(nonatomic) double whiteBalanceFaceQ;
@property(nonatomic) double whiteBalanceFaceI;
@property(nonatomic, getter=isWhiteBalanceEnabled) _Bool whiteBalanceEnabled;
@property(nonatomic) double bwGrainLevelOffset;
@property(nonatomic) double bwHueLevelOffset;
@property(nonatomic) double bwToneLevelOffset;
@property(nonatomic) double bwNeutralGammaLevelOffset;
@property(nonatomic) double bwStrengthLevelOffset;
@property(nonatomic) double smartBWLevel;
@property(nonatomic, getter=isSmartBWEnabled) _Bool smartBWEnabled;
@property(copy, nonatomic) NSDictionary *smartBWStatistics;
@property(nonatomic) double colorCastLevelOffset;
@property(nonatomic) double colorVibrancyLevelOffset;
@property(nonatomic) double colorContrastLevelOffset;
@property(nonatomic) double smartColorLevel;
@property(copy, nonatomic) NSString *autoSmartColorIdentifier;
@property(nonatomic) double autoSmartColorLevel;
@property(nonatomic, getter=isSmartColorEnabled) _Bool smartColorEnabled;
@property(copy, nonatomic) NSDictionary *smartColorStatistics;
@property(nonatomic) double highlightsLevelOffset;
@property(nonatomic) double blackPointLevelOffset;
@property(nonatomic) double shadowsLevelOffset;
@property(nonatomic) double exposureLevelOffset;
@property(nonatomic) double brightnessLevelOffset;
@property(nonatomic) double contrastLevelOffset;
@property(nonatomic, getter=isSmartToneEnabled) _Bool smartToneEnabled;
@property(nonatomic) double smartToneLevel;
@property(copy, nonatomic) NSString *autoSmartToneIdentifier;
@property(nonatomic) double autoSmartToneLevel;
@property(copy, nonatomic) NSDictionary *smartToneStatistics;
@property(nonatomic) long long effectFilterVersion;
@property(copy, nonatomic) NSString *effectFilterName;
- (void)_setLevelInstanceVariable:(double *)arg1 toValue:(double)arg2;
- (id)_newModelChangeAnimation;
- (void)copyValuesFromModel:(id)arg1 animated:(_Bool)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)performChangesWithBlock:(CDUnknownBlockType)arg1;
- (void)dealloc;

@end

@interface PLPhotoEditPFDataConverter : NSObject <PLPhotoEditDataImporter, PLPhotoEditDataExporter>
{
}

+ (id)_settingsDictionaryForLegacyAutoEnhanceFilters:(id)arg1;
+ (id)_filtersForLegacyAutoEnhanceSettingsDictionary:(id)arg1;
+ (id)dataFromPhotoEditModel:(id)arg1 imageWidth:(unsigned long long)arg2 imageHeight:(unsigned long long)arg3 exifOrientation:(int)arg4;
+ (id)debugDescriptionForPhotoEditData:(id)arg1 formatIdentifier:(id)arg2 formatVersion:(id)arg3;
+ (_Bool)loadPhotoEditData:(id)arg1 formatIdentifier:(id)arg2 formatVersion:(id)arg3 intoModel:(id)arg4 baseOrientation:(long long)arg5;
+ (id)_supportedAdjustments;
+ (long long)_supportLevelForSettings:(id)arg1 knownKeys:(id)arg2;
+ (_Bool)canInterpretDataWithFormatIdentifier:(id)arg1 formatVersion:(id)arg2;
+ (id)_knownFormatVersions;
+ (id)formatVersion;
+ (id)formatIdentifier;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PLPhotoEditPersistenceManager : NSObject
{
}

- (id)dataFromPhotoEditModel:(id)arg1 imageWidth:(unsigned long long)arg2 imageHeight:(unsigned long long)arg3 exifOrientation:(int)arg4;
- (id)debugDescriptionForPhotoEditData:(id)arg1 formatIdentifier:(id)arg2 formatVersion:(id)arg3;
- (_Bool)loadPhotoEditData:(id)arg1 formatIdentifier:(id)arg2 formatVersion:(id)arg3 intoModel:(id)arg4 baseOrientation:(long long)arg5;
- (_Bool)canInterpretDataWithFormatIdentifier:(id)arg1 formatVersion:(id)arg2;
@property(readonly, nonatomic) NSString *latestFormatVersion;
@property(readonly, nonatomic) NSString *latestFormatIdentifier;
- (id)_allImporterClasses;
- (id)_allConverterClasses;
- (Class)_latestExporterClass;

@end

@interface PLPhotoEditRenderer : NSObject
{
    NSObject<OS_dispatch_queue> *__renderingQueue;
    CIContext *_generatingCIContext;
    CIContext *_drawingCIContext;
    EAGLContext *_lastUsedEAGLContext;
    CIFilter *_effectFilter;
    CIFilter *_smartToneFilter;
    CIFilter *_smartColorFilter;
    CIFilter *_smartBWFilter;
    CIFilter *_faceBalanceFilter;
    CIFilter *_redEyeFilter;
    CIImage *_cachedEditedImage;
    PLPhotoEditModel *_photoEditModelInCachedEditedImage;
    NSDictionary *__smartToneAdjustments;
    double _smartToneLevelInCachedAdjustments;
    NSDictionary *_smartToneStatisticsInCachedAdjustments;
    NSDictionary *__smartColorAdjustments;
    double _smartColorLevelInCachedAdjustments;
    NSDictionary *_smartColorStatisticsInCachedAdjustments;
    NSDictionary *__smartBWAdjustments;
    double _smartBWLevelInCachedAdjustments;
    NSDictionary *_smartBWStatisticsInCachedAdjustments;
    CIImage *_originalImage;
    PLPhotoEditModel *_photoEditModel;
    unsigned long long _renderMode;
    long long _smartFiltersCubeSize;
}

@property(nonatomic) long long smartFiltersCubeSize; // @synthesize smartFiltersCubeSize=_smartFiltersCubeSize;
@property(nonatomic) unsigned long long renderMode; // @synthesize renderMode=_renderMode;
@property(retain, nonatomic) PLPhotoEditModel *photoEditModel; // @synthesize photoEditModel=_photoEditModel;
@property(retain, nonatomic) CIImage *originalImage; // @synthesize originalImage=_originalImage;
- (id)_renderingQueue;
- (id)_smartBWAdjustments;
- (id)_smartColorAdjustments;
- (id)_smartToneAdjustments;
@property(readonly, nonatomic) double smartBWBaseGrain;
@property(readonly, nonatomic) double smartBWBaseHue;
@property(readonly, nonatomic) double smartBWBaseTone;
@property(readonly, nonatomic) double smartBWBaseNeutralGamma;
@property(readonly, nonatomic) double smartBWBaseStrength;
- (double)_smartBWBaseValueForKey:(id)arg1 defaultValue:(double)arg2;
@property(readonly, nonatomic) double smartColorBaseCast;
@property(readonly, nonatomic) double smartColorBaseVibrancy;
@property(readonly, nonatomic) double smartColorBaseContrast;
@property(readonly, nonatomic) double smartToneBaseBlackPoint;
@property(readonly, nonatomic) double smartToneBaseShadows;
@property(readonly, nonatomic) double smartToneBaseHighlights;
@property(readonly, nonatomic) double smartToneBaseExposure;
@property(readonly, nonatomic) double smartToneBaseContrast;
@property(readonly, nonatomic) double smartToneBaseBrightness;
@property(readonly, nonatomic) struct CGSize outputImageSize;
@property(readonly, retain, nonatomic) CIImage *outputImage;
- (void)drawEditedImageInContext:(id)arg1 inRect:(struct CGRect)arg2 viewportWidth:(int)arg3 viewportHeight:(int)arg4;
- (struct CGImage *)_newCGImageFromEditedCIImage:(id)arg1;
- (void)createEditedImageWithCompletion:(CDUnknownBlockType)arg1;
- (struct CGImage *)newEditedImage;
- (void)_invalidateCachedFilters;
- (id)_editedGeometryImageWithBaseImage:(id)arg1;
- (id)_editedImage;
- (void)dealloc;
- (id)init;

@end

@interface PLPhotoEditTempDataConverter : NSObject <PLPhotoEditDataImporter>
{
}

+ (id)debugDescriptionForPhotoEditData:(id)arg1 formatIdentifier:(id)arg2 formatVersion:(id)arg3;
+ (_Bool)loadPhotoEditData:(id)arg1 formatIdentifier:(id)arg2 formatVersion:(id)arg3 intoModel:(id)arg4 baseOrientation:(long long)arg5;
+ (_Bool)canInterpretDataWithFormatIdentifier:(id)arg1 formatVersion:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PLPhotoEffect : NSObject
{
    NSString *_filterIdentifier;
    NSString *_displayName;
    NSString *_CIFilterName;
}

+ (id)effectWithCIFilterName:(id)arg1;
+ (id)effectWithIdentifier:(id)arg1;
+ (unsigned long long)indexOfEffectWithIdentifier:(id)arg1;
+ (id)allEffects;
+ (id)_effectWithIdentifier:(id)arg1 CIFilterName:(id)arg2 displayName:(id)arg3;
@property(readonly, copy, nonatomic) NSString *CIFilterName; // @synthesize CIFilterName=_CIFilterName;
@property(readonly, copy, nonatomic) NSString *displayName; // @synthesize displayName=_displayName;
@property(readonly, copy, nonatomic) NSString *filterIdentifier; // @synthesize filterIdentifier=_filterIdentifier;
- (id)newEffectFilter;
@property(readonly, nonatomic) long long latestVersion;
- (id)description;

@end

@interface PLPhotoLibrary : NSObject
{
    _Bool _listeningForITunesSyncing;
    _Bool _isTransient;
    unsigned long long _pendingTransactions;
    struct __CFDictionary *_allPhotos;
    int _databaseMigrationKind;
    NSMutableArray *_transactionCompletionHandlers;
    PLThumbnailManager *_thumbnailManager;
    PLGenericAlbum *_allImportedPhotosAlbum;
    PLGenericAlbum *_lastImportedPhotosAlbum;
    NSCalendar *_exifConversionCalendar;
    NSMutableDictionary *_photoStreamAlbumsByStreamID;
    NSMutableArray *_photoStreamAlbums;
    NSSet *_imageFileExtensions;
    NSSet *_rawImageFileExtensions;
    NSSet *_audioFileExtensions;
    NSSet *_extraVideoExtensions;
    unsigned long long _lastFetchedGPSCount;
    unsigned long long _insertedCountSinceLastFetchedGPSCount;
    unsigned long long _deletedCountSinceLastFetchedGPSCount;
    unsigned long long _newlyCompleteWithGPS;
    PLManagedAlbum *_cameraRollAlbum;
    PLFetchingAlbum *_recentlyAddedAlbum;
    PLFetchingAlbum *_cameraSessionAlbum;
    PLInFlightAssetsAlbum *_inFlightAssetsAlbum;
    PLManagedObjectContext *managedObjectContext;
}

+ (unsigned long long)CloudPhotoLibrarySize;
+ (_Bool)_assetsLibrary_isSharedPhotoStreamsSupportEnabled;
+ (void)_assetsLibrary_disableSharedPhotoStreamsSupport;
+ (_Bool)isAlbumSynced:(id)arg1;
+ (id)syncedAlbumSubtitleStringFormat;
+ (id)syncInfoPath;
+ (_Bool)canSaveVideoToCameraRoll:(id)arg1;
+ (void)resetSyncedAssetsDCIMDirectory;
+ (void)initializeGraphicsServices;
+ (void)setSqliteErrorAndExitIfNecessary;
+ (_Bool)createSqliteErrorIndicatorFile;
+ (_Bool)processWithID:(int)arg1 canWriteSandboxForPath:(id)arg2;
+ (_Bool)processCanWriteSandboxForPath:(id)arg1;
+ (_Bool)processWithID:(int)arg1 canReadSandboxForPath:(id)arg2;
+ (_Bool)processCanReadSandboxForPath:(id)arg1;
+ (id)persistedAlbumDataDirectoryURL;
+ (id)iTunesSyncedFaceDataDirectory;
+ (id)iTunesSyncedFaceAlbumThumbnailsDirectory;
+ (id)iTunesSyncedAssetSmallThumbnailsDirectory;
+ (id)iTunesSyncedAssetMetadataThumbnailsDirectory;
+ (id)iTunesSyncedAssetsDirectory;
+ (id)simpleDCIMDirectory;
+ (id)dcimDirectory;
+ (id)cplAssetsDirectoryURL;
+ (id)dcimDirectoryURL;
+ (id)iTunesPhotosDirectory;
+ (id)photoDataCachesDirectory;
+ (id)photoDataCPLResourceDestinationDirectoryWithIdentifier:(id)arg1;
+ (id)photoDataCPLLibraryIdentifier;
+ (id)photoDataCPLDerivativeDirectory;
+ (id)photoDataCPLDirectory;
+ (id)photoDataMiscDirectory;
+ (id)videosPath;
+ (id)photoMetadataDirectoryURL;
+ (id)photoMutationsDirectory;
+ (id)photoDataDirectory;
+ (id)photoDataDirectoryURL;
+ (id)mediaFilesDirectoryURL;
+ (_Bool)isStreamsLibraryUpdatingExpired;
+ (void)setStreamsLibraryUpdatingExpired:(_Bool)arg1;
+ (_Bool)libraryAvailableIndicatorState;
+ (void)setLibraryAvailableIndicatorState:(_Bool)arg1;
+ (_Bool)isDupeAnalysisNeeded;
+ (void)setDupeAnalysisNeeded:(_Bool)arg1;
+ (_Bool)isDisableICloudPhotos;
+ (_Bool)isEnableICloudPhotos;
+ (_Bool)isICloudPhotosPaused;
+ (id)pauseTime;
+ (void)setPauseMarker:(_Bool)arg1;
+ (void)clearICloudPhotosMarker;
+ (void)setCameraRollCountedInQuota:(_Bool)arg1;
+ (void)setICloudPhotosEnabled:(_Bool)arg1;
+ (void)setEnableICloudPhotos:(_Bool)arg1;
+ (void)setDisableICloudPhotos:(_Bool)arg1;
+ (_Bool)isMomentAnalysisNeeded;
+ (void)setMomentAnalysisNeeded:(_Bool)arg1;
+ (id)fileReservationForFileAtPath:(id)arg1 exclusive:(_Bool)arg2;
+ (void)setTakingPhotoIsBusy:(_Bool)arg1;
+ (void)setVideoCaptureIsBusy:(_Bool)arg1;
+ (void)setImageWriterIsBusy:(_Bool)arg1;
+ (void)setMigratorIsBusy:(_Bool)arg1;
+ (void)repairSingletonObjects;
+ (void)postGlobalPhotoLibraryAvailableNotification;
+ (_Bool)isRunningInStoreDemoMode;
+ (id)pathToAssetsToAlbumsMapping;
+ (_Bool)photoLibraryIsObtainable;
+ (id)crashRecoveryIndicatorFilePaths:(_Bool)arg1;
+ (id)streamsLibraryUpdatingExpiredIndicatorFilePath;
+ (id)libraryAvailableIndicatorFilePath;
+ (id)migrationIndicatorFilePath;
+ (id)sqliteErrorIndicatorFilePath;
+ (id)imageWriterIndicatorFilePath;
+ (id)takingVideoIndicatorFilePath;
+ (id)takingPhotoIndicatorFilePath;
+ (id)pauseICloudPhotosFilePath;
+ (id)enableICloudPhotosFilePath;
+ (id)disableICloudPhotosFilePath;
+ (id)momentAnalysisNeededFilePath;
+ (id)dupeAnalysisNeededFilePath;
+ (void)createPhotoStreamAlbumWithStreamID:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
+ (id)assetsDataDirectory;
+ (id)lightweightReimportPhotoCloudSharingAssetFileNameWithCloudAssetGUID:(id)arg1 type:(id)arg2;
+ (id)lightweightReimportPhotoCloudSharingAssetDirectoryForAlbumWithCloudGUID:(id)arg1 cloudPersonID:(id)arg2;
+ (id)lightweightReimportPhotoCloudSharingDataDirectory;
+ (id)photoCloudSharingCacheDataDirectory;
+ (id)photoCloudSharingMetadataDirectory;
+ (id)photoCloudSharingDataDirectory;
+ (id)photoStreamsDataDirectory;
+ (void)setCloudAlbumSharingEnabled:(_Bool)arg1;
+ (void)setPhotoStreamEnabled:(_Bool)arg1;
+ (struct NSObject *)savedPhotosAlbum;
+ (void)_doFilesystemImportIfNeeded;
+ (_Bool)isSafeToRecoverAfterCrash;
+ (_Bool)areOpportunisticTasksDisabled;
+ (void)disableOpportunisticTasks:(_Bool)arg1;
+ (id)opportunisticTaskIsolationQueue;
+ (void)recoverFromCrashIfNeeded;
+ (void)enqeueRecoveryJob:(id)arg1;
+ (void)handlePossibleCoreDataError:(id)arg1;
+ (_Bool)isApplicationWildcat;
+ (void)setApplicationIsWildcat:(_Bool)arg1;
+ (id)sharedPhotoLibrary;
@property(retain, nonatomic) PLManagedObjectContext *managedObjectContext; // @synthesize managedObjectContext;
- (_Bool)_checkMomentAnalysisCompletion;
- (_Bool)hasCompletedMomentAnalysis;
- (id)incompleteRestoreProcesses;
- (_Bool)isReadyForCloudPhotoLibrary;
- (_Bool)hasCompletedRestorePostProcessing;
- (_Bool)_hasPendingAssets;
- (id)syncProgressAlbums;
- (id)librarySizes;
- (_Bool)getPhotoCount:(unsigned long long *)arg1 videoCount:(unsigned long long *)arg2;
- (id)albumListForContentMode:(int)arg1;
- (id)albumsForContentMode:(int)arg1;
- (void)cleanupFilesAfteriTunesSyncBeforeDate:(id)arg1;
- (_Bool)isPhotoInSavedPhotosAlbum:(id)arg1;
- (void)processSyncSaveJob:(id)arg1 albumMap:(id)arg2;
- (_Bool)hasPhotoWithFileCreationDate:(id)arg1 fileName:(id)arg2 fileSize:(long long)arg3;
- (int)priorityForFileExtension:(id)arg1;
- (_Bool)isAudioFileExtension:(id)arg1;
- (_Bool)isVideoFileExtension:(id)arg1;
- (_Bool)isNonRawImageFileExtension:(id)arg1;
- (_Bool)isRawImageFileExtension:(id)arg1;
- (_Bool)isImageFileExtension:(id)arg1;
- (void)_loadFileExtensionInformation;
- (id)masterFilenameFromSidecarFileInfo:(id)arg1;
- (id)masterURLFromSidecarURLs:(id)arg1;
- (id)addDCIMEntryAtFileURL:(id)arg1 toEvent:(struct NSObject *)arg2 sidecarFileInfo:(id)arg3 progress:(id)arg4 importSessionIdentifier:(id)arg5 isImported:(_Bool)arg6 previewImage:(id)arg7 thumbnailImage:(id)arg8 savedAssetType:(short)arg9 replacementUUID:(id)arg10 publicGlobalUUID:(id)arg11 extendedInfo:(id)arg12 thumbnailsData:(struct __CFDictionary *)arg13 withUUID:(id)arg14 ignoreEmbeddedMetadata:(_Bool)arg15 isPlaceholder:(_Bool)arg16;
- (void)modifyDCIMEntryForPhoto:(id)arg1;
- (id)newImageForPhoto:(id)arg1 format:(int)arg2;
- (id)newImageForPhoto:(id)arg1 format:(int)arg2 allowPlaceholder:(_Bool)arg3 outImageProperties:(const struct __CFDictionary **)arg4 outDeliveredPlaceholder:(_Bool *)arg5;
- (id)dataForPhoto:(id)arg1 format:(int)arg2 width:(int *)arg3 height:(int *)arg4 bytesPerRow:(int *)arg5 dataWidth:(int *)arg6 dataHeight:(int *)arg7 imageDataOffset:(int *)arg8;
- (id)imageForFormat:(int)arg1 forAsset:(id)arg2;
- (struct NSObject *)filesystemImportProgressAlbum;
- (struct NSObject *)otaRestoreProgressAlbum;
- (struct NSObject *)syncProgressAlbum;
- (struct NSObject *)iPadAllPhotosAlbumIfExists;
- (struct NSObject *)iPadAllPhotosAlbum;
- (struct NSObject *)allPhotosAlbumIfExists;
- (struct NSObject *)allPhotosAlbum;
- (unsigned long long)editableAlbumCount;
- (id)syncedAlbums;
- (void)_updateWithInsertedAssetsCount:(unsigned long long)arg1 deletedCount:(unsigned long long)arg2 updatedAssets:(id)arg3;
- (void)_updateHasAtLeastOnePhotoWithGPSWithInsertedCount:(unsigned long long)arg1 deletedCount:(unsigned long long)arg2 updatedAssets:(id)arg3;
- (_Bool)hasAtLeastOnePhotoWithGPS;
- (void)resetCachedImportAlbumsIfNeededForAlbum:(id)arg1;
- (id)lastImportedPhotosAlbumCreateIfNeeded:(_Bool)arg1;
- (id)lastImportedPhotosAlbum;
- (id)allImportedPhotosAlbumCreateIfNeeded:(_Bool)arg1;
- (id)allImportedPhotosAlbum;
- (void)recreateAlbumsFromMetadata;
- (_Bool)needsMigration;
- (id)managedObjectContextStoreUUID;
- (id)managedObjectWithObjectID:(id)arg1;
- (void)setGlobalValue:(id)arg1 forKey:(id)arg2;
- (id)globalValueForKey:(id)arg1;
- (unsigned long long)concurrencyType;
- (_Bool)isTransient;
- (void)loadDatabase:(const char *)arg1;
- (void)_linkAsideAlbumMetadataForOTARestore;
- (void)cleanupForStoreDemoMode;
- (void)cleanupModelAfterRestoreFromiTunesBackup;
- (void)prepareDatabaseForOTAAssetsPhase;
- (id)_allAssetsForDeletion:(id)arg1;
- (void)_batchDeleteAssets:(id)arg1 inManagedObjectContext:(id)arg2;
- (void)_safeSave:(id)arg1;
- (void)_calculatePendingItemCountsAfterOTARestoreWithMangedObjectContext:(id)arg1;
- (void)_removeSyncedAlbumsInTransactionWithManagedObjectContext:(id)arg1;
- (_Bool)_hasAtLeastOneItem:(_Bool)arg1;
- (void)_migrationDidFinish;
- (void)_deleteObsoleteMetadataFiles;
- (_Bool)deleteAllDiagnosticFiles:(id *)arg1;
- (id)_init;
- (struct NSObject *)albumFromGroupURL:(id)arg1;
- (id)photoFromAssetURL:(id)arg1;
- (id)assetURLForManagedPhoto:(id)arg1;
- (id)assetURLForPhoto:(id)arg1;
- (id)assetURLForPhoto:(id)arg1 extension:(id)arg2;
- (void)setLastImportSessionUUID:(id)arg1;
- (id)lastImportSessionUUID;
- (id)duplicatePhotoStreamPhotosForPhotos:(id)arg1;
- (void)removeFromKnownPhotoStreamAlbums:(id)arg1;
- (void)addToKnownPhotoStreamAlbums:(id)arg1;
- (struct NSObject *)allPhotoStreamPhotosAlbum;
- (void)userExpungeAssets:(id)arg1;
- (void)userUntrashAssets:(id)arg1;
- (void)userTrashAssets:(id)arg1;
- (void)_userApplyTrashedState:(short)arg1 toAssets:(id)arg2;
- (void)_filterAssets:(id)arg1 toTrashableAssets:(id *)arg2 deletableAssets:(id *)arg3 otherAssets:(id *)arg4;
- (void)_userDeleteAssets:(id)arg1;
- (id)assetWithUUID:(id)arg1 inContainer:(id)arg2;
- (id)assetWithUUID:(id)arg1;
- (id)existingObjectWithID:(id)arg1 error:(id *)arg2;
- (id)objectWithObjectID:(id)arg1;
- (unsigned long long)countOfLocalAlbumsContainingAssets:(id)arg1 assetsInSomeAlbumCount:(long long *)arg2;
- (struct NSObject *)eventAlbumContainingPhoto:(id)arg1;
@property(readonly, copy, nonatomic) NSArray *photoStreamAlbumsForPreferences;
@property(readonly, copy, nonatomic) NSArray *photoStreamAlbums;
- (id)albumListForAlbumOfKind:(int)arg1;
- (void)userExpungeAlbums:(id)arg1;
- (void)userUntrashAlbums:(id)arg1;
- (void)userTrashAlbums:(id)arg1;
- (void)_userApplyTrashedState:(short)arg1 toAlbums:(id)arg2;
- (void)_filterAlbums:(id)arg1 toTrashableAlbums:(id *)arg2 deletableAlbums:(id *)arg3 otherAlbums:(id *)arg4;
- (void)_userDeleteAlbums:(id)arg1;
@property(readonly, copy, nonatomic) NSArray *placeAlbums;
@property(readonly, copy, nonatomic) NSArray *faceAlbums;
@property(readonly, copy, nonatomic) NSArray *eventAlbums;
@property(readonly, copy, nonatomic) NSArray *importAlbums;
@property(readonly, copy, nonatomic) NSArray *wallpaperAlbums;
@property(readonly, copy, nonatomic) NSArray *imagePickerAlbums;
@property(readonly, copy, nonatomic) NSArray *userAlbums;
@property(readonly, copy, nonatomic) NSArray *albums;
- (struct NSObject *)albumWithUuid:(id)arg1;
- (struct NSObject *)eventWithName:(id)arg1 andImportSessionIdentifier:(id)arg2;
- (void)removeInflightAssets:(id)arg1;
- (void)addInflightAsset:(id)arg1;
- (struct NSObject *)inFlightAssetsAlbumIfAvailable;
@property(readonly, retain, nonatomic) NSObject<PLAlbumProtocol> *inFlightAssetsAlbum;
@property(readonly, retain, nonatomic) NSObject<PLAlbumProtocol> *recentlyAddedAlbum;
@property(readonly, retain, nonatomic) NSObject<PLAlbumProtocol> *savedPhotosAlbum;
- (void)_withDispatchGroup:(id)arg1 synchronously:(_Bool)arg2 performBlock:(CDUnknownBlockType)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)withDispatchGroup:(id)arg1 performBlock:(CDUnknownBlockType)arg2;
- (void)_withDispatchGroup:(id)arg1 synchronously:(_Bool)arg2 performTransaction:(CDUnknownBlockType)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)withDispatchGroup:(id)arg1 performTransaction:(CDUnknownBlockType)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)withDispatchGroup:(id)arg1 performTransaction:(CDUnknownBlockType)arg2;
- (void)performBlockAndWait:(CDUnknownBlockType)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)performBlock:(CDUnknownBlockType)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)performBlock:(CDUnknownBlockType)arg1;
- (void)addCompletionHandlerToCurrentTransaction:(CDUnknownBlockType)arg1;
- (void)performTransactionAndWait:(CDUnknownBlockType)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)performTransaction:(CDUnknownBlockType)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)performTransactionAndWait:(CDUnknownBlockType)arg1;
- (void)performTransaction:(CDUnknownBlockType)arg1;
- (void)deleteITunesSyncedContent;
- (id)iTunesSyncedContentInfo;
- (_Bool)hasITunesSyncedContent;
- (void)deleteAllImages;
- (void)deleteImages:(id)arg1;
- (_Bool)hasAtLeastOnePhoto;
- (_Bool)hasAtLeastOneItem;
- (void)photoLibraryCorruptNotification;
- (void)copyAssetToCameraRoll:(id)arg1;
- (void)clientApplicationWillEnterForeground;
- (id)countOfAllPhotosAndVideos;
- (void)flushAlbums;
- (void)flushPhotoStreamAlbums;
- (void)flushDCIMAlbums;
- (void)_releaseThumbnailManager;
@property(readonly, retain, nonatomic) PLThumbnailManager *thumbnailManager;
- (id)name;
- (void)dealloc;
- (id)initWithTransientContext:(_Bool)arg1 name:(const char *)arg2;
- (id)initWithName:(const char *)arg1;
- (id)init;
- (void)testForRecoveryInBackground;

@end

@interface PLPhotoLibraryShouldReloadNotification : PLChangeNotification
{
}

- (id)userInfo;
- (id)object;
- (id)name;
- (id)initNotification;

@end

@interface PLPhotoSharingHelper : NSObject
{
}

+ (_Bool)debugAutoAcceptInvitation;
+ (_Bool)debugDownloadAllDerivatives;
+ (_Bool)debugDownloadMetadataOnly;
+ (_Bool)debugDownloadThumbnailsOnly;
+ (_Bool)debugAlwaysStreamSharedVideos;
+ (void)deleteDebugBreadcrumbsForAlbumGUID:(id)arg1;
+ (void)writeDownloadDebugBreadcrumbForAsset:(id)arg1 albumGUID:(id)arg2 content:(id)arg3 state:(int)arg4 error:(id)arg5;
+ (void)writeUploadDebugBreadcrumbForAssetCollections:(id)arg1 state:(int)arg2 error:(id)arg3;
+ (id)prefixForBreadcrumbState:(int)arg1;
+ (void)writeAlbumNameBreadCrumb:(id)arg1 forAlbumGUID:(id)arg2 isUpload:(_Bool)arg3;
+ (id)directoryPathForDownloadActivityForAlbumGUID:(id)arg1 create:(_Bool)arg2;
+ (id)directoryPathForUploadActivityForAlbumGUID:(id)arg1 create:(_Bool)arg2;
+ (_Bool)isBreadcrumbDebugEnabled;
+ (unsigned long long)purgeSpace:(unsigned long long)arg1;
+ (unsigned long long)purgeableSpace;
+ (void)countOfAssetsInMstreamdSharingDownloadQueueWithCompletionBlock:(CDUnknownBlockType)arg1;
+ (void)isMstreamdBusyPerformingSharingActivityWithCompletionBlock:(CDUnknownBlockType)arg1;
+ (void)applicationIsInForeground:(_Bool)arg1;
+ (double)intervalBetweenAlbumPolls;
+ (double)intervalBetweenPolls;
+ (void)downloadAsset:(id)arg1 requestThumbnail:(_Bool)arg2 shouldPrioritize:(_Bool)arg3 shouldExtendTimer:(_Bool)arg4;
+ (id)_downloadRequestQueue;
+ (_Bool)_shouldDownloadAsset:(id)arg1 requestThumbnail:(_Bool)arg2;
+ (void)prioritizeDownloadsForAlbumGUID:(id)arg1;
+ (void)checkServerModelForAlbum:(id)arg1;
+ (void)markCommentsForAssetCollectionWithGUID:(id)arg1 asViewedWithLastViewedDate:(id)arg2;
+ (void)markAlbumGUIDAsViewed:(id)arg1 clearUnseenAssetsCount:(_Bool)arg2;
+ (struct CGSize)derivedAssetSizeForMasterSizeWidth:(double)arg1 height:(double)arg2 derivativeType:(int)arg3 withSpecificationInfo:(id)arg4;
+ (id)temporaryLargeVideoDerivativePathForCollectionGUID:(id)arg1;
+ (id)temporarySmallVideoDerivativePathForCollectionGUID:(id)arg1;
+ (id)temporaryVideoPosterFramePathForCollectionGUID:(id)arg1;
+ (id)temporaryVideoPathForCollectionGUID:(id)arg1;
+ (id)temporaryThumbnailPathForCollectionGUID:(id)arg1;
+ (id)temporaryDerivativePathForCollectionGUID:(id)arg1;
+ (double)derivedAssetSmallDimensionLimitForType:(int)arg1;
+ (id)derivativesForMasterAsset:(id)arg1 withSpecifications:(id)arg2;
+ (id)videoDerivativesForAssetCollection:(id)arg1 withSpecifications:(id)arg2;
+ (void)deleteCommentWithGUIDFromServer:(id)arg1;
+ (void)publishCloudSharedCommentToServer:(id)arg1;
+ (void)handlePhoneInvitationFailuresWithCompletionBlock:(CDUnknownBlockType)arg1;
+ (id)_processPhoneFailuresQueue;
+ (void)savePhoneInvitationFailuresForPhoneNumber:(id)arg1 inAlbum:(id)arg2;
+ (id)_phoneInvitationFailureFile;
+ (_Bool)hasPhoneInvitationForAlbum:(id)arg1;
+ (void)refreshSubscriberListForAlbumGUID:(id)arg1;
+ (void)declinePendingInvitationForAlbum:(id)arg1;
+ (void)acceptPendingInvitationForAlbum:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (void)unsubscribeFromAlbum:(id)arg1;
+ (void)removeSubscribers:(id)arg1 fromOwnedAlbum:(id)arg2;
+ (void)sendPendingInvitationsForNewlyCreatedAlbum:(id)arg1;
+ (unsigned int)unregisterIdleStateChangeObserverWithToken:(int)arg1;
+ (unsigned int)registerIdleStateChangeObserverWithToken:(int *)arg1 handler:(CDUnknownBlockType)arg2;
+ (_Bool)removeCloudSharingDirectories:(id *)arg1;
+ (void)requestVideoPlaybackURLForAsset:(id)arg1 videoType:(unsigned long long)arg2 completion:(CDUnknownBlockType)arg3;
+ (_Bool)isCellularConnection;
+ (void)deleteCloudSharedAssetsFromServer:(id)arg1 inSharedAlbum:(id)arg2;
+ (void)enqueueCloudSharedAssetsForPublishToServer:(id)arg1 inSharedAlbum:(id)arg2;
+ (void)updateCloudSharedAlbumMultipleContributorsStateOnServer:(id)arg1;
+ (void)updateCloudSharedAlbumPublicURLStateOnServer:(id)arg1;
+ (void)updateCloudSharedAlbumMetadataOnServer:(id)arg1;
+ (void)deleteCloudSharedAlbumFromServer:(id)arg1;
+ (void)publishCloudSharedAlbumToServer:(id)arg1;
+ (void)deleteLocalAlbumsForMSASAlbumsWithGUIDs:(id)arg1;
+ (void)resetAllLocalState;
+ (void)updateLocalAlbumMetadataForMSASAlbum:(id)arg1 info:(id)arg2;
+ (void)trackUploadBatchSize:(unsigned long long)arg1;
+ (id)_localizationKeyForAssets:(id)arg1;
+ (_Bool)canSetUserCloudSharedLiked:(_Bool)arg1 forAssets:(id)arg2 error:(id *)arg3;
+ (_Bool)canAcceptPendingInvitationForAlbum:(id)arg1 error:(id *)arg2;
+ (_Bool)canCreateStreamInPhotoLibrary:(id)arg1 error:(id *)arg2;
+ (_Bool)hasReachedLimitOfSubscribedStreamsInLibrary:(id)arg1;
+ (_Bool)hasReachedLimitOfOwnedStreamsInLibrary:(id)arg1;
+ (long long)maxVideoLengthForPublishing;
+ (long long)maxNumDerivativesToDownloadPerPush;
+ (long long)maxCharactersPerComment;
+ (long long)maxCommentsPerAsset;
+ (long long)maxSubscribersPerStream;
+ (long long)maxAssetsPerStream;
+ (long long)maxSubscribedStreams;
+ (long long)maxOwnedStreams;
+ (struct CGSize)videoPosterFrameDimension;
+ (long long)_serverLimitValueForKey:(id)arg1 withDefaultResult:(long long)arg2;
+ (id)serverSideConfigurationDictionary;
+ (void)updateSharedAlbumsCachedServerConfigurationLimits;
+ (id)streamdVideoCache;
+ (id)_pathToServerConfigurationCache;
+ (void)initializeMSPlatform;
+ (void)forgetSharingPersonID:(id)arg1;
+ (void)retryOutstandingActivities;
+ (void)pollForAlbumListUpdates;
+ (_Bool)accountMatchesEmail:(id)arg1;
+ (id)sharingEmail;
+ (id)sharingPersonID;
+ (_Bool)sharedStreamsExplictlyDisabled;
+ (_Bool)sharedStreamsEnabled;
+ (_Bool)sharedStreamsUIEnabled;
+ (void)clearCachedAccountState;
+ (void)photosPreferencesChanged;
+ (void)accountSettingsChanged;

@end

@interface PLPhotoStreamAlbum : PLManagedAlbum
{
}

+ (id)keyPathsForValuesAffectingPersonID;
+ (id)entityName;
+ (id)photoStreamAlbumWithStreamID:(id)arg1 inPhotoLibrary:(id)arg2 createIfNeeded:(_Bool)arg3;
+ (id)entityInManagedObjectContext:(id)arg1;
- (void)addAssetOrderedByDataTaken:(id)arg1;
- (void)enforceImageLimitIfNecessary;
- (_Bool)shouldDeleteWhenEmpty;
@property(retain, nonatomic) NSString *personID;
- (void)awakeFromInsert;

@end

@interface PLPhotoStreamsHelper : NSObject
{
    _Bool _appHasPolledOnceThisForegroundSession;
}

+ (_Bool)canInitiateDistributedPhotoStreamDeletionForAssetUUID:(id)arg1;
+ (_Bool)writeBreadcrumbContent:(id)arg1 forHashString:(id)arg2;
+ (id)publishBreadcrumbsPath;
+ (id)iCloudServiceAccount;
+ (id)_acaccountStore;
+ (_Bool)photoStreamsEnabled;
+ (id)sharedPhotoStreamsHelper;
- (void)enumerateMasterHashesAndPublicGlobalUUIDsForAssets:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)initiateDeletionOfOriginalAssets:(id)arg1;
- (void)initiateDeletionOfPhotoStreamAssets:(id)arg1;
- (void)resume_mstreamd:(id)arg1;
- (id)pause_mstreamd;
- (void)resetServerState;
- (void)cleanupPhotoStreamMetadataForAssetsWithUUIDs:(id)arg1 forStreamID:(id)arg2;
- (void)savePhotoStreamMetadata:(id)arg1 forAsset:(id)arg2;
- (id)pathToSavedMetadataForAssetHash:(id)arg1 streamID:(id)arg2 createIntermediateDirs:(_Bool)arg3;
- (void)resetMstreamdStateForPersonID:(id)arg1;
- (id)derivedAssetForMasterAsset:(id)arg1;
- (struct CGSize)derivedAssetSizeForMasterSizeWidth:(double)arg1 height:(double)arg2;
- (id)temporaryPathForRecentlyUploadedAsset:(id)arg1;
- (long long)friendsLimit;
- (long long)imageLimitForFriendStream;
- (long long)imageLimitForOwnStream;
- (long long)maxPixelSizeForDerivative;
- (id)imageLimitsByAssetType;
- (long long)_serverIntegerLimitForKey:(id)arg1 debugDefaultKey:(id)arg2;
- (_Bool)shouldUploadVideos;
- (_Bool)shouldPublishScreenShots;
- (void)pollForNewSubscriptionContentOncePerAppForegroundSession;
- (void)pollForNewSubscriptionContent;
- (_Bool)dequeueAssetsForPSPublishing:(id)arg1;
- (_Bool)enqueueAssetForPSPublishing:(id)arg1 assetHash:(id)arg2 fullPath:(id)arg3 fileSize:(id)arg4 type:(id)arg5 reenqueueCount:(id)arg6 publicGlobalUUID:(id *)arg7;
- (_Bool)isValidUploadAsset:(id)arg1 type:(id)arg2 fileSize:(id)arg3;
- (void)writeDidPublishBreadcrumbforHash:(id)arg1 imagePath:(id)arg2;
- (void)writeDidEnqueueBreadcrumbForHash:(id)arg1 imagePath:(id)arg2;
- (void)writeWillEnqueueBreadcrumbForHash:(id)arg1 imagePath:(id)arg2;
- (_Bool)removeBreadcrumbsForHashString:(id)arg1;
- (id)lastPhotoStreamUpdateDate;
- (id)psHashAsString:(id)arg1;
- (id)psHashForData:(id)arg1;
- (id)photoStreamsPublishStreamID;
- (void)_appDidEnterBackground:(id)arg1;
- (void)clearCachedAccountState;
- (void)dealloc;
- (id)init;

@end

@interface PLPhotosStateLog : NSObject
{
    NSObject<OS_dispatch_group> *_group;
    PLPhotoLibrary *_photoLibrary;
}

@property(readonly, nonatomic) NSObject<OS_dispatch_group> *group; // @synthesize group=_group;
- (void)createSnapshot;
- (_Bool)copyFilesMatching:(id)arg1 andExcluding:(id)arg2 fromPath:(id)arg3 toPath:(id)arg4 usingCompression:(_Bool)arg5;
- (_Bool)compressFileFromPath:(id)arg1 toPath:(id)arg2;
- (void)logDescription:(id)arg1;
- (void)_logAssets:(id)arg1 forAlbum:(id)arg2 indent:(unsigned long long)arg3;
- (void)logAssetCounts;
- (void)logAllAlbums;
- (void)logAlbumLists;
- (void)logAlbum:(id)arg1 index:(unsigned long long)arg2 indent:(unsigned long long)arg3 completeMetadata:(_Bool)arg4 printAssets:(_Bool)arg5;
- (void)logMoments;
@property(readonly, retain, nonatomic) PLPhotoLibrary *photoLibrary;
- (void)dealloc;
- (id)init;
- (id)initWithPhotoLibrary:(id)arg1;

@end

@interface PLPlaceholderThumbnailManager : NSObject
{
    NSCache *_placeholderDataCache;
    NSCache *_placeholderImageCache;
    NSObject<OS_dispatch_queue> *_isolation;
}

+ (id)sharedManager;
- (id)_placeholderImageForFormat:(int)arg1;
- (id)newPlaceholderImageForFormat:(int)arg1 photoImageSize:(struct CGSize)arg2;
- (id)placeholderDataForFormat:(int)arg1 photoImageSize:(struct CGSize)arg2 width:(int *)arg3 height:(int *)arg4 bytesPerRow:(int *)arg5 dataWidth:(int *)arg6 dataHeight:(int *)arg7 imageDataOffset:(int *)arg8;
- (id)_cacheKeyForFormat:(int)arg1 photoImageSize:(struct CGSize)arg2;
- (void)dealloc;
- (id)init;

@end

@interface PLPreheatItem : NSObject
{
    int _format;
    long long _imageType;
    struct CGSize _optimalSourcePixelSize;
    int _prefetchCount;
    _Bool _heated;
    int _bestFormat;
}

@property(readonly, nonatomic) long long imageType; // @synthesize imageType=_imageType;
@property _Bool heated; // @synthesize heated=_heated;
@property(nonatomic) int bestFormat; // @synthesize bestFormat=_bestFormat;
@property(readonly, nonatomic) struct CGSize optimalSourcePixelSize; // @synthesize optimalSourcePixelSize=_optimalSourcePixelSize;
@property(readonly, nonatomic) int format; // @synthesize format=_format;
- (long long)decrementPrefetchCount;
- (long long)incrementPrefetchCount;
- (_Bool)isCancelled;
- (void)cancelPreheatRequest;
- (void)startPreheatRequestWithCompletionHandler:(CDUnknownBlockType)arg1;
- (_Bool)addImageHandler:(CDUnknownBlockType)arg1;
- (id)cachedImageIfAvailable:(_Bool *)arg1;
- (id)cachedImage:(_Bool *)arg1;

@end

@interface PLProgressStack : NSObject
{
    _Bool notifyUsingAssetsdNotificationCenter;
    float currentMultiplier;
    float currentTotal;
    id delegate;
    NSMutableArray *multipliers;
    NSString *mediaPathString;
}

+ (id)unarchiveFromDictionary:(id)arg1;
@property(retain, nonatomic) NSString *mediaPathString; // @synthesize mediaPathString;
@property(nonatomic) _Bool notifyUsingAssetsdNotificationCenter; // @synthesize notifyUsingAssetsdNotificationCenter;
@property(nonatomic) float currentTotal; // @synthesize currentTotal;
@property(retain, nonatomic) NSMutableArray *multipliers; // @synthesize multipliers;
@property(nonatomic) float currentMultiplier; // @synthesize currentMultiplier;
@property(nonatomic) id delegate; // @synthesize delegate;
- (id)archiveToDictionary;
- (void)setCurrentMediaPath:(id)arg1;
- (void)popAndUpdate;
- (void)updateProgress:(float)arg1;
- (void)dealloc;
- (float)totalProgress:(float)arg1;
- (void)pop;
- (void)push:(float)arg1;
- (id)initWithDelegate:(id)arg1;

@end

@interface PLPropertyListFilter : NSObject
{
}

+ (_Bool)canEncodeInPropertyList:(id)arg1;
+ (id)filterPropertyListNoData:(id)arg1;
+ (id)filterPropertyList:(id)arg1;
+ (id)filterPropertyList:(id)arg1 block:(CDUnknownBlockType)arg2;
+ (id)_filterArray:(id)arg1 block:(CDUnknownBlockType)arg2;
+ (id)_filterDictionary:(id)arg1 block:(CDUnknownBlockType)arg2;

@end

@interface PLPropertyListFromDataTransformer : NSValueTransformer
{
}

+ (_Bool)allowsReverseTransformation;
+ (Class)transformedValueClass;
- (id)reverseTransformedValue:(id)arg1;
- (id)transformedValue:(id)arg1;

@end

@interface PLPublishCloudSharedAssetsJob : PLCloudSharingJob
{
    _Bool _isNewAlbum;
    NSString *_publishAlbumCloudGUID;
    NSArray *_originalAssetUUIDs;
    NSDictionary *_trimmedVideoPathInfo;
    NSString *_batchCommentText;
}

+ (void)publishBatchOfOriginalAssets:(id)arg1 toSharedAlbum:(id)arg2 withTrimmedVideoPathInfo:(id)arg3 isNewAlbum:(_Bool)arg4 batchCommentText:(id)arg5;
@property(retain, nonatomic) NSString *batchCommentText; // @synthesize batchCommentText=_batchCommentText;
@property(nonatomic) _Bool isNewAlbum; // @synthesize isNewAlbum=_isNewAlbum;
@property(retain, nonatomic) NSDictionary *trimmedVideoPathInfo; // @synthesize trimmedVideoPathInfo=_trimmedVideoPathInfo;
@property(retain, nonatomic) NSArray *originalAssetUUIDs; // @synthesize originalAssetUUIDs=_originalAssetUUIDs;
@property(retain, nonatomic) NSString *publishAlbumCloudGUID; // @synthesize publishAlbumCloudGUID=_publishAlbumCloudGUID;
- (void)executeDaemonOperation;
- (void)runDaemonSide;
- (_Bool)shouldArchiveXPCToDisk;
- (void)run;
- (long long)daemonOperation;
- (void)dealloc;
- (id)description;
- (id)initFromXPCObject:(id)arg1 connection:(id)arg2;
- (void)encodeToXPCObject:(id)arg1;

@end

@interface PLQuotaRequest : AARequest
{
    NSString *_authToken;
    NSString *_personID;
}

- (void)dealloc;
- (id)urlRequest;
- (id)initWithURLString:(id)arg1 authToken:(id)arg2 personID:(id)arg3;

@end

@interface PLRectValueFromDataTransformer : NSValueTransformer
{
}

+ (_Bool)allowsReverseTransformation;
+ (Class)transformedValueClass;
- (id)reverseTransformedValue:(id)arg1;
- (id)transformedValue:(id)arg1;

@end

@interface PLReplaceAssetsWithCameraRollCopiesJob : PLDaemonJob
{
    NSArray *_assets;
    PLManagedAlbum *_album;
    PLPhotoLibrary *_photoLibrary;
}

+ (void)replaceAssets:(id)arg1 withCameraRollCopiesInAlbum:(id)arg2;
@property(retain, nonatomic) PLPhotoLibrary *photoLibrary; // @synthesize photoLibrary=_photoLibrary;
@property(retain, nonatomic) PLManagedAlbum *album; // @synthesize album=_album;
@property(copy, nonatomic) NSArray *assets; // @synthesize assets=_assets;
- (id)_cameraRollAssetDerivedFromAsset:(id)arg1;
- (void)runDaemonSide;
- (id)initFromXPCObject:(id)arg1 connection:(id)arg2;
- (void)encodeToXPCObject:(id)arg1;
- (void)run;
@property(readonly, retain, nonatomic) NSPersistentStoreCoordinator *coordinator;
@property(readonly, retain, nonatomic) PLManagedObjectContext *managedObjectContext;
- (long long)daemonOperation;
- (void)dealloc;

@end

@interface PLRevGeoCompoundNameInfo : NSObject
{
    _Bool _isContinuation;
    _Bool _suffixWhenPrefixOnly;
    NSString *_namePrefix;
    NSArray *_sortedNames;
    NSString *_nameSuffix;
}

+ (id)_localizedNameForName:(id)arg1;
@property(nonatomic) _Bool suffixWhenPrefixOnly; // @synthesize suffixWhenPrefixOnly=_suffixWhenPrefixOnly;
@property(nonatomic) _Bool isContinuation; // @synthesize isContinuation=_isContinuation;
@property(copy, nonatomic) NSString *nameSuffix; // @synthesize nameSuffix=_nameSuffix;
@property(copy, nonatomic) NSArray *sortedNames; // @synthesize sortedNames=_sortedNames;
@property(copy, nonatomic) NSString *namePrefix; // @synthesize namePrefix=_namePrefix;
@property(readonly, copy, nonatomic) NSString *localizedTitleForNameInfo;
@property(readonly, copy, nonatomic) NSArray *localizedSortedNames;
- (id)description;
- (id)dictionaryForInfo;
- (id)initWithDictionary:(id)arg1;
- (void)dealloc;

@end

@interface PLRevGeoLocationInfo : NSObject
{
    _Bool _isValid;
    _Bool _isHome;
    id <GEOMapItemPrivate> _geoMapItem;
    PLRevGeoCompoundNameInfo *_compoundNameInfo;
    PLRevGeoCompoundNameInfo *_compoundSecondaryNameInfo;
    NSString *_providerId;
    unsigned long long _providerVersion;
}

+ (unsigned long long)currentVersion;
+ (unsigned long long)qualityTypeForPointInCountryCode:(id)arg1 withDataProviderId:(id)arg2;
+ (CDUnknownBlockType)sortedNameInfoComparatorWithHomeAtEnd:(_Bool)arg1;
+ (id)_namingOrderForAssetReverseGeoDescription;
@property(nonatomic) unsigned long long providerVersion; // @synthesize providerVersion=_providerVersion;
@property(retain, nonatomic) NSString *providerId; // @synthesize providerId=_providerId;
@property(nonatomic) _Bool isHome; // @synthesize isHome=_isHome;
@property(retain, nonatomic) PLRevGeoCompoundNameInfo *compoundSecondaryNameInfo; // @synthesize compoundSecondaryNameInfo=_compoundSecondaryNameInfo;
@property(retain, nonatomic) PLRevGeoCompoundNameInfo *compoundNameInfo; // @synthesize compoundNameInfo=_compoundNameInfo;
@property(retain, nonatomic) id <GEOMapItemPrivate> geoMapItem; // @synthesize geoMapItem=_geoMapItem;
@property(readonly, nonatomic) _Bool isValid; // @synthesize isValid=_isValid;
@property(readonly, copy, nonatomic) NSString *countryCode;
- (void)_addNameInfo:(id)arg1 inPlaceInfoMap:(id)arg2 totalPlaceCount:(long long *)arg3;
- (id)localizedDescription;
- (id)dataForInfo;
- (id)description;
- (id)initWithData:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface PLRevGeoPlace : NSObject
{
    NSMutableDictionary *_placeTypeInfoMap;
    _Bool _isHome;
}

+ (CDUnknownBlockType)sortedAdditionalPlaceInfoComparator;
@property(nonatomic) _Bool isHome; // @synthesize isHome=_isHome;
- (unsigned long long)_dominantOrderTypeForPlaceType:(int)arg1 lastOrderType:(unsigned long long)arg2;
- (id)description;
- (id)bestPlaceInfoForOrderType:(unsigned long long)arg1;
- (id)placeInfoSetForOrderType:(unsigned long long)arg1;
@property(readonly, nonatomic) NSMutableDictionary *placeTypeInfoMap;
- (void)removePlacesInPlaceInfoSet:(id)arg1 fromOrderType:(unsigned long long)arg2;
- (void)addPlaceName:(id)arg1 placeInfo:(id)arg2 forOrderType:(unsigned long long)arg3 updateExisting:(_Bool)arg4;
- (void)mergeGEOMapItem:(id)arg1 updateExisting:(_Bool)arg2;
- (void)mergeCommonDataForGEOMapItem:(id)arg1 updateExisting:(_Bool)arg2;
- (id)initWithGEOMapItem:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface PLRevGeoPlaceInfo : NSObject
{
    NSString *_placeName;
    NSMutableSet *_geoPlaceInfos;
}

@property(retain, nonatomic) NSMutableSet *geoPlaceInfos; // @synthesize geoPlaceInfos=_geoPlaceInfos;
@property(copy, nonatomic) NSString *placeName; // @synthesize placeName=_placeName;
- (void)dealloc;
- (id)initWithPlaceName:(id)arg1;

@end

@interface PLRevGeoRepresentativeNameInfo : NSObject
{
    _Bool _allEntriesAtHome;
    _Bool _allEntriesMatchHomeForOrderType;
    _Bool _addCountyIfNeeded;
    NSString *_name;
    unsigned long long _type;
    unsigned long long _matchingCount;
    NSMutableOrderedSet *_geoPlaces;
    NSMutableOrderedSet *_remainingGeoPlaces;
}

@property(nonatomic) _Bool addCountyIfNeeded; // @synthesize addCountyIfNeeded=_addCountyIfNeeded;
@property(readonly, nonatomic) NSMutableOrderedSet *remainingGeoPlaces; // @synthesize remainingGeoPlaces=_remainingGeoPlaces;
@property(readonly, nonatomic) NSMutableOrderedSet *geoPlaces; // @synthesize geoPlaces=_geoPlaces;
@property(nonatomic) _Bool allEntriesMatchHomeForOrderType; // @synthesize allEntriesMatchHomeForOrderType=_allEntriesMatchHomeForOrderType;
@property(nonatomic) _Bool allEntriesAtHome; // @synthesize allEntriesAtHome=_allEntriesAtHome;
@property(nonatomic) unsigned long long matchingCount; // @synthesize matchingCount=_matchingCount;
@property(nonatomic) unsigned long long type; // @synthesize type=_type;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(readonly, copy, nonatomic) NSString *localizedName;
- (id)_resourceKeysForOrderType:(unsigned long long)arg1 countryCode:(id)arg2 administrativeAreaCode:(id)arg3;
- (_Bool)_administrativeAreaCode:(id)arg1 supportedForOrderType:(unsigned long long)arg2;
- (_Bool)_currentLanguageSupportsModifiersForOrderType:(unsigned long long)arg1;
- (void)_addResourceKeys:(id)arg1 toTypeMap:(id)arg2 forOrderType:(unsigned long long)arg3 countryCode:(id)arg4;
- (id)_typeKeyForOrderType:(unsigned long long)arg1 countryCode:(id)arg2;
- (void)removeGeoPlacesFromRemaining:(id)arg1;
- (void)prepareRemainingGeoPlaces;
- (void)clearGeoPlaces;
- (void)addGeoPlaces:(id)arg1;
- (void)addGeoPlace:(id)arg1;
- (void)updateWithAddedNameInfo:(id)arg1;
- (id)description;
- (void)dealloc;
- (id)init;
- (id)initWithName:(id)arg1 type:(unsigned long long)arg2;

@end

@interface PLRotatedImage : UIImage
{
    _Bool _wasRotated;
}

@property(nonatomic) _Bool wasRotated; // @synthesize wasRotated=_wasRotated;

@end

@interface PLSMetadataUtilities : NSObject
{
}

+ (id)allAlbumsDetailsWriteToPath:(id)arg1;
+ (id)_detailsForAlbum:(id)arg1;
+ (id)allAssetsDetailsWriteToPath:(id)arg1 includingLocal:(_Bool)arg2 includingFingerprints:(_Bool)arg3 forAlbumTitled:(id)arg4;
+ (void)_writeJSONForAssets:(id)arg1 toFile:(id)arg2;
+ (void)_writeData:(id)arg1 toFile:(id)arg2;
+ (id)_detailsForAsset:(id)arg1 includingLocal:(_Bool)arg2 includingFingerprints:(_Bool)arg3;
+ (id)_nameForAdjustmentType:(int)arg1;
+ (id)_allAlbumsInPhotoLibrary:(id)arg1;
+ (_Bool)_writeDetails:(id)arg1 forEntityNamed:(id)arg2 toFilepath:(id)arg3 withDefaultFilename:(id)arg4;

@end

@interface PLSearchData : PLManagedObject
{
}


// Remaining properties
@property(retain, nonatomic) PLManagedAsset *asset; // @dynamic asset;
@property(retain, nonatomic) NSData *data; // @dynamic data;
@property(nonatomic) _Bool valid; // @dynamic valid;
@end

@interface PLSearchIndexDateFormatter : NSObject
{
    NSObject<OS_dispatch_queue> *_queue;
    NSDateFormatter *_dateFormatter;
    NSString *_yearFormat;
    NSString *_monthFormat;
    NSString *_displayFormat;
    NSString *_parseFormat;
    _Bool _localeDidChange;
}

- (id)newLocalizedStringFromYear:(id)arg1 month:(id)arg2;
- (id)newLocalizedStringFromDate:(id)arg1;
- (id)newLocalizedComponentsFromDate:(id)arg1 includeMonth:(_Bool)arg2;
- (id)_inqNewLocalizedStringFromDate:(id)arg1;
- (void)_localeDidChange:(id)arg1;
- (void)_inqUpdateDateFormat:(id)arg1;
- (void)_inqSetupDateFormatter;
- (void)dealloc;
- (id)init;

@end

@interface PLSearchIndexManager : NSObject
{
    PLSearchIndexDateFormatter *_dateFormatter;
    PLKeywordManager *_keywordManager;
    PLPhotoLibrary *_photoLibrary;
    PSIDatabase *_db;
    PLThrottleTimer *_throttleTimer;
    PLXPCTransaction *_xpcTransaction;
    NSString *_searchIndexDirectory;
    NSDictionary *_searchMetadata;
    NSObject<OS_dispatch_queue> *_queue;
    NSDictionary *_uuidsToProcess;
    _Bool _receivedUpdatesWhileIndexing;
    _Bool _hasValidSearchIndex;
    _Bool _indexingPaused;
    _Bool __indexing;
    CDUnknownBlockType __inqAfterIndexingDidIterate;
}

+ (id)defaultDatabasePath;
+ (id)_defaultDatabaseDirectory;
+ (id)_databasePathInDirectory:(id)arg1;
+ (id)sharedInstance;
@property(copy, nonatomic, setter=_setInqAfterIndexingDidIterate:) CDUnknownBlockType _inqAfterIndexingDidIterate; // @synthesize _inqAfterIndexingDidIterate=__inqAfterIndexingDidIterate;
@property(getter=_isIndexing, setter=_setIndexing:) _Bool _indexing; // @synthesize _indexing=__indexing;
- (void)_inqResumeIndexingIfNeeded;
- (_Bool)_inqHasValidSearchIndex;
- (id)_moc:(id)arg1 fetchAlbumsWithUUIDs:(id)arg2;
- (id)_moc:(id)arg1 fetchAssetsWithUUIDs:(id)arg2;
- (void)_inqEnsureSearchProgressExists;
- (void)_inqEnsureSearchMetadataExists;
- (void)_inqEnsureSearchIndexExists;
- (void)_inqCloseIndexIfAbleOrForce:(_Bool)arg1 isDelete:(_Bool)arg2;
- (void)_dropXPCTransactionIfNeeded;
- (void)_takeXPCTransactionIfNeeded;
- (void)_scheduleCloseIndex;
- (_Bool)_removeFileAtPath:(id)arg1 description:(id)arg2;
- (id)_dbMetadataPath;
- (id)_dbPath;
- (id)_oldDbPath;
- (id)_cxindexProgressPath;
- (void)applyUpdates:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)dropSearchIndexDatabase;
- (void)dropSearchIndexWithCompletion:(CDUnknownBlockType)arg1;
- (void)closeSearchIndexWithCompletion:(CDUnknownBlockType)arg1;
- (void)_inqCloseSearchIndexAndDelete:(_Bool)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)_throttleTimerFire:(id)arg1;
@property(getter=isIndexingPaused, setter=setIndexingPaused:) _Bool indexingPaused; // @synthesize indexingPaused=_indexingPaused;
- (void)_inqSetIndexingPaused:(_Bool)arg1;
- (_Bool)_inqIsIndexingPaused;
- (void)_inqAddUpdatesWithUUIDs:(id)arg1 forKey:(id)arg2;
- (void)_inqAddUpdatesWithUUIDsArray:(id)arg1 forKey:(id)arg2;
@property(readonly) unsigned long long enqueuedUUIDsCount;
- (unsigned long long)_inqEnqueuedUUIDsCountForceLoad:(_Bool)arg1;
- (id)_inqPhotoLibrary;
- (void)_localeDidChange:(id)arg1;
- (_Bool)_inqUpdateLocale;
- (void)dealloc;
- (id)initWithSearchIndexDirectory:(id)arg1;

@end

@interface PLSharedManagedObjectContext : PLManagedObjectContext
{
}

- (void)_mergeChangesFromDidSaveDictionary:(id)arg1 usingObjectIDs:(_Bool)arg2;
- (void)tearDownLocalChangeNotifications;
- (void)setupLocalChangeNotifications;
- (_Bool)isUserInterfaceContext;

@end

@interface PLSharedPhotoLibrary : PLPhotoLibrary
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)sharedPhotoLibrary;
- (void)_updateWithInsertedAssetsCount:(unsigned long long)arg1 deletedCount:(unsigned long long)arg2 updatedAssets:(id)arg3;
- (unsigned long long)concurrencyType;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface PLShuffledAlbumChangeNotification : PLAssetContainerChangeNotification
{
    PLShuffledAlbum *_album;
    PLAssetContainerChangeNotification *_backingNotification;
    NSIndexSet *_changedIndexes;
    NSOrderedSet *_newSet;
}

+ (id)notificationForDerivedObject:(id)arg1 priorChangeState:(id)arg2 forBackingObjectNotification:(id)arg3;
- (void)_calculateDiffs;
- (id)_changedObjects;
- (_Bool)_getOldSet:(id *)arg1 newSet:(id *)arg2;
- (id)_diffDescription;
- (id)description;
- (id)changedIndexes;
- (id)insertedIndexes;
- (id)deletedIndexes;
- (_Bool)countDidChange;
- (_Bool)keyAssetDidChange;
- (_Bool)titleDidChange;
- (_Bool)shouldReload;
- (id)album;
- (id)object;
- (void)dealloc;
- (id)initWithShuffledAlbum:(id)arg1 albumChangeNotification:(id)arg2;
- (id)init;

@end

@interface _PLSidecarFile : PLManagedObject
{
}

+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (id)entityInManagedObjectContext:(id)arg1;
+ (id)entityName;
+ (id)insertInManagedObjectContext:(id)arg1;
- (void)setPrimitiveCompressedSizeValue:(int)arg1;
- (int)primitiveCompressedSizeValue;
@property int compressedSizeValue;
- (void)setPrimitiveIndexValue:(short)arg1;
- (short)primitiveIndexValue;
@property short indexValue;

// Remaining properties
@property(retain, nonatomic) PLManagedAsset *asset; // @dynamic asset;
@property(retain, nonatomic) NSDate *captureDate; // @dynamic captureDate;
@property(retain, nonatomic) NSNumber *compressedSize; // @dynamic compressedSize;
@property(retain, nonatomic) NSString *filename; // @dynamic filename;
@property(retain, nonatomic) NSNumber *index; // @dynamic index;
@property(retain, nonatomic) NSDate *modificationDate; // @dynamic modificationDate;
@property(retain, nonatomic) NSString *originalFilename; // @dynamic originalFilename;
@property(retain, nonatomic) NSString *uniformTypeIdentifier; // @dynamic uniformTypeIdentifier;

@end

@interface PLSidecarFile : _PLSidecarFile
{
}

- (void)setCaptureDateFromExifDictionary:(id)arg1;
@property(readonly, retain, nonatomic) NSURL *fileURL;

@end

@interface PLSimpleAlbum : NSObject <PLAssetContainer>
{
    NSString *_title;
    NSOrderedSet *_assets;
    PLManagedAsset *_keyAsset;
    PLManagedAsset *_secondaryKeyAsset;
    PLManagedAsset *_tertiaryKeyAsset;
}

@property(retain, nonatomic) PLManagedAsset *tertiaryKeyAsset; // @synthesize tertiaryKeyAsset=_tertiaryKeyAsset;
@property(retain, nonatomic) PLManagedAsset *secondaryKeyAsset; // @synthesize secondaryKeyAsset=_secondaryKeyAsset;
@property(retain, nonatomic) PLManagedAsset *keyAsset; // @synthesize keyAsset=_keyAsset;
@property(readonly, copy, nonatomic) NSArray *localizedLocationNames;
@property(readonly, nonatomic) _Bool canShowAvalancheStacks;
@property(readonly, nonatomic) _Bool canShowComments;
- (_Bool)canPerformEditOperation:(unsigned long long)arg1;
@property(readonly, nonatomic) _Bool isEmpty;
@property(readonly, nonatomic) unsigned long long videosCount;
@property(readonly, nonatomic) unsigned long long photosCount;
@property(readonly, nonatomic) unsigned long long assetsCount;
@property(readonly, nonatomic) unsigned long long approximateCount;
@property(readonly, retain, nonatomic) NSOrderedSet *assets;
@property(readonly, copy, nonatomic) NSString *localizedTitle;
@property(readonly, retain, nonatomic) NSString *title;
@property(readonly, retain, nonatomic) NSString *uuid;
- (long long)_countOfAssetType:(short)arg1;
- (void)dealloc;
- (id)initWithTitle:(id)arg1 assets:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly, retain, nonatomic) NSDate *endDate;
@property(readonly) unsigned long long hash;
@property(readonly, retain, nonatomic) NSDate *startDate;
@property(readonly) Class superclass;

@end

@interface PLSimpleAlbumList : NSObject <PLAssetContainerList>
{
    NSOrderedSet *_containers;
}

@property(retain, nonatomic) NSOrderedSet *containers; // @synthesize containers=_containers;
- (id)containersRelationshipName;
- (id)photoLibrary;
- (id)managedObjectContext;
- (_Bool)canEditContainers;
- (_Bool)isEmpty;
@property(readonly, nonatomic) unsigned long long containersCount;
- (void)dealloc;
- (id)initWithAssetContainers:(id)arg1;
- (id)initWithAssetContainer:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PLSimpleDCIMDirectory : NSObject
{
    NSURL *_baseURL;
    NSString *_subDirSuffix;
    unsigned long long _directoryLimit;
    NSFileManager *_fileManager;
    NSMutableIndexSet *_availableFileNameNumbers;
    NSURL *_currentSubDirectory;
    unsigned long long _currentSubDirectoryNumber;
    NSString *_userInfoPath;
    _Bool _hasLoadedUserInfo;
    _Bool _representsCameraRoll;
    NSObject<OS_dispatch_queue> *_isolation;
}

+ (id)cloudPlistName;
+ (id)cameraRollPlistName;
+ (id)migrateOldPlistToNewPlist:(id)arg1;
@property(readonly, retain) NSURL *directoryURL; // @synthesize directoryURL=_baseURL;
@property _Bool representsCameraRoll; // @synthesize representsCameraRoll=_representsCameraRoll;
- (void)reset;
- (id)nextAvailableFileURLWithExtension:(id)arg1;
- (void)dealloc;
- (id)init;
- (id)initWithDirectoryURL:(id)arg1 subDirectorySuffix:(id)arg2 perDirectoryLimit:(unsigned long long)arg3 userInfoPath:(id)arg4;
- (_Bool)_ensureDirectoryExists:(id)arg1;
- (void)_loadUserInfoLastDirectoryNumber:(id *)arg1 lastFileNumber:(id *)arg2;
- (void)_saveUserInfo;
- (struct _NSRange)fileNameNumberRangeForDirNumber:(unsigned long long)arg1;
- (id)availableFileNameNumbersInDirNumber:(unsigned long long)arg1;
- (id)subDirURLForNumber:(unsigned long long)arg1 create:(_Bool)arg2 didCreate:(_Bool *)arg3;
@property(readonly, retain, nonatomic) NSURL *currentSubDirectory;

@end

@interface PLSlalomRangeMapper : NSObject
{
    NSMutableArray *_originalLengths;
    NSMutableArray *_scaledLengths;
    NSMutableArray *_scaledRegions;
}

- (void)enumerateScaledRegionsUsingBlock:(CDUnknownBlockType)arg1;
- (void)markScaledRegionWithRate:(float)arg1 rampInStartTime:(float)arg2 rampInEndTime:(float)arg3 rampOutStartTime:(float)arg4 rampOutEndTime:(float)arg5;
- (float)_mapTime:(float)arg1 fromLengths:(id)arg2 toLengths:(id)arg3;
- (float)originalTimeForScaledTime:(float)arg1;
- (float)scaledTimeForOriginalTime:(float)arg1;
- (void)addNextRange:(float)arg1 scaledLength:(float)arg2;
- (void)dealloc;
- (id)init;

@end

@interface PLSlalomRangeMapperScaledRegion : NSObject
{
    float _rate;
    float _rampInStartTime;
    float _rampInEndTime;
    float _rampOutStartTime;
    float _rampOutEndTime;
}

@property(nonatomic) float rampOutEndTime; // @synthesize rampOutEndTime=_rampOutEndTime;
@property(nonatomic) float rampOutStartTime; // @synthesize rampOutStartTime=_rampOutStartTime;
@property(nonatomic) float rampInEndTime; // @synthesize rampInEndTime=_rampInEndTime;
@property(nonatomic) float rampInStartTime; // @synthesize rampInStartTime=_rampInStartTime;
@property(nonatomic) float rate; // @synthesize rate=_rate;

@end

@interface PLSlalomUtilities : NSObject
{
}

+ (double)durationForBaseDuration:(double)arg1 videoAdjustments:(id)arg2;
+ (double)durationForManagedAsset:(id)arg1 applyVideoAdjustments:(_Bool)arg2;
+ (id)videoAVObjectBuilderForManagedAsset:(id)arg1 applyVideoAdjustments:(_Bool)arg2;
+ (id)synchronouslyFetchVideoAdjustmentsFromManagedAsset:(id)arg1;

@end

@interface PLSortedAlbumList : NSObject <PLAlbumContainer, PLIndexMappingCache>
{
    struct NSObject *_backingAlbumList;
    struct __CFArray *_toBackingMap;
    struct __CFArray *_fromBackingMap;
    CDUnknownBlockType _sortComparator;
    NSMutableOrderedSet *_weak_albums;
}

@property(copy, nonatomic) CDUnknownBlockType sortComparator; // @synthesize sortComparator=_sortComparator;
@property(retain, nonatomic) NSObject<PLAlbumContainer> *backingAlbumList; // @synthesize backingAlbumList=_backingAlbumList;
- (Class)derivedChangeNotificationClass;
- (_Bool)mappedDataSourceChanged:(id)arg1 remoteNotificationData:(id)arg2;
@property(readonly, copy, nonatomic) id <NSObject><NSCopying> cachedIndexMapState;
- (void)replaceObjectInSortedAlbumsAtIndex:(unsigned long long)arg1 withObject:(id)arg2;
- (void)removeObjectFromSortedAlbumsAtIndex:(unsigned long long)arg1;
- (void)insertObject:(id)arg1 inSortedAlbumsAtIndex:(unsigned long long)arg2;
- (id)objectInSortedAlbumsAtIndex:(unsigned long long)arg1;
- (unsigned long long)indexInSortedAlbumsOfObject:(id)arg1;
- (unsigned long long)countOfSortedAlbums;
@property(retain, nonatomic) NSMutableOrderedSet *_albums;
- (void)createSortedIndexesMap;
- (id)containersRelationshipName;
- (_Bool)canEditContainers;
- (_Bool)isEmpty;
@property(readonly, nonatomic) unsigned long long containersCount;
- (id)containers;
@property(readonly, retain, nonatomic) NSString *_prettyDescription;
@property(readonly, retain, nonatomic) NSString *_typeDescription;
- (id)photoLibrary;
- (void)preheatAlbumsAtIndexes:(id)arg1 forProperties:(id)arg2 relationships:(id)arg3;
- (void)preheatAlbumsForProperties:(id)arg1 relationships:(id)arg2;
- (void)updateAlbumsOrderIfNeeded;
- (_Bool)needsReordering;
- (void)setNeedsReordering;
@property(readonly, copy, nonatomic) CDUnknownBlockType albumsSortingComparator;
- (_Bool)albumHasFixedOrder:(struct NSObject *)arg1;
@property(readonly, nonatomic) _Bool isFolder;
- (_Bool)canEditAlbums;
- (short)albumListType;
- (id)managedObjectContext;
@property(readonly, nonatomic) unsigned long long unreadAlbumsCount;
- (_Bool)hasAtLeastOneAlbum;
@property(readonly, nonatomic) int filter;
@property(readonly, nonatomic) unsigned long long albumsCount;
- (id)albums;
- (id)identifier;
- (void)dealloc;
- (id)initWithAlbumList:(struct NSObject *)arg1 sortComparator:(CDUnknownBlockType)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PLSortedAlbumListChangeNotification : PLAssetContainerListChangeNotification
{
    PLSortedAlbumList *_albumList;
    PLAssetContainerListChangeNotification *_backingNotification;
}

+ (id)notificationForDerivedObject:(id)arg1 priorChangeState:(id)arg2 forBackingObjectNotification:(id)arg3;
- (id)_changedObjects;
- (_Bool)_getOldSet:(id *)arg1 newSet:(id *)arg2;
- (id)description;
- (_Bool)countDidChange;
- (_Bool)shouldReload;
- (id)albumList;
- (id)object;
- (void)dealloc;
- (id)initWithSortedAlbumList:(id)arg1 albumListChangeNotification:(id)arg2;
- (id)init;

@end

@interface PLStreamShareSource : NSObject
{
    NSData *_mediaData;
    NSString *_fileExtension;
    NSURL *_mediaURL;
    long long _mediaType;
}

@property(nonatomic) long long mediaType; // @synthesize mediaType=_mediaType;
@property(retain, nonatomic) NSURL *mediaURL; // @synthesize mediaURL=_mediaURL;
@property(retain, nonatomic) NSString *fileExtension; // @synthesize fileExtension=_fileExtension;
@property(retain, nonatomic) NSData *mediaData; // @synthesize mediaData=_mediaData;
- (id)initWithDictionary:(id)arg1;
- (id)serializedDictionary;

@end

@interface PLSyncSaveJob : NSObject
{
    _Bool isVideo;
    _Bool isSyncComplete;
    _Bool _cleanupSyncState;
    NSArray *facesInfo;
    NSURL *originalAssetURL;
    NSString *uuid;
    NSDate *creationDate;
    NSDate *modificationDate;
    NSSet *albumURIs;
    CLLocation *location;
    NSNumber *sortToken;
    NSString *originalFileName;
    NSDate *_cleanupBeforeDate;
    CDUnknownBlockType _finishedBlock;
}

@property(copy, nonatomic) CDUnknownBlockType finishedBlock; // @synthesize finishedBlock=_finishedBlock;
@property(copy, nonatomic) NSDate *cleanupBeforeDate; // @synthesize cleanupBeforeDate=_cleanupBeforeDate;
@property(nonatomic) _Bool cleanupSyncState; // @synthesize cleanupSyncState=_cleanupSyncState;
@property(nonatomic) _Bool isSyncComplete; // @synthesize isSyncComplete;
@property(retain, nonatomic) NSString *originalFileName; // @synthesize originalFileName;
@property(retain, nonatomic) NSNumber *sortToken; // @synthesize sortToken;
@property(copy, nonatomic) CLLocation *location; // @synthesize location;
@property(copy, nonatomic) NSSet *albumURIs; // @synthesize albumURIs;
@property(copy, nonatomic) NSDate *modificationDate; // @synthesize modificationDate;
@property(copy, nonatomic) NSDate *creationDate; // @synthesize creationDate;
@property(copy, nonatomic) NSString *uuid; // @synthesize uuid;
@property(nonatomic) _Bool isVideo; // @synthesize isVideo;
@property(retain, nonatomic) NSURL *originalAssetURL; // @synthesize originalAssetURL;
@property(retain, nonatomic) NSArray *facesInfo; // @synthesize facesInfo;
- (id)description;
- (void)processFacesWithBlock:(CDUnknownBlockType)arg1;
- (id)serializedData;
- (id)initFromSerializedData:(id)arg1;
- (void)dealloc;

@end

@interface PLTemporaryImageTable : NSObject
{
    PLImageTable *_imageTable;
    unsigned long long _nextTableEntryIndex;
    NSMutableArray *_itemIndexToThumbEntryMapping;
    NSString *_imageTablePath;
    int _imageFormat;
}

- (void)dealloc;
- (void)reset;
- (void)_cleanup;
- (void)removeItemAtIndex:(unsigned long long)arg1;
- (void)insertItemAtIndex:(unsigned long long)arg1;
- (id)imageForItemAtIndex:(unsigned long long)arg1;
- (id)dataForItemAtIndex:(unsigned long long)arg1 widthOut:(int *)arg2 heightOut:(int *)arg3 bytesPerRowOut:(int *)arg4 dataWidthOut:(int *)arg5 dataHeightOut:(int *)arg6 imageDataOffset:(int *)arg7;
- (unsigned long long)_imageTableIndexForItemIndex:(unsigned long long)arg1;
- (void)setImage:(id)arg1 videoDuration:(id)arg2 forItemAtIndex:(unsigned long long)arg3;
- (id)initWithWithPath:(id)arg1 imageFormat:(int)arg2;

@end

@interface PLThrottleTimer : NSObject
{
    id _target;
    NSObject<OS_dispatch_queue> *_queue;
    unsigned long long _timeoutId;
    unsigned long long _maxTimeoutId;
    _Bool _isPingedSinceLastFire;
    _Bool _isPaused;
    _Bool _isInvalid;
    SEL _action;
    double _timeout;
    double _maxTimeout;
}

@property(readonly, nonatomic) double maxTimeout; // @synthesize maxTimeout=_maxTimeout;
@property(readonly, nonatomic) double timeout; // @synthesize timeout=_timeout;
@property(readonly, nonatomic) SEL action; // @synthesize action=_action;
- (void)invalidate;
- (void)setPaused:(_Bool)arg1;
- (void)ping;
- (void)_inqScheduleTimeout:(_Bool)arg1 maxTimeout:(_Bool)arg2;
- (void)_inqFireWithTimeout:(_Bool)arg1 timeoutId:(unsigned long long)arg2 maxTimeout:(_Bool)arg3 maxTimeoutId:(unsigned long long)arg4;
@property(readonly, nonatomic) __weak id target;
- (id)initWithTarget:(id)arg1 action:(SEL)arg2 timeout:(double)arg3 maxTimeout:(double)arg4;

@end

@interface PLThumbFileManager : NSObject <PLThumbPersistenceManager>
{
    int _format;
    struct CGSize _thumbnailSize;
    NSString *_path;
    NSString *_filename;
    _Bool _readOnly;
    int _imageRowBytes;
    int _imageLength;
    int _entryLength;
}

+ (void)deleteAllEntriesWithIdentifier:(id)arg1 basePath:(id)arg2;
@property(readonly, nonatomic) int imageLength; // @synthesize imageLength=_imageLength;
@property(readonly, nonatomic) int imageRowBytes; // @synthesize imageRowBytes=_imageRowBytes;
@property(readonly, nonatomic) int imageFormat; // @synthesize imageFormat=_format;
@property(readonly, nonatomic) NSString *path; // @synthesize path=_path;
- (id)_debugDescription;
- (id)originalPreheatItemForAsset:(id)arg1 optimalSourcePixelSize:(struct CGSize)arg2 options:(unsigned int)arg3;
- (id)preheatItemForAsset:(id)arg1 format:(int)arg2 optimalSourcePixelSize:(struct CGSize)arg3 options:(unsigned int)arg4;
- (id)imageWithIdentifier:(id)arg1;
- (id)imageDataWithIdentifier:(id)arg1 orIndex:(unsigned long long)arg2 width:(int *)arg3 height:(int *)arg4 bytesPerRow:(int *)arg5 dataWidth:(int *)arg6 dataHeight:(int *)arg7 dataOffset:(int *)arg8;
- (void)setImageDataForEntry:(const void *)arg1 withIdentifier:(id)arg2 orIndex:(unsigned long long)arg3 asset:(id)arg4;
- (void)setImageForEntry:(id)arg1 withIdentifier:(id)arg2 orIndex:(unsigned long long)arg3 videoDuration:(id)arg4 photoUUID:(id)arg5;
- (id)thumbnailForImage:(id)arg1 videoDuration:(id)arg2;
@property(readonly, nonatomic) struct CGSize imageSize;
- (void)endThumbnailSafePropertyUpdatesOnAsset:(id)arg1 withToken:(id)arg2;
- (id)beginThumbnailSafePropertyUpdatesOnAsset:(id)arg1;
- (_Bool)copyEntryFromOriginalAsset:(id)arg1 toAsset:(id)arg2;
- (void)_writeImage:(id)arg1 forThumbIdentifier:(id)arg2;
- (void)_writeData:(id)arg1 forThumbIdentifier:(id)arg2;
- (id)thumbnailPathForThumbIdentifier:(id)arg1;
- (_Bool)usesThumbIdentifiers;
@property(readonly, nonatomic) _Bool isReadOnly;
- (void)dealloc;
@property(readonly, nonatomic) int imageHeight;
@property(readonly, nonatomic) int imageWidth;
@property(readonly, copy) NSString *description;
- (id)initWithPath:(id)arg1 imageFormat:(int)arg2;
- (id)initWithPath:(id)arg1 imageFormat:(int)arg2 readOnly:(_Bool)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PLThumbnailIndexes : NSObject
{
    NSObject<OS_dispatch_queue> *isolation;
    NSMutableIndexSet *unusedIndexes;
    long long usedMax;
    unsigned long long _fetchTimestamp;
}

+ (void)recycleThumbnailIndexes:(id)arg1 timestamp:(unsigned long long)arg2;
+ (void)recycleThumbnailIndexes:(id)arg1;
+ (unsigned long long)nextAvailableThumbnailIndex;
+ (void)getAvailableThumbnailIndexWithHandler:(CDUnknownBlockType)arg1;
+ (void)getAvailableThumbnailIndexesWithCount:(unsigned long long)arg1 handler:(CDUnknownBlockType)arg2;
+ (id)sharedInstance;
- (id)init;
- (id)fetchOccupiedThumbnailIndexesWithLibrary:(id)arg1;
- (void)recycleThumbnailIndexes:(id)arg1 timestamp:(unsigned long long)arg2;
- (void)getAvailableThumbnailIndexesFromDatabase;
- (void)getAvailableThumbnailIndexesWithCount:(unsigned long long)arg1 handler:(CDUnknownBlockType)arg2;

@end

@interface PLThumbnailManager : NSObject
{
    PLPhotoLibrary *_photoLibrary;
    NSLock *_lock;
    NSIndexSet *_occupiedIndexes;
    NSDictionary *_changedPhotosMap;
    NSArray *_changedPhotos;
    NSMutableDictionary *_thumbManagersByFormat;
    id <PLThumbPersistenceManager> _lastUsedThumbManager;
    int _lastUsedThumbManagerFormat;
    PLLargeImageLoader *_largeImageLoaderFullSize;
    PLLargeImageLoader *_largeImageLoaderFullScreen;
    PLLargeImageLoader *_largeImageLoaderFilledScreen;
    PLLargeImageLoader *_largeImageLoaderFilledHalfScreen;
    NSMutableSet *_previouslyRequestedThumbnailFixOIDs;
    NSMutableSet *_requestedThumbnailFixAssets;
    NSMutableArray *_alreadyFailedAssetObjectIDsForRebuild;
    id _observerToken;
}

+ (void)saveCameraPreviewWellImage:(struct CGImage *)arg1 uuid:(id)arg2;
+ (void)saveCameraPreviewWellImageForAsset:(id)arg1;
+ (id)cameraPreviewWellAssetUUID;
+ (id)cameraPreviewWellImageQueue;
+ (int)largestNonJPEGThumbnailFormat;
+ (id)supportedThumbnailFormats;
+ (id)_allPossibleThumbnailFormats;
+ (void)handleRebuildThumbnailRequestPersistentFailure;
+ (_Bool)hasExceededRebuildThumbnailRequestLimit;
+ (_Bool)isRebuildingThumbnails;
+ (void)rebuildAllMissingThumbnails;
+ (void)removeRebuildThumbnailsRequest:(const char *)arg1;
+ (_Bool)hasRebuildThumbnailsRequest;
+ (void)addRebuildThumbnailsRequest;
+ (void)resetThumbnails;
+ (_Bool)isMissingThumbnailTables;
+ (_Bool)hasObsoleteThumbnailTables;
+ (int)thumbnailFormat;
+ (int)thumbnailVersion;
+ (int)thumbnailVersionCurrent;
+ (void)removeObsoleteMetadata;
+ (id)defaultThumbnailsDirectoryV2;
+ (id)defaultThumbnailsDirectory;
+ (_Bool)useImageTableForFormat:(int)arg1;
+ (_Bool)shouldUseLargerNonJPEGThumbnailFormat;
+ (_Bool)isRidingPowderSnow;
+ (_Bool)isRidingCrudSnow;
@property(retain, nonatomic) id observerToken; // @synthesize observerToken=_observerToken;
@property(readonly, retain, nonatomic) NSMutableDictionary *thumbManagersByFormat; // @synthesize thumbManagersByFormat=_thumbManagersByFormat;
@property(nonatomic) PLPhotoLibrary *photoLibrary; // @synthesize photoLibrary=_photoLibrary;
- (id)_thumbManagerForFormat:(int *)arg1;
- (id)_dataForInFlightAsset:(id)arg1 format:(int)arg2 width:(int *)arg3 height:(int *)arg4 bytesPerRow:(int *)arg5 dataWidth:(int *)arg6 dataHeight:(int *)arg7 imageDataOffset:(int *)arg8 imageDataFormat:(int *)arg9;
- (id)_dataForAsset:(id)arg1 format:(int)arg2 width:(int *)arg3 height:(int *)arg4 bytesPerRow:(int *)arg5 dataWidth:(int *)arg6 dataHeight:(int *)arg7 imageDataOffset:(int *)arg8 imageDataFormat:(int *)arg9;
- (id)thumbnailJPEGPathForPhoto:(id)arg1;
- (id)preheatItemSourceForFormat:(int)arg1;
- (id)_tableDescriptions;
- (id)compactImageTables;
- (id)preflightImageTableCompactionForPhotos:(id)arg1;
- (id)_anyImageTable;
- (id)dataForPhoto:(id)arg1 format:(int)arg2 allowPlaceholder:(_Bool)arg3 width:(int *)arg4 height:(int *)arg5 bytesPerRow:(int *)arg6 dataWidth:(int *)arg7 dataHeight:(int *)arg8 imageDataOffset:(int *)arg9;
- (void)deleteThumbnailsWithIdentifier:(id)arg1 orIndex:(unsigned long long)arg2 uuid:(id)arg3;
- (void)setThumbnailsForPhoto:(id)arg1 withImage:(id)arg2;
- (void)_horse_setThumbnailsForPhoto:(id)arg1 withImage:(id)arg2;
- (void)endThumbnailSafePropertyUpdatesOnAsset:(id)arg1 withToken:(id)arg2;
- (id)beginThumbnailSafePropertyUpdatesOnAsset:(id)arg1;
- (_Bool)copyThumbnailsFromAsset:(id)arg1 toAsset:(id)arg2;
- (struct __CFDictionary *)placeholderThumbnailDataByFormatID;
- (void)setThumbnails:(struct __CFDictionary *)arg1 forPhoto:(id)arg2;
- (id)newImageForPhoto:(id)arg1 withFormat:(int)arg2 allowPlaceholder:(_Bool)arg3 optimalSourcePixelSize:(struct CGSize)arg4 networkAccessAllowed:(_Bool)arg5 networkAccessForced:(_Bool)arg6 trackCPLDownload:(_Bool)arg7 outImageProperties:(const struct __CFDictionary **)arg8 outImageDataInfo:(id *)arg9 outCPLDownloadContext:(id *)arg10;
- (void)imageForPhoto:(id)arg1 withFormat:(int)arg2 allowPlaceholder:(_Bool)arg3 optimalSourcePixelSize:(struct CGSize)arg4 networkAccessAllowed:(_Bool)arg5 networkAccessForced:(_Bool)arg6 trackCPLDownload:(_Bool)arg7 completion:(CDUnknownBlockType)arg8 sync:(_Bool)arg9;
- (id)newImageDataForPhoto:(id)arg1 withFormat:(int)arg2 allowPlaceholder:(_Bool)arg3 wantURLOnly:(_Bool)arg4 networkAccessAllowed:(_Bool)arg5 networkAccessForced:(_Bool)arg6 trackCPLDownload:(_Bool)arg7 outImageDataInfo:(id *)arg8 outCPLDownloadContext:(id *)arg9;
- (void)assetsdImageForPhoto:(id)arg1 withFormat:(int)arg2 allowPlaceholder:(_Bool)arg3 wantURLOnly:(_Bool)arg4 optimalSourcePixelSize:(struct CGSize)arg5 networkAccessAllowed:(_Bool)arg6 networkAccessForced:(_Bool)arg7 trackCPLDownload:(_Bool)arg8 completion:(CDUnknownBlockType)arg9;
- (id)newImageForPhoto:(id)arg1 withFormat:(int)arg2 allowPlaceholder:(_Bool)arg3 outImageProperties:(const struct __CFDictionary **)arg4 outDeliveredPlaceholder:(_Bool *)arg5;
- (_Bool)_canAccessImageForAsset:(id)arg1;
- (void)dealloc;
- (void)clearPhotoLibrary;
- (id)initWithWeakPhotoLibrary:(id)arg1;
- (long long)_rebuildAssetThumbnailsWithLimit:(int)arg1 error:(id *)arg2;
- (void)_discardAlreadyFailedAssetObjectIDsForRebuild;

@end

@interface PLTransientManagedObjectContext : PLManagedObjectContext
{
}

+ (_Bool)canMergeRemoteChanges;
+ (_Bool)useModelMigratorToCreateDatabase;

@end

@interface PLTransientOrderKey : NSObject <PLOrderKeyObject>
{
    long long _orderValue;
    NSManagedObjectID *_objectID;
    NSManagedObjectContext *_moc;
}

@property(retain, nonatomic) NSManagedObjectContext *moc; // @synthesize moc=_moc;
@property(retain, nonatomic) NSManagedObjectID *objectID; // @synthesize objectID=_objectID;
@property(nonatomic) long long orderValue; // @synthesize orderValue=_orderValue;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)secondaryOrderSortKey;
- (id)childManagedObject;
- (void)setIsSpecial:(_Bool)arg1;
- (_Bool)isSpecial;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PLUUIDStringFromUUIDDataTransformer : NSValueTransformer
{
}

+ (_Bool)allowsReverseTransformation;
+ (Class)transformedValueClass;
- (id)reverseTransformedValue:(id)arg1;
- (id)transformedValue:(id)arg1;

@end

@interface PLUnmanagedAdjustment : PLManagedObject
{
}

+ (id)addUnmanagedAdjustmentFromAdjustmentFileAtPath:(id)arg1 withAsset:(id)arg2;
+ (id)_convertRedEyeCorrection:(id)arg1 withOrientation:(long long)arg2;
+ (id)_convertRedEyeCorrections:(id)arg1 withOrientation:(long long)arg2;
+ (id)addUnmanagedAdjustmentFromXMPDataIfNeededForAsset:(id)arg1;

// Remaining properties
@property(retain, nonatomic) NSNumber *adjustmentBaseImageFormat; // @dynamic adjustmentBaseImageFormat;
@property(retain, nonatomic) NSString *adjustmentFormatIdentifier; // @dynamic adjustmentFormatIdentifier;
@property(retain, nonatomic) NSString *adjustmentFormatVersion; // @dynamic adjustmentFormatVersion;
@property(retain, nonatomic) NSDate *adjustmentTimestamp; // @dynamic adjustmentTimestamp;
@property(retain, nonatomic) PLAdditionalAssetAttributes *assetAttributes; // @dynamic assetAttributes;
@property(retain, nonatomic) NSString *editorLocalizedName; // @dynamic editorLocalizedName;
@property(retain, nonatomic) NSString *otherAdjustmentsFingerprint; // @dynamic otherAdjustmentsFingerprint;
@property(retain, nonatomic) NSString *similarToOriginalAdjustmentsFingerprint; // @dynamic similarToOriginalAdjustmentsFingerprint;
@property(retain, nonatomic) NSString *uuid; // @dynamic uuid;

@end

@interface PLUserActivityDaemonJob : PLDaemonJob
{
    long long _actionType;
    NSString *_albumUUID;
    NSArray *_assetUUIDs;
    long long _cloudFeedContent;
}

+ (void)userDidLeavePhotosApplication;
+ (void)userDidDeleteSharedAssets:(id)arg1;
+ (void)userDidDeleteSharedAlbum:(id)arg1;
+ (void)userDidReadCommentOnSharedAsset:(id)arg1;
+ (void)userDidNavigateAwayFromAllSharedAlbums;
+ (void)userDidNavigateAwayFromSharedAlbum:(id)arg1;
+ (void)userDidNavigateIntoImagePickerSharedAlbum:(id)arg1;
+ (void)userDidNavigateIntoSharedAlbum:(id)arg1;
+ (void)userDidViewCloudFeedContent:(long long)arg1;
@property(nonatomic) long long cloudFeedContent; // @synthesize cloudFeedContent=_cloudFeedContent;
@property(retain, nonatomic) NSArray *assetUUIDs; // @synthesize assetUUIDs=_assetUUIDs;
@property(copy, nonatomic) NSString *albumUUID; // @synthesize albumUUID=_albumUUID;
@property long long actionType; // @synthesize actionType=_actionType;
- (void)runDaemonSide;
- (void)run;
- (long long)daemonOperation;
- (id)initFromXPCObject:(id)arg1 connection:(id)arg2;
- (void)encodeToXPCObject:(id)arg1;
- (void)dealloc;

@end

@interface PLUserActivityTrackerJob : PLDaemonJob
{
    long long _activity;
    NSArray *_uuids;
    NSString *_clientID;
}

+ (id)persistentStoreCoordinator;
+ (id)managedObjectModel;
+ (id)managedObjectContext;
+ (id)_uuidsFilteringNulls:(id)arg1;
+ (id)_uuidsForAssets:(id)arg1;
+ (void)_noteActivity:(long long)arg1 uuid:(id)arg2;
+ (void)_noteActivity:(long long)arg1 uuids:(id)arg2;
+ (id)_queue;
+ (void)trackAlbumUUIDWasDeleted:(id)arg1;
+ (void)trackAssetUUIDsWereDeleted:(id)arg1;
+ (void)trackAssetsWereSharedViaSharedPhotoStream:(id)arg1;
+ (void)trackAssetsWereSharedViaAssignToContact:(id)arg1;
+ (void)trackAssetsWereSharedViaCopyToPasteboard:(id)arg1;
+ (void)trackAssetsWereSharedViaPrint:(id)arg1;
+ (void)trackAssetsWereSharedViaMail:(id)arg1;
+ (void)trackAssetsWereSharedViaMessage:(id)arg1;
+ (void)trackAssetsWereSharedViaTudou:(id)arg1;
+ (void)trackAssetsWereSharedViaYouku:(id)arg1;
+ (void)trackAssetsWereSharedViaYouTube:(id)arg1;
+ (void)trackAssetsWereSharedViaWeibo:(id)arg1;
+ (void)trackAssetsWereSharedViaTwitter:(id)arg1;
+ (void)trackAssetsWereSharedViaFacebook:(id)arg1;
+ (void)trackPhotoWasEditedWithFilters:(id)arg1;
+ (void)trackPhotoWasEditedWithStraighten:(id)arg1;
+ (void)trackPhotoWasEditedWithCrop:(id)arg1;
+ (void)trackPhotoWasEditedWithRedEye:(id)arg1;
+ (void)trackPhotoWasEditedWithAutoEnhance:(id)arg1;
+ (void)trackPhotoWasEditedWithRotation:(id)arg1;
+ (void)trackSlalomWasEdited:(id)arg1;
+ (void)trackAssetWasLoadedViaAPI:(id)arg1;
+ (void)trackAssetWasPickedViaAPI:(id)arg1;
+ (void)trackVideoWasTrimmed:(id)arg1;
+ (void)trackPhotoWasZoomed:(id)arg1;
+ (void)trackPhotoSetAsWallpaper:(id)arg1;
+ (void)trackVideoWasPlayed:(id)arg1;
+ (void)trackPhotoWasViewed:(id)arg1;
+ (void)trackAlbumChosenForPictureFrame:(struct NSObject *)arg1;
+ (void)trackAssetContainerStartedSlideShow:(id)arg1;
@property(retain, nonatomic) NSString *clientID; // @synthesize clientID=_clientID;
@property(retain, nonatomic) NSArray *uuids; // @synthesize uuids=_uuids;
@property(nonatomic) long long activity; // @synthesize activity=_activity;
- (void)runDaemonSide;
- (void)run;
- (long long)daemonOperation;
- (id)initFromXPCObject:(id)arg1 connection:(id)arg2;
- (void)encodeToXPCObject:(id)arg1;
- (void)dealloc;

@end

@interface PLVideoTranscoder : NSObject
{
}

+ (id)generatePosterFrameForAVAsset:(id)arg1 maxSize:(struct CGSize)arg2 error:(id *)arg3;
+ (id)generatePosterFrameForVideoAtURL:(id)arg1 maxSize:(struct CGSize)arg2 error:(id *)arg3;
+ (void)transcodeVideoWithObjectBuilder:(id)arg1 outputURL:(id)arg2 startTime:(CDStruct_198678f7)arg3 endTime:(CDStruct_198678f7)arg4 presetName:(id)arg5 outputFileType:(id)arg6 completionHandler:(CDUnknownBlockType)arg7;
+ (void)transcodeVideo:(id)arg1 outputURL:(id)arg2 startTime:(CDStruct_198678f7)arg3 endTime:(CDStruct_198678f7)arg4 presetName:(id)arg5 outputFileType:(id)arg6 completionHandler:(CDUnknownBlockType)arg7;
+ (id)exportPresetsCompatibleWithVideoAtURL:(id)arg1;

@end

@interface PLWallpaperAlbum : PLManagedAlbum
{
}

+ (id)wallpaperAlbumInLibrary:(id)arg1;
+ (id)entityInManagedObjectContext:(id)arg1;
+ (id)entityName;
- (id)_kindDescription;
- (unsigned long long)photosCount;
- (id)posterImage;
- (id)localizedTitle;
- (void)awakeFromInsert;

// Remaining properties
@property(nonatomic) short wallpaperAlbumType; // @dynamic wallpaperAlbumType;

@end

@interface PLWallpaperAsset : PLManagedAsset
{
}

+ (id)entityInManagedObjectContext:(id)arg1;
+ (id)entityName;
+ (id)insertIntoPhotoLibrary:(id)arg1 withImageURL:(id)arg2 thumbnailURL:(id)arg3;
- (void)setURL:(id)arg1 forKey:(id)arg2;
- (id)urlForKey:(id)arg1;
- (id)_thumbnailImage;
- (id)_image;
- (void)awakeFromInsert;
- (_Bool)isIncludedInMoments;
- (id)newFullScreenImage:(const struct __CFDictionary **)arg1;
- (id)wallpaperFullScreenImage;
- (void)prepareForDeletion;
- (_Bool)allowsWallpaperEditing;
- (id)indexSheetImage;
- (id)imageWithFormat:(int)arg1 outImageProperties:(const struct __CFDictionary **)arg2;
- (id)imageWithFormat:(int)arg1;
@property(retain, nonatomic) NSDictionary *wallpaperOptions;
@property(retain, nonatomic) NSURL *thumbnailURL;
@property(retain, nonatomic) NSURL *imageURL;

@end

@interface PLWallpaperImporter : NSObject
{
    NSData *_wallpaperFileHash;
    NSArray *_allWallpaperURLs;
    PLPhotoLibrary *photoLibrary;
}

+ (id)posterImageURL;
+ (void)importWallpaperAssetsIntoPhotoLibrary:(id)arg1;
@property(retain, nonatomic) PLPhotoLibrary *photoLibrary; // @synthesize photoLibrary;
@property(readonly, retain, nonatomic) PLManagedObjectContext *managedObjectContext;
- (void)dealloc;
- (id)init;
- (void)addWallpaperURLsForModel:(id)arg1 toURLs:(id)arg2;
@property(readonly, retain, nonatomic) NSArray *allWallpaperURLs;
- (id)allExistingWallpaperAssets;
- (void)importAll;
- (void)deleteAll;
- (void)updateAsNeeded;
- (id)wallpaperFileHash;
- (id)initWithPhotoLibrary:(id)arg1;

@end

@interface PLWarningHelper : NSObject
{
    NSArray *__assets;
    NSArray *__additionalPhotoStreamAssets;
    NSString *__clientName;
    long long __style;
}

+ (id)allWarningMessageCombinations;
+ (void)getDeletionWarningTitle:(id *)arg1 message:(id *)arg2 buttonTitle:(id *)arg3 forAlbums:(id)arg4 folders:(id)arg5 clientName:(id)arg6 style:(long long)arg7;
+ (id)_usedElsewhereWarningTextForAssetCount:(long long)arg1 inPhotoStreamCount:(long long)arg2 iniPhotoCount:(long long)arg3 inSomeAlbumCount:(long long)arg4 affectedLocalAlbumsCount:(long long)arg5 itemKindSuffix:(id)arg6 actualDeletionCount:(long long)arg7;
+ (void)getAvalancheDeleteWarning:(id *)arg1 actualDeletionCount:(long long *)arg2 forAssets:(id)arg3;
+ (void)getDeletionWarningTitle:(id *)arg1 message:(id *)arg2 buttonTitle:(id *)arg3 forAssets:(id)arg4 additionalPhotoStreamAssets:(id)arg5 clientName:(id)arg6 style:(long long)arg7;
+ (void)_getWarningTitle:(id *)arg1 message:(id *)arg2 buttonTitle:(id *)arg3 forItemSuffix:(id)arg4 count:(unsigned long long)arg5 operation:(long long)arg6 clientName:(id)arg7;
+ (void)getWarningTitle:(id *)arg1 message:(id *)arg2 buttonTitle:(id *)arg3 forAssets:(id)arg4 operation:(long long)arg5 clientName:(id)arg6;
@property(nonatomic, setter=_setStyle:) long long _style; // @synthesize _style=__style;
@property(retain, nonatomic, setter=_setClientName:) NSString *_clientName; // @synthesize _clientName=__clientName;
@property(retain, nonatomic, setter=_setAdditionalPhotoStreamAssets:) NSArray *_additionalPhotoStreamAssets; // @synthesize _additionalPhotoStreamAssets=__additionalPhotoStreamAssets;
@property(retain, nonatomic, setter=_setAssets:) NSArray *_assets; // @synthesize _assets=__assets;
- (id)_usedElsewhereWarningTextForAssets:(id)arg1 additionalPhotoStreamAssets:(id)arg2 actualDeletionCount:(long long)arg3;
- (id)_cloudSharedWarningTextForAssets:(id)arg1;
- (void)_getDeletionWarningTitle:(id *)arg1 message:(id *)arg2 buttonTitle:(id *)arg3;
- (void)dealloc;

@end

@interface PLWeakRef : NSObject
{
    id _object;
}

+ (id)weakRefWithObject:(id)arg1;
@property(readonly, nonatomic) __weak id object;
- (void)dealloc;
- (id)initWithObject:(id)arg1;

@end

@interface PSIAsset : NSObject <NSCopying>
{
    NSString *_uuid;
    NSArray *_contentStrings;
    struct __CFArray *_categories;
    struct __CFArray *_owningCategories;
}

@property(readonly, nonatomic) struct __CFArray *owningCategories; // @synthesize owningCategories=_owningCategories;
@property(readonly, nonatomic) struct __CFArray *categories; // @synthesize categories=_categories;
@property(readonly, nonatomic) NSArray *contentStrings; // @synthesize contentStrings=_contentStrings;
@property(copy, nonatomic, setter=setUUID:) NSString *uuid; // @synthesize uuid=_uuid;
- (void)clear;
- (void)reverse;
- (void)addContentString:(id)arg1 category:(short)arg2 owningCategory:(short)arg3;
- (id)description;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;
- (id)_initForCopy:(_Bool)arg1;

@end

@interface PSIDatabase : NSObject
{
    struct sqlite3 *_db;
    NSDictionary *_preparedStatements;
    struct __CFDictionary *_groupObjectsById;
    NSObject<OS_dispatch_queue> *_serialQueue;
    NSObject<OS_dispatch_queue> *_searchQueue;
    PSITokenizer *_tokenizer;
    long long _options;
    int _pendingUpdatesCount;
    int _queryCounter;
    NSString *_path;
}

+ (struct sqlite3 *)_openDatabaseAtPath:(id)arg1 options:(long long)arg2;
+ (void)_dropDatabase:(struct sqlite3 *)arg1 withCompletion:(CDUnknownBlockType)arg2;
+ (void)dropDatabaseAtPath:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic) long long options; // @synthesize options=_options;
@property(readonly, nonatomic) NSString *path; // @synthesize path=_path;
- (struct sqlite3_stmt *)_inqPreparedContainsStatementWithPrefix:(const char *)arg1 matchingIds:(const void **)arg2 count:(long long)arg3;
- (void)_inqPerformBatch:(CDUnknownBlockType)arg1;
- (void)_inqPrepareAndExecuteStatement:(const char *)arg1;
- (void)_inqExecutePreparedStatement:(struct sqlite3_stmt *)arg1 withStatementBlock:(CDUnknownBlockType)arg2;
- (void)_inqExecutePreparedStatement:(struct sqlite3_stmt *)arg1 allowError:(int)arg2 withStatementBlock:(CDUnknownBlockType)arg3;
- (struct sqlite3_stmt *)_inqPrepareStatement:(const char *)arg1;
- (struct __CFSet *)_inqNewGroupIdsForAssetId:(unsigned long long)arg1;
- (struct __CFArray *)_inqNewAssetIdsForGroupId:(unsigned long long)arg1;
- (void *)_inqNewGroupsFromDeleteOperation:(_Bool)arg1 matchingGroupIds:(const void **)arg2 count:(long long)arg3;
- (void)_inqUpdateGATableWithGroupId:(unsigned long long)arg1 assetId:(unsigned long long)arg2;
- (void)_inqUpdatePrefixTreeWithGroupId:(unsigned long long)arg1 tokens:(id)arg2;
- (unsigned long long)_inqGroupIdForCategory:(short)arg1 owningGroupId:(unsigned long long)arg2 contentString:(id)arg3 insertIfNeeded:(_Bool)arg4 outCopyTokens:(id *)arg5;
- (unsigned long long)_inqAssetIdForUUID:(id)arg1 insertIfNeeded:(_Bool)arg2;
- (void)_inqRemoveUUID:(id)arg1 isInBatch:(_Bool)arg2;
- (unsigned long long)_inqAddUUID:(id)arg1 string:(id)arg2 category:(short)arg3 owningGroupId:(unsigned long long)arg4 isInBatch:(_Bool)arg5;
- (void)_inqRecycleGroups;
- (id)_inqDequeueGroupObjectWithId:(unsigned long long)arg1 isCachedGroup:(_Bool *)arg2;
- (id)_inqNewGroupArraysFromGroupIdSets:(id)arg1 forQuery:(id)arg2;
- (struct __CFSet *)_inqNewGroupIdsMatchingToken:(id)arg1;
- (id)_inqNewTokens:(id)arg1 forIndexing:(_Bool)arg2 outCopyRanges:(id *)arg3;
- (void)_query:(id)arg1 recursiveAddToGroupResults:(id)arg2 aggregate:(id)arg3 atIndex:(unsigned long long)arg4 outOf:(unsigned long long)arg5 inGroupArrays:(id)arg6;
- (void)query:(id)arg1 searchString:(id)arg2 resultsHandler:(CDUnknownBlockType)arg3;
- (id)_inqNewContentStringForGroupId:(unsigned long long)arg1;
- (struct __CFArray *)_inqNewAssetUUIDsForAssetIds:(const void **)arg1 count:(long long)arg2;
- (void)group:(id)arg1 fetchOwningContentString:(_Bool)arg2 assetUUIDs:(struct _NSRange)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (id)newQueryWithSearchText:(id)arg1;
- (void)removeAssetWithUUID:(id)arg1;
- (void)addAsset:(id)arg1;
@property(readonly) int pendingUpdatesCount;
- (void)dropDatabaseWithCompletion:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (id)initWithPath:(id)arg1 options:(long long)arg2;

@end

@interface PSIReusableObject : NSObject
{
    _Bool _isPreparedForReuse;
    _Bool _isPreparingFromStatement;
    _Bool _isPreparedFromStatement;
}

@property(readonly, nonatomic) _Bool isPreparedFromStatement; // @synthesize isPreparedFromStatement=_isPreparedFromStatement;
- (void)didPrepareFromStatement:(struct sqlite3_stmt *)arg1;
- (void)prepareFromStatement:(struct sqlite3_stmt *)arg1;
- (void)prepareForReuse;
- (id)init;

@end

@interface PSIGroup : PSIReusableObject
{
    NSMutableString *_contentString;
    unsigned long long _compressedRanges[2];
    struct _NSRange _tokenRanges[8];
    unsigned long long _tokenRangesCount;
    short _category;
    unsigned long long _groupId;
    unsigned long long _owningGroupId;
    struct __CFArray *_assetIds;
}

+ (void)_getTokenRanges:(struct _NSRange [8])arg1 fromCompressedRanges:(unsigned long long [2])arg2;
+ (void)getCompressedRanges:(unsigned long long [2])arg1 fromTokenRanges:(id)arg2;
+ (id)newTokenRangesFromCompressedRanges:(unsigned long long [2])arg1;
@property(retain, nonatomic) struct __CFArray *assetIds; // @synthesize assetIds=_assetIds;
@property(readonly, retain, nonatomic) NSString *contentString; // @synthesize contentString=_contentString;
@property(nonatomic) short category; // @synthesize category=_category;
@property(nonatomic) unsigned long long owningGroupId; // @synthesize owningGroupId=_owningGroupId;
@property(nonatomic) unsigned long long groupId; // @synthesize groupId=_groupId;
- (void)prepareFromStatement:(struct sqlite3_stmt *)arg1;
- (void)prepareForReuse;
- (struct _NSRange)tokenRangeAtIndex:(unsigned long long)arg1;
- (unsigned long long)tokenRangesCount;
- (long long)compareToGroup:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)description;
- (void)dealloc;
- (id)init;

@end

@interface PSIGroupAggregate : NSObject
{
    NSArray *_searchTokens;
    NSMutableArray *_rangesMatchingTokens;
    NSMutableArray *_groups;
    NSMutableArray *_assetIdArrays;
    NSMutableArray *_aggregatedGroupIds;
}

- (_Bool)_prefer:(id)arg1 over:(id)arg2;
- (void)postProcessGroupResults:(id)arg1;
- (id)newGroup;
- (struct __CFArray *)_newSortedGroupIds;
- (_Bool)_verifySortedGroupIdsUnique;
- (void)pop;
- (_Bool)pushGroup:(id)arg1;
- (struct _NSRange)_rangeOfString:(id)arg1 inGroup:(id)arg2 excludingRanges:(id)arg3;
- (void)dealloc;
- (id)initWithSearchTokens:(id)arg1;

@end

@interface PSIGroupResult : NSObject
{
    PSIDatabase *_idx;
    PSIDatabase *_heldIdx;
    NSObject<OS_dispatch_queue> *_queue;
    NSString *_owningContentString;
    NSMutableArray *_assetUUIDs;
    _Bool _didFetchOwningContentString;
    float _score;
    NSArray *_contentStrings;
    NSArray *_matchRanges;
    struct __CFArray *_categories;
    struct __CFArray *_owningGroupIds;
    struct __CFArray *_assetIds;
}

@property(nonatomic) __weak PSIDatabase *idx; // @synthesize idx=_idx;
@property(retain, nonatomic) struct __CFArray *assetIds; // @synthesize assetIds=_assetIds;
@property(retain, nonatomic) struct __CFArray *owningGroupIds; // @synthesize owningGroupIds=_owningGroupIds;
@property(nonatomic) float score; // @synthesize score=_score;
@property(retain, nonatomic) struct __CFArray *categories; // @synthesize categories=_categories;
@property(retain, nonatomic) NSArray *matchRanges; // @synthesize matchRanges=_matchRanges;
@property(retain, nonatomic) NSArray *contentStrings; // @synthesize contentStrings=_contentStrings;
- (void)fetchNextAssetUUIDs:(unsigned long long)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)_prepareForFetchWithCount:(unsigned long long)arg1 outRange:(struct _NSRange *)arg2 outFetchOwningContentString:(_Bool *)arg3;
@property(readonly) NSArray *assetUUIDs;
@property(readonly) NSString *owningContentString;
@property(readonly, nonatomic) unsigned long long matchCount;
- (id)unitTestDescription;
- (id)description;
- (void)dealloc;
- (id)init;

@end

@interface PSIQuery : NSObject
{
    PSIDatabase *_idx;
    NSObject<OS_dispatch_queue> *_syncQueue;
    _Bool _didStart;
    _Bool _isCanceled;
    int _queryId;
    NSString *_searchText;
}

@property(readonly, nonatomic) int queryId; // @synthesize queryId=_queryId;
@property(readonly, copy, nonatomic) NSString *searchText; // @synthesize searchText=_searchText;
@property(readonly, getter=isCanceled) _Bool canceled;
- (void)cancel;
- (void)runWithResultsHandler:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (id)initWithQueryId:(int)arg1 index:(id)arg2 searchText:(id)arg3;

@end

@interface PSITokenizer : NSObject
{
    NSCharacterSet *_excludedSingleCharacterSet;
}

- (id)newTokensFromString:(id)arg1 withOptions:(long long)arg2 outCopyRanges:(id *)arg3;
- (void)enumerateTokensInString:(id)arg1 withOptions:(long long)arg2 block:(CDUnknownBlockType)arg3;
- (void)dealloc;
- (id)init;

@end

@interface UIImage (ASCIIDescription)
+ (struct CGAffineTransform)transformForImageOrientation:(long long)arg1 andSize:(struct CGSize)arg2;
+ (_Bool)isSizeSwappedForImageOrientation:(long long)arg1;
- (id)ASCIIDescription;
- (id)ASCIIDescriptionWithWidth:(long long)arg1 height:(long long)arg2;
@end

@interface UIImage (PLJPEGDataImage)
- (id)pl_imageJPEGData;
@end

@interface UIImage (PLPhotoLibraryAdditions)
- (void *)PL_imageContents;
- (id)newImageRotatedByDegrees:(float)arg1;
- (id)newImageWithOrientation:(long long)arg1;
@end

@interface UIPasteboard (PLPasteboardAdditions)
- (_Bool)pl_containsAssets;
- (id)pl_assetsInPhotoLibrary:(id)arg1;
- (void)pl_setAssets:(id)arg1;
- (void)pl_setAsset:(id)arg1;
@end

@interface _PLClientTransaction : PLClientServerTransaction
{
    int _fileDescriptor;
    id _processAssertion;
    NSString *_path;
    NSObject<OS_dispatch_semaphore> *_fdResourceSemaphore;
}

+ (id)_fdResourceSemaphore;
+ (id)_fdIsolationQueue;
@property(nonatomic) NSObject<OS_dispatch_semaphore> *fdResourceSemaphore; // @synthesize fdResourceSemaphore=_fdResourceSemaphore;
@property(retain, nonatomic) NSString *path; // @synthesize path=_path;
@property(retain, nonatomic) id processAssertion; // @synthesize processAssertion=_processAssertion;
@property(nonatomic) int fileDescriptor; // @synthesize fileDescriptor=_fileDescriptor;
- (id)description;
- (void)abortTransaction;
- (void)completeTransaction;
- (void)dealloc;
- (id)init;

@end

@interface _PLDataPreheatItem : PLPreheatItem
{
    unsigned long long _thumbIndex;
    PLImageTable *_imageTable;
}

- (void)startPreheatRequestWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (id)initWithThumbIndex:(unsigned long long)arg1 imageTable:(id)arg2 format:(int)arg3 optimalSourcePixelSize:(struct CGSize)arg4;

@end

@interface _PLKnownAdjustment : NSObject
{
    NSString *_identifier;
    NSIndexSet *_supportedVersions;
    long long _supportLevel;
    CDUnknownBlockType _settingsExtractionBlock;
}

@property(copy, nonatomic) CDUnknownBlockType settingsExtractionBlock; // @synthesize settingsExtractionBlock=_settingsExtractionBlock;
@property(nonatomic) long long supportLevel; // @synthesize supportLevel=_supportLevel;
@property(copy, nonatomic) NSIndexSet *supportedVersions; // @synthesize supportedVersions=_supportedVersions;
@property(copy, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
- (void)dealloc;
- (id)description;

@end

@interface _PLLazyPreheatData : NSData
{
    NSString *_path;
    NSData *_data;
}

+ (id)dataWithContentsOfFile:(id)arg1;
- (void)dealloc;
- (const void *)bytes;
- (unsigned long long)length;
- (void)_loadData;
- (id)initWithContentsOfFile:(id)arg1;

@end

@interface _PLPhotoLibraryFileReservation : NSObject
{
    int _fileDescriptor;
}

@property(nonatomic) int fileDescriptor; // @synthesize fileDescriptor=_fileDescriptor;
- (void)dealloc;
- (id)initWithFileDescriptor:(int)arg1;

@end

@interface _PLPlaceholderThumbnailCachedData : NSObject
{
    NSData *_imageData;
    int _width;
    int _height;
    int _bytesPerRow;
    int _dataWidth;
    int _dataHeight;
    int _imageDataOffset;
}

- (void)dealloc;
- (id)imageDataWithWidth:(int *)arg1 height:(int *)arg2 bytesPerRow:(int *)arg3 dataWidth:(int *)arg4 dataHeight:(int *)arg5 imageDataOffset:(int *)arg6;
- (id)initWithImageData:(id)arg1 width:(int)arg2 height:(int)arg3 bytesPerRow:(int)arg4 dataWidth:(int)arg5 dataHeight:(int)arg6 imageDataOffset:(int)arg7;

@end

@interface _PLServerTransaction : _PLClientTransaction
{
}

- (void)completeTransaction;
- (void)abortTransaction;
- (void)dealloc;

@end

