//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/CloudServices.framework/CloudServices
// UUID: 6F2D4D1C-148B-3FFD-B647-BC41217E81C9
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 107.0.0.0.0
//            Minimum iOS version: 8.0.0
//                    SDK version: 8.0.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol LakituProtocol <NSObject>
- (void)verifyCertificateWithInfo:(NSDictionary *)arg1 reply:(void (^)(NSDictionary *, NSError *))arg2;
- (void)listSMSTargetsWithInfo:(NSDictionary *)arg1 reply:(void (^)(NSDictionary *, NSError *))arg2;
- (void)changeSMSTargetWithInfo:(NSDictionary *)arg1 reply:(void (^)(NSDictionary *, NSError *))arg2;
- (void)startSMSChallengeWithInfo:(NSDictionary *)arg1 reply:(void (^)(NSDictionary *, NSError *))arg2;
- (void)deleteRecordWithInfo:(NSDictionary *)arg1 reply:(void (^)(NSDictionary *, NSError *))arg2;
- (void)updateRecordWithInfo:(NSDictionary *)arg1 reply:(void (^)(NSDictionary *, NSError *))arg2;
- (void)recoverRecordWithInfo:(NSDictionary *)arg1 reply:(void (^)(NSDictionary *, NSError *))arg2;
- (void)storeRecordWithInfo:(NSDictionary *)arg1 reply:(void (^)(NSDictionary *, NSError *))arg2;
- (void)getAccountInfoWithInfo:(NSDictionary *)arg1 reply:(void (^)(NSDictionary *, NSError *))arg2;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol SecureBackupProtocol <NSObject>
- (void)uncachePassphraseWithInfoAsync:(NSDictionary *)arg1;
- (void)cachePassphraseWithInfoAsync:(NSDictionary *)arg1;
- (void)backupWithInfo:(NSDictionary *)arg1 reply:(void (^)(NSError *))arg2;
- (void)startSMSChallengeWithInfo:(NSDictionary *)arg1 reply:(void (^)(NSDictionary *, NSError *))arg2;
- (void)changeSMSTargetWithInfo:(NSDictionary *)arg1 reply:(void (^)(NSError *))arg2;
- (void)uncachePassphraseWithInfo:(NSDictionary *)arg1 reply:(void (^)(NSError *))arg2;
- (void)cachePassphraseWithInfo:(NSDictionary *)arg1 reply:(void (^)(NSError *))arg2;
- (void)disableWithInfo:(NSDictionary *)arg1 reply:(void (^)(NSError *))arg2;
- (void)recoverWithInfo:(NSDictionary *)arg1 reply:(void (^)(NSDictionary *, NSError *))arg2;
- (void)enableWithInfo:(NSDictionary *)arg1 reply:(void (^)(NSError *))arg2;
- (void)getAccountInfoWithInfo:(NSDictionary *)arg1 reply:(void (^)(NSDictionary *, NSError *))arg2;
@end

@interface CloudServices : NSObject
{
    NSObject<OS_dispatch_queue> *_replyQueue;
    NSObject<OS_dispatch_queue> *replyQueue;
}

+ (id)_CreateLakituConnection;
@property(nonatomic) NSObject<OS_dispatch_queue> *replyQueue; // @synthesize replyQueue;
- (void).cxx_destruct;
- (id)verifyCertificateWithInfo:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (id)listSMSTargetsWithInfo:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (id)changeSMSTargetWithInfo:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (id)startSMSChallengeWithInfo:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (id)deleteRecordWithInfo:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (id)updateRecordWithInfo:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (id)recoverRecordWithInfo:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (id)storeRecordWithInfo:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (id)getAccountInfoWithInfo:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;

@end

@interface SecureBackup : NSObject
{
    NSObject<OS_dispatch_queue> *_replyQueue;
    NSObject<OS_dispatch_queue> *_syncQueue;
    NSObject<OS_dispatch_queue> *replyQueue;
    NSObject<OS_dispatch_queue> *syncQueue;
}

@property(nonatomic) NSObject<OS_dispatch_queue> *syncQueue; // @synthesize syncQueue;
@property(nonatomic) NSObject<OS_dispatch_queue> *replyQueue; // @synthesize replyQueue;
- (void).cxx_destruct;
- (void)backupWithInfo:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (id)backupWithInfo:(id)arg1;
- (void)changeSMSTargetWithInfo:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (id)changeSMSTargetWithInfo:(id)arg1;
- (void)startSMSChallengeWithInfo:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)startSMSChallengeWithInfo:(id)arg1 completionBlockWithResults:(CDUnknownBlockType)arg2;
- (id)startSMSChallengeWithInfo:(id)arg1 results:(id *)arg2;
- (void)uncachePassphraseWithInfo:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (id)uncachePassphraseWithInfo:(id)arg1;
- (void)cachePassphraseWithInfo:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (id)cachePassphraseWithInfo:(id)arg1;
- (void)disableWithInfo:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (id)disableWithInfo:(id)arg1;
- (void)recoverWithInfo:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)recoverWithInfo:(id)arg1 completionBlockWithResults:(CDUnknownBlockType)arg2;
- (id)recoverWithInfo:(id)arg1 results:(id *)arg2;
- (void)enableWithInfo:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (id)enableWithInfo:(id)arg1;
- (void)getAccountInfoWithInfo:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)getAccountInfoWithInfo:(id)arg1 completionBlockWithResults:(CDUnknownBlockType)arg2;
- (id)getAccountInfoWithInfo:(id)arg1 results:(id *)arg2;
- (void)_backupWithInfo:(id)arg1 completionQueue:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)_changeSMSTargetWithInfo:(id)arg1 completionQueue:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)_startSMSChallengeWithInfo:(id)arg1 completionQueue:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)_uncachePassphraseWithInfoAsync:(id)arg1 completionQueue:(id)arg2;
- (void)_uncachePassphraseWithInfo:(id)arg1 completionQueue:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)_cachePassphraseWithInfo:(id)arg1 completionQueue:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)_cachePassphraseWithInfoAsync:(id)arg1 completionQueue:(id)arg2;
- (void)_disableWithInfo:(id)arg1 completionQueue:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)_recoverWithInfo:(id)arg1 completionQueue:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)_enableWithInfo:(id)arg1 completionQueue:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)_getAccountInfoWithInfo:(id)arg1 completionQueue:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (id)_CreateSecureBackupConnection:(id)arg1;

@end

