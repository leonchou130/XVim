//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/BackBoardServices.framework/BackBoardServices
// UUID: 3C029807-5818-3C08-A14B-AA5A50DFFA8A
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 2933.5.5.0.0
//            Minimum iOS version: 8.0.0
//                    SDK version: 8.0.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol BKSAlternateSystemAppClientProtocol <NSObject>
- (void)alternateSystemAppWithBundleIDDidTerminate:(NSString *)arg1;
- (void)alternateSystemAppWithBundleIDDidOpen:(NSString *)arg1;
- (void)alternateSystemAppWithBundleID:(NSString *)arg1 didExitWithReason:(unsigned long long)arg2;
- (void)alternateSystemAppWithBundleID:(NSString *)arg1 failedToOpenWithResult:(NSError *)arg2;
- (void)didUnblockSystemAppForAlternateSystemApp;
- (void)didBlockSystemAppForAlternateSystemApp;
@end

@protocol BKSAlternateSystemAppServerProtocol <NSObject>
- (void)unblockSystemAppForAlternateSystemApp;
- (void)terminateAlternateSystemAppWithBundleID:(NSString *)arg1;
- (void)openAlternateSystemAppWithBundleID:(NSString *)arg1;
- (void)blockSystemAppForAlternateSystemApp;
@end

@protocol BKSSystemApplicationClientDelegate <NSObject>
- (_Bool)clientIsAliveForWatchdog:(BKSSystemApplicationClient *)arg1;
@end

@protocol BKSTouchDeliveryPolicyServerInterface <NSObject>
- (void)ipc_addPolicy:(BKSTouchDeliveryPolicy *)arg1;
@end

@protocol BSXPCCoding <NSObject>
- (void)encodeWithXPCDictionary:(NSObject<OS_xpc_object> *)arg1;
- (id)initWithXPCDictionary:(NSObject<OS_xpc_object> *)arg1;
@end

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSSecureCoding <NSCoding>
+ (_Bool)supportsSecureCoding;
@end

@interface BKSAccelerometer : NSObject
{
    id <BKSAccelerometerDelegate> _delegate;
    struct __CFRunLoopSource *_accelerometerEventsSource;
    struct __CFRunLoop *_accelerometerEventsRunLoop;
    double _interval;
    NSLock *_lock;
    int _orientationCheckToken;
    int _orientationNotificationsToken;
    NSThread *_orientationEventsThread;
    unsigned int _orientationPort;
    _Bool _passiveOrientationEvents;
    _Bool _orientationEventsEnabled;
    float _xThreshold;
    float _yThreshold;
    float _zThreshold;
    double _updateInterval;
}

@property(nonatomic) _Bool orientationEventsEnabled; // @synthesize orientationEventsEnabled=_orientationEventsEnabled;
@property(nonatomic) _Bool passiveOrientationEvents; // @synthesize passiveOrientationEvents=_passiveOrientationEvents;
@property(nonatomic) float zThreshold; // @synthesize zThreshold=_zThreshold;
@property(nonatomic) float yThreshold; // @synthesize yThreshold=_yThreshold;
@property(nonatomic) float xThreshold; // @synthesize xThreshold=_xThreshold;
@property(nonatomic) double updateInterval; // @synthesize updateInterval=_updateInterval;
- (void)_orientationDidChange;
- (id)_orientationEventsThread;
- (int)currentDeviceOrientation;
- (void)_updateOrientationServer;
- (void)_serverWasRestarted;
- (void)_checkOut;
- (void)_checkIn;
@property(nonatomic) _Bool accelerometerEventsEnabled;
- (void)dealloc;
- (id)init;
@property(nonatomic) id <BKSAccelerometerDelegate> delegate;

@end

@interface BKSAlternateSystemApp : NSObject <BKSAlternateSystemAppClientProtocol>
{
    _Bool _stateChangeWaiter;
    id <BKSAlternateSystemAppDelegate> _delegate;
    NSString *_bundleId;
    NSXPCConnection *_connection;
    NSObject<OS_dispatch_queue> *_queue;
    long long _state;
    NSObject<OS_dispatch_semaphore> *_stateChangeSemaphore;
}

@property(retain, nonatomic) NSObject<OS_dispatch_semaphore> *stateChangeSemaphore; // @synthesize stateChangeSemaphore=_stateChangeSemaphore;
@property(nonatomic) _Bool stateChangeWaiter; // @synthesize stateChangeWaiter=_stateChangeWaiter;
@property(nonatomic) long long state; // @synthesize state=_state;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(retain, nonatomic) NSXPCConnection *connection; // @synthesize connection=_connection;
@property(copy, nonatomic) NSString *bundleId; // @synthesize bundleId=_bundleId;
@property(nonatomic) id <BKSAlternateSystemAppDelegate> delegate; // @synthesize delegate=_delegate;
- (void)alternateSystemAppWithBundleIDDidTerminate:(id)arg1;
- (void)alternateSystemAppWithBundleIDDidOpen:(id)arg1;
- (void)alternateSystemAppWithBundleID:(id)arg1 didExitWithReason:(unsigned long long)arg2;
- (void)alternateSystemAppWithBundleID:(id)arg1 failedToOpenWithResult:(id)arg2;
- (void)didUnblockSystemAppForAlternateSystemApp;
- (void)didBlockSystemAppForAlternateSystemApp;
- (void)_handleInvalidatedConnection;
- (void)_handleInterruptedConnection;
- (void)_waitForState:(long long)arg1;
- (void)_queue_changeState:(long long)arg1;
- (void)_queue_ensureConnection;
- (void)terminate;
- (void)activate;
- (void)dealloc;
- (void)_invalidate;
- (id)initWithBundleId:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface BKSApplicationDataStore : NSObject
{
    NSString *_bundleId;
    BKSApplicationDataStoreRepositoryClient *_client;
    _Bool _clientNeedsCheckin;
}

+ (void)_setClassClient:(id)arg1;
+ (void)setPrefetchedKeys:(id)arg1;
+ (void)synchronize;
+ (id)applicationsWithAvailableStores;
+ (void)_doWithClassClient:(CDUnknownBlockType)arg1;
+ (id)storeForApplication:(id)arg1;
- (void)setArchivedXPCCodableObject:(id)arg1 forKey:(id)arg2;
- (void)archivedXPCCodableObjectForKey:(id)arg1 ofType:(Class)arg2 withResult:(CDUnknownBlockType)arg3;
- (id)archivedXPCCodableObjectForKey:(id)arg1 ofType:(Class)arg2;
- (id)_makeSafe:(id)arg1 forType:(Class)arg2;
- (void)removeAllObjects;
- (void)removeObjectForKey:(id)arg1;
- (void)setArchivedObject:(id)arg1 forKey:(id)arg2;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (void)safeArchivedObjectForKey:(id)arg1 ofType:(Class)arg2 withResult:(CDUnknownBlockType)arg3;
- (id)safeArchivedObjectForKey:(id)arg1 ofType:(Class)arg2;
- (void)archivedObjectForKey:(id)arg1 withResult:(CDUnknownBlockType)arg2;
- (id)archivedObjectForKey:(id)arg1;
- (void)safeObjectForKey:(id)arg1 ofType:(Class)arg2 withResult:(CDUnknownBlockType)arg3;
- (id)safeObjectForKey:(id)arg1 ofType:(Class)arg2;
- (void)objectForKey:(id)arg1 withResult:(CDUnknownBlockType)arg2;
- (id)objectForKey:(id)arg1;
- (void)dealloc;
- (id)initWithBundleIdentifier:(id)arg1;
- (id)_initWithBundleId:(id)arg1 client:(id)arg2;
- (id)init;

@end

@interface BKSApplicationDataStoreClientFactory : NSObject
{
    unsigned long long _count;
    NSObject<OS_dispatch_queue> *_queue;
    BKSApplicationDataStoreRepositoryClient *_sharedClient;
}

+ (id)sharedInstance;
- (void)checkin;
- (id)checkout;
- (void)dealloc;
- (id)init;

@end

@interface BKSApplicationDataStoreRepositoryClient : BSBaseXPCClient
{
    NSMutableDictionary *_prefetchedKeyCounts;
    NSMutableDictionary *_prefetchedKeyValues;
    NSMutableDictionary *_pendingChangesToPrefetchedKeys;
    NSObject<OS_dispatch_queue> *_prefetchedDataQueue;
}

- (void)fireCompletion:(CDUnknownBlockType)arg1 arrayResults:(id)arg2 error:(id)arg3;
- (void)fireCompletion:(CDUnknownBlockType)arg1 result:(id)arg2 error:(id)arg3;
- (void)fireCompletion:(CDUnknownBlockType)arg1 error:(id)arg2;
- (id)clientCallbackQueue;
- (void)_sendMessageType:(int)arg1 withMessage:(CDUnknownBlockType)arg2 withReplyHandler:(CDUnknownBlockType)arg3 waitForReply:(_Bool)arg4;
- (_Bool)_prefetchedObjectIfAvailableForKey:(id)arg1 application:(id)arg2 outObject:(id *)arg3;
- (void)_setPrefetchedObjectIfNecessary:(id)arg1 forKey:(id)arg2 application:(id)arg3;
- (void)_handleStoreInvalidated:(id)arg1;
- (id)_allPrefetchedChangesInFlightForApplication:(id)arg1;
- (_Bool)_isChangeInFlightForPrefetchedKey:(id)arg1 application:(id)arg2;
- (void)_setChangeInFlight:(_Bool)arg1 forPrefetchedKey:(id)arg2 application:(id)arg3;
- (void)_handleValueChanged:(id)arg1;
- (void)queue_handleMessage:(id)arg1;
- (void)queue_connectionWasCreated;
- (void)removeAllObjectsForApplication:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)removeObjectForKey:(id)arg1 forApplication:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;
- (void)setObject:(id)arg1 forKey:(id)arg2 forApplication:(id)arg3 useBSXPCCoding:(_Bool)arg4 withCompletion:(CDUnknownBlockType)arg5;
- (void)objectForKey:(id)arg1 forApplication:(id)arg2 withResult:(CDUnknownBlockType)arg3 checkPrefetch:(_Bool)arg4 useBSXPCCoding:(_Bool)arg5;
- (void)objectForKey:(id)arg1 forApplication:(id)arg2 useBSXPCCoding:(_Bool)arg3 withResult:(CDUnknownBlockType)arg4;
- (void)availableDataStores:(CDUnknownBlockType)arg1;
- (void)synchronizeWithCompletion:(CDUnknownBlockType)arg1;
- (void)_sendPrefetchedKeys:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)removePrefetchedKeys:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)addPrefetchedKeys:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)dealloc;
- (void)invalidate;
- (id)initWithEndpoint:(id)arg1;
- (id)init;

@end

@interface BKSEventFocusDeferral : NSObject <NSSecureCoding>
{
    BKSEventFocusDeferralProperties *_properties;
    BKSEventFocusDeferralProperties *_deferredProperties;
}

+ (_Bool)supportsSecureCoding;
@property(readonly, nonatomic) BKSEventFocusDeferralProperties *deferredProperties; // @synthesize deferredProperties=_deferredProperties;
@property(readonly, nonatomic) BKSEventFocusDeferralProperties *properties; // @synthesize properties=_properties;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)deferredPropertiesForProperties:(id)arg1;
- (_Bool)defersProperties:(id)arg1;
- (id)description;
- (void)dealloc;
- (id)initWithProperties:(id)arg1 deferredProperties:(id)arg2;

@end

@interface BKSEventFocusDeferralProperties : NSObject <NSSecureCoding>
{
    int _pid;
    unsigned int _contextID;
    NSString *_clientID;
    NSString *_displayUUID;
}

+ (id)propertiesWithClientID:(id)arg1 displayUUID:(id)arg2 contextID:(unsigned int)arg3;
+ (id)propertiesWithMainDisplayAndClientID:(id)arg1 contextID:(unsigned int)arg2;
+ (_Bool)supportsSecureCoding;
+ (id)propertiesWithClientID:(id)arg1 pid:(int)arg2 displayUUID:(id)arg3 contextID:(unsigned int)arg4;
+ (id)propertiesWithMainDisplayAndClientID:(id)arg1 pid:(int)arg2 contextID:(unsigned int)arg3;
@property(readonly, nonatomic) unsigned int contextID; // @synthesize contextID=_contextID;
@property(readonly, nonatomic) NSString *displayUUID; // @synthesize displayUUID=_displayUUID;
@property(readonly, nonatomic) int pid; // @synthesize pid=_pid;
@property(readonly, nonatomic) NSString *clientID; // @synthesize clientID=_clientID;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)propertiesOneLevelMoreGeneric;
- (_Bool)isEqualNotIncludingClientIDAndPid:(id)arg1;
- (id)description;
- (void)setPid:(int)arg1;
- (void)dealloc;
- (id)initWithClientID:(id)arg1 pid:(int)arg2 displayUUID:(id)arg3 contextID:(unsigned int)arg4;

@end

@interface BKSEventFocusManager : NSObject
{
    _Bool _needsFlush;
    _Bool _systemAppControlsFocusOnMainDisplay;
    NSMutableSet *_currentState;
    NSMutableSet *_pendingState;
}

+ (id)sharedInstance;
@property(nonatomic) _Bool systemAppControlsFocusOnMainDisplay; // @synthesize systemAppControlsFocusOnMainDisplay=_systemAppControlsFocusOnMainDisplay;
@property(nonatomic) _Bool needsFlush; // @synthesize needsFlush=_needsFlush;
@property(readonly, nonatomic) NSMutableSet *pendingState; // @synthesize pendingState=_pendingState;
@property(readonly, nonatomic) NSMutableSet *currentState; // @synthesize currentState=_currentState;
- (void)flush;
- (void)_pruneSet:(id)arg1 ofDeferralsPassingTest:(CDUnknownBlockType)arg2;
- (void)setForegroundApplicationOnMainDisplay:(id)arg1 pid:(int)arg2;
- (id)description;
- (void)deferEventsForClientWithProperties:(id)arg1 toClientWithProperties:(id)arg2;
- (void)dealloc;
- (id)init;

@end

@interface BKSHIDEventDescriptor : NSObject <NSSecureCoding>
{
    unsigned int _hidEventType;
}

+ (id)reusableKeyboardDescriptorWithPage:(unsigned int)arg1 usage:(unsigned int)arg2;
+ (id)reusableVendorDefinedDescriptorWithPage:(unsigned int)arg1 usage:(unsigned int)arg2;
+ (id)reusableDescriptorWithEventType:(unsigned int)arg1;
+ (_Bool)supportsSecureCoding;
+ (id)descriptorWithEventType:(unsigned int)arg1;
@property(readonly) unsigned int hidEventType; // @synthesize hidEventType=_hidEventType;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (_Bool)describes:(id)arg1;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)initWithEventType:(unsigned int)arg1;

@end

@interface BKSHIDEventKeyboardDescriptor : BKSHIDEventDescriptor
{
    unsigned int _page;
    unsigned int _usage;
}

+ (_Bool)supportsSecureCoding;
+ (id)descriptorWithPage:(unsigned int)arg1 usage:(unsigned int)arg2;
@property(readonly) unsigned int usage; // @synthesize usage=_usage;
@property(readonly) unsigned int page; // @synthesize page=_page;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (_Bool)describes:(id)arg1;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)_initWithPage:(unsigned int)arg1 usage:(unsigned int)arg2 eventType:(unsigned int)arg3;

@end

@interface BKSHIDEventRouter : NSObject <NSSecureCoding>
{
    long long _destination;
    NSSet *_hidEventDescriptors;
}

+ (_Bool)supportsSecureCoding;
+ (id)defaultFocusedAppEventRouter;
+ (id)defaultSystemAppEventRouter;
+ (id)defaultEventRouters;
+ (id)routerWithDestination:(long long)arg1;
@property(readonly) NSSet *hidEventDescriptors; // @synthesize hidEventDescriptors=_hidEventDescriptors;
@property(readonly) long long destination; // @synthesize destination=_destination;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)stringForDestination:(long long)arg1;
- (id)dumpContents;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (_Bool)containsDescriptor:(id)arg1;
- (_Bool)specifiesDescriptor:(id)arg1;
- (void)removeHIDEventDescriptors:(id)arg1;
- (void)addHIDEventDescriptors:(id)arg1;
- (void)dealloc;
- (id)initWithDestination:(long long)arg1 hidEventDescriptors:(id)arg2;
- (id)initWithDestination:(long long)arg1;

@end

@interface BKSHIDEventRouterManagerBase : NSObject
{
    NSArray *_eventRouters;
}

@property(retain, nonatomic) NSArray *eventRouters; // @synthesize eventRouters=_eventRouters;
- (id)description;
- (long long)routerDestinationForDescriptor:(id)arg1;
- (id)init;

@end

@interface BKSHIDEventRouterManager : BKSHIDEventRouterManagerBase
{
    _Bool _needsFlush;
}

+ (id)sharedInstance;
@property(nonatomic) _Bool needsFlush; // @synthesize needsFlush=_needsFlush;
- (void)_routerUpdated:(id)arg1;
- (void)_flush;
- (void)_flushTrigger;
- (void)setEventRouters:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface BKSHIDEventVendorDefinedDescriptor : BKSHIDEventKeyboardDescriptor
{
}

+ (id)descriptorWithPage:(unsigned int)arg1 usage:(unsigned int)arg2;
- (id)_initWithPage:(unsigned int)arg1 usage:(unsigned int)arg2;

// Remaining properties
@property(readonly) unsigned int page;
@property(readonly) unsigned int usage;

@end

@interface BKSInsecureDrawingAction : BSAction
{
}

- (id)keyDescriptionForSetting:(unsigned long long)arg1;
@property(readonly, nonatomic) NSArray *processIds;
- (id)initWithInfo:(id)arg1 timeout:(double)arg2 forResponseOnQueue:(id)arg3 withHandler:(CDUnknownBlockType)arg4;
- (id)initWithInsecureProcessIds:(id)arg1;

@end

@interface BKSPowerMonitor : NSObject
{
}

+ (id)sharedInstance;
- (id)init;

@end

@interface BKSRestartAction : BSAction
{
}

+ (id)restartActionWithAppleLogoDesired:(_Bool)arg1;
@property(readonly, nonatomic) _Bool shouldShowAppleLogo;

@end

@interface BKSSystemApplication : NSObject <BKSSystemApplicationClientDelegate>
{
    NSObject<OS_dispatch_queue> *_queue;
    BKSSystemApplicationClient *_client;
    id <BKSSystemApplicationDelegate> _delegate;
}

@property(nonatomic) id <BKSSystemApplicationDelegate> delegate; // @synthesize delegate=_delegate;
- (_Bool)clientIsAliveForWatchdog:(id)arg1;
- (void)sendActions:(id)arg1;
- (void)restart;
- (void)start;
- (void)dealloc;
- (id)initWithQueue:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface BKSSystemApplicationClient : BSBaseXPCClient
{
    NSObject<OS_dispatch_queue> *_callOutQueue;
    _Bool _pendingCheckIn;
    _Bool _sentConnect;
    NSObject<OS_dispatch_semaphore> *_checkinSemaphore;
    id <BKSSystemApplicationClientDelegate> _delegate;
}

@property(nonatomic) id <BKSSystemApplicationClientDelegate> delegate; // @synthesize delegate=_delegate;
- (void)_sendMessageOfType:(long long)arg1 packer:(CDUnknownBlockType)arg2 replyHandler:(CDUnknownBlockType)arg3 waitForReply:(_Bool)arg4 waitDuration:(unsigned long long)arg5;
- (void)_sendMessageOfType:(long long)arg1 packer:(CDUnknownBlockType)arg2 replyHandler:(CDUnknownBlockType)arg3;
- (void)_sendMessageOfType:(long long)arg1 packer:(CDUnknownBlockType)arg2;
- (void)_queue_handleWatchdogPing:(id)arg1;
- (void)_connect;
- (void)queue_connectionWasInvalidated;
- (void)queue_connectionWasInterrupted;
- (void)queue_connectionWasResumed;
- (void)queue_handleMessage:(id)arg1;
- (void)sendActions:(id)arg1;
- (void)restart;
- (void)checkIn;
- (void)connect;
- (void)dealloc;
- (id)initWithCalloutQueue:(id)arg1;

@end

@interface BKSSystemService : NSObject
{
    FBSSystemService *_fbsSystemService;
}

- (void)cleanupClientPort:(unsigned int)arg1;
- (unsigned int)createClientPort;
- (void)openURL:(id)arg1 application:(id)arg2 options:(id)arg3 clientPort:(unsigned int)arg4 withResult:(CDUnknownBlockType)arg5;
- (void)openApplication:(id)arg1 options:(id)arg2 clientPort:(unsigned int)arg3 withResult:(CDUnknownBlockType)arg4;
- (void)terminateApplicationGroup:(int)arg1 forReason:(int)arg2 andReport:(_Bool)arg3 withDescription:(id)arg4;
- (void)terminateApplication:(id)arg1 forReason:(int)arg2 andReport:(_Bool)arg3 withDescription:(id)arg4;
- (void)openApplication:(id)arg1 options:(id)arg2 withResult:(CDUnknownBlockType)arg3;
- (void)openDataActivationURL:(id)arg1 withResult:(CDUnknownBlockType)arg2;
- (_Bool)canOpenApplication:(id)arg1 reason:(int *)arg2;
- (int)pidForApplication:(id)arg1;
- (id)systemApplicationBundleIdentifier;
- (void)dealloc;
- (id)init;

@end

@interface BKSTouchDeliveryPolicy : NSObject <NSSecureCoding>
{
}

+ (id)policyByCombiningPolicies:(id)arg1;
+ (id)policyCancelingTouchesDeliveredToContextId:(unsigned int)arg1 withInitialTouchTimestamp:(double)arg2;
+ (id)policyRequiringSharingOfTouchesDeliveredToChildContextId:(unsigned int)arg1 withHostContextId:(unsigned int)arg2;
+ (_Bool)supportsSecureCoding;
+ (id)allocWithZone:(struct _NSZone *)arg1;
- (id)policyExcludingPolicy:(id)arg1;
- (id)policyIncludingPolicy:(id)arg1;
- (id)reducePolicyToObjectWithBlock:(CDUnknownBlockType)arg1;
- (id)policyByMappingContainedPoliciesWithBlock:(CDUnknownBlockType)arg1;
@property(retain, nonatomic) NSObject<OS_xpc_object> *assertionEndpoint;
- (id)matchSharingTouchesPolicy:(CDUnknownBlockType)arg1 orCancelTouchesPolicy:(CDUnknownBlockType)arg2 orCombinedPolicy:(CDUnknownBlockType)arg3;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface BKSTouchDeliveryPolicyAssertion : NSObject
{
    NSObject<OS_xpc_object> *_listener;
}

- (id)endpoint;
- (void)dealloc;
- (id)init;

@end

@interface BKSWatchdogServerWrapper : NSObject
{
}

- (int)_BKSWatchdogGetIsAlive:(unsigned int)arg1 isAlive:(char *)arg2 timeout:(unsigned int)arg3;

@end

@interface _BKSCancelTouchesTouchDeliveryPolicy : BKSTouchDeliveryPolicy
{
    unsigned int _contextId;
    NSObject<OS_xpc_object> *_assertionEndpoint;
    double _initialTouchTimestamp;
}

+ (_Bool)supportsSecureCoding;
@property(readonly, nonatomic) double initialTouchTimestamp; // @synthesize initialTouchTimestamp=_initialTouchTimestamp;
@property(readonly, nonatomic) unsigned int contextId; // @synthesize contextId=_contextId;
- (void)setAssertionEndpoint:(id)arg1;
- (id)assertionEndpoint;
- (id)matchSharingTouchesPolicy:(CDUnknownBlockType)arg1 orCancelTouchesPolicy:(CDUnknownBlockType)arg2 orCombinedPolicy:(CDUnknownBlockType)arg3;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (id)initWithContextId:(unsigned int)arg1 initialTouchTimestamp:(double)arg2;

@end

@interface _BKSCombinedTouchDeliveryPolicy : BKSTouchDeliveryPolicy
{
    NSArray *_policies;
}

+ (_Bool)supportsSecureCoding;
@property(readonly, nonatomic) NSArray *policies; // @synthesize policies=_policies;
- (void)setAssertionEndpoint:(id)arg1;
- (id)assertionEndpoint;
- (id)matchSharingTouchesPolicy:(CDUnknownBlockType)arg1 orCancelTouchesPolicy:(CDUnknownBlockType)arg2 orCombinedPolicy:(CDUnknownBlockType)arg3;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (id)initWithPolicies:(id)arg1;

@end

@interface _BKSShareTouchesTouchDeliveryPolicy : BKSTouchDeliveryPolicy
{
    unsigned int _childContextId;
    unsigned int _hostContextId;
    NSObject<OS_xpc_object> *_assertionEndpoint;
}

+ (_Bool)supportsSecureCoding;
@property(readonly, nonatomic) unsigned int hostContextId; // @synthesize hostContextId=_hostContextId;
@property(readonly, nonatomic) unsigned int childContextId; // @synthesize childContextId=_childContextId;
- (void)setAssertionEndpoint:(id)arg1;
- (id)assertionEndpoint;
- (id)matchSharingTouchesPolicy:(CDUnknownBlockType)arg1 orCancelTouchesPolicy:(CDUnknownBlockType)arg2 orCombinedPolicy:(CDUnknownBlockType)arg3;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (id)initWithChildContextId:(unsigned int)arg1 hostContextId:(unsigned int)arg2;

@end

