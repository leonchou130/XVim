//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct ASContact {
    Class _field1;
    id _field2;
    id _field3;
    int _field4;
    int _field5;
    id _field6;
    int _field7;
    CDUnknownBlockType _field8;
    int _field9;
    id _field10;
};

struct ASEvent {
    Class _field1;
    id _field2;
    id _field3;
    int _field4;
    int _field5;
    id _field6;
    int _field7;
    CDUnknownBlockType _field8;
    int _field9;
    id _field10;
};

struct ASNote {
    Class _field1;
    id _field2;
    id _field3;
    int _field4;
    int _field5;
    id _field6;
    int _field7;
    CDUnknownBlockType _field8;
    int _field9;
    id _field10;
};

struct ASToDo {
    Class _field1;
    id _field2;
    id _field3;
    int _field4;
    int _field5;
    id _field6;
    int _field7;
    CDUnknownBlockType _field8;
    int _field9;
    id _field10;
};

#pragma mark Typedef'd Structures

typedef struct {
    long long version;
    void *info;
    CDUnknownFunctionPointerType retain;
    CDUnknownFunctionPointerType release;
    CDUnknownFunctionPointerType copyDescription;
} CDStruct_4210025a;

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/DataAccess.framework/DataAccess
// UUID: 2C86A033-A378-3766-AD12-3C080BB3E657
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 1390.0.0.0.0
//            Minimum iOS version: 8.0.0
//                    SDK version: 8.0.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol ASAccountActorMessages
- (oneway void)_accountPasswordChanged;
- (oneway void)_foldersThatExternalClientsCareAboutChanged;
- (oneway void)_folderHierarchyChanged;
- (oneway void)_folderUpdatedNotification:(NSNotification *)arg1;
- (oneway void)_daemonDiedNotification:(NSNotification *)arg1;
- (oneway void)_newASPolicyKeyNotification:(NSNotification *)arg1;
- (NSString *)unactionableICSRepresentationForMetaData:(NSData *)arg1 inFolderWithId:(NSString *)arg2 outSummary:(id *)arg3;
- (_Bool)reattemptInvitationLinkageForMetaData:(NSData *)arg1 inFolderWithId:(NSString *)arg2;
- (DAFolder *)draftsFolder;
- (DAFolder *)deletedItemsFolder;
- (DAFolder *)sentItemsFolder;
- (DAFolder *)inboxFolder;
- (void)performFolderChange:(DAFolderChange *)arg1 isUserRequested:(_Bool)arg2;
- (int)performResolveRecipientsRequest:(DAResolveRecipientsRequest *)arg1 consumer:(id <DAResolveRecipientsConsumer>)arg2;
- (int)performFetchMessageSearchResultRequests:(NSArray *)arg1 consumer:(id <DAMailboxFetchSearchResultConsumer>)arg2;
- (int)performFetchAttachmentRequest:(DAMessageFetchAttachmentRequest *)arg1 consumer:(id <DAMessageFetchAttachmentConsumer>)arg2;
- (int)performMoveRequests:(NSArray *)arg1 consumer:(id <DAMessageMoveRequestConsumer>)arg2;
- (int)performMailboxRequests:(NSArray *)arg1 mailbox:(NSString *)arg2 previousTag:(NSString *)arg3 isUserRequested:(_Bool)arg4 consumer:(id <DAMailboxRequestConsumer>)arg5;
- (int)performMailboxRequest:(DAMailboxRequest *)arg1 mailbox:(NSString *)arg2 previousTag:(NSString *)arg3 isUserRequested:(_Bool)arg4 consumer:(id <DAMailboxRequestConsumer>)arg5;
- (int)sendMessageWithRFC822Data:(NSData *)arg1 messageID:(NSString *)arg2 outgoingMessageType:(int)arg3 originalMessageFolderID:(NSString *)arg4 originalMessageItemID:(NSString *)arg5 originalMessageLongID:(NSString *)arg6 originalAccountID:(NSString *)arg7 useSmartTasksIfPossible:(_Bool)arg8 isUserRequested:(_Bool)arg9 consumer:(id <DAMessageSendConsumer>)arg10 context:(id)arg11;
- (int)sendMessageWithRFC822Data:(NSData *)arg1 messageID:(NSString *)arg2 outgoingMessageType:(int)arg3 originalMessageFolderID:(NSString *)arg4 originalMessageItemID:(NSString *)arg5 originalMessageLongID:(NSString *)arg6 originalAccountID:(NSString *)arg7 useSmartTasksIfPossible:(_Bool)arg8 consumer:(id <DAMessageSendConsumer>)arg9 context:(id)arg10;
- (_Bool)setFolderIdsThatExternalClientsCareAboutAdded:(NSSet *)arg1 deleted:(NSSet *)arg2 foldersTag:(NSString *)arg3;
- (NSSet *)folderIDsThatExternalClientsCareAboutForDataclasses:(long long)arg1 withTag:(id *)arg2;
- (NSSet *)folderIDsThatExternalClientsCareAboutWithTag:(id *)arg1;
- (oneway void)stopMonitoringAllFolders;
- (oneway void)stopMonitoringFoldersForUpdates:(NSArray *)arg1;
- (oneway void)monitorFoldersForUpdates:(NSArray *)arg1;
- (oneway void)setCustomSignature:(NSString *)arg1;
- (NSString *)customSignature;
- (oneway void)setEncryptionIdentityPersistentReference:(NSData *)arg1;
- (NSData *)encryptionIdentityPersistentReference;
- (oneway void)setSigningIdentityPersistentReference:(NSData *)arg1;
- (NSData *)signingIdentityPersistentReference;
- (oneway void)setGeneratesBulletins:(_Bool)arg1;
- (_Bool)generatesBulletins;
- (int)supportsConversations;
- (int)supportsEmailFlagging;
- (int)supportsMailboxSearch;
- (oneway void)setMailNumberOfPastDaysToSync:(int)arg1;
- (int)mailNumberOfPastDaysToSync;
- (NSArray *)mailboxes;
- (oneway void)shutdown;
- (oneway void)setAccount:(id)arg1;
- (oneway void)startup;
- (_Bool)searchQueriesRunning;
- (oneway void)cancelAllSearchQueries;
- (oneway void)cancelSearchQuery:(DASearchQuery *)arg1;
- (oneway void)performSearchQuery:(DASearchQuery *)arg1;
- (oneway void)cancelTaskWithID:(int)arg1;
@end

@protocol ICSLoggingDelegate
- (void)logICSMessage:(NSString *)arg1 atLevel:(long long)arg2;
@end

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@interface ACAccountStore (DAExtensions)
- (id)da_accountsWithAccountTypeIdentifiers:(id)arg1 enabledForDADataclasses:(long long)arg2;
- (id)da_accountsWithAccountTypeIdentifiers:(id)arg1;
- (id)da_accountsEnabledForDADataclasses:(long long)arg1;
- (id)da_accounts;
- (void)da_loadDAAccountsWithAccountTypeIdentifiers:(id)arg1 enabledForDADataclasses:(long long)arg2 withCompletion:(CDUnknownBlockType)arg3;
- (void)da_loadDAAccountsWithAccountTypeIdentifiers:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)da_loadDAAccountsEnabledForDADataclasses:(long long)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)da_loadDAAccountsWithCompletion:(CDUnknownBlockType)arg1;
- (void)_daAccountsWithAccountTypeIdentifiers:(id)arg1 enabledForDADataclasses:(long long)arg2 filterOnDataclasses:(_Bool)arg3 withCompletion:(CDUnknownBlockType)arg4;
@end

@interface ASAccountActor : DADisableableObject <ASAccountActorMessages>
{
}

- (id)initWithDAAccount:(id)arg1;
- (oneway void)_accountPasswordChanged;
- (oneway void)_foldersThatExternalClientsCareAboutChanged;
- (oneway void)_folderHierarchyChanged;
- (oneway void)_newASPolicyKeyNotification:(id)arg1;
- (oneway void)_folderUpdatedNotification:(id)arg1;
- (oneway void)_daemonDiedNotification:(id)arg1;
- (oneway void)shutdown;
- (oneway void)setAccount:(id)arg1;
- (oneway void)startup;
- (id)draftsFolder;
- (id)deletedItemsFolder;
- (id)sentItemsFolder;
- (id)inboxFolder;
- (_Bool)searchQueriesRunning;
- (oneway void)cancelAllSearchQueries;
- (oneway void)cancelSearchQuery:(id)arg1;
- (oneway void)performSearchQuery:(id)arg1;
- (oneway void)cancelTaskWithID:(int)arg1;
- (void)performFolderChange:(id)arg1 isUserRequested:(_Bool)arg2;
- (int)performResolveRecipientsRequest:(id)arg1 consumer:(id)arg2;
- (int)performFetchMessageSearchResultRequests:(id)arg1 consumer:(id)arg2;
- (int)performFetchAttachmentRequest:(id)arg1 consumer:(id)arg2;
- (int)performMoveRequests:(id)arg1 consumer:(id)arg2;
- (int)performMailboxRequests:(id)arg1 mailbox:(id)arg2 previousTag:(id)arg3 isUserRequested:(_Bool)arg4 consumer:(id)arg5;
- (int)performMailboxRequest:(id)arg1 mailbox:(id)arg2 previousTag:(id)arg3 isUserRequested:(_Bool)arg4 consumer:(id)arg5;
- (int)sendMessageWithRFC822Data:(id)arg1 messageID:(id)arg2 outgoingMessageType:(int)arg3 originalMessageFolderID:(id)arg4 originalMessageItemID:(id)arg5 originalMessageLongID:(id)arg6 originalAccountID:(id)arg7 useSmartTasksIfPossible:(_Bool)arg8 isUserRequested:(_Bool)arg9 consumer:(id)arg10 context:(id)arg11;
- (int)sendMessageWithRFC822Data:(id)arg1 messageID:(id)arg2 outgoingMessageType:(int)arg3 originalMessageFolderID:(id)arg4 originalMessageItemID:(id)arg5 originalMessageLongID:(id)arg6 originalAccountID:(id)arg7 useSmartTasksIfPossible:(_Bool)arg8 consumer:(id)arg9 context:(id)arg10;
- (id)unactionableICSRepresentationForMetaData:(id)arg1 inFolderWithId:(id)arg2 outSummary:(id *)arg3;
- (_Bool)reattemptInvitationLinkageForMetaData:(id)arg1 inFolderWithId:(id)arg2;
- (_Bool)setFolderIdsThatExternalClientsCareAboutAdded:(id)arg1 deleted:(id)arg2 foldersTag:(id)arg3;
- (id)folderIDsThatExternalClientsCareAboutForDataclasses:(long long)arg1 withTag:(id *)arg2;
- (id)folderIDsThatExternalClientsCareAboutWithTag:(id *)arg1;
- (id)foldersTag;
- (oneway void)stopMonitoringAllFolders;
- (oneway void)stopMonitoringFoldersForUpdates:(id)arg1;
- (oneway void)monitorFoldersForUpdates:(id)arg1;
- (oneway void)setMailNumberOfPastDaysToSync:(int)arg1;
- (oneway void)setCustomSignature:(id)arg1;
- (id)customSignature;
- (oneway void)setEncryptionIdentityPersistentReference:(id)arg1;
- (id)encryptionIdentityPersistentReference;
- (oneway void)setSigningIdentityPersistentReference:(id)arg1;
- (id)signingIdentityPersistentReference;
- (oneway void)setGeneratesBulletins:(_Bool)arg1;
- (_Bool)generatesBulletins;
- (int)supportsConversations;
- (int)supportsEmailFlagging;
- (int)supportsMailboxSearch;
- (int)mailNumberOfPastDaysToSync;
- (id)mailboxes;

@end

@interface ASTrafficLogger : NSObject
{
    NSFileHandle *_lookasideFileHandle;
    NSString *_lookasideFilePath;
    _Bool _isOutgoingTraffic;
    _Bool _didFlushLogs;
}

+ (id)_logQueue;
@property(nonatomic) _Bool isOutgoingTraffic; // @synthesize isOutgoingTraffic=_isOutgoingTraffic;
- (void).cxx_destruct;
- (void)logPlainTextData:(id)arg1;
- (void)logWBXMLData:(id)arg1;
- (void)dealloc;
- (void)flushLogs;
- (void)_moveLogFileContentsAtPath:(id)arg1;
- (void)_openLookasideFile;

@end

@interface ContactFolderItemsSyncContext : NSObject
{
    int _abPersonChangeId;
    int _abGroupChangeId;
}

@property(nonatomic) int abGroupChangeId; // @synthesize abGroupChangeId=_abGroupChangeId;
@property(nonatomic) int abPersonChangeId; // @synthesize abPersonChangeId=_abPersonChangeId;

@end

@interface DAAccount : NSObject
{
    ACAccount *_backingAccountInfo;
    _Bool _hasInitted;
    _Bool _shouldUseOpportunisticSockets;
    _Bool _wasUserInitiated;
    NSMutableDictionary *_haveWarnedAboutCertDict;
    DAStatusReport *_statusReport;
    NSMapTable *_consumers;
    struct __CFURLStorageSession *_storageSession;
    NSString *_clientToken;
    DATaskManager *_taskManager;
    _Bool _shouldFailAllTasks;
    _Bool _isValidating;
    NSArray *_appIdsForPasswordPrompt;
    NSMutableArray *_pendingQueries;
    NSObject<OS_dispatch_queue> *_pendingQueryQueue;
    unsigned long long _lastQueryStartedTime;
    NSMutableDictionary *_dataclassPropertyURLsByDataclass;
}

+ (id)daAccountSubclassWithBackingAccountInfo:(id)arg1;
+ (void)reacquireClientRestrictions:(id)arg1;
+ (id)oneshotListOfAccountIDs;
+ (id)_leafAccountTypes;
@property(retain, nonatomic) NSMutableDictionary *dataclassPropertyURLsByDataclass; // @synthesize dataclassPropertyURLsByDataclass=_dataclassPropertyURLsByDataclass;
@property(nonatomic) unsigned long long lastQueryStartedTime; // @synthesize lastQueryStartedTime=_lastQueryStartedTime;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *pendingQueryQueue; // @synthesize pendingQueryQueue=_pendingQueryQueue;
@property(retain, nonatomic) NSMutableArray *pendingQueries; // @synthesize pendingQueries=_pendingQueries;
@property(nonatomic) _Bool isValidating; // @synthesize isValidating=_isValidating;
@property(readonly, nonatomic) NSArray *appIdsForPasswordPrompt; // @synthesize appIdsForPasswordPrompt=_appIdsForPasswordPrompt;
@property(readonly, nonatomic) DATaskManager *taskManager; // @synthesize taskManager=_taskManager;
@property(nonatomic) _Bool wasUserInitiated; // @synthesize wasUserInitiated=_wasUserInitiated;
@property(nonatomic) _Bool shouldUseOpportunisticSockets; // @synthesize shouldUseOpportunisticSockets=_shouldUseOpportunisticSockets;
@property(retain, nonatomic) DAStatusReport *statusReport; // @synthesize statusReport=_statusReport;
@property(readonly, nonatomic) ACAccount *backingAccountInfo; // @synthesize backingAccountInfo=_backingAccountInfo;
- (void).cxx_destruct;
- (id)protocolVersion;
- (void)reload;
- (void)shutdown;
- (id)description;
- (struct __CFURLStorageSession *)copyStorageSession;
- (_Bool)isSubscribedCalendarAccount;
- (_Bool)isGoogleAccount;
- (_Bool)isHotmailAccount;
- (_Bool)isCalDAVChildAccount;
- (_Bool)isCardDAVAccount;
- (_Bool)isCalDAVAccount;
- (_Bool)isBookmarkDAVAccount;
- (_Bool)isLDAPAccount;
- (_Bool)isActiveSyncAccount;
- (_Bool)accountHasSignificantPropertyChangesFromOldAccountInfo:(id)arg1;
- (_Bool)isEqualToAccount:(id)arg1;
@property(readonly, nonatomic) _Bool shouldFailAllTasks; // @synthesize shouldFailAllTasks=_shouldFailAllTasks;
- (void)resetStatusReport;
- (_Bool)resetCertWarnings;
- (void)setHaveWarnedAboutCert:(id)arg1 forHost:(id)arg2;
- (_Bool)haveWarnedAboutCert:(id)arg1 forHost:(id)arg2;
@property(readonly, nonatomic) _Bool isChildAccount;
- (void)cleanupAccountFiles;
- (void)setExceptions:(struct __CFData *)arg1 forDigest:(id)arg2;
- (struct __CFData *)exceptionsForDigest:(id)arg1;
- (id)exceptionsDict;
- (_Bool)_isIdentityManagedByProfile;
- (void)setIdentityCertificatePersistentID:(id)arg1 managedByProfile:(_Bool)arg2;
@property(readonly, copy, nonatomic) NSData *identityPersist;
- (id)addUsernameToURL:(id)arg1;
@property(readonly, nonatomic) int keychainAccessibilityType;
- (void)saveAccountProperties;
- (void)saveAccountPropertiesWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)removeClientCertificateData;
- (id)defaultContainerIdentifierForDADataclass:(long long)arg1;
- (void)stopMonitoringFolders;
- (void)stopMonitoringFoldersWithIDs:(id)arg1;
- (_Bool)monitorFolderWithID:(id)arg1;
- (_Bool)monitorFoldersWithIDs:(id)arg1;
- (void)tearDown;
- (id)oauthInfoProvider;
- (id)oauth2Token;
- (id)customConnectionProperties;
- (id)additionalHeaderValues;
- (_Bool)handleCertificateError:(id)arg1;
@property(readonly, nonatomic) NSSet *serverComplianceClasses;
@property(readonly, nonatomic) NSString *serverRoot;
@property(readonly, nonatomic) NSString *userAgentHeader;
- (void)accountDidChangeFromOldAccountInfo:(id)arg1;
- (void)removeDBSyncData;
- (_Bool)shouldRemoveDBSyncDataOnAccountChange;
- (id)onBehalfOfBundleIdentifier;
@property(readonly, nonatomic) _Bool shouldAutodiscoverAccountProperties;
@property(nonatomic) _Bool shouldDoInitialAutodiscovery;
- (_Bool)autodiscoverAccountConfigurationWithConsumer:(id)arg1;
- (void)discoverInitialPropertiesWithConsumer:(id)arg1;
- (_Bool)saveModifiedPropertiesOnBackingAccount;
- (void)checkValidityOnAccountStore:(id)arg1 withConsumer:(id)arg2;
@property(copy, nonatomic) NSURL *principalURL;
@property(readonly, copy, nonatomic) NSString *scheme;
@property(copy, nonatomic) NSString *principalPath;
@property(nonatomic) long long port;
@property(retain, nonatomic) NSData *encryptionIdentityPersistentReference;
@property(retain, nonatomic) NSData *signingIdentityPersistentReference;
- (_Bool)accountContainsEmailAddress:(id)arg1;
@property(copy, nonatomic) NSArray *emailAddresses;
@property(copy, nonatomic) NSString *emailAddress;
@property(nonatomic) _Bool useSSL;
@property(copy, nonatomic) NSString *host;
- (id)domainOnly;
- (id)usernameWithoutDomain;
- (long long)portFromDataclassPropertiesForDataclass:(id)arg1;
- (_Bool)useSSLFromDataclassPropertiesForDataclass:(id)arg1;
- (id)hostFromDataclassPropertiesForDataclass:(id)arg1;
- (id)urlFromDataclassPropertiesForDataclass:(id)arg1;
@property(copy, nonatomic) NSString *password;
- (id)passwordWithExpected:(_Bool)arg1;
- (void)clientTokenRequestedByServer;
@property(readonly, copy, nonatomic) NSString *clientToken;
- (void)removeConsumerForTask:(id)arg1;
- (id)consumerForTask:(id)arg1;
- (void)setConsumer:(id)arg1 forTask:(id)arg2;
- (id)stateString;
- (void)stopMonitoringFolderWithID:(id)arg1;
- (void)suspendMonitoringFoldersWithIDs:(id)arg1;
- (void)resumeMonitoringFoldersWithIDs:(id)arg1;
- (void)setAccountIntProperty:(int)arg1 forKey:(id)arg2;
- (int)accountIntPropertyForKey:(id)arg1;
- (void)setAccountBoolProperty:(_Bool)arg1 forKey:(id)arg2;
- (_Bool)accountBoolPropertyForKey:(id)arg1;
- (id)objectForKeyedSubscript:(id)arg1;
- (void)setObject:(id)arg1 forKeyedSubscript:(id)arg2;
- (void)removeAccountPropertyForKey:(id)arg1;
- (void)setAccountProperty:(id)arg1 forKey:(id)arg2;
- (id)accountPropertyForKey:(id)arg1;
- (id)spinnerIdentifiers;
- (id)dataclassProperties;
@property(readonly, nonatomic) long long enabledDataclassesBitmask;
- (void)setEnabled:(_Bool)arg1 forDADataclass:(long long)arg2;
- (_Bool)enabledForDADataclass:(long long)arg1;
- (_Bool)enabledForAnyDADataclasses:(long long)arg1;
- (void)setEnabled:(_Bool)arg1 forDataclass:(id)arg2;
- (_Bool)isEnabledForDataclass:(id)arg1;
- (_Bool)isDisabled;
@property(copy, nonatomic) NSString *user;
@property(copy, nonatomic) NSString *username;
- (id)displayName;
@property(copy, nonatomic) NSString *accountDescription;
@property(readonly, nonatomic) NSString *changeTrackingID;
- (void)_setPersistentUUID:(id)arg1;
@property(readonly, copy, nonatomic) NSString *persistentUUID;
@property(readonly, nonatomic) NSString *scheduleIdentifier;
- (id)syncStoreIdentifier;
@property(readonly, nonatomic) NSString *accountID;
- (void)resetAccountID;
- (_Bool)upgradeAccount;
@property(nonatomic, setter=setDAAccountVersion:) int daAccountVersion;
- (void)ingestBackingAccountInfoProperties;
- (id)initWithBackingAccountInfo:(id)arg1;
- (void)dealloc;
- (_Bool)handleTrustChallenge:(id)arg1;
- (void)handleTrust:(struct __SecTrust *)arg1 forHost:(id)arg2 withCompletionBlock:(CDUnknownBlockType)arg3;
- (id)_serverSuffixesToAlwaysFail;
- (int)_actionForTrust:(struct __SecTrust *)arg1 host:(id)arg2 service:(id)arg3;
- (void)handleValidationError:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)webLoginRequestedAtURL:(id)arg1 reasonString:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)_webLoginRequestedAtURL:(id)arg1 reasonString:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)dropAssertionsAndRenewCredentialsWithHandler:(CDUnknownBlockType)arg1;
- (id)localizedInvalidPasswordMessage;
- (id)localizedIdenticalAccountFailureMessage;
- (void)cancelShareResponseInstance:(id)arg1 error:(id)arg2;
- (id)respondToShareRequestForCalendar:(id)arg1 withResponse:(long long)arg2 consumer:(id)arg3;
- (void)cancelCalendarDirectorySearchWithID:(id)arg1;
- (id)performCalendarDirectorySearchForTerms:(id)arg1 recordTypes:(id)arg2 resultLimit:(unsigned long long)arg3 consumer:(id)arg4;
- (void)cancelCalendarAvailabilityRequestWithID:(id)arg1;
- (id)requestCalendarAvailabilityForStartDate:(id)arg1 endDate:(id)arg2 ignoredEventID:(id)arg3 addresses:(id)arg4 consumer:(id)arg5;
- (void)cancelDownloadingInstance:(id)arg1 error:(id)arg2;
- (id)beginDownloadingAttachmentWithUUID:(id)arg1 consumer:(id)arg2;
- (_Bool)sendEmailsForCalEvents:(id)arg1 consumer:(id)arg2;
- (void)synchronizeEventsFolder:(id)arg1 previousTag:(id)arg2 actions:(id)arg3 highestIdContext:(id)arg4 isInitialUberSync:(_Bool)arg5 isResyncAfterConnectionFailed:(_Bool)arg6 moreLocalChangesAvailable:(_Bool)arg7 consumer:(id)arg8;
- (id)eventsFolders;
- (id)defaultEventsFolder;
- (void)synchronizeContactsFolder:(id)arg1 previousTag:(id)arg2 previousSyncToken:(id)arg3 actions:(id)arg4 highestIdContext:(id)arg5 isInitialUberSync:(_Bool)arg6 isResyncAfterConnectionFailed:(_Bool)arg7 previousTagIsSuspect:(_Bool)arg8 moreLocalChangesAvailable:(_Bool)arg9 consumer:(id)arg10;
- (id)contactsFolders;
- (id)defaultContactsFolder;
- (id)draftsFolder;
- (id)deletedItemsFolder;
- (id)sentItemsFolder;
- (id)inboxFolder;
- (id)unactionableICSRepresentationForMetaData:(id)arg1 inFolderWithId:(id)arg2 outSummary:(id *)arg3;
- (_Bool)reattemptInvitationLinkageForMetaData:(id)arg1 inFolderWithId:(id)arg2;
- (void)retrieveOofSettingsForConsumer:(id)arg1;
- (void)updateOofSettingsWithParams:(id)arg1 consumer:(id)arg2;
- (int)supportsEmailFlagging;
- (int)supportsMailboxSearch;
- (_Bool)searchQueriesRunning;
- (void)cancelAllSearchQueries;
- (void)cancelSearchQuery:(id)arg1;
- (void)performSearchQuery:(id)arg1;
- (void)_dequeueQuery;
- (id)getPendingQueryQueue;
- (_Bool)_reallySearchQueriesRunning;
- (void)_reallyCancelAllSearchQueries;
- (void)_reallyCancelPendingSearchQuery:(id)arg1;
- (void)_reallyCancelSearchQuery:(id)arg1;
- (void)_reallyPerformSearchQuery:(id)arg1;
- (void)setToDosNumberOfPastDaysToSync:(int)arg1;
- (int)toDosNumberOfPastDaysToSync;
- (void)synchronizeToDosFolder:(id)arg1 previousTag:(id)arg2 actions:(id)arg3 highestIdContext:(id)arg4 isInitialUberSync:(_Bool)arg5 isResyncAfterConnectionFailed:(_Bool)arg6 moreLocalChangesAvailable:(_Bool)arg7 consumer:(id)arg8;
- (id)toDosFolders;
- (id)defaultToDosFolder;
- (void)synchronizeNotesFolder:(id)arg1 noteContext:(id)arg2 previousTag:(id)arg3 actions:(id)arg4 changeSet:(id)arg5 notesToDeleteAfterSync:(id)arg6 isInitialUberSync:(_Bool)arg7 isResyncAfterConnectionFailed:(_Bool)arg8 moreLocalChangesAvailable:(_Bool)arg9 consumer:(id)arg10;
- (id)notesFolders;
- (id)defaultNotesFolder;
- (void)synchronizeBookmarkTreeWithConsumer:(id)arg1 hasRemoteChanges:(_Bool)arg2;
- (void)getRootFolderWithConsumer:(id)arg1;

@end

@interface DAAccountClassNames : NSObject
{
    NSString *_accountClassName;
    NSString *_clientAccountClassName;
    NSString *_daemonAccountClassName;
    NSString *_agentClassName;
}

@property(retain, nonatomic) NSString *agentClassName; // @synthesize agentClassName=_agentClassName;
@property(retain, nonatomic) NSString *daemonAccountClassName; // @synthesize daemonAccountClassName=_daemonAccountClassName;
@property(retain, nonatomic) NSString *clientAccountClassName; // @synthesize clientAccountClassName=_clientAccountClassName;
@property(retain, nonatomic) NSString *accountClassName; // @synthesize accountClassName=_accountClassName;
- (void).cxx_destruct;
- (id)description;

@end

@interface DAAccountLoader : NSObject
{
    NSMutableDictionary *_acAccountTypeToAccountFrameworkSubpath;
    NSMutableDictionary *_acAccountTypeToAccountDaemonBundleSubpath;
    NSMutableDictionary *_acAccountTypeToClassNames;
    NSMutableDictionary *_acParentAccountTypeToChildAccountTypes;
}

+ (id)sharedInstance;
@property(retain, nonatomic) NSMutableDictionary *acParentAccountTypeToChildAccountTypes; // @synthesize acParentAccountTypeToChildAccountTypes=_acParentAccountTypeToChildAccountTypes;
@property(retain, nonatomic) NSMutableDictionary *acAccountTypeToClassNames; // @synthesize acAccountTypeToClassNames=_acAccountTypeToClassNames;
@property(retain, nonatomic) NSMutableDictionary *acAccountTypeToAccountDaemonBundleSubpath; // @synthesize acAccountTypeToAccountDaemonBundleSubpath=_acAccountTypeToAccountDaemonBundleSubpath;
@property(retain, nonatomic) NSMutableDictionary *acAccountTypeToAccountFrameworkSubpath; // @synthesize acAccountTypeToAccountFrameworkSubpath=_acAccountTypeToAccountFrameworkSubpath;
- (void).cxx_destruct;
- (Class)daemonAppropriateAccountClassForACAccount:(id)arg1;
- (Class)agentClassForACAccount:(id)arg1;
- (Class)daemonAccountClassForACAccount:(id)arg1;
- (Class)clientAccountClassForACAccount:(id)arg1;
- (Class)accountClassForACAccount:(id)arg1;
- (void)loadDaemonBundleForACAccountType:(id)arg1;
- (void)loadFrameworkForACAccountType:(id)arg1;
- (_Bool)_loadFrameworkAtSubpath:(id)arg1;
- (id)init;
- (void)_addAccountInfo:(id)arg1 forFrameworkNamed:(id)arg2;

@end

@interface DAAccountMonitor : NSObject
{
    NSHashTable *_accounts;
    NSObject<OS_dispatch_queue> *_accountsQueue;
}

+ (id)sharedMonitor;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *accountsQueue; // @synthesize accountsQueue=_accountsQueue;
@property(retain, nonatomic) NSHashTable *accounts; // @synthesize accounts=_accounts;
- (void).cxx_destruct;
- (id)monitoredAccounts;
- (void)unmonitorAccount:(id)arg1;
- (void)monitorAccount:(id)arg1;
- (id)init;

@end

@interface DAAction : NSObject <NSCoding>
{
    int _changeId;
    long long _itemChangeType;
    id _serverId;
    id _changedItem;
}

@property(nonatomic) int changeId; // @synthesize changeId=_changeId;
- (void)_setChangedItem:(id)arg1;
@property(retain, nonatomic) id changedItem; // @synthesize changedItem=_changedItem;
@property(retain, nonatomic) id serverId; // @synthesize serverId=_serverId;
@property(nonatomic) long long itemChangeType; // @synthesize itemChangeType=_itemChangeType;
- (void).cxx_destruct;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)description;
- (id)stringForItemChangeType:(long long)arg1;
- (id)initWithItemChangeType:(long long)arg1 changedItem:(id)arg2 serverId:(id)arg3;
- (struct ASEvent *)event;
- (id)deletedEventID;
- (struct ASContact *)contact;
- (id)deletedContactID;
- (id)message;
- (struct ASToDo *)toDo;
- (id)deletedToDoID;
- (struct ASNote *)note;
- (id)deletedNoteID;

@end

@interface DABabysitter : NSObject
{
    NSString *_buildVersion;
    NSMutableDictionary *_refreshingWaiters;
    NSMutableDictionary *_failedWaiters;
    NSMutableDictionary *_restrictedWaiters;
}

+ (id)sharedBabysitter;
@property(retain, nonatomic) NSMutableDictionary *restrictedWaiters; // @synthesize restrictedWaiters=_restrictedWaiters;
@property(retain, nonatomic) NSMutableDictionary *failedWaiters; // @synthesize failedWaiters=_failedWaiters;
@property(retain, nonatomic) NSMutableDictionary *refreshingWaiters; // @synthesize refreshingWaiters=_refreshingWaiters;
@property(retain, nonatomic) NSString *buildVersion; // @synthesize buildVersion=_buildVersion;
- (void).cxx_destruct;
- (void)giveAccountWithIDAnotherChance:(id)arg1;
- (_Bool)accountShouldContinue:(id)arg1;
- (_Bool)accountWithIDShouldContinue:(id)arg1;
- (void)unregisterAccount:(id)arg1 forOperationWithName:(id)arg2;
- (_Bool)registerAccount:(id)arg1 forOperationWithName:(id)arg2;
- (void)_decrementRefreshCountForWaiterID:(id)arg1 operationName:(id)arg2;
- (void)_decrementRefreshCountForWaiter:(id)arg1 forOperationWithName:(id)arg2;
- (void)_incrementRefreshCountForWaiterID:(id)arg1 operationName:(id)arg2;
- (void)dealloc;
- (id)init;
- (id)_init;
- (void)_reloadBabysitterProperties;

@end

@interface DAConvertCRtoCRLFStream : NSInputStream
{
    NSData *_mimeData;
    NSData *_preflightData;
    NSData *_postflightData;
    unsigned long long _totalLength;
    unsigned long long _readOffset;
    _Bool _lastByteCopiedWasCR;
    _Bool _openEventSent;
    unsigned long long _streamStatus;
    _Bool _intendToStream;
    id _delegate;
    struct __CFRunLoopSource *_rls;
    CDUnknownFunctionPointerType _clientCallback;
    CDStruct_4210025a _clientContext;
    ASTrafficLogger *_trafficLogger;
}

- (void).cxx_destruct;
- (void)dealloc;
- (id)initWithData:(id)arg1;
- (id)initWithMIMEData:(id)arg1 preflightData:(id)arg2 postflightData:(id)arg3 intendToStream:(_Bool)arg4;
- (_Bool)getBuffer:(char **)arg1 length:(unsigned long long *)arg2;
- (_Bool)hasBytesAvailable;
- (long long)read:(char *)arg1 maxLength:(unsigned long long)arg2;
- (id)streamError;
- (unsigned long long)streamStatus;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)close;
- (void)open;
- (void)removeFromRunLoop:(id)arg1 forMode:(id)arg2;
- (void)scheduleInRunLoop:(id)arg1 forMode:(id)arg2;
- (_Bool)_setCFClientFlags:(unsigned long long)arg1 callback:(CDUnknownFunctionPointerType)arg2 context:(CDStruct_4210025a *)arg3;
- (void)_unscheduleFromCFRunLoop:(struct __CFRunLoop *)arg1 forMode:(struct __CFString *)arg2;
- (void)_scheduleInCFRunLoop:(struct __CFRunLoop *)arg1 forMode:(struct __CFString *)arg2;
- (void)_scheduleCallback;
- (void)_streamEventTrigger;

@end

@interface DADataHandler : NSObject
{
    void *_container;
    NSString *_changeTrackingID;
}

+ (id)newDataHandlerForDataclass:(long long)arg1 container:(void *)arg2 changeTrackingID:(id)arg3;
@property(copy, nonatomic) NSString *changeTrackingID; // @synthesize changeTrackingID=_changeTrackingID;
@property(nonatomic) void *container; // @synthesize container=_container;
- (void).cxx_destruct;
- (id)getDAObjectWithLocalItem:(void *)arg1 serverId:(id)arg2 account:(id)arg3;
- (_Bool)closeDBAndSave:(_Bool)arg1;
- (void)openDB;
- (void)drainSuperfluousChanges;
- (_Bool)wipeServerIds;
- (void)drainContainer;
- (id)copyOfAllLocalObjectsInContainer;
- (_Bool)saveContainer;
- (void *)copyLocalObjectFromId:(int)arg1;
- (int)getIdFromLocalObject:(void *)arg1;
- (long long)dataclass;
- (void)dealloc;
- (id)initWithContainer:(void *)arg1 changeTrackingID:(id)arg2;

@end

@interface DAFolder : NSObject
{
    _Bool _isDefault;
    _Bool _hasRemoteChanges;
    NSString *_folderName;
    NSString *_folderID;
    NSString *_parentFolderID;
    long long _dataclass;
}

@property(nonatomic) _Bool hasRemoteChanges; // @synthesize hasRemoteChanges=_hasRemoteChanges;
@property(nonatomic) _Bool isDefault; // @synthesize isDefault=_isDefault;
@property(nonatomic) long long dataclass; // @synthesize dataclass=_dataclass;
@property(copy, nonatomic) NSString *parentFolderID; // @synthesize parentFolderID=_parentFolderID;
@property(copy, nonatomic) NSString *folderID; // @synthesize folderID=_folderID;
@property(copy, nonatomic) NSString *folderName; // @synthesize folderName=_folderName;
- (void).cxx_destruct;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)description;
- (id)parentMailboxID;
- (id)mailboxID;

@end

@interface DAKeychain : NSObject
{
}

+ (id)sharedKeychain;
- (void)migratePasswordForAccount:(id)arg1;
- (_Bool)removePasswordForAccount:(id)arg1 withPersistentUUID:(id)arg2;
- (_Bool)setPassword:(id)arg1 forAccount:(id)arg2 withPersistentUUID:(id)arg3 withAccessibility:(int)arg4;
- (void)removePersistentCredentials;
- (id)passwordForAccountWithPersistentUUID:(id)arg1 expectedAccessibility:(int)arg2 shouldSetAccessibility:(_Bool)arg3 passwordExpected:(_Bool)arg4;
- (struct __CFDictionary *)_DACopyMutableAttributesForAccountWithPersistentUUID:(id)arg1 accessibility:(int)arg2;
- (struct __CFDictionary *)_DACopyMutableQueryForAccountWithPersistentUUID:(id)arg1;
- (int)_daKeychainAccessibilityForSecAccessibility:(void *)arg1;
- (void *)_secAccessibilityForDAKeychainAccessibility:(int)arg1;
- (_Bool)canAccessCredentialsWithAccessibility:(int)arg1;
- (id)guessPasswordForURL:(id)arg1;
- (void)removeKeychainInformationsForURL:(id)arg1;
- (id)loadKeychainInformationsForURL:(id)arg1;
- (_Bool)saveKeychainInformationsForURL:(id)arg1 andPassword:(id)arg2 withAccessibility:(int)arg3;

@end

@interface DALocalDBGateKeeper : NSObject
{
    _Bool _claimedOwnershipOfContacts;
    _Bool _claimedOwnershipOfEvents;
    _Bool _claimedOwnershipOfNotes;
    _Bool _claimedOwnershipOfBookmarks;
    id <DADataclassLockWatcher> _contactsLockHolder;
    NSMutableArray *_contactsWaiters;
    NSMutableSet *_waiterIDsExpectingContactsLock;
    id <DADataclassLockWatcher> _eventsLockHolder;
    NSMutableArray *_eventsWaiters;
    NSMutableSet *_waiterIDsExpectingEventsLock;
    id <DADataclassLockWatcher> _notesLockHolder;
    NSMutableArray *_notesWaiters;
    NSMutableSet *_waiterIDsExpectingNotesLock;
    id <DADataclassLockWatcher> _bookmarksLockHolder;
    NSMutableArray *_bookmarksWaiters;
    NSMutableSet *_waiterIDsExpectingBookmarksLock;
    NSString *_unitTestHackRunLoopMode;
}

+ (id)sharedGateKeeper;
@property(retain, nonatomic) NSString *unitTestHackRunLoopMode; // @synthesize unitTestHackRunLoopMode=_unitTestHackRunLoopMode;
@property(retain, nonatomic) NSMutableSet *waiterIDsExpectingBookmarksLock; // @synthesize waiterIDsExpectingBookmarksLock=_waiterIDsExpectingBookmarksLock;
@property(retain, nonatomic) NSMutableArray *bookmarksWaiters; // @synthesize bookmarksWaiters=_bookmarksWaiters;
@property(retain, nonatomic) id <DADataclassLockWatcher> bookmarksLockHolder; // @synthesize bookmarksLockHolder=_bookmarksLockHolder;
@property(nonatomic) _Bool claimedOwnershipOfBookmarks; // @synthesize claimedOwnershipOfBookmarks=_claimedOwnershipOfBookmarks;
@property(retain, nonatomic) NSMutableSet *waiterIDsExpectingNotesLock; // @synthesize waiterIDsExpectingNotesLock=_waiterIDsExpectingNotesLock;
@property(retain, nonatomic) NSMutableArray *notesWaiters; // @synthesize notesWaiters=_notesWaiters;
@property(retain, nonatomic) id <DADataclassLockWatcher> notesLockHolder; // @synthesize notesLockHolder=_notesLockHolder;
@property(nonatomic) _Bool claimedOwnershipOfNotes; // @synthesize claimedOwnershipOfNotes=_claimedOwnershipOfNotes;
@property(retain, nonatomic) NSMutableSet *waiterIDsExpectingEventsLock; // @synthesize waiterIDsExpectingEventsLock=_waiterIDsExpectingEventsLock;
@property(retain, nonatomic) NSMutableArray *eventsWaiters; // @synthesize eventsWaiters=_eventsWaiters;
@property(retain, nonatomic) id <DADataclassLockWatcher> eventsLockHolder; // @synthesize eventsLockHolder=_eventsLockHolder;
@property(nonatomic) _Bool claimedOwnershipOfEvents; // @synthesize claimedOwnershipOfEvents=_claimedOwnershipOfEvents;
@property(retain, nonatomic) NSMutableSet *waiterIDsExpectingContactsLock; // @synthesize waiterIDsExpectingContactsLock=_waiterIDsExpectingContactsLock;
@property(retain, nonatomic) NSMutableArray *contactsWaiters; // @synthesize contactsWaiters=_contactsWaiters;
@property(retain, nonatomic) id <DADataclassLockWatcher> contactsLockHolder; // @synthesize contactsLockHolder=_contactsLockHolder;
@property(nonatomic) _Bool claimedOwnershipOfContacts; // @synthesize claimedOwnershipOfContacts=_claimedOwnershipOfContacts;
- (void).cxx_destruct;
- (void)_setUnitTestHackRunLoopMode:(id)arg1;
- (id)stateString;
- (void)claimedOwnershipOfDataclasses:(long long)arg1;
- (void)relinquishLocksForWaiter:(id)arg1 dataclasses:(long long)arg2 moreComing:(_Bool)arg3;
- (void)unregisterWaiterForDataclassLocks:(id)arg1;
- (void)_sendAllClearNotifications;
- (void)registerWaiter:(id)arg1 forDataclassLocks:(long long)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)registerPreemptiveWaiter:(id)arg1 forDataclassLocks:(long long)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)_registerWaiter:(id)arg1 forDataclassLocks:(long long)arg2 preempt:(_Bool)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)_notifyWaitersForDataclasses:(id)arg1;
- (void)_abortWaiterForWrappers:(id)arg1;
- (_Bool)_canWakenWaiter:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface DALocalDBHelper : NSObject
{
    int _abConnectionCount;
    int _calConnectionCount;
    int _bookmarkConnectionCount;
    int _noteConnectionCount;
    void *_abDB;
    struct CalDatabase *_calDB;
    NSString *_clientIdentifier;
    void *_bookmarkDB;
    NoteContext *_noteDB;
    CDUnknownBlockType _calUnitTestCallbackBlock;
}

+ (id)calTestCalDBDir;
+ (void)calSetTestCalDBDir:(id)arg1;
+ (id)abTestABDBDir;
+ (void)abSetTestABDBDir:(id)arg1;
+ (id)sharedInstanceForAccountType:(id)arg1 creatingClass:(Class)arg2;
@property(copy, nonatomic) CDUnknownBlockType calUnitTestCallbackBlock; // @synthesize calUnitTestCallbackBlock=_calUnitTestCallbackBlock;
@property(nonatomic) int noteConnectionCount; // @synthesize noteConnectionCount=_noteConnectionCount;
@property(retain, nonatomic) NoteContext *noteDB; // @synthesize noteDB=_noteDB;
@property(nonatomic) int bookmarkConnectionCount; // @synthesize bookmarkConnectionCount=_bookmarkConnectionCount;
@property(nonatomic) void *bookmarkDB; // @synthesize bookmarkDB=_bookmarkDB;
@property(retain, nonatomic) NSString *clientIdentifier; // @synthesize clientIdentifier=_clientIdentifier;
@property(nonatomic) int calConnectionCount; // @synthesize calConnectionCount=_calConnectionCount;
@property(nonatomic) struct CalDatabase *calDB; // @synthesize calDB=_calDB;
@property(nonatomic) int abConnectionCount; // @synthesize abConnectionCount=_abConnectionCount;
@property(nonatomic) void *abDB; // @synthesize abDB=_abDB;
- (void).cxx_destruct;
- (void)calUnitTestsSetCallbackBlockForSave:(CDUnknownBlockType)arg1;
- (_Bool)noteCloseDBAndSave:(_Bool)arg1;
- (_Bool)noteSaveDB;
- (void)noteOpenDB;
- (void)bookmarkCloseDBAndSave:(_Bool)arg1;
- (void)bookmarkSaveDB;
- (_Bool)bookmarkOpenDB;
- (_Bool)calCloseDBAndSave:(_Bool)arg1;
- (_Bool)calSaveDBAndFlushCaches;
- (_Bool)calSaveDB;
- (void)calClearSuperfluousChanges;
- (id)changeTrackingID;
- (void)calOpenDBAsGenericClient;
- (void)calOpenDBWithClientIdentifier:(id)arg1;
- (_Bool)_calOpenDBWithClientIdentifier:(id)arg1;
- (void)_registerForCalendarYieldNotifications;
- (id)abConstraintPlistPath;
- (_Bool)abCloseDBAndSave:(_Bool)arg1;
- (_Bool)abSaveDB;
- (void)abProcessAddedImages;
- (void)abProcessAddedRecords;
- (void)abOpenDB;
- (void)_registerForAddressBookYieldNotifications;
- (void *)abDBThrowOnNil:(_Bool)arg1;

@end

@interface DALocalDBWatcher : NSObject
{
    int _lastSavedCalSequenceNumber;
    int _lastSavedABSequenceNumber;
    void *_abWatcher;
    struct CalDatabase *_calWatcher;
    NoteContext *_noteWatcher;
    NSMapTable *_concernedABPartyToBlockMap;
    NSMapTable *_concernedCalPartyToBlockMap;
    NSMapTable *_concernedNotePartyToBlockMap;
    _Bool _watchingBookmarks;
    NSMapTable *_concernedBookmarkPartyToBlockMap;
}

+ (id)sharedDBWatcher;
@property(nonatomic) int lastSavedCalSequenceNumber; // @synthesize lastSavedCalSequenceNumber=_lastSavedCalSequenceNumber;
@property(nonatomic) int lastSavedABSequenceNumber; // @synthesize lastSavedABSequenceNumber=_lastSavedABSequenceNumber;
- (void).cxx_destruct;
- (void)noteCalDBDirChanged;
- (void)noteABDBDirChanged;
- (void)removeConcernedNoteParty:(id)arg1;
- (void)registerConcernedNoteParty:(id)arg1 withChangedBlock:(CDUnknownBlockType)arg2;
- (void)_notesChangedExternally:(id)arg1;
- (void)removeConcernedBookmarkParty:(id)arg1;
- (void)registerConcernedBookmarkParty:(id)arg1 withChangedBlock:(CDUnknownBlockType)arg2;
- (void)_handleBookmarkChangeNotification;
- (void)removeConcernedCalParty:(id)arg1;
- (void)registerConcernedCalParty:(id)arg1 withChangedBlock:(CDUnknownBlockType)arg2;
- (void)_handleCalChangeNotification;
- (void)removeConcernedABParty:(id)arg1;
- (void)registerConcernedABParty:(id)arg1 withChangedBlock:(CDUnknownBlockType)arg2;
- (void)_handleABChangeNotificationWithInfo:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface DAMailMessage : NSObject <NSCoding>
{
}

- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)rfc822Data;
- (int)smimeType;
- (_Bool)verbIsSet;
- (_Bool)flaggedIsSet;
- (_Bool)readIsSet;
- (int)lastVerb;
- (id)folderID;
- (id)longID;
- (id)remoteID;
- (id)conversationIndex;
- (id)conversationId;
- (id)threadTopic;
- (_Bool)meetingRequestIsActionable;
- (id)meetingRequestMetaData;
- (id)meetingRequestUUID;
- (id)attachments;
- (id)messageClass;
- (int)bodyTruncated;
- (int)bodySize;
- (id)body;
- (_Bool)flagged;
- (_Bool)read;
- (int)importance;
- (id)displayTo;
- (id)subject;
- (id)date;
- (id)replyTo;
- (id)from;
- (id)cc;
- (id)to;

@end

@interface DAMailboxRequest : NSObject
{
    int _requestType;
    int _bodyFormat;
    NSString *_messageID;
}

@property(copy, nonatomic) NSString *messageID; // @synthesize messageID=_messageID;
@property(nonatomic) int bodyFormat; // @synthesize bodyFormat=_bodyFormat;
@property(nonatomic) int requestType; // @synthesize requestType=_requestType;
- (void).cxx_destruct;
- (id)init;

@end

@interface DAMailboxDeleteMessageRequest : DAMailboxRequest
{
}

- (id)description;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)initRequestWithMessageID:(id)arg1;

// Remaining properties
@property(copy, nonatomic) NSString *messageID;

@end

@interface DAMailboxFetchMessageRequest : DAMailboxRequest
{
    int _maxSize;
}

@property(nonatomic) int maxSize; // @synthesize maxSize=_maxSize;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)initRequestForBodyFormat:(int)arg1 withMessageID:(id)arg2 withBodySizeLimit:(int)arg3;

// Remaining properties
@property(copy, nonatomic) NSString *messageID;

@end

@interface DAMailboxFetchSearchResultRequest : NSObject
{
    int _bodyFormat;
    int _maxSize;
    NSString *_longID;
}

@property(nonatomic) int maxSize; // @synthesize maxSize=_maxSize;
@property(nonatomic) int bodyFormat; // @synthesize bodyFormat=_bodyFormat;
@property(copy, nonatomic) NSString *longID; // @synthesize longID=_longID;
- (void).cxx_destruct;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)initRequestForBodyFormat:(int)arg1 withLongID:(id)arg2 withBodySizeLimit:(int)arg3;

@end

@interface DAMailboxGetUpdatesRequest : DAMailboxRequest
{
    int _maxSize;
}

@property(nonatomic) int maxSize; // @synthesize maxSize=_maxSize;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)initRequestForBodyFormat:(int)arg1 withBodySizeLimit:(int)arg2;

@end

@interface DAMailboxSetFlagsRequest : DAMailboxRequest
{
    unsigned long long _onFlags;
    unsigned long long _offFlags;
}

@property(nonatomic) unsigned long long offFlags; // @synthesize offFlags=_offFlags;
@property(nonatomic) unsigned long long onFlags; // @synthesize onFlags=_onFlags;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)initRequestWithSetFlags:(unsigned long long)arg1 unsetFlags:(unsigned long long)arg2 message:(id)arg3;

@end

@interface DAMessageFetchAttachmentRequest : NSObject
{
    NSString *_messageID;
    NSString *_attachmentName;
}

@property(copy, nonatomic) NSString *attachmentName; // @synthesize attachmentName=_attachmentName;
@property(copy, nonatomic) NSString *messageID; // @synthesize messageID=_messageID;
- (void).cxx_destruct;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)initWithAttachmentName:(id)arg1 andMessageServerID:(id)arg2;

@end

@interface DAMessageMoveRequest : NSObject
{
    NSString *_message;
    NSString *_fromFolder;
    NSString *_toFolder;
    id _context;
}

@property(retain, nonatomic) id context; // @synthesize context=_context;
@property(copy, nonatomic) NSString *toFolder; // @synthesize toFolder=_toFolder;
@property(copy, nonatomic) NSString *fromFolder; // @synthesize fromFolder=_fromFolder;
@property(copy, nonatomic) NSString *message; // @synthesize message=_message;
- (void).cxx_destruct;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)initMoveRequestWithMessage:(id)arg1 fromFolder:(id)arg2 toFolder:(id)arg3;

@end

@interface DAMoveAction : DAAction
{
    NSString *_sourceContainerId;
    NSString *_sourceServerId;
    NSString *_destinationContainerId;
}

@property(retain, nonatomic) NSString *destinationContainerId; // @synthesize destinationContainerId=_destinationContainerId;
@property(retain, nonatomic) NSString *sourceServerId; // @synthesize sourceServerId=_sourceServerId;
@property(retain, nonatomic) NSString *sourceContainerId; // @synthesize sourceContainerId=_sourceContainerId;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithItemChangeType:(long long)arg1 changedItem:(id)arg2 sourceContainerId:(id)arg3 sourceServerId:(id)arg4 destinationContainerId:(id)arg5;

@end

@interface DAMoveResponse : NSObject
{
    int _status;
    NSString *_sourceID;
    NSString *_destID;
    DAMessageMoveRequest *_origRequest;
}

@property(retain, nonatomic) DAMessageMoveRequest *origRequest; // @synthesize origRequest=_origRequest;
@property(copy, nonatomic) NSString *destID; // @synthesize destID=_destID;
@property(copy, nonatomic) NSString *sourceID; // @synthesize sourceID=_sourceID;
@property(nonatomic) int status; // @synthesize status=_status;
- (void).cxx_destruct;
- (id)description;
- (id)initWithStatus:(int)arg1 sourceID:(id)arg2 destID:(id)arg3;

@end

@interface DAPowerAssertionManager : NSObject
{
    NSCountedSet *_contexts;
    NSMapTable *_groupIdentifierToContexts;
    NSMapTable *_contextToGroupIdentifier;
    NSMutableSet *_heldAsideGroupIdentifiers;
    NSCountedSet *_heldAsideContexts;
    NSMapTable *_contextToPowerAssertionRef;
}

+ (id)sharedPowerAssertionManager;
+ (void)vendDaemons:(Class)arg1;
@property(retain, nonatomic) NSMapTable *contextToPowerAssertionRef; // @synthesize contextToPowerAssertionRef=_contextToPowerAssertionRef;
@property(retain, nonatomic) NSCountedSet *heldAsideContexts; // @synthesize heldAsideContexts=_heldAsideContexts;
@property(retain, nonatomic) NSMutableSet *heldAsideGroupIdentifiers; // @synthesize heldAsideGroupIdentifiers=_heldAsideGroupIdentifiers;
@property(retain, nonatomic) NSMapTable *contextToGroupIdentifier; // @synthesize contextToGroupIdentifier=_contextToGroupIdentifier;
@property(retain, nonatomic) NSMapTable *groupIdentifierToContexts; // @synthesize groupIdentifierToContexts=_groupIdentifierToContexts;
@property(retain, nonatomic) NSCountedSet *contexts; // @synthesize contexts=_contexts;
- (void).cxx_destruct;
- (void)_releaseAssertionForContext:(id)arg1;
- (void)_retainAssertionForContext:(id)arg1;
- (void)reattainPowerAssertionsForGroupIdentifier:(id)arg1;
- (void)dropPowerAssertionsForGroupIdentifier:(id)arg1;
- (id)stateString;
- (void)releasePowerAssertion:(id)arg1;
- (void)retainPowerAssertion:(id)arg1 withGroupIdentifier:(id)arg2;
- (unsigned long long)powerAssertionRetainCount:(id)arg1;
- (id)init;

@end

@interface DAPriorityManager : NSObject
{
    int _currentPriority;
    NSMapTable *_clientsToPriorityRequests;
    long long _foregroundDataclasses;
}

+ (id)sharedManager;
+ (void)vendPriorityManagers;
@property(nonatomic) long long foregroundDataclasses; // @synthesize foregroundDataclasses=_foregroundDataclasses;
@property(readonly, nonatomic) int currentPriority; // @synthesize currentPriority=_currentPriority;
@property(retain, nonatomic) NSMapTable *clientsToPriorityRequests; // @synthesize clientsToPriorityRequests=_clientsToPriorityRequests;
- (void).cxx_destruct;
- (void)bumpDataclassesToUIPriority:(long long)arg1;
- (void)requestPriority:(int)arg1 forClient:(id)arg2 dataclasses:(long long)arg3;
- (void)_setNewPriority;
- (int)_recalculatePriority;
- (id)stateString;
- (void)_setForegroundDataclasses:(long long)arg1;
- (void)dealloc;
- (id)init;
- (void)_SBApplicationStateChanged:(id)arg1;
- (id)appIDsToDataclasses;

@end

@interface DAPriorityRequest : NSObject
{
    long long _refreshDataclasses;
    long long _UIDataclasses;
}

@property(nonatomic) long long UIDataclasses; // @synthesize UIDataclasses=_UIDataclasses;
@property(nonatomic) long long refreshDataclasses; // @synthesize refreshDataclasses=_refreshDataclasses;

@end

@interface DAResolveRecipientsRequest : NSObject
{
    _Bool _retrieveCertificates;
    _Bool _retrieveAvailablilty;
    NSArray *_emailAddresses;
    NSDate *_startTime;
    NSDate *_endTime;
}

@property(retain, nonatomic) NSDate *endTime; // @synthesize endTime=_endTime;
@property(retain, nonatomic) NSDate *startTime; // @synthesize startTime=_startTime;
@property(nonatomic) _Bool retrieveAvailablilty; // @synthesize retrieveAvailablilty=_retrieveAvailablilty;
@property(nonatomic) _Bool retrieveCertificates; // @synthesize retrieveCertificates=_retrieveCertificates;
@property(retain, nonatomic) NSArray *emailAddresses; // @synthesize emailAddresses=_emailAddresses;
- (void).cxx_destruct;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)initWithEmailAddresses:(id)arg1 retrieveCertificates:(_Bool)arg2 retrieveAvailability:(_Bool)arg3 withStartTime:(id)arg4 endTime:(id)arg5;
- (id)initWithEmailAddresses:(id)arg1;

@end

@interface DAResolvedRecipient : NSObject
{
    long long _status;
    long long _certificatesStatus;
    long long _availabilityStatus;
    NSString *_mergedFreeBusy;
    NSMutableDictionary *_mResolvedEmailToX509Certs;
}

@property(retain, nonatomic) NSMutableDictionary *mResolvedEmailToX509Certs; // @synthesize mResolvedEmailToX509Certs=_mResolvedEmailToX509Certs;
@property(retain, nonatomic) NSString *mergedFreeBusy; // @synthesize mergedFreeBusy=_mergedFreeBusy;
@property(nonatomic) long long availabilityStatus; // @synthesize availabilityStatus=_availabilityStatus;
@property(nonatomic) long long certificatesStatus; // @synthesize certificatesStatus=_certificatesStatus;
@property(nonatomic) long long status; // @synthesize status=_status;
- (void).cxx_destruct;
- (void)addCert:(id)arg1 forEmailAddress:(id)arg2;
- (id)description;
@property(readonly, nonatomic) NSDictionary *resolvedEmailToX509Certs;

@end

@interface DAResponse : DAAction
{
    long long _status;
}

@property(nonatomic) long long status; // @synthesize status=_status;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithItemChangeType:(long long)arg1 changedItem:(id)arg2 serverId:(id)arg3 status:(long long)arg4;

@end

@interface DATaskManager : NSObject
{
    DAAccount *_account;
    int _state;
    id <DATask> _activeModalTask;
    id <DATask> _activeQueuedTask;
    NSMutableArray *_queuedExclusiveTasks;
    id <DATask> _activeExclusiveTask;
    NSMutableSet *_independentTasks;
    NSMutableSet *_heldIndependentTasks;
    NSMutableSet *_modalHeldIndependentTasks;
    NSMutableArray *_mQueuedTasks;
    id <DATask> _modalHeldActiveQueuedTask;
    NSMutableArray *_queuedModalTasks;
    NSTimer *_managerIdleTimer;
    NSTimer *_userInitiatedSyncTimer;
}

@property(retain, nonatomic) NSTimer *userInitiatedSyncTimer; // @synthesize userInitiatedSyncTimer=_userInitiatedSyncTimer;
@property(retain, nonatomic) NSTimer *managerIdleTimer; // @synthesize managerIdleTimer=_managerIdleTimer;
@property(nonatomic) int state; // @synthesize state=_state;
@property(retain, nonatomic) NSMutableArray *queuedModalTasks; // @synthesize queuedModalTasks=_queuedModalTasks;
@property(retain, nonatomic) id <DATask> modalHeldActiveQueuedTask; // @synthesize modalHeldActiveQueuedTask=_modalHeldActiveQueuedTask;
@property(retain, nonatomic) NSMutableArray *mQueuedTasks; // @synthesize mQueuedTasks=_mQueuedTasks;
@property(retain, nonatomic) NSMutableSet *modalHeldIndependentTasks; // @synthesize modalHeldIndependentTasks=_modalHeldIndependentTasks;
@property(retain, nonatomic) NSMutableSet *heldIndependentTasks; // @synthesize heldIndependentTasks=_heldIndependentTasks;
@property(retain, nonatomic) NSMutableSet *independentTasks; // @synthesize independentTasks=_independentTasks;
@property(retain, nonatomic) id <DATask> activeExclusiveTask; // @synthesize activeExclusiveTask=_activeExclusiveTask;
@property(retain, nonatomic) NSMutableArray *queuedExclusiveTasks; // @synthesize queuedExclusiveTasks=_queuedExclusiveTasks;
@property(retain, nonatomic) id <DATask> activeQueuedTask; // @synthesize activeQueuedTask=_activeQueuedTask;
@property(retain, nonatomic) id <DATask> activeModalTask; // @synthesize activeModalTask=_activeModalTask;
@property(nonatomic) __weak DAAccount *account; // @synthesize account=_account;
- (void).cxx_destruct;
- (void)taskManagerWillRemoveTask:(id)arg1;
- (void)taskManagerDidAddTask:(id)arg1;
- (void)_releasePowerAssertionForTask:(id)arg1;
- (void)_retainPowerAssertionForTask:(id)arg1;
- (void)_cancelTasksWithReason:(int)arg1;
- (void)_scheduleStartModal:(id)arg1;
- (void)_schedulePerformTask:(id)arg1;
- (void)_scheduleSelector:(SEL)arg1 withArgument:(id)arg2;
- (void)_makeStateTransition;
- (void)_reactivateHeldTasks;
- (void)_startModal:(id)arg1;
- (void)_requestCancelTasksWithReason:(int)arg1;
- (void)_performTask:(id)arg1;
- (_Bool)taskIsModal:(id)arg1;
- (void)taskEndModal:(id)arg1;
- (void)taskRequestModal:(id)arg1;
- (void)taskDidFinish:(id)arg1;
- (_Bool)_hasTasksIndicatingARunningSync;
- (_Bool)_hasTasksForcingNetworkConnection;
- (_Bool)_taskInQueueForcesNetworkConnection:(id)arg1;
- (_Bool)_taskForcesNetworking:(id)arg1;
- (void)_logSyncEnd;
- (void)_clearUserInitiatedSyncTimer;
- (void)_useOpportunisticSocketsAgain;
- (id)stateString;
- (void)shutdown;
- (void)cancelAllTasks;
- (void)cancelTask:(id)arg1;
- (void)cancelTask:(id)arg1 withUnderlyingError:(id)arg2;
- (void)submitQueuedTask:(id)arg1;
- (void)submitIndependentTask:(id)arg1;
- (void)submitExclusiveTask:(id)arg1 toFrontOfQueue:(_Bool)arg2;
- (void)submitExclusiveTask:(id)arg1;
- (_Bool)isShutdown;
- (id)accountPersistentUUID;
- (id)accountID;
- (id)identityPersist;
- (_Bool)useSSL;
- (id)password;
- (id)server;
- (long long)port;
- (id)user;
- (id)userAgent;
- (id)deviceType;
- (_Bool)_useFakeDescriptions;
- (id)_version;
- (void)_populateVersionDescriptions;
@property(readonly, nonatomic) NSArray *queuedTasks;
- (void)dealloc;
- (id)init;
- (id)initWithAccount:(id)arg1;
@property(readonly, nonatomic) NSArray *allTasks;

@end

@interface DATrafficLogger : NSObject
{
    NSString *_filename;
}

+ (_Bool)enabled;
@property(retain, nonatomic) NSString *filename; // @synthesize filename=_filename;
- (void).cxx_destruct;
- (void)slurpAndRemoveLookasideFile:(id)arg1 prefixString:(id)arg2 suffixString:(id)arg3;
- (void)logSnippet:(id)arg1;
- (id)initWithFilename:(id)arg1;
- (void)_ensureCustomLogFile;

@end

@interface DAUserNotificationInfo : NSObject
{
    CDUnknownBlockType _handler;
    NSString *_groupIdentifier;
}

@property(copy, nonatomic) NSString *groupIdentifier; // @synthesize groupIdentifier=_groupIdentifier;
- (void).cxx_destruct;
- (CDUnknownBlockType)handler;
- (void)setHandler:(CDUnknownBlockType)arg1;

@end

@interface DAUserNotificationUtilities : NSObject
{
}

+ (void)showUserNotification:(struct __CFUserNotification *)arg1 groupIdentifier:(id)arg2 withCompletionBlock:(CDUnknownBlockType)arg3;

@end

@interface DAWaiterWrapper : NSObject
{
    id <DADataclassLockWatcher> _waiter;
    long long _dataclasses;
    CDUnknownBlockType _completionHandler;
    int _waiterNum;
}

@property(readonly, nonatomic) int waiterNum; // @synthesize waiterNum=_waiterNum;
@property(nonatomic) long long dataclasses; // @synthesize dataclasses=_dataclasses;
@property(copy, nonatomic) CDUnknownBlockType completionHandler; // @synthesize completionHandler=_completionHandler;
@property(retain, nonatomic) id <DADataclassLockWatcher> waiter; // @synthesize waiter=_waiter;
- (void).cxx_destruct;
- (id)description;
- (id)init;

@end

@interface DAiCalendarLogger : NSObject <ICSLoggingDelegate>
{
}

+ (id)sharedLogger;
- (void)logICSMessage:(id)arg1 atLevel:(long long)arg2;
- (void)registerWithiCalendar;

@end

@interface EventsFolderItemsSyncContext : NSObject
{
    int _calEventChangeId;
    int _calRecurrenceChangeId;
    int _calAlarmChangeId;
    int _calAttendeeChangeId;
    int _highestSequenceNumber;
}

@property(nonatomic) int highestSequenceNumber; // @synthesize highestSequenceNumber=_highestSequenceNumber;
@property(nonatomic) int calAttendeeChangeId; // @synthesize calAttendeeChangeId=_calAttendeeChangeId;
@property(nonatomic) int calAlarmChangeId; // @synthesize calAlarmChangeId=_calAlarmChangeId;
@property(nonatomic) int calRecurrenceChangeId; // @synthesize calRecurrenceChangeId=_calRecurrenceChangeId;
@property(nonatomic) int calEventChangeId; // @synthesize calEventChangeId=_calEventChangeId;

@end

@interface NSData (hexString)
+ (id)dataWithHexString:(id)arg1;
+ (id)dataWithHexString:(id)arg1 stringIsUppercase:(_Bool)arg2;
- (id)uppercaseHexStringWithoutSpaces;
- (id)lowercaseHexStringWithoutSpaces;
- (id)hexString;
@end

@interface NSDictionary (DAExtensions)
- (id)DAMergeOverrideDictionary:(id)arg1;
- (id)DAObjectForKeyCaseInsensitive:(id)arg1;
@end

@interface NSError (DADAExtendedDescription)
- (id)DAExtendedDescription;
@end

@interface NSObject (ChillOutARC)
- (void)da_performSelectorThatDoesntAffectRetainCount:(SEL)arg1 withObject:(id)arg2;
@end

@interface NSObject (DelayedPerformWithNullSource)
- (void)addNullRunLoopSourceAndPerformSelector:(SEL)arg1 withObject:(id)arg2 afterDelay:(double)arg3 inModes:(id)arg4;
@end

@interface NSSet (DAExtensions)
- (id)DACompactDescription;
@end

@interface NSString (DAExtensions)
+ (id)new64ByteGUID;
+ (id)newGUID;
- (id)trimWhiteSpace;
- (_Bool)hasPrefixCaseInsensitive:(id)arg1;
- (id)stringByURLEscapingPathComponent;
- (id)appendSlashIfNeeded;
- (id)removeSlashIfNeeded;
- (id)stringByRemovingPercentEscapesForUsername;
- (id)stringByAddingPercentEscapesForUsername;
@end

@interface NSString (DAKeychainAdditions)
- (id)stringByURLQuoting;
@end

@interface NSString (DALeastInfoURLExtension)
- (id)absoluteURLForChildLeastInfoRepresentationRelativeToParentURL:(id)arg1;
@end

@interface NSURL (DAExtensions)
+ (int)classicPortForScheme:(id)arg1;
+ (id)URLWithScheme:(id)arg1 host:(id)arg2 port:(int)arg3 uri:(id)arg4;
+ (id)URLWithScheme:(id)arg1 host:(id)arg2 user:(id)arg3 port:(int)arg4 uri:(id)arg5;
+ (id)URLWithDirtyString:(id)arg1;
- (id)pathWithoutTrailingRemovingSlash;
- (id)rawPath;
- (id)urlBySettingPath:(id)arg1;
- (id)urlBySettingPort:(id)arg1;
- (id)urlBySettingHost:(id)arg1;
- (id)urlBySettingScheme:(id)arg1;
- (id)urlByRemovingUsername;
- (id)urlBySettingUsername:(id)arg1;
- (id)urlBySettingPath:(id)arg1 keepUsername:(_Bool)arg2;
- (id)urlBySettingPort:(id)arg1 keepUsername:(_Bool)arg2;
- (id)urlBySettingHost:(id)arg1 keepUsername:(_Bool)arg2;
- (id)urlBySettingScheme:(id)arg1 keepUsername:(_Bool)arg2;
- (_Bool)isEqualToDAVURL:(id)arg1;
@end

@interface NSURL (DAKeychainAddition)
- (id)URLWithUsername:(id)arg1;
- (id)URLWithUsername:(id)arg1 withPassword:(id)arg2;
- (id)URLByRemovingLastPathComponent;
- (id)URLWithoutUsername;
- (id)uri;
@end

@interface NSURL (DALeastInfoURLExtension)
- (id)leastInfoStringRepresentationRelativeToParentURL:(id)arg1;
@end

@interface NSURLRequest (DAExtensions)
- (id)DARequestByApplyingStorageSession:(struct __CFURLStorageSession *)arg1;
@end

