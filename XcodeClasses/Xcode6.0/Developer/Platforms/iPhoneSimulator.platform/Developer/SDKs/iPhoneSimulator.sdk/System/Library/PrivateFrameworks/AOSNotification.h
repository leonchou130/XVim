//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/AOSNotification.framework/AOSNotification
// UUID: 6F50B621-CFE2-3318-8C7A-C2369E81B48F
//
//                           Arch: x86_64
//                Current version: 0.0.0
//          Compatibility version: 1.0.0
//                 Source version: 830.0.0.0.0
//            Minimum iOS version: 8.0.0
//                    SDK version: 8.0.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol AOSXPCClientProtocol <NSObject>
- (oneway void)didReceiveFMFAppPushToken:(NSString *)arg1;
- (oneway void)didReceiveFMFAppPushMessage:(NSDictionary *)arg1;
@end

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSSecureCoding <NSCoding>
+ (_Bool)supportsSecureCoding;
@end

@interface AOSCLLocation : CLLocation <NSSecureCoding>
{
}

+ (_Bool)supportsSecureCoding;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithCLLocation:(id)arg1;

@end

@interface AOSFMFAccountInfo : NSObject <NSSecureCoding>
{
    NSString *_dsid;
    NSString *_username;
    NSString *_appServerHost;
    NSString *_appAuthToken;
    NSDictionary *_additionalInfo;
    NSString *_aosServerHost;
    NSString *_aosServerProtocolScheme;
    NSString *_aosAPSEnvironment;
    NSString *_internalAuthToken;
    long long _appAuthTokenStatus;
    NSString *_legacyDsid;
    NSString *_legacyUsername;
}

+ (_Bool)supportsSecureCoding;
@property(retain, nonatomic) NSString *legacyUsername; // @synthesize legacyUsername=_legacyUsername;
@property(retain, nonatomic) NSString *legacyDsid; // @synthesize legacyDsid=_legacyDsid;
@property(nonatomic) long long appAuthTokenStatus; // @synthesize appAuthTokenStatus=_appAuthTokenStatus;
@property(retain, nonatomic) NSString *internalAuthToken; // @synthesize internalAuthToken=_internalAuthToken;
@property(retain, nonatomic) NSString *aosAPSEnvironment; // @synthesize aosAPSEnvironment=_aosAPSEnvironment;
@property(retain, nonatomic) NSString *aosServerProtocolScheme; // @synthesize aosServerProtocolScheme=_aosServerProtocolScheme;
@property(retain, nonatomic) NSString *aosServerHost; // @synthesize aosServerHost=_aosServerHost;
@property(retain, nonatomic) NSDictionary *additionalInfo; // @synthesize additionalInfo=_additionalInfo;
@property(retain, nonatomic) NSString *appAuthToken; // @synthesize appAuthToken=_appAuthToken;
@property(retain, nonatomic) NSString *appServerHost; // @synthesize appServerHost=_appServerHost;
@property(retain, nonatomic) NSString *username; // @synthesize username=_username;
@property(retain, nonatomic) NSString *dsid; // @synthesize dsid=_dsid;
- (void).cxx_destruct;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;

@end

@interface AOSLogger : NSObject
{
    _Bool _isInternalBuild;
    _Bool _logLevelsMaxedOut;
    _Bool _logLocationIndicatorSent;
}

+ (id)sharedInstance;
@property(nonatomic) _Bool logLocationIndicatorSent; // @synthesize logLocationIndicatorSent=_logLocationIndicatorSent;
@property(nonatomic) _Bool logLevelsMaxedOut; // @synthesize logLevelsMaxedOut=_logLevelsMaxedOut;
@property(nonatomic) _Bool isInternalBuild; // @synthesize isInternalBuild=_isInternalBuild;
- (void)maxOutLogging;
- (void)logAtLevel:(long long)arg1 facility:(id)arg2 filename:(const char *)arg3 lineNumber:(long long)arg4 function:(const char *)arg5 message:(id)arg6;
- (void)logSettingsDidChange;
- (id)init;

@end

@interface AOSNotifySession : NSObject <AOSXPCClientProtocol>
{
    NSXPCConnection *_xpcConnection;
    NSObject<OS_dispatch_queue> *_xpcConnectionCreationQueue;
    CDUnknownBlockType _fmfAppPushMsgHandler;
    CDUnknownBlockType _fmfAppPushTokenHandler;
}

+ (id)copyStoreAccount;
+ (id)sharedInstance;
@property(copy, nonatomic) CDUnknownBlockType fmfAppPushTokenHandler; // @synthesize fmfAppPushTokenHandler=_fmfAppPushTokenHandler;
@property(copy, nonatomic) CDUnknownBlockType fmfAppPushMsgHandler; // @synthesize fmfAppPushMsgHandler=_fmfAppPushMsgHandler;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *xpcConnectionCreationQueue; // @synthesize xpcConnectionCreationQueue=_xpcConnectionCreationQueue;
@property(retain, nonatomic) NSXPCConnection *xpcConnection; // @synthesize xpcConnection=_xpcConnection;
- (void).cxx_destruct;
- (id)retrieveAllAccounts:(id *)arg1;
- (void)stopListeningOnTopic:(id)arg1;
- (void)startListeningOnTopic:(id)arg1;
- (id)initWithDelegate:(id)arg1;
- (oneway void)didReceiveFMFAppPushToken:(id)arg1;
- (oneway void)didReceiveFMFAppPushMessage:(id)arg1;
- (_Bool)performMigration;
- (void)willDeleteiCloudAccountWithCompletion:(CDUnknownBlockType)arg1;
- (void)locationAuthorizationForShareMyLocationWithCompletion:(CDUnknownBlockType)arg1;
- (void)stopListeningForFMFAppPush;
- (void)startListeningForFMFAppPushInEnvironment:(id)arg1 withMessageHandler:(CDUnknownBlockType)arg2 tokenHandler:(CDUnknownBlockType)arg3;
- (void)renewFMFAccountCredentialsUsingCallback:(CDUnknownBlockType)arg1;
- (void)retrieveFMFAccountUsingCallback:(CDUnknownBlockType)arg1;
- (void)removeLegacyFMFAccountUsingCallback:(CDUnknownBlockType)arg1;
- (void)retrieveLegacyFMFAccountUsingCallback:(CDUnknownBlockType)arg1;
- (id)retrieveFMFAccount:(id *)arg1;
- (id)removeFMFAccountWithUsername:(id)arg1;
- (id)addFMFAccount:(id)arg1;
- (void)didChangeFMFAccountInfo:(id)arg1;
- (void)didExitFMFRegion:(id)arg1 atLocation:(id)arg2;
- (void)didEnterFMFRegion:(id)arg1 atLocation:(id)arg2;
- (id)iCloudAccount;
- (id)storeAccount;
- (id)fmfDeviceId;
- (id)fmipAccount;
- (id)fmipDeviceId;
- (id)newErrorForCode:(int)arg1 message:(id)arg2;
- (void)_destroyXPCConnection;
- (id)currentXPCConnection;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface AOSPreferencesUtil : NSObject
{
}

+ (void)setObject:(id)arg1 forKey:(id)arg2 inDomain:(id)arg3;
+ (id)objectForKey:(id)arg1 inDomain:(id)arg2;
+ (void)setData:(id)arg1 forKey:(id)arg2 inDomain:(id)arg3;
+ (id)dataForKey:(id)arg1 inDomain:(id)arg2;
+ (void)setArray:(id)arg1 forKey:(id)arg2 inDomain:(id)arg3;
+ (id)arrayForKey:(id)arg1 inDomain:(id)arg2;
+ (void)setDictionary:(id)arg1 forKey:(id)arg2 inDomain:(id)arg3;
+ (id)dictionaryForKey:(id)arg1 inDomain:(id)arg2;
+ (void)setDate:(id)arg1 forKey:(id)arg2 inDomain:(id)arg3;
+ (id)dateForKey:(id)arg1 inDomain:(id)arg2;
+ (void)setString:(id)arg1 forKey:(id)arg2 inDomain:(id)arg3;
+ (id)stringForKey:(id)arg1 inDomain:(id)arg2;
+ (void)setInteger:(long long)arg1 forKey:(id)arg2 inDomain:(id)arg3;
+ (long long)integerForKey:(id)arg1 inDomain:(id)arg2;
+ (void)setBool:(_Bool)arg1 forKey:(id)arg2 inDomain:(id)arg3;
+ (_Bool)boolForKey:(id)arg1 inDomain:(id)arg2;
+ (void)removeKey:(id)arg1 inDomain:(id)arg2;
+ (void)synchronizeDomain:(id)arg1;

@end

@interface AOSSynchronizer : NSObject
{
    _Bool _timeoutOccurred;
    double _timeout;
    NSObject<OS_dispatch_semaphore> *_sem;
    NSString *_info;
}

@property(retain, nonatomic) NSString *info; // @synthesize info=_info;
@property(retain, nonatomic) NSObject<OS_dispatch_semaphore> *sem; // @synthesize sem=_sem;
@property(nonatomic) double timeout; // @synthesize timeout=_timeout;
@property(nonatomic) _Bool timeoutOccurred; // @synthesize timeoutOccurred=_timeoutOccurred;
- (void).cxx_destruct;
- (id)loggingID;
- (void)wait;
- (void)signal;
- (id)initWithDescription:(id)arg1 andTimeout:(double)arg2;

@end

@interface NSMutableDictionary (AOSAdditions)
- (void)safelyMapKey:(id)arg1 toObject:(id)arg2;
- (void)safelySetObject:(id)arg1 forKey:(id)arg2;
@end

