//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CGAffineTransform {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct UIEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/Frameworks/iAd.framework/iAd
// UUID: 657CA482-C9C0-3A8C-A5F7-247436C56732
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 813.30.0.0.0
//            Minimum iOS version: 8.0.0
//                    SDK version: 8.0.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol ADAdRecipient <NSObject>
@property(readonly, nonatomic) UIViewController *presentingViewController;
@property(readonly, nonatomic) UIView *adSpaceView;
@property(readonly, nonatomic) long long options;
@property(readonly, nonatomic) int internalAdType;
- (void)resumeBannerMedia;
- (void)pauseBannerMedia;
- (void)storyboardViewControllerDidPresent;
- (void)serverStoryboardDidTransitionOut;
- (void)serverBannerViewDidFailToReceiveAdWithError:(NSError *)arg1;
- (void)serverBannerViewDidLoad;
- (void)serverBannerViewWillLoad;
- (void)setHostedWindowHostingHandle:(_UIHostedWindowHostingHandle *)arg1;
@end

@protocol ADAdSheetConnectionDelegate <NSObject>
- (void)configureConnection:(NSXPCConnection *)arg1;
- (NSString *)adSheetMachServiceName;

@optional
- (void)adSheetConnectionLost;
- (void)adSheetConnectionEstablished;
- (_Bool)shouldConnectToAdSheet;
@end

@protocol ADAdSheetProxyDelegate <NSObject>
- (NSDictionary *)additionalAdSheetLaunchOptions;
- (_Bool)shouldLaunchAdSheet;
@end

@protocol ADAdSpace_RPC
- (void)_remote_resumeBannerMedia;
- (void)_remote_pauseBannerMedia;
- (void)_remote_dismissPortraitOnlyViewController;
- (void)_remote_requestPortraitOnlyViewController;
- (void)_remote_dismissViewController;
- (void)_remote_actionViewControllerReadyForPresentation;
- (void)_remote_updateViewControllerSupportedOrientations:(unsigned long long)arg1;
- (void)_remote_requestViewControllerWithClassName:(NSString *)arg1 forAdSpaceControllerWithIdentifier:(NSString *)arg2;
- (void)_remote_openURL:(NSURL *)arg1;
- (void)_remote_creativeDidFailWithError:(NSError *)arg1;
- (void)_remote_adImpressionDidLoadWithPublicAttributes:(ADAdImpressionPublicAttributes *)arg1;
- (void)_remote_creativeWillLoad;
- (void)_remote_setHostedWindowHostingHandle:(_UIHostedWindowHostingHandle *)arg1;
@end

@protocol ADBannerViewDelegate <NSObject>

@optional
- (void)bannerViewActionDidFinish:(ADBannerView *)arg1;
- (_Bool)bannerViewActionShouldBegin:(ADBannerView *)arg1 willLeaveApplication:(_Bool)arg2;
- (void)bannerView:(ADBannerView *)arg1 didFailToReceiveAdWithError:(NSError *)arg2;
- (void)bannerViewDidLoadAd:(ADBannerView *)arg1;
- (void)bannerViewWillLoadAd:(ADBannerView *)arg1;
@end

@protocol ADBannerViewInternalDelegate <ADBannerViewDelegate>

@optional
- (void)bannerViewShouldResumeMedia:(ADBannerView *)arg1;
- (void)bannerViewShouldPauseMedia:(ADBannerView *)arg1;
- (UIViewController *)viewControllerForStoryboardPresentationFromBannerView:(ADBannerView *)arg1;
@end

@protocol ADInterstitialAdDelegate <NSObject>
- (void)interstitialAd:(ADInterstitialAd *)arg1 didFailWithError:(NSError *)arg2;
- (void)interstitialAdDidUnload:(ADInterstitialAd *)arg1;

@optional
- (void)interstitialAdActionDidFinish:(ADInterstitialAd *)arg1;
- (_Bool)interstitialAdActionShouldBegin:(ADInterstitialAd *)arg1 willLeaveApplication:(_Bool)arg2;
- (void)interstitialAdDidLoad:(ADInterstitialAd *)arg1;
- (void)interstitialAdWillLoad:(ADInterstitialAd *)arg1;
@end

@protocol ADPlayerDelegate <NSObject>
- (UIViewController *)viewControllerForActionFromAdPlayer:(ADPlayer *)arg1;
- (void)adPlayerDidFinishPlayback:(ADPlayer *)arg1;
- (void)adPlayer:(ADPlayer *)arg1 elapsedTime:(double)arg2 totalTime:(double)arg3;
- (void)adPlayer:(ADPlayer *)arg1 didChangePlaybackState:(unsigned long long)arg2;
- (void)adPlayer:(ADPlayer *)arg1 readyForPlaybackWithAVPlayer:(AVPlayer *)arg2 impressionProperties:(ADAdImpressionPublicAttributes *)arg3;
- (void)adPlayerFailedToPlayWithUnknownError:(ADPlayer *)arg1;
- (void)adPlayerFailedToLoadAsset:(ADPlayer *)arg1;
- (void)adPlayerDidTimeout:(ADPlayer *)arg1;
@end

@protocol ADPrerollBottomBarDelegate <NSObject>
- (void)bottomBarPauseButtonTapped:(ADPrerollBottomBar *)arg1;
- (void)bottomBarPlayButtonTapped:(ADPrerollBottomBar *)arg1;
- (void)bottomBarSkipButtonTapped:(ADPrerollBottomBar *)arg1;
- (void)bottomBarActionButtonTapped:(ADPrerollBottomBar *)arg1;
@end

@protocol ADPrerollTopBarDelegate <NSObject>
- (void)topBarScaleToFit:(ADPrerollTopBar *)arg1;
- (void)topBarScaleToFill:(ADPrerollTopBar *)arg1;
- (void)topBarDoneButtonTapped:(ADPrerollTopBar *)arg1;
@end

@protocol ADPrerollViewDelegate <NSObject>
- (void)actionButtonPressed;
- (void)skipButtonPressed;
- (void)pauseButtonPressed;
- (void)playButtonPressed;
- (void)doneButtonPressed;
- (_Bool)prerollViewRequestsEmbeddedStatus;
@end

@protocol ADSActionViewController_RPC
- (void)_remote_viewControllerCreatedForAdSpaceControllerWithIdentifier:(NSString *)arg1;
@end

@protocol ADSAdSpace_RPC
- (void)_priv_loadAd:(NSDictionary *)arg1;
- (void)_priv_adSpaceDidDisappear;
- (void)_priv_adSpaceDidAppear;
- (void)_remote_playbackFailedForURL:(NSString *)arg1;
- (void)_remote_playbackFinishedForContentHash:(NSData *)arg1;
- (void)_remote_playbackResumed;
- (void)_remote_playbackPaused;
- (void)_remote_playbackStartedForImpressionSource:(int)arg1;
- (void)_remote_reportPreRollDidStop;
- (void)_remote_reportPreRollDidStart;
- (void)_remote_interstitialCreativeWasDismissed;
- (void)_remote_interstitialRemovedFromSuperview;
- (void)_remote_bannerCancelAction;
- (void)_remote_bannerRefuseAction;
- (void)_remote_bannerBeginActionFromFrame:(NSValue *)arg1 tapLocation:(NSValue *)arg2 completionHandler:(void (^)(_Bool))arg3;
- (void)_remote_setShouldNotCycle:(_Bool)arg1;
- (void)_remote_setAdSpaceType:(int)arg1;
- (void)_remote_setFrame:(NSValue *)arg1;
- (void)_remote_setVisibility:(long long)arg1;
- (void)_remote_setContext:(NSSet *)arg1;
- (void)_remote_setAuthenticationUserName:(NSString *)arg1;
- (void)_remote_setSection:(NSString *)arg1;
- (void)_priv_cycleImpressionImmediately;
- (void)_priv_setServerURL:(NSURL *)arg1;
- (void)_remote_setIdentifier:(NSString *)arg1;
- (void)_remote_close;
- (void)_remote_setupComplete;
@end

@protocol ADSOptInConnection_RPC
- (void)getiAdIDsWithCompletionHandler:(void (^)(NSString *, NSString *))arg1;
- (void)handleAccountChange;
- (void)refreshOptInStatusRefreshingWeakToken:(_Bool)arg1 withCompletionHandler:(void (^)(long long))arg2;
- (void)refreshOptInStatus;
- (void)setOptInStatus:(_Bool)arg1 completionHandler:(void (^)(long long))arg2;
@end

@protocol ADSSession_RPC
- (void)_priv_removeRecordForAccountWithIdentifier:(NSNumber *)arg1;
- (void)_remote_acquireMatchSlotWithBodyParameters:(NSDictionary *)arg1 completionHandler:(void (^)(_Bool, NSDictionary *, NSError *))arg2;
- (void)_remote_reportClientEvent:(NSData *)arg1;
- (void)_remote_reportStationTileImpression:(NSData *)arg1;
- (void)_remote_optimalTransmissionWindowDidOpen;
- (void)_remote_didFinishAdPlaybackForSlot:(NSString *)arg1 skippedCount:(long long)arg2;
- (void)_remote_willBeginAdPlaybackForSlot:(NSString *)arg1 visuallyEngaged:(_Bool)arg2 adSpaceType:(int)arg3;
- (void)_remote_requestAdsForSlot:(ADAdSlot *)arg1 completionHandler:(void (^)(NSArray *, NSArray *))arg2;
- (void)_remote_didStopPlaybackOnStation:(NSData *)arg1;
- (void)_remote_didBeginPlaybackOnStation:(NSData *)arg1 song:(NSData *)arg2;
- (void)_remote_didEnterStation:(NSData *)arg1;
- (void)_remote_setVisuallyEngaged:(_Bool)arg1;
- (void)_remote_disablePolicyEngine;
- (void)_remote_enablePolicyEngine;
- (void)_remote_addClientToSegments:(NSArray *)arg1 replaceExisting:(_Bool)arg2;
- (void)_remote_lookupAdConversionDetails:(void (^)(NSDate *, NSDate *))arg1;
- (void)_remote_determineAppInstallAttributionWithCompletionHandler:(void (^)(_Bool))arg1;
- (void)_remote_forwardDeviceOrientation:(long long)arg1 statusBarOrientation:(long long)arg2;
- (void)_remote_createProxyForAdSpace:(id <ADAdSpace_RPC><NSObject>)arg1 configuration:(ADAdSpaceConfiguration *)arg2 reply:(void (^)(id <ADSAdSpace_RPC><NSObject>))arg3;
- (void)_remote_setClientLinkedOnVersion:(NSString *)arg1;
- (void)_remote_didBecomeActive;
- (void)_remote_willResignActive;
@end

@protocol ADSession_RPC
- (void)_remote_policyEngineTestStationDescriptionsComputed:(NSDictionary *)arg1;
- (void)_remote_heartbeatTokenDidChange:(NSData *)arg1 expirationDate:(double)arg2 error:(NSError *)arg3;
@end

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSSecureCoding <NSCoding>
+ (_Bool)supportsSecureCoding;
@end

@protocol UIGestureRecognizerDelegate <NSObject>

@optional
- (_Bool)gestureRecognizer:(UIGestureRecognizer *)arg1 shouldReceiveTouch:(UITouch *)arg2;
- (_Bool)gestureRecognizer:(UIGestureRecognizer *)arg1 shouldBeRequiredToFailByGestureRecognizer:(UIGestureRecognizer *)arg2;
- (_Bool)gestureRecognizer:(UIGestureRecognizer *)arg1 shouldRequireFailureOfGestureRecognizer:(UIGestureRecognizer *)arg2;
- (_Bool)gestureRecognizer:(UIGestureRecognizer *)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(UIGestureRecognizer *)arg2;
- (_Bool)gestureRecognizerShouldBegin:(UIGestureRecognizer *)arg1;
@end

@protocol UIViewControllerTransitioningDelegate <NSObject>

@optional
- (UIPresentationController *)presentationControllerForPresentedViewController:(UIViewController *)arg1 presentingViewController:(UIViewController *)arg2 sourceViewController:(UIViewController *)arg3;
- (id <UIViewControllerInteractiveTransitioning>)interactionControllerForDismissal:(id <UIViewControllerAnimatedTransitioning>)arg1;
- (id <UIViewControllerInteractiveTransitioning>)interactionControllerForPresentation:(id <UIViewControllerAnimatedTransitioning>)arg1;
- (id <UIViewControllerAnimatedTransitioning>)animationControllerForDismissedController:(UIViewController *)arg1;
- (id <UIViewControllerAnimatedTransitioning>)animationControllerForPresentedController:(UIViewController *)arg1 presentingController:(UIViewController *)arg2 sourceController:(UIViewController *)arg3;
@end

@protocol _UIViewControllerContentViewEmbedding
- (void)viewControllerViewDidLayoutSubviews:(UIViewController *)arg1;
- (void)viewControllerViewWillLayoutSubviews:(UIViewController *)arg1;
- (void)viewController:(UIViewController *)arg1 viewDidDisappear:(_Bool)arg2;
- (void)viewController:(UIViewController *)arg1 viewWillDisappear:(_Bool)arg2;
- (void)viewController:(UIViewController *)arg1 viewDidAppear:(_Bool)arg2;
- (void)viewController:(UIViewController *)arg1 viewWillAppear:(_Bool)arg2;
@end

@interface ADAdImpressionPublicAttributes : NSObject <NSSecureCoding>
{
    _Bool _actionLeavesApplication;
    _Bool _unbranded;
    _Bool _actionViewControllerHidesStatusBar;
    int _action;
    NSString *_accessibilityLabel;
    double _skipThreshold;
    double _minimumIntervalBetweenPresentations;
    unsigned long long _actionViewControllerPresentationOrientationMask;
    long long _modalPresentationStyle;
    NSArray *_videoAssets;
    NSString *_uniqueIdentifier;
    NSURL *_audioURL;
    NSURL *_staticImageURL;
    NSURL *_logoImageURL;
    NSString *_headlineForLCD;
    NSString *_descriptionForLCD;
}

+ (_Bool)supportsSecureCoding;
@property(copy, nonatomic) NSString *descriptionForLCD; // @synthesize descriptionForLCD=_descriptionForLCD;
@property(copy, nonatomic) NSString *headlineForLCD; // @synthesize headlineForLCD=_headlineForLCD;
@property(retain, nonatomic) NSURL *logoImageURL; // @synthesize logoImageURL=_logoImageURL;
@property(retain, nonatomic) NSURL *staticImageURL; // @synthesize staticImageURL=_staticImageURL;
@property(retain, nonatomic) NSURL *audioURL; // @synthesize audioURL=_audioURL;
@property(copy, nonatomic) NSString *uniqueIdentifier; // @synthesize uniqueIdentifier=_uniqueIdentifier;
@property(retain, nonatomic) NSArray *videoAssets; // @synthesize videoAssets=_videoAssets;
@property(nonatomic) long long modalPresentationStyle; // @synthesize modalPresentationStyle=_modalPresentationStyle;
@property(nonatomic) _Bool actionViewControllerHidesStatusBar; // @synthesize actionViewControllerHidesStatusBar=_actionViewControllerHidesStatusBar;
@property(nonatomic) unsigned long long actionViewControllerPresentationOrientationMask; // @synthesize actionViewControllerPresentationOrientationMask=_actionViewControllerPresentationOrientationMask;
@property(nonatomic) double minimumIntervalBetweenPresentations; // @synthesize minimumIntervalBetweenPresentations=_minimumIntervalBetweenPresentations;
@property(nonatomic) double skipThreshold; // @synthesize skipThreshold=_skipThreshold;
@property(copy, nonatomic) NSString *accessibilityLabel; // @synthesize accessibilityLabel=_accessibilityLabel;
@property(nonatomic) _Bool unbranded; // @synthesize unbranded=_unbranded;
@property(nonatomic) int action; // @synthesize action=_action;
@property(nonatomic) _Bool actionLeavesApplication; // @synthesize actionLeavesApplication=_actionLeavesApplication;
- (id)_actionDescription;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;

@end

@interface ADAdSlot : NSObject <ADBannerViewInternalDelegate, NSSecureCoding>
{
    id <ADAdSlotDelegate> _delegate;
    _Bool _gatewayAdSlot;
    _Bool _didBeginPlayback;
    _Bool _didRequest;
    _Bool _didReportFinish;
    NSString *_identifier;
    NSData *_stationData;
    NSData *_previousSongData;
    NSData *_followingSongData;
    NSMutableArray *_visuallyEngagedBanners;
    NSMutableArray *_visuallyDisengagedBanners;
    NSMutableArray *_pendingBannerLoads;
    CDUnknownBlockType _completionHandler;
}

+ (_Bool)supportsSecureCoding;
@property(nonatomic) _Bool didReportFinish; // @synthesize didReportFinish=_didReportFinish;
@property(nonatomic) _Bool didRequest; // @synthesize didRequest=_didRequest;
@property(copy, nonatomic) CDUnknownBlockType completionHandler; // @synthesize completionHandler=_completionHandler;
@property(retain, nonatomic) NSMutableArray *pendingBannerLoads; // @synthesize pendingBannerLoads=_pendingBannerLoads;
@property(nonatomic) _Bool didBeginPlayback; // @synthesize didBeginPlayback=_didBeginPlayback;
@property(retain, nonatomic) NSMutableArray *visuallyDisengagedBanners; // @synthesize visuallyDisengagedBanners=_visuallyDisengagedBanners;
@property(retain, nonatomic) NSMutableArray *visuallyEngagedBanners; // @synthesize visuallyEngagedBanners=_visuallyEngagedBanners;
@property(copy, nonatomic) NSData *followingSongData; // @synthesize followingSongData=_followingSongData;
@property(copy, nonatomic) NSData *previousSongData; // @synthesize previousSongData=_previousSongData;
@property(copy, nonatomic) NSData *stationData; // @synthesize stationData=_stationData;
@property(nonatomic) _Bool gatewayAdSlot; // @synthesize gatewayAdSlot=_gatewayAdSlot;
@property(copy, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
- (void)bannerViewDidLoadAd:(id)arg1;
- (void)bannerView:(id)arg1 didFailToReceiveAdWithError:(id)arg2;
@property(readonly, copy) NSString *description;
@property(readonly, retain, nonatomic) NSArray *ads;
- (void)_visuallyEngagedDidChange;
- (void)didFinishPlaybackOfAds:(id)arg1 skippedCount:(long long)arg2;
- (void)willBeginPlaybackOfAds:(id)arg1 forSpace:(int)arg2;
- (void)_considerInvokingCompletionHandler;
- (void)loadVisuallyEngagedAds:(id)arg1 visuallyDisengagedAds:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (id)_bannersForAds:(id)arg1;
@property(nonatomic) __weak id <ADAdSlotDelegate> delegate;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)init;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ADAdSpace : NSObject <UIViewControllerTransitioningDelegate, ADAdSpace_RPC>
{
    id <ADAdRecipient> _recipient;
    _Bool _visibilityCheckScheduled;
    _Bool _serviceAdSpaceRequestInProgress;
    _Bool _shouldPresentActionViewControllerWhenReady;
    _Bool _actionViewControllerReadyForPresentation;
    _Bool _actionViewControllerWantsDismissal;
    id <ADSAdSpace_RPC><NSObject> _serviceAdSpace;
    NSString *_identifier;
    NSURL *_serverURL;
    NSString *_advertisingSection;
    NSString *_authenticationUserName;
    NSSet *_context;
    ADAdImpressionPublicAttributes *_currentAdImpressionPublicAttributes;
    long long _visibility;
    double _lastSlowCheck;
    _UIAsyncInvocation *_remoteViewControllerRequestCancelationInvocation;
    _ADRemoteViewController *_remoteViewController;
    _ADRemoteViewController *_portraitOnlyViewController;
    NSDictionary *_adToLoad;
    struct CGRect _viewFrame;
}

@property(retain, nonatomic) NSDictionary *adToLoad; // @synthesize adToLoad=_adToLoad;
@property(nonatomic) _Bool actionViewControllerWantsDismissal; // @synthesize actionViewControllerWantsDismissal=_actionViewControllerWantsDismissal;
@property(nonatomic) _Bool actionViewControllerReadyForPresentation; // @synthesize actionViewControllerReadyForPresentation=_actionViewControllerReadyForPresentation;
@property(nonatomic) _Bool shouldPresentActionViewControllerWhenReady; // @synthesize shouldPresentActionViewControllerWhenReady=_shouldPresentActionViewControllerWhenReady;
@property(retain, nonatomic) _ADRemoteViewController *portraitOnlyViewController; // @synthesize portraitOnlyViewController=_portraitOnlyViewController;
@property(retain, nonatomic) _ADRemoteViewController *remoteViewController; // @synthesize remoteViewController=_remoteViewController;
@property(retain, nonatomic) _UIAsyncInvocation *remoteViewControllerRequestCancelationInvocation; // @synthesize remoteViewControllerRequestCancelationInvocation=_remoteViewControllerRequestCancelationInvocation;
@property(nonatomic) _Bool serviceAdSpaceRequestInProgress; // @synthesize serviceAdSpaceRequestInProgress=_serviceAdSpaceRequestInProgress;
@property(nonatomic) double lastSlowCheck; // @synthesize lastSlowCheck=_lastSlowCheck;
@property(nonatomic) _Bool visibilityCheckScheduled; // @synthesize visibilityCheckScheduled=_visibilityCheckScheduled;
@property(nonatomic) long long visibility; // @synthesize visibility=_visibility;
@property(retain, nonatomic) ADAdImpressionPublicAttributes *currentAdImpressionPublicAttributes; // @synthesize currentAdImpressionPublicAttributes=_currentAdImpressionPublicAttributes;
@property(copy, nonatomic) NSSet *context; // @synthesize context=_context;
@property(copy, nonatomic) NSString *authenticationUserName; // @synthesize authenticationUserName=_authenticationUserName;
@property(copy, nonatomic) NSString *advertisingSection; // @synthesize advertisingSection=_advertisingSection;
@property(copy, nonatomic) NSURL *serverURL; // @synthesize serverURL=_serverURL;
@property(nonatomic) struct CGRect viewFrame; // @synthesize viewFrame=_viewFrame;
@property(copy, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
@property(retain, nonatomic) id <ADSAdSpace_RPC><NSObject> serviceAdSpace; // @synthesize serviceAdSpace=_serviceAdSpace;
- (void)_remote_dismissPortraitOnlyViewController;
- (void)_remote_requestPortraitOnlyViewController;
- (void)_remote_dismissViewController;
- (void)_remote_actionViewControllerReadyForPresentation;
- (void)_remote_updateViewControllerSupportedOrientations:(unsigned long long)arg1;
- (void)_remote_requestViewControllerWithClassName:(id)arg1 forAdSpaceControllerWithIdentifier:(id)arg2;
- (void)_considerPresentingActionViewController;
- (void)_remote_resumeBannerMedia;
- (void)_remote_pauseBannerMedia;
- (void)_remote_openURL:(id)arg1;
- (void)_remote_creativeDidFailWithError:(id)arg1;
- (void)_remote_adImpressionDidLoadWithPublicAttributes:(id)arg1;
- (void)_remote_creativeWillLoad;
- (void)_remote_setHostedWindowHostingHandle:(id)arg1;
- (void)interstitialWasRemovedFromSuperview;
- (void)cancelBannerViewAction;
- (void)refuseBannerViewAction;
- (void)executeBannerViewActionFrom:(struct CGRect)arg1 withTapLocation:(struct CGPoint)arg2;
- (void)setAdSpaceType:(int)arg1;
- (void)loadAd:(id)arg1;
- (void)_updateAllProperties;
- (void)updateVisibility;
- (void)_clientApplicationDidBecomeActive;
- (void)_clientApplicationDidEnterBackground;
- (void)close;
- (void)_closeConnectionIfNecessary;
@property(readonly, nonatomic) id <ADAdRecipient> recipient;
- (void)_serviceConnectionLost;
- (void)_requestServiceAdSpace;
@property(readonly, nonatomic) ADAdSpaceConfiguration *configuration;
@property(readonly, nonatomic) NSString *connectionAssertionIdentifier;
@property(readonly, copy) NSString *description;
- (id)initForRecipient:(id)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ADAdSpaceConfiguration : NSObject <NSSecureCoding>
{
    int _creativeType;
    long long _options;
    NSString *_identifier;
    NSURL *_serverURL;
    NSString *_advertisingSection;
    NSString *_authenticationUserName;
    NSSet *_context;
}

+ (_Bool)supportsSecureCoding;
@property(copy, nonatomic) NSSet *context; // @synthesize context=_context;
@property(copy, nonatomic) NSString *authenticationUserName; // @synthesize authenticationUserName=_authenticationUserName;
@property(copy, nonatomic) NSString *advertisingSection; // @synthesize advertisingSection=_advertisingSection;
@property(copy, nonatomic) NSURL *serverURL; // @synthesize serverURL=_serverURL;
@property(copy, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
@property(nonatomic) long long options; // @synthesize options=_options;
@property(nonatomic) int creativeType; // @synthesize creativeType=_creativeType;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;

@end

@interface ADBannerView : UIView <ADAdRecipient>
{
    id <ADBannerViewDelegate> _weakDelegate;
    id <ADBannerViewInternalDelegate> _weakInternalDelegate;
    _Bool _bannerViewActionInProgress;
    _Bool _createdForIBInternal;
    _Bool _hasFailedHitTest;
    _Bool _dimmed;
    _Bool _determiningConstraintBasedWidth;
    _Bool _inSecondConstraintsPass;
    int _internalAdType;
    long long _options;
    long long _adType;
    NSString *_advertisingSection;
    _UIRemoteView *_remoteView;
    UIView *_dimmerView;
    UIView *_highlightClippedView;
    UIView *_highlightHittableView;
    NSTimer *_highlightUpdateTimer;
    ADTapGestureRecognizer *_gestureRecognizer;
    NSString *_authenticationUserName;
    NSURL *_serverURL;
    ADAdSpace *_adSpace;
    double _constraintBasedWidth;
}

+ (struct CGSize)_sizeThatFitsSize:(struct CGSize)arg1 adType:(int)arg2 statusBarOrientationIsPortrait:(_Bool)arg3;
+ (struct CGRect)_frameThatFits:(struct CGRect)arg1 adType:(int)arg2 statusBarOrientationIsPortrait:(_Bool)arg3;
+ (struct CGSize)_landscapeBannerSize;
+ (struct CGSize)_portraitBannerSize;
+ (struct CGSize)sizeFromBannerContentSizeIdentifier:(id)arg1;
+ (void)setServerURL:(id)arg1;
@property(nonatomic) _Bool inSecondConstraintsPass; // @synthesize inSecondConstraintsPass=_inSecondConstraintsPass;
@property(nonatomic) double constraintBasedWidth; // @synthesize constraintBasedWidth=_constraintBasedWidth;
@property(nonatomic) _Bool determiningConstraintBasedWidth; // @synthesize determiningConstraintBasedWidth=_determiningConstraintBasedWidth;
@property(nonatomic) _Bool dimmed; // @synthesize dimmed=_dimmed;
@property(retain, nonatomic) ADAdSpace *adSpace; // @synthesize adSpace=_adSpace;
@property(nonatomic) _Bool hasFailedHitTest; // @synthesize hasFailedHitTest=_hasFailedHitTest;
@property(readonly, nonatomic) _Bool createdForIBInternal; // @synthesize createdForIBInternal=_createdForIBInternal;
@property(copy, nonatomic) NSURL *serverURL; // @synthesize serverURL=_serverURL;
@property(copy, nonatomic) NSString *authenticationUserName; // @synthesize authenticationUserName=_authenticationUserName;
@property(retain, nonatomic) ADTapGestureRecognizer *gestureRecognizer; // @synthesize gestureRecognizer=_gestureRecognizer;
@property(retain, nonatomic) NSTimer *highlightUpdateTimer; // @synthesize highlightUpdateTimer=_highlightUpdateTimer;
@property(retain, nonatomic) UIView *highlightHittableView; // @synthesize highlightHittableView=_highlightHittableView;
@property(retain, nonatomic) UIView *highlightClippedView; // @synthesize highlightClippedView=_highlightClippedView;
@property(retain, nonatomic) UIView *dimmerView; // @synthesize dimmerView=_dimmerView;
@property(retain, nonatomic) _UIRemoteView *remoteView; // @synthesize remoteView=_remoteView;
@property(copy, nonatomic) NSString *advertisingSection; // @synthesize advertisingSection=_advertisingSection;
@property(nonatomic, getter=isBannerViewActionInProgress) _Bool bannerViewActionInProgress; // @synthesize bannerViewActionInProgress=_bannerViewActionInProgress;
@property(readonly, nonatomic) long long adType; // @synthesize adType=_adType;
@property(readonly, nonatomic) int internalAdType; // @synthesize internalAdType=_internalAdType;
@property(readonly, nonatomic) long long options; // @synthesize options=_options;
- (id)context;
- (void)setContext:(id)arg1;
- (void)loadAd:(id)arg1;
- (id)publicImpressionAttributes;
- (void)scheduleAd;
- (void)cancelScheduledAd;
- (void)bannerDidDisappear;
- (void)bannerDidAppear;
- (void)playbackFailed:(id)arg1;
- (void)playbackFinished:(id)arg1;
- (void)playbackResumed;
- (void)playbackPaused;
- (void)playbackStartedForImpressionSource:(int)arg1;
- (void)playbackStarted;
- (id)descriptionForLCD;
- (id)headlineForLCD;
- (id)logoImageURL;
- (id)staticImageURL;
- (id)videoAssets;
- (id)audioURL;
- (void)_setInSecondConstraintsPass:(_Bool)arg1;
- (void)updateConstraints;
- (struct CGSize)intrinsicContentSize;
- (void)_prepareForSecondIntrinsicContentSizeCalculationWithLayoutEngineBounds:(struct CGRect)arg1;
- (void)_prepareForFirstIntrinsicContentSizeCalculation;
- (_Bool)_needsDoubleUpdateConstraintsPass;
- (int)action;
- (double)skipThreshold;
- (void)resumeImpressionCycling;
- (void)suspendImpressionCycling;
- (void)setInternalDelegate:(id)arg1;
- (id)internalDelegate;
- (void)_forwardErrorToDelegate:(id)arg1;
- (void)cancelBannerViewAction;
- (void)setIdentifier:(id)arg1;
- (id)identifier;
- (id)currentContentSizeIdentifier;
- (void)setCurrentContentSizeIdentifier:(id)arg1;
- (id)requiredContentSizeIdentifiers;
- (void)setRequiredContentSizeIdentifiers:(id)arg1;
@property(nonatomic) __weak id <ADBannerViewDelegate> delegate;
- (void)resumeBannerMedia;
- (void)pauseBannerMedia;
- (void)storyboardViewControllerDidPresent;
- (void)serverStoryboardDidTransitionOut;
- (void)serverBannerViewDidFailToReceiveAdWithError:(id)arg1;
- (void)serverBannerViewDidLoad;
- (void)serverBannerViewWillLoad;
- (void)setHostedWindowHostingHandle:(id)arg1;
@property(readonly, nonatomic) UIViewController *presentingViewController;
- (void)_resetHighlightTimer;
- (void)_updateHighlight:(id)arg1;
- (void)layoutSubviews;
- (void)_bannerTapped:(id)arg1;
- (void)beginAction;
- (void)didMoveToWindow;
- (void)setCenter:(struct CGPoint)arg1;
- (void)setAlpha:(double)arg1;
- (void)setHidden:(_Bool)arg1;
- (void)setTransform:(struct CGAffineTransform)arg1;
- (void)setBounds:(struct CGRect)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)setAutoresizingMask:(unsigned long long)arg1;
- (void)resizeWithOldSuperviewSize:(struct CGSize)arg1;
- (void)prerollDidStop;
- (void)prerollDidStart;
- (id)uniqueIdentifier;
@property(readonly, nonatomic, getter=isBannerLoaded) _Bool bannerLoaded;
- (void)cycleImpressionImmediately;
- (void)encodeWithCoder:(id)arg1;
- (id)_accessibilityUserTestingElementAttributes;
@property(readonly, nonatomic) UIView *adSpaceView;
- (void)_commonInit;
- (id)initFromIBWithFrame:(struct CGRect)arg1 adType:(long long)arg2;
- (id)initFromIBWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)_initWithInternalAdType:(int)arg1 options:(long long)arg2;
- (id)initWithAdType:(long long)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ADClient : NSObject
{
}

+ (id)sharedClient;
- (void)addClientToSegments:(id)arg1 replaceExisting:(_Bool)arg2;
- (void)lookupAdConversionDetails:(CDUnknownBlockType)arg1;
- (void)determineAppInstallationAttributionWithCompletionHandler:(CDUnknownBlockType)arg1;

@end

@interface ADCountdownButton : UIControl
{
    _Bool _dimmed;
    UIImage *_iconImage;
    UIImage *_dimmedIconImage;
    UIImageView *_backgroundView;
    UIImageView *_iconView;
    UIView *_outlineView;
    CAShapeLayer *_outlineProgressLayer;
}

+ (id)_inactiveCloseBoxImage;
+ (id)_closeBoxImage;
@property(retain, nonatomic) CAShapeLayer *outlineProgressLayer; // @synthesize outlineProgressLayer=_outlineProgressLayer;
@property(retain, nonatomic) UIView *outlineView; // @synthesize outlineView=_outlineView;
@property(retain, nonatomic) UIImageView *iconView; // @synthesize iconView=_iconView;
@property(retain, nonatomic) UIImageView *backgroundView; // @synthesize backgroundView=_backgroundView;
@property(retain, nonatomic) UIImage *dimmedIconImage; // @synthesize dimmedIconImage=_dimmedIconImage;
@property(retain, nonatomic) UIImage *iconImage; // @synthesize iconImage=_iconImage;
@property(nonatomic) _Bool dimmed; // @synthesize dimmed=_dimmed;
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;
- (unsigned long long)accessibilityTraits;
- (_Bool)isAccessibilityElement;
- (void)startEnablingButtonWithCountdownDuration:(double)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)setDimmed:(_Bool)arg1 animated:(_Bool)arg2;
- (void)setHighlighted:(_Bool)arg1;
- (void)setEnabled:(_Bool)arg1;
- (void)setCountdownProgress:(double)arg1;
- (double)countdownProgress;
- (struct CGSize)intrinsicContentSize;
- (id)init;
- (void)dealloc;

@end

@interface ADInterstitialAd : NSObject <ADAdRecipient>
{
    id <ADInterstitialAdDelegate> _delegate;
    id <ADInterstitialAdDelegate> _internalDelegate;
    UIViewController *_internalPresentingViewController;
    _Bool _loaded;
    _Bool _actionInProgress;
    _Bool _canLoadMoreThanOnce;
    _Bool _hasLoadedFirstAd;
    int _creativeType;
    long long _options;
    ADInterstitialView *_interstitialView;
    ADAdSpace *_adSpace;
    ADInterstitialAdPresentationViewController *_presentationViewController;
}

@property(retain, nonatomic) ADInterstitialAdPresentationViewController *presentationViewController; // @synthesize presentationViewController=_presentationViewController;
@property(nonatomic) int creativeType; // @synthesize creativeType=_creativeType;
@property(nonatomic) _Bool hasLoadedFirstAd; // @synthesize hasLoadedFirstAd=_hasLoadedFirstAd;
@property(nonatomic) _Bool canLoadMoreThanOnce; // @synthesize canLoadMoreThanOnce=_canLoadMoreThanOnce;
@property(retain, nonatomic) ADAdSpace *adSpace; // @synthesize adSpace=_adSpace;
@property(retain, nonatomic) ADInterstitialView *interstitialView; // @synthesize interstitialView=_interstitialView;
@property(nonatomic, getter=isActionInProgress) _Bool actionInProgress; // @synthesize actionInProgress=_actionInProgress;
@property(readonly, nonatomic, getter=isLoaded) _Bool loaded; // @synthesize loaded=_loaded;
@property(readonly, nonatomic) long long options; // @synthesize options=_options;
- (void)resumeBannerMedia;
- (void)pauseBannerMedia;
- (void)storyboardViewControllerDidPresent;
- (void)serverStoryboardDidTransitionOut;
- (void)serverBannerViewDidFailToReceiveAdWithError:(id)arg1;
- (void)serverBannerViewDidLoad;
- (_Bool)_considerClosingAdSpace;
- (void)serverBannerViewWillLoad;
- (void)setHostedWindowHostingHandle:(id)arg1;
@property(readonly, nonatomic) int internalAdType;
- (void)handleTapOnInterstitialViewAtLocation:(struct CGPoint)arg1;
- (void)_dismissModalInterstitial;
- (int)clickAction;
@property(copy, nonatomic) NSSet *context;
- (void)setAuthenticationUserName:(id)arg1;
- (void)setSection:(id)arg1;
- (void)setServerURL:(id)arg1;
- (id)serverURL;
- (id)identifier;
@property(nonatomic) __weak id <ADInterstitialAdDelegate> internalDelegate;
@property(nonatomic) __weak id <ADInterstitialAdDelegate> delegate;
- (void)_presentFromViewController:(id)arg1;
- (void)presentFromViewController:(id)arg1;
- (_Bool)presentInView:(id)arg1;
- (void)cancelAction;
- (void)setLoaded:(_Bool)arg1;
@property(readonly, nonatomic) UIViewController *presentingViewController;
@property(nonatomic) __weak UIViewController *internalPresentingViewController;
@property(readonly, nonatomic) UIView *adSpaceView;
- (id)initWithCreativeType:(int)arg1 options:(long long)arg2;
- (id)init;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ADInterstitialAdPresentationViewController : UIViewController
{
    ADInterstitialAd *_interstitialAd;
    ADCountdownButton *_closeButton;
}

@property(retain, nonatomic) ADCountdownButton *closeButton; // @synthesize closeButton=_closeButton;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidLayoutSubviews;
- (_Bool)wantsFullScreenLayout;
- (_Bool)prefersStatusBarHidden;
- (void)loadView;
@property(readonly, nonatomic) __weak ADInterstitialAd *interstitialAd;
- (id)initForInterstitialAd:(id)arg1;
- (void)dealloc;

@end

@interface ADInterstitialView : UIView
{
    ADInterstitialAd *_interstitialAd;
    _Bool _dimmed;
    ADTapGestureRecognizer *_tapGestureRecognizer;
    _UIRemoteView *_remoteView;
    UIView *_dimmerView;
    ADTapGestureRecognizer *_gestureRecognizer;
    struct CGRect _dismissButtonRect;
}

@property(nonatomic) _Bool dimmed; // @synthesize dimmed=_dimmed;
@property(retain, nonatomic) ADTapGestureRecognizer *gestureRecognizer; // @synthesize gestureRecognizer=_gestureRecognizer;
@property(retain, nonatomic) UIView *dimmerView; // @synthesize dimmerView=_dimmerView;
@property(retain, nonatomic) _UIRemoteView *remoteView; // @synthesize remoteView=_remoteView;
@property(nonatomic) struct CGRect dismissButtonRect; // @synthesize dismissButtonRect=_dismissButtonRect;
@property(readonly, nonatomic) ADTapGestureRecognizer *tapGestureRecognizer; // @synthesize tapGestureRecognizer=_tapGestureRecognizer;
- (void)_gestureHandler:(id)arg1;
- (struct CGSize)intrinsicContentSize;
- (void)didMoveToWindow;
- (void)removeFromSuperview;
- (void)setCenter:(struct CGPoint)arg1;
- (void)setAlpha:(double)arg1;
- (void)setHidden:(_Bool)arg1;
- (void)setTransform:(struct CGAffineTransform)arg1;
- (void)setBounds:(struct CGRect)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)setHostedWindowHostingHandle:(id)arg1;
- (id)interstitialAd;
- (id)initForInterstitialAd:(id)arg1;
- (void)dealloc;

@end

@interface ADOptInManager : NSObject <ADAdSheetConnectionDelegate, ADAdSheetProxyDelegate>
{
    ADAdSheetConnection *_connection;
}

+ (id)sharedManager;
@property(retain, nonatomic) ADAdSheetConnection *connection; // @synthesize connection=_connection;
- (id)additionalAdSheetLaunchOptions;
- (_Bool)shouldLaunchAdSheet;
- (void)getiAdIDsWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)handleAccountChange;
- (void)refreshOptInStatusRefreshingWeakToken:(_Bool)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
- (void)refreshOptInStatus;
- (void)setOptInStatus:(_Bool)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)configureConnection:(id)arg1;
- (id)adSheetMachServiceName;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ADPlayer : NSObject <ADBannerViewInternalDelegate>
{
    id <ADPlayerDelegate> _delegate;
    _Bool _playbackHasBegun;
    AVPlayerItem *_avPlayerItem;
    AVPlayer *_avPlayer;
    unsigned long long _playbackState;
    ADBannerView *_videoAd;
    id _timeObserver;
}

@property(retain, nonatomic) id timeObserver; // @synthesize timeObserver=_timeObserver;
@property(retain, nonatomic) ADBannerView *videoAd; // @synthesize videoAd=_videoAd;
@property(nonatomic) unsigned long long playbackState; // @synthesize playbackState=_playbackState;
@property(retain, nonatomic) AVPlayer *avPlayer; // @synthesize avPlayer=_avPlayer;
@property(retain, nonatomic) AVPlayerItem *avPlayerItem; // @synthesize avPlayerItem=_avPlayerItem;
@property(nonatomic) _Bool playbackHasBegun; // @synthesize playbackHasBegun=_playbackHasBegun;
- (id)_networkOptimalVideoURLForAd:(id)arg1;
- (void)applicationDidBecomeActive;
- (void)applicationWillResignActive;
- (void)playerItemEncounteredPlaybackStall:(id)arg1;
- (void)playerItemDidFailedToPlayToEnd:(id)arg1;
- (void)playerItemDidPlayToEnd:(id)arg1;
- (void)bannerViewShouldResumeMedia:(id)arg1;
- (void)bannerViewShouldPauseMedia:(id)arg1;
- (void)bannerViewActionDidFinish:(id)arg1;
- (_Bool)bannerViewActionShouldBegin:(id)arg1 willLeaveApplication:(_Bool)arg2;
- (void)bannerView:(id)arg1 didFailToReceiveAdWithError:(id)arg2;
- (void)bannerViewDidLoadAd:(id)arg1;
- (void)bannerViewWillLoadAd:(id)arg1;
- (id)viewControllerForStoryboardPresentationFromBannerView:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)shutdown;
- (void)performAction;
- (void)pause;
- (void)play;
- (_Bool)prepareForPlayback;
@property(nonatomic) __weak id <ADPlayerDelegate> delegate;
- (id)init;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ADPolicyEngine : NSObject <ADBannerViewInternalDelegate, ADInterstitialAdDelegate>
{
    _Bool _visuallyEngaged;
    _Bool _enabled;
    _Bool _sharedInterstitialAdIsInUse;
    _Bool _sharedMediaPlayerVideoAdClaimed;
    double _nextInterstitialPresentationTime;
    double _nextPrerollPlaybackTime;
    NSObject<OS_dispatch_queue> *_policyEngineQueue;
    NSMutableArray *_queuedCommands;
    NSData *_heartbeatToken;
    NSError *_heartbeatTokenError;
    double _heartbeatTokenExpiration;
    ADInterstitialAd *_sharedInterstitialAd;
    NSString *_sharedInterstitialSection;
    NSURL *_sharedInterstitialServerURL;
    NSString *_sharedInterstitialAuthenticationUserName;
    ADBannerView *_sharedMediaPlayerVideoAd;
    NSError *_lastSharedMediaPlayerVideoAdError;
    NSData *_currentStationData;
    NSData *_currentSongData;
}

+ (id)sharedEngine;
@property(retain, nonatomic) NSData *currentSongData; // @synthesize currentSongData=_currentSongData;
@property(retain, nonatomic) NSData *currentStationData; // @synthesize currentStationData=_currentStationData;
@property(retain, nonatomic) NSError *lastSharedMediaPlayerVideoAdError; // @synthesize lastSharedMediaPlayerVideoAdError=_lastSharedMediaPlayerVideoAdError;
@property(nonatomic) _Bool sharedMediaPlayerVideoAdClaimed; // @synthesize sharedMediaPlayerVideoAdClaimed=_sharedMediaPlayerVideoAdClaimed;
@property(retain, nonatomic) ADBannerView *sharedMediaPlayerVideoAd; // @synthesize sharedMediaPlayerVideoAd=_sharedMediaPlayerVideoAd;
@property(copy, nonatomic) NSString *sharedInterstitialAuthenticationUserName; // @synthesize sharedInterstitialAuthenticationUserName=_sharedInterstitialAuthenticationUserName;
@property(copy, nonatomic) NSURL *sharedInterstitialServerURL; // @synthesize sharedInterstitialServerURL=_sharedInterstitialServerURL;
@property(copy, nonatomic) NSString *sharedInterstitialSection; // @synthesize sharedInterstitialSection=_sharedInterstitialSection;
@property(nonatomic) _Bool sharedInterstitialAdIsInUse; // @synthesize sharedInterstitialAdIsInUse=_sharedInterstitialAdIsInUse;
@property(retain, nonatomic) ADInterstitialAd *sharedInterstitialAd; // @synthesize sharedInterstitialAd=_sharedInterstitialAd;
@property(nonatomic) double heartbeatTokenExpiration; // @synthesize heartbeatTokenExpiration=_heartbeatTokenExpiration;
@property(retain, nonatomic) NSError *heartbeatTokenError; // @synthesize heartbeatTokenError=_heartbeatTokenError;
@property(retain, nonatomic) NSData *heartbeatToken; // @synthesize heartbeatToken=_heartbeatToken;
@property(nonatomic) _Bool enabled; // @synthesize enabled=_enabled;
@property(readonly, nonatomic) NSMutableArray *queuedCommands; // @synthesize queuedCommands=_queuedCommands;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *policyEngineQueue; // @synthesize policyEngineQueue=_policyEngineQueue;
@property(nonatomic) double nextPrerollPlaybackTime; // @synthesize nextPrerollPlaybackTime=_nextPrerollPlaybackTime;
@property(nonatomic) double nextInterstitialPresentationTime; // @synthesize nextInterstitialPresentationTime=_nextInterstitialPresentationTime;
@property(nonatomic) _Bool visuallyEngaged; // @synthesize visuallyEngaged=_visuallyEngaged;
- (void)reportListeningPresenceEvent:(int)arg1;
- (void)songSkipped;
- (void)songStopped;
- (void)songBeganWithTags:(id)arg1;
- (void)songBeganWithTags:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)stationChanged:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)setStationData:(id)arg1 withInitialTrackBlobs:(id)arg2;
- (void)bannerViewActionDidFinish:(id)arg1;
- (_Bool)bannerViewActionShouldBegin:(id)arg1 willLeaveApplication:(_Bool)arg2;
- (void)bannerView:(id)arg1 didFailToReceiveAdWithError:(id)arg2;
- (void)bannerViewDidLoadAd:(id)arg1;
- (void)bannerViewWillLoadAd:(id)arg1;
- (void)sharedMediaPlayerVideoAdActionDidFinish;
- (void)sharedMediaPlayerVideoAdDidFailToReceiveAdWithError:(id)arg1;
- (void)sharedMediaPlayerVideoAdDidLoad;
- (void)sharedMediaPlayerVideoAdWillLoad;
- (void)relinquishSharedMediaPlayerVideoAd;
- (_Bool)claimSharedMediaPlayerVideoAdWithError:(id *)arg1;
- (void)interstitialAdDidUnload:(id)arg1;
- (void)interstitialAd:(id)arg1 didFailWithError:(id)arg2;
- (void)interstitialAdDidLoad:(id)arg1;
- (void)finishedPresentingSharedInterstitialAd;
- (_Bool)canPresentSharedInterstitialAdWithResultMessage:(id *)arg1;
- (void)removeRecordForAccountWithIdentifier:(id)arg1;
- (void)optimalTransmissionWindowDidOpen;
- (void)acquireMatchSlotWithBodyParameters:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)acquireMatchSlotWithUserConfirmation:(_Bool)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)reportClientEvent:(id)arg1;
- (void)reportStationTileImpression:(id)arg1;
- (void)didStopPlaybackOnStation:(id)arg1;
- (void)didBeginPlaybackOnStation:(id)arg1 song:(id)arg2;
- (void)didEnterStation:(id)arg1;
- (void)requestAdsForSlot:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)heartbeatToken:(id *)arg1;
- (void)setHeartbeatToken:(id)arg1 expirationDate:(double)arg2 error:(id)arg3;
- (void)_adSheetConnectionBootstrapped;
- (void)_performWhenAdSheetConnectionEstablished:(CDUnknownBlockType)arg1;
- (void)disablePolicyEngine;
- (void)enablePolicyEngine;
- (void)_enablePolicyEngineWithReason:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ADPrerollBottomBar : UIView
{
    id <ADPrerollBottomBarDelegate> _delegate;
    _Bool _layoutForExpandedSize;
    _Bool _isFullscreen;
    _Bool _skipButtonCountingDown;
    ADPrerollButton *_actionButton;
    UILabel *_skipLabel;
    UILabel *_shortSkipLabel;
    ADPrerollButton *_skipButton;
    double _skipDuration;
    double _lastViewingStartTime;
    double _accumulatedViewingTime;
    NSTimer *_skipAccumulationTimer;
    UIImage *_playImage;
    UIImage *_pauseImage;
    ADPrerollButton *_playPauseButton;
    ADVolumeSlider *_volumeSlider;
}

@property(retain, nonatomic) ADVolumeSlider *volumeSlider; // @synthesize volumeSlider=_volumeSlider;
@property(retain, nonatomic) ADPrerollButton *playPauseButton; // @synthesize playPauseButton=_playPauseButton;
@property(retain, nonatomic) UIImage *pauseImage; // @synthesize pauseImage=_pauseImage;
@property(retain, nonatomic) UIImage *playImage; // @synthesize playImage=_playImage;
@property(retain, nonatomic) NSTimer *skipAccumulationTimer; // @synthesize skipAccumulationTimer=_skipAccumulationTimer;
@property(nonatomic) double accumulatedViewingTime; // @synthesize accumulatedViewingTime=_accumulatedViewingTime;
@property(nonatomic) double lastViewingStartTime; // @synthesize lastViewingStartTime=_lastViewingStartTime;
@property(nonatomic) double skipDuration; // @synthesize skipDuration=_skipDuration;
@property(nonatomic) _Bool skipButtonCountingDown; // @synthesize skipButtonCountingDown=_skipButtonCountingDown;
@property(retain, nonatomic) ADPrerollButton *skipButton; // @synthesize skipButton=_skipButton;
@property(retain, nonatomic) UILabel *shortSkipLabel; // @synthesize shortSkipLabel=_shortSkipLabel;
@property(retain, nonatomic) UILabel *skipLabel; // @synthesize skipLabel=_skipLabel;
@property(retain, nonatomic) ADPrerollButton *actionButton; // @synthesize actionButton=_actionButton;
@property(nonatomic) _Bool isFullscreen; // @synthesize isFullscreen=_isFullscreen;
@property(nonatomic) _Bool layoutForExpandedSize; // @synthesize layoutForExpandedSize=_layoutForExpandedSize;
- (void)_playButtonTapped:(id)arg1;
- (void)_pauseButtonTapped:(id)arg1;
- (void)_skipButtonTapped:(id)arg1;
- (void)_actionButtonTapped:(id)arg1;
- (void)_updateSkipLabel;
- (void)_accumulateViewingTime;
- (void)_pauseCountdown;
- (void)_resumeCountdown;
- (void)beginCountdownWithDuration:(double)arg1;
- (void)displayAsPaused:(_Bool)arg1;
- (void)layoutSubviews;
@property(nonatomic) __weak id <ADPrerollBottomBarDelegate> delegate;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;

@end

@interface ADPrerollButton : UIButton
{
    struct UIEdgeInsets _hitRectInsets;
    struct UIEdgeInsets _alignmentRectInsets;
}

+ (id)buttonWithType:(long long)arg1;
@property(nonatomic) struct UIEdgeInsets alignmentRectInsets; // @synthesize alignmentRectInsets=_alignmentRectInsets;
@property(nonatomic) struct UIEdgeInsets hitRectInsets; // @synthesize hitRectInsets=_hitRectInsets;
- (void)dealloc;
- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;
- (struct CGRect)hitRect;

@end

@interface ADPrerollController : NSObject <ADPrerollViewDelegate, ADPlayerDelegate>
{
    AVPlayerViewController *_avPlayerViewController;
    MPMoviePlayerController *_moviePlayerController;
    _Bool _setupInProgress;
    _Bool _isObservingThirdPartyAVPlayer;
    unsigned long long _type;
    ADPrerollView *_view;
    ADPlayer *_adPlayer;
    CDUnknownBlockType _completionHandler;
}

@property(copy, nonatomic) CDUnknownBlockType completionHandler; // @synthesize completionHandler=_completionHandler;
@property(nonatomic) _Bool isObservingThirdPartyAVPlayer; // @synthesize isObservingThirdPartyAVPlayer=_isObservingThirdPartyAVPlayer;
@property(nonatomic) _Bool setupInProgress; // @synthesize setupInProgress=_setupInProgress;
@property(retain, nonatomic) ADPlayer *adPlayer; // @synthesize adPlayer=_adPlayer;
@property(retain, nonatomic) ADPrerollView *view; // @synthesize view=_view;
@property(readonly, nonatomic) unsigned long long type; // @synthesize type=_type;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)_appWillResignActive;
- (void)_handlePlaybackCompletion:(_Bool)arg1;
- (_Bool)_beginPlayback;
- (id)_advertisementView;
@property(nonatomic) __weak MPMoviePlayerController *moviePlayerController;
@property(nonatomic) __weak AVPlayerViewController *avPlayerViewController;
- (void)adPlayerDidBeginAction:(id)arg1;
- (id)viewControllerForActionFromAdPlayer:(id)arg1;
- (void)adPlayerDidFinishPlayback:(id)arg1;
- (void)adPlayer:(id)arg1 didChangePlaybackState:(unsigned long long)arg2;
- (void)adPlayer:(id)arg1 elapsedTime:(double)arg2 totalTime:(double)arg3;
- (void)adPlayer:(id)arg1 readyForPlaybackWithAVPlayer:(id)arg2 impressionProperties:(id)arg3;
- (void)adPlayerFailedToPlayWithUnknownError:(id)arg1;
- (void)adPlayerFailedToLoadAsset:(id)arg1;
- (void)adPlayerDidTimeout:(id)arg1;
- (void)actionButtonPressed;
- (void)skipButtonPressed;
- (void)pauseButtonPressed;
- (void)playButtonPressed;
- (void)doneButtonPressed;
- (_Bool)_isEmbedded;
- (_Bool)prerollViewRequestsEmbeddedStatus;
- (void)shutdown;
- (void)cancel;
- (void)playPrerollAdWithCompletion:(CDUnknownBlockType)arg1;
- (id)initWithMoviePlayerController:(id)arg1;
- (id)initWithAVPlayerViewController:(id)arg1;
- (id)init;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ADPrerollSlider : UISlider
{
}

- (struct CGRect)trackRectForBounds:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface ADPrerollTopBar : UIView
{
    id <ADPrerollTopBarDelegate> _delegate;
    _Bool _isFullscreen;
    _Bool _layoutForExpandedSize;
    UIStatusBar *_statusBar;
    ADPrerollButton *_doneButton;
    ADProgressView *_progressView;
    ADPrerollButton *_scaleToFillButton;
}

@property(retain, nonatomic) ADPrerollButton *scaleToFillButton; // @synthesize scaleToFillButton=_scaleToFillButton;
@property(retain, nonatomic) ADProgressView *progressView; // @synthesize progressView=_progressView;
@property(retain, nonatomic) ADPrerollButton *doneButton; // @synthesize doneButton=_doneButton;
@property(retain, nonatomic) UIStatusBar *statusBar; // @synthesize statusBar=_statusBar;
@property(nonatomic) _Bool layoutForExpandedSize; // @synthesize layoutForExpandedSize=_layoutForExpandedSize;
@property(nonatomic) _Bool isFullscreen; // @synthesize isFullscreen=_isFullscreen;
- (void)_doneButtonTapped:(id)arg1;
- (void)_scaleToFitButtonTapped:(id)arg1;
- (void)_scaleToFillButtonTapped:(id)arg1;
- (void)layoutSubviews;
- (void)setElapsedTime:(double)arg1 totalTime:(double)arg2;
- (double)requiredHeight;
@property(nonatomic) __weak id <ADPrerollTopBarDelegate> delegate;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;

@end

@interface ADPrerollView : UIView <UIGestureRecognizerDelegate, ADPrerollTopBarDelegate, ADPrerollBottomBarDelegate>
{
    id <ADPrerollViewDelegate> _delegate;
    _Bool _barsVisible;
    _Bool _skipButtonCountingDown;
    ADPrerollTopBar *_topBar;
    ADPrerollBottomBar *_bottomBar;
    UIImageView *_swooshView;
    NSTimer *_passiveWatchingTimer;
    double _accumulatedViewingTime;
}

+ (Class)layerClass;
@property(nonatomic) double accumulatedViewingTime; // @synthesize accumulatedViewingTime=_accumulatedViewingTime;
@property(retain, nonatomic) NSTimer *passiveWatchingTimer; // @synthesize passiveWatchingTimer=_passiveWatchingTimer;
@property(retain, nonatomic) UIImageView *swooshView; // @synthesize swooshView=_swooshView;
@property(nonatomic) _Bool skipButtonCountingDown; // @synthesize skipButtonCountingDown=_skipButtonCountingDown;
@property(retain, nonatomic) ADPrerollBottomBar *bottomBar; // @synthesize bottomBar=_bottomBar;
@property(retain, nonatomic) ADPrerollTopBar *topBar; // @synthesize topBar=_topBar;
@property(nonatomic) _Bool barsVisible; // @synthesize barsVisible=_barsVisible;
@property(nonatomic) __weak id <ADPrerollViewDelegate> delegate;
- (void)fadeToBlackWithCompletion:(CDUnknownBlockType)arg1;
- (void)beginCountdown:(double)arg1;
- (void)attachToAVPlayer:(id)arg1 showiAdBrandingSwoosh:(_Bool)arg2;
- (void)setElapsedTime:(double)arg1 totalTime:(double)arg2;
- (void)displayAsPaused:(_Bool)arg1;
- (_Bool)accessibilityPerformEscape;
- (void)bottomBarPauseButtonTapped:(id)arg1;
- (void)bottomBarPlayButtonTapped:(id)arg1;
- (void)bottomBarSkipButtonTapped:(id)arg1;
- (void)bottomBarActionButtonTapped:(id)arg1;
- (void)topBarScaleToFit:(id)arg1;
- (void)topBarScaleToFill:(id)arg1;
- (void)topBarDoneButtonTapped:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (void)_singleTapGestureRecognized:(id)arg1;
- (void)_firePassiveWatchingTimer:(id)arg1;
- (void)_restartPassiveWatchingTimer;
- (_Bool)_layoutForExpandedSize;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)shutdown;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ADProgressView : UIView
{
    UILabel *_elapsedTimeLabel;
    UILabel *_remainingTimeLabel;
    ADPrerollSlider *_slider;
}

@property(retain, nonatomic) ADPrerollSlider *slider; // @synthesize slider=_slider;
@property(retain, nonatomic) UILabel *remainingTimeLabel; // @synthesize remainingTimeLabel=_remainingTimeLabel;
@property(retain, nonatomic) UILabel *elapsedTimeLabel; // @synthesize elapsedTimeLabel=_elapsedTimeLabel;
- (void)setElapsedTime:(double)arg1 totalTime:(double)arg2;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;

@end

@interface ADSession : NSObject <ADSession_RPC, ADAdSheetProxyDelegate, ADAdSheetConnectionDelegate>
{
    _Bool _applicationCanReceiveBackgroundAds;
    int _classicUnavailableToken;
    NSMutableArray *_adSpaces;
    ADAdSheetConnection *_connection;
}

+ (id)sharedInstance;
@property(retain, nonatomic) ADAdSheetConnection *connection; // @synthesize connection=_connection;
@property(nonatomic) int classicUnavailableToken; // @synthesize classicUnavailableToken=_classicUnavailableToken;
@property(retain, nonatomic) NSMutableArray *adSpaces; // @synthesize adSpaces=_adSpaces;
@property(nonatomic) _Bool applicationCanReceiveBackgroundAds; // @synthesize applicationCanReceiveBackgroundAds=_applicationCanReceiveBackgroundAds;
- (void)_appDidBecomeActive;
- (void)_appWillResignActive;
- (void)addClientToSegments:(id)arg1 replaceExisting:(_Bool)arg2;
- (void)lookupAdConversionDetails:(CDUnknownBlockType)arg1;
- (void)determineAppInstallAttributionWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)_remote_policyEngineTestStationDescriptionsComputed:(id)arg1;
- (void)_remote_heartbeatTokenDidChange:(id)arg1 expirationDate:(double)arg2 error:(id)arg3;
- (void)_orientationChanged;
- (void)unregisterAdSpace:(id)arg1;
- (void)registerAdSpace:(id)arg1;
- (void)adSheetConnectionLost;
- (void)adSheetConnectionEstablished;
- (void)configureConnection:(id)arg1;
- (id)adSheetMachServiceName;
- (id)rpcProxyWithErrorHandler:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) id <ADSSession_RPC> rpcProxy;
- (void)performWhenConnected:(CDUnknownBlockType)arg1;
- (_Bool)shouldConnectToAdSheet;
- (id)additionalAdSheetLaunchOptions;
- (_Bool)shouldLaunchAdSheet;
- (id)_linkedOnVersion;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ADSoftLinking : NSObject
{
    Class _MPMoviePlayerController;
    Class _MPMoviePlayerViewController;
    Class _MPNetworkPlayabilityMonitor;
    NSString *_MPMoviePlayerWillEnterFullscreenNotification;
    NSString *_MPMoviePlayerDidEnterFullscreenNotification;
    NSString *_MPMoviePlayerWillExitFullscreenNotification;
    NSString *_MPMoviePlayerDidExitFullscreenNotification;
    NSString *_MPMoviePlayerIsAirPlayVideoActiveDidChangeNotification;
    NSMutableDictionary *_loadedFrameworks;
    NSMutableDictionary *_boundSymbols;
    NSObject<OS_dispatch_queue> *_loadQueue;
}

+ (id)sharedManager;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *loadQueue; // @synthesize loadQueue=_loadQueue;
@property(readonly, nonatomic) NSMutableDictionary *boundSymbols; // @synthesize boundSymbols=_boundSymbols;
@property(readonly, nonatomic) NSMutableDictionary *loadedFrameworks; // @synthesize loadedFrameworks=_loadedFrameworks;
@property(readonly, nonatomic) NSString *MPMoviePlayerIsAirPlayVideoActiveDidChangeNotification; // @synthesize MPMoviePlayerIsAirPlayVideoActiveDidChangeNotification=_MPMoviePlayerIsAirPlayVideoActiveDidChangeNotification;
@property(readonly, nonatomic) NSString *MPMoviePlayerDidExitFullscreenNotification; // @synthesize MPMoviePlayerDidExitFullscreenNotification=_MPMoviePlayerDidExitFullscreenNotification;
@property(readonly, nonatomic) NSString *MPMoviePlayerWillExitFullscreenNotification; // @synthesize MPMoviePlayerWillExitFullscreenNotification=_MPMoviePlayerWillExitFullscreenNotification;
@property(readonly, nonatomic) NSString *MPMoviePlayerDidEnterFullscreenNotification; // @synthesize MPMoviePlayerDidEnterFullscreenNotification=_MPMoviePlayerDidEnterFullscreenNotification;
@property(readonly, nonatomic) NSString *MPMoviePlayerWillEnterFullscreenNotification; // @synthesize MPMoviePlayerWillEnterFullscreenNotification=_MPMoviePlayerWillEnterFullscreenNotification;
@property(readonly, nonatomic) Class MPNetworkPlayabilityMonitor; // @synthesize MPNetworkPlayabilityMonitor=_MPNetworkPlayabilityMonitor;
@property(readonly, nonatomic) Class MPMoviePlayerViewController; // @synthesize MPMoviePlayerViewController=_MPMoviePlayerViewController;
@property(readonly, nonatomic) Class MPMoviePlayerController; // @synthesize MPMoviePlayerController=_MPMoviePlayerController;
@property(readonly, nonatomic) Class WBUFormDataControllerWK1;
@property(readonly, nonatomic) NSString *kToneArtistKey;
@property(readonly, nonatomic) NSString *kToneDurationKey;
@property(readonly, nonatomic) NSString *kToneGenreKey;
@property(readonly, nonatomic) NSString *kToneTitleKey;
@property(readonly, nonatomic) Class TLToneManager;
@property(readonly, nonatomic) NSString *SKStoreProductParameterITunesItemIdentifier;
@property(readonly, nonatomic) NSString *SKStoreProductParameterQToken;
@property(readonly, nonatomic) Class SKStoreProductViewController;
@property(readonly, nonatomic) NSString *SLServiceTypeTwitter;
@property(readonly, nonatomic) Class SLService;
@property(readonly, nonatomic) Class SLRequest;
@property(readonly, nonatomic) Class SLComposeViewController;
@property(readonly, nonatomic) Class PLStaticWallpaperImageViewController;
@property(readonly, nonatomic) NSString *PKPaymentNetworkVisa;
@property(readonly, nonatomic) NSString *PKPaymentNetworkMasterCard;
@property(readonly, nonatomic) NSString *PKPaymentNetworkChinaUnionPay;
@property(readonly, nonatomic) NSString *PKPaymentNetworkAmex;
@property(readonly, nonatomic) Class PKPaymentSummaryItem;
@property(readonly, nonatomic) Class PKPaymentAuthorizationViewController;
@property(readonly, nonatomic) Class PKPaymentRequest;
@property(readonly, nonatomic) Class PKPayment;
@property(readonly, nonatomic) Class PKAddPassesViewController;
@property(readonly, nonatomic) Class PKPassLibrary;
@property(readonly, nonatomic) Class PKPass;
@property(readonly, nonatomic) Class MFMessageComposeViewController;
@property(readonly, nonatomic) Class MFMailComposeViewController;
@property(readonly, nonatomic) NSString *UIMoviePlayerControllerDidExitFullscreenNotification;
@property(readonly, nonatomic) NSString *UIMoviePlayerControllerDidEnterFullscreenNotification;
@property(readonly, nonatomic) Class EKReminderViewController;
@property(readonly, nonatomic) Class EKEventEditViewController;
@property(readonly, nonatomic) NSString *AVLayerVideoGravityResizeAspect;
@property(readonly, nonatomic) NSString *AVLayerVideoGravityResizeAspectFill;
@property(readonly, nonatomic) NSString *AVPlayerItemPlaybackStalledNotification;
@property(readonly, nonatomic) NSString *AVPlayerItemFailedToPlayToEndTimeErrorKey;
@property(readonly, nonatomic) NSString *AVPlayerItemFailedToPlayToEndTimeNotification;
@property(readonly, nonatomic) NSString *AVPlayerItemDidPlayToEndTimeNotification;
@property(readonly, nonatomic) Class AVURLAsset;
@property(readonly, nonatomic) Class AVPlayerLayer;
@property(readonly, nonatomic) Class AVPlayerItem;
@property(readonly, nonatomic) Class AVPlayer;
@property(readonly, nonatomic) CDUnknownFunctionPointerType AudioFileOpenWithCallbacks;
@property(readonly, nonatomic) CDUnknownFunctionPointerType AudioFileGetProperty;
@property(readonly, nonatomic) Class ABPeoplePickerNavigationController;
@property(readonly, nonatomic) Class ABNewPersonViewController;
- (id)_stringWithName:(id)arg1 inFrameworkAtPath:(id)arg2;
- (void *)_pointerToSymbolWithName:(id)arg1 inFrameworkAtPath:(id)arg2;
- (Class)_classWithName:(id)arg1 inFrameworkAtPath:(id)arg2;
- (void)_loadFrameworkIfNeeded:(id)arg1;
- (id)init;

@end

@interface ADTapGestureRecognizer : UIGestureRecognizer
{
    long long _finalTrackingID;
    CDUnknownBlockType _touchDownHandler;
    CDUnknownBlockType _touchMovedHandler;
    CDUnknownBlockType _touchUpHandler;
}

@property(copy, nonatomic) CDUnknownBlockType touchUpHandler; // @synthesize touchUpHandler=_touchUpHandler;
@property(copy, nonatomic) CDUnknownBlockType touchMovedHandler; // @synthesize touchMovedHandler=_touchMovedHandler;
@property(copy, nonatomic) CDUnknownBlockType touchDownHandler; // @synthesize touchDownHandler=_touchDownHandler;
@property(nonatomic) long long finalTrackingID; // @synthesize finalTrackingID=_finalTrackingID;
- (void)reset;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)dealloc;

@end

@interface ADVolumeSlider : MPVolumeSlider
{
    UIColor *_maximumTintUsedForTrackImageColor;
    UIColor *_minimumTintUsedForTrackImageColor;
}

- (void)_updateTrackTintForVolumeControlAvailability;
- (id)_trackImageWithTintColor:(id)arg1;
- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)_availableRoutesDidChangeNotification:(id)arg1;
- (id)_newVolumeWarningView;
- (struct CGRect)trackRectForBounds:(struct CGRect)arg1;
- (struct CGRect)minimumValueImageRectForBounds:(struct CGRect)arg1;
- (struct CGRect)maximumValueImageRectForBounds:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1 style:(long long)arg2;

@end

@interface AVPlayerViewController (iAdPreroll)
+ (void)preparePrerollAds;
- (void)set_iAd_prerollController:(id)arg1;
- (id)_iAd_prerollController;
- (void)cancelPreroll;
- (void)playPrerollAdWithCompletionHandler:(CDUnknownBlockType)arg1;
@end

@interface MPMoviePlayerController (iAdPreroll)
+ (void)preparePrerollAds;
- (void)set_iAd_prerollController:(id)arg1;
- (id)_iAd_prerollController;
- (void)cancelPreroll;
- (void)playPrerollAdWithCompletionHandler:(CDUnknownBlockType)arg1;
@end

@interface UIColor (_iAd_Extras)
+ (id)_iAd_colorWithRGBA:(unsigned int)arg1;
@end

@interface UIImage (iAdAdditions)
+ (id)_iAd_imageNamed:(id)arg1;
@end

@interface UIView (iAd_Extras)
- (struct CGRect)_iAd_screenFrame;
- (_Bool)_iAd_isVisibleFast;
- (_Bool)_iAd_isVisible;
@end

@interface UIViewController (iAdAdditions)
+ (void)prepareInterstitialAds;
@property(readonly, nonatomic) _Bool shouldPresentInterstitialAd;
- (_Bool)requestInterstitialAdPresentation;
@property(readonly, nonatomic, getter=isDisplayingBannerAd) _Bool displayingBannerAd;
@property(readonly, nonatomic, getter=isPresentingFullScreenAd) _Bool presentingFullScreenAd;
@property(readonly, retain, nonatomic) UIView *originalContentView;
@property(nonatomic) _Bool canDisplayBannerAds;
@property(nonatomic) long long interstitialPresentationPolicy;
@end

@interface UIViewController (iAdAdditions_Private)
- (void)_iAd_requestForInterstitialAdDidSucceed:(_Bool)arg1 resultMessage:(id)arg2;
@property(readonly, nonatomic) _ADUIViewControllerAdController *_iAd_advertisingController;
@end

@interface _ADPolicyEngineEvent : NSObject <ADBannerViewInternalDelegate>
{
    CDUnknownBlockType _bannersLoadedHandler;
    NSMutableArray *_banners;
    NSMutableArray *_bannersWaitingOnLoad;
}

@property(retain, nonatomic) NSMutableArray *bannersWaitingOnLoad; // @synthesize bannersWaitingOnLoad=_bannersWaitingOnLoad;
@property(retain, nonatomic) NSMutableArray *banners; // @synthesize banners=_banners;
@property(copy, nonatomic) CDUnknownBlockType bannersLoadedHandler; // @synthesize bannersLoadedHandler=_bannersLoadedHandler;
- (void)bannerView:(id)arg1 didFailToReceiveAdWithError:(id)arg2;
- (void)bannerViewDidLoadAd:(id)arg1;
- (void)_considerCallingLoadedHandler;
- (void)waitForLoadsForBanners:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)loadedBannerWithIdentifier:(id)arg1;
@property(readonly, nonatomic) NSArray *bannerIdentifiers;
- (void)addBannerForCreativeType:(int)arg1;
- (id)init;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface _ADRemoteViewController : _UIRemoteViewController
{
    _Bool _hasBeenDismissed;
    unsigned long long _remoteSupportedInterfaceOrientations;
}

+ (id)serviceViewControllerInterface;
@property(nonatomic) _Bool hasBeenDismissed; // @synthesize hasBeenDismissed=_hasBeenDismissed;
@property(nonatomic) unsigned long long remoteSupportedInterfaceOrientations; // @synthesize remoteSupportedInterfaceOrientations=_remoteSupportedInterfaceOrientations;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (unsigned long long)supportedInterfaceOrientations;

@end

@interface _ADUIViewControllerAdController : NSObject <_UIViewControllerContentViewEmbedding, ADBannerViewDelegate, ADInterstitialAdDelegate>
{
    UIViewController *_contentViewController;
    _Bool _canDisplayBannerAds;
    _Bool _canOwnSharedBanner;
    _Bool _presentingFullScreenAd;
    NSURL *_bannerServerURL;
    NSString *_bannerAdSection;
    NSString *_bannerAuthUserName;
    NSURL *_interstitialServerURL;
    NSString *_interstitialAdSection;
    NSString *_interstitialAuthUserName;
    long long _interstitialPresentationPolicy;
    ADBannerView *_bannerView;
    ADInterstitialAd *_interstitialAd;
}

+ (id)_sharedBannerView;
+ (void)prepareInterstitialAds;
@property(retain, nonatomic) ADInterstitialAd *interstitialAd; // @synthesize interstitialAd=_interstitialAd;
@property(retain, nonatomic) ADBannerView *bannerView; // @synthesize bannerView=_bannerView;
@property(nonatomic, getter=isPresentingFullScreenAd) _Bool presentingFullScreenAd; // @synthesize presentingFullScreenAd=_presentingFullScreenAd;
@property(nonatomic) _Bool canOwnSharedBanner; // @synthesize canOwnSharedBanner=_canOwnSharedBanner;
@property(nonatomic) _Bool canDisplayBannerAds; // @synthesize canDisplayBannerAds=_canDisplayBannerAds;
@property(nonatomic) long long interstitialPresentationPolicy; // @synthesize interstitialPresentationPolicy=_interstitialPresentationPolicy;
@property(copy, nonatomic) NSString *interstitialAuthUserName; // @synthesize interstitialAuthUserName=_interstitialAuthUserName;
@property(copy, nonatomic) NSString *interstitialAdSection; // @synthesize interstitialAdSection=_interstitialAdSection;
@property(copy, nonatomic) NSURL *interstitialServerURL; // @synthesize interstitialServerURL=_interstitialServerURL;
@property(copy, nonatomic) NSString *bannerAuthUserName; // @synthesize bannerAuthUserName=_bannerAuthUserName;
@property(copy, nonatomic) NSString *bannerAdSection; // @synthesize bannerAdSection=_bannerAdSection;
@property(copy, nonatomic) NSURL *bannerServerURL; // @synthesize bannerServerURL=_bannerServerURL;
- (void)bannerViewActionDidFinish:(id)arg1;
- (_Bool)bannerViewActionShouldBegin:(id)arg1 willLeaveApplication:(_Bool)arg2;
- (void)bannerView:(id)arg1 didFailToReceiveAdWithError:(id)arg2;
- (void)bannerViewDidLoadAd:(id)arg1;
@property(readonly, nonatomic, getter=isDisplayingBannerAd) _Bool displayingBannerAd;
- (void)_layoutContentAndBannerViewAnimated:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_setEmbeddedFrame:(struct CGRect)arg1;
- (void)_hideBannerView;
- (void)_considerTakingBannerViewAnimated:(_Bool)arg1;
- (void)interstitialAdActionDidFinish:(id)arg1;
- (void)interstitialAd:(id)arg1 didFailWithError:(id)arg2;
- (void)interstitialAdDidUnload:(id)arg1;
- (_Bool)_presentInterstitialIfReady;
- (_Bool)requestInterstitialAdPresentation;
- (void)viewControllerViewDidLayoutSubviews:(id)arg1;
- (void)viewController:(id)arg1 viewDidDisappear:(_Bool)arg2;
- (void)viewController:(id)arg1 viewWillDisappear:(_Bool)arg2;
- (void)viewController:(id)arg1 viewDidAppear:(_Bool)arg2;
- (void)viewController:(id)arg1 viewWillAppear:(_Bool)arg2;
- (void)viewControllerViewWillLayoutSubviews:(id)arg1;
@property(readonly, nonatomic) __weak UIViewController *contentViewController;
- (id)initWithContentViewController:(id)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

