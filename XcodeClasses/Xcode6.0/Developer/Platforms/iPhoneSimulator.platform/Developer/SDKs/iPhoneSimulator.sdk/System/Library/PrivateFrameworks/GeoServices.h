//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct Box<float, 2> {
    Matrix_8746f91e _field1;
    Matrix_8746f91e _field2;
};

struct CAARiseTransitSetDetails {
    _Bool bRiseValid;
    double Rise;
    _Bool bTransitAboveHorizon;
    double Transit;
    _Bool bSetValid;
    double Set;
};

struct DispatchTimer;

struct Entry;

struct ErrorInfo;

struct GEOFeatureShield {
    CDStruct_29923528 _field1;
    long long _field2;
};

struct GeoCoordinates {
    struct Longitude _field1;
    struct Latitude _field2;
};

struct GeoPolyline {
    struct shared_ptr<const std::__1::vector<zilch::GeoCoordinates, std::__1::allocator<zilch::GeoCoordinates>>> _field1;
    int _field2;
};

struct GeometryPathElement;

struct Latitude {
    unsigned int _field1;
};

struct Longitude {
    unsigned int _field1;
};

struct MapEdge;

struct MapEdgeRoad;

struct Matrix<float, 2, 1> {
    float _e[2];
};

struct Message;

struct Path<std::__1::shared_ptr<geo::MapEdge>> {
    struct GeoCoordinates _field1;
    struct GeoCoordinates _field2;
    struct vector<zilch::RoadPathElement<std::__1::shared_ptr<geo::MapEdge>>, std::__1::allocator<zilch::RoadPathElement<std::__1::shared_ptr<geo::MapEdge>>>> _field3;
    struct vector<zilch::GeometryPathElement, std::__1::allocator<zilch::GeometryPathElement>> _field4;
    struct vector<zilch::Path<std::__1::shared_ptr<geo::MapEdge>>::Entry, std::__1::allocator<zilch::Path<std::__1::shared_ptr<geo::MapEdge>>::Entry>> _field5;
};

struct PolylineCoordinate {
    unsigned int index;
    float offset;
};

struct RoadPathElement<std::__1::shared_ptr<geo::MapEdge>> {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    unsigned long long _field3;
    shared_ptr_b236f348 _field4;
    struct GeoPolyline _field5;
    int _field6;
};

struct RouteMapMatchingSection {
    CDUnknownFunctionPointerType *_field1;
};

struct ZilchMapModel;

struct _GEOGenericContainer<_GEOTileKey, GEOPDPlace *, std::__1::hash<GEOTileKey>, std::__1::equal_to<GEOTileKey>, geo::GEOGenericContainerStrongReferenceTag, 64, 2097152, geo::GEOGenericContainerLockingTag, detail::_default_pointer_type> {
    struct mutex _lock;
    struct list<geo::detail::_CacheItem<_GEOTileKey, GEOPDPlace *, _value_ptr>, std::__1::allocator<geo::detail::_CacheItem<_GEOTileKey, GEOPDPlace *, _value_ptr>>> _list;
    struct unordered_map<_GEOTileKey, std::__1::__list_iterator<geo::detail::_CacheItem<_GEOTileKey, GEOPDPlace *, _value_ptr>, void *>, std::__1::hash<GEOTileKey>, std::__1::equal_to<GEOTileKey>, std::__1::allocator<std::__1::pair<const _GEOTileKey, std::__1::__list_iterator<geo::detail::_CacheItem<_GEOTileKey, GEOPDPlace *, _value_ptr>, void *>>>> _map;
    unsigned long long _maxCapacity;
    unsigned long long _maxCost;
    unsigned long long _currentCost;
    unsigned long long _currentCount;
};

struct _GEOGenericContainer<_GEOTileKey, id, std::__1::hash<GEOTileKey>, std::__1::equal_to<GEOTileKey>, geo::GEOGenericContainerWeakReferenceTag, 0, 0, geo::GEOGenericContainerLockingTag, detail::_default_pointer_type> {
    struct mutex _lock;
    struct list<geo::detail::_CacheItem<_GEOTileKey, id, _value_ptr>, std::__1::allocator<geo::detail::_CacheItem<_GEOTileKey, id, _value_ptr>>> _list;
    struct unordered_map<_GEOTileKey, std::__1::__list_iterator<geo::detail::_CacheItem<_GEOTileKey, id, _value_ptr>, void *>, std::__1::hash<GEOTileKey>, std::__1::equal_to<GEOTileKey>, std::__1::allocator<std::__1::pair<const _GEOTileKey, std::__1::__list_iterator<geo::detail::_CacheItem<_GEOTileKey, id, _value_ptr>, void *>>>> _map;
    unsigned long long _maxCapacity;
    unsigned long long _maxCost;
    unsigned long long _currentCost;
    unsigned long long _currentCount;
};

struct _GEOTileKey {
    unsigned int z:6;
    unsigned int x:26;
    unsigned int y:26;
    unsigned int type:6;
    unsigned int pixelSize:8;
    unsigned int textScale:8;
    unsigned int provider:8;
    unsigned int expires:1;
    unsigned int reserved1:7;
    unsigned char reserved2[4];
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct __hash_node<GEORoadEdge, void *>;

struct __hash_node<_GEOTileKey, void *>;

struct __hash_node<std::__1::__hash_value_type<_GEOTileKey, UsageData>, void *>;

struct __hash_node<std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<CacheItem, void *>>, void *>;

struct __hash_node<std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<geo::detail::_CacheItem<_GEOTileKey, GEOPDPlace *, _value_ptr>, void *>>, void *>;

struct __hash_node<std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<geo::detail::_CacheItem<_GEOTileKey, id, _value_ptr>, void *>>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned long long, _GEOTileKey>, void *>;

struct __list_iterator<LoadItem, void *> {
    struct __list_node<LoadItem, void *> *_field1;
};

struct __list_node<CacheItem, void *>;

struct __list_node<LoadItem, void *>;

struct __list_node<_CacheRequester<void (^)(unsigned long long)>, void *>;

struct __list_node<geo::detail::_CacheItem<_GEOTileKey, GEOPDPlace *, _value_ptr>, void *>;

struct __list_node<geo::detail::_CacheItem<_GEOTileKey, id, _value_ptr>, void *>;

struct __shared_weak_count;

struct deque<ErrorInfo, std::__1::allocator<ErrorInfo>> {
    struct __split_buffer<ErrorInfo *, std::__1::allocator<ErrorInfo *>> {
        struct ErrorInfo **__first_;
        struct ErrorInfo **__begin_;
        struct ErrorInfo **__end_;
        struct __compressed_pair<ErrorInfo **, std::__1::allocator<ErrorInfo *>> {
            struct ErrorInfo **__first_;
        } __end_cap_;
    } __map_;
    unsigned long long __start_;
    struct __compressed_pair<unsigned long, std::__1::allocator<ErrorInfo>> {
        unsigned long long __first_;
    } __size_;
};

struct deque<GEORoadEdge, std::__1::allocator<GEORoadEdge>> {
    struct __split_buffer<GEORoadEdge *, std::__1::allocator<GEORoadEdge *>> {
        CDStruct_183601bc **__first_;
        CDStruct_183601bc **__begin_;
        CDStruct_183601bc **__end_;
        struct __compressed_pair<GEORoadEdge **, std::__1::allocator<GEORoadEdge *>> {
            CDStruct_183601bc **__first_;
        } __end_cap_;
    } __map_;
    unsigned long long __start_;
    struct __compressed_pair<unsigned long, std::__1::allocator<GEORoadEdge>> {
        unsigned long long __first_;
    } __size_;
};

struct list<CacheItem, std::__1::allocator<CacheItem>> {
    struct __list_node_base<CacheItem, void *> {
        struct __list_node<CacheItem, void *> *__prev_;
        struct __list_node<CacheItem, void *> *__next_;
    } __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<CacheItem, void *>>> {
        unsigned long long __first_;
    } __size_alloc_;
};

struct list<LoadItem, std::__1::allocator<LoadItem>> {
    struct __list_node_base<LoadItem, void *> {
        struct __list_node<LoadItem, void *> *__prev_;
        struct __list_node<LoadItem, void *> *__next_;
    } __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<LoadItem, void *>>> {
        unsigned long long __first_;
    } __size_alloc_;
};

struct list<_CacheRequester<void (^)(unsigned long long)>, std::__1::allocator<_CacheRequester<void (^)(unsigned long long)>>> {
    struct __list_node_base<_CacheRequester<void (^)(unsigned long long)>, void *> {
        struct __list_node<_CacheRequester<void (^)(unsigned long long)>, void *> *__prev_;
        struct __list_node<_CacheRequester<void (^)(unsigned long long)>, void *> *__next_;
    } __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<_CacheRequester<void (^)(unsigned long long)>, void *>>> {
        unsigned long long __first_;
    } __size_alloc_;
};

struct list<geo::detail::_CacheItem<_GEOTileKey, GEOPDPlace *, _value_ptr>, std::__1::allocator<geo::detail::_CacheItem<_GEOTileKey, GEOPDPlace *, _value_ptr>>> {
    struct __list_node_base<geo::detail::_CacheItem<_GEOTileKey, GEOPDPlace *, _value_ptr>, void *> {
        struct __list_node<geo::detail::_CacheItem<_GEOTileKey, GEOPDPlace *, _value_ptr>, void *> *__prev_;
        struct __list_node<geo::detail::_CacheItem<_GEOTileKey, GEOPDPlace *, _value_ptr>, void *> *__next_;
    } __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<geo::detail::_CacheItem<_GEOTileKey, GEOPDPlace *, _value_ptr>, void *>>> {
        unsigned long long __first_;
    } __size_alloc_;
};

struct list<geo::detail::_CacheItem<_GEOTileKey, id, _value_ptr>, std::__1::allocator<geo::detail::_CacheItem<_GEOTileKey, id, _value_ptr>>> {
    struct __list_node_base<geo::detail::_CacheItem<_GEOTileKey, id, _value_ptr>, void *> {
        struct __list_node<geo::detail::_CacheItem<_GEOTileKey, id, _value_ptr>, void *> *__prev_;
        struct __list_node<geo::detail::_CacheItem<_GEOTileKey, id, _value_ptr>, void *> *__next_;
    } __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<geo::detail::_CacheItem<_GEOTileKey, id, _value_ptr>, void *>>> {
        unsigned long long __first_;
    } __size_alloc_;
};

struct map<unsigned int, _GEOAltitudeTriggerData, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, _GEOAltitudeTriggerData>>> {
    struct __tree<std::__1::__value_type<unsigned int, _GEOAltitudeTriggerData>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, _GEOAltitudeTriggerData>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, _GEOAltitudeTriggerData>>> {
        struct __tree_node<std::__1::__value_type<unsigned int, _GEOAltitudeTriggerData>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, _GEOAltitudeTriggerData>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
                struct __tree_node_base<void *> *__left_;
            } __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, _GEOAltitudeTriggerData>, std::__1::less<unsigned int>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct mutex {
    struct _opaque_pthread_mutex_t {
        long long __sig;
        char __opaque[56];
    } __m_;
};

struct shared_ptr<const std::__1::vector<zilch::GeoCoordinates, std::__1::allocator<zilch::GeoCoordinates>>> {
    struct vector<zilch::GeoCoordinates, std::__1::allocator<zilch::GeoCoordinates>> *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<geo::MapEdge> {
    struct MapEdge *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<geo::MapEdgeRoad> {
    struct MapEdgeRoad *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<zilch::Message> {
    struct Message *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct unique_ptr<geo::DispatchTimer, std::__1::default_delete<geo::DispatchTimer>> {
    struct __compressed_pair<geo::DispatchTimer *, std::__1::default_delete<geo::DispatchTimer>> {
        struct DispatchTimer *__first_;
    } __ptr_;
};

struct unique_ptr<geo::RouteMapMatchingSection, std::__1::default_delete<geo::RouteMapMatchingSection>> {
    struct __compressed_pair<geo::RouteMapMatchingSection *, std::__1::default_delete<geo::RouteMapMatchingSection>> {
        struct RouteMapMatchingSection *__first_;
    } __ptr_;
};

struct unique_ptr<geo::ZilchMapModel, std::__1::default_delete<geo::ZilchMapModel>> {
    struct __compressed_pair<geo::ZilchMapModel *, std::__1::default_delete<geo::ZilchMapModel>> {
        struct ZilchMapModel *__first_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<GEORoadEdge, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<GEORoadEdge, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<GEORoadEdge, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<GEORoadEdge, void *>*>>> {
        struct __hash_node<GEORoadEdge, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<GEORoadEdge, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<GEORoadEdge, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<_GEOTileKey, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<_GEOTileKey, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<_GEOTileKey, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<_GEOTileKey, void *>*>>> {
        struct __hash_node<_GEOTileKey, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<_GEOTileKey, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<_GEOTileKey, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<_GEOTileKey, UsageData>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<_GEOTileKey, UsageData>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<_GEOTileKey, UsageData>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<_GEOTileKey, UsageData>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<_GEOTileKey, UsageData>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<_GEOTileKey, UsageData>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<_GEOTileKey, UsageData>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<CacheItem, void *>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<CacheItem, void *>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<CacheItem, void *>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<CacheItem, void *>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<CacheItem, void *>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<CacheItem, void *>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<CacheItem, void *>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<geo::detail::_CacheItem<_GEOTileKey, GEOPDPlace *, _value_ptr>, void *>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<geo::detail::_CacheItem<_GEOTileKey, GEOPDPlace *, _value_ptr>, void *>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<geo::detail::_CacheItem<_GEOTileKey, GEOPDPlace *, _value_ptr>, void *>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<geo::detail::_CacheItem<_GEOTileKey, GEOPDPlace *, _value_ptr>, void *>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<geo::detail::_CacheItem<_GEOTileKey, GEOPDPlace *, _value_ptr>, void *>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<geo::detail::_CacheItem<_GEOTileKey, GEOPDPlace *, _value_ptr>, void *>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<geo::detail::_CacheItem<_GEOTileKey, GEOPDPlace *, _value_ptr>, void *>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<geo::detail::_CacheItem<_GEOTileKey, id, _value_ptr>, void *>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<geo::detail::_CacheItem<_GEOTileKey, id, _value_ptr>, void *>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<geo::detail::_CacheItem<_GEOTileKey, id, _value_ptr>, void *>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<geo::detail::_CacheItem<_GEOTileKey, id, _value_ptr>, void *>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<geo::detail::_CacheItem<_GEOTileKey, id, _value_ptr>, void *>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<geo::detail::_CacheItem<_GEOTileKey, id, _value_ptr>, void *>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<geo::detail::_CacheItem<_GEOTileKey, id, _value_ptr>, void *>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, _GEOTileKey>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, _GEOTileKey>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, _GEOTileKey>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, _GEOTileKey>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned long long, _GEOTileKey>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, _GEOTileKey>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, _GEOTileKey>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unordered_map<_GEOTileKey, UsageData, std::__1::hash<GEOTileKey>, std::__1::equal_to<GEOTileKey>, std::__1::allocator<std::__1::pair<const _GEOTileKey, UsageData>>> {
    struct __hash_table<std::__1::__hash_value_type<_GEOTileKey, UsageData>, std::__1::__unordered_map_hasher<_GEOTileKey, std::__1::__hash_value_type<_GEOTileKey, UsageData>, std::__1::hash<GEOTileKey>, true>, std::__1::__unordered_map_equal<_GEOTileKey, std::__1::__hash_value_type<_GEOTileKey, UsageData>, std::__1::equal_to<GEOTileKey>, true>, std::__1::allocator<std::__1::__hash_value_type<_GEOTileKey, UsageData>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<_GEOTileKey, UsageData>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<_GEOTileKey, UsageData>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_GEOTileKey, UsageData>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<_GEOTileKey, UsageData>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_GEOTileKey, UsageData>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<_GEOTileKey, UsageData>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<_GEOTileKey, std::__1::__hash_value_type<_GEOTileKey, UsageData>, std::__1::hash<GEOTileKey>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<_GEOTileKey, std::__1::__hash_value_type<_GEOTileKey, UsageData>, std::__1::equal_to<GEOTileKey>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<_GEOTileKey, std::__1::__list_iterator<CacheItem, void *>, hashkey, eqkey, std::__1::allocator<std::__1::pair<const _GEOTileKey, std::__1::__list_iterator<CacheItem, void *>>>> {
    struct __hash_table<std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<CacheItem, void *>>, std::__1::__unordered_map_hasher<_GEOTileKey, std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<CacheItem, void *>>, hashkey, true>, std::__1::__unordered_map_equal<_GEOTileKey, std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<CacheItem, void *>>, eqkey, true>, std::__1::allocator<std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<CacheItem, void *>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<CacheItem, void *>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<CacheItem, void *>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<CacheItem, void *>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<CacheItem, void *>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<CacheItem, void *>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<CacheItem, void *>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<_GEOTileKey, std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<CacheItem, void *>>, hashkey, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<_GEOTileKey, std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<CacheItem, void *>>, eqkey, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<_GEOTileKey, std::__1::__list_iterator<geo::detail::_CacheItem<_GEOTileKey, GEOPDPlace *, _value_ptr>, void *>, std::__1::hash<GEOTileKey>, std::__1::equal_to<GEOTileKey>, std::__1::allocator<std::__1::pair<const _GEOTileKey, std::__1::__list_iterator<geo::detail::_CacheItem<_GEOTileKey, GEOPDPlace *, _value_ptr>, void *>>>> {
    struct __hash_table<std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<geo::detail::_CacheItem<_GEOTileKey, GEOPDPlace *, _value_ptr>, void *>>, std::__1::__unordered_map_hasher<_GEOTileKey, std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<geo::detail::_CacheItem<_GEOTileKey, GEOPDPlace *, _value_ptr>, void *>>, std::__1::hash<GEOTileKey>, true>, std::__1::__unordered_map_equal<_GEOTileKey, std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<geo::detail::_CacheItem<_GEOTileKey, GEOPDPlace *, _value_ptr>, void *>>, std::__1::equal_to<GEOTileKey>, true>, std::__1::allocator<std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<geo::detail::_CacheItem<_GEOTileKey, GEOPDPlace *, _value_ptr>, void *>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<geo::detail::_CacheItem<_GEOTileKey, GEOPDPlace *, _value_ptr>, void *>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<geo::detail::_CacheItem<_GEOTileKey, GEOPDPlace *, _value_ptr>, void *>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<geo::detail::_CacheItem<_GEOTileKey, GEOPDPlace *, _value_ptr>, void *>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<geo::detail::_CacheItem<_GEOTileKey, GEOPDPlace *, _value_ptr>, void *>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<geo::detail::_CacheItem<_GEOTileKey, GEOPDPlace *, _value_ptr>, void *>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<geo::detail::_CacheItem<_GEOTileKey, GEOPDPlace *, _value_ptr>, void *>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<_GEOTileKey, std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<geo::detail::_CacheItem<_GEOTileKey, GEOPDPlace *, _value_ptr>, void *>>, std::__1::hash<GEOTileKey>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<_GEOTileKey, std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<geo::detail::_CacheItem<_GEOTileKey, GEOPDPlace *, _value_ptr>, void *>>, std::__1::equal_to<GEOTileKey>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<_GEOTileKey, std::__1::__list_iterator<geo::detail::_CacheItem<_GEOTileKey, id, _value_ptr>, void *>, std::__1::hash<GEOTileKey>, std::__1::equal_to<GEOTileKey>, std::__1::allocator<std::__1::pair<const _GEOTileKey, std::__1::__list_iterator<geo::detail::_CacheItem<_GEOTileKey, id, _value_ptr>, void *>>>> {
    struct __hash_table<std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<geo::detail::_CacheItem<_GEOTileKey, id, _value_ptr>, void *>>, std::__1::__unordered_map_hasher<_GEOTileKey, std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<geo::detail::_CacheItem<_GEOTileKey, id, _value_ptr>, void *>>, std::__1::hash<GEOTileKey>, true>, std::__1::__unordered_map_equal<_GEOTileKey, std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<geo::detail::_CacheItem<_GEOTileKey, id, _value_ptr>, void *>>, std::__1::equal_to<GEOTileKey>, true>, std::__1::allocator<std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<geo::detail::_CacheItem<_GEOTileKey, id, _value_ptr>, void *>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<geo::detail::_CacheItem<_GEOTileKey, id, _value_ptr>, void *>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<geo::detail::_CacheItem<_GEOTileKey, id, _value_ptr>, void *>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<geo::detail::_CacheItem<_GEOTileKey, id, _value_ptr>, void *>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<geo::detail::_CacheItem<_GEOTileKey, id, _value_ptr>, void *>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<geo::detail::_CacheItem<_GEOTileKey, id, _value_ptr>, void *>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<geo::detail::_CacheItem<_GEOTileKey, id, _value_ptr>, void *>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<_GEOTileKey, std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<geo::detail::_CacheItem<_GEOTileKey, id, _value_ptr>, void *>>, std::__1::hash<GEOTileKey>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<_GEOTileKey, std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<geo::detail::_CacheItem<_GEOTileKey, id, _value_ptr>, void *>>, std::__1::equal_to<GEOTileKey>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned long long, _GEOTileKey, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, _GEOTileKey>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, _GEOTileKey>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, _GEOTileKey>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, _GEOTileKey>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, _GEOTileKey>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, _GEOTileKey>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, _GEOTileKey>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, _GEOTileKey>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, _GEOTileKey>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, _GEOTileKey>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long long, _GEOTileKey>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, _GEOTileKey>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, _GEOTileKey>, std::__1::equal_to<unsigned long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_set<GEORoadEdge, std::__1::hash<GEORoadEdge>, std::__1::equal_to<GEORoadEdge>, std::__1::allocator<GEORoadEdge>> {
    struct __hash_table<GEORoadEdge, std::__1::hash<GEORoadEdge>, std::__1::equal_to<GEORoadEdge>, std::__1::allocator<GEORoadEdge>> {
        struct unique_ptr<std::__1::__hash_node<GEORoadEdge, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<GEORoadEdge, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<GEORoadEdge, void *>*>, std::__1::allocator<std::__1::__hash_node<GEORoadEdge, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<GEORoadEdge, void *>*> {
                struct __hash_node<GEORoadEdge, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::hash<GEORoadEdge>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::equal_to<GEORoadEdge>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_set<_GEOTileKey, std::__1::hash<GEOTileKey>, std::__1::equal_to<GEOTileKey>, std::__1::allocator<_GEOTileKey>> {
    struct __hash_table<_GEOTileKey, std::__1::hash<GEOTileKey>, std::__1::equal_to<GEOTileKey>, std::__1::allocator<_GEOTileKey>> {
        struct unique_ptr<std::__1::__hash_node<_GEOTileKey, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<_GEOTileKey, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<_GEOTileKey, void *>*>, std::__1::allocator<std::__1::__hash_node<_GEOTileKey, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<_GEOTileKey, void *>*> {
                struct __hash_node<_GEOTileKey, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::hash<GEOTileKey>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::equal_to<GEOTileKey>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct vector<GEOLocationCoordinate2D, std::__1::allocator<GEOLocationCoordinate2D>> {
    CDStruct_183601bc *__begin_;
    CDStruct_183601bc *__end_;
    struct __compressed_pair<GEOLocationCoordinate2D *, std::__1::allocator<GEOLocationCoordinate2D>> {
        CDStruct_183601bc *__first_;
    } __end_cap_;
};

struct vector<GEOVectorTilePoint, std::__1::allocator<GEOVectorTilePoint>> {
    CDStruct_183601bc *__begin_;
    CDStruct_183601bc *__end_;
    struct __compressed_pair<GEOVectorTilePoint *, std::__1::allocator<GEOVectorTilePoint>> {
        CDStruct_183601bc *__first_;
    } __end_cap_;
};

struct vector<geo::PolylineCoordinate, std::__1::allocator<geo::PolylineCoordinate>> {
    struct PolylineCoordinate *__begin_;
    struct PolylineCoordinate *__end_;
    struct __compressed_pair<geo::PolylineCoordinate *, std::__1::allocator<geo::PolylineCoordinate>> {
        struct PolylineCoordinate *__first_;
    } __end_cap_;
};

struct vector<zilch::GeoCoordinates, std::__1::allocator<zilch::GeoCoordinates>>;

struct vector<zilch::GeometryPathElement, std::__1::allocator<zilch::GeometryPathElement>> {
    struct GeometryPathElement *_field1;
    struct GeometryPathElement *_field2;
    struct __compressed_pair<zilch::GeometryPathElement *, std::__1::allocator<zilch::GeometryPathElement>> {
        struct GeometryPathElement *_field1;
    } _field3;
};

struct vector<zilch::Path<std::__1::shared_ptr<geo::MapEdge>>::Entry, std::__1::allocator<zilch::Path<std::__1::shared_ptr<geo::MapEdge>>::Entry>> {
    struct Entry *_field1;
    struct Entry *_field2;
    struct __compressed_pair<zilch::Path<std::__1::shared_ptr<geo::MapEdge>>::Entry *, std::__1::allocator<zilch::Path<std::__1::shared_ptr<geo::MapEdge>>::Entry>> {
        struct Entry *_field1;
    } _field3;
};

struct vector<zilch::RoadPathElement<std::__1::shared_ptr<geo::MapEdge>>, std::__1::allocator<zilch::RoadPathElement<std::__1::shared_ptr<geo::MapEdge>>>> {
    RoadPathElement_384b44ed *_field1;
    RoadPathElement_384b44ed *_field2;
    struct __compressed_pair<zilch::RoadPathElement<std::__1::shared_ptr<geo::MapEdge>>*, std::__1::allocator<zilch::RoadPathElement<std::__1::shared_ptr<geo::MapEdge>>>> {
        RoadPathElement_384b44ed *_field1;
    } _field3;
};

#pragma mark Typedef'd Structures

typedef struct {
    id _field1;
    char *_field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned int _field7;
    unsigned long long _field8;
    _Bool _field9;
    unsigned long long _field10;
    float _field11;
    unsigned long long _field12;
    id _field13;
    int _field14;
} CDStruct_58d0ca89;

typedef struct {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
} CDStruct_d66e66b9;

typedef struct {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
} CDStruct_7523a67d;

typedef struct {
    unsigned int _field1;
    unsigned int _field2;
} CDStruct_c0454aff;

typedef struct {
    unsigned int _field1;
    unsigned long long _field2;
} CDStruct_d008d4b8;

typedef struct {
    unsigned int _field1;
    double _field2;
} CDStruct_e4886f83;

typedef struct {
    unsigned int _field1;
    int _field2;
} CDStruct_1e94be47;

typedef struct {
    unsigned long long _high;
    unsigned long long _low;
} CDStruct_612aec5b;

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

typedef struct {
    unsigned long long _field1;
    double _field2;
    unsigned long long _field3;
} CDStruct_96e0509c;

typedef struct {
    unsigned short _field1;
} CDStruct_f6a177db;

typedef struct {
    unsigned int *list;
    unsigned long long count;
    unsigned long long size;
} CDStruct_9f2792e4;

typedef struct {
    unsigned long long *list;
    unsigned long long count;
    unsigned long long size;
} CDStruct_62a50c50;

typedef struct {
    char *_field1;
    unsigned long long _field2;
    unsigned long long _field3;
} CDStruct_8bf61218;

typedef struct {
    char *_field1;
    char *_field2;
    unsigned int _field3;
} CDStruct_29923528;

typedef struct {
    int *list;
    unsigned long long count;
    unsigned long long size;
} CDStruct_95bda58d;

typedef struct {
    float _field1;
    float _field2;
} CDStruct_b2fbf00d;

typedef struct {
    int _beginIndex;
    int _endIndex;
    int _stringType;
} CDStruct_0756942c;

typedef struct {
    long long _field1;
    long long _field2;
} CDStruct_912cb5d2;

typedef struct CDStruct_183601bc;

typedef struct {
    unsigned char _field1;
    CDStruct_183601bc *_field2;
    unsigned long long _field3;
    float *_field4;
    struct _NSRange *_field5;
    unsigned long long _field6;
} CDStruct_3cfc3106;

typedef struct {
    unsigned char _field1;
    CDStruct_8bf61218 _field2;
    _Bool _field3;
    char *_field4;
    unsigned long long _field5;
    unsigned long long _field6;
} CDStruct_f3ac0f61;

typedef struct {
    unsigned int _field1;
    unsigned int _field2;
    _Bool _field3;
    CDStruct_8a1bf2a3 _field4;
} CDStruct_aca30317;

typedef struct {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    CDStruct_183601bc *_field5;
} CDStruct_dde70fb6;

typedef struct {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    struct {
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
    } _field5;
} CDStruct_3f74b7eb;

typedef struct {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    CDStruct_8a1bf2a3 _field4;
} CDStruct_97e972fa;

typedef struct {
    unsigned int _field1;
    unsigned int _field2;
    CDStruct_d7010776 _field3;
} CDStruct_13868713;

typedef struct {
    unsigned int _field1;
    int _field2;
    CDStruct_d7010776 _field3;
} CDStruct_8f5f9923;

typedef struct {
    CDStruct_183601bc *_field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    CDStruct_183601bc *_field6;
    CDStruct_183601bc *_field7;
} CDStruct_91f75a7f;

typedef struct {
    CDStruct_183601bc *_field1;
    unsigned long long _field2;
    unsigned short _field3;
    unsigned int _field4;
    char *_field5;
    unsigned long long _field6;
    struct {
        unsigned int _field1;
        _Bool _field2;
    } _field7;
} CDStruct_effb527d;

typedef struct {
    double _field1;
    unsigned int _field2;
    _Bool _field3;
    CDStruct_8a1bf2a3 _field4;
} CDStruct_740ee37d;

typedef struct {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    double _field8;
    float _field9;
    float _field10;
    struct {
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
    } _field11;
} CDStruct_eb2d75ab;

typedef struct {
    double _x;
    double _y;
    int _z;
    struct {
        unsigned int z:1;
    } _has;
} CDStruct_bddcf505;

typedef struct {
    double _height;
    double _width;
    CDStruct_db93fd0f _has;
} CDStruct_af817366;

typedef struct {
    double _time;
    int _flexibility;
    int _type;
    struct {
        unsigned int time:1;
        unsigned int flexibility:1;
        unsigned int type:1;
    } _has;
} CDStruct_8c2f87f5;

typedef struct {
    float _field1;
    unsigned int _field2;
    float _field3;
    CDStruct_8a1bf2a3 _field4;
} CDStruct_11cc3dfc;

typedef struct {
    int _field1;
    _Bool _field2;
    CDStruct_d7010776 _field3;
} CDStruct_2961ad32;

typedef struct {
    int _currentRouteTypeAtEndOfNav;
    unsigned int _manuallyChangedRouteCount;
    unsigned int _manuallyDisabledHFPCount;
    unsigned int _manuallyEnabledHFPCount;
    unsigned int _spokenPromptsCount;
    _Bool _bTHFPAvailableAtEndOfNav;
    _Bool _bTHFPRoutesAvailable;
    _Bool _currentRouteHFPEnabledAtEndOfNav;
    _Bool _everManuallyChangedRoute;
    _Bool _everManuallyEnabledHFPRoute;
    _Bool _everViewedAudioSheet;
    _Bool _everViewedAudioSheetBTAny;
    _Bool _everViewedAudioSheetBTHFP;
    _Bool _viewedAudioSheet;
    _Bool _viewedAudioSheetBTAny;
    _Bool _viewedAudioSheetBTHFP;
    _Bool _wirelessRoutesAvailable;
    struct {
        unsigned int currentRouteTypeAtEndOfNav:1;
        unsigned int manuallyChangedRouteCount:1;
        unsigned int manuallyDisabledHFPCount:1;
        unsigned int manuallyEnabledHFPCount:1;
        unsigned int spokenPromptsCount:1;
        unsigned int bTHFPAvailableAtEndOfNav:1;
        unsigned int bTHFPRoutesAvailable:1;
        unsigned int currentRouteHFPEnabledAtEndOfNav:1;
        unsigned int everManuallyChangedRoute:1;
        unsigned int everManuallyEnabledHFPRoute:1;
        unsigned int everViewedAudioSheet:1;
        unsigned int everViewedAudioSheetBTAny:1;
        unsigned int everViewedAudioSheetBTHFP:1;
        unsigned int viewedAudioSheet:1;
        unsigned int viewedAudioSheetBTAny:1;
        unsigned int viewedAudioSheetBTHFP:1;
        unsigned int wirelessRoutesAvailable:1;
    } _has;
} CDStruct_80e815ea;

typedef struct {
    int _field1;
    unsigned int _field2;
    unsigned int _field3;
    int _field4;
    unsigned int _field5;
    int _field6;
    struct {
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
    } _field7;
} CDStruct_bf9e66ee;

typedef struct {
    int _field1;
    int _field2;
    int _field3;
    CDStruct_8a1bf2a3 _field4;
} CDStruct_e02beb0c;

typedef struct {
    int _field1;
    int _field2;
    CDStruct_d7010776 _field3;
} CDStruct_c55e649d;

typedef struct {
    CDStruct_58d0ca89 _field1;
    char *_field2;
    unsigned long long _field3;
} CDStruct_2da3f85a;

typedef struct {
    CDStruct_58d0ca89 _field1;
    CDStruct_b2fbf00d _field2;
    unsigned char _field3;
    unsigned char _field4;
    unsigned char _field5;
    CDStruct_183601bc *_field6;
} CDStruct_3cbe5a8b;

typedef struct {
    CDStruct_34734122 origin;
    struct {
        double width;
        double height;
    } size;
} CDStruct_02837cd9;

typedef struct {
    struct PolylineCoordinate _field1;
    struct PolylineCoordinate _field2;
} CDStruct_dc7a564b;

typedef struct {
    double _field1;
    struct PolylineCoordinate _field2;
    struct {
        double _field1;
        double _field2;
    } _field3;
    double _field4;
    double _field5;
    unsigned long long _field6;
    _Bool _field7;
    struct {
        unsigned long long _field1;
        double _field2;
        struct PolylineCoordinate _field3;
        struct {
            double _field1;
            double _field2;
        } _field4;
    } _field8;
} CDStruct_7233881d;

typedef struct {
    CDStruct_7523a67d _field1;
    struct {
        unsigned int _field1;
        int _field2;
        float _field3;
        _Bool _field4;
        _Bool _field5;
        _Bool _field6;
        _Bool _field7;
        _Bool _field8;
        struct {
            unsigned char _field1;
            unsigned short _field2;
        } _field9[16];
    } _field2;
} CDStruct_db2bd8f2;

typedef struct {
    CDStruct_58d0ca89 _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    int _field4;
    int _field5;
    int _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    union {
        struct {
            CDStruct_b2fbf00d _field1;
            CDStruct_b2fbf00d _field2;
        } _field1;
        struct {
            float _field1;
            float _field2;
            float _field3;
            float _field4;
        } _field2;
    } _field9;
    CDStruct_183601bc *_field10;
    struct {
        unsigned short _field1[2];
        unsigned short _field2[2];
    } _field11;
    unsigned char _field12;
} CDStruct_6cf27ba1;

typedef struct {
    CDStruct_6cf27ba1 _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    _Bool _field4;
} CDStruct_910e0270;

typedef struct {
    CDStruct_6cf27ba1 _field1;
    CDStruct_b2fbf00d _field2;
    _Bool _field3;
    unsigned long long _field4;
    unsigned long long _field5;
} CDStruct_5535450d;

// Ambiguous groups
typedef struct {
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
} CDStruct_8a1bf2a3;

typedef struct {
    unsigned int height:1;
    unsigned int width:1;
} CDStruct_db93fd0f;

typedef struct {
    unsigned int maxResults:1;
    unsigned int sortOrder:1;
} CDStruct_6c9bcd7c;

typedef struct {
    unsigned int muid:1;
    unsigned int resultProviderId:1;
} CDStruct_12a4a01e;

typedef struct {
    unsigned int :1;
    unsigned int :1;
} CDStruct_d7010776;

typedef struct {
    unsigned int photoType:1;
} CDStruct_86c1f53f;

typedef struct {
    unsigned int resultProviderId:1;
} CDStruct_08086d5c;

typedef struct {
    unsigned int status:1;
} CDStruct_47fe53f2;

typedef struct {
    unsigned int statusCode:1;
} CDStruct_bcb1eac0;

typedef struct {
    unsigned int transportType:1;
} CDStruct_a995201b;

typedef struct {
    double _field1;
    double _field2;
} CDStruct_c3b9c2ee;

typedef struct {
    double latitude;
    double longitude;
} CDStruct_2c43369c;

typedef struct {
    double x;
    double y;
} CDStruct_34734122;

typedef struct Box<float, 2> {
    Matrix_8746f91e _field1;
    Matrix_8746f91e _field2;
} Box_3fb92e00;

typedef struct Matrix<float, 2, 1> {
    float _e[2];
} Matrix_8746f91e;

typedef struct Path<std::__1::shared_ptr<geo::MapEdge>> {
    struct GeoCoordinates _field1;
    struct GeoCoordinates _field2;
    struct vector<zilch::RoadPathElement<std::__1::shared_ptr<geo::MapEdge>>, std::__1::allocator<zilch::RoadPathElement<std::__1::shared_ptr<geo::MapEdge>>>> _field3;
    struct vector<zilch::GeometryPathElement, std::__1::allocator<zilch::GeometryPathElement>> _field4;
    struct vector<zilch::Path<std::__1::shared_ptr<geo::MapEdge>>::Entry, std::__1::allocator<zilch::Path<std::__1::shared_ptr<geo::MapEdge>>::Entry>> _field5;
} Path_7b702847;

typedef struct RoadPathElement<std::__1::shared_ptr<geo::MapEdge>> {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    unsigned long long _field3;
    shared_ptr_b236f348 _field4;
    struct GeoPolyline _field5;
    int _field6;
} RoadPathElement_384b44ed;

typedef struct __list_iterator<LoadItem, void *> {
    struct __list_node<LoadItem, void *> *_field1;
} __list_iterator_d839716a;

typedef struct shared_ptr<geo::MapEdge> {
    struct MapEdge *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_b236f348;

typedef struct shared_ptr<geo::MapEdgeRoad> {
    struct MapEdgeRoad *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_92bc9970;

typedef struct shared_ptr<zilch::Message> {
    struct Message *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_27244a92;

typedef struct unordered_set<_GEOTileKey, std::__1::hash<GEOTileKey>, std::__1::equal_to<GEOTileKey>, std::__1::allocator<_GEOTileKey>> {
    struct __hash_table<_GEOTileKey, std::__1::hash<GEOTileKey>, std::__1::equal_to<GEOTileKey>, std::__1::allocator<_GEOTileKey>> {
        struct unique_ptr<std::__1::__hash_node<_GEOTileKey, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<_GEOTileKey, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<_GEOTileKey, void *>*>, std::__1::allocator<std::__1::__hash_node<_GEOTileKey, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<_GEOTileKey, void *>*> {
                struct __hash_node<_GEOTileKey, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::hash<GEOTileKey>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::equal_to<GEOTileKey>> {
            float __first_;
        } __p3_;
    } __table_;
} unordered_set_4cb294f7;

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/GeoServices.framework/GeoServices
// UUID: 8DD72E8F-9BEC-3E15-AEB8-E7BA379BAB6B
//
//                           Arch: x86_64
//                Current version: 982.17.0
//          Compatibility version: 1.0.0
//                 Source version: 982.17.0.0.0
//            Minimum iOS version: 8.0.0
//                    SDK version: 8.0.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol GEOCacheManaging <NSObject>
- (long long)invalidationStateForPlace:(GEOPDPlace *)arg1;
- (void)checkHasExpiredWithInvalidationDatas:(NSArray *)arg1 handler:(void (^)(NSArray *))arg2;
- (void)versionsForDomains:(NSArray *)arg1 handler:(void (^)(NSDictionary *))arg2;
@end

@protocol GEOCompletion <NSObject>
@property(readonly, nonatomic) NSArray *groups;
@end

@protocol GEOCompletionGroup <NSObject>
@property(readonly, nonatomic) NSString *localizedSectionHeader;
@property(readonly, nonatomic) NSArray *items;
@end

@protocol GEOCompletionItem <NSObject>
@property(readonly, nonatomic) NSData *metadata;
@property(readonly, nonatomic) NSData *entryMetadata;
@property(readonly, nonatomic) id <GEOMapItem> geoMapItem;
@property(readonly, nonatomic) NSArray *displayLines;
- (void)applyToLegacySearch:(id)arg1;
- (void)sendFeedback;
- (_Bool)getCoordinate:(CDStruct_c3b9c2ee *)arg1;
- (NSString *)calloutTitle;
- (NSString *)queryLine;
- (NSArray *)highlightsForLine:(unsigned long long)arg1;
@end

@protocol GEOETAUpdaterDelegate <NSObject>
- (void)etaUpdaterReceivedInvalidRoute:(GEOETAUpdater *)arg1 newRoute:(GEOComposedRoute *)arg2 incidentsOnRoute:(NSArray *)arg3 incidentsOffRoute:(NSArray *)arg4;
- (void)etaUpdaterUpdatedETA:(GEOETAUpdater *)arg1;
- (void)etaUpdater:(GEOETAUpdater *)arg1 receivedError:(NSError *)arg2;
- (void)etaUpdater:(GEOETAUpdater *)arg1 receivedETATrafficUpdateResponse:(GEOETATrafficUpdateResponse *)arg2;
- (void)etaUpdater:(GEOETAUpdater *)arg1 willSendETATrafficUpdateRequest:(GEOETATrafficUpdateRequest *)arg2;
- (NSArray *)etaUpdaterRoutesForETATrafficUpdateRequest:(GEOETAUpdater *)arg1;

@optional
- (_Bool)etaUpdater:(GEOETAUpdater *)arg1 updateRouteWithETATrafficUpdateResponse:(GEOETATrafficUpdateResponse *)arg2 step:(GEOStep *)arg3 percentOfCurrentStepRemaining:(double)arg4;
@end

@protocol GEOMapAccessRestrictions <NSObject>
@property(readonly, nonatomic) _Bool allowsNetworkTileLoad;
@end

@protocol GEOMapItem <NSObject>
@property(readonly, nonatomic) _Bool isEventAllDay;
@property(readonly, nonatomic) NSDate *eventDate;
@property(readonly, nonatomic) NSString *eventName;
@property(readonly, nonatomic) _Bool contactIsMe;
@property(readonly, nonatomic) NSString *contactSpokenName;
@property(readonly, nonatomic) NSString *contactName;
@property(readonly, nonatomic) int contactAddressType;
@property(readonly, nonatomic) NSString *timezone;
@property(readonly, nonatomic) NSArray *areasOfInterest;
@property(readonly, nonatomic) NSDictionary *addressDictionary;
@property(readonly, nonatomic) GEOAddress *geoAddress;
@property(readonly, nonatomic) GEOMapRegion *geoFenceMapRegion;
@property(readonly, nonatomic) GEOMapRegion *displayMapRegion;
@property(readonly, nonatomic) CDStruct_c3b9c2ee centerCoordinate;
@property(readonly, nonatomic) CDStruct_c3b9c2ee coordinate;
@property(readonly, nonatomic, getter=isValid) _Bool valid;
@property(readonly, nonatomic, getter=isDisputed) _Bool disputed;
@property(readonly, nonatomic) NSData *encodedData;
@property(readonly, nonatomic) NSString *name;
- (NSString *)spokenNameForLocale:(NSString *)arg1;
@end

@protocol GEOMapItemPrivate <GEOMapItem>
@property(readonly, nonatomic, getter=_additionalPlaceInfos) NSArray *additionalPlaceInfos;
@property(readonly, nonatomic, getter=_customIconID) unsigned long long customIconID;
@property(readonly, nonatomic, getter=_styleAttributes) GEOFeatureStyleAttributes *styleAttributes;
@property(readonly, nonatomic, getter=_poiSurveyURLString) NSString *poiSurveyURLString;
@property(readonly, nonatomic, getter=_reviewsAttribution) GEOMapItemReviewsAttribution *reviewsAttribution;
@property(readonly, nonatomic, getter=_photosAttribution) GEOMapItemPhotosAttribution *photosAttribution;
@property(readonly, nonatomic, getter=_attribution) GEOMapItemPlaceAttribution *attribution;
@property(readonly, copy, nonatomic, getter=_vendorID) NSString *vendorID;
@property(readonly, copy, nonatomic, getter=_providerURL) NSURL *providerURL;
@property(readonly, copy, nonatomic, getter=_webURL) NSURL *webURL;
@property(readonly, nonatomic, getter=_needsAttribution) _Bool needsAttribution;
@property(readonly, nonatomic, getter=_openState) unsigned int openState;
@property(readonly, nonatomic, getter=_disambiguationName) NSString *disambiguationName;
@property(readonly, nonatomic, getter=_telephone) NSString *telephone;
@property(readonly, nonatomic, getter=_hasTelephone) _Bool hasTelephone;
@property(readonly, nonatomic, getter=_operatingHours) NSArray *operatingHours;
@property(readonly, nonatomic, getter=_hasCurrentOperatingHours) _Bool hasCurrentOperatingHours;
@property(readonly, nonatomic, getter=_hasOperatingHours) _Bool hasOperatingHours;
@property(readonly, nonatomic, getter=_takesReservations) _Bool takesReservations;
@property(readonly, nonatomic, getter=_hasTakesReservationsAmenity) _Bool hasTakesReservationsAmenity;
@property(readonly, nonatomic, getter=_goodForKids) _Bool goodForKids;
@property(readonly, nonatomic, getter=_hasGoodForKidsAmenity) _Bool hasGoodForKidsAmenity;
@property(readonly, nonatomic, getter=_hasDelivery) _Bool hasDelivery;
@property(readonly, nonatomic, getter=_hasDeliveryAmenity) _Bool hasDeliveryAmenity;
@property(readonly, nonatomic, getter=_hasAnyAmenities) _Bool hasAnyAmenities;
@property(readonly, nonatomic, getter=_priceRange) unsigned int priceRange;
@property(readonly, nonatomic, getter=_hasPriceRange) _Bool hasPriceRange;
@property(readonly, nonatomic, getter=_normalizedUserRatingScore) float normalizedUserRatingScore;
@property(readonly, nonatomic, getter=_sampleSizeForUserRatingScore) unsigned int sampleSizeForUserRatingScore;
@property(readonly, nonatomic, getter=_hasUserRatingScore) _Bool hasUserRatingScore;
@property(readonly, nonatomic, getter=_businessURL) NSString *businessURL;
@property(readonly, nonatomic, getter=_areaInMeters) double areaInMeters;
@property(readonly, nonatomic, getter=_hasAreaInMeters) _Bool hasAreaInMeters;
@property(readonly, nonatomic, getter=_muid) unsigned long long muid;
@property(readonly, nonatomic, getter=_hasMUID) _Bool hasMUID;
@property(readonly, nonatomic, getter=_flyoverAnnouncementMessage) NSString *flyoverAnnouncement;
@property(readonly, nonatomic, getter=_hasFlyoverAnnouncementMessage) _Bool hasFlyoverAnnouncement;
@property(readonly, nonatomic, getter=_flyover) GEOPDFlyover *flyover;
@property(readonly, nonatomic, getter=_hasFlyover) _Bool hasFlyover;
@property(readonly, nonatomic, getter=_resultProviderID) int resultProviderID;
@property(readonly, nonatomic, getter=_hasResultProviderID) _Bool hasResultProviderID;
@property(readonly, nonatomic, getter=_sequenceNumber) unsigned int sequenceNumber;
@property(readonly, nonatomic, getter=_sessionGUID) CDStruct_612aec5b sessionGUID;
@property(readonly, nonatomic, getter=_hasSessionGUID) _Bool hasSessionGUID;
@property(readonly, nonatomic, getter=_roadAccessPoints) NSArray *roadAccessPoints;
@property(readonly, nonatomic, getter=_placeType) int placeType;
@property(readonly, nonatomic, getter=_hasResolvablePartialInformation) _Bool hasResolvablePartialInformation;
@property(readonly, nonatomic, getter=_placeDataAsData) NSData *placeDataAsData;
@property(readonly, nonatomic, getter=_placeAsData) NSData *placeAsData;
@property(readonly, nonatomic, getter=_clientAttributes) GEOMapItemClientAttributes *clientAttributes;
@property(readonly, nonatomic, getter=_placeData) GEOPDPlace *placeData;
@property(readonly, nonatomic, getter=_place) GEOPlace *place;
- (id <GEOMapItemPrivate>)_mapItemByStrippingOptionalData;
- (NSURL *)_urlForWritingAReview;
- (NSURL *)_urlForReviewWithUID:(NSString *)arg1;
- (NSURL *)_urlForPhotoWithUID:(NSString *)arg1;
- (_Bool)_hasLocalizedCategoryNamesForType:(unsigned int)arg1;
- (NSArray *)_localizedCategoryNamesForType:(unsigned int)arg1;
- (GEOMapRegion *)_arrivalMapRegionForTransportType:(int)arg1;
- (unsigned int)_travelDistanceForTransportType:(int)arg1;
- (unsigned int)_travelTimeForTransportType:(int)arg1;
- (int)_recommendedTransportType;
- (NSString *)_spokenAddressForLocale:(NSString *)arg1;
@end

@protocol GEOMapLine <NSObject>
@property(readonly, nonatomic) double length;
@property(readonly, nonatomic) CDStruct_c3b9c2ee *coordinates;
@property(readonly, nonatomic) unsigned long long coordinateCount;
@end

@protocol GEOMapRoad <GEOMapLine>
@property(readonly, nonatomic) int formOfWay;
@property(readonly, nonatomic) int roadClass;
- (GEOMapRequest *)findRoadsFrom:(void (^)(id <GEOMapRoad>))arg1 completionHandler:(void (^)(GEOMapRequest *))arg2;
@end

@protocol GEOMapServiceCompletionTicket <NSObject>
@property(readonly, nonatomic) GEOMapServiceTraits *traits;
- (_Bool)matchesFragment:(NSString *)arg1;
- (void)cancel;
- (void)submitWithAutoCompletionHandler:(void (^)(id <GEOCompletion>, NSError *))arg1 networkActivity:(void (^)(_Bool))arg2;
@end

@protocol GEOMapServiceFixNotificationTicket <NSObject>
@property(readonly, nonatomic) GEOMapServiceTraits *traits;
- (void)cancel;
- (void)submitWithHandler:(void (^)(NSError *))arg1 networkActivity:(void (^)(_Bool))arg2;
@end

@protocol GEOMapServiceProblemReportTicket <NSObject>
@property(readonly, nonatomic) GEOMapServiceTraits *traits;
- (void)cancel;
- (void)submitWithHandler:(void (^)(NSString *, _Bool, NSError *))arg1 networkActivity:(void (^)(_Bool))arg2;
@end

@protocol GEOMapServiceSearchTicket <GEOMapServiceTicket>
@property(readonly, nonatomic) NSString *searchQuery;
@end

@protocol GEOMapServiceTicket <NSObject>
@property(readonly, nonatomic) GEOMapRegion *resultBoundingRegion;
@property(readonly, nonatomic) GEOMapServiceTraits *traits;
- (void)applyToCorrectedSearch:(GEORPCorrectedSearch *)arg1;
- (void)cancel;
- (void)submitWithRefinedHandler:(void (^)(NSArray *, NSArray *, NSError *))arg1 timeout:(long long)arg2 networkActivity:(void (^)(_Bool))arg3;
- (void)submitWithHandler:(void (^)(NSArray *, NSError *))arg1 timeout:(long long)arg2 networkActivity:(void (^)(_Bool))arg3;
- (void)submitWithRefinedHandler:(void (^)(NSArray *, NSArray *, NSError *))arg1 networkActivity:(void (^)(_Bool))arg2;
- (void)submitWithHandler:(void (^)(NSArray *, NSError *))arg1 networkActivity:(void (^)(_Bool))arg2;
@end

@protocol GEOPlaceDataProxy <NSObject>
- (void)applyRAPUpdatedMapItems:(NSArray *)arg1;
- (void)shrinkToSize:(unsigned long long)arg1 finished:(void (^)(unsigned long long))arg2;
- (void)calculateFreeableSpaceWithHandler:(void (^)(unsigned long long))arg1;
- (void)performPlaceDataRequest:(GEOPDPlaceRequest *)arg1 traits:(GEOMapServiceTraits *)arg2 requesterHandler:(void (^)(GEOPDPlaceResponse *, NSError *))arg3;
- (void)trackPlaceData:(GEOPDPlace *)arg1;
- (void)fetchAllCacheEntriesWithRequesterHandler:(void (^)(NSDictionary *, NSError *))arg1;
- (void)requestPhoneNumbers:(NSArray *)arg1 allowCellularDataForLookup:(_Bool)arg2 traits:(GEOMapServiceTraits *)arg3 requesterHandler:(void (^)(NSArray *, NSError *))arg4;
- (void)requestMUIDs:(NSArray *)arg1 includeETA:(_Bool)arg2 traits:(GEOMapServiceTraits *)arg3 requesterHandler:(void (^)(NSArray *, NSError *))arg4;
@end

@protocol GEOResourceManifestServerProxy <NSObject>
@property(nonatomic) id <GEOResourceManifestServerProxyDelegate> delegate;
- (void)getResourceManifestWithHandler:(void (^)(GEOResourceManifestDownload *, NSError *))arg1;
- (oneway void)resetActiveTileGroup;
- (oneway void)setActiveTileGroupIdentifier:(NSNumber *)arg1;
- (void)forceUpdate:(void (^)(NSError *))arg1;
- (void)updateIfNecessary:(void (^)(NSError *))arg1;
- (void)setManifestToken:(NSString *)arg1 completionHandler:(void (^)(NSError *))arg2;
- (GEOResourceManifestConfiguration *)configuration;
- (NSString *)authToken;
- (void)closeConnection;
- (void)openConnection;
- (NSObject<OS_dispatch_queue> *)serverQueue;
- (id)initWithDelegate:(id <GEOResourceManifestServerProxyDelegate>)arg1 configuration:(GEOResourceManifestConfiguration *)arg2;
@end

@protocol GEOResourceManifestServerProxyDelegate <NSObject>
- (oneway void)serverProxy:(id <GEOResourceManifestServerProxy>)arg1 didChangeActiveTileGroup:(GEOActiveTileGroup *)arg2 finishedCallback:(void (^)(void))arg3;
- (oneway void)serverProxyDidStopLoadingResources:(id <GEOResourceManifestServerProxy>)arg1;
- (oneway void)serverProxyWillStartLoadingResources:(id <GEOResourceManifestServerProxy>)arg1;
- (oneway void)serverProxyDidStopUpdatingResourceManifest:(id <GEOResourceManifestServerProxy>)arg1;
- (oneway void)serverProxyWillStartUpdatingResourceManifest:(id <GEOResourceManifestServerProxy>)arg1;
@end

@protocol GEOResourceManifestTileGroupObserver <NSObject>

@optional
- (void)resourceManifestManager:(GEOResourceManifestManager *)arg1 didChangeActiveTileGroup:(GEOActiveTileGroup *)arg2 fromOldTileGroup:(GEOActiveTileGroup *)arg3;
- (void)resourceManifestManagerDidChangeActiveTileGroup:(GEOResourceManifestManager *)arg1;
- (void)resourceManifestManagerWillChangeActiveTileGroup:(GEOResourceManifestManager *)arg1;
@end

@protocol GEORouteHypothesizerUpdaterDelegate <NSObject>
- (void)routeHypothesizerUpdater:(GEORouteHypothesizerUpdater *)arg1 receivedNewRoute:(GEOComposedRoute *)arg2 request:(GEODirectionsRequest *)arg3 response:(GEODirectionsResponse *)arg4;
- (void)routeHypothesizerUpdater:(GEORouteHypothesizerUpdater *)arg1 willRequestNewRoute:(GEODirectionsRequest *)arg2;
@end

@protocol GEOSearchAttributionServerProxy <NSObject>
- (void)loadAttributionInfoForIdentifier:(NSString *)arg1 version:(unsigned int)arg2 completionHandler:(void (^)(GEOSearchAttributionInfo *, _Bool))arg3 errorHandler:(void (^)(NSError *))arg4;
@end

@protocol GEOTileDecoder <NSObject>
- (id)decodeTile:(NSData *)arg1 forKey:(const struct _GEOTileKey *)arg2;
- (_Bool)canDecodeTile:(const struct _GEOTileKey *)arg1 quickly:(_Bool *)arg2;
@end

@protocol GEOTileRequesterDelegate
- (void)tileRequesterFinished:(GEOTileRequester *)arg1;
- (void)tileRequester:(GEOTileRequester *)arg1 receivedError:(NSError *)arg2;
- (void)tileRequester:(GEOTileRequester *)arg1 receivedData:(NSData *)arg2 tileEdition:(unsigned int)arg3 tileSet:(unsigned int)arg4 etag:(NSString *)arg5 forKey:(struct _GEOTileKey)arg6 userInfo:(NSDictionary *)arg7;
@end

@protocol GEOTileServerProxyDelegate
- (void)proxy:(GEOTileServerProxy *)arg1 didShrinkDiskCacheByAmount:(unsigned long long)arg2;
- (void)proxy:(GEOTileServerProxy *)arg1 canShrinkDiskCacheByAmount:(unsigned long long)arg2;
- (void)proxy:(GEOTileServerProxy *)arg1 willGoToNetworkForTiles:(GEOTileKeyList *)arg2;
- (void)proxy:(GEOTileServerProxy *)arg1 failedToLoadAllPendingTilesWithError:(NSError *)arg2;
- (void)proxy:(GEOTileServerProxy *)arg1 failedToLoadTiles:(GEOTileKeyList *)arg2 error:(NSError *)arg3;
- (void)proxy:(GEOTileServerProxy *)arg1 loadedTile:(NSData *)arg2 forKey:(const struct _GEOTileKey *)arg3 info:(NSDictionary *)arg4;
@end

@protocol GEOURLSerializable <NSObject>
- (id)initWithUrlRepresentation:(id)arg1;
- (id)urlRepresentation;
@end

@protocol GEOVoltaireMultiTileDownloaderDelegate
- (void)tileDownload:(GEOVoltaireMultiTileDownloader *)arg1 didFailWithError:(NSError *)arg2;
- (void)tileDownloadFinished:(GEOVoltaireMultiTileDownloader *)arg1;
- (void)tileDownload:(GEOVoltaireMultiTileDownloader *)arg1 didReceiveData:(NSData *)arg2 edition:(unsigned int)arg3 forKey:(struct _GEOTileKey)arg4;
@end

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSFastEnumeration
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSSecureCoding <NSCoding>
+ (_Bool)supportsSecureCoding;
@end

@protocol NSURLConnectionDelegate <NSObject>

@optional
- (void)connection:(NSURLConnection *)arg1 didCancelAuthenticationChallenge:(NSURLAuthenticationChallenge *)arg2;
- (void)connection:(NSURLConnection *)arg1 didReceiveAuthenticationChallenge:(NSURLAuthenticationChallenge *)arg2;
- (_Bool)connection:(NSURLConnection *)arg1 canAuthenticateAgainstProtectionSpace:(NSURLProtectionSpace *)arg2;
- (void)connection:(NSURLConnection *)arg1 willSendRequestForAuthenticationChallenge:(NSURLAuthenticationChallenge *)arg2;
- (_Bool)connectionShouldUseCredentialStorage:(NSURLConnection *)arg1;
- (void)connection:(NSURLConnection *)arg1 didFailWithError:(NSError *)arg2;
@end

@protocol NSXMLParserDelegate <NSObject>

@optional
- (void)parser:(NSXMLParser *)arg1 validationErrorOccurred:(NSError *)arg2;
- (void)parser:(NSXMLParser *)arg1 parseErrorOccurred:(NSError *)arg2;
- (NSData *)parser:(NSXMLParser *)arg1 resolveExternalEntityName:(NSString *)arg2 systemID:(NSString *)arg3;
- (void)parser:(NSXMLParser *)arg1 foundCDATA:(NSData *)arg2;
- (void)parser:(NSXMLParser *)arg1 foundComment:(NSString *)arg2;
- (void)parser:(NSXMLParser *)arg1 foundProcessingInstructionWithTarget:(NSString *)arg2 data:(NSString *)arg3;
- (void)parser:(NSXMLParser *)arg1 foundIgnorableWhitespace:(NSString *)arg2;
- (void)parser:(NSXMLParser *)arg1 foundCharacters:(NSString *)arg2;
- (void)parser:(NSXMLParser *)arg1 didEndMappingPrefix:(NSString *)arg2;
- (void)parser:(NSXMLParser *)arg1 didStartMappingPrefix:(NSString *)arg2 toURI:(NSString *)arg3;
- (void)parser:(NSXMLParser *)arg1 didEndElement:(NSString *)arg2 namespaceURI:(NSString *)arg3 qualifiedName:(NSString *)arg4;
- (void)parser:(NSXMLParser *)arg1 didStartElement:(NSString *)arg2 namespaceURI:(NSString *)arg3 qualifiedName:(NSString *)arg4 attributes:(NSDictionary *)arg5;
- (void)parser:(NSXMLParser *)arg1 foundExternalEntityDeclarationWithName:(NSString *)arg2 publicID:(NSString *)arg3 systemID:(NSString *)arg4;
- (void)parser:(NSXMLParser *)arg1 foundInternalEntityDeclarationWithName:(NSString *)arg2 value:(NSString *)arg3;
- (void)parser:(NSXMLParser *)arg1 foundElementDeclarationWithName:(NSString *)arg2 model:(NSString *)arg3;
- (void)parser:(NSXMLParser *)arg1 foundAttributeDeclarationWithName:(NSString *)arg2 forElement:(NSString *)arg3 type:(NSString *)arg4 defaultValue:(NSString *)arg5;
- (void)parser:(NSXMLParser *)arg1 foundUnparsedEntityDeclarationWithName:(NSString *)arg2 publicID:(NSString *)arg3 systemID:(NSString *)arg4 notationName:(NSString *)arg5;
- (void)parser:(NSXMLParser *)arg1 foundNotationDeclarationWithName:(NSString *)arg2 publicID:(NSString *)arg3 systemID:(NSString *)arg4;
- (void)parserDidEndDocument:(NSXMLParser *)arg1;
- (void)parserDidStartDocument:(NSXMLParser *)arg1;
@end

@protocol PBRequesterDelegate <NSObject>

@optional
- (void)requesterWillSendRequestForEstablishedConnection:(PBRequester *)arg1;
- (void)requester:(PBRequester *)arg1 didFailWithError:(NSError *)arg2;
- (void)requesterDidCancel:(PBRequester *)arg1;
- (void)requesterDidFinish:(PBRequester *)arg1;
- (void)requester:(PBRequester *)arg1 didReceiveResponse:(PBCodable *)arg2 forRequest:(PBRequest *)arg3;
@end

@protocol _GEOCompletionSearchHint <NSObject>
- (GEOLatLng *)completionLocation;
- (NSString *)query;
- (GEOSuggestionsOptions *)suggestionsOptions;
@end

@protocol _GEOLegacyMapServiceTicket <NSObject>
- (GEOPlaceSearchResponse *)response;
- (GEOPlaceSearchRequest *)request;
@end

@protocol _GEOPlaceDataCacheProxy <NSObject>
- (void)shrinkToSize:(unsigned long long)arg1 finished:(void (^)(unsigned long long))arg2;
- (void)calculateFreeableSpaceWithHandler:(void (^)(unsigned long long))arg1;
- (void)deletePhoneNumberMapping;
- (void)evictAllEntries;
- (void)evictPlaceDataForKey:(struct _GEOTileKey)arg1;
- (void)evictPlaceDataForMUID:(unsigned long long)arg1;
- (void)setPlaceData:(GEOPDPlace *)arg1 forKey:(struct _GEOTileKey)arg2;
- (void)setPlaceData:(GEOPDPlace *)arg1 forMUID:(unsigned long long)arg2;
- (NSDictionary *)allCacheEntries;
- (unsigned long long)muidForPhoneNumber:(unsigned long long)arg1;
- (GEOPDPlace *)placeDataForKey:(struct _GEOTileKey)arg1;
- (GEOPDPlace *)placeDataForMUID:(unsigned long long)arg1;
- (GEOPDPlace *)placeDataForPhoneNumber:(unsigned long long)arg1;
@end

@interface GEOActiveTileGroup : PBCodable <NSCopying>
{
    NSString *_addressCorrectionInitURL;
    NSString *_addressCorrectionUpdateURL;
    NSMutableArray *_announcementsSupportedLanguages;
    NSString *_announcementsURL;
    NSMutableArray *_attributions;
    NSString *_autocompleteURL;
    NSString *_batchReverseGeocoderURL;
    NSString *_directionsURL;
    NSString *_dispatcherURL;
    NSString *_etaURL;
    NSString *_forwardGeocoderURL;
    unsigned int _identifier;
    NSString *_locationShiftURL;
    NSString *_mapMatchURL;
    NSString *_polyLocationShiftURL;
    NSString *_problemCategoriesURL;
    NSString *_problemNotificationAvailabilityURL;
    NSString *_problemOptInURL;
    NSString *_problemStatusURL;
    NSString *_problemSubmissionURL;
    NSMutableArray *_regionalResourceRegions;
    NSMutableArray *_regionalResourceTiles;
    NSString *_regionalResourcesURL;
    NSString *_releaseInfo;
    NSMutableArray *_resources;
    NSString *_resourcesURL;
    NSString *_reverseGeocoderURL;
    NSString *_reverseGeocoderVersionsURL;
    NSString *_searchAttributionManifestURL;
    NSString *_searchURL;
    NSString *_simpleETAURL;
    NSMutableArray *_tileSets;
    NSString *_uniqueIdentifier;
    NSString *_usageURL;
    GEOVersionManifest *_versionManifest;
}

@property(retain, nonatomic) GEOVersionManifest *versionManifest; // @synthesize versionManifest=_versionManifest;
@property(retain, nonatomic) NSString *problemOptInURL; // @synthesize problemOptInURL=_problemOptInURL;
@property(retain, nonatomic) NSString *dispatcherURL; // @synthesize dispatcherURL=_dispatcherURL;
@property(retain, nonatomic) NSMutableArray *announcementsSupportedLanguages; // @synthesize announcementsSupportedLanguages=_announcementsSupportedLanguages;
@property(retain, nonatomic) NSString *announcementsURL; // @synthesize announcementsURL=_announcementsURL;
@property(retain, nonatomic) NSString *problemNotificationAvailabilityURL; // @synthesize problemNotificationAvailabilityURL=_problemNotificationAvailabilityURL;
@property(retain, nonatomic) NSString *usageURL; // @synthesize usageURL=_usageURL;
@property(retain, nonatomic) NSString *problemCategoriesURL; // @synthesize problemCategoriesURL=_problemCategoriesURL;
@property(retain, nonatomic) NSString *reverseGeocoderVersionsURL; // @synthesize reverseGeocoderVersionsURL=_reverseGeocoderVersionsURL;
@property(retain, nonatomic) NSString *problemStatusURL; // @synthesize problemStatusURL=_problemStatusURL;
@property(retain, nonatomic) NSString *problemSubmissionURL; // @synthesize problemSubmissionURL=_problemSubmissionURL;
@property(retain, nonatomic) NSString *polyLocationShiftURL; // @synthesize polyLocationShiftURL=_polyLocationShiftURL;
@property(retain, nonatomic) NSString *addressCorrectionUpdateURL; // @synthesize addressCorrectionUpdateURL=_addressCorrectionUpdateURL;
@property(retain, nonatomic) NSString *addressCorrectionInitURL; // @synthesize addressCorrectionInitURL=_addressCorrectionInitURL;
@property(retain, nonatomic) NSString *simpleETAURL; // @synthesize simpleETAURL=_simpleETAURL;
@property(retain, nonatomic) NSString *resourcesURL; // @synthesize resourcesURL=_resourcesURL;
@property(retain, nonatomic) NSString *mapMatchURL; // @synthesize mapMatchURL=_mapMatchURL;
@property(retain, nonatomic) NSString *releaseInfo; // @synthesize releaseInfo=_releaseInfo;
@property(retain, nonatomic) NSString *batchReverseGeocoderURL; // @synthesize batchReverseGeocoderURL=_batchReverseGeocoderURL;
@property(retain, nonatomic) NSString *locationShiftURL; // @synthesize locationShiftURL=_locationShiftURL;
@property(retain, nonatomic) NSString *etaURL; // @synthesize etaURL=_etaURL;
@property(retain, nonatomic) NSString *directionsURL; // @synthesize directionsURL=_directionsURL;
@property(retain, nonatomic) NSString *forwardGeocoderURL; // @synthesize forwardGeocoderURL=_forwardGeocoderURL;
@property(retain, nonatomic) NSString *reverseGeocoderURL; // @synthesize reverseGeocoderURL=_reverseGeocoderURL;
@property(retain, nonatomic) NSString *autocompleteURL; // @synthesize autocompleteURL=_autocompleteURL;
@property(retain, nonatomic) NSString *searchAttributionManifestURL; // @synthesize searchAttributionManifestURL=_searchAttributionManifestURL;
@property(retain, nonatomic) NSString *searchURL; // @synthesize searchURL=_searchURL;
@property(retain, nonatomic) NSString *regionalResourcesURL; // @synthesize regionalResourcesURL=_regionalResourcesURL;
@property(retain, nonatomic) NSMutableArray *regionalResourceRegions; // @synthesize regionalResourceRegions=_regionalResourceRegions;
@property(retain, nonatomic) NSMutableArray *regionalResourceTiles; // @synthesize regionalResourceTiles=_regionalResourceTiles;
@property(retain, nonatomic) NSMutableArray *attributions; // @synthesize attributions=_attributions;
@property(retain, nonatomic) NSString *uniqueIdentifier; // @synthesize uniqueIdentifier=_uniqueIdentifier;
@property(retain, nonatomic) NSMutableArray *resources; // @synthesize resources=_resources;
@property(retain, nonatomic) NSMutableArray *tileSets; // @synthesize tileSets=_tileSets;
@property(nonatomic) unsigned int identifier; // @synthesize identifier=_identifier;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasVersionManifest;
@property(readonly, nonatomic) _Bool hasProblemOptInURL;
@property(readonly, nonatomic) _Bool hasDispatcherURL;
- (id)announcementsSupportedLanguagesAtIndex:(unsigned long long)arg1;
- (unsigned long long)announcementsSupportedLanguagesCount;
- (void)addAnnouncementsSupportedLanguages:(id)arg1;
- (void)clearAnnouncementsSupportedLanguages;
@property(readonly, nonatomic) _Bool hasAnnouncementsURL;
@property(readonly, nonatomic) _Bool hasProblemNotificationAvailabilityURL;
@property(readonly, nonatomic) _Bool hasUsageURL;
@property(readonly, nonatomic) _Bool hasProblemCategoriesURL;
@property(readonly, nonatomic) _Bool hasReverseGeocoderVersionsURL;
@property(readonly, nonatomic) _Bool hasProblemStatusURL;
@property(readonly, nonatomic) _Bool hasProblemSubmissionURL;
@property(readonly, nonatomic) _Bool hasPolyLocationShiftURL;
@property(readonly, nonatomic) _Bool hasAddressCorrectionUpdateURL;
@property(readonly, nonatomic) _Bool hasAddressCorrectionInitURL;
@property(readonly, nonatomic) _Bool hasSimpleETAURL;
@property(readonly, nonatomic) _Bool hasResourcesURL;
@property(readonly, nonatomic) _Bool hasMapMatchURL;
@property(readonly, nonatomic) _Bool hasReleaseInfo;
@property(readonly, nonatomic) _Bool hasBatchReverseGeocoderURL;
@property(readonly, nonatomic) _Bool hasLocationShiftURL;
@property(readonly, nonatomic) _Bool hasEtaURL;
@property(readonly, nonatomic) _Bool hasDirectionsURL;
@property(readonly, nonatomic) _Bool hasForwardGeocoderURL;
@property(readonly, nonatomic) _Bool hasReverseGeocoderURL;
@property(readonly, nonatomic) _Bool hasAutocompleteURL;
@property(readonly, nonatomic) _Bool hasSearchAttributionManifestURL;
@property(readonly, nonatomic) _Bool hasSearchURL;
@property(readonly, nonatomic) _Bool hasRegionalResourcesURL;
- (id)regionalResourceRegionAtIndex:(unsigned long long)arg1;
- (unsigned long long)regionalResourceRegionsCount;
- (void)addRegionalResourceRegion:(id)arg1;
- (void)clearRegionalResourceRegions;
- (id)regionalResourceTileAtIndex:(unsigned long long)arg1;
- (unsigned long long)regionalResourceTilesCount;
- (void)addRegionalResourceTile:(id)arg1;
- (void)clearRegionalResourceTiles;
- (id)attributionAtIndex:(unsigned long long)arg1;
- (unsigned long long)attributionsCount;
- (void)addAttribution:(id)arg1;
- (void)clearAttributions;
@property(readonly, nonatomic) _Bool hasUniqueIdentifier;
- (id)resourceAtIndex:(unsigned long long)arg1;
- (unsigned long long)resourcesCount;
- (void)addResource:(id)arg1;
- (void)clearResources;
- (id)tileSetAtIndex:(unsigned long long)arg1;
- (unsigned long long)tileSetsCount;
- (void)addTileSet:(id)arg1;
- (void)clearTileSets;
- (void)dealloc;
- (id)regionalResourceRegionsForMapRect:(CDStruct_02837cd9)arg1;
- (id)flatRegionalResourceTilesForMapRect:(CDStruct_02837cd9)arg1;
- (unsigned int)largestRegionalResourceZoomLevelContainingTileKey:(const struct _GEOTileKey *)arg1;
- (id)regionalResourceKeysForTileKey:(const struct _GEOTileKey *)arg1;
- (_Bool)hasRegionalResourcesForTileKey:(const struct _GEOTileKey *)arg1;
- (void)_resetBestLanguages;
- (_Bool)supportsTileStyle:(int)arg1 size:(int)arg2 scale:(int)arg3;
- (id)languageForTileKey:(const struct _GEOTileKey *)arg1 overrideLocale:(id)arg2;
- (id)languageForTileKey:(const struct _GEOTileKey *)arg1;
- (_Bool)isAvailableForTileKey:(const struct _GEOTileKey *)arg1;
- (double)timeToLiveForTileKey:(const struct _GEOTileKey *)arg1;
- (unsigned int)versionForTileKey:(const struct _GEOTileKey *)arg1;
- (id)localizationURLStringForTileKey:(const struct _GEOTileKey *)arg1;
- (id)multiTileURLStringForTileKey:(const struct _GEOTileKey *)arg1 useStatusCodes:(_Bool *)arg2;
- (id)baseURLStringForTileKey:(const struct _GEOTileKey *)arg1;
- (id)activeTileSetForKey:(const struct _GEOTileKey *)arg1;
- (id)_activeTileSetForStyle:(int)arg1 size:(int)arg2 scale:(int)arg3;
- (id)activeTileSetForTileType:(int)arg1 scale:(int)arg2;

@end

@interface GEOActiveTileSet : PBCodable <NSCopying>
{
    CDStruct_d66e66b9 *_availableTiles;
    unsigned long long _availableTilesCount;
    unsigned long long _availableTilesSpace;
    NSString *_baseURL;
    NSString *_localizationURL;
    NSString *_multiTileURL;
    int _scale;
    NSMutableArray *_sentinelTiles;
    int _size;
    int _style;
    NSMutableArray *_supportedLanguages;
    unsigned int _timeToLiveSeconds;
    int _updateBehavior;
    unsigned int _version;
    _Bool _multiTileURLUsesStatusCodes;
    struct {
        unsigned int timeToLiveSeconds:1;
        unsigned int updateBehavior:1;
        unsigned int multiTileURLUsesStatusCodes:1;
    } _has;
}

@property(nonatomic) _Bool multiTileURLUsesStatusCodes; // @synthesize multiTileURLUsesStatusCodes=_multiTileURLUsesStatusCodes;
@property(retain, nonatomic) NSMutableArray *supportedLanguages; // @synthesize supportedLanguages=_supportedLanguages;
@property(retain, nonatomic) NSString *localizationURL; // @synthesize localizationURL=_localizationURL;
@property(retain, nonatomic) NSMutableArray *sentinelTiles; // @synthesize sentinelTiles=_sentinelTiles;
@property(nonatomic) unsigned int timeToLiveSeconds; // @synthesize timeToLiveSeconds=_timeToLiveSeconds;
@property(nonatomic) unsigned int version; // @synthesize version=_version;
@property(nonatomic) int size; // @synthesize size=_size;
@property(nonatomic) int scale; // @synthesize scale=_scale;
@property(nonatomic) int style; // @synthesize style=_style;
@property(retain, nonatomic) NSString *multiTileURL; // @synthesize multiTileURL=_multiTileURL;
@property(retain, nonatomic) NSString *baseURL; // @synthesize baseURL=_baseURL;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasUpdateBehavior;
@property(nonatomic) int updateBehavior; // @synthesize updateBehavior=_updateBehavior;
@property(nonatomic) _Bool hasMultiTileURLUsesStatusCodes;
- (id)supportedLanguageAtIndex:(unsigned long long)arg1;
- (unsigned long long)supportedLanguagesCount;
- (void)addSupportedLanguage:(id)arg1;
- (void)clearSupportedLanguages;
@property(readonly, nonatomic) _Bool hasLocalizationURL;
- (id)sentinelTileAtIndex:(unsigned long long)arg1;
- (unsigned long long)sentinelTilesCount;
- (void)addSentinelTile:(id)arg1;
- (void)clearSentinelTiles;
- (void)setAvailableTiles:(CDStruct_d66e66b9 *)arg1 count:(unsigned long long)arg2;
- (CDStruct_d66e66b9)availableTilesAtIndex:(unsigned long long)arg1;
- (void)addAvailableTiles:(CDStruct_d66e66b9)arg1;
- (void)clearAvailableTiles;
@property(readonly, nonatomic) CDStruct_d66e66b9 *availableTiles;
@property(readonly, nonatomic) unsigned long long availableTilesCount;
@property(nonatomic) _Bool hasTimeToLiveSeconds;
@property(readonly, nonatomic) _Bool hasMultiTileURL;
@property(readonly, nonatomic) _Bool hasBaseURL;
- (void)dealloc;
- (void)_resetBestLanguage;
- (_Bool)isEquivalentTileSet:(id)arg1;
- (id)_bestLanguageWithOverrideLocale:(id)arg1;
- (id)dataForGenericTileType:(int)arg1 tileGroupIdentifier:(unsigned int)arg2;
- (_Bool)isAvailableForTileKey:(const struct _GEOTileKey *)arg1;
- (unsigned int)largestZoomLevelLEQ:(unsigned int)arg1 inRect:(CDStruct_02837cd9)arg2;
- (unsigned int)maximumZoomLevelInRect:(CDStruct_02837cd9)arg1;
- (unsigned int)minimumZoomLevelInRect:(CDStruct_02837cd9)arg1;

@end

@interface GEOAddress : PBCodable <GEOURLSerializable, NSCopying>
{
    NSMutableArray *_formattedAddressLines;
    int _formattedAddressType;
    GEOStructuredAddress *_structuredAddress;
    struct {
        unsigned int formattedAddressType:1;
    } _has;
}

+ (id)geoAddressForPlaceData:(id)arg1;
@property(retain, nonatomic) GEOStructuredAddress *structuredAddress; // @synthesize structuredAddress=_structuredAddress;
@property(retain, nonatomic) NSMutableArray *formattedAddressLines; // @synthesize formattedAddressLines=_formattedAddressLines;
- (void)mergeFrom:(id)arg1;
@property(readonly) unsigned long long hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
@property(readonly, copy) NSString *description;
@property(nonatomic) _Bool hasFormattedAddressType;
@property(nonatomic) int formattedAddressType; // @synthesize formattedAddressType=_formattedAddressType;
@property(readonly, nonatomic) _Bool hasStructuredAddress;
- (id)formattedAddressLineAtIndex:(unsigned long long)arg1;
- (unsigned long long)formattedAddressLinesCount;
- (void)addFormattedAddressLine:(id)arg1;
- (void)clearFormattedAddressLines;
- (void)dealloc;
- (id)bestName;
- (id)addressDictionary;
- (id)initWithAddressDictionary:(id)arg1;
- (id)initWithAddressString:(id)arg1;
- (_Bool)_isEquivalentURLRepresentationTo:(id)arg1;
- (id)urlRepresentation;
- (id)initWithUrlRepresentation:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

@interface GEOAddressCorrectionInitRequest : PBRequest <NSCopying>
{
    NSString *_personID;
    NSString *_token;
}

@property(retain, nonatomic) NSString *personID; // @synthesize personID=_personID;
@property(retain, nonatomic) NSString *token; // @synthesize token=_token;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (Class)responseClass;
- (unsigned int)requestTypeCode;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasPersonID;
@property(readonly, nonatomic) _Bool hasToken;
- (void)dealloc;

@end

@interface GEOAddressCorrectionInitResponse : PBCodable <NSCopying>
{
    NSString *_addressID;
    GEOLocation *_addressLocation;
    unsigned int _numberOfVisitsBucketSize;
    int _statusCode;
    struct {
        unsigned int numberOfVisitsBucketSize:1;
        unsigned int statusCode:1;
    } _has;
}

@property(retain, nonatomic) NSString *addressID; // @synthesize addressID=_addressID;
@property(retain, nonatomic) GEOLocation *addressLocation; // @synthesize addressLocation=_addressLocation;
@property(nonatomic) int statusCode; // @synthesize statusCode=_statusCode;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasNumberOfVisitsBucketSize;
@property(nonatomic) unsigned int numberOfVisitsBucketSize; // @synthesize numberOfVisitsBucketSize=_numberOfVisitsBucketSize;
@property(readonly, nonatomic) _Bool hasAddressID;
@property(readonly, nonatomic) _Bool hasAddressLocation;
@property(nonatomic) _Bool hasStatusCode;
- (void)dealloc;

@end

@interface GEOAddressCorrectionRequester : NSObject
{
    NSMapTable *_pendingRequests;
    NSLock *_pendingRequestsLock;
}

+ (id)sharedRequester;
- (void)cancelRequest:(id)arg1;
- (void)startAddressCorrectionUpdateRequest:(id)arg1 finished:(CDUnknownBlockType)arg2 error:(CDUnknownBlockType)arg3;
- (void)startAddressCorrectionInitRequest:(id)arg1 finished:(CDUnknownBlockType)arg2 error:(CDUnknownBlockType)arg3;
- (void)dealloc;
- (id)init;

@end

@interface GEOAddressCorrectionUpdateRequest : PBRequest <NSCopying>
{
    NSString *_addressID;
    int _correctionStatus;
    NSMutableArray *_significantLocations;
    struct {
        unsigned int correctionStatus:1;
    } _has;
}

@property(retain, nonatomic) NSString *addressID; // @synthesize addressID=_addressID;
@property(retain, nonatomic) NSMutableArray *significantLocations; // @synthesize significantLocations=_significantLocations;
@property(nonatomic) int correctionStatus; // @synthesize correctionStatus=_correctionStatus;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (Class)responseClass;
- (unsigned int)requestTypeCode;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasAddressID;
- (id)significantLocationAtIndex:(unsigned long long)arg1;
- (unsigned long long)significantLocationsCount;
- (void)addSignificantLocation:(id)arg1;
- (void)clearSignificantLocations;
@property(nonatomic) _Bool hasCorrectionStatus;
- (void)dealloc;

@end

@interface GEOAddressCorrectionUpdateResponse : PBCodable <NSCopying>
{
    unsigned int _retryScheduleInDays;
    struct {
        unsigned int retryScheduleInDays:1;
    } _has;
}

@property(nonatomic) unsigned int retryScheduleInDays; // @synthesize retryScheduleInDays=_retryScheduleInDays;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasRetryScheduleInDays;

@end

@interface GEOAlmanac : NSObject
{
    GEOAlmanacRiseTransitSet *_previousRiseTransitSet;
    GEOAlmanacRiseTransitSet *_currentRiseTransitSet;
    GEOAlmanacRiseTransitSet *_nextRiseTransitSet;
}

- (_Bool)isDayLightForDate:(id)arg1;
- (_Bool)isDayLightForTime:(double)arg1;
@property(readonly, nonatomic) _Bool isDayLight;
- (id)sortedTimesForDate:(id)arg1;
@property(readonly, nonatomic) NSDate *nextSunset;
@property(readonly, nonatomic) NSDate *nextSunrise;
@property(readonly, nonatomic) NSDate *sunset;
@property(readonly, nonatomic) NSDate *sunrise;
@property(readonly, nonatomic) NSDate *previousSunset;
@property(readonly, nonatomic) NSDate *previousSunrise;
- (void)calculateGeocentricDirectionForSunX:(double *)arg1 Y:(double *)arg2 Z:(double *)arg3;
- (void)calculateAstronomicalTimeForLocation:(CDStruct_c3b9c2ee)arg1 date:(id)arg2 altitudeInDegrees:(double)arg3;
- (void)calculateAstronomicalTimeForLocation:(CDStruct_c3b9c2ee)arg1 time:(double)arg2 altitudeInDegrees:(double)arg3;
- (void)calculateAstronomicalTimeForLocation:(CDStruct_c3b9c2ee)arg1 time:(double)arg2;
- (void)calculateAstronomicalTimeForLocation:(CDStruct_c3b9c2ee)arg1 altitudeInDegrees:(double)arg2;
- (void)calculateAstronomicalTimeForLocation:(CDStruct_c3b9c2ee)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface GEOAlmanacRiseTransitSet : NSObject
{
    double _julianDay;
    struct CAARiseTransitSetDetails _riseTransitSet;
    NSDate *_sunrise;
    NSDate *_sunset;
}

@property(readonly, nonatomic) struct CAARiseTransitSetDetails riseTransitSet; // @synthesize riseTransitSet=_riseTransitSet;
@property(readonly, nonatomic) double julianDay; // @synthesize julianDay=_julianDay;
- (id).cxx_construct;
@property(readonly, nonatomic) NSDate *sunset;
@property(readonly, nonatomic) NSDate *sunrise;
- (void)dealloc;
- (id)initWithJulianDay:(double)arg1 riseTransitSet:(struct CAARiseTransitSetDetails)arg2;

@end

@interface GEOAltitudeManifest : NSObject <NSXMLParserDelegate, GEOResourceManifestTileGroupObserver>
{
    GEOAltitudeManifestReserved *_reserved;
}

+ (id)sharedManager;
- (void)parser:(id)arg1 didStartElement:(id)arg2 namespaceURI:(id)arg3 qualifiedName:(id)arg4 attributes:(id)arg5;
- (void)parseManifest:(id)arg1;
- (id)availableRegions;
- (id)tripIdsForRegion:(unsigned int)arg1;
- (id)tourIdsForRegion:(unsigned int)arg1;
- (id)nameForRegion:(unsigned int)arg1;
- (unsigned int)versionForRegion:(unsigned int)arg1;
- (void)dealloc;
- (_Bool)isValidTourId:(unsigned long long)arg1;
- (_Bool)parseXml:(id)arg1;
- (void)resourceManifestManagerDidChangeActiveTileGroup:(id)arg1;
- (void)resourceManifestManagerWillChangeActiveTileGroup:(id)arg1;
- (void)_reloadManifest;
- (void)commonInit;
- (id)initWithoutObserver;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GEOAltitudeManifestReserved : NSObject
{
    struct map<unsigned int, _GEOAltitudeTriggerData, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, _GEOAltitudeTriggerData>>> _reservedTriggerData;
    unsigned int _reservedCurrentRegion;
    unsigned char _reservedTourServerType;
}

- (id).cxx_construct;
- (void).cxx_destruct;

@end

@interface GEOAnnouncement : PBCodable <NSCopying>
{
    unsigned int _announcementID;
    NSString *_buttonOneAppURI;
    NSString *_buttonOneMessage;
    NSString *_buttonTwoAppURI;
    NSString *_buttonTwoMessage;
    unsigned int _displayDestinations;
    GEOPDFlyover *_flyoverInfo;
    GEOMapRegion *_mapRegion;
    int _releasePhase;
    NSString *_userMessage;
    struct {
        unsigned int announcementID:1;
        unsigned int displayDestinations:1;
        unsigned int releasePhase:1;
    } _has;
}

@property(retain, nonatomic) GEOPDFlyover *flyoverInfo; // @synthesize flyoverInfo=_flyoverInfo;
@property(nonatomic) int releasePhase; // @synthesize releasePhase=_releasePhase;
@property(nonatomic) unsigned int displayDestinations; // @synthesize displayDestinations=_displayDestinations;
@property(retain, nonatomic) NSString *buttonTwoAppURI; // @synthesize buttonTwoAppURI=_buttonTwoAppURI;
@property(retain, nonatomic) NSString *buttonTwoMessage; // @synthesize buttonTwoMessage=_buttonTwoMessage;
@property(retain, nonatomic) NSString *buttonOneAppURI; // @synthesize buttonOneAppURI=_buttonOneAppURI;
@property(retain, nonatomic) NSString *buttonOneMessage; // @synthesize buttonOneMessage=_buttonOneMessage;
@property(retain, nonatomic) NSString *userMessage; // @synthesize userMessage=_userMessage;
@property(retain, nonatomic) GEOMapRegion *mapRegion; // @synthesize mapRegion=_mapRegion;
@property(nonatomic) unsigned int announcementID; // @synthesize announcementID=_announcementID;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasFlyoverInfo;
@property(nonatomic) _Bool hasReleasePhase;
@property(nonatomic) _Bool hasDisplayDestinations;
@property(readonly, nonatomic) _Bool hasButtonTwoAppURI;
@property(readonly, nonatomic) _Bool hasButtonTwoMessage;
@property(readonly, nonatomic) _Bool hasButtonOneAppURI;
@property(readonly, nonatomic) _Bool hasButtonOneMessage;
@property(readonly, nonatomic) _Bool hasUserMessage;
@property(readonly, nonatomic) _Bool hasMapRegion;
@property(nonatomic) _Bool hasAnnouncementID;
- (void)dealloc;

@end

@interface GEOAttributeKeyValue : PBCodable <NSCopying>
{
    NSString *_attributeKey;
    NSString *_attributeValue;
}

@property(retain, nonatomic) NSString *attributeValue; // @synthesize attributeValue=_attributeValue;
@property(retain, nonatomic) NSString *attributeKey; // @synthesize attributeKey=_attributeKey;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface GEOAttribution : PBCodable <NSCopying>
{
    NSString *_badge;
    NSString *_badgeChecksum;
    NSString *_logo;
    NSString *_logoChecksum;
    NSString *_name;
    NSString *_url;
}

@property(retain, nonatomic) NSString *logoChecksum; // @synthesize logoChecksum=_logoChecksum;
@property(retain, nonatomic) NSString *badgeChecksum; // @synthesize badgeChecksum=_badgeChecksum;
@property(retain, nonatomic) NSString *url; // @synthesize url=_url;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
@property(retain, nonatomic) NSString *logo; // @synthesize logo=_logo;
@property(retain, nonatomic) NSString *badge; // @synthesize badge=_badge;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasLogoChecksum;
@property(readonly, nonatomic) _Bool hasBadgeChecksum;
@property(readonly, nonatomic) _Bool hasUrl;
@property(readonly, nonatomic) _Bool hasName;
@property(readonly, nonatomic) _Bool hasLogo;
@property(readonly, nonatomic) _Bool hasBadge;
- (void)dealloc;

@end

@interface GEOAttributionApp : PBCodable <NSCopying>
{
    NSString *_appBundleIdentifier;
    NSMutableArray *_handledSchemes;
}

@property(retain, nonatomic) NSMutableArray *handledSchemes; // @synthesize handledSchemes=_handledSchemes;
@property(retain, nonatomic) NSString *appBundleIdentifier; // @synthesize appBundleIdentifier=_appBundleIdentifier;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)handledSchemesAtIndex:(unsigned long long)arg1;
- (unsigned long long)handledSchemesCount;
- (void)addHandledSchemes:(id)arg1;
- (void)clearHandledSchemes;
- (void)dealloc;

@end

@interface GEOAutomobileOptions : PBCodable <NSCopying>
{
    _Bool _includeHistoricTravelTime;
    struct {
        unsigned int includeHistoricTravelTime:1;
    } _has;
}

@property(nonatomic) _Bool includeHistoricTravelTime; // @synthesize includeHistoricTravelTime=_includeHistoricTravelTime;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasIncludeHistoricTravelTime;

@end

@interface GEOAvailableAnnouncements : PBCodable <NSCopying>
{
    NSMutableArray *_announcements;
    NSString *_languageCode;
}

@property(retain, nonatomic) NSString *languageCode; // @synthesize languageCode=_languageCode;
@property(retain, nonatomic) NSMutableArray *announcements; // @synthesize announcements=_announcements;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasLanguageCode;
- (id)announcementAtIndex:(unsigned long long)arg1;
- (unsigned long long)announcementsCount;
- (void)addAnnouncement:(id)arg1;
- (void)clearAnnouncements;
- (void)dealloc;

@end

@interface GEOBatchPlaceResult : PBCodable <NSCopying>
{
    GEOPlaceResult *_placeResult;
    int _statusCode;
    CDStruct_bcb1eac0 _has;
}

@property(retain, nonatomic) GEOPlaceResult *placeResult; // @synthesize placeResult=_placeResult;
@property(nonatomic) int statusCode; // @synthesize statusCode=_statusCode;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasPlaceResult;
@property(nonatomic) _Bool hasStatusCode;
- (void)dealloc;

@end

@interface GEOBatchRevGeocodeRequest : PBRequest <NSCopying>
{
    CDStruct_95bda58d _additionalPlaceTypes;
    NSMutableArray *_locations;
    NSMutableArray *_serviceTags;
    _Bool _splitIntoClusters;
    struct {
        unsigned int splitIntoClusters:1;
    } _has;
}

@property(retain, nonatomic) NSMutableArray *serviceTags; // @synthesize serviceTags=_serviceTags;
@property(retain, nonatomic) NSMutableArray *locations; // @synthesize locations=_locations;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (Class)responseClass;
- (unsigned int)requestTypeCode;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)serviceTagAtIndex:(unsigned long long)arg1;
- (unsigned long long)serviceTagsCount;
- (void)addServiceTag:(id)arg1;
- (void)clearServiceTags;
- (void)setAdditionalPlaceTypes:(int *)arg1 count:(unsigned long long)arg2;
- (int)additionalPlaceTypeAtIndex:(unsigned long long)arg1;
- (void)addAdditionalPlaceType:(int)arg1;
- (void)clearAdditionalPlaceTypes;
@property(readonly, nonatomic) int *additionalPlaceTypes;
@property(readonly, nonatomic) unsigned long long additionalPlaceTypesCount;
- (id)locationAtIndex:(unsigned long long)arg1;
- (unsigned long long)locationsCount;
- (void)addLocation:(id)arg1;
- (void)clearLocations;
@property(nonatomic) _Bool hasSplitIntoClusters;
@property(nonatomic) _Bool splitIntoClusters; // @synthesize splitIntoClusters=_splitIntoClusters;
- (void)dealloc;

@end

@interface GEOBatchRevGeocodeResponse : PBCodable <NSCopying>
{
    double _timestamp;
    NSMutableArray *_batchPlaceResults;
    NSMutableArray *_clusters;
    int _statusCode;
    unsigned int _ttl;
    unsigned int _version;
    NSMutableArray *_versionDomains;
    struct {
        unsigned int timestamp:1;
        unsigned int statusCode:1;
        unsigned int ttl:1;
        unsigned int version:1;
    } _has;
}

@property(nonatomic) double timestamp; // @synthesize timestamp=_timestamp;
@property(nonatomic) unsigned int version; // @synthesize version=_version;
@property(retain, nonatomic) NSMutableArray *versionDomains; // @synthesize versionDomains=_versionDomains;
@property(retain, nonatomic) NSMutableArray *batchPlaceResults; // @synthesize batchPlaceResults=_batchPlaceResults;
@property(retain, nonatomic) NSMutableArray *clusters; // @synthesize clusters=_clusters;
@property(nonatomic) int statusCode; // @synthesize statusCode=_statusCode;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasTimestamp;
@property(nonatomic) _Bool hasVersion;
- (id)versionDomainAtIndex:(unsigned long long)arg1;
- (unsigned long long)versionDomainsCount;
- (void)addVersionDomain:(id)arg1;
- (void)clearVersionDomains;
@property(nonatomic) _Bool hasTtl;
@property(nonatomic) unsigned int ttl; // @synthesize ttl=_ttl;
- (id)batchPlaceResultAtIndex:(unsigned long long)arg1;
- (unsigned long long)batchPlaceResultsCount;
- (void)addBatchPlaceResult:(id)arg1;
- (void)clearBatchPlaceResults;
- (id)clusterAtIndex:(unsigned long long)arg1;
- (unsigned long long)clustersCount;
- (void)addCluster:(id)arg1;
- (void)clearClusters;
@property(nonatomic) _Bool hasStatusCode;
- (void)dealloc;
@property(retain, nonatomic) NSDictionary *httpHeaders;

@end

@interface GEOBusiness : PBCodable <NSCopying>
{
    unsigned long long _uID;
    NSMutableArray *_attributeKeyValues;
    NSMutableArray *_attributions;
    NSMutableArray *_categorys;
    GEOLatLng *_center;
    NSMutableArray *_localizedCategories;
    NSString *_mapsURL;
    NSString *_name;
    NSMutableArray *_openHours;
    NSString *_phoneticName;
    NSMutableArray *_photos;
    NSMutableArray *_ratings;
    NSMutableArray *_sources;
    NSMutableArray *_starRatings;
    NSString *_telephone;
    NSString *_uRL;
    _Bool _isClosed;
    struct {
        unsigned int uID:1;
        unsigned int isClosed:1;
    } _has;
}

@property(retain, nonatomic) NSMutableArray *starRatings; // @synthesize starRatings=_starRatings;
@property(retain, nonatomic) NSMutableArray *sources; // @synthesize sources=_sources;
@property(retain, nonatomic) NSMutableArray *attributions; // @synthesize attributions=_attributions;
@property(retain, nonatomic) NSMutableArray *localizedCategories; // @synthesize localizedCategories=_localizedCategories;
@property(retain, nonatomic) GEOLatLng *center; // @synthesize center=_center;
@property(retain, nonatomic) NSMutableArray *openHours; // @synthesize openHours=_openHours;
@property(retain, nonatomic) NSMutableArray *attributeKeyValues; // @synthesize attributeKeyValues=_attributeKeyValues;
@property(retain, nonatomic) NSMutableArray *photos; // @synthesize photos=_photos;
@property(retain, nonatomic) NSMutableArray *categorys; // @synthesize categorys=_categorys;
@property(retain, nonatomic) NSMutableArray *ratings; // @synthesize ratings=_ratings;
@property(retain, nonatomic) NSString *mapsURL; // @synthesize mapsURL=_mapsURL;
@property(nonatomic) _Bool isClosed; // @synthesize isClosed=_isClosed;
@property(retain, nonatomic) NSString *uRL; // @synthesize uRL=_uRL;
@property(retain, nonatomic) NSString *telephone; // @synthesize telephone=_telephone;
@property(retain, nonatomic) NSString *phoneticName; // @synthesize phoneticName=_phoneticName;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
@property(nonatomic) unsigned long long uID; // @synthesize uID=_uID;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)starRatingAtIndex:(unsigned long long)arg1;
- (unsigned long long)starRatingsCount;
- (void)addStarRating:(id)arg1;
- (void)clearStarRatings;
- (id)sourceAtIndex:(unsigned long long)arg1;
- (unsigned long long)sourcesCount;
- (void)addSource:(id)arg1;
- (void)clearSources;
- (id)attributionAtIndex:(unsigned long long)arg1;
- (unsigned long long)attributionsCount;
- (void)addAttribution:(id)arg1;
- (void)clearAttributions;
- (id)localizedCategoriesAtIndex:(unsigned long long)arg1;
- (unsigned long long)localizedCategoriesCount;
- (void)addLocalizedCategories:(id)arg1;
- (void)clearLocalizedCategories;
@property(readonly, nonatomic) _Bool hasCenter;
- (id)openHoursAtIndex:(unsigned long long)arg1;
- (unsigned long long)openHoursCount;
- (void)addOpenHours:(id)arg1;
- (void)clearOpenHours;
- (id)attributeKeyValueAtIndex:(unsigned long long)arg1;
- (unsigned long long)attributeKeyValuesCount;
- (void)addAttributeKeyValue:(id)arg1;
- (void)clearAttributeKeyValues;
- (id)photoAtIndex:(unsigned long long)arg1;
- (unsigned long long)photosCount;
- (void)addPhoto:(id)arg1;
- (void)clearPhotos;
- (id)categoryAtIndex:(unsigned long long)arg1;
- (unsigned long long)categorysCount;
- (void)addCategory:(id)arg1;
- (void)clearCategorys;
- (id)ratingAtIndex:(unsigned long long)arg1;
- (unsigned long long)ratingsCount;
- (void)addRating:(id)arg1;
- (void)clearRatings;
@property(readonly, nonatomic) _Bool hasMapsURL;
@property(nonatomic) _Bool hasIsClosed;
@property(readonly, nonatomic) _Bool hasURL;
@property(readonly, nonatomic) _Bool hasTelephone;
@property(readonly, nonatomic) _Bool hasPhoneticName;
@property(readonly, nonatomic) _Bool hasName;
@property(nonatomic) _Bool hasUID;
- (void)dealloc;
- (id)initWithPlaceDataEntity:(id)arg1 rating:(id)arg2 hours:(id)arg3 reviews:(id)arg4 photos:(id)arg5;
- (id)_currentOperatingHoursForTimeZone:(id)arg1;
@property(readonly, nonatomic, getter=_hasOperatingHours) _Bool hasOperatingHours;
@property(readonly, nonatomic, getter=_takesReservations) _Bool takesReservations;
@property(readonly, nonatomic, getter=_hasTakesReservationsAmenity) _Bool hasTakesReservationsAmenity;
@property(readonly, nonatomic, getter=_goodForKids) _Bool goodForKids;
@property(readonly, nonatomic, getter=_hasGoodForKidsAmenity) _Bool hasGoodForKidsAmenity;
@property(readonly, nonatomic, getter=_hasDelivery) _Bool hasDelivery;
@property(readonly, nonatomic, getter=_hasDeliveryAmenity) _Bool hasDeliveryAmenity;
@property(readonly, nonatomic, getter=_hasAnyAmenities) _Bool hasAnyAmenities;
- (_Bool)_booleanValueForAmenity:(id)arg1;
- (id)_stringForAmenity:(id)arg1;
- (_Bool)_hasAmenitiesContainingKeys:(id)arg1;
- (_Bool)_hasLocalizedCategoryNamesForType:(unsigned int)arg1;
- (id)_localizedCategoryNamesForType:(unsigned int)arg1;
- (id)_allCategoriesForType:(unsigned int)arg1;
@property(readonly, nonatomic, getter=_priceRange) unsigned int priceRange;
@property(readonly, nonatomic, getter=_hasPriceRange) _Bool hasPriceRange;
@property(readonly, nonatomic, getter=_normalizedUserRatingScore) float normalizedUserRatingScore;
@property(readonly, nonatomic, getter=_sampleSizeForUserRatingScore) unsigned int sampleSizeForUserRatingScore;
@property(readonly, nonatomic, getter=_hasUserRatingScore) _Bool hasUserRatingScore;
@property(readonly, nonatomic, getter=_muid) unsigned long long muid;
@property(readonly, nonatomic, getter=_hasMUID) _Bool hasMUID;
@property(readonly, nonatomic, getter=_isYelp) _Bool yelp;
- (id)_attributionMapForResponse:(id)arg1;
- (id)initWithBusinessURL:(id)arg1 phoneNumber:(id)arg2 muid:(unsigned long long)arg3 attributionID:(id)arg4 sampleSizeForUserRatingScore:(unsigned int)arg5 normalizedUserRatingScore:(float)arg6;

@end

@interface GEOBusinessOptions : PBCodable <NSCopying>
{
    NSMutableArray *_attributeKeys;
    int _maxBusinessResults;
    NSMutableArray *_photoOptions;
    _Bool _includeBusinessHours;
    _Bool _includeCenter;
    struct {
        unsigned int maxBusinessResults:1;
        unsigned int includeBusinessHours:1;
        unsigned int includeCenter:1;
    } _has;
}

@property(nonatomic) _Bool includeCenter; // @synthesize includeCenter=_includeCenter;
@property(nonatomic) _Bool includeBusinessHours; // @synthesize includeBusinessHours=_includeBusinessHours;
@property(retain, nonatomic) NSMutableArray *attributeKeys; // @synthesize attributeKeys=_attributeKeys;
@property(retain, nonatomic) NSMutableArray *photoOptions; // @synthesize photoOptions=_photoOptions;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasIncludeCenter;
@property(nonatomic) _Bool hasMaxBusinessResults;
@property(nonatomic) int maxBusinessResults; // @synthesize maxBusinessResults=_maxBusinessResults;
@property(nonatomic) _Bool hasIncludeBusinessHours;
- (id)attributeKeyAtIndex:(unsigned long long)arg1;
- (unsigned long long)attributeKeysCount;
- (void)addAttributeKey:(id)arg1;
- (void)clearAttributeKeys;
- (id)photoOptionsAtIndex:(unsigned long long)arg1;
- (unsigned long long)photoOptionsCount;
- (void)addPhotoOptions:(id)arg1;
- (void)clearPhotoOptions;
- (void)dealloc;

@end

@interface GEOCacheInvalidationData : NSObject
{
    double _timestamp;
    double _ttl;
    unsigned int _version;
    NSArray *_versionDomains;
}

@property(readonly, nonatomic) NSArray *versionDomains; // @synthesize versionDomains=_versionDomains;
@property(readonly, nonatomic) unsigned int version; // @synthesize version=_version;
@property(readonly, nonatomic) double ttl; // @synthesize ttl=_ttl;
@property(readonly, nonatomic) double timestamp; // @synthesize timestamp=_timestamp;
- (void)dealloc;
- (id)initWithTimestamp:(double)arg1 ttl:(double)arg2 version:(unsigned int)arg3 domains:(id)arg4;

@end

@interface GEOCacheManager : NSObject
{
    id <GEOCacheManaging> _proxy;
}

+ (id)sharedManager;
+ (_Bool)_isLocalProxy;
+ (void)useRemoteProxy;
+ (void)useLocalProxy;
- (long long)invalidationStateForPlace:(id)arg1;
- (void)checkHasExpiredWithInvalidationDatas:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)versionsForDomains:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface GEOCacheManagerLocalProxy : NSObject <GEOCacheManaging>
{
    NSObject<OS_dispatch_queue> *_queue;
}

- (_Bool)_isKey:(id)arg1 subsetOf:(id)arg2;
- (long long)invalidationStateForPlace:(id)arg1;
- (_Bool)_invalidationDataHasExpiredByVersion:(unsigned int)arg1 domains:(id)arg2;
- (long long)_invalidationStateForTTL:(double)arg1 timestamp:(double)arg2 version:(unsigned int)arg3 versionDomains:(id)arg4;
- (long long)_invalidationDataHasExpired:(id)arg1;
- (void)checkHasExpiredWithInvalidationDatas:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)versionsForDomains:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GEOCacheManagerRemoteProxy : NSObject <GEOCacheManaging>
{
    NSObject<OS_dispatch_queue> *_queue;
}

- (long long)invalidationStateForPlace:(id)arg1;
- (void)checkHasExpiredWithInvalidationDatas:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)versionsForDomains:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GEOCarInfo : PBCodable <NSCopying>
{
    CDStruct_af817366 _screenResolution;
    int _interactionModel;
    NSString *_manufacturer;
    NSString *_model;
    struct {
        unsigned int screenResolution:1;
        unsigned int interactionModel:1;
    } _has;
}

+ (id)carInfoWithTraits:(id)arg1;
@property(nonatomic) CDStruct_af817366 screenResolution; // @synthesize screenResolution=_screenResolution;
@property(retain, nonatomic) NSString *model; // @synthesize model=_model;
@property(retain, nonatomic) NSString *manufacturer; // @synthesize manufacturer=_manufacturer;
@property(nonatomic) int interactionModel; // @synthesize interactionModel=_interactionModel;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasScreenResolution;
@property(readonly, nonatomic) _Bool hasModel;
@property(readonly, nonatomic) _Bool hasManufacturer;
@property(nonatomic) _Bool hasInteractionModel;
- (void)dealloc;
- (id)initWithTraits:(id)arg1;

@end

@interface GEOCategory : PBCodable <NSCopying>
{
    long long _geoOntologyId;
    NSString *_alias;
    int _level;
    NSMutableArray *_localizedNames;
    struct {
        unsigned int geoOntologyId:1;
    } _has;
}

@property(retain, nonatomic) NSMutableArray *localizedNames; // @synthesize localizedNames=_localizedNames;
@property(nonatomic) long long geoOntologyId; // @synthesize geoOntologyId=_geoOntologyId;
@property(nonatomic) int level; // @synthesize level=_level;
@property(retain, nonatomic) NSString *alias; // @synthesize alias=_alias;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)localizedNamesAtIndex:(unsigned long long)arg1;
- (unsigned long long)localizedNamesCount;
- (void)addLocalizedNames:(id)arg1;
- (void)clearLocalizedNames;
@property(nonatomic) _Bool hasGeoOntologyId;
- (void)dealloc;
- (id)initWithPlaceDataCategory:(id)arg1;

@end

@interface GEOClientCapabilities : PBCodable <NSCopying>
{
    NSString *_appMajorVersion;
    NSString *_appMinorVersion;
    NSString *_hardwareModel;
    int _maxManeuverTypeSupported;
    _Bool _internalInstall;
    struct {
        unsigned int maxManeuverTypeSupported:1;
        unsigned int internalInstall:1;
    } _has;
}

@property(nonatomic) _Bool internalInstall; // @synthesize internalInstall=_internalInstall;
@property(retain, nonatomic) NSString *hardwareModel; // @synthesize hardwareModel=_hardwareModel;
@property(retain, nonatomic) NSString *appMinorVersion; // @synthesize appMinorVersion=_appMinorVersion;
@property(retain, nonatomic) NSString *appMajorVersion; // @synthesize appMajorVersion=_appMajorVersion;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasInternalInstall;
@property(nonatomic) _Bool hasMaxManeuverTypeSupported;
@property(nonatomic) int maxManeuverTypeSupported; // @synthesize maxManeuverTypeSupported=_maxManeuverTypeSupported;
@property(readonly, nonatomic) _Bool hasHardwareModel;
@property(readonly, nonatomic) _Bool hasAppMinorVersion;
@property(readonly, nonatomic) _Bool hasAppMajorVersion;
- (void)dealloc;

@end

@interface GEOCluster : PBCodable <NSCopying>
{
    CDStruct_95bda58d _indexs;
    GEOPlaceResult *_container;
}

@property(retain, nonatomic) GEOPlaceResult *container; // @synthesize container=_container;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (void)setIndexs:(int *)arg1 count:(unsigned long long)arg2;
- (int)indexAtIndex:(unsigned long long)arg1;
- (void)addIndex:(int)arg1;
- (void)clearIndexs;
@property(readonly, nonatomic) int *indexs;
@property(readonly, nonatomic) unsigned long long indexsCount;
@property(readonly, nonatomic) _Bool hasContainer;
- (void)dealloc;

@end

@interface GEOComposedRouteStep : NSObject
{
    GEOComposedRoute *_composedRoute;
    GEOStep *_geoStep;
    unsigned long long _stepIndex;
    struct _NSRange _pointRange;
    struct _NSRange _maneuverPointRange;
    long long _routeLegType;
}

@property(nonatomic) GEOComposedRoute *composedRoute; // @synthesize composedRoute=_composedRoute;
@property(readonly, nonatomic) struct _NSRange maneuverPointRange; // @synthesize maneuverPointRange=_maneuverPointRange;
@property(readonly, nonatomic) long long routeLegType; // @synthesize routeLegType=_routeLegType;
@property(readonly, nonatomic) struct _NSRange pointRange; // @synthesize pointRange=_pointRange;
@property(readonly, nonatomic) unsigned long long stepIndex; // @synthesize stepIndex=_stepIndex;
@property(readonly, nonatomic) GEOStep *geoStep; // @synthesize geoStep=_geoStep;
- (id)description;
- (id)firstNameOrBranch;
@property(readonly, nonatomic, getter=getNextStep) GEOComposedRouteStep *nextStep;
@property(readonly, nonatomic, getter=getPreviousStep) GEOComposedRouteStep *previousStep;
@property(readonly, nonatomic) unsigned int distance;
@property(readonly, nonatomic) unsigned int duration;
@property(readonly, nonatomic) _Bool hasDuration;
@property(readonly, nonatomic) CDStruct_c3b9c2ee endGeoCoordinate;
@property(readonly, nonatomic) CDStruct_c3b9c2ee startGeoCoordinate;
@property(readonly, nonatomic) _Bool isUncertainArrival;
@property(readonly, nonatomic) unsigned int maneuverEndPointIndex;
@property(readonly, nonatomic) unsigned int maneuverStartPointIndex;
@property(readonly, nonatomic) unsigned int pointCount;
@property(readonly, nonatomic) unsigned int endPointIndex;
@property(readonly, nonatomic) unsigned int startPointIndex;
@property(readonly, nonatomic) int transportType;
- (void)dealloc;
- (id)initWithComposedRoute:(id)arg1 GEOStep:(id)arg2 routeLegType:(long long)arg3 stepIndex:(unsigned long long)arg4 pointRange:(struct _NSRange)arg5 maneuverPointRange:(struct _NSRange)arg6;
- (id)initWithComposedRoute:(id)arg1 routeLegType:(long long)arg2 stepIndex:(unsigned long long)arg3 pointRange:(struct _NSRange)arg4;

@end

@interface GEOComposedBicycleRouteStep : GEOComposedRouteStep
{
}

- (id)initWithComposedRoute:(id)arg1 GEOStep:(id)arg2 stepIndex:(unsigned long long)arg3 pointRange:(struct _NSRange)arg4 maneuverPointRange:(struct _NSRange)arg5;

@end

@interface GEOComposedRouteLeg : NSObject
{
    GEOComposedRoute *_composedRoute;
    long long _type;
    struct _NSRange _pointRange;
    struct _NSRange _stepRange;
}

@property(nonatomic) GEOComposedRoute *composedRoute; // @synthesize composedRoute=_composedRoute;
@property(readonly, nonatomic) struct _NSRange pointRange; // @synthesize pointRange=_pointRange;
@property(readonly, nonatomic) struct _NSRange stepRange; // @synthesize stepRange=_stepRange;
@property(readonly, nonatomic) long long type; // @synthesize type=_type;
- (id)description;
- (double)remainingTimeAlongLegFromStepIndex:(unsigned long long)arg1 currentStepRemainingDistance:(double)arg2;
- (double)remainingDistanceAlongLegFromStepIndex:(unsigned long long)arg1 currentStepRemainingDistance:(double)arg2;
@property(readonly, nonatomic) NSArray *steps;
@property(readonly, nonatomic) unsigned long long stepCount;
@property(readonly, nonatomic) unsigned long long endStepIndex;
@property(readonly, nonatomic) unsigned long long startStepIndex;
@property(readonly, nonatomic) unsigned int pointCount;
@property(readonly, nonatomic) unsigned int endPointIndex;
@property(readonly, nonatomic) unsigned int startPointIndex;
@property(readonly, nonatomic) int transportType;
- (id)initWithComposedRoute:(id)arg1 routeLegType:(long long)arg2 stepRange:(struct _NSRange)arg3 pointRange:(struct _NSRange)arg4;

@end

__attribute__((visibility("hidden")))
@interface GEOComposedDrivingRouteLeg : GEOComposedRouteLeg
{
}

- (id)initWithComposedRoute:(id)arg1 stepRange:(struct _NSRange)arg2 pointRange:(struct _NSRange)arg3;

@end

@interface GEOComposedDrivingRouteStep : GEOComposedRouteStep
{
    int _drivingSide;
}

@property(readonly, nonatomic) int drivingSide; // @synthesize drivingSide=_drivingSide;
- (id)initWithComposedRoute:(id)arg1 GEOStep:(id)arg2 stepIndex:(unsigned long long)arg3 pointRange:(struct _NSRange)arg4 maneuverPointRange:(struct _NSRange)arg5;

@end

@interface GEOComposedFerryRouteLeg : GEOComposedRouteLeg
{
}

- (id)initWithComposedRoute:(id)arg1 stepRange:(struct _NSRange)arg2 pointRange:(struct _NSRange)arg3;

@end

@interface GEOComposedFerryRouteStep : GEOComposedRouteStep
{
}

- (id)initWithComposedRoute:(id)arg1 GEOStep:(id)arg2 stepIndex:(unsigned long long)arg3 pointRange:(struct _NSRange)arg4 maneuverPointRange:(struct _NSRange)arg5;

@end

@interface GEOComposedRoute : NSObject <GEOMapAccessRestrictions>
{
    NSHashTable *_observers;
    NSData *_pointData;
    _Bool _usesZilch;
    GEOComposedWaypoint *_origin;
    GEOComposedWaypoint *_destination;
    NSArray *_legs;
    NSArray *_steps;
    NSString *_name;
    NSData *_routeID;
    unsigned int _expectedTime;
    unsigned int _distance;
    NSArray *_advisoryNotices;
    GEORoute *_geoRoute;
    NSArray *_maneuverDisplaySteps;
    _Bool _maneuverDisplayEnabled;
    unsigned long long _currentDisplayStep;
    unsigned int _maneuverDisplayCount;
    double *_pointLengths;
    CDStruct_dc7a564b *_currentManeuverDisplayEndPoints;
    unsigned long long _selectedLegIndex;
    unsigned int _firstVisiblePoint;
    GEOMapRegion *_boundingMapRegion;
    NSMutableArray *_sections;
    NSMutableArray *_snappedPaths;
    GEOZilchDecoder *_zilchDecoder;
    _Bool _allowsNetworkTileLoad;
    GEORouteDriveMapMatcher *_driveMapMatcher;
    GEORouteWalkMapMatcher *_walkMapMatcher;
}

@property(retain, nonatomic) GEOComposedWaypoint *destination; // @synthesize destination=_destination;
@property(retain, nonatomic) GEOComposedWaypoint *origin; // @synthesize origin=_origin;
@property(nonatomic) _Bool allowsNetworkTileLoad; // @synthesize allowsNetworkTileLoad=_allowsNetworkTileLoad;
@property(readonly, nonatomic) GEOMapRegion *boundingMapRegion; // @synthesize boundingMapRegion=_boundingMapRegion;
@property(readonly, nonatomic) NSArray *sections; // @synthesize sections=_sections;
@property(readonly, nonatomic) unsigned int distance; // @synthesize distance=_distance;
@property(retain, nonatomic) NSArray *advisoryNotices; // @synthesize advisoryNotices=_advisoryNotices;
@property(readonly, nonatomic) NSData *routeID; // @synthesize routeID=_routeID;
@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
@property(readonly, nonatomic) NSArray *legs; // @synthesize legs=_legs;
@property(readonly, nonatomic) NSArray *steps; // @synthesize steps=_steps;
@property(nonatomic) unsigned long long selectedLegIndex; // @synthesize selectedLegIndex=_selectedLegIndex;
@property(nonatomic) unsigned int firstVisiblePoint; // @synthesize firstVisiblePoint=_firstVisiblePoint;
@property(readonly, nonatomic) unsigned int maneuverDisplayCount; // @synthesize maneuverDisplayCount=_maneuverDisplayCount;
@property(retain, nonatomic) NSArray *maneuverDisplaySteps; // @synthesize maneuverDisplaySteps=_maneuverDisplaySteps;
@property(nonatomic) _Bool maneuverDisplayEnabled; // @synthesize maneuverDisplayEnabled=_maneuverDisplayEnabled;
@property(nonatomic) unsigned long long currentDisplayStep; // @synthesize currentDisplayStep=_currentDisplayStep;
@property(readonly, nonatomic) GEORoute *geoRoute; // @synthesize geoRoute=_geoRoute;
- (_Bool)isSnapping;
- (void)forEachSnappedPath:(CDUnknownBlockType)arg1;
- (void)clearSnappedPathsForObserver:(id)arg1;
- (id)getSnappedPathsForLocation:(CDStruct_c3b9c2ee)arg1 observer:(id)arg2;
- (id)getSnappedPathsForVisibleRect:(CDStruct_02837cd9)arg1 rectsToSnap:(CDStruct_02837cd9 *)arg2 rectsToSnapCount:(unsigned long long)arg3 observer:(id)arg4;
- (_Bool)supportsSnapping;
- (void)_addPaths:(id)arg1 forObserver:(id)arg2;
- (void)_snapPaths:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)_addSnappedPolylinePathsForSection:(id)arg1 toPaths:(id)arg2 rects:(CDStruct_02837cd9 *)arg3 rectsCount:(unsigned long long)arg4;
- (_Bool)_meetsMinimumPathLengthBetweenStart:(unsigned int)arg1 end:(unsigned int)arg2;
- (void)_buildPointSections;
- (void)setupRoadSegmentIdsForRouteHintFromMatch:(id)arg1 distanceAhead:(double)arg2 roadSegmentIdGenerator:(CDUnknownBlockType)arg3 handler:(CDUnknownBlockType)arg4;
- (struct PolylineCoordinate)_findRouteCoordinateWithOffset:(float)arg1 aPos:(const Matrix_8746f91e *)arg2 aCoord:(const struct PolylineCoordinate *)arg3 bCoord:(const struct PolylineCoordinate *)arg4 pointOnSegment:(const Matrix_8746f91e *)arg5 bounds:(const CDStruct_02837cd9 *)arg6;
- (id)matchToRouteWithLocation:(id)arg1 trackedLocation:(id)arg2 onDate:(id)arg3 transportType:(int)arg4 useSnappedPaths:(_Bool)arg5;
- (_Bool)isLocationCoordinate:(CDStruct_c3b9c2ee)arg1 withinDistance:(double)arg2 alongRoute:(double)arg3 withTransportType:(int)arg4;
- (id)matchToRouteWithLocation:(id)arg1 trackedLocation:(id)arg2 onDate:(id)arg3 transportType:(int)arg4 useSnappedPaths:(_Bool)arg5 maxDistance:(double)arg6;
- (id)routeMatchAtDistance:(double)arg1 from:(id)arg2 trackedLocation:(id)arg3 stopAtEndOfTunnel:(_Bool)arg4 stopAtEndOfManeuver:(_Bool)arg5 date:(id)arg6;
- (CDStruct_c3b9c2ee)locationAtDistance:(double)arg1 from:(id)arg2;
- (id)_mapMatcherForTransportType:(int)arg1;
- (double)courseAtRouteCoordinateIndex:(unsigned int)arg1;
- (_Bool)checkDrivingArrivalForCoordinate:(CDStruct_c3b9c2ee)arg1 coordinateOnRoute:(CDStruct_c3b9c2ee)arg2 routePointIndex:(unsigned int)arg3 distanceFromRoute:(double)arg4 arrivalMapRegion:(id)arg5 checkArrivalRadius:(_Bool)arg6 checkDistanceAlongRoute:(_Bool)arg7 isOnRoute:(_Bool)arg8;
- (double)remainingDistanceAlongRouteFromStepIndex:(unsigned long long)arg1 currentStepRemainingDistance:(double)arg2;
- (double)remainingTimeAlongRouteFromStepIndex:(unsigned long long)arg1 currentStepRemainingDistance:(double)arg2;
- (double)distanceBetweenStep:(id)arg1 andStep:(id)arg2;
- (double)distanceBetweenLocation:(CDStruct_c3b9c2ee)arg1 nextPointIndex:(unsigned int)arg2 toPointIndex:(unsigned int)arg3;
- (double)distanceBetweenRoutePointIndex:(unsigned int)arg1 toPointIndex:(unsigned int)arg2;
@property(readonly, nonatomic) int routeType;
- (id)zilchDataFromStepIndex:(unsigned long long)arg1;
- (int)transportTypeForStep:(id)arg1;
@property(readonly, nonatomic) NSArray *routeNames;
- (double)approximateRoadWidthAtPointIndex:(unsigned int)arg1;
- (int)formOfWayAt:(unsigned int)arg1;
- (void)getFormOfWay:(int *)arg1 roadClass:(int *)arg2 at:(unsigned int)arg3;
- (void)maneuverDisplayHasChanged;
@property(nonatomic) unsigned int expectedTime; // @synthesize expectedTime=_expectedTime;
@property(readonly, nonatomic) _Bool hasExpectedTime;
- (void)notifyTrafficUpdated;
- (unsigned long long)trafficColorOffsetAtIndex:(unsigned long long)arg1;
@property(readonly, nonatomic) unsigned int *trafficColorOffsets;
@property(readonly, nonatomic) unsigned long long trafficColorOffsetsCount;
@property(readonly, nonatomic) unsigned int *trafficColors;
@property(readonly, nonatomic) unsigned long long trafficColorsCount;
- (id)legForPointIndex:(unsigned int)arg1;
- (id)legForStepIndex:(unsigned long long)arg1;
- (unsigned long long)legIndexForStepIndex:(unsigned long long)arg1;
- (unsigned long long)legIndexForPointIndex:(unsigned long long)arg1;
- (unsigned long long)stepIndexForPointIndex:(unsigned long long)arg1;
- (id)stepForPointIndex:(unsigned int)arg1;
- (id)stepAtIndex:(unsigned long long)arg1;
@property(readonly, nonatomic) unsigned long long stepsCount;
- (double)distanceFromPointIndex:(unsigned long long)arg1 toPointIndex:(unsigned long long)arg2;
- (double)distanceFromPoint:(struct PolylineCoordinate)arg1 toPoint:(struct PolylineCoordinate)arg2;
- (struct PolylineCoordinate)coordinateAtOffset:(double)arg1 fromRouteCoordinate:(struct PolylineCoordinate)arg2;
- (struct PolylineCoordinate)coordinateAtOffset:(double)arg1 fromRoutePoint:(unsigned long long)arg2;
- (CDStruct_c3b9c2ee)pointAtRouteCoordinate:(struct PolylineCoordinate)arg1;
- (struct PolylineCoordinate)coordinateAtOffset:(double)arg1;
- (CDStruct_c3b9c2ee)pointAt:(unsigned long long)arg1;
@property(readonly, nonatomic) unsigned int pointCount;
@property(readonly, nonatomic) void *controlPoints;
- (CDStruct_dc7a564b)maneuverDisplayEndpointsAtIndex:(unsigned long long)arg1;
- (_Bool)_needsCornerOffsetAt:(unsigned int)arg1;
- (void)updateManeuverDisplayEndpointsAtMetersPerPoint:(double)arg1 startOffsetInPoints:(double)arg2 endOffsetInPoints:(double)arg3 roadWidthInPoints:(double)arg4;
- (void)updateManeuverDisplayEndpointsAtMetersPerPoint:(double)arg1;
- (void)_initializeManeuverDisplaySteps;
- (id)routeLegOfType:(long long)arg1 startStepIndex:(unsigned long long)arg2 steps:(id)arg3 startPointIndex:(unsigned long long)arg4 legPointCount:(unsigned long long)arg5;
@property(readonly, nonatomic) int transportType;
- (void)removeObserver:(id)arg1;
- (void)addObserver:(id)arg1;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)initWithRoute:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GEOComposedRouteSection : NSObject
{
    unsigned int _startPointIndex;
    unsigned int _pointCount;
    CDStruct_b2fbf00d *_points;
    CDStruct_02837cd9 _bounds;
    int _transportType;
}

@property(readonly, nonatomic) int transportType; // @synthesize transportType=_transportType;
@property(readonly, nonatomic) CDStruct_02837cd9 bounds; // @synthesize bounds=_bounds;
@property(readonly, nonatomic) CDStruct_b2fbf00d *points; // @synthesize points=_points;
@property(readonly, nonatomic) unsigned int pointCount; // @synthesize pointCount=_pointCount;
@property(readonly, nonatomic) unsigned int startPointIndex; // @synthesize startPointIndex=_startPointIndex;
- (id).cxx_construct;
- (id)description;
@property(readonly, nonatomic) unsigned int endPointIndex;
- (void)dealloc;
- (id)initWithRoute:(id)arg1 startPoint:(unsigned int)arg2 pointCount:(unsigned int)arg3 transportType:(int)arg4 fallbackStartCoordinate:(CDStruct_c3b9c2ee)arg5 fallbackEndCoordinate:(CDStruct_c3b9c2ee)arg6;
- (id)initWithRoute:(id)arg1 startPoint:(unsigned int)arg2 pointCount:(unsigned int)arg3 bounds:(CDStruct_02837cd9)arg4 transportType:(int)arg5;

@end

@interface GEOComposedWalkingRouteLeg : GEOComposedRouteLeg
{
}

- (id)initWithComposedRoute:(id)arg1 stepRange:(struct _NSRange)arg2 pointRange:(struct _NSRange)arg3;

@end

@interface GEOComposedWalkingRouteStep : GEOComposedRouteStep
{
    _Bool _isUncertainArrival;
}

- (_Bool)isUncertainArrival;
- (id)initWithComposedRoute:(id)arg1 GEOStep:(id)arg2 stepIndex:(unsigned long long)arg3 pointRange:(struct _NSRange)arg4 maneuverPointRange:(struct _NSRange)arg5 isUncertainArrival:(_Bool)arg6;

@end

@interface GEOComposedWaypoint : PBCodable <NSCopying>
{
    GEOLatLng *_latLng;
    GEOMapItemStorage *_mapItemStorage;
    GEOWaypointTyped *_waypoint;
}

+ (void)composedWaypointForMapServiceResponse:(id)arg1 clientAttributes:(id)arg2 error:(id)arg3 handler:(CDUnknownBlockType)arg4;
+ (id)composedWaypointForCoordinate:(CDStruct_c3b9c2ee)arg1 addressDictionary:(id)arg2 placeName:(id)arg3 traits:(id)arg4 completionHandler:(CDUnknownBlockType)arg5 networkActivityHandler:(CDUnknownBlockType)arg6;
+ (id)composedWaypointForIncompleteMapItem:(id)arg1 traits:(id)arg2 clientAttributes:(id)arg3 completionHandler:(CDUnknownBlockType)arg4 networkActivityHandler:(CDUnknownBlockType)arg5;
+ (id)composedWaypointForMapItem:(id)arg1 traits:(id)arg2 clientAttributes:(id)arg3 completionHandler:(CDUnknownBlockType)arg4 networkActivityHandler:(CDUnknownBlockType)arg5;
+ (id)composedWaypointForMapItemToRefine:(id)arg1 traits:(id)arg2 clientAttributes:(id)arg3 completionHandler:(CDUnknownBlockType)arg4 networkActivityHandler:(CDUnknownBlockType)arg5;
+ (id)composedWaypointForSearchString:(id)arg1 completionItem:(id)arg2 traits:(id)arg3 clientAttributes:(id)arg4 completionHandler:(CDUnknownBlockType)arg5 networkActivityHandler:(CDUnknownBlockType)arg6;
+ (id)composedWaypointForAddressString:(id)arg1 traits:(id)arg2 clientAttributes:(id)arg3 completionHandler:(CDUnknownBlockType)arg4 networkActivityHandler:(CDUnknownBlockType)arg5;
+ (id)composedWaypointForCurrentLocation:(id)arg1 traits:(id)arg2 completionHandler:(CDUnknownBlockType)arg3 networkActivityHandler:(CDUnknownBlockType)arg4;
+ (id)composedWaypointForLocation:(id)arg1 mapItem:(id)arg2 traits:(id)arg3 completionHandler:(CDUnknownBlockType)arg4 networkActivityHandler:(CDUnknownBlockType)arg5;
+ (void)composedWaypointForID:(unsigned long long)arg1 traits:(id)arg2 clientAttributes:(id)arg3 completionHandler:(CDUnknownBlockType)arg4 networkActivityHandler:(CDUnknownBlockType)arg5;
@property(retain, nonatomic) GEOLatLng *latLng; // @synthesize latLng=_latLng;
@property(retain, nonatomic) GEOMapItemStorage *mapItemStorage; // @synthesize mapItemStorage=_mapItemStorage;
@property(retain, nonatomic) GEOWaypointTyped *waypoint; // @synthesize waypoint=_waypoint;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasLatLng;
@property(readonly, nonatomic) _Bool hasMapItemStorage;
@property(readonly, nonatomic) _Bool hasWaypoint;
- (void)dealloc;
- (id)timezone;
- (id)geoMapItem;
- (void)setIsCurrentLocation:(_Bool)arg1;
- (_Bool)isCurrentLocation;
- (id)initWithLocation:(id)arg1 isCurrentLocation:(_Bool)arg2;
- (id)initWithMapItem:(id)arg1;

@end

@interface GEOCountryConfiguration : NSObject <GEOResourceManifestTileGroupObserver>
{
    NSString *_countryCode;
    NSLock *_countryCodeLock;
    _Bool _isObservingReachability;
    _Bool _isUpdating;
    NSMutableArray *_updateCompletionHandlers;
    NSLock *_supportedFeaturesLock;
    NSMutableDictionary *_supportedFeatures;
    double _urlAuthenticationTimeToLive;
    _Bool _hasURLAuthenticationTimeToLive;
}

+ (id)sharedConfiguration;
- (void)resourceManifestManagerDidChangeActiveTileGroup:(id)arg1;
- (void)resourceManifestManagerWillChangeActiveTileGroup:(id)arg1;
- (id)countryDefaultForKey:(id)arg1;
- (id)countryDefaultForKey:(id)arg1 sourcePtr:(long long *)arg2;
- (id)_countryDefaultForKey:(id)arg1 inCountry:(id)arg2 sourcePtr:(long long *)arg3;
- (id)defaultForKey:(id)arg1 defaultValue:(id)arg2;
- (id)defaultForKey:(id)arg1 defaultValue:(id)arg2 sourcePtr:(long long *)arg3;
- (id)_defaultForKey:(id)arg1 inCountry:(id)arg2 defaultValue:(id)arg3 sourcePtr:(long long *)arg4;
@property(copy, nonatomic) NSString *countryCode;
- (void)_checkCountryProvidersWithOldCountryCode:(id)arg1 providers:(id)arg2;
@property(readonly, nonatomic) double urlAuthenticationTimeToLive;
@property(readonly, nonatomic) _Bool currentCountrySupportsCarIntegration;
@property(readonly, nonatomic) _Bool currentCountrySupportsRouteGenius;
@property(readonly, nonatomic) _Bool currentCountrySupportsTraffic;
@property(readonly, nonatomic) _Bool currentCountrySupportsDirections;
@property(readonly, nonatomic) _Bool currentCountrySupportsNavigation;
- (_Bool)currentCountrySupportsFeature:(long long)arg1;
- (_Bool)countryCode:(id)arg1 supportsFeature:(long long)arg2;
- (void)_resetSupportedFeatures;
- (void)updateCountryConfiguration:(CDUnknownBlockType)arg1;
- (void)_determineCurrentCountryCode:(CDUnknownBlockType)arg1;
- (void)updateProvidersForCurrentCountry;
- (void)_notifyUpdateCompletionHandlers:(_Bool)arg1;
- (void)_reachabilityChanged:(id)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GEODBReader : NSObject
{
    _Bool _defunct;
    _Bool _closed;
    int _editionUpdating;
    NSObject<OS_dispatch_queue> *_readQueue;
    NSString *_path;
    struct sqlite3 *_db;
    struct sqlite3_stmt *_tileQuery;
    struct sqlite3_stmt *_versionQuery;
    CDStruct_e4886f83 *_expirationRecords;
    unsigned long long _expirationRecordCount;
}

- (void)setExpirationRecords:(CDStruct_e4886f83 *)arg1 count:(unsigned long long)arg2;
- (void)dataForKeys:(struct GEOTileKeyList *)arg1 asyncHandler:(CDUnknownBlockType)arg2;
- (void)dataForKey:(struct _GEOTileKey *)arg1 asyncHandler:(CDUnknownBlockType)arg2;
- (id)dataForKey:(struct _GEOTileKey *)arg1 isCurrent:(_Bool *)arg2 eTag:(id *)arg3;
- (id)_dataForKey:(struct _GEOTileKey)arg1 isCurrent:(_Bool *)arg2 eTag:(id *)arg3;
@property _Bool closed;
- (void)_openDB;
- (void)_closeDB;
- (void)_editionUpdateEnd:(id)arg1;
- (void)_editionUpdateBegin:(id)arg1;
- (void)_deviceLocking;
- (void)_databaseReset:(id)arg1;
- (void)dealloc;
- (id)initWithPath:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface GEODBWriteEntry : NSObject
{
    struct _GEOTileKey _key;
    NSData *_data;
    unsigned int _edition;
    unsigned int _set;
    unsigned int _provider;
    NSString *_etag;
}

@property(readonly, nonatomic) NSString *etag; // @synthesize etag=_etag;
@property(readonly, nonatomic) unsigned int provider; // @synthesize provider=_provider;
@property(readonly, nonatomic) unsigned int set; // @synthesize set=_set;
@property(readonly, nonatomic) unsigned int edition; // @synthesize edition=_edition;
@property(readonly, nonatomic) NSData *data; // @synthesize data=_data;
@property(readonly, nonatomic) struct _GEOTileKey key; // @synthesize key=_key;
- (id).cxx_construct;
- (void)dealloc;
- (id)initWithKey:(struct _GEOTileKey)arg1 data:(id)arg2 edition:(unsigned int)arg3 set:(unsigned int)arg4 provider:(unsigned int)arg5 etag:(id)arg6;

@end

@interface GEODBWriter : NSObject
{
    NSString *_path;
    struct sqlite3 *_db;
    struct sqlite3_stmt *_versionQuery;
    struct sqlite3_stmt *_versionInsert;
    struct sqlite3_stmt *_editionQuery;
    struct sqlite3_stmt *_editionDelete;
    struct sqlite3_stmt *_editionInvalidate;
    struct sqlite3_stmt *_editionUpdate;
    struct sqlite3_stmt *_tileInsert;
    struct sqlite3_stmt *_tileDelete;
    struct sqlite3_stmt *_tileSize;
    struct sqlite3_stmt *_sizeQuery;
    long long _lastRowID;
    unsigned long long _databaseSize;
    unsigned long long _maxDatabaseSize;
    _Bool _closed;
    _Bool _defunct;
    NSMutableArray *_writeList;
    NSMutableSet *_uncommitedWriteSet;
    unsigned long long _pendingWriteBytes;
    NSLock *_writeListLock;
    NSObject<OS_dispatch_queue> *_writeQueue;
    void *_editionMap;
    long long _evictionRowsThreshold;
    CDStruct_e4886f83 *_expirationRecords;
    unsigned long long _expirationRecordCount;
    _Bool _preloading;
    double _lastCheckedGeneralExpiration;
    unsigned long long _tileCacheMinimumWriteCount;
    unsigned long long _tileCacheMinimumWriteBytes;
    unsigned long long _tileCacheMaximumWriteCount;
    unsigned long long _tileCacheMaximumWriteBytes;
}

@property(nonatomic) unsigned long long maxDatabaseSize; // @synthesize maxDatabaseSize=_maxDatabaseSize;
@property(readonly, nonatomic) unsigned long long databaseSize; // @synthesize databaseSize=_databaseSize;
@property(readonly, nonatomic) NSString *path; // @synthesize path=_path;
- (void)dealloc;
- (void)endPreloadSession;
- (void)beginPreloadSessionOfSize:(unsigned long long)arg1;
- (void)setExpirationRecords:(CDStruct_e4886f83 *)arg1 count:(unsigned long long)arg2;
- (void)deleteData:(const struct _GEOTileKey *)arg1;
- (void)_deleteKey:(struct _GEOTileKey)arg1;
- (void)pendingWritesForKeys:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (id)pendingWriteForKey:(struct _GEOTileKey *)arg1;
- (void)addData:(id)arg1 forKey:(struct _GEOTileKey *)arg2 edition:(unsigned int)arg3 set:(unsigned int)arg4 provider:(unsigned int)arg5 etag:(id)arg6;
- (void)_performWrites:(_Bool)arg1;
- (void)_dropWritesOnFloor:(id)arg1;
- (void)_updateEdition:(unsigned int)arg1 forTileset:(unsigned int)arg2 provider:(unsigned int)arg3 invalidateOnly:(_Bool)arg4;
- (void)_writeEntry:(id)arg1;
- (_Bool)_tileSetExpires:(unsigned int)arg1;
- (void)_evict;
- (void)shrinkToSize:(unsigned long long)arg1 finished:(CDUnknownBlockType)arg2;
- (void)calculateFreeableSizeWithHandler:(CDUnknownBlockType)arg1;
- (unsigned long long)_dbFileSize;
- (void)_shrinkToUnderSize:(unsigned long long)arg1 vacuum:(_Bool)arg2;
- (unsigned long long)_freeableDiskSpace;
- (void)_printDBStatus:(const char *)arg1;
@property _Bool closed;
- (void)_openIfNecessary;
- (void)_openDBForceRecreate:(_Bool)arg1;
- (void)_assertDatabaseSize;
- (void)_updateSize;
- (_Bool)_readEditions;
- (void)_writeVersion;
- (void)_prepareStatements;
- (_Bool)prepareSingleStatement:(struct sqlite3_stmt **)arg1 forSql:(id)arg2;
- (void)_createTables;
- (void)_closeDB;
- (void)flushPendingWrites;
- (void)_editionUpdate:(id)arg1;
- (void)_deviceLocked;
- (void)_localeChanged:(id)arg1;
- (id)initWithPath:(id)arg1;

@end

@interface GEODirectionsCollectionRequest : PBRequest <NSCopying>
{
    NSMutableArray *_requestElements;
}

@property(retain, nonatomic) NSMutableArray *requestElements; // @synthesize requestElements=_requestElements;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (Class)responseClass;
- (unsigned int)requestTypeCode;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)requestElementsAtIndex:(unsigned long long)arg1;
- (unsigned long long)requestElementsCount;
- (void)addRequestElements:(id)arg1;
- (void)clearRequestElements;
- (void)dealloc;

@end

@interface GEODirectionsCollectionResponse : PBCodable <NSCopying>
{
}

- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;

@end

@interface GEODirectionsFeedback : PBCodable <NSCopying>
{
    CDStruct_740ee37d *_stepFeedbacks;
    unsigned long long _stepFeedbacksCount;
    unsigned long long _stepFeedbacksSpace;
    NSData *_directionResponseID;
    NSMutableArray *_traversedRouteIDs;
}

@property(retain, nonatomic) NSMutableArray *traversedRouteIDs; // @synthesize traversedRouteIDs=_traversedRouteIDs;
@property(retain, nonatomic) NSData *directionResponseID; // @synthesize directionResponseID=_directionResponseID;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (void)setStepFeedbacks:(CDStruct_740ee37d *)arg1 count:(unsigned long long)arg2;
- (CDStruct_740ee37d)stepFeedbackAtIndex:(unsigned long long)arg1;
- (void)addStepFeedback:(CDStruct_740ee37d)arg1;
- (void)clearStepFeedbacks;
@property(readonly, nonatomic) CDStruct_740ee37d *stepFeedbacks;
@property(readonly, nonatomic) unsigned long long stepFeedbacksCount;
- (id)traversedRouteIDsAtIndex:(unsigned long long)arg1;
- (unsigned long long)traversedRouteIDsCount;
- (void)addTraversedRouteIDs:(id)arg1;
- (void)clearTraversedRouteIDs;
@property(readonly, nonatomic) _Bool hasDirectionResponseID;
- (void)dealloc;

@end

@interface GEODirectionsFeedbackCollection : PBCodable <NSCopying>
{
    CDStruct_80e815ea _navigationAudioFeedback;
    double _endTimeStamp;
    double _startTimeStamp;
    NSMutableArray *_directionsFeedbacks;
    GEOLocation *_finalLocation;
    _Bool _arrivedAtDestination;
    struct {
        unsigned int navigationAudioFeedback:1;
        unsigned int endTimeStamp:1;
        unsigned int startTimeStamp:1;
        unsigned int arrivedAtDestination:1;
    } _has;
}

@property(nonatomic) CDStruct_80e815ea navigationAudioFeedback; // @synthesize navigationAudioFeedback=_navigationAudioFeedback;
@property(nonatomic) _Bool arrivedAtDestination; // @synthesize arrivedAtDestination=_arrivedAtDestination;
@property(nonatomic) double endTimeStamp; // @synthesize endTimeStamp=_endTimeStamp;
@property(nonatomic) double startTimeStamp; // @synthesize startTimeStamp=_startTimeStamp;
@property(retain, nonatomic) GEOLocation *finalLocation; // @synthesize finalLocation=_finalLocation;
@property(retain, nonatomic) NSMutableArray *directionsFeedbacks; // @synthesize directionsFeedbacks=_directionsFeedbacks;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasNavigationAudioFeedback;
@property(nonatomic) _Bool hasArrivedAtDestination;
@property(nonatomic) _Bool hasEndTimeStamp;
@property(nonatomic) _Bool hasStartTimeStamp;
@property(readonly, nonatomic) _Bool hasFinalLocation;
- (id)directionsFeedbackAtIndex:(unsigned long long)arg1;
- (unsigned long long)directionsFeedbacksCount;
- (void)addDirectionsFeedback:(id)arg1;
- (void)clearDirectionsFeedbacks;
- (void)dealloc;

@end

@interface GEODirectionsFeedbackCollector : NSObject
{
    GEODirectionsFeedback *_currentDirectionsFeedback;
    GEODirectionsFeedbackCollection *_currentFeedbackCollection;
    NSMutableSet *_routeIDs;
}

@property(retain, nonatomic) NSMutableSet *routeIDs; // @synthesize routeIDs=_routeIDs;
@property(retain, nonatomic) GEODirectionsFeedback *currentDirectionsFeedback; // @synthesize currentDirectionsFeedback=_currentDirectionsFeedback;
@property(retain, nonatomic) GEODirectionsFeedbackCollection *currentFeedbackCollection; // @synthesize currentFeedbackCollection=_currentFeedbackCollection;
- (void)endFeedbackSession;
- (void)setAudioFeedback:(CDStruct_80e815ea *)arg1;
- (void)setFinalLocation:(id)arg1 asArrival:(_Bool)arg2;
- (void)addRouteID:(id)arg1 stepID:(unsigned int)arg2 completeStep:(_Bool)arg3;
- (void)startFeedbackSessionForResponseID:(id)arg1;
- (void)reset;
- (void)dealloc;

@end

@interface GEODirectionsProvider : NSObject
{
    _Bool _isLoading;
    int _requestType;
    CDUnknownBlockType _finishedHandler;
    CDUnknownBlockType _errorHandler;
}

@property(copy, nonatomic) CDUnknownBlockType errorHandler; // @synthesize errorHandler=_errorHandler;
@property(copy, nonatomic) CDUnknownBlockType finishedHandler; // @synthesize finishedHandler=_finishedHandler;
@property(nonatomic) _Bool isLoading; // @synthesize isLoading=_isLoading;
- (void)providerDidCancel;
- (void)providerReceivedErrorCode:(long long)arg1 userInfo:(id)arg2 problemDetails:(CDStruct_c55e649d *)arg3;
- (void)providerReceivedError:(id)arg1 problemDetails:(CDStruct_c55e649d *)arg2;
- (void)providerReceivedResponse:(id)arg1;
- (void)cancelProviderRequest;
- (void)startProviderWithRequest:(id)arg1;
- (void)cancelRequest;
- (void)startRequest:(id)arg1 finished:(CDUnknownBlockType)arg2 error:(CDUnknownBlockType)arg3;
- (void)requestCompleted;
- (void)dealloc;

@end

@interface GEODirectionsRequest : PBRequest <NSCopying>
{
    CDStruct_612aec5b _sessionID;
    unsigned long long _maxDecoderVersion;
    unsigned long long _maxGraphVersion;
    unsigned long long _sharedLibraryVersion;
    GEOClientCapabilities *_clientCapabilities;
    GEOMapRegion *_currentMapRegion;
    GEOLocation *_currentUserLocation;
    int _departureTime;
    GEODirectionsRequestFeedback *_feedback;
    unsigned int _mainTransportTypeMaxRouteCount;
    NSData *_originalDirectionsResponseID;
    GEOOriginalRoute *_originalRoute;
    NSData *_originalRouteID;
    NSData *_originalRouteZilchPoints;
    GEORouteAttributes *_routeAttributes;
    unsigned int _sequenceNumber;
    NSMutableArray *_serviceTags;
    unsigned int _timeSinceLastRerouteRequest;
    NSMutableArray *_waypointTypeds;
    _Bool _getRouteForZilchPoints;
    struct {
        unsigned int sessionID:1;
        unsigned int maxDecoderVersion:1;
        unsigned int maxGraphVersion:1;
        unsigned int sharedLibraryVersion:1;
        unsigned int departureTime:1;
        unsigned int mainTransportTypeMaxRouteCount:1;
        unsigned int sequenceNumber:1;
        unsigned int timeSinceLastRerouteRequest:1;
        unsigned int getRouteForZilchPoints:1;
    } _has;
}

@property(nonatomic) unsigned long long sharedLibraryVersion; // @synthesize sharedLibraryVersion=_sharedLibraryVersion;
@property(nonatomic) unsigned long long maxGraphVersion; // @synthesize maxGraphVersion=_maxGraphVersion;
@property(nonatomic) unsigned long long maxDecoderVersion; // @synthesize maxDecoderVersion=_maxDecoderVersion;
@property(retain, nonatomic) NSMutableArray *serviceTags; // @synthesize serviceTags=_serviceTags;
@property(nonatomic) unsigned int sequenceNumber; // @synthesize sequenceNumber=_sequenceNumber;
@property(retain, nonatomic) GEOOriginalRoute *originalRoute; // @synthesize originalRoute=_originalRoute;
@property(retain, nonatomic) NSMutableArray *waypointTypeds; // @synthesize waypointTypeds=_waypointTypeds;
@property(retain, nonatomic) GEODirectionsRequestFeedback *feedback; // @synthesize feedback=_feedback;
@property(nonatomic) CDStruct_612aec5b sessionID; // @synthesize sessionID=_sessionID;
@property(nonatomic) int departureTime; // @synthesize departureTime=_departureTime;
@property(retain, nonatomic) NSData *originalDirectionsResponseID; // @synthesize originalDirectionsResponseID=_originalDirectionsResponseID;
@property(retain, nonatomic) GEOClientCapabilities *clientCapabilities; // @synthesize clientCapabilities=_clientCapabilities;
@property(retain, nonatomic) NSData *originalRouteZilchPoints; // @synthesize originalRouteZilchPoints=_originalRouteZilchPoints;
@property(retain, nonatomic) NSData *originalRouteID; // @synthesize originalRouteID=_originalRouteID;
@property(retain, nonatomic) GEOMapRegion *currentMapRegion; // @synthesize currentMapRegion=_currentMapRegion;
@property(retain, nonatomic) GEOLocation *currentUserLocation; // @synthesize currentUserLocation=_currentUserLocation;
@property(retain, nonatomic) GEORouteAttributes *routeAttributes; // @synthesize routeAttributes=_routeAttributes;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (Class)responseClass;
- (unsigned int)requestTypeCode;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasSharedLibraryVersion;
@property(nonatomic) _Bool hasMaxGraphVersion;
@property(nonatomic) _Bool hasMaxDecoderVersion;
- (id)serviceTagAtIndex:(unsigned long long)arg1;
- (unsigned long long)serviceTagsCount;
- (void)addServiceTag:(id)arg1;
- (void)clearServiceTags;
@property(nonatomic) _Bool hasSequenceNumber;
@property(readonly, nonatomic) _Bool hasOriginalRoute;
- (id)waypointTypedAtIndex:(unsigned long long)arg1;
- (unsigned long long)waypointTypedsCount;
- (void)addWaypointTyped:(id)arg1;
- (void)clearWaypointTypeds;
@property(readonly, nonatomic) _Bool hasFeedback;
@property(nonatomic) _Bool hasSessionID;
@property(nonatomic) _Bool hasGetRouteForZilchPoints;
@property(nonatomic) _Bool getRouteForZilchPoints; // @synthesize getRouteForZilchPoints=_getRouteForZilchPoints;
@property(nonatomic) _Bool hasDepartureTime;
@property(readonly, nonatomic) _Bool hasOriginalDirectionsResponseID;
@property(readonly, nonatomic) _Bool hasClientCapabilities;
@property(nonatomic) _Bool hasTimeSinceLastRerouteRequest;
@property(nonatomic) unsigned int timeSinceLastRerouteRequest; // @synthesize timeSinceLastRerouteRequest=_timeSinceLastRerouteRequest;
@property(readonly, nonatomic) _Bool hasOriginalRouteZilchPoints;
@property(readonly, nonatomic) _Bool hasOriginalRouteID;
@property(readonly, nonatomic) _Bool hasCurrentMapRegion;
@property(readonly, nonatomic) _Bool hasCurrentUserLocation;
@property(nonatomic) _Bool hasMainTransportTypeMaxRouteCount;
@property(nonatomic) unsigned int mainTransportTypeMaxRouteCount; // @synthesize mainTransportTypeMaxRouteCount=_mainTransportTypeMaxRouteCount;
@property(readonly, nonatomic) _Bool hasRouteAttributes;
- (void)dealloc;

@end

@interface GEODirectionsRequestFeedback : PBCodable <NSCopying>
{
    NSString *_appIdentifier;
    int _purpose;
    int _source;
    struct {
        unsigned int purpose:1;
        unsigned int source:1;
    } _has;
}

@property(retain, nonatomic) NSString *appIdentifier; // @synthesize appIdentifier=_appIdentifier;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasAppIdentifier;
@property(nonatomic) _Bool hasSource;
@property(nonatomic) int source; // @synthesize source=_source;
@property(nonatomic) _Bool hasPurpose;
@property(nonatomic) int purpose; // @synthesize purpose=_purpose;
- (void)dealloc;
- (id)initWithPurpose:(int)arg1 andSource:(int)arg2 andIdentifier:(id)arg3;
- (id)initWithPurpose:(int)arg1 andSource:(int)arg2;
- (id)initWithPurpose:(int)arg1;

@end

@interface GEODirectionsRequester : NSObject
{
    NSMapTable *_pendingRequests;
    NSLock *_pendingRequestsLock;
}

+ (id)sharedRequester;
- (void)cancelRequest:(id)arg1;
- (void)startRequest:(id)arg1 finished:(CDUnknownBlockType)arg2 networkActivity:(CDUnknownBlockType)arg3 error:(CDUnknownBlockType)arg4;
- (void)dealloc;
- (id)init;

@end

@interface GEODirectionsResponse : PBCodable <NSCopying>
{
    CDStruct_95bda58d _supportedTransportTypes;
    CDStruct_c55e649d *_problemDetails;
    unsigned long long _problemDetailsCount;
    unsigned long long _problemDetailsSpace;
    NSData *_directionsResponseID;
    NSMutableArray *_incidentsOffRoutes;
    NSMutableArray *_incidentsOnRoutes;
    int _instructionSignFillColor;
    int _localDistanceUnits;
    NSMutableArray *_placeSearchResponses;
    NSMutableArray *_routes;
    int _status;
    _Bool _isNavigable;
    _Bool _routeDeviatesFromOriginal;
    struct {
        unsigned int instructionSignFillColor:1;
        unsigned int localDistanceUnits:1;
        unsigned int isNavigable:1;
        unsigned int routeDeviatesFromOriginal:1;
    } _has;
}

@property(retain, nonatomic) NSMutableArray *incidentsOffRoutes; // @synthesize incidentsOffRoutes=_incidentsOffRoutes;
@property(retain, nonatomic) NSMutableArray *incidentsOnRoutes; // @synthesize incidentsOnRoutes=_incidentsOnRoutes;
@property(retain, nonatomic) NSData *directionsResponseID; // @synthesize directionsResponseID=_directionsResponseID;
@property(nonatomic) int localDistanceUnits; // @synthesize localDistanceUnits=_localDistanceUnits;
@property(retain, nonatomic) NSMutableArray *placeSearchResponses; // @synthesize placeSearchResponses=_placeSearchResponses;
@property(retain, nonatomic) NSMutableArray *routes; // @synthesize routes=_routes;
@property(nonatomic) int status; // @synthesize status=_status;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (void)setSupportedTransportTypes:(int *)arg1 count:(unsigned long long)arg2;
- (int)supportedTransportTypeAtIndex:(unsigned long long)arg1;
- (void)addSupportedTransportType:(int)arg1;
- (void)clearSupportedTransportTypes;
@property(readonly, nonatomic) int *supportedTransportTypes;
@property(readonly, nonatomic) unsigned long long supportedTransportTypesCount;
- (void)setProblemDetails:(CDStruct_c55e649d *)arg1 count:(unsigned long long)arg2;
- (CDStruct_c55e649d)problemDetailAtIndex:(unsigned long long)arg1;
- (void)addProblemDetail:(CDStruct_c55e649d)arg1;
- (void)clearProblemDetails;
@property(readonly, nonatomic) CDStruct_c55e649d *problemDetails;
@property(readonly, nonatomic) unsigned long long problemDetailsCount;
- (id)incidentsOffRoutesAtIndex:(unsigned long long)arg1;
- (unsigned long long)incidentsOffRoutesCount;
- (void)addIncidentsOffRoutes:(id)arg1;
- (void)clearIncidentsOffRoutes;
- (id)incidentsOnRoutesAtIndex:(unsigned long long)arg1;
- (unsigned long long)incidentsOnRoutesCount;
- (void)addIncidentsOnRoutes:(id)arg1;
- (void)clearIncidentsOnRoutes;
@property(nonatomic) _Bool hasInstructionSignFillColor;
@property(nonatomic) int instructionSignFillColor; // @synthesize instructionSignFillColor=_instructionSignFillColor;
@property(nonatomic) _Bool hasIsNavigable;
@property(nonatomic) _Bool isNavigable; // @synthesize isNavigable=_isNavigable;
@property(readonly, nonatomic) _Bool hasDirectionsResponseID;
@property(nonatomic) _Bool hasRouteDeviatesFromOriginal;
@property(nonatomic) _Bool routeDeviatesFromOriginal; // @synthesize routeDeviatesFromOriginal=_routeDeviatesFromOriginal;
@property(nonatomic) _Bool hasLocalDistanceUnits;
- (id)placeSearchResponseAtIndex:(unsigned long long)arg1;
- (unsigned long long)placeSearchResponsesCount;
- (void)addPlaceSearchResponse:(id)arg1;
- (void)clearPlaceSearchResponses;
- (id)routeAtIndex:(unsigned long long)arg1;
- (unsigned long long)routesCount;
- (void)addRoute:(id)arg1;
- (void)clearRoutes;
- (void)dealloc;

@end

@interface GEODirectionsRouteRequest : GEODirectionsRequest
{
}

- (Class)responseClass;
- (id)initWithFeedback:(id)arg1;
- (id)init;
- (id)initWithQuickETARequest:(id)arg1 withFeedback:(id)arg2;

@end

@interface GEODirectionsRouteResponse : GEODirectionsResponse
{
}

- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)description;
- (id)dictionaryRepresentation;
- (id)initWithDictionaryRepresentation:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface GEODiskSpaceManager : NSObject
{
    NSObject<OS_dispatch_queue> *_queue;
    NSMutableDictionary *_freeableClaims;
}

+ (id)sharedManager;
- (unsigned long long)freeDiskSpaceBy:(unsigned long long)arg1;
- (unsigned long long)getFreeableSpace;
- (void)dealloc;
- (id)init;

@end

@interface GEODownloadMetadata : PBCodable <NSCopying>
{
    double _timestamp;
    NSString *_etag;
    NSString *_url;
}

@property(retain, nonatomic) NSString *url; // @synthesize url=_url;
@property(retain, nonatomic) NSString *etag; // @synthesize etag=_etag;
@property(nonatomic) double timestamp; // @synthesize timestamp=_timestamp;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasUrl;
@property(readonly, nonatomic) _Bool hasEtag;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface GEOETAProvider : NSObject
{
}

- (void)cancelRequest;
- (void)startSimpleETARequest:(id)arg1 finished:(CDUnknownBlockType)arg2 error:(CDUnknownBlockType)arg3;
- (void)updateRequest:(id)arg1 finished:(CDUnknownBlockType)arg2 error:(CDUnknownBlockType)arg3;
- (void)startRequest:(id)arg1 connectionProperties:(const CDStruct_96e0509c *)arg2 willSendRequest:(CDUnknownBlockType)arg3 finished:(CDUnknownBlockType)arg4 error:(CDUnknownBlockType)arg5;
- (void)startRequest:(id)arg1 finished:(CDUnknownBlockType)arg2 error:(CDUnknownBlockType)arg3;

@end

@interface GEOETARequest : PBRequest <NSCopying>
{
    CDStruct_612aec5b _sessionID;
    CDStruct_8c2f87f5 _timepoint;
    GEOAutomobileOptions *_automobileOptions;
    NSMutableArray *_destinationWaypointTypeds;
    NSMutableArray *_destinations;
    unsigned int _distanceLimitMeters;
    GEOWaypoint *_origin;
    GEOWaypointTyped *_originWaypointTyped;
    NSMutableArray *_serviceTags;
    int _transportType;
    GEOWalkingOptions *_walkingOptions;
    _Bool _allowPartialResults;
    _Bool _includeDistance;
    _Bool _includeHistoricTravelTime;
    struct {
        unsigned int sessionID:1;
        unsigned int timepoint:1;
        unsigned int distanceLimitMeters:1;
        unsigned int transportType:1;
        unsigned int allowPartialResults:1;
        unsigned int includeDistance:1;
        unsigned int includeHistoricTravelTime:1;
    } _has;
}

@property(retain, nonatomic) NSMutableArray *serviceTags; // @synthesize serviceTags=_serviceTags;
@property(retain, nonatomic) GEOWalkingOptions *walkingOptions; // @synthesize walkingOptions=_walkingOptions;
@property(retain, nonatomic) GEOAutomobileOptions *automobileOptions; // @synthesize automobileOptions=_automobileOptions;
@property(retain, nonatomic) NSMutableArray *destinationWaypointTypeds; // @synthesize destinationWaypointTypeds=_destinationWaypointTypeds;
@property(retain, nonatomic) GEOWaypointTyped *originWaypointTyped; // @synthesize originWaypointTyped=_originWaypointTyped;
@property(nonatomic) CDStruct_612aec5b sessionID; // @synthesize sessionID=_sessionID;
@property(nonatomic) _Bool includeDistance; // @synthesize includeDistance=_includeDistance;
@property(nonatomic) _Bool allowPartialResults; // @synthesize allowPartialResults=_allowPartialResults;
@property(nonatomic) _Bool includeHistoricTravelTime; // @synthesize includeHistoricTravelTime=_includeHistoricTravelTime;
@property(retain, nonatomic) NSMutableArray *destinations; // @synthesize destinations=_destinations;
@property(retain, nonatomic) GEOWaypoint *origin; // @synthesize origin=_origin;
@property(nonatomic) CDStruct_8c2f87f5 timepoint; // @synthesize timepoint=_timepoint;
@property(nonatomic) int transportType; // @synthesize transportType=_transportType;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (Class)responseClass;
- (unsigned int)requestTypeCode;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)serviceTagAtIndex:(unsigned long long)arg1;
- (unsigned long long)serviceTagsCount;
- (void)addServiceTag:(id)arg1;
- (void)clearServiceTags;
@property(readonly, nonatomic) _Bool hasWalkingOptions;
@property(readonly, nonatomic) _Bool hasAutomobileOptions;
- (id)destinationWaypointTypedAtIndex:(unsigned long long)arg1;
- (unsigned long long)destinationWaypointTypedsCount;
- (void)addDestinationWaypointTyped:(id)arg1;
- (void)clearDestinationWaypointTypeds;
@property(readonly, nonatomic) _Bool hasOriginWaypointTyped;
@property(nonatomic) _Bool hasDistanceLimitMeters;
@property(nonatomic) unsigned int distanceLimitMeters; // @synthesize distanceLimitMeters=_distanceLimitMeters;
@property(nonatomic) _Bool hasSessionID;
@property(nonatomic) _Bool hasIncludeDistance;
@property(nonatomic) _Bool hasAllowPartialResults;
@property(nonatomic) _Bool hasIncludeHistoricTravelTime;
- (id)destinationAtIndex:(unsigned long long)arg1;
- (unsigned long long)destinationsCount;
- (void)addDestination:(id)arg1;
- (void)clearDestinations;
@property(readonly, nonatomic) _Bool hasOrigin;
@property(nonatomic) _Bool hasTimepoint;
@property(nonatomic) _Bool hasTransportType;
- (void)dealloc;
- (id)initWithQuickETARequest:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface GEOETARequester : NSObject
{
    NSMapTable *_pendingRequests;
    NSLock *_pendingRequestsLock;
}

+ (id)sharedRequester;
- (void)cancelRequest:(id)arg1;
- (void)startSimpleETARequest:(id)arg1 finished:(CDUnknownBlockType)arg2 networkActivity:(CDUnknownBlockType)arg3 error:(CDUnknownBlockType)arg4;
- (void)_startRequest:(id)arg1 provider:(id)arg2 isRequestUpdate:(_Bool)arg3 connectionProperties:(const CDStruct_96e0509c *)arg4 willSendRequest:(CDUnknownBlockType)arg5 finished:(CDUnknownBlockType)arg6 networkActivity:(CDUnknownBlockType)arg7 error:(CDUnknownBlockType)arg8;
- (void)updateRequest:(id)arg1 finished:(CDUnknownBlockType)arg2 networkActivity:(CDUnknownBlockType)arg3 error:(CDUnknownBlockType)arg4;
- (void)startRequest:(id)arg1 finished:(CDUnknownBlockType)arg2 networkActivity:(CDUnknownBlockType)arg3 error:(CDUnknownBlockType)arg4;
- (void)startRequest:(id)arg1 connectionProperties:(const CDStruct_96e0509c *)arg2 willSendRequest:(CDUnknownBlockType)arg3 finished:(CDUnknownBlockType)arg4 networkActivity:(CDUnknownBlockType)arg5 error:(CDUnknownBlockType)arg6;
- (void)dealloc;
- (id)init;

@end

@interface GEOETAResponse : PBCodable <NSCopying>
{
    CDStruct_c55e649d *_problemDetails;
    unsigned long long _problemDetailsCount;
    unsigned long long _problemDetailsSpace;
    NSMutableArray *_etaResults;
    GEOPlaceSearchResponse *_originPlaceSearchResponse;
    int _status;
    CDStruct_47fe53f2 _has;
}

@property(retain, nonatomic) GEOPlaceSearchResponse *originPlaceSearchResponse; // @synthesize originPlaceSearchResponse=_originPlaceSearchResponse;
@property(retain, nonatomic) NSMutableArray *etaResults; // @synthesize etaResults=_etaResults;
@property(nonatomic) int status; // @synthesize status=_status;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (void)setProblemDetails:(CDStruct_c55e649d *)arg1 count:(unsigned long long)arg2;
- (CDStruct_c55e649d)problemDetailAtIndex:(unsigned long long)arg1;
- (void)addProblemDetail:(CDStruct_c55e649d)arg1;
- (void)clearProblemDetails;
@property(readonly, nonatomic) CDStruct_c55e649d *problemDetails;
@property(readonly, nonatomic) unsigned long long problemDetailsCount;
@property(readonly, nonatomic) _Bool hasOriginPlaceSearchResponse;
- (id)etaResultAtIndex:(unsigned long long)arg1;
- (unsigned long long)etaResultsCount;
- (void)addEtaResult:(id)arg1;
- (void)clearEtaResults;
@property(nonatomic) _Bool hasStatus;
- (void)dealloc;

@end

@interface GEOETAResult : PBCodable <NSCopying>
{
    unsigned int _distance;
    unsigned int _historicTravelTime;
    unsigned int _liveTravelTime;
    GEOPlaceSearchResponse *_placeSearchResponse;
    NSMutableArray *_sortedETAs;
    int _status;
    struct {
        unsigned int distance:1;
        unsigned int historicTravelTime:1;
        unsigned int liveTravelTime:1;
        unsigned int status:1;
    } _has;
}

@property(retain, nonatomic) NSMutableArray *sortedETAs; // @synthesize sortedETAs=_sortedETAs;
@property(nonatomic) unsigned int distance; // @synthesize distance=_distance;
@property(retain, nonatomic) GEOPlaceSearchResponse *placeSearchResponse; // @synthesize placeSearchResponse=_placeSearchResponse;
@property(nonatomic) unsigned int historicTravelTime; // @synthesize historicTravelTime=_historicTravelTime;
@property(nonatomic) unsigned int liveTravelTime; // @synthesize liveTravelTime=_liveTravelTime;
@property(nonatomic) int status; // @synthesize status=_status;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)sortedETAAtIndex:(unsigned long long)arg1;
- (unsigned long long)sortedETAsCount;
- (void)addSortedETA:(id)arg1;
- (void)clearSortedETAs;
@property(nonatomic) _Bool hasDistance;
@property(readonly, nonatomic) _Bool hasPlaceSearchResponse;
@property(nonatomic) _Bool hasHistoricTravelTime;
@property(nonatomic) _Bool hasLiveTravelTime;
@property(nonatomic) _Bool hasStatus;
- (void)dealloc;

@end

@interface GEOETAResultByType : PBCodable <NSCopying>
{
    unsigned int _distance;
    unsigned int _historicTravelTime;
    int _status;
    int _transportType;
    unsigned int _travelTimeBestEstimate;
    struct {
        unsigned int distance:1;
        unsigned int historicTravelTime:1;
        unsigned int status:1;
        unsigned int transportType:1;
        unsigned int travelTimeBestEstimate:1;
    } _has;
}

@property(nonatomic) unsigned int distance; // @synthesize distance=_distance;
@property(nonatomic) unsigned int historicTravelTime; // @synthesize historicTravelTime=_historicTravelTime;
@property(nonatomic) unsigned int travelTimeBestEstimate; // @synthesize travelTimeBestEstimate=_travelTimeBestEstimate;
@property(nonatomic) int transportType; // @synthesize transportType=_transportType;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasDistance;
@property(nonatomic) _Bool hasHistoricTravelTime;
@property(nonatomic) _Bool hasTravelTimeBestEstimate;
@property(nonatomic) _Bool hasStatus;
@property(nonatomic) int status; // @synthesize status=_status;
@property(nonatomic) _Bool hasTransportType;

@end

@interface GEOETARoute : PBCodable <NSCopying>
{
    CDStruct_9f2792e4 _incidentEndOffsetsInETARoutes;
    CDStruct_9f2792e4 _trafficColorOffsets;
    CDStruct_9f2792e4 _trafficColors;
    unsigned int _historicTravelTime;
    NSMutableArray *_incidentsOffReRoutes;
    NSMutableArray *_incidentsOnETARoutes;
    NSMutableArray *_incidentsOnReRoutes;
    NSMutableArray *_invalidSectionZilchPoints;
    NSMutableArray *_reroutedRoutes;
    NSData *_routeID;
    NSMutableArray *_steps;
    NSData *_zilchPoints;
    _Bool _routeNoLongerValid;
    struct {
        unsigned int historicTravelTime:1;
        unsigned int routeNoLongerValid:1;
    } _has;
}

@property(nonatomic) unsigned int historicTravelTime; // @synthesize historicTravelTime=_historicTravelTime;
@property(retain, nonatomic) NSMutableArray *incidentsOffReRoutes; // @synthesize incidentsOffReRoutes=_incidentsOffReRoutes;
@property(retain, nonatomic) NSMutableArray *incidentsOnReRoutes; // @synthesize incidentsOnReRoutes=_incidentsOnReRoutes;
@property(retain, nonatomic) NSMutableArray *incidentsOnETARoutes; // @synthesize incidentsOnETARoutes=_incidentsOnETARoutes;
@property(retain, nonatomic) NSMutableArray *invalidSectionZilchPoints; // @synthesize invalidSectionZilchPoints=_invalidSectionZilchPoints;
@property(retain, nonatomic) NSMutableArray *reroutedRoutes; // @synthesize reroutedRoutes=_reroutedRoutes;
@property(nonatomic) _Bool routeNoLongerValid; // @synthesize routeNoLongerValid=_routeNoLongerValid;
@property(retain, nonatomic) NSData *zilchPoints; // @synthesize zilchPoints=_zilchPoints;
@property(retain, nonatomic) NSMutableArray *steps; // @synthesize steps=_steps;
@property(retain, nonatomic) NSData *routeID; // @synthesize routeID=_routeID;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (void)setIncidentEndOffsetsInETARoutes:(unsigned int *)arg1 count:(unsigned long long)arg2;
- (unsigned int)incidentEndOffsetsInETARouteAtIndex:(unsigned long long)arg1;
- (void)addIncidentEndOffsetsInETARoute:(unsigned int)arg1;
- (void)clearIncidentEndOffsetsInETARoutes;
@property(readonly, nonatomic) unsigned int *incidentEndOffsetsInETARoutes;
@property(readonly, nonatomic) unsigned long long incidentEndOffsetsInETARoutesCount;
@property(nonatomic) _Bool hasHistoricTravelTime;
- (id)incidentsOffReRoutesAtIndex:(unsigned long long)arg1;
- (unsigned long long)incidentsOffReRoutesCount;
- (void)addIncidentsOffReRoutes:(id)arg1;
- (void)clearIncidentsOffReRoutes;
- (id)incidentsOnReRoutesAtIndex:(unsigned long long)arg1;
- (unsigned long long)incidentsOnReRoutesCount;
- (void)addIncidentsOnReRoutes:(id)arg1;
- (void)clearIncidentsOnReRoutes;
- (id)incidentsOnETARouteAtIndex:(unsigned long long)arg1;
- (unsigned long long)incidentsOnETARoutesCount;
- (void)addIncidentsOnETARoute:(id)arg1;
- (void)clearIncidentsOnETARoutes;
- (void)setTrafficColorOffsets:(unsigned int *)arg1 count:(unsigned long long)arg2;
- (unsigned int)trafficColorOffsetAtIndex:(unsigned long long)arg1;
- (void)addTrafficColorOffset:(unsigned int)arg1;
- (void)clearTrafficColorOffsets;
@property(readonly, nonatomic) unsigned int *trafficColorOffsets;
@property(readonly, nonatomic) unsigned long long trafficColorOffsetsCount;
- (void)setTrafficColors:(unsigned int *)arg1 count:(unsigned long long)arg2;
- (unsigned int)trafficColorAtIndex:(unsigned long long)arg1;
- (void)addTrafficColor:(unsigned int)arg1;
- (void)clearTrafficColors;
@property(readonly, nonatomic) unsigned int *trafficColors;
@property(readonly, nonatomic) unsigned long long trafficColorsCount;
- (id)invalidSectionZilchPointsAtIndex:(unsigned long long)arg1;
- (unsigned long long)invalidSectionZilchPointsCount;
- (void)addInvalidSectionZilchPoints:(id)arg1;
- (void)clearInvalidSectionZilchPoints;
- (id)reroutedRouteAtIndex:(unsigned long long)arg1;
- (unsigned long long)reroutedRoutesCount;
- (void)addReroutedRoute:(id)arg1;
- (void)clearReroutedRoutes;
@property(nonatomic) _Bool hasRouteNoLongerValid;
@property(readonly, nonatomic) _Bool hasZilchPoints;
- (id)stepAtIndex:(unsigned long long)arg1;
- (unsigned long long)stepsCount;
- (void)addStep:(id)arg1;
- (void)clearSteps;
@property(readonly, nonatomic) _Bool hasRouteID;
- (void)dealloc;
- (double)remainingTimeAlongRoute:(unsigned int)arg1 currentStepRemainingDistance:(double)arg2;
@property(readonly, nonatomic) double expectedTime;

@end

@interface GEOETAStep : PBCodable <NSCopying>
{
    unsigned int _distanceRemaining;
    unsigned int _expectedTime;
    unsigned int _stepID;
    GEOTimeCheckpoints *_timeCheckpoints;
    int _zilchPointIndex;
    struct {
        unsigned int distanceRemaining:1;
        unsigned int expectedTime:1;
        unsigned int stepID:1;
        unsigned int zilchPointIndex:1;
    } _has;
}

@property(retain, nonatomic) GEOTimeCheckpoints *timeCheckpoints; // @synthesize timeCheckpoints=_timeCheckpoints;
@property(nonatomic) unsigned int expectedTime; // @synthesize expectedTime=_expectedTime;
@property(nonatomic) unsigned int stepID; // @synthesize stepID=_stepID;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasTimeCheckpoints;
@property(nonatomic) _Bool hasZilchPointIndex;
@property(nonatomic) int zilchPointIndex; // @synthesize zilchPointIndex=_zilchPointIndex;
@property(nonatomic) _Bool hasExpectedTime;
@property(nonatomic) _Bool hasStepID;
- (void)dealloc;
@property(nonatomic) _Bool hasDistanceRemaining;
@property(nonatomic) unsigned int distanceRemaining;

@end

@interface GEOETATrafficUpdateRequest : PBRequest <NSCopying>
{
    CDStruct_612aec5b _sessionID;
    GEOClientCapabilities *_clientCapabilities;
    GEOLocation *_currentUserLocation;
    NSMutableArray *_destinationWaypointTypeds;
    NSData *_directionsResponseID;
    GEORouteAttributes *_routeAttributes;
    NSMutableArray *_routes;
    NSMutableArray *_serviceTags;
    _Bool _includeBetterRouteSuggestion;
    struct {
        unsigned int sessionID:1;
        unsigned int includeBetterRouteSuggestion:1;
    } _has;
}

@property(retain, nonatomic) NSMutableArray *serviceTags; // @synthesize serviceTags=_serviceTags;
@property(retain, nonatomic) NSMutableArray *destinationWaypointTypeds; // @synthesize destinationWaypointTypeds=_destinationWaypointTypeds;
@property(nonatomic) CDStruct_612aec5b sessionID; // @synthesize sessionID=_sessionID;
@property(retain, nonatomic) NSData *directionsResponseID; // @synthesize directionsResponseID=_directionsResponseID;
@property(retain, nonatomic) GEOClientCapabilities *clientCapabilities; // @synthesize clientCapabilities=_clientCapabilities;
@property(retain, nonatomic) NSMutableArray *routes; // @synthesize routes=_routes;
@property(retain, nonatomic) GEORouteAttributes *routeAttributes; // @synthesize routeAttributes=_routeAttributes;
@property(retain, nonatomic) GEOLocation *currentUserLocation; // @synthesize currentUserLocation=_currentUserLocation;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (Class)responseClass;
- (unsigned int)requestTypeCode;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)serviceTagAtIndex:(unsigned long long)arg1;
- (unsigned long long)serviceTagsCount;
- (void)addServiceTag:(id)arg1;
- (void)clearServiceTags;
- (id)destinationWaypointTypedAtIndex:(unsigned long long)arg1;
- (unsigned long long)destinationWaypointTypedsCount;
- (void)addDestinationWaypointTyped:(id)arg1;
- (void)clearDestinationWaypointTypeds;
@property(nonatomic) _Bool hasSessionID;
@property(readonly, nonatomic) _Bool hasDirectionsResponseID;
@property(readonly, nonatomic) _Bool hasClientCapabilities;
- (id)routeAtIndex:(unsigned long long)arg1;
- (unsigned long long)routesCount;
- (void)addRoute:(id)arg1;
- (void)clearRoutes;
@property(nonatomic) _Bool hasIncludeBetterRouteSuggestion;
@property(nonatomic) _Bool includeBetterRouteSuggestion; // @synthesize includeBetterRouteSuggestion=_includeBetterRouteSuggestion;
@property(readonly, nonatomic) _Bool hasRouteAttributes;
@property(readonly, nonatomic) _Bool hasCurrentUserLocation;
- (void)dealloc;

@end

@interface GEOETATrafficUpdateResponse : PBCodable <NSCopying>
{
    NSMutableArray *_routes;
    int _status;
    CDStruct_47fe53f2 _has;
}

@property(retain, nonatomic) NSMutableArray *routes; // @synthesize routes=_routes;
@property(nonatomic) int status; // @synthesize status=_status;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)routeAtIndex:(unsigned long long)arg1;
- (unsigned long long)routesCount;
- (void)addRoute:(id)arg1;
- (void)clearRoutes;
@property(nonatomic) _Bool hasStatus;
- (void)dealloc;

@end

@interface GEOETAUpdater : NSObject
{
    id <GEOETAUpdaterDelegate> _delegate;
    GEOETATrafficUpdateRequest *_currentETARequest;
    GEOLocation *_userLocation;
    GEORouteMatch *_routeMatch;
    GEOComposedRoute *_route;
    GEOComposedWaypoint *_destination;
    GEORouteAttributes *_routeAttributes;
    long long _etaState;
    _Bool _allowRequests;
    _Bool _shouldUseConditionalRequest;
    double _requestInterval;
    NSTimer *_etaIdleTimer;
    double _lastETARequestTime;
    double _debugTimeWindowDuration;
    NSData *_directionsResponseID;
}

@property(nonatomic) double debugTimeWindowDuration; // @synthesize debugTimeWindowDuration=_debugTimeWindowDuration;
@property(nonatomic) double requestInterval; // @synthesize requestInterval=_requestInterval;
@property(nonatomic) _Bool shouldUseConditionalRequest; // @synthesize shouldUseConditionalRequest=_shouldUseConditionalRequest;
@property(nonatomic) _Bool allowRequests; // @synthesize allowRequests=_allowRequests;
@property(retain, nonatomic) NSData *directionsResponseID; // @synthesize directionsResponseID=_directionsResponseID;
@property(retain, nonatomic) GEORouteAttributes *routeAttributes; // @synthesize routeAttributes=_routeAttributes;
@property(retain, nonatomic) GEOComposedWaypoint *destination; // @synthesize destination=_destination;
@property(retain, nonatomic) GEOLocation *userLocation; // @synthesize userLocation=_userLocation;
@property(retain, nonatomic) GEORouteMatch *routeMatch; // @synthesize routeMatch=_routeMatch;
@property(retain, nonatomic) GEOComposedRoute *route; // @synthesize route=_route;
@property(nonatomic) id <GEOETAUpdaterDelegate> delegate; // @synthesize delegate=_delegate;
- (_Bool)_updateRouteWithETATrafficUpdateResponse:(id)arg1;
- (_Bool)updateRouteWithETATrafficUpdateResponse:(id)arg1 step:(id)arg2 percentOfStepRemaining:(double)arg3;
- (id)routesForETAUpdateRequest;
- (double)percentageOfCurrentStepRemaining;
- (id)currentStep;
- (_Bool)_shouldStartConditionalETARequest;
- (void)_continueUpdateRequests;
- (double)_calculateNextTransitionTime;
- (_Bool)_sendETARequest:(id)arg1 isUpdate:(_Bool)arg2;
- (_Bool)_updateETAResponse:(id)arg1 withRemainingDistanceFromRequest:(id)arg2;
- (void)_startConditionalConnectionETARequest;
- (void)_startStateWaitingForBestTimeStart:(id)arg1;
- (void)_createETARequest;
- (void)_updateCurrentETARequest;
- (void)stopUpdateRequests;
- (void)startUpdateRequests;
- (void)requestUpdate;
- (void)_clearCurrentETARequest;
- (void)_clearTimer;
- (void)reset;
- (void)dealloc;
- (id)initWithRoute:(id)arg1 destination:(id)arg2 routeAttributes:(id)arg3;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface GEOEditionEntry : NSObject
{
    unsigned int _tileset;
    unsigned int _edition;
    unsigned int _provider;
    _Bool _invalidateOnly;
}

@property _Bool invalidateOnly; // @synthesize invalidateOnly=_invalidateOnly;
@property unsigned int provider; // @synthesize provider=_provider;
@property unsigned int edition; // @synthesize edition=_edition;
@property unsigned int tileset; // @synthesize tileset=_tileset;

@end

@interface GEOTileRequester : NSObject
{
    GEOResourceManifestConfiguration *_manifestConfiguration;
    NSLocale *_locale;
    GEOTileKeyList *_keyList;
    GEOTileKeyMap *_cachedEtags;
    GEOTileKeyMap *_cachedData;
    id <GEOTileRequesterDelegate> _delegate;
    id _context;
    NSThread *_thread;
    NSString *_bundleIdentifier;
    NSString *_bundleVersion;
    NSData *_auditToken;
    _Bool _requireWiFi;
}

+ (_Bool)skipNetworkForKeysWhenPreloading:(id)arg1;
+ (CDStruct_e4886f83 *)newExpiringTilesets;
+ (unsigned long long)expiringTilesetsCount;
+ (unsigned char)tileProviderIdentifier;
@property(nonatomic) _Bool requireWiFi; // @synthesize requireWiFi=_requireWiFi;
@property(retain, nonatomic) NSData *auditToken; // @synthesize auditToken=_auditToken;
@property(retain, nonatomic) NSString *bundleVersion; // @synthesize bundleVersion=_bundleVersion;
@property(retain, nonatomic) NSString *bundleIdentifier; // @synthesize bundleIdentifier=_bundleIdentifier;
@property(retain, nonatomic) id context; // @synthesize context=_context;
@property(retain, nonatomic) NSThread *thread; // @synthesize thread=_thread;
@property(readonly, nonatomic) GEOTileKeyMap *cachedData; // @synthesize cachedData=_cachedData;
@property(readonly, nonatomic) GEOTileKeyMap *cachedEtags; // @synthesize cachedEtags=_cachedEtags;
@property(readonly, nonatomic) GEOTileKeyList *keyList; // @synthesize keyList=_keyList;
@property(retain, nonatomic) id <GEOTileRequesterDelegate> delegate; // @synthesize delegate=_delegate;
- (void)dealloc;
- (unsigned int)tileSetForKey:(const struct _GEOTileKey *)arg1;
- (void)cancel;
- (void)start;
- (id)initWithKeyList:(id)arg1 manifestConfiguration:(id)arg2 locale:(id)arg3 cachedEtags:(id)arg4 cachedData:(id)arg5;

@end

@interface GEOSimpleTileRequester : GEOTileRequester <NSURLConnectionDelegate>
{
    NSMutableArray *_waiting;
    NSMutableSet *_running;
    _Bool _cancelled;
    _Bool _subclassImplementsTileEdition;
    NSMutableArray *_errors;
}

+ (long long)eTagType;
- (void)dealloc;
- (void)cancel;
- (void)_cleanup;
- (unsigned int)tileEditionForKey:(struct _GEOTileKey *)arg1;
- (void)start;
- (_Bool)isRunning;
- (void)_doWorkOrFinish;
- (void)_operationFinished:(id)arg1;
- (void)_operationFailed:(id)arg1 error:(id)arg2;
- (id)editionHeader;
- (id)mergeBaseTile:(id)arg1 withLocalizationTile:(id)arg2;
- (id)mergeBaseTileEtag:(id)arg1 withLocalizationTileEtag:(id)arg2;
- (id)localizationURLForTileKey:(struct _GEOTileKey *)arg1;
- (id)urlForTileKey:(struct _GEOTileKey *)arg1;
- (_Bool)allowsCookies;
- (id)initWithKeyList:(id)arg1 manifestConfiguration:(id)arg2 locale:(id)arg3 cachedEtags:(id)arg4 cachedData:(id)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GEOVoltaireSimpleTileRequester : GEOSimpleTileRequester <NSURLConnectionDelegate>
{
}

- (id)localizationURLForTileKey:(struct _GEOTileKey *)arg1;
- (id)_localizationURLForTileKey:(struct _GEOTileKey *)arg1;
- (id)urlForTileKey:(struct _GEOTileKey *)arg1;
- (unsigned int)tileEditionForKey:(struct _GEOTileKey *)arg1;
- (unsigned int)tileSetForKey:(const struct _GEOTileKey *)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GEOFeatureSpecificSimpleTileRequester : GEOVoltaireSimpleTileRequester
{
    unsigned long long _featureID;
}

- (id)_localizationURLForTileKey:(struct _GEOTileKey *)arg1;
- (id)urlForTileKey:(struct _GEOTileKey *)arg1;
- (id)initWithKeyList:(id)arg1 manifestConfiguration:(id)arg2 locale:(id)arg3 featureID:(unsigned long long)arg4;

@end

@interface GEOFeatureStyleAttributes : NSObject <NSCopying>
{
    CDStruct_1e94be47 *v;
    GEOFeatureStyleAttributes *_sharedAttributes;
    CDStruct_d008d4b8 *extAttrs;
    unsigned char countExtAttrs;
    unsigned char countAttrs;
    BOOL featureType;
}

- (void)sort;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)replaceAttributes:(CDStruct_1e94be47 *)arg1 count:(unsigned int)arg2;
- (void)setExtAttributes:(CDStruct_d008d4b8 *)arg1 count:(unsigned int)arg2;
- (BOOL)featureType;
- (void)dealloc;
- (id)initWithSharedStyleAttributes:(id)arg1 extAttributes:(CDStruct_d008d4b8 *)arg2 extAttributeCount:(unsigned char)arg3;
- (id)initWithStyleAttributes:(id)arg1;
- (id)initWithAttributes:(unsigned int)arg1;
- (id)init;
- (id)initWithPlaceDataStyleAttributes:(id)arg1;
- (_Bool)shouldSuppress3DBuildingStrokes;
- (_Bool)isDrivable;
- (_Bool)isWalkable;
- (int)drivingSide;
- (_Bool)hasDrivingSide;
- (_Bool)isRailway;
- (_Bool)isFreeway;
- (int)rampDirection;
- (int)rampType;
- (_Bool)isRamp;
- (_Bool)isTunnel;

@end

__attribute__((visibility("hidden")))
@interface GEOFilePaths : NSObject
{
}

+ (id)placeDataCacheDirectoryPath;
+ (id)phoneNumberMUIDMappingFilePath;

@end

@interface GEOGeoServiceTag : PBCodable <NSCopying>
{
    int _serviceType;
    NSString *_tag;
    struct {
        unsigned int serviceType:1;
    } _has;
}

+ (id)defaultTag;
@property(retain, nonatomic) NSString *tag; // @synthesize tag=_tag;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasServiceType;
@property(nonatomic) int serviceType; // @synthesize serviceType=_serviceType;
- (void)dealloc;

@end

@interface GEOGeocodeProvider : NSObject
{
    CDUnknownBlockType _successHandler;
    CDUnknownBlockType _batchSuccessHandler;
    CDUnknownBlockType _errorHandler;
}

+ (id)providerName;
@property(copy, nonatomic) CDUnknownBlockType errorHandler; // @synthesize errorHandler=_errorHandler;
@property(copy, nonatomic) CDUnknownBlockType batchSuccessHandler; // @synthesize batchSuccessHandler=_batchSuccessHandler;
@property(copy, nonatomic) CDUnknownBlockType successHandler; // @synthesize successHandler=_successHandler;
- (void)cancel;
- (void)batchReverseGeocode:(id)arg1 success:(CDUnknownBlockType)arg2 error:(CDUnknownBlockType)arg3;
- (void)reverseGeocode:(id)arg1 success:(CDUnknownBlockType)arg2 error:(CDUnknownBlockType)arg3;
- (void)forwardGeocode:(id)arg1 success:(CDUnknownBlockType)arg2 networkActivity:(CDUnknownBlockType)arg3 error:(CDUnknownBlockType)arg4;
- (void)dealloc;

@end

@interface GEOPlaceSearchRequest : PBRequest <NSCopying>
{
    CDStruct_612aec5b _sessionGUID;
    CDStruct_95bda58d _additionalPlaceTypes;
    CDStruct_62a50c50 _businessIDs;
    CDStruct_95bda58d _optionalSuppressionReasons;
    CDStruct_0756942c _searchContextSubstring;
    CDStruct_0756942c *_searchSubstrings;
    unsigned long long _searchSubstringsCount;
    unsigned long long _searchSubstringsSpace;
    long long _geoId;
    unsigned long long _intersectingGeoId;
    double _timeSinceMapEnteredForeground;
    double _timeSinceMapViewportChanged;
    double _timestamp;
    GEOAddress *_address;
    GEOBusinessOptions *_businessOptions;
    int _businessSortOrder;
    GEOClientCapabilities *_clientCapabilities;
    NSString *_deviceCountryCode;
    GEOLatLng *_deviceLocation;
    NSString *_deviceTimeZone;
    NSMutableArray *_filterByBusinessCategorys;
    GEOIndexQueryNode *_indexFilter;
    NSString *_inputLanguage;
    int _knownAccuracy;
    GEOLatLng *_knownLocation;
    int _localSearchProviderID;
    GEOLocation *_location;
    GEOMapRegion *_mapRegion;
    int _maxBusinessReviews;
    int _maxResults;
    NSString *_phoneticLocaleIdentifier;
    int _placeTypeLimit;
    GEOAddress *_preserveFields;
    NSString *_search;
    NSString *_searchContext;
    GEOLatLng *_searchLocation;
    int _searchSource;
    int _sequenceNumber;
    NSMutableArray *_serviceTags;
    GEOSuggestionsOptions *_suggestionsOptions;
    NSString *_suggestionsPrefix;
    int _transportTypeForTravelTimes;
    NSData *_zilchPoints;
    _Bool _excludeAddressInResults;
    _Bool _includeBusinessCategories;
    _Bool _includeBusinessRating;
    _Bool _includeEntryPoints;
    _Bool _includeFeatureSets;
    _Bool _includeGeoId;
    _Bool _includeMatchedToken;
    _Bool _includeNameForForwardGeocodingResults;
    _Bool _includePhonetics;
    _Bool _includeQuads;
    _Bool _includeRevgeoRequestTemplate;
    _Bool _includeSpokenNames;
    _Bool _includeStatusCodeInfo;
    _Bool _includeSuggestionsOnly;
    _Bool _includeTravelDistance;
    _Bool _includeTravelTime;
    _Bool _includeUnmatchedStrings;
    _Bool _isFromAPI;
    _Bool _isStrictGeocoding;
    _Bool _isStrictMapRegion;
    _Bool _structuredSearch;
    _Bool _suppressResultsRequiringAttribution;
    struct {
        unsigned int sessionGUID:1;
        unsigned int searchContextSubstring:1;
        unsigned int geoId:1;
        unsigned int intersectingGeoId:1;
        unsigned int timeSinceMapEnteredForeground:1;
        unsigned int timeSinceMapViewportChanged:1;
        unsigned int timestamp:1;
        unsigned int businessSortOrder:1;
        unsigned int knownAccuracy:1;
        unsigned int localSearchProviderID:1;
        unsigned int maxBusinessReviews:1;
        unsigned int maxResults:1;
        unsigned int placeTypeLimit:1;
        unsigned int searchSource:1;
        unsigned int sequenceNumber:1;
        unsigned int transportTypeForTravelTimes:1;
        unsigned int excludeAddressInResults:1;
        unsigned int includeBusinessCategories:1;
        unsigned int includeBusinessRating:1;
        unsigned int includeEntryPoints:1;
        unsigned int includeFeatureSets:1;
        unsigned int includeGeoId:1;
        unsigned int includeMatchedToken:1;
        unsigned int includeNameForForwardGeocodingResults:1;
        unsigned int includePhonetics:1;
        unsigned int includeQuads:1;
        unsigned int includeRevgeoRequestTemplate:1;
        unsigned int includeSpokenNames:1;
        unsigned int includeStatusCodeInfo:1;
        unsigned int includeSuggestionsOnly:1;
        unsigned int includeTravelDistance:1;
        unsigned int includeTravelTime:1;
        unsigned int includeUnmatchedStrings:1;
        unsigned int isFromAPI:1;
        unsigned int isStrictGeocoding:1;
        unsigned int isStrictMapRegion:1;
        unsigned int structuredSearch:1;
        unsigned int suppressResultsRequiringAttribution:1;
    } _has;
}

@property(nonatomic) _Bool includeNameForForwardGeocodingResults; // @synthesize includeNameForForwardGeocodingResults=_includeNameForForwardGeocodingResults;
@property(retain, nonatomic) GEOLatLng *searchLocation; // @synthesize searchLocation=_searchLocation;
@property(nonatomic) int searchSource; // @synthesize searchSource=_searchSource;
@property(nonatomic) _Bool includeMatchedToken; // @synthesize includeMatchedToken=_includeMatchedToken;
@property(nonatomic) _Bool includeRevgeoRequestTemplate; // @synthesize includeRevgeoRequestTemplate=_includeRevgeoRequestTemplate;
@property(nonatomic) int knownAccuracy; // @synthesize knownAccuracy=_knownAccuracy;
@property(retain, nonatomic) GEOLatLng *knownLocation; // @synthesize knownLocation=_knownLocation;
@property(nonatomic) unsigned long long intersectingGeoId; // @synthesize intersectingGeoId=_intersectingGeoId;
@property(retain, nonatomic) NSMutableArray *serviceTags; // @synthesize serviceTags=_serviceTags;
@property(nonatomic) _Bool includeFeatureSets; // @synthesize includeFeatureSets=_includeFeatureSets;
@property(retain, nonatomic) GEOIndexQueryNode *indexFilter; // @synthesize indexFilter=_indexFilter;
@property(nonatomic) _Bool includeUnmatchedStrings; // @synthesize includeUnmatchedStrings=_includeUnmatchedStrings;
@property(retain, nonatomic) GEOAddress *preserveFields; // @synthesize preserveFields=_preserveFields;
@property(nonatomic) _Bool includeStatusCodeInfo; // @synthesize includeStatusCodeInfo=_includeStatusCodeInfo;
@property(nonatomic) CDStruct_0756942c searchContextSubstring; // @synthesize searchContextSubstring=_searchContextSubstring;
@property(retain, nonatomic) NSString *searchContext; // @synthesize searchContext=_searchContext;
@property(nonatomic) _Bool includeGeoId; // @synthesize includeGeoId=_includeGeoId;
@property(nonatomic) _Bool excludeAddressInResults; // @synthesize excludeAddressInResults=_excludeAddressInResults;
@property(nonatomic) _Bool includeQuads; // @synthesize includeQuads=_includeQuads;
@property(nonatomic) long long geoId; // @synthesize geoId=_geoId;
@property(nonatomic) _Bool includeTravelDistance; // @synthesize includeTravelDistance=_includeTravelDistance;
@property(nonatomic) _Bool isStrictGeocoding; // @synthesize isStrictGeocoding=_isStrictGeocoding;
@property(nonatomic) int placeTypeLimit; // @synthesize placeTypeLimit=_placeTypeLimit;
@property(retain, nonatomic) GEOSuggestionsOptions *suggestionsOptions; // @synthesize suggestionsOptions=_suggestionsOptions;
@property(nonatomic) int transportTypeForTravelTimes; // @synthesize transportTypeForTravelTimes=_transportTypeForTravelTimes;
@property(nonatomic) _Bool includeTravelTime; // @synthesize includeTravelTime=_includeTravelTime;
@property(retain, nonatomic) GEOClientCapabilities *clientCapabilities; // @synthesize clientCapabilities=_clientCapabilities;
@property(retain, nonatomic) NSString *deviceTimeZone; // @synthesize deviceTimeZone=_deviceTimeZone;
@property(nonatomic) _Bool includeSpokenNames; // @synthesize includeSpokenNames=_includeSpokenNames;
@property(nonatomic) double timeSinceMapViewportChanged; // @synthesize timeSinceMapViewportChanged=_timeSinceMapViewportChanged;
@property(nonatomic) double timeSinceMapEnteredForeground; // @synthesize timeSinceMapEnteredForeground=_timeSinceMapEnteredForeground;
@property(nonatomic) _Bool isFromAPI; // @synthesize isFromAPI=_isFromAPI;
@property(nonatomic) _Bool suppressResultsRequiringAttribution; // @synthesize suppressResultsRequiringAttribution=_suppressResultsRequiringAttribution;
@property(nonatomic) int sequenceNumber; // @synthesize sequenceNumber=_sequenceNumber;
@property(retain, nonatomic) NSString *phoneticLocaleIdentifier; // @synthesize phoneticLocaleIdentifier=_phoneticLocaleIdentifier;
@property(retain, nonatomic) NSString *inputLanguage; // @synthesize inputLanguage=_inputLanguage;
@property(retain, nonatomic) GEOLatLng *deviceLocation; // @synthesize deviceLocation=_deviceLocation;
@property(retain, nonatomic) NSString *deviceCountryCode; // @synthesize deviceCountryCode=_deviceCountryCode;
@property(retain, nonatomic) NSString *suggestionsPrefix; // @synthesize suggestionsPrefix=_suggestionsPrefix;
@property(nonatomic) _Bool structuredSearch; // @synthesize structuredSearch=_structuredSearch;
@property(nonatomic) _Bool includeSuggestionsOnly; // @synthesize includeSuggestionsOnly=_includeSuggestionsOnly;
@property(nonatomic) int localSearchProviderID; // @synthesize localSearchProviderID=_localSearchProviderID;
@property(retain, nonatomic) GEOBusinessOptions *businessOptions; // @synthesize businessOptions=_businessOptions;
@property(nonatomic) _Bool includeEntryPoints; // @synthesize includeEntryPoints=_includeEntryPoints;
@property(retain, nonatomic) NSData *zilchPoints; // @synthesize zilchPoints=_zilchPoints;
@property(nonatomic) double timestamp; // @synthesize timestamp=_timestamp;
@property(nonatomic) _Bool isStrictMapRegion; // @synthesize isStrictMapRegion=_isStrictMapRegion;
@property(retain, nonatomic) NSMutableArray *filterByBusinessCategorys; // @synthesize filterByBusinessCategorys=_filterByBusinessCategorys;
@property(nonatomic) int maxBusinessReviews; // @synthesize maxBusinessReviews=_maxBusinessReviews;
@property(nonatomic) _Bool includeBusinessCategories; // @synthesize includeBusinessCategories=_includeBusinessCategories;
@property(nonatomic) _Bool includeBusinessRating; // @synthesize includeBusinessRating=_includeBusinessRating;
@property(nonatomic) int businessSortOrder; // @synthesize businessSortOrder=_businessSortOrder;
@property(nonatomic) CDStruct_612aec5b sessionGUID; // @synthesize sessionGUID=_sessionGUID;
@property(nonatomic) _Bool includePhonetics; // @synthesize includePhonetics=_includePhonetics;
@property(retain, nonatomic) GEOMapRegion *mapRegion; // @synthesize mapRegion=_mapRegion;
@property(retain, nonatomic) NSString *search; // @synthesize search=_search;
@property(retain, nonatomic) GEOLocation *location; // @synthesize location=_location;
@property(retain, nonatomic) GEOAddress *address; // @synthesize address=_address;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (Class)responseClass;
- (unsigned int)requestTypeCode;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasIncludeNameForForwardGeocodingResults;
@property(readonly, nonatomic) _Bool hasSearchLocation;
- (void)setOptionalSuppressionReasons:(int *)arg1 count:(unsigned long long)arg2;
- (int)optionalSuppressionReasonAtIndex:(unsigned long long)arg1;
- (void)addOptionalSuppressionReason:(int)arg1;
- (void)clearOptionalSuppressionReasons;
@property(readonly, nonatomic) int *optionalSuppressionReasons;
@property(readonly, nonatomic) unsigned long long optionalSuppressionReasonsCount;
@property(nonatomic) _Bool hasSearchSource;
@property(nonatomic) _Bool hasIncludeMatchedToken;
@property(nonatomic) _Bool hasIncludeRevgeoRequestTemplate;
@property(nonatomic) _Bool hasKnownAccuracy;
@property(readonly, nonatomic) _Bool hasKnownLocation;
@property(nonatomic) _Bool hasIntersectingGeoId;
- (id)serviceTagAtIndex:(unsigned long long)arg1;
- (unsigned long long)serviceTagsCount;
- (void)addServiceTag:(id)arg1;
- (void)clearServiceTags;
@property(nonatomic) _Bool hasIncludeFeatureSets;
@property(readonly, nonatomic) _Bool hasIndexFilter;
@property(nonatomic) _Bool hasIncludeUnmatchedStrings;
@property(readonly, nonatomic) _Bool hasPreserveFields;
@property(nonatomic) _Bool hasIncludeStatusCodeInfo;
@property(nonatomic) _Bool hasSearchContextSubstring;
@property(readonly, nonatomic) _Bool hasSearchContext;
@property(nonatomic) _Bool hasIncludeGeoId;
- (void)setSearchSubstrings:(CDStruct_0756942c *)arg1 count:(unsigned long long)arg2;
- (CDStruct_0756942c)searchSubstringAtIndex:(unsigned long long)arg1;
- (void)addSearchSubstring:(CDStruct_0756942c)arg1;
- (void)clearSearchSubstrings;
@property(readonly, nonatomic) CDStruct_0756942c *searchSubstrings;
@property(readonly, nonatomic) unsigned long long searchSubstringsCount;
@property(nonatomic) _Bool hasExcludeAddressInResults;
@property(nonatomic) _Bool hasIncludeQuads;
@property(nonatomic) _Bool hasGeoId;
@property(nonatomic) _Bool hasIncludeTravelDistance;
@property(nonatomic) _Bool hasIsStrictGeocoding;
@property(nonatomic) _Bool hasPlaceTypeLimit;
@property(readonly, nonatomic) _Bool hasSuggestionsOptions;
@property(nonatomic) _Bool hasTransportTypeForTravelTimes;
@property(nonatomic) _Bool hasIncludeTravelTime;
@property(readonly, nonatomic) _Bool hasClientCapabilities;
@property(readonly, nonatomic) _Bool hasDeviceTimeZone;
@property(nonatomic) _Bool hasIncludeSpokenNames;
@property(nonatomic) _Bool hasTimeSinceMapViewportChanged;
@property(nonatomic) _Bool hasTimeSinceMapEnteredForeground;
@property(nonatomic) _Bool hasIsFromAPI;
@property(nonatomic) _Bool hasSuppressResultsRequiringAttribution;
@property(nonatomic) _Bool hasSequenceNumber;
@property(readonly, nonatomic) _Bool hasPhoneticLocaleIdentifier;
@property(readonly, nonatomic) _Bool hasInputLanguage;
@property(readonly, nonatomic) _Bool hasDeviceLocation;
@property(readonly, nonatomic) _Bool hasDeviceCountryCode;
@property(readonly, nonatomic) _Bool hasSuggestionsPrefix;
@property(nonatomic) _Bool hasStructuredSearch;
@property(nonatomic) _Bool hasIncludeSuggestionsOnly;
@property(nonatomic) _Bool hasLocalSearchProviderID;
@property(readonly, nonatomic) _Bool hasBusinessOptions;
@property(nonatomic) _Bool hasIncludeEntryPoints;
@property(readonly, nonatomic) _Bool hasZilchPoints;
@property(nonatomic) _Bool hasTimestamp;
@property(nonatomic) _Bool hasIsStrictMapRegion;
- (id)filterByBusinessCategoryAtIndex:(unsigned long long)arg1;
- (unsigned long long)filterByBusinessCategorysCount;
- (void)addFilterByBusinessCategory:(id)arg1;
- (void)clearFilterByBusinessCategorys;
@property(nonatomic) _Bool hasMaxBusinessReviews;
@property(nonatomic) _Bool hasIncludeBusinessCategories;
@property(nonatomic) _Bool hasIncludeBusinessRating;
@property(nonatomic) _Bool hasBusinessSortOrder;
@property(nonatomic) _Bool hasSessionGUID;
@property(nonatomic) _Bool hasMaxResults;
@property(nonatomic) int maxResults; // @synthesize maxResults=_maxResults;
@property(nonatomic) _Bool hasIncludePhonetics;
- (void)setAdditionalPlaceTypes:(int *)arg1 count:(unsigned long long)arg2;
- (int)additionalPlaceTypeAtIndex:(unsigned long long)arg1;
- (void)addAdditionalPlaceType:(int)arg1;
- (void)clearAdditionalPlaceTypes;
@property(readonly, nonatomic) int *additionalPlaceTypes;
@property(readonly, nonatomic) unsigned long long additionalPlaceTypesCount;
@property(readonly, nonatomic) _Bool hasMapRegion;
@property(readonly, nonatomic) _Bool hasSearch;
@property(readonly, nonatomic) _Bool hasLocation;
@property(readonly, nonatomic) _Bool hasAddress;
- (void)setBusinessIDs:(unsigned long long *)arg1 count:(unsigned long long)arg2;
- (unsigned long long)businessIDAtIndex:(unsigned long long)arg1;
- (void)addBusinessID:(unsigned long long)arg1;
- (void)clearBusinessIDs;
@property(readonly, nonatomic) unsigned long long *businessIDs;
@property(readonly, nonatomic) unsigned long long businessIDsCount;
- (void)dealloc;
- (id)initWithTraits:(id)arg1 maxResults:(int)arg2;
- (id)initWithTraits:(id)arg1 includeEntryPoints:(_Bool)arg2;
- (id)initWithTraits:(id)arg1;

@end

@interface GEOGeocodeRequest : GEOPlaceSearchRequest
{
}

- (id)initForwardGeocodeWithAddressString:(id)arg1;
- (id)initForwardGeocodeWithAddressDictionary:(id)arg1;
- (id)initForwardGeocodeWithAddress:(id)arg1;
- (id)initReverseGeocodeWithCoordinate:(CDStruct_c3b9c2ee)arg1 includeBusinessOptions:(_Bool)arg2;
- (id)initReverseGeocodeWithCoordinate:(CDStruct_c3b9c2ee)arg1;
- (id)initWithCoordinate:(CDStruct_c3b9c2ee)arg1 includeEntryPoints:(_Bool)arg2 traits:(id)arg3;
- (id)initWithAddress:(id)arg1 maxResults:(int)arg2 traits:(id)arg3;

@end

@interface GEOGeocodeRequester : NSObject
{
    NSMapTable *_pendingGeocodes;
    NSMapTable *_pendingBatchGeocodes;
    NSLock *_pendingGeocodesLock;
}

+ (void)_countryProvidersDidChange:(id)arg1;
+ (id)sharedGeocodeRequester;
- (void)cancelBatchReverseGeocode:(id)arg1;
- (void)batchReverseGeocode:(id)arg1 success:(CDUnknownBlockType)arg2 networkActivity:(CDUnknownBlockType)arg3 error:(CDUnknownBlockType)arg4;
- (void)cancelGeocode:(id)arg1;
- (void)reverseGeocode:(id)arg1 success:(CDUnknownBlockType)arg2 networkActivity:(CDUnknownBlockType)arg3 error:(CDUnknownBlockType)arg4;
- (void)forwardGeocode:(id)arg1 success:(CDUnknownBlockType)arg2 networkActivity:(CDUnknownBlockType)arg3 error:(CDUnknownBlockType)arg4;
- (void)dealloc;
- (id)init;

@end

@interface GEOHours : PBCodable <NSCopying>
{
    CDStruct_95bda58d _days;
    NSMutableArray *_timeRanges;
}

@property(retain, nonatomic) NSMutableArray *timeRanges; // @synthesize timeRanges=_timeRanges;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)timeRangeAtIndex:(unsigned long long)arg1;
- (unsigned long long)timeRangesCount;
- (void)addTimeRange:(id)arg1;
- (void)clearTimeRanges;
- (void)setDays:(int *)arg1 count:(unsigned long long)arg2;
- (int)dayAtIndex:(unsigned long long)arg1;
- (void)addDay:(int)arg1;
- (void)clearDays;
@property(readonly, nonatomic) int *days;
@property(readonly, nonatomic) unsigned long long daysCount;
- (void)dealloc;
- (id)initWithPlaceDataHours:(id)arg1;

@end

@interface GEOIndexQueryNode : PBCodable <NSCopying>
{
    NSString *_field;
    NSMutableArray *_operands;
    int _type;
    NSString *_value;
}

@property(retain, nonatomic) NSMutableArray *operands; // @synthesize operands=_operands;
@property(retain, nonatomic) NSString *value; // @synthesize value=_value;
@property(retain, nonatomic) NSString *field; // @synthesize field=_field;
@property(nonatomic) int type; // @synthesize type=_type;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)operandsAtIndex:(unsigned long long)arg1;
- (unsigned long long)operandsCount;
- (void)addOperands:(id)arg1;
- (void)clearOperands;
@property(readonly, nonatomic) _Bool hasValue;
@property(readonly, nonatomic) _Bool hasField;
- (void)dealloc;

@end

@interface GEOLanguage : PBCodable <NSCopying>
{
    unsigned int _identifier;
    NSMutableArray *_languages;
}

@property(retain, nonatomic) NSMutableArray *languages; // @synthesize languages=_languages;
@property(nonatomic) unsigned int identifier; // @synthesize identifier=_identifier;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)languageAtIndex:(unsigned long long)arg1;
- (unsigned long long)languagesCount;
- (void)addLanguage:(id)arg1;
- (void)clearLanguages;
- (void)dealloc;

@end

@interface GEOLatLng : PBCodable <NSCopying>
{
    double _lat;
    double _lng;
}

@property(nonatomic) double lng; // @synthesize lng=_lng;
@property(nonatomic) double lat; // @synthesize lat=_lat;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) CDStruct_c3b9c2ee coordinate;

@end

@interface GEOLeaveNowFeedbackCollection : PBCodable <NSCopying>
{
    CDStruct_612aec5b _sessionID;
    double _currentTimestamp;
    double _eventTimestamp;
    double _travelDuration;
    int _actionType;
    int _alertType;
    int _travelState;
    struct {
        unsigned int sessionID:1;
        unsigned int currentTimestamp:1;
        unsigned int eventTimestamp:1;
        unsigned int travelDuration:1;
        unsigned int actionType:1;
        unsigned int alertType:1;
        unsigned int travelState:1;
    } _has;
}

@property(nonatomic) double travelDuration; // @synthesize travelDuration=_travelDuration;
@property(nonatomic) double currentTimestamp; // @synthesize currentTimestamp=_currentTimestamp;
@property(nonatomic) double eventTimestamp; // @synthesize eventTimestamp=_eventTimestamp;
@property(nonatomic) int travelState; // @synthesize travelState=_travelState;
@property(nonatomic) int alertType; // @synthesize alertType=_alertType;
@property(nonatomic) int actionType; // @synthesize actionType=_actionType;
@property(nonatomic) CDStruct_612aec5b sessionID; // @synthesize sessionID=_sessionID;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasTravelDuration;
@property(nonatomic) _Bool hasCurrentTimestamp;
@property(nonatomic) _Bool hasEventTimestamp;
@property(nonatomic) _Bool hasTravelState;
@property(nonatomic) _Bool hasAlertType;
@property(nonatomic) _Bool hasActionType;
@property(nonatomic) _Bool hasSessionID;

@end

__attribute__((visibility("hidden")))
@interface GEOLocalizationRegionsInfo : NSObject
{
    NSDictionary *_regions;
    NSLock *_regionsLock;
}

- (_Bool)needsLocalizationForKey:(const struct _GEOTileKey *)arg1 language:(id)arg2;
- (void)reset;
- (void)dealloc;
- (id)init;

@end

@interface GEOLocalizedAttribution : PBCodable <NSCopying>
{
    NSString *_displayName;
    NSString *_language;
    NSMutableArray *_logoURLs;
    NSMutableArray *_snippetLogoURLs;
}

@property(retain, nonatomic) NSMutableArray *snippetLogoURLs; // @synthesize snippetLogoURLs=_snippetLogoURLs;
@property(retain, nonatomic) NSMutableArray *logoURLs; // @synthesize logoURLs=_logoURLs;
@property(retain, nonatomic) NSString *displayName; // @synthesize displayName=_displayName;
@property(retain, nonatomic) NSString *language; // @synthesize language=_language;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)snippetLogoURLsAtIndex:(unsigned long long)arg1;
- (unsigned long long)snippetLogoURLsCount;
- (void)addSnippetLogoURLs:(id)arg1;
- (void)clearSnippetLogoURLs;
- (id)logoURLsAtIndex:(unsigned long long)arg1;
- (unsigned long long)logoURLsCount;
- (void)addLogoURLs:(id)arg1;
- (void)clearLogoURLs;
@property(readonly, nonatomic) _Bool hasDisplayName;
@property(readonly, nonatomic) _Bool hasLanguage;
- (void)dealloc;
- (id)bestURLForLogos:(id)arg1 scale:(double)arg2;

@end

@interface GEOLocalizedName : PBCodable <NSCopying>
{
    NSString *_languageCode;
    NSString *_name;
    unsigned int _nameRank;
    NSString *_nameType;
    NSString *_phoneticName;
    _Bool _isDefault;
    struct {
        unsigned int nameRank:1;
        unsigned int isDefault:1;
    } _has;
}

@property(retain, nonatomic) NSString *phoneticName; // @synthesize phoneticName=_phoneticName;
@property(nonatomic) unsigned int nameRank; // @synthesize nameRank=_nameRank;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
@property(retain, nonatomic) NSString *nameType; // @synthesize nameType=_nameType;
@property(retain, nonatomic) NSString *languageCode; // @synthesize languageCode=_languageCode;
@property(nonatomic) _Bool isDefault; // @synthesize isDefault=_isDefault;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasPhoneticName;
@property(nonatomic) _Bool hasNameRank;
@property(readonly, nonatomic) _Bool hasName;
@property(readonly, nonatomic) _Bool hasNameType;
@property(readonly, nonatomic) _Bool hasLanguageCode;
@property(nonatomic) _Bool hasIsDefault;
- (void)dealloc;
- (id)initWithPlaceDataLocalizedString:(id)arg1;

@end

@interface GEOLocation : PBCodable <NSCopying>
{
    double _course;
    double _courseAccuracy;
    double _heading;
    double _horizontalAccuracy;
    double _speed;
    double _speedAccuracy;
    double _timestamp;
    double _verticalAccuracy;
    int _altitude;
    GEOLatLng *_latLng;
    int _type;
    _Bool _isMatchedLocation;
    _Bool _isShifted;
    struct {
        unsigned int course:1;
        unsigned int courseAccuracy:1;
        unsigned int heading:1;
        unsigned int horizontalAccuracy:1;
        unsigned int speed:1;
        unsigned int speedAccuracy:1;
        unsigned int timestamp:1;
        unsigned int verticalAccuracy:1;
        unsigned int altitude:1;
        unsigned int type:1;
        unsigned int isMatchedLocation:1;
        unsigned int isShifted:1;
    } _has;
}

@property(nonatomic) double course; // @synthesize course=_course;
@property(nonatomic) double heading; // @synthesize heading=_heading;
@property(nonatomic) double speed; // @synthesize speed=_speed;
@property(nonatomic) double verticalAccuracy; // @synthesize verticalAccuracy=_verticalAccuracy;
@property(nonatomic) double horizontalAccuracy; // @synthesize horizontalAccuracy=_horizontalAccuracy;
@property(nonatomic) int altitude; // @synthesize altitude=_altitude;
@property(nonatomic) double timestamp; // @synthesize timestamp=_timestamp;
@property(nonatomic) int type; // @synthesize type=_type;
@property(retain, nonatomic) GEOLatLng *latLng; // @synthesize latLng=_latLng;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasCourse;
@property(nonatomic) _Bool hasHeading;
@property(nonatomic) _Bool hasSpeed;
@property(nonatomic) _Bool hasVerticalAccuracy;
@property(nonatomic) _Bool hasHorizontalAccuracy;
@property(nonatomic) _Bool hasAltitude;
@property(nonatomic) _Bool hasTimestamp;
@property(nonatomic) _Bool hasType;
- (void)dealloc;
@property(readonly, nonatomic) _Bool hasAccurateCourse;
@property(readonly, nonatomic) CDStruct_c3b9c2ee coordinate;
- (id)initWithGEOCoordinate:(CDStruct_c3b9c2ee)arg1;
- (id)initWithLatitude:(double)arg1 longitude:(double)arg2;
- (id)initWithLocation:(id)arg1;
@property(nonatomic) _Bool hasIsShifted;
@property(nonatomic) _Bool isShifted;
@property(nonatomic) _Bool hasIsMatchedLocation;
@property(nonatomic) _Bool isMatchedLocation;
@property(nonatomic) _Bool hasSpeedAccuracy;
@property(nonatomic) double speedAccuracy;
@property(nonatomic) _Bool hasCourseAccuracy;
@property(nonatomic) double courseAccuracy;

@end

@interface GEOLocationShiftFunctionRequest : NSObject
{
    unsigned short _providerID;
    GEOLocationShiftRequest *_locationShiftRequest;
    GEOPolyLocationShiftRequest *_polyLocationShiftRequest;
}

@property(readonly, nonatomic) PBRequest *shiftRequest;
@property(nonatomic) CDStruct_c3b9c2ee coordinate;
@property(nonatomic) unsigned short providerID; // @synthesize providerID=_providerID;
- (void)dealloc;

@end

@interface GEOLocationShiftFunctionResponse : NSObject
{
    CDStruct_2c43369c _originalCoordinate;
    CDStruct_2c43369c _shiftedCoordinate;
    double _creationTime;
    double _params[9];
    double _radius;
    _Bool _isPolyLocationShift;
    _Bool _shouldUsePolyShiftFunction;
}

@property(nonatomic) CDStruct_c3b9c2ee originalCoordinate; // @synthesize originalCoordinate=_originalCoordinate;
- (_Bool)needsNewFunctionForCoordinate:(CDStruct_c3b9c2ee)arg1;
- (_Bool)wantsNewFunctionForCoordinate:(CDStruct_c3b9c2ee)arg1;
- (CDStruct_c3b9c2ee)shiftedCoordinateForCoordinate:(CDStruct_c3b9c2ee)arg1 accuracy:(double *)arg2;
- (id)initWithPolyLocationShiftResponse:(id)arg1 originalCoordinate:(CDStruct_c3b9c2ee)arg2;
- (id)initWithLocationShiftResponse:(id)arg1 originalCoordinate:(CDStruct_c3b9c2ee)arg2;

@end

@interface GEOLocationShiftProvider : NSObject
{
}

+ (unsigned short)providerID;
- (void)cancelRequest;
- (void)startRequest:(id)arg1 finished:(CDUnknownBlockType)arg2 error:(CDUnknownBlockType)arg3;

@end

@interface GEOLocationShiftRequest : PBRequest <NSCopying>
{
    CDStruct_bddcf505 _pixel;
}

@property(nonatomic) CDStruct_bddcf505 pixel; // @synthesize pixel=_pixel;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (Class)responseClass;
- (unsigned int)requestTypeCode;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (CDStruct_c3b9c2ee)coordinate;

@end

__attribute__((visibility("hidden")))
@interface GEOLocationShiftRequester : NSObject
{
    NSMapTable *_pendingRequests;
    NSLock *_pendingRequestsLock;
    NSMapTable *_providers;
}

+ (id)sharedRequester;
- (Class)classForProviderID:(short)arg1;
- (void)registerProvider:(Class)arg1;
- (void)cancelRequest:(id)arg1;
- (void)startRequest:(id)arg1 finished:(CDUnknownBlockType)arg2 networkActivity:(CDUnknownBlockType)arg3 error:(CDUnknownBlockType)arg4;
- (void)dealloc;
- (id)init;

@end

@interface GEOLocationShiftResponse : PBCodable <NSCopying>
{
    CDStruct_bddcf505 _shiftedPixel;
}

@property(nonatomic) CDStruct_bddcf505 shiftedPixel; // @synthesize shiftedPixel=_shiftedPixel;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly) CDStruct_c3b9c2ee shiftedCoordinate;

@end

@interface GEOLocationShifter : NSObject
{
    GEOLocationShiftFunctionResponse *_shiftFunction;
    _Bool _isRequestingShiftFunction;
    GEOLocationShiftFunctionRequest *_shiftRequest;
    NSLock *_lock;
    NSMutableArray *_locationsToShift;
}

@property(retain, nonatomic) GEOLocationShiftFunctionRequest *shiftRequest; // @synthesize shiftRequest=_shiftRequest;
@property(retain, nonatomic) GEOLocationShiftFunctionResponse *shiftFunction; // @synthesize shiftFunction=_shiftFunction;
- (void)_shiftAndReturnLocations;
- (void)_sendErrorForLocations:(id)arg1;
- (_Bool)_shiftLocation:(id)arg1;
- (_Bool)shiftCoordinate:(CDStruct_c3b9c2ee)arg1 accuracy:(double)arg2 shiftedCoordinate:(CDStruct_c3b9c2ee *)arg3 shiftedAccuracy:(double *)arg4;
- (void)shiftCoordinate:(CDStruct_c3b9c2ee)arg1 accuracy:(double)arg2 withCompletionHandler:(CDUnknownBlockType)arg3 mustGoToNetworkCallback:(CDUnknownBlockType)arg4 errorHandler:(CDUnknownBlockType)arg5 callbackQueue:(id)arg6;
- (void)shiftCoordinate:(CDStruct_c3b9c2ee)arg1 accuracy:(double)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;
- (void)_requestShiftFunctionForLocation:(CDStruct_c3b9c2ee)arg1 accuracy:(double)arg2;
- (void)_countryProvidersDidChange:(id)arg1;
@property(readonly, nonatomic) _Bool locationShiftEnabled;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface GEOMapRequestManager : NSObject
{
    NSMutableSet *_requests;
}

- (void)requestComplete:(id)arg1;
- (void)trackRequest:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface GEOMapAccess : GEOMapRequestManager
{
    NSObject<OS_dispatch_queue> *_callbackQueue;
    id <GEOMapAccessRestrictions> _restrictions;
    CDUnknownBlockType _tileErrorHandler;
}

+ (id)realisticMap;
+ (_Bool)supportsRealisticMap;
@property(copy, nonatomic) CDUnknownBlockType tileErrorHandler; // @synthesize tileErrorHandler=_tileErrorHandler;
@property(nonatomic) id <GEOMapAccessRestrictions> restrictions; // @synthesize restrictions=_restrictions;
- (id)buildMapEdgeFrom:(const CDStruct_91f75a7f *)arg1 edgeHandler:(CDUnknownBlockType)arg2;
- (id)findRoadTilesWithin:(double)arg1 of:(CDStruct_c3b9c2ee)arg2 tileHander:(CDUnknownBlockType)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (id)findRoadsWithin:(double)arg1 of:(CDStruct_c3b9c2ee)arg2 handler:(CDUnknownBlockType)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (id)findRoadEdgesWithin:(double)arg1 of:(CDStruct_c3b9c2ee)arg2 edgeHandler:(CDUnknownBlockType)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (id)findClosestRoadAtCoordinate:(CDStruct_c3b9c2ee)arg1 roadHandler:(CDUnknownBlockType)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (id)findClosestNamedFeaturesAtCoordinate:(CDStruct_c3b9c2ee)arg1 roadHandler:(CDUnknownBlockType)arg2 pointHandler:(CDUnknownBlockType)arg3 polygonHandler:(CDUnknownBlockType)arg4 completionHandler:(CDUnknownBlockType)arg5;
@property(readonly, nonatomic) _Bool allowsNetworkTileLoad;
- (void)setCallbackQueue:(id)arg1;
- (id)callbackQueue;
- (void)dealloc;
- (id)init;

@end

@interface GEOMapRequest : NSObject
{
    GEOMapRequestManager *_requestManager;
    CDUnknownBlockType _completionHandler;
    _Bool _isFinished;
}

@property(readonly, nonatomic) _Bool isFinished; // @synthesize isFinished=_isFinished;
@property(copy, nonatomic) CDUnknownBlockType completionHandler; // @synthesize completionHandler=_completionHandler;
- (void)complete;
- (void)cancel;
- (void)dealloc;
- (id)initWithManager:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface GEOMapEdgeBuilder : GEOMapRequest
{
    _Bool _buildAhead;
    _Bool _buildBehind;
    Matrix_8746f91e _firstTilePoint;
    Matrix_8746f91e _lastTilePoint;
    GEOMapTileFinder *_currentTileFinder;
    CDUnknownBlockType _edgeHandler;
    unordered_set_4cb294f7 _tileKeysSeen;
    _Bool _searchDirection;
}

@property(copy, nonatomic) CDUnknownBlockType edgeHandler; // @synthesize edgeHandler=_edgeHandler;
- (id).cxx_construct;
- (void).cxx_destruct;
- (id)_tileFinderForMap:(id)arg1 center:(CDStruct_c3b9c2ee)arg2 radius:(double)arg3;
- (id)_lastTile;
- (id)_firstTile;
- (Matrix_8746f91e)_lastPoint;
- (Matrix_8746f91e)_firstPoint;
- (CDStruct_dde70fb6 *)_lastJunction;
- (CDStruct_dde70fb6 *)_firstJunction;
- (_Bool)_findEdgeBehindInTile:(id)arg1;
- (_Bool)_findEdgeAheadInTile:(id)arg1;
- (void)_buildCompleteEdge;
- (_Bool)_edgeStart:(const Matrix_8746f91e *)arg1 end:(const Matrix_8746f91e *)arg2 connectsTo:(const CDStruct_c3b9c2ee *)arg3 rect:(const CDStruct_02837cd9 *)arg4;
- (_Bool)_pointConnects:(const Matrix_8746f91e *)arg1 rect:(const CDStruct_02837cd9 *)arg2 to:(const CDStruct_c3b9c2ee *)arg3;
- (void)_findTilesAdjacentToTile:(const struct _GEOTileKey *)arg1 containingPoint:(const Matrix_8746f91e *)arg2 findAhead:(_Bool)arg3;
- (void)buildEdge:(CDUnknownBlockType)arg1;
- (_Bool)_findNextEdge;
- (_Bool)_findEdgeBehind;
- (_Bool)_findEdgeAhead;
@property(readonly, nonatomic) GEOMapAccess *map;
- (void)cancel;
- (void)dealloc;
- (id)initWithMap:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface GEOMapEdgeConnectionFinder : GEOMapRequest
{
    GEOMapAccess *_map;
    GEOMapTileFinder *_tileFinder;
    NSMutableArray *_builders;
    GEOVectorTile *_tile;
    CDStruct_dde70fb6 *_junction;
    CDStruct_2c43369c _coordinate;
}

- (id).cxx_construct;
- (void)_findConnections:(CDUnknownBlockType)arg1 incoming:(_Bool)arg2;
- (void)findConnectionsIn:(CDUnknownBlockType)arg1;
- (void)findConnectionsOut:(CDUnknownBlockType)arg1;
- (void)cancel;
- (void)dealloc;
- (id)initWithMap:(id)arg1 tile:(id)arg2 junction:(CDStruct_dde70fb6 *)arg3 coordinate:(CDStruct_c3b9c2ee)arg4;

@end

__attribute__((visibility("hidden")))
@interface GEOMapEdgeFinder : GEOMapRequest
{
    GEOMapTileFinder *_tileFinder;
    CDStruct_34734122 _centerPoint;
    double _mapRadius;
    CDUnknownBlockType _edgeHandler;
    NSMutableSet *_edgeBuilders;
}

@property(copy, nonatomic) CDUnknownBlockType edgeHandler; // @synthesize edgeHandler=_edgeHandler;
- (id).cxx_construct;
- (_Bool)_checkEdgeForDuplicates:(const shared_ptr_b236f348 *)arg1;
- (void)_buildersInTile:(id)arg1 localPoint:(const Matrix_8746f91e *)arg2 localRadiusSqr:(float)arg3 localSearch:(const Box_3fb92e00 *)arg4 handler:(CDUnknownBlockType)arg5;
- (void)findEdges:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) GEOMapAccess *map;
- (void)cancel;
- (void)dealloc;
- (id)initWithMap:(id)arg1 center:(CDStruct_c3b9c2ee)arg2 radius:(double)arg3;

@end

__attribute__((visibility("hidden")))
@interface GEOMapEdgeRoadBuilder : GEOMapEdgeBuilder
{
    struct deque<GEORoadEdge, std::__1::allocator<GEORoadEdge>> _edges;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (id)_tileFinderForMap:(id)arg1 center:(CDStruct_c3b9c2ee)arg2 radius:(double)arg3;
- (id)_lastTile;
- (id)_firstTile;
- (Matrix_8746f91e)_lastPoint;
- (Matrix_8746f91e)_firstPoint;
- (CDStruct_dde70fb6 *)_lastJunction;
- (CDStruct_dde70fb6 *)_firstJunction;
- (_Bool)_findEdgeBehindInTile:(id)arg1;
- (_Bool)_findEdgeAheadInTile:(id)arg1;
- (void)_buildCompleteEdge;
- (void)dealloc;
- (id)initWithMap:(id)arg1 firstEdge:(const CDStruct_91f75a7f *)arg2;

@end

__attribute__((visibility("hidden")))
@interface GEOMapEdgeRoadConnectionFinder : GEOMapEdgeConnectionFinder
{
}

- (void)_findConnections:(CDUnknownBlockType)arg1 incoming:(_Bool)arg2;
- (void)_findConnectedEdges:(CDUnknownBlockType)arg1 incoming:(_Bool)arg2;

@end

__attribute__((visibility("hidden")))
@interface GEOMapEdgeRoadFinder : GEOMapEdgeFinder
{
    struct unordered_set<GEORoadEdge, std::__1::hash<GEORoadEdge>, std::__1::equal_to<GEORoadEdge>, std::__1::allocator<GEORoadEdge>> _roadsConsidered;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (_Bool)_checkEdgeForDuplicates:(const shared_ptr_b236f348 *)arg1;
- (void)_buildersInTile:(id)arg1 localPoint:(const Matrix_8746f91e *)arg2 localRadiusSqr:(float)arg3 localSearch:(const Box_3fb92e00 *)arg4 handler:(CDUnknownBlockType)arg5;
- (id)initWithMap:(id)arg1 center:(CDStruct_c3b9c2ee)arg2 radius:(double)arg3;

@end

__attribute__((visibility("hidden")))
@interface GEOMapFeatureFinder : GEOMapRequest
{
    CDStruct_2c43369c _coordinate;
    GEOMapTileFinder *_tileFinder;
    CDUnknownBlockType _roadHandler;
    CDUnknownBlockType _pointHandler;
    CDUnknownBlockType _polygonHandler;
    _Bool _ignoreUnnamedFeatures;
}

@property(nonatomic) _Bool ignoreUnnamedFeatures; // @synthesize ignoreUnnamedFeatures=_ignoreUnnamedFeatures;
@property(copy, nonatomic) CDUnknownBlockType polygonHandler; // @synthesize polygonHandler=_polygonHandler;
@property(copy, nonatomic) CDUnknownBlockType pointHandler; // @synthesize pointHandler=_pointHandler;
@property(copy, nonatomic) CDUnknownBlockType roadHandler; // @synthesize roadHandler=_roadHandler;
- (id).cxx_construct;
- (void)findFeatures:(CDUnknownBlockType)arg1 pointHandler:(CDUnknownBlockType)arg2 polygonHandler:(CDUnknownBlockType)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)_pickRoadInTile:(id)arg1 tileRect:(const CDStruct_02837cd9 *)arg2 localPoint:(const Matrix_8746f91e *)arg3;
@property(readonly, nonatomic) GEOMapAccess *map;
- (void)cancel;
- (void)dealloc;
- (id)initWithMap:(id)arg1 center:(CDStruct_c3b9c2ee)arg2;

@end

@interface GEOMapItemAdditionalPlaceInfo : NSObject
{
    NSString *_name;
    int _placeType;
    double _areaInMeters;
}

@property(readonly, nonatomic) double areaInMeters; // @synthesize areaInMeters=_areaInMeters;
@property(readonly, nonatomic) int placeType; // @synthesize placeType=_placeType;
@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
- (void)dealloc;
- (id)initWithName:(id)arg1 placeType:(int)arg2 areaInMeters:(double)arg3;

@end

@interface GEOMapItemAddressBookAttributes : PBCodable <NSCopying>
{
    int _addressType;
    NSString *_name;
    NSString *_spokenName;
    _Bool _isMe;
    struct {
        unsigned int addressType:1;
        unsigned int isMe:1;
    } _has;
}

@property(nonatomic) _Bool isMe; // @synthesize isMe=_isMe;
@property(retain, nonatomic) NSString *spokenName; // @synthesize spokenName=_spokenName;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
@property(nonatomic) int addressType; // @synthesize addressType=_addressType;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasIsMe;
@property(readonly, nonatomic) _Bool hasSpokenName;
@property(readonly, nonatomic) _Bool hasName;
@property(nonatomic) _Bool hasAddressType;
- (void)dealloc;

@end

@interface GEOMapItemAssistant : NSObject <GEOMapItemPrivate>
{
    GEOLocation *_location;
    NSDictionary *_addressDictionary;
    NSString *_name;
    NSURL *_businessURL;
    NSString *_phoneNumber;
    CDStruct_612aec5b _sessionID;
    unsigned long long _muid;
    NSString *_attributionID;
    unsigned int _sampleSizeForUserRatingScore;
    float _normalizedUserRatingScore;
    GEOPlace *_place;
}

- (id)_mapItemByStrippingOptionalData;
@property(readonly, nonatomic, getter=_additionalPlaceInfos) NSArray *additionalPlaceInfos;
@property(readonly, nonatomic, getter=_customIconID) unsigned long long customIconID;
@property(readonly, nonatomic, getter=_styleAttributes) GEOFeatureStyleAttributes *styleAttributes;
@property(readonly, nonatomic, getter=_reviewsAttribution) GEOMapItemReviewsAttribution *reviewsAttribution;
@property(readonly, nonatomic, getter=_photosAttribution) GEOMapItemPhotosAttribution *photosAttribution;
@property(readonly, nonatomic, getter=_attribution) GEOMapItemPlaceAttribution *attribution;
@property(readonly, nonatomic, getter=_poiSurveyURLString) NSString *poiSurveyURLString;
- (id)_urlForWritingAReview;
- (id)_urlForReviewWithUID:(id)arg1;
- (id)_urlForPhotoWithUID:(id)arg1;
@property(readonly, copy, nonatomic, getter=_vendorID) NSString *vendorID;
@property(readonly, copy, nonatomic, getter=_providerURL) NSURL *providerURL;
@property(readonly, copy, nonatomic, getter=_webURL) NSURL *webURL;
@property(readonly, nonatomic, getter=_needsAttribution) _Bool needsAttribution;
@property(readonly, nonatomic, getter=_openState) unsigned int openState;
@property(readonly, nonatomic, getter=_operatingHours) NSArray *operatingHours;
@property(readonly, nonatomic, getter=_hasCurrentOperatingHours) _Bool hasCurrentOperatingHours;
@property(readonly, nonatomic, getter=_hasOperatingHours) _Bool hasOperatingHours;
@property(readonly, nonatomic, getter=_takesReservations) _Bool takesReservations;
@property(readonly, nonatomic, getter=_hasTakesReservationsAmenity) _Bool hasTakesReservationsAmenity;
@property(readonly, nonatomic, getter=_goodForKids) _Bool goodForKids;
@property(readonly, nonatomic, getter=_hasGoodForKidsAmenity) _Bool hasGoodForKidsAmenity;
@property(readonly, nonatomic, getter=_hasDelivery) _Bool hasDelivery;
@property(readonly, nonatomic, getter=_hasDeliveryAmenity) _Bool hasDeliveryAmenity;
@property(readonly, nonatomic, getter=_hasAnyAmenities) _Bool hasAnyAmenities;
- (_Bool)_hasLocalizedCategoryNamesForType:(unsigned int)arg1;
- (id)_localizedCategoryNamesForType:(unsigned int)arg1;
@property(readonly, nonatomic, getter=_disambiguationName) NSString *disambiguationName;
@property(readonly, nonatomic, getter=_telephone) NSString *telephone;
@property(readonly, nonatomic, getter=_hasTelephone) _Bool hasTelephone;
@property(readonly, nonatomic, getter=_priceRange) unsigned int priceRange;
@property(readonly, nonatomic, getter=_hasPriceRange) _Bool hasPriceRange;
@property(readonly, nonatomic, getter=_normalizedUserRatingScore) float normalizedUserRatingScore;
@property(readonly, nonatomic, getter=_sampleSizeForUserRatingScore) unsigned int sampleSizeForUserRatingScore;
@property(readonly, nonatomic, getter=_hasUserRatingScore) _Bool hasUserRatingScore;
@property(readonly, nonatomic, getter=_businessURL) NSString *businessURL;
@property(readonly, nonatomic, getter=_areaInMeters) double areaInMeters;
@property(readonly, nonatomic, getter=_hasAreaInMeters) _Bool hasAreaInMeters;
@property(readonly, nonatomic, getter=_muid) unsigned long long muid;
@property(readonly, nonatomic, getter=_hasMUID) _Bool hasMUID;
@property(readonly, nonatomic, getter=_flyoverAnnouncementMessage) NSString *flyoverAnnouncement;
@property(readonly, nonatomic, getter=_hasFlyoverAnnouncementMessage) _Bool hasFlyoverAnnouncement;
@property(readonly, nonatomic, getter=_flyover) GEOPDFlyover *flyover;
@property(readonly, nonatomic, getter=_hasFlyover) _Bool hasFlyover;
@property(readonly, nonatomic, getter=_resultProviderID) int resultProviderID;
@property(readonly, nonatomic, getter=_hasResultProviderID) _Bool hasResultProviderID;
@property(readonly, nonatomic, getter=_sequenceNumber) unsigned int sequenceNumber;
@property(readonly, nonatomic, getter=_sessionGUID) CDStruct_612aec5b sessionGUID;
@property(readonly, nonatomic, getter=_hasSessionGUID) _Bool hasSessionGUID;
@property(readonly, nonatomic, getter=_roadAccessPoints) NSArray *roadAccessPoints;
- (id)_arrivalMapRegionForTransportType:(int)arg1;
- (unsigned int)_travelDistanceForTransportType:(int)arg1;
- (unsigned int)_travelTimeForTransportType:(int)arg1;
- (int)_recommendedTransportType;
- (id)_spokenAddressForLocale:(id)arg1;
@property(readonly, nonatomic) GEOAddress *geoAddress;
@property(readonly, nonatomic, getter=_placeDataAsData) NSData *placeDataAsData;
@property(readonly, nonatomic, getter=_placeAsData) NSData *placeAsData;
@property(readonly, nonatomic, getter=_clientAttributes) GEOMapItemClientAttributes *clientAttributes;
@property(readonly, nonatomic, getter=_place) GEOPlace *place;
@property(readonly, nonatomic, getter=_placeType) int placeType;
@property(readonly, nonatomic, getter=_hasResolvablePartialInformation) _Bool hasResolvablePartialInformation;
@property(readonly, nonatomic, getter=_placeData) GEOPDPlace *placeData;
@property(readonly, nonatomic) _Bool isEventAllDay;
@property(readonly, nonatomic) NSDate *eventDate;
@property(readonly, nonatomic) NSString *eventName;
@property(readonly, nonatomic) _Bool contactIsMe;
@property(readonly, nonatomic) NSString *contactSpokenName;
@property(readonly, nonatomic) NSString *contactName;
@property(readonly, nonatomic) int contactAddressType;
@property(readonly, nonatomic) NSString *timezone;
@property(readonly, nonatomic) NSArray *areasOfInterest;
@property(readonly, nonatomic) NSDictionary *addressDictionary;
@property(readonly, nonatomic) GEOMapRegion *geoFenceMapRegion;
@property(readonly, nonatomic) GEOMapRegion *displayMapRegion;
@property(readonly, nonatomic) CDStruct_c3b9c2ee centerCoordinate;
@property(readonly, nonatomic) CDStruct_c3b9c2ee coordinate;
@property(readonly, nonatomic, getter=isDisputed) _Bool disputed;
@property(readonly, nonatomic) NSData *encodedData;
- (id)spokenNameForLocale:(id)arg1;
@property(readonly, nonatomic) NSString *name;
@property(readonly, nonatomic, getter=isValid) _Bool valid;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)initWithWithLocation:(id)arg1 addressDictionary:(id)arg2 name:(id)arg3 businessURL:(id)arg4 phoneNumber:(id)arg5 sessionID:(id)arg6 muid:(unsigned long long)arg7 attributionID:(id)arg8 sampleSizeForUserRatingScore:(unsigned int)arg9 normalizedUserRatingScore:(float)arg10;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GEOMapItemAttribution : NSObject
{
    GEOSearchAttributionInfo *_info;
    NSArray *_attributionURLs;
    NSString *_yelpID;
    NSString *_poiID;
}

@property(readonly, nonatomic) NSArray *attributionURLs; // @synthesize attributionURLs=_attributionURLs;
@property(readonly, nonatomic) _Bool requiresAttributionInCallout;
- (id)providerSnippetLogoPathForScale:(double)arg1;
- (id)providerLogoPathForScale:(double)arg1;
@property(readonly, nonatomic) NSArray *attributionApps;
@property(readonly, nonatomic) NSString *providerName;
- (void)dealloc;
- (id)initWithSearchAttributionInfo:(id)arg1 attributionURLs:(id)arg2 poiID:(id)arg3;
- (id)initWithSearchAttributionInfo:(id)arg1 attributionURLs:(id)arg2 yelpID:(id)arg3;
- (id)initWithSearchAttributionInfo:(id)arg1 attributionURLs:(id)arg2;

@end

@interface GEOMapItemClientAttributes : PBCodable <NSCopying>
{
    GEOMapItemAddressBookAttributes *_addressBookAttributes;
    GEOMapItemRoutineAttributes *_routineAttributes;
}

+ (id)clientAttributesCopyForSharing:(id)arg1;
@property(retain, nonatomic) GEOMapItemRoutineAttributes *routineAttributes; // @synthesize routineAttributes=_routineAttributes;
@property(retain, nonatomic) GEOMapItemAddressBookAttributes *addressBookAttributes; // @synthesize addressBookAttributes=_addressBookAttributes;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasRoutineAttributes;
@property(readonly, nonatomic) _Bool hasAddressBookAttributes;
- (void)dealloc;

@end

@interface GEOMapItemCoreRoutineEvent : NSObject <GEOMapItemPrivate>
{
    NSDictionary *_addressDictionary;
    GEOMapItemClientAttributes *_clientAttributes;
    GEOPlace *_place;
    CDStruct_612aec5b _sessionID;
    NSString *_eventName;
    NSString *_eventTitle;
    NSDate *_eventDate;
    _Bool _eventIsAllDay;
    CDStruct_2c43369c _coordinate;
}

- (id)_mapItemByStrippingOptionalData;
@property(readonly, nonatomic, getter=_additionalPlaceInfos) NSArray *additionalPlaceInfos;
@property(readonly, nonatomic, getter=_customIconID) unsigned long long customIconID;
@property(readonly, nonatomic, getter=_styleAttributes) GEOFeatureStyleAttributes *styleAttributes;
@property(readonly, nonatomic, getter=_reviewsAttribution) GEOMapItemReviewsAttribution *reviewsAttribution;
@property(readonly, nonatomic, getter=_photosAttribution) GEOMapItemPhotosAttribution *photosAttribution;
@property(readonly, nonatomic, getter=_attribution) GEOMapItemPlaceAttribution *attribution;
- (int)_recommendedTransportType;
- (id)_checkInURLs:(id *)arg1;
- (id)_viewDealURLs:(id)arg1 attributionApps:(id *)arg2;
- (id)_viewReviewURLs:(id)arg1 attributionApps:(id *)arg2;
- (id)_viewPhotoURLs:(id)arg1 attributionApps:(id *)arg2;
- (id)_addReviewURLs:(id *)arg1;
- (id)_addPhotoURLs:(id *)arg1;
- (id)_reviewAttributionURLs:(id *)arg1;
- (id)_photoAttributionURLs:(id *)arg1;
- (id)_infoAttributionURLs:(id *)arg1;
@property(readonly, nonatomic, getter=_poiSurveyURLString) NSString *poiSurveyURLString;
- (id)_calloutDisplayName;
- (id)_reviewLogoPathForScale:(double)arg1;
- (id)_reviewDisplayName;
- (_Bool)_showAddReview;
- (_Bool)_hasMoreReviewAttribution;
- (_Bool)_showReviewAttribution;
- (id)_photoLogoPathForScale:(double)arg1;
- (id)_photoDisplayName;
- (_Bool)_showAddPhoto;
- (_Bool)_hasMorePhotoAttribution;
- (_Bool)_showPhotoAttribution;
- (id)_infoLogoPathForScale:(double)arg1;
- (id)_infoDisplayName;
- (_Bool)_hasMoreInfoAttribution;
- (_Bool)_showInfoAttribution;
- (id)_urlForWritingAReview;
- (id)_urlForReviewWithUID:(id)arg1;
- (id)_urlForPhotoWithUID:(id)arg1;
@property(readonly, copy, nonatomic, getter=_vendorID) NSString *vendorID;
@property(readonly, copy, nonatomic, getter=_providerURL) NSURL *providerURL;
@property(readonly, copy, nonatomic, getter=_webURL) NSURL *webURL;
@property(readonly, nonatomic, getter=_needsAttribution) _Bool needsAttribution;
@property(readonly, nonatomic, getter=_openState) unsigned int openState;
@property(readonly, nonatomic, getter=_operatingHours) NSArray *operatingHours;
@property(readonly, nonatomic, getter=_hasCurrentOperatingHours) _Bool hasCurrentOperatingHours;
@property(readonly, nonatomic, getter=_hasOperatingHours) _Bool hasOperatingHours;
@property(readonly, nonatomic, getter=_takesReservations) _Bool takesReservations;
@property(readonly, nonatomic, getter=_hasTakesReservationsAmenity) _Bool hasTakesReservationsAmenity;
@property(readonly, nonatomic, getter=_goodForKids) _Bool goodForKids;
@property(readonly, nonatomic, getter=_hasGoodForKidsAmenity) _Bool hasGoodForKidsAmenity;
@property(readonly, nonatomic, getter=_hasDelivery) _Bool hasDelivery;
@property(readonly, nonatomic, getter=_hasDeliveryAmenity) _Bool hasDeliveryAmenity;
@property(readonly, nonatomic, getter=_hasAnyAmenities) _Bool hasAnyAmenities;
- (_Bool)_hasLocalizedCategoryNamesForType:(unsigned int)arg1;
- (id)_localizedCategoryNamesForType:(unsigned int)arg1;
@property(readonly, nonatomic, getter=_disambiguationName) NSString *disambiguationName;
@property(readonly, nonatomic, getter=_telephone) NSString *telephone;
@property(readonly, nonatomic, getter=_hasTelephone) _Bool hasTelephone;
@property(readonly, nonatomic, getter=_priceRange) unsigned int priceRange;
@property(readonly, nonatomic, getter=_hasPriceRange) _Bool hasPriceRange;
@property(readonly, nonatomic, getter=_normalizedUserRatingScore) float normalizedUserRatingScore;
@property(readonly, nonatomic, getter=_sampleSizeForUserRatingScore) unsigned int sampleSizeForUserRatingScore;
@property(readonly, nonatomic, getter=_hasUserRatingScore) _Bool hasUserRatingScore;
@property(readonly, nonatomic, getter=_businessURL) NSString *businessURL;
@property(readonly, nonatomic, getter=_areaInMeters) double areaInMeters;
@property(readonly, nonatomic, getter=_hasAreaInMeters) _Bool hasAreaInMeters;
@property(readonly, nonatomic, getter=_muid) unsigned long long muid;
@property(readonly, nonatomic, getter=_hasMUID) _Bool hasMUID;
@property(readonly, nonatomic, getter=_flyoverAnnouncementMessage) NSString *flyoverAnnouncement;
@property(readonly, nonatomic, getter=_hasFlyoverAnnouncementMessage) _Bool hasFlyoverAnnouncement;
@property(readonly, nonatomic, getter=_flyover) GEOPDFlyover *flyover;
@property(readonly, nonatomic, getter=_hasFlyover) _Bool hasFlyover;
@property(readonly, nonatomic, getter=_resultProviderID) int resultProviderID;
@property(readonly, nonatomic, getter=_hasResultProviderID) _Bool hasResultProviderID;
@property(readonly, nonatomic, getter=_sequenceNumber) unsigned int sequenceNumber;
@property(readonly, nonatomic, getter=_sessionGUID) CDStruct_612aec5b sessionGUID;
@property(readonly, nonatomic, getter=_hasSessionGUID) _Bool hasSessionGUID;
@property(readonly, nonatomic, getter=_roadAccessPoints) NSArray *roadAccessPoints;
- (id)_arrivalMapRegionForTransportType:(int)arg1;
- (unsigned int)_travelDistanceForTransportType:(int)arg1;
- (unsigned int)_travelTimeForTransportType:(int)arg1;
- (id)_spokenAddressForLocale:(id)arg1;
@property(readonly, nonatomic) GEOAddress *geoAddress;
@property(readonly, nonatomic, getter=_placeDataAsData) NSData *placeDataAsData;
@property(readonly, nonatomic, getter=_placeAsData) NSData *placeAsData;
@property(readonly, nonatomic, getter=_clientAttributes) GEOMapItemClientAttributes *clientAttributes;
@property(readonly, nonatomic, getter=_place) GEOPlace *place;
@property(readonly, nonatomic, getter=_placeType) int placeType;
@property(readonly, nonatomic, getter=_hasResolvablePartialInformation) _Bool hasResolvablePartialInformation;
@property(readonly, nonatomic, getter=_placeData) GEOPDPlace *placeData;
@property(readonly, nonatomic) _Bool isEventAllDay;
@property(readonly, nonatomic) NSDate *eventDate;
@property(readonly, nonatomic) NSString *eventName;
@property(readonly, nonatomic) _Bool contactIsMe;
@property(readonly, nonatomic) NSString *contactSpokenName;
@property(readonly, nonatomic) NSString *contactName;
@property(readonly, nonatomic) int contactAddressType;
@property(readonly, nonatomic) NSString *timezone;
@property(readonly, nonatomic) NSArray *areasOfInterest;
@property(readonly, nonatomic) NSDictionary *addressDictionary;
@property(readonly, nonatomic) GEOMapRegion *geoFenceMapRegion;
@property(readonly, nonatomic) GEOMapRegion *displayMapRegion;
@property(readonly, nonatomic) CDStruct_c3b9c2ee centerCoordinate;
@property(readonly, nonatomic) CDStruct_c3b9c2ee coordinate;
@property(readonly, nonatomic, getter=isDisputed) _Bool disputed;
@property(readonly, nonatomic) NSData *encodedData;
- (id)spokenNameForLocale:(id)arg1;
@property(readonly, nonatomic) NSString *name;
@property(readonly, nonatomic, getter=isValid) _Bool valid;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)initWithAddressDictionary:(id)arg1 eventName:(id)arg2 eventTitle:(id)arg3 eventDate:(id)arg4 eventIsAllDay:(_Bool)arg5 coordinate:(CDStruct_c3b9c2ee)arg6 clientAttributes:(id)arg7;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GEOMapItemOpenState : NSObject
{
}

+ (unsigned int)_geoMapItemOpenStateTypeForOperatingHours:(id)arg1 withTimeZone:(id)arg2 andCompareDate:(id)arg3;

@end

@interface GEOMapItemPhotosAttribution : GEOMapItemAttribution
{
}

- (id)urlsForPhotoWithIdentifier:(id)arg1;
@property(readonly, nonatomic) NSArray *addPhotoURLs;
- (id)initWithSearchAttributionInfo:(id)arg1 attributionURLs:(id)arg2 poiID:(id)arg3;
- (id)initWithSearchAttributionInfo:(id)arg1 attributionURLs:(id)arg2 yelpID:(id)arg3;

@end

@interface GEOMapItemPlaceAttribution : GEOMapItemAttribution
{
}

- (id)urlsForDealWithIdentifier:(id)arg1;
@property(readonly, nonatomic) NSArray *checkInURLs;
- (id)initWithSearchAttributionInfo:(id)arg1 attributionURLs:(id)arg2 poiID:(id)arg3;

@end

@interface GEOMapItemReviewsAttribution : GEOMapItemAttribution
{
}

- (id)urlsForSelectedItemWithItems:(id)arg1;
- (id)urlsForReviewWithIdentifier:(id)arg1;
@property(readonly, nonatomic) NSArray *addReviewURLs;
- (id)initWithSearchAttributionInfo:(id)arg1 attributionURLs:(id)arg2 poiID:(id)arg3;
- (id)initWithSearchAttributionInfo:(id)arg1 attributionURLs:(id)arg2 yelpID:(id)arg3;

@end

@interface GEOMapItemRoutineAttributes : PBCodable <NSCopying>
{
    double _eventDate;
    NSString *_eventName;
    int _loiType;
    _Bool _isEventAllDay;
    struct {
        unsigned int eventDate:1;
        unsigned int loiType:1;
        unsigned int isEventAllDay:1;
    } _has;
}

@property(nonatomic) _Bool isEventAllDay; // @synthesize isEventAllDay=_isEventAllDay;
@property(nonatomic) double eventDate; // @synthesize eventDate=_eventDate;
@property(retain, nonatomic) NSString *eventName; // @synthesize eventName=_eventName;
@property(nonatomic) int loiType; // @synthesize loiType=_loiType;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasIsEventAllDay;
@property(nonatomic) _Bool hasEventDate;
@property(readonly, nonatomic) _Bool hasEventName;
@property(nonatomic) _Bool hasLoiType;
- (void)dealloc;

@end

@interface GEOMapItemStorage : PBCodable <GEOMapItemPrivate, NSCopying>
{
    GEOMapItemClientAttributes *_clientAttributes;
    GEOPlace *_place;
    GEOPDPlace *_placeData;
    GEOPlaceResult *_placeResult;
}

+ (id)mapItemStorageForPlaceData:(id)arg1;
+ (id)mapItemStorageForPlaceResult:(id)arg1;
+ (id)mapItemStorageForPlace:(id)arg1 clientAttributes:(id)arg2;
+ (id)mapItemStorageForPlace:(id)arg1;
+ (id)mapItemStorageForSerializedPlaceData:(id)arg1;
+ (id)mapItemStorageForSerializedMapItemStorage:(id)arg1;
+ (id)mapItemStorageToShareForGEOMapItem:(id)arg1;
+ (id)mapItemStorageForGEOMapItem:(id)arg1 clientAttributes:(id)arg2;
+ (id)mapItemStorageForGEOMapItemPrivate:(id)arg1;
+ (id)mapItemStorageForGEOMapItem:(id)arg1;
@property(retain, nonatomic) GEOPlaceResult *placeResult; // @synthesize placeResult=_placeResult;
@property(retain, nonatomic) GEOMapItemClientAttributes *clientAttributes; // @synthesize clientAttributes=_clientAttributes;
@property(retain, nonatomic) GEOPlace *place; // @synthesize place=_place;
@property(retain, nonatomic) GEOPDPlace *placeData; // @synthesize placeData=_placeData;
- (void)mergeFrom:(id)arg1;
@property(readonly) unsigned long long hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic) _Bool hasPlaceResult;
@property(readonly, nonatomic) _Bool hasClientAttributes;
@property(readonly, nonatomic) _Bool hasPlace;
@property(readonly, nonatomic) _Bool hasPlaceData;
- (void)dealloc;
@property(readonly, nonatomic) GEOMapRegion *mapRegion;
@property(readonly, nonatomic, getter=_additionalPlaceInfos) NSArray *additionalPlaceInfos;
@property(readonly, nonatomic, getter=_customIconID) unsigned long long customIconID;
@property(readonly, nonatomic, getter=_styleAttributes) GEOFeatureStyleAttributes *styleAttributes;
@property(readonly, nonatomic, getter=_reviewsAttribution) GEOMapItemReviewsAttribution *reviewsAttribution;
@property(readonly, nonatomic, getter=_photosAttribution) GEOMapItemPhotosAttribution *photosAttribution;
@property(readonly, nonatomic, getter=_attribution) GEOMapItemPlaceAttribution *attribution;
@property(readonly, nonatomic, getter=_poiSurveyURLString) NSString *poiSurveyURLString;
- (id)_urlForWritingAReview;
- (id)_urlForReviewWithUID:(id)arg1;
- (id)_urlForPhotoWithUID:(id)arg1;
@property(readonly, copy, nonatomic, getter=_vendorID) NSString *vendorID;
@property(readonly, copy, nonatomic, getter=_providerURL) NSURL *providerURL;
@property(readonly, copy, nonatomic, getter=_webURL) NSURL *webURL;
@property(readonly, nonatomic, getter=_needsAttribution) _Bool needsAttribution;
@property(readonly, nonatomic, getter=_openState) unsigned int openState;
@property(readonly, nonatomic, getter=_disambiguationName) NSString *disambiguationName;
@property(readonly, nonatomic, getter=_telephone) NSString *telephone;
@property(readonly, nonatomic, getter=_hasTelephone) _Bool hasTelephone;
@property(readonly, nonatomic, getter=_operatingHours) NSArray *operatingHours;
@property(readonly, nonatomic, getter=_hasCurrentOperatingHours) _Bool hasCurrentOperatingHours;
@property(readonly, nonatomic, getter=_hasOperatingHours) _Bool hasOperatingHours;
@property(readonly, nonatomic, getter=_takesReservations) _Bool takesReservations;
@property(readonly, nonatomic, getter=_hasTakesReservationsAmenity) _Bool hasTakesReservationsAmenity;
@property(readonly, nonatomic, getter=_goodForKids) _Bool goodForKids;
@property(readonly, nonatomic, getter=_hasGoodForKidsAmenity) _Bool hasGoodForKidsAmenity;
@property(readonly, nonatomic, getter=_hasDelivery) _Bool hasDelivery;
@property(readonly, nonatomic, getter=_hasDeliveryAmenity) _Bool hasDeliveryAmenity;
@property(readonly, nonatomic, getter=_hasAnyAmenities) _Bool hasAnyAmenities;
- (_Bool)_hasLocalizedCategoryNamesForType:(unsigned int)arg1;
- (id)_localizedCategoryNamesForType:(unsigned int)arg1;
@property(readonly, nonatomic, getter=_priceRange) unsigned int priceRange;
@property(readonly, nonatomic, getter=_hasPriceRange) _Bool hasPriceRange;
@property(readonly, nonatomic, getter=_normalizedUserRatingScore) float normalizedUserRatingScore;
@property(readonly, nonatomic, getter=_sampleSizeForUserRatingScore) unsigned int sampleSizeForUserRatingScore;
@property(readonly, nonatomic, getter=_hasUserRatingScore) _Bool hasUserRatingScore;
@property(readonly, nonatomic, getter=_businessURL) NSString *businessURL;
@property(readonly, nonatomic, getter=_areaInMeters) double areaInMeters;
@property(readonly, nonatomic, getter=_hasAreaInMeters) _Bool hasAreaInMeters;
@property(readonly, nonatomic, getter=_muid) unsigned long long muid;
@property(readonly, nonatomic, getter=_hasMUID) _Bool hasMUID;
@property(readonly, nonatomic, getter=_flyoverAnnouncementMessage) NSString *flyoverAnnouncement;
@property(readonly, nonatomic, getter=_hasFlyoverAnnouncementMessage) _Bool hasFlyoverAnnouncement;
@property(readonly, nonatomic, getter=_flyover) GEOPDFlyover *flyover;
@property(readonly, nonatomic, getter=_hasFlyover) _Bool hasFlyover;
@property(readonly, nonatomic, getter=_resultProviderID) int resultProviderID;
@property(readonly, nonatomic, getter=_hasResultProviderID) _Bool hasResultProviderID;
@property(readonly, nonatomic, getter=_sequenceNumber) unsigned int sequenceNumber;
@property(readonly, nonatomic, getter=_sessionGUID) CDStruct_612aec5b sessionGUID;
@property(readonly, nonatomic, getter=_hasSessionGUID) _Bool hasSessionGUID;
@property(readonly, nonatomic, getter=_roadAccessPoints) NSArray *roadAccessPoints;
- (id)_arrivalMapRegionForTransportType:(int)arg1;
- (unsigned int)_travelDistanceForTransportType:(int)arg1;
- (unsigned int)_travelTimeForTransportType:(int)arg1;
- (int)_recommendedTransportType;
- (id)_spokenAddressForLocale:(id)arg1;
@property(readonly, nonatomic) GEOAddress *geoAddress;
@property(readonly, nonatomic, getter=_placeDataAsData) NSData *placeDataAsData;
@property(readonly, nonatomic, getter=_placeAsData) NSData *placeAsData;
@property(readonly, nonatomic, getter=_placeType) int placeType;
@property(readonly, nonatomic, getter=_hasResolvablePartialInformation) _Bool hasResolvablePartialInformation;
@property(readonly, nonatomic) _Bool isEventAllDay;
@property(readonly, nonatomic) NSDate *eventDate;
@property(readonly, nonatomic) NSString *eventName;
@property(readonly, nonatomic) _Bool contactIsMe;
@property(readonly, nonatomic) NSString *contactSpokenName;
@property(readonly, nonatomic) NSString *contactName;
@property(readonly, nonatomic) int contactAddressType;
@property(readonly, nonatomic) NSString *timezone;
@property(readonly, nonatomic) NSArray *areasOfInterest;
@property(readonly, nonatomic) NSDictionary *addressDictionary;
@property(readonly, nonatomic) GEOMapRegion *geoFenceMapRegion;
@property(readonly, nonatomic) GEOMapRegion *displayMapRegion;
@property(readonly, nonatomic) CDStruct_c3b9c2ee centerCoordinate;
@property(readonly, nonatomic) CDStruct_c3b9c2ee coordinate;
@property(readonly, nonatomic, getter=isDisputed) _Bool disputed;
@property(readonly, nonatomic) NSData *encodedData;
- (id)spokenNameForLocale:(id)arg1;
@property(readonly, nonatomic) NSString *name;
@property(readonly, nonatomic, getter=isValid) _Bool valid;
- (id)_geoMapItem;
- (id)initWithPlaceData:(id)arg1 clientAttributes:(id)arg2;
- (id)initWithPlaceResult:(id)arg1;
- (id)initWithPlace:(id)arg1 clientAttributes:(id)arg2;
- (id)_mapItemByStrippingOptionalData;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

@interface GEOMapItemURLExtras : NSObject
{
}

+ (id)mapItemsFromURL:(id)arg1 hasCurrentLocation:(_Bool *)arg2 currentLocationIndex:(unsigned long long *)arg3 options:(id *)arg4;
+ (id)_mapItemsFromDirectionsAction:(id)arg1 hasCurrentLocation:(_Bool *)arg2 currentLocationIndex:(unsigned long long *)arg3 options:(id *)arg4;
+ (id)_mapItemsFromShowAction:(id)arg1 hasCurrentLocation:(_Bool *)arg2 currentLocationIndex:(unsigned long long *)arg3 options:(id *)arg4;
+ (id)_mapItemsFromPresentAction:(id)arg1 hasCurrentLocation:(_Bool *)arg2 currentLocationIndex:(unsigned long long *)arg3 options:(id *)arg4;
+ (id)urlToPresentDirectionsFromCurrentLocationToMapItem:(id)arg1 withOptions:(id)arg2;
+ (id)urlToPresentDirectionsFromMapItem:(id)arg1 toCurrentLocationWithOptions:(id)arg2;
+ (id)urlToPresentDirectionsFromMapItem:(id)arg1 toMapItem:(id)arg2 options:(id)arg3;
+ (id)urlToPresentDirectionsForMapItems:(id)arg1 options:(id)arg2;
+ (id)urlToPresentDirectionsForItems:(id)arg1 options:(id)arg2;
+ (id)urlToPresentCurrentLocationAndMapItems:(id)arg1 currentLocationIndex:(unsigned long long)arg2 options:(id)arg3;
+ (id)urlToPresentMapItems:(id)arg1 options:(id)arg2;
+ (id)urlToPresentMapItem:(id)arg1 withOptions:(id)arg2;
+ (id)urlToPresentCurrentLocationWithOptions:(id)arg1;
+ (id)urlToPresentAction:(id)arg1 present:(id)arg2;

@end

@interface GEOMapMatchRequest : PBRequest <NSCopying>
{
    NSMutableArray *_locations;
    NSMutableArray *_waypoints;
}

@property(retain, nonatomic) NSMutableArray *locations; // @synthesize locations=_locations;
@property(retain, nonatomic) NSMutableArray *waypoints; // @synthesize waypoints=_waypoints;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (Class)responseClass;
- (unsigned int)requestTypeCode;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)locationAtIndex:(unsigned long long)arg1;
- (unsigned long long)locationsCount;
- (void)addLocation:(id)arg1;
- (void)clearLocations;
- (id)waypointAtIndex:(unsigned long long)arg1;
- (unsigned long long)waypointsCount;
- (void)addWaypoint:(id)arg1;
- (void)clearWaypoints;
- (void)dealloc;

@end

@interface GEOMapMatchRequester : NSObject
{
    NSMapTable *_pendingRequests;
    NSLock *_pendingRequestsLock;
}

+ (id)sharedRequester;
- (void)cancelRequest:(id)arg1;
- (void)startRequest:(id)arg1 finished:(CDUnknownBlockType)arg2 error:(CDUnknownBlockType)arg3;
- (void)dealloc;
- (id)init;

@end

@interface GEOMapMatchResponse : PBCodable <NSCopying>
{
    int _matchingStatus;
    int _status;
    NSData *_zilchPoints;
    struct {
        unsigned int matchingStatus:1;
        unsigned int status:1;
    } _has;
}

@property(retain, nonatomic) NSData *zilchPoints; // @synthesize zilchPoints=_zilchPoints;
@property(nonatomic) int matchingStatus; // @synthesize matchingStatus=_matchingStatus;
@property(nonatomic) int status; // @synthesize status=_status;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasZilchPoints;
@property(nonatomic) _Bool hasMatchingStatus;
@property(nonatomic) _Bool hasStatus;
- (void)dealloc;

@end

@interface GEOMapQuery : PBCodable <NSCopying>
{
    CDStruct_612aec5b _sessionID;
    int _clientImgFmt;
    int _clientImgMaxHeight;
    int _clientImgMaxWidth;
    int _mapCenterX;
    int _mapCenterY;
    GEOMapRegion *_mapRegion;
    int _mapSpanX;
    int _mapSpanY;
    GEOPlaceSearchRequest *_placeSearchRequest;
    NSString *_query;
    int _requestType;
    int _tilesizeX;
    int _tilesizeY;
    GEOLocation *_userLocation;
    int _zoomlevel;
    struct {
        unsigned int sessionID:1;
        unsigned int clientImgFmt:1;
        unsigned int clientImgMaxHeight:1;
        unsigned int clientImgMaxWidth:1;
        unsigned int mapCenterX:1;
        unsigned int mapCenterY:1;
        unsigned int mapSpanX:1;
        unsigned int mapSpanY:1;
        unsigned int requestType:1;
        unsigned int tilesizeX:1;
        unsigned int tilesizeY:1;
        unsigned int zoomlevel:1;
    } _has;
}

@property(retain, nonatomic) GEOPlaceSearchRequest *placeSearchRequest; // @synthesize placeSearchRequest=_placeSearchRequest;
@property(nonatomic) CDStruct_612aec5b sessionID; // @synthesize sessionID=_sessionID;
@property(retain, nonatomic) GEOLocation *userLocation; // @synthesize userLocation=_userLocation;
@property(retain, nonatomic) GEOMapRegion *mapRegion; // @synthesize mapRegion=_mapRegion;
@property(nonatomic) int clientImgMaxHeight; // @synthesize clientImgMaxHeight=_clientImgMaxHeight;
@property(nonatomic) int clientImgMaxWidth; // @synthesize clientImgMaxWidth=_clientImgMaxWidth;
@property(nonatomic) int tilesizeY; // @synthesize tilesizeY=_tilesizeY;
@property(nonatomic) int tilesizeX; // @synthesize tilesizeX=_tilesizeX;
@property(nonatomic) int clientImgFmt; // @synthesize clientImgFmt=_clientImgFmt;
@property(nonatomic) int zoomlevel; // @synthesize zoomlevel=_zoomlevel;
@property(nonatomic) int mapSpanY; // @synthesize mapSpanY=_mapSpanY;
@property(nonatomic) int mapSpanX; // @synthesize mapSpanX=_mapSpanX;
@property(nonatomic) int mapCenterY; // @synthesize mapCenterY=_mapCenterY;
@property(nonatomic) int mapCenterX; // @synthesize mapCenterX=_mapCenterX;
@property(nonatomic) int requestType; // @synthesize requestType=_requestType;
@property(retain, nonatomic) NSString *query; // @synthesize query=_query;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasPlaceSearchRequest;
@property(nonatomic) _Bool hasSessionID;
@property(readonly, nonatomic) _Bool hasUserLocation;
@property(readonly, nonatomic) _Bool hasMapRegion;
@property(nonatomic) _Bool hasClientImgMaxHeight;
@property(nonatomic) _Bool hasClientImgMaxWidth;
@property(nonatomic) _Bool hasTilesizeY;
@property(nonatomic) _Bool hasTilesizeX;
@property(nonatomic) _Bool hasClientImgFmt;
@property(nonatomic) _Bool hasZoomlevel;
@property(nonatomic) _Bool hasMapSpanY;
@property(nonatomic) _Bool hasMapSpanX;
@property(nonatomic) _Bool hasMapCenterY;
@property(nonatomic) _Bool hasMapCenterX;
@property(nonatomic) _Bool hasRequestType;
@property(readonly, nonatomic) _Bool hasQuery;
- (void)dealloc;

@end

@interface GEOMapQueryCollectionRequest : PBRequest <NSCopying>
{
    NSMutableArray *_requestElements;
}

@property(retain, nonatomic) NSMutableArray *requestElements; // @synthesize requestElements=_requestElements;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (Class)responseClass;
- (unsigned int)requestTypeCode;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)requestElementsAtIndex:(unsigned long long)arg1;
- (unsigned long long)requestElementsCount;
- (void)addRequestElements:(id)arg1;
- (void)clearRequestElements;
- (void)dealloc;

@end

@interface GEOMapQueryCollectionResponse : PBCodable <NSCopying>
{
}

- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;

@end

@interface GEOMapRegion : PBCodable <NSCopying>
{
    double _eastLng;
    double _northLat;
    double _southLat;
    double _westLng;
    NSMutableArray *_vertexs;
    struct {
        unsigned int eastLng:1;
        unsigned int northLat:1;
        unsigned int southLat:1;
        unsigned int westLng:1;
    } _has;
}

@property(retain, nonatomic) NSMutableArray *vertexs; // @synthesize vertexs=_vertexs;
@property(nonatomic) double eastLng; // @synthesize eastLng=_eastLng;
@property(nonatomic) double northLat; // @synthesize northLat=_northLat;
@property(nonatomic) double westLng; // @synthesize westLng=_westLng;
@property(nonatomic) double southLat; // @synthesize southLat=_southLat;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)vertexAtIndex:(unsigned long long)arg1;
- (unsigned long long)vertexsCount;
- (void)addVertex:(id)arg1;
- (void)clearVertexs;
@property(nonatomic) _Bool hasEastLng;
@property(nonatomic) _Bool hasNorthLat;
@property(nonatomic) _Bool hasWestLng;
@property(nonatomic) _Bool hasSouthLat;
- (void)dealloc;
- (_Bool)containsMapRect:(CDStruct_02837cd9)arg1;
- (_Bool)containsCoordinate:(CDStruct_c3b9c2ee)arg1;
@property(readonly, nonatomic) double spanLng;
@property(readonly, nonatomic) double spanLat;
@property(readonly, nonatomic) double centerLng;
@property(readonly, nonatomic) double centerLat;
- (void)setMapRect:(CDStruct_02837cd9)arg1;
- (id)initWithRadialPlace:(id)arg1;
- (id)initWithMapRect:(CDStruct_02837cd9)arg1;
- (id)initWithCoordinateRegion:(CDStruct_02837cd9)arg1;
- (id)initWithLatitude:(double)arg1 longitude:(double)arg2;

@end

__attribute__((visibility("hidden")))
@interface GEOMapRoadImpl : NSObject <GEOMapRoad>
{
    GEOMapAccess *_map;
    shared_ptr_92bc9970 _edge;
    struct vector<GEOLocationCoordinate2D, std::__1::allocator<GEOLocationCoordinate2D>> _coords;
}

- (id).cxx_construct;
- (void).cxx_destruct;
@property(readonly, copy) NSString *description;
- (id)findRoadsFrom:(CDUnknownBlockType)arg1 completionHandler:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic) int formOfWay;
@property(readonly, nonatomic) int roadClass;
@property(readonly, nonatomic) double length;
@property(readonly, nonatomic) CDStruct_c3b9c2ee *coordinates;
@property(readonly, nonatomic) unsigned long long coordinateCount;
- (void)dealloc;
- (id)initWithMap:(id)arg1 edge:(shared_ptr_92bc9970)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GEOMapService : NSObject
{
}

+ (id)sharedService;
- (id)_geoMapItemsForUpdatedPlacesInResolution:(id)arg1;
- (id)_geoMapItemForData:(id)arg1 withSource:(unsigned long long)arg2;
- (id)_geoMapItemForData:(id)arg1;
- (void)_geoMapItemsForResponseData:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)trackMapItem:(id)arg1;
- (void)submitUsageForTraits:(id)arg1 flyoverAnimationID:(unsigned long long)arg2 timestamp:(double)arg3 resultIndex:(int)arg4;
- (void)submitUsageForTraits:(id)arg1 mapItem:(id)arg2 timestamp:(double)arg3 resultIndex:(int)arg4;
- (void)submitUsageForTraits:(id)arg1;
- (void)applyRAPUpdatedMapItems:(id)arg1;
- (id)ticketForSectionedLocalitiesAndLandmarksSearchFragment:(id)arg1 traits:(id)arg2;
- (id)ticketForSectionedAddressSearchFragment:(id)arg1 traits:(id)arg2;
- (id)ticketForSectionedAutoCompleteSearchFragment:(id)arg1 traits:(id)arg2;
- (id)ticketForSectionedInstantSearchFragment:(id)arg1 traits:(id)arg2;
- (id)ticketForInterleavedLocalitiesAndLandmarksSearchFragment:(id)arg1 traits:(id)arg2;
- (id)ticketForInterleavedAddressSearchFragment:(id)arg1 traits:(id)arg2;
- (id)ticketForInterleavedAutoCompleteSearchFragment:(id)arg1 traits:(id)arg2;
- (id)ticketForInterleavedInstantSearchFragment:(id)arg1 traits:(id)arg2;
- (id)_ticketForFragment:(id)arg1 entriesType:(int)arg2 listType:(int)arg3 traits:(id)arg4;
- (id)ticketForURLQuery:(id)arg1 coordinate:(CDStruct_c3b9c2ee)arg2 muid:(unsigned long long)arg3 resultProviderId:(int)arg4 maxResults:(unsigned int)arg5 traits:(id)arg6;
- (id)ticketForRefinementFromCoordinate:(CDStruct_c3b9c2ee)arg1 address:(id)arg2 placeName:(id)arg3 traits:(id)arg4;
- (id)ticketForCanonicalLocationSearchQueryString:(id)arg1 traits:(id)arg2;
- (id)ticketForMapItemToRefine:(id)arg1 traits:(id)arg2;
- (id)ticketForSearchQuery:(id)arg1 completionItem:(id)arg2 maxResults:(unsigned int)arg3 suppressResultsRequiringAttribution:(_Bool)arg4 includeETA:(_Bool)arg5 traits:(id)arg6;
- (id)ticketForSearchQuery:(id)arg1 completionItem:(id)arg2 maxResults:(unsigned int)arg3 includeETA:(_Bool)arg4 traits:(id)arg5;
- (id)ticketForOptInToProblemSubmissionID:(id)arg1 allowNotificationsAtPushToken:(id)arg2 allowContactBackAtEmailAddress:(id)arg3 traits:(id)arg4;
- (id)ticketForProblem:(id)arg1 placeForProblemContext:(id)arg2 traits:(id)arg3;
- (id)ticketForMerchantCode:(id)arg1 paymentNetwork:(id)arg2 transactionDate:(id)arg3 transactionLocation:(id)arg4 traits:(id)arg5;
- (id)ticketForBatchReverseGeocodeLocations:(id)arg1 shiftLocationsIfNeeded:(_Bool)arg2 additionalPlaceTypes:(int *)arg3 additionalPlaceTypesCount:(unsigned int)arg4 traits:(id)arg5;
- (id)ticketForBatchReverseGeocodeLocations:(id)arg1 shiftLocationsIfNeeded:(_Bool)arg2 traits:(id)arg3;
- (id)_cl_ticketForReverseGeocodeLocation:(id)arg1 traits:(id)arg2;
- (id)ticketForReverseGeocodeCoordinate:(CDStruct_c3b9c2ee)arg1 includeEntryPoints:(_Bool)arg2 shiftLocationsIfNeeded:(_Bool)arg3 includeETA:(_Bool)arg4 traits:(id)arg5;
- (id)_searchable_ticketForReverseGeocodeCoordinate:(CDStruct_c3b9c2ee)arg1 includeEntryPoints:(_Bool)arg2 shiftLocationsIfNeeded:(_Bool)arg3 includeETA:(_Bool)arg4 traits:(id)arg5;
- (id)ticketForReverseGeocodeCoordinate:(CDStruct_c3b9c2ee)arg1 includeETA:(_Bool)arg2 shiftLocationsIfNeeded:(_Bool)arg3 traits:(id)arg4;
- (id)_cl_ticketForForwardGeocodeAddressDictionary:(id)arg1 maxResults:(unsigned int)arg2 traits:(id)arg3;
- (id)_cl_ticketForForwardGeocodeString:(id)arg1 maxResults:(unsigned int)arg2 traits:(id)arg3;
- (id)ticketForForwardGeocodeString:(id)arg1 maxResults:(unsigned int)arg2 traits:(id)arg3;
- (id)ticketForForwardGeocodeAddressDictionary:(id)arg1 maxResults:(unsigned int)arg2 traits:(id)arg3;
- (id)ticketForForwardGeocodeAddress:(id)arg1 maxResults:(unsigned int)arg2 traits:(id)arg3;
- (id)ticketForPhoneNumbers:(id)arg1 allowCellularDataForLookup:(_Bool)arg2 traits:(id)arg3;
- (id)ticketForMUIDs:(id)arg1 includeETA:(_Bool)arg2 traits:(id)arg3;
- (id)defaultTraits;
- (int)defaultLocalSearchProviderID;
- (int)localSearchProviderID;
- (id)searchURL;
- (id)directionsURL;
- (id)_ticketForAutoCompleteFragment:(id)arg1 entriesType:(int)arg2 listType:(int)arg3 traits:(id)arg4;
- (id)_ticketForSearchQuery:(id)arg1 completionItem:(id)arg2 maxResults:(unsigned int)arg3 suppressResultsRequiringAttribution:(_Bool)arg4 traits:(id)arg5;
- (id)_ticketForSearchQuery:(id)arg1 hint:(id)arg2 maxResults:(unsigned int)arg3 suppressResultsRequiringAttribution:(_Bool)arg4 traits:(id)arg5;
- (id)_ticketForBatchReverseGeocodeLocations:(id)arg1 shiftLocationsIfNeeded:(_Bool)arg2 additionalPlaceTypes:(int *)arg3 additionalPlaceTypesCount:(unsigned int)arg4 traits:(id)arg5;
- (id)_ticketForReverseGeocodeCoordinate:(CDStruct_c3b9c2ee)arg1 includeEntryPoints:(_Bool)arg2 shiftLocationsIfNeeded:(_Bool)arg3 traits:(id)arg4;
- (id)_ticketForForwardGeocodeAddress:(id)arg1 maxResults:(unsigned int)arg2 traits:(id)arg3;
- (id)_ticketForMUIDs:(id)arg1 traits:(id)arg2;

@end

@interface GEOMapServiceTraits : PBCodable <NSCopying>
{
    CDStruct_612aec5b _sessionId;
    CDStruct_95bda58d _transportTypes;
    double _carHeadunitPixelHeight;
    double _carHeadunitPixelWidth;
    double _mapZoomLevel;
    int _action;
    NSString *_appIdentifier;
    NSString *_appMajorVersion;
    NSString *_appMinorVersion;
    int _carHeadunitInteractionModel;
    NSString *_carHeadunitManufacturer;
    NSString *_carHeadunitModel;
    NSString *_deviceDisplayLocale;
    NSMutableArray *_deviceInstalledKeyboardLocales;
    NSString *_deviceKeyboardLocale;
    GEOLocation *_deviceLocation;
    NSString *_deviceSpokenLocale;
    GEOMapRegion *_mapRegion;
    int _mode;
    NSMutableArray *_photoSizes;
    unsigned int _photosCount;
    NSMutableArray *_reviewUserPhotoSizes;
    unsigned int _reviewUserPhotosCount;
    unsigned int _sequenceNumber;
    int _source;
    unsigned int _timeSinceMapEnteredForeground;
    unsigned int _timeSinceMapViewportChanged;
    _Bool _isAPICall;
    struct {
        unsigned int sessionId:1;
        unsigned int carHeadunitPixelHeight:1;
        unsigned int carHeadunitPixelWidth:1;
        unsigned int mapZoomLevel:1;
        unsigned int action:1;
        unsigned int carHeadunitInteractionModel:1;
        unsigned int mode:1;
        unsigned int photosCount:1;
        unsigned int reviewUserPhotosCount:1;
        unsigned int sequenceNumber:1;
        unsigned int source:1;
        unsigned int timeSinceMapEnteredForeground:1;
        unsigned int timeSinceMapViewportChanged:1;
        unsigned int isAPICall:1;
    } _has;
}

@property(nonatomic) int mode; // @synthesize mode=_mode;
@property(nonatomic) double mapZoomLevel; // @synthesize mapZoomLevel=_mapZoomLevel;
@property(nonatomic) double carHeadunitPixelHeight; // @synthesize carHeadunitPixelHeight=_carHeadunitPixelHeight;
@property(nonatomic) double carHeadunitPixelWidth; // @synthesize carHeadunitPixelWidth=_carHeadunitPixelWidth;
@property(retain, nonatomic) NSString *carHeadunitModel; // @synthesize carHeadunitModel=_carHeadunitModel;
@property(retain, nonatomic) NSString *carHeadunitManufacturer; // @synthesize carHeadunitManufacturer=_carHeadunitManufacturer;
@property(nonatomic) int carHeadunitInteractionModel; // @synthesize carHeadunitInteractionModel=_carHeadunitInteractionModel;
@property(nonatomic) int action; // @synthesize action=_action;
@property(nonatomic) unsigned int timeSinceMapViewportChanged; // @synthesize timeSinceMapViewportChanged=_timeSinceMapViewportChanged;
@property(nonatomic) unsigned int timeSinceMapEnteredForeground; // @synthesize timeSinceMapEnteredForeground=_timeSinceMapEnteredForeground;
@property(nonatomic) unsigned int reviewUserPhotosCount; // @synthesize reviewUserPhotosCount=_reviewUserPhotosCount;
@property(retain, nonatomic) NSMutableArray *reviewUserPhotoSizes; // @synthesize reviewUserPhotoSizes=_reviewUserPhotoSizes;
@property(nonatomic) unsigned int photosCount; // @synthesize photosCount=_photosCount;
@property(retain, nonatomic) NSMutableArray *photoSizes; // @synthesize photoSizes=_photoSizes;
@property(nonatomic) int source; // @synthesize source=_source;
@property(nonatomic) _Bool isAPICall; // @synthesize isAPICall=_isAPICall;
@property(retain, nonatomic) NSMutableArray *deviceInstalledKeyboardLocales; // @synthesize deviceInstalledKeyboardLocales=_deviceInstalledKeyboardLocales;
@property(retain, nonatomic) NSString *deviceSpokenLocale; // @synthesize deviceSpokenLocale=_deviceSpokenLocale;
@property(retain, nonatomic) NSString *deviceKeyboardLocale; // @synthesize deviceKeyboardLocale=_deviceKeyboardLocale;
@property(retain, nonatomic) NSString *deviceDisplayLocale; // @synthesize deviceDisplayLocale=_deviceDisplayLocale;
@property(retain, nonatomic) GEOMapRegion *mapRegion; // @synthesize mapRegion=_mapRegion;
@property(retain, nonatomic) GEOLocation *deviceLocation; // @synthesize deviceLocation=_deviceLocation;
@property(retain, nonatomic) NSString *appMinorVersion; // @synthesize appMinorVersion=_appMinorVersion;
@property(retain, nonatomic) NSString *appMajorVersion; // @synthesize appMajorVersion=_appMajorVersion;
@property(retain, nonatomic) NSString *appIdentifier; // @synthesize appIdentifier=_appIdentifier;
@property(nonatomic) unsigned int sequenceNumber; // @synthesize sequenceNumber=_sequenceNumber;
@property(nonatomic) CDStruct_612aec5b sessionId; // @synthesize sessionId=_sessionId;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasMode;
@property(nonatomic) _Bool hasMapZoomLevel;
@property(nonatomic) _Bool hasCarHeadunitPixelHeight;
@property(nonatomic) _Bool hasCarHeadunitPixelWidth;
@property(readonly, nonatomic) _Bool hasCarHeadunitModel;
@property(readonly, nonatomic) _Bool hasCarHeadunitManufacturer;
@property(nonatomic) _Bool hasCarHeadunitInteractionModel;
@property(nonatomic) _Bool hasAction;
@property(nonatomic) _Bool hasTimeSinceMapViewportChanged;
@property(nonatomic) _Bool hasTimeSinceMapEnteredForeground;
@property(nonatomic) _Bool hasReviewUserPhotosCount;
- (id)reviewUserPhotoSizesAtIndex:(unsigned long long)arg1;
- (unsigned long long)reviewUserPhotoSizesCount;
- (void)addReviewUserPhotoSizes:(id)arg1;
- (void)clearReviewUserPhotoSizes;
@property(nonatomic) _Bool hasPhotosCount;
- (id)photoSizesAtIndex:(unsigned long long)arg1;
- (unsigned long long)photoSizesCount;
- (void)addPhotoSizes:(id)arg1;
- (void)clearPhotoSizes;
@property(nonatomic) _Bool hasSource;
@property(nonatomic) _Bool hasIsAPICall;
- (id)deviceInstalledKeyboardLocaleAtIndex:(unsigned long long)arg1;
- (unsigned long long)deviceInstalledKeyboardLocalesCount;
- (void)addDeviceInstalledKeyboardLocale:(id)arg1;
- (void)clearDeviceInstalledKeyboardLocales;
@property(readonly, nonatomic) _Bool hasDeviceSpokenLocale;
@property(readonly, nonatomic) _Bool hasDeviceKeyboardLocale;
@property(readonly, nonatomic) _Bool hasDeviceDisplayLocale;
@property(readonly, nonatomic) _Bool hasMapRegion;
- (void)setTransportTypes:(int *)arg1 count:(unsigned long long)arg2;
- (int)transportTypeAtIndex:(unsigned long long)arg1;
- (void)addTransportType:(int)arg1;
- (void)clearTransportTypes;
@property(readonly, nonatomic) int *transportTypes;
@property(readonly, nonatomic) unsigned long long transportTypesCount;
@property(readonly, nonatomic) _Bool hasDeviceLocation;
@property(readonly, nonatomic) _Bool hasAppMinorVersion;
@property(readonly, nonatomic) _Bool hasAppMajorVersion;
@property(readonly, nonatomic) _Bool hasAppIdentifier;
@property(nonatomic) _Bool hasSequenceNumber;
@property(nonatomic) _Bool hasSessionId;
- (void)dealloc;
- (int)_uiActionType;

@end

__attribute__((visibility("hidden")))
@interface GEOMapTileFinder : GEOMapRequest
{
    unsigned long long _zoomLevel;
    int _tileSize;
    int _tileScale;
    int _tileStyle;
    CDStruct_2c43369c _center;
    double _radius;
    CDUnknownBlockType _tileHandler;
    _Bool _isCanceling;
}

+ (id)realisticTileFinderForMap:(id)arg1 center:(CDStruct_c3b9c2ee)arg2 radius:(double)arg3;
+ (_Bool)supportsRealisticMap;
@property(readonly, nonatomic) int tileStyle; // @synthesize tileStyle=_tileStyle;
@property(readonly, nonatomic) int tileScale; // @synthesize tileScale=_tileScale;
@property(readonly, nonatomic) int tileSize; // @synthesize tileSize=_tileSize;
@property(readonly, nonatomic) unsigned long long zoomLevel; // @synthesize zoomLevel=_zoomLevel;
@property(copy, nonatomic) CDUnknownBlockType tileHandler; // @synthesize tileHandler=_tileHandler;
- (id).cxx_construct;
- (struct _GEOTileKey)_adjacentTileKey:(const struct _GEOTileKey *)arg1 dirX:(int)arg2 dirY:(int)arg3;
- (void)findTiles:(CDUnknownBlockType)arg1;
- (void)findTilesAdjacentToTile:(const struct _GEOTileKey *)arg1 containingPoint:(const Matrix_8746f91e *)arg2 tileHandler:(CDUnknownBlockType)arg3;
- (void)findTiles:(CDUnknownBlockType)arg1 excludingKey:(const struct _GEOTileKey *)arg2;
- (void)_fetchDataForKeys:(const unordered_set_4cb294f7 *)arg1;
@property(readonly, nonatomic) GEOMapAccess *map;
- (void)cancel;
- (void)dealloc;
- (id)_initWithMap:(id)arg1 zoomLevel:(unsigned long long)arg2 tileSize:(int)arg3 tileScale:(int)arg4 tileStyle:(int)arg5 center:(CDStruct_c3b9c2ee)arg6 radius:(double)arg7;

@end

@interface GEOMapsLaunchFeedbackCollection : PBCodable <NSCopying>
{
    CDStruct_612aec5b _sessionId;
    NSString *_sourceAppBundleId;
    NSString *_uriScheme;
    struct {
        unsigned int sessionId:1;
    } _has;
}

@property(retain, nonatomic) NSString *uriScheme; // @synthesize uriScheme=_uriScheme;
@property(retain, nonatomic) NSString *sourceAppBundleId; // @synthesize sourceAppBundleId=_sourceAppBundleId;
@property(nonatomic) CDStruct_612aec5b sessionId; // @synthesize sessionId=_sessionId;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasUriScheme;
@property(readonly, nonatomic) _Bool hasSourceAppBundleId;
@property(nonatomic) _Bool hasSessionId;
- (void)dealloc;

@end

@interface GEOMapsUsageFeedbackCollection : PBCodable <NSCopying>
{
    CDStruct_612aec5b _sessionID;
    double _sessionRelativeTimestamp;
    double _zoomLevel;
    int _actionType;
    GEOCarInfo *_carInfo;
    GEOMapRegion *_mapRegion;
    GEOPlaceActionDetails *_placeActionDetails;
    int _sequenceNumber;
    struct {
        unsigned int sessionID:1;
        unsigned int sessionRelativeTimestamp:1;
        unsigned int zoomLevel:1;
        unsigned int actionType:1;
        unsigned int sequenceNumber:1;
    } _has;
}

+ (id)feedbackCollectionWithTraits:(id)arg1 flyoverAnimationID:(unsigned long long)arg2 timestamp:(double)arg3 resultIndex:(int)arg4;
+ (id)feedbackCollectionWithTraits:(id)arg1 mapItem:(id)arg2 timestamp:(double)arg3 resultIndex:(int)arg4;
@property(nonatomic) int sequenceNumber; // @synthesize sequenceNumber=_sequenceNumber;
@property(nonatomic) double zoomLevel; // @synthesize zoomLevel=_zoomLevel;
@property(retain, nonatomic) GEOMapRegion *mapRegion; // @synthesize mapRegion=_mapRegion;
@property(retain, nonatomic) GEOCarInfo *carInfo; // @synthesize carInfo=_carInfo;
@property(retain, nonatomic) GEOPlaceActionDetails *placeActionDetails; // @synthesize placeActionDetails=_placeActionDetails;
@property(nonatomic) double sessionRelativeTimestamp; // @synthesize sessionRelativeTimestamp=_sessionRelativeTimestamp;
@property(nonatomic) int actionType; // @synthesize actionType=_actionType;
@property(nonatomic) CDStruct_612aec5b sessionID; // @synthesize sessionID=_sessionID;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasSequenceNumber;
@property(nonatomic) _Bool hasZoomLevel;
@property(readonly, nonatomic) _Bool hasMapRegion;
@property(readonly, nonatomic) _Bool hasCarInfo;
@property(readonly, nonatomic) _Bool hasPlaceActionDetails;
@property(nonatomic) _Bool hasSessionRelativeTimestamp;
@property(nonatomic) _Bool hasActionType;
@property(nonatomic) _Bool hasSessionID;
- (void)dealloc;
- (id)initWithTraits:(id)arg1 mapItem:(id)arg2 timestamp:(double)arg3 resultIndex:(int)arg4;
- (id)initWithTraits:(id)arg1 flyoverAnimationID:(unsigned long long)arg2 timestamp:(double)arg3 resultIndex:(int)arg4;

@end

@interface GEOMatchedToken : PBCodable <NSCopying>
{
    CDStruct_62a50c50 _geoIds;
    int _geoType;
    NSString *_matchedToken;
    struct {
        unsigned int geoType:1;
    } _has;
}

@property(nonatomic) int geoType; // @synthesize geoType=_geoType;
@property(retain, nonatomic) NSString *matchedToken; // @synthesize matchedToken=_matchedToken;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (void)setGeoIds:(unsigned long long *)arg1 count:(unsigned long long)arg2;
- (unsigned long long)geoIdAtIndex:(unsigned long long)arg1;
- (void)addGeoId:(unsigned long long)arg1;
- (void)clearGeoIds;
@property(readonly, nonatomic) unsigned long long *geoIds;
@property(readonly, nonatomic) unsigned long long geoIdsCount;
@property(nonatomic) _Bool hasGeoType;
- (void)dealloc;

@end

@interface GEOMigrator : NSObject
{
}

- (_Bool)_migratePhoneNumberMappingWithError:(id *)arg1;
- (_Bool)performMigrationWithError:(id *)arg1;

@end

@interface GEONameInfo : PBCodable <NSCopying>
{
    NSString *_locale;
    NSString *_name;
    NSString *_phoneticName;
    int _phoneticType;
    NSString *_shield;
    int _shieldType;
    int _signType;
    struct {
        unsigned int phoneticType:1;
        unsigned int shieldType:1;
        unsigned int signType:1;
    } _has;
}

@property(retain, nonatomic) NSString *locale; // @synthesize locale=_locale;
@property(nonatomic) int signType; // @synthesize signType=_signType;
@property(nonatomic) int phoneticType; // @synthesize phoneticType=_phoneticType;
@property(nonatomic) int shieldType; // @synthesize shieldType=_shieldType;
@property(retain, nonatomic) NSString *shield; // @synthesize shield=_shield;
@property(retain, nonatomic) NSString *phoneticName; // @synthesize phoneticName=_phoneticName;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasLocale;
@property(nonatomic) _Bool hasSignType;
@property(nonatomic) _Bool hasPhoneticType;
@property(nonatomic) _Bool hasShieldType;
@property(readonly, nonatomic) _Bool hasShield;
@property(readonly, nonatomic) _Bool hasPhoneticName;
@property(readonly, nonatomic) _Bool hasName;
- (void)dealloc;

@end

@interface GEONameInfoList : PBCodable <NSCopying>
{
    NSMutableArray *_nameInfos;
}

@property(retain, nonatomic) NSMutableArray *nameInfos; // @synthesize nameInfos=_nameInfos;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)nameInfoAtIndex:(unsigned long long)arg1;
- (unsigned long long)nameInfosCount;
- (void)addNameInfo:(id)arg1;
- (void)clearNameInfos;
- (void)dealloc;

@end

@interface GEONamedFeature : PBCodable <NSCopying>
{
    double _value;
    NSString *_name;
}

@property(nonatomic) double value; // @synthesize value=_value;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (void)dealloc;

@end

@interface GEONavigation : NSObject
{
    GEONavigationDetails *_details;
    NSObject<OS_xpc_object> *_connection;
    int _navigationStartedToken;
    _Bool _hasNavigationStartedToken;
}

+ (id)sharedInstance;
- (void)_sendMessage:(id)arg1 data:(id)arg2;
- (void)_closeConnection;
- (void)_createConnection;
- (void)updateLocation:(id)arg1 routeMatch:(id)arg2 etaRoute:(id)arg3 locationUnreliable:(_Bool)arg4;
- (void)endNavigation;
- (void)startNavigationForTransportType:(int)arg1 state:(int)arg2;
@property(nonatomic) unsigned long long announcementStage;
@property(nonatomic) int navigationTransportType;
@property(nonatomic) int navigationState;
@property(readonly, nonatomic) _Bool locationUnreliable;
@property(readonly, nonatomic) _Bool isNavigating;
@property(readonly, nonatomic) double remainingTime;
@property(readonly, nonatomic) double distanceRemainingOnRoute;
@property(readonly, nonatomic) double distanceToRoute;
@property(readonly, nonatomic) double distanceToManeuverEnd;
@property(readonly, nonatomic) double distanceToManeuverStart;
@property(readonly, nonatomic) GEORouteMatch *routeMatch;
@property(readonly, nonatomic) GEOLocation *location;
@property(readonly, nonatomic) NSString *destinationName;
@property(readonly, nonatomic) GEOComposedRoute *route;
- (void)clearRoute;
- (void)updatedETA:(id)arg1;
- (void)recalculatedToRoute:(id)arg1 location:(id)arg2 routeMatch:(id)arg3;
- (void)setRoute:(id)arg1 toDestinationName:(id)arg2;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface GEONavigationDetails : NSObject
{
    GEOComposedRoute *_route;
    NSString *_destinationName;
    GEOLocation *_location;
    GEORouteMatch *_routeMatch;
    double _distanceToManeuverStart;
    double _distanceToManeuverEnd;
    double _distanceToRoute;
    double _distanceRemainingOnRoute;
    double _remainingTime;
    _Bool _locationUnreliable;
    unsigned long long _annoucementStage;
    GEONavigationRouteSummary *_routeSummary;
    GEONavigationGuidanceState *_guidanceState;
}

@property(readonly, nonatomic) GEONavigationGuidanceState *guidanceState; // @synthesize guidanceState=_guidanceState;
@property(readonly, nonatomic) GEONavigationRouteSummary *routeSummary; // @synthesize routeSummary=_routeSummary;
@property(nonatomic) unsigned long long announcementStage; // @synthesize announcementStage=_annoucementStage;
@property(nonatomic) _Bool locationUnreliable; // @synthesize locationUnreliable=_locationUnreliable;
@property(nonatomic) double remainingTime; // @synthesize remainingTime=_remainingTime;
@property(nonatomic) double distanceRemainingOnRoute; // @synthesize distanceRemainingOnRoute=_distanceRemainingOnRoute;
@property(nonatomic) double distanceToRoute; // @synthesize distanceToRoute=_distanceToRoute;
@property(nonatomic) double distanceToManeuverEnd; // @synthesize distanceToManeuverEnd=_distanceToManeuverEnd;
@property(nonatomic) double distanceToManeuverStart; // @synthesize distanceToManeuverStart=_distanceToManeuverStart;
@property(retain, nonatomic) GEORouteMatch *routeMatch; // @synthesize routeMatch=_routeMatch;
@property(retain, nonatomic) GEOLocation *location; // @synthesize location=_location;
@property(readonly, nonatomic) NSString *destinationName; // @synthesize destinationName=_destinationName;
@property(retain, nonatomic) GEOComposedRoute *route; // @synthesize route=_route;
- (void)dealloc;
- (id)initWithRoute:(id)arg1 destinationName:(id)arg2;

@end

@interface GEONavigationGuidanceState : PBCodable <NSCopying>
{
    int _navigationState;
    int _trackedTransportType;
    struct {
        unsigned int navigationState:1;
        unsigned int trackedTransportType:1;
    } _has;
}

- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasNavigationState;
@property(nonatomic) int navigationState; // @synthesize navigationState=_navigationState;
@property(nonatomic) _Bool hasTrackedTransportType;
@property(nonatomic) int trackedTransportType; // @synthesize trackedTransportType=_trackedTransportType;
- (id)initWithTransportType:(int)arg1;

@end

@interface GEONavigationListener : NSObject
{
    NSObject<OS_xpc_object> *_connection;
    NSObject<OS_dispatch_queue> *_queue;
    CDUnknownBlockType _routeSummaryUpdatedHandler;
    CDUnknownBlockType _guidanceStateUpdatedHandler;
}

@property(copy, nonatomic) CDUnknownBlockType guidanceStateUpdatedHandler; // @synthesize guidanceStateUpdatedHandler=_guidanceStateUpdatedHandler;
@property(copy, nonatomic) CDUnknownBlockType routeSummaryUpdatedHandler; // @synthesize routeSummaryUpdatedHandler=_routeSummaryUpdatedHandler;
- (void)_closeConnection;
- (void)_createConnection;
- (void)_request:(id)arg1;
- (void)requestGuidanceState;
- (void)requestRouteSummary;
- (void)dealloc;
- (id)initWithQueue:(id)arg1;

@end

@interface GEONavigationRouteSummary : PBCodable <NSCopying>
{
    GEOComposedWaypoint *_destination;
    NSString *_destinationName;
    GEOComposedWaypoint *_origin;
    int _transportType;
    CDStruct_a995201b _has;
}

@property(retain, nonatomic) NSString *destinationName; // @synthesize destinationName=_destinationName;
@property(retain, nonatomic) GEOComposedWaypoint *destination; // @synthesize destination=_destination;
@property(retain, nonatomic) GEOComposedWaypoint *origin; // @synthesize origin=_origin;
@property(nonatomic) int transportType; // @synthesize transportType=_transportType;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasDestinationName;
@property(readonly, nonatomic) _Bool hasDestination;
@property(readonly, nonatomic) _Bool hasOrigin;
@property(nonatomic) _Bool hasTransportType;
- (void)dealloc;
- (void)setRoute:(id)arg1;
- (id)initWithRoute:(id)arg1 destinationName:(id)arg2;

@end

@interface GEONetworkDataReader : NSObject
{
    NSMutableData *_data;
    unsigned long long _dataLength;
    const void *_bytes;
    unsigned long long _bookmarkOffset;
    unsigned long long _offset;
}

- (_Bool)hasUnreadData;
- (void)seekToMarkedOffset;
- (void)markOffset;
- (id)readData:(unsigned int)arg1;
- (_Bool)readUnsignedInt:(unsigned int *)arg1;
- (_Bool)readUnsignedShort:(unsigned short *)arg1;
- (id)readString;
- (void)appendNetworkData:(id)arg1;
- (id)allData;
- (void)dealloc;
- (id)initWithData:(id)arg1;

@end

@interface GEONetworkDefaults : NSObject
{
    NSMutableArray *_completionHandlers;
    _Bool _isRegistering;
    NSDictionary *_networkDefaults;
    NSLock *_networkDefaultsLock;
    NSString *_cacheFilePath;
}

+ (id)sharedNetworkDefaults;
- (void)registerNetworkDefaults:(CDUnknownBlockType)arg1;
- (id)valueForKey:(id)arg1;
- (_Bool)needsUpdate;
- (void)refreshNetworkDefaults;
- (void)dealloc;
- (id)init;
- (void)_registrationComplete;

@end

@interface GEONetworkObserver : NSObject
{
    NSLock *_lock;
    unsigned int _networkReachability;
    struct __SCNetworkReachability *_networkReach;
    struct __CFDictionary *_networkObservers;
    _Bool _networkNotified;
    _Bool _networkReachable;
}

+ (id)sharedNetworkObserver;
- (_Bool)isCellConnection;
- (void)removeNetworkReachableObserver:(id)arg1;
- (void)addNetworkReachableObserver:(id)arg1 selector:(SEL)arg2;
- (_Bool)isNetworkReachable;
- (void)_networkReachableFirstCallBack:(id)arg1;
- (void)initializeIfNecessary;
- (void)_networkReachableCallBack:(unsigned int)arg1;
- (void)_networkObserversInitialize;
- (void)dealloc;
- (id)init;

@end

@interface GEOOriginalRoute : PBCodable <NSCopying>
{
    NSData *_originalDirectionsResponseID;
    int _originalRoutePurpose;
    NSData *_routeHandle;
    struct {
        unsigned int originalRoutePurpose:1;
    } _has;
}

@property(retain, nonatomic) NSData *originalDirectionsResponseID; // @synthesize originalDirectionsResponseID=_originalDirectionsResponseID;
@property(retain, nonatomic) NSData *routeHandle; // @synthesize routeHandle=_routeHandle;
@property(nonatomic) int originalRoutePurpose; // @synthesize originalRoutePurpose=_originalRoutePurpose;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasOriginalDirectionsResponseID;
@property(readonly, nonatomic) _Bool hasRouteHandle;
@property(nonatomic) _Bool hasOriginalRoutePurpose;
- (void)dealloc;

@end

@interface GEOPDAddress : PBCodable <NSCopying>
{
    int _knownAccuracy;
    NSMutableArray *_localizedAddress;
    NSMutableArray *_spokenNavigationAddress;
    NSMutableArray *_spokenStructuredAddress;
    struct {
        unsigned int knownAccuracy:1;
    } _has;
}

+ (id)addressForPlaceData:(id)arg1;
@property(nonatomic) int knownAccuracy; // @synthesize knownAccuracy=_knownAccuracy;
@property(retain, nonatomic) NSMutableArray *spokenStructuredAddress; // @synthesize spokenStructuredAddress=_spokenStructuredAddress;
@property(retain, nonatomic) NSMutableArray *spokenNavigationAddress; // @synthesize spokenNavigationAddress=_spokenNavigationAddress;
@property(retain, nonatomic) NSMutableArray *localizedAddress; // @synthesize localizedAddress=_localizedAddress;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasKnownAccuracy;
- (id)spokenStructuredAddressAtIndex:(unsigned long long)arg1;
- (unsigned long long)spokenStructuredAddressCount;
- (void)addSpokenStructuredAddress:(id)arg1;
- (void)clearSpokenStructuredAddress;
- (id)spokenNavigationAddressAtIndex:(unsigned long long)arg1;
- (unsigned long long)spokenNavigationAddressCount;
- (void)addSpokenNavigationAddress:(id)arg1;
- (void)clearSpokenNavigationAddress;
- (id)localizedAddressAtIndex:(unsigned long long)arg1;
- (unsigned long long)localizedAddressCount;
- (void)addLocalizedAddress:(id)arg1;
- (void)clearLocalizedAddress;
- (void)dealloc;
- (id)spokenAddressForLocale:(id)arg1;
- (id)bestLocalizedAddress;

@end

@interface GEOPDAddressFilter : PBCodable <NSCopying>
{
}

- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;

@end

@interface GEOPDAmenities : PBCodable <NSCopying>
{
    CDStruct_2961ad32 *_amenitys;
    unsigned long long _amenitysCount;
    unsigned long long _amenitysSpace;
}

+ (id)amentiesForPlaceData:(id)arg1;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (void)setAmenitys:(CDStruct_2961ad32 *)arg1 count:(unsigned long long)arg2;
- (CDStruct_2961ad32)amenityAtIndex:(unsigned long long)arg1;
- (void)addAmenity:(CDStruct_2961ad32)arg1;
- (void)clearAmenitys;
@property(readonly, nonatomic) CDStruct_2961ad32 *amenitys;
@property(readonly, nonatomic) unsigned long long amenitysCount;
- (void)dealloc;
- (_Bool)valueForAmenityType:(int)arg1;
- (_Bool)hasAmenityType:(int)arg1;

@end

@interface GEOPDAmenitiesFilter : PBCodable <NSCopying>
{
}

- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;

@end

@interface GEOPDAnalyticMetadata : PBCodable <NSCopying>
{
    CDStruct_612aec5b _sessionId;
    NSString *_appIdentifier;
    NSString *_appMajorVersion;
    NSString *_appMinorVersion;
    NSString *_hardwareModel;
    NSString *_osVersion;
    int _requestSource;
    unsigned int _sequenceNumber;
    NSMutableArray *_serviceTags;
    _Bool _isFromApi;
    _Bool _isInternalInstall;
    _Bool _isInternalTool;
    struct {
        unsigned int sessionId:1;
        unsigned int requestSource:1;
        unsigned int sequenceNumber:1;
        unsigned int isFromApi:1;
        unsigned int isInternalInstall:1;
        unsigned int isInternalTool:1;
    } _has;
}

@property(retain, nonatomic) NSMutableArray *serviceTags; // @synthesize serviceTags=_serviceTags;
@property(nonatomic) _Bool isFromApi; // @synthesize isFromApi=_isFromApi;
@property(nonatomic) int requestSource; // @synthesize requestSource=_requestSource;
@property(nonatomic) unsigned int sequenceNumber; // @synthesize sequenceNumber=_sequenceNumber;
@property(nonatomic) CDStruct_612aec5b sessionId; // @synthesize sessionId=_sessionId;
@property(nonatomic) _Bool isInternalInstall; // @synthesize isInternalInstall=_isInternalInstall;
@property(nonatomic) _Bool isInternalTool; // @synthesize isInternalTool=_isInternalTool;
@property(retain, nonatomic) NSString *osVersion; // @synthesize osVersion=_osVersion;
@property(retain, nonatomic) NSString *hardwareModel; // @synthesize hardwareModel=_hardwareModel;
@property(retain, nonatomic) NSString *appMinorVersion; // @synthesize appMinorVersion=_appMinorVersion;
@property(retain, nonatomic) NSString *appMajorVersion; // @synthesize appMajorVersion=_appMajorVersion;
@property(retain, nonatomic) NSString *appIdentifier; // @synthesize appIdentifier=_appIdentifier;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)serviceTagAtIndex:(unsigned long long)arg1;
- (unsigned long long)serviceTagsCount;
- (void)addServiceTag:(id)arg1;
- (void)clearServiceTags;
@property(nonatomic) _Bool hasIsFromApi;
@property(nonatomic) _Bool hasRequestSource;
@property(nonatomic) _Bool hasSequenceNumber;
@property(nonatomic) _Bool hasSessionId;
@property(nonatomic) _Bool hasIsInternalInstall;
@property(nonatomic) _Bool hasIsInternalTool;
@property(readonly, nonatomic) _Bool hasOsVersion;
@property(readonly, nonatomic) _Bool hasHardwareModel;
@property(readonly, nonatomic) _Bool hasAppMinorVersion;
@property(readonly, nonatomic) _Bool hasAppMajorVersion;
@property(readonly, nonatomic) _Bool hasAppIdentifier;
- (void)dealloc;
- (id)initWithTraits:(id)arg1;

@end

@interface GEOPDAttribution : PBCodable <NSCopying>
{
    NSMutableArray *_attributionUrls;
    NSString *_externalComponentId;
    NSString *_externalItemId;
    NSString *_vendorId;
}

+ (id)attributionForPlaceDataEntity:(id)arg1;
+ (id)attributionForPlaceDataPhotos:(id)arg1;
+ (id)attributionForPlaceDataReview:(id)arg1;
@property(retain, nonatomic) NSMutableArray *attributionUrls; // @synthesize attributionUrls=_attributionUrls;
@property(retain, nonatomic) NSString *externalComponentId; // @synthesize externalComponentId=_externalComponentId;
@property(retain, nonatomic) NSString *externalItemId; // @synthesize externalItemId=_externalItemId;
@property(retain, nonatomic) NSString *vendorId; // @synthesize vendorId=_vendorId;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)attributionUrlAtIndex:(unsigned long long)arg1;
- (unsigned long long)attributionUrlsCount;
- (void)addAttributionUrl:(id)arg1;
- (void)clearAttributionUrls;
@property(readonly, nonatomic) _Bool hasExternalComponentId;
@property(readonly, nonatomic) _Bool hasExternalItemId;
@property(readonly, nonatomic) _Bool hasVendorId;
- (void)dealloc;
- (_Bool)_isYelp;
- (id)_attributionKey;

@end

@interface GEOPDBounds : PBCodable <NSCopying>
{
    GEOMapRegion *_displayMapRegion;
    GEOMapRegion *_mapRegion;
}

+ (id)boundsInfoForPlaceData:(id)arg1;
@property(retain, nonatomic) GEOMapRegion *displayMapRegion; // @synthesize displayMapRegion=_displayMapRegion;
@property(retain, nonatomic) GEOMapRegion *mapRegion; // @synthesize mapRegion=_mapRegion;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasDisplayMapRegion;
@property(readonly, nonatomic) _Bool hasMapRegion;
- (void)dealloc;

@end

@interface GEOPDBoundsFilter : PBCodable <NSCopying>
{
}

- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;

@end

@interface GEOPDCanonicalLocationSearchParameters : PBCodable <NSCopying>
{
    NSString *_queryString;
}

@property(retain, nonatomic) NSString *queryString; // @synthesize queryString=_queryString;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasQueryString;
- (void)dealloc;

@end

@interface GEOPDCanonicalLocationSearchResult : PBCodable <NSCopying>
{
}

- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;

@end

@interface GEOPDCategory : PBCodable <NSCopying>
{
    NSString *_categoryId;
    int _level;
    NSMutableArray *_localizedNames;
    struct {
        unsigned int level:1;
    } _has;
}

+ (_Bool)hasCategoryNamesForPlaceData:(id)arg1 type:(unsigned int)arg2;
+ (id)categoryNamesForPlaceData:(id)arg1 type:(unsigned int)arg2;
+ (id)_allCategoriesForPlaceData:(id)arg1 type:(unsigned int)arg2;
@property(retain, nonatomic) NSString *categoryId; // @synthesize categoryId=_categoryId;
@property(retain, nonatomic) NSMutableArray *localizedNames; // @synthesize localizedNames=_localizedNames;
@property(nonatomic) int level; // @synthesize level=_level;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasCategoryId;
- (id)localizedNameAtIndex:(unsigned long long)arg1;
- (unsigned long long)localizedNamesCount;
- (void)addLocalizedName:(id)arg1;
- (void)clearLocalizedNames;
@property(nonatomic) _Bool hasLevel;
- (void)dealloc;

@end

@interface GEOPDClientMetadata : PBCodable <NSCopying>
{
    NSString *_deviceCountryCode;
    NSString *_deviceDisplayLocale;
    NSMutableArray *_deviceInstalledKeyboardLocales;
    NSString *_deviceKeyboardLocale;
    GEOLatLng *_deviceLocation;
    NSString *_deviceSpokenLocale;
    unsigned int _timeSinceMapEnteredForeground;
    struct {
        unsigned int timeSinceMapEnteredForeground:1;
    } _has;
}

@property(nonatomic) unsigned int timeSinceMapEnteredForeground; // @synthesize timeSinceMapEnteredForeground=_timeSinceMapEnteredForeground;
@property(retain, nonatomic) NSMutableArray *deviceInstalledKeyboardLocales; // @synthesize deviceInstalledKeyboardLocales=_deviceInstalledKeyboardLocales;
@property(retain, nonatomic) NSString *deviceSpokenLocale; // @synthesize deviceSpokenLocale=_deviceSpokenLocale;
@property(retain, nonatomic) NSString *deviceKeyboardLocale; // @synthesize deviceKeyboardLocale=_deviceKeyboardLocale;
@property(retain, nonatomic) NSString *deviceDisplayLocale; // @synthesize deviceDisplayLocale=_deviceDisplayLocale;
@property(retain, nonatomic) GEOLatLng *deviceLocation; // @synthesize deviceLocation=_deviceLocation;
@property(retain, nonatomic) NSString *deviceCountryCode; // @synthesize deviceCountryCode=_deviceCountryCode;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasTimeSinceMapEnteredForeground;
- (id)deviceInstalledKeyboardLocaleAtIndex:(unsigned long long)arg1;
- (unsigned long long)deviceInstalledKeyboardLocalesCount;
- (void)addDeviceInstalledKeyboardLocale:(id)arg1;
- (void)clearDeviceInstalledKeyboardLocales;
@property(readonly, nonatomic) _Bool hasDeviceSpokenLocale;
@property(readonly, nonatomic) _Bool hasDeviceKeyboardLocale;
@property(readonly, nonatomic) _Bool hasDeviceDisplayLocale;
@property(readonly, nonatomic) _Bool hasDeviceLocation;
@property(readonly, nonatomic) _Bool hasDeviceCountryCode;
- (void)dealloc;
- (id)initWithTraits:(id)arg1;

@end

@interface GEOPDComponent : PBCodable <NSCopying>
{
    double _timestampFirstSeen;
    GEOPDAttribution *_attribution;
    int _cacheControl;
    GEOPDSource *_source;
    int _startIndex;
    int _status;
    unsigned int _ttl;
    int _type;
    NSMutableArray *_values;
    int _valuesAvailable;
    unsigned int _version;
    NSMutableArray *_versionDomains;
    struct {
        unsigned int timestampFirstSeen:1;
        unsigned int cacheControl:1;
        unsigned int startIndex:1;
        unsigned int status:1;
        unsigned int ttl:1;
        unsigned int type:1;
        unsigned int valuesAvailable:1;
        unsigned int version:1;
    } _has;
}

@property(nonatomic) int cacheControl; // @synthesize cacheControl=_cacheControl;
@property(retain, nonatomic) GEOPDSource *source; // @synthesize source=_source;
@property(nonatomic) unsigned int version; // @synthesize version=_version;
@property(retain, nonatomic) NSMutableArray *versionDomains; // @synthesize versionDomains=_versionDomains;
@property(retain, nonatomic) NSMutableArray *values; // @synthesize values=_values;
@property(retain, nonatomic) GEOPDAttribution *attribution; // @synthesize attribution=_attribution;
@property(nonatomic) int valuesAvailable; // @synthesize valuesAvailable=_valuesAvailable;
@property(nonatomic) int startIndex; // @synthesize startIndex=_startIndex;
@property(nonatomic) unsigned int ttl; // @synthesize ttl=_ttl;
@property(nonatomic) int status; // @synthesize status=_status;
@property(nonatomic) int type; // @synthesize type=_type;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasCacheControl;
@property(readonly, nonatomic) _Bool hasSource;
@property(nonatomic) _Bool hasVersion;
- (id)versionDomainAtIndex:(unsigned long long)arg1;
- (unsigned long long)versionDomainsCount;
- (void)addVersionDomain:(id)arg1;
- (void)clearVersionDomains;
- (id)valueAtIndex:(unsigned long long)arg1;
- (unsigned long long)valuesCount;
- (void)addValue:(id)arg1;
- (void)clearValues;
@property(readonly, nonatomic) _Bool hasAttribution;
@property(nonatomic) _Bool hasValuesAvailable;
@property(nonatomic) _Bool hasStartIndex;
@property(nonatomic) _Bool hasTtl;
@property(nonatomic) _Bool hasStatus;
@property(nonatomic) _Bool hasType;
- (void)dealloc;
@property(nonatomic) _Bool hasTimestampFirstSeen;
@property(nonatomic) double timestampFirstSeen;

@end

@interface GEOPDComponentFilter : PBCodable <NSCopying>
{
    GEOPDRoadAccessInfoFilter *_accessInfoFilter;
    GEOPDAddressFilter *_addressFilter;
    GEOPDAmenitiesFilter *_amenitiesFilter;
    GEOPDBoundsFilter *_boundsFilter;
    GEOPDEntityFilter *_entityFilter;
    GEOPDETAFilter *_etaFilter;
    GEOPDFlyoverFilter *_flyoverFilter;
    GEOPDHoursFilter *_hoursFilter;
    GEOPDPhotoFilter *_photoFilter;
    GEOPDPlaceInfoFilter *_placeInfoFilter;
    GEOPDRatingFilter *_ratingFilter;
    GEOPDRawAttributeFilter *_rawAttributeFilter;
    GEOPDReviewFilter *_reviewFilter;
    GEOPDStyleAttributesFilter *_styleAttributesFilter;
}

@property(retain, nonatomic) GEOPDStyleAttributesFilter *styleAttributesFilter; // @synthesize styleAttributesFilter=_styleAttributesFilter;
@property(retain, nonatomic) GEOPDAmenitiesFilter *amenitiesFilter; // @synthesize amenitiesFilter=_amenitiesFilter;
@property(retain, nonatomic) GEOPDRawAttributeFilter *rawAttributeFilter; // @synthesize rawAttributeFilter=_rawAttributeFilter;
@property(retain, nonatomic) GEOPDFlyoverFilter *flyoverFilter; // @synthesize flyoverFilter=_flyoverFilter;
@property(retain, nonatomic) GEOPDETAFilter *etaFilter; // @synthesize etaFilter=_etaFilter;
@property(retain, nonatomic) GEOPDHoursFilter *hoursFilter; // @synthesize hoursFilter=_hoursFilter;
@property(retain, nonatomic) GEOPDPhotoFilter *photoFilter; // @synthesize photoFilter=_photoFilter;
@property(retain, nonatomic) GEOPDReviewFilter *reviewFilter; // @synthesize reviewFilter=_reviewFilter;
@property(retain, nonatomic) GEOPDRatingFilter *ratingFilter; // @synthesize ratingFilter=_ratingFilter;
@property(retain, nonatomic) GEOPDAddressFilter *addressFilter; // @synthesize addressFilter=_addressFilter;
@property(retain, nonatomic) GEOPDBoundsFilter *boundsFilter; // @synthesize boundsFilter=_boundsFilter;
@property(retain, nonatomic) GEOPDRoadAccessInfoFilter *accessInfoFilter; // @synthesize accessInfoFilter=_accessInfoFilter;
@property(retain, nonatomic) GEOPDPlaceInfoFilter *placeInfoFilter; // @synthesize placeInfoFilter=_placeInfoFilter;
@property(retain, nonatomic) GEOPDEntityFilter *entityFilter; // @synthesize entityFilter=_entityFilter;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasStyleAttributesFilter;
@property(readonly, nonatomic) _Bool hasAmenitiesFilter;
@property(readonly, nonatomic) _Bool hasRawAttributeFilter;
@property(readonly, nonatomic) _Bool hasFlyoverFilter;
@property(readonly, nonatomic) _Bool hasEtaFilter;
@property(readonly, nonatomic) _Bool hasHoursFilter;
@property(readonly, nonatomic) _Bool hasPhotoFilter;
@property(readonly, nonatomic) _Bool hasReviewFilter;
@property(readonly, nonatomic) _Bool hasRatingFilter;
@property(readonly, nonatomic) _Bool hasAddressFilter;
@property(readonly, nonatomic) _Bool hasBoundsFilter;
@property(readonly, nonatomic) _Bool hasAccessInfoFilter;
@property(readonly, nonatomic) _Bool hasPlaceInfoFilter;
@property(readonly, nonatomic) _Bool hasEntityFilter;
- (void)dealloc;
- (id)initReviewUserPhotoFilterWithTraits:(id)arg1;
- (id)initPhotoFilterWithTraits:(id)arg1;
- (id)initETAFilterWithTraits:(id)arg1;
- (id)initEntityFilterWithSpokenNames;

@end

@interface GEOPDComponentInfo : PBCodable <NSCopying>
{
    unsigned int _count;
    GEOPDComponentFilter *_filter;
    unsigned int _startIndex;
    int _type;
    int _urgency;
    _Bool _includeSource;
    struct {
        unsigned int count:1;
        unsigned int startIndex:1;
        unsigned int type:1;
        unsigned int urgency:1;
        unsigned int includeSource:1;
    } _has;
}

@property(nonatomic) int urgency; // @synthesize urgency=_urgency;
@property(nonatomic) _Bool includeSource; // @synthesize includeSource=_includeSource;
@property(retain, nonatomic) GEOPDComponentFilter *filter; // @synthesize filter=_filter;
@property(nonatomic) unsigned int count; // @synthesize count=_count;
@property(nonatomic) unsigned int startIndex; // @synthesize startIndex=_startIndex;
@property(nonatomic) int type; // @synthesize type=_type;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasUrgency;
@property(nonatomic) _Bool hasIncludeSource;
@property(readonly, nonatomic) _Bool hasFilter;
@property(nonatomic) _Bool hasCount;
@property(nonatomic) _Bool hasStartIndex;
@property(nonatomic) _Bool hasType;
- (void)dealloc;
- (id)initWithType:(int)arg1 count:(unsigned int)arg2;

@end

@interface GEOPDComponentValue : PBCodable <NSCopying>
{
    GEOPDRoadAccessInfo *_accessInfo;
    GEOPDAddress *_address;
    GEOPDAmenities *_amenities;
    GEOPDBounds *_bounds;
    GEOPDEntity *_entity;
    GEOPDETA *_eta;
    GEOPDFlyover *_flyover;
    GEOPDHours *_hours;
    GEOPDPhoto *_photo;
    GEOPDPlaceInfo *_placeInfo;
    GEOPDRating *_rating;
    GEOPDRawAttribute *_rawAttribute;
    GEOPDReview *_review;
    GEOPDStyleAttributes *_styleAttributes;
}

@property(retain, nonatomic) GEOPDStyleAttributes *styleAttributes; // @synthesize styleAttributes=_styleAttributes;
@property(retain, nonatomic) GEOPDAmenities *amenities; // @synthesize amenities=_amenities;
@property(retain, nonatomic) GEOPDRawAttribute *rawAttribute; // @synthesize rawAttribute=_rawAttribute;
@property(retain, nonatomic) GEOPDFlyover *flyover; // @synthesize flyover=_flyover;
@property(retain, nonatomic) GEOPDETA *eta; // @synthesize eta=_eta;
@property(retain, nonatomic) GEOPDHours *hours; // @synthesize hours=_hours;
@property(retain, nonatomic) GEOPDPhoto *photo; // @synthesize photo=_photo;
@property(retain, nonatomic) GEOPDReview *review; // @synthesize review=_review;
@property(retain, nonatomic) GEOPDRating *rating; // @synthesize rating=_rating;
@property(retain, nonatomic) GEOPDAddress *address; // @synthesize address=_address;
@property(retain, nonatomic) GEOPDBounds *bounds; // @synthesize bounds=_bounds;
@property(retain, nonatomic) GEOPDRoadAccessInfo *accessInfo; // @synthesize accessInfo=_accessInfo;
@property(retain, nonatomic) GEOPDPlaceInfo *placeInfo; // @synthesize placeInfo=_placeInfo;
@property(retain, nonatomic) GEOPDEntity *entity; // @synthesize entity=_entity;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasStyleAttributes;
@property(readonly, nonatomic) _Bool hasAmenities;
@property(readonly, nonatomic) _Bool hasRawAttribute;
@property(readonly, nonatomic) _Bool hasFlyover;
@property(readonly, nonatomic) _Bool hasEta;
@property(readonly, nonatomic) _Bool hasHours;
@property(readonly, nonatomic) _Bool hasPhoto;
@property(readonly, nonatomic) _Bool hasReview;
@property(readonly, nonatomic) _Bool hasRating;
@property(readonly, nonatomic) _Bool hasAddress;
@property(readonly, nonatomic) _Bool hasBounds;
@property(readonly, nonatomic) _Bool hasAccessInfo;
@property(readonly, nonatomic) _Bool hasPlaceInfo;
@property(readonly, nonatomic) _Bool hasEntity;
- (void)dealloc;

@end

@interface GEOPDETA : PBCodable <NSCopying>
{
    unsigned int _distance;
    unsigned int _time;
    int _transportType;
    struct {
        unsigned int distance:1;
        unsigned int time:1;
        unsigned int transportType:1;
    } _has;
}

+ (int)recommendedTransportTypeForPlaceData:(id)arg1;
+ (id)etaForPlaceData:(id)arg1 transportType:(int)arg2;
@property(nonatomic) int transportType; // @synthesize transportType=_transportType;
@property(nonatomic) unsigned int distance; // @synthesize distance=_distance;
@property(nonatomic) unsigned int time; // @synthesize time=_time;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasTransportType;
@property(nonatomic) _Bool hasDistance;
@property(nonatomic) _Bool hasTime;

@end

@interface GEOPDETAFilter : PBCodable <NSCopying>
{
    CDStruct_95bda58d _transportTypes;
}

- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (void)setTransportTypes:(int *)arg1 count:(unsigned long long)arg2;
- (int)transportTypeAtIndex:(unsigned long long)arg1;
- (void)addTransportType:(int)arg1;
- (void)clearTransportTypes;
@property(readonly, nonatomic) int *transportTypes;
@property(readonly, nonatomic) unsigned long long transportTypesCount;
- (void)dealloc;

@end

@interface GEOPDEntity : PBCodable <NSCopying>
{
    NSMutableArray *_altFaxs;
    NSMutableArray *_altTelephones;
    NSMutableArray *_altUrls;
    NSString *_fax;
    NSMutableArray *_localizedCategorys;
    NSMutableArray *_names;
    NSMutableArray *_spokenNames;
    NSString *_telephone;
    int _type;
    NSString *_url;
    _Bool _isDisputed;
    _Bool _isPermanentlyClosed;
    struct {
        unsigned int type:1;
        unsigned int isDisputed:1;
        unsigned int isPermanentlyClosed:1;
    } _has;
}

+ (id)entityForPlaceData:(id)arg1;
@property(retain, nonatomic) NSMutableArray *localizedCategorys; // @synthesize localizedCategorys=_localizedCategorys;
@property(retain, nonatomic) NSMutableArray *spokenNames; // @synthesize spokenNames=_spokenNames;
@property(retain, nonatomic) NSMutableArray *names; // @synthesize names=_names;
@property(nonatomic) _Bool isDisputed; // @synthesize isDisputed=_isDisputed;
@property(nonatomic) _Bool isPermanentlyClosed; // @synthesize isPermanentlyClosed=_isPermanentlyClosed;
@property(retain, nonatomic) NSMutableArray *altUrls; // @synthesize altUrls=_altUrls;
@property(retain, nonatomic) NSString *url; // @synthesize url=_url;
@property(retain, nonatomic) NSMutableArray *altFaxs; // @synthesize altFaxs=_altFaxs;
@property(retain, nonatomic) NSString *fax; // @synthesize fax=_fax;
@property(retain, nonatomic) NSMutableArray *altTelephones; // @synthesize altTelephones=_altTelephones;
@property(retain, nonatomic) NSString *telephone; // @synthesize telephone=_telephone;
@property(nonatomic) int type; // @synthesize type=_type;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)localizedCategoryAtIndex:(unsigned long long)arg1;
- (unsigned long long)localizedCategorysCount;
- (void)addLocalizedCategory:(id)arg1;
- (void)clearLocalizedCategorys;
- (id)spokenNameAtIndex:(unsigned long long)arg1;
- (unsigned long long)spokenNamesCount;
- (void)addSpokenName:(id)arg1;
- (void)clearSpokenNames;
- (id)nameAtIndex:(unsigned long long)arg1;
- (unsigned long long)namesCount;
- (void)addName:(id)arg1;
- (void)clearNames;
@property(nonatomic) _Bool hasIsDisputed;
@property(nonatomic) _Bool hasIsPermanentlyClosed;
- (id)altUrlAtIndex:(unsigned long long)arg1;
- (unsigned long long)altUrlsCount;
- (void)addAltUrl:(id)arg1;
- (void)clearAltUrls;
@property(readonly, nonatomic) _Bool hasUrl;
- (id)altFaxAtIndex:(unsigned long long)arg1;
- (unsigned long long)altFaxsCount;
- (void)addAltFax:(id)arg1;
- (void)clearAltFaxs;
@property(readonly, nonatomic) _Bool hasFax;
- (id)altTelephoneAtIndex:(unsigned long long)arg1;
- (unsigned long long)altTelephonesCount;
- (void)addAltTelephone:(id)arg1;
- (void)clearAltTelephones;
@property(readonly, nonatomic) _Bool hasTelephone;
@property(nonatomic) _Bool hasType;
- (void)dealloc;
- (id)bestLocalizedName;

@end

@interface GEOPDEntityFilter : PBCodable <NSCopying>
{
    _Bool _includeSpokenNames;
    struct {
        unsigned int includeSpokenNames:1;
    } _has;
}

@property(nonatomic) _Bool includeSpokenNames; // @synthesize includeSpokenNames=_includeSpokenNames;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasIncludeSpokenNames;

@end

@interface GEOPDFlyover : PBCodable <NSCopying>
{
    CDStruct_eb2d75ab *_cameraPaths;
    unsigned long long _cameraPathsCount;
    unsigned long long _cameraPathsSpace;
    CDStruct_11cc3dfc *_labelFrames;
    unsigned long long _labelFramesCount;
    unsigned long long _labelFramesSpace;
    NSMutableArray *_labels;
    NSMutableArray *_notificationMessages;
    _Bool _useSplines;
    struct {
        unsigned int useSplines:1;
    } _has;
}

+ (id)flyoverForPlaceData:(id)arg1;
@property(retain, nonatomic) NSMutableArray *notificationMessages; // @synthesize notificationMessages=_notificationMessages;
@property(retain, nonatomic) NSMutableArray *labels; // @synthesize labels=_labels;
@property(nonatomic) _Bool useSplines; // @synthesize useSplines=_useSplines;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)notificationMessageAtIndex:(unsigned long long)arg1;
- (unsigned long long)notificationMessagesCount;
- (void)addNotificationMessage:(id)arg1;
- (void)clearNotificationMessages;
- (id)labelAtIndex:(unsigned long long)arg1;
- (unsigned long long)labelsCount;
- (void)addLabel:(id)arg1;
- (void)clearLabels;
- (void)setLabelFrames:(CDStruct_11cc3dfc *)arg1 count:(unsigned long long)arg2;
- (CDStruct_11cc3dfc)labelFrameAtIndex:(unsigned long long)arg1;
- (void)addLabelFrame:(CDStruct_11cc3dfc)arg1;
- (void)clearLabelFrames;
@property(readonly, nonatomic) CDStruct_11cc3dfc *labelFrames;
@property(readonly, nonatomic) unsigned long long labelFramesCount;
@property(nonatomic) _Bool hasUseSplines;
- (void)setCameraPaths:(CDStruct_eb2d75ab *)arg1 count:(unsigned long long)arg2;
- (CDStruct_eb2d75ab)cameraPathAtIndex:(unsigned long long)arg1;
- (void)addCameraPath:(CDStruct_eb2d75ab)arg1;
- (void)clearCameraPaths;
@property(readonly, nonatomic) CDStruct_eb2d75ab *cameraPaths;
@property(readonly, nonatomic) unsigned long long cameraPathsCount;
- (void)dealloc;
- (id)bestLocalizedAnnouncementMessage;

@end

@interface GEOPDFlyoverFilter : PBCodable <NSCopying>
{
}

- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;

@end

@interface GEOPDGeocodingParameters : PBCodable <NSCopying>
{
    unsigned int _maxResults;
    NSString *_queryString;
    GEOStructuredAddress *_structuredAddress;
    GEOPDViewportInfo *_viewportInfo;
    struct {
        unsigned int maxResults:1;
    } _has;
}

@property(retain, nonatomic) GEOStructuredAddress *structuredAddress; // @synthesize structuredAddress=_structuredAddress;
@property(retain, nonatomic) GEOPDViewportInfo *viewportInfo; // @synthesize viewportInfo=_viewportInfo;
@property(retain, nonatomic) NSString *queryString; // @synthesize queryString=_queryString;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasStructuredAddress;
@property(readonly, nonatomic) _Bool hasViewportInfo;
@property(nonatomic) _Bool hasMaxResults;
@property(nonatomic) unsigned int maxResults; // @synthesize maxResults=_maxResults;
@property(readonly, nonatomic) _Bool hasQueryString;
- (void)dealloc;
- (id)initWithForwardGeocodeAddressString:(id)arg1 maxResults:(unsigned int)arg2 traits:(id)arg3;
- (id)initWithForwardGeocodeAddress:(id)arg1 maxResults:(unsigned int)arg2 traits:(id)arg3;
- (id)initWithForwardGeocodeAddress:(id)arg1 addressString:(id)arg2 maxResults:(unsigned int)arg3 traits:(id)arg4;

@end

@interface GEOPDGeocodingResult : PBCodable <NSCopying>
{
    NSMutableArray *_disambiguationLabels;
}

@property(retain, nonatomic) NSMutableArray *disambiguationLabels; // @synthesize disambiguationLabels=_disambiguationLabels;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)disambiguationLabelAtIndex:(unsigned long long)arg1;
- (unsigned long long)disambiguationLabelsCount;
- (void)addDisambiguationLabel:(id)arg1;
- (void)clearDisambiguationLabels;
- (void)dealloc;

@end

@interface GEOPDHours : PBCodable <NSCopying>
{
    CDStruct_95bda58d _days;
    CDStruct_aca30317 *_timeRanges;
    unsigned long long _timeRangesCount;
    unsigned long long _timeRangesSpace;
}

+ (id)currentOperatingHoursForPlaceData:(id)arg1 withTimeZone:(id)arg2;
+ (_Bool)currentOperatingHoursAvailableForPlaceData:(id)arg1 withTimeZone:(id)arg2;
+ (_Bool)operatingHoursAvailableForPlaceData:(id)arg1;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (void)setTimeRanges:(CDStruct_aca30317 *)arg1 count:(unsigned long long)arg2;
- (CDStruct_aca30317)timeRangeAtIndex:(unsigned long long)arg1;
- (void)addTimeRange:(CDStruct_aca30317)arg1;
- (void)clearTimeRanges;
@property(readonly, nonatomic) CDStruct_aca30317 *timeRanges;
@property(readonly, nonatomic) unsigned long long timeRangesCount;
- (void)setDays:(int *)arg1 count:(unsigned long long)arg2;
- (int)dayAtIndex:(unsigned long long)arg1;
- (void)addDay:(int)arg1;
- (void)clearDays;
@property(readonly, nonatomic) int *days;
@property(readonly, nonatomic) unsigned long long daysCount;
- (void)dealloc;

@end

@interface GEOPDHoursFilter : PBCodable <NSCopying>
{
}

- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;

@end

@interface GEOPDIndexQueryNode : PBCodable <NSCopying>
{
    NSString *_field;
    NSMutableArray *_operands;
    int _type;
    NSString *_value;
}

@property(retain, nonatomic) NSMutableArray *operands; // @synthesize operands=_operands;
@property(retain, nonatomic) NSString *value; // @synthesize value=_value;
@property(retain, nonatomic) NSString *field; // @synthesize field=_field;
@property(nonatomic) int type; // @synthesize type=_type;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)operandAtIndex:(unsigned long long)arg1;
- (unsigned long long)operandsCount;
- (void)addOperand:(id)arg1;
- (void)clearOperands;
@property(readonly, nonatomic) _Bool hasValue;
@property(readonly, nonatomic) _Bool hasField;
- (void)dealloc;

@end

@interface GEOPDLabelLocalizations : PBCodable <NSCopying>
{
    NSMutableArray *_localizedStrings;
}

@property(retain, nonatomic) NSMutableArray *localizedStrings; // @synthesize localizedStrings=_localizedStrings;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)localizedStringAtIndex:(unsigned long long)arg1;
- (unsigned long long)localizedStringsCount;
- (void)addLocalizedString:(id)arg1;
- (void)clearLocalizedStrings;
- (void)dealloc;

@end

@interface GEOPDLocalizedAddress : PBCodable <NSCopying>
{
    GEOAddress *_address;
    NSString *_locale;
}

@property(retain, nonatomic) GEOAddress *address; // @synthesize address=_address;
@property(retain, nonatomic) NSString *locale; // @synthesize locale=_locale;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasAddress;
@property(readonly, nonatomic) _Bool hasLocale;
- (void)dealloc;

@end

@interface GEOPDLocalizedNameInfo : PBCodable <NSCopying>
{
    NSString *_languageCode;
    GEONameInfo *_name;
    NSString *_requestedLanguageCode;
}

@property(retain, nonatomic) GEONameInfo *name; // @synthesize name=_name;
@property(retain, nonatomic) NSString *languageCode; // @synthesize languageCode=_languageCode;
@property(retain, nonatomic) NSString *requestedLanguageCode; // @synthesize requestedLanguageCode=_requestedLanguageCode;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasName;
@property(readonly, nonatomic) _Bool hasLanguageCode;
@property(readonly, nonatomic) _Bool hasRequestedLanguageCode;
- (void)dealloc;

@end

@interface GEOPDLocalizedSpokenStructuredAddress : PBCodable <NSCopying>
{
    NSString *_locale;
    GEOStructuredAddress *_spokenStructuredAddress;
}

@property(retain, nonatomic) GEOStructuredAddress *spokenStructuredAddress; // @synthesize spokenStructuredAddress=_spokenStructuredAddress;
@property(retain, nonatomic) NSString *locale; // @synthesize locale=_locale;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasSpokenStructuredAddress;
@property(readonly, nonatomic) _Bool hasLocale;
- (void)dealloc;

@end

@interface GEOPDLocalizedString : PBCodable <NSCopying>
{
    NSString *_locale;
    NSString *_stringValue;
}

@property(retain, nonatomic) NSString *stringValue; // @synthesize stringValue=_stringValue;
@property(retain, nonatomic) NSString *locale; // @synthesize locale=_locale;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasStringValue;
@property(readonly, nonatomic) _Bool hasLocale;
- (void)dealloc;

@end

@interface GEOPDLocationDirectedSearchParameters : PBCodable <NSCopying>
{
    unsigned int _maxResults;
    GEOLatLng *_searchLocation;
    NSString *_searchString;
    int _sortOrder;
    GEOPDViewportInfo *_viewportInfo;
    CDStruct_6c9bcd7c _has;
}

@property(retain, nonatomic) GEOLatLng *searchLocation; // @synthesize searchLocation=_searchLocation;
@property(retain, nonatomic) GEOPDViewportInfo *viewportInfo; // @synthesize viewportInfo=_viewportInfo;
@property(retain, nonatomic) NSString *searchString; // @synthesize searchString=_searchString;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasSearchLocation;
@property(readonly, nonatomic) _Bool hasViewportInfo;
@property(readonly, nonatomic) _Bool hasSearchString;
@property(nonatomic) _Bool hasMaxResults;
@property(nonatomic) unsigned int maxResults; // @synthesize maxResults=_maxResults;
@property(nonatomic) _Bool hasSortOrder;
@property(nonatomic) int sortOrder; // @synthesize sortOrder=_sortOrder;
- (void)dealloc;
- (id)initWithSearchURLQuery:(id)arg1 coordinate:(CDStruct_c3b9c2ee)arg2 maxResults:(unsigned int)arg3;

@end

@interface GEOPDLocationDirectedSearchResult : PBCodable <NSCopying>
{
    NSMutableArray *_disambiguationLabels;
    GEOMapRegion *_displayMapRegion;
}

@property(retain, nonatomic) NSMutableArray *disambiguationLabels; // @synthesize disambiguationLabels=_disambiguationLabels;
@property(retain, nonatomic) GEOMapRegion *displayMapRegion; // @synthesize displayMapRegion=_displayMapRegion;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)disambiguationLabelAtIndex:(unsigned long long)arg1;
- (unsigned long long)disambiguationLabelsCount;
- (void)addDisambiguationLabel:(id)arg1;
- (void)clearDisambiguationLabels;
@property(readonly, nonatomic) _Bool hasDisplayMapRegion;
- (void)dealloc;

@end

@interface GEOPDMerchantLookupParameters : PBCodable <NSCopying>
{
    double _transactionTimestamp;
    NSString *_merchantCode;
    NSString *_paymentNetwork;
    GEOLocation *_transactionLocation;
    struct {
        unsigned int transactionTimestamp:1;
    } _has;
}

@property(retain, nonatomic) GEOLocation *transactionLocation; // @synthesize transactionLocation=_transactionLocation;
@property(nonatomic) double transactionTimestamp; // @synthesize transactionTimestamp=_transactionTimestamp;
@property(retain, nonatomic) NSString *merchantCode; // @synthesize merchantCode=_merchantCode;
@property(retain, nonatomic) NSString *paymentNetwork; // @synthesize paymentNetwork=_paymentNetwork;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasTransactionLocation;
@property(nonatomic) _Bool hasTransactionTimestamp;
@property(readonly, nonatomic) _Bool hasMerchantCode;
@property(readonly, nonatomic) _Bool hasPaymentNetwork;
- (void)dealloc;

@end

@interface GEOPDMerchantLookupResult : PBCodable <NSCopying>
{
}

- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;

@end

@interface GEOPDMultiLocalizedString : PBCodable <NSCopying>
{
    NSMutableArray *_localizedStrings;
}

@property(retain, nonatomic) NSMutableArray *localizedStrings; // @synthesize localizedStrings=_localizedStrings;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)localizedStringAtIndex:(unsigned long long)arg1;
- (unsigned long long)localizedStringsCount;
- (void)addLocalizedString:(id)arg1;
- (void)clearLocalizedStrings;
- (void)dealloc;
- (id)bestLocalizedName;

@end

@interface GEOPDPhoto : PBCodable <NSCopying>
{
    NSString *_photoId;
    NSMutableArray *_photoVersions;
}

@property(retain, nonatomic) NSMutableArray *photoVersions; // @synthesize photoVersions=_photoVersions;
@property(retain, nonatomic) NSString *photoId; // @synthesize photoId=_photoId;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)photoVersionAtIndex:(unsigned long long)arg1;
- (unsigned long long)photoVersionsCount;
- (void)addPhotoVersion:(id)arg1;
- (void)clearPhotoVersions;
@property(readonly, nonatomic) _Bool hasPhotoId;
- (void)dealloc;

@end

@interface GEOPDPhotoContent : PBCodable <NSCopying>
{
    unsigned int _height;
    NSString *_url;
    unsigned int _width;
    CDStruct_db93fd0f _has;
}

@property(retain, nonatomic) NSString *url; // @synthesize url=_url;
@property(nonatomic) unsigned int height; // @synthesize height=_height;
@property(nonatomic) unsigned int width; // @synthesize width=_width;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasUrl;
@property(nonatomic) _Bool hasHeight;
@property(nonatomic) _Bool hasWidth;
- (void)dealloc;

@end

@interface GEOPDPhotoFilter : PBCodable <NSCopying>
{
    CDStruct_13868713 *_photoSizeFilters;
    unsigned long long _photoSizeFiltersCount;
    unsigned long long _photoSizeFiltersSpace;
}

- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (void)setPhotoSizeFilters:(CDStruct_13868713 *)arg1 count:(unsigned long long)arg2;
- (CDStruct_13868713)photoSizeFilterAtIndex:(unsigned long long)arg1;
- (void)addPhotoSizeFilter:(CDStruct_13868713)arg1;
- (void)clearPhotoSizeFilters;
@property(readonly, nonatomic) CDStruct_13868713 *photoSizeFilters;
@property(readonly, nonatomic) unsigned long long photoSizeFiltersCount;
- (void)dealloc;

@end

@interface GEOPDPlace : PBCodable <NSCopying>
{
    unsigned long long _muid;
    unsigned long long _preferredMuid;
    NSMutableArray *_components;
    int _resultProviderId;
    int _status;
    struct {
        unsigned int muid:1;
        unsigned int preferredMuid:1;
        unsigned int resultProviderId:1;
        unsigned int status:1;
    } _has;
}

+ (id)attributionForPlaceData:(id)arg1 type:(int)arg2;
+ (id)failedPlaceDataForMuid:(unsigned long long)arg1;
+ (id)failedPlaceData;
@property(nonatomic) int resultProviderId; // @synthesize resultProviderId=_resultProviderId;
@property(retain, nonatomic) NSMutableArray *components; // @synthesize components=_components;
@property(nonatomic) unsigned long long preferredMuid; // @synthesize preferredMuid=_preferredMuid;
@property(nonatomic) int status; // @synthesize status=_status;
@property(nonatomic) unsigned long long muid; // @synthesize muid=_muid;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasResultProviderId;
- (id)componentAtIndex:(unsigned long long)arg1;
- (unsigned long long)componentsCount;
- (void)addComponent:(id)arg1;
- (void)clearComponents;
@property(nonatomic) _Bool hasPreferredMuid;
@property(nonatomic) _Bool hasStatus;
@property(nonatomic) _Bool hasMuid;
- (void)dealloc;
- (id)compactDebugDescription;
- (_Bool)isCacheable;
- (id)geoMapItem;
- (void)setFirstSeenTimestamp:(double)arg1;
- (id)copyWithStrippedOptionalData;
- (void)_removeETAComponents;
- (id)copyWithoutETAComponents;
- (id)businessURL;
- (_Bool)isDisputed;
- (id)spokenNameForLocale:(id)arg1;
- (id)bestName;
- (id)_entityName;
- (id)_cleanedPhoneNumberForPhoneNumberRepresentation:(id)arg1;
- (_Bool)hasExpiredComponentsAsOf:(double)arg1;
- (id)phoneNumbers;

@end

@interface GEOPDPlaceGlobalResult : PBCodable <NSCopying>
{
    GEOPDCanonicalLocationSearchResult *_canonicalSearchResult;
    GEOPDGeocodingResult *_geocodingResult;
    GEOPDLocationDirectedSearchResult *_locationDirectedSearchResult;
    GEOPDMerchantLookupResult *_merchantLookupResult;
    GEOPDPlaceLookupResult *_placeLookupResult;
    GEOPDPlaceRefinementResult *_placeRefinementResult;
    GEOPDReverseGeocodingResult *_reverseGeocodingResult;
    GEOPDSearchResult *_searchResult;
    GEOPDSiriSearchResult *_siriSearchResult;
}

@property(retain, nonatomic) GEOPDLocationDirectedSearchResult *locationDirectedSearchResult; // @synthesize locationDirectedSearchResult=_locationDirectedSearchResult;
@property(retain, nonatomic) GEOPDSiriSearchResult *siriSearchResult; // @synthesize siriSearchResult=_siriSearchResult;
@property(retain, nonatomic) GEOPDPlaceRefinementResult *placeRefinementResult; // @synthesize placeRefinementResult=_placeRefinementResult;
@property(retain, nonatomic) GEOPDMerchantLookupResult *merchantLookupResult; // @synthesize merchantLookupResult=_merchantLookupResult;
@property(retain, nonatomic) GEOPDPlaceLookupResult *placeLookupResult; // @synthesize placeLookupResult=_placeLookupResult;
@property(retain, nonatomic) GEOPDReverseGeocodingResult *reverseGeocodingResult; // @synthesize reverseGeocodingResult=_reverseGeocodingResult;
@property(retain, nonatomic) GEOPDCanonicalLocationSearchResult *canonicalSearchResult; // @synthesize canonicalSearchResult=_canonicalSearchResult;
@property(retain, nonatomic) GEOPDGeocodingResult *geocodingResult; // @synthesize geocodingResult=_geocodingResult;
@property(retain, nonatomic) GEOPDSearchResult *searchResult; // @synthesize searchResult=_searchResult;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasLocationDirectedSearchResult;
@property(readonly, nonatomic) _Bool hasSiriSearchResult;
@property(readonly, nonatomic) _Bool hasPlaceRefinementResult;
@property(readonly, nonatomic) _Bool hasMerchantLookupResult;
@property(readonly, nonatomic) _Bool hasPlaceLookupResult;
@property(readonly, nonatomic) _Bool hasReverseGeocodingResult;
@property(readonly, nonatomic) _Bool hasCanonicalSearchResult;
@property(readonly, nonatomic) _Bool hasGeocodingResult;
@property(readonly, nonatomic) _Bool hasSearchResult;
- (void)dealloc;

@end

@interface GEOPDPlaceInfo : PBCodable <NSCopying>
{
    double _area;
    GEOLatLng *_center;
    GEOTimezone *_timezone;
    _Bool _isApproximateCenter;
    struct {
        unsigned int area:1;
        unsigned int isApproximateCenter:1;
    } _has;
}

+ (id)placeInfoForPlaceData:(id)arg1;
@property(nonatomic) _Bool isApproximateCenter; // @synthesize isApproximateCenter=_isApproximateCenter;
@property(retain, nonatomic) GEOTimezone *timezone; // @synthesize timezone=_timezone;
@property(nonatomic) double area; // @synthesize area=_area;
@property(retain, nonatomic) GEOLatLng *center; // @synthesize center=_center;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasIsApproximateCenter;
@property(readonly, nonatomic) _Bool hasTimezone;
@property(nonatomic) _Bool hasArea;
@property(readonly, nonatomic) _Bool hasCenter;
- (void)dealloc;

@end

@interface GEOPDPlaceInfoFilter : PBCodable <NSCopying>
{
}

- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;

@end

@interface GEOPDPlaceLookupParameters : PBCodable <NSCopying>
{
    CDStruct_62a50c50 _muids;
    int _resultProviderId;
    CDStruct_08086d5c _has;
}

@property(nonatomic) int resultProviderId; // @synthesize resultProviderId=_resultProviderId;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (void)setMuids:(unsigned long long *)arg1 count:(unsigned long long)arg2;
- (unsigned long long)muidAtIndex:(unsigned long long)arg1;
- (void)addMuid:(unsigned long long)arg1;
- (void)clearMuids;
@property(readonly, nonatomic) unsigned long long *muids;
@property(readonly, nonatomic) unsigned long long muidsCount;
@property(nonatomic) _Bool hasResultProviderId;
- (void)dealloc;
- (id)initWithMUIDs:(id)arg1;

@end

@interface GEOPDPlaceLookupResult : PBCodable <NSCopying>
{
}

- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;

@end

@interface GEOPDPlaceRefinementParameters : PBCodable <NSCopying>
{
    unsigned long long _muid;
    GEOStructuredAddress *_addressHint;
    GEOLatLng *_locationHint;
    NSString *_placeNameHint;
    int _resultProviderId;
    CDStruct_12a4a01e _has;
}

@property(retain, nonatomic) NSString *placeNameHint; // @synthesize placeNameHint=_placeNameHint;
@property(retain, nonatomic) GEOStructuredAddress *addressHint; // @synthesize addressHint=_addressHint;
@property(retain, nonatomic) GEOLatLng *locationHint; // @synthesize locationHint=_locationHint;
@property(nonatomic) unsigned long long muid; // @synthesize muid=_muid;
@property(nonatomic) int resultProviderId; // @synthesize resultProviderId=_resultProviderId;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasPlaceNameHint;
@property(readonly, nonatomic) _Bool hasAddressHint;
@property(readonly, nonatomic) _Bool hasLocationHint;
@property(nonatomic) _Bool hasMuid;
@property(nonatomic) _Bool hasResultProviderId;
- (void)dealloc;
- (id)initWithSearchURLQuery:(id)arg1 coordinate:(CDStruct_c3b9c2ee)arg2 muid:(unsigned long long)arg3 resultProviderId:(int)arg4;
- (id)initWithCoordinateHint:(CDStruct_c3b9c2ee)arg1 addressHint:(id)arg2 placeNameHint:(id)arg3;
- (id)initWithMapItemToRefine:(id)arg1;
- (id)initWithMuid:(unsigned long long)arg1 addressHint:(id)arg2 locationHint:(CDStruct_c3b9c2ee)arg3 placeNameHint:(id)arg4 resultProviderId:(int)arg5;

@end

@interface GEOPDPlaceRefinementResult : PBCodable <NSCopying>
{
}

- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;

@end

@interface GEOPDPlaceRequest : PBRequest <NSCopying>
{
    GEOPDAnalyticMetadata *_analyticMetadata;
    GEOPDClientMetadata *_clientMetadata;
    NSMutableArray *_displayLocales;
    GEOPDPlaceRequestParameters *_placeRequestParameters;
    int _requestType;
    NSMutableArray *_requestedComponents;
    NSMutableArray *_spokenLocales;
    _Bool _suppressResultsRequiringAttribution;
    struct {
        unsigned int requestType:1;
        unsigned int suppressResultsRequiringAttribution:1;
    } _has;
}

@property(retain, nonatomic) GEOPDPlaceRequestParameters *placeRequestParameters; // @synthesize placeRequestParameters=_placeRequestParameters;
@property(nonatomic) int requestType; // @synthesize requestType=_requestType;
@property(nonatomic) _Bool suppressResultsRequiringAttribution; // @synthesize suppressResultsRequiringAttribution=_suppressResultsRequiringAttribution;
@property(retain, nonatomic) NSMutableArray *requestedComponents; // @synthesize requestedComponents=_requestedComponents;
@property(retain, nonatomic) NSMutableArray *spokenLocales; // @synthesize spokenLocales=_spokenLocales;
@property(retain, nonatomic) NSMutableArray *displayLocales; // @synthesize displayLocales=_displayLocales;
@property(retain, nonatomic) GEOPDClientMetadata *clientMetadata; // @synthesize clientMetadata=_clientMetadata;
@property(retain, nonatomic) GEOPDAnalyticMetadata *analyticMetadata; // @synthesize analyticMetadata=_analyticMetadata;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (Class)responseClass;
- (unsigned int)requestTypeCode;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasPlaceRequestParameters;
@property(nonatomic) _Bool hasRequestType;
@property(nonatomic) _Bool hasSuppressResultsRequiringAttribution;
- (id)requestedComponentAtIndex:(unsigned long long)arg1;
- (unsigned long long)requestedComponentsCount;
- (void)addRequestedComponent:(id)arg1;
- (void)clearRequestedComponents;
- (id)spokenLocaleAtIndex:(unsigned long long)arg1;
- (unsigned long long)spokenLocalesCount;
- (void)addSpokenLocale:(id)arg1;
- (void)clearSpokenLocales;
- (id)displayLocaleAtIndex:(unsigned long long)arg1;
- (unsigned long long)displayLocalesCount;
- (void)addDisplayLocale:(id)arg1;
- (void)clearDisplayLocales;
@property(readonly, nonatomic) _Bool hasClientMetadata;
@property(readonly, nonatomic) _Bool hasAnalyticMetadata;
- (void)dealloc;
- (_Bool)isForwardGeocoderRequest;
- (id)initWithSearchURLQuery:(id)arg1 coordinate:(CDStruct_c3b9c2ee)arg2 maxResults:(unsigned int)arg3 traits:(id)arg4;
- (id)initWithSearchURLQuery:(id)arg1 coordinate:(CDStruct_c3b9c2ee)arg2 muid:(unsigned long long)arg3 resultProviderId:(int)arg4 maxResults:(unsigned int)arg5 traits:(id)arg6;
- (id)initWithSearchQuery:(id)arg1 entryMetadata:(id)arg2 metadata:(id)arg3 maxResults:(unsigned int)arg4 suppressResultsRequiringAttribution:(_Bool)arg5 includeETA:(_Bool)arg6 traits:(id)arg7;
- (id)initWithCoordinateHint:(CDStruct_c3b9c2ee)arg1 addressHint:(id)arg2 placeNameHint:(id)arg3 traits:(id)arg4;
- (id)initWithCanonicalLocationSearchQueryString:(id)arg1 traits:(id)arg2;
- (id)initWithMapItemToRefine:(id)arg1 traits:(id)arg2;
- (id)initWithForwardGeocodeAddressString:(id)arg1 maxResults:(unsigned int)arg2 traits:(id)arg3;
- (id)initWithForwardGeocodeAddress:(id)arg1 maxResults:(unsigned int)arg2 traits:(id)arg3;
- (id)initWithReverseGeocodeCoordinate:(CDStruct_c3b9c2ee)arg1 includeEntryPoints:(_Bool)arg2 includeETA:(_Bool)arg3 traits:(id)arg4;
- (id)initWithMerchantCode:(id)arg1 paymentNetwork:(id)arg2 transactionDate:(id)arg3 transactionLocation:(id)arg4 traits:(id)arg5;
- (id)initWithMUIDs:(id)arg1 includeETA:(_Bool)arg2 traits:(id)arg3;
- (id)initWithTraits:(id)arg1 count:(unsigned int)arg2 includeETA:(_Bool)arg3 includeEntryPoints:(_Bool)arg4;

@end

@interface GEOPDPlaceRequestParameters : PBCodable <NSCopying>
{
    GEOPDCanonicalLocationSearchParameters *_canonicalLocationSearchParameters;
    GEOPDGeocodingParameters *_geocodingParameters;
    GEOPDLocationDirectedSearchParameters *_locationDirectedSearchParameters;
    GEOPDMerchantLookupParameters *_merchantLookupParameters;
    GEOPDPlaceLookupParameters *_placeLookupParameters;
    GEOPDPlaceRefinementParameters *_placeRefinementParameters;
    GEOPDReverseGeocodingParameters *_reverseGeocodingParameters;
    GEOPDSearchParameters *_searchParameters;
    GEOPDSiriSearchParameters *_siriSearchParameters;
}

@property(retain, nonatomic) GEOPDLocationDirectedSearchParameters *locationDirectedSearchParameters; // @synthesize locationDirectedSearchParameters=_locationDirectedSearchParameters;
@property(retain, nonatomic) GEOPDSiriSearchParameters *siriSearchParameters; // @synthesize siriSearchParameters=_siriSearchParameters;
@property(retain, nonatomic) GEOPDPlaceRefinementParameters *placeRefinementParameters; // @synthesize placeRefinementParameters=_placeRefinementParameters;
@property(retain, nonatomic) GEOPDMerchantLookupParameters *merchantLookupParameters; // @synthesize merchantLookupParameters=_merchantLookupParameters;
@property(retain, nonatomic) GEOPDPlaceLookupParameters *placeLookupParameters; // @synthesize placeLookupParameters=_placeLookupParameters;
@property(retain, nonatomic) GEOPDReverseGeocodingParameters *reverseGeocodingParameters; // @synthesize reverseGeocodingParameters=_reverseGeocodingParameters;
@property(retain, nonatomic) GEOPDCanonicalLocationSearchParameters *canonicalLocationSearchParameters; // @synthesize canonicalLocationSearchParameters=_canonicalLocationSearchParameters;
@property(retain, nonatomic) GEOPDGeocodingParameters *geocodingParameters; // @synthesize geocodingParameters=_geocodingParameters;
@property(retain, nonatomic) GEOPDSearchParameters *searchParameters; // @synthesize searchParameters=_searchParameters;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasLocationDirectedSearchParameters;
@property(readonly, nonatomic) _Bool hasSiriSearchParameters;
@property(readonly, nonatomic) _Bool hasPlaceRefinementParameters;
@property(readonly, nonatomic) _Bool hasMerchantLookupParameters;
@property(readonly, nonatomic) _Bool hasPlaceLookupParameters;
@property(readonly, nonatomic) _Bool hasReverseGeocodingParameters;
@property(readonly, nonatomic) _Bool hasCanonicalLocationSearchParameters;
@property(readonly, nonatomic) _Bool hasGeocodingParameters;
@property(readonly, nonatomic) _Bool hasSearchParameters;
- (void)dealloc;
- (id)initWithSearchURLQuery:(id)arg1 coordinate:(CDStruct_c3b9c2ee)arg2 maxResults:(unsigned int)arg3;
- (id)initWithSearchURLQuery:(id)arg1 coordinate:(CDStruct_c3b9c2ee)arg2 muid:(unsigned long long)arg3 resultProviderId:(int)arg4;
- (id)initWithSearchQuery:(id)arg1 entryMetadata:(id)arg2 metadata:(id)arg3 maxResults:(unsigned int)arg4 traits:(id)arg5;
- (id)initWithCoordinateHint:(CDStruct_c3b9c2ee)arg1 addressHint:(id)arg2 placeNameHint:(id)arg3 traits:(id)arg4;
- (id)initWithCanonicalLocationSearchQueryString:(id)arg1;
- (id)initWithMapItemToRefine:(id)arg1 traits:(id)arg2;
- (id)initWithForwardGeocodeAddressString:(id)arg1 maxResults:(unsigned int)arg2 traits:(id)arg3;
- (id)initWithForwardGeocodeAddress:(id)arg1 maxResults:(unsigned int)arg2 traits:(id)arg3;
- (id)initWithReverseGeocodeCoordinate:(CDStruct_c3b9c2ee)arg1;
- (id)initWithMerchantCode:(id)arg1 paymentNetwork:(id)arg2 transactionDate:(id)arg3 transactionLocation:(id)arg4;
- (id)initWithMUIDs:(id)arg1;

@end

@interface GEOPDPlaceResponse : PBCodable <NSCopying>
{
    GEOPDPlaceGlobalResult *_globalResult;
    NSMutableArray *_placeResults;
    int _requestType;
    int _status;
    struct {
        unsigned int requestType:1;
        unsigned int status:1;
    } _has;
}

@property(retain, nonatomic) NSMutableArray *placeResults; // @synthesize placeResults=_placeResults;
@property(retain, nonatomic) GEOPDPlaceGlobalResult *globalResult; // @synthesize globalResult=_globalResult;
@property(nonatomic) int requestType; // @synthesize requestType=_requestType;
@property(nonatomic) int status; // @synthesize status=_status;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)placeResultAtIndex:(unsigned long long)arg1;
- (unsigned long long)placeResultsCount;
- (void)addPlaceResult:(id)arg1;
- (void)clearPlaceResults;
@property(readonly, nonatomic) _Bool hasGlobalResult;
@property(nonatomic) _Bool hasRequestType;
@property(nonatomic) _Bool hasStatus;
- (void)dealloc;
- (id)_disambiguationLabels;
- (id)initWithGeocoderPlace:(id)arg1;

@end

@interface GEOPDRating : PBCodable <NSCopying>
{
    double _maxScore;
    double _score;
    int _numRatingsUsedForScore;
    int _ratingType;
    struct {
        unsigned int maxScore:1;
        unsigned int score:1;
        unsigned int numRatingsUsedForScore:1;
        unsigned int ratingType:1;
    } _has;
}

+ (id)ratingForPlaceData:(id)arg1 type:(int)arg2;
@property(nonatomic) int numRatingsUsedForScore; // @synthesize numRatingsUsedForScore=_numRatingsUsedForScore;
@property(nonatomic) double score; // @synthesize score=_score;
@property(nonatomic) int ratingType; // @synthesize ratingType=_ratingType;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasNumRatingsUsedForScore;
@property(nonatomic) _Bool hasMaxScore;
@property(nonatomic) double maxScore; // @synthesize maxScore=_maxScore;
@property(nonatomic) _Bool hasScore;
@property(nonatomic) _Bool hasRatingType;

@end

@interface GEOPDRatingFilter : PBCodable <NSCopying>
{
}

- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;

@end

@interface GEOPDRawAttribute : PBCodable <NSCopying>
{
    NSString *_key;
    NSString *_value;
}

@property(retain, nonatomic) NSString *value; // @synthesize value=_value;
@property(retain, nonatomic) NSString *key; // @synthesize key=_key;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasValue;
@property(readonly, nonatomic) _Bool hasKey;
- (void)dealloc;

@end

@interface GEOPDRawAttributeFilter : PBCodable <NSCopying>
{
    NSMutableArray *_keys;
}

@property(retain, nonatomic) NSMutableArray *keys; // @synthesize keys=_keys;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)keyAtIndex:(unsigned long long)arg1;
- (unsigned long long)keysCount;
- (void)addKey:(id)arg1;
- (void)clearKeys;
- (void)dealloc;

@end

@interface GEOPDReverseGeocodingParameters : PBCodable <NSCopying>
{
    NSMutableArray *_locations;
    int _placeTypeLimit;
    struct {
        unsigned int placeTypeLimit:1;
    } _has;
}

@property(nonatomic) int placeTypeLimit; // @synthesize placeTypeLimit=_placeTypeLimit;
@property(retain, nonatomic) NSMutableArray *locations; // @synthesize locations=_locations;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasPlaceTypeLimit;
- (id)locationAtIndex:(unsigned long long)arg1;
- (unsigned long long)locationsCount;
- (void)addLocation:(id)arg1;
- (void)clearLocations;
- (void)dealloc;

@end

@interface GEOPDReverseGeocodingResult : PBCodable <NSCopying>
{
}

- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;

@end

@interface GEOPDReview : PBCodable <NSCopying>
{
    double _reviewTime;
    GEOPDRating *_rating;
    NSString *_reviewId;
    GEOPDUser *_reviewer;
    NSMutableArray *_snippets;
    struct {
        unsigned int reviewTime:1;
    } _has;
}

@property(retain, nonatomic) GEOPDRating *rating; // @synthesize rating=_rating;
@property(retain, nonatomic) NSString *reviewId; // @synthesize reviewId=_reviewId;
@property(retain, nonatomic) GEOPDUser *reviewer; // @synthesize reviewer=_reviewer;
@property(nonatomic) double reviewTime; // @synthesize reviewTime=_reviewTime;
@property(retain, nonatomic) NSMutableArray *snippets; // @synthesize snippets=_snippets;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasRating;
@property(readonly, nonatomic) _Bool hasReviewId;
@property(readonly, nonatomic) _Bool hasReviewer;
@property(nonatomic) _Bool hasReviewTime;
- (id)snippetAtIndex:(unsigned long long)arg1;
- (unsigned long long)snippetsCount;
- (void)addSnippet:(id)arg1;
- (void)clearSnippets;
- (void)dealloc;
- (id)bestLocalizedSnippet;

@end

@interface GEOPDReviewFilter : PBCodable <NSCopying>
{
    CDStruct_13868713 *_photoSizeFilters;
    unsigned long long _photoSizeFiltersCount;
    unsigned long long _photoSizeFiltersSpace;
}

- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (void)setPhotoSizeFilters:(CDStruct_13868713 *)arg1 count:(unsigned long long)arg2;
- (CDStruct_13868713)photoSizeFilterAtIndex:(unsigned long long)arg1;
- (void)addPhotoSizeFilter:(CDStruct_13868713)arg1;
- (void)clearPhotoSizeFilters;
@property(readonly, nonatomic) CDStruct_13868713 *photoSizeFilters;
@property(readonly, nonatomic) unsigned long long photoSizeFiltersCount;
- (void)dealloc;

@end

@interface GEOPDRoadAccessInfo : PBCodable <NSCopying>
{
    NSMutableArray *_roadAccessPoints;
}

+ (id)roadAccessInfoForPlaceData:(id)arg1;
@property(retain, nonatomic) NSMutableArray *roadAccessPoints; // @synthesize roadAccessPoints=_roadAccessPoints;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)roadAccessPointAtIndex:(unsigned long long)arg1;
- (unsigned long long)roadAccessPointsCount;
- (void)addRoadAccessPoint:(id)arg1;
- (void)clearRoadAccessPoints;
- (void)dealloc;

@end

@interface GEOPDRoadAccessInfoFilter : PBCodable <NSCopying>
{
}

- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;

@end

@interface GEOPDSearchParameters : PBCodable <NSCopying>
{
    unsigned int _maxResults;
    NSString *_searchString;
    int _sortOrder;
    NSData *_suggestionEntryMetadata;
    NSData *_suggestionMetadata;
    GEOPDViewportInfo *_viewportInfo;
    CDStruct_6c9bcd7c _has;
}

@property(retain, nonatomic) NSData *suggestionEntryMetadata; // @synthesize suggestionEntryMetadata=_suggestionEntryMetadata;
@property(retain, nonatomic) NSData *suggestionMetadata; // @synthesize suggestionMetadata=_suggestionMetadata;
@property(retain, nonatomic) GEOPDViewportInfo *viewportInfo; // @synthesize viewportInfo=_viewportInfo;
@property(retain, nonatomic) NSString *searchString; // @synthesize searchString=_searchString;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasSuggestionEntryMetadata;
@property(readonly, nonatomic) _Bool hasSuggestionMetadata;
@property(readonly, nonatomic) _Bool hasViewportInfo;
@property(readonly, nonatomic) _Bool hasSearchString;
@property(nonatomic) _Bool hasMaxResults;
@property(nonatomic) unsigned int maxResults; // @synthesize maxResults=_maxResults;
@property(nonatomic) _Bool hasSortOrder;
@property(nonatomic) int sortOrder; // @synthesize sortOrder=_sortOrder;
- (void)dealloc;
- (id)initWithSearchQuery:(id)arg1 entryMetadata:(id)arg2 metadata:(id)arg3 maxResults:(unsigned int)arg4 traits:(id)arg5;

@end

@interface GEOPDSearchResult : PBCodable <NSCopying>
{
    NSMutableArray *_disambiguationLabels;
    GEOMapRegion *_displayMapRegion;
}

@property(retain, nonatomic) NSMutableArray *disambiguationLabels; // @synthesize disambiguationLabels=_disambiguationLabels;
@property(retain, nonatomic) GEOMapRegion *displayMapRegion; // @synthesize displayMapRegion=_displayMapRegion;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)disambiguationLabelAtIndex:(unsigned long long)arg1;
- (unsigned long long)disambiguationLabelsCount;
- (void)addDisambiguationLabel:(id)arg1;
- (void)clearDisambiguationLabels;
@property(readonly, nonatomic) _Bool hasDisplayMapRegion;
- (void)dealloc;

@end

@interface GEOPDSearchSubstringDescriptor : PBCodable <NSCopying>
{
    int _beginIndex;
    int _endIndex;
    int _stringType;
}

@property(nonatomic) int endIndex; // @synthesize endIndex=_endIndex;
@property(nonatomic) int beginIndex; // @synthesize beginIndex=_beginIndex;
@property(nonatomic) int stringType; // @synthesize stringType=_stringType;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;

@end

@interface GEOPDSiriSearchParameters : PBCodable <NSCopying>
{
    GEOAddress *_address;
    NSMutableArray *_businessCategoryFilters;
    GEOPDIndexQueryNode *_indexFilter;
    unsigned int _maxResultCount;
    NSString *_searchString;
    NSMutableArray *_searchSubstringDescriptors;
    int _sortOrder;
    GEOPDViewportInfo *_viewportInfo;
    NSData *_zilchPoints;
    _Bool _isStrictMapRegion;
    _Bool _structuredSearch;
    struct {
        unsigned int maxResultCount:1;
        unsigned int sortOrder:1;
        unsigned int isStrictMapRegion:1;
        unsigned int structuredSearch:1;
    } _has;
}

@property(retain, nonatomic) GEOPDIndexQueryNode *indexFilter; // @synthesize indexFilter=_indexFilter;
@property(retain, nonatomic) NSMutableArray *searchSubstringDescriptors; // @synthesize searchSubstringDescriptors=_searchSubstringDescriptors;
@property(nonatomic) _Bool structuredSearch; // @synthesize structuredSearch=_structuredSearch;
@property(retain, nonatomic) NSData *zilchPoints; // @synthesize zilchPoints=_zilchPoints;
@property(nonatomic) _Bool isStrictMapRegion; // @synthesize isStrictMapRegion=_isStrictMapRegion;
@property(retain, nonatomic) NSMutableArray *businessCategoryFilters; // @synthesize businessCategoryFilters=_businessCategoryFilters;
@property(retain, nonatomic) GEOAddress *address; // @synthesize address=_address;
@property(retain, nonatomic) GEOPDViewportInfo *viewportInfo; // @synthesize viewportInfo=_viewportInfo;
@property(retain, nonatomic) NSString *searchString; // @synthesize searchString=_searchString;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasIndexFilter;
- (id)searchSubstringDescriptorAtIndex:(unsigned long long)arg1;
- (unsigned long long)searchSubstringDescriptorsCount;
- (void)addSearchSubstringDescriptor:(id)arg1;
- (void)clearSearchSubstringDescriptors;
@property(nonatomic) _Bool hasStructuredSearch;
@property(readonly, nonatomic) _Bool hasZilchPoints;
@property(nonatomic) _Bool hasIsStrictMapRegion;
- (id)businessCategoryFilterAtIndex:(unsigned long long)arg1;
- (unsigned long long)businessCategoryFiltersCount;
- (void)addBusinessCategoryFilter:(id)arg1;
- (void)clearBusinessCategoryFilters;
@property(readonly, nonatomic) _Bool hasAddress;
@property(readonly, nonatomic) _Bool hasViewportInfo;
@property(readonly, nonatomic) _Bool hasSearchString;
@property(nonatomic) _Bool hasMaxResultCount;
@property(nonatomic) unsigned int maxResultCount; // @synthesize maxResultCount=_maxResultCount;
@property(nonatomic) _Bool hasSortOrder;
@property(nonatomic) int sortOrder; // @synthesize sortOrder=_sortOrder;
- (void)dealloc;

@end

@interface GEOPDSiriSearchResult : PBCodable <NSCopying>
{
    NSMutableArray *_disambiguationLabels;
}

@property(retain, nonatomic) NSMutableArray *disambiguationLabels; // @synthesize disambiguationLabels=_disambiguationLabels;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)disambiguationLabelAtIndex:(unsigned long long)arg1;
- (unsigned long long)disambiguationLabelsCount;
- (void)addDisambiguationLabel:(id)arg1;
- (void)clearDisambiguationLabels;
- (void)dealloc;

@end

@interface GEOPDSource : PBCodable <NSCopying>
{
    int _resultProviderId;
    NSString *_sourceId;
    NSString *_version;
    CDStruct_08086d5c _has;
}

@property(retain, nonatomic) NSString *version; // @synthesize version=_version;
@property(retain, nonatomic) NSString *sourceId; // @synthesize sourceId=_sourceId;
@property(nonatomic) int resultProviderId; // @synthesize resultProviderId=_resultProviderId;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasVersion;
@property(readonly, nonatomic) _Bool hasSourceId;
@property(nonatomic) _Bool hasResultProviderId;
- (void)dealloc;

@end

@interface GEOPDStyleAttribute : PBCodable <NSCopying>
{
    unsigned int _key;
    unsigned int _value;
    struct {
        unsigned int key:1;
        unsigned int value:1;
    } _has;
}

@property(nonatomic) unsigned int value; // @synthesize value=_value;
@property(nonatomic) unsigned int key; // @synthesize key=_key;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasValue;
@property(nonatomic) _Bool hasKey;

@end

@interface GEOPDStyleAttributes : PBCodable <NSCopying>
{
    unsigned long long _customIconId;
    NSMutableArray *_attributes;
    struct {
        unsigned int customIconId:1;
    } _has;
}

@property(nonatomic) unsigned long long customIconId; // @synthesize customIconId=_customIconId;
@property(retain, nonatomic) NSMutableArray *attributes; // @synthesize attributes=_attributes;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasCustomIconId;
- (id)attributeAtIndex:(unsigned long long)arg1;
- (unsigned long long)attributesCount;
- (void)addAttribute:(id)arg1;
- (void)clearAttributes;
- (void)dealloc;

@end

@interface GEOPDStyleAttributesFilter : PBCodable <NSCopying>
{
}

- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;

@end

@interface GEOPDUser : PBCodable <NSCopying>
{
    GEOPDPhoto *_image;
    NSString *_name;
}

@property(retain, nonatomic) GEOPDPhoto *image; // @synthesize image=_image;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasImage;
@property(readonly, nonatomic) _Bool hasName;
- (void)dealloc;

@end

@interface GEOPDViewportInfo : PBCodable <NSCopying>
{
    int _mapMode;
    GEOMapRegion *_mapRegion;
    unsigned int _timeSinceMapViewportChanged;
    struct {
        unsigned int mapMode:1;
        unsigned int timeSinceMapViewportChanged:1;
    } _has;
}

+ (id)viewportInfoForTraits:(id)arg1;
@property(nonatomic) int mapMode; // @synthesize mapMode=_mapMode;
@property(nonatomic) unsigned int timeSinceMapViewportChanged; // @synthesize timeSinceMapViewportChanged=_timeSinceMapViewportChanged;
@property(retain, nonatomic) GEOMapRegion *mapRegion; // @synthesize mapRegion=_mapRegion;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasMapMode;
@property(nonatomic) _Bool hasTimeSinceMapViewportChanged;
@property(readonly, nonatomic) _Bool hasMapRegion;
- (void)dealloc;
- (id)initWithTraits:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface GEOPersistenceManager : NSObject
{
}

+ (_Bool)phoneNumberMuidMappingFileExists;
+ (_Bool)writePhoneNumberMuidMappingForMapping:(id)arg1 uniquePhoneNumbers:(id)arg2 error:(id *)arg3;
+ (_Bool)readPhoneNumberMuidMapping:(id *)arg1 uniquePhoneNumbers:(id *)arg2 version:(id *)arg3 error:(id *)arg4;
+ (_Bool)readPhoneNumberMuidMapping:(id *)arg1 uniquePhoneNumbers:(id *)arg2 error:(id *)arg3;
+ (_Bool)createMuidMappingDirectoryWithError:(id *)arg1;

@end

__attribute__((visibility("hidden")))
@interface GEOPhoneNumberMUIDMapper : NSObject
{
    NSObject<OS_dispatch_queue> *_writeQ;
    NSMutableArray *_uniquePhoneNumbers;
    NSMutableDictionary *_phoneNumberMuidMapping;
}

- (void)_save;
- (void)_pruneToSize:(unsigned long long)arg1;
- (void)setMuid:(unsigned long long)arg1 providerId:(int)arg2 forPhoneNumber:(unsigned long long)arg3;
- (_Bool)getMuid:(out unsigned long long *)arg1 providerId:(out int *)arg2 forPhoneNumber:(unsigned long long)arg3;
- (void)dealloc;
- (id)initWithMappingFilePath:(id)arg1;

@end

@interface GEOPhoto : PBCodable <NSCopying>
{
    NSMutableArray *_photoInfos;
    int _photoType;
    NSString *_uid;
    CDStruct_86c1f53f _has;
}

@property(retain, nonatomic) NSString *uid; // @synthesize uid=_uid;
@property(retain, nonatomic) NSMutableArray *photoInfos; // @synthesize photoInfos=_photoInfos;
@property(nonatomic) int photoType; // @synthesize photoType=_photoType;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasUid;
- (id)photoInfoAtIndex:(unsigned long long)arg1;
- (unsigned long long)photoInfosCount;
- (void)addPhotoInfo:(id)arg1;
- (void)clearPhotoInfos;
@property(nonatomic) _Bool hasPhotoType;
- (void)dealloc;
- (id)initWithPlaceDataPhoto:(id)arg1;

@end

@interface GEOPhotoInfo : PBCodable <NSCopying>
{
    int _size;
    NSString *_url;
    struct {
        unsigned int size:1;
    } _has;
}

@property(retain, nonatomic) NSString *url; // @synthesize url=_url;
@property(nonatomic) int size; // @synthesize size=_size;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasUrl;
@property(nonatomic) _Bool hasSize;
- (void)dealloc;
- (id)initWithPlaceDataPhotoContent:(id)arg1;

@end

@interface GEOPhotoOptions : PBCodable <NSCopying>
{
    CDStruct_95bda58d _photoSizes;
    int _maxPhotos;
    int _photoType;
    CDStruct_86c1f53f _has;
}

@property(nonatomic) int photoType; // @synthesize photoType=_photoType;
@property(nonatomic) int maxPhotos; // @synthesize maxPhotos=_maxPhotos;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (void)setPhotoSizes:(int *)arg1 count:(unsigned long long)arg2;
- (int)photoSizeAtIndex:(unsigned long long)arg1;
- (void)addPhotoSize:(int)arg1;
- (void)clearPhotoSizes;
@property(readonly, nonatomic) int *photoSizes;
@property(readonly, nonatomic) unsigned long long photoSizesCount;
@property(nonatomic) _Bool hasPhotoType;
- (void)dealloc;

@end

@interface GEOPlace : PBCodable <GEOURLSerializable, NSCopying>
{
    double _area;
    long long _geoId;
    long long _uID;
    GEOAddress *_address;
    int _addressGeocodeAccuracy;
    NSMutableArray *_business;
    GEOLatLng *_center;
    NSMutableArray *_entryPoints;
    NSString *_inputLanguage;
    int _localSearchProviderID;
    GEOMapRegion *_mapRegion;
    NSString *_name;
    GEOAddress *_phoneticAddress;
    NSString *_phoneticLocaleIdentifier;
    NSString *_phoneticName;
    NSString *_spokenAddress;
    NSString *_spokenName;
    GEOStructuredAddress *_spokenStructuredAddress;
    GEOTimezone *_timezone;
    int _type;
    _Bool _isDisputed;
    struct {
        unsigned int area:1;
        unsigned int geoId:1;
        unsigned int uID:1;
        unsigned int addressGeocodeAccuracy:1;
        unsigned int localSearchProviderID:1;
        unsigned int type:1;
        unsigned int isDisputed:1;
    } _has;
}

+ (id)_placesFromURL:(id)arg1 hasCurrentLocation:(_Bool *)arg2 currentLocationIndex:(unsigned long long *)arg3 options:(id *)arg4;
+ (id)_placesFromDirectionsAction:(id)arg1 hasCurrentLocation:(_Bool *)arg2 currentLocationIndex:(unsigned long long *)arg3 options:(id *)arg4;
+ (id)_placesFromShowAction:(id)arg1 hasCurrentLocation:(_Bool *)arg2 currentLocationIndex:(unsigned long long *)arg3 options:(id *)arg4;
+ (id)_placesFromPresentAction:(id)arg1 hasCurrentLocation:(_Bool *)arg2 currentLocationIndex:(unsigned long long *)arg3 options:(id *)arg4;
+ (id)_urlToPresentDirectionsForPlaces:(id)arg1 options:(id)arg2;
+ (id)_urlToPresentDirectionsForItems:(id)arg1 options:(id)arg2;
+ (id)_urlForDirectionsFromOrigin:(id)arg1 toDestination:(id)arg2 options:(id)arg3;
+ (id)_urlToPresentCurrentLocationAndPlaces:(id)arg1 currentLocationIndex:(unsigned long long)arg2 options:(id)arg3;
+ (id)_urlToPresentPlaces:(id)arg1 options:(id)arg2;
+ (id)_urlToPresentCurrentLocationWithOptions:(id)arg1;
+ (id)_urlToPresentAction:(id)arg1 present:(id)arg2;
+ (id)_urlToShowCurrentLocationWithOptions:(id)arg1;
+ (id)_urlToShowCurrentLocationAndPlaces:(id)arg1 currentLocationIndex:(unsigned long long)arg2 options:(id)arg3;
+ (id)_urlToShowPlaces:(id)arg1 options:(id)arg2;
+ (id)_urlToShowURLRepresentations:(id)arg1 options:(id)arg2;
+ (id)_urlForAction:(id)arg1 rison:(id)arg2;
+ (id)_urlRepresentationForCurrentLocation;
+ (id)placeForPlaceData:(id)arg1;
@property(nonatomic) long long geoId; // @synthesize geoId=_geoId;
@property(retain, nonatomic) GEOTimezone *timezone; // @synthesize timezone=_timezone;
@property(retain, nonatomic) GEOStructuredAddress *spokenStructuredAddress; // @synthesize spokenStructuredAddress=_spokenStructuredAddress;
@property(nonatomic) double area; // @synthesize area=_area;
@property(retain, nonatomic) NSString *spokenAddress; // @synthesize spokenAddress=_spokenAddress;
@property(retain, nonatomic) NSString *spokenName; // @synthesize spokenName=_spokenName;
@property(nonatomic) int localSearchProviderID; // @synthesize localSearchProviderID=_localSearchProviderID;
@property(retain, nonatomic) NSMutableArray *entryPoints; // @synthesize entryPoints=_entryPoints;
@property(nonatomic) int addressGeocodeAccuracy; // @synthesize addressGeocodeAccuracy=_addressGeocodeAccuracy;
@property(retain, nonatomic) NSMutableArray *business; // @synthesize business=_business;
@property(retain, nonatomic) GEOLatLng *center; // @synthesize center=_center;
@property(retain, nonatomic) GEOAddress *phoneticAddress; // @synthesize phoneticAddress=_phoneticAddress;
@property(retain, nonatomic) NSString *phoneticName; // @synthesize phoneticName=_phoneticName;
@property(retain, nonatomic) GEOAddress *address; // @synthesize address=_address;
@property(retain, nonatomic) GEOMapRegion *mapRegion; // @synthesize mapRegion=_mapRegion;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
@property(nonatomic) int type; // @synthesize type=_type;
@property(nonatomic) long long uID; // @synthesize uID=_uID;
- (void)mergeFrom:(id)arg1;
@property(readonly) unsigned long long hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
@property(readonly, copy) NSString *description;
@property(nonatomic) _Bool hasGeoId;
@property(readonly, nonatomic) _Bool hasTimezone;
@property(readonly, nonatomic) _Bool hasSpokenStructuredAddress;
@property(nonatomic) _Bool hasArea;
@property(readonly, nonatomic) _Bool hasSpokenAddress;
@property(readonly, nonatomic) _Bool hasSpokenName;
@property(nonatomic) _Bool hasLocalSearchProviderID;
@property(nonatomic) _Bool hasIsDisputed;
@property(nonatomic) _Bool isDisputed; // @synthesize isDisputed=_isDisputed;
- (id)entryPointAtIndex:(unsigned long long)arg1;
- (unsigned long long)entryPointsCount;
- (void)addEntryPoint:(id)arg1;
- (void)clearEntryPoints;
@property(nonatomic) _Bool hasAddressGeocodeAccuracy;
- (id)businessAtIndex:(unsigned long long)arg1;
- (unsigned long long)businessCount;
- (void)addBusiness:(id)arg1;
- (void)clearBusiness;
@property(readonly, nonatomic) _Bool hasCenter;
@property(readonly, nonatomic) _Bool hasPhoneticAddress;
@property(readonly, nonatomic) _Bool hasPhoneticName;
@property(readonly, nonatomic) _Bool hasAddress;
@property(readonly, nonatomic) _Bool hasMapRegion;
@property(readonly, nonatomic) _Bool hasName;
@property(nonatomic) _Bool hasType;
@property(nonatomic) _Bool hasUID;
- (void)dealloc;
- (id)bestName;
- (id)arrivalMapRegionForTransportType:(int)arg1;
- (id)arrivalMapRegion;
- (double)radialDistance;
- (CDStruct_c3b9c2ee)coordinate;
- (id)addressDictionary;
@property(readonly, nonatomic) GEOBusiness *firstBusiness;
- (id)initWithLatitude:(double)arg1 longitude:(double)arg2;
- (id)initWithLatitude:(double)arg1 longitude:(double)arg2 addressDictionary:(id)arg3;
@property(retain, nonatomic) NSString *phoneticLocaleIdentifier;
@property(readonly, nonatomic) _Bool hasPhoneticLocaleIdentifier;
@property(retain, nonatomic) NSString *inputLanguage;
@property(readonly, nonatomic) _Bool hasInputLanguage;
- (id)_urlToPresentDirectionsFromCurrentLocationWithOptions:(id)arg1;
- (id)_urlToPresentDirectionsToCurrentLocationWithOptions:(id)arg1;
- (id)_urlToPresentDirectionsFromPlace:(id)arg1 options:(id)arg2;
- (id)_urlToPresentDirectionsToPlace:(id)arg1 options:(id)arg2;
- (id)_urlForDirectionsFromCurrentLocationWithOptions:(id)arg1;
- (id)_urlForDirectionsToCurrentLocationWithOptions:(id)arg1;
- (id)_urlForDirectionsFromPlace:(id)arg1 options:(id)arg2;
- (id)_urlForDirectionsToPlace:(id)arg1 options:(id)arg2;
- (id)_urlToPresentWithOptions:(id)arg1;
- (id)_urlToShowWithOptions:(id)arg1;
- (_Bool)_isEquivalentURLRepresentationTo:(id)arg1;
- (id)urlRepresentation;
- (id)initWithUrlRepresentation:(id)arg1;
- (id)geoMapItem;
- (id)initWithPlaceInfo:(id)arg1 entity:(id)arg2 address:(id)arg3 bounds:(id)arg4 roadAccessInfo:(id)arg5;
- (id)initWithLocation:(id)arg1 addressDictionary:(id)arg2 name:(id)arg3 businessURL:(id)arg4 phoneNumber:(id)arg5 muid:(unsigned long long)arg6 attributionID:(id)arg7 sampleSizeForUserRatingScore:(unsigned int)arg8 normalizedUserRatingScore:(float)arg9;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

@interface GEOPlaceActionDetails : PBCodable <NSCopying>
{
    unsigned long long _animationID;
    unsigned long long _businessID;
    long long _placeID;
    double _searchResponseRelativeTimestamp;
    int _localSearchProviderID;
    int _resultIndex;
    struct {
        unsigned int animationID:1;
        unsigned int businessID:1;
        unsigned int placeID:1;
        unsigned int searchResponseRelativeTimestamp:1;
        unsigned int localSearchProviderID:1;
        unsigned int resultIndex:1;
    } _has;
}

+ (id)actionDetailsWithMapItem:(id)arg1 timestamp:(double)arg2 resultIndex:(int)arg3;
@property(nonatomic) unsigned long long animationID; // @synthesize animationID=_animationID;
@property(nonatomic) int resultIndex; // @synthesize resultIndex=_resultIndex;
@property(nonatomic) double searchResponseRelativeTimestamp; // @synthesize searchResponseRelativeTimestamp=_searchResponseRelativeTimestamp;
@property(nonatomic) int localSearchProviderID; // @synthesize localSearchProviderID=_localSearchProviderID;
@property(nonatomic) long long placeID; // @synthesize placeID=_placeID;
@property(nonatomic) unsigned long long businessID; // @synthesize businessID=_businessID;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasAnimationID;
@property(nonatomic) _Bool hasResultIndex;
@property(nonatomic) _Bool hasSearchResponseRelativeTimestamp;
@property(nonatomic) _Bool hasLocalSearchProviderID;
@property(nonatomic) _Bool hasPlaceID;
@property(nonatomic) _Bool hasBusinessID;
- (id)initWithMapItem:(id)arg1 relativeTimestamp:(double)arg2 resultIndex:(int)arg3;

@end

@interface GEOPlaceCardRequester : NSObject <GEOPlaceDataProxy>
{
    id <GEOPlaceDataProxy> _proxy;
}

+ (id)sharedRequester;
+ (void)useRemoteProxy;
+ (void)useLocalProxy;
- (void)shrinkToSize:(unsigned long long)arg1 finished:(CDUnknownBlockType)arg2;
- (void)calculateFreeableSpaceWithHandler:(CDUnknownBlockType)arg1;
- (void)applyRAPUpdatedMapItems:(id)arg1;
- (void)performPlaceDataRequest:(id)arg1 traits:(id)arg2 requesterHandler:(CDUnknownBlockType)arg3;
- (void)performPlaceDataRequest:(id)arg1 traits:(id)arg2 networkActivity:(CDUnknownBlockType)arg3 requesterHandler:(CDUnknownBlockType)arg4;
- (void)trackPlaceData:(id)arg1;
- (void)requestPhoneNumbers:(id)arg1 allowCellularDataForLookup:(_Bool)arg2 traits:(id)arg3 networkActivity:(CDUnknownBlockType)arg4 requesterHandler:(CDUnknownBlockType)arg5;
- (void)requestMUIDs:(id)arg1 includeETA:(_Bool)arg2 traits:(id)arg3 networkActivity:(CDUnknownBlockType)arg4 requesterHandler:(CDUnknownBlockType)arg5;
- (void)fetchAllCacheEntriesWithRequesterHandler:(CDUnknownBlockType)arg1;
- (void)requestPhoneNumbers:(id)arg1 allowCellularDataForLookup:(_Bool)arg2 traits:(id)arg3 requesterHandler:(CDUnknownBlockType)arg4;
- (void)requestMUIDs:(id)arg1 includeETA:(_Bool)arg2 traits:(id)arg3 requesterHandler:(CDUnknownBlockType)arg4;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GEOPlaceDataCache : NSObject
{
    id <_GEOPlaceDataCacheProxy> _proxyCache;
}

- (void)shrinkToSize:(unsigned long long)arg1 finished:(CDUnknownBlockType)arg2;
- (void)calculateFreeableSpaceWithHandler:(CDUnknownBlockType)arg1;
- (void)deletePhoneNumberMapping;
- (void)evictAllEntries;
- (void)evictPlaceDataForKey:(struct _GEOTileKey)arg1;
- (void)evictPlaceDataForMUID:(unsigned long long)arg1;
- (void)setPlaceData:(id)arg1 forKey:(struct _GEOTileKey)arg2;
- (void)setPlaceData:(id)arg1 forMUID:(unsigned long long)arg2;
- (unsigned long long)muidForPhoneNumber:(unsigned long long)arg1;
- (id)placeDataForKey:(struct _GEOTileKey)arg1;
- (id)placeDataForMUID:(unsigned long long)arg1;
- (id)allCacheEntries;
- (id)placeDataForPhoneNumber:(unsigned long long)arg1;
- (void)dealloc;
- (id)initWithTransientCacheType;
- (id)initWithCacheType:(long long)arg1 atPath:(id)arg2;

@end

@interface GEOPlaceDataCacheFeedback : PBCodable <NSCopying>
{
    NSString *_bundleIdentifier;
    GEOPDPlaceRequest *_request;
}

@property(retain, nonatomic) NSString *bundleIdentifier; // @synthesize bundleIdentifier=_bundleIdentifier;
@property(retain, nonatomic) GEOPDPlaceRequest *request; // @synthesize request=_request;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasBundleIdentifier;
@property(readonly, nonatomic) _Bool hasRequest;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface GEOPlaceDataCacheRegister : NSObject
{
    NSMutableDictionary *_caches;
}

- (void)evictAllEntries;
- (void)deletePhoneNumberMapping;
- (void)shrinkToSize:(unsigned long long)arg1 finished:(CDUnknownBlockType)arg2;
- (void)calculateFreeableSpaceWithHandler:(CDUnknownBlockType)arg1;
- (id)allCacheEntries;
- (id)cacheForProviderID:(int)arg1;
- (void)dealloc;
- (id)init;

@end

@interface GEOPlaceDataCacheUsageFeedbackCollection : PBCodable <NSCopying>
{
    NSMutableArray *_cacheFeedbacks;
}

@property(retain, nonatomic) NSMutableArray *cacheFeedbacks; // @synthesize cacheFeedbacks=_cacheFeedbacks;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)cacheFeedbackAtIndex:(unsigned long long)arg1;
- (unsigned long long)cacheFeedbacksCount;
- (void)addCacheFeedback:(id)arg1;
- (void)clearCacheFeedbacks;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface GEOPlaceDataDBReader : GEODBReader
{
    struct sqlite3_stmt *_queryPhoneNumber;
    struct sqlite3_stmt *_queryAllPlaceDataEntries;
    struct sqlite3_stmt *_queryAllPhoneNumberEntries;
}

- (id)_placeCardDataForMuid:(unsigned long long)arg1;
- (id)allCacheEntries;
- (unsigned long long)muidForPhoneNumber:(unsigned long long)arg1;
- (id)placeDataForPhoneNumber:(unsigned long long)arg1;
- (id)placeDataForKey:(struct _GEOTileKey)arg1;
- (id)placeDataForMUID:(unsigned long long)arg1;
- (void)_openDB;

@end

__attribute__((visibility("hidden")))
@interface GEOPlaceDataDBWriter : GEODBWriter
{
    struct sqlite3_stmt *_insertPhoneNumber;
    struct sqlite3_stmt *_insertKeyString;
    struct sqlite3_stmt *_deletePhoneNumberMappingStatement;
    struct sqlite3_stmt *_deleteKeyStringStatement;
    _Bool _canCreateDebugTable;
}

- (void)performTableCreationTasks;
- (void)performStatementPreparationTasks;
- (void)_createKeyStringTable;
- (void)_setMUID:(id)arg1 forKey:(struct _GEOTileKey)arg2;
- (void)_createPhoneNumberTable;
- (void)_setMUID:(unsigned long long)arg1 forPhoneNumber:(long long)arg2;
- (void)_openIfNecessary;
- (void)_populateDBKey:(struct _GEOTileKey *)arg1 forMUID:(unsigned long long)arg2;
- (void)_deleteKeystringForKey:(struct _GEOTileKey)arg1;
- (void)deletePhoneNumberMapping;
- (void)deletePlaceDataForMUID:(unsigned long long)arg1;
- (void)deletePlaceDataForKey:(struct _GEOTileKey)arg1;
- (void)setPlaceData:(id)arg1 forMUID:(unsigned long long)arg2;
- (void)setPlaceData:(id)arg1 forKey:(struct _GEOTileKey)arg2;
- (void)dealloc;
- (id)initWithPath:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface GEOPlaceDataLocalProxy : NSObject <GEOPlaceDataProxy>
{
    NSMapTable *_pendingRequests;
    NSLock *_pendingRequestsLock;
    GEOPlaceDataCacheRegister *_cacheRegister;
    GEOPhoneNumberMUIDMapper *_phoneNumberMapper;
    NSMutableSet *_requestsInProgress;
    NSMutableOrderedSet *_placeHashes;
}

- (void)_privacyAndLocationSettingsResetObserver:(id)arg1;
- (void)_callHistoryRecentsClearedObserver:(id)arg1;
- (void)_resetPhoneNumberMapper;
- (void)shrinkToSize:(unsigned long long)arg1 finished:(CDUnknownBlockType)arg2;
- (void)calculateFreeableSpaceWithHandler:(CDUnknownBlockType)arg1;
- (void)applyRAPUpdatedMapItems:(id)arg1;
- (void)performPlaceDataRequest:(id)arg1 traits:(id)arg2 requesterHandler:(CDUnknownBlockType)arg3;
- (void)_cachePlaceData:(id)arg1 forKey:(struct _GEOTileKey)arg2 shouldOptimizeWritesToDisk:(_Bool)arg3;
- (id)_cachedPlaceForForwardGeocodeRequest:(id)arg1;
- (void)_trackPlaceData:(id)arg1 forGeocodingParameters:(id)arg2;
- (void)trackPlaceData:(id)arg1;
- (void)fetchAllCacheEntriesWithRequesterHandler:(CDUnknownBlockType)arg1;
- (long long)_invalidationStateForPlace:(id)arg1;
- (void)requestPhoneNumbers:(id)arg1 allowCellularDataForLookup:(_Bool)arg2 traits:(id)arg3 requesterHandler:(CDUnknownBlockType)arg4;
- (void)requestMUIDs:(id)arg1 includeETA:(_Bool)arg2 traits:(id)arg3 requesterHandler:(CDUnknownBlockType)arg4;
- (void)cancelRequest:(id)arg1;
- (void)startRequest:(id)arg1 traits:(id)arg2 finished:(CDUnknownBlockType)arg3 networkActivity:(CDUnknownBlockType)arg4 error:(CDUnknownBlockType)arg5;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GEOPlaceDataProvider : NSObject
{
    _Bool _isLoading;
    CDUnknownBlockType _finishedHandler;
    CDUnknownBlockType _errorHandler;
}

@property(copy, nonatomic) CDUnknownBlockType errorHandler; // @synthesize errorHandler=_errorHandler;
@property(copy, nonatomic) CDUnknownBlockType finishedHandler; // @synthesize finishedHandler=_finishedHandler;
@property(nonatomic) _Bool isLoading; // @synthesize isLoading=_isLoading;
- (void)providerDidCancel;
- (void)providerReceivedErrorCode:(long long)arg1 userInfo:(id)arg2;
- (void)providerReceivedResponse:(id)arg1;
- (void)cancelProviderRequest;
- (void)startProviderWithRequest:(id)arg1 appIdentifier:(id)arg2;
- (void)cancelRequest;
- (void)startRequest:(id)arg1 appIdentifier:(id)arg2 finished:(CDUnknownBlockType)arg3 error:(CDUnknownBlockType)arg4;
- (void)requestCompleted;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface GEOPlaceDataRemoteProxy : NSObject <GEOPlaceDataProxy>
{
    NSObject<OS_dispatch_queue> *_requestQ;
}

- (void)applyRAPUpdatedMapItems:(id)arg1;
- (void)shrinkToSize:(unsigned long long)arg1 finished:(CDUnknownBlockType)arg2;
- (void)calculateFreeableSpaceWithHandler:(CDUnknownBlockType)arg1;
- (void)performPlaceDataRequest:(id)arg1 traits:(id)arg2 requesterHandler:(CDUnknownBlockType)arg3;
- (void)trackPlaceData:(id)arg1;
- (void)requestPhoneNumbers:(id)arg1 allowCellularDataForLookup:(_Bool)arg2 traits:(id)arg3 requesterHandler:(CDUnknownBlockType)arg4;
- (void)fetchAllCacheEntriesWithRequesterHandler:(CDUnknownBlockType)arg1;
- (void)requestMUIDs:(id)arg1 includeETA:(_Bool)arg2 traits:(id)arg3 requesterHandler:(CDUnknownBlockType)arg4;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GEOServiceRequester : NSObject
{
    NSMapTable *_pendingRequests;
    NSLock *_pendingRequestsLock;
}

+ (id)_serviceTypeNumber;
+ (_Bool)shouldAttributeData;
+ (void)setAttributeData;
+ (id)_debugRequestName;
+ (unsigned long long)_urlType;
- (id)_validateResponse:(id)arg1;
- (void)_cancelRequest:(id)arg1;
- (void)_startWithRequest:(id)arg1 traits:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface GEOPlaceDataRequester : GEOServiceRequester
{
}

+ (id)sharedInstance;
+ (id)_serviceTypeNumber;
+ (unsigned long long)_urlType;
- (id)_validateResponse:(id)arg1;
- (void)cancelRequest:(id)arg1;
- (void)startWithRequest:(id)arg1 traits:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;

@end

@interface GEOPlaceResult : PBCodable <NSCopying>
{
    unsigned long long _flyoverTourMuid;
    NSMutableArray *_additionalPlaces;
    int _cacheControl;
    NSMutableArray *_matchedTokens;
    NSMutableArray *_namedFeatures;
    GEOPlace *_place;
    NSString *_quad;
    GEOPlaceSearchRequest *_revgeoRequestTemplate;
    NSString *_suggestedQuery;
    GEOAddress *_tokenEntity;
    unsigned int _travelDistance;
    unsigned int _travelTime;
    NSMutableArray *_unmatchedStrings;
    struct {
        unsigned int flyoverTourMuid:1;
        unsigned int cacheControl:1;
        unsigned int travelDistance:1;
        unsigned int travelTime:1;
    } _has;
}

@property(nonatomic) int cacheControl; // @synthesize cacheControl=_cacheControl;
@property(nonatomic) unsigned long long flyoverTourMuid; // @synthesize flyoverTourMuid=_flyoverTourMuid;
@property(retain, nonatomic) NSMutableArray *matchedTokens; // @synthesize matchedTokens=_matchedTokens;
@property(retain, nonatomic) GEOPlaceSearchRequest *revgeoRequestTemplate; // @synthesize revgeoRequestTemplate=_revgeoRequestTemplate;
@property(retain, nonatomic) NSMutableArray *namedFeatures; // @synthesize namedFeatures=_namedFeatures;
@property(retain, nonatomic) NSMutableArray *unmatchedStrings; // @synthesize unmatchedStrings=_unmatchedStrings;
@property(retain, nonatomic) NSString *quad; // @synthesize quad=_quad;
@property(retain, nonatomic) GEOAddress *tokenEntity; // @synthesize tokenEntity=_tokenEntity;
@property(nonatomic) unsigned int travelDistance; // @synthesize travelDistance=_travelDistance;
@property(nonatomic) unsigned int travelTime; // @synthesize travelTime=_travelTime;
@property(retain, nonatomic) NSString *suggestedQuery; // @synthesize suggestedQuery=_suggestedQuery;
@property(retain, nonatomic) NSMutableArray *additionalPlaces; // @synthesize additionalPlaces=_additionalPlaces;
@property(retain, nonatomic) GEOPlace *place; // @synthesize place=_place;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasCacheControl;
@property(nonatomic) _Bool hasFlyoverTourMuid;
- (id)matchedTokenAtIndex:(unsigned long long)arg1;
- (unsigned long long)matchedTokensCount;
- (void)addMatchedToken:(id)arg1;
- (void)clearMatchedTokens;
@property(readonly, nonatomic) _Bool hasRevgeoRequestTemplate;
- (id)namedFeatureAtIndex:(unsigned long long)arg1;
- (unsigned long long)namedFeaturesCount;
- (void)addNamedFeature:(id)arg1;
- (void)clearNamedFeatures;
- (id)unmatchedStringAtIndex:(unsigned long long)arg1;
- (unsigned long long)unmatchedStringsCount;
- (void)addUnmatchedString:(id)arg1;
- (void)clearUnmatchedStrings;
@property(readonly, nonatomic) _Bool hasQuad;
@property(readonly, nonatomic) _Bool hasTokenEntity;
@property(nonatomic) _Bool hasTravelDistance;
@property(nonatomic) _Bool hasTravelTime;
@property(readonly, nonatomic) _Bool hasSuggestedQuery;
- (id)additionalPlaceAtIndex:(unsigned long long)arg1;
- (unsigned long long)additionalPlacesCount;
- (void)addAdditionalPlace:(id)arg1;
- (void)clearAdditionalPlaces;
- (void)dealloc;
- (id)geoMapItem;

@end

@interface GEOPlaceSearchFeedbackCollection : PBCodable <NSCopying>
{
    CDStruct_612aec5b _sessionID;
    unsigned long long _businessID;
    long long _placeID;
    NSMutableArray *_actionCaptures;
    int _localSearchProviderID;
    struct {
        unsigned int sessionID:1;
        unsigned int businessID:1;
        unsigned int placeID:1;
        unsigned int localSearchProviderID:1;
    } _has;
}

@property(nonatomic) int localSearchProviderID; // @synthesize localSearchProviderID=_localSearchProviderID;
@property(retain, nonatomic) NSMutableArray *actionCaptures; // @synthesize actionCaptures=_actionCaptures;
@property(nonatomic) long long placeID; // @synthesize placeID=_placeID;
@property(nonatomic) unsigned long long businessID; // @synthesize businessID=_businessID;
@property(nonatomic) CDStruct_612aec5b sessionID; // @synthesize sessionID=_sessionID;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasLocalSearchProviderID;
- (id)actionCaptureAtIndex:(unsigned long long)arg1;
- (unsigned long long)actionCapturesCount;
- (void)addActionCapture:(id)arg1;
- (void)clearActionCaptures;
@property(nonatomic) _Bool hasPlaceID;
@property(nonatomic) _Bool hasBusinessID;
@property(nonatomic) _Bool hasSessionID;
- (void)dealloc;

@end

@interface GEOPlaceSearchFeedbackRequest : PBRequest <NSCopying>
{
    CDStruct_612aec5b _sessionGUID;
    long long _businessID;
    double _timestamp;
    int _feedbackType;
    int _localSearchProviderID;
    int _numberOfResults;
    int _positionInResults;
    int _sequenceNumber;
    struct {
        unsigned int sessionGUID:1;
        unsigned int businessID:1;
        unsigned int timestamp:1;
        unsigned int feedbackType:1;
        unsigned int localSearchProviderID:1;
        unsigned int numberOfResults:1;
        unsigned int positionInResults:1;
        unsigned int sequenceNumber:1;
    } _has;
}

@property(nonatomic) int localSearchProviderID; // @synthesize localSearchProviderID=_localSearchProviderID;
@property(nonatomic) int sequenceNumber; // @synthesize sequenceNumber=_sequenceNumber;
@property(nonatomic) int positionInResults; // @synthesize positionInResults=_positionInResults;
@property(nonatomic) int numberOfResults; // @synthesize numberOfResults=_numberOfResults;
@property(nonatomic) int feedbackType; // @synthesize feedbackType=_feedbackType;
@property(nonatomic) long long businessID; // @synthesize businessID=_businessID;
@property(nonatomic) CDStruct_612aec5b sessionGUID; // @synthesize sessionGUID=_sessionGUID;
@property(nonatomic) double timestamp; // @synthesize timestamp=_timestamp;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (Class)responseClass;
- (unsigned int)requestTypeCode;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasLocalSearchProviderID;
@property(nonatomic) _Bool hasSequenceNumber;
@property(nonatomic) _Bool hasPositionInResults;
@property(nonatomic) _Bool hasNumberOfResults;
@property(nonatomic) _Bool hasFeedbackType;
@property(nonatomic) _Bool hasBusinessID;
@property(nonatomic) _Bool hasSessionGUID;
@property(nonatomic) _Bool hasTimestamp;

@end

@interface GEOPlaceSearchFeedbackResponse : PBCodable <NSCopying>
{
}

- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;

@end

@interface GEOPlaceSearchResponse : PBCodable <NSCopying>
{
    double _turnaroundTime;
    GEOMapRegion *_mapRegion;
    NSMutableArray *_namedFeatures;
    NSMutableArray *_placeResults;
    int _status;
    int _statusCodeInfo;
    NSMutableArray *_suggestionEntryLists;
    NSData *_suggestionMetadata;
    struct {
        unsigned int turnaroundTime:1;
        unsigned int statusCodeInfo:1;
    } _has;
}

@property(nonatomic) double turnaroundTime; // @synthesize turnaroundTime=_turnaroundTime;
@property(nonatomic) int statusCodeInfo; // @synthesize statusCodeInfo=_statusCodeInfo;
@property(retain, nonatomic) NSMutableArray *namedFeatures; // @synthesize namedFeatures=_namedFeatures;
@property(retain, nonatomic) NSData *suggestionMetadata; // @synthesize suggestionMetadata=_suggestionMetadata;
@property(retain, nonatomic) NSMutableArray *suggestionEntryLists; // @synthesize suggestionEntryLists=_suggestionEntryLists;
@property(retain, nonatomic) GEOMapRegion *mapRegion; // @synthesize mapRegion=_mapRegion;
@property(retain, nonatomic) NSMutableArray *placeResults; // @synthesize placeResults=_placeResults;
@property(nonatomic) int status; // @synthesize status=_status;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasTurnaroundTime;
@property(nonatomic) _Bool hasStatusCodeInfo;
- (id)namedFeaturesAtIndex:(unsigned long long)arg1;
- (unsigned long long)namedFeaturesCount;
- (void)addNamedFeatures:(id)arg1;
- (void)clearNamedFeatures;
@property(readonly, nonatomic) _Bool hasSuggestionMetadata;
- (id)suggestionEntryListsAtIndex:(unsigned long long)arg1;
- (unsigned long long)suggestionEntryListsCount;
- (void)addSuggestionEntryLists:(id)arg1;
- (void)clearSuggestionEntryLists;
@property(readonly, nonatomic) _Bool hasMapRegion;
- (id)placeResultAtIndex:(unsigned long long)arg1;
- (unsigned long long)placeResultsCount;
- (void)addPlaceResult:(id)arg1;
- (void)clearPlaceResults;
- (void)dealloc;
- (void)_geoMapItemsWithTraits:(id)arg1 handler:(CDUnknownBlockType)arg2;

@end

@interface GEOPlatform : NSObject
{
}

+ (id)sharedPlatform;
- (id)clientCapabilities;
- (_Bool)supportsNavigation;
- (_Bool)supportsRealisticTiles;
- (_Bool)mapsFeatureFreedomEnabled;
- (_Bool)_deviceSupportsNavigation;
- (id)hardwareIdentifier;
- (id)buildVersion;
- (id)osVersion;
- (id)_systemInfoDictionary;
- (_Bool)isMainScreenHiDPI;
- (_Bool)isInternalInstall;

@end

@interface GEOPointUtility : NSObject
{
}

+ (id)zilchData:(id)arg1 fromPointIndex:(unsigned long long)arg2;
+ (id)unpackBasicPoints:(id)arg1;
+ (id)unpackZilchPoints:(id)arg1;
+ (id)unpackPoints:(id)arg1 usesZilch:(_Bool)arg2;
+ (CDStruct_c3b9c2ee)pointAt:(unsigned long long)arg1 pointData:(id)arg2 usesZilch:(_Bool)arg3;
+ (unsigned long long)pointCount:(id)arg1 usesZilch:(_Bool)arg2;
+ (void *)controlPoints:(id)arg1 usesZilch:(_Bool)arg2;
+ (_Bool)zilchPointsSupported;

@end

@interface GEOPolyLocationShiftRequest : PBRequest <NSCopying>
{
    GEOLatLng *_location;
}

@property(retain, nonatomic) GEOLatLng *location; // @synthesize location=_location;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (Class)responseClass;
- (unsigned int)requestTypeCode;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (void)dealloc;
- (CDStruct_c3b9c2ee)coordinate;

@end

@interface GEOPolyLocationShiftResponse : PBCodable <NSCopying>
{
    struct {
        double *list;
        unsigned long long count;
        unsigned long long size;
    } _parameters;
    double _radius;
    int _status;
}

@property(nonatomic) double radius; // @synthesize radius=_radius;
@property(nonatomic) int status; // @synthesize status=_status;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (void)setParameters:(double *)arg1 count:(unsigned long long)arg2;
- (double)parametersAtIndex:(unsigned long long)arg1;
- (void)addParameters:(double)arg1;
- (void)clearParameters;
@property(readonly, nonatomic) double *parameters;
@property(readonly, nonatomic) unsigned long long parametersCount;
- (void)dealloc;

@end

@interface GEOPrivacyManager : NSObject
{
    CHManager *_callHistoryManager;
}

- (void)_fireResetLocationAndPrivacyNotification;
- (void)_fireRecentsClearedNotification;
- (void)_callHistoryManagerRecentsChangedNotificationObserver:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface GEOProxyClient : NSObject
{
    NSString *_bundleIdentifier;
    NSString *_bundleVersion;
    NSData *_auditToken;
    _Bool _isApplication;
}

+ (id)compositeClientForClients:(id)arg1;
+ (id)currentClient;
@property(nonatomic) _Bool isApplication; // @synthesize isApplication=_isApplication;
@property(retain, nonatomic) NSData *auditToken; // @synthesize auditToken=_auditToken;
@property(retain, nonatomic) NSString *bundleVersion; // @synthesize bundleVersion=_bundleVersion;
@property(retain, nonatomic) NSString *bundleIdentifier; // @synthesize bundleIdentifier=_bundleIdentifier;
- (id)URLConnectionProperties;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;

@end

@interface GEOProxyClientRegistry : NSObject
{
    NSLock *_lock;
    GEOProxyClient *_currentComposite;
    NSMutableSet *_currentSet;
}

+ (id)sharedRegistry;
- (id)compositeClient;
- (void)removeClient:(id)arg1;
- (void)addClient:(id)arg1;
- (void)_updateComposite;
- (void)dealloc;
- (void)enableRegistry;

@end

@interface GEOQuickETARequest : NSObject
{
    GEOComposedWaypoint *_sourceWaypoint;
    GEOComposedWaypoint *_destinationWaypoint;
    NSDate *_departureDate;
    NSDate *_arrivalDate;
    int _transportType;
    GEOLocation *_currentLocation;
    _Bool _includeDistance;
    GEOAutomobileOptions *_automobileOptions;
    GEOWalkingOptions *_walkingOptions;
    NSArray *_additionalTransportTypesRequested;
}

@property(readonly, nonatomic) NSArray *additionalTransportTypesRequested; // @synthesize additionalTransportTypesRequested=_additionalTransportTypesRequested;
@property(readonly, nonatomic) GEOWalkingOptions *walkingOptions; // @synthesize walkingOptions=_walkingOptions;
@property(readonly, nonatomic) GEOAutomobileOptions *automobileOptions; // @synthesize automobileOptions=_automobileOptions;
@property(readonly, nonatomic) _Bool includeDistance; // @synthesize includeDistance=_includeDistance;
@property(readonly, nonatomic) GEOLocation *currentLocation; // @synthesize currentLocation=_currentLocation;
@property(readonly, nonatomic) int transportType; // @synthesize transportType=_transportType;
@property(readonly, nonatomic) NSDate *arrivalDate; // @synthesize arrivalDate=_arrivalDate;
@property(readonly, nonatomic) NSDate *departureDate; // @synthesize departureDate=_departureDate;
@property(readonly, nonatomic) GEOComposedWaypoint *destinationWaypoint; // @synthesize destinationWaypoint=_destinationWaypoint;
@property(readonly, nonatomic) GEOComposedWaypoint *sourceWaypoint; // @synthesize sourceWaypoint=_sourceWaypoint;
- (id)description;
- (void)dealloc;
- (id)initWithSource:(id)arg1 toDestination:(id)arg2 arrivalDate:(id)arg3 transportType:(int)arg4 currentLocation:(id)arg5 includeDistance:(_Bool)arg6 additionalTransportTypesRequested:(id)arg7;
- (id)initWithSource:(id)arg1 toDestination:(id)arg2 departureDate:(id)arg3 transportType:(int)arg4 currentLocation:(id)arg5 includeDistance:(_Bool)arg6 additionalTransportTypesRequested:(id)arg7;
- (id)initWithSource:(id)arg1 toDestination:(id)arg2 arrivalDate:(id)arg3 currentLocation:(id)arg4 includeDistance:(_Bool)arg5 automobileOptions:(id)arg6 walkingOptions:(id)arg7;
- (id)initWithSource:(id)arg1 toDestination:(id)arg2 departureDate:(id)arg3 currentLocation:(id)arg4 includeDistance:(_Bool)arg5 automobileOptions:(id)arg6 walkingOptions:(id)arg7;
- (id)initWithSource:(id)arg1 toDestination:(id)arg2 arrivalDate:(id)arg3 transportType:(int)arg4 currentLocation:(id)arg5 includeDistance:(_Bool)arg6;
- (id)initWithSource:(id)arg1 toDestination:(id)arg2 arrivalDate:(id)arg3 transportType:(int)arg4 currentLocation:(id)arg5;
- (id)initWithSource:(id)arg1 toDestination:(id)arg2 departureDate:(id)arg3 transportType:(int)arg4 currentLocation:(id)arg5 includeDistance:(_Bool)arg6;
- (id)initWithSource:(id)arg1 toDestination:(id)arg2 departureDate:(id)arg3 transportType:(int)arg4 currentLocation:(id)arg5;

@end

@interface GEOQuickETARequester : NSObject
{
    GEOQuickETARequest *_request;
    GEOETARequest *_simpleETARequest;
    GEODirectionsRouteRequest *_directionsETARequest;
    NSString *_loggingFacility;
}

@property(copy, nonatomic) NSString *loggingFacility; // @synthesize loggingFacility=_loggingFacility;
- (void)cancel;
- (void)calculateETAWithResponseHandler:(CDUnknownBlockType)arg1;
- (void)_calculateRoutingETAWithHandler:(CDUnknownBlockType)arg1;
- (void)_calculateSimpleETAWithHandler:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (id)initWithRequest:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface GEOQuickETAResponse : NSObject
{
    GEOLocation *_sourceLocation;
    GEOLocation *_destinationLocation;
    unsigned int _responseETASeconds;
    unsigned int _baselineETASeconds;
    double _distance;
    NSMutableArray *_sortedETAs;
}

@property(readonly, nonatomic) NSMutableArray *sortedETAs; // @synthesize sortedETAs=_sortedETAs;
@property(readonly, nonatomic) double distance; // @synthesize distance=_distance;
@property(readonly, nonatomic) unsigned int baselineETASeconds; // @synthesize baselineETASeconds=_baselineETASeconds;
@property(readonly, nonatomic) unsigned int responseETASeconds; // @synthesize responseETASeconds=_responseETASeconds;
@property(readonly, nonatomic) GEOLocation *destinationLocation; // @synthesize destinationLocation=_destinationLocation;
@property(readonly, nonatomic) GEOLocation *sourceLocation; // @synthesize sourceLocation=_sourceLocation;
- (void)dealloc;
- (id)initWithDirectionsResponse:(id)arg1 fromRequest:(id)arg2;
- (id)initWithETAResult:(id)arg1 fromRequest:(id)arg2;

@end

@interface GEORPCorrectedCoordinate : PBCodable <NSCopying>
{
    GEOLatLng *_correctedCoordinate;
    GEOLatLng *_originalCoordinate;
}

@property(retain, nonatomic) GEOLatLng *correctedCoordinate; // @synthesize correctedCoordinate=_correctedCoordinate;
@property(retain, nonatomic) GEOLatLng *originalCoordinate; // @synthesize originalCoordinate=_originalCoordinate;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasCorrectedCoordinate;
@property(readonly, nonatomic) _Bool hasOriginalCoordinate;
- (void)dealloc;

@end

@interface GEORPCorrectedField : PBCodable <NSCopying>
{
    NSString *_correctedValue;
    int _field;
    NSString *_fieldName;
    NSString *_originalValue;
    _Bool _isMarkedIncorrect;
    struct {
        unsigned int field:1;
        unsigned int isMarkedIncorrect:1;
    } _has;
}

@property(nonatomic) _Bool isMarkedIncorrect; // @synthesize isMarkedIncorrect=_isMarkedIncorrect;
@property(retain, nonatomic) NSString *correctedValue; // @synthesize correctedValue=_correctedValue;
@property(retain, nonatomic) NSString *originalValue; // @synthesize originalValue=_originalValue;
@property(retain, nonatomic) NSString *fieldName; // @synthesize fieldName=_fieldName;
@property(nonatomic) int field; // @synthesize field=_field;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasIsMarkedIncorrect;
@property(readonly, nonatomic) _Bool hasCorrectedValue;
@property(readonly, nonatomic) _Bool hasOriginalValue;
@property(readonly, nonatomic) _Bool hasFieldName;
@property(nonatomic) _Bool hasField;
- (void)dealloc;

@end

@interface GEORPCorrectedLabel : PBCodable <NSCopying>
{
    CDStruct_3f74b7eb *_featureHandles;
    unsigned long long _featureHandlesCount;
    unsigned long long _featureHandlesSpace;
    NSString *_correctedValue;
    GEOMapRegion *_featureRegion;
    NSString *_originalValue;
}

@property(retain, nonatomic) GEOMapRegion *featureRegion; // @synthesize featureRegion=_featureRegion;
@property(retain, nonatomic) NSString *correctedValue; // @synthesize correctedValue=_correctedValue;
@property(retain, nonatomic) NSString *originalValue; // @synthesize originalValue=_originalValue;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (void)setFeatureHandles:(CDStruct_3f74b7eb *)arg1 count:(unsigned long long)arg2;
- (CDStruct_3f74b7eb)featureHandleAtIndex:(unsigned long long)arg1;
- (void)addFeatureHandle:(CDStruct_3f74b7eb)arg1;
- (void)clearFeatureHandles;
@property(readonly, nonatomic) CDStruct_3f74b7eb *featureHandles;
@property(readonly, nonatomic) unsigned long long featureHandlesCount;
@property(readonly, nonatomic) _Bool hasFeatureRegion;
@property(readonly, nonatomic) _Bool hasCorrectedValue;
@property(readonly, nonatomic) _Bool hasOriginalValue;
- (void)dealloc;

@end

@interface GEORPCorrectedSearch : PBCodable <NSCopying>
{
    unsigned int _correctedSearchResultIndex;
    unsigned int _originalSearchResultIndex;
    GEOPDPlaceRequest *_placeRequest;
    GEOPDPlaceResponse *_placeResponse;
    GEOPlaceSearchRequest *_placeSearchRequest;
    GEOPlaceSearchResponse *_placeSearchResponse;
    NSString *_preferredSearchDisplayLocation;
    struct {
        unsigned int correctedSearchResultIndex:1;
        unsigned int originalSearchResultIndex:1;
    } _has;
}

@property(retain, nonatomic) GEOPDPlaceResponse *placeResponse; // @synthesize placeResponse=_placeResponse;
@property(retain, nonatomic) GEOPDPlaceRequest *placeRequest; // @synthesize placeRequest=_placeRequest;
@property(retain, nonatomic) NSString *preferredSearchDisplayLocation; // @synthesize preferredSearchDisplayLocation=_preferredSearchDisplayLocation;
@property(nonatomic) unsigned int correctedSearchResultIndex; // @synthesize correctedSearchResultIndex=_correctedSearchResultIndex;
@property(nonatomic) unsigned int originalSearchResultIndex; // @synthesize originalSearchResultIndex=_originalSearchResultIndex;
@property(retain, nonatomic) GEOPlaceSearchResponse *placeSearchResponse; // @synthesize placeSearchResponse=_placeSearchResponse;
@property(retain, nonatomic) GEOPlaceSearchRequest *placeSearchRequest; // @synthesize placeSearchRequest=_placeSearchRequest;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasPlaceResponse;
@property(readonly, nonatomic) _Bool hasPlaceRequest;
@property(readonly, nonatomic) _Bool hasPreferredSearchDisplayLocation;
@property(nonatomic) _Bool hasCorrectedSearchResultIndex;
@property(nonatomic) _Bool hasOriginalSearchResultIndex;
@property(readonly, nonatomic) _Bool hasPlaceSearchResponse;
@property(readonly, nonatomic) _Bool hasPlaceSearchRequest;
- (void)dealloc;
- (_Bool)containsReportableData;

@end

@interface GEORPDirectionsEvent : PBCodable <NSCopying>
{
    long long _errorCode;
    NSString *_errorDomain;
    GEOLatLng *_occurrenceLatLng;
    unsigned int _occurrenceResponseIndex;
    NSData *_occurrenceRouteId;
    unsigned int _occurrenceStepIndex;
    unsigned int _switchedToResponseIndex;
    NSData *_switchedToRouteId;
    NSString *_synthesizedStepInstructions;
    int _synthesizedStepManeuverType;
    int _type;
    struct {
        unsigned int errorCode:1;
        unsigned int occurrenceResponseIndex:1;
        unsigned int occurrenceStepIndex:1;
        unsigned int switchedToResponseIndex:1;
        unsigned int synthesizedStepManeuverType:1;
        unsigned int type:1;
    } _has;
}

@property(nonatomic) long long errorCode; // @synthesize errorCode=_errorCode;
@property(retain, nonatomic) NSString *errorDomain; // @synthesize errorDomain=_errorDomain;
@property(retain, nonatomic) NSString *synthesizedStepInstructions; // @synthesize synthesizedStepInstructions=_synthesizedStepInstructions;
@property(nonatomic) int synthesizedStepManeuverType; // @synthesize synthesizedStepManeuverType=_synthesizedStepManeuverType;
@property(retain, nonatomic) NSData *switchedToRouteId; // @synthesize switchedToRouteId=_switchedToRouteId;
@property(nonatomic) unsigned int switchedToResponseIndex; // @synthesize switchedToResponseIndex=_switchedToResponseIndex;
@property(retain, nonatomic) GEOLatLng *occurrenceLatLng; // @synthesize occurrenceLatLng=_occurrenceLatLng;
@property(nonatomic) unsigned int occurrenceStepIndex; // @synthesize occurrenceStepIndex=_occurrenceStepIndex;
@property(retain, nonatomic) NSData *occurrenceRouteId; // @synthesize occurrenceRouteId=_occurrenceRouteId;
@property(nonatomic) unsigned int occurrenceResponseIndex; // @synthesize occurrenceResponseIndex=_occurrenceResponseIndex;
@property(nonatomic) int type; // @synthesize type=_type;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasErrorCode;
@property(readonly, nonatomic) _Bool hasErrorDomain;
@property(readonly, nonatomic) _Bool hasSynthesizedStepInstructions;
@property(nonatomic) _Bool hasSynthesizedStepManeuverType;
@property(readonly, nonatomic) _Bool hasSwitchedToRouteId;
@property(nonatomic) _Bool hasSwitchedToResponseIndex;
@property(readonly, nonatomic) _Bool hasOccurrenceLatLng;
@property(nonatomic) _Bool hasOccurrenceStepIndex;
@property(readonly, nonatomic) _Bool hasOccurrenceRouteId;
@property(nonatomic) _Bool hasOccurrenceResponseIndex;
@property(nonatomic) _Bool hasType;
- (void)dealloc;

@end

@interface GEORPDirectionsProblem : PBCodable <NSCopying>
{
    NSData *_directionsResponseId;
    NSData *_overviewScreenshotImageData;
    unsigned int _problematicStepIndex;
    struct {
        unsigned int problematicStepIndex:1;
    } _has;
}

@property(nonatomic) unsigned int problematicStepIndex; // @synthesize problematicStepIndex=_problematicStepIndex;
@property(retain, nonatomic) NSData *overviewScreenshotImageData; // @synthesize overviewScreenshotImageData=_overviewScreenshotImageData;
@property(retain, nonatomic) NSData *directionsResponseId; // @synthesize directionsResponseId=_directionsResponseId;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasProblematicStepIndex;
@property(readonly, nonatomic) _Bool hasOverviewScreenshotImageData;
@property(readonly, nonatomic) _Bool hasDirectionsResponseId;
- (void)dealloc;

@end

@interface GEORPLegacyProblemRequester : NSObject
{
    NSMapTable *_pendingRequests;
    NSLock *_pendingRequestsLock;
}

+ (id)sharedRequester;
- (void)cancelRequest:(id)arg1;
- (void)startNotificationAvailabilityRequest:(id)arg1 finished:(CDUnknownBlockType)arg2 networkActivity:(CDUnknownBlockType)arg3 error:(CDUnknownBlockType)arg4;
- (void)startStatusRequest:(id)arg1 finished:(CDUnknownBlockType)arg2 networkActivity:(CDUnknownBlockType)arg3 error:(CDUnknownBlockType)arg4;
- (void)startSubmissionRequest:(id)arg1 finished:(CDUnknownBlockType)arg2 networkActivity:(CDUnknownBlockType)arg3 error:(CDUnknownBlockType)arg4;
- (void)dealloc;
- (id)init;

@end

@interface GEORPMapLocation : PBCodable <NSCopying>
{
    GEOLatLng *_coordinate;
    NSData *_image;
    GEOPDViewportInfo *_viewportInfo;
    float _zoomLevel;
    struct {
        unsigned int zoomLevel:1;
    } _has;
}

@property(retain, nonatomic) GEOPDViewportInfo *viewportInfo; // @synthesize viewportInfo=_viewportInfo;
@property(nonatomic) float zoomLevel; // @synthesize zoomLevel=_zoomLevel;
@property(retain, nonatomic) GEOLatLng *coordinate; // @synthesize coordinate=_coordinate;
@property(retain, nonatomic) NSData *image; // @synthesize image=_image;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasViewportInfo;
@property(nonatomic) _Bool hasZoomLevel;
@property(readonly, nonatomic) _Bool hasCoordinate;
@property(readonly, nonatomic) _Bool hasImage;
- (void)dealloc;

@end

@interface GEORPPlaceProblem : PBCodable <NSCopying>
{
    unsigned int _componentIndex;
    unsigned int _componentValueIndex;
    struct {
        unsigned int componentIndex:1;
        unsigned int componentValueIndex:1;
    } _has;
}

@property(nonatomic) unsigned int componentValueIndex; // @synthesize componentValueIndex=_componentValueIndex;
@property(nonatomic) unsigned int componentIndex; // @synthesize componentIndex=_componentIndex;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasComponentValueIndex;
@property(nonatomic) _Bool hasComponentIndex;

@end

@interface GEORPProblem : PBCodable <NSCopying>
{
    CDStruct_95bda58d _userPaths;
    GEORPProblemContext *_problemContext;
    GEORPProblemCorrections *_problemCorrections;
    int _problemType;
    unsigned int _protocolVersion;
    struct {
        unsigned int problemType:1;
        unsigned int protocolVersion:1;
    } _has;
}

@property(retain, nonatomic) GEORPProblemContext *problemContext; // @synthesize problemContext=_problemContext;
@property(retain, nonatomic) GEORPProblemCorrections *problemCorrections; // @synthesize problemCorrections=_problemCorrections;
@property(nonatomic) int problemType; // @synthesize problemType=_problemType;
@property(nonatomic) unsigned int protocolVersion; // @synthesize protocolVersion=_protocolVersion;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasProblemContext;
@property(readonly, nonatomic) _Bool hasProblemCorrections;
@property(nonatomic) _Bool hasProblemType;
- (void)setUserPaths:(int *)arg1 count:(unsigned long long)arg2;
- (int)userPathAtIndex:(unsigned long long)arg1;
- (void)addUserPath:(int)arg1;
- (void)clearUserPaths;
@property(readonly, nonatomic) int *userPaths;
@property(readonly, nonatomic) unsigned long long userPathsCount;
@property(nonatomic) _Bool hasProtocolVersion;
- (void)dealloc;

@end

@interface GEORPProblemCollectionRequest : PBRequest <NSCopying>
{
    NSString *_countryCode;
    NSData *_devicePushToken;
    NSString *_hwMachine;
    NSString *_inputLanguage;
    NSString *_osRelease;
    NSMutableArray *_requestElements;
    GEORPUserCredentials *_userCredentials;
    NSString *_userEmail;
    GEOLocation *_userLocation;
}

@property(retain, nonatomic) GEOLocation *userLocation; // @synthesize userLocation=_userLocation;
@property(retain, nonatomic) NSString *userEmail; // @synthesize userEmail=_userEmail;
@property(retain, nonatomic) NSData *devicePushToken; // @synthesize devicePushToken=_devicePushToken;
@property(retain, nonatomic) GEORPUserCredentials *userCredentials; // @synthesize userCredentials=_userCredentials;
@property(retain, nonatomic) NSString *inputLanguage; // @synthesize inputLanguage=_inputLanguage;
@property(retain, nonatomic) NSString *countryCode; // @synthesize countryCode=_countryCode;
@property(retain, nonatomic) NSString *osRelease; // @synthesize osRelease=_osRelease;
@property(retain, nonatomic) NSString *hwMachine; // @synthesize hwMachine=_hwMachine;
@property(retain, nonatomic) NSMutableArray *requestElements; // @synthesize requestElements=_requestElements;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (Class)responseClass;
- (unsigned int)requestTypeCode;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasUserLocation;
@property(readonly, nonatomic) _Bool hasUserEmail;
@property(readonly, nonatomic) _Bool hasDevicePushToken;
@property(readonly, nonatomic) _Bool hasUserCredentials;
@property(readonly, nonatomic) _Bool hasInputLanguage;
@property(readonly, nonatomic) _Bool hasCountryCode;
@property(readonly, nonatomic) _Bool hasOsRelease;
@property(readonly, nonatomic) _Bool hasHwMachine;
- (id)requestElementAtIndex:(unsigned long long)arg1;
- (unsigned long long)requestElementsCount;
- (void)addRequestElement:(id)arg1;
- (void)clearRequestElements;
- (void)dealloc;

@end

@interface GEORPProblemCollectionResponse : PBCodable <NSCopying>
{
    NSString *_problemId;
    int _statusCode;
    CDStruct_bcb1eac0 _has;
}

@property(retain, nonatomic) NSString *problemId; // @synthesize problemId=_problemId;
@property(nonatomic) int statusCode; // @synthesize statusCode=_statusCode;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasProblemId;
@property(nonatomic) _Bool hasStatusCode;
- (void)dealloc;

@end

@interface GEORPProblemContext : PBCodable <NSCopying>
{
    CDStruct_612aec5b _sessionId;
    NSMutableArray *_directionsRequests;
    NSMutableArray *_directionsResponses;
    GEORPMapLocation *_mapLocation;
    GEOPlace *_originalPlace;
    int _pinType;
    GEOPDPlace *_place;
    NSString *_tileStateLog;
    NSMutableArray *_visibleTileSets;
    struct {
        unsigned int sessionId:1;
        unsigned int pinType:1;
    } _has;
}

@property(retain, nonatomic) NSMutableArray *directionsResponses; // @synthesize directionsResponses=_directionsResponses;
@property(retain, nonatomic) NSMutableArray *directionsRequests; // @synthesize directionsRequests=_directionsRequests;
@property(retain, nonatomic) GEOPDPlace *place; // @synthesize place=_place;
@property(retain, nonatomic) NSString *tileStateLog; // @synthesize tileStateLog=_tileStateLog;
@property(retain, nonatomic) NSMutableArray *visibleTileSets; // @synthesize visibleTileSets=_visibleTileSets;
@property(retain, nonatomic) GEORPMapLocation *mapLocation; // @synthesize mapLocation=_mapLocation;
@property(retain, nonatomic) GEOPlace *originalPlace; // @synthesize originalPlace=_originalPlace;
@property(nonatomic) int pinType; // @synthesize pinType=_pinType;
@property(nonatomic) CDStruct_612aec5b sessionId; // @synthesize sessionId=_sessionId;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)directionsResponseAtIndex:(unsigned long long)arg1;
- (unsigned long long)directionsResponsesCount;
- (void)addDirectionsResponse:(id)arg1;
- (void)clearDirectionsResponses;
- (id)directionsRequestAtIndex:(unsigned long long)arg1;
- (unsigned long long)directionsRequestsCount;
- (void)addDirectionsRequest:(id)arg1;
- (void)clearDirectionsRequests;
@property(readonly, nonatomic) _Bool hasPlace;
@property(readonly, nonatomic) _Bool hasTileStateLog;
- (id)visibleTileSetAtIndex:(unsigned long long)arg1;
- (unsigned long long)visibleTileSetsCount;
- (void)addVisibleTileSet:(id)arg1;
- (void)clearVisibleTileSets;
@property(readonly, nonatomic) _Bool hasMapLocation;
@property(readonly, nonatomic) _Bool hasOriginalPlace;
@property(nonatomic) _Bool hasPinType;
@property(nonatomic) _Bool hasSessionId;
- (void)dealloc;

@end

@interface GEORPProblemCorrections : PBCodable <NSCopying>
{
    NSString *_comments;
    GEORPCorrectedCoordinate *_correctedCoordinate;
    NSMutableArray *_correctedFields;
    GEORPCorrectedLabel *_correctedLabel;
    GEORPMapLocation *_correctedMapLocation;
    GEORPCorrectedSearch *_correctedSearch;
    GEORPDirectionsProblem *_directionsProblem;
    NSMutableArray *_photos;
    GEORPPlaceProblem *_placeProblem;
}

@property(retain, nonatomic) GEORPDirectionsProblem *directionsProblem; // @synthesize directionsProblem=_directionsProblem;
@property(retain, nonatomic) GEORPPlaceProblem *placeProblem; // @synthesize placeProblem=_placeProblem;
@property(retain, nonatomic) NSMutableArray *photos; // @synthesize photos=_photos;
@property(retain, nonatomic) NSString *comments; // @synthesize comments=_comments;
@property(retain, nonatomic) GEORPMapLocation *correctedMapLocation; // @synthesize correctedMapLocation=_correctedMapLocation;
@property(retain, nonatomic) GEORPCorrectedSearch *correctedSearch; // @synthesize correctedSearch=_correctedSearch;
@property(retain, nonatomic) GEORPCorrectedCoordinate *correctedCoordinate; // @synthesize correctedCoordinate=_correctedCoordinate;
@property(retain, nonatomic) GEORPCorrectedLabel *correctedLabel; // @synthesize correctedLabel=_correctedLabel;
@property(retain, nonatomic) NSMutableArray *correctedFields; // @synthesize correctedFields=_correctedFields;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasDirectionsProblem;
@property(readonly, nonatomic) _Bool hasPlaceProblem;
- (id)photoAtIndex:(unsigned long long)arg1;
- (unsigned long long)photosCount;
- (void)addPhoto:(id)arg1;
- (void)clearPhotos;
@property(readonly, nonatomic) _Bool hasComments;
@property(readonly, nonatomic) _Bool hasCorrectedMapLocation;
@property(readonly, nonatomic) _Bool hasCorrectedSearch;
@property(readonly, nonatomic) _Bool hasCorrectedCoordinate;
@property(readonly, nonatomic) _Bool hasCorrectedLabel;
- (id)correctedFieldAtIndex:(unsigned long long)arg1;
- (unsigned long long)correctedFieldsCount;
- (void)addCorrectedField:(id)arg1;
- (void)clearCorrectedFields;
- (void)dealloc;

@end

@interface GEORPProblemNotificationAvailabilityRequest : PBRequest <NSCopying>
{
    CDStruct_62a50c50 _businessIds;
    CDStruct_95bda58d _problemTypes;
    GEOClientCapabilities *_clientCapabilities;
    NSString *_countryCode;
    NSData *_devicePushToken;
    int _pinType;
    int _placeType;
    struct {
        unsigned int pinType:1;
        unsigned int placeType:1;
    } _has;
}

@property(nonatomic) int pinType; // @synthesize pinType=_pinType;
@property(nonatomic) int placeType; // @synthesize placeType=_placeType;
@property(retain, nonatomic) GEOClientCapabilities *clientCapabilities; // @synthesize clientCapabilities=_clientCapabilities;
@property(retain, nonatomic) NSData *devicePushToken; // @synthesize devicePushToken=_devicePushToken;
@property(retain, nonatomic) NSString *countryCode; // @synthesize countryCode=_countryCode;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (Class)responseClass;
- (unsigned int)requestTypeCode;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasPinType;
@property(nonatomic) _Bool hasPlaceType;
- (void)setBusinessIds:(unsigned long long *)arg1 count:(unsigned long long)arg2;
- (unsigned long long)businessIdAtIndex:(unsigned long long)arg1;
- (void)addBusinessId:(unsigned long long)arg1;
- (void)clearBusinessIds;
@property(readonly, nonatomic) unsigned long long *businessIds;
@property(readonly, nonatomic) unsigned long long businessIdsCount;
@property(readonly, nonatomic) _Bool hasClientCapabilities;
@property(readonly, nonatomic) _Bool hasDevicePushToken;
@property(readonly, nonatomic) _Bool hasCountryCode;
- (void)setProblemTypes:(int *)arg1 count:(unsigned long long)arg2;
- (int)problemTypeAtIndex:(unsigned long long)arg1;
- (void)addProblemType:(int)arg1;
- (void)clearProblemTypes;
@property(readonly, nonatomic) int *problemTypes;
@property(readonly, nonatomic) unsigned long long problemTypesCount;
- (void)dealloc;

@end

@interface GEORPProblemNotificationAvailabilityResponse : PBCodable <NSCopying>
{
    CDStruct_95bda58d _supportedProblemTypes;
    int _statusCode;
    CDStruct_bcb1eac0 _has;
}

@property(nonatomic) int statusCode; // @synthesize statusCode=_statusCode;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (void)setSupportedProblemTypes:(int *)arg1 count:(unsigned long long)arg2;
- (int)supportedProblemTypeAtIndex:(unsigned long long)arg1;
- (void)addSupportedProblemType:(int)arg1;
- (void)clearSupportedProblemTypes;
@property(readonly, nonatomic) int *supportedProblemTypes;
@property(readonly, nonatomic) unsigned long long supportedProblemTypesCount;
@property(nonatomic) _Bool hasStatusCode;
- (void)dealloc;

@end

@interface GEORPProblemOptInRequest : PBRequest <NSCopying>
{
    NSData *_devicePushToken;
    NSString *_problemId;
    GEORPUserCredentials *_userCredentials;
    NSString *_userEmail;
    _Bool _didOptIn;
    struct {
        unsigned int didOptIn:1;
    } _has;
}

@property(retain, nonatomic) NSString *userEmail; // @synthesize userEmail=_userEmail;
@property(retain, nonatomic) NSData *devicePushToken; // @synthesize devicePushToken=_devicePushToken;
@property(retain, nonatomic) GEORPUserCredentials *userCredentials; // @synthesize userCredentials=_userCredentials;
@property(nonatomic) _Bool didOptIn; // @synthesize didOptIn=_didOptIn;
@property(retain, nonatomic) NSString *problemId; // @synthesize problemId=_problemId;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (Class)responseClass;
- (unsigned int)requestTypeCode;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasUserEmail;
@property(readonly, nonatomic) _Bool hasDevicePushToken;
@property(readonly, nonatomic) _Bool hasUserCredentials;
@property(nonatomic) _Bool hasDidOptIn;
@property(readonly, nonatomic) _Bool hasProblemId;
- (void)dealloc;
- (id)initWithSubmissionID:(id)arg1 allowNotificationsAtPushToken:(id)arg2 allowContactBackAtEmailAddress:(id)arg3 traits:(id)arg4;

@end

__attribute__((visibility("hidden")))
@interface GEORPProblemOptInRequester : GEOServiceRequester
{
}

+ (id)sharedInstance;
+ (unsigned long long)_urlType;
- (id)_validateResponse:(id)arg1;
- (void)cancelRequest:(id)arg1;
- (void)startWithRequest:(id)arg1 traits:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;

@end

@interface GEORPProblemOptInResponse : PBCodable <NSCopying>
{
    int _statusCode;
    CDStruct_bcb1eac0 _has;
}

@property(nonatomic) int statusCode; // @synthesize statusCode=_statusCode;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasStatusCode;

@end

@interface GEORPProblemProvider : NSObject
{
}

- (void)cancelRequest;
- (void)startNotificationAvailabilityRequest:(id)arg1 finished:(CDUnknownBlockType)arg2 error:(CDUnknownBlockType)arg3;
- (void)startStatusRequest:(id)arg1 finished:(CDUnknownBlockType)arg2 error:(CDUnknownBlockType)arg3;
- (void)startSubmissionRequest:(id)arg1 finished:(CDUnknownBlockType)arg2 error:(CDUnknownBlockType)arg3;

@end

@interface GEORPProblemRequest : PBRequest <NSCopying>
{
    GEOPDAnalyticMetadata *_analyticMetadata;
    GEOPDClientMetadata *_clientMetadata;
    GEORPProblem *_problem;
    GEORPUserCredentials *_userCredentials;
}

@property(retain, nonatomic) GEOPDClientMetadata *clientMetadata; // @synthesize clientMetadata=_clientMetadata;
@property(retain, nonatomic) GEOPDAnalyticMetadata *analyticMetadata; // @synthesize analyticMetadata=_analyticMetadata;
@property(retain, nonatomic) GEORPUserCredentials *userCredentials; // @synthesize userCredentials=_userCredentials;
@property(retain, nonatomic) GEORPProblem *problem; // @synthesize problem=_problem;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (Class)responseClass;
- (unsigned int)requestTypeCode;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasClientMetadata;
@property(readonly, nonatomic) _Bool hasAnalyticMetadata;
@property(readonly, nonatomic) _Bool hasUserCredentials;
@property(readonly, nonatomic) _Bool hasProblem;
- (void)dealloc;
- (id)initWithProblem:(id)arg1 traits:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface GEORPProblemRequester : GEOServiceRequester
{
}

+ (id)sharedInstance;
+ (unsigned long long)_urlType;
- (id)_validateResponse:(id)arg1;
- (void)cancelRequest:(id)arg1;
- (void)startWithRequest:(id)arg1 traits:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;

@end

@interface GEORPProblemResponse : PBCodable <NSCopying>
{
    NSString *_problemId;
    int _statusCode;
    _Bool _isNotificationSupported;
    struct {
        unsigned int statusCode:1;
        unsigned int isNotificationSupported:1;
    } _has;
}

@property(nonatomic) _Bool isNotificationSupported; // @synthesize isNotificationSupported=_isNotificationSupported;
@property(retain, nonatomic) NSString *problemId; // @synthesize problemId=_problemId;
@property(nonatomic) int statusCode; // @synthesize statusCode=_statusCode;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasIsNotificationSupported;
@property(readonly, nonatomic) _Bool hasProblemId;
@property(nonatomic) _Bool hasStatusCode;
- (void)dealloc;

@end

@interface GEORPProblemStatus : PBCodable <NSCopying>
{
    double _creationDate;
    NSString *_problemId;
    GEORPResolution *_problemResolution;
    int _problemState;
    struct {
        unsigned int creationDate:1;
        unsigned int problemState:1;
    } _has;
}

@property(retain, nonatomic) GEORPResolution *problemResolution; // @synthesize problemResolution=_problemResolution;
@property(nonatomic) int problemState; // @synthesize problemState=_problemState;
@property(nonatomic) double creationDate; // @synthesize creationDate=_creationDate;
@property(retain, nonatomic) NSString *problemId; // @synthesize problemId=_problemId;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasProblemResolution;
@property(nonatomic) _Bool hasProblemState;
@property(nonatomic) _Bool hasCreationDate;
@property(readonly, nonatomic) _Bool hasProblemId;
- (void)dealloc;

@end

@interface GEORPProblemStatusRequest : PBRequest <NSCopying>
{
    NSMutableArray *_problemIds;
    NSString *_statusNotificationId;
    GEORPUserCredentials *_userCredentials;
}

@property(retain, nonatomic) NSMutableArray *problemIds; // @synthesize problemIds=_problemIds;
@property(retain, nonatomic) NSString *statusNotificationId; // @synthesize statusNotificationId=_statusNotificationId;
@property(retain, nonatomic) GEORPUserCredentials *userCredentials; // @synthesize userCredentials=_userCredentials;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (Class)responseClass;
- (unsigned int)requestTypeCode;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)problemIdAtIndex:(unsigned long long)arg1;
- (unsigned long long)problemIdsCount;
- (void)addProblemId:(id)arg1;
- (void)clearProblemIds;
@property(readonly, nonatomic) _Bool hasStatusNotificationId;
@property(readonly, nonatomic) _Bool hasUserCredentials;
- (void)dealloc;

@end

@interface GEORPProblemStatusResponse : PBCodable <NSCopying>
{
    NSMutableArray *_problemStatus;
    int _statusCode;
    CDStruct_bcb1eac0 _has;
}

@property(retain, nonatomic) NSMutableArray *problemStatus; // @synthesize problemStatus=_problemStatus;
@property(nonatomic) int statusCode; // @synthesize statusCode=_statusCode;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)problemStatusAtIndex:(unsigned long long)arg1;
- (unsigned long long)problemStatusCount;
- (void)addProblemStatus:(id)arg1;
- (void)clearProblemStatus;
@property(nonatomic) _Bool hasStatusCode;
- (void)dealloc;

@end

@interface GEORPResolution : PBCodable <NSCopying>
{
    double _resolutionDate;
    GEOMapRegion *_displayRegion;
    NSMutableArray *_localizedChangeLists;
    NSMutableArray *_updatedPlaces;
    struct {
        unsigned int resolutionDate:1;
    } _has;
}

@property(retain, nonatomic) NSMutableArray *updatedPlaces; // @synthesize updatedPlaces=_updatedPlaces;
@property(retain, nonatomic) NSMutableArray *localizedChangeLists; // @synthesize localizedChangeLists=_localizedChangeLists;
@property(retain, nonatomic) GEOMapRegion *displayRegion; // @synthesize displayRegion=_displayRegion;
@property(nonatomic) double resolutionDate; // @synthesize resolutionDate=_resolutionDate;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)updatedPlaceAtIndex:(unsigned long long)arg1;
- (unsigned long long)updatedPlacesCount;
- (void)addUpdatedPlace:(id)arg1;
- (void)clearUpdatedPlaces;
- (id)localizedChangeListAtIndex:(unsigned long long)arg1;
- (unsigned long long)localizedChangeListsCount;
- (void)addLocalizedChangeList:(id)arg1;
- (void)clearLocalizedChangeLists;
@property(readonly, nonatomic) _Bool hasDisplayRegion;
@property(nonatomic) _Bool hasResolutionDate;
- (void)dealloc;

@end

@interface GEORPUserCredentials : PBCodable <NSCopying>
{
    NSString *_icloudUserMapsAuthToken;
    NSString *_icloudUserPersonId;
}

+ (id)_credentialsForPrimaryICloudAccount;
@property(retain, nonatomic) NSString *icloudUserMapsAuthToken; // @synthesize icloudUserMapsAuthToken=_icloudUserMapsAuthToken;
@property(retain, nonatomic) NSString *icloudUserPersonId; // @synthesize icloudUserPersonId=_icloudUserPersonId;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasIcloudUserMapsAuthToken;
@property(readonly, nonatomic) _Bool hasIcloudUserPersonId;
- (void)dealloc;

@end

@interface GEORPVisibleTileSet : PBCodable <NSCopying>
{
    CDStruct_97e972fa *_tileKeys;
    unsigned long long _tileKeysCount;
    unsigned long long _tileKeysSpace;
    unsigned int _identifier;
    int _style;
    struct {
        unsigned int identifier:1;
        unsigned int style:1;
    } _has;
}

@property(nonatomic) unsigned int identifier; // @synthesize identifier=_identifier;
@property(nonatomic) int style; // @synthesize style=_style;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (void)setTileKeys:(CDStruct_97e972fa *)arg1 count:(unsigned long long)arg2;
- (CDStruct_97e972fa)tileKeyAtIndex:(unsigned long long)arg1;
- (void)addTileKey:(CDStruct_97e972fa)arg1;
- (void)clearTileKeys;
@property(readonly, nonatomic) CDStruct_97e972fa *tileKeys;
@property(readonly, nonatomic) unsigned long long tileKeysCount;
@property(nonatomic) _Bool hasIdentifier;
@property(nonatomic) _Bool hasStyle;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface GEORPVoltaireProblemProvider : GEORPProblemProvider <PBRequesterDelegate>
{
    GEORequester *_submissionRequester;
    GEORequester *_statusRequester;
    GEORequester *_notificationAvailabilityRequester;
    CDUnknownBlockType _submissionErrorHandler;
    CDUnknownBlockType _submissionFinishedHandler;
    CDUnknownBlockType _statusErrorHandler;
    CDUnknownBlockType _statusFinishedHandler;
    CDUnknownBlockType _notificationAvailabilityErrorHandler;
    CDUnknownBlockType _notificationAvailabilityFinishedHandler;
}

- (void)requesterDidFinish:(id)arg1;
- (void)requesterDidCancel:(id)arg1;
- (void)requester:(id)arg1 didFailWithError:(id)arg2;
- (void)cancelRequest;
- (void)startNotificationAvailabilityRequest:(id)arg1 finished:(CDUnknownBlockType)arg2 error:(CDUnknownBlockType)arg3;
- (void)startStatusRequest:(id)arg1 finished:(CDUnknownBlockType)arg2 error:(CDUnknownBlockType)arg3;
- (void)startSubmissionRequest:(id)arg1 finished:(CDUnknownBlockType)arg2 error:(CDUnknownBlockType)arg3;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GEORasterTrafficTileDecoder : NSObject <GEOTileDecoder>
{
}

- (id)decodeTile:(id)arg1 forKey:(const struct _GEOTileKey *)arg2;
- (_Bool)canDecodeTile:(const struct _GEOTileKey *)arg1 quickly:(_Bool *)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GEORating : PBCodable <NSCopying>
{
    double _maxScore;
    double _score;
    int _numberOfRatings;
    int _numberOfReviews;
    NSString *_provider;
    NSMutableArray *_reviews;
    NSString *_uRL;
    struct {
        unsigned int maxScore:1;
        unsigned int score:1;
        unsigned int numberOfRatings:1;
        unsigned int numberOfReviews:1;
    } _has;
}

@property(nonatomic) int numberOfReviews; // @synthesize numberOfReviews=_numberOfReviews;
@property(retain, nonatomic) NSMutableArray *reviews; // @synthesize reviews=_reviews;
@property(retain, nonatomic) NSString *uRL; // @synthesize uRL=_uRL;
@property(retain, nonatomic) NSString *provider; // @synthesize provider=_provider;
@property(nonatomic) int numberOfRatings; // @synthesize numberOfRatings=_numberOfRatings;
@property(nonatomic) double score; // @synthesize score=_score;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasNumberOfReviews;
- (id)reviewAtIndex:(unsigned long long)arg1;
- (unsigned long long)reviewsCount;
- (void)addReview:(id)arg1;
- (void)clearReviews;
@property(readonly, nonatomic) _Bool hasURL;
@property(readonly, nonatomic) _Bool hasProvider;
@property(nonatomic) _Bool hasNumberOfRatings;
@property(nonatomic) _Bool hasMaxScore;
@property(nonatomic) double maxScore; // @synthesize maxScore=_maxScore;
@property(nonatomic) _Bool hasScore;
- (void)dealloc;
- (id)initWithPlaceDataRating:(id)arg1 reviews:(id)arg2;
- (id)initWithSampleSizeForUserRatingScore:(unsigned int)arg1 normalizedUserRatingScore:(float)arg2;

@end

@interface GEOReachability : NSObject <GEOResourceManifestTileGroupObserver>
{
    _Bool _networkReachable;
    unsigned long long _errorCount;
}

+ (id)sharedReachability;
- (void)resourceManifestManagerDidChangeActiveTileGroup:(id)arg1;
- (void)resourceManifestManagerWillChangeActiveTileGroup:(id)arg1;
- (void)_reachabilityChanged:(id)arg1;
- (_Bool)networkAvailable;
- (void)reportLoadFailure:(id)arg1;
- (_Bool)anyFailures;
- (void)reportTileLoadSuccess:(id)arg1;
- (void)_resetErrors;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GEORegionalResource : PBCodable <NSCopying>
{
    CDStruct_d66e66b9 *_tileRanges;
    unsigned long long _tileRangesCount;
    unsigned long long _tileRangesSpace;
    CDStruct_9f2792e4 _validSubManifestVersions;
    NSMutableArray *_attributions;
    NSMutableArray *_iconChecksums;
    NSMutableArray *_icons;
    unsigned int _x;
    unsigned int _y;
    unsigned int _z;
    struct {
        unsigned int x:1;
        unsigned int y:1;
        unsigned int z:1;
    } _has;
}

@property(retain, nonatomic) NSMutableArray *iconChecksums; // @synthesize iconChecksums=_iconChecksums;
@property(retain, nonatomic) NSMutableArray *attributions; // @synthesize attributions=_attributions;
@property(retain, nonatomic) NSMutableArray *icons; // @synthesize icons=_icons;
@property(nonatomic) unsigned int z; // @synthesize z=_z;
@property(nonatomic) unsigned int y; // @synthesize y=_y;
@property(nonatomic) unsigned int x; // @synthesize x=_x;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (void)setValidSubManifestVersions:(unsigned int *)arg1 count:(unsigned long long)arg2;
- (unsigned int)validSubManifestVersionAtIndex:(unsigned long long)arg1;
- (void)addValidSubManifestVersion:(unsigned int)arg1;
- (void)clearValidSubManifestVersions;
@property(readonly, nonatomic) unsigned int *validSubManifestVersions;
@property(readonly, nonatomic) unsigned long long validSubManifestVersionsCount;
- (void)setTileRanges:(CDStruct_d66e66b9 *)arg1 count:(unsigned long long)arg2;
- (CDStruct_d66e66b9)tileRangeAtIndex:(unsigned long long)arg1;
- (void)addTileRange:(CDStruct_d66e66b9)arg1;
- (void)clearTileRanges;
@property(readonly, nonatomic) CDStruct_d66e66b9 *tileRanges;
@property(readonly, nonatomic) unsigned long long tileRangesCount;
- (id)iconChecksumAtIndex:(unsigned long long)arg1;
- (unsigned long long)iconChecksumsCount;
- (void)addIconChecksum:(id)arg1;
- (void)clearIconChecksums;
- (id)attributionAtIndex:(unsigned long long)arg1;
- (unsigned long long)attributionsCount;
- (void)addAttribution:(id)arg1;
- (void)clearAttributions;
- (id)iconAtIndex:(unsigned long long)arg1;
- (unsigned long long)iconsCount;
- (void)addIcon:(id)arg1;
- (void)clearIcons;
@property(nonatomic) _Bool hasZ;
@property(nonatomic) _Bool hasY;
@property(nonatomic) _Bool hasX;
- (void)dealloc;

@end

@interface GEORegionalResourceRegion : PBCodable <NSCopying>
{
    CDStruct_d66e66b9 *_tileRanges;
    unsigned long long _tileRangesCount;
    unsigned long long _tileRangesSpace;
    NSMutableArray *_attributions;
    NSMutableArray *_iconChecksums;
    NSMutableArray *_icons;
}

@property(retain, nonatomic) NSMutableArray *iconChecksums; // @synthesize iconChecksums=_iconChecksums;
@property(retain, nonatomic) NSMutableArray *attributions; // @synthesize attributions=_attributions;
@property(retain, nonatomic) NSMutableArray *icons; // @synthesize icons=_icons;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)iconChecksumAtIndex:(unsigned long long)arg1;
- (unsigned long long)iconChecksumsCount;
- (void)addIconChecksum:(id)arg1;
- (void)clearIconChecksums;
- (id)attributionAtIndex:(unsigned long long)arg1;
- (unsigned long long)attributionsCount;
- (void)addAttribution:(id)arg1;
- (void)clearAttributions;
- (id)iconAtIndex:(unsigned long long)arg1;
- (unsigned long long)iconsCount;
- (void)addIcon:(id)arg1;
- (void)clearIcons;
- (void)setTileRanges:(CDStruct_d66e66b9 *)arg1 count:(unsigned long long)arg2;
- (CDStruct_d66e66b9)tileRangeAtIndex:(unsigned long long)arg1;
- (void)addTileRange:(CDStruct_d66e66b9)arg1;
- (void)clearTileRanges;
@property(readonly, nonatomic) CDStruct_d66e66b9 *tileRanges;
@property(readonly, nonatomic) unsigned long long tileRangesCount;
- (void)dealloc;

@end

@interface GEORegionalResourceTile : PBCodable <NSCopying>
{
    NSMutableArray *_attributions;
    NSMutableArray *_childrens;
    NSMutableArray *_iconChecksums;
    NSMutableArray *_icons;
    unsigned int _x;
    unsigned int _y;
    unsigned int _z;
}

@property(retain, nonatomic) NSMutableArray *iconChecksums; // @synthesize iconChecksums=_iconChecksums;
@property(retain, nonatomic) NSMutableArray *attributions; // @synthesize attributions=_attributions;
@property(retain, nonatomic) NSMutableArray *icons; // @synthesize icons=_icons;
@property(retain, nonatomic) NSMutableArray *childrens; // @synthesize childrens=_childrens;
@property(nonatomic) unsigned int z; // @synthesize z=_z;
@property(nonatomic) unsigned int y; // @synthesize y=_y;
@property(nonatomic) unsigned int x; // @synthesize x=_x;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)iconChecksumAtIndex:(unsigned long long)arg1;
- (unsigned long long)iconChecksumsCount;
- (void)addIconChecksum:(id)arg1;
- (void)clearIconChecksums;
- (id)attributionAtIndex:(unsigned long long)arg1;
- (unsigned long long)attributionsCount;
- (void)addAttribution:(id)arg1;
- (void)clearAttributions;
- (id)iconAtIndex:(unsigned long long)arg1;
- (unsigned long long)iconsCount;
- (void)addIcon:(id)arg1;
- (void)clearIcons;
- (id)childrenAtIndex:(unsigned long long)arg1;
- (unsigned long long)childrensCount;
- (void)addChildren:(id)arg1;
- (void)clearChildrens;
- (void)dealloc;
- (_Bool)containsTileKey:(const struct _GEOTileKey *)arg1;

@end

@interface GEORegionalResourceTileData : PBCodable <NSCopying>
{
    NSMutableArray *_attributions;
    NSMutableArray *_icons;
}

@property(retain, nonatomic) NSMutableArray *attributions; // @synthesize attributions=_attributions;
@property(retain, nonatomic) NSMutableArray *icons; // @synthesize icons=_icons;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)attributionAtIndex:(unsigned long long)arg1;
- (unsigned long long)attributionsCount;
- (void)addAttribution:(id)arg1;
- (void)clearAttributions;
- (id)iconAtIndex:(unsigned long long)arg1;
- (unsigned long long)iconsCount;
- (void)addIcon:(id)arg1;
- (void)clearIcons;
- (void)dealloc;

@end

@interface GEORegionalResourceTileDecoder : NSObject <GEOTileDecoder>
{
}

- (id)decodeTile:(id)arg1 forKey:(const struct _GEOTileKey *)arg2;
- (_Bool)canDecodeTile:(const struct _GEOTileKey *)arg1 quickly:(_Bool *)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GEORegionalResourcesTileRequester : GEOTileRequester
{
    NSMutableArray *_loaders;
}

+ (unsigned char)tileProviderIdentifier;
- (void)cancel;
- (void)start;
- (void)dealloc;

@end

@interface GEORequestThrottler : NSObject
{
    NSMapTable *_throttleMap;
}

+ (id)sharedThrottler;
- (_Bool)allowRequest:(unsigned int)arg1 toURL:(id)arg2;
- (void)clear;
- (void)dealloc;
- (id)init;
- (void)_countryProvidersDidChange:(id)arg1;

@end

@interface GEORequester : PBRequester
{
    _Bool _disableReplay;
    NSThread *_thread;
    _Bool _usePersistentConnection;
    _Bool _useBackgroundConnection;
    NSString *_debugRequestName;
}

+ (void)replayRequests;
+ (void)stopAllRequests;
+ (id)_logRequestResponseDirectory;
+ (void)enablePersistentConnection;
+ (void)setLogRequestResponseDirectory:(id)arg1;
+ (void)setOSVersion:(id)arg1;
+ (void)setAppID:(id)arg1;
@property _Bool disableReplay; // @synthesize disableReplay=_disableReplay;
@property(retain, nonatomic) NSString *debugRequestName; // @synthesize debugRequestName=_debugRequestName;
- (id)newConnectionWithCFURLRequest:(struct _CFURLRequest *)arg1 delegate:(id)arg2;
- (struct _CFURLRequest *)newCFMutableURLRequestWithURL:(id)arg1;
- (id)persistentConnectionSession;
- (id)requestPreamble;
- (id)logResponseToFile;
- (id)logRequestToFile;
- (void)_logErrorIfNecessary:(id)arg1;
- (void)_logResponsesIfNecessary:(id)arg1;
- (void)_logRequestsIfNecessary:(id)arg1;
- (void)startWithConnectionProperties:(id)arg1;
- (void)start;
- (void)_handleResumeOnThread;
- (void)_applicationWantsToReplayRequests:(id)arg1;
- (void)_handleSuspendOnThread;
- (void)_applicationDidStopAllRequests:(id)arg1;
- (void)dealloc;
- (id)initWithURL:(id)arg1 andDelegate:(id)arg2;
- (id)initWithURL:(id)arg1 andDelegate:(id)arg2 useBackgroundConnection:(_Bool)arg3;

@end

__attribute__((visibility("hidden")))
@interface GEORerouteInfo : NSObject
{
    double _distancePenalty;
    double _throttledReroutesPenalty;
    double _penalty;
    NSDate *_time;
    double _distanceFromDestination;
}

@property(nonatomic) double distanceFromDestination; // @synthesize distanceFromDestination=_distanceFromDestination;
@property(retain, nonatomic) NSDate *time; // @synthesize time=_time;
@property(readonly, nonatomic) double penalty; // @synthesize penalty=_penalty;
- (void)updateWithCurrentTime:(id)arg1 location:(id)arg2 isMostRecentReroute:(_Bool)arg3 destinationCoordinate:(CDStruct_c3b9c2ee)arg4 numThrottledReroutes:(unsigned long long)arg5;

@end

__attribute__((visibility("hidden")))
@interface GEOResourceInfo : NSObject
{
    NSString *_name;
    long long _type;
    NSString *_checksum;
}

@property(readonly, nonatomic) NSString *checksum; // @synthesize checksum=_checksum;
@property(readonly, nonatomic) long long type; // @synthesize type=_type;
@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
- (void)dealloc;
- (id)initWithName:(id)arg1 type:(long long)arg2 checksum:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface GEOResourceLoader : NSObject
{
    unsigned int _tileGroupIdentifier;
    NSString *_uniqueTileGroupIdentifier;
    NSString *_directory;
    NSMutableArray *_resourcesToLoad;
    CDUnknownBlockType _completionHandler;
    CDUnknownBlockType _progressHandler;
    long long _numberOfDownloadsInProgress;
    long long _numberOfCopiesInProgress;
    NSMutableArray *_loadedResources;
    _Bool _canceled;
    NSString *_baseURLString;
    unsigned long long _maxConcurrentLoads;
    _Bool _ignoreCachedResources;
    NSArray *_resourceInfos;
    _Bool _firstLoadEver;
}

@property(readonly, nonatomic) NSArray *loadedResources; // @synthesize loadedResources=_loadedResources;
@property(readonly, nonatomic) NSString *uniqueTileGroupIdentifier; // @synthesize uniqueTileGroupIdentifier=_uniqueTileGroupIdentifier;
@property(readonly, nonatomic) unsigned int tileGroupIdentifier; // @synthesize tileGroupIdentifier=_tileGroupIdentifier;
- (void)cancel;
- (void)_writeResourceToDisk:(id)arg1 withData:(id)arg2 orExistingPathOnDisk:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)_loadNextResource;
- (void)startWithProgressHandler:(CDUnknownBlockType)arg1 completionHandler:(CDUnknownBlockType)arg2 firstLoadEver:(_Bool)arg3;
- (void)_cleanup;
- (id)_urlForResource:(id)arg1;
- (void)dealloc;
- (id)initWithTileGroupIdentifier:(unsigned int)arg1 uniqueIdentifier:(id)arg2 targetDirectory:(id)arg3 baseURLString:(id)arg4 resources:(id)arg5 isFirstLoad:(_Bool)arg6 ignoreCachedResources:(_Bool)arg7;

@end

@interface GEOResourceManager : NSObject
{
    unsigned int _tileGroupIdentifier;
}

+ (id)sharedManagerForTileGroupIdentifier:(unsigned int)arg1;
+ (id)sharedManager;
- (id)allResourceNames;
- (id)dataForResourceWithName:(id)arg1 fallbackBundle:(id)arg2 fallbackNameHandler:(CDUnknownBlockType)arg3;
- (_Bool)isDevResourceWithName:(id)arg1 fallbackBundle:(id)arg2 fallbackNameHandler:(CDUnknownBlockType)arg3;
- (id)pathForResourceWithName:(id)arg1 fallbackBundle:(id)arg2 fallbackNameHandler:(CDUnknownBlockType)arg3;
- (id)dataForResourceWithName:(id)arg1 fallbackBundle:(id)arg2;
- (id)pathForResourceWithName:(id)arg1 fallbackBundle:(id)arg2;
- (id)initWithTileGroupIdentifier:(unsigned int)arg1;

@end

@interface GEOResourceManifestConfiguration : NSObject
{
    unsigned int _tileGroupIdentifier;
    NSString *_os;
    NSString *_osVersion;
    NSString *_osBuild;
    NSString *_countryCode;
    NSString *_hardwareIdentifier;
    NSString *_applicationIdentifier;
    NSString *_applicationVersion;
    NSString *_environment;
}

@property(copy, nonatomic) NSString *environment; // @synthesize environment=_environment;
@property(copy, nonatomic) NSString *applicationVersion; // @synthesize applicationVersion=_applicationVersion;
@property(copy, nonatomic) NSString *applicationIdentifier; // @synthesize applicationIdentifier=_applicationIdentifier;
@property(copy, nonatomic) NSString *hardwareIdentifier; // @synthesize hardwareIdentifier=_hardwareIdentifier;
@property(copy, nonatomic) NSString *countryCode; // @synthesize countryCode=_countryCode;
@property(copy, nonatomic) NSString *osBuild; // @synthesize osBuild=_osBuild;
@property(copy, nonatomic) NSString *osVersion; // @synthesize osVersion=_osVersion;
@property(copy, nonatomic) NSString *os; // @synthesize os=_os;
@property(nonatomic) unsigned int tileGroupIdentifier; // @synthesize tileGroupIdentifier=_tileGroupIdentifier;
- (id)directorySuffix;
- (_Bool)isDefaultConfiguration;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)conciseDictionaryRepresentation;
- (id)initWithConciseDictionaryRepresentation:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface GEOResourceManifestDownload : PBCodable <NSCopying>
{
    GEODownloadMetadata *_metadata;
    GEOResources *_resources;
}

@property(retain, nonatomic) GEODownloadMetadata *metadata; // @synthesize metadata=_metadata;
@property(retain, nonatomic) GEOResources *resources; // @synthesize resources=_resources;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasResources;
- (void)dealloc;
- (id)initWithResourceManifestData:(id)arg1;

@end

@interface GEOResourceManifestManager : NSObject <GEOResourceManifestServerProxyDelegate>
{
    id <GEOResourceManifestServerProxy> _serverProxy;
    NSHashTable *_serverProxyObservers;
    GEOActiveTileGroup *_activeTileGroup;
    NSLock *_activeTileGroupLock;
    NSDictionary *_resourceNamesToPaths;
    NSSet *_allResourceNames;
    _Bool _needsToLoadTileGroupFromDisk;
    NSMutableArray *_tileGroupObservers;
    NSLock *_tileGroupObserversLock;
    NSLock *_closedCountLock;
    long long _closedCount;
    GEOLocalizationRegionsInfo *_localizationRegionsInfo;
    NSMutableArray *_networkActivityHandlers;
    _Bool _isUpdatingManifest;
    _Bool _isLoadingResources;
    NSLock *_resourceNamesToPathsLock;
    GEOResourceManifestConfiguration *_configuration;
}

+ (id)modernManagerForConfiguration:(id)arg1;
+ (id)modernManagerForTileGroupIdentifier:(unsigned int)arg1;
+ (id)modernManager;
+ (id)sharedManager;
+ (void)setHiDPI:(_Bool)arg1;
+ (void)useLocalProxy;
+ (void)useRemoteProxy;
+ (void)setServerProxyClass:(Class)arg1;
+ (void)disableServerConnection;
@property(readonly, nonatomic) id <GEOResourceManifestServerProxy> serverProxy; // @synthesize serverProxy=_serverProxy;
- (void)devResourcesFolderDidChange;
- (void)_notifyObserversOfResourcesChange;
- (void)stopObservingDevResources;
- (void)startObservingDevResources;
- (void)forceUpdate;
- (void)resetActiveTileGroup;
- (void)setActiveTileGroupIdentifier:(unsigned int)arg1;
- (unsigned int)activeTileGroupIdentifier;
- (void)getResourceManifestWithHandler:(CDUnknownBlockType)arg1;
- (_Bool)hasResourceManifest;
- (id)detailedDescription;
- (void)updateManifest:(CDUnknownBlockType)arg1;
- (void)updateManifestIfNecessary:(CDUnknownBlockType)arg1;
- (void)setManifestToken:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (oneway void)serverProxy:(id)arg1 didChangeActiveTileGroup:(id)arg2 finishedCallback:(CDUnknownBlockType)arg3;
- (oneway void)serverProxyDidStopLoadingResources:(id)arg1;
- (oneway void)serverProxyWillStartLoadingResources:(id)arg1;
- (oneway void)serverProxyDidStopUpdatingResourceManifest:(id)arg1;
- (oneway void)serverProxyWillStartUpdatingResourceManifest:(id)arg1;
- (void)addNetworkActivityHandler:(CDUnknownBlockType)arg1;
- (id)pathForResourceWithName:(id)arg1;
- (void)_buildResourceNamesToPaths;
- (id)allResourceNames;
- (_Bool)supportsTileStyle:(int)arg1 size:(int)arg2 scale:(int)arg3;
- (id)languageForTileKey:(const struct _GEOTileKey *)arg1 overrideLocale:(id)arg2;
- (id)languageForTileKey:(const struct _GEOTileKey *)arg1;
- (_Bool)isAvailableForTileKey:(const struct _GEOTileKey *)arg1;
- (double)timeToLiveForTileKey:(const struct _GEOTileKey *)arg1;
- (unsigned int)versionForTileKey:(const struct _GEOTileKey *)arg1;
- (id)localizationURLStringIfNecessaryForTileKey:(const struct _GEOTileKey *)arg1 overrideLocale:(id)arg2;
- (id)multiTileURLStringForTileKey:(const struct _GEOTileKey *)arg1 useStatusCodes:(_Bool *)arg2;
- (id)baseURLStringForTileKey:(const struct _GEOTileKey *)arg1;
- (id)_activeTileSetForKey:(const struct _GEOTileKey *)arg1;
@property(readonly, nonatomic) _Bool hasActiveTileGroup;
- (unsigned int)mapMatchingZoomLevel;
- (int)mapMatchingTileSetStyle;
- (void)removeTileGroupObserver:(id)arg1;
- (void)addTileGroupObserver:(id)arg1 queue:(id)arg2;
- (void)removeServerProxyObserver:(id)arg1;
- (void)addServerProxyObserver:(id)arg1;
- (void)_localeChanged:(id)arg1;
- (void)closeServerConnection;
- (void)openServerConnection;
- (id)authToken;
@property(readonly, nonatomic) GEOActiveTileGroup *activeTileGroup;
- (void)dealloc;
- (id)init;
- (id)initWithConfiguration:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GEOResourceManifestServerLocalProxy : NSObject <NSURLConnectionDelegate, GEOResourceManifestServerProxy>
{
    id <GEOResourceManifestServerProxyDelegate> _delegate;
    NSURLConnection *_connection;
    NSMutableData *_responseData;
    NSString *_responseETag;
    GEOResourceManifestConfiguration *_configuration;
    _Bool _isObservingManifestReachability;
    NSTimer *_manifestUpdateTimer;
    _Bool _isObservingTileGroupReachability;
    NSTimer *_tileGroupUpdateTimer;
    GEOResourceManifestDownload *_resourceManifest;
    GEOActiveTileGroup *_activeTileGroup;
    GEOResourceLoader *_resourceLoader;
    NSMutableDictionary *_resourceRetainCounts;
    _Bool _started;
    unsigned long long _manifestRetryCount;
    unsigned long long _tileGroupRetryCount;
    NSString *_authToken;
    NSLock *_authTokenLock;
    NSError *_lastResourceManifestLoadError;
    NSMutableArray *_manifestUpdateCompletionHandlers;
}

@property(nonatomic) id <GEOResourceManifestServerProxyDelegate> delegate; // @synthesize delegate=_delegate;
- (void)_purgeOldRegionalResources;
- (oneway void)releaseResources:(id)arg1;
- (oneway void)retainResources:(id)arg1;
- (void)_retainResource:(id)arg1;
- (id)_resourceInfosForTileGroup:(id)arg1;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)_notifyManifestUpdateCompletionHandlers:(id)arg1;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (void)setManifestToken:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)_updateTimerFired:(id)arg1;
- (void)_scheduleUpdateTimerWithTimeInterval:(double)arg1;
- (void)getResourceManifestWithHandler:(CDUnknownBlockType)arg1;
- (void)forceUpdate:(CDUnknownBlockType)arg1;
- (void)updateIfNecessary:(CDUnknownBlockType)arg1;
- (void)_updateManifest;
- (void)_updateManifest:(CDUnknownBlockType)arg1;
- (_Bool)_updateManifestIfNecessary:(CDUnknownBlockType)arg1;
- (id)_manifestURL;
- (void)_reachabilityChanged:(id)arg1;
- (void)_registerReachabilityObserver:(unsigned long long)arg1;
- (void)_countryProvidersDidChange:(id)arg1;
- (void)_writeManifestToDisk:(id)arg1;
- (void)_writeActiveTileGroupToDisk:(id)arg1;
- (void)_activeTileGroupOverridesChanged:(id)arg1;
- (oneway void)resetActiveTileGroup;
- (oneway void)setActiveTileGroupIdentifier:(id)arg1;
- (void)_cleanupConnection;
- (void)_cancelConnection;
- (void)_forceChangeActiveTileGroup:(id)arg1 flushTileCache:(_Bool)arg2 ignoreIdentifier:(_Bool)arg3;
- (void)_tileGroupTimerFired:(id)arg1;
- (void)_scheduleTileGroupUpdateTimerWithTimeInterval:(double)arg1;
- (void)_considerChangingActiveTileGroup;
- (id)_idealTileGroupToUse;
- (_Bool)_changeActiveTileGroup:(id)arg1 flushTileCache:(_Bool)arg2;
- (void)_loadFromDisk;
- (void)_startServer;
- (id)configuration;
- (id)authToken;
- (void)closeConnection;
- (void)openConnection;
- (void)dealloc;
- (id)initWithDelegate:(id)arg1 configuration:(id)arg2;
- (id)serverQueue;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GEOResourceManifestServerRemoteProxy : NSObject <GEOResourceManifestServerProxy>
{
    id <GEOResourceManifestServerProxyDelegate> _delegate;
    NSObject<OS_xpc_object> *_conn;
    NSLock *_connLock;
    NSHashTable *_cancellingConnections;
    NSLock *_cancellingConnectionsLock;
    unsigned long long _retryCount;
    _Bool _isUpdatingManifest;
    _Bool _isLoadingResources;
    NSObject<OS_dispatch_queue> *_serverQueue;
    GEOResourceManifestConfiguration *_configuration;
    NSLock *_authTokenLock;
    NSString *_authToken;
}

@property(nonatomic) id <GEOResourceManifestServerProxyDelegate> delegate; // @synthesize delegate=_delegate;
- (void)_handleMessage:(id)arg1 xpcMessage:(id)arg2;
- (void)setManifestToken:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)getResourceManifestWithHandler:(CDUnknownBlockType)arg1;
- (void)forceUpdate:(CDUnknownBlockType)arg1;
- (void)updateIfNecessary:(CDUnknownBlockType)arg1;
- (oneway void)resetActiveTileGroup;
- (oneway void)setActiveTileGroupIdentifier:(id)arg1;
- (void)closeConnection;
- (void)openConnection;
- (void)_setupConnection;
- (id)configuration;
- (id)authToken;
- (void)dealloc;
- (id)initWithDelegate:(id)arg1 configuration:(id)arg2;
- (id)serverQueue;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GEOResources : PBCodable <NSCopying>
{
    NSString *_addressCorrectionInitURL;
    NSString *_addressCorrectionUpdateURL;
    NSMutableArray *_announcementsSupportedLanguages;
    NSString *_announcementsURL;
    NSMutableArray *_attributionBadges;
    NSMutableArray *_attributions;
    NSString *_authToken;
    NSString *_autocompleteURL;
    NSString *_batchReverseGeocoderURL;
    NSString *_businessCallerIDURL;
    NSString *_businessNameResolutionURL;
    NSString *_directionsURL;
    NSString *_dispatcherURL;
    NSString *_etaURL;
    NSMutableArray *_fontChecksums;
    NSMutableArray *_fonts;
    NSString *_forwardGeocoderURL;
    NSMutableArray *_iconChecksums;
    NSMutableArray *_icons;
    NSString *_locationShiftURL;
    NSString *_mapMatchURL;
    NSString *_polyLocationShiftURL;
    NSString *_problemCategoriesURL;
    NSString *_problemNotificationAvailabilityURL;
    NSString *_problemOptInURL;
    NSString *_problemStatusURL;
    NSString *_problemSubmissionURL;
    NSMutableArray *_regionalResources;
    NSString *_releaseInfo;
    NSString *_resourcesURL;
    NSString *_reverseGeocoderURL;
    NSString *_reverseGeocoderVersionsURL;
    NSString *_searchAttributionManifestURL;
    NSString *_searchURL;
    NSString *_simpleETAURL;
    NSMutableArray *_styleSheetChecksums;
    NSMutableArray *_styleSheets;
    NSMutableArray *_textureChecksums;
    NSMutableArray *_textures;
    NSMutableArray *_tileGroups;
    NSMutableArray *_tileSets;
    NSString *_usageURL;
    GEOVersionManifest *_versionManifest;
    NSMutableArray *_xmlChecksums;
    NSMutableArray *_xmls;
}

@property(retain, nonatomic) GEOVersionManifest *versionManifest; // @synthesize versionManifest=_versionManifest;
@property(retain, nonatomic) NSString *problemOptInURL; // @synthesize problemOptInURL=_problemOptInURL;
@property(retain, nonatomic) NSString *dispatcherURL; // @synthesize dispatcherURL=_dispatcherURL;
@property(retain, nonatomic) NSString *businessNameResolutionURL; // @synthesize businessNameResolutionURL=_businessNameResolutionURL;
@property(retain, nonatomic) NSMutableArray *announcementsSupportedLanguages; // @synthesize announcementsSupportedLanguages=_announcementsSupportedLanguages;
@property(retain, nonatomic) NSString *announcementsURL; // @synthesize announcementsURL=_announcementsURL;
@property(retain, nonatomic) NSString *problemNotificationAvailabilityURL; // @synthesize problemNotificationAvailabilityURL=_problemNotificationAvailabilityURL;
@property(retain, nonatomic) NSString *businessCallerIDURL; // @synthesize businessCallerIDURL=_businessCallerIDURL;
@property(retain, nonatomic) NSString *usageURL; // @synthesize usageURL=_usageURL;
@property(retain, nonatomic) NSString *problemCategoriesURL; // @synthesize problemCategoriesURL=_problemCategoriesURL;
@property(retain, nonatomic) NSString *reverseGeocoderVersionsURL; // @synthesize reverseGeocoderVersionsURL=_reverseGeocoderVersionsURL;
@property(retain, nonatomic) NSString *problemStatusURL; // @synthesize problemStatusURL=_problemStatusURL;
@property(retain, nonatomic) NSString *problemSubmissionURL; // @synthesize problemSubmissionURL=_problemSubmissionURL;
@property(retain, nonatomic) NSString *polyLocationShiftURL; // @synthesize polyLocationShiftURL=_polyLocationShiftURL;
@property(retain, nonatomic) NSString *addressCorrectionUpdateURL; // @synthesize addressCorrectionUpdateURL=_addressCorrectionUpdateURL;
@property(retain, nonatomic) NSString *addressCorrectionInitURL; // @synthesize addressCorrectionInitURL=_addressCorrectionInitURL;
@property(retain, nonatomic) NSMutableArray *xmlChecksums; // @synthesize xmlChecksums=_xmlChecksums;
@property(retain, nonatomic) NSMutableArray *iconChecksums; // @synthesize iconChecksums=_iconChecksums;
@property(retain, nonatomic) NSMutableArray *fontChecksums; // @synthesize fontChecksums=_fontChecksums;
@property(retain, nonatomic) NSMutableArray *textureChecksums; // @synthesize textureChecksums=_textureChecksums;
@property(retain, nonatomic) NSMutableArray *styleSheetChecksums; // @synthesize styleSheetChecksums=_styleSheetChecksums;
@property(retain, nonatomic) NSString *simpleETAURL; // @synthesize simpleETAURL=_simpleETAURL;
@property(retain, nonatomic) NSString *mapMatchURL; // @synthesize mapMatchURL=_mapMatchURL;
@property(retain, nonatomic) NSString *batchReverseGeocoderURL; // @synthesize batchReverseGeocoderURL=_batchReverseGeocoderURL;
@property(retain, nonatomic) NSString *releaseInfo; // @synthesize releaseInfo=_releaseInfo;
@property(retain, nonatomic) NSString *locationShiftURL; // @synthesize locationShiftURL=_locationShiftURL;
@property(retain, nonatomic) NSString *etaURL; // @synthesize etaURL=_etaURL;
@property(retain, nonatomic) NSString *directionsURL; // @synthesize directionsURL=_directionsURL;
@property(retain, nonatomic) NSString *forwardGeocoderURL; // @synthesize forwardGeocoderURL=_forwardGeocoderURL;
@property(retain, nonatomic) NSString *reverseGeocoderURL; // @synthesize reverseGeocoderURL=_reverseGeocoderURL;
@property(retain, nonatomic) NSString *autocompleteURL; // @synthesize autocompleteURL=_autocompleteURL;
@property(retain, nonatomic) NSString *searchAttributionManifestURL; // @synthesize searchAttributionManifestURL=_searchAttributionManifestURL;
@property(retain, nonatomic) NSString *searchURL; // @synthesize searchURL=_searchURL;
@property(retain, nonatomic) NSString *resourcesURL; // @synthesize resourcesURL=_resourcesURL;
@property(retain, nonatomic) NSString *authToken; // @synthesize authToken=_authToken;
@property(retain, nonatomic) NSMutableArray *attributions; // @synthesize attributions=_attributions;
@property(retain, nonatomic) NSMutableArray *attributionBadges; // @synthesize attributionBadges=_attributionBadges;
@property(retain, nonatomic) NSMutableArray *xmls; // @synthesize xmls=_xmls;
@property(retain, nonatomic) NSMutableArray *regionalResources; // @synthesize regionalResources=_regionalResources;
@property(retain, nonatomic) NSMutableArray *icons; // @synthesize icons=_icons;
@property(retain, nonatomic) NSMutableArray *fonts; // @synthesize fonts=_fonts;
@property(retain, nonatomic) NSMutableArray *textures; // @synthesize textures=_textures;
@property(retain, nonatomic) NSMutableArray *styleSheets; // @synthesize styleSheets=_styleSheets;
@property(retain, nonatomic) NSMutableArray *tileSets; // @synthesize tileSets=_tileSets;
@property(retain, nonatomic) NSMutableArray *tileGroups; // @synthesize tileGroups=_tileGroups;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasVersionManifest;
@property(readonly, nonatomic) _Bool hasProblemOptInURL;
@property(readonly, nonatomic) _Bool hasDispatcherURL;
@property(readonly, nonatomic) _Bool hasBusinessNameResolutionURL;
- (id)announcementsSupportedLanguagesAtIndex:(unsigned long long)arg1;
- (unsigned long long)announcementsSupportedLanguagesCount;
- (void)addAnnouncementsSupportedLanguages:(id)arg1;
- (void)clearAnnouncementsSupportedLanguages;
@property(readonly, nonatomic) _Bool hasAnnouncementsURL;
@property(readonly, nonatomic) _Bool hasProblemNotificationAvailabilityURL;
@property(readonly, nonatomic) _Bool hasBusinessCallerIDURL;
@property(readonly, nonatomic) _Bool hasUsageURL;
@property(readonly, nonatomic) _Bool hasProblemCategoriesURL;
@property(readonly, nonatomic) _Bool hasReverseGeocoderVersionsURL;
@property(readonly, nonatomic) _Bool hasProblemStatusURL;
@property(readonly, nonatomic) _Bool hasProblemSubmissionURL;
@property(readonly, nonatomic) _Bool hasPolyLocationShiftURL;
@property(readonly, nonatomic) _Bool hasAddressCorrectionUpdateURL;
@property(readonly, nonatomic) _Bool hasAddressCorrectionInitURL;
- (id)xmlChecksumAtIndex:(unsigned long long)arg1;
- (unsigned long long)xmlChecksumsCount;
- (void)addXmlChecksum:(id)arg1;
- (void)clearXmlChecksums;
- (id)iconChecksumAtIndex:(unsigned long long)arg1;
- (unsigned long long)iconChecksumsCount;
- (void)addIconChecksum:(id)arg1;
- (void)clearIconChecksums;
- (id)fontChecksumAtIndex:(unsigned long long)arg1;
- (unsigned long long)fontChecksumsCount;
- (void)addFontChecksum:(id)arg1;
- (void)clearFontChecksums;
- (id)textureChecksumAtIndex:(unsigned long long)arg1;
- (unsigned long long)textureChecksumsCount;
- (void)addTextureChecksum:(id)arg1;
- (void)clearTextureChecksums;
- (id)styleSheetChecksumAtIndex:(unsigned long long)arg1;
- (unsigned long long)styleSheetChecksumsCount;
- (void)addStyleSheetChecksum:(id)arg1;
- (void)clearStyleSheetChecksums;
@property(readonly, nonatomic) _Bool hasSimpleETAURL;
@property(readonly, nonatomic) _Bool hasMapMatchURL;
@property(readonly, nonatomic) _Bool hasBatchReverseGeocoderURL;
@property(readonly, nonatomic) _Bool hasReleaseInfo;
@property(readonly, nonatomic) _Bool hasLocationShiftURL;
@property(readonly, nonatomic) _Bool hasEtaURL;
@property(readonly, nonatomic) _Bool hasDirectionsURL;
@property(readonly, nonatomic) _Bool hasForwardGeocoderURL;
@property(readonly, nonatomic) _Bool hasReverseGeocoderURL;
@property(readonly, nonatomic) _Bool hasAutocompleteURL;
@property(readonly, nonatomic) _Bool hasSearchAttributionManifestURL;
@property(readonly, nonatomic) _Bool hasSearchURL;
@property(readonly, nonatomic) _Bool hasResourcesURL;
@property(readonly, nonatomic) _Bool hasAuthToken;
- (id)attributionAtIndex:(unsigned long long)arg1;
- (unsigned long long)attributionsCount;
- (void)addAttribution:(id)arg1;
- (void)clearAttributions;
- (id)attributionBadgeAtIndex:(unsigned long long)arg1;
- (unsigned long long)attributionBadgesCount;
- (void)addAttributionBadge:(id)arg1;
- (void)clearAttributionBadges;
- (id)xmlAtIndex:(unsigned long long)arg1;
- (unsigned long long)xmlsCount;
- (void)addXml:(id)arg1;
- (void)clearXmls;
- (id)regionalResourceAtIndex:(unsigned long long)arg1;
- (unsigned long long)regionalResourcesCount;
- (void)addRegionalResource:(id)arg1;
- (void)clearRegionalResources;
- (id)iconAtIndex:(unsigned long long)arg1;
- (unsigned long long)iconsCount;
- (void)addIcon:(id)arg1;
- (void)clearIcons;
- (id)fontAtIndex:(unsigned long long)arg1;
- (unsigned long long)fontsCount;
- (void)addFont:(id)arg1;
- (void)clearFonts;
- (id)textureAtIndex:(unsigned long long)arg1;
- (unsigned long long)texturesCount;
- (void)addTexture:(id)arg1;
- (void)clearTextures;
- (id)styleSheetAtIndex:(unsigned long long)arg1;
- (unsigned long long)styleSheetsCount;
- (void)addStyleSheet:(id)arg1;
- (void)clearStyleSheets;
- (id)tileSetAtIndex:(unsigned long long)arg1;
- (unsigned long long)tileSetsCount;
- (void)addTileSet:(id)arg1;
- (void)clearTileSets;
- (id)tileGroupAtIndex:(unsigned long long)arg1;
- (unsigned long long)tileGroupsCount;
- (void)addTileGroup:(id)arg1;
- (void)clearTileGroups;
- (void)dealloc;

@end

@interface GEOReverseGeocoderCache : NSCache
{
}

+ (id)sharedCache;
- (void)clear;
- (void)setResponse:(id)arg1 forRequest:(id)arg2;
- (id)responseForRequest:(id)arg1;
- (id)init;

@end

@interface GEOReview : PBCodable <NSCopying>
{
    double _reviewTime;
    double _score;
    GEOUser *_reviewer;
    NSString *_snippet;
    NSString *_uid;
    struct {
        unsigned int reviewTime:1;
        unsigned int score:1;
    } _has;
}

@property(retain, nonatomic) NSString *uid; // @synthesize uid=_uid;
@property(retain, nonatomic) GEOUser *reviewer; // @synthesize reviewer=_reviewer;
@property(nonatomic) double reviewTime; // @synthesize reviewTime=_reviewTime;
@property(nonatomic) double score; // @synthesize score=_score;
@property(retain, nonatomic) NSString *snippet; // @synthesize snippet=_snippet;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasUid;
@property(readonly, nonatomic) _Bool hasReviewer;
@property(nonatomic) _Bool hasReviewTime;
@property(nonatomic) _Bool hasScore;
@property(readonly, nonatomic) _Bool hasSnippet;
- (void)dealloc;
- (id)initWithPlaceDataReview:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface GEORisonParser : NSObject
{
    NSNumberFormatter *_formatter;
    NSMutableCharacterSet *_risonTerminators;
    NSMutableCharacterSet *_risonEscapes;
}

- (id)stringFromNull:(id)arg1;
- (id)stringFromNumber:(id)arg1;
- (id)stringFromString:(id)arg1;
- (id)stringFromArray:(id)arg1;
- (id)stringFromDictionary:(id)arg1;
- (id)stringFromRisonObject:(id)arg1;
- (id)numberWithReaderInfo:(CDStruct_8bf61218 *)arg1;
- (id)boolWithReaderInfo:(CDStruct_8bf61218 *)arg1;
- (id)nullWithReaderInfo:(CDStruct_8bf61218 *)arg1;
- (id)stringLiteralWithReaderInfo:(CDStruct_8bf61218 *)arg1;
- (id)arrayWithReaderInfo:(CDStruct_8bf61218 *)arg1;
- (id)keyWithReaderInfo:(CDStruct_8bf61218 *)arg1;
- (id)dictionaryWithReaderInfo:(CDStruct_8bf61218 *)arg1;
- (id)objectWithReaderInfo:(CDStruct_8bf61218 *)arg1;
- (id)objectFromRisonString:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface GEORoadAccessPoint : PBCodable <NSCopying>
{
    int _drivingDirection;
    GEOLatLng *_location;
    int _walkingDirection;
    _Bool _isApproximate;
    struct {
        unsigned int drivingDirection:1;
        unsigned int walkingDirection:1;
        unsigned int isApproximate:1;
    } _has;
}

@property(nonatomic) int drivingDirection; // @synthesize drivingDirection=_drivingDirection;
@property(nonatomic) int walkingDirection; // @synthesize walkingDirection=_walkingDirection;
@property(nonatomic) _Bool isApproximate; // @synthesize isApproximate=_isApproximate;
@property(retain, nonatomic) GEOLatLng *location; // @synthesize location=_location;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasDrivingDirection;
@property(nonatomic) _Bool hasWalkingDirection;
@property(nonatomic) _Bool hasIsApproximate;
@property(readonly, nonatomic) _Bool hasLocation;
- (void)dealloc;

@end

@interface GEORoute : PBCodable <NSCopying>
{
    CDStruct_95bda58d _advisorys;
    CDStruct_9f2792e4 _incidentEndOffsetsInRoutes;
    CDStruct_9f2792e4 _incidentIndices;
    CDStruct_9f2792e4 _trafficColorOffsets;
    CDStruct_9f2792e4 _trafficColors;
    NSMutableArray *_advisoryNotices;
    NSData *_arrivalRouteID;
    unsigned int _arrivalStepID;
    NSData *_basicPoints;
    NSData *_departureRouteID;
    unsigned int _departureStepID;
    unsigned int _distance;
    int _drivingSide;
    unsigned int _expectedTime;
    unsigned int _historicTravelTime;
    NSString *_name;
    NSString *_phoneticName;
    NSData *_routeID;
    NSMutableArray *_routeNames;
    int _routeType;
    NSMutableArray *_steps;
    int _transportType;
    NSData *_unpackedLatLngVertices;
    NSData *_zilchPoints;
    struct {
        unsigned int arrivalStepID:1;
        unsigned int departureStepID:1;
        unsigned int distance:1;
        unsigned int drivingSide:1;
        unsigned int expectedTime:1;
        unsigned int historicTravelTime:1;
        unsigned int routeType:1;
        unsigned int transportType:1;
    } _has;
}

@property(retain, nonatomic) NSData *unpackedLatLngVertices; // @synthesize unpackedLatLngVertices=_unpackedLatLngVertices;
@property(nonatomic) unsigned int historicTravelTime; // @synthesize historicTravelTime=_historicTravelTime;
@property(retain, nonatomic) NSMutableArray *routeNames; // @synthesize routeNames=_routeNames;
@property(retain, nonatomic) NSMutableArray *advisoryNotices; // @synthesize advisoryNotices=_advisoryNotices;
@property(retain, nonatomic) NSData *basicPoints; // @synthesize basicPoints=_basicPoints;
@property(nonatomic) unsigned int arrivalStepID; // @synthesize arrivalStepID=_arrivalStepID;
@property(retain, nonatomic) NSData *arrivalRouteID; // @synthesize arrivalRouteID=_arrivalRouteID;
@property(nonatomic) unsigned int departureStepID; // @synthesize departureStepID=_departureStepID;
@property(retain, nonatomic) NSData *departureRouteID; // @synthesize departureRouteID=_departureRouteID;
@property(retain, nonatomic) NSData *zilchPoints; // @synthesize zilchPoints=_zilchPoints;
@property(retain, nonatomic) NSData *routeID; // @synthesize routeID=_routeID;
@property(nonatomic) unsigned int expectedTime; // @synthesize expectedTime=_expectedTime;
@property(nonatomic) unsigned int distance; // @synthesize distance=_distance;
@property(retain, nonatomic) NSString *phoneticName; // @synthesize phoneticName=_phoneticName;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
@property(retain, nonatomic) NSMutableArray *steps; // @synthesize steps=_steps;
@property(nonatomic) int transportType; // @synthesize transportType=_transportType;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (void)setIncidentEndOffsetsInRoutes:(unsigned int *)arg1 count:(unsigned long long)arg2;
- (unsigned int)incidentEndOffsetsInRouteAtIndex:(unsigned long long)arg1;
- (void)addIncidentEndOffsetsInRoute:(unsigned int)arg1;
- (void)clearIncidentEndOffsetsInRoutes;
@property(readonly, nonatomic) unsigned int *incidentEndOffsetsInRoutes;
@property(readonly, nonatomic) unsigned long long incidentEndOffsetsInRoutesCount;
- (void)setIncidentIndices:(unsigned int *)arg1 count:(unsigned long long)arg2;
- (unsigned int)incidentIndicesAtIndex:(unsigned long long)arg1;
- (void)addIncidentIndices:(unsigned int)arg1;
- (void)clearIncidentIndices;
@property(readonly, nonatomic) unsigned int *incidentIndices;
@property(readonly, nonatomic) unsigned long long incidentIndicesCount;
@property(readonly, nonatomic) _Bool hasUnpackedLatLngVertices;
- (void)setAdvisorys:(int *)arg1 count:(unsigned long long)arg2;
- (int)advisoryAtIndex:(unsigned long long)arg1;
- (void)addAdvisory:(int)arg1;
- (void)clearAdvisorys;
@property(readonly, nonatomic) int *advisorys;
@property(readonly, nonatomic) unsigned long long advisorysCount;
@property(nonatomic) _Bool hasHistoricTravelTime;
- (id)routeNameAtIndex:(unsigned long long)arg1;
- (unsigned long long)routeNamesCount;
- (void)addRouteName:(id)arg1;
- (void)clearRouteNames;
- (void)setTrafficColorOffsets:(unsigned int *)arg1 count:(unsigned long long)arg2;
- (unsigned int)trafficColorOffsetAtIndex:(unsigned long long)arg1;
- (void)addTrafficColorOffset:(unsigned int)arg1;
- (void)clearTrafficColorOffsets;
@property(readonly, nonatomic) unsigned int *trafficColorOffsets;
@property(readonly, nonatomic) unsigned long long trafficColorOffsetsCount;
- (void)setTrafficColors:(unsigned int *)arg1 count:(unsigned long long)arg2;
- (unsigned int)trafficColorAtIndex:(unsigned long long)arg1;
- (void)addTrafficColor:(unsigned int)arg1;
- (void)clearTrafficColors;
@property(readonly, nonatomic) unsigned int *trafficColors;
@property(readonly, nonatomic) unsigned long long trafficColorsCount;
- (id)advisoryNoticeAtIndex:(unsigned long long)arg1;
- (unsigned long long)advisoryNoticesCount;
- (void)addAdvisoryNotice:(id)arg1;
- (void)clearAdvisoryNotices;
@property(readonly, nonatomic) _Bool hasBasicPoints;
@property(nonatomic) _Bool hasArrivalStepID;
@property(readonly, nonatomic) _Bool hasArrivalRouteID;
@property(nonatomic) _Bool hasDepartureStepID;
@property(readonly, nonatomic) _Bool hasDepartureRouteID;
@property(nonatomic) _Bool hasDrivingSide;
@property(nonatomic) int drivingSide; // @synthesize drivingSide=_drivingSide;
@property(readonly, nonatomic) _Bool hasZilchPoints;
@property(nonatomic) _Bool hasRouteType;
@property(nonatomic) int routeType; // @synthesize routeType=_routeType;
@property(readonly, nonatomic) _Bool hasRouteID;
@property(nonatomic) _Bool hasExpectedTime;
@property(nonatomic) _Bool hasDistance;
@property(readonly, nonatomic) _Bool hasPhoneticName;
@property(readonly, nonatomic) _Bool hasName;
- (id)stepAtIndex:(unsigned long long)arg1;
- (unsigned long long)stepsCount;
- (void)addStep:(id)arg1;
- (void)clearSteps;
@property(nonatomic) _Bool hasTransportType;
- (void)dealloc;
- (int)transportTypeForStep:(id)arg1;
- (_Bool)isContingentRouteFor:(id)arg1 afterPoint:(unsigned int)arg2 mainRoutes:(id)arg3;
- (id)newETARouteFromStepIndex:(unsigned long long)arg1 stepPercentRemaining:(double)arg2;
- (id)newETARoute;
- (id)convertToFullRoute:(id)arg1 includeDepartureRoutes:(_Bool)arg2 uniquePointRange:(struct _NSRange *)arg3;
- (unsigned long long)indexForStepID:(unsigned long long)arg1;
- (id)simplifiedDescription;
- (id)debugDescription;
- (unsigned long long)stepIndexForPointIndex:(unsigned int)arg1;
- (unsigned long long)distanceFromStepIndex:(unsigned long long)arg1 toStepIndex:(unsigned long long)arg2;
- (_Bool)unpackBasicPoints;
- (_Bool)unpackZilchPoints;
- (_Bool)unpackLatLngVertices;
@property(readonly) unsigned int pointCount;
- (CDStruct_c3b9c2ee)pointAt:(unsigned int)arg1;
- (void *)controlPoints;

@end

@interface GEORouteAttributes : PBCodable <NSCopying>
{
    CDStruct_8c2f87f5 _timepoint;
    CDStruct_95bda58d _additionalTransportTypes;
    int _basicPointsToBeIncluded;
    int _mainTransportType;
    NSString *_phoneticLocaleIdentifier;
    int _trafficType;
    unsigned int _walkingLimitMeters;
    _Bool _includeContingencyRoutes;
    _Bool _includeHistoricTravelTime;
    _Bool _includeLaneGuidance;
    _Bool _includeManeuverIcons;
    _Bool _includePhonetics;
    _Bool _includeSubsteps;
    _Bool _includeTrafficAlongRoute;
    _Bool _includeTrafficIncidents;
    _Bool _includeZilchPoints;
    struct {
        unsigned int timepoint:1;
        unsigned int basicPointsToBeIncluded:1;
        unsigned int mainTransportType:1;
        unsigned int trafficType:1;
        unsigned int walkingLimitMeters:1;
        unsigned int includeContingencyRoutes:1;
        unsigned int includeHistoricTravelTime:1;
        unsigned int includeLaneGuidance:1;
        unsigned int includeManeuverIcons:1;
        unsigned int includePhonetics:1;
        unsigned int includeSubsteps:1;
        unsigned int includeTrafficAlongRoute:1;
        unsigned int includeTrafficIncidents:1;
        unsigned int includeZilchPoints:1;
    } _has;
}

@property(nonatomic) CDStruct_8c2f87f5 timepoint; // @synthesize timepoint=_timepoint;
@property(retain, nonatomic) NSString *phoneticLocaleIdentifier; // @synthesize phoneticLocaleIdentifier=_phoneticLocaleIdentifier;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (void)setAdditionalTransportTypes:(int *)arg1 count:(unsigned long long)arg2;
- (int)additionalTransportTypeAtIndex:(unsigned long long)arg1;
- (void)addAdditionalTransportType:(int)arg1;
- (void)clearAdditionalTransportTypes;
@property(readonly, nonatomic) int *additionalTransportTypes;
@property(readonly, nonatomic) unsigned long long additionalTransportTypesCount;
@property(nonatomic) _Bool hasWalkingLimitMeters;
@property(nonatomic) unsigned int walkingLimitMeters; // @synthesize walkingLimitMeters=_walkingLimitMeters;
@property(nonatomic) _Bool hasIncludeTrafficIncidents;
@property(nonatomic) _Bool includeTrafficIncidents; // @synthesize includeTrafficIncidents=_includeTrafficIncidents;
@property(nonatomic) _Bool hasIncludeSubsteps;
@property(nonatomic) _Bool includeSubsteps; // @synthesize includeSubsteps=_includeSubsteps;
@property(nonatomic) _Bool hasIncludeHistoricTravelTime;
@property(nonatomic) _Bool includeHistoricTravelTime; // @synthesize includeHistoricTravelTime=_includeHistoricTravelTime;
@property(nonatomic) _Bool hasTimepoint;
@property(nonatomic) _Bool hasIncludeTrafficAlongRoute;
@property(nonatomic) _Bool includeTrafficAlongRoute; // @synthesize includeTrafficAlongRoute=_includeTrafficAlongRoute;
@property(readonly, nonatomic) _Bool hasPhoneticLocaleIdentifier;
@property(nonatomic) _Bool hasTrafficType;
@property(nonatomic) int trafficType; // @synthesize trafficType=_trafficType;
@property(nonatomic) _Bool hasBasicPointsToBeIncluded;
@property(nonatomic) int basicPointsToBeIncluded; // @synthesize basicPointsToBeIncluded=_basicPointsToBeIncluded;
@property(nonatomic) _Bool hasIncludeLaneGuidance;
@property(nonatomic) _Bool includeLaneGuidance; // @synthesize includeLaneGuidance=_includeLaneGuidance;
@property(nonatomic) _Bool hasIncludeContingencyRoutes;
@property(nonatomic) _Bool includeContingencyRoutes; // @synthesize includeContingencyRoutes=_includeContingencyRoutes;
@property(nonatomic) _Bool hasIncludeZilchPoints;
@property(nonatomic) _Bool includeZilchPoints; // @synthesize includeZilchPoints=_includeZilchPoints;
@property(nonatomic) _Bool hasIncludeManeuverIcons;
@property(nonatomic) _Bool includeManeuverIcons; // @synthesize includeManeuverIcons=_includeManeuverIcons;
@property(nonatomic) _Bool hasIncludePhonetics;
@property(nonatomic) _Bool includePhonetics; // @synthesize includePhonetics=_includePhonetics;
@property(nonatomic) _Bool hasMainTransportType;
@property(nonatomic) int mainTransportType; // @synthesize mainTransportType=_mainTransportType;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface GEORouteMapMatcher : NSObject
{
    GEOComposedRoute *_route;
}

@property(readonly, nonatomic) GEOComposedRoute *route; // @synthesize route=_route;
- (void)_closestPointFromCoordinate:(const CDStruct_c3b9c2ee *)arg1 toSegmentStart:(const struct PolylineCoordinate *)arg2 toSegmentEnd:(const struct PolylineCoordinate *)arg3 outRouteCoordinate:(struct PolylineCoordinate *)arg4 outLocationCoordinate:(CDStruct_c3b9c2ee *)arg5 outDistanceFromSegment:(double *)arg6;
- (_Bool)_clampSegment:(struct PolylineCoordinate *)arg1 endCoord:(struct PolylineCoordinate *)arg2 outSegmentLength:(double *)arg3 firstAllowedMatch:(struct PolylineCoordinate)arg4 maxDistance:(double)arg5;
- (CDStruct_c3b9c2ee)_locationCoordinateFromRouteCoordinate:(const struct PolylineCoordinate *)arg1;
- (double)_modifiedHorizontalAccuracy:(double)arg1 routeIndex:(unsigned int)arg2;
- (void)_enumerateRouteSegmentsNearLocation:(id)arg1 withHandler:(CDUnknownBlockType)arg2;
- (_Bool)isLocationCoordinate:(CDStruct_c3b9c2ee)arg1 withinDistance:(double)arg2 alongRoute:(double)arg3;
- (double)_closestDistanceFromCoordinate:(CDStruct_c3b9c2ee)arg1 alongRoute:(double)arg2;
- (id)matchToRouteWithLocation:(id)arg1 trackedLocation:(id)arg2 onDate:(id)arg3 maxDistance:(double)arg4;
- (id)initWithRoute:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface GEORouteDriveMapMatcher : GEORouteMapMatcher
{
}

- (double)_maxMatchDistance:(double)arg1 routeIndex:(unsigned int)arg2 useStrictMatch:(_Bool)arg3 timeSinceTunnel:(double)arg4;
- (id)_setupRouteMatchWithRawLocation:(id)arg1 trackedLocation:(id)arg2 onDate:(id)arg3 matchParams:(const CDStruct_7233881d *)arg4;
- (CDStruct_7233881d)_matchToRouteFromLocation:(id)arg1 trackedLocation:(id)arg2 distanceLeftToSearch:(double)arg3 maxDistance:(double)arg4;
- (id)matchToRouteWithLocation:(id)arg1 trackedLocation:(id)arg2 onDate:(id)arg3 maxDistance:(double)arg4;

@end

__attribute__((visibility("hidden")))
@interface GEORouteHypothesis : NSObject
{
    GEOLocation *_lastLocation;
    NSDate *_suggestedDepartureDate;
    NSDate *_estimatedArrivalDate;
    unsigned long long _currentTrafficDensity;
    unsigned long long _historicTrafficDensity;
    _Bool _hasTrafficIncidentOnRoute;
    int _routeIncidentType;
    int _routeIncidentSignificance;
    NSString *_routeIncidentStreetName;
    unsigned long long _travelState;
    double _travelStateScore;
}

@property(readonly, nonatomic) double travelStateScore; // @synthesize travelStateScore=_travelStateScore;
@property(readonly, nonatomic) unsigned long long travelState; // @synthesize travelState=_travelState;
@property(readonly, nonatomic) NSString *routeIncidentStreetName; // @synthesize routeIncidentStreetName=_routeIncidentStreetName;
@property(readonly, nonatomic) int routeIncidentSignificance; // @synthesize routeIncidentSignificance=_routeIncidentSignificance;
@property(readonly, nonatomic) int routeIncidentType; // @synthesize routeIncidentType=_routeIncidentType;
@property(readonly, nonatomic) _Bool hasTrafficIncidentOnRoute; // @synthesize hasTrafficIncidentOnRoute=_hasTrafficIncidentOnRoute;
@property(readonly, nonatomic) unsigned long long historicTrafficDensity; // @synthesize historicTrafficDensity=_historicTrafficDensity;
@property(readonly, nonatomic) unsigned long long currentTrafficDensity; // @synthesize currentTrafficDensity=_currentTrafficDensity;
@property(readonly, nonatomic) NSDate *estimatedArrivalDate; // @synthesize estimatedArrivalDate=_estimatedArrivalDate;
@property(readonly, nonatomic) NSDate *suggestedDepartureDate; // @synthesize suggestedDepartureDate=_suggestedDepartureDate;
@property(retain, nonatomic) GEOLocation *lastLocation; // @synthesize lastLocation=_lastLocation;
- (id)description;
- (void)updateTravelState:(id)arg1;
- (void)updateTrafficIncidents:(id)arg1;
- (void)updateHistoricTrafficDensity:(double)arg1 staticTravelTime:(double)arg2;
- (void)updateCurrentTrafficDensity:(double)arg1 staticTravelTime:(double)arg2;
- (void)updateDepartureAndArrivalSuggestions:(id)arg1 arrivalDate:(id)arg2 travelTimeWithTraffic:(double)arg3;
- (void)dealloc;

@end

@interface GEORouteHypothesizer : NSObject <GEORouteHypothesizerUpdaterDelegate, GEOETAUpdaterDelegate>
{
    id <GEORouteHypothesizerDelegate> _delegate;
    CDUnknownBlockType _handler;
    GEODirectionsRequestFeedback *_feedback;
    GEOLocationShifter *_locationShifter;
    GEOComposedWaypoint *_source;
    GEOComposedWaypoint *_destination;
    NSDate *_departureDate;
    NSDate *_arrivalDate;
    GEORouteHypothesis *_hypothesis;
    GEOLocation *_lastLocation;
    NSDate *_suggestedNextUpdateDate;
    NSDate *_lastETARequestDate;
    double _etaUpdateInterval;
    unsigned long long _etaUpdateFrequency;
    GEOETAUpdater *_etaUpdater;
    GEOETARoute *_liveETARoute;
    GEOETARoute *_baselineETARoute;
    GEORouteAttributes *_routeAttributes;
    GEORouteHypothesizerUpdater *_updater;
    GEORoute *_existingRoute;
    NSData *_usualRouteData;
}

@property(nonatomic) unsigned long long etaUpdateFrequency; // @synthesize etaUpdateFrequency=_etaUpdateFrequency;
@property(readonly, nonatomic) NSDate *suggestedNextUpdateDate; // @synthesize suggestedNextUpdateDate=_suggestedNextUpdateDate;
@property(readonly, nonatomic) NSDate *arrivalDate; // @synthesize arrivalDate=_arrivalDate;
@property(readonly, nonatomic) NSDate *departureDate; // @synthesize departureDate=_departureDate;
@property(readonly, nonatomic) GEOComposedWaypoint *destination; // @synthesize destination=_destination;
@property(readonly, nonatomic) GEOComposedWaypoint *source; // @synthesize source=_source;
@property(retain, nonatomic) GEODirectionsRequestFeedback *feedback; // @synthesize feedback=_feedback;
@property(nonatomic) id <GEORouteHypothesizerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)etaUpdaterReceivedInvalidRoute:(id)arg1 newRoute:(id)arg2 incidentsOnRoute:(id)arg3 incidentsOffRoute:(id)arg4;
- (void)etaUpdaterUpdatedETA:(id)arg1;
- (void)etaUpdater:(id)arg1 receivedError:(id)arg2;
- (void)etaUpdater:(id)arg1 receivedETATrafficUpdateResponse:(id)arg2;
- (void)etaUpdater:(id)arg1 willSendETATrafficUpdateRequest:(id)arg2;
- (id)etaUpdaterRoutesForETATrafficUpdateRequest:(id)arg1;
- (void)routeHypothesizerUpdater:(id)arg1 receivedNewRoute:(id)arg2 request:(id)arg3 response:(id)arg4;
- (void)routeHypothesizerUpdater:(id)arg1 willRequestNewRoute:(id)arg2;
- (void)_updateLocationAndETAUpdateInterval;
- (void)_refreshETAWithRouteMatch:(id)arg1;
- (void)_createUpdaterWithStartingLocation:(id)arg1;
- (void)_updateETAWithRouteMatch:(id)arg1;
- (void)_updateLocation:(id)arg1 hypothesisHandler:(CDUnknownBlockType)arg2;
- (void)updateLocation:(id)arg1 hypothesisHandler:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic) GEOComposedRoute *route;
@property(readonly, nonatomic) _Bool supportsDirections;
@property(readonly, nonatomic) _Bool supportsLiveTraffic;
- (void)dealloc;
- (void)_commonInit;
- (id)initWithExistingRoute:(id)arg1 source:(id)arg2 destination:(id)arg3 etaUpdater:(id)arg4;
- (id)initWithSource:(id)arg1 toDestination:(id)arg2 arrivalDate:(id)arg3 usualRouteData:(id)arg4;
- (id)initWithSource:(id)arg1 toDestination:(id)arg2 departureDate:(id)arg3 usualRouteData:(id)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GEORouteHypothesizerUpdater : NSObject
{
    id <GEORouteHypothesizerUpdaterDelegate> _delegate;
    GEODirectionsRequestFeedback *_feedback;
    GEOComposedWaypoint *_source;
    GEOComposedWaypoint *_destination;
    GEODirectionsRouteRequest *_currentRequest;
    GEORouteAttributes *_routeAttributes;
    GEOLocation *_originLocation;
    GEOComposedRoute *_route;
    GEORouteMatch *_routeMatch;
    _Bool _isTraveling;
    _Bool _hasArrived;
    GEOMapRegion *_arrivalMapRegion;
    double _score;
    NSMutableArray *_rerouteEntries;
    _Bool _shouldThrottleReroutes;
    NSDate *_lastRerouteDate;
    unsigned long long _numThrottledReroutes;
    NSLock *_requestLock;
}

@property(readonly, nonatomic) _Bool hasArrived; // @synthesize hasArrived=_hasArrived;
@property(readonly, nonatomic) _Bool isTraveling; // @synthesize isTraveling=_isTraveling;
@property(readonly, nonatomic) double score; // @synthesize score=_score;
@property(readonly, nonatomic) GEORouteMatch *routeMatch; // @synthesize routeMatch=_routeMatch;
@property(readonly, nonatomic) GEOComposedRoute *route; // @synthesize route=_route;
@property(retain, nonatomic) GEODirectionsRequestFeedback *feedback; // @synthesize feedback=_feedback;
@property(nonatomic) __weak id <GEORouteHypothesizerUpdaterDelegate> delegate; // @synthesize delegate=_delegate;
- (void)_updateScoreForLocation:(id)arg1;
- (_Bool)_checkForArrival:(id)arg1 routeMatch:(id)arg2;
- (id)_routeMatchForLocation:(id)arg1;
- (void)_requestNewRouteFromLocation:(id)arg1 usualRouteData:(id)arg2;
- (void)cancelCurrentRequest;
- (void)updateForLocation:(id)arg1;
- (void)startUpdatingFromLocation:(id)arg1 existingRoute:(id)arg2 usualRouteData:(id)arg3;
- (void)dealloc;
- (id)initWithSource:(id)arg1 destination:(id)arg2 routeAttributes:(id)arg3;

@end

@interface GEORouteIncident : PBCodable <NSCopying>
{
    long long _endTime;
    long long _startTime;
    long long _updateTime;
    NSString *_crossStreet;
    NSString *_incidentId;
    NSString *_info;
    unsigned int _laneClosureCount;
    int _laneClosureType;
    GEOLatLng *_position;
    int _significance;
    NSString *_street;
    int _type;
    _Bool _endTimeReliable;
    struct {
        unsigned int endTime:1;
        unsigned int startTime:1;
        unsigned int updateTime:1;
        unsigned int laneClosureCount:1;
        unsigned int laneClosureType:1;
        unsigned int significance:1;
        unsigned int type:1;
        unsigned int endTimeReliable:1;
    } _has;
}

@property(nonatomic) int significance; // @synthesize significance=_significance;
@property(nonatomic) _Bool endTimeReliable; // @synthesize endTimeReliable=_endTimeReliable;
@property(nonatomic) unsigned int laneClosureCount; // @synthesize laneClosureCount=_laneClosureCount;
@property(nonatomic) int laneClosureType; // @synthesize laneClosureType=_laneClosureType;
@property(nonatomic) long long updateTime; // @synthesize updateTime=_updateTime;
@property(nonatomic) long long endTime; // @synthesize endTime=_endTime;
@property(nonatomic) long long startTime; // @synthesize startTime=_startTime;
@property(retain, nonatomic) NSString *crossStreet; // @synthesize crossStreet=_crossStreet;
@property(retain, nonatomic) NSString *street; // @synthesize street=_street;
@property(nonatomic) int type; // @synthesize type=_type;
@property(retain, nonatomic) NSString *info; // @synthesize info=_info;
@property(retain, nonatomic) NSString *incidentId; // @synthesize incidentId=_incidentId;
@property(retain, nonatomic) GEOLatLng *position; // @synthesize position=_position;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasSignificance;
@property(nonatomic) _Bool hasEndTimeReliable;
@property(nonatomic) _Bool hasLaneClosureCount;
@property(nonatomic) _Bool hasLaneClosureType;
@property(nonatomic) _Bool hasUpdateTime;
@property(nonatomic) _Bool hasEndTime;
@property(nonatomic) _Bool hasStartTime;
@property(readonly, nonatomic) _Bool hasCrossStreet;
@property(readonly, nonatomic) _Bool hasStreet;
@property(nonatomic) _Bool hasType;
@property(readonly, nonatomic) _Bool hasInfo;
@property(readonly, nonatomic) _Bool hasIncidentId;
@property(readonly, nonatomic) _Bool hasPosition;
- (void)dealloc;

@end

@interface GEORouteMatch : NSObject
{
    GEOComposedRoute *_route;
    struct PolylineCoordinate _routeCoordinate;
    CDStruct_2c43369c _locationCoordinate;
    unsigned long long _stepIndex;
    double _matchedCourse;
    double _distanceFromRoute;
    double _modifiedHorizontalAccuracy;
    double _modifiedCourseAccuracy;
    unsigned long long _consecutiveProgressionsOffRoute;
    double _distanceTraveledOffRoute;
    _Bool _isGoodMatch;
    CDStruct_6cf27ba1 *_road;
    double _roadWidth;
    GEORouteMatch *_projectedFrom;
    NSDate *_timestamp;
}

@property(nonatomic) double distanceTraveledOffRoute; // @synthesize distanceTraveledOffRoute=_distanceTraveledOffRoute;
@property(nonatomic) unsigned long long consecutiveProgressionsOffRoute; // @synthesize consecutiveProgressionsOffRoute=_consecutiveProgressionsOffRoute;
@property(readonly, nonatomic) NSDate *timestamp; // @synthesize timestamp=_timestamp;
@property(nonatomic) _Bool isGoodMatch; // @synthesize isGoodMatch=_isGoodMatch;
@property(retain, nonatomic) GEORouteMatch *projectedFrom; // @synthesize projectedFrom=_projectedFrom;
@property(nonatomic) double modifiedCourseAccuracy; // @synthesize modifiedCourseAccuracy=_modifiedCourseAccuracy;
@property(nonatomic) double modifiedHorizontalAccuracy; // @synthesize modifiedHorizontalAccuracy=_modifiedHorizontalAccuracy;
@property(nonatomic) double distanceFromRoute; // @synthesize distanceFromRoute=_distanceFromRoute;
@property(readonly, nonatomic) double roadWidth; // @synthesize roadWidth=_roadWidth;
@property(nonatomic) CDStruct_6cf27ba1 *road; // @synthesize road=_road;
@property(readonly, nonatomic) GEOComposedRoute *route; // @synthesize route=_route;
@property(readonly, nonatomic) double matchedCourse; // @synthesize matchedCourse=_matchedCourse;
@property(nonatomic) unsigned long long stepIndex; // @synthesize stepIndex=_stepIndex;
@property(nonatomic) CDStruct_c3b9c2ee locationCoordinate; // @synthesize locationCoordinate=_locationCoordinate;
@property(readonly, nonatomic) struct PolylineCoordinate routeCoordinate; // @synthesize routeCoordinate=_routeCoordinate;
- (id).cxx_construct;
- (id)description;
- (id)step;
@property(readonly, nonatomic) _Bool projectedPastEndOfLeg;
@property(readonly, nonatomic) _Bool routeMatchedToEnd;
- (_Bool)routeMatchBehind:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqualIgnoringScore:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (void)updateOffRouteProgress:(id)arg1 minDistanceToGetOnRoute:(double)arg2;
- (void)dealloc;
- (id)initWithRoute:(id)arg1 routeCoordinate:(struct PolylineCoordinate)arg2 locationCoordinate:(CDStruct_c3b9c2ee)arg3 stepIndex:(unsigned long long)arg4 matchedCourse:(double)arg5 timestamp:(id)arg6;

@end

@interface GEORouteMatcher : NSObject
{
    GEOComposedRoute *_route;
}

- (id)matchToClosestPointOnRouteWithLocation:(id)arg1;
- (id)matchToRouteWithLocation:(id)arg1;
- (void)dealloc;
- (id)initWithRoute:(id)arg1;

@end

@interface GEORouteName : PBCodable <NSCopying>
{
    int _lastZilchStitchedIndex;
    GEONameInfo *_nameInfo;
    struct {
        unsigned int lastZilchStitchedIndex:1;
    } _has;
}

@property(retain, nonatomic) GEONameInfo *nameInfo; // @synthesize nameInfo=_nameInfo;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasLastZilchStitchedIndex;
@property(nonatomic) int lastZilchStitchedIndex; // @synthesize lastZilchStitchedIndex=_lastZilchStitchedIndex;
@property(readonly, nonatomic) _Bool hasNameInfo;
- (void)dealloc;

@end

@interface GEORouteTrackedLocation : NSObject
{
    GEOComposedRoute *_route;
    GEORouteMatch *_routeMatch;
    GEOLocation *_rawLocation;
    NSDate *_lastTimeInTunnel;
    struct PolylineCoordinate _lastGoodMatchCoordinate;
    struct PolylineCoordinate _newStepLastRouteCoord;
    CDStruct_2c43369c _newStepLastGeoCoord;
    unsigned long long _newStepProgressions;
    double _newStepDistanceTraveled;
}

@property(readonly, nonatomic) struct PolylineCoordinate newStepLastRouteCoord; // @synthesize newStepLastRouteCoord=_newStepLastRouteCoord;
@property(readonly, nonatomic) CDStruct_c3b9c2ee newStepLastGeoCoord; // @synthesize newStepLastGeoCoord=_newStepLastGeoCoord;
@property(readonly, nonatomic) double newStepDistanceTraveled; // @synthesize newStepDistanceTraveled=_newStepDistanceTraveled;
@property(readonly, nonatomic) unsigned long long newStepProgressions; // @synthesize newStepProgressions=_newStepProgressions;
@property(retain, nonatomic) NSDate *lastTimeInTunnel; // @synthesize lastTimeInTunnel=_lastTimeInTunnel;
@property(readonly, nonatomic) struct PolylineCoordinate lastGoodMatchCoordinate; // @synthesize lastGoodMatchCoordinate=_lastGoodMatchCoordinate;
@property(readonly, nonatomic) GEOLocation *rawLocation; // @synthesize rawLocation=_rawLocation;
@property(readonly, nonatomic) GEORouteMatch *routeMatch; // @synthesize routeMatch=_routeMatch;
@property(readonly, nonatomic) GEOComposedRoute *route; // @synthesize route=_route;
- (id).cxx_construct;
- (id)description;
@property(readonly, nonatomic) double timeSinceTunnel;
- (void)updateWithProjectedRouteMatch:(id)arg1;
- (void)updateWithRouteMatch:(id)arg1 rawLocation:(id)arg2 newStepProgressions:(unsigned long long)arg3 newStepDistanceTraveled:(double)arg4 newStepLastRouteCoord:(struct PolylineCoordinate)arg5 newStepLastGeoCoord:(CDStruct_c3b9c2ee)arg6;
- (void)updateWithRouteMatch:(id)arg1;
- (void)forceGoodRouteMatch;
- (void)dealloc;
- (id)initWithRoute:(id)arg1;

@end

@interface GEORouteTrafficBuilder : NSObject
{
    NSMutableData *_trafficColors;
    NSMutableData *_trafficOffsets;
    unsigned int _trafficDistance;
}

- (void)copyTrafficToRoute:(id)arg1;
- (void)_removeDuplicateTraffic;
- (void)addTrafficFromETARoute:(id)arg1;
- (void)addTrafficFromRoute:(id)arg1 from:(unsigned int)arg2 to:(unsigned int)arg3;
- (void)addTrafficFromRoute:(id)arg1 withStepRange:(struct _NSRange)arg2;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface GEORouteWalkMapMatcher : GEORouteMapMatcher
{
}

- (double)_maxMatchDistance:(double)arg1 routeIndex:(unsigned int)arg2 previousMatchGood:(_Bool)arg3;
- (CDStruct_7233881d)_determineBestMatch:(const CDStruct_7233881d *)arg1 trackedLocation:(id)arg2 rawLocation:(id)arg3;
- (CDStruct_7233881d)_matchToRouteFromLocation:(id)arg1 trackedLocation:(id)arg2 distanceLeftToSearch:(double)arg3;
- (id)matchToRouteWithLocation:(id)arg1 trackedLocation:(id)arg2 onDate:(id)arg3 maxDistance:(double)arg4;

@end

@interface GEOSearchAttribution : PBCodable <NSCopying>
{
    NSMutableArray *_attributionURLs;
    NSString *_sourceIdentifier;
    unsigned int _sourceVersion;
}

@property(retain, nonatomic) NSMutableArray *attributionURLs; // @synthesize attributionURLs=_attributionURLs;
@property(nonatomic) unsigned int sourceVersion; // @synthesize sourceVersion=_sourceVersion;
@property(retain, nonatomic) NSString *sourceIdentifier; // @synthesize sourceIdentifier=_sourceIdentifier;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)attributionURLsAtIndex:(unsigned long long)arg1;
- (unsigned long long)attributionURLsCount;
- (void)addAttributionURLs:(id)arg1;
- (void)clearAttributionURLs;
- (void)dealloc;

@end

@interface GEOSearchAttributionInfo : NSObject <NSSecureCoding>
{
    NSString *_identifier;
    unsigned int _version;
    NSArray *_logoPaths;
    NSArray *_snippetLogoPaths;
    NSString *_displayName;
    NSArray *_attributionApps;
    unsigned int _attributionRequirementsMask;
}

+ (_Bool)supportsSecureCoding;
@property(nonatomic) unsigned int requirementsMask; // @synthesize requirementsMask=_attributionRequirementsMask;
@property(retain, nonatomic) NSArray *attributionApps; // @synthesize attributionApps=_attributionApps;
@property(retain, nonatomic) NSString *displayName; // @synthesize displayName=_displayName;
@property(nonatomic) unsigned int version; // @synthesize version=_version;
@property(retain, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
- (void)dealloc;
- (void)addLogoPath:(id)arg1;
- (id)snippetLogoPathForScale:(double)arg1;
- (id)logoPathForScale:(double)arg1;
- (_Bool)hasAttributionRequirement:(int)arg1;
- (id)description;
- (id)dictionaryRepresentation;
- (_Bool)supportsActionURLs;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithDictionaryRepresentation:(id)arg1;
- (id)initWithSource:(id)arg1 localizedAttribution:(id)arg2 logoPaths:(id)arg3 snippetLogoPaths:(id)arg4;

@end

__attribute__((visibility("hidden")))
@interface GEOSearchAttributionLoader : NSObject
{
}

- (void)loadAttributionInfoForIdentifier:(id)arg1 version:(unsigned int)arg2 allowNetwork:(_Bool)arg3 completionHandler:(CDUnknownBlockType)arg4;

@end

@interface GEOSearchAttributionManifest : PBCodable <NSCopying>
{
    NSMutableArray *_searchAttributionSources;
}

@property(retain, nonatomic) NSMutableArray *searchAttributionSources; // @synthesize searchAttributionSources=_searchAttributionSources;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)searchAttributionSourcesAtIndex:(unsigned long long)arg1;
- (unsigned long long)searchAttributionSourcesCount;
- (void)addSearchAttributionSources:(id)arg1;
- (void)clearSearchAttributionSources;
- (void)dealloc;

@end

@interface GEOSearchAttributionManifestManager : NSObject
{
    id <GEOSearchAttributionServerProxy> _serverProxy;
}

+ (id)sharedManager;
+ (void)useLocalProxy;
+ (void)useRemoteProxy;
@property(readonly, nonatomic) id <GEOSearchAttributionServerProxy> serverProxy; // @synthesize serverProxy=_serverProxy;
- (void)loadAttributionInfoForIdentifier:(id)arg1 version:(unsigned int)arg2 completionHandler:(CDUnknownBlockType)arg3 errorHandler:(CDUnknownBlockType)arg4;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface GEOSearchAttributionServerLocalProxy : NSObject <GEOSearchAttributionServerProxy>
{
    NSMapTable *_listeners;
    _Bool _updatingManifest;
    NSMutableArray *_updateManifestCompletionHandlers;
    NSMutableArray *_updateManifestErrorHandlers;
}

- (void)loadAttributionInfoForIdentifier:(id)arg1 version:(unsigned int)arg2 completionHandler:(CDUnknownBlockType)arg3 errorHandler:(CDUnknownBlockType)arg4;
- (void)_loadAttributionInfoForListener:(id)arg1 hasUpdatedManifest:(_Bool)arg2;
- (void)_updateManifestWithCompletionHandler:(CDUnknownBlockType)arg1 errorHandler:(CDUnknownBlockType)arg2;
- (void)_pruneOldAttributionLogos;
- (void)_sendError:(id)arg1 toListener:(id)arg2;
- (void)_sendInfo:(id)arg1 updatedManifest:(_Bool)arg2 toListener:(id)arg3;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GEOSearchAttributionServerRemoteProxy : NSObject <GEOSearchAttributionServerProxy>
{
}

- (void)loadAttributionInfoForIdentifier:(id)arg1 version:(unsigned int)arg2 completionHandler:(CDUnknownBlockType)arg3 errorHandler:(CDUnknownBlockType)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GEOSearchAttributionSource : PBCodable <NSCopying>
{
    CDStruct_95bda58d _attributionRequirements;
    NSMutableArray *_attributionApps;
    NSMutableArray *_localizedAttributions;
    NSString *_sourceIdentifier;
    unsigned int _sourceVersion;
}

@property(retain, nonatomic) NSMutableArray *attributionApps; // @synthesize attributionApps=_attributionApps;
@property(retain, nonatomic) NSMutableArray *localizedAttributions; // @synthesize localizedAttributions=_localizedAttributions;
@property(nonatomic) unsigned int sourceVersion; // @synthesize sourceVersion=_sourceVersion;
@property(retain, nonatomic) NSString *sourceIdentifier; // @synthesize sourceIdentifier=_sourceIdentifier;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)attributionAppsAtIndex:(unsigned long long)arg1;
- (unsigned long long)attributionAppsCount;
- (void)addAttributionApps:(id)arg1;
- (void)clearAttributionApps;
- (void)setAttributionRequirements:(int *)arg1 count:(unsigned long long)arg2;
- (int)attributionRequirementsAtIndex:(unsigned long long)arg1;
- (void)addAttributionRequirements:(int)arg1;
- (void)clearAttributionRequirements;
@property(readonly, nonatomic) int *attributionRequirements;
@property(readonly, nonatomic) unsigned long long attributionRequirementsCount;
- (id)localizedAttributionAtIndex:(unsigned long long)arg1;
- (unsigned long long)localizedAttributionsCount;
- (void)addLocalizedAttribution:(id)arg1;
- (void)clearLocalizedAttributions;
- (void)dealloc;
- (id)bestLocalizedAttribution;

@end

@interface GEOSearchProvider : NSObject
{
    CDUnknownBlockType _error;
}

@property(copy, nonatomic) CDUnknownBlockType error; // @synthesize error=_error;
- (void)cancel;
- (void)search:(id)arg1 timeout:(long long)arg2 useBackgroundConnection:(_Bool)arg3 finished:(CDUnknownBlockType)arg4 refinement:(CDUnknownBlockType)arg5 error:(CDUnknownBlockType)arg6 isCompletions:(_Bool)arg7;
- (void)dealloc;

@end

@interface GEOSearchRequest : GEOPlaceSearchRequest
{
}

- (Class)responseClass;
- (id)initWithFragment:(id)arg1 entriesType:(int)arg2 listType:(int)arg3 traits:(id)arg4;
- (id)initWithSearchQuery:(id)arg1 hint:(id)arg2 maxResults:(unsigned int)arg3 suppressResultsRequiringAttribution:(_Bool)arg4 traits:(id)arg5;
- (id)initWithBusinessIDs:(id)arg1 traits:(id)arg2;

@end

@interface GEOSearchRequester : NSObject
{
    NSMapTable *_pendingSearches;
    NSLock *_pendingSearchesLock;
}

+ (id)sharedSearchRequester;
- (void)cancelSearch:(id)arg1;
- (void)search:(id)arg1 timeout:(long long)arg2 useBackgroundConnection:(_Bool)arg3 finished:(CDUnknownBlockType)arg4 refinement:(CDUnknownBlockType)arg5 networkActivity:(CDUnknownBlockType)arg6 error:(CDUnknownBlockType)arg7 isCompletions:(_Bool)arg8;
- (void)search:(id)arg1 timeout:(long long)arg2 useBackgroundConnection:(_Bool)arg3 finished:(CDUnknownBlockType)arg4 refinement:(CDUnknownBlockType)arg5 networkActivity:(CDUnknownBlockType)arg6 error:(CDUnknownBlockType)arg7;
- (void)completions:(id)arg1 timeout:(long long)arg2 useBackgroundConnection:(_Bool)arg3 finished:(CDUnknownBlockType)arg4 refinement:(CDUnknownBlockType)arg5 networkActivity:(CDUnknownBlockType)arg6 error:(CDUnknownBlockType)arg7;
- (void)search:(id)arg1 useBackgroundConnection:(_Bool)arg2 finished:(CDUnknownBlockType)arg3 refinement:(CDUnknownBlockType)arg4 networkActivity:(CDUnknownBlockType)arg5 error:(CDUnknownBlockType)arg6;
- (void)search:(id)arg1 finished:(CDUnknownBlockType)arg2 refinement:(CDUnknownBlockType)arg3 networkActivity:(CDUnknownBlockType)arg4 error:(CDUnknownBlockType)arg5;
- (void)dealloc;
- (id)init;

@end

@interface GEOSearchResponse : GEOPlaceSearchResponse
{
    NSMapTable *_attributionKeysToInfo;
}

- (id)attributionInfoForSourceIdentifier:(id)arg1 sourceVersion:(unsigned int)arg2;
- (void)_addAttributionInfo:(id)arg1;
- (void)dealloc;

@end

@interface GEOSentinelTile : PBCodable <NSCopying>
{
    NSString *_resourceName;
    int _type;
}

@property(retain, nonatomic) NSString *resourceName; // @synthesize resourceName=_resourceName;
@property(nonatomic) int type; // @synthesize type=_type;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface GEOServiceVersion : PBCodable <NSCopying>
{
    unsigned int _minimumVersion;
    NSMutableArray *_versionDomains;
    struct {
        unsigned int minimumVersion:1;
    } _has;
}

@property(nonatomic) unsigned int minimumVersion; // @synthesize minimumVersion=_minimumVersion;
@property(retain, nonatomic) NSMutableArray *versionDomains; // @synthesize versionDomains=_versionDomains;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasMinimumVersion;
- (id)versionDomainAtIndex:(unsigned long long)arg1;
- (unsigned long long)versionDomainsCount;
- (void)addVersionDomain:(id)arg1;
- (void)clearVersionDomains;
- (void)dealloc;

@end

@interface GEOSignificantLocation : PBCodable <NSCopying>
{
    double _confidence;
    NSString *_identifier;
    GEOLocation *_location;
    unsigned int _locationIndex;
    unsigned int _numberOfVisitsBucket;
    struct {
        unsigned int confidence:1;
        unsigned int locationIndex:1;
        unsigned int numberOfVisitsBucket:1;
    } _has;
}

@property(nonatomic) double confidence; // @synthesize confidence=_confidence;
@property(retain, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
@property(nonatomic) unsigned int numberOfVisitsBucket; // @synthesize numberOfVisitsBucket=_numberOfVisitsBucket;
@property(nonatomic) unsigned int locationIndex; // @synthesize locationIndex=_locationIndex;
@property(retain, nonatomic) GEOLocation *location; // @synthesize location=_location;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasConfidence;
@property(readonly, nonatomic) _Bool hasIdentifier;
@property(nonatomic) _Bool hasNumberOfVisitsBucket;
@property(nonatomic) _Bool hasLocationIndex;
@property(readonly, nonatomic) _Bool hasLocation;
- (void)dealloc;

@end

@interface GEOSnappedRouteEdge : NSObject
{
    CDStruct_02837cd9 _localBounds;
    shared_ptr_92bc9970 _mapEdge;
    struct vector<GEOVectorTilePoint, std::__1::allocator<GEOVectorTilePoint>> _points;
    struct vector<geo::PolylineCoordinate, std::__1::allocator<geo::PolylineCoordinate>> _routeOffsets;
    unsigned long long _mapEdgeOffset;
    _Bool _clippedFront;
    _Bool _clippedBack;
}

@property(readonly, nonatomic) _Bool clippedBack; // @synthesize clippedBack=_clippedBack;
@property(readonly, nonatomic) _Bool clippedFront; // @synthesize clippedFront=_clippedFront;
@property(readonly, nonatomic) unsigned long long mapEdgeOffset; // @synthesize mapEdgeOffset=_mapEdgeOffset;
@property(readonly, nonatomic) shared_ptr_92bc9970 mapEdge; // @synthesize mapEdge=_mapEdge;
- (id).cxx_construct;
- (void).cxx_destruct;
@property(readonly, nonatomic) CDStruct_6cf27ba1 *feature;
@property(readonly, nonatomic) struct PolylineCoordinate routeOffsetB;
@property(readonly, nonatomic) struct PolylineCoordinate routeOffsetA;
@property(readonly, nonatomic) struct PolylineCoordinate *routeOffsets;
- (id)description;
@property(readonly, nonatomic) unsigned long long pointCount;
@property(readonly, nonatomic) CDStruct_b2fbf00d *points;
- (void)calculateRouteOffsetsBetweenA:(struct PolylineCoordinate)arg1 andB:(struct PolylineCoordinate)arg2 overLength:(float)arg3 onRoute:(id)arg4;
- (void)dealloc;
- (id)initWithRoadPath:(const RoadPathElement_384b44ed *)arg1 sectionRect:(const CDStruct_02837cd9 *)arg2;

@end

@interface GEOSnappedRoutePath : NSObject
{
    GEOComposedRoute *_route;
    GEOComposedRouteSection *_section;
    NSArray *_edges;
    GEOMapRequest *_edgeSearchRequest;
    struct __CFSet *_observers;
    struct unique_ptr<geo::RouteMapMatchingSection, std::__1::default_delete<geo::RouteMapMatchingSection>> _mapMatchingSection;
    _Bool _hasCompletedMapMatching;
    unsigned int _routeStartIndex;
    unsigned int _routeEndIndex;
    unsigned int _unsnappedPointCount;
    CDStruct_b2fbf00d *_unsnappedPoints;
}

@property(readonly) unsigned int routeEndIndex; // @synthesize routeEndIndex=_routeEndIndex;
@property(readonly) unsigned int routeStartIndex; // @synthesize routeStartIndex=_routeStartIndex;
@property(readonly) GEOComposedRouteSection *section; // @synthesize section=_section;
@property(readonly) NSArray *edges; // @synthesize edges=_edges;
- (id).cxx_construct;
- (void).cxx_destruct;
- (_Bool)hasObserver:(id)arg1;
- (void)addObserver:(id)arg1;
- (_Bool)removeObserver:(id)arg1;
@property(readonly) const struct RouteMapMatchingSection *mapMatchingSection;
- (void)matchWithDecoder:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (float)_calculateEdgeLengthFrom:(const Matrix_8746f91e *)arg1 to:(const Matrix_8746f91e *)arg2 startCoord:(const struct PolylineCoordinate *)arg3 endCoord:(const struct PolylineCoordinate *)arg4;
@property(readonly) _Bool isMapMatching;
@property(readonly) _Bool isMapMatched;
@property(readonly) _Bool hasCompletedMapMatching;
- (void)_debugPrintEdge:(id)arg1;
- (id)description;
- (void)dealloc;
- (id)initWithRoute:(id)arg1 section:(id)arg2 routeStartIndex:(unsigned int)arg3 routeEndIndex:(unsigned int)arg4;

@end

@interface GEOSource : PBCodable <NSCopying>
{
    NSString *_sourceId;
    NSString *_sourceName;
    NSString *_sourceVersion;
}

@property(retain, nonatomic) NSString *sourceVersion; // @synthesize sourceVersion=_sourceVersion;
@property(retain, nonatomic) NSString *sourceId; // @synthesize sourceId=_sourceId;
@property(retain, nonatomic) NSString *sourceName; // @synthesize sourceName=_sourceName;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasSourceVersion;
- (void)dealloc;
- (id)initWithAttributionID:(id)arg1;

@end

@interface GEOStateTimingFeedbackCollection : PBCodable <NSCopying>
{
    CDStruct_612aec5b _sessionID;
    double _durationInOldState;
    NSMutableArray *_stateTransitions;
    struct {
        unsigned int sessionID:1;
        unsigned int durationInOldState:1;
    } _has;
}

@property(nonatomic) double durationInOldState; // @synthesize durationInOldState=_durationInOldState;
@property(retain, nonatomic) NSMutableArray *stateTransitions; // @synthesize stateTransitions=_stateTransitions;
@property(nonatomic) CDStruct_612aec5b sessionID; // @synthesize sessionID=_sessionID;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasDurationInOldState;
- (id)stateTransitionAtIndex:(unsigned long long)arg1;
- (unsigned long long)stateTransitionsCount;
- (void)addStateTransition:(id)arg1;
- (void)clearStateTransitions;
@property(nonatomic) _Bool hasSessionID;
- (void)dealloc;

@end

@interface GEOStateTransitionFeedback : PBCodable <NSCopying>
{
    int _newValue;
    int _oldValue;
    int _stateType;
    struct {
        unsigned int newValue:1;
        unsigned int oldValue:1;
        unsigned int stateType:1;
    } _has;
}

@property(nonatomic) int newValue; // @synthesize newValue=_newValue;
@property(nonatomic) int oldValue; // @synthesize oldValue=_oldValue;
@property(nonatomic) int stateType; // @synthesize stateType=_stateType;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasNewValue;
@property(nonatomic) _Bool hasOldValue;
@property(nonatomic) _Bool hasStateType;

@end

@interface GEOStep : PBCodable <NSCopying>
{
    CDStruct_bf9e66ee *_laneGuidances;
    unsigned long long _laneGuidancesCount;
    unsigned long long _laneGuidancesSpace;
    CDStruct_e02beb0c *_junctionElements;
    unsigned long long _junctionElementsCount;
    unsigned long long _junctionElementsSpace;
    unsigned int _distance;
    GEONameInfo *_exitNumber;
    unsigned int _expectedTime;
    int _hintFirstAnnouncementZilchIndex;
    NSString *_instructions;
    int _junctionType;
    int _maneuverEndBasicIndex;
    int _maneuverEndZilchIndex;
    NSMutableArray *_maneuverNames;
    int _maneuverStartZilchIndex;
    int _maneuverType;
    NSString *_notice;
    int _overrideDrivingSide;
    int _overrideTransportType;
    NSMutableArray *_signposts;
    unsigned int _stepID;
    NSMutableArray *_substeps;
    GEOTimeCheckpoints *_timeCheckpoints;
    _Bool _endsOnFwy;
    _Bool _toFreeway;
    _Bool _tollAhead;
    _Bool _tollPrior;
    struct {
        unsigned int distance:1;
        unsigned int expectedTime:1;
        unsigned int hintFirstAnnouncementZilchIndex:1;
        unsigned int junctionType:1;
        unsigned int maneuverEndBasicIndex:1;
        unsigned int maneuverEndZilchIndex:1;
        unsigned int maneuverStartZilchIndex:1;
        unsigned int maneuverType:1;
        unsigned int overrideDrivingSide:1;
        unsigned int overrideTransportType:1;
        unsigned int stepID:1;
        unsigned int endsOnFwy:1;
        unsigned int toFreeway:1;
        unsigned int tollAhead:1;
        unsigned int tollPrior:1;
    } _has;
}

@property(retain, nonatomic) GEOTimeCheckpoints *timeCheckpoints; // @synthesize timeCheckpoints=_timeCheckpoints;
@property(retain, nonatomic) NSString *notice; // @synthesize notice=_notice;
@property(retain, nonatomic) NSString *instructions; // @synthesize instructions=_instructions;
@property(retain, nonatomic) NSMutableArray *substeps; // @synthesize substeps=_substeps;
@property(retain, nonatomic) GEONameInfo *exitNumber; // @synthesize exitNumber=_exitNumber;
@property(nonatomic) int overrideDrivingSide; // @synthesize overrideDrivingSide=_overrideDrivingSide;
@property(nonatomic) int overrideTransportType; // @synthesize overrideTransportType=_overrideTransportType;
@property(retain, nonatomic) NSMutableArray *signposts; // @synthesize signposts=_signposts;
@property(retain, nonatomic) NSMutableArray *maneuverNames; // @synthesize maneuverNames=_maneuverNames;
@property(nonatomic) int maneuverType; // @synthesize maneuverType=_maneuverType;
@property(nonatomic) unsigned int expectedTime; // @synthesize expectedTime=_expectedTime;
@property(nonatomic) unsigned int distance; // @synthesize distance=_distance;
@property(nonatomic) unsigned int stepID; // @synthesize stepID=_stepID;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasTimeCheckpoints;
@property(readonly, nonatomic) _Bool hasNotice;
@property(readonly, nonatomic) _Bool hasInstructions;
@property(nonatomic) _Bool hasToFreeway;
@property(nonatomic) _Bool toFreeway; // @synthesize toFreeway=_toFreeway;
- (id)substepsAtIndex:(unsigned long long)arg1;
- (unsigned long long)substepsCount;
- (void)addSubsteps:(id)arg1;
- (void)clearSubsteps;
@property(nonatomic) _Bool hasEndsOnFwy;
@property(nonatomic) _Bool endsOnFwy; // @synthesize endsOnFwy=_endsOnFwy;
@property(nonatomic) _Bool hasTollAhead;
@property(nonatomic) _Bool tollAhead; // @synthesize tollAhead=_tollAhead;
@property(nonatomic) _Bool hasTollPrior;
@property(nonatomic) _Bool tollPrior; // @synthesize tollPrior=_tollPrior;
@property(readonly, nonatomic) _Bool hasExitNumber;
@property(nonatomic) _Bool hasOverrideDrivingSide;
@property(nonatomic) _Bool hasOverrideTransportType;
@property(nonatomic) _Bool hasHintFirstAnnouncementZilchIndex;
@property(nonatomic) int hintFirstAnnouncementZilchIndex; // @synthesize hintFirstAnnouncementZilchIndex=_hintFirstAnnouncementZilchIndex;
- (id)signpostAtIndex:(unsigned long long)arg1;
- (unsigned long long)signpostsCount;
- (void)addSignpost:(id)arg1;
- (void)clearSignposts;
- (void)setJunctionElements:(CDStruct_e02beb0c *)arg1 count:(unsigned long long)arg2;
- (CDStruct_e02beb0c)junctionElementAtIndex:(unsigned long long)arg1;
- (void)addJunctionElement:(CDStruct_e02beb0c)arg1;
- (void)clearJunctionElements;
@property(readonly, nonatomic) CDStruct_e02beb0c *junctionElements;
@property(readonly, nonatomic) unsigned long long junctionElementsCount;
@property(nonatomic) _Bool hasJunctionType;
@property(nonatomic) int junctionType; // @synthesize junctionType=_junctionType;
- (void)setLaneGuidances:(CDStruct_bf9e66ee *)arg1 count:(unsigned long long)arg2;
- (CDStruct_bf9e66ee)laneGuidanceAtIndex:(unsigned long long)arg1;
- (void)addLaneGuidance:(CDStruct_bf9e66ee)arg1;
- (void)clearLaneGuidances;
@property(readonly, nonatomic) CDStruct_bf9e66ee *laneGuidances;
@property(readonly, nonatomic) unsigned long long laneGuidancesCount;
- (id)maneuverNameAtIndex:(unsigned long long)arg1;
- (unsigned long long)maneuverNamesCount;
- (void)addManeuverName:(id)arg1;
- (void)clearManeuverNames;
@property(nonatomic) _Bool hasManeuverType;
@property(nonatomic) _Bool hasExpectedTime;
@property(nonatomic) _Bool hasDistance;
@property(nonatomic) _Bool hasManeuverEndZilchIndex;
@property(nonatomic) int maneuverEndZilchIndex; // @synthesize maneuverEndZilchIndex=_maneuverEndZilchIndex;
@property(nonatomic) _Bool hasManeuverStartZilchIndex;
@property(nonatomic) int maneuverStartZilchIndex; // @synthesize maneuverStartZilchIndex=_maneuverStartZilchIndex;
@property(nonatomic) _Bool hasManeuverEndBasicIndex;
@property(nonatomic) int maneuverEndBasicIndex; // @synthesize maneuverEndBasicIndex=_maneuverEndBasicIndex;
@property(nonatomic) _Bool hasStepID;
- (void)dealloc;
- (id)maneuverDescription;
- (_Bool)maneuverIsHighwayExit;
- (void)shieldInfo:(CDUnknownBlockType)arg1;
- (id)intersectionNameInfo;
- (id)firstNameInfo;
@property(readonly, nonatomic) int hintFirstAnnouncementIndex;
@property(readonly, nonatomic) _Bool hasHintFirstAnnouncementIndex;
@property(readonly, nonatomic) unsigned int maneuverStartIndex;
@property(readonly, nonatomic) unsigned int maneuverEndIndex;

@end

@interface GEOStorageCameraView : PBCodable <NSCopying>
{
    PBUnknownFields *_unknownFields;
    GEOURLCamera *_camera;
    int _mapType;
    struct {
        unsigned int mapType:1;
    } _has;
}

@property(nonatomic) int mapType; // @synthesize mapType=_mapType;
@property(retain, nonatomic) GEOURLCamera *camera; // @synthesize camera=_camera;
@property(readonly, nonatomic) PBUnknownFields *unknownFields;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasMapType;
@property(readonly, nonatomic) _Bool hasCamera;
- (void)dealloc;

@end

@interface GEOStorageRouteRequestStorage : PBCodable <NSCopying>
{
    PBUnknownFields *_unknownFields;
    GEOURLRouteHandle *_routeHandle;
    int _transportType;
    NSMutableArray *_waypoints;
    CDStruct_a995201b _has;
}

@property(retain, nonatomic) GEOURLRouteHandle *routeHandle; // @synthesize routeHandle=_routeHandle;
@property(nonatomic) int transportType; // @synthesize transportType=_transportType;
@property(retain, nonatomic) NSMutableArray *waypoints; // @synthesize waypoints=_waypoints;
@property(readonly, nonatomic) PBUnknownFields *unknownFields;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasRouteHandle;
@property(nonatomic) _Bool hasTransportType;
- (id)waypointsAtIndex:(unsigned long long)arg1;
- (unsigned long long)waypointsCount;
- (void)addWaypoints:(id)arg1;
- (void)clearWaypoints;
- (void)dealloc;

@end

@interface GEOStructuredAddress : PBCodable <GEOURLSerializable, NSCopying>
{
    struct {
        long long *list;
        unsigned long long count;
        unsigned long long size;
    } _geoIds;
    NSString *_administrativeArea;
    NSString *_administrativeAreaCode;
    NSMutableArray *_areaOfInterests;
    NSString *_country;
    NSString *_countryCode;
    NSMutableArray *_dependentLocalitys;
    NSString *_fullThoroughfare;
    NSString *_inlandWater;
    NSString *_locality;
    NSString *_ocean;
    NSString *_postCode;
    NSString *_postCodeExtension;
    NSString *_postCodeFull;
    NSString *_premise;
    NSString *_premises;
    NSString *_subAdministrativeArea;
    NSString *_subLocality;
    NSMutableArray *_subPremises;
    NSString *_subThoroughfare;
    NSString *_thoroughfare;
}

@property(retain, nonatomic) NSString *postCodeFull; // @synthesize postCodeFull=_postCodeFull;
@property(retain, nonatomic) NSMutableArray *subPremises; // @synthesize subPremises=_subPremises;
@property(retain, nonatomic) NSString *premise; // @synthesize premise=_premise;
@property(retain, nonatomic) NSMutableArray *dependentLocalitys; // @synthesize dependentLocalitys=_dependentLocalitys;
@property(retain, nonatomic) NSString *ocean; // @synthesize ocean=_ocean;
@property(retain, nonatomic) NSString *inlandWater; // @synthesize inlandWater=_inlandWater;
@property(retain, nonatomic) NSMutableArray *areaOfInterests; // @synthesize areaOfInterests=_areaOfInterests;
@property(retain, nonatomic) NSString *postCodeExtension; // @synthesize postCodeExtension=_postCodeExtension;
@property(retain, nonatomic) NSString *fullThoroughfare; // @synthesize fullThoroughfare=_fullThoroughfare;
@property(retain, nonatomic) NSString *subThoroughfare; // @synthesize subThoroughfare=_subThoroughfare;
@property(retain, nonatomic) NSString *thoroughfare; // @synthesize thoroughfare=_thoroughfare;
@property(retain, nonatomic) NSString *premises; // @synthesize premises=_premises;
@property(retain, nonatomic) NSString *subLocality; // @synthesize subLocality=_subLocality;
@property(retain, nonatomic) NSString *postCode; // @synthesize postCode=_postCode;
@property(retain, nonatomic) NSString *locality; // @synthesize locality=_locality;
@property(retain, nonatomic) NSString *subAdministrativeArea; // @synthesize subAdministrativeArea=_subAdministrativeArea;
@property(retain, nonatomic) NSString *administrativeAreaCode; // @synthesize administrativeAreaCode=_administrativeAreaCode;
@property(retain, nonatomic) NSString *administrativeArea; // @synthesize administrativeArea=_administrativeArea;
@property(retain, nonatomic) NSString *countryCode; // @synthesize countryCode=_countryCode;
@property(retain, nonatomic) NSString *country; // @synthesize country=_country;
- (void)mergeFrom:(id)arg1;
@property(readonly) unsigned long long hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
@property(readonly, copy) NSString *description;
- (void)setGeoIds:(long long *)arg1 count:(unsigned long long)arg2;
- (long long)geoIdAtIndex:(unsigned long long)arg1;
- (void)addGeoId:(long long)arg1;
- (void)clearGeoIds;
@property(readonly, nonatomic) long long *geoIds;
@property(readonly, nonatomic) unsigned long long geoIdsCount;
@property(readonly, nonatomic) _Bool hasPostCodeFull;
- (id)subPremiseAtIndex:(unsigned long long)arg1;
- (unsigned long long)subPremisesCount;
- (void)addSubPremise:(id)arg1;
- (void)clearSubPremises;
@property(readonly, nonatomic) _Bool hasPremise;
- (id)dependentLocalityAtIndex:(unsigned long long)arg1;
- (unsigned long long)dependentLocalitysCount;
- (void)addDependentLocality:(id)arg1;
- (void)clearDependentLocalitys;
@property(readonly, nonatomic) _Bool hasOcean;
@property(readonly, nonatomic) _Bool hasInlandWater;
- (id)areaOfInterestAtIndex:(unsigned long long)arg1;
- (unsigned long long)areaOfInterestsCount;
- (void)addAreaOfInterest:(id)arg1;
- (void)clearAreaOfInterests;
@property(readonly, nonatomic) _Bool hasPostCodeExtension;
@property(readonly, nonatomic) _Bool hasFullThoroughfare;
@property(readonly, nonatomic) _Bool hasSubThoroughfare;
@property(readonly, nonatomic) _Bool hasThoroughfare;
@property(readonly, nonatomic) _Bool hasPremises;
@property(readonly, nonatomic) _Bool hasSubLocality;
@property(readonly, nonatomic) _Bool hasPostCode;
@property(readonly, nonatomic) _Bool hasLocality;
@property(readonly, nonatomic) _Bool hasSubAdministrativeArea;
@property(readonly, nonatomic) _Bool hasAdministrativeAreaCode;
@property(readonly, nonatomic) _Bool hasAdministrativeArea;
@property(readonly, nonatomic) _Bool hasCountryCode;
@property(readonly, nonatomic) _Bool hasCountry;
- (void)dealloc;
- (id)initWithAddressDictionary:(id)arg1;
- (_Bool)_isEquivalentURLRepresentationTo:(id)arg1;
- (id)urlRepresentation;
- (id)initWithUrlRepresentation:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

@interface GEOSubPremise : PBCodable <NSCopying>
{
    NSString *_name;
    int _type;
}

@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
@property(nonatomic) int type; // @synthesize type=_type;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (void)dealloc;

@end

@interface GEOSubstep : PBCodable <NSCopying>
{
    int _maneuverType;
    GEONameInfo *_name;
    NSMutableArray *_signposts;
    int _zilchIndex;
    struct {
        unsigned int maneuverType:1;
        unsigned int zilchIndex:1;
    } _has;
}

@property(retain, nonatomic) NSMutableArray *signposts; // @synthesize signposts=_signposts;
@property(retain, nonatomic) GEONameInfo *name; // @synthesize name=_name;
@property(nonatomic) int maneuverType; // @synthesize maneuverType=_maneuverType;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)signpostAtIndex:(unsigned long long)arg1;
- (unsigned long long)signpostsCount;
- (void)addSignpost:(id)arg1;
- (void)clearSignposts;
@property(readonly, nonatomic) _Bool hasName;
@property(nonatomic) _Bool hasZilchIndex;
@property(nonatomic) int zilchIndex; // @synthesize zilchIndex=_zilchIndex;
@property(nonatomic) _Bool hasManeuverType;
- (void)dealloc;

@end

@interface GEOSuggestionEntry : PBCodable <NSCopying>
{
    CDStruct_97e972fa *_textHighlights;
    unsigned long long _textHighlightsCount;
    unsigned long long _textHighlightsSpace;
    NSString *_calloutTitle;
    NSMutableArray *_displayLines;
    NSString *_iconID;
    GEOLatLng *_latlng;
    NSMutableArray *_namedFeatures;
    NSString *_searchQueryDisplayString;
    NSData *_suggestionEntryMetadata;
}

@property(retain, nonatomic) NSMutableArray *namedFeatures; // @synthesize namedFeatures=_namedFeatures;
@property(retain, nonatomic) NSString *calloutTitle; // @synthesize calloutTitle=_calloutTitle;
@property(retain, nonatomic) NSString *searchQueryDisplayString; // @synthesize searchQueryDisplayString=_searchQueryDisplayString;
@property(retain, nonatomic) NSData *suggestionEntryMetadata; // @synthesize suggestionEntryMetadata=_suggestionEntryMetadata;
@property(retain, nonatomic) GEOLatLng *latlng; // @synthesize latlng=_latlng;
@property(retain, nonatomic) NSString *iconID; // @synthesize iconID=_iconID;
@property(retain, nonatomic) NSMutableArray *displayLines; // @synthesize displayLines=_displayLines;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)namedFeatureAtIndex:(unsigned long long)arg1;
- (unsigned long long)namedFeaturesCount;
- (void)addNamedFeature:(id)arg1;
- (void)clearNamedFeatures;
@property(readonly, nonatomic) _Bool hasCalloutTitle;
@property(readonly, nonatomic) _Bool hasSearchQueryDisplayString;
@property(readonly, nonatomic) _Bool hasSuggestionEntryMetadata;
@property(readonly, nonatomic) _Bool hasLatlng;
@property(readonly, nonatomic) _Bool hasIconID;
- (void)setTextHighlights:(CDStruct_97e972fa *)arg1 count:(unsigned long long)arg2;
- (CDStruct_97e972fa)textHighlightsAtIndex:(unsigned long long)arg1;
- (void)addTextHighlights:(CDStruct_97e972fa)arg1;
- (void)clearTextHighlights;
@property(readonly, nonatomic) CDStruct_97e972fa *textHighlights;
@property(readonly, nonatomic) unsigned long long textHighlightsCount;
- (id)displayLineAtIndex:(unsigned long long)arg1;
- (unsigned long long)displayLinesCount;
- (void)addDisplayLine:(id)arg1;
- (void)clearDisplayLines;
- (void)dealloc;

@end

@interface GEOSuggestionEntryList : PBCodable <NSCopying>
{
    NSString *_localizedSectionHeader;
    NSMutableArray *_suggestionEntries;
}

@property(retain, nonatomic) NSString *localizedSectionHeader; // @synthesize localizedSectionHeader=_localizedSectionHeader;
@property(retain, nonatomic) NSMutableArray *suggestionEntries; // @synthesize suggestionEntries=_suggestionEntries;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasLocalizedSectionHeader;
- (id)suggestionEntriesAtIndex:(unsigned long long)arg1;
- (unsigned long long)suggestionEntriesCount;
- (void)addSuggestionEntries:(id)arg1;
- (void)clearSuggestionEntries;
- (void)dealloc;

@end

@interface GEOSuggestionsFeedbackCollection : PBCodable <NSCopying>
{
    CDStruct_612aec5b _sessionID;
    int _suggestionEntryIndex;
    NSData *_suggestionEntryMetadata;
    NSData *_suggestionMetadata;
    int _suggestionsEntryListIndex;
    struct {
        unsigned int sessionID:1;
        unsigned int suggestionEntryIndex:1;
        unsigned int suggestionsEntryListIndex:1;
    } _has;
}

@property(retain, nonatomic) NSData *suggestionEntryMetadata; // @synthesize suggestionEntryMetadata=_suggestionEntryMetadata;
@property(retain, nonatomic) NSData *suggestionMetadata; // @synthesize suggestionMetadata=_suggestionMetadata;
@property(nonatomic) int suggestionEntryIndex; // @synthesize suggestionEntryIndex=_suggestionEntryIndex;
@property(nonatomic) int suggestionsEntryListIndex; // @synthesize suggestionsEntryListIndex=_suggestionsEntryListIndex;
@property(nonatomic) CDStruct_612aec5b sessionID; // @synthesize sessionID=_sessionID;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasSuggestionEntryMetadata;
@property(readonly, nonatomic) _Bool hasSuggestionMetadata;
@property(nonatomic) _Bool hasSuggestionEntryIndex;
@property(nonatomic) _Bool hasSuggestionsEntryListIndex;
@property(nonatomic) _Bool hasSessionID;
- (void)dealloc;

@end

@interface GEOSuggestionsOptions : PBCodable <NSCopying>
{
    int _entriesType;
    int _listType;
    NSData *_suggestionEntryMetadata;
    NSData *_suggestionMetadata;
    _Bool _includeRankingFeatures;
    _Bool _normalizePOIs;
    struct {
        unsigned int entriesType:1;
        unsigned int listType:1;
        unsigned int includeRankingFeatures:1;
        unsigned int normalizePOIs:1;
    } _has;
}

@property(nonatomic) _Bool includeRankingFeatures; // @synthesize includeRankingFeatures=_includeRankingFeatures;
@property(nonatomic) _Bool normalizePOIs; // @synthesize normalizePOIs=_normalizePOIs;
@property(retain, nonatomic) NSData *suggestionEntryMetadata; // @synthesize suggestionEntryMetadata=_suggestionEntryMetadata;
@property(retain, nonatomic) NSData *suggestionMetadata; // @synthesize suggestionMetadata=_suggestionMetadata;
@property(nonatomic) int entriesType; // @synthesize entriesType=_entriesType;
@property(nonatomic) int listType; // @synthesize listType=_listType;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasIncludeRankingFeatures;
@property(nonatomic) _Bool hasNormalizePOIs;
@property(readonly, nonatomic) _Bool hasSuggestionEntryMetadata;
@property(readonly, nonatomic) _Bool hasSuggestionMetadata;
@property(nonatomic) _Bool hasEntriesType;
@property(nonatomic) _Bool hasListType;
- (void)dealloc;

@end

@interface GEOSupportedTileSets : PBCodable <NSCopying>
{
    NSMutableArray *_tileSets;
}

@property(retain, nonatomic) NSMutableArray *tileSets; // @synthesize tileSets=_tileSets;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)tileSetAtIndex:(unsigned long long)arg1;
- (unsigned long long)tileSetsCount;
- (void)addTileSet:(id)arg1;
- (void)clearTileSets;
- (void)dealloc;

@end

@interface GEOSupportedTileSetsDownload : PBCodable <NSCopying>
{
    GEODownloadMetadata *_metadata;
    GEOSupportedTileSets *_tileSets;
}

@property(retain, nonatomic) GEODownloadMetadata *metadata; // @synthesize metadata=_metadata;
@property(retain, nonatomic) GEOSupportedTileSets *tileSets; // @synthesize tileSets=_tileSets;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (void)dealloc;

@end

@interface GEOTestTileRequester : GEOTileRequester
{
    NSTimer *_timer;
}

+ (unsigned char)tileProviderIdentifier;
- (void)dealloc;
- (void)_sendResults:(id)arg1;
- (void)start;

@end

__attribute__((visibility("hidden")))
@interface GEOThrottleKey : NSObject
{
    NSURL *_serverURL;
    unsigned int _requestType;
}

- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)initWithRequestType:(unsigned int)arg1 serverURL:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface GEOThrottleState : NSObject
{
    unsigned long long _requestCount;
    double _lastResetTime;
}

@property(nonatomic) double lastResetTime; // @synthesize lastResetTime=_lastResetTime;
@property(nonatomic) unsigned long long requestCount; // @synthesize requestCount=_requestCount;

@end

@interface GEOTileCache : NSObject
{
    GEOTileCacheReserved *_reserved;
    NSObject<OS_dispatch_source> *_memoryNotificationEventSource;
}

- (void)_enteredBackground:(id)arg1;
- (void)removeTilesMatchingPredicate:(CDUnknownBlockType)arg1;
- (void)enumerate:(CDUnknownBlockType)arg1;
- (void)removeAllObjects;
- (void)removeTilesWithKeys:(id)arg1;
- (void)removeTileForKey:(const struct _GEOTileKey *)arg1;
- (void)_removeTileForKey:(const struct _GEOTileKey *)arg1;
- (void)setNullForKey:(const struct _GEOTileKey *)arg1;
- (void)setTile:(id)arg1 forKey:(const struct _GEOTileKey *)arg2 cost:(unsigned long long)arg3;
- (_Bool)containsKey:(const struct _GEOTileKey *)arg1 cost:(unsigned long long *)arg2;
- (id)tileForKey:(const struct _GEOTileKey *)arg1;
@property unsigned long long maxCost;
@property unsigned long long maxCapacity;
- (void)_receivedMemoryNotification;
- (void)_evictWithMaxCost:(unsigned long long)arg1 maxCapacity:(unsigned long long)arg2;
- (id)description;
- (id)_description;
- (void)dealloc;
- (id)init;
@property(readonly) unsigned long long currentCost;
@property(readonly) unsigned long long currentCount;

@end

__attribute__((visibility("hidden")))
@interface GEOTileCacheReserved : NSObject
{
    struct mutex _reservedLock;
    struct list<CacheItem, std::__1::allocator<CacheItem>> _reservedList;
    struct unordered_map<_GEOTileKey, std::__1::__list_iterator<CacheItem, void *>, hashkey, eqkey, std::__1::allocator<std::__1::pair<const _GEOTileKey, std::__1::__list_iterator<CacheItem, void *>>>> _reservedMap;
    unsigned long long _reservedMaxCapacity;
    unsigned long long _reservedMaxCost;
    unsigned long long _reservedCurrentCost;
    unsigned long long _reservedCurrentCount;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface GEOTileDBProtection : NSObject
{
    int _currentState;
    int _notifyToken;
}

+ (id)sharedObject;
- (void)updateState;
- (int)state;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface GEOTileEditionUpdate : NSObject
{
    NSMutableArray *_entries;
    _Bool _flushEverything;
}

@property(nonatomic) _Bool flushEverything; // @synthesize flushEverything=_flushEverything;
- (void)dealloc;
- (void)tileset:(unsigned int *)arg1 edition:(unsigned int *)arg2 provider:(unsigned int *)arg3 invalidateOnly:(_Bool *)arg4 atIndex:(unsigned long long)arg5;
- (unsigned long long)tilesetCount;
- (void)addTileset:(unsigned int)arg1 edition:(unsigned int)arg2 provider:(unsigned int)arg3 invalidateOnly:(_Bool)arg4;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface GEOTileGroup : PBCodable <NSCopying>
{
    CDStruct_3f74b7eb *_regionalResourceIndexs;
    unsigned long long _regionalResourceIndexsCount;
    unsigned long long _regionalResourceIndexsSpace;
    CDStruct_9f2792e4 _attributionIndexs;
    CDStruct_9f2792e4 _fontIndexs;
    CDStruct_9f2792e4 _iconIndexs;
    CDStruct_9f2792e4 _styleSheetIndexs;
    CDStruct_9f2792e4 _textureIndexs;
    CDStruct_9f2792e4 _xmlIndexs;
    CDStruct_c0454aff *_tileSets;
    unsigned long long _tileSetsCount;
    unsigned long long _tileSetsSpace;
    unsigned int _attributionBadgeIndex;
    unsigned int _identifier;
    struct {
        unsigned int attributionBadgeIndex:1;
    } _has;
}

@property(nonatomic) unsigned int attributionBadgeIndex; // @synthesize attributionBadgeIndex=_attributionBadgeIndex;
@property(nonatomic) unsigned int identifier; // @synthesize identifier=_identifier;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (void)setAttributionIndexs:(unsigned int *)arg1 count:(unsigned long long)arg2;
- (unsigned int)attributionIndexAtIndex:(unsigned long long)arg1;
- (void)addAttributionIndex:(unsigned int)arg1;
- (void)clearAttributionIndexs;
@property(readonly, nonatomic) unsigned int *attributionIndexs;
@property(readonly, nonatomic) unsigned long long attributionIndexsCount;
@property(nonatomic) _Bool hasAttributionBadgeIndex;
- (void)setXmlIndexs:(unsigned int *)arg1 count:(unsigned long long)arg2;
- (unsigned int)xmlIndexAtIndex:(unsigned long long)arg1;
- (void)addXmlIndex:(unsigned int)arg1;
- (void)clearXmlIndexs;
@property(readonly, nonatomic) unsigned int *xmlIndexs;
@property(readonly, nonatomic) unsigned long long xmlIndexsCount;
- (void)setRegionalResourceIndexs:(CDStruct_3f74b7eb *)arg1 count:(unsigned long long)arg2;
- (CDStruct_3f74b7eb)regionalResourceIndexAtIndex:(unsigned long long)arg1;
- (void)addRegionalResourceIndex:(CDStruct_3f74b7eb)arg1;
- (void)clearRegionalResourceIndexs;
@property(readonly, nonatomic) CDStruct_3f74b7eb *regionalResourceIndexs;
@property(readonly, nonatomic) unsigned long long regionalResourceIndexsCount;
- (void)setIconIndexs:(unsigned int *)arg1 count:(unsigned long long)arg2;
- (unsigned int)iconIndexAtIndex:(unsigned long long)arg1;
- (void)addIconIndex:(unsigned int)arg1;
- (void)clearIconIndexs;
@property(readonly, nonatomic) unsigned int *iconIndexs;
@property(readonly, nonatomic) unsigned long long iconIndexsCount;
- (void)setFontIndexs:(unsigned int *)arg1 count:(unsigned long long)arg2;
- (unsigned int)fontIndexAtIndex:(unsigned long long)arg1;
- (void)addFontIndex:(unsigned int)arg1;
- (void)clearFontIndexs;
@property(readonly, nonatomic) unsigned int *fontIndexs;
@property(readonly, nonatomic) unsigned long long fontIndexsCount;
- (void)setTextureIndexs:(unsigned int *)arg1 count:(unsigned long long)arg2;
- (unsigned int)textureIndexAtIndex:(unsigned long long)arg1;
- (void)addTextureIndex:(unsigned int)arg1;
- (void)clearTextureIndexs;
@property(readonly, nonatomic) unsigned int *textureIndexs;
@property(readonly, nonatomic) unsigned long long textureIndexsCount;
- (void)setStyleSheetIndexs:(unsigned int *)arg1 count:(unsigned long long)arg2;
- (unsigned int)styleSheetIndexAtIndex:(unsigned long long)arg1;
- (void)addStyleSheetIndex:(unsigned int)arg1;
- (void)clearStyleSheetIndexs;
@property(readonly, nonatomic) unsigned int *styleSheetIndexs;
@property(readonly, nonatomic) unsigned long long styleSheetIndexsCount;
- (void)setTileSets:(CDStruct_c0454aff *)arg1 count:(unsigned long long)arg2;
- (CDStruct_c0454aff)tileSetAtIndex:(unsigned long long)arg1;
- (void)addTileSet:(CDStruct_c0454aff)arg1;
- (void)clearTileSets;
@property(readonly, nonatomic) CDStruct_c0454aff *tileSets;
@property(readonly, nonatomic) unsigned long long tileSetsCount;
- (void)dealloc;

@end

@interface GEOTileKeyList : NSObject <NSFastEnumeration, NSCopying>
{
    void *_head;
    void *_tail;
    GEOTileKeyMap *_map;
    unsigned long long _count;
    unsigned long long _maxCount;
    unsigned long long _mutationsCount;
}

+ (id)listFromXPCData:(id)arg1;
- (_Bool)intersectsList:(id)arg1;
- (_Bool)removeKey:(const struct _GEOTileKey *)arg1;
- (void)removeKeysMatchingPredicate:(CDUnknownBlockType)arg1;
- (void)sort:(CDUnknownBlockType)arg1;
- (id)sublistWithRange:(struct _NSRange)arg1;
- (id)listWithout:(id)arg1;
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
- (unsigned long long)count;
- (unsigned long long)capacity;
- (_Bool)containsKey:(const struct _GEOTileKey *)arg1;
- (void)_addKeyToBack:(const struct _GEOTileKey *)arg1;
- (void)addKey:(const struct _GEOTileKey *)arg1;
- (_Bool)addKey:(const struct _GEOTileKey *)arg1 lostKey:(struct _GEOTileKey *)arg2;
- (struct _GEOTileKey *)firstKey;
- (id)description;
- (void)dealloc;
- (id)copyWithMaxCapacity:(unsigned long long)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithMaxCapacity:(unsigned long long)arg1;
- (id)init;
- (id)newXPCData;

@end

@interface GEOTileKeyMap : NSObject
{
    long long _type;
    void *_map;
}

- (unsigned long long)count;
- (void)removeObjectForKey:(const struct _GEOTileKey *)arg1;
- (void)setObject:(id)arg1 forKey:(const struct _GEOTileKey *)arg2;
- (id)objectForKey:(const struct _GEOTileKey *)arg1;
- (id)contentsDescription;
- (void)dealloc;
- (id)initWithMapType:(long long)arg1;

@end

@interface GEOTileLoader : NSObject
{
}

+ (id)diskCacheLocation;
+ (void)setDiskCacheLocation:(id)arg1;
+ (void)setMemoryCacheTotalCostLimit:(unsigned long long)arg1;
+ (void)setMemoryCacheCountLimit:(unsigned long long)arg1;
+ (void)setTrackUsage:(_Bool)arg1;
+ (void)useLocalLoader;
+ (void)useRemoteLoader;
+ (void)setServerProxyClass:(Class)arg1;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)alloc;
+ (id)modernLoaderForResourceManifestConfiguration:(id)arg1 locale:(id)arg2;
+ (id)modernLoaderForTileGroupIdentifier:(unsigned int)arg1 locale:(id)arg2;
+ (id)modernLoader;
+ (id)singletonConfiguration;
+ (id)sharedLoader;
+ (void)setMemoryCacheMinCapacity:(unsigned long long)arg1;
- (id)cachedTileForKey:(const struct _GEOTileKey *)arg1;
- (id)internalDelegateQ;
- (void)setInternalDelegateQ:(id)arg1;
- (id)internalDelegate;
- (void)setInternalDelegate:(id)arg1;
- (void)registerTileLoader:(Class)arg1;
- (void)shrinkDiskCacheToSize:(unsigned long long)arg1 callbackQ:(id)arg2 finished:(CDUnknownBlockType)arg3;
- (void)calculateFreeableSizeWithCallbackQ:(id)arg1 finished:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic) int networkHits;
@property(readonly, nonatomic) int diskHits;
@property(readonly, nonatomic) int memoryHits;
- (void)registerTileDecoder:(id)arg1;
- (void)setSortPoint:(const CDStruct_c3b9c2ee *)arg1;
- (void)reportCorruptTile:(const struct _GEOTileKey *)arg1;
- (void)expireTilesWithPredicate:(CDUnknownBlockType)arg1;
- (void)clearAllCaches;
- (void)endPreloadSessionForClient:(id)arg1;
- (void)beginPreloadSessionOfSize:(unsigned long long)arg1 forClient:(id)arg2 exclusive:(_Bool)arg3;
- (void)cancelAllForClient:(id)arg1;
- (void)cancelKey:(const struct _GEOTileKey *)arg1 forClient:(id)arg2;
- (_Bool)reprioritizeKey:(const struct _GEOTileKey *)arg1 forClient:(id)arg2 newPriority:(unsigned int)arg3;
- (void)loadKey:(const struct _GEOTileKey *)arg1 priority:(unsigned int)arg2 forClient:(id)arg3 options:(unsigned long long)arg4 callbackQ:(id)arg5 beginNetwork:(CDUnknownBlockType)arg6 callback:(CDUnknownBlockType)arg7;
- (void)closeForClient:(id)arg1;
- (void)openForClient:(id)arg1;
- (void)shrinkDiskCacheToSize:(unsigned long long)arg1 finished:(CDUnknownBlockType)arg2;
- (id)expireTilesWithType:(unsigned char)arg1 provider:(unsigned short)arg2 olderThan:(double)arg3;
- (void)cancelRequest:(id)arg1;
- (void)endPreloadSession;
- (void)beginPreloadSessionOfSize:(unsigned long long)arg1;
- (void)preloadTiles:(id)arg1 requireWiFi:(_Bool)arg2 progress:(CDUnknownBlockType)arg3 finished:(CDUnknownBlockType)arg4 error:(CDUnknownBlockType)arg5;
- (void)loadTilesFromCache:(id)arg1 progress:(CDUnknownBlockType)arg2 finished:(CDUnknownBlockType)arg3 error:(CDUnknownBlockType)arg4;
- (void)loadTilesFromCacheAndNetwork:(id)arg1 progress:(CDUnknownBlockType)arg2 finished:(CDUnknownBlockType)arg3 error:(CDUnknownBlockType)arg4;
- (void)loadTiles:(id)arg1 progress:(CDUnknownBlockType)arg2 finished:(CDUnknownBlockType)arg3 error:(CDUnknownBlockType)arg4;
- (void)_loadTiles:(id)arg1 options:(unsigned long long)arg2 progress:(CDUnknownBlockType)arg3 finished:(CDUnknownBlockType)arg4 error:(CDUnknownBlockType)arg5;
- (id)renderDataForKey:(struct _GEOTileKey *)arg1 asyncHandler:(CDUnknownBlockType)arg2;
- (id)renderDataForKey:(struct _GEOTileKey *)arg1;
- (void)openDatabase;
- (void)closeDatabase;

@end

@interface GEOTileLoaderConfiguration : NSObject <NSCopying>
{
    Class _serverProxyClass;
    _Bool _trackUsage;
    unsigned long long _memoryCacheCountLimit;
    unsigned long long _memoryCacheCostLimit;
    NSString *_diskCacheLocation;
    GEOResourceManifestConfiguration *_manifestConfiguration;
    NSLocale *_locale;
}

@property(retain, nonatomic) NSLocale *locale; // @synthesize locale=_locale;
@property(retain, nonatomic) GEOResourceManifestConfiguration *manifestConfiguration; // @synthesize manifestConfiguration=_manifestConfiguration;
@property(copy, nonatomic) NSString *diskCacheLocation; // @synthesize diskCacheLocation=_diskCacheLocation;
@property(nonatomic) unsigned long long memoryCacheCostLimit; // @synthesize memoryCacheCostLimit=_memoryCacheCostLimit;
@property(nonatomic) unsigned long long memoryCacheCountLimit; // @synthesize memoryCacheCountLimit=_memoryCacheCountLimit;
@property(nonatomic) _Bool trackUsage; // @synthesize trackUsage=_trackUsage;
@property(nonatomic) Class serverProxyClass; // @synthesize serverProxyClass=_serverProxyClass;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface GEOTileLoaderDeprecatedCtx : NSObject
{
    struct __CFRunLoop *_runloop;
    GEOTileKeyList *_originalList;
    GEOTileKeyList *_submittedList;
    GEOTileKeyList *_satisfiedList;
    GEOTileKeyList *_notLoaded;
    CDUnknownBlockType _callback;
    CDUnknownBlockType _progress;
    CDUnknownBlockType _error;
    CDUnknownBlockType _finished;
}

@property(readonly, nonatomic) CDUnknownBlockType callback; // @synthesize callback=_callback;
@property(copy, nonatomic) CDUnknownBlockType finished; // @synthesize finished=_finished;
@property(copy, nonatomic) CDUnknownBlockType error; // @synthesize error=_error;
@property(copy, nonatomic) CDUnknownBlockType progress; // @synthesize progress=_progress;
- (void)failure:(const struct _GEOTileKey *)arg1 error:(id)arg2 info:(id)arg3;
- (void)success:(const struct _GEOTileKey *)arg1 tile:(id)arg2 info:(id)arg3;
- (void)breakCycle;
- (void)cancel;
- (void)dealloc;
- (id)initWithList:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface GEOTileLoaderInternal : GEOTileLoader <GEOTileServerProxyDelegate, GEOResourceManifestTileGroupObserver>
{
    struct list<LoadItem, std::__1::allocator<LoadItem>> _loadItems;
    struct mutex _lock;
    GEOTilePool *_cache;
    GEOTilePool *_expiringCache;
    struct unique_ptr<geo::DispatchTimer, std::__1::default_delete<geo::DispatchTimer>> _timer;
    NSObject<OS_dispatch_queue> *_loadQ;
    NSMutableSet *_openers;
    CDStruct_34734122 _sortPoint;
    GEOTileServerProxy *_proxy;
    int _memoryHits;
    int _diskHits;
    int _networkHits;
    struct list<_CacheRequester<void (^)(unsigned long long)>, std::__1::allocator<_CacheRequester<void (^)(unsigned long long)>>> _shrinkCacheRequesters;
    struct list<_CacheRequester<void (^)(unsigned long long)>, std::__1::allocator<_CacheRequester<void (^)(unsigned long long)>>> _freeableSizeRequesters;
    NSMutableArray *_tileDecoders;
    _Bool _networkActive;
    id <GEOTileLoaderInternalDelegate> _internalDelegate;
    NSObject<OS_dispatch_queue> *_internalDelegateQ;
    GEOTileLoaderConfiguration *_config;
    struct mutex _usageLock;
    struct unordered_map<_GEOTileKey, UsageData, std::__1::hash<GEOTileKey>, std::__1::equal_to<GEOTileKey>, std::__1::allocator<std::__1::pair<const _GEOTileKey, UsageData>>> _usageData;
    struct unique_ptr<geo::DispatchTimer, std::__1::default_delete<geo::DispatchTimer>> _usageTimer;
    _Bool _isUsageTimerScheduled;
    int _rollingBatchId;
    struct deque<ErrorInfo, std::__1::allocator<ErrorInfo>> _recentErrors;
}

- (int)networkHits;
- (int)diskHits;
- (int)memoryHits;
- (id).cxx_construct;
- (void).cxx_destruct;
- (id)cachedTileForKey:(const struct _GEOTileKey *)arg1;
- (id)_findInCache:(const struct _GEOTileKey *)arg1;
- (id)internalDelegateQ;
- (void)setInternalDelegateQ:(id)arg1;
- (id)internalDelegate;
- (void)setInternalDelegate:(id)arg1;
- (id)proxy;
- (void)proxy:(id)arg1 willGoToNetworkForTiles:(id)arg2;
- (void)proxy:(id)arg1 didShrinkDiskCacheByAmount:(unsigned long long)arg2;
- (void)proxy:(id)arg1 canShrinkDiskCacheByAmount:(unsigned long long)arg2;
- (void)proxy:(id)arg1 failedToLoadAllPendingTilesWithError:(id)arg2;
- (void)proxy:(id)arg1 failedToLoadTiles:(id)arg2 error:(id)arg3;
- (void)proxy:(id)arg1 loadedTile:(id)arg2 forKey:(const struct _GEOTileKey *)arg3 info:(id)arg4;
- (void)_loadedTile:(id)arg1 forKey:(const struct _GEOTileKey *)arg2 fromOfflinePack:(id)arg3;
- (void)_loadedTile:(id)arg1 forKey:(const struct _GEOTileKey *)arg2 info:(id)arg3;
- (void)reportCorruptTile:(const struct _GEOTileKey *)arg1;
- (void)expireTilesWithPredicate:(CDUnknownBlockType)arg1;
- (void)registerTileLoader:(Class)arg1;
- (void)registerTileDecoder:(id)arg1;
- (void)_localeChanged:(id)arg1;
- (void)_tileEditionChanged:(id)arg1;
- (void)resourceManifestManagerDidChangeActiveTileGroup:(id)arg1;
- (void)resourceManifestManagerWillChangeActiveTileGroup:(id)arg1;
- (void)_activeTileGroupChanged:(id)arg1;
- (void)clearAllCaches;
- (void)calculateFreeableSizeWithCallbackQ:(id)arg1 finished:(CDUnknownBlockType)arg2;
- (void)shrinkDiskCacheToSize:(unsigned long long)arg1 callbackQ:(id)arg2 finished:(CDUnknownBlockType)arg3;
- (void)endPreloadSessionForClient:(id)arg1;
- (void)beginPreloadSessionOfSize:(unsigned long long)arg1 forClient:(id)arg2 exclusive:(_Bool)arg3;
- (void)cancelAllForClient:(id)arg1;
- (void)cancelKey:(const struct _GEOTileKey *)arg1 forClient:(id)arg2;
- (void)setSortPoint:(const CDStruct_c3b9c2ee *)arg1;
- (void)_timerFired;
- (void)_requestOnlineTiles;
- (void)loadKey:(const struct _GEOTileKey *)arg1 priority:(unsigned int)arg2 forClient:(id)arg3 options:(unsigned long long)arg4 callbackQ:(id)arg5 beginNetwork:(CDUnknownBlockType)arg6 callback:(CDUnknownBlockType)arg7;
- (void)_usageTimerFired;
- (_Bool)reprioritizeKey:(const struct _GEOTileKey *)arg1 forClient:(id)arg2 newPriority:(unsigned int)arg3;
- (void)loadKey:(const struct _GEOTileKey *)arg1 priority:(unsigned int)arg2 forClient:(id)arg3 proxyClient:(id)arg4 options:(unsigned long long)arg5 callbackQ:(id)arg6 beginNetwork:(CDUnknownBlockType)arg7 callback:(CDUnknownBlockType)arg8;
- (_Bool)_cancelIfNeeded:(__list_iterator_d839716a *)arg1;
- (void)_cancel:(__list_iterator_d839716a *)arg1 err:(id)arg2;
- (void)_updateNetworkActive;
- (void)closeForClient:(id)arg1;
- (void)openForClient:(id)arg1;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)init;
- (id)initWithConfiguration:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GEOTilePool : NSObject
{
    NSObject<OS_dispatch_source> *_memoryNotificationEventSource;
    struct _GEOGenericContainer<_GEOTileKey, id, std::__1::hash<GEOTileKey>, std::__1::equal_to<GEOTileKey>, geo::GEOGenericContainerWeakReferenceTag, 0, 0, geo::GEOGenericContainerLockingTag, detail::_default_pointer_type> _pool;
    GEOTileCache *_cache;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)_receivedMemoryNotification;
- (void)_enteredBackground:(id)arg1;
@property unsigned long long maxCost;
@property unsigned long long maxCapacity;
- (_Bool)containsKey:(const struct _GEOTileKey *)arg1 cost:(unsigned long long *)arg2;
- (void)removeTilesMatchingPredicate:(CDUnknownBlockType)arg1;
- (void)enumerate:(CDUnknownBlockType)arg1;
- (void)removeAllObjects;
- (void)removeTilesWithKeys:(id)arg1;
- (void)removeTileForKey:(const struct _GEOTileKey *)arg1;
- (void)setNullForKey:(const struct _GEOTileKey *)arg1;
- (void)setTile:(id)arg1 forKey:(const struct _GEOTileKey *)arg2 cost:(unsigned long long)arg3;
- (id)tileForKey:(const struct _GEOTileKey *)arg1;
- (void)dealloc;
- (id)init;
- (id)initWithSideCacheEnabled:(_Bool)arg1;
@property(readonly, nonatomic) unsigned long long currentCost;
@property(readonly, nonatomic) unsigned long long currentCount;

@end

@interface GEOTileServerProxy : NSObject
{
    id <GEOTileServerProxyDelegate> _delegate;
    NSObject<OS_dispatch_queue> *_delegateQ;
    GEOResourceManifestConfiguration *_manifestConfiguration;
    NSLocale *_locale;
}

@property(nonatomic) NSObject<OS_dispatch_queue> *delegateQ; // @synthesize delegateQ=_delegateQ;
@property(nonatomic) id <GEOTileServerProxyDelegate> delegate; // @synthesize delegate=_delegate;
- (_Bool)skipNetworkForKeysWhenPreloading:(id)arg1;
- (void)endPreloadSession;
- (void)beginPreloadSessionOfSize:(unsigned long long)arg1 exclusive:(_Bool)arg2;
- (void)shrinkDiskCacheToSize:(unsigned long long)arg1;
- (void)calculateFreeableSize;
- (void)flushPendingWrites;
- (void)reportCorruptTile:(const struct _GEOTileKey *)arg1;
- (void)cancel:(const struct _GEOTileKey *)arg1;
- (void)loadTiles:(id)arg1 priorities:(unsigned int *)arg2 options:(unsigned long long)arg3 client:(id)arg4;
- (void)close;
- (void)open;
- (void)dealloc;
- (id)initWithCacheLocation:(id)arg1 manifestConfiguration:(id)arg2 locale:(id)arg3;

@end

@interface GEOTileServerLocalProxy : GEOTileServerProxy <GEOResourceManifestTileGroupObserver>
{
    GEODBWriter *_dbWriter;
    GEODBReader *_dbReader;
    NSString *_cacheLocation;
    NSMapTable *_providers;
    NSMutableArray *_inProgress;
    NSLock *_inProgressLock;
}

- (void)resourceManifestManagerDidChangeActiveTileGroup:(id)arg1;
- (void)resourceManifestManagerWillChangeActiveTileGroup:(id)arg1;
- (void)flushPendingWrites;
- (_Bool)skipNetworkForKeysWhenPreloading:(id)arg1;
- (void)endPreloadSession;
- (void)beginPreloadSessionOfSize:(unsigned long long)arg1 exclusive:(_Bool)arg2;
- (void)shrinkDiskCacheToSize:(unsigned long long)arg1;
- (void)calculateFreeableSize;
- (void)reportCorruptTile:(const struct _GEOTileKey *)arg1;
- (void)tileRequesterFinished:(id)arg1;
- (void)tileRequester:(id)arg1 receivedError:(id)arg2;
- (void)tileRequester:(id)arg1 receivedData:(id)arg2 tileEdition:(unsigned int)arg3 tileSet:(unsigned int)arg4 etag:(id)arg5 forKey:(struct _GEOTileKey)arg6 userInfo:(id)arg7;
- (void)loadTiles:(id)arg1 priorities:(unsigned int *)arg2 options:(unsigned long long)arg3 client:(id)arg4;
- (void)cancel:(const struct _GEOTileKey *)arg1;
- (void)close;
- (void)open;
- (void)registerProvider:(Class)arg1;
- (void)_updateExpiringTilesets;
- (void)_registerBuiltInProviders;
- (void)dealloc;
- (id)initWithCacheLocation:(id)arg1 manifestConfiguration:(id)arg2 locale:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GEOTileServerLocalProxyBatchContext : NSObject
{
    GEOTileKeyList *_fullList;
    GEOTileKeyList *_interestList;
    GEOTileKeyList *_networkList;
    GEOTileKeyList *_pendingNetworkList;
    GEOTileRequester *_tileRequester;
}

@property(retain, nonatomic) GEOTileRequester *tileRequester; // @synthesize tileRequester=_tileRequester;
@property(retain, nonatomic) GEOTileKeyList *pendingNetworkList; // @synthesize pendingNetworkList=_pendingNetworkList;
@property(retain, nonatomic) GEOTileKeyList *networkList; // @synthesize networkList=_networkList;
@property(retain, nonatomic) GEOTileKeyList *interestList; // @synthesize interestList=_interestList;
@property(retain, nonatomic) GEOTileKeyList *fullList; // @synthesize fullList=_fullList;
- (void)dealloc;

@end

@interface GEOTileServerRemoteProxy : GEOTileServerProxy
{
    NSObject<OS_dispatch_queue> *_connQueue;
    NSObject<OS_xpc_object> *_conn;
    NSLock *_connLock;
    int _suspendCount;
    unsigned long long _handleCounter;
    NSHashTable *_cancellingConnections;
    NSLock *_cancellingConnectionsLock;
}

- (_Bool)skipNetworkForKeysWhenPreloading:(id)arg1;
- (void)endPreloadSession;
- (void)beginPreloadSessionOfSize:(unsigned long long)arg1 exclusive:(_Bool)arg2;
- (void)shrinkDiskCacheToSize:(unsigned long long)arg1;
- (void)calculateFreeableSize;
- (void)flushPendingWrites;
- (void)open;
- (void)close;
- (void)reportCorruptTile:(const struct _GEOTileKey *)arg1;
- (void)cancel:(const struct _GEOTileKey *)arg1;
- (void)loadTiles:(id)arg1 priorities:(unsigned int *)arg2 options:(unsigned long long)arg3 client:(id)arg4;
- (void)_handleEditionUpgrade:(id)arg1;
- (void)_handleNetworkBegan:(id)arg1;
- (void)_handleError:(id)arg1;
- (void)_handleTile:(id)arg1;
- (void)_handleEvent:(id)arg1 fromConnection:(id)arg2;
- (void)dealloc;
- (id)initWithCacheLocation:(id)arg1 manifestConfiguration:(id)arg2 locale:(id)arg3;

@end

@interface GEOTileSet : PBCodable <NSCopying>
{
    NSString *_baseURL;
    NSString *_localizationURL;
    NSString *_multiTileURL;
    int _scale;
    int _size;
    int _style;
    NSMutableArray *_supportedLanguages;
    int _updateBehavior;
    NSMutableArray *_validVersions;
    _Bool _multiTileURLUsesStatusCodes;
    struct {
        unsigned int updateBehavior:1;
        unsigned int multiTileURLUsesStatusCodes:1;
    } _has;
}

@property(nonatomic) _Bool multiTileURLUsesStatusCodes; // @synthesize multiTileURLUsesStatusCodes=_multiTileURLUsesStatusCodes;
@property(retain, nonatomic) NSMutableArray *supportedLanguages; // @synthesize supportedLanguages=_supportedLanguages;
@property(retain, nonatomic) NSString *localizationURL; // @synthesize localizationURL=_localizationURL;
@property(nonatomic) int size; // @synthesize size=_size;
@property(nonatomic) int scale; // @synthesize scale=_scale;
@property(retain, nonatomic) NSMutableArray *validVersions; // @synthesize validVersions=_validVersions;
@property(nonatomic) int style; // @synthesize style=_style;
@property(retain, nonatomic) NSString *multiTileURL; // @synthesize multiTileURL=_multiTileURL;
@property(retain, nonatomic) NSString *baseURL; // @synthesize baseURL=_baseURL;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasUpdateBehavior;
@property(nonatomic) int updateBehavior; // @synthesize updateBehavior=_updateBehavior;
@property(nonatomic) _Bool hasMultiTileURLUsesStatusCodes;
- (id)supportedLanguageAtIndex:(unsigned long long)arg1;
- (unsigned long long)supportedLanguagesCount;
- (void)addSupportedLanguage:(id)arg1;
- (void)clearSupportedLanguages;
@property(readonly, nonatomic) _Bool hasLocalizationURL;
- (id)validVersionAtIndex:(unsigned long long)arg1;
- (unsigned long long)validVersionsCount;
- (void)addValidVersion:(id)arg1;
- (void)clearValidVersions;
@property(readonly, nonatomic) _Bool hasMultiTileURL;
@property(readonly, nonatomic) _Bool hasBaseURL;
- (void)dealloc;

@end

@interface GEOTileSetVersion : PBCodable <NSCopying>
{
    CDStruct_d66e66b9 *_availableTiles;
    unsigned long long _availableTilesCount;
    unsigned long long _availableTilesSpace;
    CDStruct_8f5f9923 *_genericTiles;
    unsigned long long _genericTilesCount;
    unsigned long long _genericTilesSpace;
    unsigned int _identifier;
    unsigned int _supportedLanguagesVersion;
    unsigned int _timeToLiveSeconds;
    struct {
        unsigned int supportedLanguagesVersion:1;
        unsigned int timeToLiveSeconds:1;
    } _has;
}

@property(nonatomic) unsigned int supportedLanguagesVersion; // @synthesize supportedLanguagesVersion=_supportedLanguagesVersion;
@property(nonatomic) unsigned int timeToLiveSeconds; // @synthesize timeToLiveSeconds=_timeToLiveSeconds;
@property(nonatomic) unsigned int identifier; // @synthesize identifier=_identifier;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasSupportedLanguagesVersion;
- (void)setGenericTiles:(CDStruct_8f5f9923 *)arg1 count:(unsigned long long)arg2;
- (CDStruct_8f5f9923)genericTileAtIndex:(unsigned long long)arg1;
- (void)addGenericTile:(CDStruct_8f5f9923)arg1;
- (void)clearGenericTiles;
@property(readonly, nonatomic) CDStruct_8f5f9923 *genericTiles;
@property(readonly, nonatomic) unsigned long long genericTilesCount;
@property(nonatomic) _Bool hasTimeToLiveSeconds;
- (void)setAvailableTiles:(CDStruct_d66e66b9 *)arg1 count:(unsigned long long)arg2;
- (CDStruct_d66e66b9)availableTilesAtIndex:(unsigned long long)arg1;
- (void)addAvailableTiles:(CDStruct_d66e66b9)arg1;
- (void)clearAvailableTiles;
@property(readonly, nonatomic) CDStruct_d66e66b9 *availableTiles;
@property(readonly, nonatomic) unsigned long long availableTilesCount;
- (void)dealloc;

@end

@interface GEOTileUsageInfo : NSObject
{
    double _startTime;
    double _endTime;
    NSMapTable *_tileStyleToCount;
    unsigned long long _dataLength;
}

@property(readonly, nonatomic) unsigned long long dataLength; // @synthesize dataLength=_dataLength;
@property(readonly, nonatomic) NSMapTable *tileStyleToCount; // @synthesize tileStyleToCount=_tileStyleToCount;
@property(nonatomic) double endTime; // @synthesize endTime=_endTime;
@property(nonatomic) double startTime; // @synthesize startTime=_startTime;
- (void)addTileKey:(const struct _GEOTileKey *)arg1 dataLength:(unsigned long long)arg2;
- (void)dealloc;

@end

@interface GEOTimeCheckpoints : PBCodable <NSCopying>
{
    CDStruct_9f2792e4 _distToNextCheckpoints;
    CDStruct_9f2792e4 _timeToNextCheckpoints;
}

- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (void)setTimeToNextCheckpoints:(unsigned int *)arg1 count:(unsigned long long)arg2;
- (unsigned int)timeToNextCheckpointAtIndex:(unsigned long long)arg1;
- (void)addTimeToNextCheckpoint:(unsigned int)arg1;
- (void)clearTimeToNextCheckpoints;
@property(readonly, nonatomic) unsigned int *timeToNextCheckpoints;
@property(readonly, nonatomic) unsigned long long timeToNextCheckpointsCount;
- (void)setDistToNextCheckpoints:(unsigned int *)arg1 count:(unsigned long long)arg2;
- (unsigned int)distToNextCheckpointAtIndex:(unsigned long long)arg1;
- (void)addDistToNextCheckpoint:(unsigned int)arg1;
- (void)clearDistToNextCheckpoints;
@property(readonly, nonatomic) unsigned int *distToNextCheckpoints;
@property(readonly, nonatomic) unsigned long long distToNextCheckpointsCount;
- (void)dealloc;

@end

@interface GEOTimeRange : PBCodable <NSCopying>
{
    unsigned int _from;
    unsigned int _to;
    _Bool _allDay;
    struct {
        unsigned int from:1;
        unsigned int to:1;
        unsigned int allDay:1;
    } _has;
}

@property(nonatomic) _Bool allDay; // @synthesize allDay=_allDay;
@property(nonatomic) unsigned int to; // @synthesize to=_to;
@property(nonatomic) unsigned int from; // @synthesize from=_from;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasAllDay;
@property(nonatomic) _Bool hasTo;
@property(nonatomic) _Bool hasFrom;
- (id)initWithPlaceDataTimeRange:(CDStruct_aca30317 *)arg1;
- (_Bool)isAdjacentToTimeRange:(id)arg1;

@end

@interface GEOTimezone : PBCodable <NSCopying>
{
    NSString *_identifier;
}

@property(retain, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface GEOTrafficIncident : PBCodable <NSCopying>
{
    double _endTime;
    double _lastUpdated;
    double _startTime;
    long long _uID;
    NSString *_info;
    NSString *_location;
    NSString *_title;
    int _type;
    int _vertexCount;
    int _vertexOffset;
    struct {
        unsigned int endTime:1;
        unsigned int lastUpdated:1;
        unsigned int startTime:1;
        unsigned int uID:1;
        unsigned int type:1;
        unsigned int vertexCount:1;
        unsigned int vertexOffset:1;
    } _has;
}

@property(nonatomic) int type; // @synthesize type=_type;
@property(nonatomic) double lastUpdated; // @synthesize lastUpdated=_lastUpdated;
@property(nonatomic) double endTime; // @synthesize endTime=_endTime;
@property(nonatomic) double startTime; // @synthesize startTime=_startTime;
@property(nonatomic) int vertexCount; // @synthesize vertexCount=_vertexCount;
@property(nonatomic) int vertexOffset; // @synthesize vertexOffset=_vertexOffset;
@property(retain, nonatomic) NSString *location; // @synthesize location=_location;
@property(retain, nonatomic) NSString *info; // @synthesize info=_info;
@property(retain, nonatomic) NSString *title; // @synthesize title=_title;
@property(nonatomic) long long uID; // @synthesize uID=_uID;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasType;
@property(nonatomic) _Bool hasLastUpdated;
@property(nonatomic) _Bool hasEndTime;
@property(nonatomic) _Bool hasStartTime;
@property(nonatomic) _Bool hasVertexCount;
@property(nonatomic) _Bool hasVertexOffset;
@property(readonly, nonatomic) _Bool hasLocation;
@property(readonly, nonatomic) _Bool hasInfo;
@property(readonly, nonatomic) _Bool hasTitle;
@property(nonatomic) _Bool hasUID;
- (void)dealloc;

@end

@interface GEOTrafficRerouteFeedbackCollection : PBCodable <NSCopying>
{
    NSData *_directionResponseID;
    unsigned int _oldRouteHistoricTravelTime;
    NSData *_oldRouteID;
    NSMutableArray *_oldRouteIncidents;
    unsigned int _oldRouteTravelTime;
    unsigned int _reroutedRouteHistoricTravelTime;
    NSData *_reroutedRouteID;
    unsigned int _reroutedRouteTravelTime;
    _Bool _oldRouteBlocked;
    struct {
        unsigned int oldRouteHistoricTravelTime:1;
        unsigned int oldRouteTravelTime:1;
        unsigned int reroutedRouteHistoricTravelTime:1;
        unsigned int reroutedRouteTravelTime:1;
        unsigned int oldRouteBlocked:1;
    } _has;
}

@property(retain, nonatomic) NSData *reroutedRouteID; // @synthesize reroutedRouteID=_reroutedRouteID;
@property(retain, nonatomic) NSData *oldRouteID; // @synthesize oldRouteID=_oldRouteID;
@property(retain, nonatomic) NSData *directionResponseID; // @synthesize directionResponseID=_directionResponseID;
@property(retain, nonatomic) NSMutableArray *oldRouteIncidents; // @synthesize oldRouteIncidents=_oldRouteIncidents;
@property(nonatomic) _Bool oldRouteBlocked; // @synthesize oldRouteBlocked=_oldRouteBlocked;
@property(nonatomic) unsigned int reroutedRouteHistoricTravelTime; // @synthesize reroutedRouteHistoricTravelTime=_reroutedRouteHistoricTravelTime;
@property(nonatomic) unsigned int oldRouteHistoricTravelTime; // @synthesize oldRouteHistoricTravelTime=_oldRouteHistoricTravelTime;
@property(nonatomic) unsigned int reroutedRouteTravelTime; // @synthesize reroutedRouteTravelTime=_reroutedRouteTravelTime;
@property(nonatomic) unsigned int oldRouteTravelTime; // @synthesize oldRouteTravelTime=_oldRouteTravelTime;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasReroutedRouteID;
@property(readonly, nonatomic) _Bool hasOldRouteID;
@property(readonly, nonatomic) _Bool hasDirectionResponseID;
- (id)oldRouteIncidentsAtIndex:(unsigned long long)arg1;
- (unsigned long long)oldRouteIncidentsCount;
- (void)addOldRouteIncidents:(id)arg1;
- (void)clearOldRouteIncidents;
@property(nonatomic) _Bool hasOldRouteBlocked;
@property(nonatomic) _Bool hasReroutedRouteHistoricTravelTime;
@property(nonatomic) _Bool hasOldRouteHistoricTravelTime;
@property(nonatomic) _Bool hasReroutedRouteTravelTime;
@property(nonatomic) _Bool hasOldRouteTravelTime;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface GEOTrafficSegment : PBCodable <NSCopying>
{
    int _speed;
    int _vertexCount;
    int _vertexOffset;
    int _width;
    struct {
        unsigned int speed:1;
        unsigned int width:1;
    } _has;
}

@property(nonatomic) int width; // @synthesize width=_width;
@property(nonatomic) int vertexCount; // @synthesize vertexCount=_vertexCount;
@property(nonatomic) int vertexOffset; // @synthesize vertexOffset=_vertexOffset;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasWidth;
@property(nonatomic) _Bool hasSpeed;
@property(nonatomic) int speed; // @synthesize speed=_speed;

@end

__attribute__((visibility("hidden")))
@interface GEOTrafficTile : PBCodable <NSCopying>
{
    NSMutableArray *_trafficIncidents;
    NSMutableArray *_trafficSegments;
    NSData *_vertices;
}

@property(retain, nonatomic) NSMutableArray *trafficIncidents; // @synthesize trafficIncidents=_trafficIncidents;
@property(retain, nonatomic) NSMutableArray *trafficSegments; // @synthesize trafficSegments=_trafficSegments;
@property(retain, nonatomic) NSData *vertices; // @synthesize vertices=_vertices;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)trafficIncidentAtIndex:(unsigned long long)arg1;
- (unsigned long long)trafficIncidentsCount;
- (void)addTrafficIncident:(id)arg1;
- (void)clearTrafficIncidents;
- (id)trafficSegmentAtIndex:(unsigned long long)arg1;
- (unsigned long long)trafficSegmentsCount;
- (void)addTrafficSegment:(id)arg1;
- (void)clearTrafficSegments;
@property(readonly, nonatomic) _Bool hasVertices;
- (void)dealloc;
- (CDStruct_912cb5d2 *)createUnpackedVerticesWithGutterSize:(long long)arg1;

@end

@interface GEOTraitsPhotoSize : PBCodable <NSCopying>
{
    unsigned int _height;
    unsigned int _width;
    CDStruct_db93fd0f _has;
}

@property(nonatomic) unsigned int height; // @synthesize height=_height;
@property(nonatomic) unsigned int width; // @synthesize width=_width;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasHeight;
@property(nonatomic) _Bool hasWidth;

@end

@interface GEOTransitAppLaunchFeedbackCollection : PBCodable <NSCopying>
{
    double _timestamp;
    NSString *_bundleIdentifier;
    GEOLatLng *_destination;
    GEOLatLng *_source;
    struct {
        unsigned int timestamp:1;
    } _has;
}

@property(nonatomic) double timestamp; // @synthesize timestamp=_timestamp;
@property(retain, nonatomic) GEOLatLng *destination; // @synthesize destination=_destination;
@property(retain, nonatomic) GEOLatLng *source; // @synthesize source=_source;
@property(retain, nonatomic) NSString *bundleIdentifier; // @synthesize bundleIdentifier=_bundleIdentifier;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasTimestamp;
@property(readonly, nonatomic) _Bool hasDestination;
@property(readonly, nonatomic) _Bool hasSource;
@property(readonly, nonatomic) _Bool hasBundleIdentifier;
- (void)dealloc;

@end

@interface GEOUIActionCapture : PBCodable <NSCopying>
{
    double _duration;
    int _actionType;
    int _sequenceNumber;
    struct {
        unsigned int duration:1;
        unsigned int actionType:1;
        unsigned int sequenceNumber:1;
    } _has;
}

@property(nonatomic) int sequenceNumber; // @synthesize sequenceNumber=_sequenceNumber;
@property(nonatomic) double duration; // @synthesize duration=_duration;
@property(nonatomic) int actionType; // @synthesize actionType=_actionType;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasSequenceNumber;
@property(nonatomic) _Bool hasDuration;
@property(nonatomic) _Bool hasActionType;

@end

@interface GEOURLCamera : PBCodable <NSCopying>
{
    double _altitude;
    double _heading;
    double _latitude;
    double _longitude;
    double _pitch;
    struct {
        unsigned int altitude:1;
        unsigned int heading:1;
        unsigned int latitude:1;
        unsigned int longitude:1;
        unsigned int pitch:1;
    } _has;
}

@property(nonatomic) double altitude; // @synthesize altitude=_altitude;
@property(nonatomic) double pitch; // @synthesize pitch=_pitch;
@property(nonatomic) double heading; // @synthesize heading=_heading;
@property(nonatomic) double longitude; // @synthesize longitude=_longitude;
@property(nonatomic) double latitude; // @synthesize latitude=_latitude;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasAltitude;
@property(nonatomic) _Bool hasPitch;
@property(nonatomic) _Bool hasHeading;
@property(nonatomic) _Bool hasLongitude;
@property(nonatomic) _Bool hasLatitude;

@end

@interface GEOURLCenterSpan : PBCodable <NSCopying>
{
    double _latitude;
    double _latitudeDelta;
    double _longitude;
    double _longitudeDelta;
    struct {
        unsigned int latitude:1;
        unsigned int latitudeDelta:1;
        unsigned int longitude:1;
        unsigned int longitudeDelta:1;
    } _has;
}

@property(nonatomic) double longitudeDelta; // @synthesize longitudeDelta=_longitudeDelta;
@property(nonatomic) double latitudeDelta; // @synthesize latitudeDelta=_latitudeDelta;
@property(nonatomic) double longitude; // @synthesize longitude=_longitude;
@property(nonatomic) double latitude; // @synthesize latitude=_latitude;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasLongitudeDelta;
@property(nonatomic) _Bool hasLatitudeDelta;
@property(nonatomic) _Bool hasLongitude;
@property(nonatomic) _Bool hasLatitude;

@end

@interface GEOURLConnectionSession : NSObject
{
    struct __CFURLConnectionSession *_connectionSession;
    NSMapTable *_connectionDelegates;
    NSLock *_delegateMapLock;
}

- (struct _CFURLConnection *)newCFURLConnectionWithRequest:(struct _CFURLRequest *)arg1 delegate:(id)arg2;
- (struct _CFURLRequest *)newCFMutableURLRequestWithURL:(id)arg1;
- (void)_createConnectionSessionWithPurgeTimeout:(int)arg1 loadWidth:(int)arg2;
- (void)removeDelegateForConnection:(struct _CFURLConnection *)arg1;
- (id)_delegateForConnection:(struct _CFURLConnection *)arg1;
- (void)dealloc;
- (id)initPersistentSessionWithTimeout:(int)arg1 loadWidth:(int)arg2;

@end

__attribute__((visibility("hidden")))
@interface GEOURLExtrasInternal : NSObject
{
}

@end

@interface GEOURLItem : PBCodable <NSCopying>
{
    GEOMapItemStorage *_mapItemStorage;
    GEOPlace *_place;
    _Bool _currentLocation;
    struct {
        unsigned int currentLocation:1;
    } _has;
}

@property(retain, nonatomic) GEOMapItemStorage *mapItemStorage; // @synthesize mapItemStorage=_mapItemStorage;
@property(nonatomic) _Bool currentLocation; // @synthesize currentLocation=_currentLocation;
@property(retain, nonatomic) GEOPlace *place; // @synthesize place=_place;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasMapItemStorage;
@property(nonatomic) _Bool hasCurrentLocation;
@property(readonly, nonatomic) _Bool hasPlace;
- (void)dealloc;
- (void)setMapItem:(id)arg1;
- (id)mapItem;

@end

@interface GEOURLOptions : PBCodable <GEOURLSerializable, NSCopying>
{
    GEOURLCamera *_camera;
    GEOURLCenterSpan *_centerSpan;
    int _mapType;
    NSString *_referralIdentifier;
    GEOURLRouteHandle *_routeHandle;
    int _transportType;
    int _userTrackingMode;
    _Bool _enableTraffic;
    struct {
        unsigned int mapType:1;
        unsigned int transportType:1;
        unsigned int userTrackingMode:1;
        unsigned int enableTraffic:1;
    } _has;
}

@property(retain, nonatomic) GEOURLRouteHandle *routeHandle; // @synthesize routeHandle=_routeHandle;
@property(nonatomic) int userTrackingMode; // @synthesize userTrackingMode=_userTrackingMode;
@property(retain, nonatomic) NSString *referralIdentifier; // @synthesize referralIdentifier=_referralIdentifier;
@property(retain, nonatomic) GEOURLCamera *camera; // @synthesize camera=_camera;
@property(retain, nonatomic) GEOURLCenterSpan *centerSpan; // @synthesize centerSpan=_centerSpan;
@property(nonatomic) int transportType; // @synthesize transportType=_transportType;
@property(nonatomic) int mapType; // @synthesize mapType=_mapType;
@property(nonatomic) _Bool enableTraffic; // @synthesize enableTraffic=_enableTraffic;
- (void)mergeFrom:(id)arg1;
@property(readonly) unsigned long long hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic) _Bool hasRouteHandle;
@property(nonatomic) _Bool hasUserTrackingMode;
@property(readonly, nonatomic) _Bool hasReferralIdentifier;
@property(readonly, nonatomic) _Bool hasCamera;
@property(readonly, nonatomic) _Bool hasCenterSpan;
@property(nonatomic) _Bool hasTransportType;
@property(nonatomic) _Bool hasMapType;
@property(nonatomic) _Bool hasEnableTraffic;
- (void)dealloc;
- (id)urlRepresentation;
- (id)initWithUrlRepresentation:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

@interface GEOURLPresent : PBCodable <NSCopying>
{
    NSMutableArray *_items;
    GEOURLOptions *_options;
}

@property(retain, nonatomic) GEOURLOptions *options; // @synthesize options=_options;
@property(retain, nonatomic) NSMutableArray *items; // @synthesize items=_items;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasOptions;
- (id)itemAtIndex:(unsigned long long)arg1;
- (unsigned long long)itemsCount;
- (void)addItem:(id)arg1;
- (void)clearItems;
- (void)dealloc;
- (id)initWithDirectionsOptions:(id)arg1;
- (id)initWithOptions:(id)arg1;

@end

@interface GEOURLRouteHandle : PBCodable <NSCopying>
{
    NSData *_directionsResponseID;
    NSData *_routeID;
    NSData *_zilchPoints;
}

@property(retain, nonatomic) NSData *zilchPoints; // @synthesize zilchPoints=_zilchPoints;
@property(retain, nonatomic) NSData *routeID; // @synthesize routeID=_routeID;
@property(retain, nonatomic) NSData *directionsResponseID; // @synthesize directionsResponseID=_directionsResponseID;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasZilchPoints;
@property(readonly, nonatomic) _Bool hasRouteID;
@property(readonly, nonatomic) _Bool hasDirectionsResponseID;
- (void)dealloc;

@end

@interface GEOURLSessionConnection : NSObject
{
    struct _CFURLConnection *_cfConnection;
    id _delegate;
    GEOURLConnectionSession *_connectionSession;
}

- (void)connectionDidTerminate;
- (void)connectionDidFailWithError:(id)arg1;
- (void)connectionDidFinishLoading;
- (void)connectionDidReceiveData:(id)arg1;
- (void)connectionDidReceiveResponse:(struct _CFURLResponse *)arg1;
- (void)cancel;
- (void)dealloc;
- (id)initWithCFRequest:(struct _CFURLRequest *)arg1 delegate:(id)arg2 usingSession:(id)arg3;

@end

@interface GEOUsageCollection : PBCodable <NSCopying>
{
    CDStruct_612aec5b _sessionID;
    CDStruct_8f5f9923 *_tileUsages;
    unsigned long long _tileUsagesCount;
    unsigned long long _tileUsagesSpace;
    double _timestamp;
    int _cellWifi;
    NSString *_countryCode;
    int _geoService;
    NSString *_hwMachine;
    int _requestDataSize;
    int _responseDataSize;
    int _responseTime;
    _Bool _sessionIDIsPersistent;
    struct {
        unsigned int sessionID:1;
        unsigned int timestamp:1;
        unsigned int cellWifi:1;
        unsigned int geoService:1;
        unsigned int requestDataSize:1;
        unsigned int responseDataSize:1;
        unsigned int responseTime:1;
        unsigned int sessionIDIsPersistent:1;
    } _has;
}

@property(retain, nonatomic) NSString *hwMachine; // @synthesize hwMachine=_hwMachine;
@property(nonatomic) double timestamp; // @synthesize timestamp=_timestamp;
@property(nonatomic) CDStruct_612aec5b sessionID; // @synthesize sessionID=_sessionID;
@property(retain, nonatomic) NSString *countryCode; // @synthesize countryCode=_countryCode;
@property(nonatomic) int cellWifi; // @synthesize cellWifi=_cellWifi;
@property(nonatomic) int responseTime; // @synthesize responseTime=_responseTime;
@property(nonatomic) int responseDataSize; // @synthesize responseDataSize=_responseDataSize;
@property(nonatomic) int requestDataSize; // @synthesize requestDataSize=_requestDataSize;
@property(nonatomic) int geoService; // @synthesize geoService=_geoService;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasSessionIDIsPersistent;
@property(nonatomic) _Bool sessionIDIsPersistent; // @synthesize sessionIDIsPersistent=_sessionIDIsPersistent;
@property(readonly, nonatomic) _Bool hasHwMachine;
- (void)setTileUsages:(CDStruct_8f5f9923 *)arg1 count:(unsigned long long)arg2;
- (CDStruct_8f5f9923)tileUsageAtIndex:(unsigned long long)arg1;
- (void)addTileUsage:(CDStruct_8f5f9923)arg1;
- (void)clearTileUsages;
@property(readonly, nonatomic) CDStruct_8f5f9923 *tileUsages;
@property(readonly, nonatomic) unsigned long long tileUsagesCount;
@property(nonatomic) _Bool hasTimestamp;
@property(nonatomic) _Bool hasSessionID;
@property(readonly, nonatomic) _Bool hasCountryCode;
@property(nonatomic) _Bool hasCellWifi;
@property(nonatomic) _Bool hasResponseTime;
@property(nonatomic) _Bool hasResponseDataSize;
@property(nonatomic) _Bool hasRequestDataSize;
@property(nonatomic) _Bool hasGeoService;
- (void)dealloc;

@end

@interface GEOUsageCollectionRequest : PBRequest <NSCopying>
{
    NSMutableArray *_directionsFeedbackCollections;
    NSMutableArray *_leaveNowFeedbackCollections;
    NSMutableArray *_mapsLaunchFeedbackCollections;
    NSMutableArray *_mapsUsageFeedbackCollections;
    NSMutableArray *_placeDataCacheFeedbackCollections;
    NSMutableArray *_stateTimingFeedbackCollections;
    NSMutableArray *_suggestionsFeedbackCollections;
    NSMutableArray *_trafficRerouteFeedbackCollections;
    NSMutableArray *_transitAppLaunchFeedbackCollections;
    NSMutableArray *_usageCollections;
}

@property(retain, nonatomic) NSMutableArray *placeDataCacheFeedbackCollections; // @synthesize placeDataCacheFeedbackCollections=_placeDataCacheFeedbackCollections;
@property(retain, nonatomic) NSMutableArray *mapsLaunchFeedbackCollections; // @synthesize mapsLaunchFeedbackCollections=_mapsLaunchFeedbackCollections;
@property(retain, nonatomic) NSMutableArray *leaveNowFeedbackCollections; // @synthesize leaveNowFeedbackCollections=_leaveNowFeedbackCollections;
@property(retain, nonatomic) NSMutableArray *trafficRerouteFeedbackCollections; // @synthesize trafficRerouteFeedbackCollections=_trafficRerouteFeedbackCollections;
@property(retain, nonatomic) NSMutableArray *stateTimingFeedbackCollections; // @synthesize stateTimingFeedbackCollections=_stateTimingFeedbackCollections;
@property(retain, nonatomic) NSMutableArray *suggestionsFeedbackCollections; // @synthesize suggestionsFeedbackCollections=_suggestionsFeedbackCollections;
@property(retain, nonatomic) NSMutableArray *mapsUsageFeedbackCollections; // @synthesize mapsUsageFeedbackCollections=_mapsUsageFeedbackCollections;
@property(retain, nonatomic) NSMutableArray *transitAppLaunchFeedbackCollections; // @synthesize transitAppLaunchFeedbackCollections=_transitAppLaunchFeedbackCollections;
@property(retain, nonatomic) NSMutableArray *directionsFeedbackCollections; // @synthesize directionsFeedbackCollections=_directionsFeedbackCollections;
@property(retain, nonatomic) NSMutableArray *usageCollections; // @synthesize usageCollections=_usageCollections;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (Class)responseClass;
- (unsigned int)requestTypeCode;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)placeDataCacheFeedbackCollectionAtIndex:(unsigned long long)arg1;
- (unsigned long long)placeDataCacheFeedbackCollectionsCount;
- (void)addPlaceDataCacheFeedbackCollection:(id)arg1;
- (void)clearPlaceDataCacheFeedbackCollections;
- (id)mapsLaunchFeedbackCollectionAtIndex:(unsigned long long)arg1;
- (unsigned long long)mapsLaunchFeedbackCollectionsCount;
- (void)addMapsLaunchFeedbackCollection:(id)arg1;
- (void)clearMapsLaunchFeedbackCollections;
- (id)leaveNowFeedbackCollectionAtIndex:(unsigned long long)arg1;
- (unsigned long long)leaveNowFeedbackCollectionsCount;
- (void)addLeaveNowFeedbackCollection:(id)arg1;
- (void)clearLeaveNowFeedbackCollections;
- (id)trafficRerouteFeedbackCollectionAtIndex:(unsigned long long)arg1;
- (unsigned long long)trafficRerouteFeedbackCollectionsCount;
- (void)addTrafficRerouteFeedbackCollection:(id)arg1;
- (void)clearTrafficRerouteFeedbackCollections;
- (id)stateTimingFeedbackCollectionAtIndex:(unsigned long long)arg1;
- (unsigned long long)stateTimingFeedbackCollectionsCount;
- (void)addStateTimingFeedbackCollection:(id)arg1;
- (void)clearStateTimingFeedbackCollections;
- (id)suggestionsFeedbackCollectionAtIndex:(unsigned long long)arg1;
- (unsigned long long)suggestionsFeedbackCollectionsCount;
- (void)addSuggestionsFeedbackCollection:(id)arg1;
- (void)clearSuggestionsFeedbackCollections;
- (id)mapsUsageFeedbackCollectionAtIndex:(unsigned long long)arg1;
- (unsigned long long)mapsUsageFeedbackCollectionsCount;
- (void)addMapsUsageFeedbackCollection:(id)arg1;
- (void)clearMapsUsageFeedbackCollections;
- (id)transitAppLaunchFeedbackCollectionAtIndex:(unsigned long long)arg1;
- (unsigned long long)transitAppLaunchFeedbackCollectionsCount;
- (void)addTransitAppLaunchFeedbackCollection:(id)arg1;
- (void)clearTransitAppLaunchFeedbackCollections;
- (id)directionsFeedbackCollectionAtIndex:(unsigned long long)arg1;
- (unsigned long long)directionsFeedbackCollectionsCount;
- (void)addDirectionsFeedbackCollection:(id)arg1;
- (void)clearDirectionsFeedbackCollections;
- (id)usageCollectionAtIndex:(unsigned long long)arg1;
- (unsigned long long)usageCollectionsCount;
- (void)addUsageCollection:(id)arg1;
- (void)clearUsageCollections;
- (void)dealloc;

@end

@interface GEOUsageCollectionResponse : PBCodable <NSCopying>
{
}

- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;

@end

@interface GEOUsageManager : NSObject <PBRequesterDelegate>
{
    GEORequester *_requester;
    GEOUsageCollectionRequest *_request;
    NSLock *_requestLock;
    NSTimer *_updateTimer;
    CDUnknownBlockType _backgroundTaskStart;
    CDUnknownBlockType _backgroundTaskEnd;
    NSMapTable *_requesterToBackgroundTask;
    NSMutableDictionary *_stateData;
    NSMutableDictionary *_stateTimingData;
}

+ (id)sharedManager;
@property(copy, nonatomic) CDUnknownBlockType backgroundTaskEnd; // @synthesize backgroundTaskEnd=_backgroundTaskEnd;
@property(copy, nonatomic) CDUnknownBlockType backgroundTaskStart; // @synthesize backgroundTaskStart=_backgroundTaskStart;
- (id)_usageURL;
- (void)_updateTimerFired:(id)arg1;
- (void)_scheduleUpdateTimer;
- (void)_cleanupTimer;
- (void)requester:(id)arg1 didFailWithError:(id)arg2;
- (void)requesterDidCancel:(id)arg1;
- (void)requesterDidFinish:(id)arg1;
- (void)_sendUsageToServer;
- (void)_endBackgroundTaskForRequester:(id)arg1;
- (void)_startBackgroundTaskForRequester:(id)arg1;
- (void)_applicationDeactivating;
- (void)clearStateTimingData;
- (void)captureStateTransition:(id)arg1 force:(_Bool)arg2;
- (void)captureLeaveNowFeedbackCollection:(id)arg1;
- (void)captureTrafficRerouteFeedbackCollection:(id)arg1;
- (void)captureStateTimingFeedbackCollection:(id)arg1;
- (void)captureMapsUsageFeedbackCollection:(id)arg1;
- (void)captureTransitAppLaunchFeedbackCollection:(id)arg1;
- (void)captureMapsLaunchURLScheme:(id)arg1 sourceApplication:(id)arg2;
- (void)captureSuggestionsFeedbackCollection:(id)arg1;
- (void)captureDirectionsFeedbackCollection:(id)arg1;
- (void)captureRequestsForPlaceDataCache:(id)arg1 appIdentifier:(id)arg2;
- (void)captureUsageDataForTiles:(id)arg1;
- (void)captureUsageDataForRequest:(id)arg1 service:(int)arg2;
- (_Bool)shouldIgnoreCollectionForCountry;
- (void)_prepareRequest;
- (void)_cleanupRequester;
- (void)dealloc;
- (id)init;
- (void)captureTraits:(id)arg1 flyoverAnimationID:(unsigned long long)arg2 timestamp:(double)arg3 resultIndex:(int)arg4;
- (void)captureTraits:(id)arg1 mapItem:(id)arg2 timestamp:(double)arg3 resultIndex:(int)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GEOUser : PBCodable <NSCopying>
{
    GEOPhoto *_image;
    NSString *_name;
}

@property(retain, nonatomic) GEOPhoto *image; // @synthesize image=_image;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasImage;
@property(readonly, nonatomic) _Bool hasName;
- (void)dealloc;
- (id)initWithPlaceDataUser:(id)arg1;

@end

@interface GEOUserSession : NSObject
{
    double _sessionCreationTime;
    double _usageSessionIDGenerationTime;
    CDStruct_612aec5b _sessionID;
    NSString *_sessionIDString;
    CDStruct_612aec5b _usageCollectionSessionID;
    unsigned int _sequenceNumber;
    NSLock *_lock;
}

+ (id)sharedInstance;
+ (void)setIsGeod;
@property(readonly) double sessionCreationTime;
@property(readonly) CDStruct_612aec5b usageCollectionSessionID;
@property(readonly) NSString *sessionIDString;
@property(readonly) unsigned int sequenceNumber;
@property(readonly) CDStruct_612aec5b sessionID;
- (void)_updateSessionID;
- (void)_renewUsageCollectionSessionID;
- (void)_safe_renewUsageCollectionSessionID;
- (void)_updateWithNewUUIDForSessionID:(CDStruct_612aec5b *)arg1;
- (id)_defaultForKey:(id)arg1;
- (void)_setDefault:(id)arg1 forKey:(id)arg2;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface GEOVCharacteristics : PBCodable <NSCopying>
{
    NSMutableArray *_pointCharacteristics;
}

@property(retain, nonatomic) NSMutableArray *pointCharacteristics; // @synthesize pointCharacteristics=_pointCharacteristics;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)pointCharacteristicAtIndex:(unsigned long long)arg1;
- (unsigned long long)pointCharacteristicsCount;
- (void)addPointCharacteristic:(id)arg1;
- (void)clearPointCharacteristics;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface GEOVConnectivity : PBCodable <NSCopying>
{
    NSMutableArray *_junctions;
}

@property(retain, nonatomic) NSMutableArray *junctions; // @synthesize junctions=_junctions;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)junctionAtIndex:(unsigned long long)arg1;
- (unsigned long long)junctionsCount;
- (void)addJunction:(id)arg1;
- (void)clearJunctions;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface GEOVFeature : PBCodable <NSCopying>
{
    CDStruct_95bda58d _extrusionHeights;
    CDStruct_95bda58d _labelOffsets;
    CDStruct_95bda58d _shieldLabelOffsets;
    CDStruct_95bda58d _shieldLabelTypes;
    unsigned long long _businessID;
    long long _uID;
    unsigned int _centerlineCount;
    unsigned int _centerlineStart;
    GEOVCharacteristics *_characteristics;
    float _endLaneWidth;
    float _endOffset;
    float _endRoadOffset;
    unsigned int _entryPointMask;
    int _formOfWay;
    float _minzoomRank;
    NSData *_oBSOLETECenterlines;
    NSData *_oBSOLETEShieldLabelPositions;
    NSData *_oBSOLETEVertexLabelPositions;
    int _placeType;
    NSData *_pointLabelPosition;
    int _roadClass;
    int _sectionCount;
    int _sectionStart;
    int _speedLimit;
    float _startLaneWidth;
    float _startOffset;
    float _startRoadOffset;
    NSMutableArray *_styleAttributes;
    unsigned int _styleGroup;
    int _travelDirection;
    int _type;
    _Bool _polyIsConvex;
    struct {
        unsigned int businessID:1;
        unsigned int uID:1;
        unsigned int centerlineCount:1;
        unsigned int centerlineStart:1;
        unsigned int endLaneWidth:1;
        unsigned int endOffset:1;
        unsigned int endRoadOffset:1;
        unsigned int entryPointMask:1;
        unsigned int formOfWay:1;
        unsigned int minzoomRank:1;
        unsigned int placeType:1;
        unsigned int roadClass:1;
        unsigned int sectionCount:1;
        unsigned int sectionStart:1;
        unsigned int speedLimit:1;
        unsigned int startLaneWidth:1;
        unsigned int startOffset:1;
        unsigned int startRoadOffset:1;
        unsigned int styleGroup:1;
        unsigned int travelDirection:1;
        unsigned int type:1;
        unsigned int polyIsConvex:1;
    } _has;
}

@property(nonatomic) unsigned int entryPointMask; // @synthesize entryPointMask=_entryPointMask;
@property(nonatomic) float endRoadOffset; // @synthesize endRoadOffset=_endRoadOffset;
@property(nonatomic) float startRoadOffset; // @synthesize startRoadOffset=_startRoadOffset;
@property(nonatomic) float endLaneWidth; // @synthesize endLaneWidth=_endLaneWidth;
@property(nonatomic) float startLaneWidth; // @synthesize startLaneWidth=_startLaneWidth;
@property(nonatomic) int type; // @synthesize type=_type;
@property(retain, nonatomic) NSMutableArray *styleAttributes; // @synthesize styleAttributes=_styleAttributes;
@property(nonatomic) unsigned int centerlineStart; // @synthesize centerlineStart=_centerlineStart;
@property(nonatomic) unsigned int centerlineCount; // @synthesize centerlineCount=_centerlineCount;
@property(retain, nonatomic) NSData *oBSOLETECenterlines; // @synthesize oBSOLETECenterlines=_oBSOLETECenterlines;
@property(nonatomic) float minzoomRank; // @synthesize minzoomRank=_minzoomRank;
@property(nonatomic) float endOffset; // @synthesize endOffset=_endOffset;
@property(nonatomic) float startOffset; // @synthesize startOffset=_startOffset;
@property(retain, nonatomic) GEOVCharacteristics *characteristics; // @synthesize characteristics=_characteristics;
@property(nonatomic) int speedLimit; // @synthesize speedLimit=_speedLimit;
@property(nonatomic) unsigned int styleGroup; // @synthesize styleGroup=_styleGroup;
@property(retain, nonatomic) NSData *oBSOLETEShieldLabelPositions; // @synthesize oBSOLETEShieldLabelPositions=_oBSOLETEShieldLabelPositions;
@property(retain, nonatomic) NSData *oBSOLETEVertexLabelPositions; // @synthesize oBSOLETEVertexLabelPositions=_oBSOLETEVertexLabelPositions;
@property(retain, nonatomic) NSData *pointLabelPosition; // @synthesize pointLabelPosition=_pointLabelPosition;
@property(nonatomic) int sectionCount; // @synthesize sectionCount=_sectionCount;
@property(nonatomic) int sectionStart; // @synthesize sectionStart=_sectionStart;
@property(nonatomic) int travelDirection; // @synthesize travelDirection=_travelDirection;
@property(nonatomic) int formOfWay; // @synthesize formOfWay=_formOfWay;
@property(nonatomic) int roadClass; // @synthesize roadClass=_roadClass;
@property(nonatomic) _Bool polyIsConvex; // @synthesize polyIsConvex=_polyIsConvex;
@property(nonatomic) int placeType; // @synthesize placeType=_placeType;
@property(nonatomic) unsigned long long businessID; // @synthesize businessID=_businessID;
@property(nonatomic) long long uID; // @synthesize uID=_uID;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasEntryPointMask;
@property(nonatomic) _Bool hasEndRoadOffset;
@property(nonatomic) _Bool hasStartRoadOffset;
@property(nonatomic) _Bool hasEndLaneWidth;
@property(nonatomic) _Bool hasStartLaneWidth;
@property(nonatomic) _Bool hasType;
- (id)styleAttributesAtIndex:(unsigned long long)arg1;
- (unsigned long long)styleAttributesCount;
- (void)addStyleAttributes:(id)arg1;
- (void)clearStyleAttributes;
@property(nonatomic) _Bool hasCenterlineStart;
@property(nonatomic) _Bool hasCenterlineCount;
@property(readonly, nonatomic) _Bool hasOBSOLETECenterlines;
@property(nonatomic) _Bool hasMinzoomRank;
@property(nonatomic) _Bool hasEndOffset;
@property(nonatomic) _Bool hasStartOffset;
@property(readonly, nonatomic) _Bool hasCharacteristics;
- (void)setExtrusionHeights:(int *)arg1 count:(unsigned long long)arg2;
- (int)extrusionHeightAtIndex:(unsigned long long)arg1;
- (void)addExtrusionHeight:(int)arg1;
- (void)clearExtrusionHeights;
@property(readonly, nonatomic) int *extrusionHeights;
@property(readonly, nonatomic) unsigned long long extrusionHeightsCount;
@property(nonatomic) _Bool hasSpeedLimit;
@property(nonatomic) _Bool hasStyleGroup;
@property(readonly, nonatomic) _Bool hasOBSOLETEShieldLabelPositions;
@property(readonly, nonatomic) _Bool hasOBSOLETEVertexLabelPositions;
@property(readonly, nonatomic) _Bool hasPointLabelPosition;
@property(nonatomic) _Bool hasSectionCount;
@property(nonatomic) _Bool hasSectionStart;
@property(nonatomic) _Bool hasTravelDirection;
@property(nonatomic) _Bool hasFormOfWay;
@property(nonatomic) _Bool hasRoadClass;
@property(nonatomic) _Bool hasPolyIsConvex;
@property(nonatomic) _Bool hasPlaceType;
@property(nonatomic) _Bool hasBusinessID;
@property(nonatomic) _Bool hasUID;
- (void)setShieldLabelTypes:(int *)arg1 count:(unsigned long long)arg2;
- (int)shieldLabelTypeAtIndex:(unsigned long long)arg1;
- (void)addShieldLabelType:(int)arg1;
- (void)clearShieldLabelTypes;
@property(readonly, nonatomic) int *shieldLabelTypes;
@property(readonly, nonatomic) unsigned long long shieldLabelTypesCount;
- (void)setShieldLabelOffsets:(int *)arg1 count:(unsigned long long)arg2;
- (int)shieldLabelOffsetAtIndex:(unsigned long long)arg1;
- (void)addShieldLabelOffset:(int)arg1;
- (void)clearShieldLabelOffsets;
@property(readonly, nonatomic) int *shieldLabelOffsets;
@property(readonly, nonatomic) unsigned long long shieldLabelOffsetsCount;
- (void)setLabelOffsets:(int *)arg1 count:(unsigned long long)arg2;
- (int)labelOffsetAtIndex:(unsigned long long)arg1;
- (void)addLabelOffset:(int)arg1;
- (void)clearLabelOffsets;
@property(readonly, nonatomic) int *labelOffsets;
@property(readonly, nonatomic) unsigned long long labelOffsetsCount;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface GEOVJunction : PBCodable <NSCopying>
{
    NSMutableArray *_connectingRoads;
    NSMutableArray *_laneConnections;
}

@property(retain, nonatomic) NSMutableArray *laneConnections; // @synthesize laneConnections=_laneConnections;
@property(retain, nonatomic) NSMutableArray *connectingRoads; // @synthesize connectingRoads=_connectingRoads;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)laneConnectionsAtIndex:(unsigned long long)arg1;
- (unsigned long long)laneConnectionsCount;
- (void)addLaneConnections:(id)arg1;
- (void)clearLaneConnections;
- (id)connectingRoadAtIndex:(unsigned long long)arg1;
- (unsigned long long)connectingRoadsCount;
- (void)addConnectingRoad:(id)arg1;
- (void)clearConnectingRoads;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface GEOVLabelLanguage : PBCodable <NSCopying>
{
    unsigned int _endOffset;
    NSString *_languageLocale;
    unsigned int _startOffset;
}

@property(retain, nonatomic) NSString *languageLocale; // @synthesize languageLocale=_languageLocale;
@property(nonatomic) unsigned int endOffset; // @synthesize endOffset=_endOffset;
@property(nonatomic) unsigned int startOffset; // @synthesize startOffset=_startOffset;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface GEOVLaneCharacteristic : PBCodable <NSCopying>
{
    NSMutableArray *_laneDirections;
    NSMutableArray *_laneDividers;
    NSMutableArray *_laneTypes;
    unsigned int _roadLaneCount;
    struct {
        unsigned int roadLaneCount:1;
    } _has;
}

@property(retain, nonatomic) NSMutableArray *laneTypes; // @synthesize laneTypes=_laneTypes;
@property(retain, nonatomic) NSMutableArray *laneDirections; // @synthesize laneDirections=_laneDirections;
@property(retain, nonatomic) NSMutableArray *laneDividers; // @synthesize laneDividers=_laneDividers;
@property(nonatomic) unsigned int roadLaneCount; // @synthesize roadLaneCount=_roadLaneCount;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)laneTypeAtIndex:(unsigned long long)arg1;
- (unsigned long long)laneTypesCount;
- (void)addLaneType:(id)arg1;
- (void)clearLaneTypes;
- (id)laneDirectionAtIndex:(unsigned long long)arg1;
- (unsigned long long)laneDirectionsCount;
- (void)addLaneDirection:(id)arg1;
- (void)clearLaneDirections;
- (id)laneDividerAtIndex:(unsigned long long)arg1;
- (unsigned long long)laneDividersCount;
- (void)addLaneDivider:(id)arg1;
- (void)clearLaneDividers;
@property(nonatomic) _Bool hasRoadLaneCount;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface GEOVLaneConnection : PBCodable <NSCopying>
{
    unsigned int _firstLaneIndex;
    unsigned int _firstRoadIndex;
    unsigned int _secondLaneIndex;
    unsigned int _secondRoadIndex;
}

@property(nonatomic) unsigned int secondLaneIndex; // @synthesize secondLaneIndex=_secondLaneIndex;
@property(nonatomic) unsigned int secondRoadIndex; // @synthesize secondRoadIndex=_secondRoadIndex;
@property(nonatomic) unsigned int firstLaneIndex; // @synthesize firstLaneIndex=_firstLaneIndex;
@property(nonatomic) unsigned int firstRoadIndex; // @synthesize firstRoadIndex=_firstRoadIndex;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;

@end

__attribute__((visibility("hidden")))
@interface GEOVLaneInformation : PBCodable <NSCopying>
{
    unsigned int _style;
    unsigned int _validityMask;
}

@property(nonatomic) unsigned int validityMask; // @synthesize validityMask=_validityMask;
@property(nonatomic) unsigned int style; // @synthesize style=_style;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;

@end

__attribute__((visibility("hidden")))
@interface GEOVPointCharacteristic : PBCodable <NSCopying>
{
    GEOVLaneCharacteristic *_laneCharacteristic;
    int _roadLaneCount;
    int _roadOffset;
    int _sectionIndex;
    int _vertexIndex;
    int _zLevel;
    _Bool _brunnelEntry;
    _Bool _castShadow;
    _Bool _cropped;
    _Bool _shouldDrawLanes;
    struct {
        unsigned int roadLaneCount:1;
        unsigned int roadOffset:1;
        unsigned int sectionIndex:1;
        unsigned int vertexIndex:1;
        unsigned int zLevel:1;
        unsigned int brunnelEntry:1;
        unsigned int castShadow:1;
        unsigned int cropped:1;
        unsigned int shouldDrawLanes:1;
    } _has;
}

@property(nonatomic) _Bool brunnelEntry; // @synthesize brunnelEntry=_brunnelEntry;
@property(nonatomic) _Bool castShadow; // @synthesize castShadow=_castShadow;
@property(nonatomic) _Bool shouldDrawLanes; // @synthesize shouldDrawLanes=_shouldDrawLanes;
@property(retain, nonatomic) GEOVLaneCharacteristic *laneCharacteristic; // @synthesize laneCharacteristic=_laneCharacteristic;
@property(nonatomic) _Bool cropped; // @synthesize cropped=_cropped;
@property(nonatomic) int zLevel; // @synthesize zLevel=_zLevel;
@property(nonatomic) int roadOffset; // @synthesize roadOffset=_roadOffset;
@property(nonatomic) int roadLaneCount; // @synthesize roadLaneCount=_roadLaneCount;
@property(nonatomic) int vertexIndex; // @synthesize vertexIndex=_vertexIndex;
@property(nonatomic) int sectionIndex; // @synthesize sectionIndex=_sectionIndex;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasBrunnelEntry;
@property(nonatomic) _Bool hasCastShadow;
@property(nonatomic) _Bool hasShouldDrawLanes;
@property(readonly, nonatomic) _Bool hasLaneCharacteristic;
@property(nonatomic) _Bool hasCropped;
@property(nonatomic) _Bool hasZLevel;
@property(nonatomic) _Bool hasRoadOffset;
@property(nonatomic) _Bool hasRoadLaneCount;
@property(nonatomic) _Bool hasVertexIndex;
@property(nonatomic) _Bool hasSectionIndex;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface GEOVPointOnRoad : PBCodable <NSCopying>
{
    int _featureIndex;
    int _vertexIndex;
    struct {
        unsigned int vertexIndex:1;
    } _has;
}

@property(nonatomic) int vertexIndex; // @synthesize vertexIndex=_vertexIndex;
@property(nonatomic) int featureIndex; // @synthesize featureIndex=_featureIndex;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasVertexIndex;

@end

__attribute__((visibility("hidden")))
@interface GEOVStyleAttribute : PBCodable <NSCopying>
{
    int _intValue;
    unsigned int _key;
    struct {
        unsigned int intValue:1;
    } _has;
}

@property(nonatomic) int intValue; // @synthesize intValue=_intValue;
@property(nonatomic) unsigned int key; // @synthesize key=_key;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasIntValue;

@end

__attribute__((visibility("hidden")))
@interface GEOVTile : PBCodable <NSCopying>
{
    NSMutableArray *_coastlines;
    GEOVConnectivity *_connectivity;
    NSMutableArray *_labelLanguages;
    NSData *_labels;
    NSMutableArray *_lines;
    int _minZ;
    NSMutableArray *_points;
    NSMutableArray *_polygons;
    unsigned int _sectionDeltaLengthBits;
    unsigned int _vertexBits;
    NSData *_vertices;
    int _zBits;
    struct {
        unsigned int minZ:1;
        unsigned int sectionDeltaLengthBits:1;
        unsigned int vertexBits:1;
        unsigned int zBits:1;
    } _has;
}

@property(retain, nonatomic) NSMutableArray *labelLanguages; // @synthesize labelLanguages=_labelLanguages;
@property(retain, nonatomic) NSMutableArray *coastlines; // @synthesize coastlines=_coastlines;
@property(nonatomic) int zBits; // @synthesize zBits=_zBits;
@property(nonatomic) int minZ; // @synthesize minZ=_minZ;
@property(retain, nonatomic) GEOVConnectivity *connectivity; // @synthesize connectivity=_connectivity;
@property(retain, nonatomic) NSData *vertices; // @synthesize vertices=_vertices;
@property(retain, nonatomic) NSData *labels; // @synthesize labels=_labels;
@property(retain, nonatomic) NSMutableArray *points; // @synthesize points=_points;
@property(retain, nonatomic) NSMutableArray *polygons; // @synthesize polygons=_polygons;
@property(retain, nonatomic) NSMutableArray *lines; // @synthesize lines=_lines;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasSectionDeltaLengthBits;
@property(nonatomic) unsigned int sectionDeltaLengthBits; // @synthesize sectionDeltaLengthBits=_sectionDeltaLengthBits;
@property(nonatomic) _Bool hasVertexBits;
@property(nonatomic) unsigned int vertexBits; // @synthesize vertexBits=_vertexBits;
- (id)labelLanguageAtIndex:(unsigned long long)arg1;
- (unsigned long long)labelLanguagesCount;
- (void)addLabelLanguage:(id)arg1;
- (void)clearLabelLanguages;
- (id)coastlinesAtIndex:(unsigned long long)arg1;
- (unsigned long long)coastlinesCount;
- (void)addCoastlines:(id)arg1;
- (void)clearCoastlines;
@property(nonatomic) _Bool hasZBits;
@property(nonatomic) _Bool hasMinZ;
@property(readonly, nonatomic) _Bool hasConnectivity;
@property(readonly, nonatomic) _Bool hasVertices;
@property(readonly, nonatomic) _Bool hasLabels;
- (id)pointAtIndex:(unsigned long long)arg1;
- (unsigned long long)pointsCount;
- (void)addPoint:(id)arg1;
- (void)clearPoints;
- (id)polygonAtIndex:(unsigned long long)arg1;
- (unsigned long long)polygonsCount;
- (void)addPolygon:(id)arg1;
- (void)clearPolygons;
- (id)lineAtIndex:(unsigned long long)arg1;
- (unsigned long long)linesCount;
- (void)addLine:(id)arg1;
- (void)clearLines;
- (void)dealloc;

@end

@interface GEOVectorTile : NSObject
{
    struct _GEOTileKey _key;
    GEOFeatureStyleAttributes *_attributes;
    CDStruct_6cf27ba1 *_lines;
    unsigned long long _linesCount;
    unsigned long long _linesVertexCount;
    CDStruct_6cf27ba1 *_coastlines;
    unsigned long long _coastlinesCount;
    CDStruct_5535450d *_polygons;
    unsigned long long _polygonsCount;
    unsigned long long _polygonsVertexCount;
    CDStruct_b2fbf00d *_polygonLabelPositions;
    unsigned long long _polygonLabelPositionsCount;
    CDStruct_910e0270 *_buildingFootprints;
    NSMutableData *_extrusionHeightsPool;
    NSMutableData *_baseHeightsPool;
    unsigned long long _buildingFootprintsCount;
    CDStruct_910e0270 *_hiResBuildingFootprints;
    unsigned long long _hiResBuildingFootprintsCount;
    CDStruct_2da3f85a *_threeDBuildings;
    unsigned long long _threeDBuildingsCount;
    struct {
        _Bool _field1;
        unsigned long long _field2;
        id *_field3;
    } *_extendedPointAttributes;
    unsigned long long _extendedPointAttributesCount;
    CDStruct_3cbe5a8b *_pois;
    unsigned long long _poisCount;
    CDStruct_f6a177db *_overpasses;
    CDStruct_dde70fb6 *_junctions;
    unsigned long long _junctionsCount;
    _Bool _hasComputedJunctions;
    CDStruct_7523a67d *_laneConnections;
    unsigned long long _laneConnectionsCount;
    CDStruct_7523a67d *_pointsOnRoad;
    unsigned long long _pointsOnRoadCount;
    CDStruct_183601bc **_sortedPointsOnRoad;
    struct {
        float _field1;
        float _field2;
        float _field3;
        float _field4;
        float _field5;
        float _field6;
    } *_laneGeometry;
    CDStruct_3cfc3106 *_curveLineVertices;
    unsigned int *_curveToLineMapping;
    CDStruct_3cfc3106 *_lineVertices;
    CDStruct_3cfc3106 *_polygonVertices;
    CDStruct_3cfc3106 *_coastlineVertices;
    CDStruct_3cfc3106 *_footprintVertices;
    CDStruct_3cfc3106 *_hiResFootprintVertices;
    NSData *_labelPool;
    struct {
        unsigned long long _field1;
        unsigned long long _field2;
        char *_field3;
    } *_labelPoolLanguages;
    unsigned long long _labelPoolLanguagesLength;
    NSMutableData *_localizedLabelPool;
    char *_localizedLabelsLanguage;
    CDStruct_29923528 *_labelIndex;
    unsigned long long _labelIndexCount;
    struct GEOFeatureShield *_shieldIndex;
    unsigned long long _shieldIndexCount;
    struct {
        unsigned long long _field1;
        unsigned long long _field2;
        unsigned char _field3;
    } *_localizationTable;
    unsigned long long _localizationTableCount;
    NSMutableOrderedSet *_uniqueAttributes;
    NSMutableArray *_uniqueFeatureAttributes;
    CDStruct_db2bd8f2 *_lineCharacteristicPoints;
    unsigned long long _lineCharacteristicPointCount;
    CDStruct_db2bd8f2 *_polygonCharacteristicPoints;
    unsigned long long _polygonCharacteristicPointCount;
    CDStruct_db2bd8f2 *_coastlineCharacteristicPoints;
    unsigned long long _coastlineCharacteristicPointCount;
    unsigned long long _tileReferenceCount;
    struct _GEOTileKey *_tileReferences;
}

@property(readonly, nonatomic) struct _GEOTileKey *tileReferences; // @synthesize tileReferences=_tileReferences;
@property(readonly, nonatomic) unsigned long long tileReferenceCount; // @synthesize tileReferenceCount=_tileReferenceCount;
@property(readonly, nonatomic) struct _GEOTileKey tileKey; // @synthesize tileKey=_key;
@property(readonly, nonatomic) unsigned long long coastlineCharacteristicPointCount; // @synthesize coastlineCharacteristicPointCount=_coastlineCharacteristicPointCount;
@property(readonly, nonatomic) CDStruct_db2bd8f2 *coastlineCharacteristicPoints; // @synthesize coastlineCharacteristicPoints=_coastlineCharacteristicPoints;
@property(readonly, nonatomic) unsigned long long polygonCharacteristicPointCount; // @synthesize polygonCharacteristicPointCount=_polygonCharacteristicPointCount;
@property(readonly, nonatomic) CDStruct_db2bd8f2 *polygonCharacteristicPoints; // @synthesize polygonCharacteristicPoints=_polygonCharacteristicPoints;
@property(readonly, nonatomic) unsigned long long lineCharacteristicPointCount; // @synthesize lineCharacteristicPointCount=_lineCharacteristicPointCount;
@property(readonly, nonatomic) CDStruct_db2bd8f2 *lineCharacteristicPoints; // @synthesize lineCharacteristicPoints=_lineCharacteristicPoints;
@property(readonly, nonatomic) unsigned long long laneConnectionsCount; // @synthesize laneConnectionsCount=_laneConnectionsCount;
@property(readonly, nonatomic) CDStruct_7523a67d *laneConnections; // @synthesize laneConnections=_laneConnections;
@property(readonly, nonatomic) unsigned long long pointsOnRoadCount; // @synthesize pointsOnRoadCount=_pointsOnRoadCount;
@property(readonly, nonatomic) _Bool hasComputedJunctions; // @synthesize hasComputedJunctions=_hasComputedJunctions;
@property(readonly, nonatomic) unsigned long long junctionsCount; // @synthesize junctionsCount=_junctionsCount;
@property(readonly, nonatomic) CDStruct_dde70fb6 *junctions; // @synthesize junctions=_junctions;
@property(readonly, nonatomic) CDStruct_f6a177db *overpasses; // @synthesize overpasses=_overpasses;
@property(readonly, nonatomic) unsigned long long poisCount; // @synthesize poisCount=_poisCount;
@property(readonly, nonatomic) CDStruct_3cbe5a8b *pois; // @synthesize pois=_pois;
@property(readonly, nonatomic) unsigned long long threeDBuildingsCount; // @synthesize threeDBuildingsCount=_threeDBuildingsCount;
@property(readonly, nonatomic) CDStruct_2da3f85a *threeDBuildings; // @synthesize threeDBuildings=_threeDBuildings;
@property(readonly, nonatomic) unsigned long long hiResBuildingFootprintsCount; // @synthesize hiResBuildingFootprintsCount=_hiResBuildingFootprintsCount;
@property(readonly, nonatomic) CDStruct_910e0270 *hiResBuildingFootprints; // @synthesize hiResBuildingFootprints=_hiResBuildingFootprints;
@property(readonly, nonatomic) unsigned long long buildingFootprintsCount; // @synthesize buildingFootprintsCount=_buildingFootprintsCount;
@property(readonly, nonatomic) CDStruct_910e0270 *buildingFootprints; // @synthesize buildingFootprints=_buildingFootprints;
@property(readonly, nonatomic) unsigned long long polygonsCount; // @synthesize polygonsCount=_polygonsCount;
@property(readonly, nonatomic) CDStruct_5535450d *polygons; // @synthesize polygons=_polygons;
@property(readonly, nonatomic) unsigned long long coastlinesCount; // @synthesize coastlinesCount=_coastlinesCount;
@property(readonly, nonatomic) CDStruct_6cf27ba1 *coastlines; // @synthesize coastlines=_coastlines;
@property(readonly, nonatomic) unsigned long long linesCount; // @synthesize linesCount=_linesCount;
@property(readonly, nonatomic) CDStruct_6cf27ba1 *lines; // @synthesize lines=_lines;
- (CDStruct_6cf27ba1 *)multiSectionFeatureForGeoID:(unsigned long long)arg1;
@property(readonly, nonatomic) _Bool dataIncludesConnectivity;
@property(readonly, nonatomic) unsigned long long polygonsVertexCount; // @synthesize polygonsVertexCount=_polygonsVertexCount;
@property(readonly, nonatomic) unsigned long long linesVertexCount; // @synthesize linesVertexCount=_linesVertexCount;
- (void)forEachJunctionInRoad:(CDStruct_6cf27ba1 *)arg1 visitor:(CDUnknownBlockType)arg2;
- (void)forEachEdgeInRoad:(CDStruct_6cf27ba1 *)arg1 visitTwice:(_Bool)arg2 visitor:(CDUnknownBlockType)arg3;
- (void)forEachJunction:(CDUnknownBlockType)arg1;
- (void)forEachEdgeOnJunction:(const CDStruct_dde70fb6 *)arg1 visitor:(CDUnknownBlockType)arg2;
- (void)forEachPolygon:(CDUnknownBlockType)arg1;
- (void)forEachPoint:(CDUnknownBlockType)arg1;
- (void)forEachRoad:(CDUnknownBlockType)arg1;
- (CDStruct_b2fbf00d *)polygonLabelPositions;
- (id)baseHeightsPool;
- (id)extrusionHeightsPool;
- (CDStruct_183601bc **)sortedPointsOnRoad;
@property(readonly, nonatomic) CDStruct_7523a67d *pointsOnRoad; // @synthesize pointsOnRoad=_pointsOnRoad;
@property(readonly, nonatomic) CDStruct_3cfc3106 *curveLineVertices;
@property(readonly, nonatomic) CDStruct_3cfc3106 *lineVertices;
- (id)description;
- (void)dealloc;
- (id)initWithTileData:(id)arg1 localizationData:(id)arg2 tileKey:(const struct _GEOTileKey *)arg3;
- (void)_trimWhitespace;
- (void)_findOverpasses;
- (void)_findJunctions;
- (void)_attachRoadPoints;
- (id)_initWithVMP4:(id)arg1 localizationData:(id)arg2 tileKey:(const struct _GEOTileKey *)arg3;
- (_Bool)_handleGenericTile:(CDStruct_effb527d *)arg1;
- (_Bool)_addGenericPolygonWithAttributes:(int *)arg1;
- (_Bool)_readExtendedPointAttributes:(CDStruct_effb527d *)arg1;
- (_Bool)_readTileReferences:(CDStruct_effb527d *)arg1 key:(const struct _GEOTileKey *)arg2;
- (_Bool)_readModernBuildings:(CDStruct_effb527d *)arg1 chapter:(unsigned short)arg2 vertexPool:(CDStruct_183601bc **)arg3 footprints:(CDStruct_183601bc **)arg4 count:(unsigned long long *)arg5;
- (_Bool)_readLowResBuildings:(CDStruct_effb527d *)arg1;
- (_Bool)_readHighResBuildings:(CDStruct_effb527d *)arg1;
- (id)addAttributes:(id)arg1 toUniqueAttributeSet:(id)arg2;
- (_Bool)_read3DBuildings:(CDStruct_effb527d *)arg1;
- (_Bool)_readCoastlines:(CDStruct_effb527d *)arg1;
- (_Bool)_readWrappingCoastlines:(CDStruct_f3ac0f61 *)arg1 tile:(CDStruct_effb527d *)arg2;
- (_Bool)_readSimpleCoastlines:(CDStruct_f3ac0f61 *)arg1 tile:(CDStruct_effb527d *)arg2;
- (_Bool)_readPois:(CDStruct_effb527d *)arg1;
- (_Bool)_readPolygons:(CDStruct_effb527d *)arg1;
- (_Bool)_readPolygons:(CDStruct_effb527d *)arg1 ofType:(unsigned short)arg2;
- (_Bool)_readLines:(CDStruct_effb527d *)arg1;
- (unsigned long long)_makeSpaceForShields:(unsigned long long)arg1;
- (unsigned long long)_makeSpaceForLabels:(unsigned long long)arg1;
- (_Bool)_readLabels:(CDStruct_effb527d *)arg1;
- (_Bool)_readInfoChapter:(CDStruct_effb527d *)arg1 key:(const struct _GEOTileKey *)arg2;

@end

@interface GEOVectorTileDecoder : NSObject <GEOTileDecoder>
{
}

- (id)decodeTile:(id)arg1 forKey:(const struct _GEOTileKey *)arg2;
- (_Bool)canDecodeTile:(const struct _GEOTileKey *)arg1 quickly:(_Bool *)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GEOVersionManifest : PBCodable <NSCopying>
{
    NSMutableArray *_serviceVersions;
}

@property(retain, nonatomic) NSMutableArray *serviceVersions; // @synthesize serviceVersions=_serviceVersions;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)serviceVersionAtIndex:(unsigned long long)arg1;
- (unsigned long long)serviceVersionsCount;
- (void)addServiceVersion:(id)arg1;
- (void)clearServiceVersions;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface GEOVoltaireMultiTileDownloader : NSObject <NSURLConnectionDelegate>
{
    GEOTileKeyList *_keyList;
    GEOTileKeyList *_requiresLocalization;
    GEOTileKeyList *_receivedKeys;
    NSURL *_requestURL;
    _Bool _useStatusCodes;
    NSMutableSet *_errorCodes;
    NSURLConnection *_connection;
    GEONetworkDataReader *_reader;
    NSString *_sharedPrefix;
    NSString *_userAgent;
    NSData *_auditToken;
    id <GEOVoltaireMultiTileDownloaderDelegate> _delegate;
    unsigned short _providerID;
    GEOTileKeyMap *_baseTilesWaitingForLocalized;
    GEOTileKeyMap *_localizedTilesWaitingForBase;
    NSString *_postString;
    _Bool _requireWiFi;
    int _attempts;
    double _startTime;
    double _timeout;
    GEOResourceManifestConfiguration *_manifestConfiguration;
    NSLocale *_locale;
}

@property(nonatomic) _Bool requireWiFi; // @synthesize requireWiFi=_requireWiFi;
@property(nonatomic) _Bool useStatusCodes; // @synthesize useStatusCodes=_useStatusCodes;
@property(readonly, nonatomic) NSURL *requestURL; // @synthesize requestURL=_requestURL;
@property(retain, nonatomic) NSData *auditToken; // @synthesize auditToken=_auditToken;
@property(retain, nonatomic) NSString *userAgent; // @synthesize userAgent=_userAgent;
@property(nonatomic) id <GEOVoltaireMultiTileDownloaderDelegate> delegate; // @synthesize delegate=_delegate;
- (void)logDownloadDetails;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (void)_tryParseTiles;
- (id)_mergeBaseTile:(id)arg1 withLocalizationTile:(id)arg2;
- (struct _GEOTileKey)_tileKeyForURL:(id)arg1 edition:(unsigned int *)arg2 isLocalized:(_Bool *)arg3;
- (id)_urlForTileKey:(struct _GEOTileKey *)arg1;
- (id)_localizationURLIfNecessaryForTileKey:(struct _GEOTileKey *)arg1;
- (id)_localizationURLForTileKey:(struct _GEOTileKey *)arg1;
- (void)_cancelWithError:(id)arg1;
- (void)_failWithError:(id)arg1;
- (void)_cleanupConnection;
- (double)elapsed;
- (void)cancel;
- (void)start;
- (void)dealloc;
- (id)initWithURL:(id)arg1 keyList:(id)arg2 manifestConfiguration:(id)arg3 locale:(id)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GEOVoltaire3DMultiTileDownloader : GEOVoltaireMultiTileDownloader
{
}

- (struct _GEOTileKey)_tileKeyForURL:(id)arg1 edition:(unsigned int *)arg2 isLocalized:(_Bool *)arg3;
- (id)_localizationURLIfNecessaryForTileKey:(struct _GEOTileKey *)arg1;
- (id)_urlForTileKey:(struct _GEOTileKey *)arg1;
- (id)_baseURLStringForTileKey:(struct _GEOTileKey *)arg1;

@end

@interface GEOVoltaireTileRequester : GEOTileRequester <GEOVoltaireMultiTileDownloaderDelegate, GEOTileRequesterDelegate, GEOResourceManifestTileGroupObserver>
{
    NSMutableArray *_activeDownloads;
    NSThread *_startThread;
    NSTimer *_activeTileGroupTimeoutTimer;
    NSMutableArray *_errors;
    GEOVoltaireSimpleTileRequester *_simpleRequester;
}

+ (Class)multiDownloaderClass;
+ (Class)simpleRequesterClass;
+ (_Bool)skipNetworkForKeysWhenPreloading:(id)arg1;
+ (CDStruct_e4886f83 *)newExpiringTilesets;
+ (unsigned long long)expiringTilesetsCount;
+ (unsigned char)tileProviderIdentifier;
- (void)tileRequesterFinished:(id)arg1;
- (void)tileRequester:(id)arg1 receivedError:(id)arg2;
- (void)tileRequester:(id)arg1 receivedData:(id)arg2 tileEdition:(unsigned int)arg3 tileSet:(unsigned int)arg4 etag:(id)arg5 forKey:(struct _GEOTileKey)arg6 userInfo:(id)arg7;
- (void)tileDownload:(id)arg1 didFailWithError:(id)arg2;
- (void)tileDownloadFinished:(id)arg1;
- (void)tileDownload:(id)arg1 didReceiveData:(id)arg2 edition:(unsigned int)arg3 forKey:(struct _GEOTileKey)arg4;
- (void)tryFinish;
- (void)cancel;
- (void)cleanup;
- (void)_startWithTileKeys:(id)arg1;
- (id)multiTileURLStringForTileKey:(struct _GEOTileKey *)arg1 useStatusCodes:(_Bool *)arg2;
- (void)resourceManifestManagerDidChangeActiveTileGroup:(id)arg1;
- (void)resourceManifestManagerWillChangeActiveTileGroup:(id)arg1;
- (void)_failedToReceiveActiveTileGroup:(id)arg1;
- (void)start;
- (unsigned int)tileSetForKey:(const struct _GEOTileKey *)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GEOVoltaire3DTileRequester : GEOVoltaireTileRequester
{
}

+ (Class)multiDownloaderClass;
+ (Class)simpleRequesterClass;
+ (id)queryStringFromKey:(const struct _GEOTileKey *)arg1 manifestConfiguration:(id)arg2;
+ (struct _GEOTileKey)patchTileKey:(struct _GEOTileKey *)arg1;
+ (unsigned char)tileProviderIdentifier;
- (id)multiTileURLStringForTileKey:(struct _GEOTileKey *)arg1 useStatusCodes:(_Bool *)arg2;
- (unsigned int)tileSetForKey:(const struct _GEOTileKey *)arg1;

@end

@interface GEOVoltaireAddressCorrectionProvider : NSObject <PBRequesterDelegate>
{
    GEORequester *_requester;
    CDUnknownBlockType _errorHandler;
    CDUnknownBlockType _initFinishedHandler;
    CDUnknownBlockType _updateFinishedHandler;
}

+ (id)acUpdateURL;
+ (id)acInitUrl;
@property(retain, nonatomic) GEORequester *requester; // @synthesize requester=_requester;
- (void)requesterDidFinish:(id)arg1;
- (void)requesterDidCancel:(id)arg1;
- (void)requester:(id)arg1 didFailWithError:(id)arg2;
- (void)cancelRequest;
- (void)startUpdateRequest:(id)arg1 finished:(CDUnknownBlockType)arg2 error:(CDUnknownBlockType)arg3;
- (void)startInitRequest:(id)arg1 finished:(CDUnknownBlockType)arg2 error:(CDUnknownBlockType)arg3;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GEOVoltaireDirectionsProvider : GEODirectionsProvider <PBRequesterDelegate>
{
    GEORequester *_requester;
    _Bool _cancelled;
}

@property(retain, nonatomic) GEORequester *requester; // @synthesize requester=_requester;
- (void)requesterDidCancel:(id)arg1;
- (void)requester:(id)arg1 didFailWithError:(id)arg2;
- (void)requesterDidFinish:(id)arg1;
- (void)cleanupRequester;
- (void)cancelProviderRequest;
- (void)startProviderWithRequest:(id)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GEOVoltaireETAProvider : GEOETAProvider <PBRequesterDelegate>
{
    GEORequester *_requester;
    CDUnknownBlockType _errorHandler;
    CDUnknownBlockType _finishedHandler;
    CDUnknownBlockType _willSendRequestHandler;
    CDUnknownBlockType _simpleETARequestFinishedHandler;
    _Bool _cancelled;
}

- (void)requesterWillSendRequestForEstablishedConnection:(id)arg1;
- (void)requesterDidFinish:(id)arg1;
- (void)requesterDidCancel:(id)arg1;
- (void)requester:(id)arg1 didFailWithError:(id)arg2;
- (void)cancelRequest;
- (void)startSimpleETARequest:(id)arg1 finished:(CDUnknownBlockType)arg2 error:(CDUnknownBlockType)arg3;
- (void)startRequest:(id)arg1 connectionProperties:(const CDStruct_96e0509c *)arg2 willSendRequest:(CDUnknownBlockType)arg3 finished:(CDUnknownBlockType)arg4 error:(CDUnknownBlockType)arg5;
- (void)updateRequest:(id)arg1 finished:(CDUnknownBlockType)arg2 error:(CDUnknownBlockType)arg3;
- (void)startRequest:(id)arg1 finished:(CDUnknownBlockType)arg2 error:(CDUnknownBlockType)arg3;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GEOVoltaireGeocodeProvider : GEOGeocodeProvider <PBRequesterDelegate>
{
    GEORequester *_requester;
    _Bool _isForwardGeocodeRequest;
    _Bool _isBatchRequest;
    _Bool _cancelled;
}

+ (id)batchReverseGeocoderURL;
+ (id)reverseGeocoderURL;
+ (id)forwardGeocoderURL;
+ (id)providerName;
- (void)cancel;
- (void)requesterDidCancel:(id)arg1;
- (void)requester:(id)arg1 didFailWithError:(id)arg2;
- (void)requesterDidFinish:(id)arg1;
- (void)_batchRequesterDidFinish:(id)arg1;
- (void)_singleRequesterDidFinish:(id)arg1;
- (void)batchReverseGeocode:(id)arg1 success:(CDUnknownBlockType)arg2 error:(CDUnknownBlockType)arg3;
- (void)reverseGeocode:(id)arg1 success:(CDUnknownBlockType)arg2 error:(CDUnknownBlockType)arg3;
- (void)forwardGeocode:(id)arg1 success:(CDUnknownBlockType)arg2 networkActivity:(CDUnknownBlockType)arg3 error:(CDUnknownBlockType)arg4;
- (id)newRequester:(id)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GEOVoltaireLocationShiftProvider : GEOLocationShiftProvider <PBRequesterDelegate>
{
    GEORequester *_requester;
    CDUnknownBlockType _errorHandler;
    CDUnknownBlockType _finishedHandler;
}

+ (unsigned short)providerID;
- (void)requesterDidFinish:(id)arg1;
- (void)requesterDidCancel:(id)arg1;
- (void)requester:(id)arg1 didFailWithError:(id)arg2;
- (void)cancelRequest;
- (void)startRequest:(id)arg1 finished:(CDUnknownBlockType)arg2 error:(CDUnknownBlockType)arg3;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GEOVoltaireMapMatchProvider : NSObject <PBRequesterDelegate>
{
    GEORequester *_requester;
    CDUnknownBlockType _errorHandler;
    CDUnknownBlockType _finishedHandler;
    _Bool _cancelled;
}

+ (id)providerURL;
@property(retain, nonatomic) GEORequester *requester; // @synthesize requester=_requester;
- (void)requesterDidFinish:(id)arg1;
- (void)requesterDidCancel:(id)arg1;
- (void)requester:(id)arg1 didFailWithError:(id)arg2;
- (void)cancelRequest;
- (void)startRequest:(id)arg1 finished:(CDUnknownBlockType)arg2 error:(CDUnknownBlockType)arg3;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GEOVoltairePolyLocationShiftProvider : GEOLocationShiftProvider <PBRequesterDelegate>
{
    GEORequester *_requester;
    CDUnknownBlockType _errorHandler;
    CDUnknownBlockType _finishedHandler;
}

+ (unsigned short)providerID;
- (void)requesterDidFinish:(id)arg1;
- (void)requesterDidCancel:(id)arg1;
- (void)requester:(id)arg1 didFailWithError:(id)arg2;
- (void)cancelRequest;
- (void)startRequest:(id)arg1 finished:(CDUnknownBlockType)arg2 error:(CDUnknownBlockType)arg3;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GEOVoltaireRasterTileTrafficData : NSObject
{
    CDStruct_912cb5d2 *_vertices;
    NSMutableArray *_trafficSegments;
    NSArray *_trafficIncidents;
    double _expirationTime;
}

+ (double)expirationTimeInterval;
+ (id)createWithData:(id)arg1 tileKey:(const struct _GEOTileKey *)arg2;
@property(readonly, nonatomic) NSArray *trafficIncidents; // @synthesize trafficIncidents=_trafficIncidents;
@property(nonatomic) double expirationTime; // @synthesize expirationTime=_expirationTime;
@property(retain, nonatomic) NSMutableArray *trafficSegments; // @synthesize trafficSegments=_trafficSegments;
@property(nonatomic) CDStruct_912cb5d2 *vertices; // @synthesize vertices=_vertices;
- (void)dealloc;
- (id)initWithData:(id)arg1 tileKey:(const struct _GEOTileKey *)arg2;

@end

@interface GEOVoltaireRasterTileTrafficSegment : NSObject
{
    CDStruct_912cb5d2 *_vertices;
    long long _vertexCount;
    _Bool _hasSpeed;
    int _speed;
    _Bool _hasWidth;
    int _width;
}

@property(nonatomic) int width; // @synthesize width=_width;
@property(nonatomic) int speed; // @synthesize speed=_speed;
@property(nonatomic) _Bool hasWidth; // @synthesize hasWidth=_hasWidth;
@property(nonatomic) _Bool hasSpeed; // @synthesize hasSpeed=_hasSpeed;
@property(readonly, nonatomic) long long vertexCount; // @synthesize vertexCount=_vertexCount;
@property(readonly, nonatomic) CDStruct_912cb5d2 *vertices; // @synthesize vertices=_vertices;
- (void)setVertices:(CDStruct_912cb5d2 *)arg1 count:(long long)arg2;

@end

__attribute__((visibility("hidden")))
@interface GEOVoltaireSearchProvider : GEOSearchProvider <PBRequesterDelegate>
{
    GEORequester *_requester;
    CDUnknownBlockType _finished;
    CDUnknownBlockType _refinement;
    _Bool _cancelled;
}

+ (id)_searchURLForRequest:(id)arg1;
- (void)requester:(id)arg1 didFailWithError:(id)arg2;
- (void)requesterDidCancel:(id)arg1;
- (void)requesterDidFinish:(id)arg1;
- (void)cancel;
- (void)search:(id)arg1 timeout:(long long)arg2 useBackgroundConnection:(_Bool)arg3 finished:(CDUnknownBlockType)arg4 refinement:(CDUnknownBlockType)arg5 error:(CDUnknownBlockType)arg6 isCompletions:(_Bool)arg7;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GEOVoltaireSimple3DTileRequester : GEOSimpleTileRequester
{
}

+ (unsigned char)tileProviderIdentifier;
- (id)urlForTileKey:(struct _GEOTileKey *)arg1;
- (unsigned int)tileEditionForKey:(struct _GEOTileKey *)arg1;
- (unsigned int)tileSetForKey:(const struct _GEOTileKey *)arg1;
- (id)_baseURLStringForTileKey:(struct _GEOTileKey *)arg1;

@end

@interface GEOWalkingOptions : PBCodable <NSCopying>
{
}

- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;

@end

@interface GEOWaypoint : PBCodable <NSCopying>
{
    NSMutableArray *_entryPoints;
    GEOLocation *_location;
    GEOPlaceSearchRequest *_placeSearchRequest;
}

@property(retain, nonatomic) NSMutableArray *entryPoints; // @synthesize entryPoints=_entryPoints;
@property(retain, nonatomic) GEOLocation *location; // @synthesize location=_location;
@property(retain, nonatomic) GEOPlaceSearchRequest *placeSearchRequest; // @synthesize placeSearchRequest=_placeSearchRequest;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)entryPointAtIndex:(unsigned long long)arg1;
- (unsigned long long)entryPointsCount;
- (void)addEntryPoint:(id)arg1;
- (void)clearEntryPoints;
@property(readonly, nonatomic) _Bool hasLocation;
@property(readonly, nonatomic) _Bool hasPlaceSearchRequest;
- (void)dealloc;

@end

@interface GEOWaypointID : PBCodable <NSCopying>
{
    unsigned long long _muid;
    unsigned long long _resultProviderId;
    GEOStructuredAddress *_addressHint;
    GEOLatLng *_locationHint;
    NSString *_placeNameHint;
    CDStruct_12a4a01e _has;
}

@property(retain, nonatomic) NSString *placeNameHint; // @synthesize placeNameHint=_placeNameHint;
@property(retain, nonatomic) GEOStructuredAddress *addressHint; // @synthesize addressHint=_addressHint;
@property(retain, nonatomic) GEOLatLng *locationHint; // @synthesize locationHint=_locationHint;
@property(nonatomic) unsigned long long resultProviderId; // @synthesize resultProviderId=_resultProviderId;
@property(nonatomic) unsigned long long muid; // @synthesize muid=_muid;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasPlaceNameHint;
@property(readonly, nonatomic) _Bool hasAddressHint;
@property(readonly, nonatomic) _Bool hasLocationHint;
@property(nonatomic) _Bool hasResultProviderId;
@property(nonatomic) _Bool hasMuid;
- (void)dealloc;

@end

@interface GEOWaypointLocation : PBCodable <NSCopying>
{
    GEOLocation *_location;
}

@property(retain, nonatomic) GEOLocation *location; // @synthesize location=_location;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasLocation;
- (void)dealloc;

@end

@interface GEOWaypointPlace : PBCodable <NSCopying>
{
    GEOLatLng *_center;
    NSMutableArray *_roadAccessPoints;
}

@property(retain, nonatomic) NSMutableArray *roadAccessPoints; // @synthesize roadAccessPoints=_roadAccessPoints;
@property(retain, nonatomic) GEOLatLng *center; // @synthesize center=_center;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)roadAccessPointAtIndex:(unsigned long long)arg1;
- (unsigned long long)roadAccessPointsCount;
- (void)addRoadAccessPoint:(id)arg1;
- (void)clearRoadAccessPoints;
@property(readonly, nonatomic) _Bool hasCenter;
- (void)dealloc;

@end

@interface GEOWaypointTyped : PBCodable <NSCopying>
{
    GEOWaypointID *_waypointId;
    GEOWaypointLocation *_waypointLocation;
    GEOWaypointPlace *_waypointPlace;
    int _waypointType;
    _Bool _isCurrentLocation;
    struct {
        unsigned int waypointType:1;
        unsigned int isCurrentLocation:1;
    } _has;
}

@property(nonatomic) _Bool isCurrentLocation; // @synthesize isCurrentLocation=_isCurrentLocation;
@property(retain, nonatomic) GEOWaypointLocation *waypointLocation; // @synthesize waypointLocation=_waypointLocation;
@property(retain, nonatomic) GEOWaypointPlace *waypointPlace; // @synthesize waypointPlace=_waypointPlace;
@property(retain, nonatomic) GEOWaypointID *waypointId; // @synthesize waypointId=_waypointId;
@property(nonatomic) int waypointType; // @synthesize waypointType=_waypointType;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasIsCurrentLocation;
@property(readonly, nonatomic) _Bool hasWaypointLocation;
@property(readonly, nonatomic) _Bool hasWaypointPlace;
@property(readonly, nonatomic) _Bool hasWaypointId;
@property(nonatomic) _Bool hasWaypointType;
- (void)dealloc;
- (id)locationForWaypoint;

@end

@interface GEOZilchDecoder : GEOMapRequestManager
{
    NSObject<OS_dispatch_queue> *_decoderQueue;
    NSObject<OS_dispatch_queue> *_requestQueue;
    struct mutex _lock;
    id <GEOMapAccessRestrictions> _mapAccessRestrictions;
}

+ (_Bool)decodingSupported;
@property(nonatomic) id <GEOMapAccessRestrictions> mapAccessRestrictions; // @synthesize mapAccessRestrictions=_mapAccessRestrictions;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *decoderQueue; // @synthesize decoderQueue=_decoderQueue;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)requestComplete:(id)arg1;
- (void)trackRequest:(id)arg1;
- (id)decodeZilchMessage:(shared_ptr_27244a92)arg1 pathHandler:(CDUnknownBlockType)arg2 errorHandler:(CDUnknownBlockType)arg3;
- (void)setRequestQueue:(id)arg1;
- (id)requestQueue;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface GEOZilchDecoderRequest : GEOMapRequest
{
    struct unique_ptr<geo::ZilchMapModel, std::__1::default_delete<geo::ZilchMapModel>> _mapModel;
    GEOZilchDecoder *_decoder;
    shared_ptr_27244a92 _message;
    CDUnknownBlockType _pathHandler;
    CDUnknownBlockType _errorHandler;
    NSError *_firstTileLoadingError;
    NSObject<OS_dispatch_semaphore> *_finishedSemaphore;
}

@property(copy) CDUnknownBlockType errorHandler; // @synthesize errorHandler=_errorHandler;
@property(copy) CDUnknownBlockType pathHandler; // @synthesize pathHandler=_pathHandler;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)cancel;
- (void)decodeWithPathHandler:(CDUnknownBlockType)arg1 errorHandler:(CDUnknownBlockType)arg2;
- (void)_finishedDecodingWithPath:(Path_7b702847)arg1;
- (void)dealloc;
- (id)initWithDecoder:(id)arg1 message:(shared_ptr_27244a92)arg2;

@end

@interface NSBundle (GeoServicesBundle)
+ (id)__geoBundle;
@end

@interface NSData (GEOHashUtilities)
- (id)_geo_uppercaseMD5HashString;
@end

@interface NSData (GEOXPCUtil)
- (id)_geo_newXPCData;
@end

@interface NSDate (GEOAlmanac)
+ (id)_geo_dateWithJulianDay:(double)arg1;
+ (id)_geo_calendar;
- (void)_geo_sunInformationForLocation:(CDStruct_c3b9c2ee)arg1 previousRiseTransitSet:(out id *)arg2 currentRiseTransitSet:(out id *)arg3 nextRiseTransitSet:(out id *)arg4 altitude:(double)arg5;
- (double)_geo_hoursAndMinutes;
- (double)_geo_julianDay;
@end

@interface NSDictionary (GEOURLExtras)
- (id)_placeOrCurrentLocation:(_Bool *)arg1;
@end

@interface NSDictionary (GEOXPCUtil)
+ (id)_geo_dictionaryFromXPCObject:(id)arg1;
- (id)_geo_newXPCObject;
@end

@interface NSError (GEOXPCUtil)
+ (id)_geo_errorFromXPCData:(id)arg1;
- (id)_geo_newXPCData;
@end

@interface NSError (GEOZilchDecoder)
+ (id)zilchDecoderErrorForNoSolution;
- (id)zilchDecoderTileLoadingError;
@end

@interface NSURL (GEOURLAuthenticationAdditions)
- (id)_geo_portionAfterHostname;
@end

@interface NSURLConnection (GEOExtras)
+ (id)_geo_sendAttributedSynchronousRequest:(id)arg1 returningResponse:(id *)arg2 error:(id *)arg3;
+ (void)_geo_sendAttributedAsynchronousRequest:(id)arg1 queue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
+ (id)_geo_sendSynchronousRequest:(id)arg1 connectionProperties:(id)arg2 returningResponse:(id *)arg3 error:(id *)arg4;
+ (void)_geo_sendAsynchronousRequest:(id)arg1 queue:(id)arg2 connectionProperties:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
+ (void)_geo_sendAsynchronousRequest:(id)arg1 connectionProperties:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (id)_geo_initWithAttributedRequest:(id)arg1 delegate:(id)arg2 startImmediately:(_Bool)arg3;
@end

@interface PBRequester (Throttling)
- (void)_scheduleThrottlingError;
@end

__attribute__((visibility("hidden")))
@interface _GEOAutoCompleteTicket : NSObject <GEOMapServiceCompletionTicket>
{
    GEOSearchRequest *_searchRequest;
    GEOMapServiceTraits *_traits;
}

@property(readonly, nonatomic) GEOMapServiceTraits *traits; // @synthesize traits=_traits;
- (_Bool)matchesFragment:(id)arg1;
- (void)cancel;
- (void)submitWithAutoCompletionHandler:(CDUnknownBlockType)arg1 networkActivity:(CDUnknownBlockType)arg2;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)initWithAutoCompleteRequest:(id)arg1 traits:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _GEOBatchReverseGeocodeTicket : NSObject <GEOMapServiceTicket>
{
    GEOBatchRevGeocodeRequest *_batchReverseGeocodeRequest;
    GEOMapServiceTraits *_traits;
    GEOMapRegion *_resultBoundingRegion;
    _Bool _shiftLocationsIfNeeded;
}

@property(readonly, nonatomic) GEOMapRegion *resultBoundingRegion; // @synthesize resultBoundingRegion=_resultBoundingRegion;
@property(readonly, nonatomic) GEOMapServiceTraits *traits; // @synthesize traits=_traits;
- (_Bool)isEqualForHistoryToTicket:(id)arg1;
- (void)applyToCorrectedSearch:(id)arg1;
- (void)submitWithRefinedHandler:(CDUnknownBlockType)arg1 timeout:(long long)arg2 networkActivity:(CDUnknownBlockType)arg3;
- (void)submitWithRefinedHandler:(CDUnknownBlockType)arg1 networkActivity:(CDUnknownBlockType)arg2;
- (void)_batchReverseGeocodeWithRequest:(id)arg1 handler:(CDUnknownBlockType)arg2 networkActivity:(CDUnknownBlockType)arg3;
- (void)submitWithHandler:(CDUnknownBlockType)arg1 timeout:(long long)arg2 networkActivity:(CDUnknownBlockType)arg3;
- (void)submitWithHandler:(CDUnknownBlockType)arg1 networkActivity:(CDUnknownBlockType)arg2;
- (void)cancel;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)initWithBatchReverseGeocodeRequest:(id)arg1 shiftLocationsIfNeeded:(_Bool)arg2 traits:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _GEOGeocodeTicket : NSObject <GEOMapServiceTicket, _GEOLegacyMapServiceTicket>
{
    GEOGeocodeRequest *_geocodeRequest;
    GEOPlaceSearchResponse *_response;
    GEOMapServiceTraits *_traits;
    GEOMapRegion *_resultBoundingRegion;
    _Bool _isForwardGeocode;
    _Bool _shiftLocationsIfNeeded;
}

@property(readonly, nonatomic) GEOMapRegion *resultBoundingRegion; // @synthesize resultBoundingRegion=_resultBoundingRegion;
@property(readonly, nonatomic) GEOMapServiceTraits *traits; // @synthesize traits=_traits;
@property(retain, nonatomic) GEOPlaceSearchResponse *response; // @synthesize response=_response;
- (void)_reverseGeocodeWithRequest:(id)arg1 handler:(CDUnknownBlockType)arg2 networkActivity:(CDUnknownBlockType)arg3;
- (void)applyToCorrectedSearch:(id)arg1;
- (void)cancel;
- (void)submitWithRefinedHandler:(CDUnknownBlockType)arg1 timeout:(long long)arg2 networkActivity:(CDUnknownBlockType)arg3;
- (void)submitWithHandler:(CDUnknownBlockType)arg1 timeout:(long long)arg2 networkActivity:(CDUnknownBlockType)arg3;
- (void)submitWithRefinedHandler:(CDUnknownBlockType)arg1 networkActivity:(CDUnknownBlockType)arg2;
- (void)submitWithHandler:(CDUnknownBlockType)arg1 networkActivity:(CDUnknownBlockType)arg2;
- (id)request;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)initWithReverseGeocodeRequest:(id)arg1 shiftLocationsIfNeeded:(_Bool)arg2 traits:(id)arg3;
- (id)initWithForwardGeocodeRequest:(id)arg1 traits:(id)arg2;
- (id)_initWithGeocodeRequest:(id)arg1 traits:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _GEOLocationShiftLocation : NSObject
{
    CDStruct_2c43369c _coordinate;
    double _accuracy;
    CDUnknownBlockType _completionHandler;
    CDUnknownBlockType _errorHandler;
    CDUnknownBlockType _mustGoToNetworkCallback;
    struct __CFRunLoop *_runLoop;
    NSObject<OS_dispatch_queue> *_queue;
}

@property(readonly, nonatomic) double accuracy; // @synthesize accuracy=_accuracy;
@property(readonly, nonatomic) CDStruct_c3b9c2ee coordinate; // @synthesize coordinate=_coordinate;
- (void)performMustGoToNetwork;
- (void)performErrorHandler:(id)arg1;
- (void)performCompletionHandlerWithShiftedCoordinate:(CDStruct_c3b9c2ee)arg1 accuracy:(double)arg2;
- (void)_performOnCallbackQueue:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (id)initWithCoordinate:(CDStruct_c3b9c2ee)arg1 accuracy:(double)arg2 completionHandler:(CDUnknownBlockType)arg3 errorHandler:(CDUnknownBlockType)arg4 mustGoToNetworkCallback:(CDUnknownBlockType)arg5 callbackQueue:(id)arg6;
- (id)initWithCoordinate:(CDStruct_c3b9c2ee)arg1 accuracy:(double)arg2 completionHandler:(CDUnknownBlockType)arg3 errorHandler:(CDUnknownBlockType)arg4 mustGoToNetworkCallback:(CDUnknownBlockType)arg5 callbackRunLoop:(struct __CFRunLoop *)arg6;
- (id)_initWithCoordinate:(CDStruct_c3b9c2ee)arg1 accuracy:(double)arg2 completionHandler:(CDUnknownBlockType)arg3 errorHandler:(CDUnknownBlockType)arg4 mustGoToNetworkCallback:(CDUnknownBlockType)arg5;

@end

__attribute__((visibility("hidden")))
@interface _GEOMUIDsTicket : NSObject <GEOMapServiceTicket>
{
    NSArray *_muids;
    GEOMapServiceTraits *_traits;
    _Bool _includeETA;
    _Bool _canceled;
}

@property(readonly, nonatomic) GEOMapServiceTraits *traits; // @synthesize traits=_traits;
@property(readonly, nonatomic, getter=isCanceled) _Bool canceled; // @synthesize canceled=_canceled;
- (void)applyToCorrectedSearch:(id)arg1;
- (void)cancel;
- (void)submitWithRefinedHandler:(CDUnknownBlockType)arg1 timeout:(long long)arg2 networkActivity:(CDUnknownBlockType)arg3;
- (void)submitWithHandler:(CDUnknownBlockType)arg1 timeout:(long long)arg2 networkActivity:(CDUnknownBlockType)arg3;
- (void)submitWithRefinedHandler:(CDUnknownBlockType)arg1 networkActivity:(CDUnknownBlockType)arg2;
- (void)submitWithHandler:(CDUnknownBlockType)arg1 networkActivity:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic) GEOMapRegion *resultBoundingRegion;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)initWithMUIDs:(id)arg1 includeETA:(_Bool)arg2 traits:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _GEONSURLConnectionWaiter : NSObject <NSURLConnectionDelegate>
{
    NSURLConnection *_conn;
    CDUnknownBlockType _callback;
    NSMutableData *_data;
    NSURLResponse *_response;
}

@property(retain, nonatomic) NSURLConnection *conn; // @synthesize conn=_conn;
@property(copy, nonatomic) CDUnknownBlockType callback; // @synthesize callback=_callback;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _GEOPhoneNumbersTicket : NSObject <GEOMapServiceTicket>
{
    NSArray *_phoneNumbers;
    GEOMapServiceTraits *_traits;
    _Bool _canceled;
    _Bool _allowCellularDataForLookup;
}

@property(readonly, nonatomic) GEOMapServiceTraits *traits; // @synthesize traits=_traits;
@property(readonly, nonatomic, getter=isCanceled) _Bool canceled; // @synthesize canceled=_canceled;
- (void)applyToCorrectedSearch:(id)arg1;
- (void)cancel;
- (void)submitWithRefinedHandler:(CDUnknownBlockType)arg1 timeout:(long long)arg2 networkActivity:(CDUnknownBlockType)arg3;
- (void)submitWithHandler:(CDUnknownBlockType)arg1 timeout:(long long)arg2 networkActivity:(CDUnknownBlockType)arg3;
- (void)submitWithRefinedHandler:(CDUnknownBlockType)arg1 networkActivity:(CDUnknownBlockType)arg2;
- (void)submitWithHandler:(CDUnknownBlockType)arg1 networkActivity:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic) GEOMapRegion *resultBoundingRegion;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)initWithPhoneNumbers:(id)arg1 allowCellularDataForLookup:(_Bool)arg2 traits:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _GEOPlaceCompletionGroup : NSObject <GEOCompletionGroup>
{
    GEOSuggestionEntryList *_entryList;
    NSArray *_items;
}

@property(readonly, nonatomic) NSArray *items;
@property(readonly, nonatomic) NSString *localizedSectionHeader;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)initWithCompletion:(id)arg1 query:(id)arg2 traits:(id)arg3;
- (id)initWithSuggestionEntryList:(id)arg1 query:(id)arg2 entryListIndex:(int)arg3 completion:(id)arg4 traits:(id)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _GEOPlaceDataItem : NSObject <GEOMapItemPrivate>
{
    GEOPDPlace *_placeData;
    GEOPlace *_place;
    GEOMapServiceTraits *_traits;
    NSMapTable *_attributionMap;
    GEOPDMultiLocalizedString *_disambiguationLabel;
}

- (id)_mapItemByStrippingOptionalData;
@property(readonly, nonatomic, getter=_additionalPlaceInfos) NSArray *additionalPlaceInfos;
@property(readonly, nonatomic, getter=_customIconID) unsigned long long customIconID;
@property(readonly, nonatomic, getter=_styleAttributes) GEOFeatureStyleAttributes *styleAttributes;
- (id)_placeDataStyleAttributes;
@property(readonly, nonatomic, getter=_reviewsAttribution) GEOMapItemReviewsAttribution *reviewsAttribution;
@property(readonly, nonatomic, getter=_photosAttribution) GEOMapItemPhotosAttribution *photosAttribution;
@property(readonly, nonatomic, getter=_attribution) GEOMapItemPlaceAttribution *attribution;
@property(readonly, nonatomic, getter=_poiSurveyURLString) NSString *poiSurveyURLString;
- (id)_urlForWritingAReview;
- (id)_urlForReviewWithUID:(id)arg1;
- (id)_urlForPhotoWithUID:(id)arg1;
@property(readonly, copy, nonatomic, getter=_vendorID) NSString *vendorID;
@property(readonly, copy, nonatomic, getter=_providerURL) NSURL *providerURL;
@property(readonly, copy, nonatomic, getter=_webURL) NSURL *webURL;
@property(readonly, nonatomic, getter=_needsAttribution) _Bool needsAttribution;
- (id)_urlForAttribution:(id)arg1 requirement:(int)arg2 withUID:(id)arg3 writeAReview:(_Bool)arg4;
- (id)_logoPathForAttribution:(id)arg1 requirement:(int)arg2 scale:(double)arg3;
- (id)_displayNameForAttribution:(id)arg1 requirement:(int)arg2;
- (_Bool)_showAddForAttribution:(id)arg1 requirement:(int)arg2;
- (_Bool)_hasMoreForAttribution:(id)arg1 requirement:(int)arg2;
- (_Bool)_showAttributionForAttribution:(id)arg1 requirement:(int)arg2;
@property(readonly, nonatomic, getter=_disambiguationName) NSString *disambiguationName;
@property(readonly, nonatomic, getter=_telephone) NSString *telephone;
@property(readonly, nonatomic, getter=_hasTelephone) _Bool hasTelephone;
- (id)_attributionInfoForAttribution:(id)arg1 requirement:(int)arg2;
@property(readonly, nonatomic, getter=_openState) unsigned int openState;
@property(readonly, nonatomic, getter=_operatingHours) NSArray *operatingHours;
@property(readonly, nonatomic, getter=_hasCurrentOperatingHours) _Bool hasCurrentOperatingHours;
@property(readonly, nonatomic, getter=_hasOperatingHours) _Bool hasOperatingHours;
@property(readonly, nonatomic, getter=_takesReservations) _Bool takesReservations;
@property(readonly, nonatomic, getter=_hasTakesReservationsAmenity) _Bool hasTakesReservationsAmenity;
@property(readonly, nonatomic, getter=_goodForKids) _Bool goodForKids;
@property(readonly, nonatomic, getter=_hasGoodForKidsAmenity) _Bool hasGoodForKidsAmenity;
@property(readonly, nonatomic, getter=_hasDelivery) _Bool hasDelivery;
@property(readonly, nonatomic, getter=_hasDeliveryAmenity) _Bool hasDeliveryAmenity;
@property(readonly, nonatomic, getter=_hasAnyAmenities) _Bool hasAnyAmenities;
- (_Bool)_hasLocalizedCategoryNamesForType:(unsigned int)arg1;
- (id)_localizedCategoryNamesForType:(unsigned int)arg1;
@property(readonly, nonatomic, getter=_priceRange) unsigned int priceRange;
@property(readonly, nonatomic, getter=_hasPriceRange) _Bool hasPriceRange;
@property(readonly, nonatomic, getter=_normalizedUserRatingScore) float normalizedUserRatingScore;
@property(readonly, nonatomic, getter=_sampleSizeForUserRatingScore) unsigned int sampleSizeForUserRatingScore;
@property(readonly, nonatomic, getter=_hasUserRatingScore) _Bool hasUserRatingScore;
@property(readonly, nonatomic, getter=_businessURL) NSString *businessURL;
@property(readonly, nonatomic, getter=_areaInMeters) double areaInMeters;
@property(readonly, nonatomic, getter=_hasAreaInMeters) _Bool hasAreaInMeters;
@property(readonly, nonatomic, getter=_muid) unsigned long long muid;
@property(readonly, nonatomic, getter=_hasMUID) _Bool hasMUID;
@property(readonly, nonatomic, getter=_flyoverAnnouncementMessage) NSString *flyoverAnnouncement;
@property(readonly, nonatomic, getter=_hasFlyoverAnnouncementMessage) _Bool hasFlyoverAnnouncement;
@property(readonly, nonatomic, getter=_flyover) GEOPDFlyover *flyover;
@property(readonly, nonatomic, getter=_hasFlyover) _Bool hasFlyover;
@property(readonly, nonatomic, getter=_resultProviderID) int resultProviderID;
@property(readonly, nonatomic, getter=_hasResultProviderID) _Bool hasResultProviderID;
@property(readonly, nonatomic, getter=_sequenceNumber) unsigned int sequenceNumber;
@property(readonly, nonatomic, getter=_sessionGUID) CDStruct_612aec5b sessionGUID;
@property(readonly, nonatomic, getter=_hasSessionGUID) _Bool hasSessionGUID;
@property(readonly, nonatomic, getter=_roadAccessPoints) NSArray *roadAccessPoints;
- (id)_arrivalMapRegionForTransportType:(int)arg1;
- (unsigned int)_travelDistanceForTransportType:(int)arg1;
- (unsigned int)_travelTimeForTransportType:(int)arg1;
- (int)_recommendedTransportType;
- (id)_spokenAddressForLocale:(id)arg1;
@property(readonly, nonatomic) GEOAddress *geoAddress;
@property(readonly, nonatomic, getter=_placeDataAsData) NSData *placeDataAsData;
@property(readonly, nonatomic, getter=_placeAsData) NSData *placeAsData;
@property(readonly, nonatomic, getter=_clientAttributes) GEOMapItemClientAttributes *clientAttributes;
@property(readonly, nonatomic, getter=_place) GEOPlace *place;
@property(readonly, nonatomic, getter=_placeType) int placeType;
@property(readonly, nonatomic, getter=_hasResolvablePartialInformation) _Bool hasResolvablePartialInformation;
@property(readonly, nonatomic, getter=_placeData) GEOPDPlace *placeData;
@property(readonly, nonatomic) _Bool isEventAllDay;
@property(readonly, nonatomic) NSDate *eventDate;
@property(readonly, nonatomic) NSString *eventName;
@property(readonly, nonatomic) _Bool contactIsMe;
@property(readonly, nonatomic) NSString *contactSpokenName;
@property(readonly, nonatomic) NSString *contactName;
@property(readonly, nonatomic) int contactAddressType;
@property(readonly, nonatomic) NSString *timezone;
@property(readonly, nonatomic) NSArray *areasOfInterest;
@property(readonly, nonatomic) NSDictionary *addressDictionary;
@property(readonly, nonatomic) GEOMapRegion *geoFenceMapRegion;
@property(readonly, nonatomic) GEOMapRegion *displayMapRegion;
@property(readonly, nonatomic) CDStruct_c3b9c2ee centerCoordinate;
@property(readonly, nonatomic) CDStruct_c3b9c2ee coordinate;
@property(readonly, nonatomic, getter=isDisputed) _Bool disputed;
@property(readonly, nonatomic) NSData *encodedData;
- (id)spokenNameForLocale:(id)arg1;
@property(readonly, nonatomic) NSString *name;
@property(readonly, nonatomic, getter=isValid) _Bool valid;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)initWithPlaceData:(id)arg1 traits:(id)arg2;
- (id)initWithPlaceData:(id)arg1 attributionMap:(id)arg2 disambiguationLabel:(id)arg3 traits:(id)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _GEOPlaceDataOnDiskCache : NSObject <_GEOPlaceDataCacheProxy>
{
    GEOPlaceDataDBReader *_reader;
    GEOPlaceDataDBWriter *_writer;
}

- (id)allCacheEntries;
- (void)shrinkToSize:(unsigned long long)arg1 finished:(CDUnknownBlockType)arg2;
- (void)calculateFreeableSpaceWithHandler:(CDUnknownBlockType)arg1;
- (void)deletePhoneNumberMapping;
- (void)evictAllEntries;
- (void)evictPlaceDataForKey:(struct _GEOTileKey)arg1;
- (void)evictPlaceDataForMUID:(unsigned long long)arg1;
- (void)setPlaceData:(id)arg1 forKey:(struct _GEOTileKey)arg2;
- (void)setPlaceData:(id)arg1 forMUID:(unsigned long long)arg2;
- (unsigned long long)muidForPhoneNumber:(unsigned long long)arg1;
- (id)placeDataForKey:(struct _GEOTileKey)arg1;
- (id)placeDataForMUID:(unsigned long long)arg1;
- (id)placeDataForPhoneNumber:(unsigned long long)arg1;
- (void)dealloc;
- (id)initWithPath:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _GEOPlaceDataPhoneNumberWithMUIDCache : NSObject <_GEOPlaceDataCacheProxy>
{
    struct _GEOGenericContainer<_GEOTileKey, GEOPDPlace *, std::__1::hash<GEOTileKey>, std::__1::equal_to<GEOTileKey>, geo::GEOGenericContainerStrongReferenceTag, 64, 2097152, geo::GEOGenericContainerLockingTag, detail::_default_pointer_type> _cache;
    struct unordered_map<unsigned long long, _GEOTileKey, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, _GEOTileKey>>> _phoneNumberCache;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)shrinkToSize:(unsigned long long)arg1 finished:(CDUnknownBlockType)arg2;
- (void)calculateFreeableSpaceWithHandler:(CDUnknownBlockType)arg1;
- (void)deletePhoneNumberMapping;
- (void)evictAllEntries;
- (void)evictPlaceDataForKey:(struct _GEOTileKey)arg1;
- (void)evictPlaceDataForMUID:(unsigned long long)arg1;
- (void)setPlaceData:(id)arg1 forMUID:(unsigned long long)arg2;
- (void)setPlaceData:(id)arg1 forKey:(struct _GEOTileKey)arg2;
- (id)allCacheEntries;
- (_Bool)_retrieveDBKey:(struct _GEOTileKey *)arg1 forPhoneNumber:(unsigned long long)arg2;
- (unsigned long long)muidForPhoneNumber:(unsigned long long)arg1;
- (id)placeDataForKey:(struct _GEOTileKey)arg1;
- (id)placeDataForMUID:(unsigned long long)arg1;
- (id)placeDataForPhoneNumber:(unsigned long long)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _GEOPlaceItem : NSObject <GEOMapItemPrivate>
{
    GEOPlaceResult *_placeResult;
    GEOPlace *_place;
    GEOMapServiceTraits *_traits;
    NSMapTable *_attributionInfoMap;
}

- (id)_mapItemByStrippingOptionalData;
@property(readonly, nonatomic, getter=_additionalPlaceInfos) NSArray *additionalPlaceInfos;
@property(readonly, nonatomic, getter=_customIconID) unsigned long long customIconID;
@property(readonly, nonatomic, getter=_styleAttributes) GEOFeatureStyleAttributes *styleAttributes;
@property(readonly, nonatomic, getter=_reviewsAttribution) GEOMapItemReviewsAttribution *reviewsAttribution;
@property(readonly, nonatomic, getter=_photosAttribution) GEOMapItemPhotosAttribution *photosAttribution;
@property(readonly, nonatomic, getter=_attribution) GEOMapItemPlaceAttribution *attribution;
- (id)_yelpID;
@property(readonly, nonatomic, getter=_poiSurveyURLString) NSString *poiSurveyURLString;
- (id)_urlForWritingAReview;
- (id)_urlForReviewWithUID:(id)arg1;
- (id)_urlForPhotoWithUID:(id)arg1;
@property(readonly, copy, nonatomic, getter=_vendorID) NSString *vendorID;
@property(readonly, copy, nonatomic, getter=_providerURL) NSURL *providerURL;
@property(readonly, copy, nonatomic, getter=_webURL) NSURL *webURL;
@property(readonly, nonatomic, getter=_needsAttribution) _Bool needsAttribution;
- (id)_urlForType:(int)arg1 withUID:(id)arg2 writeAReview:(_Bool)arg3 isYelp:(_Bool)arg4;
- (id)_logoPathForRequirement:(int)arg1 scale:(double)arg2;
- (id)_displayNameForRequirement:(int)arg1;
- (_Bool)_showAddForRequirement:(int)arg1;
- (_Bool)_hasMoreForRequirement:(int)arg1;
- (_Bool)_showAttributionForRequirement:(int)arg1;
- (id)_attributionForInfo:(id)arg1;
- (id)_attributionInfoForDisplayRequirement:(int)arg1;
@property(readonly, nonatomic, getter=_openState) unsigned int openState;
@property(readonly, nonatomic, getter=_disambiguationName) NSString *disambiguationName;
@property(readonly, nonatomic, getter=_telephone) NSString *telephone;
@property(readonly, nonatomic, getter=_hasTelephone) _Bool hasTelephone;
@property(readonly, nonatomic, getter=_operatingHours) NSArray *operatingHours;
@property(readonly, nonatomic, getter=_hasCurrentOperatingHours) _Bool hasCurrentOperatingHours;
@property(readonly, nonatomic, getter=_hasOperatingHours) _Bool hasOperatingHours;
@property(readonly, nonatomic, getter=_takesReservations) _Bool takesReservations;
@property(readonly, nonatomic, getter=_hasTakesReservationsAmenity) _Bool hasTakesReservationsAmenity;
@property(readonly, nonatomic, getter=_goodForKids) _Bool goodForKids;
@property(readonly, nonatomic, getter=_hasGoodForKidsAmenity) _Bool hasGoodForKidsAmenity;
@property(readonly, nonatomic, getter=_hasDelivery) _Bool hasDelivery;
@property(readonly, nonatomic, getter=_hasDeliveryAmenity) _Bool hasDeliveryAmenity;
@property(readonly, nonatomic, getter=_hasAnyAmenities) _Bool hasAnyAmenities;
- (_Bool)_hasLocalizedCategoryNamesForType:(unsigned int)arg1;
- (id)_localizedCategoryNamesForType:(unsigned int)arg1;
@property(readonly, nonatomic, getter=_priceRange) unsigned int priceRange;
@property(readonly, nonatomic, getter=_hasPriceRange) _Bool hasPriceRange;
@property(readonly, nonatomic, getter=_normalizedUserRatingScore) float normalizedUserRatingScore;
@property(readonly, nonatomic, getter=_sampleSizeForUserRatingScore) unsigned int sampleSizeForUserRatingScore;
@property(readonly, nonatomic, getter=_hasUserRatingScore) _Bool hasUserRatingScore;
@property(readonly, nonatomic, getter=_businessURL) NSString *businessURL;
@property(readonly, nonatomic, getter=_areaInMeters) double areaInMeters;
@property(readonly, nonatomic, getter=_hasAreaInMeters) _Bool hasAreaInMeters;
@property(readonly, nonatomic, getter=_muid) unsigned long long muid;
@property(readonly, nonatomic, getter=_hasMUID) _Bool hasMUID;
@property(readonly, nonatomic, getter=_flyoverAnnouncementMessage) NSString *flyoverAnnouncement;
@property(readonly, nonatomic, getter=_hasFlyoverAnnouncementMessage) _Bool hasFlyoverAnnouncement;
@property(readonly, nonatomic, getter=_flyover) GEOPDFlyover *flyover;
@property(readonly, nonatomic, getter=_hasFlyover) _Bool hasFlyover;
@property(readonly, nonatomic, getter=_resultProviderID) int resultProviderID;
@property(readonly, nonatomic, getter=_hasResultProviderID) _Bool hasResultProviderID;
@property(readonly, nonatomic, getter=_sequenceNumber) unsigned int sequenceNumber;
@property(readonly, nonatomic, getter=_sessionGUID) CDStruct_612aec5b sessionGUID;
@property(readonly, nonatomic, getter=_hasSessionGUID) _Bool hasSessionGUID;
@property(readonly, nonatomic, getter=_roadAccessPoints) NSArray *roadAccessPoints;
- (id)_arrivalMapRegionForTransportType:(int)arg1;
- (unsigned int)_travelDistanceForTransportType:(int)arg1;
- (unsigned int)_travelTimeForTransportType:(int)arg1;
- (int)_recommendedTransportType;
- (id)_spokenAddressForLocale:(id)arg1;
@property(readonly, nonatomic) GEOAddress *geoAddress;
@property(readonly, nonatomic, getter=_placeDataAsData) NSData *placeDataAsData;
@property(readonly, nonatomic, getter=_placeAsData) NSData *placeAsData;
@property(readonly, nonatomic, getter=_clientAttributes) GEOMapItemClientAttributes *clientAttributes;
@property(readonly, nonatomic, getter=_place) GEOPlace *place;
@property(readonly, nonatomic, getter=_placeType) int placeType;
@property(readonly, nonatomic, getter=_hasResolvablePartialInformation) _Bool hasResolvablePartialInformation;
@property(readonly, nonatomic, getter=_placeData) GEOPDPlace *placeData;
@property(readonly, nonatomic) _Bool isEventAllDay;
@property(readonly, nonatomic) NSDate *eventDate;
@property(readonly, nonatomic) NSString *eventName;
@property(readonly, nonatomic) _Bool contactIsMe;
@property(readonly, nonatomic) NSString *contactSpokenName;
@property(readonly, nonatomic) NSString *contactName;
@property(readonly, nonatomic) int contactAddressType;
@property(readonly, nonatomic) NSString *timezone;
@property(readonly, nonatomic) NSArray *areasOfInterest;
@property(readonly, nonatomic) NSDictionary *addressDictionary;
@property(readonly, nonatomic) GEOMapRegion *geoFenceMapRegion;
@property(readonly, nonatomic) GEOMapRegion *displayMapRegion;
@property(readonly, nonatomic) CDStruct_c3b9c2ee centerCoordinate;
@property(readonly, nonatomic) CDStruct_c3b9c2ee coordinate;
@property(readonly, nonatomic, getter=isDisputed) _Bool disputed;
@property(readonly, nonatomic) NSData *encodedData;
- (id)spokenNameForLocale:(id)arg1;
@property(readonly, nonatomic) NSString *name;
@property(readonly, nonatomic, getter=isValid) _Bool valid;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)initWithPlace:(id)arg1 traits:(id)arg2;
- (id)initWithPlaceResult:(id)arg1 response:(id)arg2 traits:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _GEOPlaceRequestTicket : NSObject <GEOMapServiceTicket>
{
    GEOPDPlaceRequest *_request;
    GEOPDPlaceResponse *_response;
    GEOMapServiceTraits *_traits;
    GEOMapRegion *_resultBoundingRegion;
    _Bool _canceled;
}

@property(readonly, nonatomic) GEOMapRegion *resultBoundingRegion; // @synthesize resultBoundingRegion=_resultBoundingRegion;
@property(readonly, nonatomic) GEOMapServiceTraits *traits; // @synthesize traits=_traits;
@property(readonly, nonatomic, getter=isCanceled) _Bool canceled; // @synthesize canceled=_canceled;
- (void)applyToCorrectedSearch:(id)arg1;
- (void)cancel;
- (void)submitWithRefinedHandler:(CDUnknownBlockType)arg1 timeout:(long long)arg2 networkActivity:(CDUnknownBlockType)arg3;
- (void)submitWithHandler:(CDUnknownBlockType)arg1 timeout:(long long)arg2 networkActivity:(CDUnknownBlockType)arg3;
- (void)submitWithRefinedHandler:(CDUnknownBlockType)arg1 networkActivity:(CDUnknownBlockType)arg2;
- (void)submitWithHandler:(CDUnknownBlockType)arg1 networkActivity:(CDUnknownBlockType)arg2;
- (void)_processRequest:(id)arg1 withHandler:(CDUnknownBlockType)arg2 refinedHandler:(CDUnknownBlockType)arg3 networkActivity:(CDUnknownBlockType)arg4;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)initWithRequest:(id)arg1 traits:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _GEOPlaceResponseCompletion : NSObject <GEOCompletion>
{
    GEOPlaceSearchResponse *_response;
    NSArray *_groups;
}

- (id)metadata;
- (id)response;
@property(readonly, nonatomic) NSArray *groups;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)initWithPlaceSearchResponse:(id)arg1 query:(id)arg2 traits:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _GEOPlaceResultCompletionItem : NSObject <GEOCompletionItem, _GEOCompletionSearchHint>
{
    GEOPlaceResult *_placeResult;
    NSString *_query;
    GEOMapServiceTraits *_traits;
    NSData *_completionMetaData;
}

@property(readonly) unsigned long long hash;
- (_Bool)isEqual:(id)arg1;
@property(readonly, nonatomic) NSData *metadata;
@property(readonly, nonatomic) NSData *entryMetadata;
- (void)applyToLegacySearch:(id)arg1;
- (void)sendFeedback;
- (id)completionLocation;
- (id)query;
- (id)suggestionsOptions;
@property(readonly, nonatomic) id <GEOMapItem> geoMapItem;
- (_Bool)getCoordinate:(CDStruct_c3b9c2ee *)arg1;
- (id)calloutTitle;
- (id)queryLine;
- (id)highlightsForLine:(unsigned long long)arg1;
@property(readonly, nonatomic) NSArray *displayLines;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)initWithPlaceResult:(id)arg1 query:(id)arg2 completion:(id)arg3 traits:(id)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _GEOPlaceSearchRequestTicket : _GEOPlaceRequestTicket <GEOMapServiceSearchTicket>
{
}

@property(readonly, nonatomic) NSString *searchQuery;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) GEOMapRegion *resultBoundingRegion;
@property(readonly) Class superclass;
@property(readonly, nonatomic) GEOMapServiceTraits *traits;

@end

__attribute__((visibility("hidden")))
@interface _GEORPOptInTicket : NSObject <GEOMapServiceFixNotificationTicket>
{
    GEORPProblemOptInRequest *_request;
    GEOMapServiceTraits *_traits;
    _Bool _canceled;
}

@property(readonly, nonatomic) GEOMapServiceTraits *traits; // @synthesize traits=_traits;
- (void)cancel;
- (void)submitWithHandler:(CDUnknownBlockType)arg1 networkActivity:(CDUnknownBlockType)arg2;
- (void)dealloc;
- (id)initWithSubmissionID:(id)arg1 allowNotificationsAtPushToken:(id)arg2 allowContactBackAtEmailAddress:(id)arg3 traits:(id)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _GEORPSubmissionTicket : NSObject <GEOMapServiceProblemReportTicket>
{
    GEORPProblem *_problem;
    id <GEOMapItemPrivate> _place;
    GEORPProblemRequest *_problemRequest;
    GEOMapServiceTraits *_traits;
    _Bool _canceled;
}

@property(readonly, nonatomic) GEOMapServiceTraits *traits; // @synthesize traits=_traits;
- (void)submitWithHandler:(CDUnknownBlockType)arg1 networkActivity:(CDUnknownBlockType)arg2;
- (void)cancel;
- (void)dealloc;
- (id)initWithProblem:(id)arg1 placeForProblemContext:(id)arg2 traits:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _GEORegionalResourceDownload : NSObject
{
    NSString *_name;
    long long _type;
    NSURL *_url;
    NSString *_destinationPath;
    NSString *_expectedChecksum;
}

@property(copy, nonatomic) NSString *expectedChecksum; // @synthesize expectedChecksum=_expectedChecksum;
@property(copy, nonatomic) NSString *destinationPath; // @synthesize destinationPath=_destinationPath;
@property(copy, nonatomic) NSURL *url; // @synthesize url=_url;
@property(nonatomic) long long type; // @synthesize type=_type;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface _GEORegionalResourcesTileLoader : NSObject
{
    NSMutableArray *_pendingDownloads;
    GEORegionalResourceTileData *_tile;
    CDUnknownBlockType _finishedHandler;
    CDUnknownBlockType _errorHandler;
    _Bool _canceled;
    GEOResourceManifestConfiguration *_manifestConfiguration;
}

- (void)cancel;
- (void)loadResourcesForTileKey:(const struct _GEOTileKey *)arg1 manifestConfiguration:(id)arg2 finished:(CDUnknownBlockType)arg3 error:(CDUnknownBlockType)arg4;
- (void)_loadNextResource;
- (void)_addDownloadForName:(id)arg1 ofType:(long long)arg2 baseURLString:(id)arg3 expectedChecksum:(id)arg4;
- (_Bool)_loadRegionalResourceFromFilesystemIfPossible:(id)arg1 resourceChecksum:(id)arg2;
- (id)_destinationPathForResource:(id)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface _GEOResourceManifestTileGroupObserverProxy : NSObject
{
    NSHashTable *_observers;
    NSLock *_observersLock;
    NSObject<OS_dispatch_queue> *_queue;
}

@property(nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
- (unsigned long long)observersCount;
- (void)forEachObserver:(CDUnknownBlockType)arg1 finished:(CDUnknownBlockType)arg2;
- (void)removeObserver:(id)arg1;
- (void)addObserver:(id)arg1;
- (id)description;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface _GEOReverseGeocodeRequestTicket : _GEOPlaceRequestTicket <GEOMapServiceSearchTicket>
{
    _Bool _shiftLocationsIfNeeded;
}

@property(readonly, nonatomic) NSString *searchQuery;
- (void)submitWithHandler:(CDUnknownBlockType)arg1 networkActivity:(CDUnknownBlockType)arg2;
- (id)initWithRequest:(id)arg1 shiftLocationsIfNeeded:(_Bool)arg2 traits:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) GEOMapRegion *resultBoundingRegion;
@property(readonly) Class superclass;
@property(readonly, nonatomic) GEOMapServiceTraits *traits;

@end

__attribute__((visibility("hidden")))
@interface _GEOSearchAttributionListener : NSObject
{
    NSString *_identifier;
    unsigned int _version;
    NSMutableArray *_completionHandlers;
    NSMutableArray *_errorHandlers;
}

@property(readonly, nonatomic) unsigned int version; // @synthesize version=_version;
@property(readonly, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
- (void)handleError:(id)arg1;
- (void)handleInfo:(id)arg1 updatedManifest:(_Bool)arg2;
- (void)addCompletionHandler:(CDUnknownBlockType)arg1 errorHandler:(CDUnknownBlockType)arg2;
- (void)dealloc;
- (id)initWithIdentifier:(id)arg1 version:(unsigned int)arg2;

@end

__attribute__((visibility("hidden")))
@interface _GEOSearchTicket : NSObject <GEOMapServiceSearchTicket, _GEOLegacyMapServiceTicket>
{
    GEOSearchRequest *_searchRequest;
    GEOPlaceSearchResponse *_response;
    GEOMapServiceTraits *_traits;
    GEOMapRegion *_resultBoundingRegion;
}

@property(readonly, nonatomic) GEOMapRegion *resultBoundingRegion; // @synthesize resultBoundingRegion=_resultBoundingRegion;
@property(readonly, nonatomic) GEOMapServiceTraits *traits; // @synthesize traits=_traits;
@property(retain, nonatomic) GEOPlaceSearchResponse *response; // @synthesize response=_response;
@property(readonly, nonatomic) NSString *searchQuery;
- (void)applyToCorrectedSearch:(id)arg1;
- (void)cancel;
- (void)submitWithRefinedHandler:(CDUnknownBlockType)arg1 timeout:(long long)arg2 networkActivity:(CDUnknownBlockType)arg3;
- (void)submitWithHandler:(CDUnknownBlockType)arg1 timeout:(long long)arg2 networkActivity:(CDUnknownBlockType)arg3;
- (void)submitWithRefinedHandler:(CDUnknownBlockType)arg1 networkActivity:(CDUnknownBlockType)arg2;
- (void)submitWithHandler:(CDUnknownBlockType)arg1 networkActivity:(CDUnknownBlockType)arg2;
- (id)request;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)initWithSearchRequest:(id)arg1 traits:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _GEOServiceRequesterOp : NSObject <PBRequesterDelegate>
{
    PBRequest *_request;
    NSString *_debugRequestName;
    unsigned long long _urlType;
    CDUnknownBlockType _completionHandler;
    _Bool _cancelled;
    GEORequester *_requester;
    NSString *_appIdentifier;
    NSNumber *_serviceTypeNumber;
}

- (void)requester:(id)arg1 didFailWithError:(id)arg2;
- (void)requesterDidCancel:(id)arg1;
- (void)requesterDidFinish:(id)arg1;
- (void)cancel;
- (void)startWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)_cleanup;
- (void)dealloc;
- (id)initWithRequest:(id)arg1 appIdentifier:(id)arg2 urlType:(unsigned long long)arg3 debugRequestName:(id)arg4 serviceType:(id)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _GEOSuggestionEntryCompletionItem : NSObject <GEOCompletionItem, _GEOCompletionSearchHint>
{
    GEOSuggestionEntry *_entry;
    NSString *_query;
    int _entryListIndex;
    int _entryIndex;
    GEOMapServiceTraits *_traits;
    NSData *_completionMetaData;
}

@property(readonly) unsigned long long hash;
- (_Bool)isEqual:(id)arg1;
@property(readonly, nonatomic) NSData *metadata;
@property(readonly, nonatomic) NSData *entryMetadata;
- (void)applyToLegacySearch:(id)arg1;
- (void)sendFeedback;
- (id)completionLocation;
- (id)query;
- (id)suggestionsOptions;
@property(readonly, nonatomic) id <GEOMapItem> geoMapItem;
- (_Bool)getCoordinate:(CDStruct_c3b9c2ee *)arg1;
- (id)calloutTitle;
- (id)queryLine;
- (id)highlightsForLine:(unsigned long long)arg1;
@property(readonly, nonatomic) NSArray *displayLines;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)initWithSuggestionEntry:(id)arg1 query:(id)arg2 entryListIndex:(int)arg3 entryIndex:(int)arg4 completion:(id)arg5 traits:(id)arg6;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _GEOTileDownloadOp : NSObject <NSURLConnectionDelegate>
{
    NSURL *_url;
    _Bool _requireWiFi;
    NSMutableData *_data;
    NSString *_cachedEtag;
    NSData *_cachedData;
    NSURLConnection *_conn;
    NSString *_responseEtag;
    struct _GEOTileKey _key;
    _Bool _finished;
    NSString *_editionHeader;
    unsigned int _tileEdition;
    NSString *_userAgent;
    NSData *_auditToken;
    _Bool _useCookies;
    _GEOTileDownloadOp *_baseTile;
    _GEOTileDownloadOp *_localizationTile;
    unsigned long long _contentLength;
    GEOSimpleTileRequester *_delegate;
    _Bool _gotData;
    int _attempts;
    double _startTime;
    double _timeout;
    long long _eTagType;
}

@property(retain, nonatomic) NSString *responseEtag; // @synthesize responseEtag=_responseEtag;
@property(retain, nonatomic) NSData *cachedData; // @synthesize cachedData=_cachedData;
@property(retain, nonatomic) NSString *cachedEtag; // @synthesize cachedEtag=_cachedEtag;
@property(nonatomic) double timeout; // @synthesize timeout=_timeout;
@property(nonatomic) _Bool requireWiFi; // @synthesize requireWiFi=_requireWiFi;
@property(nonatomic) GEOSimpleTileRequester *delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) _Bool finished; // @synthesize finished=_finished;
@property(readonly, nonatomic) unsigned long long contentLength; // @synthesize contentLength=_contentLength;
@property(retain, nonatomic) _GEOTileDownloadOp *localizationTile; // @synthesize localizationTile=_localizationTile;
@property(retain, nonatomic) _GEOTileDownloadOp *baseTile; // @synthesize baseTile=_baseTile;
@property(nonatomic) _Bool useCookies; // @synthesize useCookies=_useCookies;
@property(retain, nonatomic) NSData *auditToken; // @synthesize auditToken=_auditToken;
@property(retain, nonatomic) NSString *userAgent; // @synthesize userAgent=_userAgent;
@property unsigned int tileEdition; // @synthesize tileEdition=_tileEdition;
@property(retain, nonatomic) NSString *editionHeader; // @synthesize editionHeader=_editionHeader;
@property(retain, nonatomic) NSURLConnection *conn; // @synthesize conn=_conn;
@property(retain, nonatomic) NSMutableData *data; // @synthesize data=_data;
@property struct _GEOTileKey key; // @synthesize key=_key;
@property(retain, nonatomic) NSURL *url; // @synthesize url=_url;
@property(nonatomic) long long eTagType; // @synthesize eTagType=_eTagType;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (double)elapsed;
- (void)cancel;
- (void)start;
@property(readonly, copy) NSString *description;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _GEOURLManifestListener : NSObject
{
    NSMutableArray *_handlers;
    NSLock *_lock;
    NSObject<OS_dispatch_source> *_timeoutTimer;
}

+ (id)sharedListener;
- (void)waitForManifestWithHandler:(CDUnknownBlockType)arg1;
- (void)_finish:(_Bool)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface _GEOURLManifestListenerCallback : NSObject
{
    CDUnknownBlockType _handler;
    struct __CFRunLoop *_runLoop;
}

- (void)performHandler:(_Bool)arg1;
- (void)dealloc;
- (id)initWithRunLoop:(struct __CFRunLoop *)arg1 handler:(CDUnknownBlockType)arg2;

@end

__attribute__((visibility("hidden")))
@interface _GEOVoltaireMultiTileInfo : NSObject
{
    GEOTileKeyList *_keys;
    NSURL *_url;
    _Bool _useStatusCodes;
}

@property(readonly, nonatomic) NSURL *url; // @synthesize url=_url;
@property(readonly, nonatomic) GEOTileKeyList *keys; // @synthesize keys=_keys;
@property(readonly, nonatomic) _Bool useStatusCodes; // @synthesize useStatusCodes=_useStatusCodes;
- (void)appendKey:(struct _GEOTileKey *)arg1;
- (void)dealloc;
- (id)initWithURL:(id)arg1 useStatusCodes:(_Bool)arg2;

@end

