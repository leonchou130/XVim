//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CFURLConnectionClient_V1;

struct CGSize {
    double _field1;
    double _field2;
};

struct _CFURLConnection;

struct _MSDSPCContext {
    struct __MSSPCContext _super;
    CDUnknownFunctionPointerType finishedCallback;
    CDUnknownFunctionPointerType authFailedCallback;
    CDUnknownFunctionPointerType didReceiveServerSideConfigurationVersionCallback;
    CDUnknownFunctionPointerType didReceiveRetryAfterCallback;
};

struct __CFData;

struct __CFDictionary;

struct __CFString;

struct __MSSPCContext {
    void *owner;
    struct __CFString *personID;
    struct __CFString *authToken;
    struct __CFDictionary *deviceInfo;
    struct __CFDictionary *clientHeadersRef;
    double connectionTimeout;
    CDUnknownFunctionPointerType __didReceiveDataCallback;
    CDUnknownFunctionPointerType __didFinishCallback;
    CDUnknownFunctionPointerType __didFailAuthenticationCallback;
    CDUnknownFunctionPointerType __didReceiveServerSideConfigVersionCallback;
    CDUnknownFunctionPointerType __didReceiveRetryAfterCallback;
    struct CFURLConnectionClient_V1 *__client;
    struct _CFURLConnection *__connection;
    struct __CFData *__responseData;
    struct __CFHTTPMessage *__response;
    struct __CFError *__error;
};

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/CoreMediaStream.framework/CoreMediaStream
// UUID: C5AB9FFF-911F-3712-A031-09DB35A70FF9
//
//                           Arch: x86_64
//                Current version: 479.0.0
//          Compatibility version: 1.0.0
//                 Source version: 481.0.0.0.0
//            Minimum iOS version: 8.0.0
//                    SDK version: 8.0.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol IDSServiceDelegate <NSObject>

@optional
- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 inviteReceivedForSession:(IDSSession *)arg3 fromID:(NSString *)arg4 withContext:(NSData *)arg5;
- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 inviteReceivedForSession:(IDSSession *)arg3 fromID:(NSString *)arg4 withOptions:(NSDictionary *)arg5;
- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 inviteReceivedForSession:(IDSSession *)arg3 fromID:(NSString *)arg4;
- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 identifier:(NSString *)arg3 hasBeenDeliveredWithContext:(id)arg4;
- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 identifier:(NSString *)arg3 didSendWithSuccess:(_Bool)arg4 error:(NSError *)arg5;
- (void)service:(IDSService *)arg1 nearbyDevicesChanged:(NSArray *)arg2;
- (void)service:(IDSService *)arg1 devicesChanged:(NSArray *)arg2;
- (void)service:(IDSService *)arg1 activeAccountsChanged:(NSSet *)arg2;
- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 incomingUnhandledProtobuf:(IDSProtobuf *)arg3 fromID:(NSString *)arg4 context:(IDSMessageContext *)arg5;
- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 incomingData:(NSData *)arg3 fromID:(NSString *)arg4 context:(IDSMessageContext *)arg5;
- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 incomingMessage:(NSDictionary *)arg3 fromID:(NSString *)arg4 context:(IDSMessageContext *)arg5;
@end

@protocol MMCSAsset <NSObject>
@property(nonatomic) unsigned int MMCSItemFlags;
@property(retain, nonatomic) NSString *MMCSReceipt;
@property(retain, nonatomic) NSDate *MMCSAccessHeaderTimeStamp;
@property(retain, nonatomic) NSString *MMCSAccessHeader;
@property(retain, nonatomic) NSError *MMCSError;
@property(nonatomic) unsigned long long MMCSItemSize;
@property(retain, nonatomic) NSData *MMCSHash;
@property(nonatomic) unsigned long long MMCSItemID;
@property(retain, nonatomic) NSString *MMCSUTI;
- (NSString *)MMCSItemType;
- (int)MMCSOpenNewFileDescriptor;
@end

@protocol MMCSEngineDelegate <NSObject>
- (void)didFinishPuttingAllAssets;
- (void)MMCSEngine:(MMCSEngine *)arg1 didMakePutProgress:(float)arg2 state:(int)arg3 onAsset:(id <MMCSAsset>)arg4;
- (void)MMCSEngine:(MMCSEngine *)arg1 didCreateRequestorContext:(MMCSRequestorContext *)arg2 forAssets:(NSArray *)arg3;
- (void)MMCSEngine:(MMCSEngine *)arg1 didFinishPuttingAsset:(id <MMCSAsset>)arg2 putReceipt:(NSString *)arg3 error:(NSError *)arg4;
- (void)didFinishGettingAllAssets;
- (void)MMCSEngine:(MMCSEngine *)arg1 didMakeGetProgress:(float)arg2 state:(int)arg3 onAsset:(id <MMCSAsset>)arg4;
- (void)MMCSEngine:(MMCSEngine *)arg1 didFinishGettingAsset:(id <MMCSAsset>)arg2 path:(NSString *)arg3 error:(NSError *)arg4;

@optional
- (void)MMCSEngine:(MMCSEngine *)arg1 logPerformanceMetrics:(NSString *)arg2;
- (void)MMCSEngine:(MMCSEngine *)arg1 logMessage:(NSString *)arg2 logLevel:(int)arg3;
- (_Bool)MMCSEngine:(MMCSEngine *)arg1 shouldLogAtLogLevel:(int)arg2;
- (id <MMCSAsset>)MMCSEngine:(MMCSEngine *)arg1 didRequestAssetWithItemID:(unsigned long long)arg2;
@end

@protocol MSASAssetDownloaderDelegate <NSObject>
- (void)MSASAssetDownloaderDidFinishBatch:(MSASAssetDownloader *)arg1;
- (void)MSASAssetDownloader:(MSASAssetDownloader *)arg1 didFinishDownloadingAsset:(MSAsset *)arg2 inAlbumGUID:(NSString *)arg3 error:(NSError *)arg4;
- (void)MSASAssetDownloader:(MSASAssetDownloader *)arg1 willBeginBatchCount:(unsigned long long)arg2;
@end

@protocol MSASAssetUploaderDelegate <NSObject>
- (void)MSASAssetUploader:(MSASAssetUploader *)arg1 didFinishUploadingAssetCollection:(MSASAssetCollection *)arg2 intoAlbum:(MSASAlbum *)arg3 error:(NSError *)arg4;
@end

@protocol MSASModel <NSObject>
@property(nonatomic) double maxGroupedCallbackEventStaleness;
@property(nonatomic) double maxGroupedCallbackEventIdleInterval;
@property(nonatomic) int maxGroupedCallbackEventBatchCount;
@property(readonly, retain, nonatomic) NSString *personID;
- (_Bool)errorIsCancellation:(NSError *)arg1;
- (NSString *)focusAssetCollectionGUID;
- (void)setFocusAssetCollectionGUID:(NSString *)arg1;
- (void)setFocusAlbumGUID:(NSString *)arg1;
- (NSDictionary *)serverSideConfiguration;
- (int)assetsInDownloadQueueCount;
- (void)retrieveAssetsFromAssetCollectionsWithGUIDs:(NSArray *)arg1 assetTypeFlags:(int)arg2;
- (void)retrieveAssets:(NSArray *)arg1 inAlbumWithGUID:(NSString *)arg2;
- (void)forgetEverything;
- (void)deleteCommentWithGUID:(NSString *)arg1;
- (void)addComments:(NSArray *)arg1 toAssetCollectionWithGUID:(NSString *)arg2;
- (void)markCommentsForAssetCollectionWithGUID:(NSString *)arg1 asViewedWithLastViewedDate:(NSDate *)arg2;
- (void)deleteAssetCollectionsWithGUIDs:(NSArray *)arg1;
- (void)deleteAssetCollectionWithGUID:(NSString *)arg1;
- (void)addAssetCollections:(NSArray *)arg1 toAlbumWithGUID:(NSString *)arg2;
- (void)setMultipleContributorsEnabled:(_Bool)arg1 forAlbumWithGUID:(NSString *)arg2 completionBlock:(void (^)(NSError *))arg3;
- (void)setPublicAccessEnabled:(_Bool)arg1 forAlbumWithGUID:(NSString *)arg2 completionBlock:(void (^)(NSError *))arg3;
- (void)removeAccessControlEntryWithGUID:(NSString *)arg1;
- (void)addAccessControlEntries:(NSArray *)arg1 toAlbumWithGUID:(NSString *)arg2;
- (void)rejectInvitationWithGUID:(NSString *)arg1;
- (void)acceptInvitationWithGUID:(NSString *)arg1;
- (void)acceptInvitationWithToken:(NSString *)arg1 completionBlock:(void (^)(NSError *))arg2;
- (void)unsubscribeFromAlbumWithGUID:(NSString *)arg1;
- (void)subscribeToAlbumWithGUID:(NSString *)arg1;
- (void)markAlbumGUIDAsViewed:(NSString *)arg1;
- (void)deleteAlbumWithGUID:(NSString *)arg1;
- (void)modifyAlbumMetadata:(MSASAlbum *)arg1;
- (void)addAlbum:(MSASAlbum *)arg1;
- (void)refreshAccessControlListForAlbumWithGUID:(NSString *)arg1;
- (void)refreshCommentsForAssetCollectionWithGUID:(NSString *)arg1 resetSync:(_Bool)arg2;
- (void)refreshContentOfAlbumWithGUID:(NSString *)arg1 resetSync:(_Bool)arg2;
- (void)refreshResetSync:(_Bool)arg1;
- (void)forgetEverythingInfo:(NSDictionary *)arg1 completionBlock:(void (^)(void))arg2;
- (void)forgetEverythingInfo:(NSDictionary *)arg1;
- (void)deleteCommentWithGUID:(NSString *)arg1 info:(NSDictionary *)arg2;
- (void)addComments:(NSArray *)arg1 toAssetCollectionWithGUID:(NSString *)arg2 info:(NSDictionary *)arg3;
- (void)markCommentsForAssetCollectionWithGUID:(NSString *)arg1 asViewedWithLastViewedDate:(NSDate *)arg2 info:(NSDictionary *)arg3;
- (void)deleteAssetCollectionWithGUID:(NSString *)arg1 info:(NSDictionary *)arg2;
- (void)addAssetCollections:(NSArray *)arg1 toAlbumWithGUID:(NSString *)arg2 info:(NSDictionary *)arg3;
- (void)setMultipleContributorsEnabled:(_Bool)arg1 forAlbumWithGUID:(NSString *)arg2 info:(NSDictionary *)arg3 completionBlock:(void (^)(NSDictionary *, NSError *))arg4;
- (void)setPublicAccessEnabled:(_Bool)arg1 forAlbumWithGUID:(NSString *)arg2 info:(NSDictionary *)arg3 completionBlock:(void (^)(NSDictionary *, NSError *))arg4;
- (void)removeAccessControlEntryWithGUID:(NSString *)arg1 info:(NSDictionary *)arg2;
- (void)addAccessControlEntries:(NSArray *)arg1 toAlbumWithGUID:(NSString *)arg2 info:(NSDictionary *)arg3;
- (void)rejectInvitationWithGUID:(NSString *)arg1 info:(NSDictionary *)arg2;
- (void)acceptInvitationWithGUID:(NSString *)arg1 info:(NSDictionary *)arg2;
- (void)acceptInvitationWithToken:(NSString *)arg1 info:(NSDictionary *)arg2 completionBlock:(void (^)(NSDictionary *, NSError *))arg3;
- (void)unsubscribeFromAlbumWithGUID:(NSString *)arg1 info:(NSDictionary *)arg2;
- (void)subscribeToAlbumWithGUID:(NSString *)arg1 info:(NSDictionary *)arg2;
- (void)markAlbumGUIDAsViewed:(NSString *)arg1 moveLastViewedAssetCollectionMarker:(_Bool)arg2 info:(NSDictionary *)arg3;
- (void)markAlbumGUIDAsViewed:(NSString *)arg1 info:(NSDictionary *)arg2;
- (void)deleteAlbumWithGUID:(NSString *)arg1 info:(NSDictionary *)arg2;
- (void)modifyAlbumMetadata:(MSASAlbum *)arg1 info:(NSDictionary *)arg2;
- (void)addAlbum:(MSASAlbum *)arg1 info:(NSDictionary *)arg2;
- (void)refreshAccessControlListForAlbumWithGUID:(NSString *)arg1 info:(NSDictionary *)arg2;
- (void)refreshCommentsForAssetCollectionWithGUID:(NSString *)arg1 resetSync:(_Bool)arg2 info:(NSDictionary *)arg3;
- (void)refreshContentOfAlbumWithGUID:(NSString *)arg1 resetSync:(_Bool)arg2 info:(NSDictionary *)arg3;
- (void)refreshResetSync:(_Bool)arg1 info:(NSDictionary *)arg2;
- (NSDate *)serverCommunicationBackoffDate;
- (id)userInfoForCommentWithGUID:(NSString *)arg1;
- (void)setUserInfo:(id <NSCoding>)arg1 forCommentWithGUID:(NSString *)arg2;
- (id)userInfoForInvitationWithGUID:(NSString *)arg1;
- (void)setUserInfo:(id <NSCoding>)arg1 forInvitationWithGUID:(NSString *)arg2;
- (id)userInfoForAccessControlWithGUID:(NSString *)arg1;
- (void)setUserInfo:(id <NSCoding>)arg1 forAccessControlWithGUID:(NSString *)arg2;
- (id)userInfoForAssetCollectionWithGUID:(NSString *)arg1;
- (void)setUserInfo:(id <NSCoding>)arg1 forAssetCollectionWithGUID:(NSString *)arg2;
- (id)userInfoForAlbumWithGUID:(NSString *)arg1;
- (void)setUserInfo:(id <NSCoding>)arg1 forAlbumWithGUID:(NSString *)arg2;
- (NSDate *)lastViewedCommentDateForAssetCollectionWithGUID:(NSString *)arg1;
- (NSString *)earliestUnviewedAssetCollectionGUIDInAlbumWithGUID:(NSString *)arg1;
- (int)unviewedAssetCollectionCountForAlbumWithGUID:(NSString *)arg1;
- (_Bool)isAssetCollectionWithGUIDMarkedAsUnviewed:(NSString *)arg1;
- (int)unviewedAlbumCount;
- (_Bool)isAlbumWithGUIDMarkedAsUnviewed:(NSString *)arg1;
- (MSASComment *)captionForAssetCollectionWithGUID:(NSString *)arg1;
- (MSASComment *)commentWithGUID:(NSString *)arg1;
- (MSASModelEnumerator *)commentsForAssetCollectionWithGUID:(NSString *)arg1;
- (void)videoURLsForAssetCollectionWithGUID:(NSString *)arg1 forMediaAssetType:(unsigned long long)arg2 completionBlock:(void (^)(NSError *, NSArray *, NSDate *))arg3;
- (void)videoURLForAssetCollectionWithGUID:(NSString *)arg1 completionBlock:(void (^)(NSError *, NSURL *, NSDate *))arg2;
- (MSASAssetCollection *)assetCollectionWithGUID:(NSString *)arg1;
- (MSASModelEnumerator *)assetCollectionGUIDsInAlbumWithGUID:(NSString *)arg1;
- (MSASModelEnumerator *)assetCollectionsInAlbumWithGUID:(NSString *)arg1;
- (NSNumber *)isPublicAccessEnabledForAlbumWithGUID:(NSString *)arg1;
- (MSASInvitation *)invitationWithGUID:(NSString *)arg1;
- (MSASInvitation *)invitationForAlbumWithGUID:(NSString *)arg1;
- (MSASModelEnumerator *)invitationGUIDs;
- (MSASModelEnumerator *)invitations;
- (MSASSharingRelationship *)accessControlWithGUID:(NSString *)arg1;
- (MSASModelEnumerator *)accessControlGUIDsForAlbumWithGUID:(NSString *)arg1;
- (MSASModelEnumerator *)accessControlsForAlbumWithGUID:(NSString *)arg1;
- (MSASAlbum *)albumWithGUID:(NSString *)arg1;
- (MSASModelEnumerator *)albumGUIDs;
- (MSASModelEnumerator *)albums;
- (void)removeObserver:(id <MSASModelObserver>)arg1;
- (void)addObserver:(id <MSASModelObserver>)arg1;
- (_Bool)hasEnqueuedActivities;
- (_Bool)hasCommandsInGroupedCommandQueue;
- (void)shutDownForDestruction:(_Bool)arg1 completionBlock:(void (^)(void))arg2;
- (void)shutDown;
- (void)cancel;
- (void)start;
@end

@protocol MSASStateMachineDelegate
@property(nonatomic) MSASStateMachine *MSASCounterpartInstance;
- (void)MSASStateMachineDidUpdateServerCommunicationBackoffDate:(MSASStateMachine *)arg1;
- (void)MSASStateMachine:(MSASStateMachine *)arg1 didFireScheduledEvent:(id)arg2 forAssetCollectionGUID:(NSString *)arg3 albumGUID:(NSString *)arg4 info:(NSDictionary *)arg5;
- (void)MSASStateMachine:(MSASStateMachine *)arg1 didFinishAddingComment:(MSASComment *)arg2 toAssetCollection:(MSASAssetCollection *)arg3 inAlbum:(MSASAlbum *)arg4 info:(NSDictionary *)arg5 error:(NSError *)arg6;
- (void)MSASStateMachine:(MSASStateMachine *)arg1 didFinishRemovingSharingRelationship:(MSASSharingRelationship *)arg2 fromOwnedAlbum:(MSASAlbum *)arg3 info:(NSDictionary *)arg4 error:(NSError *)arg5;
- (void)MSASStateMachine:(MSASStateMachine *)arg1 didFinishSendingInvitationByPhone:(NSString *)arg2 toOwnedAlbum:(MSASAlbum *)arg3 info:(NSDictionary *)arg4 error:(NSError *)arg5;
- (void)MSASStateMachine:(MSASStateMachine *)arg1 didFinishAddingSharingRelationships:(NSArray *)arg2 toOwnedAlbum:(MSASAlbum *)arg3 info:(NSDictionary *)arg4 error:(NSError *)arg5;
- (void)MSASStateMachine:(MSASStateMachine *)arg1 didFinishAddingAssetCollection:(MSASAssetCollection *)arg2 toAlbum:(MSASAlbum *)arg3 info:(NSDictionary *)arg4 error:(NSError *)arg5;
- (void)MSASStateMachine:(MSASStateMachine *)arg1 didRequestAssetsForAddingAssetCollections:(NSArray *)arg2 inAlbum:(MSASAlbum *)arg3 specifications:(NSArray *)arg4 info:(NSDictionary *)arg5;
- (void)MSASStateMachine:(MSASStateMachine *)arg1 didFinishUpdatingAlbum:(MSASAlbum *)arg2 info:(NSDictionary *)arg3 error:(NSError *)arg4;
- (void)MSASStateMachine:(MSASStateMachine *)arg1 didFinishCreatingAlbum:(MSASAlbum *)arg2 info:(NSDictionary *)arg3 error:(NSError *)arg4;
- (void)MSASStateMachine:(MSASStateMachine *)arg1 didFinishDeletingComment:(MSASComment *)arg2 inAssetCollection:(MSASAssetCollection *)arg3 inAlbum:(MSASAlbum *)arg4 info:(NSDictionary *)arg5 error:(NSError *)arg6;
- (void)MSASStateMachine:(MSASStateMachine *)arg1 didFinishDeletingAssetCollection:(MSASAssetCollection *)arg2 inAlbum:(MSASAlbum *)arg3 info:(NSDictionary *)arg4 error:(NSError *)arg5;
- (void)MSASStateMachine:(MSASStateMachine *)arg1 didFinishDeletingAlbum:(MSASAlbum *)arg2 info:(NSDictionary *)arg3 error:(NSError *)arg4;
- (void)MSASStateMachine:(MSASStateMachine *)arg1 didFinishRetrievingAsset:(MSAsset *)arg2 inAlbum:(MSASAlbum *)arg3 error:(NSError *)arg4;
- (void)MSASStateMachine:(MSASStateMachine *)arg1 didFinishEnqueueingAssetsForDownload:(NSArray *)arg2 inAlbumWithGUID:(NSString *)arg3;
- (_Bool)MSASStateMachine:(MSASStateMachine *)arg1 didQueryIsAssetCollectionWithGUIDInModel:(NSString *)arg2;
- (NSString *)MSASStateMachineDidRequestAssetCollectionStateCtagForAssetCollectionWithGUID:(NSString *)arg1 info:(NSDictionary *)arg2;
- (MSASAlbum *)MSASStateMachineDidRequestAlbumWithGUID:(NSString *)arg1;
- (NSString *)MSASStateMachineDidRequestAlbumURLStringForAlbumWithGUID:(NSString *)arg1 info:(NSDictionary *)arg2;
- (NSString *)MSASStateMachineDidRequestAlbumStateCtagForAlbumWithGUID:(NSString *)arg1 info:(NSDictionary *)arg2;
- (void)MSASStateMachine:(MSASStateMachine *)arg1 didFinishSettingSyncedStateForAssetCollection:(MSASAssetCollection *)arg2 inAlbum:(MSASAlbum *)arg3 assetStateCtag:(NSString *)arg4 info:(NSDictionary *)arg5 error:(NSError *)arg6;
- (void)MSASStateMachine:(MSASStateMachine *)arg1 didFinishSettingSyncedStateForAlbum:(MSASAlbum *)arg2 info:(NSDictionary *)arg3 error:(NSError *)arg4 newAlbumStateCtag:(NSString *)arg5;
- (void)MSASStateMachine:(MSASStateMachine *)arg1 didFinishCheckingForAlbumSyncedStateChangesInAlbum:(MSASAlbum *)arg2 info:(NSDictionary *)arg3 error:(NSError *)arg4 newAlbumStateCtag:(NSString *)arg5;
- (void)MSASStateMachine:(MSASStateMachine *)arg1 didFindAlbumSyncedState:(NSDictionary *)arg2 forAlbum:(MSASAlbum *)arg3 info:(NSDictionary *)arg4;
- (void)MSASStateMachine:(MSASStateMachine *)arg1 didFindAssetCollectionSyncedState:(NSDictionary *)arg2 forAssetCollectionGUID:(NSString *)arg3 inAlbum:(MSASAlbum *)arg4 assetCollectionStateCtag:(NSString *)arg5 info:(NSDictionary *)arg6;
- (void)MSASStateMachine:(MSASStateMachine *)arg1 willCheckForAlbumSyncedStateChangesInAlbum:(MSASAlbum *)arg2 info:(NSDictionary *)arg3;
- (void)MSASStateMachine:(MSASStateMachine *)arg1 didFinishCheckingForCommentChangesInAssetCollectionWithGUID:(NSString *)arg2 largestCommentID:(int)arg3 info:(NSDictionary *)arg4 error:(NSError *)arg5;
- (void)MSASStateMachine:(MSASStateMachine *)arg1 didFindCommentChanges:(NSArray *)arg2 inAssetCollectionWithGUID:(NSString *)arg3 inAlbumWithGUID:(NSString *)arg4 info:(NSDictionary *)arg5;
- (void)MSASStateMachine:(MSASStateMachine *)arg1 didFinishUnsubscribingFromAlbum:(MSASAlbum *)arg2 info:(NSDictionary *)arg3 error:(NSError *)arg4;
- (void)MSASStateMachine:(MSASStateMachine *)arg1 didFinishSubscribingToAlbum:(MSASAlbum *)arg2 info:(NSDictionary *)arg3 error:(NSError *)arg4;
- (void)MSASStateMachine:(MSASStateMachine *)arg1 didFinishUpdatingAssetCollections:(NSArray *)arg2 inAlbum:(MSASAlbum *)arg3 info:(NSDictionary *)arg4 error:(NSError *)arg5;
- (void)MSASStateMachine:(MSASStateMachine *)arg1 willUpdateAssetCollections:(NSArray *)arg2 inAlbum:(MSASAlbum *)arg3 info:(NSDictionary *)arg4;
- (void)MSASStateMachine:(MSASStateMachine *)arg1 didFinishGettingAccessControls:(NSArray *)arg2 forAlbum:(MSASAlbum *)arg3 info:(NSDictionary *)arg4 error:(NSError *)arg5;
- (void)MSASStateMachine:(MSASStateMachine *)arg1 didFindNewURLString:(NSString *)arg2 forAlbumWithGUID:(NSString *)arg3 info:(NSDictionary *)arg4;
- (void)MSASStateMachine:(MSASStateMachine *)arg1 didFinishCheckingForUpdatesInAlbums:(NSArray *)arg2 info:(NSDictionary *)arg3;
- (void)MSASStateMachine:(MSASStateMachine *)arg1 didFinishCheckingForUpdatesInAlbum:(MSASAlbum *)arg2 info:(NSDictionary *)arg3 error:(NSError *)arg4;
- (void)MSASStateMachine:(MSASStateMachine *)arg1 didFindChangesInAlbum:(MSASAlbum *)arg2 info:(NSDictionary *)arg3 error:(NSError *)arg4;
- (void)MSASStateMachine:(MSASStateMachine *)arg1 didFindAssetCollectionChanges:(NSArray *)arg2 forAlbum:(MSASAlbum *)arg3 info:(NSDictionary *)arg4;
- (void)MSASStateMachine:(MSASStateMachine *)arg1 willCheckForUpdatesInAlbum:(MSASAlbum *)arg2 info:(NSDictionary *)arg3;
- (void)MSASStateMachine:(MSASStateMachine *)arg1 didFinishCheckingForChangesInfo:(NSDictionary *)arg2 error:(NSError *)arg3;
- (void)MSASStateMachine:(MSASStateMachine *)arg1 didFindSyncedKeyValueChangesForAlbumGUIDS:(NSArray *)arg2 info:(NSDictionary *)arg3;
- (void)MSASStateMachine:(MSASStateMachine *)arg1 didFindAccessControlChangesForAlbumGUIDS:(NSArray *)arg2 info:(NSDictionary *)arg3;
- (void)MSASStateMachine:(MSASStateMachine *)arg1 didFindAlbumChanges:(NSArray *)arg2 info:(NSDictionary *)arg3;
- (void)MSASStateMachine:(MSASStateMachine *)arg1 didFindSyncedKeyValueChangesForAlbumGUIDS:(NSArray *)arg2 albumChanges:(NSArray *)arg3 accessControlChangesForAlbumGUIDS:(NSArray *)arg4 info:(NSDictionary *)arg5;
- (void)MSASStateMachineDidFindGlobalResetSync:(MSASStateMachine *)arg1 info:(NSDictionary *)arg2;
- (void)MSASStateMachineDidStart:(MSASStateMachine *)arg1;
@end

@protocol MSBackoffManagerDelegate <NSObject>
- (void)MSBackoffManagerDidUpdateNextExpiryDate:(MSBackoffManager *)arg1;
@end

@protocol MSDeleteStreamsProtocolDelegate <MSStreamsProtocolDelegate>
- (void)deleteProtocol:(MSDeleteStreamsProtocol *)arg1 didReceiveAuthenticationError:(NSError *)arg2;
- (void)deleteProtocol:(MSDeleteStreamsProtocol *)arg1 didFinishSuccessfulCollections:(NSArray *)arg2 failedCollections:(NSArray *)arg3 error:(NSError *)arg4;
@end

@protocol MSDeleter <NSObject>
@property(nonatomic) id <MSDeleterDelegate> delegate;
- (void)performOutstandingActivities;
- (void)stop;
- (void)abort;
- (void)deleteAssetCollections:(NSArray *)arg1;
@end

@protocol MSPublishStorageProtocol <MSStorageProtocol>
@property(nonatomic) id <MSPublishStorageProtocolDelegate> delegate;
- (void)abort;
- (void)computeHashForAsset:(MSAsset *)arg1;
- (void)publishAssets:(NSArray *)arg1 URL:(NSURL *)arg2;
@end

@protocol MSPublishStorageProtocolDelegate <NSObject>
- (void)publishStorageProtocolDidFinishPublishingAllAssets:(id <MSPublishStorageProtocol>)arg1;
- (void)publishStorageProtocol:(id <MSPublishStorageProtocol>)arg1 didFinishUsingFD:(int)arg2 forAsset:(MSAsset *)arg3;
- (int)publishStorageProtocol:(id <MSPublishStorageProtocol>)arg1 didRequestFDForAsset:(MSAsset *)arg2;
- (void)publishStorageProtocol:(id <MSPublishStorageProtocol>)arg1 didFinishUploadingAsset:(MSAsset *)arg2 error:(NSError *)arg3;
@end

@protocol MSPublishStreamsProtocolDelegate <MSStreamsProtocolDelegate>
- (void)publishStreamsProtocol:(MSPublishStreamsProtocol *)arg1 didFinishSendingUploadCompleteError:(NSError *)arg2;
- (void)publishStreamsProtocol:(MSPublishStreamsProtocol *)arg1 didReceiveAuthenticationError:(NSError *)arg2;
- (void)publishStreamsProtocol:(MSPublishStreamsProtocol *)arg1 didFinishUploadingMetadataResponse:(NSDictionary *)arg2 error:(NSError *)arg3;
@end

@protocol MSPublisher <NSObject>
@property(nonatomic) int publishBatchSize;
@property(nonatomic) id <MSPublisherDelegate> delegate;
- (void)reenqueueQuarantinedAssetCollections;
- (void)publish;
- (void)stop;
- (void)abort;
- (void)submitAssetCollectionsForPublication:(NSArray *)arg1 skipAssetCollections:(NSArray *)arg2;
- (void)submitAssetCollectionsForPublication:(NSArray *)arg1;
@end

@protocol MSReauthorizationProtocolDelegate <MSStreamsProtocolDelegate>
- (void)reauthorizationProtocol:(MSReauthorizationProtocol *)arg1 didReceiveAuthenticationError:(NSError *)arg2;
- (void)reauthorizationProtocol:(MSReauthorizationProtocol *)arg1 reauthorizedAssets:(NSArray *)arg2 rejectedAssets:(NSArray *)arg3 error:(NSError *)arg4;
@end

@protocol MSResetServerProtocolDelegate <MSStreamsProtocolDelegate>
- (void)resetServerProtocol:(MSResetServerProtocol *)arg1 didReceiveAuthenticationError:(NSError *)arg2;
- (void)resetServerProtocol:(MSResetServerProtocol *)arg1 didFinishWithError:(NSError *)arg2;
@end

@protocol MSServerSideConfigProtocolDelegate <NSObject>
- (void)serverSideConfigProtocol:(MSServerSideConfigProtocol *)arg1 didReceiveAuthenticationError:(NSError *)arg2;
- (void)serverSideConfigProtocol:(MSServerSideConfigProtocol *)arg1 didFinishWithConfiguration:(NSDictionary *)arg2 error:(NSError *)arg3;
@end

@protocol MSSharingManager <NSObject>
@property(retain, nonatomic) NSArray *shares;
@property(readonly, nonatomic) NSString *personID;
@property(nonatomic) id <MSSharingManagerDelegate> delegate;
- (void)removeShare:(MSShare *)arg1;
- (void)modifyShare:(MSShare *)arg1;
- (void)refreshCurrentShareState;
- (void)respondToInvitation:(MSShare *)arg1 accept:(_Bool)arg2;
- (void)sendInvitationsForShares:(NSArray *)arg1;
@end

@protocol MSSharingProtocolDelegate <NSObject>
- (void)sharingProtocol:(MSSharingProtocol *)arg1 didReceiveAuthenticationError:(NSError *)arg2;
- (void)sharingProtocol:(MSSharingProtocol *)arg1 didFailToSendInvitations:(NSArray *)arg2;
- (void)sharingProtocol:(MSSharingProtocol *)arg1 didCompleteTransactionWithError:(NSError *)arg2;
- (void)sharingProtocol:(MSSharingProtocol *)arg1 didFindShareState:(NSArray *)arg2;
@end

@protocol MSStorageProtocol <NSObject>
- (void)deactivateRemoveAllFiles:(_Bool)arg1;
- (void)deactivate;
- (void)didFinishUsingAssets:(NSArray *)arg1;
@end

@protocol MSStreamsProtocolDelegate <NSObject>

@optional
- (void)protocol:(MSStreamsProtocol *)arg1 didReceiveRetryAfterDate:(NSDate *)arg2;
@end

@protocol MSSubscribeStorageProtocol <MSStorageProtocol>
@property(nonatomic) id <MSSubscribeStorageProtocolDelegate> delegate;
- (void)abort;
- (void)retrieveAssets:(NSArray *)arg1;
@end

@protocol MSSubscribeStorageProtocolDelegate <NSObject>
- (void)subscribeStorageProtocolDidFinishRetrievingAllAssets:(id <MSSubscribeStorageProtocol>)arg1;
- (void)subscribeStorageProtocol:(id <MSSubscribeStorageProtocol>)arg1 didFinishRetrievingAsset:(MSAsset *)arg2 error:(NSError *)arg3;
@end

@protocol MSSubscribeStreamsProtocolDelegate <MSStreamsProtocolDelegate>
- (void)subscribeStreamsProtocol:(MSSubscribeStreamsProtocol *)arg1 didReceiveAuthenticationError:(NSError *)arg2;
- (void)subscribeStreamsProtocol:(MSSubscribeStreamsProtocol *)arg1 didFinishError:(NSError *)arg2;
- (void)subscribeStreamsProtocol:(MSSubscribeStreamsProtocol *)arg1 didFindShareState:(id)arg2;
- (void)subscribeStreamsProtocol:(MSSubscribeStreamsProtocol *)arg1 didFindTemporarilyUnavailableSubscriptionForPersonID:(NSString *)arg2;
- (void)subscribeStreamsProtocol:(MSSubscribeStreamsProtocol *)arg1 didFindDisappearedSubscriptionForPersonID:(NSString *)arg2;
- (void)subscribeStreamsProtocol:(MSSubscribeStreamsProtocol *)arg1 didFinishReceivingUpdatesForPersonID:(NSString *)arg2 ctag:(NSString *)arg3;
- (void)subscribeStreamsProtocol:(MSSubscribeStreamsProtocol *)arg1 didReceiveAssetCollections:(NSArray *)arg2 forPersonID:(NSString *)arg3;
- (void)subscribeStreamsProtocol:(MSSubscribeStreamsProtocol *)arg1 willReceiveUpdatesForPersonID:(NSString *)arg2 wasReset:(_Bool)arg3 metadata:(NSDictionary *)arg4;
@end

@protocol MSSubscriber
@property(nonatomic) id <MSSubscriberDelegate> delegate;
- (void)stop;
- (void)abort;
- (MSSubscribedStream *)ownSubscribedStream;
- (NSArray *)subscribedStreams;
- (void)retrieveAssets:(NSArray *)arg1;
- (void)checkForOutstandingActivities;
- (void)checkForNewAssetCollections;
- (void)resetSync;
@end

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSSecureCoding <NSCoding>
+ (_Bool)supportsSecureCoding;
@end

@protocol NSURLConnectionDelegate <NSObject>

@optional
- (void)connection:(NSURLConnection *)arg1 didCancelAuthenticationChallenge:(NSURLAuthenticationChallenge *)arg2;
- (void)connection:(NSURLConnection *)arg1 didReceiveAuthenticationChallenge:(NSURLAuthenticationChallenge *)arg2;
- (_Bool)connection:(NSURLConnection *)arg1 canAuthenticateAgainstProtectionSpace:(NSURLProtectionSpace *)arg2;
- (void)connection:(NSURLConnection *)arg1 willSendRequestForAuthenticationChallenge:(NSURLAuthenticationChallenge *)arg2;
- (_Bool)connectionShouldUseCredentialStorage:(NSURLConnection *)arg1;
- (void)connection:(NSURLConnection *)arg1 didFailWithError:(NSError *)arg2;
@end

@interface MMCSEngine : NSObject
{
    NSURL *_workPathURL;
    NSString *_appIDHeader;
    NSString *_dataClass;
    NSDictionary *_options;
    struct __MMCSEngine *_engine;
    struct {
        long long version;
        void *context;
        CDUnknownFunctionPointerType getFileDescriptorAndContentTypeFromItemCallback;
        CDUnknownFunctionPointerType getItemProgressCallback;
        CDUnknownFunctionPointerType getItemDoneCallback;
        CDUnknownFunctionPointerType putItemProgressCallback;
        CDUnknownFunctionPointerType putItemDoneCallback;
        CDUnknownFunctionPointerType requestCompletedCallback;
    } _engineClientContext;
    NSMutableDictionary *_itemIDToAssetMap;
    NSObject<OS_dispatch_queue> *_itemIDToAssetMapQueue;
    NSMutableArray *_requestorContexts;
    NSObject<OS_dispatch_queue> *_reqestorContextQueue;
    NSMutableDictionary *_autoItemIDDictionary;
    NSURL *_autoItemIDPersistenceURL;
    NSObject<OS_dispatch_queue> *_autoItemIDDictionaryQueue;
    _Bool _autoGenerateItemID;
    _Bool _isMetricsGatheringEnabled;
    _Bool _isDone;
    id <MMCSEngineDelegate> _delegate;
    NSThread *_workThread;
    NSTimer *_threadKeepAliveTimer;
}

+ (id)logStringForPutItemState:(int)arg1;
+ (id)logStringForGetItemState:(int)arg1;
@property(nonatomic) _Bool isDone; // @synthesize isDone=_isDone;
@property(retain, nonatomic) NSTimer *threadKeepAliveTimer; // @synthesize threadKeepAliveTimer=_threadKeepAliveTimer;
@property(retain, nonatomic) NSThread *workThread; // @synthesize workThread=_workThread;
@property(nonatomic) _Bool isMetricsGatheringEnabled; // @synthesize isMetricsGatheringEnabled=_isMetricsGatheringEnabled;
@property(nonatomic) _Bool autoGenerateItemID; // @synthesize autoGenerateItemID=_autoGenerateItemID;
@property(nonatomic) __weak id <MMCSEngineDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (unsigned long long)_nextItemID;
- (void)_initItemIDPersistence;
- (void)_removeRequestorContext:(id)arg1;
- (void)_registerRequestorContext:(id)arg1;
- (void)_removeAssetForItemID:(unsigned long long)arg1;
- (id)_assetWithItemID:(unsigned long long)arg1;
- (void)_registerAsset:(id)arg1;
- (void)_logLevel:(int)arg1 message:(id)arg2;
- (void)putAssets:(id)arg1 requestURL:(id)arg2 DSID:(id)arg3 options:(id)arg4;
- (void)getAssets:(id)arg1 requestURL:(id)arg2 DSID:(id)arg3 options:(id)arg4;
- (void)unregisterAssets:(id)arg1;
- (void)unregisterAsset:(id)arg1;
- (void)registerAssets:(id)arg1 forDownloadCompletionBlock:(CDUnknownBlockType)arg2;
- (void)reregisterAssetForDownload:(id)arg1;
- (void)reregisterAssetForUpload:(id)arg1;
- (void)registerAssetForUpload:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (_Bool)isActive;
- (void)shutDownCompletionBlock:(CDUnknownBlockType)arg1;
- (void)cancelAllOperations;
- (void)cancelOperationsWithContext:(id)arg1;
- (void)_requestCompletedRequestorContext:(id)arg1;
- (void)_putItemDoneItemID:(unsigned long long)arg1 requestorContext:(id)arg2 putReceipt:(id)arg3 error:(id)arg4;
- (void)_putItemProgressItemID:(unsigned long long)arg1 state:(int)arg2 progress:(double)arg3 requestorContext:(id)arg4 error:(id)arg5;
- (void)_getItemDoneItemID:(unsigned long long)arg1 path:(id)arg2 requestorContext:(id)arg3 error:(id)arg4;
- (void)_getItemProgressItemID:(unsigned long long)arg1 state:(int)arg2 progress:(double)arg3 requestorContext:(id)arg4 error:(id)arg5;
- (_Bool)_getFileDescriptorAndContentTypeFromItemID:(unsigned long long)arg1 outFD:(int *)arg2 outItemType:(id *)arg3 outError:(id *)arg4;
- (void)threadMain:(id)arg1;
- (void)_doNothingTimerHandler:(id)arg1;
- (void)performBlockOnWorkThread:(CDUnknownBlockType)arg1;
- (void)performBlockOnWorkThread:(CDUnknownBlockType)arg1 waitUntilDone:(_Bool)arg2;
- (void)performBlock:(CDUnknownBlockType)arg1;
- (id)initWithWorkPath:(id)arg1 appIDHeader:(id)arg2 dataClass:(id)arg3 options:(id)arg4;
- (id)initWithWorkPath:(id)arg1 appIDHeader:(id)arg2 dataClass:(id)arg3 options:(id)arg4 modes:(id)arg5;
@property(readonly, nonatomic) _Bool hasOutstandingActivity;

@end

@interface MMCSRequestorContext : NSObject
{
    int _type;
    MMCSEngine *_engine;
    char **_signatures;
    unsigned long long _count;
    unsigned long long *_itemIDs;
    unsigned int *_itemFlags;
    char **_authTokens;
}

+ (id)contextWithEngine:(id)arg1 type:(int)arg2;
@property(nonatomic) int type; // @synthesize type=_type;
@property(nonatomic) char **authTokens; // @synthesize authTokens=_authTokens;
@property(nonatomic) unsigned int *itemFlags; // @synthesize itemFlags=_itemFlags;
@property(nonatomic) unsigned long long *itemIDs; // @synthesize itemIDs=_itemIDs;
@property(nonatomic) unsigned long long count; // @synthesize count=_count;
@property(nonatomic) char **signatures; // @synthesize signatures=_signatures;
@property(nonatomic) __weak MMCSEngine *engine; // @synthesize engine=_engine;
- (void).cxx_destruct;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)initWithEngine:(id)arg1 type:(int)arg2;

@end

@interface MSASAlbum : NSObject <NSCopying>
{
    _Bool _isFamilySharedAlbum;
    int _relationshipState;
    NSString *_ownerEmail;
    NSString *_ownerPersonID;
    NSString *_ownerFullName;
    NSString *_ownerFirstName;
    NSString *_ownerLastName;
    NSDate *_subscriptionDate;
    NSString *_GUID;
    NSString *_ctag;
    NSString *_foreignCtag;
    NSString *_URLString;
    NSString *_publicURLString;
    NSDictionary *_metadata;
    id _context;
}

+ (id)albumWithAlbum:(id)arg1;
+ (_Bool)supportsSecureCoding;
+ (id)album;
@property(nonatomic) _Bool isFamilySharedAlbum; // @synthesize isFamilySharedAlbum=_isFamilySharedAlbum;
@property(retain, nonatomic) id context; // @synthesize context=_context;
@property(retain, nonatomic) NSDictionary *metadata; // @synthesize metadata=_metadata;
@property(retain, nonatomic) NSString *publicURLString; // @synthesize publicURLString=_publicURLString;
@property(retain, nonatomic) NSString *URLString; // @synthesize URLString=_URLString;
@property(retain, nonatomic) NSString *foreignCtag; // @synthesize foreignCtag=_foreignCtag;
@property(nonatomic) int relationshipState; // @synthesize relationshipState=_relationshipState;
@property(retain, nonatomic) NSString *ctag; // @synthesize ctag=_ctag;
@property(retain, nonatomic) NSString *GUID; // @synthesize GUID=_GUID;
@property(retain, nonatomic) NSDate *subscriptionDate; // @synthesize subscriptionDate=_subscriptionDate;
@property(retain, nonatomic) NSString *ownerLastName; // @synthesize ownerLastName=_ownerLastName;
@property(retain, nonatomic) NSString *ownerFirstName; // @synthesize ownerFirstName=_ownerFirstName;
@property(retain, nonatomic) NSString *ownerFullName; // @synthesize ownerFullName=_ownerFullName;
@property(retain, nonatomic) NSString *ownerPersonID; // @synthesize ownerPersonID=_ownerPersonID;
@property(retain, nonatomic) NSString *ownerEmail; // @synthesize ownerEmail=_ownerEmail;
- (void).cxx_destruct;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)metadataValueForKey:(id)arg1;
- (void)setMetadataValue:(id)arg1 forKey:(id)arg2;
@property(readonly, nonatomic) _Bool useForeignCtag;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;

@end

@interface MSASAlbumChange : NSObject
{
    _Bool _wasDeleted;
    NSString *_GUID;
    NSString *_ownerEmail;
    NSString *_ownerPersonID;
    NSString *_ownerFullName;
    NSString *_ownerFirstName;
    NSString *_ownerLastName;
    NSString *_URLString;
    MSASInvitation *_invitation;
    NSString *_name;
}

@property(nonatomic) _Bool wasDeleted; // @synthesize wasDeleted=_wasDeleted;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
@property(retain, nonatomic) MSASInvitation *invitation; // @synthesize invitation=_invitation;
@property(retain, nonatomic) NSString *URLString; // @synthesize URLString=_URLString;
@property(copy, nonatomic) NSString *ownerLastName; // @synthesize ownerLastName=_ownerLastName;
@property(copy, nonatomic) NSString *ownerFirstName; // @synthesize ownerFirstName=_ownerFirstName;
@property(copy, nonatomic) NSString *ownerFullName; // @synthesize ownerFullName=_ownerFullName;
@property(copy, nonatomic) NSString *ownerPersonID; // @synthesize ownerPersonID=_ownerPersonID;
@property(copy, nonatomic) NSString *ownerEmail; // @synthesize ownerEmail=_ownerEmail;
@property(retain, nonatomic) NSString *GUID; // @synthesize GUID=_GUID;
- (void).cxx_destruct;
- (id)description;

@end

@interface MSASAssetCollection : NSObject <NSCopying>
{
    _Bool _hasComments;
    _Bool _isDeletable;
    _Bool _isMine;
    NSString *_GUID;
    NSString *_ctag;
    NSString *_albumGUID;
    NSArray *_assets;
    NSString *_fileName;
    NSString *_path;
    id <NSCoding> _userInfo;
    NSDictionary *_metadata;
    long long _photoNumber;
    NSDate *_timestamp;
    NSString *_personID;
    NSString *_fullName;
    NSString *_firstName;
    NSString *_lastName;
    NSString *_email;
}

+ (_Bool)supportsSecureCoding;
+ (id)assetCollectionWithAssetCollection:(id)arg1;
+ (id)MSASPAssetCollectionFromProtocolDictionary:(id)arg1;
@property(nonatomic) _Bool isMine; // @synthesize isMine=_isMine;
@property(nonatomic) _Bool isDeletable; // @synthesize isDeletable=_isDeletable;
@property(retain, nonatomic) NSString *email; // @synthesize email=_email;
@property(retain, nonatomic) NSString *lastName; // @synthesize lastName=_lastName;
@property(retain, nonatomic) NSString *firstName; // @synthesize firstName=_firstName;
@property(retain, nonatomic) NSString *fullName; // @synthesize fullName=_fullName;
@property(retain, nonatomic) NSString *personID; // @synthesize personID=_personID;
@property(nonatomic) _Bool hasComments; // @synthesize hasComments=_hasComments;
@property(retain, nonatomic) NSDate *timestamp; // @synthesize timestamp=_timestamp;
@property(nonatomic) long long photoNumber; // @synthesize photoNumber=_photoNumber;
@property(retain, nonatomic) NSDictionary *metadata; // @synthesize metadata=_metadata;
@property(retain, nonatomic) id <NSCoding> userInfo; // @synthesize userInfo=_userInfo;
@property(retain, nonatomic) NSString *path; // @synthesize path=_path;
@property(retain, nonatomic) NSString *fileName; // @synthesize fileName=_fileName;
@property(retain, nonatomic) NSArray *assets; // @synthesize assets=_assets;
@property(retain, nonatomic) NSString *albumGUID; // @synthesize albumGUID=_albumGUID;
@property(retain, nonatomic) NSString *ctag; // @synthesize ctag=_ctag;
@property(retain, nonatomic) NSString *GUID; // @synthesize GUID=_GUID;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)mediaAssetType;
- (_Bool)hasVideoAsset;
- (void)setMetadataValue:(id)arg1 forKey:(id)arg2;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)description;
- (id)initWithFileName:(id)arg1 path:(id)arg2;
- (id)MSASPProtocolDictionary;

@end

@interface MSASAssetCollectionChange : NSObject
{
    _Bool _wasDeleted;
    NSString *_GUID;
    NSString *_ctag;
}

@property(nonatomic) _Bool wasDeleted; // @synthesize wasDeleted=_wasDeleted;
@property(retain, nonatomic) NSString *ctag; // @synthesize ctag=_ctag;
@property(retain, nonatomic) NSString *GUID; // @synthesize GUID=_GUID;
- (void).cxx_destruct;
- (id)description;

@end

@interface MSASAssetTransferer : NSObject <MMCSEngineDelegate>
{
    _Bool _hasShutDown;
    int _maxBatchCount;
    int _maxRetryCount;
    id _delegate;
    NSString *_personID;
    MMCSEngine *_engine;
    double _maxMMCSTokenValidityTimeInterval;
    MSAlbumSharingDaemon *_daemon;
    MSASPersonModel *_model;
    MSBackoffManager *_backoffManager;
    NSString *_focusAlbumGUID;
    NSString *_focusAssetCollectionGUID;
    NSObject<OS_dispatch_queue> *_workQueue;
    NSObject<OS_dispatch_queue> *_eventQueue;
}

@property(nonatomic) _Bool hasShutDown; // @synthesize hasShutDown=_hasShutDown;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *eventQueue; // @synthesize eventQueue=_eventQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *workQueue; // @synthesize workQueue=_workQueue;
@property(copy, nonatomic) NSString *focusAssetCollectionGUID; // @synthesize focusAssetCollectionGUID=_focusAssetCollectionGUID;
@property(copy, nonatomic) NSString *focusAlbumGUID; // @synthesize focusAlbumGUID=_focusAlbumGUID;
@property(nonatomic) int maxRetryCount; // @synthesize maxRetryCount=_maxRetryCount;
@property(nonatomic) int maxBatchCount; // @synthesize maxBatchCount=_maxBatchCount;
@property(nonatomic) __weak MSBackoffManager *backoffManager; // @synthesize backoffManager=_backoffManager;
@property(nonatomic) __weak MSASPersonModel *model; // @synthesize model=_model;
@property(nonatomic) __weak MSAlbumSharingDaemon *daemon; // @synthesize daemon=_daemon;
@property(nonatomic) double maxMMCSTokenValidityTimeInterval; // @synthesize maxMMCSTokenValidityTimeInterval=_maxMMCSTokenValidityTimeInterval;
@property(readonly, nonatomic) MMCSEngine *engine; // @synthesize engine=_engine;
@property(copy, nonatomic) NSString *personID; // @synthesize personID=_personID;
@property(nonatomic) __weak id delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)MMCSEngine:(id)arg1 logPerformanceMetrics:(id)arg2;
- (void)MMCSEngine:(id)arg1 logMessage:(id)arg2 logLevel:(int)arg3;
- (_Bool)MMCSEngine:(id)arg1 shouldLogAtLogLevel:(int)arg2;
- (void)didFinishGettingAllAssets;
- (void)MMCSEngine:(id)arg1 didMakeGetProgress:(float)arg2 state:(int)arg3 onAsset:(id)arg4;
- (void)MMCSEngine:(id)arg1 didFinishGettingAsset:(id)arg2 path:(id)arg3 error:(id)arg4;
- (void)didFinishPuttingAllAssets;
- (void)MMCSEngine:(id)arg1 didMakePutProgress:(float)arg2 state:(int)arg3 onAsset:(id)arg4;
- (void)MMCSEngine:(id)arg1 didCreateRequestorContext:(id)arg2 forAssets:(id)arg3;
- (void)MMCSEngine:(id)arg1 didFinishPuttingAsset:(id)arg2 putReceipt:(id)arg3 error:(id)arg4;
- (void)_sendDidIdleNotification;
- (id)_canceledError;
- (id)_MMCSTokenTooOldError;
- (id)_missingMMCSTokenError;
- (id)_missingURLError;
- (id)_pathForPersonID:(id)arg1;
- (double)workQueueMaxMMCSTokenValidityTimeInterval;
- (unsigned long long)workQueueNextItemID;
- (void)workQueueRetryOutstandingActivities;
- (void)retryOutstandingActivities;
- (void)workQueueShutDownCompletionBlock:(CDUnknownBlockType)arg1;
- (void)shutDownCompletionBlock:(CDUnknownBlockType)arg1;
- (void)workQueueCancel;
- (void)cancelCompletionBlock:(CDUnknownBlockType)arg1;
- (void)workQueueStop;
- (void)stopCompletionBlock:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (id)initWithPersonID:(id)arg1 eventQueue:(id)arg2;
- (id)initWithPersonID:(id)arg1;
- (void)_rereadPerformanceLoggingSetting;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSASAssetDownloader : MSASAssetTransferer
{
    _Bool _didEncounterNetworkConditionError;
    _Bool _isDownloadingThumbnails;
    _Bool _isWaitingForFirstDownloadEvent;
    int _state;
    NSMutableArray *_itemsInFlight;
    NSMutableDictionary *_assetToItemInFlightMap;
    NSMutableArray *_finishedAssets;
    NSString *_currentFocusAlbumGUID;
    NSString *_currentFocusAssetCollectionGUID;
    NSString *_objectGUID;
    NSString *_downloadBatchPerfGUID;
}

@property(retain, nonatomic) NSString *downloadBatchPerfGUID; // @synthesize downloadBatchPerfGUID=_downloadBatchPerfGUID;
@property(retain, nonatomic) NSString *objectGUID; // @synthesize objectGUID=_objectGUID;
@property(nonatomic) _Bool isWaitingForFirstDownloadEvent; // @synthesize isWaitingForFirstDownloadEvent=_isWaitingForFirstDownloadEvent;
@property(retain, nonatomic) NSString *currentFocusAssetCollectionGUID; // @synthesize currentFocusAssetCollectionGUID=_currentFocusAssetCollectionGUID;
@property(retain, nonatomic) NSString *currentFocusAlbumGUID; // @synthesize currentFocusAlbumGUID=_currentFocusAlbumGUID;
@property(nonatomic) _Bool isDownloadingThumbnails; // @synthesize isDownloadingThumbnails=_isDownloadingThumbnails;
@property(nonatomic) _Bool didEncounterNetworkConditionError; // @synthesize didEncounterNetworkConditionError=_didEncounterNetworkConditionError;
@property(retain, nonatomic) NSMutableArray *finishedAssets; // @synthesize finishedAssets=_finishedAssets;
@property(retain, nonatomic) NSMutableDictionary *assetToItemInFlightMap; // @synthesize assetToItemInFlightMap=_assetToItemInFlightMap;
@property(retain, nonatomic) NSMutableArray *itemsInFlight; // @synthesize itemsInFlight=_itemsInFlight;
@property(nonatomic) int state; // @synthesize state=_state;
- (void).cxx_destruct;
- (void)didFinishGettingAllAssets;
- (void)MMCSEngine:(id)arg1 didMakeGetProgress:(float)arg2 state:(int)arg3 onAsset:(id)arg4;
- (id)_orphanedAssetError;
- (void)MMCSEngine:(id)arg1 didFinishGettingAsset:(id)arg2 path:(id)arg3 error:(id)arg4;
- (void)didFinishPuttingAllAssets;
- (void)MMCSEngine:(id)arg1 didMakePutProgress:(float)arg2 state:(int)arg3 onAsset:(id)arg4;
- (void)MMCSEngine:(id)arg1 didCreateRequestorContext:(id)arg2 forAssets:(id)arg3;
- (void)MMCSEngine:(id)arg1 didFinishPuttingAsset:(id)arg2 error:(id)arg3;
- (void)_workQueueDidFinishWithItem:(id)arg1 error:(id)arg2;
- (void)_workQueueStopTrackingItem:(id)arg1;
- (void)didEnqueueAsset:(id)arg1 forAlbumGUID:(id)arg2;
- (void)workQueueUnregisterAssets:(id)arg1;
- (void)unregisterAssets:(id)arg1;
- (void)workQueueRegisterAssets:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)registerAssets:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)workQueueDownloadNextBatch;
- (void)_workQueueGoIdle;
- (void)workQueueCancel;
- (void)workQueueShutDownCompletionBlock:(CDUnknownBlockType)arg1;
- (void)workQueueStop;
- (id)workQueueObjectGUID;
- (void)workQueueRetryOutstandingActivities;
- (id)_pathForPersonID:(id)arg1;

// Remaining properties
@property(nonatomic) __weak id <MSASAssetDownloaderDelegate> delegate; // @dynamic delegate;

@end

@interface MSASAssetInfoToReauthForDownload : NSObject
{
    MSAsset *_asset;
    MSASAlbum *_album;
}

@property(retain, nonatomic) MSASAlbum *album; // @synthesize album=_album;
@property(retain, nonatomic) MSAsset *asset; // @synthesize asset=_asset;
- (void).cxx_destruct;

@end

@interface MSASAssetUploader : MSASAssetTransferer
{
    _Bool _didEncounterNetworkConditionError;
    int _state;
    NSMutableArray *_itemsInFlight;
    NSMutableDictionary *_assetCollectionsToItemInFlightMap;
    NSMutableDictionary *_assetToAssetCollectionMap;
    NSMutableArray *_finishedAssetCollections;
    NSMutableSet *_assetCollectionsWithAuthorizationError;
    NSMutableDictionary *_assetCollectionGUIDToRequestorContext;
}

@property(retain, nonatomic) NSMutableDictionary *assetCollectionGUIDToRequestorContext; // @synthesize assetCollectionGUIDToRequestorContext=_assetCollectionGUIDToRequestorContext;
@property(retain, nonatomic) NSMutableSet *assetCollectionsWithAuthorizationError; // @synthesize assetCollectionsWithAuthorizationError=_assetCollectionsWithAuthorizationError;
@property(nonatomic) _Bool didEncounterNetworkConditionError; // @synthesize didEncounterNetworkConditionError=_didEncounterNetworkConditionError;
@property(retain, nonatomic) NSMutableArray *finishedAssetCollections; // @synthesize finishedAssetCollections=_finishedAssetCollections;
@property(retain, nonatomic) NSMutableDictionary *assetToAssetCollectionMap; // @synthesize assetToAssetCollectionMap=_assetToAssetCollectionMap;
@property(retain, nonatomic) NSMutableDictionary *assetCollectionsToItemInFlightMap; // @synthesize assetCollectionsToItemInFlightMap=_assetCollectionsToItemInFlightMap;
@property(retain, nonatomic) NSMutableArray *itemsInFlight; // @synthesize itemsInFlight=_itemsInFlight;
@property(nonatomic) int state; // @synthesize state=_state;
- (void).cxx_destruct;
- (void)didFinishGettingAllAssets;
- (void)MMCSEngine:(id)arg1 didMakeGetProgress:(float)arg2 state:(int)arg3 onAsset:(id)arg4;
- (void)MMCSEngine:(id)arg1 didFinishGettingAsset:(id)arg2 path:(id)arg3 error:(id)arg4;
- (void)didFinishPuttingAllAssets;
- (void)MMCSEngine:(id)arg1 didMakePutProgress:(float)arg2 state:(int)arg3 onAsset:(id)arg4;
- (void)MMCSEngine:(id)arg1 didCreateRequestorContext:(id)arg2 forAssets:(id)arg3;
- (void)MMCSEngine:(id)arg1 didFinishPuttingAsset:(id)arg2 putReceipt:(id)arg3 error:(id)arg4;
- (void)workQueueDidFinishWithItem:(id)arg1 error:(id)arg2;
- (void)workQueueStopTrackingItem:(id)arg1;
- (void)cancelAssetCollections:(id)arg1;
- (void)unregisterAssetCollections:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)unregisterAssetCollections:(id)arg1;
- (void)registerAssetCollections:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)workQueueRegisterAssetCollections:(id)arg1 index:(unsigned long long)arg2 results:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (void)workQueueRegisterAssets:(id)arg1 index:(unsigned long long)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)workQueueCancelAssetCollections:(id)arg1;
- (void)workQueueUploadNextBatch;
- (id)_orphanedAssetCollectionError;
- (void)workQueueCancel;
- (void)workQueueShutDownCompletionBlock:(CDUnknownBlockType)arg1;
- (void)workQueueStop;
- (void)_workQueueStop;
- (void)workQueueGoIdle;
- (void)workQueueRetryOutstandingActivities;
- (id)_pathForPersonID:(id)arg1;

// Remaining properties
@property(nonatomic) __weak id <MSASAssetUploaderDelegate> delegate; // @dynamic delegate;

@end

@interface MSASComment : NSObject
{
    _Bool _isLike;
    _Bool _isCaption;
    _Bool _isBatchComment;
    _Bool _isDeletable;
    _Bool _isMine;
    int _ID;
    NSString *_GUID;
    NSDate *_timestamp;
    NSDate *_clientTimestamp;
    NSString *_personID;
    NSString *_firstName;
    NSString *_lastName;
    NSString *_fullName;
    NSString *_email;
    NSString *_content;
}

+ (_Bool)supportsSecureCoding;
+ (id)comment;
+ (id)MSASPCommentFromProtocolDictionary:(id)arg1;
@property(retain, nonatomic) NSString *content; // @synthesize content=_content;
@property(nonatomic) _Bool isMine; // @synthesize isMine=_isMine;
@property(nonatomic) _Bool isDeletable; // @synthesize isDeletable=_isDeletable;
@property(retain, nonatomic) NSString *email; // @synthesize email=_email;
@property(retain, nonatomic) NSString *fullName; // @synthesize fullName=_fullName;
@property(retain, nonatomic) NSString *lastName; // @synthesize lastName=_lastName;
@property(retain, nonatomic) NSString *firstName; // @synthesize firstName=_firstName;
@property(retain, nonatomic) NSString *personID; // @synthesize personID=_personID;
@property(nonatomic) _Bool isBatchComment; // @synthesize isBatchComment=_isBatchComment;
@property(nonatomic) _Bool isCaption; // @synthesize isCaption=_isCaption;
@property(nonatomic) _Bool isLike; // @synthesize isLike=_isLike;
@property(retain, nonatomic) NSDate *clientTimestamp; // @synthesize clientTimestamp=_clientTimestamp;
@property(retain, nonatomic) NSDate *timestamp; // @synthesize timestamp=_timestamp;
@property(nonatomic) int ID; // @synthesize ID=_ID;
@property(retain, nonatomic) NSString *GUID; // @synthesize GUID=_GUID;
- (void).cxx_destruct;
- (id)description;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)init;

@end

@interface MSASCommentChange : NSObject
{
    int _deletionIndex;
    int _type;
    MSASComment *_comment;
}

@property(nonatomic) int type; // @synthesize type=_type;
@property(nonatomic) int deletionIndex; // @synthesize deletionIndex=_deletionIndex;
@property(retain, nonatomic) MSASComment *comment; // @synthesize comment=_comment;
- (void).cxx_destruct;
- (id)description;

@end

@interface MSASCommentCheckOperation : NSObject
{
    NSString *_albumGUID;
    NSString *_assetCollectionGUID;
}

@property(retain, nonatomic) NSString *assetCollectionGUID; // @synthesize assetCollectionGUID=_assetCollectionGUID;
@property(retain, nonatomic) NSString *albumGUID; // @synthesize albumGUID=_albumGUID;
- (void).cxx_destruct;

@end

@interface MSASModelBase : NSObject
{
    _Bool _dbWasRecreated;
    struct sqlite3 *_db;
    NSString *_personID;
    struct __CFDictionary *_statements;
    NSObject<OS_dispatch_queue> *_statementQueue;
    NSObject<OS_dispatch_queue> *_dbQueue;
}

@property(nonatomic) _Bool dbWasRecreated; // @synthesize dbWasRecreated=_dbWasRecreated;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *dbQueue; // @synthesize dbQueue=_dbQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *statementQueue; // @synthesize statementQueue=_statementQueue;
@property(nonatomic) struct __CFDictionary *statements; // @synthesize statements=_statements;
@property(readonly, nonatomic) NSString *personID; // @synthesize personID=_personID;
@property(readonly, nonatomic) struct sqlite3 *dbQueueDB; // @synthesize dbQueueDB=_db;
- (void).cxx_destruct;
- (void)dbQueueRollbackTransaction;
- (void)dbQueueEndTransaction;
- (void)endTransaction;
- (void)dbQueueBeginTransaction;
- (void)beginTransaction;
- (void)dbQueueDeletePersistentValueWithKey:(id)arg1;
- (void)dbQueueSetPersistentObject:(id)arg1 forKey:(id)arg2;
- (void)dbQueueSetPersistentString:(id)arg1 forKey:(id)arg2;
- (void)dbQueueSetPersistentData:(id)arg1 forKey:(id)arg2;
- (id)dbQueuePersistentObjectForKey:(id)arg1;
- (id)dbQueuePersistentStringForKey:(id)arg1;
- (id)dbQueuePersistentDataForKey:(id)arg1;
- (void)deletePersistentValueWithKey:(id)arg1;
- (void)setPersistentObject:(id)arg1 forKey:(id)arg2;
- (id)persistentObjectForKey:(id)arg1;
- (void)setPersistentString:(id)arg1 forKey:(id)arg2;
- (id)persistentStringForKey:(id)arg1;
- (struct sqlite3_stmt *)statementForString:(id)arg1;
- (void)dealloc;
- (void)shutDownForDestruction:(_Bool)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (_Bool)dbQueueUpgradeFromDatabaseVersion:(int)arg1 currentVersion:(int)arg2;
- (void)dbQueueInitializeDatabasePath:(id)arg1 currentVersion:(int)arg2;
- (struct sqlite3 *)db;
- (id)initWithPersonID:(id)arg1 databasePath:(id)arg2 currentVersion:(int)arg3;

@end

@interface MSASDaemonModel : MSASModelBase
{
}

+ (id)defaultModel;
- (void)clearAllNextActivityDates;
- (void)setNextActivityDate:(id)arg1 forPersonID:(id)arg2;
- (id)nextActivityDateByPersonID;
- (id)earliestNextActivityDate;
- (_Bool)dbQueueUpgradeFromDatabaseVersion:(int)arg1 currentVersion:(int)arg2;
- (id)init;

@end

@interface MSASEnqueuedCommand : NSObject <NSCoding>
{
    NSString *_command;
    NSDictionary *_variantParam;
    NSDictionary *_invariantParam;
}

+ (id)commandwithCommand:(id)arg1 variantParam:(id)arg2 invariantParam:(id)arg3;
+ (id)command;
@property(retain, nonatomic) NSDictionary *invariantParam; // @synthesize invariantParam=_invariantParam;
@property(retain, nonatomic) NSDictionary *variantParam; // @synthesize variantParam=_variantParam;
@property(copy, nonatomic) NSString *command; // @synthesize command=_command;
- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (_Bool)canBeGroupedWithCommand:(id)arg1;
- (id)initWithCommand:(id)arg1 variantParam:(id)arg2 invariantParam:(id)arg3;
- (id)init;

@end

@interface MSASGroupedQueue : NSObject
{
    _Bool _isShuttingDown;
    _Bool _isAssertingBusyAssertion;
    int _maxGroupedCallbackEventBatchCount;
    MSASServerSideModel *_model;
    NSObject<OS_dispatch_queue> *_workQueue;
    NSObject<OS_dispatch_queue> *_memberQueue;
    double _maxGroupedCallbackEventIdleInterval;
    double _maxGroupedCallbackEventStaleness;
    MSTimerGate *_idleTimerGate;
    MSTimerGate *_stalenessTimerGate;
}

@property(nonatomic) _Bool isShuttingDown; // @synthesize isShuttingDown=_isShuttingDown;
@property(retain, nonatomic) MSTimerGate *stalenessTimerGate; // @synthesize stalenessTimerGate=_stalenessTimerGate;
@property(retain, nonatomic) MSTimerGate *idleTimerGate; // @synthesize idleTimerGate=_idleTimerGate;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *memberQueue; // @synthesize memberQueue=_memberQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *workQueue; // @synthesize workQueue=_workQueue;
@property(nonatomic) __weak MSASServerSideModel *model; // @synthesize model=_model;
- (void).cxx_destruct;
- (void)workQueueDidEnqueueSubsequentItem;
- (void)workQueueDidEnqueueFirstItem;
- (void)workQueueClearStalenessTimer;
- (void)workQueueRestartStalenessTimer;
- (void)workQueueClearIdleTimer;
- (void)workQueueRestartIdleTimer;
- (void)workQueueFlushQueue;
- (_Bool)hasEnqueuedItems;
- (void)flushQueueCompletionBlock:(CDUnknownBlockType)arg1;
- (void)shutDownFlush:(_Bool)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)memberQueueSetIsAssertingBusyAssertion:(_Bool)arg1;
- (_Bool)memberQueueIsAssertingBusyAssertion;
@property(readonly, nonatomic) _Bool isAssertingBusyAssertion; // @synthesize isAssertingBusyAssertion=_isAssertingBusyAssertion;
- (void)workQueueDeassertBusyAssertion;
- (void)workQueueAssertBusyAssertion;
- (void)deassertBusyAssertion;
- (void)assertBusyAssertion;
@property(nonatomic) double maxGroupedCallbackEventIdleInterval; // @synthesize maxGroupedCallbackEventIdleInterval=_maxGroupedCallbackEventIdleInterval;
@property(nonatomic) double maxGroupedCallbackEventStaleness; // @synthesize maxGroupedCallbackEventStaleness=_maxGroupedCallbackEventStaleness;
@property(nonatomic) int maxGroupedCallbackEventBatchCount; // @synthesize maxGroupedCallbackEventBatchCount=_maxGroupedCallbackEventBatchCount;
- (void)dealloc;
- (id)init;

@end

@interface MSASSharingRelationship : NSObject <NSCopying>
{
    _Bool _isMine;
    int _state;
    NSString *_GUID;
    NSString *_albumGUID;
    NSString *_email;
    NSArray *_emails;
    NSArray *_phones;
    NSString *_firstName;
    NSString *_lastName;
    NSString *_fullName;
    NSString *_personID;
    NSDate *_subscriptionDate;
}

+ (_Bool)supportsSecureCoding;
+ (id)MSASPSharingRelationshipFromProtocolDictionary:(id)arg1;
@property(nonatomic) _Bool isMine; // @synthesize isMine=_isMine;
@property(nonatomic) int state; // @synthesize state=_state;
@property(retain, nonatomic) NSDate *subscriptionDate; // @synthesize subscriptionDate=_subscriptionDate;
@property(retain, nonatomic) NSString *personID; // @synthesize personID=_personID;
@property(retain, nonatomic) NSString *fullName; // @synthesize fullName=_fullName;
@property(retain, nonatomic) NSString *lastName; // @synthesize lastName=_lastName;
@property(retain, nonatomic) NSString *firstName; // @synthesize firstName=_firstName;
@property(retain, nonatomic) NSArray *phones; // @synthesize phones=_phones;
@property(retain, nonatomic) NSArray *emails; // @synthesize emails=_emails;
@property(retain, nonatomic) NSString *email; // @synthesize email=_email;
@property(retain, nonatomic) NSString *albumGUID; // @synthesize albumGUID=_albumGUID;
@property(retain, nonatomic) NSString *GUID; // @synthesize GUID=_GUID;
- (void).cxx_destruct;
- (id)description;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEqualToSharingRelationship:(id)arg1;
- (id)_fullName;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)init;

@end

@interface MSASInvitation : MSASSharingRelationship
{
}

+ (id)MSASPInvitationFromProtocolDictionary:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface MSASModelEnumerator : NSEnumerator
{
    struct sqlite3 *_db;
    struct sqlite3_stmt *_stmt;
    CDUnknownBlockType _stepBlock;
}

+ (id)enumeratorWithDatabase:(struct sqlite3 *)arg1 query:(id)arg2 stepBlock:(CDUnknownBlockType)arg3;
@property(copy, nonatomic) CDUnknownBlockType stepBlock; // @synthesize stepBlock=_stepBlock;
@property(nonatomic) struct sqlite3_stmt *stmt; // @synthesize stmt=_stmt;
@property(nonatomic) struct sqlite3 *db; // @synthesize db=_db;
- (void).cxx_destruct;
- (id)nextObject;
- (void)dealloc;
- (id)initWithDatabase:(struct sqlite3 *)arg1 query:(id)arg2 stepBlock:(CDUnknownBlockType)arg3;
- (id)init;

@end

@interface MSASPConnectionGate : NSObject
{
    NSError *_error;
}

+ (id)gate;
@property(retain, nonatomic) NSError *error; // @synthesize error=_error;
- (void).cxx_destruct;

@end

@interface MSASPendingChanges : NSObject
{
    NSMutableSet *_pendingAlbumGUIDsWithKeyValueChanges;
    NSMutableSet *_pendingAlbumChanges;
    NSMutableSet *_pendingAlbumGUIDsWithSharingInfoChanges;
    NSMutableDictionary *_pendingAlbumGUIDToAssetCollections;
}

@property(retain, nonatomic) NSMutableDictionary *pendingAlbumGUIDToAssetCollections; // @synthesize pendingAlbumGUIDToAssetCollections=_pendingAlbumGUIDToAssetCollections;
@property(retain, nonatomic) NSMutableSet *pendingAlbumGUIDsWithSharingInfoChanges; // @synthesize pendingAlbumGUIDsWithSharingInfoChanges=_pendingAlbumGUIDsWithSharingInfoChanges;
@property(retain, nonatomic) NSMutableSet *pendingAlbumChanges; // @synthesize pendingAlbumChanges=_pendingAlbumChanges;
@property(retain, nonatomic) NSMutableSet *pendingAlbumGUIDsWithKeyValueChanges; // @synthesize pendingAlbumGUIDsWithKeyValueChanges=_pendingAlbumGUIDsWithKeyValueChanges;
- (void).cxx_destruct;
- (_Bool)hasPendingChanges;
- (void)removePendingSharingInfoChangesForAlbumGUID:(id)arg1;
- (void)removePendingAssetCollection:(id)arg1 forAlbumGUID:(id)arg2;
- (void)addPendingAssetCollectionChanges:(id)arg1 forAlbumGUID:(id)arg2;
- (void)removePendingChangesForAlbumGUID:(id)arg1;
- (void)addPendingChangesForAlbumGUID:(id)arg1;
- (void)removePendingKeyValueChangesForAlbumGUID:(id)arg1;
- (id)initWithSyncedKeyValueChangesForAlbumGUIDS:(id)arg1 albumChanges:(id)arg2 accessControlChangesForAlbumGUIDS:(id)arg3;

@end

@interface MSASPersonInfoManager : NSObject
{
    NSMutableDictionary *_personIDToPersonInfoDictionary;
    NSString *_pathForPersonInfoDictionary;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)sharedManager;
@property(retain, nonatomic) NSString *pathForPersonInfoDictionary; // @synthesize pathForPersonInfoDictionary=_pathForPersonInfoDictionary;
@property(retain, nonatomic) NSMutableDictionary *personIDToPersonInfoDictionary; // @synthesize personIDToPersonInfoDictionary=_personIDToPersonInfoDictionary;
- (void).cxx_destruct;
- (id)emailForPersonID:(id)arg1;
- (id)fullNameForPersonID:(id)arg1;
- (id)lastNameForPersonID:(id)arg1;
- (id)firstNameForPersonID:(id)arg1;
- (_Bool)updateWithSharingRelationship:(id)arg1;
- (void)initWithPath:(id)arg1;

@end

@interface MSASPersonModel : MSASModelBase
{
    _Bool _shouldDownloadEarliestPhotosFirst;
}

@property(nonatomic) _Bool shouldDownloadEarliestPhotosFirst; // @synthesize shouldDownloadEarliestPhotosFirst=_shouldDownloadEarliestPhotosFirst;
- (void)removeAssetCollectionsFromUploadQueue:(id)arg1;
- (void)setErrorCount:(int)arg1 forAssetCollectionInUploadQueue:(id)arg2;
- (id)nextItemsForUploadAlbumGUID:(id)arg1 maxPriority:(int)arg2 maxCount:(int)arg3;
- (id)nextItemsForUploadMaxCount:(int)arg1;
- (id)itemsForUpload;
- (int)assetCollectionsInUploadQueueAlbumGUID:(id)arg1;
- (int)assetCollectionsInUploadQueue;
- (void)enqueueAssetCollectionForUpload:(id)arg1 album:(id)arg2;
- (void)removeAssetsFromDownloadQueue:(id)arg1;
- (void)setInFlightAssets:(id)arg1;
- (void)setErrorCount:(int)arg1 forAssetInDownloadQueue:(id)arg2;
- (int)itemsForDownloadCountFocusAlbumGUID:(id)arg1 focusAssetCollectionGUID:(id)arg2;
- (_Bool)hasItemsForDownloadCountFocusAlbumGUID:(id)arg1 focusAssetCollectionGUID:(id)arg2;
- (id)nextItemsForDownloadFocusAlbumGUID:(id)arg1 focusAssetCollectionGUID:(id)arg2 maxCount:(int)arg3;
- (id)nextItemsForDownloadFocusAlbumGUID:(id)arg1 focusAssetCollectionGUID:(id)arg2 thumbnails:(_Bool)arg3 maxCount:(int)arg4 isInflight:(_Bool)arg5;
- (int)assetsInDownloadQueueAlbumGUID:(id)arg1;
- (int)assetsInDownloadQueue;
- (void)enqueueAssetForDownload:(id)arg1 inAlbumWithGUID:(id)arg2;
- (long long)nextMMCSItemID;
- (_Bool)dbQueueIsGUIDQueued:(id)arg1 inQueue:(id)arg2;
- (void)dbQueueRemoveGUID:(id)arg1 fromQueue:(id)arg2;
- (void)dbQueueSetErrorCount:(int)arg1 forGUID:(id)arg2 inQueue:(id)arg3;
- (int)dbQueueAssetCountAlbumGUID:(id)arg1 inQueue:(id)arg2;
- (void)requeuePendingAssetCollectionsWithAlbumGUID:(id)arg1;
- (void)requeuePendingAssetCollectionGUID:(id)arg1;
- (void)addPendingAssetCollectionGUID:(id)arg1 albumGUID:(id)arg2;
- (_Bool)dbQueueIsAssetCollectionWithGUIDPending:(id)arg1;
- (_Bool)isAssetCollectionWithGUIDPending:(id)arg1;
- (long long)countOfEnqueuedCommands;
- (long long)countOfEnqueuedCommand:(id)arg1;
- (void)purgeCompletionBlock:(CDUnknownBlockType)arg1;
- (void)dbQueueRemoveAllEntriesFromTable:(id)arg1;
- (void)dbQueueRemoveCommandIdentifier:(long long)arg1;
- (void)removeCommandIdentifier:(long long)arg1;
- (void)dbQueueRemoveCommandAtHeadOfQueue;
- (void)setParams:(id)arg1 forCommandWithIdentifier:(long long)arg2;
- (id)commandWithMinimumIdentifier:(long long)arg1 outParams:(id *)arg2 outCommandIdentifier:(long long *)arg3 outPersonID:(id *)arg4 outAlbumGUID:(id *)arg5 outAssetCollectionGUID:(id *)arg6;
- (id)commandAtHeadOfQueueOutParams:(id *)arg1 outCommandIdentifier:(long long *)arg2 outPersonID:(id *)arg3 outAlbumGUID:(id *)arg4 outAssetCollectionGUID:(id *)arg5;
- (id)_commandWithMinimumIdentifier:(id)arg1 outParams:(id *)arg2 outCommandIdentifier:(long long *)arg3 outPersonID:(id *)arg4 outAlbumGUID:(id *)arg5 outAssetCollectionGUID:(id *)arg6;
- (void)dbQueueRequeuePendingCommandsWithAlbumGUID:(id)arg1;
- (void)dbQueueRequeuePendingCommandsWithAssetCollectionGUID:(id)arg1;
- (void)dbQueueRequeuePendingCommandsWithQueryStatement:(struct sqlite3_stmt *)arg1 deleteStatement:(struct sqlite3_stmt *)arg2;
- (void)enqueueCommand:(id)arg1 params:(id)arg2 personID:(id)arg3 albumGUID:(id)arg4 pendingOnAssetCollectionGUID:(id)arg5;
- (void)dbQueueEnqueueCommand:(id)arg1 params:(id)arg2 personID:(id)arg3 albumGUID:(id)arg4 assetCollectionGUID:(id)arg5 sequenceNumber:(long long)arg6;
- (void)enqueueCommandAtHeadOfQueue:(id)arg1 params:(id)arg2 personID:(id)arg3 albumGUID:(id)arg4 assetCollectionGUID:(id)arg5;
- (void)enqueueCommand:(id)arg1 params:(id)arg2 personID:(id)arg3 albumGUID:(id)arg4 assetCollectionGUID:(id)arg5;
- (void)dbQueueEnqueueCommand:(id)arg1 params:(id)arg2 personID:(id)arg3 albumGUID:(id)arg4 assetCollectionGUID:(id)arg5;
- (long long)dbQueueSmallestCommandSequenceNumber;
- (long long)dbQueueNextCommandSequenceNumber;
- (_Bool)dbQueueUpgradeFromDatabaseVersion:(int)arg1 currentVersion:(int)arg2;
- (id)initWithPersonID:(id)arg1;

@end

@interface MSASPersonModelItem : NSObject <NSCopying>
{
    int _errorCount;
    MSASAlbum *_album;
    NSString *_albumGUID;
    id <NSObject> _object;
}

@property(retain, nonatomic) id <NSObject> object; // @synthesize object=_object;
@property(retain, nonatomic) NSString *albumGUID; // @synthesize albumGUID=_albumGUID;
@property(retain, nonatomic) MSASAlbum *album; // @synthesize album=_album;
@property(nonatomic) int errorCount; // @synthesize errorCount=_errorCount;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEqual:(id)arg1;

@end

@interface MSASPhoneInvitations : NSObject <IDSServiceDelegate>
{
    MSASStateMachine *_stateMachine;
    MSASAlbum *_album;
    IDSService *_idsService;
    NSMutableDictionary *_sendMessageIdentifierToPhone;
}

@property(retain, nonatomic) NSMutableDictionary *sendMessageIdentifierToPhone; // @synthesize sendMessageIdentifierToPhone=_sendMessageIdentifierToPhone;
@property(retain, nonatomic) IDSService *idsService; // @synthesize idsService=_idsService;
@property(retain, nonatomic) MSASAlbum *album; // @synthesize album=_album;
@property(retain, nonatomic) MSASStateMachine *stateMachine; // @synthesize stateMachine=_stateMachine;
- (void).cxx_destruct;
- (void)service:(id)arg1 account:(id)arg2 identifier:(id)arg3 didSendWithSuccess:(_Bool)arg4 error:(id)arg5;
- (void)removeSharingRelationships:(id)arg1 forAlbum:(id)arg2;
- (void)addPendingPhoneInvitations:(id)arg1 toOwnedAlbum:(id)arg2 inStateMachin:(id)arg3;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSASProtocol : NSObject <NSURLConnectionDelegate>
{
    _Bool _isShuttingDown;
    MSASPConnectionGate *_gate;
    NSObject<OS_dispatch_queue> *_pendingConnectionsQueue;
    NSObject<OS_dispatch_group> *_pendingConnectionsGroup;
    NSString *_personID;
    NSURL *_baseURL;
    NSString *_serverSideConfigVersion;
    NSString *_headerVersion;
    NSObject<OS_dispatch_queue> *_workQueue;
    NSObject<OS_dispatch_queue> *_memberQueue;
}

@property(retain, nonatomic) NSObject<OS_dispatch_queue> *memberQueue; // @synthesize memberQueue=_memberQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *workQueue; // @synthesize workQueue=_workQueue;
@property(readonly, nonatomic) NSString *headerVersion; // @synthesize headerVersion=_headerVersion;
@property(nonatomic) _Bool isShuttingDown; // @synthesize isShuttingDown=_isShuttingDown;
@property(retain, nonatomic) NSString *serverSideConfigVersion; // @synthesize serverSideConfigVersion=_serverSideConfigVersion;
@property(retain, nonatomic) NSURL *baseURL; // @synthesize baseURL=_baseURL;
@property(readonly, retain, nonatomic) NSString *personID; // @synthesize personID=_personID;
@property(retain, nonatomic) NSObject<OS_dispatch_group> *pendingConnectionsGroup; // @synthesize pendingConnectionsGroup=_pendingConnectionsGroup;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *pendingConnectionsQueue; // @synthesize pendingConnectionsQueue=_pendingConnectionsQueue;
@property(retain, nonatomic) MSASPConnectionGate *gate; // @synthesize gate=_gate;
- (void).cxx_destruct;
- (void)getAlbumURLForAlbumWithGUID:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)getServerSideConfigCompletionBlock:(CDUnknownBlockType)arg1;
- (void)setAlbumSyncedState:(id)arg1 forAlbum:(id)arg2 albumStateCtag:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (void)setAssetCollectionSyncedState:(id)arg1 forAssetCollection:(id)arg2 inAlbum:(id)arg3 assetCollectionStateCtag:(id)arg4 completionBlock:(CDUnknownBlockType)arg5;
- (void)getAlbumSyncedStateForAlbum:(id)arg1 assetCollectionStateBlock:(CDUnknownBlockType)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)getCommentChanges:(id)arg1 inAlbumWithGUID:(id)arg2 albumURLString:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (void)acceptInvitationWithToken:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)unsubscribeFromAlbum:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)subscribeToAlbum:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)getTokensForAssets:(id)arg1 inAlbum:(id)arg2 albumURLString:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (id)_couldNotReauthorizeError;
- (void)getAssetCollections:(id)arg1 inAlbum:(id)arg2 albumURLString:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (void)albumSummaryAlbum:(id)arg1 albumURLString:(id)arg2 resetSync:(_Bool)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (void)getSharingInfoForAlbum:(id)arg1 albumURLString:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)getChangesRootCtag:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)deleteComment:(id)arg1 fromAssetCollection:(id)arg2 inAlbum:(id)arg3 albumURLString:(id)arg4 completionBlock:(CDUnknownBlockType)arg5;
- (void)deleteAssetCollections:(id)arg1 inAlbum:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)deleteAlbum:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)setMultipleContributorsEnabled:(_Bool)arg1 forAlbum:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)setPublicAccessEnabled:(_Bool)arg1 forAlbum:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)addComment:(id)arg1 toAssetCollection:(id)arg2 inAlbum:(id)arg3 albumURLString:(id)arg4 completionBlock:(CDUnknownBlockType)arg5;
- (void)removeSharingRelationships:(id)arg1 fromAlbum:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)addSharingRelationships:(id)arg1 toAlbum:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)sendUploadCompleteSuccessfulAssetCollections:(id)arg1 failedAssetCollections:(id)arg2 album:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (_Bool)responseDict:(id)arg1 containsLimitErrorCode:(id)arg2 outMaxAllowed:(id *)arg3;
- (void)getVideoURL:(id)arg1 forAssetCollectionWithGUID:(id)arg2 inAlbumWithGUID:(id)arg3 albumURLString:(id)arg4 completionBlock:(CDUnknownBlockType)arg5;
- (void)getUploadTokens:(id)arg1 forAssetCollectionWithGUID:(id)arg2 inAlbumWithGUID:(id)arg3 albumURLString:(id)arg4 completionBlock:(CDUnknownBlockType)arg5;
- (void)putAssetCollections:(id)arg1 intoAlbum:(id)arg2 albumURLString:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (void)updateAlbum:(id)arg1 albumURLString:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)createAlbum:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (id)_getAlbumURL;
- (id)_serverSideConfigURL;
- (id)_setAlbumStateURL;
- (id)_setAssetStateURL;
- (id)_albumStateURL;
- (id)_setCommentPositionURL;
- (id)_getCommentsURLWithBaseURL:(id)arg1;
- (id)_unsubscribeURL;
- (id)_subscribeURL;
- (id)_getTokensURLWithBaseURL:(id)arg1;
- (id)_getAssetsURLWithBaseURL:(id)arg1;
- (id)_albumSummaryURLWithBaseURL:(id)arg1;
- (id)_sharingInfoURLWithBaseURL:(id)arg1;
- (id)_getChangesURL;
- (id)_deleteCommentURLWithBaseURL:(id)arg1;
- (id)_deleteAssetsURLWithBaseURL:(id)arg1;
- (id)_deleteURLWithBaseURL:(id)arg1;
- (id)_enableMultipleContributorsURLWithBaseURL:(id)arg1;
- (id)_enablePublicAccessURLWithBaseURL:(id)arg1;
- (id)_addCommentURLWithBaseURL:(id)arg1;
- (id)_unshareURL;
- (id)_shareURL;
- (id)_uploadCompleteURLWithBaseURL:(id)arg1;
- (id)_getVideoURLWithBaseURL:(id)arg1;
- (id)_getUploadTokensURLWithBaseURL:(id)arg1;
- (id)_putAssetsURLWithBaseURL:(id)arg1;
- (id)_updateAlbumURLWithBaseURL:(id)arg1;
- (id)_createAlbumURL;
- (id)errorFromStandardProcessingOnResponse:(id)arg1 responseObject:(id)arg2 checkServerSideConfigVersion:(_Bool)arg3 error:(id)arg4 body:(id)arg5;
- (id)HTTPErrorWithStatusCode:(long long)arg1;
- (void)sendURLRequest:(id)arg1 method:(id)arg2 bodyObj:(id)arg3 checkServerSideConfigVersion:(_Bool)arg4 completionBlock:(CDUnknownBlockType)arg5;
- (void)sendURLRequest:(id)arg1 bodyObj:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (CDUnknownBlockType)stopHandlerBlock;
- (void)dealloc;
- (void)stopCompletionBlock:(CDUnknownBlockType)arg1;
- (void)shutDownCompletionBlock:(CDUnknownBlockType)arg1;
- (id)stoppingError;
- (id)shutDownError;
- (id)initWithPersonID:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSASServerSideModel : MSASModelBase <MSASModel, MSASStateMachineDelegate>
{
    MSASStateMachine *_counterpartInstance;
    MSAlbumSharingDaemon *_daemon;
    NSCountedSet *_observers;
    NSObject<OS_dispatch_queue> *_eventQueue;
    MSASServerSideModelGroupedCommandQueue *_commandQueue;
    NSObject<OS_dispatch_queue> *_memberQueue;
    MSASPendingChanges *_pendingChanges;
}

@property(retain, nonatomic) MSASPendingChanges *pendingChanges; // @synthesize pendingChanges=_pendingChanges;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *memberQueue; // @synthesize memberQueue=_memberQueue;
@property(retain, nonatomic) MSASServerSideModelGroupedCommandQueue *commandQueue; // @synthesize commandQueue=_commandQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *eventQueue; // @synthesize eventQueue=_eventQueue;
@property(retain, nonatomic) NSCountedSet *observers; // @synthesize observers=_observers;
@property(nonatomic) __weak MSAlbumSharingDaemon *daemon; // @synthesize daemon=_daemon;
@property(nonatomic) MSASStateMachine *MSASCounterpartInstance; // @synthesize MSASCounterpartInstance=_counterpartInstance;
- (void).cxx_destruct;
- (_Bool)errorIsCancellation:(id)arg1;
- (void)MSASStateMachine:(id)arg1 didFinishAddingComment:(id)arg2 toAssetCollection:(id)arg3 inAlbum:(id)arg4 info:(id)arg5 error:(id)arg6;
- (void)MSASStateMachine:(id)arg1 didFinishRemovingSharingRelationship:(id)arg2 fromOwnedAlbum:(id)arg3 info:(id)arg4 error:(id)arg5;
- (void)MSASStateMachine:(id)arg1 didFinishSendingInvitationByPhone:(id)arg2 toOwnedAlbum:(id)arg3 info:(id)arg4 error:(id)arg5;
- (void)MSASStateMachine:(id)arg1 didFinishAddingSharingRelationships:(id)arg2 toOwnedAlbum:(id)arg3 info:(id)arg4 error:(id)arg5;
- (void)MSASStateMachine:(id)arg1 didFinishAddingAssetCollection:(id)arg2 toAlbum:(id)arg3 info:(id)arg4 error:(id)arg5;
- (void)MSASStateMachine:(id)arg1 didRequestAssetsForAddingAssetCollections:(id)arg2 inAlbum:(id)arg3 specifications:(id)arg4 info:(id)arg5;
- (void)MSASStateMachine:(id)arg1 didFinishUpdatingAlbum:(id)arg2 info:(id)arg3 error:(id)arg4;
- (void)MSASStateMachine:(id)arg1 didFinishCreatingAlbum:(id)arg2 info:(id)arg3 error:(id)arg4;
- (void)MSASStateMachine:(id)arg1 didFinishDeletingComment:(id)arg2 inAssetCollection:(id)arg3 inAlbum:(id)arg4 info:(id)arg5 error:(id)arg6;
- (void)MSASStateMachine:(id)arg1 didFinishDeletingAssetCollection:(id)arg2 inAlbum:(id)arg3 info:(id)arg4 error:(id)arg5;
- (void)MSASStateMachine:(id)arg1 didFinishDeletingAlbum:(id)arg2 info:(id)arg3 error:(id)arg4;
- (_Bool)MSASStateMachine:(id)arg1 didQueryIsAssetCollectionWithGUIDInModel:(id)arg2;
- (id)MSASStateMachineDidRequestAssetCollectionStateCtagForAssetCollectionWithGUID:(id)arg1 info:(id)arg2;
- (id)MSASStateMachineDidRequestAlbumWithGUID:(id)arg1;
- (id)MSASStateMachineDidRequestAlbumURLStringForAlbumWithGUID:(id)arg1 info:(id)arg2;
- (id)MSASStateMachineDidRequestAlbumStateCtagForAlbumWithGUID:(id)arg1 info:(id)arg2;
- (void)MSASStateMachine:(id)arg1 didFinishSettingSyncedStateForAssetCollection:(id)arg2 inAlbum:(id)arg3 assetStateCtag:(id)arg4 info:(id)arg5 error:(id)arg6;
- (void)MSASStateMachine:(id)arg1 didFinishSettingSyncedStateForAlbum:(id)arg2 info:(id)arg3 error:(id)arg4 newAlbumStateCtag:(id)arg5;
- (void)MSASStateMachine:(id)arg1 didFinishCheckingForAlbumSyncedStateChangesInAlbum:(id)arg2 info:(id)arg3 error:(id)arg4 newAlbumStateCtag:(id)arg5;
- (void)MSASStateMachine:(id)arg1 didFindAlbumSyncedState:(id)arg2 forAlbum:(id)arg3 info:(id)arg4;
- (void)MSASStateMachine:(id)arg1 didFindAssetCollectionSyncedState:(id)arg2 forAssetCollectionGUID:(id)arg3 inAlbum:(id)arg4 assetCollectionStateCtag:(id)arg5 info:(id)arg6;
- (void)MSASStateMachine:(id)arg1 willCheckForAlbumSyncedStateChangesInAlbum:(id)arg2 info:(id)arg3;
- (void)MSASStateMachine:(id)arg1 didFinishCheckingForCommentChangesInAssetCollectionWithGUID:(id)arg2 largestCommentID:(int)arg3 info:(id)arg4 error:(id)arg5;
- (void)MSASStateMachine:(id)arg1 didFindCommentChanges:(id)arg2 inAssetCollectionWithGUID:(id)arg3 inAlbumWithGUID:(id)arg4 info:(id)arg5;
- (void)MSASStateMachine:(id)arg1 didFinishRetrievingAsset:(id)arg2 inAlbum:(id)arg3 error:(id)arg4;
- (void)MSASStateMachine:(id)arg1 didFinishEnqueueingAssetsForDownload:(id)arg2 inAlbumWithGUID:(id)arg3;
- (void)MSASStateMachine:(id)arg1 didFinishUnsubscribingFromAlbum:(id)arg2 info:(id)arg3 error:(id)arg4;
- (void)MSASStateMachine:(id)arg1 didFinishSubscribingToAlbum:(id)arg2 info:(id)arg3 error:(id)arg4;
- (void)MSASStateMachine:(id)arg1 didFinishUpdatingAssetCollections:(id)arg2 inAlbum:(id)arg3 info:(id)arg4 error:(id)arg5;
- (void)MSASStateMachine:(id)arg1 willUpdateAssetCollections:(id)arg2 inAlbum:(id)arg3 info:(id)arg4;
- (void)MSASStateMachine:(id)arg1 didFireScheduledEvent:(id)arg2 forAssetCollectionGUID:(id)arg3 albumGUID:(id)arg4 info:(id)arg5;
- (void)MSASStateMachine:(id)arg1 didFinishCheckingForUpdatesInAlbums:(id)arg2 info:(id)arg3;
- (void)MSASStateMachine:(id)arg1 didFinishCheckingForUpdatesInAlbum:(id)arg2 info:(id)arg3 error:(id)arg4;
- (void)MSASStateMachine:(id)arg1 didFindChangesInAlbum:(id)arg2 info:(id)arg3 error:(id)arg4;
- (void)MSASStateMachine:(id)arg1 didFindAssetCollectionChanges:(id)arg2 forAlbum:(id)arg3 info:(id)arg4;
- (void)MSASStateMachine:(id)arg1 willCheckForUpdatesInAlbum:(id)arg2 info:(id)arg3;
- (void)MSASStateMachine:(id)arg1 didFinishGettingAccessControls:(id)arg2 forAlbum:(id)arg3 info:(id)arg4 error:(id)arg5;
- (void)MSASStateMachine:(id)arg1 didFinishCheckingForChangesInfo:(id)arg2 error:(id)arg3;
- (void)MSASStateMachine:(id)arg1 didFindSyncedKeyValueChangesForAlbumGUIDS:(id)arg2 info:(id)arg3;
- (void)MSASStateMachine:(id)arg1 didFindAccessControlChangesForAlbumGUIDS:(id)arg2 info:(id)arg3;
- (void)MSASStateMachine:(id)arg1 didFindSyncedKeyValueChangesForAlbumGUIDS:(id)arg2 albumChanges:(id)arg3 accessControlChangesForAlbumGUIDS:(id)arg4 info:(id)arg5;
- (void)MSASStateMachine:(id)arg1 didFindNewURLString:(id)arg2 forAlbumWithGUID:(id)arg3 info:(id)arg4;
- (void)MSASStateMachine:(id)arg1 didFindAlbumChanges:(id)arg2 info:(id)arg3;
- (void)MSASStateMachineDidFindGlobalResetSync:(id)arg1 info:(id)arg2;
- (void)MSASStateMachineDidStart:(id)arg1;
- (id)_protocolErrorForUnderlyingError:(id)arg1;
- (id)_invalidAssetCollectionGUIDErrorwithGUID:(id)arg1;
- (id)_invalidAccessControlGUIDErrorwithGUID:(id)arg1;
- (id)_invalidInvitationGUIDErrorWithGUID:(id)arg1;
- (id)dbQueueLookupOrCreateCommentWithGUID:(id)arg1 outAssetCollection:(id *)arg2 outAlbum:(id *)arg3;
- (id)dbQueueLookupOrCreateAssetCollectionWithGUID:(id)arg1 outAlbum:(id *)arg2;
- (id)dbQueueLookupOrCreateAlbumWithGUID:(id)arg1;
- (void)eventQueuePerformBlockOnObservers:(CDUnknownBlockType)arg1;
- (id)earliestUnviewedAssetCollectionGUIDInAlbumWithGUID:(id)arg1;
- (id)lastViewedCommentDateForAssetCollectionWithGUID:(id)arg1;
- (void)dbQueueFlushAllPendingCommentCheckOperations;
- (void)flushAllPendingCommentCheckOperations;
- (void)dbQueueAddCommentCheckOperation:(id)arg1;
- (id)dbQueuePendingCommentCheckOperations;
- (void)dbQueueDeleteAllPendingCommentCheckOperations;
- (int)dbQueueUnviewedAssetCollectionCountForAlbumWithGUID:(id)arg1;
- (int)unviewedAssetCollectionCountForAlbumWithGUID:(id)arg1;
- (_Bool)isAssetCollectionWithGUIDMarkedAsUnviewed:(id)arg1;
- (int)dbQueueUnviewedAlbumCount;
- (int)unviewedAlbumCount;
- (_Bool)isAlbumWithGUIDMarkedAsUnviewed:(id)arg1;
- (void)eventQueueNotifyObserversOfUpdatedUnviewedCountInAlbum:(id)arg1 unviewedCount:(int)arg2 info:(id)arg3;
- (_Bool)dbQueueCheckToClearUnviewedStateOnAlbumWithGUID:(id)arg1 info:(id)arg2;
- (_Bool)dbQueueCheckToClearUnviewedStateOnAssetCollectionWithGUID:(id)arg1 info:(id)arg2;
- (void)dbQueueSetUnviewedState:(_Bool)arg1 onAlbumWithGUID:(id)arg2 info:(id)arg3;
- (void)dbQueueSetUnviewedState:(_Bool)arg1 onAssetCollectionWithGUID:(id)arg2 info:(id)arg3;
- (int)dbQueueCountOfUnviewedAssetCollectionsInAlbumWithGUID:(id)arg1;
- (id)dbQueueMaximumPhotoNumberForAlbumWithGUID:(id)arg1;
- (void)dbQueueDeleteAllAssetCollectionMetadataForAssetCollectionWithGUID:(id)arg1 info:(id)arg2;
- (void)dbQueueDeleteAssetCollectionMetadataAssetCollectionGUID:(id)arg1 key:(id)arg2 info:(id)arg3;
- (void)dbQueueSetAssetCollectionMetadataAssetCollectionGUID:(id)arg1 key:(id)arg2 value:(id)arg3 info:(id)arg4;
- (_Bool)dbQueueAssetCollectionMetadataWithAssetCollectionGUID:(id)arg1 key:(id)arg2 outValue:(id *)arg3;
- (void)dbQueueDeleteAllAlbumMetadataForAlbumWithGUID:(id)arg1 info:(id)arg2;
- (void)dbQueueDeleteAlbumMetadataAlbumGUID:(id)arg1 key:(id)arg2 info:(id)arg3;
- (void)dbQueueSetAlbumMetadataAlbumGUID:(id)arg1 key:(id)arg2 value:(id)arg3 info:(id)arg4;
- (_Bool)dbQueueAlbumMetadataWithAlbumGUID:(id)arg1 key:(id)arg2 outValue:(id *)arg3;
- (_Bool)dbQueueAssetCollectionContainsCommentsFromMeAssetCollectionGUID:(id)arg1;
- (id)dbQueueMaximumCommentIDForAssetCollectionWithGUID:(id)arg1;
- (void)dbQueueDeleteCommentWithGUID:(id)arg1 info:(id)arg2;
- (void)dbQueueSetComment:(id)arg1 forAssetCollectionWithGUID:(id)arg2 info:(id)arg3;
- (_Bool)dbQueueCommentWithID:(int)arg1 assetCollectionGUID:(id)arg2 outObject:(id *)arg3 outGUID:(id *)arg4 outTimestamp:(id *)arg5 outIsCaption:(_Bool *)arg6 outUserInfoData:(id *)arg7;
- (_Bool)dbQueueCommentWithGUID:(id)arg1 outObject:(id *)arg2 outID:(unsigned long long *)arg3 outTimestamp:(id *)arg4 outAssetCollectionGUID:(id *)arg5 outIsCaption:(_Bool *)arg6 outUserInfoData:(id *)arg7;
- (void)dbQueueDeleteAssetCollectionWithGUID:(id)arg1 info:(id)arg2;
- (void)dbQueueSetAssetCollection:(id)arg1 inAlbumWithGUID:(id)arg2 info:(id)arg3;
- (_Bool)dbQueueAssetCollectionWithGUID:(id)arg1 outObject:(id *)arg2 outCtag:(id *)arg3 outAlbumGUID:(id *)arg4 outBatchDate:(id *)arg5 outPhotoDate:(id *)arg6 outPhotoNumber:(long long *)arg7 outUserInfoData:(id *)arg8;
- (void)dbQueueDeleteInvitationForAlbumWithGUID:(id)arg1 info:(id)arg2;
- (void)dbQueueDeleteInvitationWithGUID:(id)arg1 info:(id)arg2;
- (void)dbQueueSetInvitation:(id)arg1 info:(id)arg2;
- (_Bool)dbQueueInvitationWithAlbumGUID:(id)arg1 outObject:(id *)arg2 outInvitationGUID:(id *)arg3 outEmail:(id *)arg4 outUserInfoData:(id *)arg5;
- (_Bool)dbQueueInvitationWithGUID:(id)arg1 outObject:(id *)arg2 outAlbumGUID:(id *)arg3 outEmail:(id *)arg4 outUserInfoData:(id *)arg5;
- (void)dbQueueDeleteAccessControlWithGUID:(id)arg1 info:(id)arg2;
- (void)dbQueueSetAccessControl:(id)arg1 info:(id)arg2;
- (_Bool)dbQueueAccessControlWithGUID:(id)arg1 outObject:(id *)arg2 outAlbumGUID:(id *)arg3 outEmail:(id *)arg4 outUserInfoData:(id *)arg5;
- (void)dbQueueDeleteAlbumWithGUID:(id)arg1 info:(id)arg2;
- (void)dbQueueUpdateAlbumCtag:(id)arg1;
- (void)dbQueueSetAlbum:(id)arg1 info:(id)arg2;
- (_Bool)dbQueueAlbumWithGUID:(id)arg1 outObject:(id *)arg2 outName:(id *)arg3 outCtag:(id *)arg4 outForeignCtag:(id *)arg5 outURLString:(id *)arg6 outUserInfoData:(id *)arg7;
- (id)focusAssetCollectionGUID;
- (void)setFocusAssetCollectionGUID:(id)arg1;
- (void)setFocusAlbumGUID:(id)arg1;
- (id)serverSideConfiguration;
- (int)assetsInDownloadQueueCount;
- (void)retrieveAssetsFromAssetCollectionsWithGUIDs:(id)arg1 assetTypeFlags:(int)arg2;
- (void)retrieveAssets:(id)arg1 inAlbumWithGUID:(id)arg2;
- (void)forgetEverythingInfo:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)forgetEverythingInfo:(id)arg1;
- (void)forgetEverything;
- (void)deleteCommentWithGUID:(id)arg1 info:(id)arg2;
- (void)deleteCommentWithGUID:(id)arg1;
- (void)addComments:(id)arg1 toAssetCollectionWithGUID:(id)arg2 info:(id)arg3;
- (void)addComments:(id)arg1 toAssetCollectionWithGUID:(id)arg2;
- (void)markCommentsForAssetCollectionWithGUID:(id)arg1 asViewedWithLastViewedDate:(id)arg2 info:(id)arg3;
- (void)markCommentsForAssetCollectionWithGUID:(id)arg1 asViewedWithLastViewedDate:(id)arg2;
- (void)deleteAssetCollectionsWithGUIDs:(id)arg1;
- (void)deleteAssetCollectionWithGUID:(id)arg1 info:(id)arg2;
- (void)deleteAssetCollectionWithGUID:(id)arg1;
- (void)addAssetCollections:(id)arg1 toAlbumWithGUID:(id)arg2 info:(id)arg3;
- (void)addAssetCollections:(id)arg1 toAlbumWithGUID:(id)arg2;
- (void)setMultipleContributorsEnabled:(_Bool)arg1 forAlbumWithGUID:(id)arg2 info:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (void)setMultipleContributorsEnabled:(_Bool)arg1 forAlbumWithGUID:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)setPublicAccessEnabled:(_Bool)arg1 forAlbumWithGUID:(id)arg2 info:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (void)setPublicAccessEnabled:(_Bool)arg1 forAlbumWithGUID:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)removeAccessControlEntryWithGUID:(id)arg1 info:(id)arg2;
- (void)removeAccessControlEntryWithGUID:(id)arg1;
- (void)addAccessControlEntries:(id)arg1 toAlbumWithGUID:(id)arg2 info:(id)arg3;
- (void)addAccessControlEntries:(id)arg1 toAlbumWithGUID:(id)arg2;
- (void)rejectInvitationWithGUID:(id)arg1 info:(id)arg2;
- (void)rejectInvitationWithGUID:(id)arg1;
- (void)acceptInvitationWithGUID:(id)arg1 info:(id)arg2;
- (void)acceptInvitationWithGUID:(id)arg1;
- (void)acceptInvitationWithToken:(id)arg1 info:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)acceptInvitationWithToken:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)unsubscribeFromAlbumWithGUID:(id)arg1 info:(id)arg2;
- (void)unsubscribeFromAlbumWithGUID:(id)arg1;
- (void)subscribeToAlbumWithGUID:(id)arg1 info:(id)arg2;
- (void)subscribeToAlbumWithGUID:(id)arg1;
- (void)markAlbumGUIDAsViewed:(id)arg1 moveLastViewedAssetCollectionMarker:(_Bool)arg2 info:(id)arg3;
- (void)markAlbumGUIDAsViewed:(id)arg1 info:(id)arg2;
- (void)markAlbumGUIDAsViewed:(id)arg1;
- (void)deleteAlbumWithGUID:(id)arg1 info:(id)arg2;
- (void)deleteAlbumWithGUID:(id)arg1;
- (void)modifyAlbumMetadata:(id)arg1 info:(id)arg2;
- (void)modifyAlbumMetadata:(id)arg1;
- (void)addAlbum:(id)arg1 info:(id)arg2;
- (void)addAlbum:(id)arg1;
- (void)refreshAccessControlListForAlbumWithGUID:(id)arg1 info:(id)arg2;
- (void)refreshAccessControlListForAlbumWithGUID:(id)arg1;
- (void)refreshCommentsForAssetCollectionWithGUID:(id)arg1 resetSync:(_Bool)arg2 info:(id)arg3;
- (void)refreshCommentsForAssetCollectionWithGUID:(id)arg1 resetSync:(_Bool)arg2;
- (void)refreshContentOfAlbumWithGUID:(id)arg1 resetSync:(_Bool)arg2 info:(id)arg3;
- (void)refreshContentOfAlbumWithGUID:(id)arg1 resetSync:(_Bool)arg2;
- (void)refreshResetSync:(_Bool)arg1 info:(id)arg2;
- (void)refreshResetSync:(_Bool)arg1;
- (void)_reconstruct;
- (void)reconstruct;
- (void)MSASStateMachineDidUpdateServerCommunicationBackoffDate:(id)arg1;
- (id)serverCommunicationBackoffDate;
- (id)userInfoForCommentWithGUID:(id)arg1;
- (void)setUserInfo:(id)arg1 forCommentWithGUID:(id)arg2;
- (id)userInfoForInvitationWithGUID:(id)arg1;
- (void)setUserInfo:(id)arg1 forInvitationWithGUID:(id)arg2;
- (id)userInfoForAccessControlWithGUID:(id)arg1;
- (void)setUserInfo:(id)arg1 forAccessControlWithGUID:(id)arg2;
- (id)userInfoForAssetCollectionWithGUID:(id)arg1;
- (void)setUserInfo:(id)arg1 forAssetCollectionWithGUID:(id)arg2;
- (id)userInfoForAlbumWithGUID:(id)arg1;
- (void)setUserInfo:(id)arg1 forAlbumWithGUID:(id)arg2;
- (id)captionForAssetCollectionWithGUID:(id)arg1;
- (id)commentWithGUID:(id)arg1;
- (id)dbQueueCommentsForAssetCollectionWithGUID:(id)arg1;
- (id)commentsForAssetCollectionWithGUID:(id)arg1;
- (id)assetCollectionWithGUID:(id)arg1;
- (id)dbQueueAssetCollectionGUIDsInAlbumWithGUID:(id)arg1;
- (id)assetCollectionGUIDsInAlbumWithGUID:(id)arg1;
- (id)assetCollectionsInAlbumWithGUID:(id)arg1;
- (void)videoURLsForAssetCollectionWithGUID:(id)arg1 forMediaAssetType:(unsigned long long)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)videoURLForAssetCollectionWithGUID:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (id)isPublicAccessEnabledForAlbumWithGUID:(id)arg1;
- (id)invitationWithGUID:(id)arg1;
- (id)dbQueueInvitationForAlbumWithGUID:(id)arg1;
- (id)invitationForAlbumWithGUID:(id)arg1;
- (id)invitationGUIDs;
- (id)invitations;
- (id)accessControlWithGUID:(id)arg1;
- (id)dbQueueAccessControlGUIDsForAlbumWithGUID:(id)arg1;
- (id)accessControlGUIDsForAlbumWithGUID:(id)arg1;
- (id)dbQueueAccessControlsForAlbumWithGUID:(id)arg1;
- (id)accessControlsForAlbumWithGUID:(id)arg1;
- (id)albumWithGUID:(id)arg1;
- (id)dbQueueAlbumGUIDs;
- (id)albumGUIDs;
- (id)albums;
- (void)removeObserver:(id)arg1;
- (void)addObserver:(id)arg1;
- (_Bool)hasEnqueuedActivities;
- (_Bool)hasCommandsInGroupedCommandQueue;
- (void)shutDownForDestruction:(_Bool)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)shutDown;
- (void)dealloc;
- (void)cancel;
- (void)start;
- (_Bool)dbQueueUpgradeFromDatabaseVersion:(int)arg1 currentVersion:(int)arg2;
@property(nonatomic) double maxGroupedCallbackEventIdleInterval;
@property(nonatomic) double maxGroupedCallbackEventStaleness;
@property(nonatomic) int maxGroupedCallbackEventBatchCount;
- (id)initWithPersonID:(id)arg1 databasePath:(id)arg2 eventQueue:(id)arg3;
- (id)initWithPersonID:(id)arg1 databasePath:(id)arg2;
- (void)releaseBusy;
- (void)retainBusy;
- (id)initWithPersonID:(id)arg1;
@property(readonly, nonatomic) MSASStateMachine *stateMachine;
- (void)performBlockOnObservers:(CDUnknownBlockType)arg1;
- (void)removeCommandsUpToCommandIndex:(long long)arg1;
- (id)nextCommandGroupMaxCount:(int)arg1 outCommand:(id *)arg2 outLastCommandIndex:(long long *)arg3;
- (int)commandCount;
- (void)enqueueCommand:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, retain, nonatomic) NSString *personID;
@property(readonly) Class superclass;

@end

@interface MSASServerSideModelGroupedCommandQueue : MSASGroupedQueue
{
    MSASEnqueuedCommand *_lastEnqueuedCommand;
}

+ (CDUnknownBlockType)calloutBlockForCommand:(id)arg1;
@property(retain, nonatomic) MSASEnqueuedCommand *lastEnqueuedCommand; // @synthesize lastEnqueuedCommand=_lastEnqueuedCommand;
- (void).cxx_destruct;
- (void)MSASModel:(id)arg1 didDeleteComment:(id)arg2 forAssetCollection:(id)arg3 inAlbum:(id)arg4 info:(id)arg5;
- (void)MSASModel:(id)arg1 didFindNewComment:(id)arg2 forAssetCollection:(id)arg3 inAlbum:(id)arg4 info:(id)arg5;
- (void)MSASModel:(id)arg1 didFindDeletedInvitation:(id)arg2 info:(id)arg3;
- (void)MSASModel:(id)arg1 didFindNewInvitation:(id)arg2 info:(id)arg3;
- (void)MSASModel:(id)arg1 didFindDeletedAccessControl:(id)arg2 inAlbum:(id)arg3 info:(id)arg4;
- (void)MSASModel:(id)arg1 didFindNewAccessControl:(id)arg2 inAlbum:(id)arg3 info:(id)arg4;
- (void)MSASModel:(id)arg1 didFindDeletedAssetCollection:(id)arg2 inAlbum:(id)arg3 info:(id)arg4;
- (void)MSASModel:(id)arg1 didFindNewAssetCollection:(id)arg2 inAlbum:(id)arg3 info:(id)arg4;
- (void)MSASModel:(id)arg1 didFindDeletedAlbum:(id)arg2 info:(id)arg3;
- (void)MSASModel:(id)arg1 didFindNewAlbum:(id)arg2 info:(id)arg3;
- (void)workQueueEnqueueCommand:(id)arg1 variantParam:(id)arg2 invariantParam:(id)arg3;
- (void)workQueueFlushQueue;
- (void)flushQueue;
- (_Bool)hasEnqueuedItems;

@end

@interface MSASStateMachine : NSObject <MSBackoffManagerDelegate, MSASAssetUploaderDelegate, MSASAssetDownloaderDelegate>
{
    int _commandState;
    MSASPersonModel *_model;
    NSString *_currentCommand;
    long long _currentCommandID;
    NSDictionary *_currentCommandParams;
    MSBackoffManager *_metadataBackoffManager;
    MSBackoffManager *_MMCSBackoffManager;
    MSASAssetUploader *_assetUploader;
    MSASAssetDownloader *_assetDownloader;
    _Bool _isRetryingOutstandingActivities;
    _Bool _hasShutDown;
    int _maxMetadataRetryCount;
    MSAlbumSharingDaemon *_daemon;
    NSString *_personID;
    id _delegate;
    NSDictionary *_serverSideConfiguration;
    NSString *_serverSideConfigurationVersion;
    NSString *_focusAlbumGUID;
    NSString *_focusAssetCollectionGUID;
    NSMutableArray *_assetInfoToReauthForDownload;
    CDUnknownBlockType _stopHandlerBlock;
    MSASProtocol *_protocol;
    MSASPhoneInvitations *_phoneInvitations;
    MSImageScalingSpecification *_derivativeImageScalingSpecification;
    MSImageScalingSpecification *_thumbnailImageScalingSpecification;
    NSArray *_derivativeSpecifications;
    NSDictionary *_metadataBackoffManagerParameters;
    NSDictionary *_MMCSBackoffManagerParameters;
    NSObject<OS_dispatch_queue> *_workQueue;
    NSObject<OS_dispatch_queue> *_eventQueue;
    NSObject<OS_dispatch_queue> *_serverSideConfigQueue;
    NSObject<OS_dispatch_queue> *_memberQueue;
    CDUnknownBlockType _postCommandCompletionBlock;
}

@property(copy, nonatomic) CDUnknownBlockType postCommandCompletionBlock; // @synthesize postCommandCompletionBlock=_postCommandCompletionBlock;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *memberQueue; // @synthesize memberQueue=_memberQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *serverSideConfigQueue; // @synthesize serverSideConfigQueue=_serverSideConfigQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *eventQueue; // @synthesize eventQueue=_eventQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *workQueue; // @synthesize workQueue=_workQueue;
@property(retain, nonatomic) NSDictionary *MMCSBackoffManagerParameters; // @synthesize MMCSBackoffManagerParameters=_MMCSBackoffManagerParameters;
@property(retain, nonatomic) NSDictionary *metadataBackoffManagerParameters; // @synthesize metadataBackoffManagerParameters=_metadataBackoffManagerParameters;
@property(nonatomic) _Bool hasShutDown; // @synthesize hasShutDown=_hasShutDown;
@property(readonly, retain, nonatomic) NSArray *derivativeSpecifications; // @synthesize derivativeSpecifications=_derivativeSpecifications;
@property(readonly, retain, nonatomic) MSImageScalingSpecification *thumbnailImageScalingSpecification; // @synthesize thumbnailImageScalingSpecification=_thumbnailImageScalingSpecification;
@property(readonly, retain, nonatomic) MSImageScalingSpecification *derivativeImageScalingSpecification; // @synthesize derivativeImageScalingSpecification=_derivativeImageScalingSpecification;
@property(retain, nonatomic) MSASPhoneInvitations *phoneInvitations; // @synthesize phoneInvitations=_phoneInvitations;
@property(retain, nonatomic) MSASProtocol *protocol; // @synthesize protocol=_protocol;
@property(copy, nonatomic, setter=_setStopHandlerBlock:) CDUnknownBlockType _stopHandlerBlock; // @synthesize _stopHandlerBlock;
@property(retain, nonatomic, setter=_setAssetInfoToReauthForDownload:) NSMutableArray *_assetInfoToReauthForDownload; // @synthesize _assetInfoToReauthForDownload;
@property(nonatomic) _Bool isRetryingOutstandingActivities; // @synthesize isRetryingOutstandingActivities=_isRetryingOutstandingActivities;
@property(retain, nonatomic) NSString *focusAssetCollectionGUID; // @synthesize focusAssetCollectionGUID=_focusAssetCollectionGUID;
@property(retain, nonatomic) NSString *focusAlbumGUID; // @synthesize focusAlbumGUID=_focusAlbumGUID;
@property(nonatomic) int maxMetadataRetryCount; // @synthesize maxMetadataRetryCount=_maxMetadataRetryCount;
@property(nonatomic) __weak id delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) NSString *personID; // @synthesize personID=_personID;
@property(nonatomic) __weak MSAlbumSharingDaemon *daemon; // @synthesize daemon=_daemon;
- (void).cxx_destruct;
- (void)MSASAssetDownloaderDidFinishBatch:(id)arg1;
- (void)_sendReauthorizeAssetsForDownloadDisposition:(int)arg1 params:(id)arg2;
- (void)workQueueScheduleReauthForAssets:(id)arg1 inAlbum:(id)arg2;
- (void)MSASAssetDownloader:(id)arg1 didFinishDownloadingAsset:(id)arg2 inAlbumGUID:(id)arg3 error:(id)arg4;
- (void)MSASAssetDownloader:(id)arg1 willBeginBatchCount:(unsigned long long)arg2;
- (void)retrieveAssets:(id)arg1 inAlbumWithGUID:(id)arg2;
- (void)MSASAssetUploader:(id)arg1 didFinishUploadingAssetCollection:(id)arg2 intoAlbum:(id)arg3 error:(id)arg4;
- (void)_deleteAssetFilesInAssetCollections:(id)arg1;
- (void)_deleteAssetFilesInAssetCollection:(id)arg1;
- (void)videoURLsForAssetCollection:(id)arg1 forMediaAssetType:(unsigned long long)arg2 inAlbum:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (void)videoURLForAssetCollection:(id)arg1 inAlbum:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)setMultipleContributorsEnabled:(_Bool)arg1 forAlbum:(id)arg2 info:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (void)setPublicAccessEnabled:(_Bool)arg1 forAlbum:(id)arg2 info:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (void)_scheduleEventDisposition:(int)arg1 params:(id)arg2;
- (void)scheduleEvent:(id)arg1 assetCollectionGUID:(id)arg2 albumGUID:(id)arg3 info:(id)arg4;
- (void)_addCommentDisposition:(int)arg1 params:(id)arg2;
- (void)addComments:(id)arg1 toAssetCollection:(id)arg2 inAlbum:(id)arg3 info:(id)arg4;
- (void)_removeSharingRelationshipsDisposition:(int)arg1 params:(id)arg2;
- (void)removeSharingRelationships:(id)arg1 fromOwnedAlbum:(id)arg2 info:(id)arg3;
- (void)_addSharingRelationshipsDisposition:(int)arg1 params:(id)arg2;
- (void)addSharingRelationships:(id)arg1 toOwnedAlbum:(id)arg2 info:(id)arg3;
- (void)_sendGetUploadTokensDisposition:(int)arg1 params:(id)arg2;
- (void)_sendPutAssetCollectionsDisposition:(int)arg1 params:(id)arg2;
- (void)_sendUploadCompleteDisposition:(int)arg1 params:(id)arg2;
- (void)_continueAddingAssetCollectionsDisposition:(int)arg1 params:(id)arg2;
- (void)continueAddingAssetCollections:(id)arg1 skipAssetCollections:(id)arg2 toAlbum:(id)arg3 info:(id)arg4;
- (void)_addAssetCollectionsDisposition:(int)arg1 params:(id)arg2;
- (void)addAssetCollections:(id)arg1 toAlbum:(id)arg2 info:(id)arg3;
- (id)_createHardlinkedOrCopiedAssetsInAssetCollections:(id)arg1;
- (void)_updateAlbumDisposition:(int)arg1 params:(id)arg2;
- (void)updateAlbum:(id)arg1 updateAlbumFlags:(int)arg2 info:(id)arg3;
- (void)_createAlbumDisposition:(int)arg1 params:(id)arg2;
- (void)createAlbum:(id)arg1 info:(id)arg2;
- (void)_deleteCommentDisposition:(int)arg1 params:(id)arg2;
- (void)deleteComments:(id)arg1 inAssetCollection:(id)arg2 inAlbum:(id)arg3 info:(id)arg4;
- (void)_deleteAssetCollectionsDisposition:(int)arg1 params:(id)arg2;
- (void)deleteAssetCollections:(id)arg1 inAlbum:(id)arg2 info:(id)arg3;
- (void)_deleteAlbumDisposition:(int)arg1 params:(id)arg2;
- (void)deleteAlbum:(id)arg1 info:(id)arg2;
- (void)_setAssetCollectionSyncedStateDisposition:(int)arg1 params:(id)arg2;
- (void)setAssetCollectionSyncedState:(id)arg1 forAssetCollection:(id)arg2 album:(id)arg3 info:(id)arg4;
- (void)_setAlbumSyncedStateDisposition:(int)arg1 params:(id)arg2;
- (void)setAlbumSyncedState:(id)arg1 forAlbum:(id)arg2 info:(id)arg3;
- (void)_checkForAlbumSyncedStateDisposition:(int)arg1 params:(id)arg2;
- (void)checkForAlbumSyncedStateChangesInAlbums:(id)arg1 info:(id)arg2;
- (void)_checkForCommentChangesDisposition:(int)arg1 params:(id)arg2;
- (void)checkForCommentChanges:(id)arg1 inAlbumWithGUID:(id)arg2;
- (void)_checkForAssetCollectionUpdatesDisposition:(int)arg1 params:(id)arg2;
- (void)checkForAssetCollectionUpdates:(id)arg1 inAlbum:(id)arg2 info:(id)arg3;
- (void)acceptInvitationWithToken:(id)arg1 info:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)_unsubscribeFromAlbumDisposition:(int)arg1 params:(id)arg2;
- (void)unsubscribeFromAlbum:(id)arg1 info:(id)arg2;
- (void)_subscribeToAlbumDisposition:(int)arg1 params:(id)arg2;
- (void)subscribeToAlbum:(id)arg1 info:(id)arg2;
- (void)_getAccessControlsDisposition:(int)arg1 params:(id)arg2;
- (void)getAccessControlsForAlbums:(id)arg1 info:(id)arg2;
- (void)_didFinishCheckingUpdatesInAlbumsDisposition:(int)arg1 params:(id)arg2;
- (void)_checkForUpdatesInAlbumDisposition:(int)arg1 params:(id)arg2;
- (void)checkForUpdatesInAlbums:(id)arg1 resetSync:(_Bool)arg2 info:(id)arg3;
- (void)_checkForChangesDisposition:(int)arg1 params:(id)arg2;
- (void)checkForChangesResetSync:(_Bool)arg1 info:(id)arg2;
- (void)checkForChangesInfo:(id)arg1;
- (id)_assetCollectionFailedError;
- (id)_assetCollectionRejectedError;
- (id)_stoppedError;
- (id)_canceledError;
- (void)_getAlbumURLDisposition:(int)arg1 params:(id)arg2;
- (id)_URLReauthFailureWithUnderlyingError:(id)arg1;
- (_Bool)workQueueEndCommandWithError:(id)arg1 command:(id)arg2 params:(id)arg3 albumGUID:(id)arg4 assetCollectionGUID:(id)arg5;
- (void)workQueueDidFinishCommandDueToCancellation;
- (void)workQueueDidFinishCommandByLeavingCommandInQueue;
- (void)workQueueDidFailToFinishCommandDueToTemporaryError:(id)arg1;
- (void)workQueueDidFinishCommandByReplacingCurrentCommandWithCommand:(id)arg1 params:(id)arg2 personID:(id)arg3 albumGUID:(id)arg4 assetCollectionGUID:(id)arg5;
- (void)workQueueDidFinishCommand;
- (void)workQueuePerformNextCommand;
- (void)workQueueCheckForNextCommand;
- (void)workQueueRetryOutstandingActivities;
- (void)retryOutstandingActivities;
- (_Bool)hasEnqueuedActivities;
- (_Bool)isInRetryState;
- (void)setPersistentObject:(id)arg1 forKey:(id)arg2;
- (id)persistentObjectForKey:(id)arg1;
- (void)MSBackoffManagerDidUpdateNextExpiryDate:(id)arg1;
- (void)workQueueUpdateNextActivityDate;
- (id)serverCommunicationBackoffDate;
- (id)latestNextActivityDate;
- (void)_sendGetServerSideConfigurationDisposition:(int)arg1 params:(id)arg2;
- (void)workQueueRefreshServerSideConfig;
- (void)refreshServerSideConfig;
- (void)serverSideQueueSetServerSideConfiguration:(id)arg1;
@property(retain, nonatomic) NSDictionary *serverSideConfiguration; // @synthesize serverSideConfiguration=_serverSideConfiguration;
- (id)serverSideQueueServerSideConfiguration;
@property(readonly, retain, nonatomic) NSString *serverSideConfigurationVersion; // @synthesize serverSideConfigurationVersion=_serverSideConfigurationVersion;
- (id)_serverSideConfigDictionaryByApplyingDefaultsToDictionary:(id)arg1;
- (void)_cancelOutstandingCommandsDisposition:(int)arg1 params:(id)arg2;
- (void)cancelOutstandingCommandsForAssetCollectionWithGUID:(id)arg1;
- (void)cancelOutstandingCommandsForAlbumWithGUID:(id)arg1;
- (id)rootCtagToCheckForChanges;
- (void)setRootCtagFromPendingRootCtag;
- (void)setPendingRootCtag:(id)arg1;
- (void)workQueueCancelCompletionBlock:(CDUnknownBlockType)arg1;
- (void)workQueueCancelAllCommandsFilteredByAlbumGUID:(id)arg1 assetCollectionGUID:(id)arg2;
- (void)cancelCompletionBlock:(CDUnknownBlockType)arg1;
- (void)stopAssetDownloadsCompletionBlock:(CDUnknownBlockType)arg1;
- (void)purgeEverythingCompletionBlock:(CDUnknownBlockType)arg1;
- (void)shutDownCompletionBlock:(CDUnknownBlockType)arg1;
- (void)_workQueueEmptyFileTransferQueuesCompletionBlock:(CDUnknownBlockType)arg1;
- (void)start;
- (void)workQueueApplyServerSideConfiguration;
- (int)assetsInDownloadQueueCount;
- (void)dealloc;
- (id)initWithPersonID:(id)arg1 eventQueue:(id)arg2;
- (id)initWithPersonID:(id)arg1;
- (id)init;
- (id)memberQueueMetadataBackoffManager;
- (id)_metadataBackoffManager;
- (id)_assetDownloader;
- (id)_assetUploader;
- (id)_model;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSDaemon : NSObject
{
    _Bool _stabilizedIsBusy;
    int _busyCount;
    int _UIBusyCount;
    NSObject<OS_dispatch_queue> *_idleCountQueue;
    NSTimer *_hysteresisTimer;
}

@property(nonatomic) _Bool stabilizedIsBusy; // @synthesize stabilizedIsBusy=_stabilizedIsBusy;
@property(retain, nonatomic) NSTimer *hysteresisTimer; // @synthesize hysteresisTimer=_hysteresisTimer;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *idleCountQueue; // @synthesize idleCountQueue=_idleCountQueue;
@property(nonatomic) int UIBusyCount; // @synthesize UIBusyCount=_UIBusyCount;
@property(nonatomic) int busyCount; // @synthesize busyCount=_busyCount;
- (void).cxx_destruct;
- (void)stabilizedDidUnidle;
- (void)stabilizedDidIdle;
- (void)_hysteresisTimerDidFire:(id)arg1;
- (void)didUnidle;
- (void)didIdle;
- (void)_didChangeIdleBusyState:(_Bool)arg1;
- (void)releasePowerAssertion;
- (void)retainPowerAssertion;
- (void)releaseUIBusy;
- (void)retainUIBusy;
- (_Bool)isBusy;
- (void)releaseBusy;
- (void)retainBusy;
- (void)dealloc;
- (id)init;

@end

@interface MSAlbumSharingDaemon : MSDaemon
{
    _Bool _isRetryingOutstandingActivities;
    int _busyCount;
    id <MSAlbumSharingDaemonDelegate> _delegate;
    NSMutableDictionary *_personIDToStateMachineMap;
    NSMutableDictionary *_personIDToDelegateMap;
    MSASDaemonModel *_daemonModel;
    NSObject<OS_dispatch_queue> *_mapQueue;
    NSObject<OS_dispatch_queue> *_workQueue;
    NSMutableDictionary *_nextUpdateDateByPersonID;
}

@property(retain, nonatomic) NSMutableDictionary *nextUpdateDateByPersonID; // @synthesize nextUpdateDateByPersonID=_nextUpdateDateByPersonID;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *workQueue; // @synthesize workQueue=_workQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *mapQueue; // @synthesize mapQueue=_mapQueue;
@property(nonatomic) _Bool isRetryingOutstandingActivities; // @synthesize isRetryingOutstandingActivities=_isRetryingOutstandingActivities;
@property(nonatomic) int busyCount; // @synthesize busyCount=_busyCount;
@property(retain, nonatomic) MSASDaemonModel *daemonModel; // @synthesize daemonModel=_daemonModel;
@property(retain, nonatomic) NSMutableDictionary *personIDToDelegateMap; // @synthesize personIDToDelegateMap=_personIDToDelegateMap;
@property(retain, nonatomic) NSMutableDictionary *personIDToStateMachineMap; // @synthesize personIDToStateMachineMap=_personIDToStateMachineMap;
@property(nonatomic) __weak id <MSAlbumSharingDaemonDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)didReceiveCommentTooLongError:(id)arg1 forAssetCollection:(id)arg2 inAlbum:(id)arg3 personID:(id)arg4;
- (void)didReceiveTooManyCommentsError:(id)arg1 forAssetCollection:(id)arg2 inAlbum:(id)arg3 personID:(id)arg4;
- (void)didReceiveTooManySubscriptionsError:(id)arg1 personID:(id)arg2;
- (void)didReceiveTooManyPhotosError:(id)arg1 forAlbum:(id)arg2 personID:(id)arg3;
- (void)didReceiveTooManyAlbumsError:(id)arg1 personID:(id)arg2;
- (id)boundStateMachineForPersonID:(id)arg1;
- (id)existingStateMachineForPersonID:(id)arg1;
- (id)_delegateForPersonID:(id)arg1;
- (void)setPersistentObject:(id)arg1 forKey:(id)arg2 personID:(id)arg3;
- (id)persistentObjectForKey:(id)arg1 personID:(id)arg2;
- (void)refreshServerSideConfigurationForPersonID:(id)arg1;
- (id)serverSideConfigurationForPersonID:(id)arg1;
- (void)forgetEverythingCompletionBlock:(CDUnknownBlockType)arg1;
- (void)workQueueForgetEverythingAboutPersonIDs:(id)arg1 index:(unsigned long long)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)forgetEverythingAboutPersonID:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)workQueueForgetEverythingAboutPersonID:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)shutDownStateMachine:(id)arg1 forDestruction:(_Bool)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)_postModelShutdownForPersonID:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)forgetEverythingAboutPersonID:(id)arg1;
- (void)retrieveAssetsInAssetCollectionsWithGUIDs:(id)arg1 assetTypeFlags:(int)arg2 personID:(id)arg3;
- (void)retrieveAssets:(id)arg1 inAlbumWithGUID:(id)arg2 personID:(id)arg3;
- (void)deleteCommentWithGUID:(id)arg1 personID:(id)arg2 info:(id)arg3;
- (void)deleteCommentWithGUID:(id)arg1 personID:(id)arg2;
- (void)addComments:(id)arg1 toAssetCollectionWithGUID:(id)arg2 personID:(id)arg3 info:(id)arg4;
- (void)addComments:(id)arg1 toAssetCollectionWithGUID:(id)arg2 personID:(id)arg3;
- (void)markCommentsForAssetCollectionWithGUID:(id)arg1 asViewedWithLastViewedDate:(id)arg2 personID:(id)arg3 info:(id)arg4;
- (void)markCommentsForAssetCollectionWithGUID:(id)arg1 asViewedWithLastViewedDate:(id)arg2 personID:(id)arg3;
- (void)deleteAssetCollectionsWithGUIDs:(id)arg1 personID:(id)arg2;
- (void)deleteAssetCollectionWithGUID:(id)arg1 personID:(id)arg2 info:(id)arg3;
- (void)deleteAssetCollectionWithGUID:(id)arg1 personID:(id)arg2;
- (void)addAssetCollections:(id)arg1 toAlbumWithGUID:(id)arg2 personID:(id)arg3 info:(id)arg4;
- (void)addAssetCollections:(id)arg1 toAlbumWithGUID:(id)arg2 personID:(id)arg3;
- (void)setMultipleContributorsEnabled:(_Bool)arg1 forAlbumWithGUID:(id)arg2 personID:(id)arg3 info:(id)arg4 completionBlock:(CDUnknownBlockType)arg5;
- (void)setMultipleContributorsEnabled:(_Bool)arg1 forAlbumWithGUID:(id)arg2 personID:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (void)setPublicAccessEnabled:(_Bool)arg1 forAlbumWithGUID:(id)arg2 personID:(id)arg3 info:(id)arg4 completionBlock:(CDUnknownBlockType)arg5;
- (void)setPublicAccessEnabled:(_Bool)arg1 forAlbumWithGUID:(id)arg2 personID:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (void)removeAccessControlEntryWithGUID:(id)arg1 personID:(id)arg2 info:(id)arg3;
- (void)removeAccessControlEntryWithGUID:(id)arg1 personID:(id)arg2;
- (void)addAccessControlEntries:(id)arg1 toAlbumWithGUID:(id)arg2 personID:(id)arg3 info:(id)arg4;
- (void)addAccessControlEntries:(id)arg1 toAlbumWithGUID:(id)arg2 personID:(id)arg3;
- (void)rejectInvitationWithGUID:(id)arg1 personID:(id)arg2 info:(id)arg3;
- (void)rejectInvitationWithGUID:(id)arg1 personID:(id)arg2;
- (void)acceptInvitationWithGUID:(id)arg1 personID:(id)arg2 info:(id)arg3;
- (void)acceptInvitationWithGUID:(id)arg1 personID:(id)arg2;
- (void)acceptInvitationWithToken:(id)arg1 personID:(id)arg2 info:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (void)acceptInvitationWithToken:(id)arg1 personID:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)unsubscribeFromAlbumWithGUID:(id)arg1 personID:(id)arg2 info:(id)arg3;
- (void)unsubscribeFromAlbumWithGUID:(id)arg1 personID:(id)arg2;
- (void)subscribeToAlbumWithGUID:(id)arg1 personID:(id)arg2 info:(id)arg3;
- (void)subscribeToAlbumWithGUID:(id)arg1 personID:(id)arg2;
- (void)markAlbumGUIDAsViewed:(id)arg1 personID:(id)arg2 moveLastViewedAssetCollectionMarker:(_Bool)arg3 info:(id)arg4;
- (void)markAlbumGUIDAsViewed:(id)arg1 personID:(id)arg2 info:(id)arg3;
- (void)markAlbumGUIDAsViewed:(id)arg1 personID:(id)arg2;
- (void)deleteAlbumWithGUID:(id)arg1 personID:(id)arg2 info:(id)arg3;
- (void)deleteAlbumWithGUID:(id)arg1 personID:(id)arg2;
- (void)modifyAlbumMetadata:(id)arg1 personID:(id)arg2 info:(id)arg3;
- (void)modifyAlbumMetadata:(id)arg1 personID:(id)arg2;
- (void)addAlbum:(id)arg1 personID:(id)arg2 info:(id)arg3;
- (void)addAlbum:(id)arg1 personID:(id)arg2;
- (void)refreshCommentsForAssetCollectionWithGUID:(id)arg1 resetSync:(_Bool)arg2 personID:(id)arg3 info:(id)arg4;
- (void)refreshCommentsForAssetCollectionWithGUID:(id)arg1 resetSync:(_Bool)arg2 personID:(id)arg3;
- (void)refreshAccessControlListOfAlbumWithGUID:(id)arg1 personID:(id)arg2 info:(id)arg3;
- (void)refreshAccessControlListOfAlbumWithGUID:(id)arg1 personID:(id)arg2;
- (void)refreshContentOfAlbumWithGUID:(id)arg1 resetSync:(_Bool)arg2 personID:(id)arg3 info:(id)arg4;
- (void)refreshContentOfAlbumWithGUID:(id)arg1 resetSync:(_Bool)arg2 personID:(id)arg3;
- (void)refreshResetSync:(_Bool)arg1 personID:(id)arg2 info:(id)arg3;
- (void)refreshResetSync:(_Bool)arg1 personID:(id)arg2;
- (id)modelForPersonID:(id)arg1;
- (id)existingModelForPersonID:(id)arg1;
- (int)assetsInDownloadQueueCountForPersonID:(id)arg1;
- (void)sendServerSideConfigurationDidChangeNotificationForPersonID:(id)arg1;
- (void)setNextActivityDate:(id)arg1 forPersonID:(id)arg2;
- (void)pollForSubscriptionUpdatesTriggeredByPushNotificationForPersonID:(id)arg1;
- (id)personIDsListeningToPushNotification;
- (void)deleteAlbumWithGUID:(id)arg1;
- (void)addAlbum:(id)arg1;
- (void)cancelActivitiesForPersonID:(id)arg1;
- (void)stopAssetDownloadsForPersonID:(id)arg1;
- (void)retryOutstandingActivitiesForPersonID:(id)arg1;
- (void)retryOutstandingActivities;
- (_Bool)hasCommandsInGroupedCommandQueue;
- (_Bool)isWaitingForAuth;
- (void)didReceiveGlobalResetSyncForPersonID:(id)arg1;
- (void)didReceiveAuthSuccessForPersonID:(id)arg1;
- (void)didReceiveAuthFailureForPersonID:(id)arg1;
- (_Bool)isInRetryState;
- (void)didReceivePushNotificationForPersonID:(id)arg1;
- (void)didDestroyStateMachineForPersonID:(id)arg1;
- (void)willDestroyStateMachineForPersonID:(id)arg1;
- (void)didCreateStateMachineForPersonID:(id)arg1;
- (void)setFocusAssetCollectionGUID:(id)arg1 forPersonID:(id)arg2;
- (void)setFocusAlbumGUID:(id)arg1 forPersonID:(id)arg2;
- (void)didUnidle;
- (void)didIdle;
- (id)nextActivityDate;
- (void)shutDownCompletionBlock:(CDUnknownBlockType)arg1;
- (void)mapQueueShutDownStateMachineInMap:(id)arg1 personIDs:(id)arg2 index:(unsigned long long)arg3 forDestruction:(_Bool)arg4 completionBlock:(CDUnknownBlockType)arg5;
- (void)shutDown;
- (void)start;
- (void)dealloc;
- (id)init;

@end

@interface MSAsset : NSObject <MMCSAsset, NSSecureCoding, NSCopying>
{
    _Bool _assetDataAvailableOnServer;
    NSData *_masterAssetHash;
    NSDictionary *_metadata;
    NSString *_path;
    NSURL *_MMCSURL;
    NSData *_fileData;
    NSError *_error;
    NSString *_type;
    NSData *_fileHash;
    unsigned long long _protocolFileSize;
    NSString *_MMCSAccessHeader;
    NSDate *_MMCSAccessHeaderTimeStamp;
    NSString *_MMCSReceipt;
    NSString *_GUID;
    NSString *_assetCollectionGUID;
    NSDate *_batchCreationDate;
    NSDate *_photoCreationDate;
    id <NSCoding> _userInfo;
    unsigned long long _mediaAssetType;
}

+ (_Bool)supportsSecureCoding;
+ (id)assetWithAsset:(id)arg1;
+ (id)asset;
+ (id)MSASPAssetFromProtocolDictionary:(id)arg1;
@property(nonatomic) _Bool assetDataAvailableOnServer; // @synthesize assetDataAvailableOnServer=_assetDataAvailableOnServer;
@property(nonatomic) unsigned long long mediaAssetType; // @synthesize mediaAssetType=_mediaAssetType;
@property(retain, nonatomic) id <NSCoding> userInfo; // @synthesize userInfo=_userInfo;
@property(retain, nonatomic) NSDate *photoCreationDate; // @synthesize photoCreationDate=_photoCreationDate;
@property(retain, nonatomic) NSDate *batchCreationDate; // @synthesize batchCreationDate=_batchCreationDate;
@property(retain, nonatomic) NSString *assetCollectionGUID; // @synthesize assetCollectionGUID=_assetCollectionGUID;
@property(retain, nonatomic) NSString *GUID; // @synthesize GUID=_GUID;
@property(retain, nonatomic) NSString *MMCSReceipt; // @synthesize MMCSReceipt=_MMCSReceipt;
@property(retain, nonatomic) NSDate *MMCSAccessHeaderTimeStamp; // @synthesize MMCSAccessHeaderTimeStamp=_MMCSAccessHeaderTimeStamp;
@property(retain, nonatomic) NSString *MMCSAccessHeader; // @synthesize MMCSAccessHeader=_MMCSAccessHeader;
@property(nonatomic) unsigned long long MMCSItemSize; // @synthesize MMCSItemSize=_protocolFileSize;
@property(retain, nonatomic) NSData *MMCSHash; // @synthesize MMCSHash=_fileHash;
@property(retain, nonatomic) NSString *MMCSUTI; // @synthesize MMCSUTI=_type;
@property(retain, nonatomic) NSError *error; // @synthesize error=_error;
@property(retain, nonatomic) NSData *fileData; // @synthesize fileData=_fileData;
@property(retain, nonatomic) NSURL *MMCSURL; // @synthesize MMCSURL=_MMCSURL;
@property(retain, nonatomic) NSString *path; // @synthesize path=_path;
@property(retain, nonatomic) NSDictionary *metadata; // @synthesize metadata=_metadata;
@property(retain, nonatomic) NSData *masterAssetHash; // @synthesize masterAssetHash=_masterAssetHash;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)metadataValueForKey:(id)arg1;
- (void)addMetadataValue:(id)arg1 forKey:(id)arg2;
- (void)setMetadataValue:(id)arg1 forKey:(id)arg2;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
@property(readonly) unsigned long long hash;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)_fileSizeOnDisk;
- (void)setMMCSAccessHeader:(id)arg1 andTimeStamp:(id)arg2;
- (id)MMCSItemType;
- (int)MMCSOpenNewFileDescriptor;
@property(nonatomic) unsigned long long MMCSItemID;
@property(nonatomic) unsigned int MMCSItemFlags;
- (unsigned long long)_fileSize;
- (_Bool)isVideo;
- (_Bool)isPhoto;
@property(readonly, copy) NSString *description;
- (id)init;
- (id)initWithGUID:(id)arg1;
@property(retain, nonatomic) NSError *MMCSError;
@property(nonatomic) unsigned long long protocolFileSize;
@property(retain, nonatomic) NSString *type;
@property(retain, nonatomic) NSData *fileHash;
- (id)MSASPProtocolDictionary;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

@interface MSAssetCollection : NSObject <NSSecureCoding>
{
    NSString *_assetCollectionID;
    NSString *_ctag;
    MSAsset *_masterAsset;
    NSArray *_derivedAssets;
    NSString *_fileName;
    _Bool _wasDeleted;
    long long _initialFailureDate;
}

+ (_Bool)supportsSecureCoding;
+ (id)collectionWithMasterAsset:(id)arg1 fileName:(id)arg2 derivedAssets:(id)arg3;
+ (id)collectionWithMasterAsset:(id)arg1 fileName:(id)arg2;
@property(nonatomic) long long initialFailureDate; // @synthesize initialFailureDate=_initialFailureDate;
@property(nonatomic) _Bool wasDeleted; // @synthesize wasDeleted=_wasDeleted;
@property(retain, nonatomic) NSString *fileName; // @synthesize fileName=_fileName;
@property(retain, nonatomic) MSAsset *masterAsset; // @synthesize masterAsset=_masterAsset;
@property(retain, nonatomic) NSString *ctag; // @synthesize ctag=_ctag;
@property(retain, nonatomic) NSString *assetCollectionID; // @synthesize assetCollectionID=_assetCollectionID;
- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (id)description;
@property(retain, nonatomic) NSArray *derivedAssets;
@property(readonly, nonatomic) __weak NSData *masterAssetHash;
- (id)initWithMasterAsset:(id)arg1 fileName:(id)arg2 derivedAssets:(id)arg3;

@end

@interface MSBackoffManager : NSObject <NSCoding>
{
    id <MSBackoffManagerDelegate> _delegate;
    double _initialInterval;
    double _backoffFactor;
    double _randomizeFactor;
    double _maxBackoffInterval;
    double _currentInterval;
    NSDate *_nextExpiryDate;
    NSDate *_retryAfterDate;
}

@property(retain, nonatomic) NSDate *retryAfterDate; // @synthesize retryAfterDate=_retryAfterDate;
@property(retain, nonatomic) NSDate *nextExpiryDate; // @synthesize nextExpiryDate=_nextExpiryDate;
@property(nonatomic) double currentInterval; // @synthesize currentInterval=_currentInterval;
@property(nonatomic) double maxBackoffInterval; // @synthesize maxBackoffInterval=_maxBackoffInterval;
@property(nonatomic) double randomizeFactor; // @synthesize randomizeFactor=_randomizeFactor;
@property(nonatomic) double backoffFactor; // @synthesize backoffFactor=_backoffFactor;
@property(nonatomic) double initialInterval; // @synthesize initialInterval=_initialInterval;
@property(nonatomic) id <MSBackoffManagerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (void)_complainAboutMissingKeyInArchive:(id)arg1;
- (id)copyParameters;
- (void)encodeWithCoder:(id)arg1;
- (void)backoff;
- (void)reset;
- (void)didReceiveRetryAfterDate:(id)arg1;
- (id)initWithInitialInterval:(double)arg1 backoffFactor:(double)arg2 randomizeFactor:(double)arg3 maxBackoffInterval:(double)arg4 retryAfterDate:(id)arg5;

@end

@interface MSCupidStateMachine : NSObject <MSStreamsProtocolDelegate>
{
    NSString *_personID;
    NSString *_manifestPath;
    NSMutableDictionary *_userManifest;
    MSBackoffManager *_streamsBackoffManager;
    MSBackoffManager *_MMCSBackoffManager;
    _Bool _hasDeactivated;
}

@property(nonatomic) _Bool hasDeactivated; // @synthesize hasDeactivated=_hasDeactivated;
@property(readonly, nonatomic) NSString *personID; // @synthesize personID=_personID;
@property(retain, nonatomic) NSMutableDictionary *_userManifest; // @synthesize _userManifest;
- (void).cxx_destruct;
- (void)protocol:(id)arg1 didReceiveRetryAfterDate:(id)arg2;
- (void)_forget;
- (void)_abort;
- (void)_updateMasterManifest;
- (id)_latestNextActivityDate;
- (void)_didReceiveMMCSRetryAfterDate:(id)arg1;
- (void)_backoffMMCSBackoffTimer;
- (void)_resetMMCSBackoffTimer;
- (void)_didReceiveStreamsRetryAfterDate:(id)arg1;
- (void)_backoffStreamsBackoffTimer;
- (void)_resetStreamsBackoffTimer;
- (void)_commitUserManifest;
- (void)forget;
- (void)deactivate;
- (void)dealloc;
- (id)initWithPersonID:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSStreamsProtocol : NSObject
{
    id <MSStreamsProtocolDelegate> _delegate;
    NSString *_personID;
}

@property(readonly, nonatomic) NSString *personID; // @synthesize personID=_personID;
@property(nonatomic) id <MSStreamsProtocolDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)_refreshAuthTokenForContext:(struct __MSSPCContext *)arg1;
- (void)_didReceiveRetryAfterDate:(id)arg1;
- (void)_didFindServerSideConfigurationVersion:(id)arg1;
- (id)deviceInfoDict;
- (void)abort;
@property(readonly, nonatomic) __weak NSURL *deleteURL;
@property(readonly, nonatomic) __weak NSURL *uploadCompleteURL;
@property(readonly, nonatomic) __weak NSURL *reauthorizeURL;
@property(readonly, nonatomic) __weak NSURL *resetURL;
@property(readonly, nonatomic) __weak NSURL *putURL;
@property(readonly, nonatomic) __weak NSURL *getURL;
- (id)initWithPersonID:(id)arg1 baseURL:(id)arg2;

@end

@interface MSDeleteStreamsProtocol : MSStreamsProtocol
{
    struct _MSDSPCContext _context;
    NSMutableArray *_collectionsInFlight;
}

- (void).cxx_destruct;
- (void)_resetConnectionVariables;
- (void)_coreProtocolDidFailAuthenticationError:(id)arg1;
- (void)_coreProtocolDidFinishResponse:(id)arg1 error:(id)arg2;
- (void)sendDeletionRequestForAssetCollections:(id)arg1;
- (void)abort;
- (id)initWithPersonID:(id)arg1 baseURL:(id)arg2;

// Remaining properties
@property(nonatomic) id <MSDeleteStreamsProtocolDelegate> delegate; // @dynamic delegate;

@end

@interface MSDeleter : MSCupidStateMachine <MSDeleter, MSDeleteStreamsProtocolDelegate>
{
    MSDeleteStreamsProtocol *_protocol;
    int _state;
    MSObjectQueue *_deleteQueue;
    NSMutableArray *_requestedDeleteWrappers;
    int _batchSize;
    int _maxErrorCount;
    id <MSDeleterDelegate> _delegate;
    MSMediaStreamDaemon *_daemon;
}

+ (_Bool)isInRetryState;
+ (void)abortAllActivities;
+ (void)stopAllActivities;
+ (id)personIDsWithOutstandingActivities;
+ (id)nextActivityDateForPersonID:(id)arg1;
+ (id)nextActivityDate;
+ (void)_setMasterNextActivityDate:(id)arg1 forPersonID:(id)arg2;
+ (void)forgetPersonID:(id)arg1;
+ (id)_clearInstantiatedDeletersByPersonID;
+ (id)existingDeleterForPersonID:(id)arg1;
+ (id)deleterForPersonID:(id)arg1;
@property(nonatomic) int batchSize; // @synthesize batchSize=_batchSize;
@property(nonatomic) MSMediaStreamDaemon *daemon; // @synthesize daemon=_daemon;
@property(nonatomic) id <MSDeleterDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (_Bool)_isInRetryState;
- (void)stop;
- (void)abort;
- (void)_forget;
- (void)_abort;
- (id)_abortedError;
- (void)_stop;
- (void)deleteProtocol:(id)arg1 didFinishSuccessfulCollections:(id)arg2 failedCollections:(id)arg3 error:(id)arg4;
- (void)deleteProtocol:(id)arg1 didReceiveAuthenticationError:(id)arg2;
- (void)_sendDeleteRequest;
- (void)performOutstandingActivities;
- (void)deleteAssetCollections:(id)arg1;
- (_Bool)_isAllowedToDelete;
- (void)_updateMasterManifest;
- (void)dealloc;
- (void)deactivate;
- (id)initWithPersonID:(id)arg1 baseURL:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSFileUtilities : NSObject
{
}

+ (_Bool)hardlinkOrCopyFileFromPath:(id)arg1 toPath:(id)arg2 outError:(id *)arg3;

@end

@interface MSImageScalingSpecification : NSObject
{
    int _assetTypeFlags;
    double _nominalShortSideLength;
    double _minimumLongSideLength;
    double _maximumLongSideLength;
}

+ (id)assetsToGenerateFromImageWithInputSize:(struct CGSize)arg1 toConformToSpecifications:(id)arg2;
+ (id)specificationWithSharedAlbumSpecificationString:(id)arg1;
@property(nonatomic) int assetTypeFlags; // @synthesize assetTypeFlags=_assetTypeFlags;
@property(nonatomic) double maximumLongSideLength; // @synthesize maximumLongSideLength=_maximumLongSideLength;
@property(nonatomic) double minimumLongSideLength; // @synthesize minimumLongSideLength=_minimumLongSideLength;
@property(nonatomic) double nominalShortSideLength; // @synthesize nominalShortSideLength=_nominalShortSideLength;
- (id)description;
- (double)scaleFactorForInputSize:(struct CGSize)arg1;

@end

@interface MSInvitationResponse : NSObject
{
    MSShare *_invitation;
    _Bool _accept;
}

+ (id)responseWithInvitation:(id)arg1 accept:(_Bool)arg2;
@property(nonatomic) _Bool accept; // @synthesize accept=_accept;
@property(retain, nonatomic) MSShare *invitation; // @synthesize invitation=_invitation;
- (void).cxx_destruct;
- (id)initWithInvitation:(id)arg1 accept:(_Bool)arg2;

@end

@interface MSInvitationStrings : NSObject
{
    NSString *_title;
    NSString *_body;
}

+ (id)invitationStringsWithTitle:(id)arg1 body:(id)arg2;
@property(retain, nonatomic) NSString *body; // @synthesize body=_body;
@property(retain, nonatomic) NSString *title; // @synthesize title=_title;
- (void).cxx_destruct;
- (id)initWithTitle:(id)arg1 body:(id)arg2;

@end

@interface MSMMCSProtocol : NSObject <MSStorageProtocol>
{
    NSString *_personID;
    NSString *_MMCSDirPath;
    struct __MMCSEngine *_engine;
    NSString *_engineDirPath;
}

+ (id)computeItemIDForAsset:(id)arg1;
@property(readonly, nonatomic) struct __MMCSEngine *engine; // @synthesize engine=_engine;
@property(readonly, nonatomic) NSString *personID; // @synthesize personID=_personID;
- (void).cxx_destruct;
- (void)_requestCompleted;
- (void)_putItemDone:(unsigned long long)arg1 putReceipt:(id)arg2 error:(id)arg3;
- (void)_getItemDone:(unsigned long long)arg1 path:(id)arg2 error:(id)arg3;
- (id)_getUTIFromItem:(unsigned long long)arg1;
- (int)_getFileDescriptorFromItem:(unsigned long long)arg1;
- (void)didFinishUsingAssets:(id)arg1;
- (void)abort;
- (void)dealloc;
- (void)deactivateRemoveAllFiles:(_Bool)arg1;
- (void)deactivate;
- (id)initWithPersonID:(id)arg1 path:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSMediaStreamDaemon : MSDaemon
{
    id <MSMediaStreamDaemonDelegate> _delegate;
    NSCountedSet *_retainedObjects;
}

@property(nonatomic) id <MSMediaStreamDaemonDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (_Bool)mayDownloadPersonID:(id)arg1;
- (void)didReceivePushNotificationForPersonID:(id)arg1;
- (void)didReceiveGlobalResetSyncForPersonID:(id)arg1;
- (void)didExceedPublishQuotaForPersonID:(id)arg1 retryDate:(id)arg2;
- (void)didReceiveAuthenticationSuccessForPersonID:(id)arg1;
- (void)didReceiveAuthenticationFailureForPersonID:(id)arg1;
- (void)showInvitationFailureAlertForPersonID:(id)arg1 failures:(id)arg2;
- (void)didReceiveNewShareState:(id)arg1 oldShareState:(id)arg2 forPersonID:(id)arg3;
- (void)stop;
- (void)start;
- (void)deleteAssetCollections:(id)arg1 forPersonID:(id)arg2;
- (void)didReceiveNewServerSideConfigurationForPersonID:(id)arg1;
- (void)refreshServerSideConfigurationForPersonID:(id)arg1;
- (void)didReceiveServerSideConfigurationVersion:(id)arg1 forPersonID:(id)arg2;
- (id)serverSideConfigurationForPersonID:(id)arg1;
- (id)notificationStringsForShareStateTransitionOldShares:(id)arg1 newShares:(id)arg2;
- (void)_removeShareWithPersonID:(id)arg1 inArray:(id)arg2;
- (id)_findShareWithPersonID:(id)arg1 inArray:(id)arg2;
- (void)refreshShareStatesForPersonID:(id)arg1;
- (_Bool)personIDIsAcceptingInvitations:(id)arg1;
- (void)removeShare:(id)arg1 forPersonID:(id)arg2;
- (void)modifyShare:(id)arg1 forPersonID:(id)arg2;
- (void)respondToInvitation:(id)arg1 forPersonID:(id)arg2 accept:(_Bool)arg3;
- (void)sendInvitations:(id)arg1 forPersonID:(id)arg2;
- (id)invitationStringsFromInvitation:(id)arg1 targetPersonID:(id)arg2;
- (id)invitationFromPushNotificationUserInfo:(id)arg1 outSourcePersonID:(id *)arg2 outTargetPersonID:(id *)arg3;
- (void)_setShares:(id)arg1 forPersonID:(id)arg2;
- (id)sharesForPersonID:(id)arg1;
- (id)ownSubscribedStreamForPersonID:(id)arg1;
- (id)subscribedStreamsForPersonID:(id)arg1;
- (void)computeHashForAsset:(id)arg1 personID:(id)arg2;
- (void)resetSubscriberSyncForPersonID:(id)arg1;
- (void)pollForSubscriptionUpdatesTriggeredByPushNotificationForPersonID:(id)arg1;
- (void)pollForSubscriptionUpdatesForPersonID:(id)arg1;
- (_Bool)dequeueAssetCollectionWithGUIDs:(id)arg1 personID:(id)arg2 outError:(id *)arg3;
- (_Bool)enqueueAssetCollection:(id)arg1 personID:(id)arg2 outError:(id *)arg3;
- (void)forgetPersonID:(id)arg1;
- (void)stopAllActivities;
- (void)abortAllActivityForPersonID:(id)arg1;
- (void)reenqueueQuarantinedActivitiesWithReason:(id)arg1;
- (void)retryOutstandingActivities;
- (id)_boundServerSideConfigManagerForPersonID:(id)arg1;
- (id)_boundDeleterForPersonID:(id)arg1;
- (id)_boundSharingManagerForPersonID:(id)arg1;
- (id)_boundSubscriberForPersonID:(id)arg1;
- (id)_boundPublisherForPersonID:(id)arg1;
- (void)didUnidle;
- (void)didIdle;
- (_Bool)isInRetryState;
- (_Bool)personIDHasOutstandingPublications:(id)arg1;
- (_Bool)hasOutstandingActivity;
- (id)nextActivityDate;
- (id)init;

@end

@interface MSObjectQueue : NSObject
{
    struct sqlite3 *_db;
    struct __CFDictionary *_statements;
}

- (void)commitObjectsWrappers:(id)arg1;
- (void)commitErrorCountsForObjectWrappers:(id)arg1;
- (void)removeAllObjectWrappersFromQueue;
- (void)removeObjectWrappersFromQueue:(id)arg1;
- (id)allObjectWrappersOrderedByDescendingErrorCountMaxCount:(long long)arg1;
- (id)smallestObjectWrappersTargetTotalSize:(long long)arg1 maxCount:(long long)arg2;
- (id)objectWrappersWithZeroSizeMaxCount:(long long)arg1;
- (id)allObjectWrappersMaxCount:(long long)arg1;
- (id)_objectWrapperFromQueueQuery:(struct sqlite3_stmt *)arg1 outSize:(long long *)arg2;
- (void)appendObjectWrappers:(id)arg1;
@property(readonly) long long count;
- (struct sqlite3_stmt *)_statementLabel:(id)arg1 query:(const char *)arg2;
- (void)dealloc;
- (id)initWithPath:(id)arg1;

@end

@interface MSObjectWrapper : NSObject
{
    long long _size;
    long long _uniqueID;
    id <NSObject><NSCoding> _object;
    int _errorCount;
}

+ (id)objectsFromWrappers:(id)arg1 equalToObject:(id)arg2;
+ (id)objectsFromWrappers:(id)arg1;
+ (long long)indexOfObject:(id)arg1 inWrapperArray:(id)arg2;
+ (id)wrapperWithObject:(id)arg1 size:(long long)arg2;
@property(nonatomic) int errorCount; // @synthesize errorCount=_errorCount;
@property(readonly, nonatomic) id <NSCoding> object; // @synthesize object=_object;
@property(nonatomic) long long uniqueID; // @synthesize uniqueID=_uniqueID;
@property(nonatomic) long long size; // @synthesize size=_size;
- (void).cxx_destruct;
- (id)initWithObject:(id)arg1 size:(long long)arg2;

@end

@interface MSPerformanceLogger : MSASModelBase
{
}

+ (void)nukeCompletionBlock:(CDUnknownBlockType)arg1;
+ (id)sharedLogger;
- (void)summarizeOperation:(id)arg1 itemGUID:(id)arg2 formatBlock:(CDUnknownBlockType)arg3;
- (void)discardOperation:(id)arg1 itemGUID:(id)arg2;
- (void)dbQueueDiscardOperation:(id)arg1 itemGUID:(id)arg2;
- (void)stopOperation:(id)arg1 itemGUID:(id)arg2;
- (void)startOperation:(id)arg1 itemGUID:(id)arg2;
- (_Bool)dbQueueUpgradeFromDatabaseVersion:(int)arg1 currentVersion:(int)arg2;
- (id)init;
- (void)_logSqliteErrorLine:(int)arg1;

@end

@interface MSProtocolUtilities : NSObject
{
}

+ (id)retryAfterDateBasedOnRetryAfterHeaderString:(id)arg1;
+ (id)deviceInfoDictForPersonID:(id)arg1;
+ (id)Win32SHA1OfUDID:(id)arg1;

@end

@interface MSPublishMMCSProtocol : MSMMCSProtocol <MSPublishStorageProtocol>
{
    id <MSPublishStorageProtocolDelegate> _delegate;
    NSMutableDictionary *_itemIDToAssetDict;
    unsigned long long *_itemIDs;
    const char **_signatures;
    char **_authTokens;
    unsigned int *_itemFlags;
    long long _itemsInFlight;
}

@property(nonatomic) id <MSPublishStorageProtocolDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)_putItemsFailure;
- (void)_requestCompleted;
- (void)_putItemDone:(unsigned long long)arg1 putReceipt:(id)arg2 error:(id)arg3;
- (void)publishAssets:(id)arg1 URL:(id)arg2;
- (id)_getUTIFromItem:(unsigned long long)arg1;
- (int)_getFileDescriptorFromItem:(unsigned long long)arg1;
- (void)computeHashForAsset:(id)arg1;
- (void)dealloc;
- (void)deactivate;
- (id)initWithPersonID:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSPublishStreamsProtocol : MSStreamsProtocol
{
    struct __MSPSPCContext {
        struct __MSSPCContext _super;
        CDUnknownFunctionPointerType finishedCallback;
        CDUnknownFunctionPointerType authFailedCallback;
        CDUnknownFunctionPointerType didReceiveServerSideConfigurationVersionCallback;
        CDUnknownFunctionPointerType didReceiveRetryAfterCallback;
    } _context;
    NSArray *_assetCollectionsInFlight;
    struct __MSPSPCUCContext {
        struct __MSSPCContext _super;
        CDUnknownFunctionPointerType finishedCallback;
        CDUnknownFunctionPointerType authFailedCallback;
        CDUnknownFunctionPointerType didReceiveServerSideConfigurationVersionCallback;
    } _UCContext;
}

- (void).cxx_destruct;
- (void)_coreProtocolDidFinishUCResults:(id)arg1 error:(id)arg2;
- (void)_coreProtocolDidFailAuthenticationError:(id)arg1;
- (void)_coreProtocolDidFinishResponse:(id)arg1 error:(id)arg2;
- (void)abort;
- (void)sendUploadCompleteForAssetCollections:(id)arg1;
- (void)sendMetadataForAssetCollections:(id)arg1;
- (id)_metadataDictForAssetCollection:(id)arg1 outError:(id *)arg2;
- (id)_metadataDictForAsset:(id)arg1 outError:(id *)arg2;
- (void)_resetConnectionVariables;
- (_Bool)_insertInfoAboutAsset:(id)arg1 intoDictionary:(id)arg2 outError:(id *)arg3;
- (id)_missingAssetFieldErrorWithFieldName:(id)arg1;
- (void)dealloc;
- (id)initWithPersonID:(id)arg1 baseURL:(id)arg2;
- (void)setDelegate:(id)arg1;
- (id)delegate;

@end

@interface MSPublisher : MSCupidStateMachine <MSPublisher, MSPublishStreamsProtocolDelegate, MSPublishStorageProtocolDelegate>
{
    id <MSPublisherDelegate> _delegate;
    MSMediaStreamDaemon *_daemon;
    int _state;
    MSObjectQueue *_uploadQueue;
    MSObjectQueue *_derivativesQueue;
    MSObjectQueue *_quarantinedQueue;
    NSArray *_pendingDerivativesQueue;
    NSMutableArray *_requestAuthQueue;
    unsigned long long _sendingQueueCount;
    NSMutableArray *_sendingQueue;
    NSMutableDictionary *_fileHashToAssetMap;
    MSPublishStreamsProtocol *_protocol;
    id <MSPublishStorageProtocol> _storageProtocol;
    NSURL *_storageProtocolURL;
    NSMutableArray *_tempFiles;
    NSMutableDictionary *_maxSizeByUTI;
    long long _publishTargetByteCount;
    int _publishBatchSize;
    int _maxErrorCount;
}

+ (_Bool)isInRetryState;
+ (void)stopAllActivities;
+ (id)personIDsWithOutstandingActivities;
+ (id)nextActivityDateForPersonID:(id)arg1;
+ (id)nextActivityDate;
+ (void)_setMasterNextActivityDate:(id)arg1 forPersonID:(id)arg2;
+ (void)forgetPersonID:(id)arg1;
+ (id)_clearInstantiatedPublishersByPersonID;
+ (id)existingPublisherForPersonID:(id)arg1;
+ (id)publisherForPersonID:(id)arg1;
@property(nonatomic) int publishBatchSize; // @synthesize publishBatchSize=_publishBatchSize;
@property(nonatomic) long long publishTargetByteCount; // @synthesize publishTargetByteCount=_publishTargetByteCount;
@property(retain, nonatomic) NSURL *storageProtocolURL; // @synthesize storageProtocolURL=_storageProtocolURL;
@property(nonatomic) MSMediaStreamDaemon *daemon; // @synthesize daemon=_daemon;
@property(nonatomic) id <MSPublisherDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (_Bool)_isInRetryState;
- (void)stop;
- (void)abort;
- (void)_forget;
- (void)_abort;
- (id)_abortedError;
- (int)_stop;
- (void)publishStreamsProtocol:(id)arg1 didFinishSendingUploadCompleteError:(id)arg2;
- (void)_sendUploadComplete;
- (void)publishStorageProtocolDidFinishPublishingAllAssets:(id)arg1;
- (void)_categorizeError:(id)arg1 setOutIsIgnorable:(_Bool *)arg2 setOutIsCounted:(_Bool *)arg3 setOutIsFatal:(_Bool *)arg4 setOutNeedsBackoff:(_Bool *)arg5 setOutIsTemporary:(_Bool *)arg6 setOutIsTokenAuth:(_Bool *)arg7 setOutIsAuthError:(_Bool *)arg8;
- (void)publishStorageProtocol:(id)arg1 didFinishUsingFD:(int)arg2 forAsset:(id)arg3;
- (int)publishStorageProtocol:(id)arg1 didRequestFDForAsset:(id)arg2;
- (void)publishStorageProtocol:(id)arg1 didFinishUploadingAsset:(id)arg2 error:(id)arg3;
- (void)_sendFilesToMMCS;
- (void)publishStreamsProtocol:(id)arg1 didReceiveAuthenticationError:(id)arg2;
- (void)publishStreamsProtocol:(id)arg1 didFinishUploadingMetadataResponse:(id)arg2 error:(id)arg3;
- (id)_invalidStreamsResponseErrorUnderlyingError:(id)arg1;
- (void)_sendMetadataToStreams;
- (void)submitAssetCollectionsForPublication:(id)arg1 skipAssetCollections:(id)arg2;
- (void)submitAssetCollectionsForPublication:(id)arg1;
- (void)_didFinishUsingAssetCollections:(id)arg1;
- (void)_removeAssetsInAssetCollectionWrappersFromAssetMap:(id)arg1;
- (void)_removeAssetFromFileHashMap:(id)arg1;
- (void)_addAssetToFileHashMap:(id)arg1;
- (void)_requestDerivatives;
- (void)publish;
- (_Bool)_isAllowedToUpload;
- (void)reenqueueQuarantinedAssetCollections;
- (id)_checkObjectWrappers:(id)arg1;
- (id)_checkAssetCollectionFiles:(id)arg1;
- (id)_collectionWithNoDerivatives:(id)arg1;
- (_Bool)_verifyAssetFile:(id)arg1;
- (void)_quarantineOrDiscardWrappers:(id)arg1 withError:(id)arg2;
- (void)_registerAllAssetsForWrapper:(id)arg1;
- (void)_registerAsset:(id)arg1;
- (void)_serverSideConfigurationDidChange:(id)arg1;
- (void)_refreshServerSideConfiguredParameters;
- (void)computeHashForAsset:(id)arg1;
- (_Bool)dequeueAssetCollectionWithGUIDs:(id)arg1 outError:(id *)arg2;
- (_Bool)enqueueAssetCollections:(id)arg1 outError:(id *)arg2;
- (void)_updateMasterManifest;
- (void)dealloc;
- (void)deactivate;
- (id)initWithPersonID:(id)arg1 baseURL:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSReauthorizationProtocol : MSStreamsProtocol
{
    struct __MSRPCContext {
        struct __MSSPCContext _super;
        CDUnknownFunctionPointerType finishedCallback;
        CDUnknownFunctionPointerType authFailedCallback;
        CDUnknownFunctionPointerType didReceiveRetryAfterCallback;
        CDUnknownFunctionPointerType didReceiveServerSideConfigurationVersionCallback;
    } _context;
    NSArray *_assetsInFlight;
}

- (void).cxx_destruct;
- (void)_coreProtocolDidFailAuthenticationError:(id)arg1;
- (void)_coreProtocolDidFinishResponse:(id)arg1 error:(id)arg2;
- (void)abort;
- (void)requestReauthorizationForAssets:(id)arg1;
- (void)dealloc;
- (id)initWithPersonID:(id)arg1 baseURL:(id)arg2;
- (void)setDelegate:(id)arg1;
- (id)delegate;

@end

@interface MSResetServer : NSObject <MSResetServerProtocolDelegate>
{
    NSString *_personID;
    MSResetServerProtocol *_protocol;
    MSMediaStreamDaemon *_daemon;
    id _selfReference;
}

+ (id)resetServerObjectWithPersonID:(id)arg1 baseURL:(id)arg2;
@property(nonatomic) MSMediaStreamDaemon *daemon; // @synthesize daemon=_daemon;
@property(readonly, nonatomic) NSString *personID; // @synthesize personID=_personID;
- (void).cxx_destruct;
- (void)resetServerProtocol:(id)arg1 didReceiveAuthenticationError:(id)arg2;
- (void)resetServerProtocol:(id)arg1 didFinishWithError:(id)arg2;
- (void)resetServer;
- (id)initWithPersonID:(id)arg1 baseURL:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSResetServerProtocol : MSStreamsProtocol
{
    struct __MSRSPCContext {
        struct __MSSPCContext _super;
        CDUnknownFunctionPointerType finishedCallback;
        CDUnknownFunctionPointerType authFailedCallback;
        CDUnknownFunctionPointerType didReceiveServerSideConfigurationVersionCallback;
    } _context;
}

- (void)_coreProtocolDidFailAuthenticationError:(id)arg1;
- (void)_coreProtocolDidFinishError:(id)arg1;
- (void)resetServerState;
- (void)dealloc;
- (void)abort;
- (id)initWithPersonID:(id)arg1 baseURL:(id)arg2;
- (void)setDelegate:(id)arg1;
- (id)delegate;

@end

@interface MSServerSideConfigManager : NSObject <MSServerSideConfigProtocolDelegate>
{
    NSString *_personID;
    NSDictionary *_config;
    MSMediaStreamDaemon *_daemon;
    NSString *_configPath;
    MSServerSideConfigProtocol *_protocol;
    int _state;
}

+ (id)objectForKey:(id)arg1 forPersonID:(id)arg2 defaultValue:(id)arg3;
+ (long long)longLongValueForParameter:(id)arg1 forPersonID:(id)arg2 defaultValue:(long long)arg3;
+ (long long)longValueForParameter:(id)arg1 forPersonID:(id)arg2 defaultValue:(long long)arg3;
+ (double)doubleValueForParameter:(id)arg1 forPersonID:(id)arg2 defaultValue:(double)arg3;
+ (int)intValueForParameter:(id)arg1 forPersonID:(id)arg2 defaultValue:(int)arg3;
+ (void)forgetPersonID:(id)arg1;
+ (void)abortAllActivities;
+ (id)existingConfigManagerForPersonID:(id)arg1;
+ (id)configManagerForPersonID:(id)arg1;
@property(nonatomic) MSMediaStreamDaemon *daemon; // @synthesize daemon=_daemon;
@property(readonly, nonatomic) NSString *personID; // @synthesize personID=_personID;
- (void).cxx_destruct;
- (void)serverSideConfigProtocol:(id)arg1 didReceiveAuthenticationError:(id)arg2;
- (void)serverSideConfigProtocol:(id)arg1 didFinishWithConfiguration:(id)arg2 error:(id)arg3;
- (void)abort;
- (void)refreshConfiguration;
@property(retain, nonatomic) NSDictionary *config;
- (void)dealloc;
- (id)initWithPersonID:(id)arg1 baseURL:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSServerSideConfigProtocol : NSObject
{
    id <MSServerSideConfigProtocolDelegate> _delegate;
    NSString *_personID;
    NSURL *_configURL;
    struct __MSSSCPCContext {
        struct __MSSPCContext _super;
        CDUnknownFunctionPointerType didFinishCallback;
        CDUnknownFunctionPointerType didFailAuthenticationCallback;
    } _context;
}

@property(nonatomic) id <MSServerSideConfigProtocolDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) NSString *personID; // @synthesize personID=_personID;
- (void).cxx_destruct;
- (void)_didFailAuthenticationWithError:(id)arg1;
- (void)_didFinishWithResponse:(id)arg1 error:(id)arg2;
- (void)abort;
- (void)queryConfiguration;
- (void)dealloc;
- (id)initWithPersonID:(id)arg1 baseURL:(id)arg2;

@end

@interface MSShare : NSObject <NSCoding>
{
    NSString *_personID;
    NSString *_firstName;
    NSString *_lastName;
    NSString *_emailAddress;
    NSString *_UUID;
    int _sharingOurStream;
    int _sharingTheirStream;
}

+ (id)share;
@property(nonatomic) int sharingTheirStream; // @synthesize sharingTheirStream=_sharingTheirStream;
@property(nonatomic) int sharingOurStream; // @synthesize sharingOurStream=_sharingOurStream;
@property(retain, nonatomic) NSString *UUID; // @synthesize UUID=_UUID;
@property(retain, nonatomic) NSString *emailAddress; // @synthesize emailAddress=_emailAddress;
@property(retain, nonatomic) NSString *lastName; // @synthesize lastName=_lastName;
@property(retain, nonatomic) NSString *firstName; // @synthesize firstName=_firstName;
@property(retain, nonatomic) NSString *personID; // @synthesize personID=_personID;
- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (id)description;
- (unsigned long long)hash;
@property(retain, nonatomic) NSString *fullName;
@property(nonatomic) int sharingTheirPhotostream;
@property(nonatomic) int sharingOurPhotostream;

@end

@interface MSShareStateNotificationString : NSObject
{
    NSString *_sourcePersonID;
    NSString *_title;
    NSString *_body;
}

+ (id)notificationStringsWithTitle:(id)arg1 body:(id)arg2 sourcePersonID:(id)arg3;
@property(retain, nonatomic) NSString *body; // @synthesize body=_body;
@property(retain, nonatomic) NSString *title; // @synthesize title=_title;
@property(retain, nonatomic) NSString *sourcePersonID; // @synthesize sourcePersonID=_sourcePersonID;
- (void).cxx_destruct;
- (id)initWithTitle:(id)arg1 body:(id)arg2 sourcePersonID:(id)arg3;

@end

@interface MSSharingManager : NSObject <MSSharingManager, MSSharingProtocolDelegate>
{
    NSString *_personID;
    NSString *_manifestPath;
    NSArray *_shares;
    NSMutableArray *_sharesWithLocalModifications;
    MSSharingProtocol *_protocol;
    int _state;
    _Bool _requestCurrentStateRequested;
    NSMutableArray *_invitationQueue;
    NSMutableArray *_invitationResponseQueue;
    NSMutableDictionary *_manageShareByPersonID;
    NSMutableArray *_deleteQueue;
    NSTimer *_manageShareDebounceTimer;
    id <MSSharingManagerDelegate> _delegate;
    MSMediaStreamDaemon *_daemon;
}

+ (void)forgetPersonID:(id)arg1;
+ (void)abortAllActivities;
+ (id)_clearInstantiatedSharingManagersByPersonID;
+ (id)existingSharingManagerForPersonID:(id)arg1;
+ (id)sharingManagerForPersonID:(id)arg1;
@property(nonatomic) MSMediaStreamDaemon *daemon; // @synthesize daemon=_daemon;
@property(nonatomic) id <MSSharingManagerDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) NSString *personID; // @synthesize personID=_personID;
- (void).cxx_destruct;
- (void)sharingProtocol:(id)arg1 didFailToSendInvitations:(id)arg2;
- (void)sharingProtocol:(id)arg1 didReceiveAuthenticationError:(id)arg2;
- (void)sharingProtocol:(id)arg1 didCompleteTransactionWithError:(id)arg2;
- (void)sharingProtocol:(id)arg1 didFindShareState:(id)arg2;
- (void)abort;
- (void)_performNextQueuedAction;
- (void)_requestCurrentShareState;
- (void)_sendNextManagedShare;
- (void)_sendNextInvitationResponse;
- (void)_sendNextInvitation;
- (void)_sendNextDeletion;
- (id)_sharesWithLocalModifications;
- (void)refreshCurrentShareState;
- (void)removeShare:(id)arg1;
- (void)modifyShare:(id)arg1;
- (void)_shareDebounceTimerDidFire:(id)arg1;
- (void)respondToInvitation:(id)arg1 accept:(_Bool)arg2;
- (void)sendInvitationsForShares:(id)arg1;
@property(retain, nonatomic) NSArray *shares;
- (void)dealloc;
- (id)initWithPersonID:(id)arg1 baseURL:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSSharingProtocol : NSObject
{
    struct __MSShPCContext {
        struct __MSSPCContext _super;
        CDUnknownFunctionPointerType didFindShareStateCallback;
        CDUnknownFunctionPointerType didFinishTransactionCallback;
        CDUnknownFunctionPointerType didFailAuthenticationCallback;
        CDUnknownFunctionPointerType didReceiveServerSideConfigurationVersionCallback;
        int __contextType;
    } _context;
    NSString *_personID;
    NSURL *_inviteURL;
    NSURL *_manageURL;
    NSURL *_respondURL;
    NSURL *_statusURL;
    NSArray *_shares;
    int _transactionType;
    id <MSSharingProtocolDelegate> _delegate;
}

+ (id)shareFromPushUserInfo:(id)arg1 outSourcePersonID:(id *)arg2 outTargetPersonID:(id *)arg3 outError:(id *)arg4;
+ (id)_invalidFieldErrorWithFieldName:(id)arg1;
+ (id)shareStateFromProtocol:(id)arg1;
+ (id)_shareDictsArrayFromShares:(id)arg1;
+ (id)_sharesFromShareDictsArray:(id)arg1;
+ (id)_shareDictFromShare:(id)arg1;
+ (id)_shareFromShareDict:(id)arg1;
+ (id)_dictShareStateFromShareState:(int)arg1;
+ (int)_shareStateFromShareDictShareState:(id)arg1;
@property(readonly, nonatomic) NSString *personID; // @synthesize personID=_personID;
@property(nonatomic) id <MSSharingProtocolDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)abort;
- (void)_didFindServerSideConfigurationVersion:(id)arg1;
- (void)_didFailAuthenticationWithError:(id)arg1;
- (void)_didFinishTransactionWithResponseObject:(id)arg1 error:(id)arg2;
- (void)_checkForFailedInvitesWithResponse:(id)arg1;
- (void)_didFindShareState:(id)arg1;
- (void)deleteShares:(id)arg1;
- (void)modifyShares:(id)arg1;
- (void)requestCurrentShareState;
- (void)sendResponseToInvitation:(id)arg1 accept:(_Bool)arg2;
- (void)sendInvitations:(id)arg1;
- (void)dealloc;
- (id)initWithPersonID:(id)arg1 baseURL:(id)arg2;

@end

@interface MSSubscribeMMCSProtocol : MSMMCSProtocol <MSSubscribeStorageProtocol>
{
    id <MSSubscribeStorageProtocolDelegate> _delegate;
    unsigned long long _itemCount;
    NSMutableDictionary *_itemIDToAssetDict;
    unsigned long long *_itemIDs;
    const char **_signatures;
    char **_authTokens;
}

@property(nonatomic) id <MSSubscribeStorageProtocolDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)_requestCompleted;
- (void)_getItemDone:(unsigned long long)arg1 path:(id)arg2 error:(id)arg3;
- (void)retrieveAssets:(id)arg1;
- (void)_tellDelegateProtocolDidFinishRetrievingAssetParams:(id)arg1;
- (void)dealloc;
- (void)deactivate;
- (id)initWithPersonID:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSSubscribeStreamsProtocol : MSStreamsProtocol
{
    struct __MSSSPCContext {
        struct __MSSPCContext _super;
        CDUnknownFunctionPointerType finishedCallback;
        CDUnknownFunctionPointerType gotDataChunkCallback;
        CDUnknownFunctionPointerType authFailedCallback;
        CDUnknownFunctionPointerType didReceiveServerSideConfigurationVersionCallback;
        CDUnknownFunctionPointerType didReceiveRetryAfterCallback;
        double connectionTimeout;
        long long __state;
        struct __CFData *__chunkLengthData;
        struct __CFData *__currentChunkData;
        long long __chunkBytesRemaining;
    } _context;
    int _chunkIndex;
    struct __MSSSPCChunkParsingContext {
        void *_field1;
        CDUnknownFunctionPointerType _field2;
        CDUnknownFunctionPointerType _field3;
        CDUnknownFunctionPointerType _field4;
        CDUnknownFunctionPointerType _field5;
        CDUnknownFunctionPointerType _field6;
        CDUnknownFunctionPointerType _field7;
        struct __CFString *_field8;
        struct __CFURL *_field9;
        struct __CFString *_field10;
        struct __CFString *_field11;
        int _field12;
    } *_parseContext;
}

- (void)abort;
- (id)_assetCollectionsFromCoreArray:(id)arg1 personID:(id)arg2 outError:(id *)arg3;
- (id)_assetFromCoreDictionary:(id)arg1 personID:(id)arg2 outError:(id *)arg3;
- (id)_invalidFieldErrorWithFieldName:(id)arg1;
- (id)_invalidFieldErrorWithFieldName:(id)arg1 suggestion:(id)arg2;
- (void)_chunkDidFindShareState:(id)arg1;
- (void)_chunkDidFindSubscriptionTemporarilyUnavailableForPersonID:(id)arg1;
- (void)_chunkDidFindSubscriptionGoneForPersonID:(id)arg1;
- (void)_chunkDidEndStreamForPersonID:(id)arg1 ctag:(id)arg2;
- (void)_chunkDidParseAssetCollections:(id)arg1 forPersonID:(id)arg2;
- (void)_chunkDidBeginStreamForPersonID:(id)arg1 wasReset:(_Bool)arg2 metadata:(id)arg3;
- (void)_parseNextChunk;
- (void)_parseChunks;
- (void)_coreProtocolDidFailAuthentication:(id)arg1;
- (void)_coreProtocolDidGetDataChunk:(id)arg1;
- (void)_coreProtocolDidFinishError:(id)arg1;
- (void)pollForSubscriptionUpdatesWithAccountAnchors:(id)arg1;
- (id)_pathToChunkIndex:(int)arg1;
- (void)dealloc;
- (id)initWithPersonID:(id)arg1 baseURL:(id)arg2;
- (void)setDelegate:(id)arg1;
- (id)delegate;

@end

@interface MSSubscribedStream : NSObject <NSCoding>
{
    NSString *_streamID;
    NSString *_ctag;
}

+ (id)subscribedStreamWithStreamID:(id)arg1;
@property(retain, nonatomic) NSString *ctag; // @synthesize ctag=_ctag;
@property(retain, nonatomic) NSString *streamID; // @synthesize streamID=_streamID;
- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)description;
- (id)initWithStreamID:(id)arg1;

@end

@interface MSSubscriber : MSCupidStateMachine <MSSubscriber, MSSubscribeStreamsProtocolDelegate, MSSubscribeStorageProtocolDelegate, MSReauthorizationProtocolDelegate>
{
    id <MSSubscriberDelegate> _delegate;
    MSMediaStreamDaemon *_daemon;
    _Bool _checkOneMoreTime;
    int _state;
    MSSubscribeStreamsProtocol *_protocol;
    NSMutableDictionary *_newSubscriptionsByStreamID;
    int _retrievalState;
    id <MSSubscribeStorageProtocol> _storageProtocol;
    MSReauthorizationProtocol *_reauthProtocol;
    MSObjectQueue *_retrievalQueue;
    NSMutableArray *_assetsBeingRetrieved;
    long long _targetRetrievalByteCount;
    int _retrievalBatchSize;
    long long _maxErrorCount;
}

+ (id)_descriptionForRetrievalState:(int)arg1;
+ (id)_descriptionForState:(int)arg1;
+ (_Bool)isInRetryState;
+ (void)stopAllActivities;
+ (id)personIDsWithOutstandingActivities;
+ (id)nextActivityDateForPersonID:(id)arg1;
+ (id)nextActivityDate;
+ (void)_setMasterNextActivityDate:(id)arg1 forPersonID:(id)arg2;
+ (void)forgetPersonID:(id)arg1;
+ (id)_clearInstantiatedSubscribersByPersonID;
+ (id)existingSubscriberForPersonID:(id)arg1;
+ (id)subscriberForPersonID:(id)arg1;
@property(nonatomic) int retrievalBatchSize; // @synthesize retrievalBatchSize=_retrievalBatchSize;
@property(nonatomic) long long targetRetrievalByteCount; // @synthesize targetRetrievalByteCount=_targetRetrievalByteCount;
@property(nonatomic) MSMediaStreamDaemon *daemon; // @synthesize daemon=_daemon;
@property(nonatomic) id <MSSubscriberDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)reauthorizationProtocol:(id)arg1 reauthorizedAssets:(id)arg2 rejectedAssets:(id)arg3 error:(id)arg4;
- (void)reauthorizationProtocol:(id)arg1 didReceiveAuthenticationError:(id)arg2;
- (void)subscribeStorageProtocolDidFinishRetrievingAllAssets:(id)arg1;
- (void)subscribeStorageProtocol:(id)arg1 didFinishRetrievingAsset:(id)arg2 error:(id)arg3;
- (void)_finishedRetrievingAsset:(id)arg1;
- (_Bool)_isInRetryState;
- (void)_forget;
- (void)abort;
- (void)_abort;
- (void)stop;
- (void)_stopOutSubscriberState:(int *)arg1 outRetrievalState:(int *)arg2;
- (void)_reauthorizeAssets;
- (void)_retrieveNextAssets;
- (void)_retrieveAssets;
- (void)checkForOutstandingActivities;
- (void)retrieveAssets:(id)arg1;
- (void)subscribeStreamsProtocol:(id)arg1 didFindShareState:(id)arg2;
- (void)subscribeStreamsProtocol:(id)arg1 didFindTemporarilyUnavailableSubscriptionForPersonID:(id)arg2;
- (void)subscribeStreamsProtocol:(id)arg1 didReceiveAuthenticationError:(id)arg2;
- (void)_didReceiveAuthenticationError:(id)arg1;
- (void)subscribeStreamsProtocol:(id)arg1 didFinishError:(id)arg2;
- (void)subscribeStreamsProtocol:(id)arg1 didFindDisappearedSubscriptionForPersonID:(id)arg2;
- (void)subscribeStreamsProtocol:(id)arg1 didFinishReceivingUpdatesForPersonID:(id)arg2 ctag:(id)arg3;
- (void)subscribeStreamsProtocol:(id)arg1 didReceiveAssetCollections:(id)arg2 forPersonID:(id)arg3;
- (void)subscribeStreamsProtocol:(id)arg1 willReceiveUpdatesForPersonID:(id)arg2 wasReset:(_Bool)arg3 metadata:(id)arg4;
- (void)_didFinishRetrievingSubscriptionUpdate;
- (void)_checkForNewAssetCollections;
- (void)checkForNewAssetCollections;
- (_Bool)_isAllowedToDownload;
- (void)resetSync;
- (void)_setSubscriptionsByStreamID:(id)arg1;
- (id)_subscriptionsByStreamID;
- (void)_setHasOutstandingPoll:(_Bool)arg1;
- (_Bool)_hasOutstandingPoll;
- (void)_updateMasterManifest;
- (void)_serverSideConfigurationDidChange:(id)arg1;
- (void)_refreshServerSideConfigurationParameters;
- (void)_changeRetrievalStateTo:(int)arg1;
- (void)_changeStateTo:(int)arg1;
- (void)dealloc;
- (void)deactivate;
- (id)initWithPersonID:(id)arg1 baseURL:(id)arg2;
- (id)ownSubscribedStream;
- (id)subscribedStreams;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSTimerGate : NSObject
{
    _Bool _enabled;
}

@property(nonatomic) _Bool enabled; // @synthesize enabled=_enabled;
- (void)enable;
- (void)disable;
- (id)init;

@end

@interface MSVideoDerivativeSpecification : NSObject
{
    _Bool _useCellular;
    _Bool _powerRequired;
    double _bitRate;
    NSString *_videoType;
    unsigned long long _mediaAssetType;
}

+ (id)videoDerivativeSpecificationsWithDictionaryArray:(id)arg1;
@property(readonly, nonatomic) unsigned long long mediaAssetType; // @synthesize mediaAssetType=_mediaAssetType;
@property(readonly, nonatomic) NSString *videoType; // @synthesize videoType=_videoType;
@property(readonly, nonatomic) double bitRate; // @synthesize bitRate=_bitRate;
@property(readonly, nonatomic) _Bool powerRequired; // @synthesize powerRequired=_powerRequired;
@property(readonly, nonatomic) _Bool useCellular; // @synthesize useCellular=_useCellular;
- (id)initWithDictionary:(id)arg1;

@end

@interface NSArray (MSArrayUtilities)
- (id)MSDeepCopy;
- (id)MSDeepCopyWithZone:(struct _NSZone *)arg1;
- (id)MSMutableDeepCopy;
- (id)MSMutableDeepCopyWithZone:(struct _NSZone *)arg1;
@end

@interface NSArray (MSDeleteStreamsProtocol)
- (id)MSDSPAssetCollectionWithMasterFileHash:(id)arg1;
@end

@interface NSData (MSDataUtilities)
- (id)MSHexString;
- (id)MSBase64Encoding;
- (id)MSInitWithBase64Encoding:(id)arg1;
@end

@interface NSDictionary (MCDictionaryUtilities)
- (id)MSDeepCopy;
- (id)MSDeepCopyWithZone:(struct _NSZone *)arg1;
- (id)MSMutableDeepCopy;
- (id)MSMutableDeepCopyWithZone:(struct _NSZone *)arg1;
@end

@interface NSDictionary (MSASDefinitions)
- (_Bool)MSASIsErrorRecovery;
- (_Bool)MSASIsNotInteresting;
- (id)MSASEventIsDueToAssetCollectionDeletionAssetCollectionGUID;
- (id)MSASEventIsDueToAlbumDeletionAlbumGUID;
- (_Bool)MSASIsLocalChange;
- (id)MSASAlbumResetSyncAlbumGUID;
- (_Bool)MSASIsGlobalResetSync;
@end

@interface NSError (MMCSKit)
+ (id)MMCSErrorWithDomain:(id)arg1 code:(long long)arg2 description:(id)arg3;
- (id)MMCSRetryAfterDate;
- (_Bool)MMCSIsFatalError;
- (_Bool)MMCSIsAuthorizationError;
- (_Bool)MMCSIsNetworkConditionsError;
- (_Bool)MMCSIsCancelError;
- (void)_MMCSApplyBlock:(CDUnknownBlockType)arg1;
- (int)MMCSErrorType;
@end

@interface NSError (MSErrorUtilities)
+ (id)MSErrorWithDomain:(id)arg1 code:(long long)arg2 description:(id)arg3 underlyingError:(id)arg4 additionalUserInfo:(id)arg5;
+ (id)MSErrorWithDomain:(id)arg1 code:(long long)arg2 description:(id)arg3 underlyingError:(id)arg4;
+ (id)MSErrorWithDomain:(id)arg1 code:(long long)arg2 description:(id)arg3 suggestion:(id)arg4;
+ (id)MSErrorWithDomain:(id)arg1 code:(long long)arg2 description:(id)arg3;
- (id)MSMMCSRetryAfterDate;
- (_Bool)MSIsRegistrationError;
- (_Bool)MSIsQuotaError;
- (_Bool)MSContainsErrorWithDomain:(id)arg1 code:(long long)arg2;
- (_Bool)MSIsBadTokenError;
- (_Bool)MSIsAuthError;
- (_Bool)MSIsFatal;
- (_Bool)MSIsCounted;
- (_Bool)MSNeedsBackoff;
- (_Bool)MSCanBeIgnored;
- (_Bool)MSASStateMachineIsCanceledError;
- (_Bool)MSIsTemporaryNetworkError;
- (void)_MSApplyBlock:(CDUnknownBlockType)arg1;
- (id)MSFindPrimaryError;
- (id)MSMakePrimaryError;
- (id)MSVerboseDescription;
- (id)_MSVerboseDescriptionRecursionCount:(int)arg1;
@end

@interface NSKeyedUnarchiver (MSUtilities)
+ (id)MSSafeUnarchiveObjectWithFile:(id)arg1 outError:(id *)arg2;
+ (id)MSSafeUnarchiveObjectWithFile:(id)arg1;
+ (id)MSSafeUnarchiveObjectWithData:(id)arg1 outError:(id *)arg2;
+ (id)MSSafeUnarchiveObjectWithData:(id)arg1;
@end

@interface NSMutableArray (MSArrayUtilities)
- (void)MSRemoveOneObjectByPointerComparison:(id)arg1;
- (void)MSRemoveOneObject:(id)arg1;
@end

@interface NSMutableDictionary (MSASServerSideModel)
+ (id)MSASDictionaryWithCopyOfDictionary:(id)arg1;
- (id)MSASAddIsErrorRecovery;
- (id)MSASAddNotInterestingKey;
- (id)MSASAddEventIsDueToAssetCollectionDeletionAssetCollectionGUID:(id)arg1;
- (id)MSASAddEventIsDueToAlbumDeletionAlbumGUID:(id)arg1;
- (id)MSASAddIsLocalChange;
- (id)MSASAddIsAlbumResetSyncAlbumGUID:(id)arg1;
- (id)MSASAddIsGlobalResetSync;
- (id)MSASAddDictionary:(id)arg1;
@end

@interface NSString (MSStringUtilities)
+ (id)MSStringWithBool:(_Bool)arg1;
+ (id)MSTempFilePath;
+ (id)MSMakeUUID;
- (unsigned long long)MSUniqueID;
- (id)MSHexData;
@end

