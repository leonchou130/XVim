//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CGAffineTransform {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct UIEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct UIOffset {
    double horizontal;
    double vertical;
};

struct _NSRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

#pragma mark Typedef'd Structures

typedef struct {
    long long _field1;
    long long _field2;
    double _field3;
} CDStruct_8ff95007;

typedef struct {
    struct CGSize baseSize;
    _Bool forcesIntegralX;
    _Bool forcesIntegralY;
    struct UIOffset maximumRelativeOffsetStep;
    struct CGSize sizeInsetStep;
    double vanishingPointY;
} CDStruct_22171f69;

typedef struct {
    unsigned long long _field1;
    double _field2;
    double _field3;
    struct CGRect _field4;
    struct CGAffineTransform _field5;
    double _field6;
    double _field7;
    double _field8;
} CDStruct_93c99dff;

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/RadioUI.framework/RadioUI
// UUID: 90CB82F7-7189-3BB3-ACC6-2010ED3BBE69
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 613.0.0.0.0
//            Minimum iOS version: 8.0.0
//                    SDK version: 8.0.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol ADAdSlotDelegate <NSObject>
- (void)adSlot:(ADAdSlot *)arg1 didChangeSelectedAds:(NSArray *)arg2 previousAds:(NSArray *)arg3;
@end

@protocol ADBannerViewDelegate <NSObject>

@optional
- (void)bannerViewActionDidFinish:(ADBannerView *)arg1;
- (_Bool)bannerViewActionShouldBegin:(ADBannerView *)arg1 willLeaveApplication:(_Bool)arg2;
- (void)bannerView:(ADBannerView *)arg1 didFailToReceiveAdWithError:(NSError *)arg2;
- (void)bannerViewDidLoadAd:(ADBannerView *)arg1;
- (void)bannerViewWillLoadAd:(ADBannerView *)arg1;
@end

@protocol AVAssetResourceLoaderDelegate <NSObject>

@optional
- (void)resourceLoader:(AVAssetResourceLoader *)arg1 didCancelAuthenticationChallenge:(NSURLAuthenticationChallenge *)arg2;
- (_Bool)resourceLoader:(AVAssetResourceLoader *)arg1 shouldWaitForResponseToAuthenticationChallenge:(NSURLAuthenticationChallenge *)arg2;
- (void)resourceLoader:(AVAssetResourceLoader *)arg1 didCancelLoadingRequest:(AVAssetResourceLoadingRequest *)arg2;
- (_Bool)resourceLoader:(AVAssetResourceLoader *)arg1 shouldWaitForRenewalOfRequestedResource:(AVAssetResourceRenewalRequest *)arg2;
- (_Bool)resourceLoader:(AVAssetResourceLoader *)arg1 shouldWaitForLoadingOfRequestedResource:(AVAssetResourceLoadingRequest *)arg2;
@end

@protocol ISDialogOperationDelegate <ISOperationDelegate>

@optional
- (void)operation:(ISDialogOperation *)arg1 selectedButton:(ISDialogButton *)arg2;
@end

@protocol ISOperationDelegate <NSObject>

@optional
- (void)operationWillStart:(ISOperation *)arg1;
- (void)operationFinished:(ISOperation *)arg1;
- (void)operation:(ISOperation *)arg1 updatedProgress:(SSOperationProgress *)arg2;
- (void)operation:(ISOperation *)arg1 failedWithError:(NSError *)arg2;
@end

@protocol MCProfileConnectionObserver <NSObject>

@optional
- (void)profileConnectionDidReceiveAppWhitelistChangedNotification:(MCProfileConnection *)arg1 userInfo:(NSDictionary *)arg2;
- (void)profileConnectionDidReceiveDefaultsChangedNotification:(MCProfileConnection *)arg1 userInfo:(NSDictionary *)arg2;
- (void)profileConnectionDidReceiveEffectiveSettingsChangedNotification:(MCProfileConnection *)arg1 userInfo:(NSDictionary *)arg2;
- (void)profileConnectionDidReceiveProfileListChangedNotification:(MCProfileConnection *)arg1 userInfo:(NSDictionary *)arg2;
- (void)profileConnectionDidReceivePasscodePolicyChangedNotification:(MCProfileConnection *)arg1 userInfo:(NSDictionary *)arg2;
- (void)profileConnectionDidReceivePasscodeChangedNotification:(MCProfileConnection *)arg1 userInfo:(NSDictionary *)arg2;
- (void)profileConnectionDidReceiveRestrictionChangedNotification:(MCProfileConnection *)arg1 userInfo:(NSDictionary *)arg2;
@end

@protocol MPAVRoutingControllerDelegate <NSObject>

@optional
- (void)routingController:(MPAVRoutingController *)arg1 didFailToPickRouteWithError:(NSError *)arg2;
- (void)routingControllerExternalScreenTypeDidChange:(MPAVRoutingController *)arg1;
- (void)routingControllerAvailableRoutesDidChange:(MPAVRoutingController *)arg1;
@end

@protocol MPArtworkDataSource <NSObject>
- (_Bool)areRepresentationsForCatalog:(MPArtworkCatalog *)arg1 visuallyIdenticalToRepresentationsForCatalog:(MPArtworkCatalog *)arg2;
- (void)cancelLoadingRepresentationForArtworkCatalog:(MPArtworkCatalog *)arg1;
- (void)loadRepresentationForArtworkCatalog:(MPArtworkCatalog *)arg1 completionHandler:(void (^)(MPArtworkRepresentation *, NSError *))arg2;
- (MPArtworkRepresentation *)existingRepresentationForArtworkCatalog:(MPArtworkCatalog *)arg1;
- (_Bool)isRepresentation:(MPArtworkRepresentation *)arg1 bestRepresentationForArtworkCatalog:(MPArtworkCatalog *)arg2;
- (_Bool)areRepresentationsAvailableForCatalog:(MPArtworkCatalog *)arg1;
@end

@protocol MPPlaybackControlsDelegate <NSObject>

@optional
- (_Bool)controlsOverlay:(MPPlaybackControlsView *)arg1 shouldDisableMailPodcastLinkButtonForItem:(MPAVItem *)arg2;
- (_Bool)controlsOverlay:(MPPlaybackControlsView *)arg1 shouldHideMailPodcastLinkButtonForItem:(MPAVItem *)arg2;
- (void)controlsOverlay:(MPPlaybackControlsView *)arg1 didClickMailPodcastLinkButtonForItem:(MPAVItem *)arg2;
- (void)controlsOverlayDetailSliderInstructionOverlayWillHide:(MPPlaybackControlsView *)arg1;
- (void)controlsOverlayDetailSliderInstructionOverlayWillShow:(MPPlaybackControlsView *)arg1;
- (void)controlsOverlay:(MPPlaybackControlsView *)arg1 detailSliderTrackingDidChangeScrubSpeed:(long long)arg2;
- (void)controlsOverlayDetailSliderTrackingDidEnd:(MPPlaybackControlsView *)arg1;
- (void)controlsOverlayDetailSliderTrackingDidBegin:(MPPlaybackControlsView *)arg1;
- (_Bool)controlsOverlay:(MPPlaybackControlsView *)arg1 shouldUseDetailScrubberForItem:(MPAVItem *)arg2;
- (unsigned long long)controlsOverlay:(MPPlaybackControlsView *)arg1 playbackSpeedForItem:(MPAVItem *)arg2;
- (_Bool)controlsOverlay:(MPPlaybackControlsView *)arg1 shouldDisablePlaybackSpeedButtonForItem:(MPAVItem *)arg2;
- (void)controlsOverlayDidClickPlaybackSpeedButton:(MPPlaybackControlsView *)arg1;
- (_Bool)controlsOverlay:(MPPlaybackControlsView *)arg1 shouldDisableFastFowardAndRewindButtonForItem:(MPAVItem *)arg2;
- (void)controlsOverlayDidClickFastForwardButton:(MPPlaybackControlsView *)arg1;
- (void)controlsOverlayDidClickRewindButton:(MPPlaybackControlsView *)arg1;
- (unsigned long long)shuffleTypeForPlaybackControls:(MPPlaybackControlsView *)arg1;
- (unsigned long long)repeatTypeForPlaybackControls:(MPPlaybackControlsView *)arg1;
- (_Bool)hideGeniusButtonForPlaybackControls:(MPPlaybackControlsView *)arg1;
- (_Bool)playbackControlsScrubberShouldDisplaySingleChapters:(MPPlaybackControlsView *)arg1;
- (_Bool)playbackControlsDidTapGeniusButton:(MPPlaybackControlsView *)arg1;
- (_Bool)playbackControls:(MPPlaybackControlsView *)arg1 changedShuffleType:(unsigned long long)arg2;
- (_Bool)playbackControls:(MPPlaybackControlsView *)arg1 changedRepeatType:(unsigned long long)arg2;
@end

@protocol MPStoreDownloadManagerObserver <NSObject>

@optional
- (void)downloadManager:(MPStoreDownloadManager *)arg1 downloadPurchaseDidFinish:(MPStoreDownload *)arg2;
- (void)downloadManager:(MPStoreDownloadManager *)arg1 downloadDidProgress:(MPStoreDownload *)arg2;
- (void)downloadManager:(MPStoreDownloadManager *)arg1 downloadDidFinish:(MPStoreDownload *)arg2;
- (void)downloadManager:(MPStoreDownloadManager *)arg1 didAddDownloads:(NSArray *)arg2 removeDownloads:(NSArray *)arg3;
@end

@protocol MPTransportControlsTarget <NSObject>

@optional
- (void)transportControlsDidResize:(MPTransportControls *)arg1;
- (_Bool)transportControls:(MPTransportControls *)arg1 tappedButtonPart:(unsigned long long)arg2;
- (_Bool)transportControls:(MPTransportControls *)arg1 releasedHeldButtonPart:(unsigned long long)arg2;
- (_Bool)transportControls:(MPTransportControls *)arg1 heldButtonPart:(unsigned long long)arg2;
@end

@protocol MPUMiniPlayerParticipant <NSObject>
- (MPUProspectivePlaybackInformation *)MPU_prospectivePlaybackInformation;

@optional
- (_Bool)MPU_beginPlaybackForVisibleContent;
@end

@protocol MPUNowPlayingPlaybackControlsViewDelegate <MPPlaybackControlsDelegate>

@optional
- (void)playbackControls:(MPUNowPlayingPlaybackControlsView *)arg1 didSelectCreateAction:(long long)arg2;
@end

@protocol MPUStackViewDataSource <NSObject>
- (void)stackView:(MPUStackView *)arg1 didCreateItem:(MPUStackItemView *)arg2;
- (void)stackView:(MPUStackView *)arg1 applyAttributesToItem:(MPUStackItemView *)arg2 atIndex:(long long)arg3;
- (long long)numberOfItemsInStackView:(MPUStackView *)arg1;
@end

@protocol MPUTextDrawingCacheInvalidationObserver <NSObject>
- (void)textDrawingCacheWasInvalidated:(MPUTextDrawingCache *)arg1;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol RUAddSeedViewControllerDelegate <NSObject>

@optional
- (void)addSeedViewControllerDidCancel:(RUAddSeedViewController *)arg1;
- (void)addSeedViewController:(RUAddSeedViewController *)arg1 didSelectStation:(NSDictionary *)arg2;
@end

@protocol RUAudioPreviewViewDelegate <NSObject>

@optional
- (void)audioPreviewViewDidCancel:(RUAudioPreviewView *)arg1 forReason:(long long)arg2;
@end

@protocol RUCreateStationViewControllerDelegate <NSObject>

@optional
- (void)createStationViewControllerDidFinish:(RUCreateStationViewController *)arg1;
- (void)createStationViewController:(RUCreateStationViewController *)arg1 didSelectStation:(NSDictionary *)arg2;
@end

@protocol RUEditStationsViewControllerDelegate <NSObject>

@optional
- (void)editStationsViewControllerDidFinish:(RUEditStationsViewController *)arg1;
- (void)editStationsViewController:(RUEditStationsViewController *)arg1 didDeleteStation:(RadioStation *)arg2;
@end

@protocol RUHistoryDataSourceDelegate <NSObject>

@optional
- (UIViewController *)historyDataSource:(RUHistoryDataSource *)arg1 viewControllerForPresentingAdTrack:(RURadioAdTrack *)arg2;
- (void)historyDataSourceDidUpdateHistoryCategories:(RUHistoryDataSource *)arg1;
@end

@protocol RUHistoryViewControllerDelegate <NSObject>

@optional
- (void)historyViewControllerDidFinish:(RUHistoryViewController *)arg1;
@end

@protocol RUMiniPlayerRadioTransportControlsTarget <MPTransportControlsTarget>

@optional
- (void)transportControls:(MPTransportControls *)arg1 requestsStationVisibility:(RadioStation *)arg2;
- (void)transportControls:(MPTransportControls *)arg1 presentStationActionsForItem:(MPAVItem *)arg2;
- (void)transportControls:(MPTransportControls *)arg1 addStationForItem:(MPAVItem *)arg2 usingArtist:(_Bool)arg3;
@end

@protocol RUNowPlayingPlaybackControlsViewDelegate <MPUNowPlayingPlaybackControlsViewDelegate>

@optional
- (void)playbackControlsDidTapInfoButton:(RUNowPlayingPlaybackControlsView *)arg1;
@end

@protocol RUPreviewSessionObserver <NSObject>

@optional
- (void)previewSession:(RUPreviewSession *)arg1 didStopWithOptions:(long long)arg2 withFinalItem:(MPAVItem *)arg3 didFinalItemPlayToCompletion:(_Bool)arg4;
- (void)previewSession:(RUPreviewSession *)arg1 didChangeFromItem:(MPAVItem *)arg2 toItem:(MPAVItem *)arg3;
@end

@protocol RURadioCollectionViewDelegate <UICollectionViewDelegate>

@optional
- (void)radioCollectionViewDidChangeContentSize:(RURadioCollectionView *)arg1;
@end

@protocol RUSearchDataSourceDelegate <NSObject>

@optional
- (void)searchDataSource:(RUSearchDataSource *)arg1 willStartSearchRequest:(RadioSearchRequest *)arg2;
- (void)searchDataSource:(RUSearchDataSource *)arg1 didFinishUpdatingResult:(RUSearchResult *)arg2 forRequest:(RadioSearchRequest *)arg3 withError:(NSError *)arg4;
@end

@protocol RUSearchViewControllerDelegate <NSObject>

@optional
- (void)searchViewController:(RUSearchViewController *)arg1 willShowSearchResultsTableView:(UITableView *)arg2;
- (void)searchViewController:(RUSearchViewController *)arg1 willHideSearchResultsTableView:(UITableView *)arg2;
- (void)searchViewControllerWillEndSearching:(RUSearchViewController *)arg1;
- (void)searchViewControllerDidEndSearching:(RUSearchViewController *)arg1;
- (void)searchViewControllerWillBeginSearching:(RUSearchViewController *)arg1;
- (void)searchViewControllerDidBeginSearching:(RUSearchViewController *)arg1;
- (void)searchViewController:(RUSearchViewController *)arg1 didSelectStation:(NSDictionary *)arg2;
- (NSString *)metricsPageTypeForSearchViewController:(RUSearchViewController *)arg1;
- (NSString *)metricsPageDescriptionForSearchViewController:(RUSearchViewController *)arg1;
@end

@protocol RUSignInViewControllerDelegate <NSObject>

@optional
- (void)signInViewController:(RUSignInViewController *)arg1 didCompleteWithAuthenticateResponse:(SSAuthenticateResponse *)arg2;
@end

@protocol RUStationActionsViewControllerDelegate <NSObject>

@optional
- (void)stationActionsViewController:(RUStationActionsViewController *)arg1 didFinishAction:(long long)arg2 withObject:(id)arg3 error:(NSError *)arg4;
- (void)stationActionsViewController:(RUStationActionsViewController *)arg1 willBeginAction:(long long)arg2;
@end

@protocol RUStationTrackInfoViewDelegate <NSObject>

@optional
- (void)trackInfoViewDidTapStoreButton:(RUStationTrackInfoView *)arg1;
- (void)trackInfoViewDidTapArtwork:(RUStationTrackInfoView *)arg1;
@end

@protocol RUStationTreeViewControllerDelegate <NSObject>

@optional
- (void)stationTreeViewController:(RUStationTreeViewController *)arg1 scrollViewDidScroll:(UIScrollView *)arg2;
- (void)stationTreeViewController:(RUStationTreeViewController *)arg1 didSelectStationTreeNode:(RadioStationTreeNode *)arg2;
@end

@protocol RUTermsViewControllerDelegate <NSObject>

@optional
- (void)termsViewController:(RUTermsViewController *)arg1 didAcceptTerms:(_Bool)arg2;
@end

@protocol RUTrackActioning <NSObject>
+ (struct CGSize)artworkSize;
@property(copy, nonatomic) NSString *songText;
@property(nonatomic) long long onActions;
@property(nonatomic) long long enabledActions;
@property(nonatomic) __weak id <RUTrackActionsDelegate> trackActionsDelegate;
@property(readonly, nonatomic) struct CGSize contentSize;
@property(readonly, nonatomic) long long cancelIndex;
@property(retain, nonatomic) UIImage *artworkImage;
@property(copy, nonatomic) NSString *artistText;
- (long long)actionForButtonIndex:(long long)arg1;
@end

@protocol RUTrackActionsDelegate <NSObject>

@optional
- (NSString *)trackActioningObject:(id <RUTrackActioning>)arg1 localizedTitleForAction:(long long)arg2;
- (void)trackActioningObjectDidChangeContentSize:(id <RUTrackActioning>)arg1;
- (void)trackActioningObject:(id <RUTrackActioning>)arg1 didSelectAction:(long long)arg2 atIndex:(long long)arg3;
@end

@protocol RUTrackDownloadViewDelegate <NSObject>

@optional
- (void)trackDownloadViewWillTransition:(RUTrackDownloadView *)arg1;
- (void)trackDownloadView:(RUTrackDownloadView *)arg1 stateDidChangeToState:(long long)arg2;
@end

@protocol RUWelcomeViewControllerDelegate <NSObject>

@optional
- (void)welcomeViewController:(RUWelcomeViewController *)arg1 willDisplayFailureAlert:(UIAlertView *)arg2;
- (void)welcomeViewControllerDidReceiveServiceUnavailable:(RUWelcomeViewController *)arg1;
- (void)welcomeViewControllerDidOptIn:(RUWelcomeViewController *)arg1;
@end

@protocol RUWishlistDataSourceDelegate <NSObject>

@optional
- (void)wishlistDataSourceDidInvalidate:(RUWishlistDataSource *)arg1;
@end

@protocol RadioPushNotificationControllerDelegate <NSObject>

@optional
- (void)pushNotificationControllerDidReceiveSyncRequest:(RadioPushNotificationController *)arg1 toGlobalVersion:(unsigned long long)arg2;
@end

@protocol SKStoreProductViewControllerDelegate <NSObject>

@optional
- (void)productViewControllerDidFinish:(SKStoreProductViewController *)arg1;
@end

@protocol SKUIItemOfferButtonDelegate <NSObject>

@optional
- (void)itemOfferButtonWillAnimateTransition:(SKUIItemOfferButton *)arg1;
- (void)itemOfferButtonDidAnimateTransition:(SKUIItemOfferButton *)arg1;
@end

@protocol SSMetricsEventFieldProvider <NSObject>

@optional
- (id)valueForMetricsField:(NSString *)arg1;
@end

@protocol UIActionSheetDelegate <NSObject>

@optional
- (void)actionSheet:(UIActionSheet *)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)actionSheet:(UIActionSheet *)arg1 willDismissWithButtonIndex:(long long)arg2;
- (void)didPresentActionSheet:(UIActionSheet *)arg1;
- (void)willPresentActionSheet:(UIActionSheet *)arg1;
- (void)actionSheetCancel:(UIActionSheet *)arg1;
- (void)actionSheet:(UIActionSheet *)arg1 clickedButtonAtIndex:(long long)arg2;
@end

@protocol UIAdaptivePresentationControllerDelegate <NSObject>

@optional
- (UIViewController *)presentationController:(UIPresentationController *)arg1 viewControllerForAdaptivePresentationStyle:(long long)arg2;
- (long long)adaptivePresentationStyleForPresentationController:(UIPresentationController *)arg1;
@end

@protocol UIAlertViewDelegate <NSObject>

@optional
- (_Bool)alertViewShouldEnableFirstOtherButton:(UIAlertView *)arg1;
- (void)alertView:(UIAlertView *)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)alertView:(UIAlertView *)arg1 willDismissWithButtonIndex:(long long)arg2;
- (void)didPresentAlertView:(UIAlertView *)arg1;
- (void)willPresentAlertView:(UIAlertView *)arg1;
- (void)alertViewCancel:(UIAlertView *)arg1;
- (void)alertView:(UIAlertView *)arg1 clickedButtonAtIndex:(long long)arg2;
@end

@protocol UIBarPositioningDelegate <NSObject>

@optional
- (long long)positionForBar:(id <UIBarPositioning>)arg1;
@end

@protocol UICollectionViewDataSource <NSObject>
- (UICollectionViewCell *)collectionView:(UICollectionView *)arg1 cellForItemAtIndexPath:(NSIndexPath *)arg2;
- (long long)collectionView:(UICollectionView *)arg1 numberOfItemsInSection:(long long)arg2;

@optional
- (UICollectionReusableView *)collectionView:(UICollectionView *)arg1 viewForSupplementaryElementOfKind:(NSString *)arg2 atIndexPath:(NSIndexPath *)arg3;
- (long long)numberOfSectionsInCollectionView:(UICollectionView *)arg1;
@end

@protocol UICollectionViewDelegate <UIScrollViewDelegate>

@optional
- (UICollectionViewTransitionLayout *)collectionView:(UICollectionView *)arg1 transitionLayoutForOldLayout:(UICollectionViewLayout *)arg2 newLayout:(UICollectionViewLayout *)arg3;
- (void)collectionView:(UICollectionView *)arg1 performAction:(SEL)arg2 forItemAtIndexPath:(NSIndexPath *)arg3 withSender:(id)arg4;
- (_Bool)collectionView:(UICollectionView *)arg1 canPerformAction:(SEL)arg2 forItemAtIndexPath:(NSIndexPath *)arg3 withSender:(id)arg4;
- (_Bool)collectionView:(UICollectionView *)arg1 shouldShowMenuForItemAtIndexPath:(NSIndexPath *)arg2;
- (void)collectionView:(UICollectionView *)arg1 didEndDisplayingSupplementaryView:(UICollectionReusableView *)arg2 forElementOfKind:(NSString *)arg3 atIndexPath:(NSIndexPath *)arg4;
- (void)collectionView:(UICollectionView *)arg1 didEndDisplayingCell:(UICollectionViewCell *)arg2 forItemAtIndexPath:(NSIndexPath *)arg3;
- (void)collectionView:(UICollectionView *)arg1 willDisplaySupplementaryView:(UICollectionReusableView *)arg2 forElementKind:(NSString *)arg3 atIndexPath:(NSIndexPath *)arg4;
- (void)collectionView:(UICollectionView *)arg1 willDisplayCell:(UICollectionViewCell *)arg2 forItemAtIndexPath:(NSIndexPath *)arg3;
- (void)collectionView:(UICollectionView *)arg1 didDeselectItemAtIndexPath:(NSIndexPath *)arg2;
- (void)collectionView:(UICollectionView *)arg1 didSelectItemAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)collectionView:(UICollectionView *)arg1 shouldDeselectItemAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)collectionView:(UICollectionView *)arg1 shouldSelectItemAtIndexPath:(NSIndexPath *)arg2;
- (void)collectionView:(UICollectionView *)arg1 didUnhighlightItemAtIndexPath:(NSIndexPath *)arg2;
- (void)collectionView:(UICollectionView *)arg1 didHighlightItemAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)collectionView:(UICollectionView *)arg1 shouldHighlightItemAtIndexPath:(NSIndexPath *)arg2;
@end

@protocol UIGestureRecognizerDelegate <NSObject>

@optional
- (_Bool)gestureRecognizer:(UIGestureRecognizer *)arg1 shouldReceiveTouch:(UITouch *)arg2;
- (_Bool)gestureRecognizer:(UIGestureRecognizer *)arg1 shouldBeRequiredToFailByGestureRecognizer:(UIGestureRecognizer *)arg2;
- (_Bool)gestureRecognizer:(UIGestureRecognizer *)arg1 shouldRequireFailureOfGestureRecognizer:(UIGestureRecognizer *)arg2;
- (_Bool)gestureRecognizer:(UIGestureRecognizer *)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(UIGestureRecognizer *)arg2;
- (_Bool)gestureRecognizerShouldBegin:(UIGestureRecognizer *)arg1;
@end

@protocol UIGestureRecognizerDelegatePrivate <UIGestureRecognizerDelegate>

@optional
- (_Bool)_gestureRecognizer:(UIGestureRecognizer *)arg1 canBePreventedByGestureRecognizer:(UIGestureRecognizer *)arg2;
- (_Bool)_gestureRecognizer:(UIGestureRecognizer *)arg1 canPreventGestureRecognizer:(UIGestureRecognizer *)arg2;
- (_Bool)_gestureRecognizer:(UIGestureRecognizer *)arg1 shouldReceiveTouch:(UITouch *)arg2;
- (_Bool)_gestureRecognizer:(UIGestureRecognizer *)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(UIGestureRecognizer *)arg2;
- (_Bool)_gestureRecognizerShouldBegin:(UIGestureRecognizer *)arg1;
- (_Bool)_gestureRecognizer:(UIGestureRecognizer *)arg1 shouldBeRequiredToFailByGestureRecognizer:(UIGestureRecognizer *)arg2;
- (_Bool)_gestureRecognizer:(UIGestureRecognizer *)arg1 shouldRequireFailureOfGestureRecognizer:(UIGestureRecognizer *)arg2;
@end

@protocol UIModalItemDelegate <NSObject>

@optional
- (_Bool)modalItem:(_UIModalItem *)arg1 shouldDismissForButtonAtIndex:(long long)arg2;
- (_Bool)modalItemShouldEnableFirstOtherButton:(_UIModalItem *)arg1;
- (void)modalItem:(_UIModalItem *)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)modalItem:(_UIModalItem *)arg1 willDismissWithButtonIndex:(long long)arg2;
- (void)didPresentModalItem:(_UIModalItem *)arg1;
- (void)willPresentModalItem:(_UIModalItem *)arg1;
@end

@protocol UIPickerViewDataSource <NSObject>
- (long long)pickerView:(UIPickerView *)arg1 numberOfRowsInComponent:(long long)arg2;
- (long long)numberOfComponentsInPickerView:(UIPickerView *)arg1;
@end

@protocol UIPickerViewDelegate <NSObject>

@optional
- (void)pickerView:(UIPickerView *)arg1 didSelectRow:(long long)arg2 inComponent:(long long)arg3;
- (UIView *)pickerView:(UIPickerView *)arg1 viewForRow:(long long)arg2 forComponent:(long long)arg3 reusingView:(UIView *)arg4;
- (NSAttributedString *)pickerView:(UIPickerView *)arg1 attributedTitleForRow:(long long)arg2 forComponent:(long long)arg3;
- (NSString *)pickerView:(UIPickerView *)arg1 titleForRow:(long long)arg2 forComponent:(long long)arg3;
- (double)pickerView:(UIPickerView *)arg1 rowHeightForComponent:(long long)arg2;
- (double)pickerView:(UIPickerView *)arg1 widthForComponent:(long long)arg2;
@end

@protocol UIPopoverPresentationControllerDelegate <UIAdaptivePresentationControllerDelegate>

@optional
- (void)popoverPresentationController:(UIPopoverPresentationController *)arg1 willRepositionPopoverToRect:(inout struct CGRect *)arg2 inView:(inout id *)arg3;
- (void)popoverPresentationControllerDidDismissPopover:(UIPopoverPresentationController *)arg1;
- (_Bool)popoverPresentationControllerShouldDismissPopover:(UIPopoverPresentationController *)arg1;
- (void)prepareForPopoverPresentation:(UIPopoverPresentationController *)arg1;
@end

@protocol UIScrollViewDelegate <NSObject>

@optional
- (void)scrollViewDidScrollToTop:(UIScrollView *)arg1;
- (_Bool)scrollViewShouldScrollToTop:(UIScrollView *)arg1;
- (void)scrollViewDidEndZooming:(UIScrollView *)arg1 withView:(UIView *)arg2 atScale:(double)arg3;
- (void)scrollViewWillBeginZooming:(UIScrollView *)arg1 withView:(UIView *)arg2;
- (UIView *)viewForZoomingInScrollView:(UIScrollView *)arg1;
- (void)scrollViewDidEndScrollingAnimation:(UIScrollView *)arg1;
- (void)scrollViewDidEndDecelerating:(UIScrollView *)arg1;
- (void)scrollViewWillBeginDecelerating:(UIScrollView *)arg1;
- (void)scrollViewDidEndDragging:(UIScrollView *)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewWillEndDragging:(UIScrollView *)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (void)scrollViewWillBeginDragging:(UIScrollView *)arg1;
- (void)scrollViewDidZoom:(UIScrollView *)arg1;
- (void)scrollViewDidScroll:(UIScrollView *)arg1;
@end

@protocol UISearchBarDelegate <UIBarPositioningDelegate>

@optional
- (void)searchBar:(UISearchBar *)arg1 selectedScopeButtonIndexDidChange:(long long)arg2;
- (void)searchBarResultsListButtonClicked:(UISearchBar *)arg1;
- (void)searchBarCancelButtonClicked:(UISearchBar *)arg1;
- (void)searchBarBookmarkButtonClicked:(UISearchBar *)arg1;
- (void)searchBarSearchButtonClicked:(UISearchBar *)arg1;
- (_Bool)searchBar:(UISearchBar *)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementText:(NSString *)arg3;
- (void)searchBar:(UISearchBar *)arg1 textDidChange:(NSString *)arg2;
- (void)searchBarTextDidEndEditing:(UISearchBar *)arg1;
- (_Bool)searchBarShouldEndEditing:(UISearchBar *)arg1;
- (void)searchBarTextDidBeginEditing:(UISearchBar *)arg1;
- (_Bool)searchBarShouldBeginEditing:(UISearchBar *)arg1;
@end

@protocol UISearchDisplayDelegate <NSObject>

@optional
- (_Bool)searchDisplayController:(UISearchDisplayController *)arg1 shouldReloadTableForSearchScope:(long long)arg2;
- (_Bool)searchDisplayController:(UISearchDisplayController *)arg1 shouldReloadTableForSearchString:(NSString *)arg2;
- (void)searchDisplayController:(UISearchDisplayController *)arg1 didHideSearchResultsTableView:(UITableView *)arg2;
- (void)searchDisplayController:(UISearchDisplayController *)arg1 willHideSearchResultsTableView:(UITableView *)arg2;
- (void)searchDisplayController:(UISearchDisplayController *)arg1 didShowSearchResultsTableView:(UITableView *)arg2;
- (void)searchDisplayController:(UISearchDisplayController *)arg1 willShowSearchResultsTableView:(UITableView *)arg2;
- (void)searchDisplayController:(UISearchDisplayController *)arg1 willUnloadSearchResultsTableView:(UITableView *)arg2;
- (void)searchDisplayController:(UISearchDisplayController *)arg1 didLoadSearchResultsTableView:(UITableView *)arg2;
- (void)searchDisplayControllerDidEndSearch:(UISearchDisplayController *)arg1;
- (void)searchDisplayControllerWillEndSearch:(UISearchDisplayController *)arg1;
- (void)searchDisplayControllerDidBeginSearch:(UISearchDisplayController *)arg1;
- (void)searchDisplayControllerWillBeginSearch:(UISearchDisplayController *)arg1;
@end

@protocol UITableViewDataSource <NSObject>
- (UITableViewCell *)tableView:(UITableView *)arg1 cellForRowAtIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 numberOfRowsInSection:(long long)arg2;

@optional
- (void)tableView:(UITableView *)arg1 moveRowAtIndexPath:(NSIndexPath *)arg2 toIndexPath:(NSIndexPath *)arg3;
- (void)tableView:(UITableView *)arg1 commitEditingStyle:(long long)arg2 forRowAtIndexPath:(NSIndexPath *)arg3;
- (long long)tableView:(UITableView *)arg1 sectionForSectionIndexTitle:(NSString *)arg2 atIndex:(long long)arg3;
- (NSArray *)sectionIndexTitlesForTableView:(UITableView *)arg1;
- (_Bool)tableView:(UITableView *)arg1 canMoveRowAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)tableView:(UITableView *)arg1 canEditRowAtIndexPath:(NSIndexPath *)arg2;
- (NSString *)tableView:(UITableView *)arg1 titleForFooterInSection:(long long)arg2;
- (NSString *)tableView:(UITableView *)arg1 titleForHeaderInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(UITableView *)arg1;
@end

@protocol UITableViewDelegate <NSObject, UIScrollViewDelegate>

@optional
- (void)tableView:(UITableView *)arg1 performAction:(SEL)arg2 forRowAtIndexPath:(NSIndexPath *)arg3 withSender:(id)arg4;
- (_Bool)tableView:(UITableView *)arg1 canPerformAction:(SEL)arg2 forRowAtIndexPath:(NSIndexPath *)arg3 withSender:(id)arg4;
- (_Bool)tableView:(UITableView *)arg1 shouldShowMenuForRowAtIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 indentationLevelForRowAtIndexPath:(NSIndexPath *)arg2;
- (NSIndexPath *)tableView:(UITableView *)arg1 targetIndexPathForMoveFromRowAtIndexPath:(NSIndexPath *)arg2 toProposedIndexPath:(NSIndexPath *)arg3;
- (void)tableView:(UITableView *)arg1 didEndEditingRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 willBeginEditingRowAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)tableView:(UITableView *)arg1 shouldIndentWhileEditingRowAtIndexPath:(NSIndexPath *)arg2;
- (NSArray *)tableView:(UITableView *)arg1 editActionsForRowAtIndexPath:(NSIndexPath *)arg2;
- (NSString *)tableView:(UITableView *)arg1 titleForDeleteConfirmationButtonForRowAtIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 editingStyleForRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didDeselectRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didSelectRowAtIndexPath:(NSIndexPath *)arg2;
- (NSIndexPath *)tableView:(UITableView *)arg1 willDeselectRowAtIndexPath:(NSIndexPath *)arg2;
- (NSIndexPath *)tableView:(UITableView *)arg1 willSelectRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didUnhighlightRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didHighlightRowAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)tableView:(UITableView *)arg1 shouldHighlightRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 accessoryButtonTappedForRowWithIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 accessoryTypeForRowWithIndexPath:(NSIndexPath *)arg2;
- (UIView *)tableView:(UITableView *)arg1 viewForFooterInSection:(long long)arg2;
- (UIView *)tableView:(UITableView *)arg1 viewForHeaderInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 estimatedHeightForFooterInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 estimatedHeightForHeaderInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 estimatedHeightForRowAtIndexPath:(NSIndexPath *)arg2;
- (double)tableView:(UITableView *)arg1 heightForFooterInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 heightForHeaderInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 heightForRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didEndDisplayingFooterView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 didEndDisplayingHeaderView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 didEndDisplayingCell:(UITableViewCell *)arg2 forRowAtIndexPath:(NSIndexPath *)arg3;
- (void)tableView:(UITableView *)arg1 willDisplayFooterView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 willDisplayHeaderView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 willDisplayCell:(UITableViewCell *)arg2 forRowAtIndexPath:(NSIndexPath *)arg3;
@end

@protocol UITextFieldDelegate <NSObject>

@optional
- (_Bool)textFieldShouldReturn:(UITextField *)arg1;
- (_Bool)textFieldShouldClear:(UITextField *)arg1;
- (_Bool)textField:(UITextField *)arg1 shouldChangeCharactersInRange:(struct _NSRange)arg2 replacementString:(NSString *)arg3;
- (void)textFieldDidEndEditing:(UITextField *)arg1;
- (_Bool)textFieldShouldEndEditing:(UITextField *)arg1;
- (void)textFieldDidBeginEditing:(UITextField *)arg1;
- (_Bool)textFieldShouldBeginEditing:(UITextField *)arg1;
@end

@interface MPAVItem (RURadioAVItemAdditions)
- (id)_plistKeyForMPMediaItemProperty:(id)arg1;
@property(readonly, nonatomic) _Bool supportsRadioTrackActions;
@property(readonly, nonatomic) RadioTrack *radioTrack;
@property(readonly, nonatomic) _Bool isRadioItem;
- (void)addDerivedStationForArtist:(_Bool)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
@property(readonly, copy, nonatomic) NSString *albumBuyButtonText;
@property(readonly, nonatomic) long long albumBuyButtonType;
@end

@interface MPAVItem (RURadioAdAVItemAdditions)
@property(readonly, nonatomic) RURadioAdTrack *adTrack;
@end

@interface MPAVItem (RURadioAudioClipAVItem)
@property(readonly, nonatomic) RadioAudioClip *audioClip;
@end

@interface MPAVItem (RURadioStreamTrackAVItem)
@property(readonly, nonatomic) RadioStreamTrack *streamTrack;
@property(readonly, nonatomic) RadioArtworkCollection *effectiveArtworkCollection;
@end

@interface MPAVItem (RURadioTrackAVItemAdditions)
@property(readonly, copy, nonatomic) NSString *assetFlavor;
@end

@interface MPQueueFeeder (RURadioQueueFeederAdditions)
@property(readonly, nonatomic) RadioStation *station;
- (_Bool)isRadioQueueFeeder;
@end

@interface MPUProspectivePlaybackInformation (RUAdditions)
@property(readonly, nonatomic) RadioStation *radioStation;
@property(readonly, nonatomic) _Bool isRadioProspectivePlaybackInformation;
@end

@interface MPUReportingAdTrackMetadata (RUAdditions)
- (id)initWithRadioAdTrack:(id)arg1;
@end

@interface MPUReportingRadioStationMetadata (RUAdditions)
- (id)initWithRadioStation:(id)arg1;
@end

@interface MPUReportingRadioTrackMetadata (RUAdditions)
- (id)initWithRadioTrack:(id)arg1;
@end

@interface NSBundle (RUAdditions)
+ (id)radioUIBundle;
@end

@interface NSString (RUAdditions)
- (id)RU_emphasizedTextByEmphasizingStationName;
- (_Bool)_RU_stationTitleRadioIsSuffix;
- (id)_RU_stationTitleRadioSubstring;
@end

@interface RUActivityViewController : UIActivityViewController
{
    RadioStation *_station;
}

@property(readonly, nonatomic) RadioStation *station; // @synthesize station=_station;
- (void).cxx_destruct;
- (id)_titleForActivity:(id)arg1;
- (id)initWithStation:(id)arg1;

@end

@interface RUAddSeedViewController : UIViewController <RUSearchViewControllerDelegate>
{
    UISearchBar *_searchBar;
    UISearchDisplayController *_searchDisplayController;
    RUSearchViewController *_searchViewController;
    id <RUAddSeedViewControllerDelegate> _delegate;
}

@property(nonatomic) __weak id <RUAddSeedViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (id)_newSearchDisplayControllerWithSearchBar:(id)arg1 searchViewController:(id)arg2;
- (id)_newSearchBar;
- (void)removeAddingIndicator;
- (void)searchViewControllerDidEndSearching:(id)arg1;
- (void)searchViewController:(id)arg1 didSelectStation:(id)arg2;
- (id)metricsPageTypeForSearchViewController:(id)arg1;
- (id)metricsPageDescriptionForSearchViewController:(id)arg1;
- (id)contentScrollView;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface RUAddStationEpilogueContext : NSObject
{
    _Bool _shouldKeepPlayingCurrentItem;
    _Bool _shouldBeginPlayback;
    RadioStation *_addedStation;
    MPAVItem *_prefixItem;
}

@property(nonatomic) _Bool shouldBeginPlayback; // @synthesize shouldBeginPlayback=_shouldBeginPlayback;
@property(nonatomic) _Bool shouldKeepPlayingCurrentItem; // @synthesize shouldKeepPlayingCurrentItem=_shouldKeepPlayingCurrentItem;
@property(retain, nonatomic) MPAVItem *prefixItem; // @synthesize prefixItem=_prefixItem;
@property(readonly, nonatomic) RadioStation *addedStation; // @synthesize addedStation=_addedStation;
- (void).cxx_destruct;
- (id)description;
- (id)initWithAddedStation:(id)arg1;

@end

@interface RUAudioPreviewView : UIView <RUPreviewSessionObserver>
{
    UIImageView *_artworkImageView;
    UIImageView *_artworkOverlayImageView;
    SKUIItemOfferButton *_circleProgressIndicator;
    double _currentTimeOverride;
    double _durationOverride;
    CADisplayLink *_displayLink;
    MPUDownloadProgressIndicator *_downloadProgressIndicator;
    _RUAudioPreviewTicker *_previewTicker;
    long long _style;
    id <RUAudioPreviewViewDelegate> _delegate;
    UIImage *_artworkImage;
    UIImage *_artworkOverlayImage;
    RUPreviewSession *_previewSession;
    double _customDuration;
    struct UIEdgeInsets _artworkEdgeInsets;
    struct UIEdgeInsets _artworkOverlayEdgeInsets;
}

@property(nonatomic) double customDuration; // @synthesize customDuration=_customDuration;
@property(retain, nonatomic) RUPreviewSession *previewSession; // @synthesize previewSession=_previewSession;
@property(retain, nonatomic) UIImage *artworkOverlayImage; // @synthesize artworkOverlayImage=_artworkOverlayImage;
@property(nonatomic) struct UIEdgeInsets artworkOverlayEdgeInsets; // @synthesize artworkOverlayEdgeInsets=_artworkOverlayEdgeInsets;
@property(retain, nonatomic) UIImage *artworkImage; // @synthesize artworkImage=_artworkImage;
@property(nonatomic) struct UIEdgeInsets artworkEdgeInsets; // @synthesize artworkEdgeInsets=_artworkEdgeInsets;
@property(nonatomic) __weak id <RUAudioPreviewViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) long long style; // @synthesize style=_style;
- (void).cxx_destruct;
- (void)_stopAnimating;
- (void)_startAnimating;
- (void)_setProgress:(float)arg1;
- (void)_cancelAnimationTimer;
- (void)_displayLinkTickAction:(id)arg1;
- (void)previewSession:(id)arg1 didStopWithOptions:(long long)arg2 withFinalItem:(id)arg3 didFinalItemPlayToCompletion:(_Bool)arg4;
- (void)previewSession:(id)arg1 didChangeFromItem:(id)arg2 toItem:(id)arg3;
- (void)flipToPreviewProgressAnimated:(_Bool)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
- (void)flipFromPreviewProgressAnimated:(_Bool)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
- (void)_cancelAction:(id)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)layoutSubviews;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 style:(long long)arg2;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface RUConfirmButton : UIButton
{
    UIImageView *_confirmBackgroundImageView;
    UIImageView *_defaultBackgroundImageView;
    RUFocusedTouchGestureRecognizer *_focusedTouchGestureRecognizer;
    NSMutableDictionary *_fontByControlState;
    NSMutableDictionary *_shadowOffsetByControlState;
    _Bool _attemptsToUseMaximumSize;
    _Bool _showingConfirmation;
    UILabel *_confirmLabel;
    UILabel *_defaultLabel;
    id <RUConfirmButtonDelegate> _delegate;
    struct UIEdgeInsets _touchAllowance;
}

+ (id)confirmButton;
@property(nonatomic) struct UIEdgeInsets touchAllowance; // @synthesize touchAllowance=_touchAllowance;
@property(nonatomic, getter=isShowingConfirmation) _Bool showingConfirmation; // @synthesize showingConfirmation=_showingConfirmation;
@property(nonatomic) id <RUConfirmButtonDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) UILabel *defaultLabel; // @synthesize defaultLabel=_defaultLabel;
@property(readonly, nonatomic) UILabel *confirmLabel; // @synthesize confirmLabel=_confirmLabel;
@property(nonatomic) _Bool attemptsToUseMaximumSize; // @synthesize attemptsToUseMaximumSize=_attemptsToUseMaximumSize;
- (void).cxx_destruct;
- (void)_styleLabel:(id)arg1 forState:(unsigned long long)arg2;
- (struct CGSize)_sizeThatFits:(struct CGSize)arg1 forControlState:(unsigned long long)arg2;
- (id)_objectForState:(unsigned long long)arg1 inDictionary:(id)arg2;
- (void)_animatedSetShowingConfirmation:(_Bool)arg1;
- (void)_touchUpInsideAction:(id)arg1;
- (void)_gestureRecognizerChangedStateAction:(id)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1 forControlState:(unsigned long long)arg2;
- (void)setShowingConfirmation:(_Bool)arg1 animationDuration:(double)arg2 animationDelay:(double)arg3 animationOptions:(unsigned long long)arg4 animationCompletionHandler:(CDUnknownBlockType)arg5;
- (void)setTitleShadowOffset:(struct CGSize)arg1 forState:(unsigned long long)arg2;
- (struct CGSize)titleShadowOffsetForState:(unsigned long long)arg1;
- (void)setFont:(id)arg1 forState:(unsigned long long)arg2;
@property(nonatomic) Class defaultLabelClass;
@property(nonatomic) Class confirmLabelClass;
- (id)fontForState:(unsigned long long)arg1;
- (unsigned long long)state;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)layoutSubviews;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface RUCreateStationViewController : UIViewController <RUSearchViewControllerDelegate, RUStationTreeViewControllerDelegate, UIScrollViewDelegate>
{
    RUMetricsController *_metricsController;
    NSMutableArray *_queuedMetricsOperations;
    UISearchDisplayController *_searchDisplayController;
    RUSearchViewController *_searchResultsViewController;
    _Bool _shouldScrollSearchBar;
    _Bool _shouldUseSearchingInsetsForSearchBar;
    RUStationTreeViewController *_stationTreeViewController;
    id <RUCreateStationViewControllerDelegate> _delegate;
}

+ (_Bool)_shouldForwardViewWillTransitionToSize;
@property(nonatomic) __weak id <RUCreateStationViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)_updateViewForHorizontalSizeClassChange;
- (void)_updateSearchBarFrameForced:(_Bool)arg1;
- (void)_updateSearchBarContentInset;
- (struct CGRect)_searchBarSearchingFrame;
- (struct UIEdgeInsets)_searchBarContentInset;
- (id)_searchDisplayController;
- (void)_didReceiveRadioAccountDidDeauthenticateNotification:(id)arg1;
- (struct UIEdgeInsets)_contentInset;
- (void)_addStationWithDictionary:(id)arg1;
- (void)_addMetricsControllerOperationBlock:(CDUnknownBlockType)arg1;
- (void)_statusBarHeightChangedNotification:(id)arg1;
- (void)_doneAction:(id)arg1 withEvent:(id)arg2;
- (void)removeAddingIndicator;
- (void)stationTreeViewController:(id)arg1 scrollViewDidScroll:(id)arg2;
- (void)stationTreeViewController:(id)arg1 didSelectStationTreeNode:(id)arg2;
- (void)searchViewControllerWillEndSearching:(id)arg1;
- (void)searchViewControllerWillBeginSearching:(id)arg1;
- (void)searchViewController:(id)arg1 didSelectStation:(id)arg2;
- (void)searchViewControllerDidEndSearching:(id)arg1;
- (void)searchViewControllerDidBeginSearching:(id)arg1;
- (id)metricsPageTypeForSearchViewController:(id)arg1;
- (id)metricsPageDescriptionForSearchViewController:(id)arg1;
- (void)traitCollectionDidChange:(id)arg1;
- (id)contentScrollView;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface RUTableViewCell : UITableViewCell
{
}

- (struct UIEdgeInsets)layoutMargins;

@end

@interface RUEditNewStationTableViewCell : RUTableViewCell
{
    UIImageView *_plusBackgroundView;
    UILabel *_titleLabel;
}

- (void).cxx_destruct;
- (void)traitCollectionDidChange:(id)arg1;
- (void)layoutSubviews;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface RUEditStationTableViewCell : RUTableViewCell <MPUStackViewDataSource>
{
    UIImage *_image;
    MPUBorderConfiguration *_stackItemBorderConfiguration;
    MPUStackView *_stackView;
    UILabel *_titleLabel;
    MPUBorderDrawingCache *_stackItemBorderDrawingCache;
}

+ (id)_titleLabelFontWithEmphasis:(_Bool)arg1;
+ (double)defaultHeightForTraitCollection:(id)arg1;
+ (double)artworkMidXForTraitCollection:(id)arg1;
+ (struct CGSize)artworkSize;
@property(retain, nonatomic) MPUBorderDrawingCache *stackItemBorderDrawingCache; // @synthesize stackItemBorderDrawingCache=_stackItemBorderDrawingCache;
- (void).cxx_destruct;
- (id)_newStackView;
- (void)_applyImageToStackItems:(id)arg1;
@property(nonatomic) struct CGPoint vanishingPoint;
- (void)updateForChangedDistanceFromVanishingPoint;
@property(copy, nonatomic) NSString *stationName;
@property(nonatomic) __weak UIView *perspectiveTargetView;
- (void)setImage:(id)arg1;
- (void)stackView:(id)arg1 didCreateItem:(id)arg2;
- (void)stackView:(id)arg1 applyAttributesToItem:(id)arg2 atIndex:(long long)arg3;
- (long long)numberOfItemsInStackView:(id)arg1;
- (void)traitCollectionDidChange:(id)arg1;
- (void)layoutSubviews;
- (void)dealloc;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface RUEditStationsViewController : UIViewController <UITableViewDataSource, UITableViewDelegate>
{
    _UIBackdropView *_backdropView;
    RUParallelScrollView *_containerScrollView;
    struct UIEdgeInsets _containerScrollViewContentInsetAdditions;
    RUCreateStationViewController *_createStationViewController;
    UIAlertView *_deletionAlertView;
    unsigned long long _ignoreReloadDataCount;
    NSIndexPath *_indexPathToDelete;
    _Bool _isEditing;
    _Bool _needsReloadAfterEndIgnoring;
    MPUBorderDrawingCache *_stackItemBorderDrawingCache;
    NSArray *_stations;
    RUProxyTableView *_tableView;
    id <RUCreateStationViewControllerDelegate><RUEditStationsViewControllerDelegate> _delegate;
}

+ (_Bool)_shouldForwardViewWillTransitionToSize;
@property(nonatomic) __weak id <RUCreateStationViewControllerDelegate><RUEditStationsViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)_updateViewForTraitCollectionChange;
- (void)_updateViewForHorizontalSizeClassChange;
- (void)_updateTableViewRowHeight;
- (void)_updateBarButtonItemsAnimated:(_Bool)arg1;
- (void)_endIgnoringReloadData;
- (void)_didReceiveRadioAccountDidDeauthenticateNotification:(id)arg1;
- (void)_commitDeletingStationWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)_beginIgnoringReloadData;
- (void)_radioModelDidChangeNotification:(id)arg1;
- (void)_contentSizeCategoryDidChangeNotification:(id)arg1;
- (void)_editAction:(id)arg1;
- (void)_doneAction:(id)arg1;
- (void)reloadData;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (id)tableView:(id)arg1 targetIndexPathForMoveFromRowAtIndexPath:(id)arg2 toProposedIndexPath:(id)arg3;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (_Bool)tableView:(id)arg1 canEditRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)tableView:(id)arg1 moveRowAtIndexPath:(id)arg2 toIndexPath:(id)arg3;
- (_Bool)tableView:(id)arg1 canMoveRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 commitEditingStyle:(long long)arg2 forRowAtIndexPath:(id)arg3;
- (void)scrollViewDidScroll:(id)arg1;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)traitCollectionDidChange:(id)arg1;
- (id)contentScrollView;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (unsigned long long)supportedInterfaceOrientations;
- (void)loadView;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface RUFocusedTouchGestureRecognizer : UIGestureRecognizer <UIGestureRecognizerDelegatePrivate>
{
    UIView *_focusedView;
    struct UIEdgeInsets _touchAllowance;
}

@property(nonatomic) struct UIEdgeInsets touchAllowance; // @synthesize touchAllowance=_touchAllowance;
@property(readonly, nonatomic) UIView *focusedView; // @synthesize focusedView=_focusedView;
- (void).cxx_destruct;
- (_Bool)_gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (id)initWithFocusedView:(id)arg1 touchAllowance:(struct UIEdgeInsets)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface RUHistoryDataSource : NSObject <ADBannerViewDelegate>
{
    NSMutableDictionary *_adIdentifierToAdTrack;
    NSMutableDictionary *_adIdentifierToPendingBannerView;
    NSObject<OS_dispatch_source> *_adLoadTimeoutTimerSource;
    NSMutableArray *_bannerViewsPendingRemoval;
    NSMutableArray *_bannerViewsPendingLoad;
    RadioGetHistoryRequest *_historyRequest;
    NSArray *_pendingHistoryCategories;
    id <RUHistoryDataSourceDelegate> _delegate;
    NSArray *_historyCategories;
}

@property(readonly, copy, nonatomic) NSArray *historyCategories; // @synthesize historyCategories=_historyCategories;
@property(nonatomic) __weak id <RUHistoryDataSourceDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)_scheduleAdLoadTimeout;
- (void)_removePendingBannerView:(id)arg1;
- (void)_finalizePendingHistoryCategoryIfPossible;
- (void)_reloadWithHistoryCategories:(id)arg1;
- (void)_handleAdLoadTimeout;
- (void)_cancelAdLoadTimeout;
- (id)_arrayByRemovingItemsWithAdIdentifier:(id)arg1 inHistoryCategories:(id)arg2;
- (id)_adIdentifierForHistoryItem:(id)arg1;
- (void)refreshHistory;
- (id)adTrackForHistoryItem:(id)arg1;
@property(readonly, nonatomic, getter=isRefreshing) _Bool refreshing;
- (id)viewControllerForStoryboardPresentationFromBannerView:(id)arg1;
- (void)bannerView:(id)arg1 didFailToReceiveAdWithError:(id)arg2;
- (void)bannerViewDidLoadAd:(id)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface RUHistoryTableHeaderView : UIView
{
    UILabel *_textLabel;
    UILabel *_detailTextLabel;
}

+ (id)_textLabelFontWithEmphasis:(_Bool)arg1;
+ (id)_detailTextLabelFont;
+ (double)defaultHeightForTraitCollection:(id)arg1 headerType:(unsigned long long)arg2;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1 emphasizedText:(id)arg2 detailText:(id)arg3;

@end

@interface RUHistoryTableViewCell : RUTableViewCell <RUTrackDownloadViewDelegate>
{
    UIImageView *_explicitImageView;
    UILabel *_iAdLabel;
    UILabel *_subtitleLabel;
    UILabel *_titleLabel;
    _Bool _explicitTrack;
    _Bool _hideArtworkImage;
    RUAudioPreviewView *_audioPreviewView;
    RUTrackDownloadView *_trackDownloadView;
}

+ (id)_titleLabelFont;
+ (id)_subtitleLabelFontForTraitCollection:(id)arg1;
+ (id)_iAdLabelFont;
+ (double)defaultHeightForTraitCollection:(id)arg1;
+ (struct CGSize)artworkSize;
@property(readonly, nonatomic) RUTrackDownloadView *trackDownloadView; // @synthesize trackDownloadView=_trackDownloadView;
@property(nonatomic) _Bool hideArtworkImage; // @synthesize hideArtworkImage=_hideArtworkImage;
@property(nonatomic, getter=isExplicitTrack) _Bool explicitTrack; // @synthesize explicitTrack=_explicitTrack;
@property(retain, nonatomic) RUAudioPreviewView *audioPreviewView; // @synthesize audioPreviewView=_audioPreviewView;
- (void).cxx_destruct;
- (void)_updateViewForHorizontalSizeClassChange;
- (unsigned long long)_preferredExplicitGlyphSizeCategory;
- (void)_contentSizeCategoryDidChangeNotification:(id)arg1;
@property(copy, nonatomic) NSString *title;
@property(nonatomic) _Bool isAd;
@property(copy, nonatomic) NSString *artist;
@property(readonly, nonatomic) UIImage *artworkImage;
- (void)trackDownloadViewWillTransition:(id)arg1;
- (void)traitCollectionDidChange:(id)arg1;
- (void)layoutSubviews;
- (void)didMoveToSuperview;
- (void)dealloc;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface RUHistoryViewController : UIViewController <RUAudioPreviewViewDelegate, RUHistoryDataSourceDelegate, RUPreviewSessionObserver, RUWishlistDataSourceDelegate, UIActionSheetDelegate, UITableViewDataSource, UITableViewDelegate>
{
    SKUICircleProgressIndicator *_activityIndicator;
    UIActionSheet *_confirmationActionSheet;
    NSArray *_historyCategories;
    RUHistoryDataSource *_historyDataSource;
    UILabel *_loadingLabel;
    UILabel *_noHistoryLabel;
    RUPreviewSession *_previewSession;
    MPAVItem *_previewingAVItem;
    RadioHistoryCategory *_previewingHistoryCategory;
    UITableView *_tableView;
    RURadioAdTrack *_videoAdTrack;
    MPMoviePlayerController *_videoAdPreviewMoviePlayerController;
    RUWishlistDataSource *_wishlistDataSource;
    NSMutableArray *_wishlistedTracks;
    id <RUHistoryViewControllerDelegate> _delegate;
    long long _historyType;
}

@property(readonly, nonatomic) long long historyType; // @synthesize historyType=_historyType;
@property(nonatomic) __weak id <RUHistoryViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (id)_wishlistedTrackAtIndexPath:(id)arg1;
- (void)_updateViewForTraitCollectionChange;
- (void)_updateViewForHorizontalSizeClassChange;
- (void)_updateViewForHistoryChange;
- (void)_updateTableViewRowHeight;
- (void)_reportVideoAdPreviewDidFinishIfNeeded;
- (void)_refreshWishlistedTracks;
- (void)_refreshHistoryTracks;
- (id)_newSegmentedControl;
- (_Bool)_isLoading;
- (_Bool)_isHistoryItem:(id)arg1 effectivelyPlayingWithAVItem:(id)arg2;
- (id)_indexPathForPreviewingItem;
- (void)_endPreviewPlaybackWithOptions:(long long)arg1 fadeoutDuration:(double)arg2;
- (void)_didReceiveRadioAccountDidDeauthenticateNotification:(id)arg1;
- (unsigned long long)_count;
- (void)_configureCell:(id)arg1 forRadioTrack:(id)arg2;
- (void)_configureCell:(id)arg1 forAdTrack:(id)arg2;
- (void)_videoAdPreviewMoviePlaybackDidFinishNotification:(id)arg1;
- (void)_contentSizeCategoryDidChangeNotification:(id)arg1;
- (void)_selectedSegmentIndexDidChangeAction:(id)arg1;
- (void)_doneAction:(id)arg1;
- (void)_clearAction:(id)arg1;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (void)tableView:(id)arg1 willDisplayFooterView:(id)arg2 forSection:(long long)arg3;
- (id)tableView:(id)arg1 viewForHeaderInSection:(long long)arg2;
- (id)tableView:(id)arg1 viewForFooterInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForFooterInSection:(long long)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 commitEditingStyle:(long long)arg2 forRowAtIndexPath:(id)arg3;
- (_Bool)tableView:(id)arg1 canEditRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)actionSheet:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)wishlistDataSourceDidInvalidate:(id)arg1;
- (void)previewSession:(id)arg1 didChangeFromItem:(id)arg2 toItem:(id)arg3;
- (id)historyDataSource:(id)arg1 viewControllerForPresentingAdTrack:(id)arg2;
- (void)historyDataSourceDidUpdateHistoryCategories:(id)arg1;
- (void)audioPreviewViewDidCancel:(id)arg1 forReason:(long long)arg2;
- (void)traitCollectionDidChange:(id)arg1;
- (id)contentScrollView;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)viewDidAppear:(_Bool)arg1;
- (unsigned long long)supportedInterfaceOrientations;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface RUInnerShadowHeaderFooterView : UITableViewHeaderFooterView
{
    UIView *_shadowBackgroundView;
    UIView *_shadowView;
    struct UIEdgeInsets _shadowEdgeInsets;
}

+ (double)defaultInnerShadowRadius;
@property(nonatomic) struct UIEdgeInsets shadowEdgeInsets; // @synthesize shadowEdgeInsets=_shadowEdgeInsets;
- (void).cxx_destruct;
@property(retain, nonatomic) UIColor *shadowBackgroundColor;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface RUJingleTiltReportingController : MPUReportingController
{
    NSObject<OS_dispatch_queue> *_accessQueue;
    double _flushInterval;
    NSMutableArray *_pendingReportingEvents;
    NSObject<OS_dispatch_source> *_playEventFlushTimerSource;
}

- (void).cxx_destruct;
- (void)_updateForLoadedStoreBag:(id)arg1;
- (void)_schedulePlaybackFlushTimer;
- (void)_cancelPlaybackFlushTimer;
- (void)_addPendingReportingEvents:(id)arg1;
- (void)_storeBagDidLoadNotification:(id)arg1;
- (id)popPendingReportingEvents;
- (void)_recordReportingEvents:(id)arg1;
- (void)flushImmediately;
- (void)dealloc;
- (id)init;

@end

@interface RUMetricsController : SKUIMetricsController
{
}

+ (void)getDefaultRadioMetricsControllerWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)_updateWindowOrientation;
- (void)_statusBarOrientationDidChange:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface RUMetricsDictionaryEventFieldProvider : NSObject <SSMetricsEventFieldProvider>
{
    NSDictionary *_dictionary;
}

@property(readonly, copy, nonatomic) NSDictionary *dictionary; // @synthesize dictionary=_dictionary;
- (void).cxx_destruct;
- (id)valueForMetricsField:(id)arg1;
- (id)initWithDictionary:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface RUMiniPlayerActionsViewController : MPUMiniPlayerActionsViewController
{
}

+ (id)_titleForAction:(long long)arg1;
+ (id)_imageForAction:(long long)arg1;
+ (id)_actionsForItem:(id)arg1;

@end

@interface RUMiniPlayerCoordinator : MPUMiniPlayerCoordinator <RUMiniPlayerRadioTransportControlsTarget, RUStationActionsViewControllerDelegate, RUTrackActionsDelegate, UIModalItemDelegate, UIPopoverPresentationControllerDelegate>
{
    RURadioPlaybackCoordinator *_playbackCoordinator;
    RadioStation *_prospectiveStation;
    UIPopoverPresentationController *_stationActionsPresentationController;
    RUStationActionsViewController *_stationActionsViewController;
    RUTrackActionsModalItem *_trackActionsModalItem;
    UIPopoverPresentationController *_trackActionsPresentationController;
    RUTrackActionsViewController *_trackActionsViewController;
    id <RUMiniPlayerCoordinatorDelegate> _delegate;
}

@property(nonatomic) __weak id <RUMiniPlayerCoordinatorDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)_presentTrackActionsFromView:(id)arg1;
- (void)_presentStationActionsFromView:(id)arg1;
- (void)_presentAddStation;
- (void)_prepareToAddStation;
- (void)_makeStationVisible:(id)arg1;
- (void)_completeAdditionOfStation:(id)arg1 fromItem:(id)arg2 usingArtist:(_Bool)arg3 canShowAlert:(_Bool)arg4;
- (void)_applyAttributesForItem:(id)arg1 toTrackActioningObject:(id)arg2;
- (void)_playbackCoordinatorCurrentStationDidChangeNotification:(id)arg1;
- (void)_avItemTitlesDidChangeNotification:(id)arg1;
- (void)_avItemStoreIDDidChangeNotification:(id)arg1;
- (void)_addStationFromItem:(id)arg1 usingArtist:(_Bool)arg2;
- (void)prepareForPopoverPresentation:(id)arg1;
- (void)popoverPresentationController:(id)arg1 willRepositionPopoverToRect:(inout struct CGRect *)arg2 inView:(inout id *)arg3;
- (void)popoverPresentationControllerDidDismissPopover:(id)arg1;
- (void)modalItem:(id)arg1 didDismissWithButtonIndex:(long long)arg2;
- (id)presentationController:(id)arg1 viewControllerForAdaptivePresentationStyle:(long long)arg2;
- (long long)adaptivePresentationStyleForPresentationController:(id)arg1;
- (void)trackActioningObject:(id)arg1 didSelectAction:(long long)arg2 atIndex:(long long)arg3;
- (void)stationActionsViewController:(id)arg1 didFinishAction:(long long)arg2 withObject:(id)arg3 error:(id)arg4;
- (void)stationActionsViewController:(id)arg1 willBeginAction:(long long)arg2;
- (void)transportControls:(id)arg1 presentStationActionsForItem:(id)arg2;
- (void)transportControls:(id)arg1 addStationForItem:(id)arg2 usingArtist:(_Bool)arg3;
- (void)transportControls:(id)arg1 requestsStationVisibility:(id)arg2;
- (void)miniPlayerActionsViewController:(id)arg1 didSelectAction:(long long)arg2;
- (Class)_miniPlayerPlaybackControlsViewClass;
- (id)_currentProspectivePlaybackInformation;
- (void)navigationController:(id)arg1 traitCollectionDidChange:(id)arg2;
- (_Bool)transportControls:(id)arg1 tappedButtonPart:(unsigned long long)arg2;
- (void)dealloc;
- (id)initWithPlaybackCoordinator:(id)arg1;
- (id)initWithPlayer:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface RUMiniPlayerPlaybackControlsView : MPUMiniPlayerPlaybackControlsView
{
}

- (void)_radioModelDidChangeNotification:(id)arg1;
@property(readonly, nonatomic) UIView *viewForPresentingTrackActions;
@property(readonly, nonatomic) UIView *viewForPresentingStationActions;
- (_Bool)_wantsCreateButtonForItem:(id)arg1;
- (_Bool)_updateTitlesInView:(id)arg1 forItem:(id)arg2;
- (Class)_transportControlsClassForItem:(id)arg1;
- (void)_setupVisibleAndDisabledPartsForItem:(id)arg1;
- (Class)_miniPlayerActionsViewControllerClass;
- (id)_artistTextForItem:(id)arg1;
- (_Bool)_allowsScrubbingForItem:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface RUMiniPlayerRadioAdTransportControls : MPUMiniPlayerTransportControls
{
    UIImageView *_artworkImageView;
}

+ (unsigned long long)defaultVisibleParts;
- (void).cxx_destruct;
- (void)_updateItemArtwork;
- (void)_avItemArtworkDidChangeNotification:(id)arg1;
- (void)setItem:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface RUMiniPlayerRadioTransportControls : MPUMiniPlayerTransportControls <MPUStackViewDataSource, RUTrackDownloadViewDelegate>
{
    SKUICircleProgressIndicator *_createActivityIndicatorView;
    UIButton *_infoButton;
    MPUStackView *_stackView;
    MPUBorderConfiguration *_stackItemBorderConfiguration;
    MPUBorderDrawingCache *_stackItemBorderDrawingCache;
    UITapGestureRecognizer *_stackTapGestureRecognizer;
    RUTrackDownloadView *_trackDownloadView;
}

+ (unsigned long long)defaultVisibleParts;
- (void).cxx_destruct;
- (void)_unregisterForAVItemNotifications;
- (void)_registerForAVItemNotifications;
- (double)_expectedInfoButtonAlpha;
- (void)_playbackContentsDidChangeNotification:(id)arg1;
- (void)_isLikedDidChangeNotification:(id)arg1;
- (void)_avItemStoreIDDidChangeNotification:(id)arg1;
- (void)_avItemArtworkDidChangeNotification:(id)arg1;
- (void)_requestStationVisiblityAction:(id)arg1;
- (void)_infoButtonAction:(id)arg1;
@property(readonly, nonatomic) UIView *viewForPresentingTrackActions;
@property(readonly, nonatomic) UIView *viewForPresentingStationActions;
@property(nonatomic, getter=isShowingCreateLoadingIndicator) _Bool showingCreateLoadingIndicator;
- (void)trackDownloadViewWillTransition:(id)arg1;
- (void)stackView:(id)arg1 didCreateItem:(id)arg2;
- (void)stackView:(id)arg1 applyAttributesToItem:(id)arg2 atIndex:(long long)arg3;
- (long long)numberOfItemsInStackView:(id)arg1;
- (void)_updateForItemChangeWithPreviousItem:(id)arg1 animated:(_Bool)arg2;
- (void)_prospectivePlaybackInformationDidChangeAnimated:(_Bool)arg1;
- (id)tintColorForPart:(unsigned long long)arg1;
- (id)buttonImageForPart:(unsigned long long)arg1;
- (void)unregisterForPlayerNotifications;
- (void)setItem:(id)arg1;
- (void)registerForPlayerNotifications;
- (void)layoutSubviews;
- (void)didMoveToWindow;
- (void)traitCollectionDidChange:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface RUNetworkObserver : NSObject
{
}

+ (id)sharedNetworkObserver;
- (void)_updateNetworkActivityIndicator;
- (void)_networkUsageDidChangeNotification:(id)arg1;
- (void)dealloc;
- (id)_init;
- (id)init;

@end

@interface RUNetworkPlaybackController : NSObject
{
    NSObject<OS_dispatch_queue> *_accessQueue;
    NSString *_highQualityAssetFlavor;
    double _minimumBitrateForHighQuality;
    AVAssetCache *_assetCache;
}

+ (id)sharedController;
@property(readonly, nonatomic) AVAssetCache *assetCache; // @synthesize assetCache=_assetCache;
- (void).cxx_destruct;
- (void)_updateForLoadedStoreBag:(id)arg1;
- (void)_radioStoreBagDidLoadNotification:(id)arg1;
@property(readonly, nonatomic) double minimumBitrateForHighQuality;
@property(readonly, copy, nonatomic) NSString *highQualityAssetFlavor;
- (void)dealloc;
- (id)_init;
- (id)init;

@end

@interface RUNowPlayingObserver : MPNowPlayingObserver
{
    RURadioPlaybackCoordinator *_playbackCoordinator;
}

- (void).cxx_destruct;
- (_Bool)_itemNotificationIsRelevantToObservedPlayer:(id)arg1;
- (void)_radioModelDidChangeNotification:(id)arg1;
- (void)_isBannedDidChangeNotification:(id)arg1;
- (void)_isLikedDidChangeNotification:(id)arg1;
- (void)_isInWishListDidChangeNotification:(id)arg1;
- (void)_currentStationDidChangeNotfication:(id)arg1;
- (void)_createNowPlayingInfoForItem:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)dealloc;
- (id)initWithPlayer:(id)arg1 playbackCoordinator:(id)arg2;
- (id)initWithPlayer:(id)arg1;

@end

@interface RUNowPlayingPlaybackControlsView : MPUNowPlayingPlaybackControlsView
{
    UIButton *_infoButton;
    _Bool _isWide;
}

@property(readonly, nonatomic) UIButton *infoButton; // @synthesize infoButton=_infoButton;
- (void).cxx_destruct;
- (void)_updateSizeClass;
- (_Bool)_isRadioItem;
- (void)_destroyInfoButtonAnimated:(_Bool)arg1;
- (void)_infoButtonAction:(id)arg1;
- (void)traitCollectionDidChange:(id)arg1;
- (double)_volumeBottomVerticalInsetPhone;
- (void)_updateForItemDidChangeAnimated:(_Bool)arg1;
- (double)_transportControlsLastResortVerticalOffsetPhone;
- (double)_titlesLastResortVerticalOffsetPhone;
- (_Bool)_shouldAddBottomGap;
- (struct CGRect)_boundsForCenteringCreateActivityIndicatorView;
- (Class)_transportControlsClass;
- (void)setShowingCreateLoadingIndicator:(_Bool)arg1;
- (id)newProgressIndicator;
- (void)layoutSubviews;
- (void)dealloc;

// Remaining properties
@property(nonatomic) __weak id <RUNowPlayingPlaybackControlsViewDelegate><MPTransportControlsTarget> delegate;

@end

@interface RUNowPlayingTransportControls : MPUNowPlayingTransportControls
{
}

+ (unsigned long long)defaultVisibleParts;
- (void)_unregisterForAVItemNotifications;
- (void)_registerForAVItemNotifications;
- (void)_isLikedDidChangeNotification:(id)arg1;
- (void)_avItemStoreIDDidChangeNotification:(id)arg1;
- (void)_updateItemRelatedParts;
- (double)_playPauseBottomVInset;
- (double)_nextButtonVInset;
- (id)tintColorForPart:(unsigned long long)arg1;
- (void)setItem:(id)arg1;
- (id)buttonImageForPart:(unsigned long long)arg1;
- (void)layoutSubviews;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface RUNowPlayingViewController : MPUNowPlayingViewController <RUNowPlayingPlaybackControlsViewDelegate, RUStationActionsViewControllerDelegate, RUTrackActionsDelegate, RUTrackDownloadViewDelegate, SKStoreProductViewControllerDelegate, UIModalItemDelegate, UIPopoverPresentationControllerDelegate>
{
    UIView *_infoButtonContainerView;
    _Bool _isVisibleForVisuallyEngagedAds;
    SKStoreProductViewController *_productViewController;
    RUPurchaseAlbumView *_purchaseAlbumView;
    UIPopoverPresentationController *_stationActionsPresentationController;
    UIView *_stationActionsPresentationView;
    RUStationActionsViewController *_stationActionsViewController;
    RUTrackActionsModalItem *_trackActionsModalItem;
    UIPopoverPresentationController *_trackActionsPresentationController;
    RUTrackActionsViewController *_trackActionsViewController;
    RUTrackDownloadView *_trackDownloadView;
    _Bool _visuallyEngagedAds;
    id <RUNowPlayingViewControllerDelegate> _delegate;
}

@property(nonatomic) __weak id <RUNowPlayingViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)_scaleAndSetModalItemArtworkImageToCurrentArtworkImage;
- (void)_prepareToAddStation;
- (_Bool)_makeRadioVisible;
- (void)_handleTrackAction:(long long)arg1 withItem:(id)arg2;
- (_Bool)_dismissModalViewsAnimated:(_Bool)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
- (void)_completeAdditionOfStation:(id)arg1 fromItem:(id)arg2 usingArtist:(_Bool)arg3 canShowAlert:(_Bool)arg4;
- (void)_applyAttributesForItem:(id)arg1 toTrackActioningObject:(id)arg2;
- (void)_adTrackDidFailToLoadNotification:(id)arg1;
- (void)_radioPurchaseAllowedDidChangeNotification:(id)arg1;
- (void)_radioModelDidChangeNotification:(id)arg1;
- (void)_itemAlbumStoreIDDidChangeNotification:(id)arg1;
- (void)_itemAlbumBuyButtonInfoDidChangeNotification:(id)arg1;
- (void)_videoAdTapGestureRecognizerAction:(id)arg1;
- (void)_purchaseAlbumButtonAction:(id)arg1;
- (void)_infoButtonAction:(id)arg1;
- (void)_addStationFromItem:(id)arg1 usingArtist:(_Bool)arg2;
- (void)traitCollectionDidChange:(id)arg1;
- (void)prepareForPopoverPresentation:(id)arg1;
- (void)popoverPresentationControllerDidDismissPopover:(id)arg1;
- (void)modalItem:(id)arg1 willDismissWithButtonIndex:(long long)arg2;
- (id)presentationController:(id)arg1 viewControllerForAdaptivePresentationStyle:(long long)arg2;
- (long long)adaptivePresentationStyleForPresentationController:(id)arg1;
- (void)productViewControllerDidFinish:(id)arg1;
- (void)trackDownloadViewWillTransition:(id)arg1;
- (void)trackDownloadView:(id)arg1 stateDidChangeToState:(long long)arg2;
- (void)trackActioningObject:(id)arg1 didSelectAction:(long long)arg2 atIndex:(long long)arg3;
- (void)stationActionsViewController:(id)arg1 didFinishAction:(long long)arg2 withObject:(id)arg3 error:(id)arg4;
- (void)stationActionsViewController:(id)arg1 willBeginAction:(long long)arg2;
- (void)playbackControlsDidTapInfoButton:(id)arg1;
- (_Bool)transportControls:(id)arg1 tappedButtonPart:(unsigned long long)arg2;
- (void)_updateVisualEngagementWithItem:(id)arg1;
- (void)_updateTitlesInView:(id)arg1 forItem:(id)arg2;
- (_Bool)_updateNavigationItemAnimated:(_Bool)arg1;
- (_Bool)_updateItemRelatedStateForChangeToItem:(id)arg1 animated:(_Bool)arg2;
- (long long)_transitionDirectionForChangeFromItem:(id)arg1 toItem:(id)arg2;
- (id)_titleTextForItem:(id)arg1;
- (_Bool)_shouldUpdateContentView:(id)arg1 forBufferingState:(unsigned long long)arg2;
- (_Bool)_shouldAbortUpdatingContentView:(id)arg1 forItem:(id)arg2;
- (Class)_playbackControlsViewClass;
- (void)_itemTitlesDidChange;
- (_Bool)_isActionForHandlingDoubleTapOnArtworkImageViewEnabled;
- (_Bool)_itemSupportsRatings:(id)arg1;
- (void)_didUpdateArtworkImage;
- (id)_createContentViewForItem:(id)arg1 contentViewController:(id *)arg2;
- (struct CGSize)_contentViewSizeForItem:(id)arg1 withContentView:(id)arg2 orientation:(long long)arg3;
- (id)_artistTextForItem:(id)arg1;
- (id)_albumTextForItem:(id)arg1;
- (void)MPU_prepareForNavigationController:(id)arg1 poppingToViewController:(id)arg2 animated:(_Bool)arg3 completion:(CDUnknownBlockType)arg4;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface RUParallelScrollView : UIScrollView
{
    double _displayScale;
    UIScrollView *_targetScrollView;
    double _targetScrollViewWidth;
}

@property(nonatomic) double targetScrollViewWidth; // @synthesize targetScrollViewWidth=_targetScrollViewWidth;
@property(retain, nonatomic) UIScrollView *targetScrollView; // @synthesize targetScrollView=_targetScrollView;
- (void).cxx_destruct;
- (void)traitCollectionDidChange:(id)arg1;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface RUPlaceholderView : UIView
{
    MPUVignetteBackgroundView *_backgroundView;
    _UIContentUnavailableView *_contentUnavailableView;
    UIAlertView *_useCellularAlertView;
    _Bool _cellularNetworkingAllowed;
    long long _style;
}

@property(nonatomic) _Bool cellularNetworkingAllowed; // @synthesize cellularNetworkingAllowed=_cellularNetworkingAllowed;
@property(nonatomic) long long style; // @synthesize style=_style;
- (void).cxx_destruct;
- (void)_useCellularAction:(id)arg1;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)layoutSubviews;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface RUPlaybackTimeoutInfoController : RadioPlaybackTimeoutInfoController
{
}

- (id)_generateCurrentTimeoutInfoReturningReady:(_Bool *)arg1;

@end

@interface RUPrepareRadioPlaybackOperation : NSOperation
{
    CDUnknownBlockType _firstTrackBlock;
    RURadioGetTracksOperation *_getTracksOperation;
    NSLock *_lock;
    CDUnknownBlockType _preparedBlock;
    RadioRequestContext *_requestContext;
    RadioStation *_station;
}

- (void).cxx_destruct;
- (void)main;
- (void)cancel;
@property(copy) RadioRequestContext *requestContext; // @synthesize requestContext=_requestContext;
@property(copy) CDUnknownBlockType preparedBlock;
- (id)initWithStation:(id)arg1;

@end

@interface RUPreviewSession : NSObject
{
    NSArray *_items;
    MPAVItem *_currentItem;
    MPAVController *_player;
    NSHashTable *_sessionObservers;
    double _customTrackPreviewDuration;
}

@property(readonly, copy, nonatomic) NSArray *items; // @synthesize items=_items;
@property(nonatomic) double customTrackPreviewDuration; // @synthesize customTrackPreviewDuration=_customTrackPreviewDuration;
- (void).cxx_destruct;
- (void)_unregisterForPlayerNotifications;
- (void)_registerForPlayerNotifications;
- (void)_didStopWithOptions:(long long)arg1 finalItem:(id)arg2 didFinalItemPlayToCompletion:(_Bool)arg3;
- (void)_didChangeFromItem:(id)arg1 toItem:(id)arg2;
- (void)_playbackStateChangedNotification:(id)arg1;
- (void)_itemWillChangeNotification:(id)arg1;
- (void)_isExplicitTracksEnabledDidChangeNotification:(id)arg1;
- (void)_applicationWillResignActiveNotification:(id)arg1;
- (void)stopWithOptions:(long long)arg1 fadeoutDuration:(double)arg2;
- (void)start;
- (void)removeSessionObserver:(id)arg1;
- (void)addSessionObserver:(id)arg1;
@property(readonly, nonatomic, getter=isPlaying) _Bool playing;
@property(readonly, nonatomic) double currentTime;
@property(readonly, nonatomic) double currentItemDuration;
@property(readonly, nonatomic) MPAVItem *currentItem;
- (void)dealloc;
- (id)initWithItems:(id)arg1;

@end

@interface RUProspectivePlaybackInformation : MPUProspectivePlaybackInformation
{
    RadioStation *_radioStation;
}

@property(readonly, nonatomic) RadioStation *radioStation; // @synthesize radioStation=_radioStation;
- (void).cxx_destruct;
- (_Bool)isRadioProspectivePlaybackInformation;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)initWithRadioStation:(id)arg1;
- (id)init;

@end

@interface RUProxyTableView : UITableView
{
    UIScrollView *_targetScrollView;
}

@property(nonatomic) __weak UIScrollView *targetScrollView; // @synthesize targetScrollView=_targetScrollView;
- (void).cxx_destruct;
- (void)setContentSize:(struct CGSize)arg1;

@end

@interface RUPurchaseAlbumView : UIView
{
    struct UIEdgeInsets _alignmentRectInsets;
    SKUIItemOfferButton *_itemOfferButton;
    long long _purchaseAlbumViewStyle;
}

@property(nonatomic) long long purchaseAlbumViewStyle; // @synthesize purchaseAlbumViewStyle=_purchaseAlbumViewStyle;
@property(readonly, nonatomic) SKUIItemOfferButton *itemOfferButton; // @synthesize itemOfferButton=_itemOfferButton;
- (void).cxx_destruct;
- (void)_updateForStyle:(long long)arg1 animated:(_Bool)arg2;
@property(copy, nonatomic) NSString *title;
- (void)setPurchaseAlbumViewStyle:(long long)arg1 animated:(_Bool)arg2;
@property(nonatomic) struct UIEdgeInsets alignmentRectInsets;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)layoutSubviews;
- (void)didMoveToWindow;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface RURadioAVItem : MPAVItem
{
    NSArray *_buyOffers;
    RadioTrack *_radioTrack;
    _Bool _isBanned;
    _Bool _isLiked;
    _Bool _isInWishList;
    _Bool _heartbeatInvalid;
    RadioStation *_station;
    NSString *_stationHash;
    long long _stationID;
    NSString *_stationName;
}

@property(nonatomic, getter=isHeartbeatInvalid) _Bool heartbeatInvalid; // @synthesize heartbeatInvalid=_heartbeatInvalid;
@property(readonly, nonatomic) NSString *stationName; // @synthesize stationName=_stationName;
@property(readonly, nonatomic) long long stationID; // @synthesize stationID=_stationID;
@property(readonly, nonatomic) NSString *stationHash; // @synthesize stationHash=_stationHash;
@property(retain, nonatomic) RadioStation *station; // @synthesize station=_station;
@property(nonatomic) _Bool isInWishList; // @synthesize isInWishList=_isInWishList;
@property(nonatomic) _Bool isLiked; // @synthesize isLiked=_isLiked;
@property(nonatomic) _Bool isBanned; // @synthesize isBanned=_isBanned;
- (void).cxx_destruct;
- (void)_applyLoudnessInfoForVolumeNormalization;
- (id)radioTrack;
- (void)_radioRequestDidFinishNotification:(id)arg1;
- (void)_internalIsBannedDidChangeNotification:(id)arg1;
- (void)_internalIsLikedDidChangeNotification:(id)arg1;
- (void)_internalIsInWishlistDidChangeNotification:(id)arg1;
- (void)addDerivedStationForArtist:(_Bool)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
- (id)mediaItem;
- (id)urlTimeMarkers;
- (unsigned long long)type;
- (id)titlesForTime:(double)arg1;
- (id)title;
- (_Bool)supportsSettingCurrentTime;
- (long long)storeID;
- (void)reevaluateType;
- (unsigned long long)persistentID;
- (id)mainTitle;
- (id)localizedPositionInPlaylistString;
- (id)localizedAttributedPositionInPlaylistStringWithRegularTextAttributes:(id)arg1 emphasizedTextAttributes:(id)arg2;
- (_Bool)isValidPlayerSubstituteForItem:(id)arg1;
- (_Bool)isStreamable;
- (_Bool)isRadioItem;
- (_Bool)isCloudItem;
- (_Bool)isExplicitTrack;
- (unsigned long long)countForQueueFeeder;
- (id)copyrightText;
- (id)chapterTimeMarkerForTime:(double)arg1;
- (id)chapterTimeMarkers;
- (id)buyOffers;
- (id)artworkTimeMarkers;
- (id)artist;
- (long long)albumStoreID;
- (id)album;
- (id)aggregateDictionaryItemType;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)description;
- (void)dealloc;
- (id)initWithRadioTrack:(id)arg1;
- (id)artworkCatalogForPlaybackTime:(double)arg1;

@end

@interface RURadioAVPlayer : MPAVController
{
    _Bool _checkedDefaultsForLastPlayedStation;
    RadioStation *_lastPlayedStation;
    NSObject<OS_dispatch_queue> *_lastPlayedStationSaveQueue;
    RadioStation *_playbackCoordinatorCurrentStation;
    NSObject<OS_dispatch_queue> *_radioUIAccessQueue;
}

- (void).cxx_destruct;
- (void)_updateLastPlayedStation;
- (void)_previewSessionDidStopNotification:(id)arg1;
- (void)feederChangedContents:(id)arg1;
- (void)_currentStationDidChangeNotification:(id)arg1;
- (_Bool)beginOrTogglePlaybackWithCoordinator:(id)arg1;
- (_Bool)beginPlaybackWithCoordinator:(id)arg1;
@property(retain, nonatomic) RadioStation *lastPlayedStation;
@property(readonly, nonatomic) RadioStation *currentStation;
- (void)dealloc;
- (id)init;

@end

@interface RURadioAdAVItem : MPAVAdItem
{
    RURadioAdTrack *_adTrack;
    RadioStation *_station;
    NSString *_stationHash;
    long long _stationID;
    NSString *_stationName;
}

@property(readonly, nonatomic) NSString *stationName; // @synthesize stationName=_stationName;
@property(readonly, nonatomic) long long stationID; // @synthesize stationID=_stationID;
@property(readonly, nonatomic) NSString *stationHash; // @synthesize stationHash=_stationHash;
@property(retain, nonatomic) RadioStation *station; // @synthesize station=_station;
- (void).cxx_destruct;
- (void)_applyLoudnessInfo;
- (id)adTrack;
- (unsigned long long)type;
- (id)titlesForTime:(double)arg1;
- (id)title;
- (_Bool)supportsSkip;
- (void)reevaluateType;
- (id)mainTitle;
- (void)loadAssetAndPlayerItem;
- (_Bool)isValidPlayerSubstituteForItem:(id)arg1;
- (_Bool)isStreamable;
- (id)album;
- (id)initWithAdTrack:(id)arg1;
- (id)artworkCatalogForPlaybackTime:(double)arg1;

@end

@interface RURadioAdArtworkDataSource : MPAbstractNetworkArtworkDataSource
{
}

+ (id)sharedRadioAdArtworkDataSource;
- (id)requestForCatalog:(id)arg1 size:(struct CGSize)arg2;
- (id)supportedSizesForCatalog:(id)arg1;
- (_Bool)areRepresentationsAvailableForCatalog:(id)arg1;

@end

@interface RURadioAdObserver : NSObject <ADBannerViewDelegate, ISDialogOperationDelegate>
{
    NSObject<OS_dispatch_queue> *_accessQueue;
    MPUReportingController *_globalReportingController;
    _Bool _hasDirtyVisualEngagement;
    _Bool _isSlotAcquisitionInProgress;
    long long _lastApplicationState;
    RUJingleTiltReportingController *_jingleTiltReportingController;
    double _minDurationToCountAsPlayed;
    NSString *_playbackSessionID;
    long long _policyEngineEnabledCount;
    MPURTCReportingController *_RTCReportingController;
    NSDate *_sapSessionLoadBeginDate;
    double _skipThreshold;
    ISDialogOperation *_slotAcquisitionDialogOperation;
    double _startTimeForCurrentItem;
    long long _visualEngagementCount;
    _Bool _visuallyEngaged;
    MPAVController *_player;
    unsigned long long _numberOfSkippedTracks;
}

+ (id)sharedAdObserver;
@property(readonly, nonatomic) unsigned long long numberOfSkippedTracks; // @synthesize numberOfSkippedTracks=_numberOfSkippedTracks;
@property(readonly, nonatomic, getter=isVisuallyEngaged) _Bool visuallyEngaged; // @synthesize visuallyEngaged=_visuallyEngaged;
@property(retain, nonatomic) MPAVController *player; // @synthesize player=_player;
- (void).cxx_destruct;
- (void)_updateVisualEngagement;
- (void)_updateWithStoreBag:(id)arg1;
- (void)_unregisterForPlayerNotifications;
- (void)__scheduleUpdateVisualEngagement;
- (void)_scheduleUpdateVisualEngagement;
- (void)_reportPlaybackEndedForAdTrack:(id)arg1 withItem:(id)arg2;
- (void)_reportPlaybackEndedForTimeoutWithItem:(id)arg1;
- (id)_reportingTrackMetadataForItem:(id)arg1;
- (id)_reportingRadioStationMetadataForItem:(id)arg1;
- (id)_reportingPlaybackEndEventForItem:(id)arg1;
- (void)_registerForPlayerNotifications;
- (void)_recordReportingEvents:(id)arg1;
- (void)_loadMinDurationToCountAsPlayedFromURLBag;
- (_Bool)_isPolicyEngineEnabled;
- (void)_handleSkipForChangedItem:(id)arg1 didChangeStation:(_Bool)arg2;
- (void)_getCurrentTime:(double *)arg1 duration:(double *)arg2 wasSkipped:(_Bool *)arg3 didAssetFailToLoad:(_Bool *)arg4 forItem:(id)arg5;
- (void)_clearAssetCacheForItem:(id)arg1;
- (void)_attemptSlotAcquisitionWithAdditionalBodyParameters:(id)arg1;
- (id)_adPolicyEngine;
- (void)willHitPlaybackTimeoutEndingPlayback:(_Bool)arg1 withCurrentItem:(id)arg2;
- (void)requestAdsForSlot:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)optimalTransmissionWindowDidOpen;
- (void)noteDidEnterStation:(id)arg1;
- (void)historyDidEndPlayingAdTrack:(id)arg1 withItem:(id)arg2;
- (void)historyDidBeginPlayingAdTrack:(id)arg1 withItem:(id)arg2;
- (id)heartbeatTokenReturningError:(id *)arg1;
- (void)getTracksWithRequest:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)getHistoryWithRequest:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)endVisualEngagement;
- (void)endEnablingPolicyEngine;
- (void)didHitPlaybackTimeoutEndingPlayback:(_Bool)arg1 withCurrentItem:(id)arg2;
- (void)beginVisualEngagement;
- (void)_beginEnablingPolicyEngine;
- (void)beginEnablingPolicyEngine;
- (void)attemptSlotAcquisition;
@property(retain, nonatomic) MPURTCReportingController *RTCReportingController;
@property(retain, nonatomic) RUJingleTiltReportingController *jingleTiltReportingController;
@property(retain, nonatomic) MPUReportingController *globalReportingController;
- (void)_storeBagDidLoadNotification:(id)arg1;
- (void)_radioStreamTrackAVItemDidReceiveTimedMetadataPingsNotification:(id)arg1;
- (void)_radioFairPlayControllerSAPSessionWillBeginLoadingNotification:(id)arg1;
- (void)_radioFairPlayControllerSAPSessionDidFinishLoadingNotification:(id)arg1;
- (void)_playbackStateDidChangeNotification:(id)arg1;
- (void)_itemWillChangeNotification:(id)arg1;
- (void)_itemNewAccessLogEntryNotification:(id)arg1;
- (void)_itemDidFinishLoadingNotification:(id)arg1;
- (void)_itemChangedNotification:(id)arg1;
- (void)_itemAssetLoadedDidChangeNotification:(id)arg1;
- (void)_heartbeatChangedNotification:(id)arg1;
- (void)_bufferingStateDidChangeNotification:(id)arg1;
- (void)_applicationWillResignActiveNotification:(id)arg1;
- (void)_applicationDidBecomeActiveNotification:(id)arg1;
- (void)operation:(id)arg1 selectedButton:(id)arg2;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface RURadioAdSlot : NSObject <ADAdSlotDelegate>
{
    NSArray *_adTracks;
    ADAdSlot *_adSlot;
}

@property(readonly, nonatomic) ADAdSlot *adSlot; // @synthesize adSlot=_adSlot;
- (void).cxx_destruct;
- (void)willBeginPlaybackOfAdTracks:(id)arg1 forSpaceType:(long long)arg2;
- (void)didFinishPlaybackOfAdTracks:(id)arg1 skippedCount:(long long)arg2;
@property(copy, nonatomic) NSData *stationData;
@property(copy, nonatomic) NSData *previousSongData;
@property(copy, nonatomic) NSString *identifier;
@property(nonatomic, getter=isGatewayAdSlot) _Bool gatewayAdSlot;
@property(copy, nonatomic) NSData *followingSongData;
@property(readonly, copy, nonatomic) NSArray *adTracks;
- (void)adSlot:(id)arg1 didChangeSelectedAds:(id)arg2 previousAds:(id)arg3;
- (void)dealloc;
- (id)initWithAdSlot:(id)arg1;
- (id)init;
@property(readonly, nonatomic) _Bool wasPreparedAsStationEntryAdSlot;
- (void)setWasPreparedAsStationEntryAdSlot:(_Bool)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface RURadioAdTrack : NSObject <ADBannerViewDelegate, NSCopying>
{
    long long _adType;
    ADBannerView *_adView;
    NSDictionary *_loudnessInfo;
    NSURL *_URL;
}

@property(readonly, nonatomic) NSURL *URL; // @synthesize URL=_URL;
@property(readonly, copy, nonatomic) NSDictionary *loudnessInfo; // @synthesize loudnessInfo=_loudnessInfo;
@property(readonly, nonatomic) ADBannerView *adView; // @synthesize adView=_adView;
@property(readonly, nonatomic) long long adType; // @synthesize adType=_adType;
- (void).cxx_destruct;
- (id)_loudnessInfoForVideoAssetDictionary:(id)arg1;
@property(readonly, copy, nonatomic) NSString *uniqueIdentifier;
- (void)triggerAdAction;
@property(readonly, nonatomic) _Bool hasAction;
@property(readonly, nonatomic) NSURL *artworkURL;
@property(readonly, nonatomic) long long actionType;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)bannerViewActionShouldBegin:(id)arg1 willLeaveApplication:(_Bool)arg2;
- (void)bannerViewActionDidFinish:(id)arg1;
- (void)bannerView:(id)arg1 didFailToReceiveAdWithError:(id)arg2;
- (_Bool)isEqual:(id)arg1;
@property(readonly) unsigned long long hash;
- (void)dealloc;
- (id)initWithAdView:(id)arg1;
- (id)artworkCatalog;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;

@end

@interface RURadioArtworkDataSource : NSObject <MPArtworkDataSource>
{
    unsigned long long _backgroundCacheSize;
    unsigned long long _cacheSize;
    CPLRUDictionary *_cachedArtworkRepresentations;
    NSObject<OS_dispatch_queue> *_cachedArtworkRepresentationsAccessQueue;
    long long _resumeToForegroundCacheSize;
}

+ (id)sharedRadioArtworkDataSource;
- (void).cxx_destruct;
- (void)_setCacheSize:(unsigned long long)arg1 preserveExisting:(_Bool)arg2;
- (void)_clearCache;
- (void)_cacheArtworkRepresentation:(id)arg1 forKey:(id)arg2;
- (void)_handleWillEnterForegroundNotification:(id)arg1;
- (void)_handleDidReceiveMemoryWarningNotification:(id)arg1;
- (void)_handleDidEnterBackgroundNotification:(id)arg1;
- (_Bool)areRepresentationsForCatalog:(id)arg1 visuallyIdenticalToRepresentationsForCatalog:(id)arg2;
- (void)cancelLoadingRepresentationForArtworkCatalog:(id)arg1;
- (void)loadRepresentationForArtworkCatalog:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)existingRepresentationForArtworkCatalog:(id)arg1;
- (_Bool)isRepresentation:(id)arg1 bestRepresentationForArtworkCatalog:(id)arg2;
- (_Bool)areRepresentationsAvailableForCatalog:(id)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface RURadioAudioClipAVItem : RURadioAVItem
{
}

- (id)audioClip;
- (unsigned long long)type;
- (_Bool)supportsSkip;
- (void)loadAssetAndPlayerItem;
- (id)initWithAudioClip:(id)arg1;
- (id)artworkCatalogForPlaybackTime:(double)arg1;

@end

@interface RURadioCollectionView : UICollectionView
{
    RURadioStationsCollectionViewTemplate *_radioStationsCollectionViewTemplate;
}

@property(readonly, nonatomic) RURadioStationsCollectionViewTemplate *radioStationsCollectionViewTemplate; // @synthesize radioStationsCollectionViewTemplate=_radioStationsCollectionViewTemplate;
- (void).cxx_destruct;
- (id)dequeueReusableCellWithReuseIdentifier:(id)arg1 forIndexPath:(id)arg2;
- (void)setContentSize:(struct CGSize)arg1;
- (void)tintColorDidChange;
- (id)initWithFrame:(struct CGRect)arg1 collectionViewLayout:(id)arg2 radioStationsCollectionViewTemplate:(id)arg3;
- (id)initWithFrame:(struct CGRect)arg1 collectionViewLayout:(id)arg2;

// Remaining properties
@property(nonatomic) __weak id <RURadioCollectionViewDelegate> delegate;

@end

@interface RURadioDataSource : MPUDataSource <RadioPushNotificationControllerDelegate>
{
    id <RURadioDataSourceDelegate> _delegate;
    NSArray *_featuredStations;
    BOOL _optedInToRadio;
    RadioPushNotificationController *_pushNotificationController;
    NSArray *_stations;
    NSArray *_userStations;
    RURadioPlaybackCoordinator *_playbackCoordinator;
}

+ (void)_updateRadioAvailabilityWithStoreBag:(id)arg1 error:(id)arg2;
+ (void)_reloadRadioAvailability;
+ (void)_storeBagDidLoadNotification:(id)arg1;
+ (void)_networkReachabilityDidChangeNotification:(id)arg1;
+ (void)_accountStoreDidChangeNotification:(id)arg1;
+ (_Bool)isRadioAvailable;
+ (_Bool)isOptedInToRadio;
+ (void)initialize;
@property(retain, nonatomic) RURadioPlaybackCoordinator *playbackCoordinator; // @synthesize playbackCoordinator=_playbackCoordinator;
@property(nonatomic) __weak id <RURadioDataSourceDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)_reloadOptedInToRadio;
- (void)_notifyAssistantOfStationChanges;
- (void)_deauthenticate;
- (void)_radioRequestDidFinishNotification:(id)arg1;
- (void)_radioModelDidChangeNotification:(id)arg1;
- (void)_accountStoreDidChangeNotification:(id)arg1;
@property(readonly, nonatomic) NSArray *userStations;
- (void)synchronizeStationsAsAutomaticUpdate:(_Bool)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic) NSArray *stations;
- (void)refreshFeaturedStations;
@property(readonly, nonatomic, getter=isOptedInToRadio) _Bool optedInToRadio;
@property(readonly, nonatomic) NSArray *featuredStations;
- (void)deauthenticateIfNecessary;
- (void)checkAcceptedTermsWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)pushNotificationControllerDidReceiveSyncRequest:(id)arg1 toGlobalVersion:(unsigned long long)arg2;
- (id)playbackContextForIndex:(unsigned long long)arg1;
- (void)_invalidateCalculatedEntities;
- (_Bool)entityIsNowPlayingAtIndex:(unsigned long long)arg1;
- (id)entities;
- (long long)editingTypeForEntityAtIndex:(unsigned long long)arg1;
- (_Bool)isEqual:(id)arg1;
@property(readonly) unsigned long long hash;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithEntityType:(long long)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;

@end

@interface RURadioPinningCollectionViewFlowLayout : UICollectionViewFlowLayout
{
}

- (struct CGPoint)targetContentOffsetForProposedContentOffset:(struct CGPoint)arg1 withScrollingVelocity:(struct CGPoint)arg2;

@end

@interface RURadioFeaturedStationsCollectionViewLayout : RURadioPinningCollectionViewFlowLayout
{
}

- (id)layoutAttributesForItemAtIndexPath:(id)arg1;
- (id)layoutAttributesForElementsInRect:(struct CGRect)arg1;

@end

@interface RURadioStationsCollectionViewTemplate : NSObject
{
    NSMutableArray *_orderedNamesOfTextElements;
    NSMutableDictionary *_textElementsByName;
    UITraitCollection *_traitCollection;
    UIColor *_tintColor;
    double _horizontalSpacingBetweenItems;
    double _horizontalEdgePadding;
    MPUBorderDrawingCache *_stackItemBorderDrawingCache;
    struct CGSize _rootViewSize;
    struct CGSize _artworkSize;
    struct CGSize _itemSize;
    CDStruct_22171f69 _stackAttributes;
}

+ (double)_stackBaseWidthForHorizontalSizeClass:(long long)arg1 displayScale:(double)arg2 rootViewWidth:(double)arg3 horizontalEdgePadding:(double)arg4 horizontalSpacingBetweenItems:(double)arg5;
+ (double)_targetStackBaseWidthForHorizontalSizeClass:(long long)arg1 displayScale:(double)arg2 rootViewWidth:(double)arg3;
+ (double)_horizontalSpacingBetweenItemsForHorizontalSizeClass:(long long)arg1 displayScale:(double)arg2 rootViewWidth:(double)arg3;
+ (double)_horizontalEdgePaddingForHorizontalSizeClass:(long long)arg1 displayScale:(double)arg2 rootViewWidth:(double)arg3;
+ (CDStruct_93c99dff)_attributesForStackItemAtIndex:(long long)arg1 displayScale:(double)arg2;
+ (CDStruct_22171f69)_stackAttributesForHorizontalSizeClass:(long long)arg1 displayScale:(double)arg2 rootViewHeight:(double)arg3;
+ (long long)numberOfStackItems;
@property(retain, nonatomic) MPUBorderDrawingCache *stackItemBorderDrawingCache; // @synthesize stackItemBorderDrawingCache=_stackItemBorderDrawingCache;
@property(readonly, nonatomic) CDStruct_22171f69 stackAttributes; // @synthesize stackAttributes=_stackAttributes;
@property(readonly, nonatomic) struct CGSize itemSize; // @synthesize itemSize=_itemSize;
@property(readonly, nonatomic) struct CGSize artworkSize; // @synthesize artworkSize=_artworkSize;
@property(readonly, nonatomic) double horizontalEdgePadding; // @synthesize horizontalEdgePadding=_horizontalEdgePadding;
@property(readonly, nonatomic) double horizontalSpacingBetweenItems; // @synthesize horizontalSpacingBetweenItems=_horizontalSpacingBetweenItems;
@property(copy, nonatomic) UIColor *tintColor; // @synthesize tintColor=_tintColor;
@property(nonatomic) struct CGSize rootViewSize; // @synthesize rootViewSize=_rootViewSize;
@property(copy, nonatomic) UITraitCollection *traitCollection; // @synthesize traitCollection=_traitCollection;
- (void).cxx_destruct;
- (void)_updateForLayoutChange;
- (id)_textAttributesByReplacingForegroundColorInTextAttributes:(id)arg1 withColor:(id)arg2;
- (CDStruct_93c99dff)attributesForStackItemAtIndex:(long long)arg1;
@property(readonly, nonatomic) RURadioStationsCollectionViewTemplateTextElement *lastTextElement;
- (void)endCoalescingTextDrawingCacheInvalidationNotifications;
- (void)beginCoalescingTextDrawingCacheInvalidationNotifications;
- (void)enumerateTextElementsUsingBlock:(CDUnknownBlockType)arg1;
- (id)textElementNamed:(id)arg1;
- (void)addTextElement:(id)arg1 withName:(id)arg2;
- (void)updateForPreferredContentSizeChange;

@end

@interface RURadioFeaturedStationsCollectionViewTemplate : RURadioStationsCollectionViewTemplate
{
}

+ (double)_targetStackBaseWidthForHorizontalSizeClass:(long long)arg1 displayScale:(double)arg2 rootViewWidth:(double)arg3;
+ (double)_horizontalSpacingBetweenItemsForHorizontalSizeClass:(long long)arg1 displayScale:(double)arg2 rootViewWidth:(double)arg3;
+ (double)_horizontalEdgePaddingForHorizontalSizeClass:(long long)arg1 displayScale:(double)arg2 rootViewWidth:(double)arg3;
+ (CDStruct_93c99dff)_attributesForStackItemAtIndex:(long long)arg1 displayScale:(double)arg2;
+ (CDStruct_22171f69)_stackAttributesForHorizontalSizeClass:(long long)arg1 displayScale:(double)arg2 rootViewHeight:(double)arg3;
@property(readonly, nonatomic) RURadioStationsCollectionViewTemplateTextElement *titleTextElement;
- (id)init;

@end

@interface RURadioGetTracksOperation : NSOperation
{
    ISDialogOperation *_dialogOperation;
    MPUserNotification *_explicitUserNotification;
    RadioGetTracksRequest *_getTracksRequest;
    NSLock *_lock;
    unsigned long long _numberOfTracks;
    RadioPlaybackContext *_playbackContext;
    RadioRequestContext *_requestContext;
    CDUnknownBlockType _responseBlock;
    long long _reasonType;
    RadioStation *_station;
}

@property(readonly) RadioStation *station; // @synthesize station=_station;
@property(readonly) long long reasonType; // @synthesize reasonType=_reasonType;
- (void).cxx_destruct;
- (id)_newGetTracksRequestAllowingHeartbeatDelay:(_Bool)arg1 additionalRequestParameters:(id)arg2 returningError:(id *)arg3;
- (id)_heartbeatTokenDataAllowingDelay:(_Bool)arg1 error:(id *)arg2;
@property(copy) CDUnknownBlockType responseBlock;
@property(retain) RadioRequestContext *requestContext;
@property(copy) RadioPlaybackContext *playbackContext;
@property unsigned long long numberOfTracks;
- (void)main;
- (id)_runFullGetTracksProcessAllowingNoAvailableVersionDialog:(_Bool)arg1 additionalRequestParameters:(id)arg2 returningError:(id *)arg3;
- (id)_runRequestAllowingHeartbeatDelay:(_Bool)arg1 additionalRequestParameters:(id)arg2 returningError:(id *)arg3;
- (void)cancel;
- (void)dealloc;
- (id)initWithStation:(id)arg1 reasonType:(long long)arg2;

@end

@interface RURadioMyStationsCollectionViewLayout : UICollectionViewFlowLayout
{
    NSMutableArray *_deletedIndexPaths;
    NSMutableArray *_insertedIndexPaths;
}

- (void).cxx_destruct;
- (void)prepareForCollectionViewUpdates:(id)arg1;
- (id)layoutAttributesForItemAtIndexPath:(id)arg1;
- (id)layoutAttributesForElementsInRect:(struct CGRect)arg1;
- (id)initialLayoutAttributesForAppearingItemAtIndexPath:(id)arg1;
- (id)finalLayoutAttributesForDisappearingItemAtIndexPath:(id)arg1;
- (void)finalizeCollectionViewUpdates;

@end

@interface RURadioMyStationsCollectionViewTemplate : RURadioStationsCollectionViewTemplate
{
}

+ (double)_targetStackBaseWidthForHorizontalSizeClass:(long long)arg1 displayScale:(double)arg2 rootViewWidth:(double)arg3;
+ (double)_horizontalSpacingBetweenItemsForHorizontalSizeClass:(long long)arg1 displayScale:(double)arg2 rootViewWidth:(double)arg3;
+ (double)_horizontalEdgePaddingForHorizontalSizeClass:(long long)arg1 displayScale:(double)arg2 rootViewWidth:(double)arg3;
+ (CDStruct_93c99dff)_attributesForStackItemAtIndex:(long long)arg1 displayScale:(double)arg2;
+ (CDStruct_22171f69)_stackAttributesForHorizontalSizeClass:(long long)arg1 displayScale:(double)arg2 rootViewHeight:(double)arg3;
@property(readonly, nonatomic) RURadioStationsCollectionViewTemplateTextElement *subtitleTextElement;
@property(readonly, nonatomic) RURadioStationsCollectionViewTemplateTextElement *titleTextElement;
- (id)init;

@end

@interface RURadioOperationQueue : NSObject
{
    NSOperationQueue *_operationQueue;
    RadioRequestContext *_requestContext;
    NSObject<OS_dispatch_queue> *_serialQueue;
}

+ (id)sharedQueue;
- (void).cxx_destruct;
- (void)_cancelPlaybackPreparation;
- (void)_addOperation:(id)arg1;
- (void)warmOperationQueue;
- (void)sendPlayEventCollection:(id)arg1 withCompletionBlock:(CDUnknownBlockType)arg2;
- (void)preparePlaybackForStation:(id)arg1 withCompletionBlock:(CDUnknownBlockType)arg2;
- (void)loadRadioConfigurationWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)getHistoryWithRequest:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)cancelPlaybackPreparation;
- (void)addStationWithRequest:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)addGetTracksOperation:(id)arg1;
- (id)init;

@end

@interface RURadioPlaybackContext : MPPlaybackContext
{
    NSMapTable *_preparedAdSlotByRadioTrack;
    MPAVItem *_prefixItem;
    RadioStation *_station;
    NSArray *_tracks;
}

+ (Class)queueFeederClass;
@property(copy, nonatomic) NSArray *tracks; // @synthesize tracks=_tracks;
@property(readonly, nonatomic) RadioStation *station; // @synthesize station=_station;
@property(retain, nonatomic) MPAVItem *prefixItem; // @synthesize prefixItem=_prefixItem;
- (void).cxx_destruct;
- (id)preparedAdSlotForRadioTrack:(id)arg1;
- (void)addPreparedAdSlot:(id)arg1 forRadioTrack:(id)arg2;
@property(readonly, copy, nonatomic) NSArray *allPreparedAdSlotRadioTracks;
- (id)initWithStation:(id)arg1;

@end

@interface RURadioPlaybackCoordinator : NSObject <MPAVRoutingControllerDelegate>
{
    MPAVRoutingController *_routingController;
    MPAVRoute *_pickedRoute;
    _Bool _deviceIsDocked;
    _Bool _deviceIsLocked;
    _Bool _didPresentNotificationForCurrentItem;
    int _lockStateNotifyToken;
    _Bool _lockStateNotifyTokenIsValid;
    void *_mediaRemoteCommandObserver;
    NSObject<OS_dispatch_source> *_pauseTimeoutTimerSource;
    RadioStation *_playbackNotificationStation;
    _Bool _playbackIsPaused;
    NSDate *_playbackTimeoutBeginDate;
    double _playbackTimeoutDuration;
    RUPlaybackTimeoutInfoController *_playbackTimeoutInfoController;
    MPUserNotification *_playbackTimeoutNotification;
    _Bool _playbackTimeoutNotificationDidExpire;
    NSObject<OS_dispatch_source> *_playbackTimeoutNotificationExpirationTimerSource;
    NSObject<OS_dispatch_source> *_presentPlaybackTimeoutTimerSource;
    _Bool _wasUsingBackgroundNetwork;
    RURadioAVPlayer *_player;
    RadioStation *_currentStation;
    MPUReportingController *_reportingController;
}

@property(retain, nonatomic) MPUReportingController *reportingController; // @synthesize reportingController=_reportingController;
@property(retain, nonatomic) RadioStation *currentStation; // @synthesize currentStation=_currentStation;
@property(readonly, nonatomic) RURadioAVPlayer *player; // @synthesize player=_player;
- (void).cxx_destruct;
- (void)_updatePlaybackTimerForDeviceStateChange;
- (void)_schedulePlaybackTimeoutNotificationExpirationTimerIfNeeded;
- (void)_resetPlaybackTimeoutInformation;
- (void)_receivedUserNotificationResponseForUserNotification:(struct __CFUserNotification *)arg1 withResponseFlags:(unsigned long long)arg2;
- (void)_presentPlaybackTimeoutNotificationForCurrentItemIfNeeded;
- (_Bool)_isRadioRelevantItem:(id)arg1;
- (_Bool)_isPauseTimeoutActive;
- (void)_dismissExpiredPlaybackTimeoutNotificationForced:(_Bool)arg1;
- (void)_cancelPresentPlaybackTimeoutTimer;
- (void)_cancelPlaybackTimeoutNotificationExpirationTimer;
- (void)_cancelPlaybackTimeoutNotification;
- (void)_cancelPauseTimeoutTimer;
- (void)_radioModelDidChangeNotification:(id)arg1;
- (void)_playbackStateDidChangeNotification:(id)arg1;
- (void)_playbackContentsDidChangeNotification:(id)arg1;
- (void)_itemWillChangeNotification:(id)arg1;
- (void)_itemIsLikedDidChangeNotification:(id)arg1;
- (void)_itemIsInWishListDidChangeNotification:(id)arg1;
- (void)_itemIsBannedDidChangeNotification:(id)arg1;
- (void)_itemDurationDidBecomeAvailableNotification:(id)arg1;
- (void)_fullMuteDidChangeNotification:(id)arg1;
- (void)_effectiveVolumeDidChangeNotification:(id)arg1;
- (void)_applicationWillEnterForegroundNotification:(id)arg1;
- (void)_setupPlayerWithRadioPlaybackContext:(id)arg1;
- (void)setupPlaybackQueueWithPlaybackContext:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)routingControllerAvailableRoutesDidChange:(id)arg1;
- (void)dealloc;
- (id)initWithPlayer:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface RURadioQueueFeeder : MPQueueFeeder
{
    RURadioAdObserver *_adObserver;
    NSMapTable *_adSlotToAllAdTracks;
    NSMapTable *_adSlotToInsertedAdTracks;
    NSMapTable *_adSlotToRadioTrack;
    _Bool _didReceiveTracklistEnd;
    NSMapTable *_fetchingTracksCompletionHandlersByStation;
    _Bool _hasReceivedStreamTrack;
    long long _maximumGetTracksRetryCount;
    int _playbackMode;
    NSArray *_previousDatabaseTrackPlaybackDescriptorQueue;
    NSMapTable *_radioTrackToAdSlot;
    RadioStation *_station;
    RadioStationSkipController *_stationSkipController;
    NSMapTable *_stationTracklistRetrievalRetryCount;
    NSArray *_tracks;
    NSMutableSet *_visibleAdSlots;
    _Bool _wasUsingBackgroundNetwork;
}

+ (void)_updateIsExplicitContentRestrictedAndPostNotification:(_Bool)arg1 removeTracks:(_Bool)arg2;
+ (id)_tracksWithPromotionalContentFromTracks:(id)arg1;
+ (id)_tracksByRemovingPromotionalContentFromTracks:(id)arg1;
+ (long long)maximumNumberOfTracksToFetch;
+ (void)setUserDefaultExplicitTracksEnabled:(_Bool)arg1;
+ (_Bool)isUserDefaultExplicitTracksEnabled;
+ (_Bool)isProfileExplicitContentRestricted;
+ (_Bool)isExplicitTracksEnabled;
+ (void)_explicitContentAllowedDidChangeNotification:(id)arg1;
@property(copy, nonatomic) NSArray *tracks; // @synthesize tracks=_tracks;
- (void).cxx_destruct;
- (void)_updateWithTracks:(id)arg1 tracklistActionType:(long long)arg2 options:(long long)arg3;
- (void)_updateTracksForChangedTrackPlaybackDescriptorQueue;
- (void)_updateTracksForAdSlot:(id)arg1 radioTrack:(id)arg2;
- (void)_updateForLoadedStoreBag:(id)arg1;
- (id)_tracksByRemovingPlayedTracks:(id)arg1;
- (id)_trackAtIndex:(unsigned long long)arg1;
- (void)_setAdSlot:(id)arg1 forRadioTrack:(id)arg2;
- (_Bool)_reloadWithDataSource:(id)arg1 keepPlayingCurrentItemIfPossible:(_Bool)arg2 startPlayback:(_Bool)arg3;
- (int)_playbackModeForTrack:(id)arg1;
- (void)_performGetTracksOperationForStation:(id)arg1 withNumberOfTracks:(long long)arg2;
- (unsigned long long)_indexOfItem:(id)arg1 inTracks:(id)arg2;
- (unsigned long long)_indexOfItem:(id)arg1;
- (unsigned long long)_indexOfCurrentItem;
- (_Bool)_hasReceivedStreamTrack;
- (void)_fetchNextTrackAdSlotIfNeeded;
- (void)_fetchAdSlotIfNeededForRadioTrack:(id)arg1 inStation:(id)arg2;
- (void)_fetchAdditionalTracksWithBaseIndex:(long long)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
- (_Bool)_endPlaybackIfNecessaryForNetworkType;
- (id)_currentTrackPlaybackDescriptorQueueWithCurrentItem:(id)arg1 shouldIncludePlaybackInformation:(_Bool)arg2 skipDate:(id)arg3;
- (_Bool)_canHavePlaceholderTrack;
- (void)_applyTracksForAdSlot:(id)arg1 radioTrack:(id)arg2 currentPlayingItem:(id)arg3 toTracks:(id)arg4;
- (id)_adSlotForAdTrack:(id)arg1;
@property(readonly, nonatomic) NSArray *tracksForNextPlaybackGroup;
@property(retain, nonatomic) RadioStation *station;
- (id)preparedAdSlotForRadioTrack:(id)arg1;
@property(readonly, copy, nonatomic) NSArray *allPreparedAdSlotRadioTracks;
- (void)_storeBagDidLoadNotification:(id)arg1;
- (void)_radioModelDidChangeNotification:(id)arg1;
- (void)_playerContentsDidChangeNotification:(id)arg1;
- (void)_numberOfAvailableSkipsDidChangeNotification:(id)arg1;
- (void)_networkTypeDidChangeNotification:(id)arg1;
- (void)_itemIsBannedDidChangedNotification:(id)arg1;
- (void)_itemWillChangeNotification:(id)arg1;
- (void)_isExplicitTracksEnabledDidChangeNotification:(id)arg1;
- (void)_cellularNetworkingAllowedDidChangeNotification:(id)arg1;
- (void)_bufferingStateDidChangeNotification:(id)arg1;
- (void)_applicationWillTerminateNotification:(id)arg1;
- (void)_adTrackDidFailToLoadNotification:(id)arg1;
- (void)_adTrackActionWillBeginNotification:(id)arg1;
- (void)_adTrackActionDidFinishNotification:(id)arg1;
- (void)_adSlotAdTracksDidChangeNotification:(id)arg1;
- (_Bool)isRadioQueueFeeder;
- (unsigned long long)initialPlaybackQueueDepthForStartingIndex:(unsigned long long)arg1;
- (CDStruct_8ff95007)skipLimit;
- (void)setAVController:(id)arg1;
- (_Bool)reloadWithDataSource:(id)arg1 keepPlayingCurrentItemIfPossible:(_Bool)arg2;
- (unsigned long long)realRepeatType;
- (_Bool)playerPreparesItemsForPlaybackAsynchronously;
- (int)playbackMode;
- (id)playbackInfoAtIndex:(unsigned long long)arg1;
- (id)localizedPositionInPlaylistString:(id)arg1;
- (id)localizedAttributedPositionInPlaylistStringForItem:(id)arg1 withRegularTextAttributes:(id)arg2 emphasizedTextAttributes:(id)arg3;
- (unsigned long long)itemTypeForIndex:(unsigned long long)arg1;
- (unsigned long long)itemCount;
- (Class)itemClass;
- (_Bool)hasValidItemAtIndex:(unsigned long long)arg1;
- (id)copyRawItemAtIndex:(unsigned long long)arg1;
- (_Bool)canSkipToPreviousItem;
- (_Bool)canSkipItem:(id)arg1;
- (_Bool)canSeek;
- (void)dealloc;
- (id)init;

@end

@interface RURadioStationCollectionViewCell : UICollectionViewCell <MPUStackViewDataSource, MPUTextDrawingCacheInvalidationObserver>
{
    UIView *_imageTintView;
    unsigned long long _stackDistanceIgnoreCount;
    MPUBorderConfiguration *_stackItemBorderConfiguration;
    MPUStackView *_stackView;
    NSMutableDictionary *_textImageViews;
    _Bool _adjustsArtworkImageWhenHighlighted;
    _Bool _displaysAsStack;
    _Bool _nowPlaying;
    UIImage *_artworkImage;
    MPImageCacheRequest *_imageRequest;
    RURadioStationsCollectionViewTemplate *_radioStationsCollectionViewTemplate;
}

@property(retain, nonatomic) RURadioStationsCollectionViewTemplate *radioStationsCollectionViewTemplate; // @synthesize radioStationsCollectionViewTemplate=_radioStationsCollectionViewTemplate;
@property(nonatomic, getter=isNowPlaying) _Bool nowPlaying; // @synthesize nowPlaying=_nowPlaying;
@property(retain, nonatomic) MPImageCacheRequest *imageRequest; // @synthesize imageRequest=_imageRequest;
@property(nonatomic) _Bool displaysAsStack; // @synthesize displaysAsStack=_displaysAsStack;
@property(retain, nonatomic) UIImage *artworkImage; // @synthesize artworkImage=_artworkImage;
@property(nonatomic) _Bool adjustsArtworkImageWhenHighlighted; // @synthesize adjustsArtworkImageWhenHighlighted=_adjustsArtworkImageWhenHighlighted;
- (void).cxx_destruct;
- (void)_updateImageTintView;
- (void)_updateDrawingsForAllTextElementsIncludingTemplateTextElement:(_Bool)arg1;
- (void)_updateDrawingForTextElementNamed:(id)arg1;
- (void)_setText:(id)arg1 forElementNamed:(id)arg2;
- (id)_textForElementNamed:(id)arg1;
- (void)updateStackForChangedDistanceFromVanishingPoint;
- (void)updateLayoutAndStackAttributesFromTemplateWithVanishingPointX:(double)arg1;
- (void)performInsertionAnimationWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)performCompressionAnimationWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)endIgnoringDistanceUpdatesForStack;
- (void)beginIgnoringDistanceUpdatesForStack;
@property(copy, nonatomic) NSString *title;
@property(copy, nonatomic) NSString *subtitle;
@property(nonatomic) __weak UIView *stackPerspectiveTargetView;
- (void)textDrawingCacheWasInvalidated:(id)arg1;
- (void)stackView:(id)arg1 didCreateItem:(id)arg2;
- (void)stackView:(id)arg1 applyAttributesToItem:(id)arg2 atIndex:(long long)arg3;
- (long long)numberOfItemsInStackView:(id)arg1;
- (void)setSelected:(_Bool)arg1;
- (void)setHighlighted:(_Bool)arg1;
- (id)preferredLayoutAttributesFittingAttributes:(id)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)setCenter:(struct CGPoint)arg1;
- (void)setBounds:(struct CGRect)arg1;
- (void)layoutSubviews;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface RURadioStationCollectionViewCellTextImageView : UIImageView
{
    NSString *_text;
    MPUTextDrawing *_textDrawing;
    RURadioStationsCollectionViewTemplateTextElement *_templateTextElement;
}

@property(retain, nonatomic) RURadioStationsCollectionViewTemplateTextElement *templateTextElement; // @synthesize templateTextElement=_templateTextElement;
@property(retain, nonatomic) MPUTextDrawing *textDrawing; // @synthesize textDrawing=_textDrawing;
@property(copy, nonatomic) NSString *text; // @synthesize text=_text;
- (void).cxx_destruct;

@end

@interface RURadioStationPreparationContext : NSObject
{
    RadioGetTracksResponse *_getTracksResponse;
    NSMapTable *_preparedAdSlotByRadioTrack;
    RadioStation *_station;
}

@property(readonly, nonatomic) RadioStation *station; // @synthesize station=_station;
- (void).cxx_destruct;
- (void)addPreparedAdSlot:(id)arg1 forRadioTrack:(id)arg2;
- (id)preparedAdSlotForRadioTrack:(id)arg1;
@property(readonly, copy, nonatomic) NSArray *tracks;
@property(readonly, nonatomic) NSDate *skipDate;
@property(readonly, nonatomic) _Bool shouldIncrementSkipCount;
@property(readonly, copy, nonatomic) NSArray *allPreparedAdSlotRadioTracks;
- (id)initWithGetTracksResponse:(id)arg1 station:(id)arg2;

@end

@interface RURadioStationsCollectionViewTemplateTextElement : NSObject
{
    UIFont *_emphasizedFont;
    UIFont *_regularFont;
    long long _numberOfLines;
    double _scaledFirstBaselineOffset;
    _Bool _wantsAdditionalLineForExtraLargeContentSizes;
    _Bool _wantsEmphasizedStationName;
    NSString *_fontTextStyle;
    double _defaultFirstBaselineOffset;
    long long _defaultNumberOfLines;
    MPUTextDrawingCache *_textDrawingCache;
    MPUTextDrawingCache *_nowPlayingTextDrawingCache;
}

@property(readonly, nonatomic) MPUTextDrawingCache *nowPlayingTextDrawingCache; // @synthesize nowPlayingTextDrawingCache=_nowPlayingTextDrawingCache;
@property(readonly, nonatomic) MPUTextDrawingCache *textDrawingCache; // @synthesize textDrawingCache=_textDrawingCache;
@property(readonly, nonatomic) _Bool wantsEmphasizedStationName; // @synthesize wantsEmphasizedStationName=_wantsEmphasizedStationName;
@property(readonly, nonatomic) _Bool wantsAdditionalLineForExtraLargeContentSizes; // @synthesize wantsAdditionalLineForExtraLargeContentSizes=_wantsAdditionalLineForExtraLargeContentSizes;
@property(readonly, nonatomic) long long defaultNumberOfLines; // @synthesize defaultNumberOfLines=_defaultNumberOfLines;
@property(readonly, nonatomic) double defaultFirstBaselineOffset; // @synthesize defaultFirstBaselineOffset=_defaultFirstBaselineOffset;
@property(readonly, nonatomic) NSString *fontTextStyle; // @synthesize fontTextStyle=_fontTextStyle;
- (void).cxx_destruct;
- (void)_updateTextAttributesTextDrawingCache:(id)arg1;
- (id)_textAttributesByReplacingFontInTextAttributes:(id)arg1 withFont:(id)arg2;
- (id)_newTextDrawingCacheWithStationNameEmphasizer:(_Bool)arg1;
- (id)_fontWithEmphasis:(_Bool)arg1;
- (void)updateForPreferredContentSizeChange;
@property(readonly, nonatomic) UIFont *tallestFont;
@property(readonly, nonatomic) double scaledFirstBaselineOffset;
@property(readonly, nonatomic) long long numberOfLines;
- (id)initWithFontTextStyle:(id)arg1 defaultFirstBaselineOffset:(double)arg2 defaultNumberOfLines:(long long)arg3 wantsAdditionalLineForExtraLargeContentSizes:(_Bool)arg4 wantsEmphasizedStationName:(_Bool)arg5;

@end

@interface RURadioStreamPing : NSObject
{
    double _timestamp;
    long long _type;
    NSData *_value;
}

@property(readonly, copy, nonatomic) NSData *value; // @synthesize value=_value;
@property(readonly, nonatomic) long long type; // @synthesize type=_type;
@property(readonly, nonatomic) double timestamp; // @synthesize timestamp=_timestamp;
- (void).cxx_destruct;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)description;
- (id)initWithType:(long long)arg1 value:(id)arg2 timestamp:(double)arg3;

@end

@interface RURadioStreamTrackAVItem : RURadioAVItem <AVAssetResourceLoaderDelegate>
{
    _MPRadioStreamMetadata *_adamIDMetadata;
    long long _albumStoreID;
    NSArray *_buyOffers;
    _MPRadioStreamMetadata *_effectiveMetadata;
    NSData *_previousAdamIDBlob;
    _MPRadioStreamMetadata *_radioStreamTrackMetadata;
    long long _storeID;
    _MPRadioStreamMetadata *_timedMetadata;
}

- (void).cxx_destruct;
- (void)_updateEffectiveMetadataAndPostNotifications:(_Bool)arg1;
- (void)_reloadMetadataAndPostNotificationsIfNeeded:(_Bool)arg1;
- (float)_maximumBitRateForNetworkType:(long long)arg1;
- (void)_getCurrentTimedMetadata:(id *)arg1 pings:(id *)arg2 adamIDBlob:(id *)arg3;
- (id)_createMetadataForRadioStreamTrack;
- (void)_networkTypeDidChangeNotification:(id)arg1;
- (_Bool)resourceLoader:(id)arg1 shouldWaitForLoadingOfRequestedResource:(id)arg2;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)streamTrack;
- (id)effectiveArtworkCollection;
- (long long)albumBuyButtonType;
- (id)albumBuyButtonText;
- (long long)storeID;
- (_Bool)supportsRadioTrackActions;
- (void)setPlayerItem:(id)arg1;
- (id)mainTitle;
- (void)loadAssetAndPlayerItem;
- (_Bool)isExplicitTrack;
- (_Bool)isAlwaysLive;
- (id)buyOffers;
- (id)artist;
- (long long)albumStoreID;
- (id)album;
- (void)dealloc;
- (id)initWithStreamTrack:(id)arg1;
- (id)artworkCatalogForPlaybackTime:(double)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface RURadioTheme : MPUTheme
{
}

+ (id)miniPlayerEmptyStationPlaceholderImage;

@end

@interface RURadioTrackAVItem : RURadioAVItem
{
    NSString *_assetFlavor;
}

- (void).cxx_destruct;
- (id)_sinfsByRemovingEmptyPinfsFromSinfs:(id)arg1;
- (void)_sendLikeOrBanRequestWithStatus:(int)arg1;
- (void)_saveDownloadKeyCookie:(id)arg1 forURL:(id)arg2;
- (id)_bestRadioTrackAssetWithAvailableAssets:(id)arg1;
- (id)assetFlavor;
- (void)setIsLiked:(_Bool)arg1;
- (void)setIsBanned:(_Bool)arg1;
- (_Bool)supportsRadioTrackActions;
- (void)loadAssetAndPlayerItem;

@end

@interface RURadioTrackPreviewAVItem : RURadioAVItem
{
}

- (void)loadAssetAndPlayerItem;

@end

@interface RURadioViewController : MPUDataSourceViewController <MPUMiniPlayerParticipant, MPUTextDrawingCacheInvalidationObserver, RUEditStationsViewControllerDelegate, RUCreateStationViewControllerDelegate, RUHistoryViewControllerDelegate, RURadioCollectionViewDelegate, RUSearchViewControllerDelegate, RUSignInViewControllerDelegate, RUStationActionsViewControllerDelegate, RUStationTreeViewControllerDelegate, RUTermsViewControllerDelegate, RUWelcomeViewControllerDelegate, UIAlertViewDelegate, UICollectionViewDataSource, UICollectionViewDelegate>
{
    NSMutableArray *_authenticationResponseHandlers;
    NSMapTable *_cachedStationArtworkCollections;
    CDUnknownBlockType _deferredDeselectCompletionHandler;
    long long _deselectDeferralCount;
    NSMapTable *_dispatchSourceImpressionTimersByStation;
    MPUTextButton *_editButton;
    NSArray *_featuredStations;
    RURadioCollectionView *_featuredStationsCollectionView;
    UILabel *_featuredStationsLabel;
    UIAlertView *_freeloaderAlertView;
    _Bool _hasEverReceivedWillAppear;
    _Bool _hasShownFeaturedSlideIn;
    NSObject<OS_dispatch_source> *_heartbeatInvalidTimerSource;
    double _highlightedItemTimestamp;
    NSObject<OS_dispatch_group> *_initialArtworkLoadGroup;
    _Bool _isAllowedToPreHeatTextDrawingCaches;
    _Bool _isFeaturedStationSlideInProgress;
    _Bool _isVisible;
    NSArray *_myStations;
    RURadioCollectionView *_myStationsCollectionView;
    double _myStationsCollectionViewVerticalOffset;
    UILabel *_myStationsLabel;
    MPUTextButton *_newButton;
    NSMutableArray *_optInCompletionHandlers;
    RUPlaceholderView *_placeholderView;
    RadioStation *_prospectiveStation;
    UIScrollView *_scrollView;
    UISearchDisplayController *_searchDisplayController;
    RUSearchViewController *_searchResultsViewController;
    MPUTextButton *_seeAllButton;
    _Bool _shouldScrollSearchBar;
    _Bool _shouldShowSeeAllButton;
    RUSignInViewController *_signInViewController;
    UIView *_snapshotView;
    MPUBorderDrawingCache *_stackItemBorderDrawingCache;
    RUTermsViewController *_termsViewController;
    RUWelcomeViewController *_welcomeViewController;
    RUMiniPlayerCoordinator *_miniPlayerCoordinator;
    RURadioPlaybackCoordinator *_playbackCoordinator;
    id <RURadioViewControllerDelegate> _delegate;
}

+ (id)viewControllerWithRestorationIdentifierPath:(id)arg1 coder:(id)arg2;
+ (_Bool)_shouldForwardViewWillTransitionToSize;
@property(nonatomic) __weak id <RURadioViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) RURadioPlaybackCoordinator *playbackCoordinator; // @synthesize playbackCoordinator=_playbackCoordinator;
@property(retain, nonatomic) RUMiniPlayerCoordinator *miniPlayerCoordinator; // @synthesize miniPlayerCoordinator=_miniPlayerCoordinator;
- (void).cxx_destruct;
- (id)_visibleFeaturedStations;
- (void)_updateVisibleCellsNowPlayingStates;
- (void)_updateViewForNetworkType:(long long)arg1;
- (void)_updateViewForHorizontalSizeClassChange;
- (void)_updateSearchBarFrameForced:(_Bool)arg1;
- (void)_updateScrollViewContentSize;
- (void)_updateZOrderingForCollectionView:(id)arg1;
- (void)_updateScrollViewHiddenState;
- (void)_updateForChangedStoreBag:(id)arg1;
- (void)_updateBarButtonItems;
- (void)_synchronizeWithService;
- (id)_subscriptionSummaryForStation:(id)arg1;
- (void)_startHeartbeatInvalidTimer;
- (struct UIOffset)_stationsCollectionViewInsetToAccomodateStackItemsWithAttributes:(CDStruct_22171f69)arg1;
- (void)_showWelcomeViewControllerIfNeeded;
- (void)_setIsVisible:(_Bool)arg1;
- (id)_searchDisplayController;
- (struct CGRect)_searchBarSearchingFrame;
- (struct UIEdgeInsets)_searchBarContentInset;
- (void)_scrollToAddedStationWithContext:(id)arg1 stationDidExistBeforeAdding:(_Bool)arg2;
- (struct CGSize)_rootViewSizeForCollectionView:(id)arg1;
- (void)_reloadSeeAllButtonAnimated:(_Bool)arg1;
- (void)_reloadImpressionTimersForVisibleStations;
- (void)_refreshFeaturedStations;
- (void)_preHeatTextDrawingCaches;
- (void)_preHeatTextDrawingCacheForSubscriptionSummariesOfMyStations;
- (void)_preHeatTextDrawingCacheForNamesOfMyStations;
- (void)_preHeatTextDrawingCacheForNamesOfFeaturedStations;
- (id)_placeholderStationArtworkImage;
- (void)_layoutScrollViews;
- (void)_layoutRadioView;
- (void)_layoutCell:(id)arg1;
- (_Bool)_isStationNowPlaying:(id)arg1;
- (_Bool)_isNoStack;
- (_Bool)_isNetworkTypeAllowed:(long long)arg1;
- (void)_displayServiceUnavailable;
- (id)_createBackdropBackgroundView;
- (void)_createPlaceholderViewIfNeeded;
- (void)_completeStationAdditionTransactionWithContext:(id)arg1 stationDidExistBeforeAdding:(_Bool)arg2;
- (void)_cancelHeartbeatInvalidTimer;
- (void)_authenticateForActiveAccountWithResponseHandler:(CDUnknownBlockType)arg1;
- (void)_attemptToPlayStation:(id)arg1 withPrefixItem:(id)arg2 keepPlayingCurrentItemIfPossible:(_Bool)arg3;
- (void)_addStationWithDictionary:(id)arg1 fromViewController:(id)arg2;
- (id)_addStationTileImage;
- (void)_storeBagDidLoadNotification:(id)arg1;
- (void)_statusBarHeightChangedNotification:(id)arg1;
- (void)_radioRequestDidFinishNotification:(id)arg1;
- (void)_playbackCoordinatorStationDidChangeNotification:(id)arg1;
- (void)_networkTypeDidChangeNotification:(id)arg1;
- (void)_heartbeatDidChangeNotification:(id)arg1;
- (void)_contentSizeCategoryDidChangeNotification:(id)arg1;
- (void)_cellularNetworkingAllowedDidChangeNotification:(id)arg1;
- (void)_applicationWillEnterForegroundNotification:(id)arg1;
- (void)_applicationDidEnterBackgroundNotification:(id)arg1;
- (void)_applicationDidBecomeActiveNotification:(id)arg1;
- (void)_seeAllButtonAction:(id)arg1;
- (void)_newAction:(id)arg1;
- (void)_historyAction:(id)arg1;
- (void)_editAction:(id)arg1;
- (void)_doneAction:(id)arg1;
- (Class)_nowPlayingViewControllerClass;
- (void)scrollStationToVisible:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
- (void)completeAdditionOfStationWithContext:(id)arg1 animated:(_Bool)arg2;
- (void)prepareToAddStation;
- (void)attemptOptInWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)addStationWithDictionary:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)scrollViewWillEndDragging:(id)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (void)scrollViewDidScroll:(id)arg1;
- (id)_sortCollectionCells:(id)arg1 byDistanceFromCenter:(struct CGPoint)arg2;
- (void)collectionView:(id)arg1 willDisplayCell:(id)arg2 forItemAtIndexPath:(id)arg3;
- (void)collectionView:(id)arg1 didUnhighlightItemAtIndexPath:(id)arg2;
- (_Bool)collectionView:(id)arg1 shouldHighlightItemAtIndexPath:(id)arg2;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (void)collectionView:(id)arg1 didHighlightItemAtIndexPath:(id)arg2;
- (void)collectionView:(id)arg1 didEndDisplayingCell:(id)arg2 forItemAtIndexPath:(id)arg3;
- (long long)numberOfSectionsInCollectionView:(id)arg1;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (void)alertView:(id)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)welcomeViewController:(id)arg1 willDisplayFailureAlert:(id)arg2;
- (void)welcomeViewControllerDidReceiveServiceUnavailable:(id)arg1;
- (void)welcomeViewControllerDidOptIn:(id)arg1;
- (void)termsViewController:(id)arg1 didAcceptTerms:(_Bool)arg2;
- (void)stationTreeViewController:(id)arg1 didSelectStationTreeNode:(id)arg2;
- (void)signInViewController:(id)arg1 didCompleteWithAuthenticateResponse:(id)arg2;
- (void)searchViewControllerWillEndSearching:(id)arg1;
- (void)searchViewControllerWillBeginSearching:(id)arg1;
- (void)searchViewController:(id)arg1 didSelectStation:(id)arg2;
- (void)searchViewControllerDidEndSearching:(id)arg1;
- (void)searchViewControllerDidBeginSearching:(id)arg1;
- (id)metricsPageTypeForSearchViewController:(id)arg1;
- (id)metricsPageDescriptionForSearchViewController:(id)arg1;
- (void)historyViewControllerDidFinish:(id)arg1;
- (void)editStationsViewControllerDidFinish:(id)arg1;
- (void)createStationViewControllerDidFinish:(id)arg1;
- (void)createStationViewController:(id)arg1 didSelectStation:(id)arg2;
- (void)radioCollectionViewDidChangeContentSize:(id)arg1;
- (void)textDrawingCacheWasInvalidated:(id)arg1;
- (id)MPU_prospectivePlaybackInformation;
- (_Bool)MPU_beginPlaybackForVisibleContent;
- (void)reloadData;
- (void)traitCollectionDidChange:(id)arg1;
- (id)contentScrollView;
- (_Bool)MPH_supportsCoverFlow;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)viewDidLayoutSubviews;
- (void)presentViewController:(id)arg1 animated:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)encodeRestorableStateWithCoder:(id)arg1;
- (void)dismissViewControllerAnimated:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)decodeRestorableStateWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithDataSource:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface RUReportIssueViewController : UIViewController <UIPickerViewDataSource, UIPickerViewDelegate>
{
    RadioTrack *_currentTrack;
    _Bool _isLowBitrate;
    UIPickerView *_issuePicker;
    NSArray *_issueTypes;
    UITextView *_reportIssueTextField;
    NSArray *_playbackQueue;
    RadioStation *_station;
}

- (void).cxx_destruct;
- (void)_dismissPopoverOrSheet;
- (id)_descriptionForIssueType:(long long)arg1;
@property(readonly, nonatomic) NSString *issueText;
- (void)_reportIssueDoneAction:(id)arg1;
- (void)_reportIssueCancelAction:(id)arg1;
- (id)pickerView:(id)arg1 titleForRow:(long long)arg2 forComponent:(long long)arg3;
- (long long)pickerView:(id)arg1 numberOfRowsInComponent:(long long)arg2;
- (long long)numberOfComponentsInPickerView:(id)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)dealloc;
- (id)initWithStation:(id)arg1 currentItem:(id)arg2 playbackQueue:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface RUSearchDataSource : NSObject
{
    RadioSearchRequest *_activeRequest;
    double _activeRequestTimeInterval;
    id <RUSearchDataSourceDelegate> _delegate;
    double _minimumSearchTimeInterval;
    RadioSearchRequest *_queuedRequest;
}

@property(nonatomic) __weak id <RUSearchDataSourceDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)_updateResultForQueuedSearchRequest;
- (void)updateResultWithSearchRequest:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface RUSearchResult : NSObject
{
    SSMetricsConfiguration *_metricsConfiguration;
    SSMetricsPageEvent *_metricsPageEvent;
    NSArray *_resultCategories;
    NSString *_searchTerm;
}

@property(copy, nonatomic) NSString *searchTerm; // @synthesize searchTerm=_searchTerm;
@property(copy, nonatomic) NSArray *resultCategories; // @synthesize resultCategories=_resultCategories;
@property(retain, nonatomic) SSMetricsPageEvent *metricsPageEvent; // @synthesize metricsPageEvent=_metricsPageEvent;
@property(retain, nonatomic) SSMetricsConfiguration *metricsConfiguration; // @synthesize metricsConfiguration=_metricsConfiguration;
- (void).cxx_destruct;

@end

@interface RUSearchStationTableViewCell : RUTableViewCell
{
    SKUICircleProgressIndicator *_activityIndicator;
    UIImageView *_imageView;
    UILabel *_subtitleLabel;
    UILabel *_titleLabel;
    _Bool _showActivityIndicator;
    MPUEmphasizedText *_stationDescriptionEmphasizedText;
    MPUEmphasizedText *_stationNameEmphasizedText;
}

+ (id)_titleLabelFont;
+ (id)_textAttributesWithFont:(id)arg1 textColor:(id)arg2;
+ (id)_subtitleLabelFontForTraitCollection:(id)arg1 withEmphasis:(_Bool)arg2;
+ (id)_regularTitleLabelAttributesForTraitCollection:(id)arg1;
+ (id)_regularTextColor;
+ (id)_regularSubtitleLabelAttributesForTraitCollection:(id)arg1;
+ (id)_emphasizedTitleLabelAttributesForTraitCollection:(id)arg1;
+ (id)_emphasizedTextColor;
+ (id)_emphasizedSubtitleLabelAttributesForTraitCollection:(id)arg1;
+ (double)defaultHeightForTraitCollection:(id)arg1;
+ (struct CGSize)artworkSize;
@property(nonatomic) _Bool showActivityIndicator; // @synthesize showActivityIndicator=_showActivityIndicator;
@property(copy, nonatomic) MPUEmphasizedText *stationNameEmphasizedText; // @synthesize stationNameEmphasizedText=_stationNameEmphasizedText;
@property(copy, nonatomic) MPUEmphasizedText *stationDescriptionEmphasizedText; // @synthesize stationDescriptionEmphasizedText=_stationDescriptionEmphasizedText;
- (void).cxx_destruct;
- (id)imageView;
- (id)stationImage;
@property(nonatomic) _Bool showsArtwork;
- (void)layoutSubviews;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface RUSearchViewController : UIViewController <RUSearchDataSourceDelegate, UISearchBarDelegate, UISearchDisplayDelegate, UITableViewDataSource, UITableViewDelegate>
{
    SKUICircleProgressIndicator *_activityIndicatorView;
    RadioSearchStationResult *_addingStationResult;
    RUSearchDataSource *_dataSource;
    SSMetricsPageEvent *_lastPageEvent;
    NSError *_lastSearchError;
    UILabel *_loadingLabel;
    struct CGRect _keyboardFrame;
    RUMetricsController *_metricsController;
    UILabel *_noResultsLabel;
    NSMutableArray *_queuedMetricsOperations;
    NSMutableArray *_resultCategories;
    NSString *_searchTerm;
    long long _seeingMoreCategoryType;
    _Bool _displaysCoreSeedName;
    _Bool _excludeFeaturedStations;
    _Bool _showsAddingIndicator;
    id <RUSearchViewControllerDelegate> _delegate;
    UITableView *_tableView;
    UIView *_tableViewBackgroundView;
}

@property(retain, nonatomic) UIView *tableViewBackgroundView; // @synthesize tableViewBackgroundView=_tableViewBackgroundView;
@property(readonly, nonatomic) UITableView *tableView; // @synthesize tableView=_tableView;
@property(nonatomic) _Bool showsAddingIndicator; // @synthesize showsAddingIndicator=_showsAddingIndicator;
@property(nonatomic) _Bool excludeFeaturedStations; // @synthesize excludeFeaturedStations=_excludeFeaturedStations;
@property(nonatomic) _Bool displaysCoreSeedName; // @synthesize displaysCoreSeedName=_displaysCoreSeedName;
@property(nonatomic) __weak id <RUSearchViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)_updateVisibleHeadersState;
- (void)_updateViewForHorizontalSizeClassChange;
- (id)_statusLabelFont;
- (void)_setShowingLoading:(_Bool)arg1;
- (id)_sectionHeaderTitleFontWithEmphasis:(_Bool)arg1;
- (void)_reloadForSearchTerm:(id)arg1 canUpdateDataSourceResults:(_Bool)arg2;
- (id)_parentPageType;
- (id)_parentPageDescription;
- (void)_layoutSearchSubviews;
- (id)_impressionsWithStationDictionaries:(id)arg1 fieldsMap:(id)arg2;
- (id)_firstValueForKeyInImpressionsMap:(id)arg1 withStationDictionary:(id)arg2;
- (id)_currentVisibleStationDictionaries;
- (id)_createPageEventForCurrentState;
- (void)_configureSectionHeader:(id)arg1 forResultCategory:(id)arg2;
- (void)_addMetricsControllerOperationBlock:(CDUnknownBlockType)arg1;
- (void)_keyboardWillChangeFrameNotification:(id)arg1;
- (void)_contentSizeCategoryDidChangeNotification:(id)arg1;
- (void)_applicationWillEnterForegroundNotification:(id)arg1;
- (void)_clearButtonAction:(id)arg1;
- (void)updateResultsForSearchTerm:(id)arg1;
- (void)removeAddingIndicator;
- (void)traitCollectionDidChange:(id)arg1;
- (void)tableViewDidFinishReload:(id)arg1;
- (void)tableView:(id)arg1 willDisplayHeaderView:(id)arg2 forSection:(long long)arg3;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (id)tableView:(id)arg1 viewForHeaderInSection:(long long)arg2;
- (id)tableView:(id)arg1 viewForFooterInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForFooterInSection:(long long)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (void)_configureSeeMoreCell:(id)arg1 forResultCategory:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)searchDisplayController:(id)arg1 willUnloadSearchResultsTableView:(id)arg2;
- (void)searchDisplayController:(id)arg1 willShowSearchResultsTableView:(id)arg2;
- (void)searchDisplayController:(id)arg1 willHideSearchResultsTableView:(id)arg2;
- (void)searchDisplayControllerWillEndSearch:(id)arg1;
- (void)searchDisplayControllerWillBeginSearch:(id)arg1;
- (_Bool)searchDisplayController:(id)arg1 shouldReloadTableForSearchString:(id)arg2;
- (void)searchDisplayController:(id)arg1 didLoadSearchResultsTableView:(id)arg2;
- (void)searchDisplayControllerDidEndSearch:(id)arg1;
- (void)searchDisplayControllerDidBeginSearch:(id)arg1;
- (void)searchBarCancelButtonClicked:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (void)searchDataSource:(id)arg1 willStartSearchRequest:(id)arg2;
- (void)searchDataSource:(id)arg1 didFinishUpdatingResult:(id)arg2 forRequest:(id)arg3 withError:(id)arg4;
- (id)contentScrollView;
- (void)viewDidLoad;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface RUSeeMoreTableViewCell : RUTableViewCell
{
    SKUICircleProgressIndicator *_activityIndicator;
    UILabel *_detailLabel;
    long long _seeMoreState;
}

+ (id)_detailLabelFontForSeeMoreState:(long long)arg1;
+ (double)defaultHeightForTraitCollection:(id)arg1;
@property(nonatomic) long long seeMoreState; // @synthesize seeMoreState=_seeMoreState;
- (void).cxx_destruct;
- (void)_updateForChangedState;
- (void)tintColorDidChange;
- (void)layoutSubviews;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface RUSignInViewController : UIViewController <UIGestureRecognizerDelegate, UITextFieldDelegate>
{
    long long _accountChangeIgnoreCount;
    SKUICircleProgressIndicator *_activityIndicatorView;
    UILabel *_appleIDTitleLabel;
    UITextField *_appleIDTextField;
    UIBarButtonItem *_cancelBarButtonItem;
    UIButton *_continueButton;
    UIButton *_createAccountButton;
    UITapGestureRecognizer *_dismissGestureRecognizer;
    MPUShapeView *_entryContentView;
    UIButton *_forgotPasswordButton;
    _Bool _isAuthenticating;
    _Bool _isLoading;
    struct CGRect _keyboardFrame;
    UILabel *_loadingLabel;
    UILabel *_passwordTitleLabel;
    UITextField *_passwordTextField;
    UILabel *_titleLabel;
    id <RUSignInViewControllerDelegate> _delegate;
}

@property(nonatomic) __weak id <RUSignInViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)_updateContinueButtonVisibilityAnimated:(_Bool)arg1;
- (void)_updateAccountRelatedControls;
- (void)_setLoading:(_Bool)arg1;
- (void)_endIgnoringAccountChanges;
- (void)_beginIgnoringAccountChanges;
- (void)_keyboardWillHideNotification:(id)arg1;
- (void)_keyboardWillChangeFrameNotification:(id)arg1;
- (void)_accountStoreDidChangeNotification:(id)arg1;
- (void)_textFieldDidChangeAction:(id)arg1;
- (void)_forgotPasswordAction:(id)arg1;
- (void)_dismissKeyboardAction:(id)arg1;
- (void)_createAccountAction:(id)arg1;
- (void)_continueAction:(id)arg1;
- (void)_cancelAction:(id)arg1;
- (void)resetFakeLoadingState;
- (_Bool)textFieldShouldReturn:(id)arg1;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)viewDidLayoutSubviews;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface RUStationActionTableViewCell : RUTableViewCell
{
    struct UIOffset _imageOffset;
}

+ (id)_textLabelFont;
+ (double)defaultHeightForTraitCollection:(id)arg1;
@property(nonatomic) struct UIOffset imageOffset; // @synthesize imageOffset=_imageOffset;
- (void)layoutSubviews;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface RUStationActionsViewController : UIViewController <RUStationTrackInfoViewDelegate, MCProfileConnectionObserver, SKStoreProductViewControllerDelegate, UITableViewDataSource, UITableViewDelegate>
{
    _Bool _bagShowsExplicitToggle;
    UILabel *_copyrightLabel;
    long long _currentAction;
    _Bool _isProfileExplicitContentRestricted;
    UILabel *_navigationTitleLabel;
    _Bool _needsTrackInfoViewHeightReset;
    UISwitch *_playExplicitTracksSwitch;
    NSArray *_playbackQueue;
    RadioStation *_station;
    NSMutableArray *_stationActionGroups;
    UITableViewCell *_stationTuningCell;
    RUStationTuningView *_stationTuningView;
    UITableView *_tableView;
    RUInnerShadowHeaderFooterView *_topShadowView;
    RUStationTrackInfoView *_trackInfoView;
    _Bool _showsDoneButton;
    MPAVItem *_item;
    id <RUStationActionsViewControllerDelegate> _delegate;
}

@property(nonatomic) _Bool showsDoneButton; // @synthesize showsDoneButton=_showsDoneButton;
@property(nonatomic) __weak id <RUStationActionsViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) MPAVItem *item; // @synthesize item=_item;
@property(readonly, nonatomic) RadioStation *station; // @synthesize station=_station;
- (void).cxx_destruct;
- (void)_updateViewForHorizontalSizeClassChangeAllowingTableReload:(_Bool)arg1;
- (void)_updateTableFooterView;
- (void)_updateIsProfileExplicitContentRestrictedForProfileConnection:(id)arg1;
- (void)_updateForLoadedStoreBag:(id)arg1;
- (void)_updateAvailableActions;
- (long long)_stationActionForIndexPath:(id)arg1;
- (id)_sectionHeaderTitleLabelFont;
- (double)_sectionHeaderHeight;
- (id)_newShadowViewWithFrame:(struct CGRect)arg1;
- (id)_newSectionHeaderWithFrame:(struct CGRect)arg1 title:(id)arg2;
- (void)_layoutTopShadowView;
- (id)_indexPathForStationAction:(long long)arg1;
- (void)_didReceiveRadioAccountDidDeauthenticateNotification:(id)arg1;
- (void)_addDerivedStationUsingArtist:(_Bool)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
- (void)_userDefaultExplicitTracksEnabledDidChangeNotification:(id)arg1;
- (void)_storeBagDidLoadNotification:(id)arg1;
- (void)_radioModelDidChangeNotification:(id)arg1;
- (void)_contentSizeCategoryDidChangeNotification:(id)arg1;
- (void)_avItemStoreIDDidChangeNotification:(id)arg1;
- (void)_showStoreSheetAction:(id)arg1;
- (void)_playExplicitToggleAction:(id)arg1;
- (void)_doneAction:(id)arg1;
- (void)tableViewDidFinishReload:(id)arg1;
- (void)tableView:(id)arg1 willDisplayFooterView:(id)arg2 forSection:(long long)arg3;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (id)tableView:(id)arg1 viewForHeaderInSection:(long long)arg2;
- (id)tableView:(id)arg1 viewForFooterInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForFooterInSection:(long long)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (void)productViewControllerDidFinish:(id)arg1;
- (void)profileConnectionDidReceiveRestrictionChangedNotification:(id)arg1 userInfo:(id)arg2;
- (void)profileConnectionDidReceiveEffectiveSettingsChangedNotification:(id)arg1 userInfo:(id)arg2;
- (void)trackInfoViewDidTapStoreButton:(id)arg1;
- (void)trackInfoViewDidTapArtwork:(id)arg1;
- (void)traitCollectionDidChange:(id)arg1;
- (id)contentScrollView;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLayoutSubviews;
- (void)viewDidLoad;
- (void)loadView;
- (void)dealloc;
- (id)initWithStation:(id)arg1 item:(id)arg2 playbackQueue:(id)arg3;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface RUStationSettingsDeleteTableViewCell : RUTableViewCell
{
    UIButton *_fakeButton;
}

+ (id)_fakeButtonLabelFont;
+ (double)defaultHeightForTraitCollection:(id)arg1;
- (void).cxx_destruct;
- (void)setHighlighted:(_Bool)arg1 animated:(_Bool)arg2;
- (void)layoutSubviews;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface RUStationSettingsLikeBanTableViewCell : RUTableViewCell
{
    UILabel *_albumLabel;
    UILabel *_artistLabel;
    UIImageView *_artworkImageView;
    UILabel *_titleLabel;
    double _albumMinXRatioWithContentWidth;
    double _artistMinXRatioWithContentWidth;
    double _artworkMinX;
    NSString *_album;
    NSString *_artist;
}

+ (id)_textLabelFontWithEmphasis:(_Bool)arg1;
+ (double)defaultHeightForTraitCollection:(id)arg1;
+ (struct CGSize)artworkSize;
@property(copy, nonatomic) NSString *artist; // @synthesize artist=_artist;
@property(copy, nonatomic) NSString *album; // @synthesize album=_album;
@property(nonatomic) double artworkMinX; // @synthesize artworkMinX=_artworkMinX;
@property(nonatomic) double artistMinXRatioWithContentWidth; // @synthesize artistMinXRatioWithContentWidth=_artistMinXRatioWithContentWidth;
@property(nonatomic) double albumMinXRatioWithContentWidth; // @synthesize albumMinXRatioWithContentWidth=_albumMinXRatioWithContentWidth;
- (void).cxx_destruct;
- (void)_updateViewForHorizontalSizeClassChange;
- (void)_updateViewForTraitCollectionChange;
- (void)_updateArtistLabel;
- (void)_updateAlbumLabel;
@property(copy, nonatomic) NSString *title;
@property(retain, nonatomic) UIImage *artworkImage;
- (void)traitCollectionDidChange:(id)arg1;
- (void)layoutSubviews;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface RUStationSettingsViewController : UIViewController <RUAddSeedViewControllerDelegate, UITableViewDataSource, UITableViewDelegate>
{
    UIImage *_addLikeBanImage;
    RUAddSeedViewController *_addSeedViewController;
    _Bool _addingForLike;
    NSArray *_bannedItems;
    RUParallelScrollView *_containerScrollView;
    UIView *_deleteTintView;
    UIAlertView *_deletionAlertView;
    _Bool _isEditing;
    NSArray *_likedItems;
    RUMetricsController *_metricsController;
    NSMutableArray *_orderedSections;
    NSMutableArray *_queuedMetricsOperations;
    long long _sharingRow;
    RadioStation *_station;
    UITableViewCell *_stationNameCell;
    UITextField *_stationNameTextField;
    UITableViewCell *_stationTuningCell;
    RUStationTuningView *_stationTuningView;
    _RUStationSettingsTableView *_tableView;
    long long _tuningRow;
}

- (void).cxx_destruct;
- (void)_updateViewForHorizontalSizeClassChangeAllowingTableReload:(_Bool)arg1;
- (void)_updateStationNameTextFieldFrame;
- (void)_updateEditingStateAnimated:(_Bool)arg1;
- (void)_updateLikesAndBans;
- (id)_titleForSettingsSection:(long long)arg1;
- (double)_nameTextFieldHeight;
- (id)_nameTextFieldFont;
- (long long)_tableViewSectionForSettingsSection:(long long)arg1;
- (long long)_settingsSectionForTableViewSection:(long long)arg1;
- (id)_sectionHeaderTitleLabelFont;
- (double)_sectionHeaderHeight;
- (void)_presentAddSeedController;
- (id)_newPageEvent;
- (id)_newTextField;
- (id)_newShadowViewWithFrame:(struct CGRect)arg1;
- (id)_newSectionHeaderWithFrame:(struct CGRect)arg1 title:(id)arg2;
- (_Bool)_isDeletableRowAtIndexPath:(id)arg1;
- (void)_didSelectLikeBanStation:(id)arg1;
- (long long)_countOfSettingsSections;
- (void)_addMetricsControllerOperationBlock:(CDUnknownBlockType)arg1;
- (id)_addLikeBanImage;
- (void)_radioModelDidChangeNotification:(id)arg1;
- (void)_contentSizeCategoryDidChangeNotification:(id)arg1;
- (void)_applicationWillEnterForegroundNotification:(id)arg1;
- (void)_toggleEditAction:(id)arg1;
- (void)_stationNameTextFieldValueDidEndEditingAction:(id)arg1;
- (void)_stationNameTextFieldEditingDidBeginAction:(id)arg1;
- (void)traitCollectionDidChange:(id)arg1;
- (void)tableView:(id)arg1 willDisplayFooterView:(id)arg2 forSection:(long long)arg3;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (id)tableView:(id)arg1 viewForHeaderInSection:(long long)arg2;
- (id)tableView:(id)arg1 viewForFooterInSection:(long long)arg2;
- (_Bool)tableView:(id)arg1 shouldIndentWhileEditingRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForFooterInSection:(long long)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)tableView:(id)arg1 commitEditingStyle:(long long)arg2 forRowAtIndexPath:(id)arg3;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (_Bool)tableView:(id)arg1 canEditRowAtIndexPath:(id)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)addSeedViewControllerDidCancel:(id)arg1;
- (void)addSeedViewController:(id)arg1 didSelectStation:(id)arg2;
- (id)contentScrollView;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)dismissViewControllerAnimated:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)dealloc;
- (id)initWithStation:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface RUStationShareImageActivityItemProvider : UIActivityItemProvider
{
    RUStationShareInformationProvider *_shareInformationProvider;
}

@property(readonly, nonatomic) RUStationShareInformationProvider *shareInformationProvider; // @synthesize shareInformationProvider=_shareInformationProvider;
- (void).cxx_destruct;
- (id)item;
- (id)initWithShareInformationProvider:(id)arg1;

@end

@interface RUStationShareInformationProvider : NSObject
{
    NSObject<OS_dispatch_queue> *_accessQueue;
    NSMutableDictionary *_shareTypeToLoadCompletionHandlers;
    NSMutableDictionary *_shareTypeToResponse;
    RadioStation *_station;
}

@property(readonly, nonatomic) RadioStation *station; // @synthesize station=_station;
- (void).cxx_destruct;
- (void)_loadStationShareInfoForShareType:(long long)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
- (void)loadShareInformationForShareType:(long long)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
- (id)initWithStation:(id)arg1;

@end

@interface RUStationShareMessageActivityItemProvider : UIActivityItemProvider
{
    NSLock *_lock;
    NSString *_shareMessage;
    NSString *_shareMessageSubject;
    RUStationShareInformationProvider *_shareInformationProvider;
}

@property(readonly, nonatomic) RUStationShareInformationProvider *shareInformationProvider; // @synthesize shareInformationProvider=_shareInformationProvider;
- (void).cxx_destruct;
- (_Bool)_isActivityTypeAllowed:(id)arg1;
- (id)activityViewController:(id)arg1 subjectForActivityType:(id)arg2;
- (id)item;
- (id)initWithShareInformationProvider:(id)arg1;

@end

@interface RUStationShareURLActivityItemProvider : UIActivityItemProvider
{
    RUStationShareInformationProvider *_shareInformationProvider;
}

@property(readonly, nonatomic) RUStationShareInformationProvider *shareInformationProvider; // @synthesize shareInformationProvider=_shareInformationProvider;
- (void).cxx_destruct;
- (id)item;
- (id)initWithShareInformationProvider:(id)arg1;

@end

@interface RUStationTrackInfoView : UIView <RUTrackDownloadViewDelegate>
{
    UILabel *_albumLabel;
    UILabel *_artistLabel;
    UIImageView *_imageView;
    UITapGestureRecognizer *_imageViewTapGestureRecognizer;
    UIButton *_storeButton;
    UILabel *_titleLabel;
    RUTrackDownloadView *_trackDownloadView;
    id <RUStationTrackInfoViewDelegate> _delegate;
    MPAVItem *_avItem;
}

+ (id)_albumLabelFont;
+ (id)_titleLabelFont;
+ (id)_artistLabelFont;
+ (double)defaultHeightForTraitCollection:(id)arg1;
@property(retain, nonatomic, setter=setAVItem:) MPAVItem *avItem; // @synthesize avItem=_avItem;
@property(nonatomic) __weak id <RUStationTrackInfoViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)_unregisterForAVItemNotifications;
- (void)_registerForAVItemNotifications;
- (id)_newTrackDownloadView;
- (void)_avItemTitlesDidChangeNotification:(id)arg1;
- (void)_avItemAlbumStoreIDDidChangeNotification:(id)arg1;
- (void)_avItemArtworkDidChangeNotification:(id)arg1;
@property(nonatomic) __weak UIViewController *trackDownloadPresentingViewController;
@property(nonatomic) long long stationID;
@property(copy, nonatomic) NSString *stationHash;
- (void)_storeButtonTapAction:(id)arg1;
- (void)_imageViewTapAction:(id)arg1;
- (void)trackDownloadViewWillTransition:(id)arg1;
- (void)layoutSubviews;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface RUStationTreeTableViewCell : RUTableViewCell
{
    SKUICircleProgressIndicator *_activityIndicator;
    UIButton *_addButton;
    RUAudioPreviewView *_audioPreviewView;
    UILabel *_nowPlayingTextLabel;
    UIView *_rightAccessoryView;
    UILabel *_titleLabel;
    _Bool _playing;
    _Bool _showsActivityIndicator;
    long long _cellDisplayStyle;
}

+ (id)_titleLabelFontWithEmphasis:(_Bool)arg1;
+ (id)_nowPlayingTextLabelFont;
+ (struct CGSize)_audioPreviewViewSize;
+ (_Bool)_audioPreviewViewShowsFaceWhenNotPlaying;
+ (double)defaultHeightForTraitCollection:(id)arg1 includingNowPlayingText:(_Bool)arg2;
@property(nonatomic) _Bool showsActivityIndicator; // @synthesize showsActivityIndicator=_showsActivityIndicator;
@property(nonatomic, getter=isPlaying) _Bool playing; // @synthesize playing=_playing;
@property(nonatomic) long long cellDisplayStyle; // @synthesize cellDisplayStyle=_cellDisplayStyle;
- (void).cxx_destruct;
- (void)_showChangeToPlaying:(_Bool)arg1 animated:(_Bool)arg2;
- (void)_layoutSubviewsForcingTitleLabelCentered:(_Bool)arg1 alignLabelsHorizontallyForPlaying:(_Bool)arg2;
- (void)_applyAttributesForChangedCellStyleAnimated:(_Bool)arg1;
- (id)_audioPreviewAnimationForShowing:(_Bool)arg1;
- (void)_contentSizeCategoryDidChangeNotification:(id)arg1;
- (double)_textLabelMinXWhenPlaying:(_Bool)arg1;
- (double)_audioPreviewViewMinX;
@property(copy, nonatomic) NSString *title;
- (void)setPlaying:(_Bool)arg1 animated:(_Bool)arg2;
- (void)setNowPlayingText:(id)arg1 animated:(_Bool)arg2;
@property(copy, nonatomic) NSString *nowPlayingText;
@property(readonly, nonatomic) RUAudioPreviewView *audioPreviewView;
@property(readonly, nonatomic) UIButton *addButton;
- (void)traitCollectionDidChange:(id)arg1;
- (void)layoutSubviews;
- (void)dealloc;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface RUStationTreeArtworkTableViewCell : RUStationTreeTableViewCell
{
}

+ (struct CGSize)artworkSize;
+ (struct CGSize)_audioPreviewViewSize;
+ (_Bool)_audioPreviewViewShowsFaceWhenNotPlaying;
- (double)_textLabelMinXWhenPlaying:(_Bool)arg1;
- (double)_audioPreviewViewMinX;

@end

@interface RUStationTreeDataSource : NSObject
{
    long long _nodeType;
    long long _parentNodeID;
}

- (id)_treeNodeByAppendingTreeNode:(id)arg1 toBaseTreeNode:(id)arg2;
- (void)loadChildNodesWithBaseParentNode:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)initWithParentNodeID:(long long)arg1;
- (id)initForFeaturedStations;

@end

@interface RUStationTreeTableHeaderView : UITableViewHeaderFooterView
{
    UILabel *_titleLabel;
}

+ (id)_titleLabelFont;
+ (double)defaultHeightForTraitCollection:(id)arg1;
- (void).cxx_destruct;
@property(copy, nonatomic) NSString *title;
- (void)layoutSubviews;
- (id)initWithReuseIdentifier:(id)arg1;

@end

@interface RUStationTreeViewController : UIViewController <RUAudioPreviewViewDelegate, RUPreviewSessionObserver, UITableViewDataSource, UITableViewDelegate>
{
    SKUICircleProgressIndicator *_activityIndicator;
    RadioStationTreeNode *_addingTreeNode;
    RUParallelScrollView *_containerScrollView;
    struct UIEdgeInsets _containerScrollViewContentInsetAdditions;
    RUStationTreeDataSource *_dataSource;
    _Bool _isLoadingParentTreeNode;
    _Bool _hasLoadedParentTreeNode;
    SSMetricsPageEvent *_lastPageEvent;
    UILabel *_loadingLabel;
    NSMutableArray *_loadingTreeNodes;
    RUMetricsController *_metricsController;
    long long _navigationOperation;
    RadioStationTreeNode *_parentTreeNode;
    RadioStationTreeNode *_previewingTreeNode;
    RUPreviewSession *_previewSession;
    NSMutableArray *_queuedMetricsOperations;
    RUProxyTableView *_tableView;
    _Bool _wasLastNavigationOperationAnimated;
    id <RUStationTreeViewControllerDelegate> _delegate;
}

+ (double)contentWidthForTraitCollection:(id)arg1;
@property(nonatomic) __weak id <RUStationTreeViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)_updateWithParentNode:(id)arg1 metricsPageEvent:(id)arg2 metricsConfiguration:(id)arg3 canReloadTableView:(_Bool)arg4;
- (void)_updateViewForHorizontalSizeClassChange;
- (id)_mediaEventForPreviewingItem:(id)arg1;
- (void)_loadAdditionalChildrenForSectionTreeNode:(id)arg1;
- (void)_layoutLoadingViews;
- (id)_indexPathForChildTreeNode:(id)arg1;
- (void)_endPreviewPlaybackWithOptions:(long long)arg1 withFinalItem:(id)arg2 didFinalItemPlayToCompletion:(_Bool)arg3;
- (id)_currentPreviewTrackDescripton;
- (id)_childTreeNodeAtIndexPath:(id)arg1;
- (void)_applyPreviewingAttributesToCell:(id)arg1 forTreeNode:(id)arg2 animated:(_Bool)arg3;
- (void)_addMetricsControllerOperationBlock:(CDUnknownBlockType)arg1;
- (void)_contentSizeCategoryDidChangeNotification:(id)arg1;
- (void)_applicationWillEnterForegroundNotification:(id)arg1;
- (void)_addButtonAction:(id)arg1;
- (void)removeAddingIndicator;
@property(readonly, nonatomic) UITableView *tableView;
@property(readonly, nonatomic) UIScrollView *scrollView;
- (void)tableView:(id)arg1 willDisplayHeaderView:(id)arg2 forSection:(long long)arg3;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (id)tableView:(id)arg1 viewForHeaderInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)scrollViewDidScroll:(id)arg1;
- (void)previewSession:(id)arg1 didStopWithOptions:(long long)arg2 withFinalItem:(id)arg3 didFinalItemPlayToCompletion:(_Bool)arg4;
- (void)previewSession:(id)arg1 didChangeFromItem:(id)arg2 toItem:(id)arg3;
- (void)audioPreviewViewDidCancel:(id)arg1 forReason:(long long)arg2;
- (void)traitCollectionDidChange:(id)arg1;
- (id)contentScrollView;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)dealloc;
- (id)_initWithDataSource:(id)arg1;
- (id)initWithParentNodeID:(long long)arg1;
- (id)initForFeaturedStations;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface RUStationTuningSlider : UISlider
{
    RadioStation *_station;
}

@property(retain, nonatomic) RadioStation *station; // @synthesize station=_station;
- (void).cxx_destruct;
- (void)_snapToMixType;
- (void)applyMixType;
- (struct CGRect)trackRectForBounds:(struct CGRect)arg1;
- (struct CGRect)thumbRectForBounds:(struct CGRect)arg1 trackRect:(struct CGRect)arg2 value:(float)arg3;
- (void)cancelTrackingWithEvent:(id)arg1;
- (void)endTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface RUStationTuningView : UIView
{
    UITapGestureRecognizer *_tapGestureRecognizer;
    RUStationTuningSlider *_tuningSlider;
    double _tuningSliderMaskDrawnWidth;
    UIImageView *_tuningSliderMaskView;
    UILabel *_tuningType1Label;
    UILabel *_tuningType2Label;
    UILabel *_tuningType3Label;
    RadioStation *_station;
}

+ (id)_tuningTypeLabelFont;
+ (double)defaultHeightForTraitCollection:(id)arg1;
@property(retain, nonatomic) RadioStation *station; // @synthesize station=_station;
- (void).cxx_destruct;
- (id)_maskImageForSliderTrack;
- (void)_contentSizeCategoryDidChangeNotification:(id)arg1;
- (void)_tapRecognizedAction:(id)arg1;
- (void)layoutSubviews;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface RUTableSectionHeaderView : UITableViewHeaderFooterView
{
    _UIBackdropView *_backdropView;
    UILabel *_titleLabel;
    double _backdropTransitionWeighting;
}

@property(nonatomic) double backdropTransitionWeighting; // @synthesize backdropTransitionWeighting=_backdropTransitionWeighting;
- (void).cxx_destruct;
@property(copy, nonatomic) NSAttributedString *attributedTitle;
- (void)setTableViewStyle:(long long)arg1;
- (void)layoutSubviews;
- (id)initWithReuseIdentifier:(id)arg1;

@end

@interface RUTermsViewController : UIViewController
{
    NSString *_terms;
    unsigned long long _currentTermsVersion;
    id <RUTermsViewControllerDelegate> _delegate;
}

@property(nonatomic) __weak id <RUTermsViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) unsigned long long currentTermsVersion; // @synthesize currentTermsVersion=_currentTermsVersion;
- (void).cxx_destruct;
- (void)_didReceiveRadioAccountDidDeauthenticateNotification:(id)arg1;
- (void)_cancelAction:(id)arg1;
- (void)_acceptAction:(id)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)shouldAutorotate;
- (void)loadView;
- (void)dealloc;
- (id)initWithCurrentTermsVersion:(unsigned long long)arg1 terms:(id)arg2;

@end

@interface RUTrackActionSheet : UIActionSheet
{
    _Bool _disableAddToWishList;
    _Bool _disableBan;
    _Bool _disableLike;
}

@property(nonatomic) _Bool disableLike; // @synthesize disableLike=_disableLike;
@property(nonatomic) _Bool disableBan; // @synthesize disableBan=_disableBan;
@property(nonatomic) _Bool disableAddToWishList; // @synthesize disableAddToWishList=_disableAddToWishList;
- (id)initWithDelegate:(id)arg1;

@end

@interface RUTrackActionsModalItem : _UIModalItem <RUTrackActioning>
{
    _RUTrackActionsModalItemContentView *_contentView;
}

+ (struct CGSize)artworkSize;
- (void).cxx_destruct;
- (void)_didReceiveRadioAccountDidDeauthenticateNotification:(id)arg1;
- (void)dismissAnimated:(_Bool)arg1 withSelectedAction:(long long)arg2 atIndex:(long long)arg3;
@property(nonatomic) __weak id <RUTrackActionsDelegate> trackActionsDelegate;
@property(copy, nonatomic) NSString *songText;
@property(nonatomic) long long onActions;
@property(nonatomic) long long enabledActions;
@property(retain, nonatomic) UIImage *artworkImage;
@property(copy, nonatomic) NSString *artistText;
@property(readonly, nonatomic) struct CGSize contentSize;
@property(readonly, nonatomic) long long cancelIndex;
- (long long)actionForButtonIndex:(long long)arg1;
- (id)_contentView;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface RUTrackActionsView : UIView <UITableViewDataSource, UITableViewDelegate, RUTrackActioning>
{
    _RUTrackActionsHeaderView *_headerView;
    UITableView *_tableView;
    _Bool _presentedInPopover;
    long long _enabledActions;
    long long _onActions;
    id <RUTrackActionsDelegate> _trackActionsDelegate;
}

+ (struct CGSize)artworkSize;
@property(nonatomic, getter=isPresentedInPopover) _Bool presentedInPopover; // @synthesize presentedInPopover=_presentedInPopover;
@property(nonatomic) __weak id <RUTrackActionsDelegate> trackActionsDelegate; // @synthesize trackActionsDelegate=_trackActionsDelegate;
@property(nonatomic) long long onActions; // @synthesize onActions=_onActions;
@property(nonatomic) long long enabledActions; // @synthesize enabledActions=_enabledActions;
- (void).cxx_destruct;
- (void)_updateHeaderViewHeight;
- (id)_titleForAction:(long long)arg1;
- (void)_didChangeContentSize;
- (struct UIOffset)_accessoryImageOffsetForAction:(long long)arg1;
- (id)_accessoryImageForAction:(long long)arg1 highlighted:(_Bool)arg2;
- (void)_contentSizeCategoryDidChangeNotification:(id)arg1;
- (void)reloadData;
@property(copy, nonatomic) NSString *songText;
@property(retain, nonatomic) UIImage *artworkImage;
@property(copy, nonatomic) NSString *artistText;
@property(readonly, nonatomic) struct CGSize contentSize;
@property(readonly, nonatomic) long long cancelIndex;
- (long long)actionForButtonIndex:(long long)arg1;
- (void)traitCollectionDidChange:(id)arg1;
- (void)tableViewDidFinishReload:(id)arg1;
- (id)tableView:(id)arg1 willSelectRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)scrollViewDidScroll:(id)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)layoutSubviews;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface RUTrackActionsViewController : UIViewController <RUTrackActionsDelegate, RUTrackActioning>
{
    RUTrackActionsView *_trackActionsView;
    id <RUTrackActionsDelegate> _trackActionsDelegate;
}

+ (struct CGSize)artworkSize;
@property(nonatomic) __weak id <RUTrackActionsDelegate> trackActionsDelegate; // @synthesize trackActionsDelegate=_trackActionsDelegate;
- (void).cxx_destruct;
- (id)_trackActionsView;
- (void)_didReceiveRadioAccountDidDeauthenticateNotification:(id)arg1;
- (id)trackActioningObject:(id)arg1 localizedTitleForAction:(long long)arg2;
- (void)trackActioningObjectDidChangeContentSize:(id)arg1;
- (void)trackActioningObject:(id)arg1 didSelectAction:(long long)arg2 atIndex:(long long)arg3;
@property(copy, nonatomic) NSString *songText;
@property(nonatomic) long long onActions;
@property(nonatomic) long long enabledActions;
@property(retain, nonatomic) UIImage *artworkImage;
@property(copy, nonatomic) NSString *artistText;
@property(readonly, nonatomic) struct CGSize contentSize;
@property(readonly, nonatomic) long long cancelIndex;
- (long long)actionForButtonIndex:(long long)arg1;
- (void)viewDidLoad;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface RUTrackDownloadView : UIView <MPStoreDownloadManagerObserver, SKStoreProductViewControllerDelegate, SKUIItemOfferButtonDelegate>
{
    struct UIEdgeInsets _alignmentRectInsets;
    NSArray *_buyOffers;
    MPUMediaDownloadObserver *_downloadObserver;
    _Bool _isPurchaseAllowed;
    SKUIItemOfferButton *_itemOfferButton;
    MPMediaItem *_mediaItem;
    _Bool _showingConfirmation;
    _Bool _supportsAlbumOnly;
    long long _buyButtonTitleStyle;
    id <RUTrackDownloadViewDelegate> _delegate;
    NSString *_baseOriginator;
    long long _overrideState;
    NSString *_overrideTitleText;
    long long _state;
    NSString *_stationHash;
    long long _stationID;
    UIViewController *_viewControllerForPresenting;
    RadioTrack *_radioTrack;
    MPAVItem *_avItem;
    struct CGSize _overrideSize;
}

@property(retain, nonatomic, setter=setAVItem:) MPAVItem *avItem; // @synthesize avItem=_avItem;
@property(retain, nonatomic) RadioTrack *radioTrack; // @synthesize radioTrack=_radioTrack;
@property(nonatomic) __weak UIViewController *viewControllerForPresenting; // @synthesize viewControllerForPresenting=_viewControllerForPresenting;
@property(nonatomic) _Bool supportsAlbumOnly; // @synthesize supportsAlbumOnly=_supportsAlbumOnly;
@property(nonatomic) long long stationID; // @synthesize stationID=_stationID;
@property(copy, nonatomic) NSString *stationHash; // @synthesize stationHash=_stationHash;
@property(readonly, nonatomic) long long state; // @synthesize state=_state;
@property(copy, nonatomic) NSString *overrideTitleText; // @synthesize overrideTitleText=_overrideTitleText;
@property(nonatomic) long long overrideState; // @synthesize overrideState=_overrideState;
@property(nonatomic) struct CGSize overrideSize; // @synthesize overrideSize=_overrideSize;
@property(copy, nonatomic) NSString *baseOriginator; // @synthesize baseOriginator=_baseOriginator;
@property(nonatomic) id <RUTrackDownloadViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) long long buyButtonTitleStyle; // @synthesize buyButtonTitleStyle=_buyButtonTitleStyle;
- (void).cxx_destruct;
- (void)_updateStateAndInternalViewsIfNeededForDownloads:(id)arg1;
- (void)_updateStateAndInternalViewsAnimated:(_Bool)arg1;
- (void)_updateIsPurchasedAllowedAndUpdateState:(_Bool)arg1;
- (void)_unregisterForRadioTrackNotifications;
- (void)_unregisterForAVItemNotifications;
- (id)_title;
- (void)_sizeToFitAndNotifyDelegate;
- (void)_registerForRadioTrackNotifications;
- (void)_registerForAVItemNotifications;
- (_Bool)_isExplicit;
- (_Bool)_isAlbumOnlyOffer:(id)arg1;
- (id)_effectiveRadioTrack;
- (long long)_downloadStoreID;
- (id)_buyOffers;
- (id)_bestItemOffer;
- (long long)_albumStoreID;
- (void)_radioTrackDidChangeNotification:(id)arg1;
- (void)_radioPurchaseAllowedDidChangeNotification:(id)arg1;
- (void)_isExplicitTracksEnabledDidChangeNotification:(id)arg1;
- (void)_avItemStoreIDDidChangeNotification:(id)arg1;
- (void)_avItemBuyOffersDidChangeNotification:(id)arg1;
- (void)_itemOfferShowConfirmationAction:(id)arg1;
- (void)_itemOfferCancelConfirmationAction:(id)arg1;
- (void)_itemOfferButtonAction:(id)arg1;
- (void)itemOfferButtonWillAnimateTransition:(id)arg1;
- (void)productViewControllerDidFinish:(id)arg1;
- (void)downloadManager:(id)arg1 downloadPurchaseDidFinish:(id)arg2;
- (void)downloadManager:(id)arg1 downloadDidFinish:(id)arg2;
- (void)downloadManager:(id)arg1 didAddDownloads:(id)arg2 removeDownloads:(id)arg3;
@property(nonatomic) struct UIEdgeInsets alignmentRectInsets;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface RUWelcomeCollectionViewCell : UICollectionViewCell <MPUStackViewDataSource>
{
    MPUBorderConfiguration *_stackItemBorderConfiguration;
    MPUStackView *_stackView;
    UIImage *_artworkImage;
    MPUBorderDrawingCache *_stackItemBorderDrawingCache;
    struct CGSize _artworkSize;
}

+ (struct CGSize)artworkSizeForOrientation:(long long)arg1;
@property(retain, nonatomic) MPUBorderDrawingCache *stackItemBorderDrawingCache; // @synthesize stackItemBorderDrawingCache=_stackItemBorderDrawingCache;
@property(nonatomic) struct CGSize artworkSize; // @synthesize artworkSize=_artworkSize;
@property(retain, nonatomic) UIImage *artworkImage; // @synthesize artworkImage=_artworkImage;
- (void).cxx_destruct;
- (void)updateForChangedDistanceFromVanishingPoint;
@property(nonatomic) struct CGPoint vanishingPoint;
@property(retain, nonatomic) UIView *perspectiveTargetView;
- (void)stackView:(id)arg1 didCreateItem:(id)arg2;
- (void)stackView:(id)arg1 applyAttributesToItem:(id)arg2 atIndex:(long long)arg3;
- (long long)numberOfItemsInStackView:(id)arg1;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface RUWelcomeCollectionViewLayout : UICollectionViewFlowLayout
{
    long long _interfaceOrientation;
}

@property(nonatomic) long long interfaceOrientation; // @synthesize interfaceOrientation=_interfaceOrientation;
- (id)layoutAttributesForElementsInRect:(struct CGRect)arg1;

@end

@interface RUWelcomeViewController : UIViewController <RUSignInViewControllerDelegate, RUTermsViewControllerDelegate, UIAlertViewDelegate, UICollectionViewDataSource, UICollectionViewDelegate>
{
    SKUICircleProgressIndicator *_activityIndicatorView;
    long long _applicationState;
    NSDate *_autoRetryMinimumDate;
    CADisplayLink *_displayLink;
    UIAlertView *_failedAlertView;
    _Bool _isOptingIn;
    _Bool _isScrollerStopped;
    _Bool _isVisible;
    double _lastTimestamp;
    UIButton *_learnMoreButton;
    UILabel *_loadingLabel;
    NSMutableArray *_optInCompletionHandlers;
    UICollectionView *_scrollingStackCollectionView;
    UIButton *_signInButton;
    RUSignInViewController *_signInViewController;
    MPUBorderDrawingCache *_stackItemBorderDrawingCache;
    RUTermsViewController *_termsViewController;
    _RUWelcomeTicker *_ticker;
    UILabel *_titleLabel;
    _Bool _displayingLoading;
    id <RUWelcomeViewControllerDelegate> _delegate;
}

@property(nonatomic, getter=isDisplayingLoading) _Bool displayingLoading; // @synthesize displayingLoading=_displayingLoading;
@property(nonatomic) __weak id <RUWelcomeViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)_updateSignInButtonTitle;
- (id)_stackImageNames;
- (void)_scrollWithCurrentTimestemp:(double)arg1;
- (void)_createEndScrollingAnimation;
- (void)_presentSignInViewController;
- (void)_optInWithActiveAccountWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)_layoutForOrientation:(long long)arg1;
- (void)_completeWithStatus:(long long)arg1 didOptIn:(_Bool)arg2 retryInterval:(double)arg3;
- (void)_checkAcceptedTermsWithCompletionHandler:(CDUnknownBlockType)arg1;
- (_Bool)_canAutomaticallyOptIn;
- (void)_attemptOptForReason:(long long)arg1 allowAuthentication:(_Bool)arg2;
- (_Bool)_allowsSignIn;
- (void)_applicationWillResignActiveNotification:(id)arg1;
- (void)_applicationWillEnterForegroundNotification:(id)arg1;
- (void)_applicationDidEnterBackgroundNotification:(id)arg1;
- (void)_applicationDidBecomeActiveNotification:(id)arg1;
- (void)_allowsAccountModificationDidChangeNotification:(id)arg1;
- (void)_accountStoreDidChangeNotification:(id)arg1;
- (void)_signInAction:(id)arg1;
- (void)_learnMoreAction:(id)arg1;
- (void)_displayLinkAction:(id)arg1;
- (void)attemptOptInWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (id)_sortCollectionCells:(id)arg1 byDistanceFromCenter:(struct CGPoint)arg2;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (void)alertView:(id)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)termsViewController:(id)arg1 didAcceptTerms:(_Bool)arg2;
- (void)signInViewController:(id)arg1 didCompleteWithAuthenticateResponse:(id)arg2;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)_updateDisplayLinkStateAnimated:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidLayoutSubviews;
- (void)traitCollectionDidChange:(id)arg1;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface RUWishlistDataSource : NSObject
{
    RadioGetWishListRequest *_wishlistRequest;
    NSArray *_wishlistedTracks;
    id <RUWishlistDataSourceDelegate> _delegate;
}

@property(readonly, nonatomic) NSArray *wishlistedTracks; // @synthesize wishlistedTracks=_wishlistedTracks;
@property(nonatomic) id <RUWishlistDataSourceDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)_notifyDidInvalidate;
- (void)refreshWishlist;
- (void)deleteWishlistedTrack:(id)arg1;
- (void)deleteAllWishlistedTracks;
@property(readonly, nonatomic, getter=isRefreshing) _Bool refreshing;
- (void)dealloc;

@end

@interface RadioArtworkCollection (MPArtworkCatalog)
- (id)artworkCatalog;
@end

@interface _MPRadioStreamMetadata : NSObject
{
    long long _albumBuyButtonType;
    NSString *_albumBuyButtonText;
    NSString *_album;
    NSString *_artist;
    RadioArtworkCollection *_artworkCollection;
    NSNumber *_explicit;
    NSString *_title;
}

@property(copy, nonatomic) NSString *title; // @synthesize title=_title;
@property(retain, nonatomic, getter=isExplicit) NSNumber *explicit; // @synthesize explicit=_explicit;
@property(retain, nonatomic) RadioArtworkCollection *artworkCollection; // @synthesize artworkCollection=_artworkCollection;
@property(copy, nonatomic) NSString *artist; // @synthesize artist=_artist;
@property(copy, nonatomic) NSString *album; // @synthesize album=_album;
@property(copy, nonatomic) NSString *albumBuyButtonText; // @synthesize albumBuyButtonText=_albumBuyButtonText;
@property(nonatomic) long long albumBuyButtonType; // @synthesize albumBuyButtonType=_albumBuyButtonType;
- (void).cxx_destruct;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)description;

@end

@interface _RUAudioPreviewTicker : NSObject
{
    RUAudioPreviewView *_audioPreviewView;
}

@property(nonatomic) __weak RUAudioPreviewView *audioPreviewView; // @synthesize audioPreviewView=_audioPreviewView;
- (void).cxx_destruct;
- (void)displayLinkTickAction:(id)arg1;

@end

@interface _RUStationSettingsTableView : RUProxyTableView
{
}

- (struct CGRect)_rectForTableFooterView;
- (void)layoutSubviews;

@end

@interface _RUStationSettingsTextField : UITextField
{
}

- (struct CGRect)textRectForBounds:(struct CGRect)arg1;
- (struct CGRect)editingRectForBounds:(struct CGRect)arg1;
- (struct CGRect)clearButtonRectForBounds:(struct CGRect)arg1;

@end

@interface _RUStationShareInformationResponse : NSObject
{
    RadioShareInformation *_shareInformation;
    NSError *_error;
}

@property(readonly, nonatomic) NSError *error; // @synthesize error=_error;
@property(readonly, nonatomic) RadioShareInformation *shareInformation; // @synthesize shareInformation=_shareInformation;
- (void).cxx_destruct;
- (id)initWithShareInformation:(id)arg1 error:(id)arg2;

@end

@interface _RUTermsTextView : UITextView
{
}

- (_Bool)canBecomeFirstResponder;

@end

@interface _RUTrackActionsHeaderView : UIView
{
    UILabel *_artistLabel;
    UIImageView *_artworkImageView;
    UILabel *_songLabel;
}

+ (id)_songLabelFont;
+ (id)_artistLabelFont;
+ (double)defaultHeightForTraitCollection:(id)arg1;
- (void).cxx_destruct;
@property(copy, nonatomic) NSString *songText;
@property(retain, nonatomic) UIImage *artworkImage;
@property(copy, nonatomic) NSString *artistText;
- (void)layoutSubviews;

@end

@interface _RUTrackActionsModalItemContentView : _UIModalItemContentView <RUTrackActioning, RUTrackActionsDelegate>
{
    _UIBackdropView *_backdropView;
    RUTrackActionsView *_trackActionsView;
    id <RUTrackActionsDelegate> _trackActionsDelegate;
}

+ (struct CGSize)artworkSize;
@property(nonatomic) __weak id <RUTrackActionsDelegate> trackActionsDelegate; // @synthesize trackActionsDelegate=_trackActionsDelegate;
- (void).cxx_destruct;
- (void)_statusBarHeightChanged:(id)arg1;
- (void)_contentSizeCategoryDidChangeNotification:(id)arg1;
- (void)dismissAnimated:(_Bool)arg1 withSelectedAction:(long long)arg2 atIndex:(long long)arg3;
- (id)trackActioningObject:(id)arg1 localizedTitleForAction:(long long)arg2;
- (void)trackActioningObjectDidChangeContentSize:(id)arg1;
- (void)trackActioningObject:(id)arg1 didSelectAction:(long long)arg2 atIndex:(long long)arg3;
@property(copy, nonatomic) NSString *songText;
@property(nonatomic) long long onActions;
@property(nonatomic) long long enabledActions;
@property(retain, nonatomic) UIImage *artworkImage;
@property(copy, nonatomic) NSString *artistText;
@property(readonly, nonatomic) struct CGSize contentSize;
@property(readonly, nonatomic) long long cancelIndex;
- (long long)actionForButtonIndex:(long long)arg1;
- (void)_layoutViewHierarchy;
- (void)setPresentingViewController:(id)arg1;
- (void)setModalItem:(id)arg1;
- (void)layoutSubviews;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface _RUTrackActionsTableViewCell : RUTableViewCell
{
    UIImageView *_accessoryImageView;
    UILabel *_lastConfiguredTextLabel;
    UIView *_topSeparatorView;
    _Bool _displaysAsDisabled;
    struct UIOffset _accessoryImageOffset;
}

+ (id)_textLabelFont;
+ (double)defaultHeightForTraitCollection:(id)arg1;
@property(nonatomic) _Bool displaysAsDisabled; // @synthesize displaysAsDisabled=_displaysAsDisabled;
@property(nonatomic) struct UIOffset accessoryImageOffset; // @synthesize accessoryImageOffset=_accessoryImageOffset;
- (void).cxx_destruct;
@property(nonatomic) _Bool showsTopSeparator;
@property(retain, nonatomic) UIImage *highlightedAccessoryImage;
@property(retain, nonatomic) UIImage *accessoryImage;
- (id)textLabel;
- (void)layoutSubviews;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface _RUTrackCancelTableViewCell : RUTableViewCell
{
    UILabel *_lastConfiguredTextLabel;
}

+ (id)_textLabelFontForTraitCollection:(id)arg1;
+ (double)defaultHeightForTraitCollection:(id)arg1;
- (void).cxx_destruct;
- (void)_configureTextLabel;
- (void)_contentSizeCategoryDidChangeNotification:(id)arg1;
- (id)textLabel;
- (void)dealloc;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface _RUWelcomeNavigationController : UINavigationController
{
}

- (unsigned long long)supportedInterfaceOrientations;

@end

@interface _RUWelcomeTicker : NSObject
{
    RUWelcomeViewController *_welcomeViewController;
}

@property(nonatomic) __weak RUWelcomeViewController *welcomeViewController; // @synthesize welcomeViewController=_welcomeViewController;
- (void).cxx_destruct;
- (void)_displayLinkAction:(id)arg1;

@end

