//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct CPSDActionKeyedItem;

struct CPSDAdditionalLayerInfo {
    CDUnknownFunctionPointerType *_field1;
    struct CPSDFile *_field2;
    unsigned int _field3;
    struct CPSDAdditionalLayerInfoItem *_field4;
};

struct CPSDAdditionalLayerInfoItem;

struct CPSDChannelBlendingInfo;

struct CPSDChannelLengthInfo;

struct CPSDColorModeData {
    CDUnknownFunctionPointerType *_field1;
    struct CPSDFile *_field2;
    unsigned int _field3;
    char *_field4;
};

struct CPSDFile {
    CDUnknownFunctionPointerType *_field1;
    struct CPSDFile *_field2;
    char *_field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned char _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned short _field9;
    unsigned long long _field10;
    unsigned short _field11;
    unsigned short _field12;
    char *_field13;
    struct CPSDChannelLengthInfo *_field14;
    char **_field15;
    unsigned short _field16;
    void *_field17;
    unsigned char _field18;
    struct CPSDHeader _field19;
    struct CPSDColorModeData _field20;
    struct CPSDImageResources _field21;
    struct CPSDLayerAndMaskInfo _field22;
    unsigned char _field23;
};

struct CPSDGlobalLayerMaskInfo {
    CDUnknownFunctionPointerType *_field1;
    struct CPSDFile *_field2;
    unsigned int _field3;
    unsigned short _field4;
    unsigned short _field5[4];
    unsigned short _field6;
    unsigned char _field7;
    unsigned int _field8;
};

struct CPSDHeader {
    CDUnknownFunctionPointerType *_field1;
    struct CPSDFile *_field2;
    unsigned int _field3;
    unsigned short _field4;
    unsigned char _field5[6];
    unsigned short _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned short _field9;
    unsigned short _field10;
};

struct CPSDImageResourceBlock;

struct CPSDImageResources {
    CDUnknownFunctionPointerType *_field1;
    struct CPSDFile *_field2;
    unsigned int _field3;
    struct CPSDImageResourceBlock *_field4;
};

struct CPSDLayerAndMaskInfo {
    CDUnknownFunctionPointerType *_field1;
    struct CPSDFile *_field2;
    unsigned int _field3;
    struct CPSDLayerInfo _field4;
    struct CPSDGlobalLayerMaskInfo _field5;
    struct CPSDAdditionalLayerInfo _field6;
};

struct CPSDLayerBlendingRanges {
    CDUnknownFunctionPointerType *_field1;
    struct CPSDFile *_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    struct vector<CPSDChannelBlendingInfo, std::__1::allocator<CPSDChannelBlendingInfo>> _field6;
};

struct CPSDLayerChannelGroup;

struct CPSDLayerInfo {
    CDUnknownFunctionPointerType *_field1;
    struct CPSDFile *_field2;
    unsigned int _field3;
    unsigned short _field4;
    struct vector<CPSDLayerRecord, std::__1::allocator<CPSDLayerRecord>> _field5;
    struct vector<CPSDLayerChannelGroup *, std::__1::allocator<CPSDLayerChannelGroup *>> _field6;
};

struct CPSDLayerMaskData {
    CDUnknownFunctionPointerType *_field1;
    struct CPSDFile *_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned char _field8;
    unsigned char _field9;
    unsigned short _field10;
    unsigned int _field11;
    unsigned int _field12;
    unsigned int _field13;
    unsigned int _field14;
    unsigned char _field15;
    unsigned char _field16;
};

struct CPSDLayerRecord {
    CDUnknownFunctionPointerType *_field1;
    struct CPSDFile *_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned short _field7;
    struct vector<CPSDChannelLengthInfo, std::__1::allocator<CPSDChannelLengthInfo>> _field8;
    unsigned int _field9;
    unsigned int _field10;
    unsigned char _field11;
    unsigned char _field12;
    unsigned char _field13;
    unsigned char _field14;
    unsigned int _field15;
    struct CPSDLayerMaskData _field16;
    struct CPSDLayerBlendingRanges _field17;
    char _field18[256];
    struct CPSDAdditionalLayerInfo _field19;
};

struct CPSDObjectEffectsLayerInfo {
    CDUnknownFunctionPointerType *_field1;
    struct CPSDFile *_field2;
    unsigned int _field3;
    unsigned long long _field4;
    char *_field5;
    unsigned int _field6;
    unsigned int _field7;
    struct CPSDAdditionalLayerInfoItem *_field8;
    struct CPSDString _field9;
    char *_field10;
    unsigned int _field11;
    unsigned int _field12;
    unsigned int _field13;
    struct vector<CPSDActionKeyedItem, std::__1::allocator<CPSDActionKeyedItem>> _field14;
    unsigned int _field15;
    unsigned int _field16;
};

struct CPSDString {
    unsigned int _field1;
    unsigned short *_field2;
};

struct FontValue {
    char _field1[128];
    float _field2;
};

struct PSDColorRGBA {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
};

struct PSDGradient {
    double _field1;
    double _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
    double _field6;
    double _field7;
    double _field8;
    int _field9;
    struct PSDColorRGBA _field10;
    struct vector<PSDGradientColorStop, std::__1::allocator<PSDGradientColorStop>> _field11;
    struct vector<PSDGradientOpacityStop, std::__1::allocator<PSDGradientOpacityStop>> _field12;
};

struct PSDGradientColorStop;

struct PSDGradientOpacityStop;

struct _PSDImageInfo {
    unsigned int _field1;
    unsigned int _field2;
    unsigned short _field3;
    unsigned short _field4;
    unsigned short _field5;
    int _field6;
};

struct __CUIThemeGradientRenditionInitializerStruct {
    unsigned int _field1;
    double _field2;
    id _field3;
};

struct _colordef {
    unsigned int _field1;
    unsigned int _field2;
    struct _rgbquad _field3;
};

struct _csibitmap {
    unsigned int _field1;
    union {
        unsigned int _field1;
        struct _csibitmapflags {
            unsigned int :1;
            unsigned int :1;
            unsigned int :30;
        } _field2;
    } _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned char _field5[0];
};

struct _csigradientdatanode {
    unsigned int _field1;
    float _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    double _field8;
    double _field9;
    double _field10;
};

struct _csiheader {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int :4;
    unsigned int :28;
    struct _csimetadata {
        unsigned int _field1;
        unsigned short _field2;
        unsigned short _field3;
        char _field4[128];
    } _field8;
    unsigned int _field9;
    struct _csibitmaplist {
        unsigned int _field1;
        unsigned int _field2[0];
    } _field10;
};

struct _cuieffectdata {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    struct _cuieffectlist {
        unsigned int _field1;
        unsigned int _field2[0];
    } _field5;
};

struct _psdGradientColor {
    double red;
    double green;
    double blue;
    double alpha;
};

struct _renditionkeyfmt {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4[0];
};

struct _renditionkeytoken {
    unsigned short identifier;
    unsigned short value;
};

struct _rgbquad {
    unsigned int :8;
    unsigned int :8;
    unsigned int :8;
    unsigned int :8;
};

struct _slice {
    unsigned int x;
    unsigned int y;
    unsigned int width;
    unsigned int height;
};

struct _themelook {
    long long _field1;
    char *_field2;
};

struct crmFlags {
    unsigned int scalesVertically:1;
    unsigned int scalesHorizontally:1;
    unsigned int reserved:14;
};

struct vector<CPSDActionKeyedItem, std::__1::allocator<CPSDActionKeyedItem>> {
    struct CPSDActionKeyedItem *_field1;
    struct CPSDActionKeyedItem *_field2;
    struct __compressed_pair<CPSDActionKeyedItem *, std::__1::allocator<CPSDActionKeyedItem>> {
        struct CPSDActionKeyedItem *_field1;
    } _field3;
};

struct vector<CPSDChannelBlendingInfo, std::__1::allocator<CPSDChannelBlendingInfo>> {
    struct CPSDChannelBlendingInfo *_field1;
    struct CPSDChannelBlendingInfo *_field2;
    struct __compressed_pair<CPSDChannelBlendingInfo *, std::__1::allocator<CPSDChannelBlendingInfo>> {
        struct CPSDChannelBlendingInfo *_field1;
    } _field3;
};

struct vector<CPSDChannelLengthInfo, std::__1::allocator<CPSDChannelLengthInfo>> {
    struct CPSDChannelLengthInfo *_field1;
    struct CPSDChannelLengthInfo *_field2;
    struct __compressed_pair<CPSDChannelLengthInfo *, std::__1::allocator<CPSDChannelLengthInfo>> {
        struct CPSDChannelLengthInfo *_field1;
    } _field3;
};

struct vector<CPSDLayerChannelGroup *, std::__1::allocator<CPSDLayerChannelGroup *>> {
    struct CPSDLayerChannelGroup **_field1;
    struct CPSDLayerChannelGroup **_field2;
    struct __compressed_pair<CPSDLayerChannelGroup **, std::__1::allocator<CPSDLayerChannelGroup *>> {
        struct CPSDLayerChannelGroup **_field1;
    } _field3;
};

struct vector<CPSDLayerRecord, std::__1::allocator<CPSDLayerRecord>> {
    struct CPSDLayerRecord *_field1;
    struct CPSDLayerRecord *_field2;
    struct __compressed_pair<CPSDLayerRecord *, std::__1::allocator<CPSDLayerRecord>> {
        struct CPSDLayerRecord *_field1;
    } _field3;
};

struct vector<PSDGradientColorStop, std::__1::allocator<PSDGradientColorStop>> {
    struct PSDGradientColorStop *_field1;
    struct PSDGradientColorStop *_field2;
    struct __compressed_pair<PSDGradientColorStop *, std::__1::allocator<PSDGradientColorStop>> {
        struct PSDGradientColorStop *_field1;
    } _field3;
};

struct vector<PSDGradientOpacityStop, std::__1::allocator<PSDGradientOpacityStop>> {
    struct PSDGradientOpacityStop *_field1;
    struct PSDGradientOpacityStop *_field2;
    struct __compressed_pair<PSDGradientOpacityStop *, std::__1::allocator<PSDGradientOpacityStop>> {
        struct PSDGradientOpacityStop *_field1;
    } _field3;
};

#pragma mark Typedef'd Structures

typedef struct {
    unsigned int _field1;
    unsigned int _field2;
} CDStruct_c0454aff;

typedef struct {
    double top;
    double left;
    double bottom;
    double right;
} CDStruct_3c058996;

typedef struct {
    float beginRed;
    float beginGreen;
    float beginBlue;
    float endRed;
    float endGreen;
    float endBlue;
    float gradientOpacity;
} CDStruct_429f1ac1;

typedef struct {
    long long _field1;
    char *_field2;
    char *_field3;
} CDStruct_c77fb927;

typedef struct {
    char *_field1;
    char *_field2;
    struct _renditionkeytoken _field3[5];
    long long _field4;
    long long _field5;
    struct {
        char *_field1;
        char *_field2;
        long long _field3;
        unsigned long long _field4;
    } _field6[12];
} CDStruct_26b2aa83;

typedef struct {
    float engraveRed;
    float engraveGreen;
    float engraveBlue;
    float engraveOpacity;
    float engraveBlurSize;
    float engraveSpread;
    float engraveOffsetAmount;
    float engraveOffsetAngle;
    struct CGPoint engraveOffset;
} CDStruct_1b570c92;

typedef struct {
    struct CGSize _field1;
    struct CGSize _field2;
    struct CGSize _field3;
} CDStruct_1ba92a5e;

typedef struct {
    unsigned int effectType;
    unsigned int effectParameter;
    CDUnion_577fdfa6 effectValue;
} CDStruct_c57d91d4;

typedef struct {
    char *_field1;
    char *_field2;
    _Bool _field3;
    long long _field4;
    CDStruct_26b2aa83 _field5[7];
} CDStruct_e3362728;

typedef struct {
    unsigned long long _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    CDStruct_c57d91d4 _field5[35];
} CDStruct_52ca6128;

#pragma mark Typedef'd Unions

typedef union {
    double floatValue;
    unsigned long long intValue;
    struct _rgbcolor {
        unsigned char r;
        unsigned char g;
        unsigned char b;
    } colorValue;
    short angleValue;
    unsigned int enumValue;
} CDUnion_577fdfa6;

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/CoreUI.framework/CoreUI
// UUID: FFC13C2E-B148-335E-AC0A-2EBEF170477A
//
//                           Arch: x86_64
//                Current version: 298.0.0
//          Compatibility version: 1.0.0
//                 Source version: 298.0.0.0.0
//            Minimum iOS version: 8.0.0
//                    SDK version: 8.0.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol CUIStructuredThemeStorage <NSObject>
- (unsigned int)authoredWithSchemaVersion;
- (unsigned int)distilledInCoreUIVersion;
- (unsigned int)documentFormatVersion;
- (_Bool)canGetRenditionWithKey:(const struct _renditionkeytoken *)arg1;
- (CUIThemeRendition *)renditionWithKey:(const struct _renditionkeytoken *)arg1;
- (double)fontSizeForFontSizeType:(NSString *)arg1;
- (_Bool)getFontName:(id *)arg1 baselineOffset:(double *)arg2 forFontType:(NSString *)arg3;
- (_Bool)hasPhysicalColorWithName:(NSString *)arg1;
- (_Bool)getPhysicalColor:(struct _colordef *)arg1 withName:(NSString *)arg2;

@optional
- (unsigned long long)colorSpaceID;
@end

@protocol CUIStructuredThemeStorage2
- (NSArray *)imagesWithName:(NSString *)arg1;
- (NSArray *)allImageNames;
- (const struct _renditionkeytoken *)renditionKeyForName:(NSString *)arg1;
- (_Bool)canGetRenditionWithKey:(const struct _renditionkeytoken *)arg1;

@optional
- (void)removeImageNamed:(NSString *)arg1 withDescription:(CUINamedImageDescription *)arg2;
- (void)insertCGImage:(struct CGImage *)arg1 withName:(NSString *)arg2 andDescription:(CUINamedImageDescription *)arg3;
@end

@protocol CUIThemeGradientDrawing
- (CUIColor *)interpolatedColorAtLocation:(double)arg1;
- (void)drawInRect:(struct CGRect)arg1 angle:(double)arg2;
@end

@protocol CUIThemeImageSource <NSObject>
- (_Bool)hasValueSlices;
- (struct CGSize)imageSize;
- (CUIImage *)imageForState:(long long)arg1 withValue:(long long)arg2;
- (CUIImage *)imageForState:(long long)arg1;
@end

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@interface CIColor (CoreUIAdditions)
+ (id)colorWithSRGBRed:(double)arg1 green:(double)arg2 blue:(double)arg3;
+ (id)colorWithSRGBRed:(double)arg1 green:(double)arg2 blue:(double)arg3 alpha:(double)arg4;
@end

@interface CSIBitmapWrapper : NSObject
{
    struct CGContext *_bitmapContext;
    NSData *_pixelData;
    NSData *_rawData;
    unsigned int _pixelFormat;
    unsigned int _width;
    unsigned int _height;
    unsigned long long _rowbytes;
    _Bool _allowsMultiPassEncoding;
    unsigned int _imageAlpha;
}

@property(nonatomic) unsigned int pixelFormat; // @synthesize pixelFormat=_pixelFormat;
- (id)compressedData:(_Bool)arg1 usedEncoding:(int *)arg2 andRowChunkSize:(unsigned int *)arg3;
@property _Bool allowsMultiPassEncoding; // @synthesize allowsMultiPassEncoding=_allowsMultiPassEncoding;
- (id)pixelData;
- (void)setPixelData:(id)arg1;
- (unsigned int)sourceImageAlpha;
- (void)setSourceAlphaInfo:(unsigned int)arg1;
- (struct CGContext *)bitmapContext;
- (unsigned int)width;
- (unsigned int)height;
- (void)finalize;
- (void)dealloc;
- (id)initWithPixelWidth:(unsigned int)arg1 pixelHeight:(unsigned int)arg2;

@end

@interface CSIGenerator : NSObject
{
    struct CGSize _size;
    NSString *_name;
    NSString *_utiType;
    NSMutableArray *_slices;
    NSMutableArray *_bitmaps;
    NSMutableArray *_metrics;
    _Bool _isFPOHint;
    _Bool _isExcludedFromFilter;
    _Bool _isVectorBased;
    long long _templateRenderingMode;
    _Bool _allowsMultiPassEncoding;
    short _colorSpaceID;
    short _layout;
    unsigned int _scaleFactor;
    CUIPSDGradient *_gradient;
    NSData *_rawData;
    CUIShapeEffectPreset *_effectPreset;
    int _blendMode;
    double _opacity;
    NSDate *_modtime;
    unsigned int _pixelFormat;
    int _exifOrientation;
}

+ (void)initialize;
@property(nonatomic) _Bool allowsMultiPassEncoding; // @synthesize allowsMultiPassEncoding=_allowsMultiPassEncoding;
@property(nonatomic) int exifOrientation; // @synthesize exifOrientation=_exifOrientation;
@property(copy, nonatomic) NSDate *modtime; // @synthesize modtime=_modtime;
@property(nonatomic) double opacity; // @synthesize opacity=_opacity;
@property(nonatomic) int blendMode; // @synthesize blendMode=_blendMode;
@property(retain, nonatomic) CUIShapeEffectPreset *effectPreset; // @synthesize effectPreset=_effectPreset;
@property(nonatomic) unsigned int pixelFormat; // @synthesize pixelFormat=_pixelFormat;
@property(nonatomic) unsigned int scaleFactor; // @synthesize scaleFactor=_scaleFactor;
@property(retain, nonatomic) CUIPSDGradient *gradient; // @synthesize gradient=_gradient;
@property(nonatomic) short colorSpaceID; // @synthesize colorSpaceID=_colorSpaceID;
@property(nonatomic, getter=isExcludedFromContrastFilter) _Bool excludedFromContrastFilter; // @synthesize excludedFromContrastFilter=_isExcludedFromFilter;
@property(nonatomic) long long templateRenderingMode; // @synthesize templateRenderingMode=_templateRenderingMode;
@property(nonatomic) _Bool isVectorBased; // @synthesize isVectorBased=_isVectorBased;
@property(nonatomic) _Bool isRenditionFPO; // @synthesize isRenditionFPO=_isFPOHint;
@property(copy, nonatomic) NSString *utiType; // @synthesize utiType=_utiType;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
- (id)CSIRepresentationWithCompression:(_Bool)arg1;
- (unsigned long long)writeRawDataToData:(id)arg1;
- (unsigned long long)writeGradientToData:(id)arg1;
- (void)_addNodes:(id)arg1 toNodeList:(struct _csigradientdatanode *)arg2;
- (unsigned long long)writeBitmap:(id)arg1 toData:(id)arg2 compress:(_Bool)arg3;
- (unsigned long long)writeResourcesToData:(id)arg1;
- (void)writeHeader:(struct _csiheader *)arg1 toData:(id)arg2;
- (void)formatCSIHeader:(struct _csiheader *)arg1;
- (void)addMetrics:(CDStruct_1ba92a5e)arg1;
- (void)addSliceRect:(struct CGRect)arg1;
- (void)addBitmap:(id)arg1;
- (void)dealloc;
- (id)initWithRawData:(id)arg1 pixelFormat:(unsigned int)arg2 layout:(short)arg3;
- (id)initWithShapeEffectPreset:(id)arg1 forScaleFactor:(unsigned int)arg2;
- (id)initWithCanvasSize:(struct CGSize)arg1 sliceCount:(unsigned int)arg2 layout:(short)arg3;

@end

__attribute__((visibility("hidden")))
@interface CSIHelper : NSObject
{
    struct _slice slice;
    unsigned long long rowbytes;
    NSData *csiData;
    struct _csibitmap *bmp;
    int renditionLock;
    _CUIThemePixelRendition *rendition;
    _CSIRenditionBlockData *sharedBlockDataBGRX;
    _CSIRenditionBlockData *sharedBlockDataRGBX;
    NSString *blockDataCacheKeyBGRX;
    NSString *blockDataCacheKeyRGBX;
}

@end

@interface CUICatalog : NSObject
{
    unsigned long long _storageRef;
}

+ (id)bestMatchUsingImages:(id)arg1 scaleFactor:(double)arg2 deviceIdiom:(long long)arg3 deviceSubtype:(unsigned long long)arg4 sizeClassHorizontal:(long long)arg5 sizeClassVertical:(long long)arg6;
+ (id)bestMatchUsingImages:(id)arg1 scaleFactor:(double)arg2 deviceIdiom:(long long)arg3 deviceSubtype:(unsigned long long)arg4;
+ (id)defaultUICatalogForBundle:(id)arg1;
+ (id)systemUICatalog;
+ (id)defaultUICatalog;
- (void)clearCachedImageResources;
- (id)debugDescription;
- (id)imageByStylingImage:(struct CGImage *)arg1 stylePresetName:(id)arg2 styleConfiguration:(id)arg3 foregroundColor:(struct CGColor *)arg4 scale:(double)arg5;
- (CDStruct_3c058996)styledInsetsForStylePresetName:(id)arg1 styleConfiguration:(id)arg2 foregroundColor:(struct CGColor *)arg3 scale:(double)arg4;
- (int)blendModeForStylePresetWithName:(id)arg1 styleConfiguration:(id)arg2;
- (struct CGColor *)equivalentForegroundColorForStylePresetWithName:(id)arg1 styleConfiguration:(id)arg2;
- (_Bool)hasStylePresetWithName:(id)arg1;
- (_Bool)hasStylePresetWithName:(id)arg1 styleConfiguration:(id)arg2;
- (_Bool)fillStyledRect:(struct CGRect)arg1 inContext:(struct CGContext *)arg2 stylePresetName:(id)arg3 styleConfiguration:(id)arg4;
- (_Bool)fillStyledPath:(struct CGPath *)arg1 inContext:(struct CGContext *)arg2 stylePresetName:(id)arg3 styleConfiguration:(id)arg4;
- (_Bool)strokeStyledPath:(struct CGPath *)arg1 inContext:(struct CGContext *)arg2 stylePresetName:(id)arg3 styleConfiguration:(id)arg4;
- (_Bool)_doStyledQuartzDrawingInContext:(struct CGContext *)arg1 inBounds:(struct CGRect)arg2 stylePresetName:(id)arg3 styleConfiguration:(id)arg4 drawingHandler:(CDUnknownBlockType)arg5;
- (_Bool)drawGlyphs:(const unsigned short *)arg1 atPositions:(const struct CGPoint *)arg2 inContext:(struct CGContext *)arg3 withFont:(struct __CTFont *)arg4 count:(unsigned long long)arg5 stylePresetName:(id)arg6 styleConfiguration:(id)arg7 foregroundColor:(struct CGColor *)arg8;
- (_Bool)requiredDrawOfUnstyledGlyphs:(const unsigned short *)arg1 atPositions:(const struct CGPoint *)arg2 inContext:(struct CGContext *)arg3 withFont:(struct __CTFont *)arg4 count:(unsigned long long)arg5;
- (id)newShapeEffectStackForStylePresetName:(id)arg1 styleConfiguration:(id)arg2 foregroundColor:(struct CGColor *)arg3;
- (id)newTextEffectStackForStylePresetName:(id)arg1 styleConfiguration:(id)arg2 foregroundColor:(struct CGColor *)arg3;
- (id)newShapeEffectPresetForStylePresetName:(id)arg1 styleConfiguration:(id)arg2;
- (id)renditionKeyForShapeEffectPresetForStylePresetName:(id)arg1 styleConfiguration:(id)arg2;
- (id)renditionKeyForShapeEffectPresetWithStylePresetName:(id)arg1 state:(long long)arg2 presentationState:(long long)arg3 value:(long long)arg4 resolution:(unsigned long long)arg5;
- (id)renditionKeyForShapeEffectPresetWithStyleID:(unsigned long long)arg1 state:(long long)arg2 presentationState:(long long)arg3 value:(long long)arg4 resolution:(unsigned long long)arg5;
- (_Bool)canGetShapeEffectRenditionWithKey:(id)arg1;
- (id)newShapeEffectPresetWithRenditionKey:(id)arg1;
- (long long)artVariantIDOrZero;
- (id)_resolvedRenditionKeyForName:(id)arg1 scaleFactor:(double)arg2 deviceIdiom:(long long)arg3 deviceSubtype:(unsigned long long)arg4 sizeClassHorizontal:(long long)arg5 sizeClassVertical:(long long)arg6 memoryClass:(unsigned long long)arg7 graphicsClass:(unsigned long long)arg8;
- (id)_baseKeyForName:(id)arg1;
- (id)_themeStore;
- (unsigned long long)_themeRef;
- (struct CGPDFDocument *)pdfDocumentWithName:(id)arg1;
- (id)imagesWithName:(id)arg1;
- (id)allImageNames;
- (id)dataWithName:(id)arg1;
- (id)dataWithName:(id)arg1 deviceIdiom:(long long)arg2 deviceSubtype:(unsigned long long)arg3 memoryClass:(unsigned long long)arg4 graphicsClass:(unsigned long long)arg5;
- (id)imageWithName:(id)arg1 scaleFactor:(double)arg2 deviceIdiom:(long long)arg3 deviceSubtype:(unsigned long long)arg4 sizeClassHorizontal:(long long)arg5 sizeClassVertical:(long long)arg6;
- (id)imageWithName:(id)arg1 scaleFactor:(double)arg2 deviceIdiom:(long long)arg3 deviceSubtype:(unsigned long long)arg4;
- (id)imageWithName:(id)arg1 scaleFactor:(double)arg2 deviceIdiom:(long long)arg3;
- (id)imageWithName:(id)arg1 scaleFactor:(double)arg2;
- (id)initWithName:(id)arg1 fromBundle:(id)arg2 error:(id *)arg3;
- (id)initWithName:(id)arg1 fromBundle:(id)arg2;

@end

@interface CUIColor : NSObject <NSCopying>
{
    struct CGColor *_cgColor;
}

+ (id)colorWithCIColor:(id)arg1;
+ (id)colorWithCGColor:(struct CGColor *)arg1;
@property(readonly, nonatomic) struct CGColor *CGColor; // @synthesize CGColor=_cgColor;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)colorUsingCGColorSpace:(struct CGColorSpace *)arg1;
- (id)description;
- (void)dealloc;
- (id)initWithCIColor:(id)arg1;
- (id)initWithCGColor:(struct CGColor *)arg1;

@end

__attribute__((visibility("hidden")))
@interface CUICommonAssetStorage : NSObject
{
    struct _carheader {
        unsigned int _field1;
        unsigned int _field2;
        unsigned int _field3;
        unsigned int _field4;
        unsigned int _field5;
        char _field6[128];
        char _field7[256];
        unsigned char _field8[16];
        unsigned int _field9;
        unsigned int _field10;
        unsigned int _field11;
        unsigned int _field12;
    } *_header;
    struct _renditionkeyfmt *_keyfmt;
    void *_imagedb;
    void *_colordb;
    void *_fontdb;
    void *_fontsizedb;
    void *_zcglyphdb;
    void *_zcbezeldb;
    void *_facetKeysdb;
    void *_elementDebugInfoDB;
    void *_partDebugInfoDB;
    _Bool _swap;
}

+ (void)initialize;
- (float)fontSizeForFontSizeType:(id)arg1;
- (_Bool)getBaselineOffset:(float *)arg1 forFontType:(id)arg2;
- (_Bool)getFontName:(id *)arg1 baselineOffset:(float *)arg2 forFontType:(id)arg3;
- (const struct FontValue *)_fontValueForFontType:(id)arg1;
- (_Bool)hasColorForName:(const char *)arg1;
- (_Bool)getColor:(struct _colordef *)arg1 forName:(const char *)arg2;
- (id)zeroCodeBezelList;
- (id)zeroCodeGlyphList;
- (id)_zeroCodeListFromTree:(const void *)arg1;
- (void)_swapZeroCodeInformation:(CDStruct_c0454aff *)arg1;
- (id)renditionNameForKeyList:(struct _renditionkeytoken *)arg1;
- (id)allRenditionNames;
- (const struct _renditionkeytoken *)renditionKeyForName:(const char *)arg1 hotSpot:(struct CGPoint *)arg2;
- (struct _renditionkeytoken)_swapRenditionKeyToken:(struct _renditionkeytoken)arg1;
- (void)enumerateKeysAndObjectsUsingBlock:(CDUnknownBlockType)arg1;
- (id)assetKeysMatchingBlock:(CDUnknownBlockType)arg1;
- (id)allAssetKeys;
- (id)assetForKey:(id)arg1;
- (_Bool)assetExistsForKey:(id)arg1;
- (void)_swapRenditionKeyArray:(unsigned short *)arg1;
- (unsigned int)colorSpaceID;
- (unsigned int)associatedChecksum;
- (id)uuid;
- (unsigned int)renditionCount;
- (const char *)versionString;
- (_Bool)usesCUISystemThemeRenditionKey;
- (long long)maximumRenditionKeyTokenCount;
- (const struct _renditionkeyfmt *)keyFormat;
- (id)keyFormatData;
- (int)keySemantics;
- (long long)storageTimestamp;
- (long long)_storagefileTimestamp;
- (unsigned int)schemaVersion;
- (unsigned int)coreuiVersion;
- (unsigned int)storageVersion;
- (void)finalize;
- (void)dealloc;
- (id)description;
- (id)path;
- (id)initWithPath:(id)arg1 forWriting:(_Bool)arg2;
- (id)initWithPath:(id)arg1;
- (_Bool)swapped;
- (void)_swapKeyFormat;
- (void)_swapHeader;
- (void)_bringHeaderInfoUpToDate;
- (void)_initDefaultHeaderVersion:(double)arg1 versionString:(const char *)arg2;
- (id)displayNameForPartID:(long long)arg1;
- (id)constantNameForPartID:(long long)arg1;
- (id)displayNameForElementID:(long long)arg1;
- (id)constantNameForElementID:(long long)arg1;
- (id)_displayNameForIdentifier:(unsigned int)arg1 fromDebugTree:(void *)arg2;
- (id)_constantNameForIdentifier:(unsigned int)arg1 fromDebugTree:(void *)arg2;
- (id)_dataForIdentifier:(unsigned int)arg1 fromDebugTree:(void *)arg2;

@end

@interface CUIImage : NSObject <NSCopying>
{
    struct CGImage *_cgImage;
}

+ (id)imageWithCGImage:(struct CGImage *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
@property(readonly, nonatomic) struct CGSize size;
- (struct CGImage *)cgImage;
@property(readonly, nonatomic) struct CGImage *image;
- (void)dealloc;
- (id)initWithCGImage:(struct CGImage *)arg1;

@end

@interface CUIMutableCatalog : CUICatalog
{
    unsigned int _checkRespondsTo:1;
    unsigned int _respondsToCheck:1;
}

- (void)removeImageNamed:(id)arg1 withDescription:(id)arg2;
- (void)insertCGImage:(struct CGImage *)arg1 withName:(id)arg2 andDescription:(id)arg3;
- (void)removeImageNamed:(id)arg1 scale:(double)arg2 idiom:(long long)arg3 subtype:(long long)arg4;
- (void)insertCGImage:(struct CGImage *)arg1 name:(id)arg2 scale:(double)arg3 idiom:(long long)arg4 subtype:(long long)arg5;
- (id)_baseKeyForName:(id)arg1;
- (void)dealloc;
- (id)initWithName:(id)arg1 fromBundle:(id)arg2 error:(id *)arg3;
- (id)init;
- (id)initWithName:(id)arg1;

@end

@interface CUIMutableCommonAssetStorage : CUICommonAssetStorage
{
}

- (_Bool)writeToDisk;
- (_Bool)writeToDiskAndCompact:(_Bool)arg1;
- (void)setZeroCodeBezelInformation:(CDStruct_c0454aff)arg1 forKey:(const void *)arg2 withLength:(unsigned long long)arg3;
- (void)setZeroCodeGlyphInformation:(CDStruct_c0454aff)arg1 forKey:(const void *)arg2 withLength:(unsigned long long)arg3;
- (void)_setZeroCodeInfo:(CDStruct_c0454aff)arg1 forKey:(const void *)arg2 withLength:(unsigned long long)arg3 inTree:(const void *)arg4;
- (void)setRenditionKey:(const struct _renditionkeytoken *)arg1 hotSpot:(struct CGPoint)arg2 forName:(const char *)arg3;
- (void)removeAssetForKey:(const void *)arg1 withLength:(unsigned long long)arg2;
- (void)removeAssetForKey:(id)arg1;
- (void)setFontSize:(float)arg1 forFontSizeSelector:(id)arg2;
- (void)setFontName:(id)arg1 baselineOffset:(float)arg2 forFontSelector:(id)arg3;
- (void)setColor:(struct _rgbquad)arg1 forName:(const char *)arg2 excludeFromFilter:(_Bool)arg3;
- (void)setAsset:(id)arg1 forKey:(const void *)arg2 withLength:(unsigned long long)arg3;
- (void)setAsset:(id)arg1 forKey:(id)arg2;
- (void)setColorSpaceID:(unsigned int)arg1;
- (void)setAssociatedChecksum:(unsigned int)arg1;
- (void)setUuid:(id)arg1;
- (void)setRenditionCount:(unsigned int)arg1;
- (void)setSchemaVersion:(unsigned int)arg1;
- (void)setVersionString:(const char *)arg1;
- (void)setStorageVersion:(unsigned int)arg1;
- (void)setKeySemantics:(int)arg1;
- (void)setKeyFormatData:(id)arg1;
- (id)initWithPath:(id)arg1;
- (void)setConstantName:(id)arg1 displayName:(id)arg2 forPartID:(long long)arg3;
- (void)setConstantName:(id)arg1 displayName:(id)arg2 forElementID:(long long)arg3;
- (void)_setConstantName:(id)arg1 displayName:(id)arg2 forID:(unsigned int)arg3 inDebugTree:(void *)arg4;

@end

@interface CUIPSDImageRef : NSObject
{
    NSString *_path;
    _Bool _parsedForLayers;
    int _file;
    struct CPSDFile *_psd;
    _CUIPSDSublayerInfo *_rootLayers;
}

+ (_Bool)isValidPSDResourceAtPath:(id)arg1 withImageInfo:(struct _PSDImageInfo *)arg2;
+ (_Bool)isValidPSDResourceAtPath:(id)arg1 withLayerCount:(unsigned int *)arg2 validateLayers:(_Bool)arg3;
+ (_Bool)isValidPSDResourceAtPath:(id)arg1 withLayerCount:(unsigned int *)arg2;
+ (_Bool)isValidPSDResourceAtPath:(id)arg1;
- (id)_layerEffectsAtAbsoluteIndex:(unsigned int)arg1;
- (id)_bevelEmbossFromLayerEffectsInfo:(struct CPSDObjectEffectsLayerInfo *)arg1;
- (id)_gradientOverlayFromLayerEffectsAtAbsoluteIndex:(unsigned int)arg1;
- (id)_colorOverlayFromLayerEffectsInfo:(struct CPSDObjectEffectsLayerInfo *)arg1;
- (id)_outerGlowFromLayerEffectsInfo:(struct CPSDObjectEffectsLayerInfo *)arg1;
- (id)_innerGlowFromLayerEffectsInfo:(struct CPSDObjectEffectsLayerInfo *)arg1;
- (id)_innerShadowFromLayerEffectsInfo:(struct CPSDObjectEffectsLayerInfo *)arg1;
- (id)_dropShadowFromLayerEffectsInfo:(struct CPSDObjectEffectsLayerInfo *)arg1;
- (id)colorFromDocumentColor:(double *)arg1;
- (id)_gradientAtAbsoluteIndex:(unsigned int)arg1;
- (int)cgBlendModeForPSDLayerOrLayerEffectBlendMode:(unsigned int)arg1;
- (id)_fillSampleAtAbsoluteIndex:(unsigned int)arg1;
- (id)_createMaskFromSlice:(unsigned int)arg1 atAbsoluteIndex:(unsigned int)arg2;
- (id)_patternFromSlice:(unsigned int)arg1 atAbsoluteIndex:(unsigned int)arg2 isZeroSizeImage:(_Bool *)arg3;
- (id)_imageFromSlice:(unsigned int)arg1 atAbsoluteIndex:(unsigned int)arg2 isEmptyImage:(_Bool *)arg3;
- (id)_imageAtAbsoluteIndex:(unsigned int)arg1 isZeroSizeImage:(_Bool *)arg2;
- (struct CGImage *)_copyCGImageAtAbsoluteIndex:(unsigned int)arg1;
- (int)_blendModeAtAbsluteIndex:(unsigned int)arg1;
- (double)_fillOpacityAtAbsoluteIndex:(unsigned int)arg1;
- (double)_opacityAtAbsoluteIndex:(unsigned int)arg1;
- (_Bool)_visibilityAtAbsoluteIndex:(unsigned int)arg1;
- (struct CGRect)_boundsAtAbsoluteIndex:(unsigned int)arg1;
- (id)_namesOfSublayers:(id)arg1;
- (id)_nameAtAbsoluteIndex:(unsigned int)arg1;
- (void)_logInvalidAbsoluteIndex:(unsigned int)arg1 psd:(struct CPSDFile *)arg2;
- (id)_copySublayerInfoAtAbsoluteIndex:(unsigned int)arg1 atRoot:(_Bool)arg2;
- (_Bool)_treatDividerAsLayer;
- (id)_layerRefAtAbsoluteIndex:(unsigned int)arg1;
- (struct CPSDLayerRecord *)_psdLayerRecordAtAbsoluteIndex:(unsigned int)arg1;
- (unsigned int)_absoluteIndexOfRootLayer:(unsigned int)arg1;
- (id)_layerInfo;
- (id)gradientAtLayer:(unsigned int)arg1;
- (id)fillSampleAtLayer:(unsigned int)arg1;
- (struct CGSize)size;
- (id)metadataString;
- (id)layerNames;
- (unsigned int)numberOfChannels;
- (unsigned int)numberOfSlices;
- (unsigned int)numberOfLayers;
- (struct _PSDImageInfo)imageInfo;
- (struct CGColorSpace *)copyColorSpace;
- (id)layerRefAtIndex:(unsigned int)arg1;
- (_Bool)visibilityAtLayer:(unsigned int)arg1;
- (CDStruct_1ba92a5e)metricsInMask:(id)arg1 forRect:(struct CGRect)arg2;
- (CDStruct_1ba92a5e)metricsInAlphaChannel:(long long)arg1 forRect:(struct CGRect)arg2;
- (int)_layerIndexFromLayerNames:(id)arg1 indexRangeBegin:(int)arg2 indexRangeEnd:(int)arg3 isTopLevel:(_Bool)arg4;
- (int)absoluteLayerIndexFromLayerNames:(id)arg1;
- (struct CGRect)boundsForSlice:(unsigned int)arg1;
- (struct CGRect)boundsAtLayer:(unsigned int)arg1;
- (id)maskFromCompositeAlphaChannel:(long long)arg1;
- (id)compositeImage;
- (struct CGImage *)createCompositeCGImage;
- (id)maskFromSlice:(unsigned int)arg1 atLayer:(unsigned int)arg2;
- (id)patternFromSlice:(unsigned int)arg1 atLayer:(unsigned int)arg2 isZeroSizeImage:(_Bool *)arg3;
- (id)patternFromSlice:(unsigned int)arg1 atLayer:(unsigned int)arg2;
- (id)imageFromSlice:(unsigned int)arg1 atLayer:(unsigned int)arg2 isEmptyImage:(_Bool *)arg3;
- (id)imageFromSlice:(unsigned int)arg1 atAbsoluteLayer:(unsigned int)arg2;
- (id)imageFromSlice:(unsigned int)arg1 atLayer:(unsigned int)arg2;
- (id)imageAtLayer:(unsigned int)arg1 isZeroSizeImage:(_Bool *)arg2;
- (id)imageAtLayer:(unsigned int)arg1;
- (struct CGImage *)createCGImageAtLayer:(unsigned int)arg1;
- (id)imageFromRef:(struct CGImage *)arg1;
- (struct CPSDFile *)psdFileForComposite;
- (struct CPSDFile *)psdFile;
- (struct CPSDFile *)_psdFileWithLayers:(_Bool)arg1;
- (id)path;
- (void)finalize;
- (void)dealloc;
- (id)initWithPath:(id)arg1;
- (_Bool)loadPSDFileWithLayers:(_Bool)arg1;
- (_Bool)openImageFile;

@end

__attribute__((visibility("hidden")))
@interface CUIMutablePSDImageRef : CUIPSDImageRef
{
}

- (_Bool)saveToURL:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (_Bool)saveWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)setFileURL:(id)arg1;
- (void)updateSliceName:(id)arg1 atIndex:(unsigned int)arg2;
- (void)addOrUpdateSlicesWithXCutPositions:(id)arg1 yCutPositions:(id)arg2;
- (void)addOrUpdateSlicesWithSliceRects:(id)arg1;
- (unsigned int)newSliceRectsArray:(struct PSDRect **)arg1 withXCutPositions:(id)arg2 yCutPositions:(id)arg3;
- (unsigned int)newSliceRectsArray:(struct PSDRect **)arg1 withSliceRects:(id)arg2;
- (unsigned int)newUInt32CArray:(unsigned int **)arg1 withNSArray:(id)arg2 prependNumber:(id)arg3 appendNumber:(id)arg4;
- (void)deleteLayerAtIndex:(unsigned int)arg1;
- (void)insertLayer:(id)arg1 atIndex:(unsigned int)arg2;
- (void)addLayer:(id)arg1;
- (unsigned int)psdLayerBlendModeForCGBlendMode:(int)arg1;
- (void)deleteLayoutMetricsChannelAtIndex:(unsigned int)arg1;
- (struct PSDGradient *)newPSDGradientFromCUIPSDGradient:(id)arg1;
- (void)insertLayoutMetricsChannel:(id)arg1 atIndex:(unsigned int)arg2;
- (void)addLayoutMetricsChannel:(id)arg1;
- (id)initWithPixelWidth:(unsigned long long)arg1 pixelHeight:(unsigned long long)arg2;
- (struct __CFData *)copyDefaultICCProfileData;

@end

@interface CUIStructuredThemeStore : NSObject <CUIStructuredThemeStorage, CUIStructuredThemeStorage2>
{
    NSMutableDictionary *_cache;
    CUICommonAssetStorage *_store;
    NSLock *_cacheLock;
    NSLock *_storeLock;
    unsigned long long _themeIndex;
    NSString *_bundleID;
    NSCache *_assetExistanceCache;
    NSCache *_assetFPOStatus;
}

- (void)clearRenditionCache;
- (id)imagesWithName:(id)arg1;
- (id)allImageNames;
- (const struct _renditionkeytoken *)renditionKeyForName:(id)arg1 cursorHotSpot:(struct CGPoint *)arg2;
- (const struct _renditionkeytoken *)renditionKeyForName:(id)arg1;
- (id)zeroCodeGlyphList;
- (_Bool)_canGetRenditionWithKey:(const struct _renditionkeytoken *)arg1 isFPO:(_Bool *)arg2 lookForSubstitutions:(_Bool)arg3;
- (_Bool)canGetRenditionWithKey:(const struct _renditionkeytoken *)arg1 isFPO:(_Bool *)arg2;
- (_Bool)canGetRenditionWithKey:(const struct _renditionkeytoken *)arg1;
- (id)renditionWithKey:(const struct _renditionkeytoken *)arg1;
- (id)prefilteredAssetDataForKey:(struct _renditionkeytoken *)arg1;
- (id)lookupAssetForKey:(struct _renditionkeytoken *)arg1;
- (id)debugDescriptionForKeyList:(const struct _renditionkeytoken *)arg1;
- (const struct _renditionkeyfmt *)renditionKeyFormat;
- (void)_getKeyForAssetInOtherLookGroupClosestToKey:(struct _renditionkeytoken *)arg1 foundAsset:(_Bool *)arg2;
- (void)_getKeyForAssetClosestToKey:(struct _renditionkeytoken *)arg1 foundAsset:(_Bool *)arg2;
- (id)convertRenditionKeyToKeyData:(struct _renditionkeytoken *)arg1;
- (id)_newRenditionKeyDataFromKey:(struct _renditionkeytoken *)arg1;
- (void)_updateKeyWithCompatibilityMapping:(struct _renditionkeytoken *)arg1;
- (double)fontSizeForFontSizeType:(id)arg1;
- (_Bool)getFontName:(id *)arg1 baselineOffset:(double *)arg2 forFontType:(id)arg3;
- (_Bool)hasPhysicalColorWithName:(id)arg1;
- (_Bool)getPhysicalColor:(struct _colordef *)arg1 withName:(id)arg2;
- (unsigned int)authoredWithSchemaVersion;
- (unsigned int)distilledInCoreUIVersion;
- (unsigned int)documentFormatVersion;
- (id)themeStore;
- (void)dealloc;
- (id)initWithURL:(id)arg1;
- (id)initWithPath:(id)arg1;
- (_Bool)assetExistsForKey:(struct _renditionkeytoken *)arg1;
- (id)keySignatureForKey:(const struct _renditionkeytoken *)arg1;
- (id)copyKeySignatureForKey:(const struct _renditionkeytoken *)arg1 withBytesNoCopy:(char *)arg2 length:(unsigned long long)arg3;
- (id)baseGradationKeySignatureForKey:(const struct _renditionkeytoken *)arg1;
- (const struct _renditionkeyfmt *)keyFormat;
- (_Bool)usesCUISystemThemeRenditionKey;
- (long long)maximumRenditionKeyTokenCount;
- (unsigned long long)colorSpaceID;
@property(readonly, copy) NSString *debugDescription;
- (void)setThemeIndex:(unsigned long long)arg1;
- (id)bundleID;
- (id)displayNameForPartID:(long long)arg1;
- (id)constantNameForPartID:(long long)arg1;
- (id)displayNameForElementID:(long long)arg1;
- (id)constantNameForElementID:(long long)arg1;

// Remaining properties
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface CUIMutableStructuredThemeStore : CUIStructuredThemeStore
{
    NSString *_identifier;
    NSMutableDictionary *_memoryStore;
    NSMutableDictionary *_nameIdentifierStore;
    int _maxNameIdentifier;
}

- (void)clearRenditionCache;
- (void)removeImageNamed:(id)arg1 withDescription:(id)arg2;
- (void)insertCGImage:(struct CGImage *)arg1 withName:(id)arg2 andDescription:(id)arg3;
- (id)renditionWithKey:(const struct _renditionkeytoken *)arg1;
- (_Bool)canGetRenditionWithKey:(const struct _renditionkeytoken *)arg1 isFPO:(_Bool *)arg2;
- (_Bool)canGetRenditionWithKey:(const struct _renditionkeytoken *)arg1;
- (id)imagesWithName:(id)arg1;
- (const struct _renditionkeytoken *)renditionKeyForName:(id)arg1;
- (const struct _renditionkeytoken *)renditionKeyForName:(id)arg1 cursorHotSpot:(struct CGPoint *)arg2;
- (id)allImageNames;
- (const struct _renditionkeyfmt *)keyFormat;
- (_Bool)usesCUISystemThemeRenditionKey;
- (long long)maximumRenditionKeyTokenCount;
- (void)dealloc;
- (id)initWithIdentifier:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface CUIThemeRendition : NSObject
{
    struct _renditionkeytoken _stackKey[16];
    struct _renditionkeytoken *_key;
    long long _type;
    unsigned int _subtype;
    unsigned int _scale;
    struct {
        unsigned int isHeaderFlaggedFPO:1;
        unsigned int isExcludedFromContrastFilter:1;
        unsigned int isVectorBased:1;
        unsigned int isOpaque:1;
        unsigned int reserved:28;
    } _renditionFlags;
    long long _templateRenderingMode;
    long long _artworkStatus;
    unsigned long long _colorSpaceID;
    NSString *_name;
    NSData *_srcData;
    long long _validLookGradation;
    double _opacity;
    int _blendMode;
    NSString *_utiType;
    int _exifOrientation;
}

+ (id)displayNameForRenditionType:(long long)arg1;
+ (id)filteredCSIDataFromBaseCSIData:(id)arg1;
+ (Class)renditionClassForRenditionType:(long long)arg1 andPixelFormat:(unsigned int)arg2;
@property(nonatomic) int exifOrientation; // @synthesize exifOrientation=_exifOrientation;
@property(nonatomic) int blendMode; // @synthesize blendMode=_blendMode;
@property(nonatomic) double opacity; // @synthesize opacity=_opacity;
- (unsigned short)valueForTokenIdentifier:(unsigned short)arg1;
- (id)data;
- (struct CGPDFDocument *)pdfDocument;
- (id)effectPreset;
- (unsigned int)subtype;
- (unsigned int)gradientStyle;
- (id)gradient;
- (double)gradientDrawingAngle;
- (_Bool)isScaled;
- (_Bool)isTiled;
- (id)sliceInformation;
- (id)metrics;
- (double)scale;
- (id)maskForSliceIndex:(long long)arg1;
- (id)imageForSliceIndex:(long long)arg1;
- (struct CGImage *)unslicedImage;
- (id)description;
- (_Bool)isValidForLookGradation:(long long)arg1;
- (unsigned long long)colorSpaceID;
- (long long)artworkStatus;
- (long long)templateRenderingMode;
- (_Bool)isOpaque;
- (_Bool)isVectorBased;
- (_Bool)isHeaderFlaggedFPO;
- (id)utiType;
- (id)name;
- (long long)type;
- (const struct _renditionkeytoken *)key;
- (void)dealloc;
- (id)_initWithCSIData:(id)arg1 forKey:(const struct _renditionkeytoken *)arg2 artworkStatus:(long long)arg3;
- (id)initWithCSIData:(id)arg1 forKey:(const struct _renditionkeytoken *)arg2 artworkStatus:(long long)arg3;
- (id)initWithCSIData:(id)arg1 forKey:(const struct _renditionkeytoken *)arg2;
- (void)_initializeRenditionKey:(const struct _renditionkeytoken *)arg1;
- (id)_initWithCSIHeader:(const struct _csiheader *)arg1;
- (void)_initalizeMetadataFromCSIData:(const struct _csiheader *)arg1;
- (void)_initializeCompositingOptionsFromCSIData:(const struct _csiheader *)arg1;
- (void)_initializeTypeIdentifiersWithLayout:(unsigned short)arg1;

@end

__attribute__((visibility("hidden")))
@interface CUIMutableThemeRendition : CUIThemeRendition
{
    struct _renditionkeytoken *_renditionKey;
    struct CGImage *_image;
    CUIRenditionSliceInformation *_sliceInformation;
    CUIRenditionMetrics *_renditionMetrics;
}

- (id)metrics;
- (id)sliceInformation;
- (struct CGImage *)unslicedImage;
- (const struct _renditionkeytoken *)key;
- (void)setName:(id)arg1;
- (void)dealloc;
- (id)initWithCGImage:(struct CGImage *)arg1 withDescription:(id)arg2 forKey:(const struct _renditionkeytoken *)arg3;

@end

__attribute__((visibility("hidden")))
@interface CUINamedData : NSObject
{
    CUIRenditionKey *_key;
    unsigned long long _storageRef;
    NSString *_name;
}

@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
- (id)description;
- (id)_renditionName;
@property(readonly, nonatomic) NSString *utiType;
@property(readonly, nonatomic) NSData *data;
- (id)_rendition;
- (id)_renditionForSpecificKey:(id)arg1;
- (id)_themeStore;
- (void)dealloc;
- (id)initWithName:(id)arg1 usingRenditionKey:(id)arg2 fromTheme:(unsigned long long)arg3;

@end

@interface CUINamedImage : NSObject
{
    CUIRenditionKey *_key;
    unsigned long long _storageRef;
    NSString *_name;
}

@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
- (id)baseKey;
- (id)description;
@property(readonly, nonatomic) int exifOrientation;
@property(readonly, nonatomic) _Bool isStructured;
@property(readonly, nonatomic) long long templateRenderingMode;
@property(readonly, nonatomic) _Bool isTemplate;
@property(readonly, nonatomic) _Bool isVectorBased;
@property(readonly, nonatomic) _Bool hasSliceInformation;
@property(readonly, nonatomic) long long resizingMode;
@property(readonly, nonatomic) int blendMode;
@property(readonly, nonatomic) double opacity;
@property(readonly, nonatomic) CDStruct_3c058996 alignmentEdgeInsets;
@property(readonly, nonatomic) struct CGRect alignmentRect;
@property(readonly, nonatomic) CDStruct_3c058996 edgeInsets;
- (double)positionOfSliceBoundary:(unsigned int)arg1;
@property(readonly, nonatomic) long long imageType;
- (long long)graphicsClass;
- (long long)memoryClass;
- (long long)sizeClassVertical;
- (long long)sizeClassHorizontal;
- (unsigned long long)subtype;
- (long long)idiom;
@property(readonly, nonatomic) double scale;
@property(readonly, nonatomic) struct CGSize size;
@property(readonly, nonatomic) struct CGImage *image;
- (id)_rendition;
- (id)_renditionForSpecificKey:(id)arg1;
- (id)_themeStore;
- (id)renditionKey;
- (void)dealloc;
- (id)initWithName:(id)arg1 usingRenditionKey:(id)arg2 fromTheme:(unsigned long long)arg3;

@end

@interface CUINamedImageDescription : NSObject
{
    double _scale;
    long long _idiom;
    long long _subtype;
    long long _sizeClassHorizontal;
    long long _sizeClassVertical;
    int _blendMode;
    long long _templateRenderingMode;
    long long _imageType;
    CDStruct_3c058996 _edgeInsets;
    CDStruct_3c058996 _alignmentEdgeInsets;
    long long _resizingMode;
    int _exifOrientation;
}

@property(nonatomic) int exifOrientation; // @synthesize exifOrientation=_exifOrientation;
@property(nonatomic) long long resizingMode; // @synthesize resizingMode=_resizingMode;
@property(nonatomic) CDStruct_3c058996 alignmentEdgeInsets; // @synthesize alignmentEdgeInsets=_alignmentEdgeInsets;
@property(nonatomic) CDStruct_3c058996 edgeInsets; // @synthesize edgeInsets=_edgeInsets;
@property(nonatomic) long long imageType; // @synthesize imageType=_imageType;
@property(nonatomic) long long templateRenderingMode; // @synthesize templateRenderingMode=_templateRenderingMode;
@property(nonatomic) int blendMode; // @synthesize blendMode=_blendMode;
@property(nonatomic) long long sizeClassVertical; // @synthesize sizeClassVertical=_sizeClassVertical;
@property(nonatomic) long long sizeClassHorizontal; // @synthesize sizeClassHorizontal=_sizeClassHorizontal;
@property(nonatomic) long long subtype; // @synthesize subtype=_subtype;
@property(nonatomic) long long idiom; // @synthesize idiom=_idiom;
@property(nonatomic) double scale; // @synthesize scale=_scale;
- (id)description;
@property(nonatomic) _Bool isTemplate;

@end

__attribute__((visibility("hidden")))
@interface CUIPSDGradient : NSObject
{
    CUIPSDGradientEvaluator *evaluator;
    double drawingAngle;
    unsigned int gradientStyle;
}

+ (id)cuiPSDGradientWithColors:(id)arg1 locations:(id)arg2 midpointLocations:(id)arg3 angle:(double)arg4 isRadial:(_Bool)arg5;
+ (id)getMidpointLocationFromArray:(id)arg1 atIndex:(long long)arg2 withPolicy:(int)arg3;
@property unsigned int gradientStyle; // @synthesize gradientStyle;
@property double drawingAngle; // @synthesize drawingAngle;
@property(retain) CUIPSDGradientEvaluator *evaluator; // @synthesize evaluator;
- (void)dealloc;
- (id)initWithEvaluator:(id)arg1 drawingAngle:(double)arg2 gradientStyle:(unsigned int)arg3;

@end

__attribute__((visibility("hidden")))
@interface CUIPSDGradientStop : NSObject <NSCoding, NSCopying>
{
    double location;
}

+ (void)initialize;
- (_Bool)isOpacityStop;
- (_Bool)isColorStop;
- (_Bool)isDoubleStop;
- (void)setLocation:(double)arg1;
- (double)location;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithLocation:(double)arg1;

@end

__attribute__((visibility("hidden")))
@interface CUIPSDGradientColorStop : CUIPSDGradientStop <NSCoding>
{
    struct _psdGradientColor gradientColor;
}

+ (id)colorStopWithLocation:(double)arg1 gradientColor:(struct _psdGradientColor)arg2;
+ (void)initialize;
- (id)description;
- (_Bool)isColorStop;
- (double)colorLocation;
- (struct _psdGradientColor)gradientColor;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithLocation:(double)arg1 gradientColor:(struct _psdGradientColor)arg2;

@end

__attribute__((visibility("hidden")))
@interface CUIPSDGradientDoubleColorStop : CUIPSDGradientColorStop <NSCoding>
{
    struct _psdGradientColor leadOutColor;
}

+ (id)doubleColorStopWithLocation:(double)arg1 leadInColor:(struct _psdGradientColor)arg2 leadOutColor:(struct _psdGradientColor)arg3;
+ (void)initialize;
- (id)description;
- (_Bool)isDoubleStop;
- (struct _psdGradientColor)leadOutColor;
- (struct _psdGradientColor)leadInColor;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithLocation:(double)arg1 leadInColor:(struct _psdGradientColor)arg2 leadOutColor:(struct _psdGradientColor)arg3;

@end

__attribute__((visibility("hidden")))
@interface CUIPSDGradientOpacityStop : CUIPSDGradientStop <NSCoding>
{
    double opacity;
}

+ (id)opacityStopWithLocation:(double)arg1 opacity:(double)arg2;
+ (void)initialize;
- (id)description;
- (_Bool)isOpacityStop;
- (double)opacityLocation;
- (double)opacity;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithLocation:(double)arg1 opacity:(double)arg2;

@end

__attribute__((visibility("hidden")))
@interface CUIPSDGradientDoubleOpacityStop : CUIPSDGradientOpacityStop <NSCoding>
{
    double leadOutOpacity;
}

+ (id)doubleOpacityStopWithLocation:(double)arg1 leadInOpacity:(double)arg2 leadOutOpacity:(double)arg3;
+ (void)initialize;
- (id)description;
- (_Bool)isDoubleStop;
- (double)leadOutOpacity;
- (double)leadInOpacity;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithLocation:(double)arg1 leadInOpacity:(double)arg2 leadOutOpacity:(double)arg3;

@end

__attribute__((visibility("hidden")))
@interface CUIPSDGradientEvaluator : NSObject <NSCoding, NSCopying>
{
    NSArray *colorStops;
    NSArray *colorMidpointLocations;
    NSArray *opacityStops;
    NSArray *opacityMidpointLocations;
    double smoothingCoefficient;
    struct _psdGradientColor fillColor;
    int blendMode;
    struct {
        unsigned int colorEdgePixel:2;
        unsigned int opacityEdgePixel:2;
        unsigned int isDithered:1;
        unsigned int reserved:3;
    } pgeFlags;
}

+ (void)initialize;
@property(nonatomic) int blendMode; // @synthesize blendMode;
- (void)customizeForDistance:(double)arg1;
- (void)setFillCoefficient:(double)arg1;
- (void)setSmoothingCoefficient:(double)arg1;
- (void)setOpacityStops:(id)arg1 midpoints:(id)arg2;
- (void)setColorStops:(id)arg1 midpoints:(id)arg2;
- (id)description;
- (_Bool)hasEdgePixel;
- (struct _psdGradientColor)fillColor;
- (double)fillCoefficient;
- (_Bool)isDithered;
- (double)smoothingCoefficient;
- (id)opacityMidpointLocations;
- (id)opacityStops;
- (id)colorMidpointLocations;
- (id)colorStops;
- (struct _psdGradientColor)_smoothedGradientColorAtLocation:(double)arg1;
- (double)_smoothedInterpolationOfLocation:(double)arg1 betweenLower:(double)arg2 upper:(double)arg3 scaledMidpoint:(double)arg4;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithColorStops:(id)arg1 colorMidpoints:(id)arg2 opacityStops:(id)arg3 opacityMidpoints:(id)arg4 smoothingCoefficient:(double)arg5 fillColor:(struct _psdGradientColor)arg6 dither:(_Bool)arg7;
- (id)initWithColorStops:(id)arg1 colorMidpoints:(id)arg2 opacityStops:(id)arg3 opacityMidpoints:(id)arg4 smoothingCoefficient:(double)arg5 fillCoefficient:(double)arg6;
- (void)_createOrderedStops:(id *)arg1 midpoints:(id *)arg2 fromStops:(id)arg3 midpoints:(id)arg4 edgePixel:(long long *)arg5;
- (id)_cleanedUpMidpointLocationsFromLocations:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface CUIPSDLayer : NSObject
{
    double _opacity;
    int _blendMode;
    NSString *_name;
}

@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
@property(nonatomic) int blendMode; // @synthesize blendMode=_blendMode;
@property(nonatomic) double opacity; // @synthesize opacity=_opacity;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface CUIPSDGradientLayer : CUIPSDLayer
{
    CUIPSDGradient *_gradient;
}

@property(readonly, nonatomic) CUIPSDGradient *gradient; // @synthesize gradient=_gradient;
- (void)dealloc;
- (id)initWithGradient:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface CUIPSDImageLayer : CUIPSDLayer
{
    CUIImage *_image;
}

@property(readonly, nonatomic) struct CGImage *cgImageRef;
- (void)dealloc;
- (id)initWithCGImageRef:(struct CGImage *)arg1;

@end

__attribute__((visibility("hidden")))
@interface CUIPSDLayerBaseRef : NSObject
{
    CUIPSDImageRef *_imageRef;
    unsigned int _layerIndex;
}

- (struct CGImage *)_createMaskFromAlphaChannel:(long long)arg1;
- (id)vectorMaskRef;
- (id)layerMaskRef;
@property(readonly) _Bool hasVectorMask;
@property(readonly) _Bool hasLayerMask;
@property(readonly) int blendMode;
@property(readonly) double fillOpacity;
@property(readonly) double opacity;
@property(readonly) _Bool visibility;
@property(readonly) struct CGRect bounds;
- (_Bool)isLayerGroup;
- (id)name;
- (id)_psdImageRef;
- (struct CPSDLayerRecord *)_psdLayerRecord;

@end

__attribute__((visibility("hidden")))
@interface CUIPSDLayerEffectComponent : NSObject
{
    _Bool _visible;
    NSString *_name;
}

@property(retain) NSString *name; // @synthesize name=_name;
@property _Bool visible; // @synthesize visible=_visible;
- (void)dealloc;
- (unsigned int)effectType;
- (id)_colorFromShapeEffectValue:(CDUnion_577fdfa6)arg1;
- (id)initWithEffectFromPreset:(id)arg1 atIndex:(unsigned int)arg2;
- (_Bool)updateLayerEffectPreset:(id)arg1 error:(id *)arg2;

@end

@interface CUIPSDLayerEffectBevelEmboss : CUIPSDLayerEffectComponent
{
    unsigned long long _blurSize;
    unsigned long long _softenSize;
    short _angle;
    unsigned long long _altitude;
    unsigned int _direction;
    int _highlightBlendMode;
    CUIColor *_highlightColor;
    double _highlightOpacity;
    int _shadowBlendMode;
    CUIColor *_shadowColor;
    double _shadowOpacity;
}

@property double shadowOpacity; // @synthesize shadowOpacity=_shadowOpacity;
@property(retain) CUIColor *shadowColor; // @synthesize shadowColor=_shadowColor;
@property int shadowBlendMode; // @synthesize shadowBlendMode=_shadowBlendMode;
@property double highlightOpacity; // @synthesize highlightOpacity=_highlightOpacity;
@property(retain) CUIColor *highlightColor; // @synthesize highlightColor=_highlightColor;
@property int highlightBlendMode; // @synthesize highlightBlendMode=_highlightBlendMode;
@property unsigned int direction; // @synthesize direction=_direction;
@property unsigned long long altitude; // @synthesize altitude=_altitude;
@property short angle; // @synthesize angle=_angle;
@property unsigned long long softenSize; // @synthesize softenSize=_softenSize;
@property unsigned long long blurSize; // @synthesize blurSize=_blurSize;
- (void)dealloc;
- (unsigned int)effectType;
- (id)init;
- (id)initWithEffectFromPreset:(id)arg1 atIndex:(unsigned int)arg2;
- (_Bool)updateLayerEffectPreset:(id)arg1 error:(id *)arg2;

@end

@interface CUIPSDLayerEffectColorOverlay : CUIPSDLayerEffectComponent
{
    int _blendMode;
    double _opacity;
    CUIColor *_color;
}

@property(retain) CUIColor *color; // @synthesize color=_color;
@property double opacity; // @synthesize opacity=_opacity;
@property int blendMode; // @synthesize blendMode=_blendMode;
- (void)dealloc;
- (unsigned int)effectType;
- (id)init;
- (id)initWithEffectFromPreset:(id)arg1 atIndex:(unsigned int)arg2;
- (_Bool)updateLayerEffectPreset:(id)arg1 error:(id *)arg2;

@end

@interface CUIPSDLayerEffectDropShadow : CUIPSDLayerEffectComponent
{
    int _blendMode;
    double _opacity;
    CUIColor *_color;
    short _angle;
    unsigned long long _distance;
    unsigned long long _blurSize;
    unsigned long long _spread;
}

@property unsigned long long spread; // @synthesize spread=_spread;
@property unsigned long long blurSize; // @synthesize blurSize=_blurSize;
@property unsigned long long distance; // @synthesize distance=_distance;
@property short angle; // @synthesize angle=_angle;
@property(retain) CUIColor *color; // @synthesize color=_color;
@property double opacity; // @synthesize opacity=_opacity;
@property int blendMode; // @synthesize blendMode=_blendMode;
- (void)dealloc;
- (unsigned int)effectType;
- (id)init;
- (id)initWithEffectFromPreset:(id)arg1 atIndex:(unsigned int)arg2;
- (_Bool)updateLayerEffectPreset:(id)arg1 error:(id *)arg2;

@end

@interface CUIPSDLayerEffectGradientOverlay : CUIPSDLayerEffectComponent
{
    CUIPSDGradient *_gradient;
}

@property(retain) CUIPSDGradient *gradient; // @synthesize gradient=_gradient;
- (void)dealloc;
- (unsigned int)effectType;
- (id)init;
- (id)initWithEffectFromPreset:(id)arg1 atIndex:(unsigned int)arg2;
- (_Bool)updateLayerEffectPreset:(id)arg1 error:(id *)arg2;

@end

@interface CUIPSDLayerEffectInnerGlow : CUIPSDLayerEffectComponent
{
    int _blendMode;
    double _opacity;
    CUIColor *_color;
    unsigned long long _blurSize;
}

@property unsigned long long blurSize; // @synthesize blurSize=_blurSize;
@property(retain) CUIColor *color; // @synthesize color=_color;
@property double opacity; // @synthesize opacity=_opacity;
@property int blendMode; // @synthesize blendMode=_blendMode;
- (void)dealloc;
- (unsigned int)effectType;
- (id)init;
- (id)initWithEffectFromPreset:(id)arg1 atIndex:(unsigned int)arg2;
- (_Bool)updateLayerEffectPreset:(id)arg1 error:(id *)arg2;

@end

@interface CUIPSDLayerEffectInnerShadow : CUIPSDLayerEffectComponent
{
    int _blendMode;
    double _opacity;
    CUIColor *_color;
    short _angle;
    unsigned long long _distance;
    unsigned long long _blurSize;
}

@property unsigned long long blurSize; // @synthesize blurSize=_blurSize;
@property unsigned long long distance; // @synthesize distance=_distance;
@property short angle; // @synthesize angle=_angle;
@property(retain) CUIColor *color; // @synthesize color=_color;
@property double opacity; // @synthesize opacity=_opacity;
@property int blendMode; // @synthesize blendMode=_blendMode;
- (void)dealloc;
- (unsigned int)effectType;
- (id)init;
- (id)initWithEffectFromPreset:(id)arg1 atIndex:(unsigned int)arg2;
- (_Bool)updateLayerEffectPreset:(id)arg1 error:(id *)arg2;

@end

@interface CUIPSDLayerEffectOuterGlow : CUIPSDLayerEffectComponent
{
    int _blendMode;
    double _opacity;
    CUIColor *_color;
    unsigned long long _blurSize;
    unsigned long long _spread;
}

@property unsigned long long spread; // @synthesize spread=_spread;
@property unsigned long long blurSize; // @synthesize blurSize=_blurSize;
@property(retain) CUIColor *color; // @synthesize color=_color;
@property double opacity; // @synthesize opacity=_opacity;
@property int blendMode; // @synthesize blendMode=_blendMode;
- (void)dealloc;
- (unsigned int)effectType;
- (id)init;
- (id)initWithEffectFromPreset:(id)arg1 atIndex:(unsigned int)arg2;
- (_Bool)updateLayerEffectPreset:(id)arg1 error:(id *)arg2;

@end

@interface CUIPSDLayerEffects : NSObject
{
    _Bool _visible;
    double _effectScale;
    NSMutableDictionary *_effectList;
}

@property(copy) NSMutableDictionary *effectList; // @synthesize effectList=_effectList;
@property double effectScale; // @synthesize effectScale=_effectScale;
@property _Bool visible; // @synthesize visible=_visible;
- (void)dealloc;
- (void)addLayerEffectComponent:(id)arg1;
- (id)dropShadow;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface CUIPSDLayerGroupEnd : CUIPSDLayer
{
}

@end

__attribute__((visibility("hidden")))
@interface CUIPSDLayerGroupRef : CUIPSDLayerBaseRef
{
    _CUIPSDSublayerInfo *_sublayerInfo;
}

- (id)layerRefAtIndex:(unsigned int)arg1;
- (id)layerNames;
- (unsigned int)numberOfLayers;
- (_Bool)isOpen;
- (struct CGRect)bounds;
- (_Bool)isLayerGroup;
- (void)dealloc;
- (id)initWithImageRef:(id)arg1 layerIndex:(unsigned int)arg2;

@end

__attribute__((visibility("hidden")))
@interface CUIPSDLayerGroupStart : CUIPSDLayer
{
}

- (void)setName:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface CUIPSDLayerMaskRef : NSObject
{
    CUIPSDLayerRef *_layerRef;
    _Bool _isVectorMask;
}

- (struct CGImage *)createCGImageMask;
- (struct CGPath *)newBezierPathAtScale:(double)arg1;
- (struct CGPath *)newBezierPath;
- (struct CGRect)bounds;
- (_Bool)isInvertedWhenBlending;
- (_Bool)isEnabled;
- (_Bool)isLinked;
- (id)layerRef;
- (void)dealloc;
- (id)initVectorMaskWithLayerRef:(id)arg1;
- (id)initLayerMaskWithLayerRef:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface CUIPSDLayerRef : CUIPSDLayerBaseRef
{
}

- (id)colorFill;
- (id)layerEffects;
- (id)gradient;
- (id)fillSample;
- (id)maskFromSlice:(unsigned int)arg1;
- (id)patternFromSlice:(unsigned int)arg1 isZeroSizeImage:(_Bool *)arg2;
- (id)patternFromSlice:(unsigned int)arg1;
- (id)imageFromSlice:(unsigned int)arg1 isEmptyImage:(_Bool *)arg2;
- (id)imageFromSlice:(unsigned int)arg1;
- (id)imageIsZeroSizeImage:(_Bool *)arg1;
- (id)image;
- (struct CGImage *)createCGImage;
- (void)dealloc;
- (id)initWithImageRef:(id)arg1 layerIndex:(unsigned int)arg2;

@end

__attribute__((visibility("hidden")))
@interface CUIPSDLayoutMetricsChannel : NSObject
{
    struct CGRect _edgeInsets;
    NSString *_name;
}

@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
@property(readonly, nonatomic) struct CGRect edgeInsets; // @synthesize edgeInsets=_edgeInsets;
- (id).cxx_construct;
- (void)setEdgeInsets:(struct CGRect)arg1;
- (id)initWithEdgeInsets:(struct CGRect)arg1;
- (void)sanitizeEdgeInsets;

@end

@interface CUIShapeEffectPreset : NSObject
{
    CDStruct_c57d91d4 _parameterList[35];
    unsigned int _effectIndex[8];
    double _scaleFactor;
}

+ (id)requiredEffectParametersForEffectType:(unsigned int)arg1;
- (void)addBevelEmbossWithHighlightColorRed:(unsigned int)arg1 green:(unsigned int)arg2 blue:(unsigned int)arg3 opacity:(double)arg4 shadowColorRed:(unsigned int)arg5 green:(unsigned int)arg6 blue:(unsigned int)arg7 opacity:(double)arg8 blur:(int)arg9 soften:(int)arg10;
- (void)addExtraShadowWithColorRed:(unsigned int)arg1 green:(unsigned int)arg2 blue:(unsigned int)arg3 opacity:(double)arg4 blur:(int)arg5 spread:(int)arg6 offset:(int)arg7 angle:(int)arg8;
- (void)addDropShadowWithColorRed:(unsigned int)arg1 green:(unsigned int)arg2 blue:(unsigned int)arg3 opacity:(double)arg4 blur:(int)arg5 spread:(int)arg6 offset:(int)arg7 angle:(int)arg8;
- (void)addOuterGlowWithColorRed:(unsigned int)arg1 green:(unsigned int)arg2 blue:(unsigned int)arg3 opacity:(double)arg4 blur:(int)arg5 spread:(int)arg6;
- (void)addInnerShadowWithColorRed:(unsigned int)arg1 green:(unsigned int)arg2 blue:(unsigned int)arg3 opacity:(double)arg4 blur:(int)arg5 offset:(int)arg6 angle:(int)arg7 blendMode:(unsigned int)arg8;
- (void)addInnerGlowWithColorRed:(unsigned int)arg1 green:(unsigned int)arg2 blue:(unsigned int)arg3 opacity:(double)arg4 blur:(int)arg5 blendMode:(unsigned int)arg6;
- (void)addGradientFillWithTopColorRed:(unsigned int)arg1 green:(unsigned int)arg2 blue:(unsigned int)arg3 bottomColorRed:(unsigned int)arg4 green:(unsigned int)arg5 blue:(unsigned int)arg6 opacity:(double)arg7;
- (void)addColorFillWithRed:(unsigned int)arg1 green:(unsigned int)arg2 blue:(unsigned int)arg3 opacity:(double)arg4 blendMode:(unsigned int)arg5;
- (void)addOutputOpacityWithOpacity:(double)arg1;
- (void)addShapeOpacityWithOpacity:(double)arg1;
- (void)appendColorValueRed:(unsigned int)arg1 green:(unsigned int)arg2 blue:(unsigned int)arg3 forParameter:(unsigned int)arg4 withEffectType:(unsigned int)arg5;
- (void)appendEnumValue:(unsigned int)arg1 forParameter:(unsigned int)arg2 withEffectType:(unsigned int)arg3;
- (void)appendIntValue:(unsigned long long)arg1 forParameter:(unsigned int)arg2 withEffectType:(unsigned int)arg3;
- (void)appendAngleValue:(long long)arg1 forParameter:(unsigned int)arg2 withEffectType:(unsigned int)arg3;
- (void)appendFloatValue:(double)arg1 forParameter:(unsigned int)arg2 withEffectType:(unsigned int)arg3;
- (void)addColorValueRed:(unsigned int)arg1 green:(unsigned int)arg2 blue:(unsigned int)arg3 forParameter:(unsigned int)arg4 withNewEffectType:(unsigned int)arg5;
- (void)addEnumValue:(unsigned int)arg1 forParameter:(unsigned int)arg2 withNewEffectType:(unsigned int)arg3;
- (void)addIntValue:(unsigned long long)arg1 forParameter:(unsigned int)arg2 withNewEffectType:(unsigned int)arg3;
- (void)addFloatValue:(double)arg1 forParameter:(unsigned int)arg2 withNewEffectType:(unsigned int)arg3;
- (void)addValue:(CDUnion_577fdfa6)arg1 forParameter:(unsigned int)arg2 withNewEffectType:(unsigned int)arg3;
- (void)appendValue:(CDUnion_577fdfa6)arg1 forParameter:(unsigned int)arg2 withEffectType:(unsigned int)arg3;
- (void)addValue:(CDUnion_577fdfa6)arg1 forParameter:(unsigned int)arg2 withEffectType:(unsigned int)arg3 atEffectIndex:(unsigned long long)arg4;
- (void)getEffectTuples:(struct **)arg1 count:(unsigned long long *)arg2 atEffectIndex:(unsigned long long)arg3;
- (void)_insertEffectTuple:(CDStruct_c57d91d4)arg1 atEffectIndex:(unsigned long long)arg2;
- (CDUnion_577fdfa6)valueForParameter:(unsigned int)arg1 inEffectAtIndex:(unsigned long long)arg2;
- (unsigned int)effectTypeAtIndex:(unsigned long long)arg1;
- (unsigned long long)effectCount;
- (double)effectScale;
- (id)initWithEffectScale:(double)arg1;
- (id)init;
- (id)layerEffectsRepresentation;
- (id)CUIEffectDataRepresentation;
- (unsigned long long)_parameterCount;
- (id)initWithConstantPreset:(const CDStruct_52ca6128 *)arg1;

@end

@interface CUIPSLayerEffectsPreset : CUIShapeEffectPreset
{
}

- (id)initWithLayerEffects:(id)arg1 forScaleFactor:(double)arg2;

@end

__attribute__((visibility("hidden")))
@interface CUIPattern : NSObject
{
    struct CGImage *_patternImage;
    struct CGPattern *_pattern;
    double _alpha;
}

@property(nonatomic) double alpha; // @synthesize alpha=_alpha;
- (struct CGImage *)patternImageRef;
- (id)description;
- (void)setPatternInContext:(struct CGContext *)arg1;
- (struct CGPattern *)pattern;
- (struct CGPattern *)_newPattern;
- (void)dealloc;
- (id)initWithImageRef:(struct CGImage *)arg1;

@end

@interface CUIRenditionKey : NSObject <NSCopying, NSCoding>
{
    struct _renditionkeytoken _stackKey[16];
    struct _renditionkeytoken *_key;
    unsigned short _highwaterKeyCount;
}

+ (id)renditionKeyWithKeyList:(const struct _renditionkeytoken *)arg1;
+ (id)renditionKey;
+ (id)_placeHolderKey;
+ (void)initialize;
- (id)descriptionBasedOnKeyFormat:(const struct _renditionkeyfmt *)arg1;
- (id)nameOfAttributeName:(int)arg1;
- (id)description;
- (long long)themeIdentifier;
- (void)setThemeIdentifier:(long long)arg1;
- (long long)themeGraphicsClass;
- (void)setThemeGraphicsClass:(long long)arg1;
- (long long)themeMemoryClass;
- (void)setThemeMemoryClass:(long long)arg1;
- (long long)themeSizeClassVertical;
- (void)setThemeSizeClassVertical:(long long)arg1;
- (long long)themeSizeClassHorizontal;
- (void)setThemeSizeClassHorizontal:(long long)arg1;
- (long long)themeSubtype;
- (void)setThemeSubtype:(long long)arg1;
- (long long)themeIdiom;
- (void)setThemeIdiom:(long long)arg1;
- (long long)themeScale;
- (void)setThemeScale:(long long)arg1;
- (long long)themeLayer;
- (void)setThemeLayer:(long long)arg1;
- (long long)themePresentationState;
- (void)setThemePresentationState:(long long)arg1;
- (long long)themePreviousState;
- (void)setThemePreviousState:(long long)arg1;
- (long long)themeState;
- (void)setThemeState:(long long)arg1;
- (long long)themeDimension2;
- (void)setThemeDimension2:(long long)arg1;
- (long long)themeDimension1;
- (void)setThemeDimension1:(long long)arg1;
- (long long)themePreviousValue;
- (void)setThemePreviousValue:(long long)arg1;
- (long long)themeValue;
- (void)setThemeValue:(long long)arg1;
- (long long)themeDirection;
- (void)setThemeDirection:(long long)arg1;
- (long long)themeSize;
- (void)setThemeSize:(long long)arg1;
- (long long)themePart;
- (void)setThemePart:(long long)arg1;
- (long long)themeElement;
- (void)setThemeElement:(long long)arg1;
- (id)initWithThemeElement:(long long)arg1 themePart:(long long)arg2 themeSize:(long long)arg3 themeDirection:(long long)arg4 themeValue:(long long)arg5 themeDimension1:(long long)arg6 themeDimension2:(long long)arg7 themeState:(long long)arg8 themePresentationState:(long long)arg9 themeLayer:(long long)arg10 themeScale:(long long)arg11 themeIdentifier:(long long)arg12;
- (const struct _renditionkeytoken *)keyList;
- (void)removeValueForKeyTokenIdentifier:(long long)arg1;
- (void)copyValuesFromKeyList:(const struct _renditionkeytoken *)arg1;
- (void)setValuesFromKeyList:(const struct _renditionkeytoken *)arg1;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithKeyList:(const struct _renditionkeytoken *)arg1;
- (id)init;
- (void)_expandKeyIfNecessaryForCount:(long long)arg1;
- (unsigned short)_systemTokenCount;

@end

__attribute__((visibility("hidden")))
@interface CUIRenditionMetrics : NSObject
{
    struct CGSize _imageSize;
    struct CGSize _edgeBottomLeftMargin;
    struct CGSize _edgeTopRightMargin;
    struct CGSize _contentBottomLeftMargin;
    struct CGSize _contentTopRightMargin;
    double _baseline;
    double _scale;
    struct crmFlags _crmFlags;
}

- (_Bool)hasOpaqueContentBounds;
- (struct CGRect)insetContentRectWithMetrics:(struct CGRect)arg1;
- (struct CGRect)insetRectWithMetrics:(struct CGRect)arg1;
- (struct CGRect)contentRect;
- (struct CGRect)edgeRect;
- (_Bool)scalesHorizontally;
- (_Bool)scalesVertically;
- (double)scale;
- (double)baseline;
- (struct CGSize)contentTopRightMargin;
- (struct CGSize)contentBottomLeftMargin;
- (struct CGSize)edgeTopRightMargin;
- (struct CGSize)edgeBottomLeftMargin;
- (struct CGSize)imageSize;
- (id)initWithImageSize:(struct CGSize)arg1 edgeBottomLeft:(struct CGSize)arg2 edgeTopRight:(struct CGSize)arg3 contentBottomLeft:(struct CGSize)arg4 contentTopRight:(struct CGSize)arg5 baseline:(double)arg6 scalesVertically:(_Bool)arg7 scalesHorizontally:(_Bool)arg8 scale:(double)arg9;

@end

__attribute__((visibility("hidden")))
@interface CUIRenditionSliceInformation : NSObject <NSCopying>
{
    long long _renditionType;
    double _boundaries[4];
    struct CGRect _destinationRect;
    CDStruct_3c058996 _edgeInsets;
}

@property(readonly, nonatomic) CDStruct_3c058996 edgeInsets; // @synthesize edgeInsets=_edgeInsets;
@property(readonly, nonatomic) struct CGRect destinationRect; // @synthesize destinationRect=_destinationRect;
@property(readonly, nonatomic) long long renditionType; // @synthesize renditionType=_renditionType;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
- (double)positionOfSliceBoundary:(unsigned long long)arg1;
- (struct CGSize)_bottomRightCapSize;
- (struct CGSize)_topLeftCapSize;
- (id)initWithRenditionType:(long long)arg1 destinationRect:(struct CGRect)arg2 topLeftInset:(struct CGSize)arg3 bottomRightInset:(struct CGSize)arg4;
- (id)initWithSliceInformation:(id)arg1 destinationRect:(struct CGRect)arg2;

@end

@interface CUIShapeEffectStack : NSObject
{
    float shapeOpacity;
    float outputOpacity;
    _Bool hasColorOverlay;
    struct {
        unsigned int blendMode;
        float fillRed;
        float fillGreen;
        float fillBlue;
        float fillOpacity;
    } colorOverlay;
    _Bool hasInnerGradient;
    CDStruct_429f1ac1 innerGradient;
    _Bool hasInnerGlow;
    struct {
        unsigned int blendMode;
        float glowRed;
        float glowGreen;
        float glowBlue;
        float glowOpacity;
        float glowSize;
    } innerGlow;
    _Bool hasInnerShadow;
    struct {
        unsigned int blendMode;
        float shadowRed;
        float shadowGreen;
        float shadowBlue;
        float shadowBlurSize;
        float shadowOpacity;
        float shadowOffsetAmount;
        float shadowOffsetAngle;
        struct CGPoint shadowOffset;
    } insideShadow;
    _Bool hasOuterGlow;
    struct {
        float glowRed;
        float glowGreen;
        float glowBlue;
        float glowOpacity;
        float glowSize;
        float glowSpread;
    } outerGlow;
    _Bool hasEngraveShadow;
    CDStruct_1b570c92 engraveShadow;
    _Bool hasExtraShadow;
    CDStruct_1b570c92 extraShadow;
    _Bool hasBevelEmboss;
    struct {
        float embossSize;
        float embossSoften;
        float embossAngle;
        float embossAltitude;
        float highlightRed;
        float highlightGreen;
        float highlightBlue;
        float highlightOpacity;
        float shadowRed;
        float shadowGreen;
        float shadowBlue;
        float shadowOpacity;
    } emboss;
    float scalefactor;
    int renderStrategy;
}

+ (id)shapeEffectSingleBlurFrom:(id)arg1 withInteriorFill:(id)arg2 offset:(struct CGPoint)arg3 blurSize:(float)arg4 innerGlowRed:(float)arg5 innerGlowGreen:(float)arg6 innerGlowBlue:(float)arg7 innerGlowOpacity:(float)arg8 innerShadowRed:(float)arg9 innerShadowGreen:(float)arg10 innerShadowBlue:(float)arg11 innerShadowOpacity:(float)arg12 outerGlowRed:(float)arg13 outerGlowGreen:(float)arg14 outerGlowBlue:(float)arg15 outerGlowOpacity:(float)arg16 outerShadowRed:(float)arg17 outerShadowGreen:(float)arg18 outerShadowBlue:(float)arg19 outerShadowOpacity:(float)arg20 hasInsideShadowBlur:(_Bool)arg21 hasOutsideShadowBlur:(_Bool)arg22;
+ (id)bevelEmbossFrom:(id)arg1 withSize:(unsigned int)arg2 soften:(unsigned int)arg3 angle:(float)arg4 altitude:(float)arg5 highlightRed:(float)arg6 highlightGreen:(float)arg7 highlightBlue:(float)arg8 highlightOpacity:(float)arg9 shadowRed:(float)arg10 shadowGreen:(float)arg11 shadowBlue:(float)arg12 shadowOpacity:(float)arg13;
+ (id)outerShadowFrom:(id)arg1 withOffset:(struct CGPoint)arg2 size:(unsigned int)arg3 spread:(unsigned int)arg4 red:(float)arg5 green:(float)arg6 blue:(float)arg7 opacity:(float)arg8;
+ (id)outerGlowFrom:(id)arg1 withSize:(unsigned int)arg2 spread:(unsigned int)arg3 red:(float)arg4 green:(float)arg5 blue:(float)arg6 opacity:(float)arg7;
+ (id)innerShadowFrom:(id)arg1 withOffset:(struct CGPoint)arg2 radius:(float)arg3 red:(float)arg4 green:(float)arg5 blue:(float)arg6 opacity:(float)arg7;
+ (id)innerGlowFrom:(id)arg1 withRadius:(float)arg2 red:(float)arg3 green:(float)arg4 blue:(float)arg5 opacity:(float)arg6;
+ (id)imageFromBlendWithMask:(id)arg1 foreground:(id)arg2 background:(id)arg3;
+ (id)shadowFrom:(id)arg1 red:(float)arg2 green:(float)arg3 blue:(float)arg4 opacity:(float)arg5;
+ (id)gradientWithParameters:(CDStruct_429f1ac1 *)arg1 inRect:(struct CGRect)arg2;
+ (id)rectangle:(struct CGRect)arg1 withRed:(float)arg2 green:(float)arg3 blue:(float)arg4 alpha:(float)arg5;
+ (id)colorWithRed:(float)arg1 green:(float)arg2 blue:(float)arg3 alpha:(float)arg4;
+ (id)colorWithGray:(float)arg1 alpha:(float)arg2;
+ (id)blur:(id)arg1 radius:(float)arg2;
+ (id)invert:(id)arg1;
+ (id)image:(id)arg1 withOpacity:(float)arg2;
+ (id)blend:(id)arg1 over:(id)arg2 blendKind:(unsigned int)arg3;
+ (id)composite:(id)arg1 atop:(id)arg2;
+ (id)composite:(id)arg1 outOf:(id)arg2;
+ (id)composite:(id)arg1 into:(id)arg2;
+ (id)composite:(id)arg1 over:(id)arg2;
+ (id)unsharpMask:(id)arg1 radius:(float)arg2 intensity:(float)arg3;
+ (id)pixelZoomed:(id)arg1 scale:(int)arg2 about:(struct CGPoint)arg3;
+ (id)adjustOpacity:(id)arg1 by:(float)arg2;
+ (id)offset:(id)arg1 by:(struct CGPoint)arg2;
+ (id)sharedCIContext;
+ (id)preferredCIContextOptions;
- (id)processedImageFromShapePath:(struct CGPath *)arg1 inRect:(struct CGRect)arg2;
- (struct CGImage *)newFlattenedImageFromShapeCGImage:(struct CGImage *)arg1;
- (struct CGImage *)newFlattenedImageFromShapeCGImage:(struct CGImage *)arg1 withScale:(double)arg2 ciContext:(id)arg3;
- (struct CGImage *)newFlattenedImageFromShapeCGImage:(struct CGImage *)arg1 withScale:(double)arg2;
- (id)processedImageFromShapeImage:(id)arg1 withScale:(double)arg2;
- (id)processedImageFromShapeImage:(id)arg1;
- (CDStruct_3c058996)effectInsetsWithScale:(double)arg1;
- (struct CGRect)effectPaddingWithScale:(double)arg1;
- (id)compositeEffectStackWithShapeImage:(id)arg1 withScale:(double)arg2;
- (id)optimizedSingleBlurEffectCompositeWithShapeImage:(id)arg1;
- (id)standardEffectCompositeWithShapeImage:(id)arg1;
- (void)applyCustomForegroundColor:(struct CGColor *)arg1 tintEffectColors:(_Bool)arg2;
- (void)applyCustomForegroundColor:(struct CGColor *)arg1;
- (void)scaleEffectParametersBy:(double)arg1;
- (id)imageWithBevelEmbossOfImage:(id)arg1;
- (id)imageWithExtraShadowOfImage:(id)arg1;
- (id)imageWithEngraveShadowOfImage:(id)arg1;
- (id)imageWithOuterGlowOfImage:(id)arg1;
- (id)imageWithInteriorGradientFillOfImage:(id)arg1;
- (id)imageWithColorOverlayOfImage:(id)arg1;
- (id)imageWithAdjustedOutputOpacityOfImage:(id)arg1;
- (id)imageWithAdjustedShapeOpacityOfImage:(id)arg1;
- (id)imageWithInnerShadowOfImage:(id)arg1;
- (id)imageWithInnerGlowOfImage:(id)arg1;
- (id)imageWithSingleBlurShapeEffectOfImage:(id)arg1 withInteriorFill:(id)arg2;
- (id)effectPreset;
- (id)initWithEffectPreset:(id)arg1;
- (void)_updateRenderStrategyFromEffect:(unsigned int)arg1;
- (void)_precompositeColorOverlayInnerGradient;
- (void)_addBevelEmbossFromPreset:(id)arg1 atIndex:(unsigned int)arg2;
- (void)_addExtraShadowFromPreset:(id)arg1 atIndex:(unsigned int)arg2;
- (void)_addEngraveShadowFromPreset:(id)arg1 atIndex:(unsigned int)arg2;
- (void)_addOuterGlowFromPreset:(id)arg1 atIndex:(unsigned int)arg2;
- (void)_addInnerShadowFromPreset:(id)arg1 atIndex:(unsigned int)arg2;
- (void)_addInnerGlowFromPreset:(id)arg1 atIndex:(unsigned int)arg2;
- (void)_setInteriorGradientFromPreset:(id)arg1 atIndex:(unsigned int)arg2;
- (void)_setColorFillFromPreset:(id)arg1 atIndex:(unsigned int)arg2;
- (void)_setOutputOpacityFromPreset:(id)arg1 atIndex:(unsigned int)arg2;
- (void)_setShapeOpacityFromPreset:(id)arg1 atIndex:(unsigned int)arg2;

@end

@interface CUIStyleEffectConfiguration : NSObject <NSCopying>
{
    long long _state;
    long long _presentationState;
    long long _value;
    _Bool _useSimplifiedEffect;
    _Bool _foregroundColorShouldTintEffects;
}

@property(nonatomic) _Bool foregroundColorShouldTintEffects; // @synthesize foregroundColorShouldTintEffects=_foregroundColorShouldTintEffects;
@property(nonatomic) _Bool useSimplifiedEffect; // @synthesize useSimplifiedEffect=_useSimplifiedEffect;
@property(nonatomic) long long value; // @synthesize value=_value;
@property(nonatomic) long long presentationState; // @synthesize presentationState=_presentationState;
@property(nonatomic) long long state; // @synthesize state=_state;
- (id)description;
- (_Bool)shouldIgnoreForegroundColor;
- (id)init;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

__attribute__((visibility("hidden")))
@interface CUISystemCatalog : CUICatalog
{
}

- (_Bool)hasStylePresetWithName:(id)arg1;
- (_Bool)hasStylePresetWithName:(id)arg1 styleConfiguration:(id)arg2;
- (id)newShapeEffectPresetForStylePresetName:(id)arg1 styleConfiguration:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CUITextEffectStack : CUIShapeEffectStack
{
    _Bool renderHighQuality;
}

- (void)drawUsingQuartz:(CDUnknownBlockType)arg1 inContext:(struct CGContext *)arg2 inBounds:(struct CGRect)arg3 atScale:(double)arg4;
- (void)_drawShadow:(CDStruct_1b570c92)arg1 usingQuartz:(CDUnknownBlockType)arg2 inContext:(struct CGContext *)arg3;
- (void)drawGlyphs:(const unsigned short *)arg1 inContext:(struct CGContext *)arg2 usingFont:(struct __CTFont *)arg3 atPositions:(const struct CGPoint *)arg4 count:(unsigned long long)arg5 lineHeight:(double)arg6 inBounds:(struct CGRect)arg7 atScale:(double)arg8;
- (void)_drawShadow:(CDStruct_1b570c92)arg1 forGlyphs:(const unsigned short *)arg2 inContext:(struct CGContext *)arg3 usingFont:(struct __CTFont *)arg4 atPositions:(const struct CGPoint *)arg5 count:(unsigned long long)arg6;
- (void)drawGlyphs:(const unsigned short *)arg1 inContext:(struct CGContext *)arg2 usingFont:(struct __CTFont *)arg3 withAdvances:(const struct CGSize *)arg4 count:(unsigned long long)arg5 lineHeight:(double)arg6 inBounds:(struct CGRect)arg7 atScale:(double)arg8;
- (void)_drawShadow:(CDStruct_1b570c92)arg1 forGlyphs:(const unsigned short *)arg2 inContext:(struct CGContext *)arg3 usingFont:(struct __CTFont *)arg4 withAdvances:(const struct CGSize *)arg5 count:(unsigned long long)arg6;
- (void)drawProcessedMask:(struct CGContext *)arg1 atBounds:(struct CGRect)arg2 inContext:(struct CGContext *)arg3 withScale:(double)arg4;
- (struct CGContext *)newGlyphMaskContextForBounds:(struct CGRect)arg1 fromContext:(struct CGContext *)arg2 withScale:(double)arg3;
- (struct CGColor *)newBackgroundPatternColorWithSize:(struct CGSize)arg1 contentScale:(double)arg2 forContext:(struct CGContext *)arg3;
- (double)effectiveInteriorFillOpacity;
- (_Bool)useCoreImageRendering;
- (id)initWithEffectPreset:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface CUIThemeDataEffectPreset : CUIShapeEffectPreset
{
}

- (id)description;
- (id)initWithEffectData:(const struct _cuieffectdata *)arg1 forScaleFactor:(double)arg2;

@end

__attribute__((visibility("hidden")))
@interface CUIThemeFacet : NSObject <CUIThemeImageSource, NSCopying, NSCoding>
{
    struct _renditionkeytoken *_renditionKeyList;
    unsigned long long _themeIndex;
    long long _renditionType;
    struct CGSize _thumbnailSize;
    struct CGPoint _hotSpot;
    struct {
        unsigned int hasCheckedButtonGlyph:1;
        unsigned int isButtonGlyph:1;
        unsigned int reserved:14;
    } _fFlags;
}

+ (_Bool)assetExistsForRenditionKey:(id)arg1 fromTheme:(unsigned long long)arg2;
+ (id)cursorFacetWithName:(id)arg1 fromTheme:(unsigned long long)arg2;
+ (id)_facetWithKeyList:(const struct _renditionkeytoken *)arg1 andRenditionKeyClass:(Class)arg2 orRenditionKey:(id)arg3 fromTheme:(unsigned long long)arg4;
+ (id)facetWithRenditionKey:(id)arg1 fromTheme:(unsigned long long)arg2;
+ (id)facetWithElement:(long long)arg1 part:(long long)arg2 dimension1:(long long)arg3 dimension2:(long long)arg4 fromTheme:(unsigned long long)arg5;
+ (id)facetWithElement:(long long)arg1 part:(long long)arg2 fromTheme:(unsigned long long)arg3;
+ (id)debug_bundleIdentifierForThemeRef:(unsigned long long)arg1;
+ (unsigned long long)themeWithContentsOfURL:(id)arg1 error:(id *)arg2;
+ (unsigned long long)themeForBundleIdentifier:(id)arg1 error:(id *)arg2;
+ (unsigned long long)themeNamed:(id)arg1 forBundleIdentifier:(id)arg2 error:(id *)arg3;
+ (void)initialize;
+ (id)_themeStoreForThemeIndex:(unsigned long long)arg1;
+ (void)_invalidateArtworkCaches;
- (id)maskWithSize:(struct CGSize)arg1 keyAdjustment:(id)arg2;
- (id)highlightWithSize:(struct CGSize)arg1 keyAdjustment:(id)arg2;
- (id)imageWithSize:(struct CGSize)arg1 keyAdjustment:(id)arg2;
- (id)imageForSlice:(long long)arg1 withKeyAdjustment:(id)arg2;
- (id)maskForSlice:(long long)arg1 withKeyAdjustment:(id)arg2;
@property(readonly, copy) NSString *description;
- (long long)_sliceIndexForSlice:(long long)arg1 ofRendition:(id)arg2;
- (void)_applyFixedAttributesToKey:(id)arg1;
- (struct CGSize)topLeftCapSize;
- (struct CGSize)thumbnailSize;
- (id)thumbnail;
- (id)displayName;
- (long long)renditionType;
- (id)renditionKey;
- (id)themeRendition;
- (unsigned long long)themeIndex;
- (void)_setThemeIndex:(unsigned long long)arg1;
- (id)gradientWithKeyAdjustment:(id)arg1 angle:(double *)arg2 style:(unsigned long long *)arg3;
- (struct CGSize)imageSize;
- (id)blendModeAsCAFilterString;
- (int)blendMode;
- (double)alpha;
- (id)image;
- (id)imageForSliceIndex:(long long)arg1;
- (id)imageWithKeyAdjustment:(id)arg1;
- (id)imageForState:(long long)arg1 value:(long long)arg2 size:(unsigned long long)arg3;
- (id)imageForState:(long long)arg1 value:(long long)arg2;
- (_Bool)isValidButtonImageSource;
- (_Bool)isValidButtonImageSourceForSize:(unsigned long long)arg1;
- (_Bool)hasValueSlices;
- (id)imageForState:(long long)arg1 withValue:(long long)arg2;
- (id)imageForState:(long long)arg1;
- (id)renditionSliceInformationForRect:(struct CGRect)arg1 keyAdjustment:(id)arg2;
- (id)renditionMetricsWithKeyAdjustment:(id)arg1;
- (void)_drawSlice:(long long)arg1 inFrame:(struct CGRect)arg2 withKeyAdjustment:(id)arg3 context:(struct CGContext *)arg4;
- (void)_drawSpecificRenditionKey:(id)arg1 rendition:(id)arg2 inFrame:(struct CGRect)arg3 context:(struct CGContext *)arg4 alpha:(double)arg5 operation:(int)arg6 isFocused:(int)arg7 isFlipped:(_Bool)arg8;
- (void)_drawSpecificRenditionKey:(id)arg1 inFrame:(struct CGRect)arg2 context:(struct CGContext *)arg3 alpha:(double)arg4 operation:(int)arg5 isFocused:(int)arg6 isFlipped:(_Bool)arg7;
- (void)_drawSpecificRenditionKey:(id)arg1 inFrame:(struct CGRect)arg2 context:(struct CGContext *)arg3 isFocused:(int)arg4 isFlipped:(_Bool)arg5;
- (void)_drawAsMaskSpecificRenditionKey:(id)arg1 inFrame:(struct CGRect)arg2 context:(struct CGContext *)arg3 alpha:(double)arg4 operation:(int)arg5 isFocused:(int)arg6;
- (id)renditionForSpecificKeyWrapper:(id)arg1;
- (void)_drawMaskFromSpecificRenditionKey:(id)arg1 inFrame:(struct CGRect)arg2 alpha:(double)arg3 operation:(int)arg4 isFocused:(int)arg5 context:(struct CGContext *)arg6;
- (void)drawPulseInFrame:(struct CGRect)arg1 pulseValue:(double)arg2 isFocused:(int)arg3 keyAdjustment:(id)arg4 context:(struct CGContext *)arg5;
- (void)drawMaskInFrame:(struct CGRect)arg1 alpha:(double)arg2 operation:(int)arg3 isFocused:(int)arg4 keyAdjustment:(id)arg5 context:(struct CGContext *)arg6;
- (void)drawMaskInFrame:(struct CGRect)arg1 alpha:(double)arg2 isFocused:(int)arg3 keyAdjustment:(id)arg4 context:(struct CGContext *)arg5;
- (void)drawHighlightInFrame:(struct CGRect)arg1 alpha:(double)arg2 operation:(int)arg3 keyAdjustment:(id)arg4 context:(struct CGContext *)arg5;
- (void)drawHighlightInFrame:(struct CGRect)arg1 alpha:(double)arg2 keyAdjustment:(id)arg3 context:(struct CGContext *)arg4;
- (void)drawInFrame:(struct CGRect)arg1 alpha:(double)arg2 operation:(int)arg3 isFocused:(int)arg4 keyAdjustment:(id)arg5 context:(struct CGContext *)arg6;
- (void)drawInFrame:(struct CGRect)arg1 alpha:(double)arg2 isFocused:(int)arg3 keyAdjustment:(id)arg4 context:(struct CGContext *)arg5;
- (void)drawGradientInFrame:(struct CGRect)arg1 angle:(double)arg2 alpha:(double)arg3 operation:(int)arg4 isFocused:(int)arg5 keyAdjustment:(id)arg6 context:(struct CGContext *)arg7;
- (void)drawHighlightInFrame:(struct CGRect)arg1 alpha:(double)arg2 operation:(int)arg3 owner:(id)arg4 userInfo:(id)arg5 context:(struct CGContext *)arg6;
- (void)drawInFrame:(struct CGRect)arg1 alpha:(double)arg2 operation:(int)arg3 owner:(id)arg4 userInfo:(id)arg5 context:(struct CGContext *)arg6;
- (void)drawPulseInFrame:(struct CGRect)arg1 pulseValue:(double)arg2 owner:(id)arg3 userInfo:(id)arg4 context:(struct CGContext *)arg5;
- (void)drawMaskInFrame:(struct CGRect)arg1 alpha:(double)arg2 owner:(id)arg3 userInfo:(id)arg4 context:(struct CGContext *)arg5;
- (void)drawHighlightInFrame:(struct CGRect)arg1 alpha:(double)arg2 owner:(id)arg3 userInfo:(id)arg4 context:(struct CGContext *)arg5;
- (void)drawInFrame:(struct CGRect)arg1 alpha:(double)arg2 owner:(id)arg3 userInfo:(id)arg4 context:(struct CGContext *)arg5;
- (_Bool)hitTestAtPoint:(struct CGPoint)arg1 inFrame:(struct CGRect)arg2 owner:(id)arg3 userInfo:(id)arg4;
- (_Bool)_canGetRenditionForKey:(id)arg1 withDrawingLayer:(long long)arg2;
- (void)drawMaskInFrame:(struct CGRect)arg1 owner:(id)arg2 userInfo:(id)arg3 context:(struct CGContext *)arg4;
- (void)drawHighlightInFrame:(struct CGRect)arg1 owner:(id)arg2 userInfo:(id)arg3 context:(struct CGContext *)arg4;
- (void)drawInFrame:(struct CGRect)arg1 owner:(id)arg2 userInfo:(id)arg3 context:(struct CGContext *)arg4;
- (void)drawSegmentInFrame:(struct CGRect)arg1 isFocused:(int)arg2 segmentType:(int)arg3 context:(struct CGContext *)arg4;
- (void)drawAnimationFrameMappedFrom0_1RangedValue:(double)arg1 destinationFrame:(struct CGRect)arg2 isFocused:(int)arg3 context:(struct CGContext *)arg4;
- (void)drawAbsoluteAnimationFrame:(double)arg1 destinationFrame:(struct CGRect)arg2 isFocused:(int)arg3 context:(struct CGContext *)arg4;
- (void)drawAsOnePartWithSlice:(int)arg1 inFrame:(struct CGRect)arg2 isFocused:(int)arg3 context:(struct CGContext *)arg4;
- (void)drawInFrame:(struct CGRect)arg1 alpha:(double)arg2 operation:(int)arg3 isFocused:(int)arg4 context:(struct CGContext *)arg5;
- (void)drawInFrame:(struct CGRect)arg1 alpha:(double)arg2 isFocused:(int)arg3 context:(struct CGContext *)arg4;
- (void)drawInFrame:(struct CGRect)arg1 isFocused:(int)arg2 context:(struct CGContext *)arg3;
- (void)updateLayer:(id)arg1;
- (id)makeLayer;
- (struct CGImage *)copyLayerImageContentsAndCenter:(struct CGRect *)arg1;
- (struct CGImage *)copyLayerImageContentsAndCenter:(struct CGRect *)arg1 renditionKey:(id)arg2;
- (void)setControlSize:(long long)arg1;
- (long long)controlSize;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)init;
- (id)initWithRenditionKey:(id)arg1 fromTheme:(unsigned long long)arg2;
- (void)_initWithRenditionKey:(id)arg1;
- (id)_imageForRenditionFromKey:(id)arg1 withSize:(struct CGSize)arg2 isMask:(_Bool)arg3;
- (_Bool)_isButtonGlyph;
- (void)_setIsButtonGlyph:(_Bool)arg1;
- (void)_setHasCheckedButtonGlyph:(_Bool)arg1;
- (struct CGSize)_thumbnailSizeForRendition:(id)arg1;
- (id)_rendition;
- (id)_renditionForSpecificKey:(id)arg1;
- (id)_approximateRenditionForRenditionKey:(id)arg1;
- (void)_updateSpecificRenditionKey:(id)arg1 isFocused:(_Bool *)arg2 owner:(id)arg3 userInfo:(id)arg4;
- (struct CGPoint)_hotSpot;
- (id)_themeStore;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface CUIThemeGradient : NSObject <CUIThemeGradientDrawing>
{
    id gradientEvaluator;
    struct CGFunction *colorShader;
    struct CGColorSpace *colorSpace;
}

- (id)interpolatedColorAtLocation:(double)arg1;
- (void)drawFromPoint:(struct CGPoint)arg1 toPoint:(struct CGPoint)arg2 options:(unsigned long long)arg3 withContext:(struct CGContext *)arg4;
- (void)drawInRect:(struct CGRect)arg1 relativeCenterPosition:(struct CGPoint)arg2 withContext:(struct CGContext *)arg3;
- (void)drawFromPoint:(struct CGPoint)arg1 toPoint:(struct CGPoint)arg2 options:(unsigned long long)arg3;
- (void)drawInRect:(struct CGRect)arg1 angle:(double)arg2;
- (void)drawInRect:(struct CGRect)arg1 angle:(double)arg2 withContext:(struct CGContext *)arg3;
- (struct CGFunction *)colorShader;
- (struct CGFunction *)_newColorShaderForDistance:(double)arg1;
- (void)dealloc;
- (int)blendMode;
- (id)fillColor;
- (_Bool)isDithered;
- (double)smoothingCoefficient;
- (id)opacityLocations;
- (id)opacityStops;
- (id)colorLocations;
- (id)colorStops;
- (id)_colorFromPSDGradientColor:(struct _psdGradientColor)arg1;
- (id)initWithColors:(id)arg1 colorlocations:(id)arg2 colorMidpoints:(id)arg3 opacities:(id)arg4 opacityLocations:(id)arg5 opacityMidpoints:(id)arg6 smoothingCoefficient:(double)arg7 fillColor:(id)arg8 colorSpace:(struct CGColorSpace *)arg9 dither:(_Bool)arg10;
- (id)initWithColors:(id)arg1 colorlocations:(id)arg2 colorMidpoints:(id)arg3 opacities:(id)arg4 opacityLocations:(id)arg5 opacityMidpoints:(id)arg6 smoothingCoefficient:(double)arg7 fillColor:(id)arg8 colorSpace:(struct CGColorSpace *)arg9;
- (id)_initWithGradientEvaluator:(id)arg1 colorSpace:(struct CGColorSpace *)arg2;
- (id)_psdGradientColorStopsWithColors:(id)arg1 locations:(id)arg2 colorSpace:(struct CGColorSpace *)arg3;
- (struct _psdGradientColor)_psdGradientColorWithColor:(id)arg1 colorSpace:(struct CGColorSpace *)arg2;
- (id)_psdGradientOpacityStopsWithOpacities:(id)arg1 locations:(id)arg2;

@end

@interface CUIThemeSchema : NSObject
{
}

+ (id)schemaForPlatform:(long long)arg1;
+ (id)defaultSchema;
- (id)schemaEffectRenditionsForPartDefinition:(const CDStruct_26b2aa83 *)arg1;
- (unsigned long long)partDefinitionCountForEffectDefinition:(const CDStruct_e3362728 *)arg1;
- (unsigned long long)effectDefinitionCount;
- (const CDStruct_e3362728 *)effectDefinitionWithName:(id)arg1;
- (const CDStruct_e3362728 *)sortedEffectDefinitionAtIndex:(unsigned long long)arg1;
- (const CDStruct_e3362728 *)effectDefinitionAtIndex:(unsigned long long)arg1;
- (const CDStruct_c77fb927 *)categoryForElementDefinition:(const CDStruct_e3362728 *)arg1;
- (void)enumerateAvailableValuesForThemeAttribute:(int)arg1 inPartDefinition:(const CDStruct_26b2aa83 *)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)enumerateAvailableThemeAttributesInPartDefinition:(const CDStruct_26b2aa83 *)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (id)schemaRenditionsForPartDefinition:(const CDStruct_26b2aa83 *)arg1;
- (const CDStruct_26b2aa83 *)partDefinitionForWidgetName:(id)arg1;
- (id)widgetNameForPartDefinition:(const CDStruct_26b2aa83 *)arg1;
- (const CDStruct_26b2aa83 *)partDefinitionWithName:(id)arg1 forElementDefinition:(const CDStruct_e3362728 *)arg2;
- (const CDStruct_e3362728 *)elementDefinitionWithName:(id)arg1;
- (unsigned long long)dimensionDefinitionCountForPartDefinition:(const CDStruct_26b2aa83 *)arg1;
- (unsigned long long)partDefinitionCountForElementDefinition:(const CDStruct_e3362728 *)arg1;
- (const CDStruct_e3362728 *)sortedElementDefinitionAtIndex:(unsigned long long)arg1;
- (unsigned long long)elementDefinitionCount;
- (const CDStruct_e3362728 *)elementDefinitionAtIndex:(unsigned long long)arg1;
- (unsigned long long)elementCategoryCount;
- (const CDStruct_c77fb927 *)elementCategoryAtIndex:(unsigned long long)arg1;
- (long long)schemaVersion;

@end

__attribute__((visibility("hidden")))
@interface CUIThemeSchemaEffectRendition : CUIThemeRendition
{
    NSDictionary *_cuiInfo;
    CUIShapeEffectPreset *_effectPreset;
    CUIImage *_referenceImage;
}

- (id)effectPreset;
- (id)referenceImage;
- (_Bool)_generateReferenceImage;
- (void)dealloc;
- (id)coreUIOptions;
- (void)_initializeCoreUIOptions:(id)arg1;
- (id)initWithCoreUIOptions:(id)arg1 forKey:(const struct _renditionkeytoken *)arg2 artworkStatus:(long long)arg3;
- (id)initWithCoreUIOptions:(id)arg1 forKey:(const struct _renditionkeytoken *)arg2;

@end

__attribute__((visibility("hidden")))
@interface CUIThemeSchemaLayer : NSObject
{
    NSArray *_renditions;
    NSString *_name;
    unsigned long long _index;
}

+ (id)layerWithRenditions:(id)arg1 name:(id)arg2 index:(unsigned long long)arg3;
@property(nonatomic) unsigned long long index; // @synthesize index=_index;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
@property(retain, nonatomic) NSArray *renditions; // @synthesize renditions=_renditions;
- (void)calculateColumLefts:(id *)arg1 rowTops:(id *)arg2 totalSize:(struct CGSize *)arg3 forPartFeatures:(unsigned long long)arg4;
- (double)translateFromWidthsOrHeightsToLeftsOrTops:(id)arg1 leftsOrTops:(id *)arg2;
- (id)initWithRenditions:(id)arg1 name:(id)arg2 index:(unsigned long long)arg3;

@end

__attribute__((visibility("hidden")))
@interface CUIThemeSchemaPSDLayer : NSObject
{
    NSString *name;
}

@property(retain, nonatomic) NSString *name; // @synthesize name;
- (void)dealloc;

@end

@interface CUIThemeSchemaPSDLayerGroup : CUIThemeSchemaPSDLayer
{
    _Bool isStart;
}

@property(nonatomic) _Bool isStart; // @synthesize isStart;

@end

@interface CUIThemeSchemaPSDRenditionLayer : CUIThemeSchemaPSDLayer
{
    CUIThemeSchemaRendition *rendition;
}

@property(retain, nonatomic) CUIThemeSchemaRendition *rendition; // @synthesize rendition;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface CUIThemeSchemaRendition : CUIThemeRendition
{
    NSDictionary *cuiInfo;
    unsigned long long _nimages;
    struct CGImage *_image[9];
    struct CGRect _layoutRects[9];
    struct CGSize _intrinsicSize;
    struct CGRect _elementRect;
    long long _columnSlices;
    long long _rowSlices;
    CDStruct_3c058996 _contentInsets;
    CUIPSDGradient *_gradient;
}

- (id).cxx_construct;
- (id)scaleLocalizedString;
- (id)lookLocalizedString;
- (id)drawingLayerLocalizedString;
- (id)dimension2LocalizedString;
- (id)dimension1LocalizedString;
- (id)presentationStateLocalizedString;
- (id)sizeLocalizedString;
- (id)previousValueLocalizedString;
- (id)valueLocalizedString;
- (id)stringForValue:(unsigned short)arg1;
- (id)directionLocalizedString;
- (id)previousStateLocalizedString;
- (id)stateLocalizedString;
- (id)stringForState:(unsigned short)arg1;
- (id)typeLocalizedString;
- (id)description;
- (unsigned short)layer;
- (unsigned short)identifier;
- (unsigned short)keyScale;
- (unsigned short)look;
- (unsigned short)drawingLayer;
- (unsigned short)dimension2;
- (unsigned short)dimension1;
- (unsigned short)size;
- (unsigned short)previousValue;
- (unsigned short)value;
- (unsigned short)direction;
- (unsigned short)presentationState;
- (unsigned short)previousState;
- (unsigned short)state;
- (struct CGPoint)renditionCoordinatesForPartFeatures:(long long)arg1;
- (long long)rowSlices;
- (long long)columnSlices;
- (id)defaultTemplateName;
- (id)referenceImage;
- (id)coreUIOptions;
- (CDStruct_3c058996)contentInsets;
- (struct CGRect)edgeInsets:(_Bool)arg1;
- (struct CGRect)alignmentRectangle;
- (id)slices;
- (double)scale;
- (void)dealloc;
- (id)initWithCoreUIOptions:(id)arg1 forKey:(const struct _renditionkeytoken *)arg2 artworkStatus:(long long)arg3;
- (id)initWithCoreUIOptions:(id)arg1 forKey:(const struct _renditionkeytoken *)arg2;
@property(readonly, nonatomic) CUIPSDGradient *gradient;
@property(readonly, nonatomic) struct CGRect *sliceRects;
@property(readonly, nonatomic) unsigned long long numberOfSlices;

@end

@interface CUIThemeSchemaRenditionGroup : NSObject
{
    CUIRenditionKey *_baseKey;
    NSArray *_renditions;
    CDStruct_26b2aa83 *_part;
}

+ (id)renditionGroupsForRenditions:(id)arg1 part:(CDStruct_26b2aa83 *)arg2;
@property(retain, nonatomic) NSArray *renditions; // @synthesize renditions=_renditions;
- (void)dealloc;
- (long long)partFeatures;
- (void)addValueOrDim1LayersToPSDLayers:(id)arg1 forPresentationState:(unsigned long long)arg2 state:(unsigned long long)arg3 drawingLayer:(unsigned long long)arg4;
- (void)addStatesAndDrawingLayersToPSDLayers:(id)arg1 forPresentationState:(unsigned long long)arg2;
- (id)schemaLayersAndLayerGroups;
- (id)themeSchemaLayers;
- (id)_layerNameForDrawingLayer:(long long)arg1;
- (id)_layerNameForState:(long long)arg1;
- (id)_renditionsSortedIntoLayers;
- (id)description;
- (id)mutablePSDImageRefColumnStyle;
- (id)mutablePSDImageRef;
- (void)addLayoutMetricsToPSDImageRef:(id)arg1 withRendition:(id)arg2;
- (id)baseKey;
- (id)initWithRenditions:(id)arg1 part:(CDStruct_26b2aa83 *)arg2;

@end

__attribute__((visibility("hidden")))
@interface CoreUI : NSObject
{
}

+ (_Bool)isSharedCacheSizeTestEnabled;
+ (id)versionCreditsString;
+ (void)installForCustomLook:(id)arg1;
+ (void)_setCustomLookDelegate:(id)arg1;
+ (id)_customLookDelegate;
+ (void)install;
+ (_Bool)_isInIBCocoaSimulator;
+ (void)_determineCompatibilityMode;
+ (id)defaultsDomainName;
+ (void)setBool:(_Bool)arg1 forDefaultsKey:(id)arg2;
+ (void)setValue:(id)arg1 forDefaultsKey:(id)arg2;
+ (long long)integerForDefaultsKey:(id)arg1;
+ (id)stringForDefaultsKey:(id)arg1;
+ (_Bool)boolForDefaultsKey:(id)arg1;
+ (_Bool)defaultExistsForKey:(id)arg1;
+ (long long)lookCongruencyForObject:(id)arg1;
+ (struct _themelook *)currentSystemThemeLook;
+ (void)changeToLook:(struct _themelook *)arg1;
+ (void)_invalidateVisibleWindows;
+ (_Bool)_isCurrentLook:(struct _themelook *)arg1;
+ (void)_setCurrentSystemThemeLook:(struct _themelook *)arg1;
+ (void)_updateMenuBarDrawingStyleForLook:(struct _themelook *)arg1;
+ (_Bool)_hasDarkMenuBarForLook:(struct _themelook *)arg1;
+ (void)_setThemeLookDelegate:(id)arg1;
+ (id)_themeLookDelegate;
+ (long long)maximumLookGradation;
+ (long long)currentLookGradation;
+ (void)changeToLookGradation:(long long)arg1;
+ (void)_changeToLookGradation:(long long)arg1 forceRedraw:(_Bool)arg2;

@end

@interface NSCoder (ProThemeAdditions)
- (unsigned long long)decodeThemeForKey:(id)arg1;
- (unsigned long long)decodeTheme;
- (void)encodeTheme:(unsigned long long)arg1 forKey:(id)arg2;
- (void)encodeTheme:(unsigned long long)arg1;
@end

__attribute__((visibility("hidden")))
@interface _CSIRenditionBlockData : NSObject
{
    unsigned int _dataPixelFormat;
    int _pixelFormat;
    char *_data;
    unsigned int _nrows;
    unsigned long long _rowbytes;
    char _name[128];
    unsigned char _imageBlockReleaseCount;
    unsigned int _mmappedData:1;
}

+ (id)sharedCache;
- (void)_makeReadOnly;
- (void)_freeImageBytes;
- (void)_allocateImageBytes;
- (void)expandCSIBitmapData:(struct _csibitmap *)arg1 fromSlice:(struct _slice)arg2 makeReadOnly:(_Bool)arg3;
- (void)dealloc;
- (void)tallyImageBlockRelease;
- (_Bool)wasUsedTransiently;
- (int)pixelFormat;
- (const char *)bytes;
- (unsigned int)nrows;
- (unsigned long long)rowbytes;
- (void)updateFromCSIHeader:(const struct _csiheader *)arg1;
- (id)initWithPixelWidth:(unsigned int)arg1 pixelHeight:(unsigned int)arg2 pixelFormat:(int)arg3;

@end

__attribute__((visibility("hidden")))
@interface _CUIKeyTestOrganizer : NSObject
{
    struct _renditionkeytoken originalKey[16];
    NSArray *orderedNonZeroFlexibleAttributes;
    unsigned long long flexAttributesCount;
    struct _renditionkeytoken testKey[16];
    unsigned long long chooseCount;
    unsigned long long subchooseCount;
}

- (struct _renditionkeytoken *)nextKey;
- (void)dealloc;
- (id)initWithRenditionKey:(const struct _renditionkeytoken *)arg1;
- (void)_bumpTestKey;
- (_Bool)_bumpTestKeyAttributeIndex:(unsigned long long)arg1;
- (unsigned long long)_attributeToBumpIndex;
- (id)_nonZeroFlexibleAttributesInKey:(const struct _renditionkeytoken *)arg1;

@end

__attribute__((visibility("hidden")))
@interface _CUIMacOSThemeSchema : CUIThemeSchema
{
}

@end

__attribute__((visibility("hidden")))
@interface _CUINineImagePieces : NSObject
{
    CUIImage *_center;
    CUIImage *_topLeft;
    CUIImage *_top;
    CUIImage *_topRight;
    CUIImage *_right;
    CUIImage *_bottomRight;
    CUIImage *_bottom;
    CUIImage *_bottomLeft;
    CUIImage *_left;
    _Bool _tileCenterAndEdges;
}

- (_Bool)tileCenterAndEdges;
- (id)left;
- (id)bottomLeft;
- (id)bottom;
- (id)bottomRight;
- (id)right;
- (id)topRight;
- (id)top;
- (id)topLeft;
- (id)center;
- (void)dealloc;
- (id)initWithCenter:(id)arg1 topLeft:(id)arg2 top:(id)arg3 topRight:(id)arg4 right:(id)arg5 bottomRight:(id)arg6 bottom:(id)arg7 bottomLeft:(id)arg8 left:(id)arg9 tileCenterAndEdges:(_Bool)arg10;

@end

__attribute__((visibility("hidden")))
@interface _CUIPDFRendition : CUIThemeRendition
{
    struct CGPDFDocument *_pdfDocument;
}

- (struct CGPDFDocument *)pdfDocument;
- (id)_initWithCSIHeader:(const struct _csiheader *)arg1;
- (void)dealloc;
- (id)initWithCSIData:(id)arg1 forKey:(const struct _renditionkeytoken *)arg2 artworkStatus:(long long)arg3;

@end

__attribute__((visibility("hidden")))
@interface _CUIPSDStopAndMidpointPair : NSObject
{
    id stop;
    double midpoint;
}

- (double)midpoint;
- (id)stop;
- (long long)compare:(id)arg1;
- (void)dealloc;
- (id)initWithStop:(id)arg1 midpoint:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface _CUIPSDSublayerInfo : NSObject
{
    unsigned int _numOfSublayers;
}

+ (id)newWithSublayerCount:(unsigned int)arg1 indexSet:(id)arg2;
- (unsigned int)sublayerAtIndex:(unsigned int)arg1 isValid:(_Bool *)arg2;
- (unsigned int)numberOfSublayers;

@end

__attribute__((visibility("hidden")))
@interface _CUIRawDataRendition : CUIThemeRendition
{
    struct __CFData *_dataBytes;
}

- (id)data;
- (id)_initWithCSIHeader:(const struct _csiheader *)arg1;
- (void)dealloc;
- (id)initWithCSIData:(id)arg1 forKey:(const struct _renditionkeytoken *)arg2 artworkStatus:(long long)arg3;

@end

__attribute__((visibility("hidden")))
@interface _CUIRawPixelRendition : CUIThemeRendition
{
    unsigned int _nimages;
    struct CGImage *_image[16];
    struct CGImage *_unslicedImage;
    CUIRenditionMetrics *_renditionMetrics;
    CUIRenditionSliceInformation *_sliceInformation;
}

- (_Bool)isScaled;
- (id)metrics;
- (id)sliceInformation;
- (id)maskForSliceIndex:(long long)arg1;
- (id)imageForSliceIndex:(long long)arg1;
- (struct CGImage *)unslicedImage;
- (id)_initWithCSIHeader:(const struct _csiheader *)arg1;
- (void)dealloc;
- (id)initWithCSIData:(id)arg1 forKey:(const struct _renditionkeytoken *)arg2 artworkStatus:(long long)arg3;

@end

__attribute__((visibility("hidden")))
@interface _CUIThemeEffectRendition : CUIThemeRendition
{
    const struct _cuieffectdata *effectData;
}

+ (id)_filteredCSIDataFromBaseCSIData:(id)arg1;
- (id)effectPreset;
- (id)_initWithCSIHeader:(const struct _csiheader *)arg1;

@end

__attribute__((visibility("hidden")))
@interface _CUIThemeFacetCacheKey : NSObject
{
    struct _renditionkeytoken keyList[16];
    long long themeIndex;
    unsigned long long hashPrecalc;
}

- (id)copyWithZone:(struct _NSZone *)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)initWithKeyList:(const struct _renditionkeytoken *)arg1 themeIndex:(long long)arg2;
- (unsigned long long)hash64;

@end

__attribute__((visibility("hidden")))
@interface _CUIThemeGradientRendition : CUIThemeRendition
{
    CUIThemeGradient *gradient;
    double gradientAngle;
}

+ (struct __CUIThemeGradientRenditionInitializerStruct)_parseGradientInfoFromCSIHeader:(const struct _csiheader *)arg1;
+ (id)_nodesFromNodeList:(struct _csigradientdatanode *)arg1 count:(unsigned long long)arg2 header:(const struct _csiheader *)arg3;
- (unsigned int)gradientStyle;
- (id)gradient;
- (double)gradientDrawingAngle;
- (void)dealloc;
- (id)_initWithCSIHeader:(const struct _csiheader *)arg1;
- (id)initWithCSIData:(id)arg1 forKey:(const struct _renditionkeytoken *)arg2 artworkStatus:(long long)arg3;

@end

__attribute__((visibility("hidden")))
@interface _CUIThemePixelRendition : CUIThemeRendition
{
    unsigned int nimages;
    struct CGImage *image[16];
    struct CGImage *unslicedImage;
    CUIRenditionMetrics *_renditionMetrics;
    CUIRenditionSliceInformation *_sliceInformation;
    _CSIRenditionBlockData *_cachedBlockDataBGRX;
    _CSIRenditionBlockData *_cachedBlockDataRGBX;
}

- (_Bool)isScaled;
- (_Bool)isTiled;
- (id)sliceInformation;
- (id)metrics;
- (id)maskForSliceIndex:(long long)arg1;
- (id)imageForSliceIndex:(long long)arg1;
- (struct CGImage *)unslicedImage;
- (void)dealloc;
- (void)setSharedBlockData:(id)arg1;
- (id)copySharedBlockDataWithPixelFormat:(int)arg1;
- (id)_initWithCSIHeader:(const struct _csiheader *)arg1;
- (struct CGImage *)newImageFromCSIDataSlice:(struct _slice)arg1 ofBitmap:(struct _csibitmap *)arg2 usingColorspace:(struct CGColorSpace *)arg3;
- (id)initWithCSIData:(id)arg1 forKey:(const struct _renditionkeytoken *)arg2 artworkStatus:(long long)arg3;

@end

__attribute__((visibility("hidden")))
@interface _CUIiPhoneOSThemeSchema : CUIThemeSchema
{
}

- (id)schemaEffectRenditionsForPartDefinition:(const CDStruct_26b2aa83 *)arg1;
- (const CDStruct_e3362728 *)effectDefinitionWithName:(id)arg1;
- (unsigned long long)effectDefinitionCount;
- (const CDStruct_e3362728 *)sortedEffectDefinitionAtIndex:(unsigned long long)arg1;
- (const CDStruct_e3362728 *)_sortedEffectDefinitions;
- (const CDStruct_e3362728 *)effectDefinitionAtIndex:(unsigned long long)arg1;
- (id)schemaRenditionsForPartDefinition:(const CDStruct_26b2aa83 *)arg1;
- (id)widgetNameForPartDefinition:(const CDStruct_26b2aa83 *)arg1;
- (const CDStruct_c77fb927 *)categoryForElementDefinition:(const CDStruct_e3362728 *)arg1;
- (const CDStruct_e3362728 *)elementDefinitionWithName:(id)arg1;
- (unsigned long long)elementDefinitionCount;
- (const CDStruct_e3362728 *)sortedElementDefinitionAtIndex:(unsigned long long)arg1;
- (const CDStruct_e3362728 *)_sortedElementDefinitions;
- (const CDStruct_e3362728 *)elementDefinitionAtIndex:(unsigned long long)arg1;
- (unsigned long long)elementCategoryCount;
- (const CDStruct_c77fb927 *)elementCategoryAtIndex:(unsigned long long)arg1;
- (long long)schemaVersion;

@end

__attribute__((visibility("hidden")))
@interface _SchemaRenditionTuple : NSObject
{
    struct _renditionkeytoken key[16];
    NSMutableDictionary *info;
}

- (id)description;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;

@end

