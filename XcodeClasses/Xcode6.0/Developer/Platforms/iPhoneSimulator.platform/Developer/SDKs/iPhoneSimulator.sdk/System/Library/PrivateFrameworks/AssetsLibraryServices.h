//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct _NSRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

#pragma mark Typedef'd Structures

typedef struct {
    unsigned char _field1;
    unsigned char _field2;
    unsigned char _field3;
    unsigned char _field4;
    unsigned char _field5;
    unsigned char _field6;
    unsigned char _field7;
    unsigned char _field8;
    unsigned char _field9;
    unsigned char _field10;
    unsigned char _field11;
    unsigned char _field12;
    unsigned char _field13;
    unsigned char _field14;
    unsigned char _field15;
    unsigned char _field16;
} CDStruct_bd2f613f;

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/AssetsLibraryServices.framework/AssetsLibraryServices
// UUID: 033610DB-78D7-3926-A7C1-A6ECAAE39457
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 2369.0.0.0.0
//            Minimum iOS version: 8.0.0
//                    SDK version: 8.0.0
//
// Objective-C Garbage Collection: Unsupported
//

@interface PLCIFilterUtilities : NSObject
{
}

+ (id)outputImageFromFilters:(id)arg1 inputImage:(id)arg2 orientation:(int)arg3 copyFiltersFirst:(_Bool)arg4;
+ (id)filterCopiesFromFilters:(id)arg1;

@end

@interface PLCPLDownloadContext : NSObject
{
    _Bool _completed;
    NSString *_taskIdentifier;
    NSString *_resourceTypeDescription;
    double _progress;
    NSError *_error;
    double _updateLastQueuedTime;
}

@property double updateLastQueuedTime; // @synthesize updateLastQueuedTime=_updateLastQueuedTime;
@property(retain) NSError *error; // @synthesize error=_error;
@property _Bool completed; // @synthesize completed=_completed;
@property double progress; // @synthesize progress=_progress;
@property(retain) NSString *resourceTypeDescription; // @synthesize resourceTypeDescription=_resourceTypeDescription;
@property(retain) NSString *taskIdentifier; // @synthesize taskIdentifier=_taskIdentifier;
- (void)dealloc;
- (id)description;

@end

@interface PLDiskController : NSObject
{
    double _lastFSCheck;
    long long _bytesRequiredForPhoto;
    struct {
        unsigned int needToCheckDiskSpace:1;
        unsigned int probablyLowOnDiskSpace:1;
        unsigned int isAssetsd:1;
        unsigned int extra:28;
    } _flags;
}

+ (long long)freeDiskSpaceThreshold;
+ (long long)diskSpaceAvailableForUse;
+ (id)sharedInstance;
- (long long)bytesToAutomaticallyClear;
- (_Bool)hasEnoughDiskToTakePicture;
- (void)updateAvailableDiskSpace;
- (void)_updateCookie;
- (void)_actuallyUpdateCookie;
- (void)_diskSpaceDidBecomeLow;
- (id)init;
- (void)dealloc;

@end

@interface PLFileSystemPersistence : NSObject
{
    NSObject<OS_dispatch_queue> *_writerQueue;
}

+ (void)persistMetadata:(id)arg1 fileURL:(id)arg2;
+ (void)persistString:(id)arg1 forKey:(id)arg2 fileURL:(id)arg3;
+ (void)persistUInt16:(unsigned short)arg1 forKey:(id)arg2 fileURL:(id)arg3;
+ (void)persistUUIDString:(id)arg1 forKey:(id)arg2 fileURL:(id)arg3;
+ (id)persistedAttributesForFileAtURL:(id)arg1;
+ (void)persistData:(id)arg1 forKey:(id)arg2 fileURL:(id)arg3;
+ (id)filesystemPersistenceBatchItemForFileAtURL:(id)arg1;
+ (id)sharedInstance;
- (void)backgroundWriteData:(id)arg1 toFileAtURL:(id)arg2;
- (void)dealloc;
- (id)init;

@end

@interface PLFileSystemPersistenceAttributes : NSObject
{
    NSDictionary *_attributes;
}

- (id)description;
- (id)stringForKey:(id)arg1;
- (_Bool)getUInt16:(unsigned short *)arg1 forKey:(id)arg2;
- (id)UUIDStringForKey:(id)arg1;
- (id)dataForKey:(id)arg1;
- (void)dealloc;
- (id)initWithAttributes:(id)arg1;

@end

@interface PLFileSystemPersistenceBatchItem : NSObject
{
    NSURL *fileURL;
    NSMutableDictionary *attributes;
}

@property(retain, nonatomic) NSMutableDictionary *attributes; // @synthesize attributes;
@property(retain, nonatomic) NSURL *fileURL; // @synthesize fileURL;
- (void)dealloc;
- (void)persist;
- (void)setString:(id)arg1 forKey:(id)arg2;
- (void)setUInt16:(unsigned short)arg1 forKey:(id)arg2;
- (void)setUUIDString:(id)arg1 forKey:(id)arg2;
- (void)setData:(id)arg1 forKey:(id)arg2;
- (id)description;
- (id)init;

@end

@interface PLGatekeeperClient : NSObject
{
    NSObject<OS_dispatch_queue> *_serialReplyQueue;
    NSArray *_previewRenderedContentURLs;
    NSObject<OS_xpc_object> *connection;
    NSArray *_previewAssetLocalIdentifiers;
    CDUnknownBlockType _CPLDownloadTransactionsLostHandler;
}

+ (id)securityPolicyErrorForMissingEntitlement:(id)arg1;
+ (id)sharedInstance;
@property(copy, nonatomic) CDUnknownBlockType CPLDownloadTransactionsLostHandler; // @synthesize CPLDownloadTransactionsLostHandler=_CPLDownloadTransactionsLostHandler;
@property(nonatomic) NSObject<OS_xpc_object> *connection; // @synthesize connection;
- (id)getCPLState;
@property(retain, nonatomic) NSArray *previewAssetLocalIdentifiers; // @synthesize previewAssetLocalIdentifiers=_previewAssetLocalIdentifiers;
- (id)previewRenderedContentURLAtIndex:(unsigned long long)arg1;
@property(readonly, nonatomic) unsigned long long previewRenderedContentURLCount;
- (void)setPreviewRenderedContentURLs:(id)arg1;
- (id)cacheDeleteDebug:(id)arg1;
- (void)privateDownloadCloudPhotoLibraryAsset:(id)arg1 resourceType:(unsigned long long)arg2 highPriority:(_Bool)arg3;
- (void)downloadCloudPhotoLibraryAsset:(id)arg1 resourceType:(unsigned long long)arg2 highPriority:(_Bool)arg3;
- (void)addLogMark:(id)arg1;
- (_Bool)setKeywords:(id)arg1 forAssetWithUUID:(id)arg2;
- (id)getKeywordsForAssetWithUUID:(id)arg1;
- (void)takeStatisticsSnapshotSinceDate:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)removeLocalDuplicates;
- (void)dumpCloudPhotosStatusIncludingDaemon:(_Bool)arg1;
- (void)unpauseCloudPhotos;
- (void)pauseCloudPhotos;
- (void)enableCloudPhotos:(_Bool)arg1;
- (id)dictionaryWithContentsOfMediaFilePath:(id)arg1;
- (void)softResetSyncStatusWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)syncWithCloudPhotoLibrary;
- (long long)estimatedOutputFileLengthForVideoURL:(id)arg1 fallbackFilePath:(id)arg2 exportPreset:(id)arg3 exportProperties:(id)arg4;
- (int)getCurrentModelVersion;
- (void)downloadAsset:(id)arg1 requestThumbnail:(_Bool)arg2 shouldPrioritize:(_Bool)arg3 shouldExtendTimer:(_Bool)arg4;
- (void)rebuildAllThumbnails;
- (void)resetDupesAnalysis;
- (void)rebuildCloudFeed;
- (void)getNonLocalResourceInfo:(CDUnknownBlockType)arg1;
- (void)getSearchIndexProgress:(CDUnknownBlockType)arg1;
- (void)setSearchIndexPaused:(_Bool)arg1 andWait:(_Bool)arg2;
- (void)dropSearchIndexWithCompletion:(CDUnknownBlockType)arg1;
- (void)analyzeMomentListID:(id)arg1;
- (void)analyzeMomentID:(id)arg1;
- (void)analyzeInvalidMomentsAndDupesIfNeeded;
- (void)clearUserInfluencedMoments;
- (id)allMomentsMetadataWithOutputPath:(id)arg1;
- (id)dumpMetadataForMomentsWithOutputPath:(id)arg1;
- (void)analyzeAllMoments;
- (void)rebuildMomentLists;
- (void)rebuildMomentsIncremental:(_Bool)arg1;
- (void)reloadMomentGenerationOptions;
- (void)deleteExpiredTrashBinObjects;
- (void)automaticallyDeleteEmptyAlbum:(id)arg1;
- (void)setPersonInfoDictionary:(id)arg1 forPersonID:(id)arg2;
- (id)personInfoDictionaryForPersonID:(id)arg1;
- (id)emailAddressForKey:(int)arg1;
- (int)keyForEmailAddress:(id)arg1;
- (unsigned long long)attemptToPurgeSharedAssetsSpace:(unsigned long long)arg1;
- (unsigned long long)purgeableSharedAssetsSpace;
- (void)updateSharedAlbumsCachedServerConfigurationLimits;
- (void)waitUntilConnectionSendsAllMessages;
- (void)sendDaemonJob:(id)arg1 replyHandler:(CDUnknownBlockType)arg2;
- (void)cleanupForStoreDemoMode;
- (void)clearAllBulletinsWithLastClearedRecordID:(unsigned long long)arg1;
- (id)getThumbnailImageDataForBulletinWithRecordID:(unsigned long long)arg1;
- (long long)getCurrentApplicationBadgeCount;
- (id)getCurrentBulletins;
- (void)repairSingletonObjects;
- (void)createPhotostreamAlbumWithStreamID:(id)arg1;
- (void)enablePhotostreamsWithStreamID:(id)arg1;
- (void)recoverFromCrashIfNeeded;
- (void)clearChangeStore;
- (_Bool)hasCompletedMomentAnalysis;
- (id)incompleteRestoreProcesses;
- (_Bool)hasCompletedRestorePostProcessing;
- (void)recalculateCachedAlbumCounts;
- (void)notifyAboutTerminationDueToUncaughtException:(id)arg1;
- (void)dataMigrationWillFinish;
- (void)repairPotentialModelCorruption;
- (void)cleanupModelAfteriTunesRestore;
- (unsigned long long)secondsNeededToCleanupModelAfteriTunesRestore;
- (void)writeDataInBackground:(id)arg1 toFileURL:(id)arg2;
- (void)updateRestoredAssetWithUUID:(id)arg1 paths:(id)arg2;
- (void)finalizeOTARestoreRecreatingAlbums:(_Bool)arg1;
- (void)updateModelAfterOTARestore;
- (void)updateCameraPreviewWellImage:(id)arg1;
- (void)updateThumbnailsForPhotos:(id)arg1 waitForReply:(_Bool)arg2 assignNewIndex:(_Bool)arg3 forceRefresh:(_Bool)arg4;
- (void)setLargePreviewImageForAssetWithURL:(id)arg1 imageData:(id)arg2 properties:(id)arg3 handler:(CDUnknownBlockType)arg4;
- (void)getLibrarySizes:(CDUnknownBlockType)arg1;
- (void)getPhotosAndVideosCountWithHandler:(CDUnknownBlockType)arg1;
- (void)launchAssetsd;
- (void)importFileSystemAssetsWaitingForReply:(_Bool)arg1;
- (void)createPhotoLibraryDatabase;
- (void)setExternalUsageIntent:(unsigned long long)arg1 forAssetWithURL:(id)arg2 handler:(CDUnknownBlockType)arg3;
- (void)deleteAssetWithURL:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)addAssetWithURL:(id)arg1 toAlbumWithUUID:(id)arg2 handler:(CDUnknownBlockType)arg3;
- (void)addGroupWithName:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)cancelCPLDownloadWithContext:(id)arg1;
- (void)updateStatusOfCPLDownloadWithContext:(id)arg1;
- (void)revertToOriginalForAsset:(id)arg1;
- (void)requestAdjustmentDataForAsset:(id)arg1 withDataBlob:(_Bool)arg2 networkAccessAllowed:(_Bool)arg3 trackCPLDownload:(_Bool)arg4 handler:(CDUnknownBlockType)arg5;
- (void)requestVideoURLForAsset:(id)arg1 format:(int)arg2 networkAccessAllowed:(_Bool)arg3 streamingAllowed:(_Bool)arg4 trackCPLDownload:(_Bool)arg5 handler:(CDUnknownBlockType)arg6;
- (void)requestImageDataForAsset:(id)arg1 format:(int)arg2 allowPlaceholder:(_Bool)arg3 wantURLOnly:(_Bool)arg4 networkAccessAllowed:(_Bool)arg5 trackCPLDownload:(_Bool)arg6 handler:(CDUnknownBlockType)arg7;
- (id)imageDataForAsset:(id)arg1 format:(int)arg2 allowPlaceholder:(_Bool)arg3 wantURLOnly:(_Bool)arg4 networkAccessAllowed:(_Bool)arg5 trackCPLDownload:(_Bool)arg6 outImageDataInfo:(id *)arg7 outCPLDownloadContext:(id *)arg8;
- (id)fileURLForNewAssetWithType:(unsigned int)arg1 extension:(id)arg2;
- (void)updateLocationDataForAssetUUID:(id)arg1;
- (void)batchSaveAssetsWithJobDictionaries:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)saveAssetWithJobDictionary:(id)arg1 handler:(CDUnknownBlockType)arg2 imageSurface:(void *)arg3 previewImageSurface:(void *)arg4;
- (id)fileURLForAssetURL:(id)arg1 withAdjustments:(_Bool)arg2;
- (int)fileDescriptorForAssetURL:(id)arg1 withAdjustments:(_Bool)arg2 outFileExtension:(id *)arg3;
- (int)fileDescriptorForAssetURL:(id)arg1;
- (void)requestAccessWithHandler:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (id)init;
- (id)deviceSpecificReplyQueue;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *replyQueue;
- (id)sendQueue;

@end

@interface PLImageDataInfo : NSObject
{
    _Bool _deliveredPlaceholder;
    _Bool _canDownloadFromCloud;
    long long _deliveredFormat;
    NSURL *_URL;
    NSString *_sandboxExtensionToken;
    NSString *_UTI;
    long long _EXIFOrientation;
}

@property long long EXIFOrientation; // @synthesize EXIFOrientation=_EXIFOrientation;
@property(retain) NSString *UTI; // @synthesize UTI=_UTI;
@property(retain) NSString *sandboxExtensionToken; // @synthesize sandboxExtensionToken=_sandboxExtensionToken;
@property(retain) NSURL *URL; // @synthesize URL=_URL;
@property _Bool canDownloadFromCloud; // @synthesize canDownloadFromCloud=_canDownloadFromCloud;
@property _Bool deliveredPlaceholder; // @synthesize deliveredPlaceholder=_deliveredPlaceholder;
@property long long deliveredFormat; // @synthesize deliveredFormat=_deliveredFormat;
- (void)dealloc;

@end

@interface PLPrivacy : NSObject
{
    NSObject<OS_dispatch_queue> *_isolationQueue;
    NSObject<OS_dispatch_queue> *_callbackQueue;
    int _authStatus;
}

+ (void)disableForceOverrideTCC;
+ (void)enableForceOverrideTCC;
+ (id)sharedInstance;
- (_Bool)isPhotosTCCAccessRestricted;
- (void)photoAccessPowersActive;
- (int)photosTCCAccessStatus;
- (_Bool)isPhotosTCCAccessNotAllowed;
- (_Bool)isPhotosTCCAccessAllowed;
- (_Bool)isPhotoLibraryReadAccessAllowed;
- (_Bool)isPhotoLibrarySharingOrModificationAllowed;
- (_Bool)isPhotosAccessAllowedPromptIfNeededWithHandler:(CDUnknownBlockType)arg1;
- (_Bool)isPhotosAccessAllowedWithScope:(long long)arg1 promptIfNeededWithHandler:(CDUnknownBlockType)arg2;
- (void)isPhotosAccessAllowedWithScope:(long long)arg1 handler:(CDUnknownBlockType)arg2;
- (_Bool)_isPhotosAccessAllowedWithScope:(long long)arg1 forceHandler:(_Bool)arg2 accessAllowedHandler:(CDUnknownBlockType)arg3;
- (void)dealloc;
- (id)init;

@end

@interface PLSandboxedURL : NSURL
{
    long long _sandboxExtensionHandle;
}

- (void)dealloc;
- (id)initWithURL:(id)arg1 sandboxExtensionToken:(id)arg2;

@end

@interface PLSecurity : NSObject
{
}

+ (_Bool)connectionIsEntitledForPhotoKit:(id)arg1;
+ (_Bool)isEntitledForPhotoKit;
+ (_Bool)connection:(id)arg1 hasEntitlement:(id)arg2;
+ (_Bool)secTask:(struct __SecTask *)arg1 hasEntitlement:(id)arg2;

@end

@interface PLUUIDString : NSString
{
    unsigned char _uuid[16];
    char _uuidString[37];
}

+ (id)UUIDString;
- (const char *)UTF8String;
- (long long)compare:(id)arg1 options:(unsigned long long)arg2 range:(struct _NSRange)arg3 locale:(id)arg4;
- (_Bool)isEqualToString:(id)arg1;
- (void)getCharacters:(unsigned short *)arg1 range:(struct _NSRange)arg2;
- (unsigned short)characterAtIndex:(unsigned long long)arg1;
- (unsigned long long)length;
- (CDStruct_bd2f613f)UUIDBytes;
- (id)UUIDData;
- (id)initWithUUID:(unsigned char [16])arg1;
- (id)initWithCFUUIDBytes:(CDStruct_bd2f613f)arg1;
- (id)initWithCFUUID:(struct __CFUUID *)arg1;
- (id)initWithUUIDData:(id)arg1;
- (id)init;

@end

@interface PLXPCData : NSData
{
    NSObject<OS_xpc_object> *_data;
}

- (unsigned long long)length;
- (void)getBytes:(void *)arg1 range:(struct _NSRange)arg2;
- (void)getBytes:(void *)arg1 length:(unsigned long long)arg2;
- (const void *)bytes;
- (id)debugDescription;
- (void)dealloc;
- (id)initWithXPCData:(id)arg1;

@end

@interface PLXPCShMemData : NSData
{
    void *_buffer;
    unsigned long long _dataLength;
    unsigned long long _bufferLength;
}

- (unsigned long long)length;
- (const void *)bytes;
- (id)description;
- (void)dealloc;
- (id)initWithXPCShmem:(id)arg1 length:(long long)arg2;
- (id)initWithXPCShmem:(id)arg1;

@end

@interface PLXPCTransaction : NSObject
{
    const char *_identifier;
}

+ (id)transaction:(const char *)arg1;
- (id)description;
- (void)stillAlive;
- (void)dealloc;
- (id)initWithIdentifier:(const char *)arg1;

@end

