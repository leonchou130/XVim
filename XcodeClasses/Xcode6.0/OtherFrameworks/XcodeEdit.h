//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Named Structures

struct CGAffineTransform {
    double a;
    double b;
    double c;
    double d;
    double tx;
    double ty;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct XCParagraphInfo {
    unsigned long long _field1;
    id _field2;
    unsigned int :8;
    unsigned int :8;
    unsigned int :1;
    unsigned int :1;
    unsigned int :14;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct _XCBuildMessageTextAnnotationFlags {
    unsigned int showsWarnings:1;
    unsigned int isCollapsed:1;
    unsigned int RESERVED:30;
};

struct _XCChangeEntry {
    struct _NSRange _field1;
    long long _field2;
    struct _NSRange _field3;
    long long _field4;
};

struct _XCDateTimestampMapping {
    double _field1;
    unsigned long long _field2;
};

struct _XCLineOffsetTable {
    unsigned long long capacity;
    unsigned long long count;
    unsigned long long *offsets;
    unsigned long long deferredAdjustmentIndex;
    long long deferredAdjustment;
};

struct _XCTextAnnotationFlags {
    unsigned int drawsSidebarMarkerIcon:1;
    unsigned int sidebarMarkerAlignment:4;
    unsigned int miniaturized:1;
    unsigned int selected:1;
    unsigned int visible:1;
    unsigned int drawsBackground:1;
    unsigned int drawsOverlay:1;
    unsigned int drawsBorder:1;
    unsigned int drawsHighlight:1;
    unsigned int annotationStyle:1;
    unsigned int forcesActive:1;
    unsigned int RESERVED:19;
};

struct _XCTextAnnotationViewFlags {
    unsigned int drawsBackground:1;
    unsigned int drawsOverlay:1;
    unsigned int drawsBorder:1;
    unsigned int drawsShadow:1;
    unsigned int position:1;
    unsigned int needsParagraphSpacing:1;
    unsigned int RESERVED:26;
};

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/OtherFrameworks/XcodeEdit.framework/Versions/A/XcodeEdit
// UUID: 7B7EFB73-BBB2-37B6-9620-E57CA1D8594E
//
//                           Arch: x86_64
//                Current version: 5000.0.0
//          Compatibility version: 1.0.0
//                 Source version: 6001.0.0.0.0
//       Minimum Mac OS X version: 10.10.0
//                    SDK version: 10.10.0
//
// Objective-C Garbage Collection: Unsupported
//
//                       Run path: @loader_path/../../../
//                               = /Applications/Xcode.app/Contents/OtherFrameworks
//

@protocol NSAnimationDelegate <NSObject>

@optional
- (void)animation:(NSAnimation *)arg1 didReachProgressMark:(float)arg2;
- (float)animation:(NSAnimation *)arg1 valueForProgress:(float)arg2;
- (void)animationDidEnd:(NSAnimation *)arg1;
- (void)animationDidStop:(NSAnimation *)arg1;
- (BOOL)animationShouldStart:(NSAnimation *)arg1;
@end

@protocol NSLayoutManagerDelegate <NSObject>

@optional
- (NSDictionary *)layoutManager:(NSLayoutManager *)arg1 shouldUseTemporaryAttributes:(NSDictionary *)arg2 forDrawingToScreen:(BOOL)arg3 atCharacterIndex:(unsigned long long)arg4 effectiveRange:(struct _NSRange *)arg5;
- (void)layoutManager:(NSLayoutManager *)arg1 didCompleteLayoutForTextContainer:(NSTextContainer *)arg2 atEnd:(BOOL)arg3;
- (void)layoutManagerDidInvalidateLayout:(NSLayoutManager *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (BOOL)respondsToSelector:(SEL)arg1;
- (BOOL)conformsToProtocol:(Protocol *)arg1;
- (BOOL)isMemberOfClass:(Class)arg1;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (BOOL)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol XCParagraphMarkers <NSObject>
@end

@protocol XCScannerItem <NSObject>
- (long long)compareWithScannerItem:(id <XCScannerItem>)arg1;
- (int)type;
- (NSString *)nameWithIndent;
- (NSString *)name;
@end

@interface NSAttributedString (XCEditAdditions)
- (unsigned long long)xcNextWordFromIndex:(unsigned long long)arg1 forward:(BOOL)arg2;
- (unsigned long long)nextSubWordFromIndex:(unsigned long long)arg1 forward:(BOOL)arg2;
@end

@interface NSCursor (XCTextExtras)
+ (id)IBeamCursor;
@end

@interface NSFont (XCTextColorExtensions)
+ (id)xcFontWithName:(id)arg1 size:(double)arg2;
+ (id)xcDefaultFont;
- (struct CGSize)defaultAdvancement;
- (double)customAdvancement;
@end

@interface NSMutableString (XCTextExtras)
- (void)XCStandardizeEndOfLineToCR;
- (void)XCStandardizeEndOfLineToCRLF;
- (void)XCStandardizeEndOfLineToLF;
@end

@interface NSUndoReplaceCharacters (XCUndoReplaceCharacters)
+ (id)allocWithZone:(struct _NSZone *)arg1;
- (id)attributedString;
- (void)setAttributedString:(id)arg1;
- (struct _NSRange)replacementRange;
- (void)setReplacementRange:(struct _NSRange)arg1;
@end

@interface NSUndoTextOperation (XCUndoTextOperation)
- (id)attributedString;
- (void)setAttributedString:(id)arg1;
- (id)layoutManager;
- (id)undoManager;
- (struct _NSRange)replacementRange;
- (void)setReplacementRange:(struct _NSRange)arg1;
- (struct _NSRange)affectedRange;
- (void)setAffectedRange:(struct _NSRange)arg1;
@end

@interface NSUndoTyping (XCUndoTyping)
+ (id)allocWithZone:(struct _NSZone *)arg1;
- (id)attributedString;
- (void)setAttributedString:(id)arg1;
- (struct _NSRange)replacementRange;
- (void)setReplacementRange:(struct _NSRange)arg1;
@end

@interface XCAnnotatingTypesetter : NSATSTypesetter
{
    NSTextContainer *_annotationTextContainer;
    XCLayoutManager *_annotationLayoutManager;
    XCTextStorage *_annotationTextStorage;
    double _mostRecentWrappedLineIndentation;
}

- (void)layoutGlyphsInLayoutManager:(id)arg1 startingAtGlyphIndex:(unsigned long long)arg2 maxNumberOfLineFragments:(unsigned long long)arg3 nextGlyphIndex:(unsigned long long *)arg4;
- (double)paragraphSpacingAfterGlyphAtIndex:(unsigned long long)arg1 withProposedLineFragmentRect:(struct CGRect)arg2;
- (void)setLocation:(struct CGPoint)arg1 withAdvancements:(const double *)arg2 forStartOfGlyphRange:(struct _NSRange)arg3;
- (void)willSetLineFragmentRect:(struct CGRect *)arg1 forGlyphRange:(struct _NSRange)arg2 usedRect:(struct CGRect *)arg3 baselineOffset:(double *)arg4;
- (void)getLineFragmentRect:(struct CGRect *)arg1 usedRect:(struct CGRect *)arg2 remainingRect:(struct CGRect *)arg3 forStartingGlyphAtIndex:(unsigned long long)arg4 proposedRect:(struct CGRect)arg5 lineSpacing:(double)arg6 paragraphSpacingBefore:(double)arg7 paragraphSpacingAfter:(double)arg8;
- (id)_annotationTextStorageForChracterRange:(struct _NSRange)arg1;
- (void)dealloc;
- (id)init;

@end

@interface XCSourceScanner : NSObject
{
    XCLanguageSpecification *_langSpec;
    NSMutableArray *_includedRules;
    XCSourceScanner *_lexer;
    long long _langId;
    long long _token;
    unsigned int _colorId:16;
    unsigned int _altColorId:16;
    unsigned int _startAtBOL:1;
    unsigned int _startAtColumnZero:1;
    unsigned int _isFoldable:1;
    unsigned int _ignoreToken:1;
    unsigned int _inheritsColor:1;
    unsigned int _altIgnoreToken:1;
    unsigned int _altInheritsColor:1;
    unsigned int _needToDirtyRightEdges:1;
}

- (struct _NSRange)wordRangeInString:(id)arg1 fromIndex:(unsigned long long)arg2;
- (struct _NSRange)wordRangeInString:(id)arg1 fromIndex:(unsigned long long)arg2 allowNonWords:(BOOL)arg3;
- (BOOL)canTokenize;
- (id)parse:(id)arg1 withContext:(id)arg2 initialToken:(long long)arg3 inputStream:(id)arg4 range:(struct _NSRange)arg5 dirtyRange:(struct _NSRange *)arg6;
- (BOOL)predictsRule:(long long)arg1 inputStream:(id)arg2;
- (void)parseIncludedRules:(id)arg1 inTree:(id)arg2 withContext:(id)arg3 initialToken:(long long)arg4 inputStream:(id)arg5 range:(struct _NSRange)arg6 dirtyRange:(struct _NSRange *)arg7;
- (long long)parseOneIncludedRule:(id)arg1 inTree:(id)arg2 withContext:(id)arg3 initialToken:(long long)arg4 inputStream:(id)arg5 range:(struct _NSRange)arg6 dirtyRange:(struct _NSRange *)arg7 isLexing:(BOOL)arg8 reusedToken:(char *)arg9;
- (id)nodeForThisScanner:(id)arg1 atLocation:(unsigned long long)arg2 inputStream:(id)arg3;
- (id)nodeToReuse:(id)arg1 forScanner:(id)arg2 inputStream:(id)arg3;
- (id)includedRules;
- (id)lexer;
- (long long)token;
- (id)langSpec;
- (long long)langId;
- (id)description;
- (void)dealloc;
- (id)initWithLanguageSpecification:(id)arg1;
- (id)initWithPropertyListDictionary:(id)arg1 language:(long long)arg2;

@end

@interface XCBlockScanner : XCSourceScanner
{
    NSString *startString;
    NSString *endString;
    NSString *altEndString;
    unsigned short startChar;
    unsigned short endChar;
    unsigned short altEndChar;
    unsigned short escapeChar;
    unsigned int recursive:1;
    unsigned int dontIncludeEnd:1;
    unsigned int parseEndBeforeIncludedRules:1;
    unsigned int caseSensitive:1;
    unsigned int isVolatile:1;
    long long startToken;
    long long endToken;
    long long altEndToken;
    long long altToken;
}

- (id)parse:(id)arg1 withContext:(id)arg2 initialToken:(long long)arg3 inputStream:(id)arg4 range:(struct _NSRange)arg5 dirtyRange:(struct _NSRange *)arg6;
- (id)parseRecursive:(id)arg1 withContext:(id)arg2 inputStream:(id)arg3 range:(struct _NSRange)arg4 dirtyRange:(struct _NSRange *)arg5;
- (int)actionForEndToken:(id)arg1 inContext:(id)arg2 inputStream:(id)arg3;
- (long long)nextToken:(id)arg1 withItem:(id)arg2 inTree:(id)arg3 withContext:(id)arg4 initialToken:(long long)arg5 insideBlock:(BOOL)arg6 range:(struct _NSRange)arg7 dirtyRange:(struct _NSRange *)arg8 reusedToken:(char *)arg9;
- (BOOL)predictsRule:(long long)arg1 inputStream:(id)arg2;
- (id)initWithPropertyListDictionary:(id)arg1 language:(long long)arg2;

@end

@interface XCTextAnnotation : NSObject
{
    XCFoldingTextStorage *_textStorage;
    struct _NSRange _paraRange;
    unsigned long long _paraHash;
    NSMutableArray *_annotationViews;
    struct CGSize _cachedBoundsSize;
    struct CGSize _cachedSize;
    XCTextAnnotationTheme *_annotationTheme;
    unsigned long long _highlightsByMask;
    DTMutableRangeArray *_highlightedRanges;
    struct _XCTextAnnotationFlags _taFlags;
}

+ (unsigned long long)_defaultHighlightsByMask;
+ (id)_defaultAnnotationTheme;
+ (unsigned long long)_defaultAnnotationStyle;
+ (unsigned long long)_defaultSidebarMarkerAlignment;
@property(nonatomic) unsigned long long highlightsByMask; // @synthesize highlightsByMask=_highlightsByMask;
@property(retain, nonatomic) XCTextAnnotationTheme *annotationTheme; // @synthesize annotationTheme=_annotationTheme;
@property(nonatomic) struct _NSRange paragraphRange; // @synthesize paragraphRange=_paraRange;
@property(retain, nonatomic) XCFoldingTextStorage *textStorage; // @synthesize textStorage=_textStorage;
@property(readonly, nonatomic) BOOL isInstructionPointer;
@property(readonly, nonatomic) BOOL isBuildAnalyzerControlFlowStep;
@property(readonly, nonatomic) BOOL isBuildAnalyzerEventStep;
@property(readonly, nonatomic) BOOL isBuildAnalyzerResult;
@property(readonly, nonatomic) BOOL isBuildAnalyzerWarning;
@property(readonly, nonatomic) BOOL isBuildError;
@property(readonly, nonatomic) BOOL isBuildWarning;
@property(readonly, nonatomic) BOOL isBuildNotice;
@property(readonly, nonatomic) BOOL isBreakpoint;
- (void)drawWithFrame:(struct CGRect)arg1 inTextView:(id)arg2;
- (void)removeAllAnnotationViews;
- (void)removeAnnotationViewFromTextView:(id)arg1;
- (id)annotationViewForTextView:(id)arg1;
- (void)setAnnotationView:(id)arg1 forTextView:(id)arg2;
- (id)createAnnotationViewForTextView:(id)arg1 withFrame:(struct CGRect)arg2;
- (void)noteThatDesiredSizeMayHaveChanged;
- (void)_invalidateCachedBoundsSize;
- (struct CGSize)annotationViewSizeForBounds:(struct CGRect)arg1;
- (struct CGSize)calculateAnnotationViewSizeForBounds:(struct CGRect)arg1;
- (id)annotationViews;
- (void)drawInParagraphRect:(struct CGRect)arg1 sidebarRect:(struct CGRect)arg2 withArrowPoint:(struct CGPoint)arg3 inTextView:(id)arg4;
- (id)_annotationBackgroundColorForTextView:(id)arg1;
- (BOOL)isFocusedInTextView:(id)arg1;
- (BOOL)isSelectedInTextView:(id)arg1;
- (void)invalidateDisplay;
- (void)invalidateDisplayAndLayoutIfNeeded;
- (struct CGRect)collapseButtonRect;
- (BOOL)canCollapseOrExpand;
@property(nonatomic, getter=isCollapsed) BOOL collapsed;
- (long long)comparePrecedence:(id)arg1;
@property(readonly, nonatomic) long long precedence;
@property(nonatomic) unsigned long long annotationStyle;
- (void)removeAllHighlightedRanges;
- (void)removeHighlightedRange:(struct _NSRange)arg1;
- (void)addHighlightedRange:(struct _NSRange)arg1;
@property(readonly, nonatomic) NSArray *highlightedRanges;
- (id)_highlightedRanges;
@property(readonly, nonatomic) NSColor *highlightBackgroundColor;
@property(readonly, nonatomic) NSColor *highlightOutlineColor;
@property(readonly, nonatomic) NSGradient *bottomGradient;
@property(readonly, nonatomic) NSGradient *topGradient;
@property(readonly, nonatomic) NSColor *bottomBorderColor;
@property(readonly, nonatomic) NSColor *topBorderColor;
@property(readonly, nonatomic) NSColor *focusedBackgroundColor;
@property(readonly, nonatomic) NSColor *selectedBackgroundColor;
@property(readonly, nonatomic) NSColor *backgroundColor;
- (BOOL)_forcesActive;
- (void)_setForcesActive:(BOOL)arg1;
@property(nonatomic) BOOL drawsHighlight;
@property(nonatomic) BOOL drawsBorder;
@property(nonatomic) BOOL drawsOverlay;
@property(nonatomic) BOOL drawsBackground;
@property(nonatomic, getter=isVisible) BOOL visible;
@property(nonatomic, getter=isSelected) BOOL selected;
@property(nonatomic, getter=isMiniaturized) BOOL miniaturized;
- (void)drawSidebarMarkerInParagraphRect:(struct CGRect)arg1 firstLineRect:(struct CGRect)arg2 annotationRect:(struct CGRect)arg3 inView:(id)arg4;
- (struct CGRect)sidebarMarkerRectForParagraphRect:(struct CGRect)arg1 firstLineRect:(struct CGRect)arg2;
@property(readonly, nonatomic) BOOL wantsInvertedLineNumber;
@property(readonly, nonatomic) BOOL wantsOmittedLineNumber;
@property(readonly, nonatomic) BOOL causesSidebarAnnotationDisplacement;
@property(nonatomic) unsigned long long sidebarMarkerAlignment;
@property(nonatomic) BOOL drawsSidebarMarkerIcon;
@property(readonly, nonatomic) NSImage *sidebarMarkerIconImage;
- (BOOL)isParagraphEdited;
- (void)merge:(id)arg1;
- (BOOL)canMerge:(id)arg1;
- (void)adjustParagraphIndexBy:(long long)arg1;
- (id)description;
- (void)dealloc;
- (id)init;

@end

@interface XCBreakpointTextAnnotation : XCTextAnnotation
{
    PBXBreakpoint *_breakpoint;
}

+ (id)annotationWithBreakpoint:(id)arg1;
+ (unsigned long long)_defaultHighlightsByMask;
+ (id)_defaultAnnotationTheme;
+ (unsigned long long)_defaultSidebarMarkerAlignment;
+ (id)pendingBreakpointSidebarIcon;
+ (id)multipleBreakpointsSidebarIcon;
+ (id)breakpointSidebarIcon;
- (BOOL)isBreakpoint;
- (BOOL)wantsInvertedLineNumber;
- (long long)precedence;
- (void)drawSidebarMarkerInParagraphRect:(struct CGRect)arg1 firstLineRect:(struct CGRect)arg2 annotationRect:(struct CGRect)arg3 inView:(id)arg4;
- (id)sidebarMarkerIconImage;
- (struct CGSize)calculateAnnotationViewSizeForBounds:(struct CGRect)arg1;
- (id)createAnnotationViewForTextView:(id)arg1 withFrame:(struct CGRect)arg2;
- (void)noteThatDesiredSizeMayHaveChanged;
- (void)_breakpointDidChange:(id)arg1;
- (id)breakpoint;
- (void)dealloc;
- (id)initWithBreakpoint:(id)arg1;

@end

@interface XCTextAnnotationView : NSView
{
    XCTextAnnotation *_textAnnotation;
    XCTextView *_textView;
    double _contentLeftMargin;
    double _contentRightMargin;
    double _contentTopMargin;
    double _contentBottomMargin;
    struct CGSize _contentRectRadiuses;
    NSFont *_font;
    struct CGRect _firstLineFragmentRect;
    struct _XCTextAnnotationViewFlags _tavFlags;
}

+ (id)_defaultContentShadow;
+ (const double *)_defaultContentMargins;
+ (double)_defaultContentFontSize;
@property(retain, nonatomic) NSFont *font; // @synthesize font=_font;
@property(nonatomic) struct CGSize contentRectRadiuses; // @synthesize contentRectRadiuses=_contentRectRadiuses;
@property(nonatomic) double contentBottomMargin; // @synthesize contentBottomMargin=_contentBottomMargin;
@property(nonatomic) double contentTopMargin; // @synthesize contentTopMargin=_contentTopMargin;
@property(nonatomic) double contentRightMargin; // @synthesize contentRightMargin=_contentRightMargin;
@property(nonatomic) double contentLeftMargin; // @synthesize contentLeftMargin=_contentLeftMargin;
@property(nonatomic) XCTextView *textView; // @synthesize textView=_textView;
@property(nonatomic) XCTextAnnotation *textAnnotation; // @synthesize textAnnotation=_textAnnotation;
- (void)drawRect:(struct CGRect)arg1;
- (void)drawBorderInRect:(struct CGRect)arg1;
- (void)drawOverlayInRect:(struct CGRect)arg1;
- (void)drawBackgroundInRect:(struct CGRect)arg1;
@property(readonly, nonatomic) NSBezierPath *borderBezierPath;
@property(readonly, nonatomic) NSBezierPath *overlayBezierPath;
@property(readonly, nonatomic) NSBezierPath *backgroundBezierPath;
- (id)_contentBezierPathWithRect:(struct CGRect)arg1;
@property(readonly, nonatomic) struct CGRect contentRect;
- (void)resetCursorRects;
- (void)mouseUp:(id)arg1;
- (struct CGRect)_firstLineFragmentRect;
- (void)_setFirstLineFragmentRect:(struct CGRect)arg1;
- (BOOL)isFocused;
@property(nonatomic) BOOL drawsShadow;
@property(nonatomic) BOOL drawsBorder;
@property(nonatomic) BOOL drawsOverlay;
@property(nonatomic) BOOL drawsBackground;
@property(nonatomic) BOOL needsParagraphSpacing;
@property(nonatomic) unsigned long long position;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface XCBreakpointTextAnnotationView : XCTextAnnotationView
{
}

- (void)drawBackgroundInRect:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface XCBuildMessageTextAnnotation : XCTextAnnotation
{
    NSMutableArray *_buildMessages;
    unsigned short _numBuildNotices;
    unsigned short _numBuildWarnings;
    unsigned short _numBuildAnalyzerWarnings;
    unsigned short _numBuildAnalyzerResults;
    unsigned short _numBuildAnalyzerEventSteps;
    unsigned short _numBuildAnalyzerControlFlowSteps;
    unsigned short _numBuildErrors;
    struct _XCBuildMessageTextAnnotationFlags _bmtaFlags;
}

+ (unsigned long long)_defaultAnnotationStyle;
+ (unsigned long long)_defaultSidebarMarkerAlignment;
+ (id)buildNoticeSidebarIcon;
+ (id)buildAnalyzerControlFlowStepSidebarIcon;
+ (id)buildAnalyzerEventStepSidebarIcon;
+ (id)buildAnalyzerResultSidebarIcon;
+ (id)buildAnalyzerWarningSidebarIcon;
+ (id)buildWarningSidebarIcon;
+ (id)buildErrorSidebarIcon;
- (BOOL)isBuildAnalyzerControlFlowStep;
- (BOOL)isBuildAnalyzerEventStep;
- (BOOL)isBuildAnalyzerResult;
- (BOOL)isBuildAnalyzerWarning;
- (BOOL)isBuildWarning;
- (BOOL)isBuildError;
- (BOOL)causesSidebarAnnotationDisplacement;
- (long long)precedence;
- (id)sidebarMarkerIconImage;
- (struct CGSize)calculateAnnotationViewSizeForBounds:(struct CGRect)arg1;
- (id)createAnnotationViewForTextView:(id)arg1 withFrame:(struct CGRect)arg2;
- (void)noteThatDesiredSizeMayHaveChanged;
- (BOOL)canCollapseOrExpand;
- (BOOL)isCollapsed;
- (void)setCollapsed:(BOOL)arg1;
@property(nonatomic) BOOL showsWarnings;
- (void)merge:(id)arg1;
- (BOOL)canMerge:(id)arg1;
- (id)buildMessagesToShow;
@property(readonly, nonatomic) unsigned long long numberOfBuildAnalyzerControlFlowSteps;
@property(readonly, nonatomic) unsigned long long numberOfBuildAnalyzerEventSteps;
@property(readonly, nonatomic) unsigned long long numberOfBuildAnalyzerResults;
@property(readonly, nonatomic) unsigned long long numberOfBuildAnalyzerWarnings;
@property(readonly, nonatomic) unsigned long long numberOfBuildErrors;
@property(readonly, nonatomic) unsigned long long numberOfBuildWarnings;
@property(readonly, nonatomic) unsigned long long numberOfBuildNotices;
- (void)removeBuildMessage:(id)arg1;
- (void)addBuildMessage:(id)arg1;
- (void)setTextStorage:(id)arg1;
- (void)_updateHighlightedRanges;
- (id)buildMessages;
- (void)dealloc;
- (id)init;

@end

@interface XCBuildMessageTextAnnotationView : XCTextAnnotationView
{
    NSDictionary *_cachedMessageTextAttributes;
    NSDictionary *_cachedBadgeTextAttributes;
    NSDictionary *_cachedHighlightedBadgeTextAttributes;
    NSTrackingArea *_badgeTrackingArea;
    NSMutableIndexSet *_toolTipTags;
    double _messageCounterWidth;
    struct {
        unsigned int _mouseIsInBadge:1;
        unsigned int _mouseIsDown:1;
        unsigned int _reserved:30;
    } _flags;
}

+ (const double *)_defaultContentMargins;
- (id)_currentBadgeTextAttributes;
- (id)_badgeTrianglePath;
- (id)_badgePath;
- (void)drawRect:(struct CGRect)arg1;
- (id)view:(id)arg1 stringForToolTip:(long long)arg2 point:(struct CGPoint)arg3 userData:(void *)arg4;
- (void)resetCursorRects;
- (void)updateTrackingAreas;
- (void)mouseDown:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (struct CGSize)_calculateAnnotationViewSizeForBounds:(struct CGRect)arg1;
- (long long)indexOfBuildMessageAtPoint:(struct CGPoint)arg1;
- (struct CGRect)rectOfBuildMessageCounterAtIndex:(long long)arg1;
- (struct CGRect)rectOfBuildMessageTextAtIndex:(long long)arg1;
- (struct CGRect)rectOfBuildMessageIconImageAtIndex:(long long)arg1;
- (struct CGRect)rectOfBuildMessageAtIndex:(long long)arg1;
- (double)_buildMessageCounterWidthAtIndex:(unsigned long long)arg1;
- (double)_maxIconImageWidth;
- (void)_invalidateCachedMessageTextAttributes;
- (id)_cachedHighlightedBadgeTextAttributes;
- (id)_cachedBadgeTextAttributes;
- (id)_cachedMessageTextAttributes;
- (void)setFont:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface XCSourceModelItemMatcher : NSObject
{
    XCTextView *_textView;
}

+ (BOOL)canHandleSourceModelItem:(id)arg1 inTextView:(id)arg2;
+ (void)unregisterSourceModelItemMatcherClass:(Class)arg1;
+ (void)registerSourceModelItemMatcherClass:(Class)arg1;
+ (id)registeredSourceModelItemMatcherClasses;
+ (void)initialize;
@property(readonly, nonatomic) XCTextView *textView; // @synthesize textView=_textView;
- (id)matchedSourceModelItemsForSourceModelItem:(id)arg1;
@property(readonly, nonatomic) XCSourceModel *sourceModel; // @dynamic sourceModel;
@property(readonly, nonatomic) XCTextStorage *textStorage; // @dynamic textStorage;
- (void)dealloc;
- (id)initWithTextView:(id)arg1;

@end

@interface XCCategoryItemMatcher : XCSourceModelItemMatcher
{
}

+ (BOOL)canHandleSourceModelItem:(id)arg1 inTextView:(id)arg2;
- (id)matchedSourceModelItemsForSourceModelItem:(id)arg1;

@end

@interface XCCharStream : NSObject
{
    void *_buff;
    BOOL _isAtBOL;
    BOOL _isAtColumnZero;
    BOOL _BOLIsKnown;
    BOOL _SeenOneCharAtBOL;
    BOOL _SeenWhitespaceAtBOL;
    NSString *_realString;
    PBXCheapReusableSubstring *_cheapString;
    NSMutableArray *_savedTokens;
}

+ (void)initialize;
- (id)savedToken;
- (BOOL)hasSavedTokens;
- (void)saveToken:(id)arg1;
- (id)stringWithRange:(struct _NSRange)arg1;
- (unsigned long long)locationOfNewlineFrom:(unsigned long long)arg1 searchBackwards:(BOOL)arg2;
- (unsigned long long)peekCharacterInSet:(id)arg1;
- (unsigned short)peekCharSkippingWhitespace;
- (unsigned short)peekChar;
- (BOOL)isAtColumnZero;
- (BOOL)isAtBOL;
- (void)_computeBOL;
- (unsigned short)nextCharSkippingWhitespace;
- (unsigned short)nextChar;
- (void)setLocation:(unsigned long long)arg1;
- (unsigned long long)location;
- (unsigned long long)length;
- (id)string;
- (void)setString:(id)arg1;
- (void)finalize;
- (void)dealloc;
- (id)initWithString:(id)arg1;

@end

@interface XCClassItemMatcher : XCSourceModelItemMatcher
{
}

+ (BOOL)canHandleSourceModelItem:(id)arg1 inTextView:(id)arg2;
- (id)matchedSourceModelItemsForSourceModelItem:(id)arg1;

@end

@interface XCColorTheme : NSObject
{
    NSMutableDictionary *_dict;
    NSString *_name;
}

+ (void)setThemePath:(id)arg1;
+ (id)themeWithName:(id)arg1;
+ (void)setCurrentTheme:(id)arg1;
+ (id)currentTheme;
+ (id)builtInThemes;
+ (id)userThemes;
+ (void)_addThemesFromDirectory:(id)arg1 toDictionary:(id)arg2;
+ (void)_addThemesFromPathList:(id)arg1 toDictionary:(id)arg2;
+ (id)themeFromOldUserDefaults;
+ (id)systemTheme;
- (void)activate;
- (id)fonts;
- (id)colors;
- (void)setName:(id)arg1;
- (id)name;
- (BOOL)isBuiltInTheme;
- (void)save;
- (id)path;
- (void)saveToPath:(id)arg1;
- (void)copyFromTheme:(id)arg1;
- (void)dealloc;
- (id)initWithPath:(id)arg1;
- (id)initWithColors:(id)arg1 fonts:(id)arg2;
- (id)init;

@end

@interface XCFold : NSObject
{
    struct _NSRange _relativeLocation;
    XCFold *_parent;
    NSMutableArray *_children;
    NSString *_label;
    unsigned long long _foldStyle;
}

+ (id)foldsFromString:(id)arg1;
+ (id)decodeFold:(id)arg1 forParent:(id)arg2;
@property unsigned long long foldStyle; // @synthesize foldStyle=_foldStyle;
@property(copy) NSString *label; // @synthesize label=_label;
- (id)foldedIconString;
- (id)children;
- (unsigned long long)numberOfChildren;
- (id)removeChildren:(id)arg1;
- (void)addChild:(id)arg1;
- (void)setParent:(id)arg1;
- (id)parent;
- (id)findFoldContainingRange:(struct _NSRange)arg1;
- (id)findFoldWithRange:(struct _NSRange)arg1;
- (unsigned long long)subtractOutFolds:(unsigned long long)arg1;
- (unsigned long long)addInFolds:(unsigned long long)arg1;
- (id)adjustFoldsForRange:(struct _NSRange)arg1 changeInLength:(long long)arg2;
- (id)foldsEnclosingRange:(struct _NSRange)arg1;
- (void)_addFoldsEnclosingRange:(struct _NSRange)arg1 toArray:(id)arg2;
- (id)foldsTouchingRange:(struct _NSRange)arg1;
- (BOOL)rangeIsInsideAFold:(struct _NSRange)arg1;
- (void)offsetBy:(long long)arg1;
- (void)setRange:(struct _NSRange)arg1;
- (struct _NSRange)range;
- (BOOL)validate;
- (id)description;
- (id)innerDescription:(id)arg1;
- (id)stringValue;
- (id)_pList;
- (void)dealloc;
- (id)initWithRange:(struct _NSRange)arg1;

@end

@interface XCFoldInlineTokenAttachment : NSTokenAttachment
{
}

@end

@interface XCFoldInlineTokenAttachmentCell : NSTokenAttachmentCell
{
    id _controlView;
}

- (BOOL)trackMouse:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3 atCharacterIndex:(unsigned long long)arg4 untilMouseUp:(BOOL)arg5;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2 characterIndex:(unsigned long long)arg3 layoutManager:(id)arg4;
- (id)tokenBackgroundColor;
- (id)tokenForegroundColor;
- (long long)interiorBackgroundStyle;
- (struct CGRect)drawingRectForBounds:(struct CGRect)arg1;
- (struct CGRect)titleRectForBounds:(struct CGRect)arg1;
- (struct CGSize)cellSizeForBounds:(struct CGRect)arg1;
- (long long)_typesetterBehavior;
- (id)controlView;
- (void)setControlView:(id)arg1;
- (void)dealloc;
- (id)initTextCell:(id)arg1;

@end

@interface XCFoldingTextStorage : NSTextStorage
{
    XCTextStorage *_realStorage;
    NSMutableAttributedString *_contents;
    BOOL _fixingAttributes;
    BOOL invalidatingOurAttrs;
    long long _drawingDepth;
    XCFold *_topLevelFold;
    BOOL _usesGraphicalPlaceholder;
    NSMutableArray *_annotations;
}

@property(nonatomic) BOOL usesGraphicalPlaceholder; // @synthesize usesGraphicalPlaceholder=_usesGraphicalPlaceholder;
- (unsigned long long)locationForOpeningBracketForClosingBracket:(unsigned long long)arg1 withArgs:(char *)arg2;
- (struct _NSRange)doubleClickAtIndex:(unsigned long long)arg1 inRange:(struct _NSRange)arg2;
- (struct _NSRange)rangeOfWordAtIndex:(unsigned long long)arg1;
- (unsigned long long)lineBreakBeforeIndex:(unsigned long long)arg1 withinRange:(struct _NSRange)arg2;
- (unsigned long long)xcNextWordFromIndex:(unsigned long long)arg1 forward:(BOOL)arg2;
- (unsigned long long)nextWordFromIndex:(unsigned long long)arg1 forward:(BOOL)arg2;
- (void)setSubWordMovement:(BOOL)arg1;
- (struct _NSRange)subtractOutFoldsForRange:(struct _NSRange)arg1;
- (struct _NSRange)addInFoldsForRange:(struct _NSRange)arg1;
- (unsigned long long)subtractOutFolds:(unsigned long long)arg1;
- (unsigned long long)addInFolds:(unsigned long long)arg1;
- (void)adjustFoldsForRange:(struct _NSRange)arg1 changeInLength:(long long)arg2;
- (void)unfoldItems:(id)arg1;
- (void)foldItems:(id)arg1;
- (BOOL)isRealRangeFolded:(struct _NSRange)arg1;
- (void)foldRecursiveItem:(id)arg1 animateInView:(id)arg2;
- (void)_recursivelyFoldItem:(id)arg1 toFold:(id)arg2;
- (void)foldRange:(struct _NSRange)arg1 animateInView:(id)arg2;
- (void)foldRealRange:(struct _NSRange)arg1;
- (void)foldRealRange:(struct _NSRange)arg1 label:(id)arg2 style:(unsigned long long)arg3;
- (void)unfoldFoldsEnclosingRange:(struct _NSRange)arg1;
- (void)unfoldRecursiveRealRange:(struct _NSRange)arg1;
- (void)unfoldRealRange:(struct _NSRange)arg1;
- (void)unfoldRecursiveRange:(struct _NSRange)arg1;
- (void)unfoldRange:(struct _NSRange)arg1;
- (void)unfoldAll;
- (void)setFolds:(id)arg1;
- (BOOL)foldsAreValid:(id)arg1;
- (id)folds;
- (struct _NSRange)rangeForBlockContainingRange:(struct _NSRange)arg1;
- (id)foldableBlockItemForLocation:(unsigned long long)arg1;
- (id)foldableBlockItemForLineAtLocation:(unsigned long long)arg1;
- (long long)foldingDepthAtLocation:(unsigned long long)arg1;
- (id)blockItemAtLocation:(unsigned long long)arg1;
- (BOOL)realRangeIsInsideAFold:(struct _NSRange)arg1;
- (struct _NSRange)lineRangeOfFoldForRange:(struct _NSRange)arg1;
- (BOOL)rangeContainsFolds:(struct _NSRange)arg1;
- (BOOL)isDrawing;
- (void)decreaseDrawingDepth;
- (void)increaseDrawingDepth;
- (void)resetDrawingDepth;
- (BOOL)fixesAttributesLazily;
- (void)realStorageDidInvalidateLayoutAndDisplayInRange:(struct _NSRange)arg1;
- (void)realStorageDidFixAttributesInRange:(struct _NSRange)arg1;
- (void)_copyRealStorageAttributesInRange:(struct _NSRange)arg1;
- (void)realStorageDidReplaceCharactersInRange:(struct _NSRange)arg1 withString:(id)arg2 changeInLength:(long long)arg3;
- (void)realStorageDidUpdateLineRange:(struct _NSRange)arg1 changeInLength:(long long)arg2;
- (void)realStorageWillReplaceCharactersInRange:(struct _NSRange)arg1 withString:(id)arg2 changeInLength:(long long)arg3;
- (double)advancementForSpace;
- (void)fontSetChanged;
- (void)processEditing;
- (void)endEditing;
- (void)beginEditing;
- (id)_undoRedoAttributedSubstringFromRange:(struct _NSRange)arg1;
- (id)attributedSubstringFromRange:(struct _NSRange)arg1;
- (struct _NSRange)_rangeByEstimatingAttributeFixingForRange:(struct _NSRange)arg1;
- (void)fixAttributesInRange:(struct _NSRange)arg1;
- (id)attribute:(id)arg1 atIndex:(unsigned long long)arg2 longestEffectiveRange:(struct _NSRange *)arg3 inRange:(struct _NSRange)arg4;
- (id)attribute:(id)arg1 atIndex:(unsigned long long)arg2 effectiveRange:(struct _NSRange *)arg3;
- (id)attributesAtIndex:(unsigned long long)arg1 longestEffectiveRange:(struct _NSRange *)arg2 inRange:(struct _NSRange)arg3;
- (id)attributesAtIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;
- (void)removeAttribute:(id)arg1 range:(struct _NSRange)arg2;
- (void)addAttribute:(id)arg1 value:(id)arg2 range:(struct _NSRange)arg3;
- (void)addAttributes:(id)arg1 range:(struct _NSRange)arg2;
- (void)setAttributes:(id)arg1 range:(struct _NSRange)arg2;
- (void)replaceCharactersInRange:(struct _NSRange)arg1 withAttributedString:(id)arg2;
- (void)replaceCharactersInRange:(struct _NSRange)arg1 withString:(id)arg2;
- (unsigned long long)length;
- (id)string;
- (void)removeLayoutManager:(id)arg1;
- (void)addLayoutManager:(id)arg1;
- (void)fixAttachmentAttributeInRange:(struct _NSRange)arg1;
- (void)removeAnnotationsInRange:(struct _NSRange)arg1;
- (void)removeAnnotationsOfClass:(Class)arg1;
- (void)removeAnnotationsOfClass:(Class)arg1 inRange:(struct _NSRange)arg2;
- (void)removeAnnotation:(id)arg1;
- (void)addAnnotation:(id)arg1;
- (id)annotationsOfClass:(Class)arg1 inRange:(struct _NSRange)arg2;
- (id)annotationsOfClass:(Class)arg1;
- (id)annotationsInRange:(struct _NSRange)arg1;
- (id)annotations;
- (void)_assertAnnotationIntegrity;
- (BOOL)indentAtBeginningOfLineForCharacterRange:(struct _NSRange)arg1 undoManager:(id)arg2;
- (void)indentCharacterRange:(struct _NSRange)arg1 undoManager:(id)arg2;
- (void)indentLineRange:(struct _NSRange)arg1 undoManager:(id)arg2;
- (BOOL)indentLine:(long long)arg1 onlyIfMovingRight:(BOOL)arg2 undoManager:(id)arg3;
- (void)indentLine:(long long)arg1 to:(long long)arg2 undoManager:(id)arg3;
- (id)getTextForLineSansBlanks:(long long)arg1;
- (long long)firstNonblankForLine:(long long)arg1 convertTabs:(BOOL)arg2;
- (id)colorAtCharacterIndex:(unsigned long long)arg1 inTextView:(id)arg2 effectiveRange:(struct _NSRange *)arg3;
- (long long)colorIdAtCharacterIndex:(unsigned long long)arg1 inTextView:(id)arg2 effectiveRange:(struct _NSRange *)arg3;
- (id)cachedSourceModelItemAtCharacterIndex:(unsigned long long)arg1;
- (id)cachedSourceModel;
- (id)sourceModelItemAtCharacterIndex:(unsigned long long)arg1;
- (id)sourceModel;
- (struct _NSRange)lineRangeAtTimestamp:(unsigned long long)arg1 forLineRange:(struct _NSRange)arg2 atTimestamp:(unsigned long long)arg3;
- (struct _NSRange)characterRangeAtTimestamp:(unsigned long long)arg1 forCharacterRange:(struct _NSRange)arg2 atTimestamp:(unsigned long long)arg3;
- (void)breakChangeTrackingCoalescing;
- (unsigned long long)currentTimestamp;
- (long long)columnForPositionConvertingTabs:(long long)arg1;
- (double)indentationForWrappedLineAtIndex:(unsigned long long)arg1;
- (unsigned long long)leadingWhitespacePositionsForLine:(unsigned long long)arg1;
- (unsigned long long)numberOfLines;
- (struct _NSRange)lineRangeForCharacterRange:(struct _NSRange)arg1;
- (struct _NSRange)characterRangeForLineRange:(struct _NSRange)arg1;
- (void)invalidateDisplayForLineRange:(struct _NSRange)arg1;
- (void)invalidateLayoutForLineRange:(struct _NSRange)arg1;
- (BOOL)syntaxColoringEnabled;
- (void)setLanguage:(id)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (void)forwardInvocation:(id)arg1;
- (BOOL)respondsToSelector:(SEL)arg1;
- (id)realStorage;
- (void)dealloc;
- (id)initWithTextStorage:(id)arg1;

@end

@interface XCFunctionItemMatcher : XCSourceModelItemMatcher
{
}

+ (BOOL)canHandleSourceModelItem:(id)arg1 inTextView:(id)arg2;
- (id)matchedSourceModelItemsForSourceModelItem:(id)arg1;

@end

@interface XCHTMLEntityScanner : XCBlockScanner
{
    NSDictionary *entityMap;
}

- (id)parse:(id)arg1 withContext:(id)arg2 initialToken:(long long)arg3 inputStream:(id)arg4 range:(struct _NSRange)arg5 dirtyRange:(struct _NSRange *)arg6;
- (void)dealloc;
- (id)initWithPropertyListDictionary:(id)arg1 language:(long long)arg2;

@end

@interface XCHTMLScanner : XCBlockScanner
{
}

- (id)parseRecursive:(id)arg1 withContext:(id)arg2 inputStream:(id)arg3 range:(struct _NSRange)arg4 dirtyRange:(struct _NSRange *)arg5;
- (int)actionForEndToken:(id)arg1 inContext:(id)arg2 inputStream:(id)arg3;

@end

@interface XCInstructionPointerTextAnnotation : XCTextAnnotation
{
    PBXDebugInstructionPointer *_instrPointer;
}

+ (id)annotationWithInstructionPointer:(id)arg1;
+ (unsigned long long)_defaultHighlightsByMask;
+ (id)_defaultAnnotationTheme;
+ (unsigned long long)_defaultSidebarMarkerAlignment;
+ (id)instructionPointerSidebarIcon;
@property(readonly, nonatomic) PBXDebugInstructionPointer *instructionPointer; // @synthesize instructionPointer=_instrPointer;
- (BOOL)isInstructionPointer;
- (void)drawInParagraphRect:(struct CGRect)arg1 sidebarRect:(struct CGRect)arg2 withArrowPoint:(struct CGPoint)arg3 inTextView:(id)arg4;
- (long long)precedence;
- (BOOL)wantsOmittedLineNumber;
- (id)sidebarMarkerIconImage;
- (void)dealloc;
- (id)initWithInstructionPointer:(id)arg1;

@end

@interface XCTextAnnotationTheme : NSObject
{
    NSColor *_backgroundColor;
    NSColor *_selectedBackgroundColor;
    NSColor *_focusedBackgroundColor;
    NSColor *_topBorderColor;
    NSColor *_bottomBorderColor;
    NSGradient *_topGradient;
    NSGradient *_bottomGradient;
    NSColor *_highlightOutlineColor;
    NSColor *_highlightBackgroundColor;
}

+ (id)classicBlueTextAnnotationTheme;
+ (id)blueGlassTextAnnotationTheme;
+ (id)redGlassTextAnnotationTheme;
+ (id)yellowGlassTextAnnotationTheme;
@property(copy, nonatomic) NSColor *highlightBackgroundColor; // @synthesize highlightBackgroundColor=_highlightBackgroundColor;
@property(copy, nonatomic) NSColor *highlightOutlineColor; // @synthesize highlightOutlineColor=_highlightOutlineColor;
@property(copy, nonatomic) NSGradient *bottomGradient; // @synthesize bottomGradient=_bottomGradient;
@property(copy, nonatomic) NSGradient *topGradient; // @synthesize topGradient=_topGradient;
@property(copy, nonatomic) NSColor *bottomBorderColor; // @synthesize bottomBorderColor=_bottomBorderColor;
@property(copy, nonatomic) NSColor *topBorderColor; // @synthesize topBorderColor=_topBorderColor;
@property(copy, nonatomic) NSColor *focusedBackgroundColor; // @synthesize focusedBackgroundColor=_focusedBackgroundColor;
@property(copy, nonatomic) NSColor *selectedBackgroundColor; // @synthesize selectedBackgroundColor=_selectedBackgroundColor;
@property(copy, nonatomic) NSColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
- (void)dealloc;
- (id)init;

@end

@interface XCInstructionPointerTextAnnotationTheme : XCTextAnnotationTheme
{
}

- (id)init;

@end

@interface XCKeywordScanner : XCSourceScanner
{
    NSCharacterSet *_startSet;
    NSCharacterSet *_invertedOtherSet;
    XCSourceTokens *_keywords;
    struct _NSRange _previousTokenRange;
    BOOL _caseSensitive;
    BOOL _isSimpleToken;
}

- (struct _NSRange)wordRangeInString:(id)arg1 fromIndex:(unsigned long long)arg2;
- (BOOL)canTokenize;
- (id)parse:(id)arg1 withContext:(id)arg2 initialToken:(long long)arg3 inputStream:(id)arg4 range:(struct _NSRange)arg5 dirtyRange:(struct _NSRange *)arg6;
- (long long)nextToken:(id)arg1 withContext:(id)arg2 initialToken:(long long)arg3;
- (BOOL)predictsRule:(long long)arg1 inputStream:(id)arg2;
- (void)dealloc;
- (id)initWithPropertyListDictionary:(id)arg1 language:(long long)arg2;

@end

@interface XCLanguageSpecification : XCSpecification
{
    long long _uniqueId;
    BOOL _includeInMenu;
    Class _scannerClass;
    XCSourceScanner *_scanner;
    TSPropertyListDictionary *_syntaxRules;
}

+ (id)_identifierForUniqueId:(long long)arg1;
+ (long long)_uniqIdForIdentifier:(id)arg1;
+ (id)specificationRegistryName;
+ (id)specificationTypePathExtensions;
+ (id)localizedSpecificationTypeName;
+ (id)specificationType;
+ (Class)specificationTypeBaseClass;
- (id)availableKeywords;
- (id)lexerKeywords;
- (id)syntaxRules;
- (id)scanner;
- (BOOL)includeInMenu;
- (long long)uniqueId;
- (id)name;
- (void)dealloc;
- (id)initWithPropertyListDictionary:(id)arg1 inDomain:(id)arg2;

@end

@interface XCLayoutManager : NSLayoutManager
{
}

+ (void)initialize;
- (void)drawUnderlineForGlyphRange:(struct _NSRange)arg1 underlineType:(long long)arg2 baselineOffset:(double)arg3 lineFragmentRect:(struct CGRect)arg4 lineFragmentGlyphRange:(struct _NSRange)arg5 containerOrigin:(struct CGPoint)arg6;
- (void)drawBackgroundForGlyphRange:(struct _NSRange)arg1 atPoint:(struct CGPoint)arg2;
- (unsigned long long)layoutOptions;
- (void)addTemporaryAttribute:(id)arg1 value:(id)arg2 forCharacterRange:(struct _NSRange)arg3;
- (void)removeTemporaryAttribute:(id)arg1 forCharacterRange:(struct _NSRange)arg2;
- (void)addTemporaryAttributes:(id)arg1 forCharacterRange:(struct _NSRange)arg2;
- (void)setTemporaryAttributes:(id)arg1 forCharacterRange:(struct _NSRange)arg2;
- (void)textContainerChangedGeometry:(id)arg1;
- (struct _NSRange)_characterRangeCurrentlyInAndAfterContainer:(id)arg1;
- (void)_fillLayoutHoleAtIndex:(unsigned long long)arg1 desiredNumberOfLines:(unsigned long long)arg2;
- (id)init;

@end

@interface XCMethodItemMatcher : XCSourceModelItemMatcher
{
}

+ (BOOL)canHandleSourceModelItem:(id)arg1 inTextView:(id)arg2;
- (id)matchedSourceModelItemsForSourceModelItem:(id)arg1;

@end

@interface XCRegExScanner : XCSourceScanner
{
    NSCharacterSet *_startSet;
    NSCharacterSet *_invertedOtherSet;
    NSMutableArray *_regExes;
    NSMutableArray *_captureColors;
    struct _NSRange _previousTokenRange;
    BOOL _isSimpleToken;
    BOOL _altIsSimpleToken;
    BOOL _caseSensitive;
}

- (struct _NSRange)wordRangeInString:(id)arg1 fromIndex:(unsigned long long)arg2;
- (BOOL)canTokenize;
- (id)parse:(id)arg1 withContext:(id)arg2 initialToken:(long long)arg3 inputStream:(id)arg4 range:(struct _NSRange)arg5 dirtyRange:(struct _NSRange *)arg6;
- (long long)nextToken:(id)arg1 withContext:(id)arg2 initialToken:(long long)arg3 until:(unsigned long long)arg4 subItems:(id *)arg5;
- (long long)tokenForString:(id)arg1 forRange:(struct _NSRange *)arg2 subItems:(id *)arg3;
- (BOOL)predictsRule:(long long)arg1 inputStream:(id)arg2;
- (void)dealloc;
- (id)initWithPropertyListDictionary:(id)arg1 language:(long long)arg2;

@end

@interface XCNumberScanner : XCRegExScanner
{
}

- (long long)tokenForString:(id)arg1 forRange:(struct _NSRange *)arg2 subItems:(id *)arg3;

@end

@interface XCParagraphInfoTable : NSObject
{
    unsigned long long _capacity;
    unsigned long long _count;
    struct XCParagraphInfo *_paragraphs;
    unsigned long long _gapIndex;
    unsigned long long _offsetAdjustmentIndex;
    long long _offsetAdjustment;
}

- (void)assertInternalConsistencyWithRespectToString:(id)arg1;
- (void)replaceParagraphsInRange:(struct _NSRange)arg1 withParagraphStartOffsets:(unsigned long long *)arg2 count:(unsigned long long)arg3 adjustment:(long long)arg4 changeInCharLength:(long long)arg5;
- (id)descriptionForDebugger;
- (struct _NSRange)paragraphRangeForCharacterRange:(struct _NSRange)arg1;
- (struct _NSRange)characterRangeForParagraphRange:(struct _NSRange)arg1;
- (unsigned long long)numberOfParagraphs;
- (void)_dumpLineOffsetsTable;
- (id)stringFromUnsignedInts:(const unsigned long long *)arg1 count:(unsigned long long)arg2;
- (void)_adjustParagraphsStartingAtIndex:(unsigned long long)arg1 byOffset:(long long)arg2;
- (void)_applyDeferredParagraphOffsetAdjustmentUpToIndex:(unsigned long long)arg1;
- (void)_replaceParagraphStructsInRange:(struct _NSRange)arg1 withEmptyStructsOfMinimumCapacity:(unsigned long long)arg2;
- (void)dealloc;
- (id)init;

@end

@interface XCParagraphMarker : NSObject <XCParagraphMarkers>
{
}


// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@end

@interface XCPreprocessorItemMatcher : XCSourceModelItemMatcher
{
}

+ (BOOL)canHandleSourceModelItem:(id)arg1 inTextView:(id)arg2;
- (id)matchedSourceModelItemsForSourceModelItem:(id)arg1;

@end

@interface XCProtocolItemMatcher : XCSourceModelItemMatcher
{
}

+ (BOOL)canHandleSourceModelItem:(id)arg1 inTextView:(id)arg2;
- (id)matchedSourceModelItemsForSourceModelItem:(id)arg1;

@end

@interface XCPythonScanner : XCSourceScanner
{
}

- (long long)parseOneIncludedRule:(id)arg1 inTree:(id)arg2 withContext:(id)arg3 initialToken:(long long)arg4 inputStream:(id)arg5 range:(struct _NSRange)arg6 dirtyRange:(struct _NSRange *)arg7 isLexing:(BOOL)arg8 reusedToken:(char *)arg9;
- (void)computeContext:(id)arg1 inString:(id)arg2 forLocation:(unsigned long long)arg3;
- (unsigned long long)nextIndentForlocation:(unsigned long long)arg1 inString:(id)arg2;
- (long long)_indentForLineWithRange:(struct _NSRange)arg1 inString:(id)arg2;

@end

@interface XCRuleScanner : XCSourceScanner
{
    NSMutableArray *_rules;
    unsigned short _startChar;
}

- (id)parse:(id)arg1 withContext:(id)arg2 initialToken:(long long)arg3 inputStream:(id)arg4 range:(struct _NSRange)arg5 dirtyRange:(struct _NSRange *)arg6;
- (long long)nextToken:(id)arg1 withItemArray:(id)arg2 inTree:(id)arg3 withContext:(id)arg4 initialToken:(long long)arg5 range:(struct _NSRange)arg6 dirtyRange:(struct _NSRange *)arg7;
- (BOOL)predictsRule:(long long)arg1 inputStream:(id)arg2;
- (void)dealloc;
- (id)initWithPropertyListDictionary:(id)arg1 language:(long long)arg2;

@end

@interface XCScannerRule : NSObject
{
    BOOL _optional;
    BOOL _allowMultiple;
    long long _token;
    XCSourceScanner *_scanner;
    NSSet *_tokenSet;
}

- (BOOL)matchesToken:(long long)arg1;
- (id)scanner;
- (BOOL)allowMultiple;
- (BOOL)optional;
- (void)dealloc;
- (id)initWithString:(id)arg1;

@end

@interface XCSourceModel : NSObject
{
    XCTextStorage *_textStorage;
    XCCharStream *_inputStream;
    XCSourceModelItem *_sourceItems;
    XCSourceScanner *_scanner;
    struct _NSRange _dirtyRange;
    long long _batchDelta;
    BOOL _isDoingBatchEdit;
}

+ (void)initialize;
- (id)objCMethodNameForItem:(id)arg1;
- (BOOL)isItemSemanticBlock:(id)arg1;
- (BOOL)isItemBracketExpression:(id)arg1;
- (BOOL)isItemAngleExpression:(id)arg1;
- (BOOL)isItemParenExpression:(id)arg1;
- (BOOL)isInTokenizableCodeAtLocation:(unsigned long long)arg1;
- (BOOL)isInPlainCodeAtLocation:(unsigned long long)arg1;
- (BOOL)isInNumberConstantAtLocation:(unsigned long long)arg1;
- (BOOL)isInCharacterConstantAtLocation:(unsigned long long)arg1;
- (BOOL)isInStringConstantAtLocation:(unsigned long long)arg1;
- (BOOL)isInIncludeStatementAtLocation:(unsigned long long)arg1;
- (BOOL)isInPreprocessorStatementAtLocation:(unsigned long long)arg1;
- (BOOL)isInDocCommentAtLocation:(unsigned long long)arg1;
- (BOOL)isInCommentAtLocation:(unsigned long long)arg1;
- (id)identOrKeywordItemAtLocation:(unsigned long long)arg1;
- (id)objCDeclaratorItemAtLocation:(unsigned long long)arg1;
- (id)numberConstantAtLocation:(unsigned long long)arg1;
- (id)characterConstantAtLocation:(unsigned long long)arg1;
- (id)stringConstantAtLocation:(unsigned long long)arg1;
- (id)includeStatementAtLocation:(unsigned long long)arg1;
- (id)preprocessorStatementAtLocation:(unsigned long long)arg1;
- (id)docCommentAtLocation:(unsigned long long)arg1;
- (id)commentAtLocation:(unsigned long long)arg1;
- (id)placeholderItemsFromItem:(id)arg1;
- (id)identifierItemsFromItem:(id)arg1;
- (id)commentBlockItems;
- (id)functionsAndMethodItems;
- (id)classItems;
- (void)addBlockItemsInTypeList:(long long *)arg1 fromItem:(id)arg2 toArray:(id)arg3;
- (void)addIdentifierItemsFromItem:(id)arg1 toArray:(id)arg2;
- (void)addItemsInTypeList:(long long *)arg1 fromItem:(id)arg2 toArray:(id)arg3;
- (id)functionOrMethodAtLocation:(unsigned long long)arg1;
- (id)classAtLocation:(unsigned long long)arg1;
- (id)itemNameAtLocation:(unsigned long long)arg1 inTypeList:(long long *)arg2 nameRange:(struct _NSRange *)arg3 scopeRange:(struct _NSRange *)arg4;
- (id)nameOfItem:(id)arg1 nameRange:(struct _NSRange *)arg2 scopeRange:(struct _NSRange *)arg3;
- (id)itemAtLocation:(unsigned long long)arg1 ofType:(id)arg2;
- (id)itemAtLocation:(unsigned long long)arg1 inTypeList:(long long *)arg2;
- (long long *)typeListForSpecNames:(id)arg1;
- (id)builtUpNameForItem:(id)arg1 nameRange:(struct _NSRange *)arg2;
- (id)_builtUpNameForSubTree:(id)arg1 nameRange:(struct _NSRange *)arg2;
- (id)parenLikeItemAtLocation:(unsigned long long)arg1;
- (id)foldableBlockItemForLocation:(unsigned long long)arg1;
- (id)foldableBlockItemForLineAtLocation:(unsigned long long)arg1;
- (id)blockItemAtLocation:(unsigned long long)arg1;
- (long long)indentForItem:(id)arg1;
- (id)adjoiningItemAtLocation:(unsigned long long)arg1;
- (id)enclosingItemAtLocation:(unsigned long long)arg1;
- (id)_topLevelSourceItem;
- (void)parse;
- (void)doingBatchEdit:(BOOL)arg1;
- (void)dirtyRange:(struct _NSRange)arg1 changeInLength:(long long)arg2;
- (struct _NSRange)dirtyRange;
- (void)dealloc;
- (id)initWithTextStorage:(id)arg1;

@end

@interface XCSourceModelItem : NSObject
{
    struct _NSRange _relativeLocation;
    unsigned int _colorId:15;
    unsigned int _isOpaque:1;
    unsigned int _dirty:1;
    unsigned int _isBlock:1;
    unsigned int _ignoreToken:1;
    unsigned int _inheritsColor:1;
    unsigned int _isIdentifier:1;
    unsigned int _isSimpleToken:1;
    unsigned int _isVolatile:1;
    unsigned int _needToDirtyRightEdges:1;
    long long _langId;
    long long _token;
    XCSourceModelItem *_parent;
    NSMutableArray *_children;
}

+ (id)sourceModelItemWithRange:(struct _NSRange)arg1 language:(long long)arg2 token:(long long)arg3 color:(short)arg4;
- (void)clearIndexedColors;
- (long long)compare:(id)arg1;
- (id)followingItem;
- (id)precedingItem;
- (id)_lastLeafItem;
- (id)_firstLeafItem;
- (id)nextItem;
- (id)previousItem;
- (BOOL)isAncestorOf:(id)arg1;
- (id)childAdjoiningLocation:(unsigned long long)arg1;
- (id)childEnclosingLocation:(unsigned long long)arg1;
- (id)_childEnclosingLocation:(unsigned long long)arg1;
- (unsigned long long)indexOfChildAtLocation:(unsigned long long)arg1;
- (unsigned long long)indexOfChildAfterLocation:(unsigned long long)arg1;
- (unsigned long long)indexOfChildBeforeLocation:(unsigned long long)arg1;
- (id)children;
- (unsigned long long)numberOfChildren;
- (void)addChildren:(id)arg1;
- (void)addChild:(id)arg1;
- (void)assignParents:(id)arg1;
- (void)setParent:(id)arg1;
- (id)parent;
- (BOOL)isVolatile;
- (void)setVolatile:(BOOL)arg1;
- (BOOL)needToDirtyRightEdges;
- (void)setNeedToDirtyRightEdges:(BOOL)arg1;
- (BOOL)isSimpleToken;
- (void)setIsSimpleToken:(BOOL)arg1;
- (BOOL)inheritsColor;
- (void)setInheritsColor:(BOOL)arg1;
- (BOOL)ignoreToken;
- (void)setIgnoreToken:(BOOL)arg1;
- (BOOL)dirty;
- (void)setDirty:(BOOL)arg1;
- (long long)token;
- (void)setToken:(long long)arg1;
- (long long)langId;
- (BOOL)isIdentifier;
- (short)rawColorId;
- (BOOL)isOpaque;
- (void)setIsOpaque:(BOOL)arg1;
- (short)colorId;
- (void)setColorId:(short)arg1;
- (struct _NSRange)innerRange;
- (void)offsetBy:(long long)arg1;
- (void)setRange:(struct _NSRange)arg1;
- (struct _NSRange)range;
- (id)enclosingBlock;
- (long long)blockDepth;
- (void)setIsBlock:(BOOL)arg1;
- (BOOL)isBlock;
- (void)dirtyRange:(struct _NSRange)arg1 changeInLength:(long long)arg2;
- (void)dirtyRelativeRange:(struct _NSRange)arg1 changeInLength:(long long)arg2;
- (void)validate;
- (id)dumpContext;
- (id)contextArray;
- (id)simpleDescription;
- (id)diffableDescription;
- (id)description;
- (id)innerDescription:(id)arg1 showSelf:(BOOL)arg2;
- (void)dealloc;
- (id)initWithRange:(struct _NSRange)arg1 language:(long long)arg2 token:(long long)arg3 color:(short)arg4;

@end

@interface XCSourceScannerItem : NSObject <XCScannerItem>
{
    NSString *name;
    NSMutableArray *children;
    int type;
    XCSourceScannerItem *parent;
    struct _NSRange nameRange;
    struct _NSRange range;
    long long nestingLevel;
    long long indentLevel;
}

- (long long)compareWithScannerItem:(id)arg1;
- (void)setIndentLevel:(long long)arg1;
- (long long)indentLevel;
- (void)setNestingLevel:(long long)arg1;
- (long long)nestingLevel;
- (void)setRange:(struct _NSRange)arg1;
- (struct _NSRange)range;
- (void)setNameRange:(struct _NSRange)arg1;
- (struct _NSRange)nameRange;
- (void)setParent:(id)arg1;
- (id)parent;
- (BOOL)isDeclaration;
- (void)setType:(int)arg1;
- (int)type;
- (long long)numberOfChildren;
- (id)childAtIndex:(long long)arg1;
- (void)addChild:(id)arg1;
- (void)setName:(id)arg1;
- (id)nameWithIndent;
- (id)name;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)initWithName:(id)arg1 type:(long long)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XCSourceTokens : NSObject
{
    NSMutableSet *_tokens;
    BOOL _caseSensitive;
}

+ (long long)addTokenForString:(id)arg1;
+ (long long)_tokenForString:(id)arg1;
- (id)allTokens;
- (long long)tokenForString:(id)arg1;
- (BOOL)containsToken:(id)arg1;
- (void)setCaseSensitive:(BOOL)arg1;
- (void)addArrayOfStrings:(id)arg1;
- (void)dealloc;
- (id)initWithArrayOfStrings:(id)arg1 caseSensitive:(BOOL)arg2;

@end

@interface XCSyntaxTypeSpecification : XCSpecification
{
    BOOL _inheritsColor;
    BOOL _isMark;
    BOOL _includeInPreferences;
    BOOL _ignoreToken;
    BOOL _isLink;
    NSString *_urlFormat;
    NSString *_nameFormat;
    NSString *_oldDefaultName;
    NSColor *_color;
}

+ (id)specificationRegistryName;
+ (id)specificationTypePathExtensions;
+ (id)localizedSpecificationTypeName;
+ (id)specificationType;
+ (Class)specificationTypeBaseClass;
- (id)color;
- (id)oldDefaultFont;
- (id)oldDefaultColor;
- (id)nameFormat;
- (id)urlFormat;
- (BOOL)isLink;
- (BOOL)ignoreToken;
- (BOOL)includeInPreferences;
- (BOOL)isMark;
- (BOOL)inheritsColor;
- (void)dealloc;
- (id)initWithPropertyListDictionary:(id)arg1 inDomain:(id)arg2;

@end

@interface XCTextAnnotationIndicatorAnimation : NSAnimation
{
    XCTextAnnotationView *_annotationView;
    NSWindow *_window;
    struct CGAffineTransform _originalWindowTransform;
}

@property(retain, nonatomic) XCTextAnnotationView *annotationView; // @synthesize annotationView=_annotationView;
- (void)setCurrentProgress:(float)arg1;
- (void)stopAnimation;
- (void)startAnimation;
- (void)_clearAnnotationIndicator;
- (void)_fadeAnnotationIndicator:(double)arg1;
- (void)_pulseAnnotationIndicator:(double)arg1;
- (void)dealloc;
- (id)init;

@end

@interface XCTextColor : NSObject
{
    NSString *_colorName;
    short _colorId;
    NSColor *_color;
    NSFont *_font;
    XCSyntaxTypeSpecification *_syntaxType;
}

- (void)setFont:(id)arg1;
- (id)font;
- (id)syntaxType;
- (id)defaultColor;
- (void)setColor:(id)arg1;
- (id)color;
- (short)colorId;
- (id)name;
- (void)dealloc;
- (id)initWithName:(id)arg1 colorId:(short)arg2;

@end

@interface XCTextColorPreferences : NSObject
{
}

+ (id)defaultColorForId:(short)arg1;
+ (id)syntaxTypeSpecificationForId:(short)arg1;
+ (id)fontForId:(short)arg1;
+ (id)colorForId:(short)arg1;
+ (id)colorNameForId:(short)arg1;
+ (id)textColorForId:(short)arg1;
+ (short)registerColor:(id)arg1;
+ (void)initialize;

@end

@interface XCTextFileLocation (DevToolsInterfaceExtensions)
- (struct _NSRange)characterRangeInTextStorage:(id)arg1;
@end

@interface XCTextPreferences : NSObject
{
}

+ (void)setSmartClosingBrackets:(BOOL)arg1;
+ (BOOL)getSmartClosingBrackets;
+ (void)setIndentSlashSlashComments:(BOOL)arg1;
+ (BOOL)getIndentSlashSlashComments;
+ (void)setAlignConsecutiveSlashSlashComments:(BOOL)arg1;
+ (BOOL)getAlignConsecutiveSlashSlashComments;
+ (void)setIndentSoloBraces:(BOOL)arg1;
+ (BOOL)getIndentSoloBraces;
+ (void)setSoloBraceIndentWidthPreference:(long long)arg1;
+ (long long)getSoloBraceIndentWidthPreference;
+ (void)setBeepOnNoMatchingBracePreference:(BOOL)arg1;
+ (BOOL)getBeepOnNoMatchingBracePreference;
+ (void)setShowMatchingBracePreference:(BOOL)arg1;
+ (BOOL)getShowMatchingBracePreference;
+ (BOOL)getSelectToInsideMatchingQuotesPreference;
+ (void)setSelectToInsideMatchingBracesPreference:(BOOL)arg1;
+ (BOOL)getSelectToInsideMatchingBracesPreference;
+ (void)setSelectToMatchingBracePreference:(BOOL)arg1;
+ (BOOL)getSelectToMatchingBracePreference;
+ (BOOL)getScrollToEndOfMatchingBracePreference;
+ (void)setWrappedLineIndentWidthPreference:(long long)arg1;
+ (long long)getWrappedLineIndentWidthPreference;
+ (void)setIndentWrappedLinesPreference:(BOOL)arg1;
+ (BOOL)getIndentWrappedLinesPreference;
+ (void)setIndentWidth:(long long)arg1;
+ (long long)indentWidth;
+ (void)setTabWidth:(long long)arg1;
+ (long long)tabWidth;
+ (void)setUseTabs:(BOOL)arg1;
+ (BOOL)useTabs;
+ (void)setWrapLines:(BOOL)arg1;
+ (BOOL)wrapLines;
+ (void)setShowLineNumberInGutter:(BOOL)arg1;
+ (BOOL)showLineNumberInGutter;
+ (void)setShowGutter:(BOOL)arg1;
+ (BOOL)showGutter;
+ (float)syntaxColoringDelay;
+ (BOOL)foldingEnabled;
+ (void)setSyntaxColoringEnabled:(BOOL)arg1;
+ (BOOL)syntaxColoringEnabled;
+ (void)setCopySourceCodeAsRichText:(BOOL)arg1;
+ (BOOL)copySourceCodeAsRichText;
+ (void)setColorIndexedSymbolsDefault:(BOOL)arg1;
+ (void)setColorIndexedSymbols:(BOOL)arg1;
+ (BOOL)colorIndexedSymbols;
+ (void)initialize;

@end

@interface XCTextSidebarView : NSRulerView
{
    BOOL _showsSidebar;
    double _sidebarWidth;
    double _sidebarInvalidStripWidth;
    BOOL _showsFoldbar;
    double _foldbarWidth;
    NSColor *_sidebarBackgroundColor;
    NSColor *_foldbarBackgroundColor;
    BOOL _drawsLineNumbers;
    NSFont *_lineNumberFont;
    NSColor *_lineNumberTextColor;
    XCTextAnnotation *_annotationBeingDragged;
    unsigned long long _origLineNumberOfAnnotationBeingDragged;
    BOOL _draggedAnnotationHasTraveled;
    NSTimer *_foldingHoverTimer;
    XCTextAnnotation *_hitAnnotationForContextualMenu;
    struct CGPoint _mouseLocationForContextualMenu;
    unsigned long long _hitLineNumberForContextualMenu;
    NSColor *_badBreakpointStripColor;
    NSColor *_unknownBreakpointStripColor;
    id <XCTextSidebarViewBreakpointRangeDelegates> _breakpointRangeDelegate;
}

+ (id)defaultContextualMenu;
- (id)breakpointRangeDelegate;
- (void)setBreakpointRangeDelegate:(id)arg1;
- (id)annotationBeingDragged;
- (void)mouseUp:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)scrollWheel:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseMoved:(id)arg1;
- (void)_foldingHovered;
- (void)viewDidMoveToWindow;
- (id)lastMarkerControlClicked;
- (id)lastAnnotationControlClicked;
- (unsigned long long)lastLineNumberControlClicked;
- (struct CGPoint)lastPointControlClicked;
- (id)menuForEvent:(id)arg1;
- (id)annotationForPoint:(struct CGPoint)arg1;
- (unsigned long long)lineNumberForPoint:(struct CGPoint)arg1;
- (void)redrawLineNumbersIfNeeded;
- (void)drawRect:(struct CGRect)arg1;
- (struct CGRect)foldbarRect;
- (struct CGRect)sidebarRect;
- (id)sidebarCursor;
- (void)setUnknownBreakpointStripColor:(id)arg1;
- (id)unknownBreakpointStripColor;
- (void)setBadBreakpointStripColor:(id)arg1;
- (id)badBreakpointStripColor;
- (void)setFoldbarBackgroundColor:(id)arg1;
- (id)foldbarBackgroundColor;
- (void)setSidebarBackgroundColor:(id)arg1;
- (id)sidebarBackgroundColor;
- (void)setFoldbarWidth:(double)arg1;
- (double)foldbarWidth;
- (void)setSidebarInvalidStripWidth:(double)arg1;
- (double)sidebarInvalidStripWidth;
- (void)setSidebarWidth:(double)arg1;
- (double)sidebarWidth;
- (void)setLineNumberTextColor:(id)arg1;
- (id)lineNumberTextColor;
- (void)setLineNumberFont:(id)arg1;
- (id)lineNumberFont;
- (void)setDrawsLineNumbers:(BOOL)arg1;
- (BOOL)drawsLineNumbers;
- (void)setShowsFoldbar:(BOOL)arg1;
- (BOOL)showsFoldbar;
- (void)setShowsSidebar:(BOOL)arg1;
- (BOOL)showsSidebar;
- (void)_updateRulerThickness;
- (BOOL)displaysTooltips;
- (BOOL)acceptsFirstResponder;
- (void)setOrientation:(unsigned long long)arg1;
- (void)dealloc;
- (id)initWithScrollView:(id)arg1 orientation:(unsigned long long)arg2;

@end

@interface XCTextStorage : NSTextStorage
{
    NSMutableAttributedString *_contents;
    XCParagraphInfoTable *_paragraphInfoTable;
    struct _XCLineOffsetTable _lineOffsets;
    unsigned long long _numDateTimestampMappings;
    struct _XCDateTimestampMapping *_dateTimestampMappings;
    unsigned long long _numChanges;
    unsigned long long _changeCapacity;
    struct _XCChangeEntry *_changes;
    struct {
        unsigned int breakChangeCoalescing:1;
        unsigned int linesDidChangeDuringEdit:1;
        unsigned int doingSubWordMovement:1;
        unsigned int syntaxColoringEnabled:1;
        unsigned int delegateHandlesColoring:1;
        unsigned int doingBatchEdit:1;
        unsigned int subclassDoesSyntaxColoring:1;
        unsigned int initiatedEditingEvents:1;
        unsigned int callingBeginEditing:1;
        unsigned int callingEndEditing:1;
        unsigned int invalidatingOurAttrs:1;
        unsigned int fixingAttrs:1;
        unsigned int disableAnnotationAdjustment:1;
    } _tsflags;
    NSString *_language;
    XCSourceModel *_sourceModel;
    NSTimer *_sourceModelUpdater;
    struct _NSRange _rangeNeedingInvalidation;
    NSTimer *_invalidationTimer;
    NSMutableArray *_foldingTextStorages;
    NSDocument *_textFileDocument;
    double _advancementForSpace;
    void *RESERVED[1];
}

+ (BOOL)hasSeparateFonts;
+ (void)setHasSeparateFonts:(BOOL)arg1;
+ (void)initialize;
- (id)stringForItem:(id)arg1;
- (id)foldableBlockItemForLocation:(unsigned long long)arg1;
- (id)foldableBlockItemForLineAtLocation:(unsigned long long)arg1;
- (id)blockItemAtLocation:(unsigned long long)arg1;
- (id)lineStringFromBookmark:(id)arg1;
- (id)stringFromBookmark:(id)arg1;
- (struct _NSRange)lineRangeForRange:(struct _NSRange)arg1;
- (struct _NSRange)lineNumberRangeFromBookmark:(id)arg1;
- (struct _NSRange)characterRangeFromBookmark:(id)arg1;
- (id)fullString;
- (double)indentationForWrappedLineAtIndex:(unsigned long long)arg1;
- (unsigned long long)leadingWhitespacePositionsForLine:(unsigned long long)arg1;
- (BOOL)getUsesTabs;
- (long long)getIndentWidth;
- (long long)getTabWidth;
- (BOOL)isSubWordMovement;
- (void)setSubWordMovement:(BOOL)arg1;
- (unsigned long long)nextWordFromIndex:(unsigned long long)arg1 forward:(BOOL)arg2;
- (unsigned long long)xcNextWordFromIndex:(unsigned long long)arg1 forward:(BOOL)arg2;
- (struct _NSRange)doubleClickAtIndex:(unsigned long long)arg1 inRange:(struct _NSRange)arg2;
- (struct _NSRange)rangeOfWordAtIndex:(unsigned long long)arg1;
- (struct _NSRange)rangeOfWordAtIndex:(unsigned long long)arg1 allowNonWords:(BOOL)arg2;
- (id)rawMethodList;
- (void)addEntriesFromItem:(id)arg1 toParent:(id)arg2;
- (int)convertColorToScannerType:(long long)arg1;
- (id)fontAtCharacterIndex:(unsigned long long)arg1 inTextView:(id)arg2 effectiveRange:(struct _NSRange *)arg3;
- (id)colorAtCharacterIndex:(unsigned long long)arg1 inTextView:(id)arg2 effectiveRange:(struct _NSRange *)arg3;
- (long long)colorIdAtCharacterIndex:(unsigned long long)arg1 inTextView:(id)arg2 effectiveRange:(struct _NSRange *)arg3;
- (id)cachedSourceModelItemAtCharacterIndex:(unsigned long long)arg1;
- (id)cachedSourceModel;
- (id)sourceModelItemAtCharacterIndex:(unsigned long long)arg1;
- (id)sourceModel;
- (void)setSubclassDoesSyntaxColoring:(BOOL)arg1;
- (BOOL)subclassDoesSyntaxColoring;
- (void)setSyntaxColoringEnabled:(BOOL)arg1;
- (BOOL)syntaxColoringEnabled;
- (id)language;
- (void)setLanguage:(id)arg1;
- (void)fixAttributesInRange:(struct _NSRange)arg1;
- (void)invalidateAttributesAndDisplayInRange:(struct _NSRange)arg1;
- (void)fixSyntaxColoringInRange:(struct _NSRange)arg1;
- (BOOL)fixesAttributesLazily;
- (double)advancementForTab;
- (double)advancementForSpace;
- (void)resetAdvancementForSpace;
- (void)endEditing;
- (void)beginEditing;
- (id)attribute:(id)arg1 atIndex:(unsigned long long)arg2 effectiveRange:(struct _NSRange *)arg3;
- (void)setAttributes:(id)arg1 range:(struct _NSRange)arg2;
- (void)replaceCharactersInRange:(struct _NSRange)arg1 withAttributedString:(id)arg2;
- (void)replaceCharactersInRange:(struct _NSRange)arg1 withString:(id)arg2;
- (id)attribute:(id)arg1 atIndex:(unsigned long long)arg2 longestEffectiveRange:(struct _NSRange *)arg3 inRange:(struct _NSRange)arg4;
- (id)attributesAtIndex:(unsigned long long)arg1 longestEffectiveRange:(struct _NSRange *)arg2 inRange:(struct _NSRange)arg3;
- (id)attributedSubstringFromRange:(struct _NSRange)arg1;
- (id)attributesAtIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;
- (unsigned long long)length;
- (id)string;
- (void)processEditing;
- (void)_updateSourceModel:(id)arg1;
- (void)scheduleLazyInvalidationForRange:(struct _NSRange)arg1;
- (void)_invalidateCallback:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)validateDelegateColorHandling;
- (struct _NSRange)characterRangeForLineRange:(struct _NSRange)arg1 atDate:(id)arg2;
- (unsigned long long)timestampForDate:(id)arg1;
- (void)recordCurrentTimestampWithDate:(id)arg1;
- (struct _NSRange)rangeAtTimestamp:(unsigned long long)arg1 forRange:(struct _NSRange)arg2 atTimestamp:(unsigned long long)arg3;
- (void)_dumpChangeHistory;
- (void)clearChangeHistory;
- (BOOL)isAnnotationAdjustmentEnabled;
- (void)setAnnotationAdjustmentEnabled:(BOOL)arg1;
- (void)willReplaceCharactersInRange:(struct _NSRange)arg1 withString:(id)arg2 changeInLength:(long long)arg3;
- (void)didReplaceCharactersInRange:(struct _NSRange)arg1 withString:(id)arg2 changeInLength:(long long)arg3;
- (BOOL)isDoingBatchEdit;
- (void)doingBatchEdit:(BOOL)arg1;
- (struct _NSRange)lineRangeAtTimestamp:(unsigned long long)arg1 forLineRange:(struct _NSRange)arg2 atTimestamp:(unsigned long long)arg3;
- (struct _NSRange)characterRangeAtTimestamp:(unsigned long long)arg1 forCharacterRange:(struct _NSRange)arg2 atTimestamp:(unsigned long long)arg3;
- (void)breakChangeTrackingCoalescing;
- (unsigned long long)currentTimestamp;
- (void)invalidateLayoutForLineRange:(struct _NSRange)arg1;
- (id)debugInfoStringForFileNavigator;
- (unsigned long long)numberOfLines;
- (struct _NSRange)lineRangeForCharacterRange:(struct _NSRange)arg1;
- (struct _NSRange)characterRangeForLineRange:(struct _NSRange)arg1;
- (void)_dumpLineOffsetsTable;
- (id)stringFromUnsignedInts:(const unsigned long long *)arg1 count:(unsigned long long)arg2;
- (void)removeLayoutManager:(id)arg1;
- (void)addLayoutManager:(id)arg1;
- (void)addFoldingStorage:(id)arg1;
- (id)_contents;
- (void)setOwnedMutableAttributedString:(id)arg1;
- (void)finalize;
- (void)dealloc;
- (id)initWithOwnedMutableAttributedString:(id)arg1;
- (id)initWithAttributedString:(id)arg1;
- (id)initWithString:(id)arg1 attributes:(id)arg2;
- (id)initWithString:(id)arg1;
- (id)init;
- (unsigned long long)locationForOpeningBracketForClosingBracket:(unsigned long long)arg1 withArgs:(char *)arg2;
- (id)_parenLikeItemAtLocation:(unsigned long long)arg1;
- (BOOL)_isItemBracketExpression:(id)arg1;
- (BOOL)indentAtBeginningOfLineForCharacterRange:(struct _NSRange)arg1 undoManager:(id)arg2;
- (BOOL)isAtBOL:(struct _NSRange)arg1;
- (void)indentCharacterRange:(struct _NSRange)arg1 undoManager:(id)arg2;
- (void)indentLineRange:(struct _NSRange)arg1 undoManager:(id)arg2;
- (BOOL)indentLine:(long long)arg1 onlyIfMovingRight:(BOOL)arg2 undoManager:(id)arg3;
- (void)indentLine:(long long)arg1 to:(long long)arg2 undoManager:(id)arg3;
- (long long)firstNonblankForLine:(long long)arg1 convertTabs:(BOOL)arg2;
- (id)getTextForLineSansBlanks:(long long)arg1;
- (void)replaceCharactersInRange:(struct _NSRange)arg1 withAttributedString:(id)arg2 withUndoManager:(id)arg3;
- (void)replaceCharactersInRange:(struct _NSRange)arg1 withString:(id)arg2 withUndoManager:(id)arg3;
- (BOOL)isIndentable;
- (long long)getIndentForLine:(long long)arg1;
- (unsigned long long)firstColonAfterItem:(id)arg1 inRange:(struct _NSRange)arg2;
- (long long)columnForPositionConvertingTabs:(long long)arg1;

@end

@interface XCTextView : NSTextView <NSAnimationDelegate, NSLayoutManagerDelegate>
{
    double _pageGuideWidth;
    NSColor *_pageGuideOutOfBoundsColor;
    long long _pageNumber;
    double _highlightStartY;
    double _highlightHeight;
    NSColor *_highlightBaseColor;
    BOOL _observingHighlightColorChangedNotification;
    BOOL _isMouseInsideView;
    BOOL _isDoingBatchEdit;
    struct _NSRange _lastSelectedRangeDuringBatchEdit;
    BOOL _allowsCodeFolding;
    BOOL _showingCodeFocus;
    unsigned long long _oldFocusLocation;
    NSAnimation *_blockAnimation;
    struct CGPoint _lastMouseMovedLocation;
    unsigned long long _modifierFlagsAtLastSingleMouseDown;
    XCTextSelectionSymbolInfo *_selectionSymbolInfo;
    XCDiffComparatorView *_comparatorView;
    struct _NSRange _foldingHoverRange;
    NSTimer *_foldingHoverTimer;
    struct CGPoint _foldingHoverLocation;
    XCTextAnnotation *_draggedAnnotation;
    XCTextAnnotationIndicatorAnimation *_annotationIndicatorAnimation;
    unsigned long long _autoHighlightTokenOption;
    double _autoHighlightTokenDelay;
    NSTimer *_autoHighlightTokenTimer;
    DTMutableRangeArray *_autoHighlightTokenRanges;
    double _autoHighlightTokenMenuDelay;
    NSTimer *_autoHighlightTokenMenuTimer;
    struct _NSRange _autoHighlightTokenMenuRange;
    double _autoHighlightTokenMenuAnimationDuration;
    NSTimer *_autoHighlightTokenMenuAnimationTimer;
    double _autoHighlightTokenMenuAnimationStartTime;
    NSWindow *_autoHighlightTokenWindow;
    BOOL _isTokenizedEditingEnabled;
    DTMutableRangeArray *_tokenizedEditingTokenRanges;
    unsigned long long _tokenizedEditingEditedTokenIndex;
    unsigned long long _tokenizedEditingDeferedOffset;
    struct _NSRange _tokenizedEditingSelectionRange;
    NSColor *_tokenizedEditingTokenColors[4];
    DTRangeArray *_foundRanges;
    unsigned long long _currentFoundRange;
    NSColor *_foundRangesHighlightColor;
    BOOL _animatesCurrentScroll;
    BOOL _disableUpdatingInsertionPointCount;
}

+ (void)setTextEditorInsertionPointColor:(id)arg1;
+ (id)textEditorInsertionPointColor;
+ (void)setTextEditorSelectionBackgroundColor:(id)arg1;
+ (id)textEditorSelectionBackgroundColor;
+ (void)setTextEditorBackgroundColor:(id)arg1;
+ (id)textEditorBackgroundColor;
+ (void)setBackgroundStyle:(int)arg1;
+ (int)backgroundStyle;
+ (id)blockHighlightColor;
+ (void)initialize;
- (void)setFoundRangesHighlightColor:(id)arg1;
- (void)drawFoundRangesInRange:(struct _NSRange)arg1;
- (unsigned long long)currentFoundRange;
- (void)setCurrentFoundRange:(unsigned long long)arg1;
- (void)setFoundRanges:(id)arg1;
- (id)sidebarView;
- (void)setNeedsDisplayInSidebar:(BOOL)arg1;
- (void)unfoldAllComments:(id)arg1;
- (void)foldAllComments:(id)arg1;
- (void)unfoldAllMethods:(id)arg1;
- (void)foldAllMethods:(id)arg1;
- (void)unfoldRecursive:(id)arg1;
- (void)unfold:(id)arg1;
- (void)unfoldAll:(id)arg1;
- (void)foldSelection:(id)arg1;
- (void)foldRecursive:(id)arg1;
- (void)fold:(id)arg1;
- (BOOL)readSelectionFromPasteboard:(id)arg1 type:(id)arg2;
- (BOOL)writeSelectionToPasteboard:(id)arg1 type:(id)arg2;
- (BOOL)writeRTFSelectionToPasteboard:(id)arg1;
- (id)writablePasteboardTypes;
- (void)PBX_balanceParens:(id)arg1;
- (void)PBX_nestLeft:(id)arg1;
- (void)PBX_nestRight:(id)arg1;
- (void)PBX_doUserIndentByNumberOfLevels:(long long)arg1;
- (void)showMatchingBraceAtLocation:(id)arg1;
- (void)PBX_textViewDidChangeSelection:(id)arg1;
- (void)PBX_toggleShowsInvisibleCharacters:(id)arg1;
- (void)PBX_toggleShowsControlCharacters:(id)arg1;
- (id)layoutManager:(id)arg1 shouldUseTemporaryAttributes:(id)arg2 forDrawingToScreen:(BOOL)arg3 atCharacterIndex:(unsigned long long)arg4 effectiveRange:(struct _NSRange *)arg5;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)selectPreviousToken:(id)arg1;
- (void)selectNextToken:(id)arg1;
- (void)toggleTokenizedEditing:(id)arg1;
- (id)tokenizedEditingSelectedTokenBackgroundColor;
- (void)setTokenizedEditingSelectedTokenBackgroundColor:(id)arg1;
- (id)tokenizedEditingSelectedTokenBorderColor;
- (void)setTokenizedEditingSelectedTokenBorderColor:(id)arg1;
- (id)tokenizedEditingTokenBackgroundColor;
- (void)setTokenizedEditingTokenBackgroundColor:(id)arg1;
- (id)tokenizedEditingTokenBorderColor;
- (void)setTokenizedEditingTokenBorderColor:(id)arg1;
- (id)tokenizedEditingTokenPathsForCharacterRange:(struct _NSRange)arg1;
- (id)tokenPathsForCharacterRange:(struct _NSRange)arg1 displayOnly:(BOOL)arg2;
- (void)textStorage:(id)arg1 didEditRange:(struct _NSRange)arg2 changeInLength:(long long)arg3;
- (void)textStorage:(id)arg1 willEditRange:(struct _NSRange)arg2 changeInLength:(long long)arg3;
- (struct _NSRange)tokenizedEditingSelectionRange;
- (void)setTokenizedEditingSelectionRange:(struct _NSRange)arg1;
- (id)tokenizedEditingTokenRanges;
- (BOOL)isTokenizedEditingEnabled;
- (void)setTokenizedEditingEnabled:(BOOL)arg1;
- (void)updateTokenizedEditingRanges;
- (id)tokenizableItemsForRealRange:(struct _NSRange)arg1;
- (void)scheduleAutoHighlightTokenTimerIfNeeded;
- (void)_autoHighlightTokenWithTimer:(id)arg1;
- (void)scheduleAutoHighlightTokenMenuTimerIfNeeded;
- (void)_showAutoHighlightTokenMenuWithTimer:(id)arg1;
- (id)_autoHighlightTokenWindowWithTokenRect:(struct CGRect)arg1;
- (void)scheduleAutoHighlightTokenMenuAnimationTimerIfNeeded;
- (struct CGRect)_hitTestRectForAutoHighlightTokenWindow:(id)arg1;
- (struct CGRect)_autoHighlightTokenRectAtPoint:(struct CGPoint)arg1;
- (struct _NSRange)_autoHighlightTokenMenuRangeAtPoint:(struct CGPoint)arg1;
- (void)_animateAutoHighlightTokenMenuWithTimer:(id)arg1;
- (void)_popUpTokenMenu:(id)arg1;
- (BOOL)_isAutoHighlightTokenMenuOverridden;
- (id)autoHighlightTokenMenu;
- (void)clearAutoHighlightTokenMenu;
- (void)clearDisplayForAutoHighlightTokens;
- (void)_displayAutoHighlightTokens;
- (double)autoHighlightTokenMenuDelay;
- (void)setAutoHighlightTokenMenuDelay:(double)arg1;
- (double)autoHighlightTokenDelay;
- (void)setAutoHighlightTokenDelay:(double)arg1;
- (unsigned long long)autoHighlightTokenOption;
- (void)setAutoHighlightTokenOption:(unsigned long long)arg1;
- (id)completionColor;
- (id)commonCharactersColor;
- (struct _NSRange)completionIndicatorRange;
- (struct _NSRange)liveInlineCommonCharactersRange;
- (BOOL)isInlineCompleting;
- (void)setFoldsFromString:(id)arg1;
- (id)foldString;
- (long long)_currentLineNumber;
- (struct _NSRange)rangeOfCenterLine;
- (struct _NSRange)visibleRange;
- (void)doingBatchEdit:(BOOL)arg1;
- (id)annotationForSubview:(id)arg1;
- (id)annotationBeingDragged;
- (BOOL)shouldDelayWindowOrderingForEvent:(id)arg1;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (void)cursorUpdate:(id)arg1;
- (void)rightMouseDown:(id)arg1;
- (void)rightMouseUp:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)mouseUp:(id)arg1;
- (void)mouseDown:(id)arg1;
- (unsigned long long)modifierFlagsAtLastSingleMouseDown;
- (id)hitTest:(struct CGPoint)arg1;
- (void)scrollWheel:(id)arg1;
- (void)_toolTipTimer;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)mouseMoved:(id)arg1;
- (void)_mouseInside:(id)arg1;
- (void)removeFromSuperview;
- (void)viewDidMoveToWindow;
- (void)animation:(id)arg1 didReachProgressMark:(float)arg2;
- (void)animationDidEnd:(id)arg1;
- (void)animationDidStop:(id)arg1;
- (BOOL)animationShouldStart:(id)arg1;
- (void)stopBlockHighlighting;
- (void)startBlockHighlighting;
- (void)focusLocationMayHaveChanged:(id)arg1;
- (void)toggleCodeFocus:(id)arg1;
- (void)_drawViewBackgroundInRect:(struct CGRect)arg1;
- (void)_drawTokensInRect:(struct CGRect)arg1;
- (void)drawTextAnnotationInRect:(struct CGRect)arg1;
- (long long)_drawRoundedBackgroundForItem:(id)arg1 dynamicItem:(id)arg2;
- (id)_roundedRect:(struct CGRect)arg1 withRadius:(double)arg2;
- (unsigned long long)_drawBlockBackground:(struct CGRect)arg1 atLocation:(unsigned long long)arg2 forItem:(id)arg3 dynamicItem:(id)arg4;
- (double)_grayLevelForDepth:(long long)arg1;
- (id)alternateColor;
- (void)setFoldingHoverRange:(struct _NSRange)arg1;
- (struct _NSRange)foldingHoverRange;
- (void)setNeedsDisplayInRect:(struct CGRect)arg1 avoidAdditionalLayout:(BOOL)arg2;
- (void)drawRect:(struct CGRect)arg1;
- (void)_drawRect:(struct CGRect)arg1 clip:(BOOL)arg2;
- (void)_drawOverlayRect:(struct CGRect)arg1;
- (id)visibleAnnotations;
- (BOOL)shouldDrawAnnotation:(id)arg1;
- (unsigned long long)_charLocationForMousePoint:(struct CGPoint)arg1;
- (void)setShowsFoldingSidebar:(BOOL)arg1;
- (BOOL)showsFoldingSidebar;
- (void)showAnnotationIndicatorForAnnotation:(id)arg1;
- (id)annotationsForLineNumberRange:(struct _NSRange)arg1;
- (void)getParagraphRect:(struct CGRect *)arg1 firstLineRect:(struct CGRect *)arg2 forLineNumber:(unsigned long long)arg3;
- (struct _NSRange)lineNumberRangeForBoundingRect:(struct CGRect)arg1;
- (unsigned long long)lineNumberForPoint:(struct CGPoint)arg1;
- (void)breakUndoCoalescing;
- (void)scrollRangeToVisible:(struct _NSRange)arg1 animate:(BOOL)arg2;
- (void)insertText:(id)arg1 replacementRange:(struct _NSRange)arg2;
- (BOOL)allowsCodeFolding;
- (void)setAllowsCodeFolding:(BOOL)arg1;
- (void)setTextStorage:(id)arg1;
- (void)setTextStorage:(id)arg1 keepOldLayout:(BOOL)arg2;
- (id)textStorage;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1 textContainer:(id)arg2;
- (id)init;
- (void)_commonInit;
- (id)backgroundColor;
- (void)doCommandBySelector:(SEL)arg1;
- (struct CGRect)_accessibilityBoundsOfChild:(id)arg1;
- (id)accessibilityStyleRangeForIndexAttributeForParameter:(id)arg1;
- (id)accessibilityAttributedStringForRangeAttributeForParameter:(id)arg1;
- (id)accessibilityRTFForRangeAttributeForParameter:(id)arg1;
- (id)accessibilityBoundsForRangeAttributeForParameter:(id)arg1;
- (id)accessibilityRangeForIndexAttributeForParameter:(id)arg1;
- (id)accessibilityStringForRangeAttributeForParameter:(id)arg1;
- (id)accessibilitySharedTextUIElementsAttribute;
- (void)accessibilitySetVisibleCharacterRangeAttribute:(id)arg1;
- (id)accessibilityNumberOfCharactersAttribute;
- (void)accessibilitySetSelectedTextRangesAttribute:(id)arg1;
- (id)accessibilitySelectedTextRangesAttribute;
- (void)accessibilitySetSelectedTextRangeAttribute:(id)arg1;
- (void)accessibilitySetValueAttribute:(id)arg1;
- (id)accessibilityValueAttribute;
- (id)accessibilityTextLinkAtIndex:(unsigned long long)arg1;
- (id)accessibilityTextLinks;
- (id)accessibilityAttachmentAtIndex:(unsigned long long)arg1;
- (unsigned long long)accessibilityIndexForAttachment:(id)arg1;
- (id)accessibilityAttachments;
- (struct _NSRange)accessibilitySharedCharacterRange;
- (id)accessibilitySharedTextViews;
- (struct _NSRange)accessibilityStyleRangeForCharacterIndex:(unsigned long long)arg1;
- (id)accessibilityAXAttributedStringForCharacterRange:(struct _NSRange)arg1 parent:(id)arg2;
- (id)accessibilityRTFForCharacterRange:(struct _NSRange)arg1;
- (struct CGRect)accessibilityBoundsForCharacterRange:(struct _NSRange)arg1;
- (struct _NSRange)accessibilityCharacterRangeForPosition:(struct CGPoint)arg1;
- (struct _NSRange)accessibilityCharacterRangeForLineNumber:(unsigned long long)arg1;
- (unsigned long long)accessibilityLineNumberForCharacterIndex:(unsigned long long)arg1;
- (unsigned long long)accessibilityInsertionPointLineNumber;
- (void)accessibilitySetVisibleCharacterRange:(struct _NSRange)arg1;
- (struct _NSRange)accessibilityVisibleCharacterRange;
- (void)accessibilitySetSelectedRange:(struct _NSRange)arg1;
- (struct _NSRange)accessibilitySelectedRange;
- (void)accessibilitySetSelectedText:(id)arg1;
- (id)accessibilitySelectedText;
- (void)setTypingAttributes:(id)arg1;
- (void)viewDidEndLiveResize;
- (void)viewWillStartLiveResize;
- (void)_scrollRangeToVisible:(struct _NSRange)arg1 forceCenter:(BOOL)arg2;
- (void)_centeredScrollRectToVisible:(struct CGRect)arg1 forceCenter:(BOOL)arg2;
- (void)_adjustedCenteredScrollRectToVisible:(struct CGRect)arg1 forceCenter:(BOOL)arg2;
- (void)_setFrameSize:(struct CGSize)arg1 forceScroll:(BOOL)arg2;
- (BOOL)_ensureLayoutCompleteForVisibleRectWithExtension:(BOOL)arg1;
- (void)_ensureLayoutCompleteToEndOfCharacterRange:(struct _NSRange)arg1;
- (void)_sizeDownIfPossible;
- (void)setMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2;
- (BOOL)performDragOperation:(id)arg1;
- (void)_fixDragAndDropCharRangesForChangeInRanges:(id)arg1 replacementStrings:(id)arg2;
- (void)_userReplaceRange:(struct _NSRange)arg1 withString:(id)arg2;
- (void)didChangeText;
- (BOOL)shouldChangeTextInRanges:(id)arg1 replacementStrings:(id)arg2;
- (void)showFindIndicatorForRange:(struct _NSRange)arg1;
- (void)_showFindIndicator;
- (void)scrollRangeToVisible:(struct _NSRange)arg1;
- (BOOL)scrollRectToVisible:(struct CGRect)arg1;
- (void)scrollPoint:(struct CGPoint)arg1;
- (void)drawInsertionPointInRect:(struct CGRect)arg1 color:(id)arg2 turnedOn:(BOOL)arg3;
- (void)updateInsertionPointStateAndRestartTimer:(BOOL)arg1;
- (void)setSelectedRanges:(id)arg1 affinity:(unsigned long long)arg2 stillSelecting:(BOOL)arg3;
- (id)selectedRanges;
- (void)setSelectedRange:(struct _NSRange)arg1;
- (struct _NSRange)selectedRange;
- (void)selectAll:(id)arg1;
- (void)becomeMainWindow;
- (void)resignKeyWindow;
- (void)becomeKeyWindow;
- (BOOL)becomeFirstResponder;
- (BOOL)resignFirstResponder;
- (void)_invalidateDisplayForViewStatusChange;
- (void)resetCursorRects;
- (void)_invalidateAllRevealovers;
- (void)indentSelectionIfIndentable:(id)arg1;
- (void)indentSelection:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XCTokenizedEditingUndoHelper : NSObject
{
    NSUndoTextOperation *_undoTextOperation;
    DTMutableRangeArray *_affectedRanges;
    DTMutableRangeArray *_replacementRanges;
    unsigned long long _editedTokenIndex;
}

- (void)didUndoRedo:(id)arg1;
- (void)willUndoRedo:(id)arg1;
- (void)didCoalesceAffectedRange:(struct _NSRange)arg1 replacementRange:(struct _NSRange)arg2 selectedRange:(struct _NSRange)arg3 text:(id)arg4;
- (void)willCoalesceAffectedRange:(struct _NSRange)arg1 replacementRange:(struct _NSRange)arg2 selectedRange:(struct _NSRange)arg3 text:(id)arg4;
- (id)replacementRanges;
- (id)affectedRanges;
- (void)dealloc;
- (id)initWithUndoTextOperation:(id)arg1 affectedRange:(struct _NSRange)arg2 layoutManager:(id)arg3 undoManager:(id)arg4 replacementRange:(struct _NSRange)arg5;

@end

@interface XCUndoMultiEdits : NSObject
{
    struct _NSRange _affectedRange;
    NSUndoManager *_undoManager;
    NSLayoutManager *_layoutManager;
    struct _NSRange _replacementRange;
    NSAttributedString *_attributedString;
}

- (BOOL)isSupportingCoalescing;
- (void)undoRedo:(id)arg1;
- (struct _NSRange)affectedRange;
- (void)setReplacementRange:(struct _NSRange)arg1;
- (void)setAffectedRange:(struct _NSRange)arg1;
- (id)undoManager;
- (id)firstTextViewForTextStorage:(id)arg1;
- (void)dealloc;
- (id)initWithAffectedRange:(struct _NSRange)arg1 layoutManager:(id)arg2 undoManager:(id)arg3 replacementRange:(struct _NSRange)arg4;

@end

@interface XCUndoReplaceCharacters : NSUndoReplaceCharacters
{
    XCTokenizedEditingUndoHelper *_tokenizedEditingUndoHelper;
}

- (void)undoRedo:(id)arg1;
- (id)replacementRanges;
- (id)affectedRanges;
- (void)dealloc;
- (id)initWithAffectedRange:(struct _NSRange)arg1 layoutManager:(id)arg2 undoManager:(id)arg3 replacementRange:(struct _NSRange)arg4;

@end

@interface XCUndoTyping : NSUndoTyping
{
    XCTokenizedEditingUndoHelper *_tokenizedEditingUndoHelper;
}

- (void)undoRedo:(id)arg1;
- (BOOL)coalesceAffectedRange:(struct _NSRange)arg1 replacementRange:(struct _NSRange)arg2 selectedRange:(struct _NSRange)arg3 text:(id)arg4;
- (id)replacementRanges;
- (id)affectedRanges;
- (void)dealloc;
- (id)initWithAffectedRange:(struct _NSRange)arg1 layoutManager:(id)arg2 undoManager:(id)arg3 replacementRange:(struct _NSRange)arg4;

@end

@interface XCVariableItemMatcher : XCSourceModelItemMatcher
{
}

+ (BOOL)canHandleSourceModelItem:(id)arg1 inTextView:(id)arg2;
- (id)matchedSourceModelItemsForSourceModelItem:(id)arg1;

@end

