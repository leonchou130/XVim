//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct DTBucketTag {
    struct DTBucketTag *_field1;
    struct DTBucketTag *_field2;
    struct DTBucketTag *_field3;
    id _field4;
};

struct _NSRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

#pragma mark Typedef'd Structures

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

typedef struct {
    double top;
    double bottom;
    double left;
    double right;
} CDStruct_f6c3f719;

typedef struct {
    long long version;
    CDUnknownFunctionPointerType retain;
    CDUnknownFunctionPointerType release;
    CDUnknownFunctionPointerType copyDescription;
    CDUnknownFunctionPointerType equal;
    CDUnknownFunctionPointerType hash;
} CDStruct_f2932e27;

typedef struct {
    long long version;
    CDUnknownFunctionPointerType retain;
    CDUnknownFunctionPointerType release;
    CDUnknownFunctionPointerType copyDescription;
    CDUnknownFunctionPointerType equal;
} CDStruct_b3b3fc87;

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/OtherFrameworks/DevToolsKit.framework/Versions/A/DevToolsKit
// UUID: C6029188-C0C7-3A8C-8347-3E9DD7F1342F
//
//                           Arch: x86_64
//                Current version: 6000.0.0
//          Compatibility version: 1.0.0
//                 Source version: 6000.0.0.0.0
//       Minimum Mac OS X version: 10.10.0
//                    SDK version: 10.10.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol DTDraggingInfo <NSDraggingInfo>
- (struct CGPoint)draggingLocationOnScreen;
- (NSDictionary *)draggingSourceContext;
- (void)setDraggedImageStateNeedsUpdate:(BOOL)arg1;
- (struct CGSize)draggingStickiness;
- (void)setDraggingStickiness:(struct CGSize)arg1;
- (DTDraggedImageState *)draggedImageState;
@end

@protocol NSAnimationDelegate <NSObject>

@optional
- (void)animation:(NSAnimation *)arg1 didReachProgressMark:(float)arg2;
- (float)animation:(NSAnimation *)arg1 valueForProgress:(float)arg2;
- (void)animationDidEnd:(NSAnimation *)arg1;
- (void)animationDidStop:(NSAnimation *)arg1;
- (BOOL)animationShouldStart:(NSAnimation *)arg1;
@end

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSDraggingInfo <NSObject>
@property long long numberOfValidItemsForDrop;
@property BOOL animatesToDestination;
@property long long draggingFormation;
- (void)enumerateDraggingItemsWithOptions:(unsigned long long)arg1 forView:(NSView *)arg2 classes:(NSArray *)arg3 searchOptions:(NSDictionary *)arg4 usingBlock:(void (^)(NSDraggingItem *, long long, char *))arg5;
- (NSArray *)namesOfPromisedFilesDroppedAtDestination:(NSURL *)arg1;
- (void)slideDraggedImageTo:(struct CGPoint)arg1;
- (long long)draggingSequenceNumber;
- (id)draggingSource;
- (NSPasteboard *)draggingPasteboard;
- (NSImage *)draggedImage;
- (struct CGPoint)draggedImageLocation;
- (struct CGPoint)draggingLocation;
- (unsigned long long)draggingSourceOperationMask;
- (NSWindow *)draggingDestinationWindow;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (BOOL)respondsToSelector:(SEL)arg1;
- (BOOL)conformsToProtocol:(Protocol *)arg1;
- (BOOL)isMemberOfClass:(Class)arg1;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (BOOL)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSOutlineViewDataSource <NSObject>

@optional
- (NSArray *)outlineView:(NSOutlineView *)arg1 namesOfPromisedFilesDroppedAtDestination:(NSURL *)arg2 forDraggedItems:(NSArray *)arg3;
- (BOOL)outlineView:(NSOutlineView *)arg1 acceptDrop:(id <NSDraggingInfo>)arg2 item:(id)arg3 childIndex:(long long)arg4;
- (unsigned long long)outlineView:(NSOutlineView *)arg1 validateDrop:(id <NSDraggingInfo>)arg2 proposedItem:(id)arg3 proposedChildIndex:(long long)arg4;
- (void)outlineView:(NSOutlineView *)arg1 updateDraggingItemsForDrag:(id <NSDraggingInfo>)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 writeItems:(NSArray *)arg2 toPasteboard:(NSPasteboard *)arg3;
- (void)outlineView:(NSOutlineView *)arg1 draggingSession:(NSDraggingSession *)arg2 endedAtPoint:(struct CGPoint)arg3 operation:(unsigned long long)arg4;
- (void)outlineView:(NSOutlineView *)arg1 draggingSession:(NSDraggingSession *)arg2 willBeginAtPoint:(struct CGPoint)arg3 forItems:(NSArray *)arg4;
- (id <NSPasteboardWriting>)outlineView:(NSOutlineView *)arg1 pasteboardWriterForItem:(id)arg2;
- (void)outlineView:(NSOutlineView *)arg1 sortDescriptorsDidChange:(NSArray *)arg2;
- (id)outlineView:(NSOutlineView *)arg1 persistentObjectForItem:(id)arg2;
- (id)outlineView:(NSOutlineView *)arg1 itemForPersistentObject:(id)arg2;
- (void)outlineView:(NSOutlineView *)arg1 setObjectValue:(id)arg2 forTableColumn:(NSTableColumn *)arg3 byItem:(id)arg4;
- (id)outlineView:(NSOutlineView *)arg1 objectValueForTableColumn:(NSTableColumn *)arg2 byItem:(id)arg3;
- (BOOL)outlineView:(NSOutlineView *)arg1 isItemExpandable:(id)arg2;
- (id)outlineView:(NSOutlineView *)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (long long)outlineView:(NSOutlineView *)arg1 numberOfChildrenOfItem:(id)arg2;
@end

@interface DTAbstractAssetGroup : NSObject
{
    NSString *displayName;
    DTAbstractAssetGroup *parentGroup;
    DTMutableOrderedSet *childGroups;
    DTAssetCategory *category;
    BOOL displayNameIsEditable;
    NSImage *image;
}

+ (id)assetGroupWithPropertyListRepresentation:(id)arg1 assetCategory:(id)arg2 andIdentifiedAssets:(id)arg3;
+ (id)defaultImage;
- (id)description;
- (void)describeInto:(id)arg1 withDepth:(long long)arg2;
- (BOOL)containsAsset:(id)arg1;
- (void)removeAllAssets;
- (void)removeAsset:(id)arg1;
- (void)addAsset:(id)arg1;
- (void)insertAsset:(id)arg1 atIndex:(long long)arg2;
- (id)deepAssets;
- (id)assetsEnumerator;
- (id)assets;
- (long long)numberOfAssets;
- (BOOL)assetsAreEditable;
- (id)firstChildGroupWithDisplayName:(id)arg1;
- (id)deepChildGroups;
- (long long)depth;
- (id)ancestors;
- (id)lineage;
- (id)displayNamePath;
- (id)indexPath;
- (BOOL)isLeafGroup;
- (long long)numberOfChildGroups;
- (void)setChildGroups:(id)arg1;
- (id)childGroupsEnumerator;
- (id)childGroups;
- (long long)indexOfGroup:(id)arg1;
- (void)removeAllGroups;
- (void)removeChildGroup:(id)arg1;
- (void)addChildGroup:(id)arg1;
- (void)insertChildGroup:(id)arg1 atIndex:(long long)arg2;
- (id)parentGroup;
- (void)setParentGroup:(id)arg1;
- (BOOL)groupsAreEditable;
- (void)didChangeGroups;
- (void)willChangeGroups;
- (void)didChangeAssets;
- (void)willChangeAssets;
- (void)setDisplayNameIsEditable:(BOOL)arg1;
- (BOOL)displayNameIsEditable;
- (void)setDisplayName:(id)arg1;
- (id)displayName;
- (void)setImage:(id)arg1;
- (id)image;
- (id)assetCategory;
- (void)dealloc;
- (void)buildPropertyListRepresentation:(id)arg1;
- (id)propertyListRepresentation;
- (id)initWithPropertyListRepresentation:(id)arg1 assetCategory:(id)arg2 andIdentifiedAssets:(id)arg3;
- (id)initWithDisplayName:(id)arg1 andAssetCategory:(id)arg2;

@end

@interface DTAsset : NSObject
{
    NSAttributedString *detailedDescription;
    NSAttributedString *detailedLabel;
    NSString *shortDescription;
    NSString *label;
    NSString *subtitle;
    NSString *identifier;
    NSImage *image;
    id representedObject;
    DTMutableOrderedSet *knownGroups;
    NSDate *lastUsedDate;
    DTAssetCategory *category;
    BOOL selected;
}

- (id)searchTerms;
- (double)timeIntervalSinceUsed;
- (id)knownGroups;
- (void)setCategory:(id)arg1;
- (id)assetCategory;
- (void)setLastUsedDate:(id)arg1;
- (id)lastUsedDate;
- (void)setIdentifier:(id)arg1;
- (id)identifier;
- (BOOL)isSelected;
- (void)setSelected:(BOOL)arg1;
- (id)representedObject;
- (void)setRepresentedObject:(id)arg1;
- (void)setSubtitle:(id)arg1;
- (id)subtitle;
- (void)setLabel:(id)arg1;
- (id)label;
- (void)setShortDescription:(id)arg1;
- (id)shortDescription;
- (void)setImage:(id)arg1;
- (id)image;
- (void)setDetailedLabel:(id)arg1;
- (id)detailedLabel;
- (void)setDetailedDescription:(id)arg1;
- (id)detailedDescription;
- (void)dealloc;
- (id)initWithIdentifier:(id)arg1;
- (void)removeKnownGroup:(id)arg1;
- (void)addKnownGroup:(id)arg1;

@end

@interface DTAssetAndGroupSet : NSObject
{
    NSSet *groups;
    DTAssetView *view;
    DTAsset *asset;
    BOOL isObservingAsset;
}

+ (id)observedAsssetKeyPaths;
- (void)assetViewWillDraw:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isEqualToAssetAndGroupSet:(id)arg1;
- (unsigned long long)hash;
- (id)asset;
- (id)view;
- (id)groups;
- (void)dealloc;
- (id)initWithAsset:(id)arg1 andGroups:(id)arg2;

@end

@interface DTAssetCategory : NSObject
{
    DTAbstractAssetGroup *rootGroup;
    DTAbstractAssetGroup *everythingGroup;
    NSMutableArray *orderedAssetSourceIdentifiers;
    NSMutableDictionary *assetSourceGroupsByAssetSourceID;
    NSMutableDictionary *identifiedAssets;
    NSString *displayName;
    NSString *identifier;
    DTAssetCategoryController *assetCategoryController;
}

+ (BOOL)isiLifeAssetCategory:(id)arg1;
+ (id)iMovieAssetCategory;
+ (id)iPhotoAssetCategory;
+ (id)regularGroupImage;
+ (id)smartGroupImage;
+ (id)everythingGroupImage;
+ (id)assetSourceGroupImage;
- (void)removeAllAssets;
- (void)removeAsset:(id)arg1;
- (void)addAsset:(id)arg1 toAssetSourceWithIdentifier:(id)arg2 subpath:(id)arg3;
- (id)assetWithIdentifier:(id)arg1;
- (id)groupWithDisplayPath:(id)arg1 fromGroup:(id)arg2 create:(BOOL)arg3;
- (void)setImage:(id)arg1 forAssetSourceWithIdentifier:(id)arg2 subpath:(id)arg3;
- (void)setDisplayName:(id)arg1 forAssetSourceWithIdentifier:(id)arg2;
- (void)removeSubpath:(id)arg1 fromAssetSourceWithIdentifier:(id)arg2;
- (id)subpathsForAssetSourceWithIdentifier:(id)arg1;
- (void)setLibraryGroupImage:(id)arg1;
- (void)setLibraryGroupDisplayName:(id)arg1;
- (void)removeAssetSourceWithIdentifier:(id)arg1;
- (void)addAssetSourceWithIdentifier:(id)arg1 andDisplayName:(id)arg2;
- (void)insertAssetSourceWithIdentifier:(id)arg1 andDisplayName:(id)arg2 atIndex:(long long)arg3;
- (void)setOrderedAssetSourceIdentifiers:(id)arg1;
- (id)orderedAssetSourceIdentifiers;
- (BOOL)containsAssetSourceWithIdentifier:(id)arg1;
- (BOOL)containsAssetWithIdentifier:(id)arg1;
- (id)assetGroupForAssetSourceWithIdentifier:(id)arg1;
- (id)everythingGroup;
- (id)rootGroup;
- (id)assets;
- (id)identifiedAssets;
- (id)displayName;
- (id)identifier;
- (id)assetCategoryController;
- (void)setAssetCategoryController:(id)arg1;
- (void)dealloc;
- (id)initWithIdentifier:(id)arg1 andDisplayName:(id)arg2;
- (id)placeholderImage;

@end

@interface DTAssetCategoryController : NSObject <NSOutlineViewDataSource>
{
    DTAssetDetailTextView *defaultAssetDetailView;
    DTAssetCategory *assetCategory;
    DTAssetLibrary *library;
    NSArray *draggedPairs;
    NSArray *draggedGroups;
    BOOL acceptedDraggedAssets;
    id delegate;
    struct CGSize initialDraggingOffset;
}

- (void)refreshAssetDetailView:(id)arg1 withAsset:(id)arg2;
- (void)assetAndGroupSet:(id)arg1 willDisplayAsset:(id)arg2 inAssetView:(id)arg3;
- (void)sizeAssetDetailView:(id)arg1 toFitSuggestedSize:(struct CGSize)arg2 forAsset:(id)arg3;
- (id)assetDetailViewForAsset:(id)arg1;
- (id)defaultAssetDetailView;
- (id)defaultAssetDetailViewIfCreated;
- (void)performRemoveAssetsFromLibrary:(id)arg1;
- (BOOL)canPerformRemoveAssetFromLibrary:(id)arg1;
- (BOOL)canPerformEditAsset:(id)arg1;
- (void)performEditAsset:(id)arg1;
- (id)searchTermsForAsset:(id)arg1;
- (id)objectPasteboardTypes;
- (id)assetGroupPasteboardType;
- (id)assetPasteboardType;
- (void)setDraggedPairs:(id)arg1;
- (id)draggedPairs;
- (id)draggedAssets;
- (void)setDraggedGroups:(id)arg1;
- (id)draggedGroups;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)setLibrary:(id)arg1;
- (id)library;
- (id)assetCategory;
- (void)dealloc;
- (id)initWithAssetCategory:(id)arg1;
- (id)libraryWindow;
- (id)assetTileViewForceSynchronizedContent:(BOOL)arg1;
- (id)assetTileViewContent;
- (id)groupOutlineView;
- (id)groupedTileView:(id)arg1 draggedImageState:(id)arg2;
- (void)groupedTileView:(id)arg1 concludeDragOperation:(id)arg2;
- (BOOL)groupedTileView:(id)arg1 performDragOperation:(id)arg2;
- (BOOL)groupedTileView:(id)arg1 prepareForDragOperation:(id)arg2;
- (void)groupedTileView:(id)arg1 draggingExited:(id)arg2;
- (unsigned long long)groupedTileView:(id)arg1 draggingEntered:(id)arg2;
- (unsigned long long)groupedTileView:(id)arg1 draggingUpdated:(id)arg2;
- (unsigned long long)calculateAssetViewDragOperation:(id)arg1 targetGroup:(id *)arg2 targetIndex:(long long *)arg3;
- (id)outlineView:(id)arg1 draggedImageState:(id)arg2;
- (BOOL)outlineView:(id)arg1 acceptDrop:(id)arg2 item:(id)arg3 childIndex:(long long)arg4;
- (unsigned long long)outlineView:(id)arg1 validateDrop:(id)arg2 proposedItem:(id)arg3 proposedChildIndex:(long long)arg4;
- (id)deserializeGroupsFromPropertyLists:(id)arg1;
- (unsigned long long)draggingOperationForDragInfo:(id)arg1 withTargetGroup:(id)arg2 targetCanBeMoveWithinGroup:(BOOL)arg3;
- (void)addObjectsFromDraggingInfo:(id)arg1 toGroup:(id)arg2;
- (void)insertObjectsFromDraggingInfo:(id)arg1 intoGroup:(id)arg2 atIndex:(long long)arg3;
- (void)runImagePickerWithImage:(id)arg1 asset:(id)arg2 assetSourceIdentifier:(id)arg3 group:(id)arg4 andIndex:(long long)arg5;
- (void)assetEditorController:(id)arg1 finishedEditingAsset:(id)arg2 returnCode:(long long)arg3 context:(id)arg4;
- (id)addAssetsFromDraggingInfo:(id)arg1 toGroup:(id)arg2 copy:(BOOL)arg3;
- (id)insertAssetsFromDraggingInfo:(id)arg1 intoGroup:(id)arg2 atIndex:(long long)arg3 copy:(BOOL)arg4;
- (struct CGSize)window:(id)arg1 draggingStickiness:(id)arg2;
- (id)window:(id)arg1 draggedImageState:(id)arg2;
- (void)window:(id)arg1 draggingEnded:(id)arg2;
- (void)window:(id)arg1 concludeDragOperation:(id)arg2;
- (BOOL)window:(id)arg1 performDragOperation:(id)arg2;
- (BOOL)window:(id)arg1 prepareForDragOperation:(id)arg2;
- (void)window:(id)arg1 draggingExited:(id)arg2;
- (unsigned long long)window:(id)arg1 draggingUpdated:(id)arg2;
- (unsigned long long)window:(id)arg1 draggingEntered:(id)arg2;
- (void)registerForDropTypes;
- (void)assetDetailView:(id)arg1 beginDraggingWithMouseDownEvent:(id)arg2 andMouseDraggedEvent:(id)arg3;
- (void)groupedTileViewDragSelectedItems:(id)arg1 withMouseDownEvent:(id)arg2 andMouseDraggedEvent:(id)arg3;
- (id)draggedImageStateForAssetGroupPairs:(id)arg1 draggedPair:(id)arg2 referenceRectForClickedItem:(struct CGRect *)arg3;
- (BOOL)outlineView:(id)arg1 writeItems:(id)arg2 toPasteboard:(id)arg3;
- (id)representativesForDraggedGroups:(id)arg1;
- (id)groupsForOutlineItems:(id)arg1;
- (void)draggedImage:(id)arg1 endedAt:(struct CGPoint)arg2 operation:(unsigned long long)arg3 withException:(id)arg4 shouldSlideBack:(char *)arg5;
- (void)dragAssetPairs:(id)arg1 withMouseDownEvent:(id)arg2 mouseDraggedEvent:(id)arg3 initialDraggedImageState:(id)arg4 allowedOperations:(unsigned long long)arg5 imageLocationInWindow:(struct CGPoint)arg6;
- (void)populatePasteboard:(id)arg1 withAssetAndCategoryPairs:(id)arg2 defaultDraggedImageState:(id *)arg3 identifierMapTable:(id *)arg4;
- (id)defaultDragImageState:(id)arg1;
- (id)initialDragImageState:(id)arg1;
- (id)smartAssetGroupRuleEditorController:(id)arg1 createViewForSmartRuleViewID:(id)arg2;
- (id)smartAssetGroupRuleEditorControllerRuleDefinitionsPropertyList:(id)arg1;
- (id)createViewForSmartRuleViewID:(id)arg1;
- (id)smartGroupRuleDefinitionsPropertyList;
- (id)operatorsForType:(id)arg1;
- (id)inputFieldForType:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DTAssetDetailImageView : NSImageView
{
    NSString *_imagePath;
    NSEvent *_downEvent;
    DTFirstResponderDrawingStrategy *firstResponderDrawingStrategy;
    BOOL showsFirstResponder;
}

- (unsigned long long)draggingSourceOperationMaskForLocal:(BOOL)arg1;
- (void)viewWillMoveToWindow:(id)arg1;
- (BOOL)resignFirstResponder;
- (BOOL)becomeFirstResponder;
- (BOOL)acceptsFirstResponder;
- (BOOL)showsFirstResponder;
- (void)setShowsFirstResponder:(BOOL)arg1;
- (id)imagePath;
- (void)setImagePath:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)_setDownEvent:(id)arg1;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)copy:(id)arg1;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface DTAssetDetailTextView : NSTextView
{
    DTFirstResponderDrawingStrategy *firstResponderDrawingStrategy;
    BOOL showsFirstResponder;
}

- (void)viewWillMoveToWindow:(id)arg1;
- (BOOL)resignFirstResponder;
- (BOOL)becomeFirstResponder;
- (BOOL)showsFirstResponder;
- (void)setShowsFirstResponder:(BOOL)arg1;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface DTAssetDetailView : NSView
{
    NSImage *image;
    NSAttributedString *label;
    NSString *helpIdentifier;
    NSView *helpButton;
    NSEvent *lastMouseDown;
    NSView *contentView;
    BOOL sizingToFit;
    id delegate;
    BOOL pressed;
}

- (void)mouseDragged:(id)arg1;
- (void)mouseUp:(id)arg1;
- (void)mouseDown:(id)arg1;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (void)viewDidMoveToSuperview;
- (void)viewWillMoveToSuperview:(id)arg1;
- (void)superviewFrameDidChange:(id)arg1;
- (void)takeLabelFromString:(id)arg1;
- (id)basicLabelAttributes;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)sizeToFit;
- (void)sizeToFitWidth:(double)arg1;
- (struct CGSize)suggestedSize;
- (double)headerHeight;
- (void)contentViewFrameDidChange:(id)arg1;
- (void)resizeSubviewsWithOldSize:(struct CGSize)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (id)effectiveHeaderBorderColor;
- (id)effectiveHeaderBackgroundColor;
- (struct CGRect)headerRect;
- (struct CGRect)labelAreaBounds;
- (struct CGRect)imageRect;
- (struct CGRect)imageAreaBounds;
- (BOOL)isFlipped;
- (void)setHelpIdentifier:(id)arg1;
- (id)helpIdentifier;
- (void)takeLabelFromTitle:(id)arg1 andSubtitle:(id)arg2;
- (void)setLabel:(id)arg1;
- (id)label;
- (void)setImage:(id)arg1;
- (id)image;
- (BOOL)isPressed;
- (void)setPressed:(BOOL)arg1;
- (id)contentView;
- (void)setContentView:(id)arg1;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (void)setLastMouseDown:(id)arg1;
- (id)lastMouseDown;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface DTAssetEditorController : NSObject
{
    NSTextField *labelTextField;
    NSTextField *subtitleTextField;
    NSTextField *shortDescriptionTextField;
    NSButton *cancelButton;
    NSButton *okButton;
    NSImageView *imageWell;
    NSTextView *detailedDescriptionTextView;
    NSPanel *editorPanel;
    DTAsset *editedAsset;
    id editedContext;
    id delegate;
}

- (void)startEditingAsset:(id)arg1 inWindow:(id)arg2 context:(id)arg3;
- (void)didAssetEditorSheet:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)okEditorSheet:(id)arg1;
- (void)cancelEditorSheet:(id)arg1;
- (void)configureInterfaceWithAsset:(id)arg1;
- (void)setEditedContext:(id)arg1;
- (id)editedContext;
- (void)setEditedAsset:(id)arg1;
- (id)editedAsset;
- (id)editedDetailedDescription;
- (id)editedImage;
- (id)editedShortDescription;
- (id)editedSubtitle;
- (id)editedLabel;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)dealloc;
- (id)init;

@end

@interface DTAssetGroup : DTAbstractAssetGroup
{
    DTMutableOrderedSet *assets;
    BOOL assetsAreEditable;
    BOOL groupsAreEditable;
}

- (BOOL)containsAsset:(id)arg1;
- (id)assetsEnumerator;
- (id)assets;
- (long long)numberOfAssets;
- (void)insertAsset:(id)arg1 atIndex:(long long)arg2;
- (void)removeAsset:(id)arg1;
- (void)setGroupsAreEditable:(BOOL)arg1;
- (BOOL)groupsAreEditable;
- (void)setAssetsAreEditable:(BOOL)arg1;
- (BOOL)assetsAreEditable;
- (void)dealloc;
- (id)initWithPropertyListRepresentation:(id)arg1 assetCategory:(id)arg2 andIdentifiedAssets:(id)arg3;
- (void)buildPropertyListRepresentation:(id)arg1;
- (id)initWithDisplayName:(id)arg1 andAssetCategory:(id)arg2;

@end

@interface DTAssetGroupOutlineView : NSOutlineView
{
}

- (void)keyDown:(id)arg1;
- (BOOL)_shouldAbortMouseDownAfterDragAttempt:(id)arg1;
- (id)delegate;
- (void)setDelegate:(id)arg1;

@end

@interface DTAssetLibrary : NSObject
{
    NSArray *visibleAssetCategories;
    NSMutableDictionary *categoryControllersByID;
    DTAssetCategoryController *activeAssetCategoryController;
    NSSegmentedControl *categoryControl;
    NSView *groupViewContainer;
    DTAssetDetailView *assetDetailView;
    NSWindow *libraryWindow;
    DTGroupedTileView *assetTileView;
    NSOutlineView *groupOutlineView;
    NSScrollView *groupScrollView;
    NSTreeController *groupController;
    NSSearchField *assetFilterField;
    NSSegmentedControl *actionControl;
    NSMenu *actionMenu;
    NSMenuItem *editMenuItem;
    NSPopUpButton *groupPopUp;
    long long assetViewStyle;
    NSMenu *groupMenu;
    DTSplitView *detailSplitter;
    DTSplitView *groupSplitter;
    NSMenuItem *viewAssetsAsIconsMenuItem;
    NSMenuItem *viewAssetsAsIconsAndLabelsMenuItem;
    NSMenuItem *viewAssetsAsSmallIconsAndLabelsMenuItem;
    NSMenuItem *viewAssetsAsIconsLabelsAndDescriptionsMenuItem;
    NSMenuItem *toggleGroupHeadersMenuItem;
    DTAsset *assetDetailViewAsset;
    double originalGroupPopUpHeight;
    double originalWindowMinWidth;
    double heightDeltaFromCategoryControlToMainSplitView;
    NSSet *allowedAssetViewStyles;
    NSString *libraryStorageSubpath;
    NSMutableDictionary *persistencePoliciesByContext;
    DTMutableOrderedDictionary *uiStatePersistencePoliciesByCategory;
    DTSmartAssetGroupRuleEditorController *smartAssetGroupRuleEditorController;
    BOOL synchronizingDetailViewContentViewWithAsset;
    BOOL isIconContentValid;
    BOOL isGroupMenuContentValid;
    BOOL viewingLeafGroup;
    BOOL identifiesAssetsPerGroup;
    BOOL inFilterMethod;
    BOOL restoredUserSettings;
    BOOL switchingGroupView;
    BOOL loadingInterface;
    BOOL filterCallbackIsPending;
    NSDate *lastFilterDate;
    NSString *filterString;
    NSArray *observedGroups;
    NSIndexSet *selectedAssetGroupPairIndexes;
    id delegate;
}

+ (id)synchronizedAssetKeyPathsForDetailView;
+ (BOOL)hasILMediaBrowser;
+ (id)assetLibraryImage;
+ (id)sharedInstance;
- (void)assetCategoryController:(id)arg1 willDisplayAsset:(id)arg2;
- (void)assetCategoryController:(id)arg1 sizeAssetDetailView:(id)arg2 toFitSuggestedSize:(struct CGSize)arg3 forAsset:(id)arg4;
- (void)assetCategoryController:(id)arg1 willDisplayAsset:(id)arg2 inAssetDetailView:(id)arg3;
- (id)assetCategoryController:(id)arg1 assetDetailViewForAsset:(id)arg2;
- (void)assetCategoryController:(id)arg1 removeAssets:(id)arg2;
- (id)assetCategoryControllerSmartGroupRuleDefinitionsPropertyList:(id)arg1;
- (id)assetCategoryController:(id)arg1 createViewForSmartRuleViewID:(id)arg2;
- (BOOL)assetCategoryController:(id)arg1 createAsset:(id *)arg2 andImage:(id *)arg3 forAssetSourceWithIdentifier:(id *)arg4 fromPasteboard:(id)arg5;
- (BOOL)assetCategoryController:(id)arg1 canCreateAssetsFromPasteboard:(id)arg2;
- (BOOL)assetCategoryController:(id)arg1 canCreateAssetsFromPasteboard:(id)arg2 targettingAssetSourceIdentifier:(id *)arg3;
- (void)assetCategoryController:(id)arg1 populatePasteboard:(id)arg2 withAssets:(id)arg3 defaultDraggedImageState:(id *)arg4 identifierMapTable:(id *)arg5;
- (void)assetCategoryController:(id)arg1 didFinishDraggingAssets:(id)arg2 info:(id)arg3 shouldSlideBack:(char *)arg4;
- (void)assetCategoryController:(id)arg1 willBeginDraggingAssets:(id)arg2;
- (BOOL)assetCategoryController:(id)arg1 isAssetUserEditable:(id)arg2;
- (void)assetCategoryController:(id)arg1 userDidEditAsset:(id)arg2;
- (BOOL)assetCategoryController:(id)arg1 canRemoveAsset:(id)arg2;
- (id)assetCategoryController:(id)arg1 searchTermsForAsset:(id)arg2;
- (id)assetCategoryControllerContentPasteboardTypes:(id)arg1;
- (void)userDidChooseGroupFromPopUp:(id)arg1;
- (void)outlineViewSelectionDidChange:(id)arg1;
- (BOOL)control:(id)arg1 textView:(id)arg2 doCommandBySelector:(SEL)arg3;
- (void)filterAssetsFromFilterField:(id)arg1;
- (void)cancelFiltering;
- (void)reallyFilter:(id)arg1;
- (void)assetDetailView:(id)arg1 sizeContentView:(id)arg2 toFitSuggestedSize:(struct CGSize)arg3;
- (void)assetDetailView:(id)arg1 wasDoubleClickedInHeader:(id)arg2;
- (void)assetDetailView:(id)arg1 beginDraggingWithMouseDownEvent:(id)arg2 andMouseDraggedEvent:(id)arg3;
- (void)refreshDetailView;
- (void)synchronizeDetailViewContentViewWithAsset;
- (id)assetDetailViewAsset;
- (void)setAssetDetailViewAsset:(id)arg1;
- (struct CGSize)draggingStickiness:(id)arg1;
- (id)draggedImageState:(id)arg1;
- (void)draggingEnded:(id)arg1;
- (void)concludeDragOperation:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (BOOL)prepareForDragOperation:(id)arg1;
- (void)draggingExited:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (void)windowDidMove:(id)arg1;
- (void)windowDidResize:(id)arg1;
- (void)windowDidOrderOffScreen:(id)arg1;
- (void)windowDidOrderOnScreen:(id)arg1;
- (struct CGRect)windowWillUseStandardFrame:(id)arg1 defaultFrame:(struct CGRect)arg2;
- (void)tileView:(id)arg1 didChangeClickedObjectFrom:(id)arg2;
- (id)tileView:(id)arg1 typeCompletionStringForContentObject:(id)arg2;
- (id)groupedTileView:(id)arg1 draggedImageState:(id)arg2;
- (void)groupedTileView:(id)arg1 concludeDragOperation:(id)arg2;
- (BOOL)groupedTileView:(id)arg1 performDragOperation:(id)arg2;
- (BOOL)groupedTileView:(id)arg1 prepareForDragOperation:(id)arg2;
- (void)groupedTileView:(id)arg1 draggingExited:(id)arg2;
- (unsigned long long)groupedTileView:(id)arg1 draggingEntered:(id)arg2;
- (unsigned long long)groupedTileView:(id)arg1 draggingUpdated:(id)arg2;
- (void)groupedTileViewDragSelectedItems:(id)arg1 withMouseDownEvent:(id)arg2 andMouseDraggedEvent:(id)arg3;
- (BOOL)groupedTileView:(id)arg1 shouldDragLayoutItem:(id)arg2 withMouseDownEvent:(id)arg3;
- (id)groupedTileView:(id)arg1 layoutItemForRepresentedObject:(id)arg2;
- (id)groupedTileView:(id)arg1 labelForGroup:(id)arg2;
- (BOOL)groupedTileView:(id)arg1 shouldDrawAlternateHeaderColorForGroup:(id)arg2;
- (void)groupedTileViewDeleteSelectedItems:(id)arg1;
- (void)groupedTileViewUserPressedEnter:(id)arg1;
- (void)groupedTileView:(id)arg1 wasDoubleClicked:(id)arg2;
- (void)askDelegateToDepositeAssets:(id)arg1;
- (void)splitViewSplitterDidMove:(id)arg1;
- (double)splitView:(id)arg1 minSizeForView:(id)arg2;
- (void)groupViewDidResize:(id)arg1;
- (void)applyProperGroupView;
- (void)setGroupViewer:(id)arg1;
- (id)groupViewer;
- (void)scrollViewContentViewBoundsDidChange:(id)arg1;
- (id)toolTipManager:(id)arg1 toolTipForView:(id)arg2 location:(struct CGPoint)arg3 tipSourceRect:(struct CGRect *)arg4;
- (BOOL)assetViewShouldAllowAssetDrops;
- (void)resetIconContent;
- (BOOL)assetPassesFilter:(id)arg1;
- (void)applyAssetViewStyle;
- (void)applyAssetViewStyleToAssetView:(id)arg1;
- (BOOL)selectAsset:(id)arg1 inGroup:(id)arg2 bySwitchingCategories:(BOOL)arg3;
- (id)targetAssetsForActionMenu;
- (id)selectedAssets;
- (id)selectedAssetPairs;
- (BOOL)shouldShowGridLines;
- (void)outlineViewExpansionDidChange:(id)arg1;
- (id)currentSplitViewUIState;
- (void)applySplitViewUIState:(id)arg1;
- (id)currentGroupOutlineViewSelectionAndExpansionState;
- (void)applyGroupOutlineViewSelectionAndExpansionState:(id)arg1;
- (id)currentTileViewUIState;
- (void)applyTileViewUIState:(id)arg1;
- (id)makeItemForGroupVisible:(id)arg1 select:(BOOL)arg2 byExtendingSelection:(BOOL)arg3 edit:(BOOL)arg4;
- (id)outlineViewItemForGroupIfVisible:(id)arg1;
- (void)rebuildGroupMenu;
- (double)minimumGroupOutlineHeight;
- (double)groupPopUpHeight;
- (void)selectAssets:(id)arg1 inGroup:(id)arg2;
- (id)assetTileViewContent;
- (id)unsynchronizedAssetTileViewContent;
- (void)viewAssetsAs:(id)arg1;
- (void)takeCategoryFromSegmentedControl:(id)arg1;
- (void)assetGroupOutlineViewDeleteSelectedRows:(id)arg1;
- (void)outlineView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 item:(id)arg4;
- (BOOL)outlineView:(id)arg1 acceptDrop:(id)arg2 item:(id)arg3 childIndex:(long long)arg4;
- (unsigned long long)outlineView:(id)arg1 validateDrop:(id)arg2 proposedItem:(id)arg3 proposedChildIndex:(long long)arg4;
- (BOOL)outlineView:(id)arg1 writeItems:(id)arg2 toPasteboard:(id)arg3;
- (id)outlineView:(id)arg1 objectValueForTableColumn:(id)arg2 byItem:(id)arg3;
- (long long)outlineView:(id)arg1 numberOfChildrenOfItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 isItemExpandable:(id)arg2;
- (id)outlineView:(id)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (id)imageForGroup:(id)arg1;
- (id)assetViewSourceGroups;
- (id)selectedGroups;
- (void)selectAssetSourceWithIdentifier:(id)arg1 subpath:(id)arg2 byExtendingSelection:(BOOL)arg3;
- (BOOL)isViewingGroupsThroughPopUp;
- (BOOL)isViewingGroupsThroughOutline;
- (void)rebuildCategoryControl;
- (void)orderLibraryWindowFrontAndMakeSearchFieldFirstResponder;
- (void)registerForDropTypes;
- (void)applyUIState:(id)arg1;
- (id)activeUIState;
- (void)menuNeedsUpdate:(id)arg1;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (void)removeAssetsFromLibrary:(id)arg1;
- (void)removeAssetsFromGroup:(id)arg1;
- (void)removeAssetGroups:(id)arg1;
- (BOOL)canPerformRemoveSelectedAssetGroups;
- (BOOL)canEditSelectedItems:(id *)arg1;
- (BOOL)canPerformRemoveSelectedAssetsFromGroup;
- (BOOL)canPerformRemoveSelectedAssetsFromLibrary;
- (void)performRemoveAssetsFromLibrary:(id)arg1;
- (void)performRemoveAssetsFromGroups:(id)arg1;
- (void)performRemoveSelectedAssetGroups;
- (void)makeNewSmartAssetGroup:(id)arg1;
- (void)makeNewAssetGroup:(id)arg1;
- (void)editSelectedItem:(id)arg1;
- (BOOL)firstResponderHasSelectedAsset:(id)arg1;
- (void)toggleShowGroupsWithIcons:(id)arg1;
- (id)parentForNewGroup;
- (id)smartAssetGroupRuleEditorControllerRuleDefinitionsPropertyList:(id)arg1;
- (id)smartAssetGroupRuleEditorController:(id)arg1 createViewForSmartRuleViewID:(id)arg2;
- (void)updateSmartAssetGroupEditorStatus;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)abstractAssetGroupDidChangeName:(id)arg1;
- (void)assetDidChangeLastUsedDate:(id)arg1;
- (id)invalidationPolicyForContext:(void *)arg1;
- (CDUnknownBlockType)validateBlockForContext:(void *)arg1;
- (BOOL)isPersistenceContext:(void *)arg1;
- (void)userDidEditAsset:(id)arg1;
- (void)applyAssetSelectionIndexes;
- (void)forceGroupMenuContentValidation;
- (void)invalidateGroupMenuContent;
- (void)validateGroupMenuContent:(id)arg1;
- (void)forceIconContentValidation;
- (void)invalidateIconContent;
- (void)validateIconContent:(id)arg1;
- (void)stopObservingAssetGroupsForAssetCategory:(id)arg1;
- (void)startObservingAssetGroupsForAssetCategory:(id)arg1;
- (void)setObservedGroups:(id)arg1;
- (BOOL)isViewingLeafGroup;
- (id)smartAssetGroupRuleEditorController;
- (BOOL)isGroupDisplayedInAssetView:(id)arg1;
- (id)visibleAssetCategories;
- (void)setVisibleAssetCategories:(id)arg1;
- (id)assetCategoryWithIdentifier:(id)arg1;
- (id)assetCategoryControllerWithIdentifier:(id)arg1;
- (id)assetCategories;
- (id)identifiedCategories;
- (void)addAssetCategory:(id)arg1;
- (id)activeAssetCategoryController;
- (void)setActiveAssetCategoryController:(id)arg1;
- (void)persistUIStateOfActiveCategoryController;
- (void)persistUIStateOfCategoryController:(id)arg1;
- (void)persistUIStateOfCategoryController:(id)arg1 validateImmediately:(BOOL)arg2;
- (id)lastActiveUIStateForAssetCategoryController:(id)arg1;
- (id)userDefaultsKeyForPersistingUIStateOfCategoryController:(id)arg1;
- (id)userDefaultsKeyForRestoringUIStateOfCategoryController:(id)arg1;
- (id)userDefaultsKeyForUIStatePersistenceOfCategoryController:(id)arg1;
- (void)setActiveAssetCategory:(id)arg1;
- (id)activeRootGroup;
- (id)activeAssetCategory;
- (BOOL)identifiesAssetsPerGroup;
- (void)setIdentifiesAssetsPerGroup:(BOOL)arg1;
- (long long)assetViewStyle;
- (void)setAssetViewStyle:(long long)arg1;
- (void)setAllowedAssetViewStyles:(id)arg1;
- (id)allowedAssetViewStyles;
- (id)actionMenu;
- (id)categoryControl;
- (id)assetViewStyleMenuItems;
- (id)groupScrollView;
- (id)groupPopUp;
- (id)assetFilterField;
- (id)groupMenu;
- (id)groupController;
- (id)groupOutlineView;
- (id)assetScrollView;
- (id)assetTileViewForceSynchronizedContent:(BOOL)arg1;
- (struct CGSize)suggestedSizeForDetailView;
- (id)assetDetailView;
- (id)groupSplitter;
- (id)detailSplitter;
- (id)groupViewContainer;
- (id)libraryWindow;
- (void)setFilterString:(id)arg1;
- (id)filterString;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (void)didRestoreUserSettings;
- (void)ensureInterfaceIsLoaded;
- (BOOL)isInterfaceLoaded;
- (void)dealloc;
- (void)removeAsObserver;
- (id)init;
- (id)libraryStoragePath;
- (id)applicationSupportSubpath;
- (void)setApplicationSupportSubpath:(id)arg1;
- (id)defaultApplicationSupportSubpath;
- (void)restoreUserSettings;
- (void)saveUserSettings;
- (void)restoreAssetLastUsedDates;
- (void)saveAssetLastUsedDates;
- (id)assetLastUsedDates;
- (void)saveGroups;
- (void)restoreGroups;
- (id)defaultUserCategories;
- (id)assetLastUsedDatesPath;
- (id)userCategoriesPath;
- (id)serializedGroupsPerCategory;
- (void)rebuildGroupsFromPropertyListRepresentation:(id)arg1;

@end

@interface DTAssetView : NSView
{
    NSImage *image;
    NSString *label;
    NSString *shortDescription;
    long long style;
    BOOL drawsWithSelectionHighlight;
    BOOL showsFirstResponder;
    BOOL drawsGrid;
    BOOL showingGridLines;
    id delegate;
    BOOL drawsWithClickFrame;
}

+ (struct CGSize)maximumSizeForStyle:(long long)arg1;
+ (struct CGSize)minimumSizeForStyle:(long long)arg1;
- (BOOL)accessibilityIsAttributeSettable:(id)arg1;
- (id)accessibilityAttributeNames;
- (id)accessibilityAttributeValue:(id)arg1;
- (BOOL)accessibilityIsIgnored;
- (void)drawRect:(struct CGRect)arg1;
- (void)viewWillDraw;
- (BOOL)isOpaque;
- (id)effectiveBackgroundColor;
- (id)effectiveLightBorderColor;
- (id)effectiveBorderColor;
- (id)clickedBorderColor;
- (id)normalBorderColor;
- (id)selectedLightBorderColor;
- (id)normalLightBorderColor;
- (id)normalBackgroundColor;
- (id)primarySelectedBackgroundColor;
- (id)secondarySelectedBackgroundColor;
- (id)text;
- (id)effectiveShortDescriptionFont;
- (id)effectiveLabelFont;
- (BOOL)shouldBandSelectWithMouseDownEvent:(id)arg1;
- (struct CGRect)textAreaBounds;
- (struct CGRect)imageRect;
- (struct CGRect)imageAreaBounds;
- (BOOL)isFlipped;
- (void)setStyle:(long long)arg1;
- (long long)style;
- (void)setShortDescription:(id)arg1;
- (id)shortDescription;
- (void)setLabel:(id)arg1;
- (id)label;
- (void)setImage:(id)arg1;
- (id)image;
- (void)setShowingGridLines:(BOOL)arg1;
- (BOOL)isShowingGridLines;
- (BOOL)shouldDrawWithClickFrame;
- (void)setDrawsWithClickFrame:(BOOL)arg1;
- (BOOL)drawsWithClickFrame;
- (void)setDrawsWithSelectionHighlight:(BOOL)arg1;
- (BOOL)drawsWithSelectionHighlight;
- (void)setShowsFirstResponder:(BOOL)arg1;
- (BOOL)showsFirstResponder;
- (void)setNilValueForKey:(id)arg1;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface DTAssetiLifeDelegate : NSObject
{
    DTAssetDetailImageView *_detailImageView;
    NSMutableSet *_photoLoadingImagesSet;
    NSMutableArray *_photoLoadingImagesQueue;
    id _photoAssets;
    unsigned long long _photoLoadIndex;
    BOOL _photoHasWorkerLoadingImageThread;
}

+ (id)draggedImageForPhotoImage:(id)arg1;
+ (id)sharedInstance;
- (void)assetCategoryController:(id)arg1 sizeAssetDetailView:(id)arg2 toFitSuggestedSize:(struct CGSize)arg3 forAsset:(id)arg4;
- (void)assetCategoryController:(id)arg1 willDisplayAsset:(id)arg2 inAssetDetailView:(id)arg3;
- (void)assetCategoryController:(id)arg1 willDisplayAsset:(id)arg2;
- (id)assetCategoryController:(id)arg1 assetDetailViewForAsset:(id)arg2;
- (id)assetCategoryControllerSmartGroupRuleDefinitionsPropertyList:(id)arg1;
- (id)assetCategoryController:(id)arg1 createViewForSmartRuleViewID:(id)arg2;
- (BOOL)assetCategoryController:(id)arg1 createAsset:(id *)arg2 andImage:(id *)arg3 forAssetSourceWithIdentifier:(id *)arg4 fromPasteboard:(id)arg5;
- (BOOL)assetCategoryController:(id)arg1 canCreateAssetsFromPasteboard:(id)arg2 targettingAssetSourceIdentifier:(id *)arg3;
- (void)assetCategoryController:(id)arg1 populatePasteboard:(id)arg2 withAssets:(id)arg3 defaultDraggedImageState:(id *)arg4 identifierMapTable:(id *)arg5;
- (void)assetCategoryController:(id)arg1 didFinishDraggingAssets:(id)arg2 info:(id)arg3 shouldSlideBack:(char *)arg4;
- (void)assetCategoryController:(id)arg1 willBeginDraggingAssets:(id)arg2;
- (void)assetCategoryController:(id)arg1 userDidEditAsset:(id)arg2;
- (BOOL)assetCategoryController:(id)arg1 isAssetUserEditable:(id)arg2;
- (BOOL)assetCategoryController:(id)arg1 canRemoveAsset:(id)arg2;
- (id)assetCategoryController:(id)arg1 searchTermsForAsset:(id)arg2;
- (id)assetCategoryControllerContentPasteboardTypes:(id)arg1;
- (void)startLoadingImagesForPhotoAssets:(id)arg1;
- (void)_threadedPhotoLoadImages;
- (void)dealloc;
- (id)init;
- (void)_thumbnailForPhotoAsset:(id)arg1;

@end

@interface DTDragManager : NSObject
{
}

+ (BOOL)isUserDragging;
+ (id)sharedInstance;
- (unsigned long long)dragImage:(id)arg1 at:(struct CGPoint)arg2 offset:(struct CGSize)arg3 mouseDownEvent:(id)arg4 mouseDraggedEvent:(id)arg5 pasteboard:(id)arg6 allowedOperations:(unsigned long long)arg7 source:(id)arg8 slideBack:(BOOL)arg9 draggingSourceContext:(id)arg10;

@end

@interface DTDraggedImageState : NSObject
{
    struct CGPoint anchorPoint;
    BOOL isAnchorPointExplicit;
}

- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (BOOL)synthesizedAnchorPoint:(struct CGPoint *)arg1 forSubiquentState:(id)arg2;
- (void)synthesizeAnchorPointFromPreviousStates:(id)arg1;
- (id)image;
- (struct CGPoint)anchorPoint;
- (void)setAnchorPoint:(struct CGPoint)arg1;
- (BOOL)isAnchorPointExplicit;

@end

@interface DTDraggedImageStateTransitionRegistry : NSObject
{
    NSMutableDictionary *registry;
}

+ (id)sharedInstance;
- (id)transitionFromState:(id)arg1 toState:(id)arg2;
- (void)registerTransition:(Class)arg1 fromImageStateClass:(Class)arg2 toImageStateClass:(Class)arg3;
- (id)init;

@end

@interface DTDraggedImageStateTransitionView : NSView
{
    float progress;
    DTDraggedImageState *fromState;
    DTDraggedImageState *toState;
}

- (id)toState;
- (id)fromState;
- (float)progress;
- (void)setProgress:(float)arg1;
- (double)duration;
- (struct CGPoint)anchorPoint;
- (void)dealloc;
- (id)initWithFromState:(id)arg1 andToState:(id)arg2;

@end

@interface DTDraggedObjectsImageState : DTDraggedImageState
{
    NSMutableDictionary *places;
    NSMutableDictionary *views;
    NSMutableDictionary *images;
    NSMutableArray *identifiers;
    NSImage *image;
    NSString *name;
    struct CGPoint frameOffset;
    BOOL forcesImageScaling;
}

+ (id)draggedObjectStateWithIdentifiers:(id)arg1 views:(id)arg2 name:(id)arg3;
+ (id)draggedObjectStateWithIdentifiers:(id)arg1 images:(id)arg2 frames:(id)arg3 name:(id)arg4;
+ (id)draggedObjectStateWithImage:(id)arg1;
+ (id)draggedObjectStateWithIdentifier:(id)arg1 view:(id)arg2 name:(id)arg3;
+ (id)draggedObjectStateWithIdentifier:(id)arg1 image:(id)arg2 name:(id)arg3;
- (id)description;
- (void)setForcesImageScaling:(BOOL)arg1;
- (BOOL)forcesImageScaling;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (BOOL)synthesizedAnchorPoint:(struct CGPoint *)arg1 forSubiquentState:(id)arg2;
- (id)identifierForPoint:(struct CGPoint)arg1;
- (BOOL)containsIdentifier:(id)arg1;
- (struct CGPoint)anchorPoint;
- (id)name;
- (id)image;
- (id)identifiers;
- (id)views;
- (id)imageForIdentifier:(id)arg1;
- (id)viewForIdentifier:(id)arg1;
- (struct CGRect)frameForIdentifier:(id)arg1;
- (void)remapIdentifiers:(id)arg1;
- (void)dealloc;
- (id)initWithIdentifiers:(id)arg1 views:(id)arg2 name:(id)arg3;
- (id)initWithIdentifiers:(id)arg1 images:(id)arg2 frames:(id)arg3 name:(id)arg4;

@end

@interface DTDraggedObjectsTransitionView : DTDraggedImageStateTransitionView
{
    NSAffineTransform *transformFromToState;
    NSAffineTransform *transformFromFromState;
}

- (void)drawRect:(struct CGRect)arg1;
- (void)setProgress:(float)arg1;
- (id)toState;
- (id)fromState;
- (id)description;
- (void)dealloc;
- (id)initWithFromState:(id)arg1 andToState:(id)arg2;

@end

@interface DTDraggingContext : NSObject <DTDraggingInfo>
{
    NSWindow *draggingDestinationWindow;
    struct CGPoint draggingLocation;
    struct CGPoint draggedImageLocation;
    NSImage *draggedImage;
    NSPasteboard *draggingPasteboard;
    id draggingSource;
    NSDictionary *draggingSourceContext;
    long long draggingSequenceNumber;
    long long draggingSourceOperationMask;
    DTDraggedImageState *draggedImageState;
    struct CGSize draggingStickiness;
    BOOL draggedImageStateNeedsUpdate;
    long long draggingFormation;
    BOOL animatesToDestination;
    long long numberOfValidItemsForDrop;
}

@property long long numberOfValidItemsForDrop; // @synthesize numberOfValidItemsForDrop;
@property BOOL animatesToDestination; // @synthesize animatesToDestination;
@property long long draggingFormation; // @synthesize draggingFormation;
- (void)enumerateDraggingItemsWithOptions:(unsigned long long)arg1 forView:(id)arg2 classes:(id)arg3 searchOptions:(id)arg4 usingBlock:(CDUnknownBlockType)arg5;
- (struct CGPoint)draggingLocationOnScreen;
- (void)setDraggedImageStateNeedsUpdate:(BOOL)arg1;
- (BOOL)draggedImageStateNeedsUpdate;
- (struct CGSize)draggingStickiness;
- (void)setDraggingStickiness:(struct CGSize)arg1;
- (id)namesOfPromisedFilesDroppedAtDestination:(id)arg1;
- (void)slideDraggedImageTo:(struct CGPoint)arg1;
- (long long)draggingSequenceNumber;
- (id)draggingSourceContext;
- (void)setDraggingSourceContext:(id)arg1;
- (void)setDraggingSequenceNumber:(long long)arg1;
- (id)draggingSource;
- (id)draggingPasteboard;
- (id)draggedImage;
- (void)setDraggedImage:(id)arg1;
- (struct CGPoint)draggedImageLocation;
- (void)setDraggedImageLocation:(struct CGPoint)arg1;
- (struct CGPoint)draggingLocation;
- (void)setDraggingLocation:(struct CGPoint)arg1;
- (void)setDraggingSourceOperationMask:(unsigned long long)arg1;
- (unsigned long long)draggingSourceOperationMask;
- (void)setDraggingDestinationWindow:(id)arg1;
- (id)draggingDestinationWindow;
- (void)setDraggedImageState:(id)arg1;
- (id)draggedImageState;
- (void)dealloc;
- (id)initWithSource:(id)arg1 andPasteboard:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DTFirstResponderDrawingStrategy : NSObject
{
    NSView *view;
    BOOL viewIsFirstResponder;
    BOOL windowIsKey;
}

- (void)viewWillMoveToWindow:(id)arg1;
- (void)windowDidChangeKeyStatus:(id)arg1;
- (void)resignedFirstResponder;
- (void)becameFirstResponder;
- (BOOL)viewSouldDrawLikeFirstResponder;
- (void)setWindowIsKey:(BOOL)arg1;
- (void)setViewIsFirstResponder:(BOOL)arg1;
- (void)dispose;
- (void)finishObservingWindow:(id)arg1;
- (void)beginObservingWindow:(id)arg1;
- (void)dealloc;
- (id)initWithView:(id)arg1;

@end

@interface DTFlippedView : NSView
{
}

- (BOOL)isFlipped;

@end

@interface DTFocusableScrollView : NSScrollView
{
    BOOL drawsFocusRing;
}

- (void)setFrameOrigin:(struct CGPoint)arg1;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)viewWillDraw;
- (void)setDrawsFocusRing:(BOOL)arg1;
- (BOOL)drawsFocusRing;
- (void)setNilValueForKey:(id)arg1;

@end

@interface DTGroupedAssetHilightView : NSView
{
}

- (void)drawRect:(struct CGRect)arg1;

@end

@interface DTTileView : NSView <NSAnimationDelegate>
{
    void *_reserved;
    void *_reserved2;
    void *_reserved3;
    void *_reserved4;
    void *_reserved5;
    DTTypeCompletionHandler *_typeCompletionHandler;
    id _delegate;
    id _clickedContentObject;
    NSArray *_content;
    NSIndexSet *selectionIndexes;
    DTTileViewItem *_layoutItemPrototype;
    struct CGSize _minGridSize;
    struct CGSize _maxGridSize;
    unsigned long long _minGridRows;
    unsigned long long _maxGridRows;
    unsigned long long _minGridColumns;
    unsigned long long _maxGridColumns;
    NSArray *_backgroundColors;
    struct __tileViewanimationContainerFlags {
        unsigned int _selectable:1;
        unsigned int _allowsMultipleSelection:1;
        unsigned int _avoidsEmptySelection:1;
        unsigned int _superviewIsClipView:1;
        unsigned int _gridParametersReadFromPrototype:1;
        unsigned int _showsFirstResponder:1;
        unsigned int _reservedAnimationContainer:26;
    } _animationContainerFlags;
    struct CGSize _targetFrameSize;
    struct CGSize _targetGridSize;
    struct CGSize _targetUnfilledViewSpace;
    unsigned long long _targetNumberOfGridRows;
    unsigned long long _targetNumberOfGridColumns;
    NSMutableArray *_targetItems;
    struct CGSize _appliedFrameSize;
    struct CGSize _appliedGridSize;
    struct CGSize _appliedUnfilledViewSpace;
    unsigned long long _appliedNumberOfGridRows;
    unsigned long long _appliedNumberOfGridColumns;
    NSMutableArray *_appliedItems;
    NSMutableSet *_appliedItemsAsSet;
    NSMutableSet *_appliedRemovedItemsAsSet;
    double _animationDuration;
    NSViewAnimation *_animation;
    NSMutableArray *_hideLayoutItems;
    NSMutableArray *_showLayoutItems;
    DTFirstResponderDrawingStrategy *_firstResponderDrawingStrategy;
    BOOL animates;
}

- (void)rightMouseDown:(id)arg1;
- (void)setClickedContentObject:(id)arg1;
- (id)clickedContentObject;
- (id)_recursiveFindDefaultButtonCell;
- (void)moveWordLeftAndModifySelection:(id)arg1;
- (void)moveWordRightAndModifySelection:(id)arg1;
- (void)moveToEndOfParagraph:(id)arg1;
- (void)moveToBeginningOfParagraph:(id)arg1;
- (void)moveWordLeft:(id)arg1;
- (void)moveWordRight:(id)arg1;
- (void)moveDownAndModifySelection:(id)arg1;
- (void)moveUpAndModifySelection:(id)arg1;
- (void)moveLeftAndModifySelection:(id)arg1;
- (void)moveRightAndModifySelection:(id)arg1;
- (void)moveDown:(id)arg1;
- (void)moveUp:(id)arg1;
- (void)moveLeft:(id)arg1;
- (void)moveRight:(id)arg1;
- (unsigned long long)_indexForMoveDown;
- (unsigned long long)_indexForMoveUp;
- (unsigned long long)_indexForMoveLeft;
- (unsigned long long)_indexForMoveRight;
- (unsigned long long)_indexForIncrementMove:(unsigned long long)arg1;
- (unsigned long long)_indexForDecrementMove:(unsigned long long)arg1;
- (void)selectAll:(id)arg1;
- (void)_contentChanged:(BOOL)arg1 regenerate:(BOOL)arg2;
- (void)discardEditing;
- (void)gridGeometryChanged:(BOOL)arg1;
- (void)_animateAtEndOfEvent;
- (void)applyPendingChangesAndFinishAnimating;
- (void)_applyTargetConfiguration:(BOOL)arg1;
- (void)animationDidEnd:(id)arg1;
- (void)_itemRemovalCompleted:(id)arg1;
- (void)_itemAdditionCompleted:(id)arg1;
- (void)_stopAnimationCompletingOperations:(BOOL)arg1;
- (double)_animationDuration;
- (void)_setAnimationDuration:(double)arg1;
- (id)backgroundColors;
- (void)setBackgroundColors:(id)arg1;
- (struct _NSRange)columnCountRange;
- (void)setColumnCountRange:(struct _NSRange)arg1;
- (struct _NSRange)rowCountRange;
- (void)setRowCountRange:(struct _NSRange)arg1;
- (unsigned long long)maxNumberOfColumns;
- (void)setMaxNumberOfColumns:(unsigned long long)arg1;
- (unsigned long long)maxNumberOfRows;
- (void)setMaxNumberOfRows:(unsigned long long)arg1;
- (struct CGSize)maxGridSize;
- (void)setMaxGridSize:(struct CGSize)arg1;
- (struct CGSize)minGridSize;
- (void)setMinGridSize:(struct CGSize)arg1;
- (void)setTargetFrameSize:(struct CGSize)arg1;
- (struct CGSize)targetFrameSize;
- (struct CGSize)targetGridSize;
- (struct CGSize)appliedGridSize;
- (id)appliedItems;
- (unsigned long long)targetNumberOfGridColumns;
- (unsigned long long)appliedNumberOfGridColumns;
- (void)_computeTargetItemViewFrameRects;
- (struct CGRect)_frameRectForIndexInGrid:(unsigned long long)arg1 gridSize:(struct CGSize)arg2;
- (id)_mutableIndexSetInAppliedGridForRect:(struct CGRect)arg1;
- (unsigned long long)_indexInAppliedGridForPoint:(struct CGPoint)arg1;
- (void)_getRow:(unsigned long long *)arg1 column:(unsigned long long *)arg2 forPoint:(struct CGPoint)arg3;
- (void)_computeTargetItemsByRegenerating:(BOOL)arg1;
- (void)computeTargetGridGeometry;
- (BOOL)_allowsResizingHorizontally;
- (BOOL)_allowsResizingVertically;
- (void)_determineGridParametersFromItemPrototype;
- (void)_scrollSelectionToVisible;
- (void)_scrollToVisibleItemAtIndex:(unsigned long long)arg1;
- (id)layoutItemPrototype;
- (void)setLayoutItemPrototype:(id)arg1;
- (id)newLayoutItemForRepresentedObject:(id)arg1;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (BOOL)avoidsEmptySelection;
- (void)setAvoidsEmptySelection:(BOOL)arg1;
- (BOOL)allowsMultipleSelection;
- (void)setAllowsMultipleSelection:(BOOL)arg1;
- (BOOL)isSelectable;
- (void)setSelectable:(BOOL)arg1;
- (id)_layoutItemForRepresentedObject:(id)arg1;
- (id)content;
- (void)setContent:(id)arg1;
- (id)selectionIndexes;
- (void)setSelectionIndexes:(id)arg1;
- (void)validateSelectionIndexes;
- (void)_selectFromIndex:(unsigned long long)arg1 toIndex:(unsigned long long)arg2 scrollIndexToVisible:(unsigned long long)arg3;
- (void)_selectIndex:(unsigned long long)arg1 scrollToVisible:(BOOL)arg2;
- (void)_selectionStateChanged:(id)arg1;
- (void)viewWillMoveToWindow:(id)arg1;
- (BOOL)resignFirstResponder;
- (BOOL)becomeFirstResponder;
- (BOOL)acceptsFirstResponder;
- (BOOL)needsPanelToBecomeKey;
- (BOOL)showsFirstResponder;
- (void)setShowsFirstResponder:(BOOL)arg1;
- (void)mouseDown:(id)arg1;
- (id)_handleMouseEvent:(id)arg1 numberOfObjects:(unsigned long long)arg2 startingPoint:(struct CGPoint)arg3 commandKey:(BOOL)arg4 shiftKey:(BOOL)arg5 rubberband:(id)arg6;
- (struct CGPoint)_pointWithinBounds:(struct CGPoint)arg1;
- (void)keyDown:(id)arg1;
- (void)insertText:(id)arg1;
- (id)typeCompletionHandler:(id)arg1 typeCompletionStringForObject:(id)arg2;
- (void)insertBacktab:(id)arg1;
- (void)insertTab:(id)arg1;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (id)hitTest:(struct CGPoint)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (BOOL)isFlipped;
- (void)viewDidMoveToSuperview;
- (void)viewWillMoveToSuperview:(id)arg1;
- (void)_superviewFrameChanged:(id)arg1;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)setAnimates:(BOOL)arg1;
- (BOOL)animates;
- (void)dealloc;
- (void)_applySelectionToItems:(id)arg1;
- (void)_applySelectionIndexes:(id)arg1 toItems:(id)arg2;
- (void)_updateContainerReferenceCounterForArraysOfItems:(id)arg1 direction:(BOOL)arg2;
- (void)_updateContainerReferenceCounterForItems:(id)arg1 direction:(BOOL)arg2;
- (void)finalize;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)_init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DTGroupedTileView : DTTileView
{
    void *reserved;
    long long groupDragTargetIndex;
    long long groupLocalDragTargetIndex;
    BOOL dragInsertAfterInitialTarget;
    BOOL dropOnGroup;
    NSArray *groupCounts;
    NSArray *groups;
    DTGroupedAssetHilightView *overlayView;
    NSEvent *activeMouseDown;
    BOOL showingHeaders;
    CDStruct_f6c3f719 itemInset;
}

+ (BOOL)eventWouldToggleSelection:(id)arg1;
+ (BOOL)eventWouldExtendSelection:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)drawRect:(struct CGRect)arg1 inDecoratedView:(id)arg2;
- (id)dropHighlightColor;
- (void)keyDown:(id)arg1;
- (void)deleteBackward:(id)arg1;
- (void)deleteForward:(id)arg1;
- (void)insertNewline:(id)arg1;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (void)mouseUp:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)mouseDown:(id)arg1;
- (BOOL)shouldTrackSelectionWithMouseDownEvent:(id)arg1;
- (void)selectItemWithEvent:(id)arg1;
- (id)toolTipForPoint:(struct CGPoint)arg1 sourceRect:(struct CGRect *)arg2;
- (void)dropGroup:(id *)arg1 andItemInsertionIndex:(long long *)arg2 atPoint:(struct CGPoint)arg3;
- (void)dropGroup:(id *)arg1 andItemInsertionIndex:(long long *)arg2 after:(char *)arg3 atPoint:(struct CGPoint)arg4;
- (unsigned long long)indexOfGroupAtPoint:(struct CGPoint)arg1;
- (id)contentObjectAtPoint:(struct CGPoint)arg1;
- (id)tileViewItemAtPoint:(struct CGPoint)arg1;
- (struct CGRect)headerRectForGroupWithIndex:(long long)arg1;
- (id)headerRects;
- (struct CGRect)titleRectForHeaderRect:(struct CGRect)arg1;
- (struct CGRect)titleBackgroundRectForHeaderRect:(struct CGRect)arg1;
- (id)_mutableIndexSetInAppliedGridForRect:(struct CGRect)arg1;
- (unsigned long long)_indexInAppliedGridForPoint:(struct CGPoint)arg1;
- (void)getGlobalIndex:(long long *)arg1 groupIndex:(long long *)arg2 andLocalIndex:(long long *)arg3 atPoint:(struct CGPoint)arg4;
- (void)_getRow:(unsigned long long *)arg1 column:(unsigned long long *)arg2 forPoint:(struct CGPoint)arg3;
- (void)computeTargetGridGeometry;
- (struct CGSize)recalculateTargetFrameSize;
- (id)attributedTitleForGroup:(id)arg1;
- (struct CGRect)rectForTileViewItemAtIndex:(long long)arg1;
- (struct CGRect)_frameRectForIndexInGrid:(unsigned long long)arg1 gridSize:(struct CGSize)arg2;
- (BOOL)isGroupLocalIndex:(long long)arg1 theFirstItemInAnyRowInGroupWithIndex:(long long)arg2;
- (BOOL)isGroupLocalIndex:(long long)arg1 theLastItemInAnyRowInGroupWithIndex:(long long)arg2;
- (long long)appliedColumnsInRow:(long long)arg1 ofGroup:(long long)arg2;
- (long long)appliedRowsInGroupWithIndex:(long long)arg1;
- (long long)targetRowsInGroupWithIndex:(long long)arg1;
- (double)headerHeight;
- (double)headerPostpadHeight;
- (double)headerPrepadHeight;
- (double)headerTitleHeight;
- (long long)numberOfColumns;
- (long long)localIndexForGlobalIndex:(unsigned long long)arg1;
- (long long)groupIndexForGlobalIndex:(unsigned long long)arg1;
- (long long)globalIndexForLocalIndex:(long long)arg1 inGroupWithIndex:(long long)arg2;
- (void)setDragInsertionPoint:(struct CGPoint)arg1;
- (void)setDropGroup:(id)arg1;
- (void)setDropGroup:(id)arg1 dropChildIndex:(long long)arg2 after:(BOOL)arg3 on:(BOOL)arg4;
- (void)clearDragInsertionPoint;
- (struct CGRect)dragInsertionRect;
- (id)dragInsertionPath;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)setItemInset:(CDStruct_f6c3f719)arg1;
- (CDStruct_f6c3f719)itemInset;
- (void)orderOutOverlayView;
- (void)orderInOverlayView;
- (id)overlayView;
- (id)draggedImageState:(id)arg1;
- (void)concludeDragOperation:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (BOOL)prepareForDragOperation:(id)arg1;
- (void)draggingExited:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (id)newLayoutItemForRepresentedObject:(id)arg1;
- (void)setSelectedContentObjects:(id)arg1;
- (id)indexesForContentObjects:(id)arg1;
- (void)setContent:(id)arg1;
- (void)setGroups:(id)arg1;
- (id)groups;
- (void)setActiveMouseDown:(id)arg1;
- (id)activeMouseDown;
- (void)setShowingHeaders:(BOOL)arg1;
- (BOOL)isShowingHeaders;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface DTIconAndTextCell : NSTextFieldCell
{
    NSImage *icon;
    BOOL shouldDrawActive;
    struct CGSize preferedIconSize;
}

- (unsigned long long)hitTestForEvent:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3;
- (void)selectWithFrame:(struct CGRect)arg1 inView:(id)arg2 editor:(id)arg3 delegate:(id)arg4 start:(long long)arg5 length:(long long)arg6;
- (void)editWithFrame:(struct CGRect)arg1 inView:(id)arg2 editor:(id)arg3 delegate:(id)arg4 event:(id)arg5;
- (struct CGRect)titleEditingRectForBounds:(struct CGRect)arg1;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (BOOL)isOpaque;
- (struct CGRect)titleRectForBounds:(struct CGRect)arg1;
- (struct CGRect)iconRectForBounds:(struct CGRect)arg1;
- (struct CGSize)titleSize;
- (id)attributedTitle;
- (id)textAttributes;
- (id)paragraphStyle;
- (id)foregroundColor;
- (id)effectiveFont;
- (double)textInsetForBounds:(struct CGRect)arg1;
- (double)iconInsetForBounds:(struct CGRect)arg1;
- (struct CGSize)iconSizeForBounds:(struct CGRect)arg1;
- (void)setPreferedIconSize:(struct CGSize)arg1;
- (struct CGSize)preferedIconSize;
- (id)icon;
- (void)setIcon:(id)arg1;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;
- (id)initTextCell:(id)arg1;

@end

@interface DTIdentityDragImageStateTransition : DTDraggedImageStateTransitionView
{
}

- (double)duration;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface DTInvalidationPolicy : NSObject
{
    BOOL scheduledValidation;
    SEL selector;
    id target;
    CDUnknownBlockType validateBlock;
    id userInfo;
    NSNumber *priority;
    NSNumber *delay;
    BOOL validatesWhenAppTerminates;
    BOOL disablesSuddenTermination;
    BOOL disabledSuddenTermination;
    BOOL validating;
}

+ (id)invalidationPolicyForInstantOffWithBlock:(CDUnknownBlockType)arg1;
- (BOOL)disablesSuddenTermination;
- (void)setDisablesSuddenTermination:(BOOL)arg1;
- (BOOL)validatesWhenAppTerminates;
- (void)setValidatesWhenAppTerminates:(BOOL)arg1;
- (double)delay;
- (void)setDelay:(double)arg1;
- (unsigned long long)priority;
- (void)setPriority:(unsigned long long)arg1;
- (id)userInfo;
- (void)setUserInfo:(id)arg1;
- (void)appWillTerminate:(id)arg1;
- (void)forceValidate;
- (void)validate;
- (void)cancelValidation;
- (void)unscheduleValidation;
- (void)invalidate;
- (BOOL)isValid;
- (void)doValidation:(id)arg1;
- (void)setSuddenTerminationBlocked:(BOOL)arg1;
- (void)dealloc;
- (id)initWithBlock:(CDUnknownBlockType)arg1;
- (id)initWithTarget:(id)arg1 selector:(SEL)arg2;

@end

@interface DTMutableOrderedDictionary : NSMutableDictionary
{
    DTMutableOrderedSet *set;
    CDStruct_f2932e27 keyCallbacks;
    CDStruct_b3b3fc87 objCallbacks;
}

+ (CDStruct_b3b3fc87)cocoaValueCallBacks;
+ (CDStruct_f2932e27)cocoaKeyCallBacks;
- (void)removeObjectForKey:(id)arg1;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (id)keyEnumerator;
- (id)objectForKey:(id)arg1;
- (unsigned long long)count;
- (Class)classForCoder;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithObjects:(id)arg1 forKeys:(id)arg2;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)init;
- (void)dealloc;
- (id)initWithKeyCallbacks:(CDStruct_f2932e27)arg1 andValueCallbacks:(CDStruct_b3b3fc87)arg2;

@end

@interface DTMutableOrderedSet : NSMutableSet
{
    CDStruct_f2932e27 callbacks;
    struct DTBucketTag *freelist;
    struct DTBucketTag **buckets;
    struct DTBucketTag *head;
    long long breadth;
    long long count;
    unsigned long long changeCount;
}

+ (CDStruct_f2932e27)cocoaSetCallbacks;
+ (CDStruct_f2932e27)pointerSetCallbacks;
- (id)description;
- (id)firstObject;
- (id)lastObject;
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
- (id)objectEnumerator;
- (id)member:(id)arg1;
- (long long)indexOfObject:(id)arg1;
- (unsigned long long)count;
- (short)changeCount;
- (void)removeAllObjects;
- (void)removeObject:(id)arg1;
- (void)addObject:(id)arg1;
- (void)insertObject:(id)arg1 atIndex:(long long)arg2;
- (void)insertObject:(id)arg1 after:(struct DTBucketTag *)arg2;
- (void)setSet:(id)arg1;
- (void)unionSet:(id)arg1;
- (void)minusSet:(id)arg1;
- (void)intersectSet:(id)arg1;
- (void)addObjectsFromArray:(id)arg1;
- (void)resize:(long long)arg1;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)init;
- (id)initWithCallBacks:(CDStruct_f2932e27)arg1;
- (Class)classForCoder;

@end

@interface DTMutableOrderedSetEnumerator : NSEnumerator
{
    DTMutableOrderedSet *set;
    struct DTBucketTag *bucket;
    struct DTBucketTag *head;
    long long initialChangeCount;
}

- (id)nextObject;
- (void)dealloc;
- (id)initWithSet:(id)arg1 andHead:(struct DTBucketTag *)arg2;

@end

@interface DTOrderedDictionaryKeyEnumerator : NSEnumerator
{
    NSEnumerator *setEnumerator;
}

- (id)nextObject;
- (void)dealloc;
- (id)initWithSetEnumerator:(id)arg1;

@end

@interface DTReverseDragImageStateTransitionPrototype : DTDraggedImageStateTransitionView
{
}

- (void)setProgress:(float)arg1;

@end

@interface DTSimpleDraggedImageState : DTDraggedImageState
{
    NSImage *image;
}

- (id)image;
- (void)dealloc;
- (id)initWithImage:(id)arg1;

@end

@interface DTSmartAssetGroup : DTAbstractAssetGroup
{
    NSPredicate *predicate;
    NSDictionary *intermediatePredicateRepresentation;
}

+ (id)defaultImage;
- (id)assets;
- (id)canidateAssets;
- (void)canidateAssetsChanged:(id)arg1;
- (BOOL)groupsAreEditable;
- (void)setPredicate:(id)arg1 andIntermediateRepresentation:(id)arg2;
- (id)intermediateRepresentation;
- (id)predicate;
- (void)registerForNotifications;
- (void)dealloc;
- (id)initWithPropertyListRepresentation:(id)arg1 assetCategory:(id)arg2 andIdentifiedAssets:(id)arg3;
- (void)buildPropertyListRepresentation:(id)arg1;
- (id)initWithDisplayName:(id)arg1 andAssetCategory:(id)arg2;

@end

@interface DTSmartAssetGroupRuleEditorController : NSObject
{
    NSPanel *smartGroupSheet;
    NSRuleEditor *smartGroupRuleEditor;
    NSTextField *smartGroupLabelTextField;
    NSTextField *statusTextField;
    DTAssetLibrary *library;
    DTSmartAssetGroup *editedGroup;
    DTAbstractAssetGroup *editedParentGroup;
    id delegate;
}

- (id)basicCompoundRule;
- (id)basicRuleLHS;
- (id)predicateFromIntermediateRuleRepresentation:(id)arg1;
- (id)predicateFormatStringForCriterionID:(id)arg1;
- (id)userInputTypeForCriterionID:(id)arg1;
- (id)findValueForKey:(id)arg1 forCriterionID:(id)arg2 inCriteria:(id)arg3;
- (id)intermediateRepresentationForSmartGroupRow:(long long)arg1;
- (id)intermediateRepresentationForSimpleCriterion:(id)arg1 withDisplayValue:(id)arg2;
- (void)textDidChange:(id)arg1;
- (void)controlTextDidChange:(id)arg1;
- (void)ruleEditorRowsDidChange:(id)arg1;
- (id)ruleEditor:(id)arg1 displayValueForCriterion:(id)arg2 inRow:(long long)arg3;
- (id)ruleEditor:(id)arg1 child:(long long)arg2 forCriterion:(id)arg3 withRowType:(unsigned long long)arg4;
- (long long)ruleEditor:(id)arg1 numberOfChildrenForCriterion:(id)arg2 withRowType:(unsigned long long)arg3;
- (void)updateStatus;
- (void)prepareSmartGroup:(id)arg1 forParent:(id)arg2;
- (void)didEndSmartGroupSheet:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)beginSmartGroupSheet;
- (void)addRulesForRepresentation:(id)arg1 nextRow:(long long *)arg2 parentRow:(long long)arg3;
- (void)cancelSmartGroupSheet:(id)arg1;
- (void)okSmartGroupSheet:(id)arg1;
- (void)setEditedParentGroup:(id)arg1;
- (id)editedParentGroup;
- (void)setEditedGroup:(id)arg1;
- (id)editedGroup;
- (id)statusTextField;
- (id)smartGroupSheet;
- (id)smartGroupLabelTextField;
- (id)smartGroupRuleEditor;
- (id)library;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)ensureUIIsLoaded;
- (void)dealloc;
- (id)initWithAssetLibrary:(id)arg1;

@end

@interface DTSplitView : NSView
{
    NSString *autosaveName;
    long long resizingMode;
    double dividerThickness;
    NSNumber *minViewSizeComponent;
    BOOL vertical;
    BOOL layingOut;
    id delegate;
}

- (void)resetCursorRects;
- (id)dividerCursor;
- (id)autosaveName;
- (void)setAutosaveName:(id)arg1;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (struct CGRect)dimpleRect;
- (id)dimpleImage;
- (void)mouseDown:(id)arg1;
- (void)splitterPositionMoved;
- (double)minSizeForView:(id)arg1;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (BOOL)isFlipped;
- (struct CGRect)dividerRect;
- (void)setResizingMode:(long long)arg1;
- (long long)resizingMode;
- (void)resizeSubviewsWithOldSize:(struct CGSize)arg1;
- (void)setVertical:(BOOL)arg1;
- (BOOL)isVertical;
- (void)setSplitterPosition:(double)arg1;
- (double)splitterPosition;
- (void)layoutFromDefaults;
- (void)trackSplitterWithMouseDown:(id)arg1;
- (void)layoutWithOldSize:(struct CGSize)arg1 andNewSize:(struct CGSize)arg2;
- (void)subviewDidResize:(id)arg1;
- (void)setMinViewSize:(struct CGSize)arg1 andMaxViewSize:(struct CGSize)arg2;
- (void)setMinViewFrame:(struct CGRect)arg1 andMaxViewFrame:(struct CGRect)arg2;
- (void)willRemoveSubview:(id)arg1;
- (void)didAddSubview:(id)arg1;
- (id)maxView;
- (id)minView;
- (void)setDividerThickness:(double)arg1;
- (double)dividerThickness;
- (void)setDefaultsBackedMinViewSizeComponent:(double)arg1;
- (double)defaultsBackedMinViewSizeComponent;
- (id)defaultsMinComponentKey;
- (BOOL)isValid;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface DTTemplateButtonCell : NSButtonCell
{
    struct CGPoint _origin;
    BOOL _useRectHighlight;
}

+ (id)sharedStorage;
+ (void)initialize;
- (id)alternateImage;
- (struct CGRect)drawTitle:(id)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;
- (void)drawImage:(id)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (BOOL)useRectHighlight;
- (void)setUseRectHighlight:(BOOL)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initTextCell:(id)arg1;

@end

@interface DTTemplateCategory : NSObject
{
    NSString *displayName;
    NSImage *image;
    NSMutableArray *templateItems;
    NSString *identifier;
}

@property(readonly) NSString *identifier; // @synthesize identifier;
@property(readonly) NSImage *image; // @synthesize image;
@property(readonly) NSString *displayName; // @synthesize displayName;
- (void)addTemplateItem:(id)arg1;
- (void)setTemplateItems:(id)arg1;
- (id)templateItems;
- (void)dealloc;
- (id)initWithDisplayName:(id)arg1 image:(id)arg2 templateItems:(id)arg3 identifier:(id)arg4;

@end

@interface DTTemplateChooserAccessoryBackgroundView : NSView
{
}

- (BOOL)isFlipped;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface DTTemplateChooserDetailView : NSView
{
    NSScrollView *descriptionScrollView;
    NSTextField *descriptionTextField;
    NSTextField *titleTextField;
    NSImageView *imageView;
}

- (void)sizeToFit;
- (void)resizeSubviewsWithOldSize:(struct CGSize)arg1;
- (struct CGSize)descriptionSize;
- (double)headerHeight;
- (BOOL)isFlipped;
- (void)setDescription:(id)arg1;
- (void)setImage:(id)arg1;
- (void)setTitle:(id)arg1;
- (void)awakeFromNib;

@end

@interface DTTemplateChooserMatrix : NSMatrix
{
}

- (BOOL)needsPanelToBecomeKey;
- (void)keyDown:(id)arg1;

@end

@interface DTTemplateChooserViewController : NSViewController
{
    NSView *templateChooser;
    NSView *itemView;
    NSScrollView *descriptionScrollView;
    NSTextField *headingTextField;
    DTTemplateChooserMatrix *categoryMatrix;
    DTTemplateChooserMatrix *itemMatrix;
    DTSplitView *itemSplitView;
    DTFlippedView *descriptionView;
    DTTemplateChooserDetailView *detailView;
    NSView *accessoryView;
    DTTemplateChooserAccessoryBackgroundView *accessoryBackgroundView;
    DTTypeCompletionHandler *typeCompletionHandler;
    NSMutableArray *templateCategories;
    BOOL defaultsRestored;
    id delegate;
}

@property(retain) NSView *accessoryView; // @synthesize accessoryView;
@property BOOL defaultsRestored; // @synthesize defaultsRestored;
- (void)splitViewSplitterDidMove:(id)arg1;
- (double)splitView:(id)arg1 minSizeForView:(id)arg2;
- (void)updateAccessoryView;
- (void)updateTemplateDescription;
- (void)updateTemplateItemsMatrix;
- (void)updateTemplateCategoriesMatrix;
- (void)update;
- (void)typeSelectionInMatrix:(id)arg1 forString:(id)arg2;
- (id)typeCompletionHandler:(id)arg1 typeCompletionStringForObject:(id)arg2;
- (void)itemDoubleClicked:(id)arg1;
- (void)itemClicked:(id)arg1;
- (void)updateSelectedTemplateDefault;
- (void)categoryClicked:(id)arg1;
- (void)updateSelectedCategoryDefault;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (id)selectedCategory;
- (id)selectedTemplate;
- (BOOL)selectLastUsedObjectInMatrix:(id)arg1 forKey:(id)arg2;
- (BOOL)selectObjectInMatrix:(id)arg1 forIdentifier:(id)arg2;
- (void)selectLastUsedObjects;
- (void)setHeadingText:(id)arg1;
- (void)addTemplateCategory:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)addTemplateCategory:(id)arg1;
- (void)clearTemplateCategories;
- (void)setTemplateCategories:(id)arg1;
- (id)templateCategories;
- (void)templateChooserViewControllerViewDidResize:(id)arg1;
- (void)restoreDefaults;
- (void)resetSplitterPosition;
- (void)awakeFromNib;
- (void)dealloc;
- (id)init;
- (void)setInstructionField:(id)arg1;

@end

@interface DTTemplateItem : NSObject
{
    NSString *displayName;
    NSImage *image;
    NSString *descriptionTitle;
    NSString *description;
    NSString *identifier;
    NSString *subidentifier;
    NSArray *subtemplates;
    DTTemplateItem *selectedSubtemplate;
}

@property(nonatomic) DTTemplateItem *selectedSubtemplate; // @synthesize selectedSubtemplate;
@property(readonly) NSArray *subtemplates; // @synthesize subtemplates;
@property(readonly) NSString *subidentifier; // @synthesize subidentifier;
@property(readonly) NSString *identifier; // @synthesize identifier;
@property(readonly) NSString *description; // @synthesize description;
@property(readonly) NSString *descriptionTitle; // @synthesize descriptionTitle;
@property(readonly) NSImage *image; // @synthesize image;
@property(readonly) NSString *displayName; // @synthesize displayName;
- (id)subtemplateWithSubIdentifier:(id)arg1;
- (void)updateToMatchSelectedSubtemplate;
- (void)setIdentifier:(id)arg1;
- (void)setDescription:(id)arg1;
- (void)setDescriptionTitle:(id)arg1;
- (void)setImage:(id)arg1;
- (void)setDisplayName:(id)arg1;
- (void)dealloc;
- (id)initWithTemplates:(id)arg1 identifier:(id)arg2;
- (id)initWithDisplayName:(id)arg1 image:(id)arg2 description:(id)arg3 descriptionTitle:(id)arg4 identifier:(id)arg5 subidentifier:(id)arg6;
- (id)initWithDisplayName:(id)arg1 image:(id)arg2 description:(id)arg3 descriptionTitle:(id)arg4 identifier:(id)arg5;

@end

@interface DTTileViewItem : NSObject <NSCopying, NSCoding>
{
    void *_reserved;
    void *_reserved2;
    NSMutableData *_archive;
    DTTileView *_layoutItemOwnerView;
    id _representedObject;
    NSView *_view;
    struct __tileItemFlags {
        unsigned int _selected:1;
        unsigned int _clicked:1;
        unsigned int _removalNeeded:1;
        unsigned int _suppressSelectionChangeNotification:1;
        unsigned int _reservedAnimationContainer:28;
    } _layoutItemFlags;
    struct CGRect _targetViewFrameRect;
    struct CGRect _appliedViewFrameRect;
    unsigned long long _containerReferenceCounter;
}

- (id)description;
- (void)_finishShowAnimation;
- (void)_finishHideAnimation;
- (void)_applyTargetConfigurationWithAnimationMoveAndResize:(id *)arg1 show:(id *)arg2 hide:(id *)arg3;
- (void)_applyTargetConfigurationWithoutAnimation;
- (void)toggleSelected:(id)arg1;
- (BOOL)isSelected;
- (void)setSelected:(BOOL)arg1;
- (void)_setSelectedWithoutNotification:(BOOL)arg1;
- (struct CGRect)_targetViewFrameRect;
- (void)_setTargetViewFrameRect:(struct CGRect)arg1;
- (BOOL)_isRemovalNeeded;
- (void)_setRemovalNeeded:(BOOL)arg1;
- (id)view;
- (void)setView:(id)arg1;
- (id)representedObject;
- (void)setRepresentedObject:(id)arg1;
- (id)layoutView;
- (void)_setLayoutItemOwnerView:(id)arg1;
- (void)_decreaseContainerReferenceCounter;
- (void)_increaseContainerReferenceCounter;
- (BOOL)isEqual:(id)arg1;
- (void)dealloc;
- (void)_releaseResources;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)_copyConnectionsOfView:(id)arg1 referenceObject:(id)arg2 toView:(id)arg3 referenceObject:(id)arg4;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)init;
- (void)_init;

@end

@interface DTToolTip : NSObject
{
}

+ (id)boldToolTipFont;
+ (id)toolTipFont;
+ (id)attributedToolTipStringForString:(id)arg1;
+ (struct CGPoint)toolTipPositionForMouseLocation:(struct CGPoint)arg1;
+ (void)orderOutToolTip;
+ (void)fadeOut:(id)arg1;
+ (void)showToolTip:(id)arg1 withSourceRect:(struct CGRect)arg2 andMouseLocation:(struct CGPoint)arg3;
+ (void)showToolTip:(id)arg1 withSourceRect:(struct CGRect)arg2 andMouseLocation:(struct CGPoint)arg3 maximumWidth:(double)arg4;
+ (id)scheduledTimerWithInterval:(double)arg1;

@end

@interface DTToolTipManager : NSObject
{
    struct __CFDictionary *registeredViews;
    id eventMonitor;
    NSTimer *timer;
    long long enabledBlocks;
}

+ (id)sharedInstance;
- (void)mouseRested:(id)arg1;
- (void)unregisterViewForToolTips:(id)arg1;
- (void)registerViewForToolTips:(id)arg1 delegate:(id)arg2;
- (id)allViews;
- (id)delegateForView:(id)arg1;
- (void)monitorEvent:(id)arg1;
- (void)scheduleMouseRested;
- (void)unscheduleMouseRested;
- (void)enableTooltips;
- (void)disableTooltips;
- (BOOL)tooltipsAreEnabled;
- (void)dealloc;
- (id)init;

@end

@interface DTToolTipView : NSView
{
    NSMutableAttributedString *string;
    double maxWidth;
}

- (void)drawRect:(struct CGRect)arg1;
- (id)backgroundColor;
- (BOOL)isFlipped;
- (void)setAttributedString:(id)arg1;
- (void)setMaxWidth:(double)arg1;
- (double)maxWidth;

@end

@interface DTTypeCompletionHandler : NSObject
{
    BOOL delegateImplementsTypeCompletionStringForObject;
    BOOL delegateImplementsCompletionWillExpire;
    BOOL delegateImplementsCompletionDisplayShouldExpire;
    NSMutableString *completionString;
    NSTimer *completionWillExpireTimer;
    NSTimer *completionDisplayShouldExpireTimer;
    NSString *runLoopMode;
    id delegate;
}

+ (id)typeCompletionHandlerWithDelegate:(id)arg1;
+ (id)typeCompletionHandlerWithDelegate:(id)arg1 runLoopMode:(id)arg2;
- (id)processTypeSelectionInput:(id)arg1 objects:(id)arg2 index:(unsigned long long *)arg3 startingAtObject:(id)arg4;
- (id)processTypeSelectionInput:(id)arg1 objects:(id)arg2 index:(unsigned long long *)arg3;
- (void)invalidate;
- (void)expireCompletionDisplay:(id)arg1;
- (void)expireCompletion:(id)arg1;
- (void)clearAndRenewCompletionString;
- (void)clearAndRenewCompletionDisplayShouldExpireTimer;
- (void)clearCompletionDisplayShouldExpireTimer;
- (void)clearAndRenewCompletionWillExpireTimer;
- (void)clearCompletionWillExpireTimer;
- (id)currentTypeCompletionString;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)dealloc;
- (id)initWithDelegate:(id)arg1 runLoopMode:(id)arg2;

@end

@interface DTiMovieAssetCategory : DTAssetCategory
{
}

+ (id)_genericMovieImage;
+ (id)_iLifeBundle;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)identifierForMediaGroup:(id)arg1;
- (id)identifierForMovie:(id)arg1;
- (BOOL)containsAssetWithIdentifer:(id)arg1 inAssetSourceWithIdentifier:(id)arg2 subpath:(id)arg3;
- (id)init;

@end

@interface DTiPhotoAssetCategory : DTAssetCategory
{
}

- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)init;

@end

@interface IBDragDeleteTarget : NSObject
{
}

- (BOOL)performDragOperation:(id)arg1;
- (BOOL)prepareForDragOperation:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;

@end

@interface IBSimpleCrossfadeDragImageStateTransition : DTDraggedImageStateTransitionView
{
}

- (void)drawRect:(struct CGRect)arg1;
- (void)setProgress:(float)arg1;
- (struct CGSize)idealFrameSize;
- (struct CGPoint)toAnchor;
- (struct CGPoint)fromAnchor;
- (id)toImage;
- (id)fromImage;
- (id)initWithFromState:(id)arg1 andToState:(id)arg2;

@end

@interface NSClipView (ConnectionAutoScrolling)
- (BOOL)dtAutoscrollWithExternalDragEvent:(id)arg1 animate:(BOOL)arg2;
@end

@interface NSOutlineView (DragAndDropEnhancements)
- (id)draggedImageState:(id)arg1;
@end

@interface NSTableView (ConnectionAutoScrolling)
- (BOOL)dtAutoscrollWithExternalDragEvent:(id)arg1 animate:(BOOL)arg2;
@end

@interface NSTableView (DragAndDropEnhancements)
- (id)draggedImageState:(id)arg1;
@end

@interface NSView (ConnectionAutoScrolling)
- (BOOL)dtAutoscrollWithExternalDragEvent:(id)arg1 animate:(BOOL)arg2;
@end

@interface NSWindow (IBHacks)
- (id)draggedImageState:(id)arg1;
- (id)registeredDraggedTypes;
@end

@interface _DTTileViewRubberband : NSView
{
    NSColor *_frameColor;
    NSColor *_fillColor;
}

- (void)drawRect:(struct CGRect)arg1;
- (BOOL)isOpaque;
- (void)dealloc;
- (id)initWithFrameColor:(id)arg1 fillColor:(id)arg2;

@end

