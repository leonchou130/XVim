//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Typedef'd Structures

typedef struct {
    unsigned int :24;
    unsigned int :20;
    unsigned int :20;
} CDStruct_aac1954a;

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/OtherFrameworks/DocSetManagement.framework/Versions/A/DocSetManagement
// UUID: C98A26F1-772B-3FAC-820F-468ED302A3D6
//
//                           Arch: x86_64
//                Current version: 2301.0.0
//          Compatibility version: 1.0.0
//                 Source version: 2301.0.0.0.0
//       Minimum Mac OS X version: 10.10.0
//                    SDK version: 10.10.0
//
// Objective-C Garbage Collection: Supported
//
//                       Run path: @loader_path/../../../
//                               = /Applications/Xcode.app/Contents/OtherFrameworks
//

@protocol DSMSubscriptionUpdateProtocol
- (void)docSetGroup:(DSADocSetGroup *)arg1 updateItemsModified:(NSArray *)arg2;
- (void)docSetGroup:(DSADocSetGroup *)arg1 updateItemsRemoved:(NSArray *)arg2;
- (void)docSetGroup:(DSADocSetGroup *)arg1 updateItemsAdded:(NSArray *)arg2;
@end

@protocol DTFileSystemEventStreamDelegate <NSObject>
- (void)fileSystemEventStream:(DTFileSystemEventStream *)arg1 notedChangeAtPath:(NSString *)arg2 scanRecursively:(BOOL)arg3;

@optional
- (void)historyWrappedForFileSystemEventStream:(DTFileSystemEventStream *)arg1;
- (void)historyCompleteForFileSystemEventStream:(DTFileSystemEventStream *)arg1;
- (void)fileSystemEventStream:(DTFileSystemEventStream *)arg1 notedVolumeUnmount:(NSString *)arg2;
- (void)fileSystemEventStream:(DTFileSystemEventStream *)arg1 notedVolumeMount:(NSString *)arg2;
- (void)fileSystemEventStream:(DTFileSystemEventStream *)arg1 notedChangeOfRootPath:(NSString *)arg2;
@end

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (BOOL)respondsToSelector:(SEL)arg1;
- (BOOL)conformsToProtocol:(Protocol *)arg1;
- (BOOL)isMemberOfClass:(Class)arg1;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (BOOL)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@interface DSADocSet (PlatformCompare)
- (long long)_raCompareDocSetNames:(id)arg1;
- (long long)_raPlatformVersionCompare:(id)arg1;
@end

@interface DSADocSetUpdate (Comparison)
- (long long)compareByName:(id)arg1;
@end

@interface DSMAppleRefUtilities : NSObject
{
}

+ (id)appleRefForSymbol:(id)arg1;
+ (id)_dsaLangNameForID:(id)arg1;

@end

@interface DSMBookmark : NSObject <NSCoding>
{
    NSString *m_absoluteURLString;
    NSString *m_docSetIdentifier;
    NSString *m_name;
}

+ (id)bookmarkFromDictionary:(id)arg1;
+ (id)bookmarkWithName:(id)arg1 URLString:(id)arg2 docSetIdentifier:(id)arg3;
@property(retain, nonatomic) NSString *name; // @synthesize name=m_name;
@property(retain, nonatomic) NSString *docSetIdentifier; // @synthesize docSetIdentifier=m_docSetIdentifier;
@property(retain, nonatomic) NSString *absoluteURLString; // @synthesize absoluteURLString=m_absoluteURLString;
- (id)description;
- (id)dictionaryRepresentation;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;

@end

@interface DSMBookmarkManager : NSObject
{
    NSArray *m_bookmarksAsObjects;
}

+ (id)sharedBookmarkManager;
+ (void)initialize;
@property(retain, nonatomic) NSArray *bookmarksAsObjects; // @synthesize bookmarksAsObjects=m_bookmarksAsObjects;
- (void)persistBookmarkDictionaries:(id)arg1;
- (void)persistBookmarks:(id)arg1;
- (id)allBookmarksAsDictionaries;
- (id)allBookmarksAsObjects;
- (void)setAllBookmarksAsObjectsArray:(id)arg1;
- (void)replaceObjectInAllBookmarksAsObjectsAtIndex:(unsigned int)arg1 withObject:(id)arg2;
- (void)removeObjectFromAllBookmarksAsObjectsAtIndex:(unsigned int)arg1;
- (void)insertObject:(id)arg1 inAllBookmarksAsObjectsAtIndex:(unsigned int)arg2;
- (id)objectInAllBookmarksAsObjectsAtIndex:(unsigned int)arg1;
- (unsigned int)countOfAllBookmarksAsObjectsArray;
- (void)deleteAllBookmarks;
- (void)addBookmark:(id)arg1;

@end

@interface DSMDocSetLoader : NSObject <DTFileSystemEventStreamDelegate>
{
    NSMutableArray *m_loadedDocSets;
    NSMutableDictionary *m_docSetGroups;
    NSMutableArray *m_docSetRecords;
    NSMutableDictionary *m_sdkAndPlatformAdvertisedDocSets;
    BOOL m_testingMode;
    id <DSMSubscriptionUpdateProtocol> m_subscriptionUpdateDelegate;
    DTFileSystemEventStream *m_standardDocSetLocationsFSEventStream;
}

+ (BOOL)runningStandalone;
+ (id)sharedDocSetLoader;
@property(retain, nonatomic) DTFileSystemEventStream *standardDocSetLocationsFSEventStream; // @synthesize standardDocSetLocationsFSEventStream=m_standardDocSetLocationsFSEventStream;
@property(nonatomic) id subscriptionUpdateDelegate; // @synthesize subscriptionUpdateDelegate=m_subscriptionUpdateDelegate;
@property(retain, nonatomic) NSMutableDictionary *sdkAndPlatformAdvertisedDocSets; // @synthesize sdkAndPlatformAdvertisedDocSets=m_sdkAndPlatformAdvertisedDocSets;
@property(retain, nonatomic) NSMutableArray *docSetRecords; // @synthesize docSetRecords=m_docSetRecords;
@property(retain, nonatomic) NSMutableDictionary *docSetGroups; // @synthesize docSetGroups=m_docSetGroups;
@property(retain, nonatomic) NSMutableArray *loadedDocSets; // @synthesize loadedDocSets=m_loadedDocSets;
@property(nonatomic) BOOL testingMode; // @synthesize testingMode=m_testingMode;
- (id)xcodeHomePageURL;
- (id)xcodeReleaseNotesNode;
- (id)xcodeUserGuideNode;
- (id)xcodeGuidesLandingPageNode;
- (BOOL)fileExistsAtPath:(id)arg1;
- (id)quickLoadDocSetWithXcodeReference;
- (id)devToolsDir;
- (id)docSetWithXcodeReference;
- (id)docSetWithAppleCoreReference;
- (id)docSetWithPackageID:(id)arg1;
- (id)_appleDocSetWithPackageID:(id)arg1;
- (id)loadedDocSetMatchingBundleIdentifier:(id)arg1;
- (id)allLanguagesFromLoadedDocSets;
- (BOOL)isSearchingEnabledForDocSetRecord:(id)arg1;
- (BOOL)isSearchingEnabledForDocSetID:(id)arg1;
- (id)persistedDocSetRecordsForSearching;
- (id)docSetsEnabledForSearching;
- (void)persistEnabledStateOfDocSetRecord:(id)arg1;
- (id)createDocSetRecordForDocSet:(id)arg1;
- (id)fileModificationDateForPath:(id)arg1;
- (id)cachedDocSetRecordForDocSet:(id)arg1;
- (id)cachedDocSetRecordForDocSetIdentifier:(id)arg1;
- (void)addDocSetRecord:(id)arg1;
- (void)removeDocSetRecordForDocSet:(id)arg1;
- (void)scanForDocSetsInDirectories:(id)arg1;
- (BOOL)docSetIsValidForThisVersionOfXcode:(id)arg1;
- (CDStruct_aac1954a)runningXcodeVersion;
- (void)unloadAllGroups;
- (void)unloadGroup:(id)arg1;
- (void)unloadAllDocSets;
- (void)removeDocSet:(id)arg1;
- (void)_registerAndConfigureFSEventStreamForDocSet:(id)arg1;
- (void)docSetUpdateFinishedInstalling:(id)arg1;
- (void)refreshSearchResultsForUpdate:(id)arg1;
- (void)removeStaleDocSetsForUpdate:(id)arg1;
- (id)docSetsMatchingIdentifier:(id)arg1;
- (void)removeDocSets:(id)arg1;
- (void)postRemovedDocSetNotification:(id)arg1;
- (void)postWillRemoveDocSetNotification:(id)arg1;
- (void)postAddedDocSetNotification:(id)arg1 inGroup:(id)arg2;
- (void)findAndLoadDocSetsInStandardPaths;
- (void)fileSystemEventStream:(id)arg1 notedChangeAtPath:(id)arg2 scanRecursively:(BOOL)arg3;
- (void)fileSystemEventStream:(id)arg1 notedChangeOfRootPath:(id)arg2;
- (void)createFileSystemEventStreamForPaths:(id)arg1;
- (void)_configureFSEventStreamForDocSet:(id)arg1;
- (void)processFileSystemEventStreamChangeAtPath:(id)arg1;
- (void)_loadNewDocSetsInChangedPaths:(id)arg1;
- (void)_reloadModifiedDocSetsInPaths:(id)arg1;
- (BOOL)_docSetModificationDateChanged:(id)arg1;
- (id)_docSetsRemovedFromPath:(id)arg1;
- (id)_docSetPathsInPath:(id)arg1;
- (BOOL)_pathIsADocSetBundle:(id)arg1;
- (void)_loadSubscribedGroups;
- (void)loadGroupsFromSDKsAndPlatforms;
- (void)_preloadSDKs;
- (id)loadDocSetAtPath:(id)arg1;
- (void)_registerDocSet:(id)arg1;
- (id)_registerGroupForDocSet:(id)arg1;
- (id)_registeredGroupForFeedURLString:(id)arg1;
- (id)registeredGroupForDocSet:(id)arg1;
- (id)_docSetGroupFromSDKForName:(id)arg1 subscribe:(BOOL)arg2 feedURLString:(id)arg3;
- (id)docSetGroupForFeedURLString:(id)arg1 subscribe:(BOOL)arg2 groupName:(id)arg3 error:(id *)arg4;
- (id)docSetGroupForFeedURLString:(id)arg1 subscribe:(BOOL)arg2 error:(id *)arg3;
- (void)_registerGroup:(id)arg1 withFeedURL:(id)arg2;
- (void)_registerGroup:(id)arg1 forDocSet:(id)arg2;
- (void)_stopObservingChangesToGroup:(id)arg1;
- (void)_configureObservationOfChangesToGroup:(id)arg1;
- (void)_docSetGroupChanged:(id)arg1;
- (void)_subscriptionDelegateNotifyChangesToGroup:(id)arg1 updateItemsModified:(id)arg2;
- (void)_subscriptionDelegateNotifyChangesToGroup:(id)arg1 updateItemsAdded:(id)arg2;
- (void)_subscriptionDelegateNotifyChangesToGroup:(id)arg1 updateItemsRemoved:(id)arg2;
@property(readonly, nonatomic) NSArray *loadedDocSetsSortedByName;
- (id)feedIdentifierForDocSet:(id)arg1;
- (void)_processCheckAndInstallDefault;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)_observeCheckAndInstallDefault;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DSMDocSetRecord : NSObject
{
    DSADocSet *_docSet;
    NSString *_name;
    NSString *_docSetID;
    NSString *_shortVersionString;
    NSString *_copyright;
    NSString *_feedName;
    NSString *_feedURL;
    NSString *_minimumXcodeVersion;
    NSString *_webRootURL;
    NSString *_path;
    BOOL _isDuplicate;
    BOOL _searchingEnabled;
    DTFileSystemEventStream *_eventStream;
    NSDate *_modificationDate;
}

@property(retain, nonatomic) NSDate *modificationDate; // @synthesize modificationDate=_modificationDate;
@property(nonatomic) BOOL searchingEnabled; // @synthesize searchingEnabled=_searchingEnabled;
@property(retain, nonatomic) DTFileSystemEventStream *eventStream; // @synthesize eventStream=_eventStream;
@property(nonatomic) BOOL isDuplicate; // @synthesize isDuplicate=_isDuplicate;
@property(copy, nonatomic) NSString *path; // @synthesize path=_path;
@property(copy, nonatomic) NSString *webRootURL; // @synthesize webRootURL=_webRootURL;
@property(copy, nonatomic) NSString *minimumXcodeVersion; // @synthesize minimumXcodeVersion=_minimumXcodeVersion;
@property(copy, nonatomic) NSString *feedURL; // @synthesize feedURL=_feedURL;
@property(copy, nonatomic) NSString *feedName; // @synthesize feedName=_feedName;
@property(copy, nonatomic) NSString *copyright; // @synthesize copyright=_copyright;
@property(copy, nonatomic) NSString *shortVersionString; // @synthesize shortVersionString=_shortVersionString;
@property(copy, nonatomic) NSString *docSetID; // @synthesize docSetID=_docSetID;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(retain, nonatomic) DSADocSet *docSet; // @synthesize docSet=_docSet;
- (void)stopListeningToFileSystemEventStream;
- (void)prepareForRemoval;
- (void)createFileSystemEventStreamWithDelegate:(id)arg1;
- (id)description;
- (id)initWithDocSet:(id)arg1 atPath:(id)arg2;

@end

@interface DSMDocSetURLResolution : NSObject
{
}

+ (id)sharedResolver;
- (id)resolveURL:(id)arg1 fromDocSet:(id)arg2 resolvedDocSet:(id *)arg3;
- (id)resolveRemoteURL:(id)arg1 resolvedDocSet:(id *)arg2;
- (id)resolveFileURL:(id)arg1 fromDocSet:(id)arg2 resolvedDocSet:(id *)arg3;
- (id)localURLForURL:(id)arg1 inDocSets:(id)arg2 resolvedDocSet:(id *)arg3;
- (id)docSetsMatchingGroupAndFallbackURLOfDocSet:(id)arg1;
- (BOOL)_fileExistsAtWebURL:(id)arg1;
- (BOOL)_fileExistsAtPath:(id)arg1;

@end

@interface DSMExtendedDocLocation : NSObject
{
    NSString *_name;
    NSURL *_url;
    BOOL _editable;
    BOOL _enabled;
}

+ (id)libraryDocLocations;
+ (id)platformDocLocations;
+ (id)SDKDocLocations;
+ (id)devToolsDocLocation;
+ (id)extendedDocLocationWithDescription:(id)arg1;
+ (id)extendedDocLocationWithName:(id)arg1 url:(id)arg2 enabled:(BOOL)arg3 editable:(BOOL)arg4;
+ (id)defaultDevToolsDocSetPath;
+ (void)initialize;
- (void)setURL:(id)arg1;
- (id)url;
- (void)setName:(id)arg1;
- (id)name;
- (void)setEnabled:(BOOL)arg1;
- (BOOL)enabled;
- (void)setEditable:(BOOL)arg1;
- (BOOL)editable;
- (BOOL)isEqual:(id)arg1;
- (id)description;
- (id)descriptionDictionary;
- (void)dealloc;
- (id)initWithName:(id)arg1 url:(id)arg2 enabled:(BOOL)arg3 editable:(BOOL)arg4;

@end

@interface DSMFullTextResultsUtilities : NSObject
{
}

+ (id)_removeHitsNotMatchingLanguagePreference:(id)arg1;
+ (id)_usersPreferredLanguage;
+ (id)_trimToTopHits:(id)arg1 givenMaxRelevance:(float)arg2;
+ (id)filteredAndSortedFullTextResults:(id)arg1 maxRelevance:(double)arg2;

@end

@interface DSMManPagePaths : NSObject
{
}

+ (id)manPaths;

@end

@interface DSMMetaQueries : NSObject
{
}

+ (id)sharedMetaQueries;
- (id)reverseArray:(id)arg1;
- (id)_normalizedFamilyIdentifier:(id)arg1;
- (id)_affinityDocSetsForFamilyIdentifier:(id)arg1 platformVersion:(id)arg2 enabledDocSets:(id)arg3 includeMismatchedFamilyNames:(BOOL)arg4;
- (id)affinityDocSetsForProject:(id)arg1 includeMismatchedFamilyNames:(BOOL)arg2;
- (id)urlForUUID:(id)arg1 inDocSet:(id)arg2;
- (id)nodeForUUID:(id)arg1 inDocSet:(id)arg2;
- (id)urlForAppleRef:(id)arg1 inDocSet:(id)arg2;
- (id)firstDocSetWithReferenceForAppleRef:(id)arg1 project:(id)arg2;
- (id)_firstDocSetWithReferenceForAppleRef:(id)arg1 resultRecords:(id *)arg2 project:(id)arg3;
- (id)_firstDocSetWithReferenceForSymbol:(id)arg1 resultRecords:(id *)arg2 project:(id)arg3;

@end

@interface DSMPublisher : NSObject
{
    NSMutableArray *m_docSetGroups;
    NSString *m_identifier;
    NSString *m_displayName;
}

+ (id)publisherForGroup:(id)arg1;
+ (id)allCompanies;
+ (id)allPublishers;
+ (void)initialize;
@property(retain, nonatomic) NSString *displayName; // @synthesize displayName=m_displayName;
@property(retain, nonatomic) NSString *identifier; // @synthesize identifier=m_identifier;
@property(retain, nonatomic) NSMutableArray *docSetGroups; // @synthesize docSetGroups=m_docSetGroups;
- (void)addDocSetGroup:(id)arg1;
- (void)delloc;
- (id)initWithGroup:(id)arg1 identifier:(id)arg2 displayName:(id)arg3;
- (id)description;
- (void)unsubscribe;
- (long long)publisherCompareDisplayName:(id)arg1;
@property(readonly, nonatomic) NSArray *sortedDocSetUpdatesInPublisherGroups;

@end

@interface DSMQuery : NSObject
{
    NSString *_searchString;
    unsigned long long _queryMatchType;
    NSString *_tokenTypeKey;
    NSArray *_queryLanguages;
    NSString *_tokenScope;
    NSArray *_queryDocSets;
    NSArray *_sortDescriptors;
}

+ (id)queryForString:(id)arg1 matchType:(unsigned long long)arg2 tokenType:(id)arg3 languages:(id)arg4 tokenScope:(id)arg5 inDocSets:(id)arg6 sortDescriptors:(id)arg7;
@property(retain, nonatomic) NSArray *sortDescriptors; // @synthesize sortDescriptors=_sortDescriptors;
@property(retain, nonatomic) NSArray *docSets; // @synthesize docSets=_queryDocSets;
@property(retain, nonatomic) NSString *tokenScope; // @synthesize tokenScope=_tokenScope;
@property(retain, nonatomic) NSArray *languages; // @synthesize languages=_queryLanguages;
@property(retain, nonatomic) NSString *tokenTypeKey; // @synthesize tokenTypeKey=_tokenTypeKey;
@property(nonatomic) unsigned long long matchType; // @synthesize matchType=_queryMatchType;
@property(retain, nonatomic) NSString *searchString; // @synthesize searchString=_searchString;
- (id)description;
- (id)_debugDSAMatchTypeStringRepresentation:(unsigned long long)arg1;

@end

@interface DSMQueryController : NSObject
{
}

+ (id)sharedQueryController;
- (id)runBookTitleQuery:(id)arg1;
- (void)runAsynchronousBookTitleQuery:(id)arg1 delegate:(id)arg2;
- (id)_runBookTitleQuery:(id)arg1;
- (BOOL)doesNode:(id)arg1 matchSearchString:(id)arg2 withMatchType:(unsigned long long)arg3;
- (id)managedObjectContextForDocSet:(id)arg1;
- (void)_mainThreadCallbackBookTitleDelegateWithResults:(id)arg1;
- (id)docSetNodesFromObjectIDs:(id)arg1;
- (void)runAsynchronousFullTextQuery:(id)arg1 restrictToNodes:(id)arg2 delegate:(id)arg3 contextInfo:(void *)arg4;
- (void)runAsynchronousFullTextQuery:(id)arg1 delegate:(id)arg2 contextInfo:(void *)arg3;
- (id)runSynchronousFullTextQuery:(id)arg1 maximumRelevance:(double *)arg2;
- (id)runSynchronousFullTextQuery:(id)arg1 restrictToNodes:(id)arg2 maximumRelevance:(double *)arg3;
- (void)runAsynchronousAPIQuery:(id)arg1 delegate:(id)arg2 contextInfo:(void *)arg3;
- (id)runSynchronousAPIQuery:(id)arg1;
- (id)runSynchronousAPIQueryForAppleRef:(id)arg1 docSets:(id)arg2;
- (id)tokenQueryDictionaryWithOptions:(id)arg1;

@end

@interface DSMSubscriptionManager : NSObject
{
    BOOL m_subscribeToSDKFeeds;
}

+ (void)setCheckAndInstallUpdatesAutomatically:(BOOL)arg1;
+ (BOOL)checkAndInstallUpdatesAutomatically;
+ (void)initialize;
+ (id)sharedSubscriptionManager;
@property(nonatomic) BOOL subscribeToSDKFeeds; // @synthesize subscribeToSDKFeeds=m_subscribeToSDKFeeds;
- (id)allDocSetUpdates;
- (void)subscribeToAllPublishersWithDelegate:(id)arg1;
- (void)subscribeToAllPublishers;
- (id)allDocSetGroups;
- (id)docSetPublishers;
- (id)installPathForUpdate:(id)arg1;
- (void)toggleAutomaticallyCheckForUpdates:(unsigned long long)arg1;
- (void)searchSDKsForDocSetFeeds;
- (void)checkForUpdatesInAllPublishers;
- (void)_refreshAllDidFinish:(id)arg1;
- (BOOL)isSubscribedPublisher:(id)arg1;
- (BOOL)isSubscribedGroup:(id)arg1;
- (void)dealloc;

@end

