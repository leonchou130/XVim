//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct Argument {
    void *_field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned short _field5;
    unsigned short _field6;
};

struct BindingPoint {
    int mExtID;
    int mIntID;
};

struct BlendChannelSetup {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
};

struct BufferObject<GPUGLSMObjectTypes> {
    int _functionIndex;
    int _objectID;
    int _internalID;
    int mRefCount;
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mBufferSize;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mBufferUsage;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mBufferData;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mBufferTarget;
    struct DYStateElement<unsigned int, GPUTools::CStateBaseAnalysis> _mBufferAccessFlags;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mBufferMapped;
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mBufferMapOffset;
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mBufferMapLength;
    struct DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis> _mBufferMapPointer;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mObjectLabel;
};

struct CGPoint {
    double _field1;
    double _field2;
};

struct CGSize {
    double _field1;
    double _field2;
};

struct ContextStateMirror<GPUGLSMObjectTypes> {
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mOpenGLAPIVersion;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mOpenGLFunctionalityLevel;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mActiveTexture;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mAlphaTestFunc;
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mAlphaTestRef;
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis> _mBlendColor;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mBlendEquationRGB;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mBlendEquationAlpha;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mBlendSrcRGB;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mBlendSrcAlpha;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mBlendDstRGB;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mBlendDstAlpha;
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis> _mClearColor;
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mClearDepth;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mClearStencil;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mClientActiveTexture;
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis> _mCurrentColor;
    struct DYStateElement<GPUTools::SM::VecN<int, 4>, GPUTools::CStateBaseAnalysis> _mColorWritemask;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mCullFaceMode;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mCurrentPaletteMatrix;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mDepthFunc;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mDepthMask;
    struct DYStateElement<GPUTools::SM::VecN<float, 2>, GPUTools::CStateBaseAnalysis> _mDepthRange;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mFrontFace;
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mLineWidth;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mLogicOp;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mMatrixMode;
    struct DYStateElement<GPUTools::SM::VecN<float, 3>, GPUTools::CStateBaseAnalysis> _mCurrentNormal;
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mPointSize;
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mPolygonOffsetFactor;
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mPolygonOffsetUnits;
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mSampleCoverageValue;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mSampleCoverageInvert;
    struct DYStateElement<GPUTools::SM::VecN<int, 4>, GPUTools::CStateBaseAnalysis> _mScissorBox;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mShadeModel;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mStencilFunc;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mStencilRef;
    struct DYStateElement<unsigned int, GPUTools::CStateBaseAnalysis> _mStencilValueMask;
    struct DYStateElement<unsigned int, GPUTools::CStateBaseAnalysis> _mStencilWritemask;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mStencilFail;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mStencilPassDepthFail;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mStencilPassDepthPass;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mStencilBackFunc;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mStencilBackRef;
    struct DYStateElement<unsigned int, GPUTools::CStateBaseAnalysis> _mStencilBackValueMask;
    struct DYStateElement<unsigned int, GPUTools::CStateBaseAnalysis> _mStencilBackWritemask;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mStencilBackFail;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mStencilBackPassDepthFail;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mStencilBackPassDepthPass;
    struct DYStateElement<GPUTools::SM::VecN<int, 4>, GPUTools::CStateBaseAnalysis> _mViewport;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mImplementationColorReadFormat;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mImplementationColorReadType;
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis> _mCurrentTextureCoords[32];
    struct DYStateElement<GPUTools::SM::VecN<double, 4>, GPUTools::CStateBaseAnalysis> _mCurrentVertexAttrib[16];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mCurrentVertexAttribType[16];
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mAlphaTest;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mBlend;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mColorLogicOp;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mColorMaterial;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mCullFace;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mDepthTest;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mDither;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mFog;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mLighting;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mLineSmooth;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mMatrixPalette;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mMultiSample;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mNormalize;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mPointSmooth;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mPolygonOffsetFill;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mRescaleNormal;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mSampleAlphaToCoverage;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mSampleAlphaToOne;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mSampleCoverage;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mScissorTest;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mStencilTest;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mPointSprite;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mPrimitiveRestartFixedIndex;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mRasterizerDiscard;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mClipPlane[8];
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mLight[8];
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mTexture2D[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mFogMode;
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mFogDensity;
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mFogStart;
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mFogEnd;
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis> _mFogColor;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mFogHint;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mGenerateMipmapHint;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mLineSmoothHint;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mPerspectiveCorrectionHint;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mShaderDerivativeHint;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mPointSmoothHint;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mLightModelTwoSide;
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis> _mLightModelAmbient;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mPackRowLength;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mPackImageHeight;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mPackSkipPixels;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mPackSkipRows;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mPackSkipImages;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mPackAlignment;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mUnpackRowLength;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mUnpackImageHeight;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mUnpackSkipPixels;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mUnpackSkipRows;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mUnpackSkipImages;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mUnpackAlignment;
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mPointSizeMin;
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mPointSizeMax;
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mPointFadeThresholdSize;
    struct DYStateElement<GPUTools::SM::VecN<float, 3>, GPUTools::CStateBaseAnalysis> _mPointDistanceAttenuation;
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis> _mLightAmbient[8];
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis> _mLightDiffuse[8];
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis> _mLightSpecular[8];
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis> _mLightEmission[8];
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis> _mLightPosition[8];
    struct DYStateElement<GPUTools::SM::VecN<float, 3>, GPUTools::CStateBaseAnalysis> _mLightSpotDirection[8];
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mLightSpotExponent[8];
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mLightSpotCutoff[8];
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mLightConstantAttenuation[8];
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mLightLinearAttenuation[8];
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mLightQuadraticAttenuation[8];
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis> _mClipPlaneValue[8];
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis> _mMaterialAmbient;
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis> _mMaterialDiffuse;
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis> _mMaterialSpecular;
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis> _mMaterialEmission;
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mMaterialShininess;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mTextureEnvMode[32];
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis> _mTextureEnvColor[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mCombineRGB[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mCombineAlpha[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mSrc0RGB[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mSrc1RGB[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mSrc2RGB[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mSrc0Alpha[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mSrc1Alpha[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mSrc2Alpha[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mOperand0RGB[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mOperand1RGB[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mOperand2RGB[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mOperand0Alpha[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mOperand1Alpha[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mOperand2Alpha[32];
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mRGBScale[32];
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mAlphaScale[32];
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mCoordReplace[32];
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mTextureLODBias[32];
    struct DYStateElement<std::__1::vector<DYMtx, std::__1::allocator<DYMtx>>, GPUTools::CStateBaseAnalysis> _mModelviewMatrix;
    struct DYStateElement<std::__1::vector<DYMtx, std::__1::allocator<DYMtx>>, GPUTools::CStateBaseAnalysis> _mProjectionMatrix;
    struct DYStateElement<std::__1::vector<DYMtx, std::__1::allocator<DYMtx>>, GPUTools::CStateBaseAnalysis> _mTextureMatrix[32];
    struct DYStateElement<DYMtx, GPUTools::CStateBaseAnalysis> _mPaletteMatrix[16];
    struct DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis> _mUniformBufferStart[64];
    struct DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis> _mUniformBufferSize[64];
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mTextureBinding2D[32];
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mTextureBindingCubemap[32];
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mTextureBinding2DArray[32];
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mTextureBinding3D[32];
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mArrayBufferBinding;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mCopyReadBufferBinding;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mCopyWriteBufferBinding;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mPixelPackBufferBinding;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mPixelUnpackBufferBinding;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mTransformFeedbackBufferBinding;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mUniformBufferBinding;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mUniformBufferBindingIndexed[64];
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mRenderbufferBinding;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mDrawFramebufferBinding;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mReadFramebufferBinding;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mCurrentProgram;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mProgramPipelineBinding;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mVertexArrayBinding;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mSamplerBinding[32];
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mTransformFeedbackBinding;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mQueryAnySamplesPassedBinding;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mQueryAnySamplesPassedConservativeBinding;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mQueryTransformFeedbackPrimitivesWrittenBinding;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mCurrentEventMarker;
    struct DYStateElement<std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>, GPUTools::CStateBaseAnalysis> _mGroupMarkerStack;
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mFlushLastTimestamp;
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mDrawLastTimestamp;
    struct DYStateElement<GPUTools::SM::GL::StateErrorStatus, GPUTools::CStateBaseAnalysis> _mGLErrorStatus;
    struct ObjectTrackingMap<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>, int> _mVertexArrayObjectMap;
    struct ObjectTrackingMap<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>, int> _mQueryObjectMap;
    struct ObjectTrackingMap<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>, int> _mSyncObjectMap;
    struct ObjectTrackingMap<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>, int> _mTransformFeedbackObjectMap;
    struct ObjectTrackingMap<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>, int> _mContextTextureObjectMap;
    unsigned long long _mSharegroupID;
    struct SharegroupStateMirror<GPUGLSMObjectTypes> *_mSharegroupMirror;
    StateMirrorManager_912556b7 *_mManager;
    unsigned long long _mContextID;
};

struct CoreFunction {
    unsigned int _field1;
    unsigned int _field2;
    unsigned short _field3;
    unsigned short _field4;
    union {
        unsigned long long _field1;
        unsigned long long _field2;
    } _field5;
    struct Argument _field6;
    struct Argument _field7[16];
    unsigned int _field8;
    unsigned int _field9;
    void *_field10;
    void *_field11;
};

struct DYStateElement<DYMtx, GPUTools::CStateBaseAnalysis> {
    CDStruct_461fb6ec mStateVal;
};

struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> {
    struct BindingPoint mStateVal;
};

struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> {
    struct StateBool mStateVal;
};

struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> {
    struct StateEnum mStateVal;
};

struct DYStateElement<GPUTools::SM::GL::StateErrorStatus, GPUTools::CStateBaseAnalysis> {
    struct StateErrorStatus mStateVal;
};

struct DYStateElement<GPUTools::SM::VecN<double, 4>, GPUTools::CStateBaseAnalysis> {
    struct VecN<double, 4> mStateVal;
};

struct DYStateElement<GPUTools::SM::VecN<float, 2>, GPUTools::CStateBaseAnalysis> {
    struct VecN<float, 2> mStateVal;
};

struct DYStateElement<GPUTools::SM::VecN<float, 3>, GPUTools::CStateBaseAnalysis> {
    struct VecN<float, 3> mStateVal;
};

struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis> {
    struct VecN<float, 4> mStateVal;
};

struct DYStateElement<GPUTools::SM::VecN<int, 4>, GPUTools::CStateBaseAnalysis> {
    struct VecN<int, 4> mStateVal;
};

struct DYStateElement<float, GPUTools::CStateBaseAnalysis> {
    float mStateVal;
};

struct DYStateElement<int, GPUTools::CStateBaseAnalysis> {
    int mStateVal;
};

struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> {
    long long mStateVal;
};

struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> {
    basic_string_805fe43b mStateVal;
};

struct DYStateElement<std::__1::vector<DYMtx, std::__1::allocator<DYMtx>>, GPUTools::CStateBaseAnalysis> {
    struct vector<DYMtx, std::__1::allocator<DYMtx>> mStateVal;
};

struct DYStateElement<std::__1::vector<double, std::__1::allocator<double>>, GPUTools::CStateBaseAnalysis> {
    struct vector<double, std::__1::allocator<double>> mStateVal;
};

struct DYStateElement<std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>, GPUTools::CStateBaseAnalysis> {
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> mStateVal;
};

struct DYStateElement<unsigned int, GPUTools::CStateBaseAnalysis> {
    unsigned int mStateVal;
};

struct DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis> {
    unsigned long long mStateVal;
};

struct FramebufferAttachment<GPUGLSMObjectTypes> {
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mFramebufferAttachmentObjectType;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mFramebufferAttachmentObjectName;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mFramebufferAttachmentTextureLevel;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mFramebufferAttachmentTextureLayer;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mFramebufferAttachmentTextureCubeMapFace;
};

struct FramebufferObject<GPUGLSMObjectTypes> {
    int _functionIndex;
    int _objectID;
    int _internalID;
    int mRefCount;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mObjectLabel;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mReadBuffer;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mDrawBuffers[16];
    struct FramebufferAttachment<GPUGLSMObjectTypes> _mAttachments[18];
};

struct Function {
    struct CoreFunction _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long *_field4;
    unsigned short _field5;
    unsigned short _field6;
    int _field7;
    void *_field8;
    unsigned int _field9;
    unsigned int _field10;
    unsigned long long _field11;
    unsigned long long _field12;
    struct Function *_field13;
    void *_field14;
};

struct GPUGLBindPoint {
    unsigned int _field1;
    unsigned int _field2;
};

struct ObjectStateEnum {
    int _field1;
    id _field2;
    int _field3;
    _Bool _field4;
};

struct ObjectTrackingMap<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>, unsigned long long> {
    struct unordered_map<unsigned long long, int, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, int>>> mInternalIDMap;
    struct unordered_map<int, std::__1::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, std::__1::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>>>>> mObjectMap;
    int mNextFreeInternalID;
};

struct ObjectTrackingMap<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>, int> {
    struct unordered_map<int, int, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, int>>> mInternalIDMap;
    struct unordered_map<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>>>>> mObjectMap;
    int mNextFreeInternalID;
};

struct ObjectTrackingMap<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>, int> {
    struct unordered_map<int, int, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, int>>> mInternalIDMap;
    struct unordered_map<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>>>>> mObjectMap;
    int mNextFreeInternalID;
};

struct ObjectTrackingMap<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>, int> {
    struct unordered_map<int, int, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, int>>> mInternalIDMap;
    struct unordered_map<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>>>>> mObjectMap;
    int mNextFreeInternalID;
};

struct ObjectTrackingMap<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>, int> {
    struct unordered_map<int, int, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, int>>> mInternalIDMap;
    struct unordered_map<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>>>>> mObjectMap;
    int mNextFreeInternalID;
};

struct ObjectTrackingMap<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>, int> {
    struct unordered_map<int, int, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, int>>> mInternalIDMap;
    struct unordered_map<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>>>>> mObjectMap;
    int mNextFreeInternalID;
};

struct PassthroughBase {
    struct function<void *(const char *, unsigned long *)> LoadURLData;
};

struct ProgramAttrib<GPUGLSMObjectTypes> {
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _field1;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _field2;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _field3;
};

struct ProgramObject<GPUGLSMObjectTypes> {
    int _functionIndex;
    int _objectID;
    int _internalID;
    int mRefCount;
    struct unordered_map<int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>>> mUniformMap;
    struct unordered_map<int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>>>> mAttribMap;
    struct unordered_map<int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>>>> mUniformBlockMap;
    struct unordered_map<int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>>>> mTransformFeedbackVaryingMap;
    struct unordered_map<std::__1::basic_string<char>, int, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, int>>> _attribLocationBindingMap;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mAttachedFragmentShader;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mAttachedVertexShader;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mLinkedFragmentShader;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mLinkedVertexShader;
    struct DYStateElement<std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>, GPUTools::CStateBaseAnalysis> _mLinkedFragmentShaderData;
    struct DYStateElement<std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>, GPUTools::CStateBaseAnalysis> _mLinkedVertexShaderData;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mLinkedFragmentShaderCount;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mLinkedVertexShaderCount;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mLinkedProgramBinaryFormat;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mLinkedProgramBinary;
    struct DYStateElement<std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>, GPUTools::CStateBaseAnalysis> _mFragmentShaderData;
    struct DYStateElement<std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>, GPUTools::CStateBaseAnalysis> _mVertexShaderData;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mFragmentShaderCount;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mVertexShaderCount;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mFragmentShaderInfoLog;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mVertexShaderInfoLog;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mProgramBinaryFormat;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mProgramBinary;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mProgramSeparable;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mLinkStatus;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mInfoLog;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mObjectLabel;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mDeleteStatus;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mAttachCount;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mHasBeenLinked;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mProgramBinaryRetrievableHint;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mTransformFeedbackBufferMode;
    struct DYStateElement<unsigned int, GPUTools::CStateBaseAnalysis> _mBuiltinsUsed;
};

struct ProgramPipelineObject<GPUGLSMObjectTypes> {
    int _functionIndex;
    int _objectID;
    int _internalID;
    int mRefCount;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mActiveProgram;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mVertexShader;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mGeometryShader;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mFragmentShader;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mTessControlShader;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mTessEvaluationShader;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mValidateStatus;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mInfoLog;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mObjectLabel;
};

struct ProgramUniform<GPUGLSMObjectTypes> {
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mUniformName;
    struct DYStateElement<std::__1::vector<double, std::__1::allocator<double>>, GPUTools::CStateBaseAnalysis> _mUniformValue;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mUniformData;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mUniformDataOffset;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mUniformType;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mUniformCallType;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mUniformScalarCount;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mUniformArraySize;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mUniformArrayElementIndex;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mUniformLocStride;
    struct DYStateElement<unsigned int, GPUTools::CStateBaseAnalysis> _mUniformBlockIndex;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mUniformBlockOffset;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mUniformArrayStride;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mUniformMatrixStride;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mUniformIsRowMajor;
    struct DYStateElement<unsigned int, GPUTools::CStateBaseAnalysis> _mUniformShaderBitmask;
};

struct ProgramUniformBlock<GPUGLSMObjectTypes> {
    struct vector<GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>, std::__1::allocator<GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>> mUniforms;
    struct DYStateElement<unsigned int, GPUTools::CStateBaseAnalysis> _mUniformBlockBinding;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mUniformBlockName;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mUniformBlockDataSize;
    struct DYStateElement<unsigned int, GPUTools::CStateBaseAnalysis> _mUniformBlockShaderBitmask;
};

struct QueryObject<GPUGLSMObjectTypes> {
    int _functionIndex;
    int _objectID;
    int _internalID;
    int mRefCount;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mQueryTarget;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mQueryResult;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mQueryResultAvailable;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mObjectLabel;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mQueryActive;
};

struct RenderbufferObject<GPUGLSMObjectTypes> {
    int _functionIndex;
    int _objectID;
    int _internalID;
    int mRefCount;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mRenderbufferSamples;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mRenderbufferInternalFormat;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mRenderbufferWidth;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mRenderbufferHeight;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mDrawableRetainedBacking;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mDrawableLayerBacking;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mObjectLabel;
    struct DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis> _mDrawablePointer;
};

struct ResourceManager<GPUGLSMObjectTypes>;

struct SamplerObject<GPUGLSMObjectTypes> {
    int _functionIndex;
    int _objectID;
    int _internalID;
    int mRefCount;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mSamplerMinFilter;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mSamplerMagFilter;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mSamplerWrapS;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mSamplerWrapT;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mSamplerWrapR;
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mSamplerMaxAnisotropy;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mSamplerMinLod;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mSamplerMaxLod;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mObjectLabel;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mSamplerCompareMode;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mSamplerCompareFunc;
};

struct ShaderObject<GPUGLSMObjectTypes> {
    int _functionIndex;
    int _objectID;
    int _internalID;
    int mRefCount;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mShaderType;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mDeleteStatus;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mShaderCount;
    struct DYStateElement<std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>, GPUTools::CStateBaseAnalysis> _mShaderData;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mCompiledShaderCount;
    struct DYStateElement<std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>, GPUTools::CStateBaseAnalysis> _mCompiledShaderData;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mCompileStatus;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mInfoLog;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mObjectLabel;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mCurrentSourceIsCompiled;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mAttachCount;
};

struct SharegroupStateMirror<GPUGLSMObjectTypes>;

struct StateBool {
    int _stateEnum;
};

struct StateEnum {
    int _stateEnum;
};

struct StateErrorStatus {
    int _stateEnum;
};

struct StateMirrorManager<GPUGLSMObjectTypes> {
    struct unordered_map<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes>*, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes>*>>> _contextStateMirrorMap;
    struct unordered_map<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes>*, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes>*>>> _sharegroupStateMirrorMap;
    struct ObjectTrackingMap<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>, unsigned long long> _drawableInfoMap;
    struct PassthroughBase _passthrough;
    unsigned long long _surfaceBoundsDrawableID;
    int _deviceOrientation;
    int _lastFunctionIndex;
};

struct StencilSideSetup {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
};

struct SyncObject<GPUGLSMObjectTypes> {
    int _functionIndex;
    int _objectID;
    int _internalID;
    int mRefCount;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mSyncObjectType;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mSyncCondition;
    struct DYStateElement<unsigned int, GPUTools::CStateBaseAnalysis> _mSyncFlags;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mObjectLabel;
};

struct TexEnvChannelSetup {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    float _field8;
};

struct TextureLayer<GPUGLSMObjectTypes> {
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mTextureInternalFormat;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mTextureWidth;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mTextureHeight;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mTexData;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mTexDataFormat;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mTexDataType;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mTextureCompressedImageSize;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mEngineTexDataFormat;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mEngineTexDataType;
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mTexDataOffset;
};

struct TextureObject<GPUGLSMObjectTypes> {
    int _functionIndex;
    int _objectID;
    int _internalID;
    struct objc_wrapper<id> displayAttributes;
    int mRefCount;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mTextureMinFilter;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mTextureMagFilter;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mTextureWrapS;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mTextureWrapT;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mTextureWrapR;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mGenerateMipmap;
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mTextureMaxAnisotropy;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mTextureMaxLevel;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mTextureCompressed;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mTextureTarget;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mMaxLevelSpecified;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mHasGeneratedMipmaps;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mObjectLabel;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mTextureCompareMode;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mTextureCompareFunc;
    struct DYStateElement<GPUTools::SM::VecN<int, 4>, GPUTools::CStateBaseAnalysis> _mTextureCropRect;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mTextureBaseLevel;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mTextureImmutableFormat;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mTextureSwizzleRed;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mTextureSwizzleGreen;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mTextureSwizzleBlue;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mTextureSwizzleAlpha;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mTextureMinLod;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mTextureMaxLod;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mTextureImmutableLevels;
    struct unordered_map<int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>>>> _mTextureLevels;
};

struct TransformFeedbackObject<GPUGLSMObjectTypes> {
    int _functionIndex;
    int _objectID;
    int _internalID;
    int mRefCount;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mTransformFeedbackBufferBindingIndexed[4];
    struct DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis> _mTransformFeedbackBufferStart[4];
    struct DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis> _mTransformFeedbackBufferSize[4];
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mTransformFeedbackPaused;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mTransformFeedbackActive;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mObjectLabel;
};

struct VecN<double, 4> {
    double mData[4];
};

struct VecN<float, 2> {
    float mData[2];
};

struct VecN<float, 3> {
    float mData[3];
};

struct VecN<float, 4> {
    float mData[4];
};

struct VecN<int, 4> {
    int mData[4];
};

struct VertexArrayObject<GPUGLSMObjectTypes> {
    int _functionIndex;
    int _objectID;
    int _internalID;
    int mRefCount;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mColorArraySize;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mColorArrayType;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mColorArrayStride;
    struct DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis> _mColorArrayPointer;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mColorArrayBufferBinding;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mMatrixIndexArraySize;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mMatrixIndexArrayType;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mMatrixIndexArrayStride;
    struct DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis> _mMatrixIndexArrayPointer;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mMatrixIndexArrayBufferBinding;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mNormalArrayType;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mNormalArrayStride;
    struct DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis> _mNormalArrayPointer;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mNormalArrayBufferBinding;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mPointSizeArrayType;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mPointSizeArrayStride;
    struct DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis> _mPointSizeArrayPointer;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mPointSizeArrayBufferBinding;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mVertexArraySize;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mVertexArrayType;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mVertexArrayStride;
    struct DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis> _mVertexArrayPointer;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mVertexArrayBufferBinding;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mWeightArraySize;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mWeightArrayType;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mWeightArrayStride;
    struct DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis> _mWeightArrayPointer;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mWeightArrayBufferBinding;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mTextureCoordArraySize[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mTextureCoordArrayType[32];
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mTextureCoordArrayStride[32];
    struct DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis> _mTextureCoordArrayPointer[32];
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mTextureCoordArrayBufferBinding[32];
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mVertexAttribArraySize[16];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mVertexAttribArrayType[16];
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mVertexAttribArrayNormalized[16];
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mVertexAttribArrayStride[16];
    struct DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis> _mVertexAttribArrayPointer[16];
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mVertexAttribArrayBufferBinding[16];
    struct DYStateElement<unsigned int, GPUTools::CStateBaseAnalysis> _mVertexAttribArrayDivisor[16];
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mVertexAttribArrayInteger[16];
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mElementArrayBufferBinding;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mColorArray;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mMatrixIndexArray;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mNormalArray;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mPointSizeArray;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mVertexArray;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mWeightArray;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mTextureCoordArray[32];
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mVertexAttribArrayEnabled[16];
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mColorArrayDataURL;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mMatrixIndexArrayDataURL;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mNormalArrayDataURL;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mPointSizeArrayDataURL;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mVertexArratDataURL;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mWeightArrayDataURL;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mTextureCoordArrayDataURL[32];
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mVertexAttribArrayDataURL[16];
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mColorArrayDataOffset;
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mMatrixIndexArrayDataOffset;
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mNormalArrayDataOffset;
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mPointSizeArrayDataOffset;
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mVertexArrayDataOffset;
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mWeightArrayDataOffset;
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mTextureCoordArrayDataOffset[32];
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mVertexAttribArrayDataOffset[16];
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mColorArrayVAPointerOffset;
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mMatrixIndexArrayVAPointerOffset;
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mNormalArrayVAPointerOffset;
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mPointSizeArrayVAPointerOffset;
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mVertexArrayVAPointerOffset;
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mWeightArrayVAPointerOffset;
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mTextureCoordArrayVAPointerOffset[32];
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mVertexAttribArrayVAPointerOffset[16];
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mVARangeURL;
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mVARangeOffset;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mObjectLabel;
};

struct __hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>>, void *>;

struct __hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>>, void *>;

struct __hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>, void *>;

struct __hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>>, void *>;

struct __hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>>, void *>;

struct __hash_node<std::__1::__hash_value_type<int, int>, void *>;

struct __hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>>>, void *>;

struct __hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>>>, void *>;

struct __hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>>>, void *>;

struct __hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>>>, void *>;

struct __hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>>>, void *>;

struct __hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>>>, void *>;

struct __hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes>*>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes>*>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned long long, int>, void *>;

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    unsigned long long __cap_;
                    unsigned long long __size_;
                    char *__data_;
                } __l;
                struct __short {
                    union {
                        unsigned char __size_;
                        char __lx;
                    } ;
                    char __data_[23];
                } __s;
                struct __raw {
                    unsigned long long __words[3];
                } __r;
            } ;
        } __first_;
    } __r_;
};

struct function<void *(const char *, unsigned long *)> {
    struct type __buf_;
    struct __base<void *(const char *, unsigned long *)> *__f_;
};

struct objc_wrapper<id> {
    id _object;
};

struct type {
    unsigned char __lx[24];
};

struct unique_ptr<GPUTools::GL::ResourceManager<GPUGLSMObjectTypes>, std::__1::default_delete<GPUTools::GL::ResourceManager<GPUGLSMObjectTypes>>> {
    struct __compressed_pair<GPUTools::GL::ResourceManager<GPUGLSMObjectTypes>*, std::__1::default_delete<GPUTools::GL::ResourceManager<GPUGLSMObjectTypes>>> {
        struct ResourceManager<GPUGLSMObjectTypes> *__first_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<int, int>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes>*>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes>*>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes>*>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes>*>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes>*>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes>*>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes>*>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes>*>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes>*>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes>*>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes>*>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes>*>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes>*>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes>*>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, int>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, int>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, int>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, int>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned long long, int>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, int>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, int>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unordered_map<int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>>>> {
    struct __hash_table<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>>, std::__1::hash<int>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>>, std::__1::equal_to<int>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>>>> {
    struct __hash_table<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>>, std::__1::hash<int>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>>, std::__1::equal_to<int>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>>> {
    struct __hash_table<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>, std::__1::hash<int>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>, std::__1::equal_to<int>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>>>> {
    struct __hash_table<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>>, std::__1::hash<int>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>>, std::__1::equal_to<int>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>>>> {
    struct __hash_table<std::__1::__hash_value_type<int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>>, std::__1::hash<int>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>>, std::__1::equal_to<int>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<int, int, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, int>>> {
    struct __hash_table<std::__1::__hash_value_type<int, int>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, int>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, int>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, int>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<int, int>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, int>, std::__1::hash<int>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, int>, std::__1::equal_to<int>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<int, std::__1::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, std::__1::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>>>>> {
    struct __hash_table<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>>>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>>>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>>>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>>>, std::__1::hash<int>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>>>, std::__1::equal_to<int>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>>>>> {
    struct __hash_table<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>>>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>>>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>>>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>>>, std::__1::hash<int>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>>>, std::__1::equal_to<int>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>>>>> {
    struct __hash_table<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>>>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>>>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>>>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>>>, std::__1::hash<int>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>>>, std::__1::equal_to<int>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>>>>> {
    struct __hash_table<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>>>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>>>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>>>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>>>, std::__1::hash<int>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>>>, std::__1::equal_to<int>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>>>>> {
    struct __hash_table<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>>>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>>>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>>>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>>>, std::__1::hash<int>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>>>, std::__1::equal_to<int>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>>>>> {
    struct __hash_table<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>>>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>>>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>>>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>>>, std::__1::hash<int>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>>>, std::__1::equal_to<int>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<std::__1::basic_string<char>, int, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, int>>> {
    struct __hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, int>, std::__1::hash<std::__1::basic_string<char>>, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, int>, std::__1::equal_to<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, int>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, int>, std::__1::hash<std::__1::basic_string<char>>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, int>, std::__1::equal_to<std::__1::basic_string<char>>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes>*, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes>*>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes>*>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes>*>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes>*>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes>*>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes>*>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes>*>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes>*>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes>*>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes>*>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes>*>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes>*>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes>*>, std::__1::equal_to<unsigned long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes>*, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes>*>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes>*>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes>*>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes>*>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes>*>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes>*>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes>*>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes>*>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes>*>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes>*>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes>*>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes>*>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes>*>, std::__1::equal_to<unsigned long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned long long, int, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, int>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, int>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, int>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, int>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, int>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, int>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, int>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, int>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, int>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, int>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long long, int>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, int>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, int>, std::__1::equal_to<unsigned long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct vector<DYMtx, std::__1::allocator<DYMtx>> {
    CDStruct_183601bc *__begin_;
    CDStruct_183601bc *__end_;
    struct __compressed_pair<DYMtx *, std::__1::allocator<DYMtx>> {
        CDStruct_183601bc *__first_;
    } __end_cap_;
};

struct vector<GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>, std::__1::allocator<GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>> {
    struct ProgramUniform<GPUGLSMObjectTypes> *__begin_;
    struct ProgramUniform<GPUGLSMObjectTypes> *__end_;
    struct __compressed_pair<GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>*, std::__1::allocator<GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>> {
        struct ProgramUniform<GPUGLSMObjectTypes> *__first_;
    } __end_cap_;
};

struct vector<double, std::__1::allocator<double>> {
    double *__begin_;
    double *__end_;
    struct __compressed_pair<double *, std::__1::allocator<double>> {
        double *__first_;
    } __end_cap_;
};

struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> {
    basic_string_805fe43b *__begin_;
    basic_string_805fe43b *__end_;
    struct __compressed_pair<std::__1::basic_string<char>*, std::__1::allocator<std::__1::basic_string<char>>> {
        basic_string_805fe43b *__first_;
    } __end_cap_;
};

#pragma mark Typedef'd Structures

typedef struct {
    unsigned int _field1[4];
} CDStruct_58878026;

typedef struct {
    float m[4][4];
} CDStruct_461fb6ec;

typedef struct CDStruct_183601bc;

// Template types
typedef struct BufferObject<GPUGLSMObjectTypes> {
    int _functionIndex;
    int _objectID;
    int _internalID;
    int mRefCount;
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mBufferSize;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mBufferUsage;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mBufferData;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mBufferTarget;
    struct DYStateElement<unsigned int, GPUTools::CStateBaseAnalysis> _mBufferAccessFlags;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mBufferMapped;
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mBufferMapOffset;
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mBufferMapLength;
    struct DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis> _mBufferMapPointer;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mObjectLabel;
} BufferObject_20ffc69a;

typedef struct ContextStateMirror<GPUGLSMObjectTypes> {
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mOpenGLAPIVersion;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mOpenGLFunctionalityLevel;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mActiveTexture;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mAlphaTestFunc;
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mAlphaTestRef;
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis> _mBlendColor;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mBlendEquationRGB;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mBlendEquationAlpha;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mBlendSrcRGB;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mBlendSrcAlpha;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mBlendDstRGB;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mBlendDstAlpha;
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis> _mClearColor;
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mClearDepth;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mClearStencil;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mClientActiveTexture;
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis> _mCurrentColor;
    struct DYStateElement<GPUTools::SM::VecN<int, 4>, GPUTools::CStateBaseAnalysis> _mColorWritemask;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mCullFaceMode;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mCurrentPaletteMatrix;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mDepthFunc;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mDepthMask;
    struct DYStateElement<GPUTools::SM::VecN<float, 2>, GPUTools::CStateBaseAnalysis> _mDepthRange;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mFrontFace;
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mLineWidth;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mLogicOp;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mMatrixMode;
    struct DYStateElement<GPUTools::SM::VecN<float, 3>, GPUTools::CStateBaseAnalysis> _mCurrentNormal;
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mPointSize;
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mPolygonOffsetFactor;
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mPolygonOffsetUnits;
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mSampleCoverageValue;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mSampleCoverageInvert;
    struct DYStateElement<GPUTools::SM::VecN<int, 4>, GPUTools::CStateBaseAnalysis> _mScissorBox;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mShadeModel;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mStencilFunc;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mStencilRef;
    struct DYStateElement<unsigned int, GPUTools::CStateBaseAnalysis> _mStencilValueMask;
    struct DYStateElement<unsigned int, GPUTools::CStateBaseAnalysis> _mStencilWritemask;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mStencilFail;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mStencilPassDepthFail;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mStencilPassDepthPass;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mStencilBackFunc;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mStencilBackRef;
    struct DYStateElement<unsigned int, GPUTools::CStateBaseAnalysis> _mStencilBackValueMask;
    struct DYStateElement<unsigned int, GPUTools::CStateBaseAnalysis> _mStencilBackWritemask;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mStencilBackFail;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mStencilBackPassDepthFail;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mStencilBackPassDepthPass;
    struct DYStateElement<GPUTools::SM::VecN<int, 4>, GPUTools::CStateBaseAnalysis> _mViewport;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mImplementationColorReadFormat;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mImplementationColorReadType;
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis> _mCurrentTextureCoords[32];
    struct DYStateElement<GPUTools::SM::VecN<double, 4>, GPUTools::CStateBaseAnalysis> _mCurrentVertexAttrib[16];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mCurrentVertexAttribType[16];
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mAlphaTest;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mBlend;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mColorLogicOp;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mColorMaterial;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mCullFace;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mDepthTest;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mDither;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mFog;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mLighting;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mLineSmooth;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mMatrixPalette;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mMultiSample;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mNormalize;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mPointSmooth;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mPolygonOffsetFill;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mRescaleNormal;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mSampleAlphaToCoverage;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mSampleAlphaToOne;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mSampleCoverage;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mScissorTest;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mStencilTest;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mPointSprite;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mPrimitiveRestartFixedIndex;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mRasterizerDiscard;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mClipPlane[8];
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mLight[8];
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mTexture2D[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mFogMode;
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mFogDensity;
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mFogStart;
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mFogEnd;
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis> _mFogColor;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mFogHint;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mGenerateMipmapHint;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mLineSmoothHint;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mPerspectiveCorrectionHint;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mShaderDerivativeHint;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mPointSmoothHint;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mLightModelTwoSide;
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis> _mLightModelAmbient;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mPackRowLength;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mPackImageHeight;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mPackSkipPixels;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mPackSkipRows;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mPackSkipImages;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mPackAlignment;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mUnpackRowLength;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mUnpackImageHeight;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mUnpackSkipPixels;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mUnpackSkipRows;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mUnpackSkipImages;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mUnpackAlignment;
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mPointSizeMin;
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mPointSizeMax;
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mPointFadeThresholdSize;
    struct DYStateElement<GPUTools::SM::VecN<float, 3>, GPUTools::CStateBaseAnalysis> _mPointDistanceAttenuation;
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis> _mLightAmbient[8];
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis> _mLightDiffuse[8];
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis> _mLightSpecular[8];
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis> _mLightEmission[8];
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis> _mLightPosition[8];
    struct DYStateElement<GPUTools::SM::VecN<float, 3>, GPUTools::CStateBaseAnalysis> _mLightSpotDirection[8];
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mLightSpotExponent[8];
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mLightSpotCutoff[8];
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mLightConstantAttenuation[8];
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mLightLinearAttenuation[8];
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mLightQuadraticAttenuation[8];
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis> _mClipPlaneValue[8];
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis> _mMaterialAmbient;
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis> _mMaterialDiffuse;
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis> _mMaterialSpecular;
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis> _mMaterialEmission;
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mMaterialShininess;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mTextureEnvMode[32];
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis> _mTextureEnvColor[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mCombineRGB[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mCombineAlpha[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mSrc0RGB[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mSrc1RGB[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mSrc2RGB[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mSrc0Alpha[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mSrc1Alpha[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mSrc2Alpha[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mOperand0RGB[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mOperand1RGB[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mOperand2RGB[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mOperand0Alpha[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mOperand1Alpha[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mOperand2Alpha[32];
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mRGBScale[32];
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mAlphaScale[32];
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mCoordReplace[32];
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mTextureLODBias[32];
    struct DYStateElement<std::__1::vector<DYMtx, std::__1::allocator<DYMtx>>, GPUTools::CStateBaseAnalysis> _mModelviewMatrix;
    struct DYStateElement<std::__1::vector<DYMtx, std::__1::allocator<DYMtx>>, GPUTools::CStateBaseAnalysis> _mProjectionMatrix;
    struct DYStateElement<std::__1::vector<DYMtx, std::__1::allocator<DYMtx>>, GPUTools::CStateBaseAnalysis> _mTextureMatrix[32];
    struct DYStateElement<DYMtx, GPUTools::CStateBaseAnalysis> _mPaletteMatrix[16];
    struct DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis> _mUniformBufferStart[64];
    struct DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis> _mUniformBufferSize[64];
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mTextureBinding2D[32];
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mTextureBindingCubemap[32];
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mTextureBinding2DArray[32];
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mTextureBinding3D[32];
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mArrayBufferBinding;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mCopyReadBufferBinding;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mCopyWriteBufferBinding;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mPixelPackBufferBinding;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mPixelUnpackBufferBinding;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mTransformFeedbackBufferBinding;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mUniformBufferBinding;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mUniformBufferBindingIndexed[64];
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mRenderbufferBinding;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mDrawFramebufferBinding;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mReadFramebufferBinding;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mCurrentProgram;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mProgramPipelineBinding;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mVertexArrayBinding;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mSamplerBinding[32];
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mTransformFeedbackBinding;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mQueryAnySamplesPassedBinding;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mQueryAnySamplesPassedConservativeBinding;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mQueryTransformFeedbackPrimitivesWrittenBinding;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mCurrentEventMarker;
    struct DYStateElement<std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>, GPUTools::CStateBaseAnalysis> _mGroupMarkerStack;
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mFlushLastTimestamp;
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mDrawLastTimestamp;
    struct DYStateElement<GPUTools::SM::GL::StateErrorStatus, GPUTools::CStateBaseAnalysis> _mGLErrorStatus;
    struct ObjectTrackingMap<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>, int> _mVertexArrayObjectMap;
    struct ObjectTrackingMap<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>, int> _mQueryObjectMap;
    struct ObjectTrackingMap<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>, int> _mSyncObjectMap;
    struct ObjectTrackingMap<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>, int> _mTransformFeedbackObjectMap;
    struct ObjectTrackingMap<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>, int> _mContextTextureObjectMap;
    unsigned long long _mSharegroupID;
    struct SharegroupStateMirror<GPUGLSMObjectTypes> *_mSharegroupMirror;
    StateMirrorManager_912556b7 *_mManager;
    unsigned long long _mContextID;
} ContextStateMirror_e2d92de6;

typedef struct FramebufferObject<GPUGLSMObjectTypes> {
    int _functionIndex;
    int _objectID;
    int _internalID;
    int mRefCount;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mObjectLabel;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mReadBuffer;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mDrawBuffers[16];
    struct FramebufferAttachment<GPUGLSMObjectTypes> _mAttachments[18];
} FramebufferObject_36862a27;

typedef struct ProgramAttrib<GPUGLSMObjectTypes> {
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _field1;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _field2;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _field3;
} ProgramAttrib_445f7eb7;

typedef struct ProgramObject<GPUGLSMObjectTypes> {
    int _functionIndex;
    int _objectID;
    int _internalID;
    int mRefCount;
    struct unordered_map<int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>>> mUniformMap;
    struct unordered_map<int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>>>> mAttribMap;
    struct unordered_map<int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>>>> mUniformBlockMap;
    struct unordered_map<int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>>>> mTransformFeedbackVaryingMap;
    struct unordered_map<std::__1::basic_string<char>, int, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, int>>> _attribLocationBindingMap;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mAttachedFragmentShader;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mAttachedVertexShader;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mLinkedFragmentShader;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mLinkedVertexShader;
    struct DYStateElement<std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>, GPUTools::CStateBaseAnalysis> _mLinkedFragmentShaderData;
    struct DYStateElement<std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>, GPUTools::CStateBaseAnalysis> _mLinkedVertexShaderData;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mLinkedFragmentShaderCount;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mLinkedVertexShaderCount;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mLinkedProgramBinaryFormat;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mLinkedProgramBinary;
    struct DYStateElement<std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>, GPUTools::CStateBaseAnalysis> _mFragmentShaderData;
    struct DYStateElement<std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>, GPUTools::CStateBaseAnalysis> _mVertexShaderData;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mFragmentShaderCount;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mVertexShaderCount;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mFragmentShaderInfoLog;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mVertexShaderInfoLog;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mProgramBinaryFormat;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mProgramBinary;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mProgramSeparable;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mLinkStatus;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mInfoLog;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mObjectLabel;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mDeleteStatus;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mAttachCount;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mHasBeenLinked;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mProgramBinaryRetrievableHint;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mTransformFeedbackBufferMode;
    struct DYStateElement<unsigned int, GPUTools::CStateBaseAnalysis> _mBuiltinsUsed;
} ProgramObject_8ea7d896;

typedef struct ProgramPipelineObject<GPUGLSMObjectTypes> {
    int _functionIndex;
    int _objectID;
    int _internalID;
    int mRefCount;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mActiveProgram;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mVertexShader;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mGeometryShader;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mFragmentShader;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mTessControlShader;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mTessEvaluationShader;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mValidateStatus;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mInfoLog;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mObjectLabel;
} ProgramPipelineObject_da0e83c7;

typedef struct ProgramUniformBlock<GPUGLSMObjectTypes> {
    struct vector<GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>, std::__1::allocator<GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>> mUniforms;
    struct DYStateElement<unsigned int, GPUTools::CStateBaseAnalysis> _mUniformBlockBinding;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mUniformBlockName;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mUniformBlockDataSize;
    struct DYStateElement<unsigned int, GPUTools::CStateBaseAnalysis> _mUniformBlockShaderBitmask;
} ProgramUniformBlock_2e5dc428;

typedef struct QueryObject<GPUGLSMObjectTypes> {
    int _functionIndex;
    int _objectID;
    int _internalID;
    int mRefCount;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mQueryTarget;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mQueryResult;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mQueryResultAvailable;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mObjectLabel;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mQueryActive;
} QueryObject_91271560;

typedef struct RenderbufferObject<GPUGLSMObjectTypes> {
    int _functionIndex;
    int _objectID;
    int _internalID;
    int mRefCount;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mRenderbufferSamples;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mRenderbufferInternalFormat;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mRenderbufferWidth;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mRenderbufferHeight;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mDrawableRetainedBacking;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mDrawableLayerBacking;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mObjectLabel;
    struct DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis> _mDrawablePointer;
} RenderbufferObject_9cc06c11;

typedef struct SamplerObject<GPUGLSMObjectTypes> {
    int _functionIndex;
    int _objectID;
    int _internalID;
    int mRefCount;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mSamplerMinFilter;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mSamplerMagFilter;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mSamplerWrapS;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mSamplerWrapT;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mSamplerWrapR;
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mSamplerMaxAnisotropy;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mSamplerMinLod;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mSamplerMaxLod;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mObjectLabel;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mSamplerCompareMode;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mSamplerCompareFunc;
} SamplerObject_9ed82924;

typedef struct StateMirrorManager<GPUGLSMObjectTypes> {
    struct unordered_map<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes>*, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes>*>>> _contextStateMirrorMap;
    struct unordered_map<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes>*, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes>*>>> _sharegroupStateMirrorMap;
    struct ObjectTrackingMap<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>, unsigned long long> _drawableInfoMap;
    struct PassthroughBase _passthrough;
    unsigned long long _surfaceBoundsDrawableID;
    int _deviceOrientation;
    int _lastFunctionIndex;
} StateMirrorManager_912556b7;

typedef struct TextureObject<GPUGLSMObjectTypes> {
    int _functionIndex;
    int _objectID;
    int _internalID;
    struct objc_wrapper<id> displayAttributes;
    int mRefCount;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mTextureMinFilter;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mTextureMagFilter;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mTextureWrapS;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mTextureWrapT;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mTextureWrapR;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mGenerateMipmap;
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mTextureMaxAnisotropy;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mTextureMaxLevel;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mTextureCompressed;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mTextureTarget;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mMaxLevelSpecified;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mHasGeneratedMipmaps;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mObjectLabel;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mTextureCompareMode;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mTextureCompareFunc;
    struct DYStateElement<GPUTools::SM::VecN<int, 4>, GPUTools::CStateBaseAnalysis> _mTextureCropRect;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mTextureBaseLevel;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mTextureImmutableFormat;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mTextureSwizzleRed;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mTextureSwizzleGreen;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mTextureSwizzleBlue;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mTextureSwizzleAlpha;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mTextureMinLod;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mTextureMaxLod;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mTextureImmutableLevels;
    struct unordered_map<int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>>>> _mTextureLevels;
} TextureObject_d19e20a8;

typedef struct TransformFeedbackObject<GPUGLSMObjectTypes> {
    int _functionIndex;
    int _objectID;
    int _internalID;
    int mRefCount;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mTransformFeedbackBufferBindingIndexed[4];
    struct DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis> _mTransformFeedbackBufferStart[4];
    struct DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis> _mTransformFeedbackBufferSize[4];
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mTransformFeedbackPaused;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mTransformFeedbackActive;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mObjectLabel;
} TransformFeedbackObject_66e309a2;

typedef struct VertexArrayObject<GPUGLSMObjectTypes> {
    int _functionIndex;
    int _objectID;
    int _internalID;
    int mRefCount;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mColorArraySize;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mColorArrayType;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mColorArrayStride;
    struct DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis> _mColorArrayPointer;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mColorArrayBufferBinding;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mMatrixIndexArraySize;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mMatrixIndexArrayType;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mMatrixIndexArrayStride;
    struct DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis> _mMatrixIndexArrayPointer;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mMatrixIndexArrayBufferBinding;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mNormalArrayType;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mNormalArrayStride;
    struct DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis> _mNormalArrayPointer;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mNormalArrayBufferBinding;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mPointSizeArrayType;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mPointSizeArrayStride;
    struct DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis> _mPointSizeArrayPointer;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mPointSizeArrayBufferBinding;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mVertexArraySize;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mVertexArrayType;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mVertexArrayStride;
    struct DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis> _mVertexArrayPointer;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mVertexArrayBufferBinding;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mWeightArraySize;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mWeightArrayType;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mWeightArrayStride;
    struct DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis> _mWeightArrayPointer;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mWeightArrayBufferBinding;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mTextureCoordArraySize[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mTextureCoordArrayType[32];
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mTextureCoordArrayStride[32];
    struct DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis> _mTextureCoordArrayPointer[32];
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mTextureCoordArrayBufferBinding[32];
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mVertexAttribArraySize[16];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mVertexAttribArrayType[16];
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mVertexAttribArrayNormalized[16];
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mVertexAttribArrayStride[16];
    struct DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis> _mVertexAttribArrayPointer[16];
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mVertexAttribArrayBufferBinding[16];
    struct DYStateElement<unsigned int, GPUTools::CStateBaseAnalysis> _mVertexAttribArrayDivisor[16];
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mVertexAttribArrayInteger[16];
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mElementArrayBufferBinding;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mColorArray;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mMatrixIndexArray;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mNormalArray;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mPointSizeArray;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mVertexArray;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mWeightArray;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mTextureCoordArray[32];
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mVertexAttribArrayEnabled[16];
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mColorArrayDataURL;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mMatrixIndexArrayDataURL;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mNormalArrayDataURL;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mPointSizeArrayDataURL;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mVertexArratDataURL;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mWeightArrayDataURL;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mTextureCoordArrayDataURL[32];
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mVertexAttribArrayDataURL[16];
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mColorArrayDataOffset;
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mMatrixIndexArrayDataOffset;
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mNormalArrayDataOffset;
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mPointSizeArrayDataOffset;
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mVertexArrayDataOffset;
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mWeightArrayDataOffset;
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mTextureCoordArrayDataOffset[32];
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mVertexAttribArrayDataOffset[16];
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mColorArrayVAPointerOffset;
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mMatrixIndexArrayVAPointerOffset;
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mNormalArrayVAPointerOffset;
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mPointSizeArrayVAPointerOffset;
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mVertexArrayVAPointerOffset;
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mWeightArrayVAPointerOffset;
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mTextureCoordArrayVAPointerOffset[32];
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mVertexAttribArrayVAPointerOffset[16];
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mVARangeURL;
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mVARangeOffset;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mObjectLabel;
} VertexArrayObject_3583c142;

typedef struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    unsigned long long __cap_;
                    unsigned long long __size_;
                    char *__data_;
                } __l;
                struct __short {
                    union {
                        unsigned char __size_;
                        char __lx;
                    } ;
                    char __data_[23];
                } __s;
                struct __raw {
                    unsigned long long __words[3];
                } __r;
            } ;
        } __first_;
    } __r_;
} basic_string_805fe43b;

#pragma mark -

//
// File: /Applications/Xcode-7GM.app/Contents/PlugIns/GPUDebuggerGLSupport.ideplugin/Contents/MacOS/GPUDebuggerGLSupport
// UUID: 7250DAA5-70F2-304E-BB96-6E1E69A1875A
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 18079.0.0.0.0
//       Minimum Mac OS X version: 10.10.0
//                    SDK version: 10.11.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol DVTInvalidation <NSObject>
- (void)primitiveInvalidate;

@optional
+ (BOOL)supportsInvalidationPrevention;
+ (unsigned long long)assertionBehaviorForKeyValueObservationsAtEndOfEvent;
+ (unsigned long long)assertionBehaviorAfterEndOfEventForSelector:(SEL)arg1;
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly, nonatomic, getter=isValid) BOOL valid;
- (void)invalidate;
@end

@protocol DYBuffer <DYResource, DYCacheableResource>
@property(readonly, nonatomic) NSData *data;
@end

@protocol DYCacheableResource <NSObject>
@property(readonly, nonatomic) unsigned long long cachingCost;
@end

@protocol DYFunctionTracerDelegate <NSObject>

@optional
- (NSString *)generateArrayVariable:(NSString *)arg1 ForArgument:(const struct Argument *)arg2;
- (NSString *)unloadStringForURL:(NSString *)arg1;
- (NSString *)loadStringForURL:(NSString *)arg1 variableName:(NSString *)arg2 bufferType:(NSString *)arg3;
- (NSMutableArray *)constructTraceLinesWithFunction:(const struct Function *)arg1 arguments:(NSArray *)arg2;
- (NSMutableString *)constructTraceLineWithFunction:(const struct Function *)arg1 arguments:(NSArray *)arg2;
- (NSString *)rewriteVariable:(const char *)arg1 receiver:(unsigned long long)arg2;
- (NSString *)rewriteArgument:(const struct Argument *)arg1;
- (NSString *)getCastForArgument:(const struct Argument *)arg1 inFunction:(const struct Function *)arg2;
- (NSString *)createArgument:(const struct Argument *)arg1 forFunction:(const struct Function *)arg2 withValue:(NSString *)arg3;
- (NSString *)rewriteReceiver:(unsigned long long)arg1;
- (NSString *)rewriteURL:(const char *)arg1;
@end

@protocol DYGLExpertDelegate
- (DYCaptureArchive *)modifiedCaptureArchive;
- (DYCaptureArchive *)captureArchive;
- (void)reportFatalError:(NSError *)arg1;
- (void)playWithExperiments:(NSArray *)arg1;
- (void)endPhase:(DYGLExpertPhase *)arg1;
- (void)beginPhase:(DYGLExpertPhase *)arg1;
- (void)endPhaseBlock;
- (void)beginPhaseBlockWithNumPhases:(unsigned int)arg1 andTotalWeight:(unsigned int)arg2;
@end

@protocol DYRenderBuffer <DYResource, DYCacheableResource>
@property(readonly, nonatomic) NSData *data;
@property(readonly, nonatomic) BOOL flipped;
@property(readonly, nonatomic) int numSamples;
@property(readonly, nonatomic) int height;
@property(readonly, nonatomic) int width;
@property(readonly, nonatomic) unsigned int format;
@end

@protocol DYResource <NSObject, NSCoding>
+ (NSString *)keyForResourceWithID:(unsigned long long)arg1 type:(unsigned int)arg2 containerID:(unsigned long long)arg3;
@property(readonly, nonatomic) BOOL isStatic;
@property(readonly, nonatomic) NSMutableDictionary *properties;
@property(readonly, copy, nonatomic) NSString *label;
@property(readonly, nonatomic) unsigned long long objectID;
@property(readonly, nonatomic) unsigned long long containerID;
@property(readonly, nonatomic) unsigned int resourceType;
- (id)initUpdateWithType:(unsigned int)arg1 objectID:(unsigned long long)arg2 containerID:(unsigned long long)arg3 changes:(NSDictionary *)arg4;

@optional
- (id)createFullObjectWithFunctionStream:(DYFunctionStream *)arg1 dataResolver:(NSData * (^)(char *))arg2;
- (NSDictionary *)streamDictAtFunctionIndex:(unsigned int)arg1;
- (NSString *)keyWithSharegroupID:(unsigned long long)arg1;
@end

@protocol DYTexture <DYResource, DYCacheableResource>
@property(readonly, nonatomic) BOOL isFlipped;
@property(readonly, nonatomic) BOOL isCubemap;
@property(readonly, nonatomic) id <DYTextureImage> firstValidTextureImage;
@property(readonly, nonatomic) unsigned int mipmapLevelsUsedMask;
@property(readonly, nonatomic) int maxMipmapLevel;
@property(readonly, nonatomic) int baseMipmapLevel;
- (NSString *)cubemapLabelForFaceIndex:(int)arg1;
- (id <DYTextureImage>)textureImageForMipmapLevel:(int)arg1 layer:(int)arg2;
- (unsigned int)layerCountForMipmapLevel:(unsigned int)arg1;
@end

@protocol GPUDataTableViewDataProvider <NSObject>
- (NSString *)dataTableView:(GPUDataTableView *)arg1 textForCellAtRow:(long long)arg2 column:(long long)arg3 inColumnGroup:(long long)arg4;
- (long long)dataTableView:(GPUDataTableView *)arg1 numberOfColumnsInGroup:(long long)arg2;
- (long long)numberOfColumnGroupsInTableView:(GPUDataTableView *)arg1;
- (long long)numberOfRowsInDataTableView:(GPUDataTableView *)arg1;

@optional
- (NSString *)dataTableView:(GPUDataTableView *)arg1 titleForColumnGroup:(long long)arg2;
- (NSString *)dataTableView:(GPUDataTableView *)arg1 titleForColumn:(long long)arg2 inGroup:(long long)arg3;
@end

@protocol GPUDataTableViewDelegate <NSObject>

@optional
- (double)dataTableView:(GPUDataTableView *)arg1 minimumWidthForColumn:(long long)arg2 inGroup:(long long)arg3;
- (void)dataTableViewWillShowContextMenu:(GPUDataTableView *)arg1;
- (NSColor *)dataTableView:(GPUDataTableView *)arg1 colorForCellAtRow:(long long)arg2 column:(long long)arg3 inGroup:(long long)arg4;
@end

@protocol GPUGLStateMirrorInterface <NSObject>
@property(readonly) BOOL hasStateMirror;
@property(copy) GPUGLStateMirror *stateMirror;
@end

@protocol GPUGLVertexAttributesProtocol <NSObject>
@property(readonly, nonatomic) int attributeCount;
@property(readonly, nonatomic) int maxNumberOfVertices;
@property(readonly, nonatomic) int minNumberOfVertices;
- (NSString *)formattedAttributeData:(int)arg1 forComponent:(int)arg2 forIndex:(int)arg3;
- (unsigned int)attributeFormat:(int)arg1 forComponent:(int)arg2;
- (NSString *)attributeName:(int)arg1 forComponent:(int)arg2;
- (unsigned int)attribDivisor:(int)arg1;
- (NSString *)attributeName:(int)arg1;
- (int)numberOfComponentsForAttribute:(int)arg1;

@optional
@property(readonly, nonatomic) int primitiveCount;
@property(readonly, nonatomic) int elementCount;
@property(readonly, nonatomic) unsigned int elementType;
@property(readonly, nonatomic, getter=isPrimitiveRestartEnabled) BOOL primitiveRestartEnabled;
@property(readonly, nonatomic, getter=isInstanced) BOOL instanced;
@property(readonly, nonatomic, getter=isIndexed) BOOL indexed;
- (unsigned int)elementIndex:(int)arg1;
@end

@protocol GPUInvestigatorReportProvider <DVTInvalidation>
- (void)resetReportEditorStateThatDependsOnTheInvestigatorCase;
- (NSDictionary *)findingStatisticsKeyToResourceTypeMap;
- (GPUTreeNode *)createProgramCentricTreeForGroupedFindings:(NSArray *)arg1 investigatorFinding:(DYInvestigatorFinding *)arg2;
- (NSString *)localizedStringWithKey:(NSString *)arg1 andComment:(NSString *)arg2;
- (void)showResource:(GPUInvestigatorReportResource *)arg1;
- (void)updateDisplayedFindingsWithMCSInfo:(DYInvestigatorFinding *)arg1;
- (void)updateReportWithAdditionalInfo;
- (void)addFindingToReport:(DYInvestigatorFinding *)arg1;
- (void)updateReportWithCaseData:(int)arg1;
- (id)initWithReportEditor:(GPUReportEditor *)arg1;
@end

@protocol GPUProgramPerformanceReportProvider
- (NSMutableArray *)generateProgramPerformanceTree;
- (GPUReportTotalItem *)programPerformanceTotalItem;
- (id)initWithReportEditor:(GPUReportEditor *)arg1;
@end

@protocol GPUResourceManager <NSObject>
- (DYFuture *)loadClientDataBufferFromArchive:(NSString *)arg1 offset:(long long)arg2 functionIndex:(unsigned int)arg3;
- (DYFuture *)updateResource:(id <DYResource>)arg1;
- (DYFuture *)loadWireframeImageWithContainerID:(unsigned long long)arg1 functionIndex:(unsigned int)arg2;
- (DYFuture *)loadResourceWithItem:(GPUTraceResourceItem *)arg1 containerID:(unsigned long long)arg2 stateMirrorObject:(const void *)arg3 functionIndex:(unsigned int)arg4;
- (DYFuture *)loadResourceWithType:(unsigned int)arg1 containerID:(unsigned long long)arg2 stateMirrorObject:(const void *)arg3 functionIndex:(unsigned int)arg4;
- (void)invalidateDeviceCache;
- (id)initWithCaptureStore:(id <DYCaptureStore>)arg1 resourceStreamer:(DYResourceStreamer *)arg2;
@end

@protocol GPUTraceDisplaySet <NSObject>
@property(readonly, nonatomic) NSArray *elementIDs;
@property(readonly, nonatomic) unsigned int numElements;

@optional
@property(retain) id <DYResource> wireframeImage;
@end

@protocol GPUTraceFramebuffer <NSObject>
@property(retain) id <DYResource> wireframeImage;
@property(retain) id <DYResource> stencilResourceObject;
@property(retain) id <DYResource> depthResourceObject;
@property(readonly) NSMutableDictionary *colorResourceObjects;
@property(readonly) id <DYFrameBuffer> frameBufferObject;
- (NSArray *)attachments;
- (id <DYFrameBufferAttachment>)attachmentForAttachmentID:(unsigned long long)arg1;
- (id)initWithFBO:(id <DYFrameBuffer>)arg1;
@end

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (BOOL)respondsToSelector:(SEL)arg1;
- (BOOL)conformsToProtocol:(Protocol *)arg1;
- (BOOL)isMemberOfClass:(Class)arg1;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (BOOL)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

__attribute__((visibility("hidden")))
@interface GPUFramebufferAttachmentInfo : NSObject
{
    unsigned int _objectType;
    unsigned int _textureLevel;
    unsigned int _textureLayer;
    unsigned int _textureCubemapFace;
}

@property(readonly, nonatomic) unsigned int textureCubemapFace; // @synthesize textureCubemapFace=_textureCubemapFace;
@property(readonly, nonatomic) unsigned int textureLayer; // @synthesize textureLayer=_textureLayer;
@property(readonly, nonatomic) unsigned int textureLevel; // @synthesize textureLevel=_textureLevel;
@property(readonly, nonatomic) unsigned int objectType; // @synthesize objectType=_objectType;
- (id)initWithAttachmentEnum:(unsigned int)arg1 stateMirror:(id)arg2;

@end

@interface GPUGLDebuggerController : GPUDebuggerController <DYGLExpertDelegate>
{
    DYGLExpertCase *_expertCase;
    DVTObservingToken *_investigatorReadyObserver;
    DVTObservingToken *_overviewSamplesObserver;
    DVTObservingToken *_inferiorSessionUpdatedResourcesDictObserver;
    DYAnalyzerArchiveVisitor *_analyzerVisitor;
    DYCaptureArchive *_modifiedCaptureArchive;
    NSMutableArray *_overviewSampleArray;
    BOOL _finalizedOverview;
    unsigned int _passCompletedExperiments;
    NSArray *_experimentsArray;
    unsigned int _totalPhaseWeight;
    unsigned int _currentPhaseWeight;
    unsigned int _currentWeightCounter;
    unsigned int _numberOfPhasesInBlock;
    unsigned int _currentPhaseInBlock;
    unsigned int _numberOfExperimentsInBlock;
    unsigned int _currentExperimentInBlock;
    _Bool _sentExperimentBackgroundImage;
    DYGLExpert *_expert;
}

+ (void)initialize;
+ (id)logAspect;
+ (id)assetBundle;
@property(readonly) DYGLExpert *expert; // @synthesize expert=_expert;
- (void).cxx_destruct;
- (id)createProgramPerformanceReportProvider:(id)arg1;
- (id)createInvestigatorReportProvider:(id)arg1;
- (void)resetResourceManagerWithResourceStreamer:(id)arg1;
- (BOOL)isDisassemblerAvailable;
- (id)runShaderProfiler;
- (void)_checkForDeviceDifferences;
- (void)traceSessionEstablishedWithNewArchive:(BOOL)arg1;
- (void)reportFatalError:(id)arg1;
- (void)playWithExperiments:(id)arg1;
- (void)endPhase:(id)arg1;
- (void)beginPhase:(id)arg1;
- (void)endPhaseBlock;
- (void)beginPhaseBlockWithNumPhases:(unsigned int)arg1 andTotalWeight:(unsigned int)arg2;
- (void)_endExperiment;
- (void)_beginExperiment;
- (void)updateProgress;
- (void)_beginAnalysis;
- (void)cancelAnalysis;
- (void)beginAnalysis;
- (id)modifiedCaptureArchive;
- (id)_modifiedOrOriginalArchivePath;
- (id)_modifiedOrOriginalArchivePath:(id)arg1;
- (void)_runInvestigator;
- (void)_runExperiment:(id)arg1;
- (void)_streamArchiveWithPath:(id)arg1 notifyOnQueue:(id)arg2 handler:(CDUnknownBlockType)arg3;
- (void)_experimentPlaybackEnded;
- (void)_clearInvestigatorRunningBackgroundImage;
- (void)_sendInvestigatorRunningBackgroundImage;
- (BOOL)handleCaptureSessionFinalization:(id)arg1;
- (BOOL)analyzeStoredCaptureArchive;
- (void)setupCaptureSessionInfoWithArchive:(id)arg1;
- (void)setupCaptureSession:(id)arg1;
- (void)handleAppSessionTransportMessage:(id)arg1;
- (void)resetDebuggerTraceSession;
- (void)_unarchiveReports;
- (id)unarchiveDictionaryForKey:(id)arg1;
- (void)handleUpdatedDictionary:(id)arg1 forKey:(id)arg2;
- (void)setupGuestAppSession:(id)arg1;
- (id)newGuestAppSessionWithGuestApp:(id)arg1 device:(id)arg2 deferLaunch:(BOOL)arg3;
- (void)createModelFactory;
- (BOOL)_isHigginsEnabled;
- (BOOL)_configureInvestigatorWithCaseConfigData:(id)arg1;
- (void)createReportWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)handleInferiorSessionActiveState;
- (void)primitiveInvalidate;
- (id)init;
- (BOOL)supportsInvestigator;

@end

__attribute__((visibility("hidden")))
@interface GPUGLInvestigatorReportProvider : NSObject <GPUInvestigatorReportProvider>
{
    GPUReportEditor *_reportEditor;
    int _dataAvailable;
    DYIntKeyedDictionary *_mapFindingToViewNeedingMCS;
}

- (void).cxx_destruct;
- (id)findingStatisticsKeyToResourceTypeMap;
- (void)showResource:(id)arg1;
- (void)updateDisplayedFindingsWithMCSInfo:(id)arg1;
- (void)updateReportWithAdditionalInfo;
- (id)createProgramCentricTreeForGroupedFindings:(id)arg1 investigatorFinding:(id)arg2;
- (void)addFindingToReport:(id)arg1;
- (void)addRedFlagsToReport:(id)arg1 withLevel:(int)arg2;
- (void)updateReportWithRedFlagAnalyzerFindings;
- (void)updateReportWithSessionInfo;
- (void)updateReportWithSectionForCaseData:(int)arg1;
- (void)updateReportWithCaseData:(int)arg1;
- (void)resetReportEditorStateThatDependsOnTheInvestigatorCase;
- (id)localizedStringWithKey:(id)arg1 andComment:(id)arg2;
- (void)primitiveInvalidate;
- (id)initWithReportEditor:(id)arg1;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

__attribute__((visibility("hidden")))
@interface GPUGLModelFactory : GPUTraceModelFactory
{
    NSMapTable *_resourceTypeToViewMaptable;
    GPUGLTraceOutline *_outline;
}

+ (id)_keyForResourceItem:(id)arg1;
+ (Class)renderJobClass;
+ (Class)imageResourceSettingBubbleClass;
+ (Class)textureInfoBubbleClass;
+ (Class)depthStencilInfoBubbleClass;
+ (Class)colorInfoBubbleClass;
+ (Class)captureSessionInfoClassWithAPI:(unsigned int)arg1;
@property(retain, nonatomic) GPUGLTraceOutline *outline; // @synthesize outline=_outline;
- (void).cxx_destruct;
- (id)createInfoBubbleForImageResource:(id)arg1 parentView:(id)arg2 owner:(id)arg3 renderingAttributes:(id)arg4;
- (int)openGLAPI;
- (id)resourceItemOfType:(unsigned int)arg1 resourceID:(unsigned int)arg2 forFunctionIndex:(unsigned int)arg3;
- (id)storedRenderingAttributesForResourceItem:(id)arg1;
- (id)resolveCurrentResourceItemWithPreviousItem:(id)arg1 currentMainEditorItem:(id)arg2 topLevelObjects:(id)arg3;
- (void)establishChildrenForProgramItem:(id)arg1;
- (id)programObjectFromProgramItem:(id)arg1 shaderType:(unsigned int)arg2;
- (id)realizeResourcesForResourceItem:(id)arg1;
- (void)generateResourcesForGroup:(id)arg1 apiItem:(id)arg2 boundOnly:(BOOL)arg3;
- (void)createParentResourceGroupsForAPIItem:(id)arg1;
- (id)_createResourceGroup:(id)arg1 parentItem:(id)arg2 boundOnly:(BOOL)arg3;
- (void)primitiveInvalidate;
- (id)apiItemFromDisplayIndex:(unsigned int)arg1;
- (id)locateDisplayableItemToDraw:(id)arg1 isAssociatedWithStateItem:(char *)arg2;
- (id)apiItemForTrueFunctionIndex:(unsigned int)arg1;
- (id)apiItemFromFunctionIndex:(unsigned int)arg1;
- (void)invalidateModel;
- (void)generateModelWithTraceSession:(id)arg1;
- (id)resourceTypeToViewClassMaptable;
- (id)frames;
- (id)domainProviderRootProgramGroup;
- (id)domainProviderRootResourceGroup;
- (id)allAPIItems;
- (id)allMarkerItems;
- (id)allDisplayableItems;
- (id)lastDisplayableItem;
- (id)allPrograms;
- (id)allTraceItems;
- (id)rootProcessItem;
- (id)initWithController:(id)arg1 variablesViewContentProviderClass:(Class)arg2;

@end

__attribute__((visibility("hidden")))
@interface GPUGLProgramPerformanceReportProvider : NSObject <GPUProgramPerformanceReportProvider>
{
    GPUReportEditor *_reportEditor;
}

- (void).cxx_destruct;
- (id)generateProgramPerformanceTree;
- (id)programPerformanceTotalItem;
- (id)initWithReportEditor:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface GPUGLRenderJob : GPURenderJob
{
    unsigned int _attachment;
    GPUFramebufferAttachmentInfo *_attachmentInfo;
}

@property(retain, nonatomic) GPUFramebufferAttachmentInfo *attachmentInfo; // @synthesize attachmentInfo=_attachmentInfo;
@property(readonly, nonatomic) unsigned int attachment; // @synthesize attachment=_attachment;
- (void).cxx_destruct;
- (BOOL)showOverlay;
- (void)setRenderingAttributes:(id)arg1;
- (BOOL)isColor;
- (BOOL)flipped;
- (struct CGSize)imageSize;
- (id)displayElementName;
- (BOOL)isStencilDisplayElement;
- (BOOL)isDepthDisplayElement;
- (id)initWithResource:(id)arg1 modelFactory:(id)arg2 attachment:(unsigned int)arg3 overlayResource:(id)arg4 attachmentInfo:(id)arg5;
- (void)resolveWithTraceResourceItem:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface GPUGLResourceManager : NSObject <GPUResourceManager>
{
    struct unique_ptr<GPUTools::GL::ResourceManager<GPUGLSMObjectTypes>, std::__1::default_delete<GPUTools::GL::ResourceManager<GPUGLSMObjectTypes>>> _spResMgr;
    DYGLCaptureSessionInfo *_captureSessionInfo;
}

+ (unsigned int)realFunctionIndexForIndex:(unsigned int)arg1;
- (id).cxx_construct;
- (void).cxx_destruct;
- (id)loadClientDataBufferFromArchive:(id)arg1 offset:(long long)arg2 functionIndex:(unsigned int)arg3;
- (id)updateResource:(id)arg1;
- (id)loadWireframeImageWithContainerID:(unsigned long long)arg1 functionIndex:(unsigned int)arg2;
- (id)loadResourceWithType:(unsigned int)arg1 containerID:(unsigned long long)arg2 stateMirrorObject:(const void *)arg3 functionIndex:(unsigned int)arg4;
- (id)loadResourceWithItem:(id)arg1 containerID:(unsigned long long)arg2 stateMirrorObject:(const void *)arg3 functionIndex:(unsigned int)arg4;
- (void)invalidateDeviceCache;
- (id)initWithCaptureStore:(id)arg1 resourceStreamer:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GPUGLStateMirror : NSObject <NSCopying>
{
    StateMirrorManager_912556b7 _manager;
    unsigned long long _retrievalContextID;
    int _functionIndex;
    BOOL _isDisassemblerAvailable;
}

@property int functionIndex; // @synthesize functionIndex=_functionIndex;
@property(nonatomic) unsigned long long retrievalContextID; // @synthesize retrievalContextID=_retrievalContextID;
- (id).cxx_construct;
- (void).cxx_destruct;
- (id)nameForVariable:(const char *)arg1;
- (unsigned long long)getSharegroupID;
- (BOOL)isFramebufferAttachment:(id)arg1;
- (BOOL)isResourceItemBoundAt:(struct GPUGLBindPoint)arg1 resourceItem:(id)arg2;
- (struct GPUGLBindPoint)getBindPointForResourceItem:(id)arg1;
- (CDStruct_58878026)getParameterAsGLuint4:(unsigned int)arg1 ofTexture:(int)arg2;
- (id)getParameter:(unsigned int)arg1 ofTexture:(int)arg2;
- (id)labelForImageResource:(id)arg1;
- (BOOL)isAttachmentWritable:(unsigned int)arg1;
- (const struct DrawableInfo<GPUGLSMObjectTypes> *)drawableObjectForDrawableID:(unsigned long long)arg1;
- (unsigned long long)mainDrawableID;
- (int)getDeviceOrientation;
- (BOOL)getMarker:(int)arg1 markerText:(id *)arg2;
- (int)getMarkerStackDepth;
- (void)setupChildrenForBoundResourceGroup:(id)arg1 resourceType:(unsigned int)arg2;
- (void)setupChildrenForAllResourceGroup:(id)arg1 resourceType:(unsigned int)arg2;
- (id)_currentContextInfoFromOutlineItem:(id)arg1;
- (void)_addTransformFeedbackObjectsToResourceGroup:(id)arg1;
- (void)_addBoundTransformFeedbackObjectToResourceGroup:(id)arg1;
- (void)_addTexturesToResourceGroup:(id)arg1;
- (void)_addBoundTexturesToResourceGroup:(id)arg1 maxCombinedImageUnits:(unsigned int)arg2;
- (void)_addVertexArraysToResourceGroup:(id)arg1;
- (void)_addBoundVertexArraysToResourceGroup:(id)arg1;
- (void)_addQueriesToResourceGroup:(id)arg1;
- (void)_addShadersToResourceGroup:(id)arg1;
- (void)_addProgramsToResourceGroup:(id)arg1;
- (void)_addBoundProgramToResourceGroup:(id)arg1;
- (void)_addFramebuffersToResourceGroup:(id)arg1;
- (void)_addBoundFramebuffersToResourceGroup:(id)arg1;
- (void)_addFramebufferAttachmentsToResourceGroup:(id)arg1 fromFramebufferBinding:(unsigned int)arg2 withPrefix:(const char *)arg3;
- (void)_addRenderbuffersToResourceGroup:(id)arg1;
- (void)_addBuffersToResourceGroup:(id)arg1;
- (void)_addBoundBuffersToResourceGroup:(id)arg1;
- (void)_addAllObjectsToParent:(id)arg1 objectType:(int)arg2 targetUsingBlock:(CDUnknownBlockType)arg3;
- (BOOL)_isDefaultObjectInUse:(int)arg1 context:(const ContextStateMirror_e2d92de6 *)arg2;
- (id)_addTextureObject:(const void *)arg1 toParent:(id)arg2 textureObjectID:(unsigned int)arg3 layerIndex:(unsigned int)arg4 attachment:(unsigned int)arg5 context:(const ContextStateMirror_e2d92de6 *)arg6 prefix:(const char *)arg7;
- (id)_addObjectToParent:(id)arg1 objectID:(unsigned int)arg2 objectInternalID:(unsigned int)arg3 target:(unsigned int)arg4 attachment:(int)arg5 indexType:(unsigned int)arg6 context:(const ContextStateMirror_e2d92de6 *)arg7 prefix:(const char *)arg8;
- (id)_createGPUTraceResourceItemWithParent:(id)arg1 object:(const void *)arg2 objectID:(unsigned int)arg3 labelTarget:(unsigned int)arg4 context:(const ContextStateMirror_e2d92de6 *)arg5 prefix:(const char *)arg6 suffix:(const char *)arg7 type:(unsigned int)arg8;
- (id)generateProgramGroup:(unsigned int)arg1 isPipeline:(unsigned int)arg2 withParent:(id)arg3;
- (unsigned int)currentProgramPipelineBinding;
- (unsigned int)currentProgramBinding;
- (void)_createSubItemsForResourceItem:(id)arg1;
- (void)_createShaderResourcesForProgramItem:(id)arg1 forProgram:(const ProgramObject_8ea7d896 *)arg2;
- (id)_labelForObject:(unsigned long long)arg1 context:(const ContextStateMirror_e2d92de6 *)arg2 target:(unsigned int)arg3 prefix:(const char *)arg4 suffix:(const char *)arg5 thumbnail:(BOOL)arg6;
- (const ContextStateMirror_e2d92de6 *)contextStateMirror;
- (const FramebufferObject_36862a27 *)currentDisplayableFrameBuffer;
- (const TextureObject_d19e20a8 *)textureObjectFromInternalID:(int)arg1;
- (const RenderbufferObject_9cc06c11 *)renderBufferObjectFromInternalID:(int)arg1;
- (const BufferObject_20ffc69a *)bufferObjectFromBufferID:(int)arg1;
- (void)setRetrievalContext:(unsigned long long)arg1;
- (unsigned int)processFunction:(const struct Function *)arg1 functionIndex:(int)arg2;
@property(readonly, nonatomic) StateMirrorManager_912556b7 *manager; // @dynamic manager;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithProperties:(id)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface GPUGLTraceDisplayableItem : GPUTraceDisplayableItem <DYFunctionTracerDelegate, GPUGLStateMirrorInterface>
{
    GPUGLStateMirror *_stateMirror;
    BOOL _hasStateMirror;
}

@property(readonly) BOOL hasStateMirror; // @synthesize hasStateMirror=_hasStateMirror;
- (void).cxx_destruct;
- (id)_renderedImage:(id)arg1 showDepth:(BOOL)arg2;
- (id)imageToExportToFile;
- (void)_connectWireframeImageToDisplaySet:(id)arg1;
- (void)_connectElementResourceToDisplaySet:(unsigned long long)arg1 resourceObject:(id)arg2;
- (id)_startLoadingWireframeImage;
- (id)_startLoadingDisplaySetElement:(unsigned long long)arg1;
- (void)_displaySetLoadIsComplete:(id)arg1;
- (id)_startLoadingDisplaySet;
- (id)createRenderJobsForDisplaySet:(BOOL)arg1;
- (id)rewriteReceiver:(unsigned long long)arg1;
- (id)rewriteURL:(const char *)arg1;
- (id)rewriteVariable:(const char *)arg1 receiver:(unsigned long long)arg2;
- (id)generateLabel;
@property(copy) GPUGLStateMirror *stateMirror; // @synthesize stateMirror=_stateMirror;
- (void)primitiveInvalidate;
@property(readonly, copy) NSString *description;
- (id)copyWithZone:(struct _NSZone *)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GPUGLTraceFramebuffer : NSObject <GPUTraceFramebuffer, GPUTraceDisplaySet>
{
    id <DYFrameBuffer> _frameBufferObject;
    NSMutableDictionary *_colorResourceObjects;
    id <DYResource> _depthResourceObject;
    id <DYResource> _stencilResourceObject;
    id <DYResource> _wireframeImage;
}

@property(retain) id <DYResource> wireframeImage; // @synthesize wireframeImage=_wireframeImage;
@property(retain) id <DYResource> stencilResourceObject; // @synthesize stencilResourceObject=_stencilResourceObject;
@property(retain) id <DYResource> depthResourceObject; // @synthesize depthResourceObject=_depthResourceObject;
@property(readonly) NSMutableDictionary *colorResourceObjects; // @synthesize colorResourceObjects=_colorResourceObjects;
@property(readonly) id <DYFrameBuffer> frameBufferObject; // @synthesize frameBufferObject=_frameBufferObject;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSArray *elementIDs; // @dynamic elementIDs;
@property(readonly, nonatomic) unsigned int numElements; // @dynamic numElements;
- (id)attachments;
- (id)attachmentForAttachmentID:(unsigned long long)arg1;
- (id)initWithFBO:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GPUGLTraceOutline : GPUTraceOutline
{
    GPUGLStateMirror *_statemirror;
    unsigned long long _currentContext;
    unsigned long long _currentThread;
    unsigned long long _currentQueue;
    IDELaunchSession *_launchSession;
    NSMutableDictionary *_contextGroupListDict;
    NSMutableArray *_contextGroupList;
    BOOL _bIsMultiContextOrThread;
    BOOL _bIsMultiAPI;
    NSMutableDictionary *_contextNameDict;
}

@property(readonly) NSMutableDictionary *contextNameDict; // @synthesize contextNameDict=_contextNameDict;
- (void).cxx_destruct;
- (id)sharegroupResourceDictionaryForSharegroupID:(id)arg1;
- (id)stateMirrorForTraceItem:(id)arg1;
- (id)_derivedStateMirrorFromStateMirror:(id)arg1 forFunctionIndex:(unsigned int)arg2 fromFunctionIndex:(unsigned int)arg3;
- (void)_addFunction:(struct Function *)arg1;
- (void)_addContext:(struct Function *)arg1;
- (void)visitFunctionStreamFile:(id)arg1;
- (void)performPreCaptureVisitActions;
- (BOOL)_openFilenames:(id)arg1 archive:(id)arg2 filesArray:(id)arg3;
- (void)_addProgramForDisplayableItem:(id)arg1;
- (id)initWithTraceSession:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface GPUGLTraceRenderBufferInfoBubble : GPUTraceResourceInfoBubble
{
    NSTextField *_nameLabel;
    NSTextField *_sizeLabel;
    NSTextField *_formatLabel;
    NSTextField *_numSamplesLabel;
    NSTextField *_numSamplesLabelLabel;
}

- (void).cxx_destruct;
- (void)viewDidInstall;
- (id)initWithResource:(id)arg1 parentView:(id)arg2 owner:(id)arg3 modelFactory:(id)arg4 renderingAttributes:(id)arg5;

@end

__attribute__((visibility("hidden")))
@interface GPUGLTraceResourceSettingsBubble : GPUTraceResourceSettingsBubble
{
}

+ (unsigned int)_internalFormatForResource:(id)arg1;
- (id)initWithResource:(id)arg1 withDisplayAttributes:(id)arg2 withShowDepth:(BOOL)arg3 parentView:(id)arg4 owner:(id)arg5;

@end

__attribute__((visibility("hidden")))
@interface GPUGLTraceStateItem : GPUTraceStateItem <DYFunctionTracerDelegate, GPUGLStateMirrorInterface>
{
    GPUGLStateMirror *_stateMirror;
    BOOL _hasStateMirror;
}

@property(readonly) BOOL hasStateMirror; // @synthesize hasStateMirror=_hasStateMirror;
- (void).cxx_destruct;
- (BOOL)isGroupMarkerCall;
- (id)rewriteReceiver:(unsigned long long)arg1;
- (id)rewriteURL:(const char *)arg1;
- (id)rewriteVariable:(const char *)arg1 receiver:(unsigned long long)arg2;
- (id)generateLabel;
@property(copy) GPUGLStateMirror *stateMirror; // @synthesize stateMirror=_stateMirror;
- (void)primitiveInvalidate;
- (id)copyWithZone:(struct _NSZone *)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GPUGLTraceTextureInfoBubble : GPUTraceResourceInfoBubble
{
    int _api;
    NSDictionary *_dict1;
    NSTextField *_nameLabel;
    NSTextField *_typeLabel;
    NSTextField *_sizeLabel;
    NSTextField *_internalFormatLabel;
    NSTextField *_immutableLabel;
    NSTextField *_minFilterLabel;
    NSTextField *_magFilterLabel;
    NSTextField *_mipFilterLabel;
    NSTextField *_wrapSLabel;
    NSTextField *_wrapTLabel;
    NSTextField *_maxAnisoLabel;
    NSTextField *_maxLevelLabel;
    NSTextField *_cropRectXyLabel;
    NSTextField *_cropRectWhLabel;
    NSTextField *_compareModeLabel;
    NSTextField *_compareFuncLabel;
    NSTextField *_immutableLevelsLabel;
    NSTextField *_baseLevelsLabel;
    NSTextField *_swizzleLabel;
    NSTextField *_minLODLabel;
    NSTextField *_maxLODLabel;
    NSTextField *_wrapRLabel;
}

- (void).cxx_destruct;
- (void)viewDidInstall;
- (id)initWithResource:(id)arg1 parentView:(id)arg2 owner:(id)arg3 modelFactory:(id)arg4 renderingAttributes:(id)arg5;

@end

__attribute__((visibility("hidden")))
@interface GPUGLTransformFeedbackVaryings : NSObject <GPUGLVertexAttributesProtocol>
{
    NSMutableArray *_attributes;
    int _minNumberOfVertices;
    int _maxNumberOfVertices;
}

@property(nonatomic) int maxNumberOfVertices; // @synthesize maxNumberOfVertices=_maxNumberOfVertices;
@property(nonatomic) int minNumberOfVertices; // @synthesize minNumberOfVertices=_minNumberOfVertices;
- (void).cxx_destruct;
- (void)populateObjectFromResource:(id)arg1;
- (id)formattedAttributeData:(int)arg1 forComponent:(int)arg2 forIndex:(int)arg3;
- (unsigned int)attributeFormat:(int)arg1 forComponent:(int)arg2;
- (id)attributeName:(int)arg1 forComponent:(int)arg2;
- (unsigned int)attribDivisor:(int)arg1;
- (id)attributeName:(int)arg1;
- (int)numberOfComponentsForAttribute:(int)arg1;
@property(readonly, nonatomic) int attributeCount;
- (id)initWithResource:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic) int elementCount;
@property(readonly, nonatomic) unsigned int elementType;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic, getter=isIndexed) BOOL indexed;
@property(readonly, nonatomic, getter=isInstanced) BOOL instanced;
@property(readonly, nonatomic) int primitiveCount;
@property(readonly, nonatomic, getter=isPrimitiveRestartEnabled) BOOL primitiveRestartEnabled;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GPUGLVBOEditor : GPUResourceEditor <GPUDataTableViewDataProvider, GPUDataTableViewDelegate>
{
    GPUGLVertexAttributeComponent *_bufferData;
    DYRenderingAttributes *_renderingAttributes;
    double _minColumnWidth;
    BOOL _isPopulated;
    BOOL _isIndexBuffer;
    BOOL _showOffset;
    GPUDataTableView *_vboView;
    NSPopUpButton *_displayFormatPopup;
    NSString *_displayFormat;
    DVTBorderedView *_bottomToolbar;
    NSLayoutConstraint *_toolbarHeightConstraint;
    long long _numberOfColumns;
}

+ (id)assetBundle;
@property BOOL showOffset; // @synthesize showOffset=_showOffset;
@property(nonatomic) long long numberOfColumns; // @synthesize numberOfColumns=_numberOfColumns;
@property(nonatomic) __weak NSLayoutConstraint *toolbarHeightConstraint; // @synthesize toolbarHeightConstraint=_toolbarHeightConstraint;
@property(nonatomic) __weak DVTBorderedView *bottomToolbar; // @synthesize bottomToolbar=_bottomToolbar;
@property(retain, nonatomic) NSString *displayFormat; // @synthesize displayFormat=_displayFormat;
@property(retain, nonatomic) NSPopUpButton *displayFormatPopup; // @synthesize displayFormatPopup=_displayFormatPopup;
@property(retain, nonatomic) GPUDataTableView *vboView; // @synthesize vboView=_vboView;
- (void).cxx_destruct;
- (void)viewWillUninstall;
- (void)beginEditor;
- (void)populate;
- (void)setRepresentedObject:(id)arg1;
- (void)loadView;
- (struct CGPoint)scrollPointForByteOffset:(long long)arg1;
- (long long)documentVisibleRectOffsetInBytes;
- (unsigned int)bytesPerItem;
- (id)widthInColumns;
- (void)setWidthInColumns:(id)arg1;
- (double)dataTableView:(id)arg1 minimumWidthForColumn:(long long)arg2 inGroup:(long long)arg3;
- (id)dataTableView:(id)arg1 textForCellAtRow:(long long)arg2 column:(long long)arg3 inColumnGroup:(long long)arg4;
- (long long)dataTableView:(id)arg1 numberOfColumnsInGroup:(long long)arg2;
- (long long)numberOfColumnGroupsInTableView:(id)arg1;
- (long long)numberOfRowsInDataTableView:(id)arg1;
- (BOOL)isPackedFormat;
- (id)supportedResourceClasses;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GPUGLVariablesViewContentProvider : GPUVariablesViewContentProvider
{
    GPUGLStateMirror *_stateMirror;
    GPUGLStateMirror *_comparisonStateMirror;
    ContextStateMirror_e2d92de6 _defaultCtx;
    struct ProgramUniform<GPUGLSMObjectTypes> _defaultUniform;
    struct TextureLayer<GPUGLSMObjectTypes> _defaultTexLayer;
    TextureObject_d19e20a8 _defaultTex;
    SamplerObject_9ed82924 _defaultSampler;
    TransformFeedbackObject_66e309a2 _defaultTransformFeedback;
    BufferObject_20ffc69a _defaultBuffer;
    RenderbufferObject_9cc06c11 _defaultRenderbuffer;
    struct FramebufferAttachment<GPUGLSMObjectTypes> _defaultAttachment;
    FramebufferObject_36862a27 _defaultFramebuffer;
    struct ShaderObject<GPUGLSMObjectTypes> _defaultShader;
    ProgramObject_8ea7d896 _defaultProgram;
    ProgramUniformBlock_2e5dc428 _defaultUniformBlock;
    ProgramPipelineObject_da0e83c7 _defaultPipeline;
    VertexArrayObject_3583c142 _defaultVAO;
    QueryObject_91271560 _defaultQuery;
    struct SyncObject<GPUGLSMObjectTypes> _defaultSync;
    NSMutableSet *_activeUniformBlocks;
    NSMutableArray *_uniformBuffers;
    BOOL _drawCallFootprintIsAvailable;
    unsigned int _objectID;
    int _objectType;
}

@property(nonatomic) int objectType; // @synthesize objectType=_objectType;
@property(nonatomic) unsigned int objectID; // @synthesize objectID=_objectID;
- (id).cxx_construct;
- (void).cxx_destruct;
- (id)imageToUseInDefaultQuickLookForNode:(id)arg1;
- (id)imageForNode:(id)arg1;
- (BOOL)deleteNode:(id)arg1;
- (void)provideScopeChoices:(id)arg1;
- (void)updateFilteredList;
- (void)_updateFilteredListForContextInfo;
- (void)_updateFilteredListForAllObjects;
- (void)_updateFilteredListForBoundObjects;
- (void)_updateStateNameAndValue:(id)arg1 forBindPoint:(unsigned int)arg2;
- (id)_CreateProgramTransformFeedbackVaryings:(const ProgramObject_8ea7d896 *)arg1;
- (id)_generateFrameStatsContent:(ContextStateMirror_e2d92de6 *)arg1;
- (id)_generateSyncContent:(unsigned int)arg1 usingContext:(ContextStateMirror_e2d92de6 *)arg2;
- (id)_generateQueryContent:(const QueryObject_91271560 *)arg1 queryID:(unsigned int)arg2 usingContext:(ContextStateMirror_e2d92de6 *)arg3;
- (id)_generateVAOContent:(const VertexArrayObject_3583c142 *)arg1 vaoID:(unsigned int)arg2 usingContext:(ContextStateMirror_e2d92de6 *)arg3;
- (id)_generateVAOArrayContent:(const VertexArrayObject_3583c142 *)arg1 vaoID:(unsigned int)arg2 usingContext:(ContextStateMirror_e2d92de6 *)arg3 usingVAOArrayListIndex:(unsigned int)arg4 usingIndex:(unsigned int)arg5;
- (id)_generateProgramPipelineContent:(const ProgramPipelineObject_da0e83c7 *)arg1 pipelineID:(unsigned int)arg2 usingContext:(ContextStateMirror_e2d92de6 *)arg3;
- (id)_generateProgramContent:(const ProgramObject_8ea7d896 *)arg1 programID:(unsigned int)arg2 usingContext:(ContextStateMirror_e2d92de6 *)arg3 withPrefix:(id)arg4;
- (id)_generateProgramPerformanceContent:(unsigned int)arg1 separable:(BOOL)arg2 usingContext:(ContextStateMirror_e2d92de6 *)arg3;
- (id)_generateShaderContent:(unsigned int)arg1 usingContext:(ContextStateMirror_e2d92de6 *)arg2;
- (id)_generateFramebufferContent:(const FramebufferObject_36862a27 *)arg1 framebufferID:(unsigned int)arg2 usingContext:(ContextStateMirror_e2d92de6 *)arg3;
- (id)_generateFramebufferAttachmentContent:(const FramebufferObject_36862a27 *)arg1 usingAttachment:(unsigned int)arg2 usingContext:(ContextStateMirror_e2d92de6 *)arg3;
- (id)_generateRenderbufferContent:(const RenderbufferObject_9cc06c11 *)arg1 renderbufferID:(unsigned int)arg2 usingContext:(ContextStateMirror_e2d92de6 *)arg3;
- (id)_generateBufferContent:(const BufferObject_20ffc69a *)arg1 bufferID:(unsigned int)arg2 usingContext:(ContextStateMirror_e2d92de6 *)arg3;
- (id)_valueStringForBufferEnum:(const struct ObjectStateEnum *)arg1 buffer:(const BufferObject_20ffc69a *)arg2;
- (id)_generateTransformFeedbackContent:(const TransformFeedbackObject_66e309a2 *)arg1 transformFeedbackID:(unsigned int)arg2 usingContext:(ContextStateMirror_e2d92de6 *)arg3;
- (id)_generateSamplerContent:(const SamplerObject_9ed82924 *)arg1 samplerID:(unsigned int)arg2 usingContext:(ContextStateMirror_e2d92de6 *)arg3;
- (id)_generateTextureUnitContent:(unsigned int)arg1 usingContext:(ContextStateMirror_e2d92de6 *)arg2;
- (id)_generateTextureContent:(const TextureObject_d19e20a8 *)arg1 textureID:(unsigned int)arg2 usingContext:(ContextStateMirror_e2d92de6 *)arg3;
- (id)_getAnnotatedTextureName:(unsigned int)arg1 usingContext:(ContextStateMirror_e2d92de6 *)arg2;
- (id)_generateTextureLayerContent:(const TextureObject_d19e20a8 *)arg1 target:(unsigned int)arg2 level:(int)arg3 layer:(int)arg4 createSubgroup:(_Bool)arg5 usingContext:(ContextStateMirror_e2d92de6 *)arg6;
- (id)_generateActiveAttribContent:(const ProgramAttrib_445f7eb7 *)arg1 location:(int)arg2;
- (id)_generateUniformBlockContent:(const ProgramUniformBlock_2e5dc428 *)arg1 index:(unsigned int)arg2 comparisonUniformBlock:(const ProgramUniformBlock_2e5dc428 *)arg3 functionalityLevel:(int)arg4 isProgramUsedInDraw:(_Bool)arg5;
- (void)_EnumerateUniformBlockReferencingShaderBits:(CDUnknownBlockType)arg1;
- (void)_updateFilteredListForAuto;
- (void)_addEnumState:(unsigned int)arg1 toArray:(id)arg2;
- (void)addAnalyzerFindingContent:(id)arg1 toArray:(id)arg2;
- (void)addFrameStatsContent:(ContextStateMirror_e2d92de6 *)arg1 toArray:(id)arg2;
- (void)addTransformFeedbackContent:(unsigned long long)arg1 fromContext:(ContextStateMirror_e2d92de6 *)arg2 toArray:(id)arg3;
- (void)addSamplerContent:(unsigned long long)arg1 fromContext:(ContextStateMirror_e2d92de6 *)arg2 toArray:(id)arg3;
- (void)addSyncContent:(unsigned long long)arg1 fromContext:(ContextStateMirror_e2d92de6 *)arg2 toArray:(id)arg3;
- (void)addQueryContent:(unsigned long long)arg1 fromContext:(ContextStateMirror_e2d92de6 *)arg2 toArray:(id)arg3;
- (void)addShaderContent:(unsigned long long)arg1 fromContext:(ContextStateMirror_e2d92de6 *)arg2 toArray:(id)arg3;
- (void)addProgramPerformanceContent:(unsigned long long)arg1 fromContext:(ContextStateMirror_e2d92de6 *)arg2 toArray:(id)arg3;
- (void)addProgramContent:(unsigned long long)arg1 fromContext:(ContextStateMirror_e2d92de6 *)arg2 toArray:(id)arg3;
- (void)addPipelinePerformanceContent:(unsigned long long)arg1 fromContext:(ContextStateMirror_e2d92de6 *)arg2 toArray:(id)arg3;
- (void)addProgramPipelineContent:(unsigned long long)arg1 fromContext:(ContextStateMirror_e2d92de6 *)arg2 toArray:(id)arg3;
- (void)addFramebufferContent:(unsigned long long)arg1 forBinding:(unsigned int)arg2 fromContext:(ContextStateMirror_e2d92de6 *)arg3 toArray:(id)arg4;
- (void)addFramebufferContent:(unsigned long long)arg1 fromContext:(ContextStateMirror_e2d92de6 *)arg2 toArray:(id)arg3;
- (void)addRenderbufferContent:(unsigned long long)arg1 fromContext:(ContextStateMirror_e2d92de6 *)arg2 toArray:(id)arg3;
- (void)addVAOContent:(unsigned long long)arg1 fromContext:(ContextStateMirror_e2d92de6 *)arg2 toArray:(id)arg3;
- (void)addBufferContent:(unsigned long long)arg1 fromContext:(ContextStateMirror_e2d92de6 *)arg2 toArray:(id)arg3;
- (void)addTextureUnitContent:(unsigned long long)arg1 fromContext:(ContextStateMirror_e2d92de6 *)arg2 toArray:(id)arg3;
- (void)addTextureContent:(unsigned long long)arg1 fromContext:(ContextStateMirror_e2d92de6 *)arg2 toArray:(id)arg3;
- (void)addBufferContent:(unsigned int)arg1 forBinding:(int)arg2 fromContext:(ContextStateMirror_e2d92de6 *)arg3 toArray:(id)arg4;
- (void)addBufferContent:(unsigned int)arg1 forTarget:(int)arg2 fromContext:(ContextStateMirror_e2d92de6 *)arg3 toArray:(id)arg4;
- (void)addObjectContent:(unsigned int)arg1 forType:(int)arg2 fromContext:(ContextStateMirror_e2d92de6 *)arg3 toArray:(id)arg4;
- (void)_updateFilteredListForContext;
- (void)_addExtensions:(id)arg1 forContext:(ContextStateMirror_e2d92de6 *)arg2;
- (void)_addContextState:(int)arg1 toArray:(id)arg2 unitIndex:(int)arg3;
- (void)_addContextState:(int)arg1 toArray:(id)arg2;
- (void)_addStateValue:(id)arg1 withName:(id)arg2 toArray:(id)arg3;
- (id)_convertEnumString:(basic_string_805fe43b *)arg1;
- (_Bool)_getStateElement:(int)arg1 usingIndex:(int)arg2 forStateGroup:(int)arg3 usingContext:(ContextStateMirror_e2d92de6 *)arg4 returningString:(basic_string_805fe43b *)arg5;
- (id)_getCondensedStateGroupSummary:(int)arg1 fromContext:(ContextStateMirror_e2d92de6 *)arg2;
- (id)_getCondensedFixedCurrentVertexSummaryFromContext:(ContextStateMirror_e2d92de6 *)arg1;
- (id)_getCondensedTexEnvSummaryFromContext:(ContextStateMirror_e2d92de6 *)arg1;
- (id)_getCondensedPerUnitTexEnvSummaryFromContext:(ContextStateMirror_e2d92de6 *)arg1 unitIndex:(int)arg2;
- (id)_getCondensedTexEnvChannelSummary:(ContextStateMirror_e2d92de6 *)arg1 channelSetup:(struct TexEnvChannelSetup *)arg2 isRGBA:(_Bool)arg3;
- (id)_getTexEnvSrcString:(unsigned int)arg1 operand:(unsigned int)arg2 isRGBA:(_Bool)arg3;
- (id)_getCondensedPointParamsSummaryFromContext:(ContextStateMirror_e2d92de6 *)arg1;
- (id)_getCondensedMatrixSummaryFromContext:(ContextStateMirror_e2d92de6 *)arg1;
- (id)_classifyMatrix:(CDStruct_461fb6ec *)arg1;
- (id)_getCondensedMaterialSummaryFromContext:(ContextStateMirror_e2d92de6 *)arg1;
- (id)_getCondensedLightModelSummaryFromContext:(ContextStateMirror_e2d92de6 *)arg1;
- (id)_getCondensedPerLightSummaryFromContext:(ContextStateMirror_e2d92de6 *)arg1 index:(int)arg2;
- (id)_getCondensedLightSummaryFromContext:(ContextStateMirror_e2d92de6 *)arg1;
- (id)_getCondensedFogSummaryFromContext:(ContextStateMirror_e2d92de6 *)arg1;
- (id)_getCondensedClipDistanceSummaryFromContext:(ContextStateMirror_e2d92de6 *)arg1;
- (id)_getCondensedPerClipPlaneSummaryFromContext:(ContextStateMirror_e2d92de6 *)arg1 index:(int)arg2;
- (id)_getCondensedClipPlaneSummaryFromContext:(ContextStateMirror_e2d92de6 *)arg1;
- (id)_getCondensedAlphaTestSummaryFromContext:(ContextStateMirror_e2d92de6 *)arg1;
- (id)_getCondensedErrorStatusSummaryFromContext:(ContextStateMirror_e2d92de6 *)arg1;
- (id)_getCondensedScissorSummaryFromContext:(ContextStateMirror_e2d92de6 *)arg1;
- (id)_getCondensedMultisamplingSummaryFromContext:(ContextStateMirror_e2d92de6 *)arg1;
- (id)_getCondensedPolygonOffsetSummaryFromContext:(ContextStateMirror_e2d92de6 *)arg1;
- (id)_getCondensedColorSummaryFromContext:(ContextStateMirror_e2d92de6 *)arg1;
- (id)_getCondensedCullingSummaryFromContext:(ContextStateMirror_e2d92de6 *)arg1;
- (id)_getCondensedDepthSummaryFromContext:(ContextStateMirror_e2d92de6 *)arg1;
- (id)_getCondensedBlendSummaryFromContext:(ContextStateMirror_e2d92de6 *)arg1;
- (id)_getCondensedBlendResultForChannel:(struct BlendChannelSetup *)arg1;
- (id)_getCondensedStencilSummaryFromContext:(ContextStateMirror_e2d92de6 *)arg1;
- (id)_getCondensedStencilSummaryForSide:(struct StencilSideSetup *)arg1;
- (id)_getCondensedActiveSummaryFromContext:(ContextStateMirror_e2d92de6 *)arg1;
- (id)_getCondensedViewportSummaryFromContext:(ContextStateMirror_e2d92de6 *)arg1;
- (id)_cullString:(unsigned int)arg1;
- (id)_blendFactorString:(unsigned int)arg1;
- (id)_actionString:(unsigned int)arg1;
- (id)_funcWordString:(unsigned int)arg1;
- (id)_stencilFuncString:(unsigned int)arg1;
- (id)_funcString:(unsigned int)arg1;
- (id)_stringFromEnum:(int)arg1 showFalseAsNone:(_Bool)arg2;
- (void)setSharedUIStateObj:(id)arg1;
- (void)_updateUniformValueAtIndex:(unsigned long long)arg1 parentValue:(id)arg2 buffer:(id)arg3 offset:(long long)arg4;
- (void)_updateUniformBlockValuesWithBuffer:(id)arg1;
- (void)updateCurrentLocation:(id)arg1;
- (void)primitiveInvalidate;
- (id)initWithIdentifier:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface GPUGLVertexAttribute : NSObject
{
    NSMutableArray *_components;
    int _divisor;
    NSString *_name;
}

@property(readonly, nonatomic) NSMutableArray *components; // @synthesize components=_components;
@property(nonatomic) int divisor; // @synthesize divisor=_divisor;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface GPUGLVertexAttributeComponent : NSObject
{
    unsigned int _fractionDigits;
    BOOL _showAsHex;
    int _dataOffset;
    int _subcomponentOffset;
    unsigned int _format;
    int _stride;
    NSData *_data;
    NSString *_name;
}

+ (id)maxLengthStringForFormat:(unsigned int)arg1;
+ (void)initialize;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
@property(nonatomic) int stride; // @synthesize stride=_stride;
@property(nonatomic) BOOL showAsHex; // @synthesize showAsHex=_showAsHex;
@property(nonatomic) unsigned int format; // @synthesize format=_format;
@property(nonatomic) int subcomponentOffset; // @synthesize subcomponentOffset=_subcomponentOffset;
@property(nonatomic) int dataOffset; // @synthesize dataOffset=_dataOffset;
@property(retain, nonatomic) NSData *data; // @synthesize data=_data;
- (void).cxx_destruct;
- (id)formattedDataAtIndex:(int)arg1 packedComponentIdx:(int)arg2;
- (id)formattedDataAtIndex:(int)arg1;
- (id)dataAtIndex:(int)arg1;
@property(readonly, nonatomic) int bufferLength;
- (id)initWithData:(id)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface GPUGLVertexAttributes : NSObject <GPUGLVertexAttributesProtocol>
{
    NSMutableArray *_attributes;
    GPUGLVertexAttributeComponent *_elementAttribute;
    BOOL _indexed;
    BOOL _instanced;
    BOOL _primitiveRestartEnabled;
    int _minNumberOfVertices;
    int _maxNumberOfVertices;
    unsigned int _elementType;
    int _elementCount;
    int _primitiveCount;
}

@property(nonatomic) int primitiveCount; // @synthesize primitiveCount=_primitiveCount;
@property(nonatomic) int elementCount; // @synthesize elementCount=_elementCount;
@property(nonatomic) unsigned int elementType; // @synthesize elementType=_elementType;
@property(nonatomic, getter=isPrimitiveRestartEnabled) BOOL primitiveRestartEnabled; // @synthesize primitiveRestartEnabled=_primitiveRestartEnabled;
@property(nonatomic, getter=isInstanced) BOOL instanced; // @synthesize instanced=_instanced;
@property(nonatomic, getter=isIndexed) BOOL indexed; // @synthesize indexed=_indexed;
@property(nonatomic) int maxNumberOfVertices; // @synthesize maxNumberOfVertices=_maxNumberOfVertices;
@property(nonatomic) int minNumberOfVertices; // @synthesize minNumberOfVertices=_minNumberOfVertices;
- (void).cxx_destruct;
- (void)populateObjectFromResource:(id)arg1;
- (unsigned int)elementIndex:(int)arg1;
- (id)formattedAttributeData:(int)arg1 forComponent:(int)arg2 forIndex:(int)arg3;
- (unsigned int)attributeFormat:(int)arg1 forComponent:(int)arg2;
- (id)attributeName:(int)arg1 forComponent:(int)arg2;
- (unsigned int)attribDivisor:(int)arg1;
- (id)attributeName:(int)arg1;
- (int)numberOfComponentsForAttribute:(int)arg1;
@property(readonly, nonatomic) int attributeCount;
- (id)initWithResource:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GPUGLVertexAttributesEditor : GPUResourceEditor <GPUDataTableViewDataProvider, GPUDataTableViewDelegate>
{
    NSObject<GPUGLVertexAttributesProtocol> *_attributes;
    DYRenderingAttributes *_renderingAttributes;
    BOOL _isPopulated;
    BOOL _hasVertexArray;
    NSColor *_backgroundColor;
    GPUDataTableView *_tableView;
    long long _vertexCount;
}

@property(nonatomic) long long vertexCount; // @synthesize vertexCount=_vertexCount;
@property(nonatomic) __weak GPUDataTableView *tableView; // @synthesize tableView=_tableView;
- (void).cxx_destruct;
- (id)supportedResourceClasses;
- (void)viewWillUninstall;
- (void)beginEditor;
- (void)populate;
- (void)setRepresentedObject:(id)arg1;
- (void)loadView;
- (double)dataTableView:(id)arg1 minimumWidthForColumn:(long long)arg2 inGroup:(long long)arg3;
- (id)dataTableView:(id)arg1 textForCellAtRow:(long long)arg2 column:(long long)arg3 inColumnGroup:(long long)arg4;
- (BOOL)isElementIndexPrimitiveRestart:(unsigned long long)arg1;
- (id)dataTableView:(id)arg1 titleForColumnGroup:(long long)arg2;
- (id)dataTableView:(id)arg1 titleForColumn:(long long)arg2 inGroup:(long long)arg3;
- (long long)dataTableView:(id)arg1 numberOfColumnsInGroup:(long long)arg2;
- (long long)numberOfColumnGroupsInTableView:(id)arg1;
- (long long)numberOfRowsInDataTableView:(id)arg1;
- (id)processColumnGroup:(long long)arg1 usingBlock:(CDUnknownBlockType)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GPUQueryEditor : GPUResourceEditor
{
    NSTextField *queryResultView;
}

- (void).cxx_destruct;
- (void)beginEditor;
- (id)supportedResourceClasses;

@end

__attribute__((visibility("hidden")))
@interface _GPUDebuggerIOSSupportBundlePrivateClassForFindingBundle : NSObject
{
}

@end

