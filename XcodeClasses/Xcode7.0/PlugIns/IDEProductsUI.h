//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CGPoint {
    double _field1;
    double _field2;
};

struct CGRect {
    struct CGPoint _field1;
    struct CGSize _field2;
};

struct CGSize {
    double _field1;
    double _field2;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

#pragma mark -

//
// File: /Applications/Xcode-7GM.app/Contents/PlugIns/IDEProductsUI.ideplugin/Contents/MacOS/IDEProductsUI
// UUID: D1F7EFB3-6838-39DE-8E80-FE79E91942F9
//
//                           Arch: x86_64
//                 Source version: 8223.0.0.0.0
//       Minimum Mac OS X version: 10.9.0
//                    SDK version: 10.11.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol DVTFindBarFindable

@optional
- (struct _NSRange)selectedRangeForFindBar:(DVTFindBar *)arg1;
- (DVTDocumentLocation *)startingLocationForFindBar:(DVTFindBar *)arg1 findingBackwards:(BOOL)arg2;
- (void)dvtFindBar:(DVTFindBar *)arg1 didUpdateCurrentResult:(DVTFindResult *)arg2;
- (void)dvtFindBar:(DVTFindBar *)arg1 didUpdateResults:(NSArray *)arg2;
@end

@protocol DVTFindBarHostable <DVTFindBarFindable>
- (void)dismissFindBar:(DVTFindBar *)arg1 andRestoreSelection:(BOOL)arg2;

@optional
- (NSView *)viewToShowWrapOrEndOfFileBezelOn:(DVTFindBar *)arg1;
- (BOOL)dvtFindBar:(DVTFindBar *)arg1 validateUserInterfaceItem:(id <NSValidatedUserInterfaceItem>)arg2;
- (void)dvtFindBar:(DVTFindBar *)arg1 didWrap:(BOOL)arg2 reverse:(BOOL)arg3;
@end

@protocol DVTInvalidation <NSObject>
- (void)primitiveInvalidate;

@optional
+ (BOOL)supportsInvalidationPrevention;
+ (unsigned long long)assertionBehaviorForKeyValueObservationsAtEndOfEvent;
+ (unsigned long long)assertionBehaviorAfterEndOfEventForSelector:(SEL)arg1;
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly, nonatomic, getter=isValid) BOOL valid;
- (void)invalidate;
@end

@protocol DVTProductManagerDelegate <NSObject>
- (void)productManager:(DVTProductManager *)arg1 receivedErrors:(NSArray *)arg2 fromSource:(DVTProductSource *)arg3;
@end

@protocol DVTReplacementViewDelegate <NSObject>

@optional
- (void)replacementView:(DVTReplacementView *)arg1 willDisplayInRect:(struct CGRect)arg2;
- (void)replacementView:(DVTReplacementView *)arg1 willCloseViewController:(NSViewController *)arg2;
- (void)replacementView:(DVTReplacementView *)arg1 didInstallViewController:(NSViewController *)arg2;
- (void)replacementView:(DVTReplacementView *)arg1 willInstallViewController:(NSViewController *)arg2;
@end

@protocol DVTScopeBarHost <NSObject>
@property(readonly) NSView *scopeBarsBaseView;

@optional
@property(readonly) NSScrollView *scopeBarsAdjustableScrollView;
@end

@protocol DVTSplitViewDelegate <NSSplitViewDelegate>

@optional
- (NSArray *)splitView:(NSSplitView *)arg1 additionalEffectiveRectsOfDividerAtIndex:(long long)arg2;
- (void)splitViewDidEndLiveResize:(DVTSplitView *)arg1;
- (void)splitViewWillStartLiveResize:(DVTSplitView *)arg1;
- (NSArray *)splitView:(DVTSplitView *)arg1 needsRectanglesForViewsWithState:(NSArray *)arg2 forSize:(struct CGSize)arg3;
- (void)splitViewItemDidExpandOrCollapseBecauseUserDraggedDivider:(DVTSplitViewItem *)arg1;
@end

@protocol DVTTableCellViewTitleEditingDelegate <NSObject>
- (void)titleDidChangeForTableCellView:(DVTTableCellView *)arg1;
- (struct _NSRange)initialSelectionRangeForTableCellView:(DVTTableCellView *)arg1 usingProposedRange:(struct _NSRange)arg2;
@end

@protocol DVTTableViewDelegate <NSTableViewDelegate>

@optional
- (void)tableView:(DVTTableView *)arg1 concludeDragOperation:(id <NSDraggingInfo>)arg2;
- (void)tableView:(DVTTableView *)arg1 draggingDidEnd:(id <NSDraggingInfo>)arg2;
- (void)tableView:(DVTTableView *)arg1 draggingDidUpdate:(id <NSDraggingInfo>)arg2;
- (void)tableView:(DVTTableView *)arg1 draggingDidEnter:(id <NSDraggingInfo>)arg2;
- (unsigned long long)tableView:(DVTTableView *)arg1 draggingSourceOperationMaskForLocal:(BOOL)arg2;
- (BOOL)tableView:(DVTTableView *)arg1 doCommandBySelector:(SEL)arg2;
@end

@protocol IDECommandHandler <NSObject, NSUserInterfaceValidations>
@end

@protocol IDEFilterControlBarTarget <NSObject>
- (NSString *)filterDefinitionIdentifier;

@optional
- (NSView *)view;
- (NSString *)filterButtonAccessibilityDescription;
- (NSString *)filterButtonToolTip;
- (NSMenu *)filterButtonMenu;
@end

@protocol IDEInitialization
+ (BOOL)ide_initializeWithOptions:(int)arg1 error:(id *)arg2;
@end

@protocol IDEKeyDrivenNavigableItemRepresentedObject <NSObject>
@property(readonly) NSString *navigableItem_name;

@optional
@property(readonly) NSString *navigableItem_groupIdentifier;
@property(readonly) DVTDocumentLocation *navigableItem_contentDocumentLocation;
@property(readonly) DVTFileDataType *navigableItem_documentType;
@property(readonly) IDEFileReference *navigableItem_fileReference;
@property(readonly) BOOL navigableItem_isLeaf;
@property(readonly) BOOL navigableItem_isMajorGroup;
@property(readonly) NSString *navigableItem_toolTip;
@property(readonly) NSImage *navigableItem_image;
- (DVTDocumentLocation *)navigableItem_contentDocumentLocationInDocumentURL:(NSURL *)arg1;
@end

@protocol IDEPathCellDelegate <NSPathCellDelegate>

@optional
- (void)pathCell:(IDEPathCell *)arg1 didEndDragForComponentCell:(IDEPathComponentCell *)arg2;
- (BOOL)pathCell:(IDEPathCell *)arg1 beginDragForComponentCell:(IDEPathComponentCell *)arg2;
- (NSString *)pathCell:(IDEPathCell *)arg1 toolTipForPathComponentCell:(IDEPathComponentCell *)arg2 atIndex:(unsigned long long)arg3;
- (NSString *)pathCell:(IDEPathCell *)arg1 accessibilityDescriptionForPathComponentCell:(IDEPathComponentCell *)arg2 atIndex:(unsigned long long)arg3;
- (unsigned long long)pathCell:(IDEPathCell *)arg1 textAlignmentOfTitleForPathComponentCell:(IDEPathComponentCell *)arg2 atIndex:(unsigned long long)arg3;
- (NSString *)pathCell:(IDEPathCell *)arg1 titleForPathComponentCell:(IDEPathComponentCell *)arg2 atIndex:(unsigned long long)arg3;
- (NSString *)pathCellNoSelectionTitle;
- (struct CGPoint)pathCell:(IDEPathCell *)arg1 adjustPopupMenuLocation:(struct CGPoint)arg2;
- (NSMenuItem *)pathCell:(IDEPathCell *)arg1 menuItemForNavigableItem:(IDENavigableItem *)arg2 defaultMenuItem:(NSMenuItem *)arg3;
- (void)pathCell:(IDEPathCell *)arg1 didUpdateMenu:(NSMenu *)arg2;
- (BOOL)pathCell:(IDEPathCell *)arg1 performAlternateReveal:(IDENavigableItem *)arg2 fromFrame:(struct CGRect)arg3;
- (BOOL)pathCell:(IDEPathCell *)arg1 shouldEnableSelection:(IDENavigableItem *)arg2;
- (BOOL)pathCell:(IDEPathCell *)arg1 shouldInitiallyShowMenuSearch:(IDENavigableItem *)arg2;
- (NSArray *)pathCell:(IDEPathCell *)arg1 childItemsForItem:(IDENavigableItem *)arg2;
- (BOOL)pathCell:(IDEPathCell *)arg1 shouldPopUpMenuForPathComponentCell:(IDEPathComponentCell *)arg2 item:(IDENavigableItem *)arg3;
- (BOOL)pathCell:(IDEPathCell *)arg1 shouldSeparateDisplayOfChildItemsForItem:(IDENavigableItem *)arg2;
@end

@protocol IDEProductCategoryUIProvider
+ (NSImage *)placeholderImage;
@end

@protocol IDEProductsInspectable <NSObject>
@property(readonly) NSString *inspectableUtilityExtensionIdentifier;
@end

@protocol IDEProductsInspectableVending <NSObject>
@property(readonly) id <IDEProductsInspectable> currentInspectable;
@property(readonly) BOOL shouldShowNoSelection;
- (void)handleAction:(NSString *)arg1 fromInspectable:(id <IDEProductsInspectable>)arg2;

@optional
@property(readonly, nonatomic) BOOL vendorIsBusy;
@end

@protocol NSControlTextEditingDelegate <NSObject>

@optional
- (NSArray *)control:(NSControl *)arg1 textView:(NSTextView *)arg2 completions:(NSArray *)arg3 forPartialWordRange:(struct _NSRange)arg4 indexOfSelectedItem:(long long *)arg5;
- (BOOL)control:(NSControl *)arg1 textView:(NSTextView *)arg2 doCommandBySelector:(SEL)arg3;
- (BOOL)control:(NSControl *)arg1 isValidObject:(id)arg2;
- (void)control:(NSControl *)arg1 didFailToValidatePartialString:(NSString *)arg2 errorDescription:(NSString *)arg3;
- (BOOL)control:(NSControl *)arg1 didFailToFormatString:(NSString *)arg2 errorDescription:(NSString *)arg3;
- (BOOL)control:(NSControl *)arg1 textShouldEndEditing:(NSText *)arg2;
- (BOOL)control:(NSControl *)arg1 textShouldBeginEditing:(NSText *)arg2;
@end

@protocol NSMenuDelegate <NSObject>

@optional
- (struct CGRect)confinementRectForMenu:(NSMenu *)arg1 onScreen:(NSScreen *)arg2;
- (void)menu:(NSMenu *)arg1 willHighlightItem:(NSMenuItem *)arg2;
- (void)menuDidClose:(NSMenu *)arg1;
- (void)menuWillOpen:(NSMenu *)arg1;
- (BOOL)menuHasKeyEquivalent:(NSMenu *)arg1 forEvent:(NSEvent *)arg2 target:(id *)arg3 action:(SEL *)arg4;
- (BOOL)menu:(NSMenu *)arg1 updateItem:(NSMenuItem *)arg2 atIndex:(long long)arg3 shouldCancel:(BOOL)arg4;
- (long long)numberOfItemsInMenu:(NSMenu *)arg1;
- (void)menuNeedsUpdate:(NSMenu *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (BOOL)respondsToSelector:(SEL)arg1;
- (BOOL)conformsToProtocol:(Protocol *)arg1;
- (BOOL)isMemberOfClass:(Class)arg1;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (BOOL)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSOutlineViewDataSource <NSObject>

@optional
- (NSArray *)outlineView:(NSOutlineView *)arg1 namesOfPromisedFilesDroppedAtDestination:(NSURL *)arg2 forDraggedItems:(NSArray *)arg3;
- (BOOL)outlineView:(NSOutlineView *)arg1 acceptDrop:(id <NSDraggingInfo>)arg2 item:(id)arg3 childIndex:(long long)arg4;
- (unsigned long long)outlineView:(NSOutlineView *)arg1 validateDrop:(id <NSDraggingInfo>)arg2 proposedItem:(id)arg3 proposedChildIndex:(long long)arg4;
- (void)outlineView:(NSOutlineView *)arg1 updateDraggingItemsForDrag:(id <NSDraggingInfo>)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 writeItems:(NSArray *)arg2 toPasteboard:(NSPasteboard *)arg3;
- (void)outlineView:(NSOutlineView *)arg1 draggingSession:(NSDraggingSession *)arg2 endedAtPoint:(struct CGPoint)arg3 operation:(unsigned long long)arg4;
- (void)outlineView:(NSOutlineView *)arg1 draggingSession:(NSDraggingSession *)arg2 willBeginAtPoint:(struct CGPoint)arg3 forItems:(NSArray *)arg4;
- (id <NSPasteboardWriting>)outlineView:(NSOutlineView *)arg1 pasteboardWriterForItem:(id)arg2;
- (void)outlineView:(NSOutlineView *)arg1 sortDescriptorsDidChange:(NSArray *)arg2;
- (id)outlineView:(NSOutlineView *)arg1 persistentObjectForItem:(id)arg2;
- (id)outlineView:(NSOutlineView *)arg1 itemForPersistentObject:(id)arg2;
- (void)outlineView:(NSOutlineView *)arg1 setObjectValue:(id)arg2 forTableColumn:(NSTableColumn *)arg3 byItem:(id)arg4;
- (id)outlineView:(NSOutlineView *)arg1 objectValueForTableColumn:(NSTableColumn *)arg2 byItem:(id)arg3;
- (BOOL)outlineView:(NSOutlineView *)arg1 isItemExpandable:(id)arg2;
- (id)outlineView:(NSOutlineView *)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (long long)outlineView:(NSOutlineView *)arg1 numberOfChildrenOfItem:(id)arg2;
@end

@protocol NSOutlineViewDelegate <NSControlTextEditingDelegate>

@optional
- (void)outlineViewItemDidCollapse:(NSNotification *)arg1;
- (void)outlineViewItemWillCollapse:(NSNotification *)arg1;
- (void)outlineViewItemDidExpand:(NSNotification *)arg1;
- (void)outlineViewItemWillExpand:(NSNotification *)arg1;
- (void)outlineViewSelectionIsChanging:(NSNotification *)arg1;
- (void)outlineViewColumnDidResize:(NSNotification *)arg1;
- (void)outlineViewColumnDidMove:(NSNotification *)arg1;
- (void)outlineViewSelectionDidChange:(NSNotification *)arg1;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldShowOutlineCellForItem:(id)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldReorderColumn:(long long)arg2 toColumn:(long long)arg3;
- (double)outlineView:(NSOutlineView *)arg1 sizeToFitWidthOfColumn:(long long)arg2;
- (void)outlineView:(NSOutlineView *)arg1 willDisplayOutlineCell:(id)arg2 forTableColumn:(NSTableColumn *)arg3 item:(id)arg4;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldCollapseItem:(id)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldExpandItem:(id)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 isGroupItem:(id)arg2;
- (NSCell *)outlineView:(NSOutlineView *)arg1 dataCellForTableColumn:(NSTableColumn *)arg2 item:(id)arg3;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldTrackCell:(NSCell *)arg2 forTableColumn:(NSTableColumn *)arg3 item:(id)arg4;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldShowCellExpansionForTableColumn:(NSTableColumn *)arg2 item:(id)arg3;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldTypeSelectForEvent:(NSEvent *)arg2 withCurrentSearchString:(NSString *)arg3;
- (id)outlineView:(NSOutlineView *)arg1 nextTypeSelectMatchFromItem:(id)arg2 toItem:(id)arg3 forString:(NSString *)arg4;
- (NSString *)outlineView:(NSOutlineView *)arg1 typeSelectStringForTableColumn:(NSTableColumn *)arg2 item:(id)arg3;
- (double)outlineView:(NSOutlineView *)arg1 heightOfRowByItem:(id)arg2;
- (NSString *)outlineView:(NSOutlineView *)arg1 toolTipForCell:(NSCell *)arg2 rect:(struct CGRect *)arg3 tableColumn:(NSTableColumn *)arg4 item:(id)arg5 mouseLocation:(struct CGPoint)arg6;
- (void)outlineView:(NSOutlineView *)arg1 didDragTableColumn:(NSTableColumn *)arg2;
- (void)outlineView:(NSOutlineView *)arg1 didClickTableColumn:(NSTableColumn *)arg2;
- (void)outlineView:(NSOutlineView *)arg1 mouseDownInHeaderOfTableColumn:(NSTableColumn *)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldSelectTableColumn:(NSTableColumn *)arg2;
- (NSIndexSet *)outlineView:(NSOutlineView *)arg1 selectionIndexesForProposedSelection:(NSIndexSet *)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldSelectItem:(id)arg2;
- (BOOL)selectionShouldChangeInOutlineView:(NSOutlineView *)arg1;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldEditTableColumn:(NSTableColumn *)arg2 item:(id)arg3;
- (void)outlineView:(NSOutlineView *)arg1 willDisplayCell:(id)arg2 forTableColumn:(NSTableColumn *)arg3 item:(id)arg4;
- (void)outlineView:(NSOutlineView *)arg1 didRemoveRowView:(NSTableRowView *)arg2 forRow:(long long)arg3;
- (void)outlineView:(NSOutlineView *)arg1 didAddRowView:(NSTableRowView *)arg2 forRow:(long long)arg3;
- (NSTableRowView *)outlineView:(NSOutlineView *)arg1 rowViewForItem:(id)arg2;
- (NSView *)outlineView:(NSOutlineView *)arg1 viewForTableColumn:(NSTableColumn *)arg2 item:(id)arg3;
@end

@protocol NSPathCellDelegate <NSObject>

@optional
- (void)pathCell:(NSPathCell *)arg1 willPopUpMenu:(NSMenu *)arg2;
- (void)pathCell:(NSPathCell *)arg1 willDisplayOpenPanel:(NSOpenPanel *)arg2;
@end

@protocol NSPathControlDelegate <NSObject>

@optional
- (void)pathControl:(NSPathControl *)arg1 willPopUpMenu:(NSMenu *)arg2;
- (void)pathControl:(NSPathControl *)arg1 willDisplayOpenPanel:(NSOpenPanel *)arg2;
- (BOOL)pathControl:(NSPathControl *)arg1 acceptDrop:(id <NSDraggingInfo>)arg2;
- (unsigned long long)pathControl:(NSPathControl *)arg1 validateDrop:(id <NSDraggingInfo>)arg2;
- (BOOL)pathControl:(NSPathControl *)arg1 shouldDragPathComponentCell:(NSPathComponentCell *)arg2 withPasteboard:(NSPasteboard *)arg3;
- (BOOL)pathControl:(NSPathControl *)arg1 shouldDragItem:(NSPathControlItem *)arg2 withPasteboard:(NSPasteboard *)arg3;
@end

@protocol NSSplitViewDelegate <NSObject>

@optional
- (void)splitViewDidResizeSubviews:(NSNotification *)arg1;
- (void)splitViewWillResizeSubviews:(NSNotification *)arg1;
- (struct CGRect)splitView:(NSSplitView *)arg1 additionalEffectiveRectOfDividerAtIndex:(long long)arg2;
- (struct CGRect)splitView:(NSSplitView *)arg1 effectiveRect:(struct CGRect)arg2 forDrawnRect:(struct CGRect)arg3 ofDividerAtIndex:(long long)arg4;
- (BOOL)splitView:(NSSplitView *)arg1 shouldHideDividerAtIndex:(long long)arg2;
- (BOOL)splitView:(NSSplitView *)arg1 shouldAdjustSizeOfSubview:(NSView *)arg2;
- (void)splitView:(NSSplitView *)arg1 resizeSubviewsWithOldSize:(struct CGSize)arg2;
- (double)splitView:(NSSplitView *)arg1 constrainSplitPosition:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(NSSplitView *)arg1 constrainMaxCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(NSSplitView *)arg1 constrainMinCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (BOOL)splitView:(NSSplitView *)arg1 shouldCollapseSubview:(NSView *)arg2 forDoubleClickOnDividerAtIndex:(long long)arg3;
- (BOOL)splitView:(NSSplitView *)arg1 canCollapseSubview:(NSView *)arg2;
@end

@protocol NSTableViewDataSource <NSObject>

@optional
- (NSArray *)tableView:(NSTableView *)arg1 namesOfPromisedFilesDroppedAtDestination:(NSURL *)arg2 forDraggedRowsWithIndexes:(NSIndexSet *)arg3;
- (BOOL)tableView:(NSTableView *)arg1 acceptDrop:(id <NSDraggingInfo>)arg2 row:(long long)arg3 dropOperation:(unsigned long long)arg4;
- (unsigned long long)tableView:(NSTableView *)arg1 validateDrop:(id <NSDraggingInfo>)arg2 proposedRow:(long long)arg3 proposedDropOperation:(unsigned long long)arg4;
- (BOOL)tableView:(NSTableView *)arg1 writeRowsWithIndexes:(NSIndexSet *)arg2 toPasteboard:(NSPasteboard *)arg3;
- (void)tableView:(NSTableView *)arg1 updateDraggingItemsForDrag:(id <NSDraggingInfo>)arg2;
- (void)tableView:(NSTableView *)arg1 draggingSession:(NSDraggingSession *)arg2 endedAtPoint:(struct CGPoint)arg3 operation:(unsigned long long)arg4;
- (void)tableView:(NSTableView *)arg1 draggingSession:(NSDraggingSession *)arg2 willBeginAtPoint:(struct CGPoint)arg3 forRowIndexes:(NSIndexSet *)arg4;
- (id <NSPasteboardWriting>)tableView:(NSTableView *)arg1 pasteboardWriterForRow:(long long)arg2;
- (void)tableView:(NSTableView *)arg1 sortDescriptorsDidChange:(NSArray *)arg2;
- (void)tableView:(NSTableView *)arg1 setObjectValue:(id)arg2 forTableColumn:(NSTableColumn *)arg3 row:(long long)arg4;
- (id)tableView:(NSTableView *)arg1 objectValueForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(NSTableView *)arg1;
@end

@protocol NSTableViewDelegate <NSControlTextEditingDelegate>

@optional
- (void)tableViewSelectionIsChanging:(NSNotification *)arg1;
- (void)tableViewColumnDidResize:(NSNotification *)arg1;
- (void)tableViewColumnDidMove:(NSNotification *)arg1;
- (void)tableViewSelectionDidChange:(NSNotification *)arg1;
- (NSArray *)tableView:(NSTableView *)arg1 rowActionsForRow:(long long)arg2 edge:(long long)arg3;
- (BOOL)tableView:(NSTableView *)arg1 shouldReorderColumn:(long long)arg2 toColumn:(long long)arg3;
- (double)tableView:(NSTableView *)arg1 sizeToFitWidthOfColumn:(long long)arg2;
- (BOOL)tableView:(NSTableView *)arg1 isGroupRow:(long long)arg2;
- (BOOL)tableView:(NSTableView *)arg1 shouldTypeSelectForEvent:(NSEvent *)arg2 withCurrentSearchString:(NSString *)arg3;
- (long long)tableView:(NSTableView *)arg1 nextTypeSelectMatchFromRow:(long long)arg2 toRow:(long long)arg3 forString:(NSString *)arg4;
- (NSString *)tableView:(NSTableView *)arg1 typeSelectStringForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (double)tableView:(NSTableView *)arg1 heightOfRow:(long long)arg2;
- (void)tableView:(NSTableView *)arg1 didDragTableColumn:(NSTableColumn *)arg2;
- (void)tableView:(NSTableView *)arg1 didClickTableColumn:(NSTableColumn *)arg2;
- (void)tableView:(NSTableView *)arg1 mouseDownInHeaderOfTableColumn:(NSTableColumn *)arg2;
- (BOOL)tableView:(NSTableView *)arg1 shouldSelectTableColumn:(NSTableColumn *)arg2;
- (NSIndexSet *)tableView:(NSTableView *)arg1 selectionIndexesForProposedSelection:(NSIndexSet *)arg2;
- (BOOL)tableView:(NSTableView *)arg1 shouldSelectRow:(long long)arg2;
- (BOOL)selectionShouldChangeInTableView:(NSTableView *)arg1;
- (NSCell *)tableView:(NSTableView *)arg1 dataCellForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (BOOL)tableView:(NSTableView *)arg1 shouldTrackCell:(NSCell *)arg2 forTableColumn:(NSTableColumn *)arg3 row:(long long)arg4;
- (BOOL)tableView:(NSTableView *)arg1 shouldShowCellExpansionForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (NSString *)tableView:(NSTableView *)arg1 toolTipForCell:(NSCell *)arg2 rect:(struct CGRect *)arg3 tableColumn:(NSTableColumn *)arg4 row:(long long)arg5 mouseLocation:(struct CGPoint)arg6;
- (BOOL)tableView:(NSTableView *)arg1 shouldEditTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (void)tableView:(NSTableView *)arg1 willDisplayCell:(id)arg2 forTableColumn:(NSTableColumn *)arg3 row:(long long)arg4;
- (void)tableView:(NSTableView *)arg1 didRemoveRowView:(NSTableRowView *)arg2 forRow:(long long)arg3;
- (void)tableView:(NSTableView *)arg1 didAddRowView:(NSTableRowView *)arg2 forRow:(long long)arg3;
- (NSTableRowView *)tableView:(NSTableView *)arg1 rowViewForRow:(long long)arg2;
- (NSView *)tableView:(NSTableView *)arg1 viewForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
@end

@protocol NSToolbarDelegate <NSObject>

@optional
- (void)toolbarDidRemoveItem:(NSNotification *)arg1;
- (void)toolbarWillAddItem:(NSNotification *)arg1;
- (NSArray *)toolbarSelectableItemIdentifiers:(NSToolbar *)arg1;
- (NSArray *)toolbarAllowedItemIdentifiers:(NSToolbar *)arg1;
- (NSArray *)toolbarDefaultItemIdentifiers:(NSToolbar *)arg1;
- (NSToolbarItem *)toolbar:(NSToolbar *)arg1 itemForItemIdentifier:(NSString *)arg2 willBeInsertedIntoToolbar:(BOOL)arg3;
@end

@protocol NSUserInterfaceValidations
- (BOOL)validateUserInterfaceItem:(id <NSValidatedUserInterfaceItem>)arg1;
@end

@protocol __ARCLiteIndexedSubscripting__
- (void)setObject:(id)arg1 atIndexedSubscript:(unsigned long long)arg2;
- (id)objectAtIndexedSubscript:(unsigned long long)arg1;
@end

@protocol __ARCLiteKeyedSubscripting__
- (void)setObject:(id)arg1 forKeyedSubscript:(id)arg2;
- (id)objectForKeyedSubscript:(id)arg1;
@end

@interface DVTCrashChartScaffoldView : NSView
{
    NSColor *_debugColor;
}

@property(copy) NSColor *debugColor; // @synthesize debugColor=_debugColor;
- (void).cxx_destruct;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface DVTCrashChartBarChartView : DVTCrashChartScaffoldView
{
    NSArray *_distributionData;
}

@property(copy, nonatomic) NSArray *distributionData; // @synthesize distributionData=_distributionData;
- (void).cxx_destruct;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface DVTCrashChartCircleCountView : DVTCrashChartScaffoldView
{
    NSString *_count;
}

@property(copy, nonatomic) NSString *count; // @synthesize count=_count;
- (void).cxx_destruct;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface DVTCrashChartDistributionTable : DVTCrashChartScaffoldView
{
    NSArray *_dataSet;
}

@property(copy, nonatomic) NSArray *dataSet; // @synthesize dataSet=_dataSet;
- (void).cxx_destruct;
- (BOOL)isFlipped;
- (void)drawRect:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface DVTCrashChartOccurrenceCircleView : DVTCrashChartScaffoldView
{
    BOOL _needsLayerUpdate;
    NSArray *_dataSet;
}

@property(copy, nonatomic) NSArray *dataSet; // @synthesize dataSet=_dataSet;
- (void).cxx_destruct;
- (void)updateLayer;
- (BOOL)wantsUpdateLayer;
- (void)viewDidChangeBackingProperties;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface DVTCrashChartSwitcherView : DVTCrashChartScaffoldView
{
    CDUnknownBlockType _switcherCallback;
    NSPopUpButton *_switcher;
}

@property(retain, nonatomic) NSPopUpButton *switcher; // @synthesize switcher=_switcher;
@property(copy, nonatomic) CDUnknownBlockType switcherCallback; // @synthesize switcherCallback=_switcherCallback;
- (void).cxx_destruct;
- (struct CGSize)intrinsicContentSize;
- (void)switchView:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface DVTCrashChartTimestampView : DVTCrashChartScaffoldView
{
    NSTextField *_textField;
    BOOL _setupDone;
}

- (void).cxx_destruct;
- (void)updateLayer;
- (void)viewDidChangeBackingProperties;
- (BOOL)wantsUpdateLayer;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface DVTCrashChartTotalDividerLine : DVTCrashChartScaffoldView
{
}

- (void)drawRect:(struct CGRect)arg1;

@end

@interface DVTCrashChartView : NSView
{
    BOOL _alreadySetUp;
    DVTCrashPoint *_crashPoint;
    NSArray *_osDataSet;
    NSArray *_deviceDataSet;
    DVTCrashChartOccurrenceCircleView *_occurrenceCircle;
    DVTCrashChartBarChartView *_barChart;
    DVTCrashChartDistributionTable *_distributionTable;
    DVTCrashChartTimestampView *_timeStamp;
    DVTCrashChartSwitcherView *_deviceTypePicker;
    DVTCrashChartCircleCountView *_circleCount;
    DVTCrashChartScaffoldView *_totalLabelAndDividerLine;
    NSString *_totalCount;
    NSArray *_distributionData;
    unsigned long long _totalDeviceCrashCount;
    unsigned long long _totalOSCrashCount;
}

+ (id)purpleColor;
+ (id)magentaColor;
+ (id)greenBlueColor;
+ (id)greenColor;
+ (id)redColor;
+ (id)yellowColor;
+ (id)_barDateInputFormatter;
+ (id)_barDateFormatter;
+ (void)initialize;
@property(nonatomic) unsigned long long totalOSCrashCount; // @synthesize totalOSCrashCount=_totalOSCrashCount;
@property(nonatomic) unsigned long long totalDeviceCrashCount; // @synthesize totalDeviceCrashCount=_totalDeviceCrashCount;
@property(copy, nonatomic) NSArray *distributionData; // @synthesize distributionData=_distributionData;
@property(copy, nonatomic) NSString *totalCount; // @synthesize totalCount=_totalCount;
@property(retain) DVTCrashChartScaffoldView *totalLabelAndDividerLine; // @synthesize totalLabelAndDividerLine=_totalLabelAndDividerLine;
@property(retain) DVTCrashChartCircleCountView *circleCount; // @synthesize circleCount=_circleCount;
@property(retain) DVTCrashChartSwitcherView *deviceTypePicker; // @synthesize deviceTypePicker=_deviceTypePicker;
@property(retain) DVTCrashChartTimestampView *timeStamp; // @synthesize timeStamp=_timeStamp;
@property(retain) DVTCrashChartDistributionTable *distributionTable; // @synthesize distributionTable=_distributionTable;
@property(retain) DVTCrashChartBarChartView *barChart; // @synthesize barChart=_barChart;
@property(retain) DVTCrashChartOccurrenceCircleView *occurrenceCircle; // @synthesize occurrenceCircle=_occurrenceCircle;
@property(copy, nonatomic) NSArray *deviceDataSet; // @synthesize deviceDataSet=_deviceDataSet;
@property(copy, nonatomic) NSArray *osDataSet; // @synthesize osDataSet=_osDataSet;
@property(retain, nonatomic) DVTCrashPoint *crashPoint; // @synthesize crashPoint=_crashPoint;
- (void).cxx_destruct;
- (id)timeSeriesColors;
- (void)drawRect:(struct CGRect)arg1;
- (BOOL)isFlipped;
- (void)_commonInit;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface DVTCrashChartView_ViewData : NSObject
{
    NSString *_label;
    NSNumber *_rawValue;
    NSString *_displayValue;
    double _relativeValueToDataSeries;
    NSColor *_color;
}

@property(copy, nonatomic) NSColor *color; // @synthesize color=_color;
@property(nonatomic) double relativeValueToDataSeries; // @synthesize relativeValueToDataSeries=_relativeValueToDataSeries;
@property(copy, nonatomic) NSString *displayValue; // @synthesize displayValue=_displayValue;
@property(copy, nonatomic) NSNumber *rawValue; // @synthesize rawValue=_rawValue;
@property(copy, nonatomic) NSString *label; // @synthesize label=_label;
- (void).cxx_destruct;
- (id)initWithLabel:(id)arg1 rawValue:(id)arg2 color:(id)arg3;

@end

@interface DVTCrashLog (DebuggerIntegration)
- (id)ideCrashLogWithCrashPoint:(id)arg1 usingContext:(id)arg2;
@end

@interface DVTCrashLog (ProductsUIAdditions)
- (id)allThreadsIncludingLastExceptionBacktrace;
- (id)interestingThreads;
@end

@interface DVTCrashLogBacktrace (DebuggerIntegration)
- (id)ideThreadWithCrashLog:(id)arg1 threadId:(id)arg2 usingContext:(id)arg3;
@end

@interface DVTCrashLogBacktraceTableCellView : NSTableCellView
{
    BOOL _showJumpButton;
    NSImageView *_frameIconImageView;
    NSTextField *_frameNumberField;
    NSTextField *_moduleNameField;
    NSTextField *_frameField;
    NSButton *_jumpButton;
    DVTCrashLogStackFrame *_stackFrame;
}

@property(retain) DVTCrashLogStackFrame *stackFrame; // @synthesize stackFrame=_stackFrame;
@property BOOL showJumpButton; // @synthesize showJumpButton=_showJumpButton;
@property(retain) NSButton *jumpButton; // @synthesize jumpButton=_jumpButton;
@property(retain) NSTextField *frameField; // @synthesize frameField=_frameField;
@property(retain) NSTextField *moduleNameField; // @synthesize moduleNameField=_moduleNameField;
@property(retain) NSTextField *frameNumberField; // @synthesize frameNumberField=_frameNumberField;
@property(retain) NSImageView *frameIconImageView; // @synthesize frameIconImageView=_frameIconImageView;
- (void).cxx_destruct;
- (void)drawRect:(struct CGRect)arg1;
- (void)showSymbolInDebugNavigator:(id)arg1;

@end

@interface DVTCrashLogBacktraceTextFieldCell : NSTextFieldCell
{
    NSMutableArray *_rangeValues;
    DVTCrashLogParsedStackFrame *_parsedStackFrame;
    struct _NSRange _emphasizedRange;
}

+ (id)_filterMatchAttributesForDarkBackground;
+ (id)_filterMatchAttributesForLightBackground;
@property(retain, nonatomic) DVTCrashLogParsedStackFrame *parsedStackFrame; // @synthesize parsedStackFrame=_parsedStackFrame;
@property(nonatomic) struct _NSRange emphasizedRange; // @synthesize emphasizedRange=_emphasizedRange;
- (void).cxx_destruct;
- (id)attributedStringValue;

@end

@interface DVTCrashLogOutlineView : DVTOutlineView
{
}

- (struct CGRect)frameOfCellAtColumn:(long long)arg1 row:(long long)arg2;
- (struct CGRect)frameOfOutlineCellAtRow:(long long)arg1;

@end

@interface DVTCrashLogParsedStackFrame (UIAdditions)
+ (id)_genericFrameImageIsCrash:(BOOL)arg1;
+ (id)_createImageFromFilePath:(id)arg1 withRed:(float)arg2 green:(float)arg3 blue:(float)arg4 alpha:(float)arg5 isRecorded:(BOOL)arg6 isCrash:(BOOL)arg7;
@property(readonly, copy, nonatomic) NSArray *allFindHighlightRanges;
@property(retain, nonatomic) NSArray *imageTextFindMatchingSubranges; // @dynamic imageTextFindMatchingSubranges;
@property(retain, nonatomic) NSArray *frameTextFindMatchingSubranges; // @dynamic frameTextFindMatchingSubranges;
- (BOOL)ide_hasSymbolsWithAppName:(id)arg1 andBundleIdentifier:(id)arg2;
- (BOOL)ide_isCrashedFrameInCrashPoint:(id)arg1;
- (id)ide_presentableImageWithAppName:(id)arg1 andBundleIdentifier:(id)arg2 forCrashPoint:(id)arg3;
@end

@interface DVTCrashLogStackFrame (DebuggerIntegration)
- (id)ideStackFrameWithThread:(id)arg1 usingContext:(id)arg2;
@end

@interface DVTCrashLogTableRowView : NSTableRowView
{
    BOOL _mouseInside;
    NSTrackingArea *_trackingArea;
    BOOL _drawCrashingThreadHighlight;
    BOOL _drawBottomSeparator;
    BOOL _drawDashedSeparator;
    BOOL _isLastChildRowInParent;
}

+ (id)_consecutiveThreadLineSeparatorColor;
+ (id)_nonConsecutiveDashedThreadLineSeparatorColor;
+ (id)_crashingThreadHighlightColor;
+ (double)lastChildRowHeightAdjustment;
@property(nonatomic) BOOL isLastChildRowInParent; // @synthesize isLastChildRowInParent=_isLastChildRowInParent;
@property(nonatomic) BOOL drawDashedSeparator; // @synthesize drawDashedSeparator=_drawDashedSeparator;
@property(nonatomic) BOOL drawBottomSeparator; // @synthesize drawBottomSeparator=_drawBottomSeparator;
@property(nonatomic) BOOL drawCrashingThreadHighlight; // @synthesize drawCrashingThreadHighlight=_drawCrashingThreadHighlight;
- (void).cxx_destruct;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)updateTrackingAreas;
- (void)ensureTrackingArea;
- (BOOL)mouseInside;
- (void)setMouseInside:(BOOL)arg1;
- (void)drawSeparatorInRect:(struct CGRect)arg1;
- (id)_dashColor;
- (void)drawSelectionInRect:(struct CGRect)arg1;
- (void)drawBackgroundInRect:(struct CGRect)arg1;
- (long long)selectionHighlightStyle;

@end

@interface DVTCrashLogViewController : DVTViewController <NSOutlineViewDataSource, NSOutlineViewDelegate, DVTFindBarHostable, DVTScopeBarHost>
{
    DVTBasicFindBar *_findBar;
    DVTScopeBarController *_findBarScopeBarController;
    DVTScopeBarsManager *_scopeBarsManager;
    NSString *_findString;
    BOOL _findCaseSensitive;
    NSDictionary *_findBarHighlightedStackFrame;
    NSValue *_findBarHighlightedStackFrameRange;
    id _findStringChangedNotificationToken;
    BOOL _isFindBarInstalled;
    float _scrollViewTopContentInsetDefault;
    DVTDelayedInvocation *_saveCrashLogScrollPositionInvocation;
    DVTCrashLog *_crashLog;
    DVTCrashPoint *_crashPoint;
    NSArray *_findBarMatches;
    DVTCrashLogOutlineView *_outlineView;
    NSView *_scopeBarsBaseView;
    NSArray *_findBarMatchingFrames;
    NSScrollView *_scrollView;
    DVTNotificationToken *_scrollViewBoundsChangeObserver;
    DVTUserDefaultsLeastRecentlyUsedCache *_scrollPositionCache;
}

+ (id)_colorForStackFrameWithoutSymbols;
+ (void)initialize;
@property float scrollViewTopContentInsetDefault; // @synthesize scrollViewTopContentInsetDefault=_scrollViewTopContentInsetDefault;
@property(retain, nonatomic) DVTUserDefaultsLeastRecentlyUsedCache *scrollPositionCache; // @synthesize scrollPositionCache=_scrollPositionCache;
@property(retain, nonatomic) DVTNotificationToken *scrollViewBoundsChangeObserver; // @synthesize scrollViewBoundsChangeObserver=_scrollViewBoundsChangeObserver;
@property __weak NSScrollView *scrollView; // @synthesize scrollView=_scrollView;
@property(copy) NSArray *findBarMatchingFrames; // @synthesize findBarMatchingFrames=_findBarMatchingFrames;
@property(retain) NSView *scopeBarsBaseView; // @synthesize scopeBarsBaseView=_scopeBarsBaseView;
@property(nonatomic) BOOL isFindBarInstalled; // @synthesize isFindBarInstalled=_isFindBarInstalled;
@property(retain) NSString *findString; // @synthesize findString=_findString;
@property __weak DVTCrashLogOutlineView *outlineView; // @synthesize outlineView=_outlineView;
@property(copy) NSArray *findBarMatches; // @synthesize findBarMatches=_findBarMatches;
@property(retain, nonatomic) DVTCrashPoint *crashPoint; // @synthesize crashPoint=_crashPoint;
@property(retain, nonatomic) DVTCrashLog *crashLog; // @synthesize crashLog=_crashLog;
@property(retain, nonatomic) DVTDelayedInvocation *saveCrashLogScrollPositionInvocation; // @synthesize saveCrashLogScrollPositionInvocation=_saveCrashLogScrollPositionInvocation;
- (void).cxx_destruct;
- (void)_updateFindBar:(id)arg1;
- (id)findBar;
- (id)scopeBarsManager;
- (void)basicFindBarLostFocus:(id)arg1;
- (BOOL)basicFindBar:(id)arg1 findPreviousByWrapping:(BOOL)arg2;
- (BOOL)basicFindBar:(id)arg1 findNextByWrapping:(BOOL)arg2;
- (void)findPrevious:(id)arg1;
- (void)findNext:(id)arg1;
- (BOOL)_findPreviousByWrapping:(BOOL)arg1;
- (BOOL)_findNextByWrapping:(BOOL)arg1;
- (long long)findMatchingFramesAndThreads;
- (void)clearFindMatches;
- (long long)basicFindBar:(id)arg1 findString:(id)arg2 caseSensitive:(BOOL)arg3 withFindType:(unsigned long long)arg4 andMatchStyle:(int)arg5;
- (BOOL)basicFindBar:(id)arg1 supportsMatchStyle:(int)arg2;
- (BOOL)basicFindBar:(id)arg1 supportsFindType:(unsigned long long)arg2;
- (void)dismissFindBar:(id)arg1 andRestoreSelection:(BOOL)arg2;
- (void)dismissFindBar;
- (void)showContentFindView;
- (void)find:(id)arg1;
- (id)outlineView:(id)arg1 viewForTableColumn:(id)arg2 item:(id)arg3;
- (id)_frameAndImageAttributes;
- (double)outlineView:(id)arg1 heightOfRowByItem:(id)arg2;
- (id)outlineView:(id)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (BOOL)outlineView:(id)arg1 isItemExpandable:(id)arg2;
- (long long)outlineView:(id)arg1 numberOfChildrenOfItem:(id)arg2;
- (id)outlineView:(id)arg1 rowViewForItem:(id)arg2;
- (BOOL)_stackFramesWereCompressedBetweenFrame:(id)arg1 andFrame:(id)arg2;
- (BOOL)stackFrameIsLastChildOfThread:(id)arg1;
- (id)framesForThreadRespectingCompression:(id)arg1;
- (id)threadsRespectingCompression;
- (void)toggleThreadAndFrameCompression;
- (id)stackFrameImage:(id)arg1;
- (id)stackFrameFont:(id)arg1;
- (id)stackFrameColor:(id)arg1;
- (BOOL)stackFrameHasSymbols:(id)arg1;
- (BOOL)stackFrameIsCrashedFrame:(id)arg1;
- (BOOL)isCrashingThread:(id)arg1;
- (id)_presumedBundleIdentifier;
- (id)_presumedAppName;
- (unsigned long long)compressionPadding;
- (void)scrollViewBoundsDidChange:(id)arg1;
- (void)_restoreCrashLogScrollPosition;
@property BOOL compressThreadsAndFrames;
- (void)_restoreDefaultExpansion;
- (void)primitiveInvalidate;
- (void)loadView;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) NSScrollView *scopeBarsAdjustableScrollView;
@property(readonly) Class superclass;

@end

@interface DVTCrashPoint (DebuggerIntegration)
- (long long)crashPointStringMatchesStackFrame:(id)arg1;
- (id)ideCrashPointForWorkspace:(id)arg1 productVersion:(id)arg2 error:(id *)arg3;
@end

@interface DVTCrashPoint (IDEProductsUIExtensions)
+ (id)keyPathsForValuesAffectingOccurenceCountDisplayString;
@property(readonly, copy) NSString *occurenceCountDisplayString;
@end

@interface DVTCrashPoint (TableCellAttributes)
+ (id)keyPathsForValuesAffectingCrashPointSubtitle;
+ (id)keyPathsForValuesAffectingCrashPointTitle;
+ (id)keyPathsForValuesAffectingResolvedImage;
- (id)attributedStringWithAppropriateColor:(id)arg1;
- (id)textAttributes;
- (id)unresolvedAttributes;
- (id)resolvedAttributes;
- (id)crashPointSubtitle;
- (id)crashPointTitle;
- (id)resolvedImage;
- (id)appExtensionImage;
- (id)productExtensionCategory;
@end

@interface DVTCrashPointSourceCollection (NavigableAdditions) <IDEKeyDrivenNavigableItemRepresentedObject>
@property(readonly) NSString *navigableItem_toolTip;
@property(readonly) NSString *navigableItem_name;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTDocumentLocation *navigableItem_contentDocumentLocation;
@property(readonly) DVTFileDataType *navigableItem_documentType;
@property(readonly) IDEFileReference *navigableItem_fileReference;
@property(readonly) NSString *navigableItem_groupIdentifier;
@property(readonly) NSImage *navigableItem_image;
@property(readonly) BOOL navigableItem_isLeaf;
@property(readonly) BOOL navigableItem_isMajorGroup;
@property(readonly) Class superclass;
@end

@interface DVTProduct (CrashPointUI)
@property(readonly) NSArray *crashPointUI_crashPointSourceCollections;
@end

@interface DVTProduct (ProductImage)
@property(readonly) NSImage *productImage;
- (id)_placeholderImage;
@end

@interface IDEArchive (FreeProvisioningUtilityAdditions)
@property(readonly) BOOL usesFreeProvisioning;
@end

@interface IDEArchive (ProductsUI) <IDEProductsInspectable>
+ (id)keyPathsForValuesAffectingArchiveDetails;
+ (id)grayAttributedString:(id)arg1;
- (id)archiveDetails;
@property(readonly) NSString *inspectableUtilityExtensionIdentifier;
- (id)inspectableIcon;
- (id)inspectableType;
- (id)inspectableSubtitle;
- (id)productsUI_creationDate;
- (id)productsUI_archiveImage;
- (id)productsUI_version;
- (id)productsUI_userRepresentationOfVersion;
- (id)productsUI_onDiskSize;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@end

@interface IDEProductsUtilityPane : IDEViewController
{
    BOOL _hidden;
    BOOL _hideBottomBorder;
    DVTBorderedView *_borderedView;
    id <IDEProductsInspectable> _inspectable;
}

@property BOOL hideBottomBorder; // @synthesize hideBottomBorder=_hideBottomBorder;
@property(readonly) BOOL hidden; // @synthesize hidden=_hidden;
@property(readonly) id <IDEProductsInspectable> inspectable; // @synthesize inspectable=_inspectable;
@property __weak DVTBorderedView *borderedView; // @synthesize borderedView=_borderedView;
- (void).cxx_destruct;
- (void)loadView;
- (id)initWithInspectable:(id)arg1;
- (id)initUsingDefaultNib;

@end

@interface IDEArchiveFreeProvisioningUtilityPane : IDEProductsUtilityPane
{
    NSButton *_linkButton;
}

+ (id)keyPathsforValuesAffectingHidden;
@property(retain) NSButton *linkButton; // @synthesize linkButton=_linkButton;
- (void).cxx_destruct;
- (BOOL)hidden;
- (void)goToDeveloperProgram:(id)arg1;
- (void)viewDidLoad;
- (id)archive;
- (id)initWithInspectable:(id)arg1;

@end

@interface IDEProductSectionViewController : IDEViewController <IDEProductsInspectableVending>
{
    BOOL _busy;
    BOOL _empty;
    DVTProduct *_selectedProduct;
    IDEProductsViewController *_productsViewController;
    NSString *_busyReason;
    id <IDEProductsInspectable> _currentInspectable;
}

+ (BOOL)canShowContentForProduct:(id)arg1;
@property(readonly, nonatomic) BOOL empty; // @synthesize empty=_empty;
@property(retain) id <IDEProductsInspectable> currentInspectable; // @synthesize currentInspectable=_currentInspectable;
@property(readonly, nonatomic) NSString *busyReason; // @synthesize busyReason=_busyReason;
@property(readonly, nonatomic) BOOL busy; // @synthesize busy=_busy;
@property __weak IDEProductsViewController *productsViewController; // @synthesize productsViewController=_productsViewController;
@property(retain, nonatomic) DVTProduct *selectedProduct; // @synthesize selectedProduct=_selectedProduct;
- (void).cxx_destruct;
@property(readonly) BOOL shouldShowNoSelection;
- (void)handleAction:(id)arg1 fromInspectable:(id)arg2;
- (void)refresh;
- (void)primitiveInvalidate;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(readonly, nonatomic) BOOL vendorIsBusy;

@end

@interface IDEArchivesSectionViewController : IDEProductSectionViewController <DVTReplacementViewDelegate>
{
    BOOL _vendorIsBusy;
    DVTReplacementView *_replacementView;
    DVTObservingToken *_inspectableObserver;
    DVTObservingToken *_selectedProductObserver;
}

+ (BOOL)canShowContentForProduct:(id)arg1;
@property(retain) DVTObservingToken *selectedProductObserver; // @synthesize selectedProductObserver=_selectedProductObserver;
@property(retain) DVTObservingToken *inspectableObserver; // @synthesize inspectableObserver=_inspectableObserver;
@property __weak DVTReplacementView *replacementView; // @synthesize replacementView=_replacementView;
@property BOOL vendorIsBusy; // @synthesize vendorIsBusy=_vendorIsBusy;
- (void).cxx_destruct;
- (BOOL)shouldShowNoSelection;
- (void)handleAction:(id)arg1 fromInspectable:(id)arg2;
- (void)_updateTeams;
- (void)replacementView:(id)arg1 willCloseViewController:(id)arg2;
- (void)replacementView:(id)arg1 didInstallViewController:(id)arg2;
@property(readonly) IDEArchivesViewController *archivesViewController;
- (void)_updateSectionView;
- (BOOL)showEmptyView;
- (void)primitiveInvalidate;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEArchivesViewController : IDEViewController <IDEFilterControlBarTarget, NSTableViewDelegate, DVTTableCellViewTitleEditingDelegate, IDEInitialization, IDEProductsInspectableVending>
{
    IDEFilterControlBar *_controlBar;
    NSString *_searchString;
    DVTBorderedView *_bottomBorderView;
    NSArrayController *_archivesArrayController;
    NSTableHeaderView *_tableHeaderView;
    DVTTableView *_archivesTableView;
    NSTextField *_statusBarTextField;
    NSImage *_archiveImage;
    DVTObservingToken *_selectedArchivesObservingToken;
    DVTObservingToken *_archivesObservingToken;
    NSAlert *_deleteArchiveAlert;
    id <IDEProductsInspectable> _currentInspectable;
}

+ (id)keyPathsForValuesAffectingArchivesFilterPredicate;
+ (id)keyPathsForValuesAffectingArchives;
+ (void)revealArchive:(id)arg1;
+ (void)revealArchiveNotification:(id)arg1;
+ (BOOL)ide_initializeWithOptions:(int)arg1 error:(id *)arg2;
@property(retain) id <IDEProductsInspectable> currentInspectable; // @synthesize currentInspectable=_currentInspectable;
@property(retain, nonatomic) NSAlert *deleteArchiveAlert; // @synthesize deleteArchiveAlert=_deleteArchiveAlert;
@property(retain) DVTObservingToken *archivesObservingToken; // @synthesize archivesObservingToken=_archivesObservingToken;
@property(retain) DVTObservingToken *selectedArchivesObservingToken; // @synthesize selectedArchivesObservingToken=_selectedArchivesObservingToken;
@property(readonly) NSImage *archiveImage; // @synthesize archiveImage=_archiveImage;
@property __weak NSTextField *statusBarTextField; // @synthesize statusBarTextField=_statusBarTextField;
@property __weak DVTTableView *archivesTableView; // @synthesize archivesTableView=_archivesTableView;
@property __weak NSTableHeaderView *tableHeaderView; // @synthesize tableHeaderView=_tableHeaderView;
@property(retain) NSArrayController *archivesArrayController; // @synthesize archivesArrayController=_archivesArrayController;
@property __weak DVTBorderedView *bottomBorderView; // @synthesize bottomBorderView=_bottomBorderView;
@property(copy) NSString *searchString; // @synthesize searchString=_searchString;
@property __weak IDEFilterControlBar *controlBar; // @synthesize controlBar=_controlBar;
- (void).cxx_destruct;
- (struct _NSRange)initialSelectionRangeForTableCellView:(id)arg1 usingProposedRange:(struct _NSRange)arg2;
- (void)titleDidChangeForTableCellView:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (BOOL)tableView:(id)arg1 doCommandBySelector:(SEL)arg2;
- (double)tableView:(id)arg1 heightOfRow:(long long)arg2;
- (id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3;
- (id)filterButtonMenu;
- (id)filterDefinitionIdentifier;
- (void)primitiveInvalidate;
@property(readonly) BOOL shouldShowNoSelection;
- (void)handleAction:(id)arg1 fromInspectable:(id)arg2;
- (void)downloadDSYMForArchive:(id)arg1;
- (void)productsContextMenu_showArchiveInFinder:(id)arg1;
- (void)productsContextMenu_deleteArchive:(id)arg1;
- (void)deleteArchive:(id)arg1;
- (void)deleteArchives:(id)arg1;
- (void)updateStatusBar;
- (id)archivesFilterPredicate;
@property(retain, nonatomic) NSArray *archives;
- (void)viewDidLoad;
- (void)loadView;
- (void)revealArchive:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(readonly, nonatomic) BOOL vendorIsBusy;

@end

@interface IDECrashPoint (DBGProcessNavigableItemAdditions)
@property(readonly) NSImage *image;
@end

@interface IDECrashPoint (IDEProductsUIAdditions)
- (void)setCurrentCrashLogStackFrame:(id)arg1;
@end

@interface IDECrashPointDetailViewController : IDEViewController
{
    BOOL _restoringSelectedCrashLog;
    DVTCrashPoint *_crashPoint;
    DVTCrashLogRecord *_selectedCrashLogRecord;
    IDECrashPointsViewController *_crashPointsViewController;
    IDECrashPointOverviewViewController *_overviewViewController;
    IDECrashPointLogViewController *_logViewController;
    NSString *_selectedCrashLogPageString;
    NSArrayController *_crashLogsController;
    DVTBorderedView *_overviewBorderedView;
    DVTBorderedView *_logBorderedView;
    DVTBorderedView *_controlBarBorderedView;
    DVTGradientImageButton *_compressButton;
    NSButton *_previousCrashPointButton;
    NSButton *_nextCrashPointButton;
    NSPopUpButton *_crashLogSelector;
    NSMenu *_crashLogMenu;
    DVTUserDefaultsLeastRecentlyUsedCache *_crashLogSelectedCache;
}

+ (id)keyPathsForValuesAffectingShouldShowCrashLogPagingButtons;
+ (id)keyPathsForValuesAffectingCanSelectNextCrashLog;
+ (id)keyPathsForValuesAffectingCanSelectPreviousCrashLog;
@property(nonatomic, getter=isRestoringSelectedCrashLog) BOOL restoringSelectedCrashLog; // @synthesize restoringSelectedCrashLog=_restoringSelectedCrashLog;
@property(retain) DVTUserDefaultsLeastRecentlyUsedCache *crashLogSelectedCache; // @synthesize crashLogSelectedCache=_crashLogSelectedCache;
@property __weak NSMenu *crashLogMenu; // @synthesize crashLogMenu=_crashLogMenu;
@property __weak NSPopUpButton *crashLogSelector; // @synthesize crashLogSelector=_crashLogSelector;
@property __weak NSButton *nextCrashPointButton; // @synthesize nextCrashPointButton=_nextCrashPointButton;
@property __weak NSButton *previousCrashPointButton; // @synthesize previousCrashPointButton=_previousCrashPointButton;
@property __weak DVTGradientImageButton *compressButton; // @synthesize compressButton=_compressButton;
@property __weak DVTBorderedView *controlBarBorderedView; // @synthesize controlBarBorderedView=_controlBarBorderedView;
@property __weak DVTBorderedView *logBorderedView; // @synthesize logBorderedView=_logBorderedView;
@property __weak DVTBorderedView *overviewBorderedView; // @synthesize overviewBorderedView=_overviewBorderedView;
@property __weak NSArrayController *crashLogsController; // @synthesize crashLogsController=_crashLogsController;
@property(readonly) NSString *selectedCrashLogPageString; // @synthesize selectedCrashLogPageString=_selectedCrashLogPageString;
@property(retain) IDECrashPointLogViewController *logViewController; // @synthesize logViewController=_logViewController;
@property(retain) IDECrashPointOverviewViewController *overviewViewController; // @synthesize overviewViewController=_overviewViewController;
@property(readonly) __weak IDECrashPointsViewController *crashPointsViewController; // @synthesize crashPointsViewController=_crashPointsViewController;
- (void).cxx_destruct;
- (void)_updateCompressButtonState;
- (void)compressThreadsAndFrames:(id)arg1;
- (void)selectNextCrashLog:(id)arg1;
- (BOOL)shouldShowCrashLogPagingButtons;
- (void)selectPreviousCrashLog:(id)arg1;
@property(readonly) BOOL canSelectNextCrashLog;
@property(readonly) BOOL canSelectPreviousCrashLog;
- (BOOL)_canSelectCrashLogAtLimitIndex:(unsigned long long)arg1;
- (id)_pageStringForCrashLogIndex:(unsigned long long)arg1 crashLogCount:(unsigned long long)arg2;
- (void)_restoreSelectedCrashLogFromCrashPoint:(id)arg1;
- (void)_saveSelectedCrashLog;
@property(readonly) DVTCrashLogRecord *selectedCrashLogRecord; // @synthesize selectedCrashLogRecord=_selectedCrashLogRecord;
- (void)setSelectedCrashLogRecord:(id)arg1;
- (void)crashLogSelectorSelectedMenuItem:(id)arg1;
@property(retain) DVTCrashPoint *crashPoint; // @synthesize crashPoint=_crashPoint;
- (void)setCrashLogSelectorToCrashLogWithIdentifier:(id)arg1;
- (void)loadView;
- (void)primitiveInvalidate;

@end

@interface IDECrashPointDistributionUtilityPane : IDEProductsUtilityPane
{
    DVTCrashChartView *_crashChartView;
}

@property __weak DVTCrashChartView *crashChartView; // @synthesize crashChartView=_crashChartView;
- (void).cxx_destruct;
- (void)viewDidLoad;
@property(readonly) DVTCrashPoint *crashPoint;
- (id)initWithInspectable:(id)arg1;

@end

@interface IDECrashPointInspectable : NSObject <IDEProductsInspectable>
{
    DVTProductCategory *_productCategory;
    DVTCrashPoint *_crashPoint;
    DVTCrashLog *_crashLog;
}

+ (id)keyPathsForValuesAffectingMarkAsResolvedButtonTitle;
@property(readonly) DVTCrashLog *crashLog; // @synthesize crashLog=_crashLog;
@property(readonly) DVTCrashPoint *crashPoint; // @synthesize crashPoint=_crashPoint;
- (void).cxx_destruct;
- (id)markAsResolvedButtonTitle;
- (id)crashLogDetails;
@property(readonly) NSString *inspectableUtilityExtensionIdentifier;
- (id)inspectableIcon;
@property(readonly) unsigned long long hash;
- (BOOL)isEqual:(id)arg1;
- (id)initWithCrashPoint:(id)arg1 crashLog:(id)arg2 productCategory:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;

@end

@interface IDECrashPointLogViewController : IDEViewController <NSOutlineViewDataSource, NSOutlineViewDelegate, DVTReplacementViewDelegate>
{
    IDECrashPointDetailViewController *_detailViewController;
    DVTCrashLogRecord *_crashLogRecord;
    DVTCrashPoint *_crashPoint;
    NSOutlineView *_outlineView;
    DVTReplacementView *_replacementView;
}

@property __weak DVTReplacementView *replacementView; // @synthesize replacementView=_replacementView;
@property __weak NSOutlineView *outlineView; // @synthesize outlineView=_outlineView;
@property(retain, nonatomic) DVTCrashPoint *crashPoint; // @synthesize crashPoint=_crashPoint;
@property(retain, nonatomic) DVTCrashLogRecord *crashLogRecord; // @synthesize crashLogRecord=_crashLogRecord;
@property __weak IDECrashPointDetailViewController *detailViewController; // @synthesize detailViewController=_detailViewController;
- (void).cxx_destruct;
- (void)replacementView:(id)arg1 didInstallViewController:(id)arg2;
- (void)_updateInstalledViewController;
- (void)_updateLogView;
@property(readonly) DVTCrashLogViewController *crashLogViewController;
- (void)loadView;
- (void)primitiveInvalidate;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDECrashPointOpenInProjectSheetController : NSWindowController <DVTInvalidation>
{
    DVTFilePath *_projectFilePath;
    IDECrashPointOpenInProjectViewController *_openInProjectViewController;
}

+ (void)initialize;
@property(retain) IDECrashPointOpenInProjectViewController *openInProjectViewController; // @synthesize openInProjectViewController=_openInProjectViewController;
@property(retain) DVTFilePath *projectFilePath; // @synthesize projectFilePath=_projectFilePath;
- (void).cxx_destruct;
- (void)beginSheetModalForWindow:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)windowDidLoad;
@property(readonly) NSURL *projectURL;
- (void)primitiveInvalidate;
- (id)init;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDECrashPointOpenInProjectViewController : IDEViewController <DVTTableViewDelegate>
{
    NSURL *_projectURL;
    DVTBorderedView *_tableBorder;
    DVTTableView *_projectsTable;
    NSProgressIndicator *_spinner;
    DVTSearchField *_filterField;
    NSArrayController *_projectsController;
    IDERecentsHelper *_recentsHelper;
    DVTObservingToken *_selectionObserver;
    NSString *_searchString;
}

@property(retain, nonatomic) NSString *searchString; // @synthesize searchString=_searchString;
@property(retain) DVTObservingToken *selectionObserver; // @synthesize selectionObserver=_selectionObserver;
@property(retain) IDERecentsHelper *recentsHelper; // @synthesize recentsHelper=_recentsHelper;
@property(retain) NSArrayController *projectsController; // @synthesize projectsController=_projectsController;
@property __weak DVTSearchField *filterField; // @synthesize filterField=_filterField;
@property __weak NSProgressIndicator *spinner; // @synthesize spinner=_spinner;
@property __weak DVTTableView *projectsTable; // @synthesize projectsTable=_projectsTable;
@property __weak DVTBorderedView *tableBorder; // @synthesize tableBorder=_tableBorder;
@property(retain) NSURL *projectURL; // @synthesize projectURL=_projectURL;
- (void).cxx_destruct;
- (id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3;
- (void)tableDoubleClicked:(id)arg1;
- (void)browse:(id)arg1;
- (void)cancel:(id)arg1;
- (void)open:(id)arg1;
- (void)_updateEmptyContentString;
- (void)_showBusy:(BOOL)arg1;
- (void)primitiveInvalidate;
- (void)viewDidAppear;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDECrashPointOverviewViewController : IDEViewController
{
    IDECrashPointDetailViewController *_detailViewController;
    DVTCrashPoint *_crashPoint;
    NSButton *_resolvedButton;
}

@property __weak NSButton *resolvedButton; // @synthesize resolvedButton=_resolvedButton;
@property(retain) DVTCrashPoint *crashPoint; // @synthesize crashPoint=_crashPoint;
@property __weak IDECrashPointDetailViewController *detailViewController; // @synthesize detailViewController=_detailViewController;
- (void).cxx_destruct;
- (void)primitiveInvalidate;
- (void)viewDidLoad;

@end

@interface IDECrashPointPathControlCell : IDEPathCell
{
}

- (id)pathComponentCellAtPoint:(struct CGPoint)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;
- (struct CGRect)rectOfPathComponentCell:(id)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;

@end

@interface IDECrashPointSourceCollectionGroup : NSObject <IDEKeyDrivenNavigableItemRepresentedObject>
{
    NSArray *_crashPointSourceCollections;
    NSString *_name;
}

@property(readonly) NSString *name; // @synthesize name=_name;
@property(readonly) NSArray *crashPointSourceCollections; // @synthesize crashPointSourceCollections=_crashPointSourceCollections;
- (void).cxx_destruct;
@property(readonly) NSString *navigableItem_toolTip;
@property(readonly) NSString *navigableItem_name;
- (id)initWithName:(id)arg1 sourceCollections:(id)arg2 groupSources:(BOOL)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTDocumentLocation *navigableItem_contentDocumentLocation;
@property(readonly) DVTFileDataType *navigableItem_documentType;
@property(readonly) IDEFileReference *navigableItem_fileReference;
@property(readonly) NSString *navigableItem_groupIdentifier;
@property(readonly) NSImage *navigableItem_image;
@property(readonly) BOOL navigableItem_isLeaf;
@property(readonly) BOOL navigableItem_isMajorGroup;
@property(readonly) Class superclass;

@end

@interface IDECrashPointSourceCollectionBetaGroup : IDECrashPointSourceCollectionGroup
{
}

- (id)initWithSourceCollections:(id)arg1;

@end

@interface IDECrashPointSourceCollectionPathControl : IDEPathControl
{
}

+ (Class)cellClass;

@end

@interface IDECrashPointSourceCollectionSelector : IDEViewController <NSPathControlDelegate, IDEPathCellDelegate>
{
    BOOL _restoringSelectedNavigableItem;
    DVTProduct *_product;
    NSError *_currentError;
    IDEPathControl *_pathControl;
    NSButton *_errorButton;
    NSLayoutConstraint *_pathControlLeadingConstraintWithError;
    NSArray *_rootNavigables;
    IDENavigableItem *_selectedNavigable;
    IDENavigableItemCoordinator *_navItemCoordinator;
    NSLayoutConstraint *_pathControlLeadingConstraint;
    DVTObservingToken *_errorObserver;
    DVTUserDefaultsLeastRecentlyUsedCache *_selectedCrashPointSourceCache;
}

+ (id)keyPathsForValuesAffectingSelectedCrashPointSourceCollection;
@property(nonatomic, getter=isRestoringSelectedNavigableItem) BOOL restoringSelectedNavigableItem; // @synthesize restoringSelectedNavigableItem=_restoringSelectedNavigableItem;
@property(retain, nonatomic) DVTUserDefaultsLeastRecentlyUsedCache *selectedCrashPointSourceCache; // @synthesize selectedCrashPointSourceCache=_selectedCrashPointSourceCache;
@property(retain) DVTObservingToken *errorObserver; // @synthesize errorObserver=_errorObserver;
@property(retain) NSLayoutConstraint *pathControlLeadingConstraint; // @synthesize pathControlLeadingConstraint=_pathControlLeadingConstraint;
@property(retain, nonatomic) IDENavigableItemCoordinator *navItemCoordinator; // @synthesize navItemCoordinator=_navItemCoordinator;
@property(retain, nonatomic) IDENavigableItem *selectedNavigable; // @synthesize selectedNavigable=_selectedNavigable;
@property(retain, nonatomic) NSArray *rootNavigables; // @synthesize rootNavigables=_rootNavigables;
@property(retain) NSLayoutConstraint *pathControlLeadingConstraintWithError; // @synthesize pathControlLeadingConstraintWithError=_pathControlLeadingConstraintWithError;
@property __weak NSButton *errorButton; // @synthesize errorButton=_errorButton;
@property __weak IDEPathControl *pathControl; // @synthesize pathControl=_pathControl;
@property(retain) NSError *currentError; // @synthesize currentError=_currentError;
@property(retain, nonatomic) DVTProduct *product; // @synthesize product=_product;
- (void).cxx_destruct;
- (void)_saveCrashPointSourceCollectionSelectionState;
- (void)_restoreCrashPointSourceCollectionSelectionState;
- (id)_navigableItemForCrashPointSourceDict:(id)arg1 navigable:(id)arg2;
- (BOOL)pathCell:(id)arg1 shouldSeparateDisplayOfChildItemsForItem:(id)arg2;
- (struct CGPoint)pathCell:(id)arg1 adjustPopupMenuLocation:(struct CGPoint)arg2;
- (unsigned long long)pathCell:(id)arg1 textAlignmentOfTitleForPathComponentCell:(id)arg2 atIndex:(unsigned long long)arg3;
- (id)pathCellNoSelectionTitle;
- (void)primitiveInvalidate;
- (void)viewError:(id)arg1;
- (void)_showErrorButton:(BOOL)arg1;
- (void)_hideErrorButton;
- (void)_updateErrorPresentation;
- (void)_updateNavigables;
- (void)_invalidateRepresentedObjectsForNavigables:(id)arg1;
@property(readonly) DVTCrashPointSourceCollection *selectedCrashPointSourceCollection;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDECrashPointSourceListViewController : IDEViewController <IDEFilterControlBarTarget, DVTTableViewDelegate, NSMenuDelegate>
{
    BOOL _busy;
    BOOL _restoringSelectedCrashPoint;
    BOOL _updatingCrashPointsForDisplay;
    IDECrashPointsViewController *_crashPointsViewController;
    DVTCrashPoint *_selectedCrashPoint;
    IDECrashPointSourceCollectionSelector *_sourceCollectionSelector;
    NSIndexSet *_crashPointsTableSelectionIndexes;
    NSArrayController *_crashPointsController;
    DVTTableView *_crashPointsTableView;
    NSScrollView *_crashPointsTableScrollView;
    DVTBorderedView *_crashPointsBorderedView;
    IDEFilterControlBar *_crashPointsFilterControlBar;
    DVTBorderedView *_borderedView;
    DVTBorderedView *_crashPointSourceCollectionSelectorBorder;
    NSString *_searchString;
    DVTDispatchLock *_crashPointSourceLock;
    DVTDelayedInvocation *_delayedUpdateCrashPointsInvocation;
    NSArray *_crashPointsForDisplay;
    DVTUserDefaultsLeastRecentlyUsedCache *_selectedCrashPointCache;
    NSMutableDictionary *_representativeCrashPointSourceToDispatchLockDict;
    NSMutableSet *_crashPointAppStoreSourcesRetainedSet;
    DVTObservingToken *_selectedObjectsObservingToken;
    DVTObservingToken *_selectedProductObservingToken;
    DVTObservingToken *_selectedCrashPointSourceCollectionObservingToken;
    DVTObservingToken *_crashPointsObserver;
}

+ (void)_updateCrashPointsForSource:(id)arg1 fromNetworkWithErrors:(id *)arg2;
+ (id)keyPathsForValuesAffectingSelectedCrashPointSourceCollection;
+ (id)keyPathsForValuesAffectingCrashPointsFilterPredicate;
@property(retain) DVTObservingToken *crashPointsObserver; // @synthesize crashPointsObserver=_crashPointsObserver;
@property(retain) DVTObservingToken *selectedCrashPointSourceCollectionObservingToken; // @synthesize selectedCrashPointSourceCollectionObservingToken=_selectedCrashPointSourceCollectionObservingToken;
@property(retain) DVTObservingToken *selectedProductObservingToken; // @synthesize selectedProductObservingToken=_selectedProductObservingToken;
@property(retain) DVTObservingToken *selectedObjectsObservingToken; // @synthesize selectedObjectsObservingToken=_selectedObjectsObservingToken;
@property(retain, nonatomic) NSMutableSet *crashPointAppStoreSourcesRetainedSet; // @synthesize crashPointAppStoreSourcesRetainedSet=_crashPointAppStoreSourcesRetainedSet;
@property(retain, nonatomic) NSMutableDictionary *representativeCrashPointSourceToDispatchLockDict; // @synthesize representativeCrashPointSourceToDispatchLockDict=_representativeCrashPointSourceToDispatchLockDict;
@property(getter=isUpdatingCrashPointsForDisplay) BOOL updatingCrashPointsForDisplay; // @synthesize updatingCrashPointsForDisplay=_updatingCrashPointsForDisplay;
@property(getter=isRestoringSelectedCrashPoint) BOOL restoringSelectedCrashPoint; // @synthesize restoringSelectedCrashPoint=_restoringSelectedCrashPoint;
@property(retain) DVTUserDefaultsLeastRecentlyUsedCache *selectedCrashPointCache; // @synthesize selectedCrashPointCache=_selectedCrashPointCache;
@property(retain) NSArray *crashPointsForDisplay; // @synthesize crashPointsForDisplay=_crashPointsForDisplay;
@property(retain) DVTDelayedInvocation *delayedUpdateCrashPointsInvocation; // @synthesize delayedUpdateCrashPointsInvocation=_delayedUpdateCrashPointsInvocation;
@property(retain, nonatomic) DVTDispatchLock *crashPointSourceLock; // @synthesize crashPointSourceLock=_crashPointSourceLock;
@property(copy) NSString *searchString; // @synthesize searchString=_searchString;
@property __weak DVTBorderedView *crashPointSourceCollectionSelectorBorder; // @synthesize crashPointSourceCollectionSelectorBorder=_crashPointSourceCollectionSelectorBorder;
@property __weak DVTBorderedView *borderedView; // @synthesize borderedView=_borderedView;
@property __weak IDEFilterControlBar *crashPointsFilterControlBar; // @synthesize crashPointsFilterControlBar=_crashPointsFilterControlBar;
@property __weak DVTBorderedView *crashPointsBorderedView; // @synthesize crashPointsBorderedView=_crashPointsBorderedView;
@property __weak NSScrollView *crashPointsTableScrollView; // @synthesize crashPointsTableScrollView=_crashPointsTableScrollView;
@property __weak DVTTableView *crashPointsTableView; // @synthesize crashPointsTableView=_crashPointsTableView;
@property __weak NSArrayController *crashPointsController; // @synthesize crashPointsController=_crashPointsController;
@property(retain, nonatomic) NSIndexSet *crashPointsTableSelectionIndexes; // @synthesize crashPointsTableSelectionIndexes=_crashPointsTableSelectionIndexes;
@property(getter=isBusy) BOOL busy; // @synthesize busy=_busy;
@property(retain) IDECrashPointSourceCollectionSelector *sourceCollectionSelector; // @synthesize sourceCollectionSelector=_sourceCollectionSelector;
@property(retain) DVTCrashPoint *selectedCrashPoint; // @synthesize selectedCrashPoint=_selectedCrashPoint;
@property(readonly) __weak IDECrashPointsViewController *crashPointsViewController; // @synthesize crashPointsViewController=_crashPointsViewController;
- (void).cxx_destruct;
- (id)tableView:(id)arg1 rowViewForRow:(long long)arg2;
- (BOOL)tableView:(id)arg1 shouldSelectRow:(long long)arg2;
- (double)tableView:(id)arg1 heightOfRow:(long long)arg2;
- (id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3;
- (BOOL)_isRowBeforeGroupRow:(unsigned long long)arg1;
- (BOOL)_isGroupRow:(unsigned long long)arg1;
- (id)_previousTopCrashesAttributedTitle;
- (void)refresh;
- (void)_updateCrashPointsFromNetworkOnDispatchLock:(id)arg1 withCallback:(CDUnknownBlockType)arg2;
- (void)_updateCrashPointsFromCacheOnDispatchLock:(id)arg1 withCallback:(CDUnknownBlockType)arg2;
- (BOOL)_shouldRefreshFromNetwork;
- (void)_setBusyOnMainThread:(BOOL)arg1;
- (void)_updateCrashPointSourceCollectionData;
- (void)releaseAppStoreSourcesInCollection:(id)arg1;
- (void)retainAppStoreSourcesInCollection:(id)arg1;
- (id)dispatchLockForRepresentativeCrashPointSourceInCollection:(id)arg1;
- (void)_restoreCrashPointSourceListScrollPosition;
- (void)_restoreSelectedCrashPoint;
- (void)_saveSelectedCrashPoint;
- (void)_updateCrashPointsForDisplay;
- (void)productsContextMenu_showCrashPointInFinder:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (id)crashPointsFilterPredicate;
@property(readonly) DVTCrashPointSourceCollection *selectedCrashPointSourceCollection;
@property BOOL showsUnresolvedCrashPointsOnly;
- (id)filterButtonMenu;
- (id)filterDefinitionIdentifier;
- (id)selectedCrashPointFromSelectedIndex:(id)arg1;
- (void)viewDidLoad;
- (void)loadView;
- (void)primitiveInvalidate;
- (id)initWithCrashPointsViewController:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDECrashPointTableCellView : DVTTableCellView
{
    NSImage *_appExtensionImage;
}

@property(retain, nonatomic) NSImage *appExtensionImage; // @synthesize appExtensionImage=_appExtensionImage;
- (void).cxx_destruct;

@end

@interface IDECrashPointTranslationContext : NSObject
{
    DVTCrashPoint *_crashPoint;
    IDEWorkspace *_workspace;
    NSSet *_binaryUUIDs;
    NSMutableDictionary *_fileNameToFilePathMap;
    NSMutableDictionary *_codeModulesByName;
}

@property(retain) NSMutableDictionary *codeModulesByName; // @synthesize codeModulesByName=_codeModulesByName;
@property(retain) NSMutableDictionary *fileNameToFilePathMap; // @synthesize fileNameToFilePathMap=_fileNameToFilePathMap;
@property(retain) NSSet *binaryUUIDs; // @synthesize binaryUUIDs=_binaryUUIDs;
@property __weak IDEWorkspace *workspace; // @synthesize workspace=_workspace;
@property(retain) DVTCrashPoint *crashPoint; // @synthesize crashPoint=_crashPoint;
- (void).cxx_destruct;
- (id)codeModuleForName:(id)arg1;
- (void)setCodeModule:(id)arg1 forName:(id)arg2 passesBuildProductDirFallback:(BOOL)arg3;
- (BOOL)containsBinaryUUID:(id)arg1;
- (id)filePathForFileName:(id)arg1;
- (id)initWithCrashPoint:(id)arg1 workspace:(id)arg2 binaryUUIDs:(id)arg3;

@end

@interface IDECrashPointsViewController : IDEProductSectionViewController <DVTSplitViewDelegate, DVTReplacementViewDelegate>
{
    DVTSplitView *_splitView;
    IDECrashPointSourceListViewController *_sourceListViewController;
    IDECrashPointOpenInProjectSheetController *_openInProjectController;
    DVTReplacementView *_replacementView;
    DVTObservingToken *_crashPointObserver;
    DVTObservingToken *_crashLogObserver;
    DVTObservingToken *_crashPointSourceObserver;
    DVTObservingToken *_appStoreProductSourceObserver;
    DVTObservingToken *_appStoreCrashPointSourceObserver;
    IDELaunchSession *_currentLaunchSession;
}

+ (BOOL)canShowContentForProduct:(id)arg1;
+ (id)keyPathsForValuesAffectingEmptyContentViewController;
+ (id)keyPathsForValuesAffectingDetailViewController;
+ (id)keyPathsForValuesAffectingBusy;
@property(retain) IDELaunchSession *currentLaunchSession; // @synthesize currentLaunchSession=_currentLaunchSession;
@property(retain) DVTObservingToken *appStoreCrashPointSourceObserver; // @synthesize appStoreCrashPointSourceObserver=_appStoreCrashPointSourceObserver;
@property(retain) DVTObservingToken *appStoreProductSourceObserver; // @synthesize appStoreProductSourceObserver=_appStoreProductSourceObserver;
@property(retain) DVTObservingToken *crashPointSourceObserver; // @synthesize crashPointSourceObserver=_crashPointSourceObserver;
@property(retain) DVTObservingToken *crashLogObserver; // @synthesize crashLogObserver=_crashLogObserver;
@property(retain) DVTObservingToken *crashPointObserver; // @synthesize crashPointObserver=_crashPointObserver;
@property(retain) DVTReplacementView *replacementView; // @synthesize replacementView=_replacementView;
@property(retain) IDECrashPointOpenInProjectSheetController *openInProjectController; // @synthesize openInProjectController=_openInProjectController;
@property(retain) IDECrashPointSourceListViewController *sourceListViewController; // @synthesize sourceListViewController=_sourceListViewController;
@property __weak DVTSplitView *splitView; // @synthesize splitView=_splitView;
- (void).cxx_destruct;
- (void)replacementView:(id)arg1 didInstallViewController:(id)arg2;
- (void)splitView:(id)arg1 resizeSubviewsWithOldSize:(struct CGSize)arg2;
- (void)_adjustCrashPointAreaSplitViewWithOldSize:(struct CGSize)arg1;
- (BOOL)splitView:(id)arg1 canCollapseSubview:(id)arg2;
- (double)splitView:(id)arg1 constrainMaxCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(id)arg1 constrainMinCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (BOOL)shouldShowNoSelection;
- (void)handleAction:(id)arg1 fromInspectable:(id)arg2;
- (void)refresh;
- (void)_openProjectAtURL:(id)arg1 withCrashPoint:(id)arg2 logIndex:(unsigned long long)arg3 initialStackFrame:(id)arg4 productVersion:(id)arg5;
- (void)_showOpenInProjectSheetWithCallback:(CDUnknownBlockType)arg1;
- (void)_openCurrentCrashPointInProjectWithInitialStackFrame:(id)arg1;
- (void)_openCurrentCrashPointInProject;
- (void)showSymbolInDebugNavigator:(id)arg1;
- (void)showAccountPreferences:(id)arg1;
- (void)_updateDetailView;
- (id)_emptyViewContextualMenu;
- (void)_updateCurrentInspectable;
- (void)_updateDetailViewVisibility;
- (BOOL)_shouldShowDetailView;
- (void)_updateSourceListVisibility;
- (BOOL)empty;
@property(readonly) IDEProductsEmptyContentViewController *emptyContentViewController;
@property(readonly) IDECrashPointDetailViewController *detailViewController;
- (id)busyReason;
- (BOOL)busy;
- (void)viewDidLoad;
- (void)loadView;
- (void)primitiveInvalidate;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEProductCategoryUIProviderIOSApp : NSObject <IDEProductCategoryUIProvider>
{
}

+ (id)placeholderImage;

@end

@interface IDEProductCategoryUIProviderInAppPurchase : NSObject <IDEProductCategoryUIProvider>
{
}

+ (id)placeholderImage;

@end

@interface IDEProductCategoryUIProviderMacApp : NSObject <IDEProductCategoryUIProvider>
{
}

+ (id)placeholderImage;

@end

@interface IDEProductCategoryUIProviderUnknown : NSObject <IDEProductCategoryUIProvider>
{
}

+ (id)placeholderImage;

@end

@interface IDEProductWindowCommandHandler : NSObject <IDECommandHandler>
{
}

+ (id)handlerForAction:(SEL)arg1 withSelectionSource:(id)arg2;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (void)productsWindow_refresh:(id)arg1;
- (void)windowMenu_showProducts:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEProductsBillboardUtilityPane : IDEProductsUtilityPane
{
    NSString *_nameKeyPath;
    NSString *_subtitleKeyPath;
    NSString *_iconKeyPath;
    NSTextField *_titleField;
    NSTextField *_subtitleField;
    NSImageView *_imageView;
}

@property(retain) NSImageView *imageView; // @synthesize imageView=_imageView;
@property(retain) NSTextField *subtitleField; // @synthesize subtitleField=_subtitleField;
@property(retain) NSTextField *titleField; // @synthesize titleField=_titleField;
@property(retain, nonatomic) NSString *iconKeyPath; // @synthesize iconKeyPath=_iconKeyPath;
@property(retain, nonatomic) NSString *subtitleKeyPath; // @synthesize subtitleKeyPath=_subtitleKeyPath;
@property(retain, nonatomic) NSString *nameKeyPath; // @synthesize nameKeyPath=_nameKeyPath;
- (void).cxx_destruct;
- (void)bindIcon;
- (void)bindSubtitle;
- (void)bindName;
- (void)primitiveInvalidate;
- (void)loadView;

@end

@interface IDEProductsBusyUtilityPane : IDEProductsUtilityPane
{
    NSProgressIndicator *_progressIndicator;
}

@property(retain) NSProgressIndicator *progressIndicator; // @synthesize progressIndicator=_progressIndicator;
- (void).cxx_destruct;
- (void)viewDidLoad;

@end

@interface IDEProductsButtonCell : NSButtonCell
{
}

- (struct CGRect)titleRectForBounds:(struct CGRect)arg1;
- (id)attributedTitle;
- (void)drawBezelWithFrame:(struct CGRect)arg1 inView:(id)arg2;

@end

@interface IDEProductsDescriptionUtilityPane : IDEProductsUtilityPane
{
    NSString *_descriptionKeyPath;
    NSAttributedString *_attributedCommentsString;
    NSString *_descriptionTitle;
    DVTTextViewWithPlaceholder *_descriptionTextView;
}

@property(retain) DVTTextViewWithPlaceholder *descriptionTextView; // @synthesize descriptionTextView=_descriptionTextView;
@property(readonly) NSString *descriptionTitle; // @synthesize descriptionTitle=_descriptionTitle;
@property(copy) NSAttributedString *attributedCommentsString; // @synthesize attributedCommentsString=_attributedCommentsString;
@property(readonly) NSString *descriptionKeyPath; // @synthesize descriptionKeyPath=_descriptionKeyPath;
- (void).cxx_destruct;
- (void)primitiveInvalidate;
- (void)loadView;
- (id)initWithInspectable:(id)arg1 descriptionKeyPath:(id)arg2 title:(id)arg3;
- (id)initWithInspectable:(id)arg1;

@end

@interface IDEProductsDetailUtilityPane : IDEProductsUtilityPane <NSTableViewDataSource, NSTableViewDelegate>
{
    NSString *_detailTitle;
    NSString *_detailsKeyPath;
    NSTextField *_titleField;
    NSTableView *_tableView;
    NSLayoutConstraint *_scrollViewHeightConstraint;
    DVTObservingToken *_detailsObservingToken;
}

@property(retain) DVTObservingToken *detailsObservingToken; // @synthesize detailsObservingToken=_detailsObservingToken;
@property __weak NSLayoutConstraint *scrollViewHeightConstraint; // @synthesize scrollViewHeightConstraint=_scrollViewHeightConstraint;
@property __weak NSTableView *tableView; // @synthesize tableView=_tableView;
@property __weak NSTextField *titleField; // @synthesize titleField=_titleField;
@property(readonly) NSString *detailsKeyPath; // @synthesize detailsKeyPath=_detailsKeyPath;
@property(retain, nonatomic) NSString *detailTitle; // @synthesize detailTitle=_detailTitle;
- (void).cxx_destruct;
- (id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (id)details;
- (void)setDetailsKeyPath:(id)arg1;
- (void)primitiveInvalidate;
- (void)viewDidLoad;
- (id)initWithInspectable:(id)arg1 detailsKeyPath:(id)arg2;
- (id)initWithInspectable:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEProductsSingleButtonUtilityPane : IDEProductsUtilityPane
{
    NSString *_buttonTitle;
    NSString *_buttonTitleKeyPath;
    NSString *_buttonEnabledKeyPath;
    NSString *_buttonAction;
    id <IDEProductsInspectableVending> _vendor;
    NSButton *_button;
}

@property(retain) NSButton *button; // @synthesize button=_button;
@property __weak id <IDEProductsInspectableVending> vendor; // @synthesize vendor=_vendor;
@property(retain, nonatomic) NSString *buttonAction; // @synthesize buttonAction=_buttonAction;
@property(retain, nonatomic) NSString *buttonEnabledKeyPath; // @synthesize buttonEnabledKeyPath=_buttonEnabledKeyPath;
@property(retain, nonatomic) NSString *buttonTitleKeyPath; // @synthesize buttonTitleKeyPath=_buttonTitleKeyPath;
@property(retain, nonatomic) NSString *buttonTitle; // @synthesize buttonTitle=_buttonTitle;
- (void).cxx_destruct;
- (void)bindButtonEnabledKeyPath;
- (void)bindButtonTitleKeyPath;
- (void)buttonClicked:(id)arg1;
- (void)viewDidLoad;
- (void)primitiveInvalidate;
- (id)initWithInspectable:(id)arg1 vendor:(id)arg2;
- (id)initWithInspectable:(id)arg1;

@end

@interface IDEProductsDoubleButtonUtilityPane : IDEProductsSingleButtonUtilityPane
{
    NSString *_secondButtonTitle;
    NSString *_secondButtonTitleKeyPath;
    NSString *_secondButtonEnabledKeyPath;
    NSString *_secondButtonAction;
    NSButton *_secondButton;
}

@property(retain) NSButton *secondButton; // @synthesize secondButton=_secondButton;
@property(retain, nonatomic) NSString *secondButtonAction; // @synthesize secondButtonAction=_secondButtonAction;
@property(retain, nonatomic) NSString *secondButtonEnabledKeyPath; // @synthesize secondButtonEnabledKeyPath=_secondButtonEnabledKeyPath;
@property(retain, nonatomic) NSString *secondButtonTitleKeyPath; // @synthesize secondButtonTitleKeyPath=_secondButtonTitleKeyPath;
@property(retain, nonatomic) NSString *secondButtonTitle; // @synthesize secondButtonTitle=_secondButtonTitle;
- (void).cxx_destruct;
- (void)bindSecondButtonEnabledKeyPath;
- (void)bindSecondButtonTitleKeyPath;
- (void)secondButtonClicked:(id)arg1;
- (void)viewDidLoad;
- (void)primitiveInvalidate;

@end

@interface IDEProductsEmptyContentViewController : IDEViewController
{
    BOOL _busy;
    BOOL _showResolutionButton;
    BOOL _shouldShowDelayedTitleAndSubtitle;
    BOOL _shouldShowDelayedSpinner;
    NSString *_emptyContentTitle;
    NSString *_emptyContentSubtitle;
    NSProgressIndicator *_spinner;
    NSTextField *_titleField;
    NSTextField *_subtitleField;
    NSButton *_resolutionButton;
    NSString *_resolutionButtonTitle;
    id _resolutionButtonTarget;
    SEL _resolutionButtonAction;
    DVTDelayedInvocation *_delayedShowTitleAndSubtitle;
    DVTDelayedInvocation *_delayedShowSpinner;
}

@property(retain) DVTDelayedInvocation *delayedShowSpinner; // @synthesize delayedShowSpinner=_delayedShowSpinner;
@property(retain) DVTDelayedInvocation *delayedShowTitleAndSubtitle; // @synthesize delayedShowTitleAndSubtitle=_delayedShowTitleAndSubtitle;
@property BOOL shouldShowDelayedSpinner; // @synthesize shouldShowDelayedSpinner=_shouldShowDelayedSpinner;
@property BOOL shouldShowDelayedTitleAndSubtitle; // @synthesize shouldShowDelayedTitleAndSubtitle=_shouldShowDelayedTitleAndSubtitle;
@property SEL resolutionButtonAction; // @synthesize resolutionButtonAction=_resolutionButtonAction;
@property(retain) id resolutionButtonTarget; // @synthesize resolutionButtonTarget=_resolutionButtonTarget;
@property(retain) NSString *resolutionButtonTitle; // @synthesize resolutionButtonTitle=_resolutionButtonTitle;
@property BOOL showResolutionButton; // @synthesize showResolutionButton=_showResolutionButton;
@property __weak NSButton *resolutionButton; // @synthesize resolutionButton=_resolutionButton;
@property __weak NSTextField *subtitleField; // @synthesize subtitleField=_subtitleField;
@property __weak NSTextField *titleField; // @synthesize titleField=_titleField;
@property __weak NSProgressIndicator *spinner; // @synthesize spinner=_spinner;
@property(nonatomic) BOOL busy; // @synthesize busy=_busy;
@property(copy, nonatomic) NSString *emptyContentSubtitle; // @synthesize emptyContentSubtitle=_emptyContentSubtitle;
@property(copy, nonatomic) NSString *emptyContentTitle; // @synthesize emptyContentTitle=_emptyContentTitle;
- (void).cxx_destruct;
- (void)primitiveInvalidate;
- (void)resolve:(id)arg1;
- (void)disableResolutionButton;
- (void)enableResolutionButtonWithTitle:(id)arg1 target:(id)arg2 action:(SEL)arg3;
- (void)viewDidLoad;

@end

@interface IDEProductsEmptyView : NSView
{
}

- (void)drawRect:(struct CGRect)arg1;

@end

@interface IDEProductsPrimaryButtonUtilityPane : IDEProductsSingleButtonUtilityPane
{
}

@end

@interface IDEProductsSingleButtonBusyUtilityPane : IDEProductsSingleButtonUtilityPane
{
    id <DVTCancellable> _progressIndicatorHiddenBindingToken;
    id <DVTCancellable> _progressIndicatorAnimateBindingToken;
    id <DVTCancellable> _updateConstraintsToken;
    NSString *_progressIndicatorBusyKeyPath;
    NSProgressIndicator *_progressIndicator;
    NSLayoutConstraint *_buttonToProgressIndicatorConstraint;
    NSLayoutConstraint *_buttonToContainerConstraint;
}

@property(retain, nonatomic) NSLayoutConstraint *buttonToContainerConstraint; // @synthesize buttonToContainerConstraint=_buttonToContainerConstraint;
@property(retain, nonatomic) NSLayoutConstraint *buttonToProgressIndicatorConstraint; // @synthesize buttonToProgressIndicatorConstraint=_buttonToProgressIndicatorConstraint;
@property(retain) NSProgressIndicator *progressIndicator; // @synthesize progressIndicator=_progressIndicator;
@property(retain, nonatomic) NSString *progressIndicatorBusyKeyPath; // @synthesize progressIndicatorBusyKeyPath=_progressIndicatorBusyKeyPath;
- (void).cxx_destruct;
- (void)bindProgressIndicatorBusyKeyPath;
- (void)buttonClicked:(id)arg1;
- (void)viewDidLoad;
- (void)primitiveInvalidate;

@end

@interface IDEProductsTableCellView : NSTableCellView
{
    NSButton *_errorButton;
    NSLayoutConstraint *_errorButtonWidthConstraint;
}

@property __weak NSLayoutConstraint *errorButtonWidthConstraint; // @synthesize errorButtonWidthConstraint=_errorButtonWidthConstraint;
@property __weak NSButton *errorButton; // @synthesize errorButton=_errorButton;
- (void).cxx_destruct;
- (void)_hideErrorButton;
- (void)_showErrorButton;

@end

@interface IDEProductsUtilityButton : NSButton
{
}

+ (Class)cellClass;

@end

@interface IDEProductsUtilityViewController : IDEViewController
{
    id <IDEProductsInspectable> _inspectable;
    id <IDEProductsInspectableVending> _inspectableVendor;
    DVTBorderedView *_topBorderedView;
    DVTStackView_AppKitAutolayout *_infoPaneStackView;
    NSScrollView *_infoPaneScrollView;
    DVTBorderedView *_borderedView;
    NSTextField *_typeTextField;
}

+ (id)keyPathsForValuesAffectingShouldShowEmptyMessage;
+ (id)utilityPaneExtensionForIdentifier:(id)arg1;
+ (id)utilityExtensionForIdentifier:(id)arg1;
@property __weak NSTextField *typeTextField; // @synthesize typeTextField=_typeTextField;
@property __weak DVTBorderedView *borderedView; // @synthesize borderedView=_borderedView;
@property __weak NSScrollView *infoPaneScrollView; // @synthesize infoPaneScrollView=_infoPaneScrollView;
@property __weak DVTStackView_AppKitAutolayout *infoPaneStackView; // @synthesize infoPaneStackView=_infoPaneStackView;
@property __weak DVTBorderedView *topBorderedView; // @synthesize topBorderedView=_topBorderedView;
@property(retain, nonatomic) id <IDEProductsInspectableVending> inspectableVendor; // @synthesize inspectableVendor=_inspectableVendor;
@property(retain, nonatomic) id <IDEProductsInspectable> inspectable; // @synthesize inspectable=_inspectable;
- (void).cxx_destruct;
- (id)_customPaneWithExtension:(id)arg1;
- (id)_descriptionPaneWithExtension:(id)arg1;
- (id)_detailPaneWithExtension:(id)arg1;
- (id)_doubleButtonPaneWithButtons:(id)arg1;
- (id)_singleButtonPaneWithButton:(id)arg1 busyIndicatorKeyPath:(id)arg2 primary:(BOOL)arg3;
- (id)_singleButtonPaneWithButton:(id)arg1 primary:(BOOL)arg2;
- (id)_buttonPaneWithExtension:(id)arg1;
- (void)_updateLayout;
@property(readonly, nonatomic) BOOL shouldShowEmptyMessage;
- (void)primitiveInvalidate;
- (void)loadView;

@end

@interface IDEProductsViewController : IDEViewController <NSTableViewDelegate, DVTSplitViewDelegate, DVTProductManagerDelegate, DVTReplacementViewDelegate>
{
    BOOL _programmaticallyManipulatingProductsSourceListSplitPosition;
    BOOL _restoringSelectedSegmentIndex;
    BOOL _displayedLogInErrors;
    NSArray *_productSectionSegments;
    long long _selectedSegmentIndex;
    DVTSplitView *_splitView;
    DVTScrollView *_scrollView;
    DVTReplacementView *_replacementView;
    NSArrayController *_productsArrayController;
    DVTTableView *_productsTable;
    DVTGradientImageButton *_refreshButton;
    NSView *_sourceListContainer;
    DVTBorderedView *_borderedContentView;
    NSIndexSet *_productsTableSelectionIndexes;
    NSArray *_productsForDisplay;
    DVTProduct *_selectedProduct;
    NSArray *_sortedProductSectionExtensions;
    NSArray *_products;
    IDEProductsUtilityViewController *_utilityViewController;
    IDEProductSectionViewController *_currentSectionViewController;
    NSMutableDictionary *_sourcesToErrorsMap;
    DVTObservingToken *_productsObserver;
    DVTObservingToken *_productsForDisplayObserver;
    DVTObservingToken *_inspectableObserver;
    DVTObservingToken *_selectedProductObserver;
    DVTObservingToken *_busyObserver;
    DVTObservingToken *_currentSectionEmptyObserver;
    DVTNotificationToken *_splitViewResizeObserver;
}

+ (id)keyPathsForValuesAffectingBusyReason;
+ (id)keyPathsForValuesAffectingBusy;
+ (void)initialize;
@property(retain) DVTNotificationToken *splitViewResizeObserver; // @synthesize splitViewResizeObserver=_splitViewResizeObserver;
@property(retain) DVTObservingToken *currentSectionEmptyObserver; // @synthesize currentSectionEmptyObserver=_currentSectionEmptyObserver;
@property(retain) DVTObservingToken *busyObserver; // @synthesize busyObserver=_busyObserver;
@property(retain) DVTObservingToken *selectedProductObserver; // @synthesize selectedProductObserver=_selectedProductObserver;
@property(retain) DVTObservingToken *inspectableObserver; // @synthesize inspectableObserver=_inspectableObserver;
@property(retain) DVTObservingToken *productsForDisplayObserver; // @synthesize productsForDisplayObserver=_productsForDisplayObserver;
@property(retain) DVTObservingToken *productsObserver; // @synthesize productsObserver=_productsObserver;
@property(nonatomic, getter=hasDisplayedLogInErrors) BOOL displayedLogInErrors; // @synthesize displayedLogInErrors=_displayedLogInErrors;
@property(nonatomic, getter=isRestoringSelectedSegmentIndex) BOOL restoringSelectedSegmentIndex; // @synthesize restoringSelectedSegmentIndex=_restoringSelectedSegmentIndex;
@property(nonatomic, getter=isProgrammaticallyManipulatingProductsSourceListSplitPosition) BOOL programmaticallyManipulatingProductsSourceListSplitPosition; // @synthesize programmaticallyManipulatingProductsSourceListSplitPosition=_programmaticallyManipulatingProductsSourceListSplitPosition;
@property(retain) NSMutableDictionary *sourcesToErrorsMap; // @synthesize sourcesToErrorsMap=_sourcesToErrorsMap;
@property(retain) IDEProductSectionViewController *currentSectionViewController; // @synthesize currentSectionViewController=_currentSectionViewController;
@property(retain) IDEProductsUtilityViewController *utilityViewController; // @synthesize utilityViewController=_utilityViewController;
@property(retain) NSArray *products; // @synthesize products=_products;
@property(retain, nonatomic) NSArray *sortedProductSectionExtensions; // @synthesize sortedProductSectionExtensions=_sortedProductSectionExtensions;
@property(retain) DVTProduct *selectedProduct; // @synthesize selectedProduct=_selectedProduct;
@property(retain) NSArray *productsForDisplay; // @synthesize productsForDisplay=_productsForDisplay;
@property(retain, nonatomic) NSIndexSet *productsTableSelectionIndexes; // @synthesize productsTableSelectionIndexes=_productsTableSelectionIndexes;
@property __weak DVTBorderedView *borderedContentView; // @synthesize borderedContentView=_borderedContentView;
@property __weak NSView *sourceListContainer; // @synthesize sourceListContainer=_sourceListContainer;
@property __weak DVTGradientImageButton *refreshButton; // @synthesize refreshButton=_refreshButton;
@property __weak DVTTableView *productsTable; // @synthesize productsTable=_productsTable;
@property __weak NSArrayController *productsArrayController; // @synthesize productsArrayController=_productsArrayController;
@property __weak DVTReplacementView *replacementView; // @synthesize replacementView=_replacementView;
@property __weak DVTScrollView *scrollView; // @synthesize scrollView=_scrollView;
@property __weak DVTSplitView *splitView; // @synthesize splitView=_splitView;
@property(nonatomic) long long selectedSegmentIndex; // @synthesize selectedSegmentIndex=_selectedSegmentIndex;
- (void).cxx_destruct;
- (void)replacementView:(id)arg1 willInstallViewController:(id)arg2;
- (void)replacementView:(id)arg1 willCloseViewController:(id)arg2;
- (void)productManager:(id)arg1 receivedErrors:(id)arg2 fromSource:(id)arg3;
- (void)splitViewDidResizeSubviewsNotification:(id)arg1;
- (struct CGRect)splitView:(id)arg1 effectiveRect:(struct CGRect)arg2 forDrawnRect:(struct CGRect)arg3 ofDividerAtIndex:(long long)arg4;
- (BOOL)splitView:(id)arg1 canCollapseSubview:(id)arg2;
- (double)splitView:(id)arg1 constrainMaxCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(id)arg1 constrainMinCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (void)primitiveInvalidate;
@property(readonly) NSArray *productSectionSegments; // @synthesize productSectionSegments=_productSectionSegments;
- (id)sortedExtensionsWithDefinitionIdentifier:(id)arg1;
- (id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3;
- (double)tableView:(id)arg1 heightOfRow:(long long)arg2;
- (BOOL)_tableView:(id)arg1 isGroupRow:(long long)arg2;
- (BOOL)tableView:(id)arg1 shouldSelectRow:(long long)arg2;
- (void)_saveSelectedProductState;
- (void)_restoreSelectedProductState;
- (void)_saveSelectedSegmentIndexState;
- (void)_restoreSelectedSegmentIndexState;
- (unsigned long long)_defaultSelectedSegment;
- (void)_saveSourceListSplitPosition;
- (void)_restoreSourceListSplitPosition;
- (void)_restoreSourceListScrollPosition;
- (void)showProductError:(id)arg1;
- (void)_showLogInErrorsOnce;
- (void)refresh:(id)arg1;
@property(readonly, nonatomic) NSString *busyReason;
@property(readonly, nonatomic) BOOL busy;
- (void)_resumeSplitPositions;
- (void)_resetDefaultUtilitiesSplitPosition;
- (id)errorsFromProductSource:(id)arg1;
- (void)_toggleUtiltitiesVisibility;
- (BOOL)shouldShowUtilities;
- (void)_toggleSourceListVisibility;
- (BOOL)shouldShowSourceList;
- (void)_updateProductsTableIssueDisplay;
- (id)showProductsSectionWithIdentifier:(id)arg1 forProductIdentifier:(id)arg2;
- (unsigned long long)indexForProductSectionDefinitionIdentifier:(id)arg1;
- (id)indexSetForProductIdentifier:(id)arg1;
- (id)selectedProductFromSelectedIndex:(id)arg1;
@property(readonly) DVTProductManager *productManager;
- (void)_updateDetailView;
- (void)updateProductsDisplay;
- (void)updateProducts;
- (void)_startObservations;
- (void)viewWillAppear;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEProductsWindowController : NSWindowController <NSToolbarDelegate>
{
    NSSegmentedControl *_segmentControl;
    IDEProductsViewController *_productsViewController;
    NSToolbarItem *_segmentControlToolbarItem;
}

+ (id)sharedProductsWindowController;
@property __weak NSToolbarItem *segmentControlToolbarItem; // @synthesize segmentControlToolbarItem=_segmentControlToolbarItem;
@property(retain) IDEProductsViewController *productsViewController; // @synthesize productsViewController=_productsViewController;
@property __weak NSSegmentedControl *segmentControl; // @synthesize segmentControl=_segmentControl;
- (void).cxx_destruct;
- (void)_configureSegmentedControl;
- (id)showProductsSectionWithIdentifier:(id)arg1 forProductIdentifier:(id)arg2;
- (void)refresh;
- (void)resizeSegmentControl;
- (void)windowWillClose:(id)arg1;
- (void)showWindow:(id)arg1;
- (void)windowDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEStackFrame (IDEProductsUIAdditions)
@property(retain) DVTCrashLogStackFrame *dvtCrashLogStackFrame;
@end

@interface NSError (IDEProductsUIAdditions)
+ (id)ide_productsErrorWrappingAnalyticsError:(id)arg1 product:(id)arg2 wasUpdate:(BOOL)arg3;
+ (id)ide_logInErrorForFailedSessionAccountNames:(id)arg1 accountsCount:(unsigned long long)arg2;
+ (id)ide_genericInternetConnectionErrorForProducts;
+ (id)ide_genericInternetConnectionErrorForCrashes:(BOOL)arg1;
- (BOOL)ide_isInternetConnectionError;
@end

@interface NSImage (ProductImageAdditions)
+ (id)dvt_iOSAppIconImageWithSize:(struct CGSize)arg1 scaleFactors:(id)arg2 flipped:(BOOL)arg3 fromCommands:(CDUnknownBlockType)arg4;
@end

@interface _DVTCrashLogTopPaddingView : NSView
{
}

- (void)drawRect:(struct CGRect)arg1;

@end

