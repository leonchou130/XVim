//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CGPoint {
    double _field1;
    double _field2;
};

struct CGRect {
    struct CGPoint _field1;
    struct CGSize _field2;
};

struct CGSize {
    double width;
    double height;
};

struct _NSRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

#pragma mark -

//
// File: /Applications/Xcode-7GM.app/Contents/PlugIns/IDEiPhoneSupport.ideplugin/Contents/MacOS/IDEiPhoneSupport
// UUID: 482FBB96-D7F4-373A-BAD3-AEE3979DC161
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 8167.0.0.0.0
//       Minimum Mac OS X version: 10.10.0
//                    SDK version: 10.11.0
//
// Objective-C Garbage Collection: Unsupported
//
//                       Run path: @loader_path/../../../
//                               = /Applications/Xcode-7GM.app/Contents/PlugIns
//                       Run path: @loader_path/../../../../Frameworks
//                               = /Applications/Xcode-7GM.app/Contents/Frameworks
//                       Run path: @loader_path/../../../../SharedFrameworks
//                               = /Applications/Xcode-7GM.app/Contents/SharedFrameworks
//                       Run path: @loader_path/../../../../Developer/Library/PrivateFrameworks
//                               = /Applications/Xcode-7GM.app/Contents/Developer/Library/PrivateFrameworks
//                       Run path: @loader_path/../../../../Developer/Platforms/iPhoneSimulator.platform/Developer/Library/PrivateFrameworks
//                               = /Applications/Xcode-7GM.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/Library/PrivateFrameworks
//

@protocol DTDKRemoteDeviceConsoleControllerDelegate <NSObject>
- (void)consoleControllerDidClear:(DTDKRemoteDeviceConsoleController *)arg1;
- (void)consoleController:(DTDKRemoteDeviceConsoleController *)arg1 didReceiveConsoleText:(NSString *)arg2;
@end

@protocol DTDKTableViewDelegate <NSObject, DVTTableViewDelegate>

@optional
- (NSMenu *)tableView:(DTDKTableView *)arg1 contextMenuForRows:(NSIndexSet *)arg2;
- (void)tableView:(DTDKTableView *)arg1 deleteRows:(NSIndexSet *)arg2;
@end

@protocol DVTBasicDevice <DVTCodesignableDevice>
@property(readonly) _Bool deviceIsBusy;
@property(readonly) NSError *unavailabilityError;
@property(readonly, getter=isAvailable) BOOL available;
@property(readonly) BOOL isProxiedDevice;
@property(readonly, copy) NSString *nativeArchitecture;
@property(readonly) DVTPlatform *platform;
@property(readonly, copy, nonatomic) NSString *operatingSystemVersionWithBuildNumber;
@property(readonly, copy) NSString *operatingSystemBuild;
@property(readonly, copy) NSString *operatingSystemVersion;
@property(readonly, copy) NSString *processorDescription;
@property(readonly, copy, nonatomic) NSString *modelUTI;
@property(readonly, copy, nonatomic) NSString *modelCode;
@property(readonly, copy, nonatomic) NSString *modelName;

@optional
- (DTXConnection *)primaryInstrumentsServer;
@end

@protocol DVTBasicDeviceUI <DVTBasicDevice>
@property(readonly) int deviceWindowCategory;
@property(readonly) BOOL showCompanionUI;
@property(readonly) NSImage *image;
@property(readonly) NSArray *deviceSummaryPropertyDictionaries;
@end

@protocol DVTCodesignableDevice <NSObject>
@property(readonly, copy) NSSet *proxiedDevices;
@property(readonly) BOOL supportsProvisioning;
@property(readonly, copy) NSString *platformIdentifier;
@property(readonly, copy) NSString *identifier;
@property(readonly, copy) NSString *nameForDeveloperPortal;
@property(readonly, copy) NSString *name;
@end

@protocol DVTDevicesWindowConsoleViewController <DVTDevicesWindowDetailViewController>
- (void)save:(id)arg1;
- (void)clear:(id)arg1;
@end

@protocol DVTDevicesWindowDetailViewController <DVTInvalidation>
@property(retain) DVTDevice *device;

@optional
- (void)detailViewDidDisappear;
- (void)detailViewDidAppear;
@end

@protocol DVTFindBarFindable

@optional
- (struct _NSRange)selectedRangeForFindBar:(DVTFindBar *)arg1;
- (DVTDocumentLocation *)startingLocationForFindBar:(DVTFindBar *)arg1 findingBackwards:(BOOL)arg2;
- (void)dvtFindBar:(DVTFindBar *)arg1 didUpdateCurrentResult:(DVTFindResult *)arg2;
- (void)dvtFindBar:(DVTFindBar *)arg1 didUpdateResults:(NSArray *)arg2;
@end

@protocol DVTFindBarHostable <DVTFindBarFindable>
- (void)dismissFindBar:(DVTFindBar *)arg1 andRestoreSelection:(BOOL)arg2;

@optional
- (NSView *)viewToShowWrapOrEndOfFileBezelOn:(DVTFindBar *)arg1;
- (BOOL)dvtFindBar:(DVTFindBar *)arg1 validateUserInterfaceItem:(id <NSValidatedUserInterfaceItem>)arg2;
- (void)dvtFindBar:(DVTFindBar *)arg1 didWrap:(BOOL)arg2 reverse:(BOOL)arg3;
@end

@protocol DVTInfoPlistValueCellDelegate <NSObject>

@optional
- (NSString *)infoPlistValueCell:(DVTInfoPlistValueCell *)arg1 expandedValueForString:(NSString *)arg2;
@end

@protocol DVTInvalidation <NSObject>
- (void)primitiveInvalidate;

@optional
+ (BOOL)supportsInvalidationPrevention;
+ (unsigned long long)assertionBehaviorForKeyValueObservationsAtEndOfEvent;
+ (unsigned long long)assertionBehaviorAfterEndOfEventForSelector:(SEL)arg1;
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly, nonatomic, getter=isValid) BOOL valid;
- (void)invalidate;
@end

@protocol DVTScopeBarHost <NSObject>
@property(readonly) NSView *scopeBarsBaseView;

@optional
@property(readonly) NSScrollView *scopeBarsAdjustableScrollView;
@end

@protocol DVTTableViewDelegate <NSTableViewDelegate>

@optional
- (void)tableView:(DVTTableView *)arg1 concludeDragOperation:(id <NSDraggingInfo>)arg2;
- (void)tableView:(DVTTableView *)arg1 draggingDidEnd:(id <NSDraggingInfo>)arg2;
- (void)tableView:(DVTTableView *)arg1 draggingDidUpdate:(id <NSDraggingInfo>)arg2;
- (void)tableView:(DVTTableView *)arg1 draggingDidEnter:(id <NSDraggingInfo>)arg2;
- (unsigned long long)tableView:(DVTTableView *)arg1 draggingSourceOperationMaskForLocal:(BOOL)arg2;
- (BOOL)tableView:(DVTTableView *)arg1 doCommandBySelector:(SEL)arg2;
@end

@protocol DVTWindowActivationStateObserver <NSObject>
- (void)window:(NSWindow *)arg1 didChangeActivationState:(long long)arg2;
@end

@protocol IDEBuildable <DVTInvalidation, NSObject>
@property(readonly, copy) NSString *legacyIdentifier;
@property(readonly) NSString *productModuleName;
@property(readonly) NSSet *namesOfLinkedBinaries;
@property(readonly) NSString *toolTip;
@property(readonly) NSString *displayName;
@property(readonly) id <IDEBlueprint> blueprint;
@property(readonly, copy) IDEEntityIdentifier *entityIdentifier;
@property(readonly, copy) NSString *buildableIdentifier;
@property(readonly, copy) NSString *productTypeIdentifier;
- (IDEBuilder *)createBuilderForBuildCommand:(int)arg1 withBuildTaskQueueSet:(IDEBuildOperationQueueSet *)arg2 parameters:(IDEBuildParameters *)arg3 buildOnlyTheseFiles:(NSArray *)arg4 restorePersistedBuildResults:(BOOL)arg5 withManager:(id <IDEBuildableOperationManager>)arg6;
- (NSArray *)implicitDependenciesForBuildParameters:(IDEBuildParameters *)arg1 executionEnvironment:(IDEExecutionEnvironment *)arg2 returningMessages:(id *)arg3;
- (NSArray *)directDependencies;
- (NSArray *)orderedRecursiveDependenciesIncludingSelf:(BOOL)arg1;
- (DVTSearchPath *)toolSearchPathWithBuildParameters:(IDEBuildParameters *)arg1;
- (NSString *)absolutePathByEvaluatingBuildSettingExpressionString:(NSString *)arg1 withBuildParameters:(IDEBuildParameters *)arg2;
- (NSString *)stringByEvaluatingBuildSettingExpressionString:(NSString *)arg1 withBuildParameters:(IDEBuildParameters *)arg2;
- (NSArray *)evaluatedStringListValueForBuildSetting:(NSString *)arg1 withBuildParameters:(IDEBuildParameters *)arg2;
- (NSString *)evaluatedStringValueForBuildSetting:(NSString *)arg1 withBuildParameters:(IDEBuildParameters *)arg2;
- (NSArray *)allBuildSettingNamesWithBuildParameters:(IDEBuildParameters *)arg1;
- (IDEProductType *)productTypeWithBuildParameters:(IDEBuildParameters *)arg1;

@optional
- (Class)buildOperationManagerClass;
@end

@protocol IDEBuildableProduct <IDEBuildable>
@property(readonly) BOOL productIsExecutable;
@property(readonly) NSDictionary *productSettings;
@property(readonly) NSString *iconPath;
@property(readonly, copy) DVTFileDataType *fileDataType;
@property(readonly) DVTFilePath *filePath;
- (DVTFilePath *)filePathForBuildParameters:(IDEBuildParameters *)arg1;
- (NSString *)productTypeIdentifier;
@end

@protocol IDECapsuleListViewDataSource <NSObject>
- (IDEViewController<IDECapsuleViewController> *)capsuleListView:(IDECapsuleListView *)arg1 viewControllerForRow:(long long)arg2;
- (long long)numberOfObjectsInCapsuleListView:(IDECapsuleListView *)arg1;

@optional
- (void)capsuleListViewDidCompleteLayout:(IDECapsuleListView *)arg1;
- (void)capsuleListView:(IDECapsuleListView *)arg1 didExpandRow:(long long)arg2;
- (void)capsuleListView:(IDECapsuleListView *)arg1 didCollapseRow:(long long)arg2;
- (NSArray *)capsuleListView:(IDECapsuleListView *)arg1 pastboardTypesForRowWithIndex:(unsigned long long)arg2;
- (unsigned long long)capsuleListView:(IDECapsuleListView *)arg1 validateDrop:(id <NSDraggingInfo>)arg2 proposedRow:(long long)arg3;
- (BOOL)capsuleListView:(IDECapsuleListView *)arg1 acceptDrop:(id <NSDraggingInfo>)arg2 row:(long long)arg3;
@end

@protocol IDEComponentDownloadIconProvider <NSObject>
- (NSImage *)imageForDownloadableType:(NSString *)arg1;
@end

@protocol IDEInitialization
+ (BOOL)ide_initializeWithOptions:(int)arg1 error:(id *)arg2;
@end

@protocol IDEPlatformSpecificIntegrityLogDataSource <NSObject>
- (void)analyzeModelIntegrityForBlueprintSnapshot:(id <IDEBlueprintModelSnapshot>)arg1 forConfiguration:(NSString *)arg2 usingRecorder:(IDEActivityLogSectionRecorder *)arg3;
@end

@protocol IDEiOSImageSectionDelegate
- (NSString *)deploymentOS;
- (BOOL)iPadTargeted;
- (BOOL)iPhoneTargeted;
- (BOOL)statusBarHiddenForImageSection:(IDEiOSImageSection *)arg1;
- (NSString *)imageSection:(IDEiOSImageSection *)arg1 expandedValueForString:(NSString *)arg2;
- (NSDictionary *)iconFilePathSetsByIconBaseNameForImageSection:(IDEiOSImageSection *)arg1;
- (id <IDEInfoPlistCoordination>)infoPlistCoordinatorForImageSection:(IDEiOSImageSection *)arg1;
@end

@protocol NSControlTextEditingDelegate <NSObject>

@optional
- (NSArray *)control:(NSControl *)arg1 textView:(NSTextView *)arg2 completions:(NSArray *)arg3 forPartialWordRange:(struct _NSRange)arg4 indexOfSelectedItem:(long long *)arg5;
- (BOOL)control:(NSControl *)arg1 textView:(NSTextView *)arg2 doCommandBySelector:(SEL)arg3;
- (BOOL)control:(NSControl *)arg1 isValidObject:(id)arg2;
- (void)control:(NSControl *)arg1 didFailToValidatePartialString:(NSString *)arg2 errorDescription:(NSString *)arg3;
- (BOOL)control:(NSControl *)arg1 didFailToFormatString:(NSString *)arg2 errorDescription:(NSString *)arg3;
- (BOOL)control:(NSControl *)arg1 textShouldEndEditing:(NSText *)arg2;
- (BOOL)control:(NSControl *)arg1 textShouldBeginEditing:(NSText *)arg2;
@end

@protocol NSDraggingSource <NSObject>
- (unsigned long long)draggingSession:(NSDraggingSession *)arg1 sourceOperationMaskForDraggingContext:(long long)arg2;

@optional
- (BOOL)ignoreModifierKeysForDraggingSession:(NSDraggingSession *)arg1;
- (void)draggingSession:(NSDraggingSession *)arg1 endedAtPoint:(struct CGPoint)arg2 operation:(unsigned long long)arg3;
- (void)draggingSession:(NSDraggingSession *)arg1 movedToPoint:(struct CGPoint)arg2;
- (void)draggingSession:(NSDraggingSession *)arg1 willBeginAtPoint:(struct CGPoint)arg2;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (BOOL)respondsToSelector:(SEL)arg1;
- (BOOL)conformsToProtocol:(Protocol *)arg1;
- (BOOL)isMemberOfClass:(Class)arg1;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (BOOL)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSTableViewDataSource <NSObject>

@optional
- (NSArray *)tableView:(NSTableView *)arg1 namesOfPromisedFilesDroppedAtDestination:(NSURL *)arg2 forDraggedRowsWithIndexes:(NSIndexSet *)arg3;
- (BOOL)tableView:(NSTableView *)arg1 acceptDrop:(id <NSDraggingInfo>)arg2 row:(long long)arg3 dropOperation:(unsigned long long)arg4;
- (unsigned long long)tableView:(NSTableView *)arg1 validateDrop:(id <NSDraggingInfo>)arg2 proposedRow:(long long)arg3 proposedDropOperation:(unsigned long long)arg4;
- (BOOL)tableView:(NSTableView *)arg1 writeRowsWithIndexes:(NSIndexSet *)arg2 toPasteboard:(NSPasteboard *)arg3;
- (void)tableView:(NSTableView *)arg1 updateDraggingItemsForDrag:(id <NSDraggingInfo>)arg2;
- (void)tableView:(NSTableView *)arg1 draggingSession:(NSDraggingSession *)arg2 endedAtPoint:(struct CGPoint)arg3 operation:(unsigned long long)arg4;
- (void)tableView:(NSTableView *)arg1 draggingSession:(NSDraggingSession *)arg2 willBeginAtPoint:(struct CGPoint)arg3 forRowIndexes:(NSIndexSet *)arg4;
- (id <NSPasteboardWriting>)tableView:(NSTableView *)arg1 pasteboardWriterForRow:(long long)arg2;
- (void)tableView:(NSTableView *)arg1 sortDescriptorsDidChange:(NSArray *)arg2;
- (void)tableView:(NSTableView *)arg1 setObjectValue:(id)arg2 forTableColumn:(NSTableColumn *)arg3 row:(long long)arg4;
- (id)tableView:(NSTableView *)arg1 objectValueForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(NSTableView *)arg1;
@end

@protocol NSTableViewDelegate <NSControlTextEditingDelegate>

@optional
- (void)tableViewSelectionIsChanging:(NSNotification *)arg1;
- (void)tableViewColumnDidResize:(NSNotification *)arg1;
- (void)tableViewColumnDidMove:(NSNotification *)arg1;
- (void)tableViewSelectionDidChange:(NSNotification *)arg1;
- (NSArray *)tableView:(NSTableView *)arg1 rowActionsForRow:(long long)arg2 edge:(long long)arg3;
- (BOOL)tableView:(NSTableView *)arg1 shouldReorderColumn:(long long)arg2 toColumn:(long long)arg3;
- (double)tableView:(NSTableView *)arg1 sizeToFitWidthOfColumn:(long long)arg2;
- (BOOL)tableView:(NSTableView *)arg1 isGroupRow:(long long)arg2;
- (BOOL)tableView:(NSTableView *)arg1 shouldTypeSelectForEvent:(NSEvent *)arg2 withCurrentSearchString:(NSString *)arg3;
- (long long)tableView:(NSTableView *)arg1 nextTypeSelectMatchFromRow:(long long)arg2 toRow:(long long)arg3 forString:(NSString *)arg4;
- (NSString *)tableView:(NSTableView *)arg1 typeSelectStringForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (double)tableView:(NSTableView *)arg1 heightOfRow:(long long)arg2;
- (void)tableView:(NSTableView *)arg1 didDragTableColumn:(NSTableColumn *)arg2;
- (void)tableView:(NSTableView *)arg1 didClickTableColumn:(NSTableColumn *)arg2;
- (void)tableView:(NSTableView *)arg1 mouseDownInHeaderOfTableColumn:(NSTableColumn *)arg2;
- (BOOL)tableView:(NSTableView *)arg1 shouldSelectTableColumn:(NSTableColumn *)arg2;
- (NSIndexSet *)tableView:(NSTableView *)arg1 selectionIndexesForProposedSelection:(NSIndexSet *)arg2;
- (BOOL)tableView:(NSTableView *)arg1 shouldSelectRow:(long long)arg2;
- (BOOL)selectionShouldChangeInTableView:(NSTableView *)arg1;
- (NSCell *)tableView:(NSTableView *)arg1 dataCellForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (BOOL)tableView:(NSTableView *)arg1 shouldTrackCell:(NSCell *)arg2 forTableColumn:(NSTableColumn *)arg3 row:(long long)arg4;
- (BOOL)tableView:(NSTableView *)arg1 shouldShowCellExpansionForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (NSString *)tableView:(NSTableView *)arg1 toolTipForCell:(NSCell *)arg2 rect:(struct CGRect *)arg3 tableColumn:(NSTableColumn *)arg4 row:(long long)arg5 mouseLocation:(struct CGPoint)arg6;
- (BOOL)tableView:(NSTableView *)arg1 shouldEditTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (void)tableView:(NSTableView *)arg1 willDisplayCell:(id)arg2 forTableColumn:(NSTableColumn *)arg3 row:(long long)arg4;
- (void)tableView:(NSTableView *)arg1 didRemoveRowView:(NSTableRowView *)arg2 forRow:(long long)arg3;
- (void)tableView:(NSTableView *)arg1 didAddRowView:(NSTableRowView *)arg2 forRow:(long long)arg3;
- (NSTableRowView *)tableView:(NSTableView *)arg1 rowViewForRow:(long long)arg2;
- (NSView *)tableView:(NSTableView *)arg1 viewForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
@end

@protocol Xcode3TargetEditorImageModel <NSObject>
- (DVTVersion *)minimumOSVersion;
- (NSString *)nameSuffix;
- (int)imageType;
- (DVTFilePath *)imageFilePath;
- (struct CGSize)imageSize;
- (NSString *)orientation;
- (NSString *)device;
- (NSString *)scale;
@end

@protocol __ARCLiteIndexedSubscripting__
- (void)setObject:(id)arg1 atIndexedSubscript:(unsigned long long)arg2;
- (id)objectAtIndexedSubscript:(unsigned long long)arg1;
@end

@protocol __ARCLiteKeyedSubscripting__
- (void)setObject:(id)arg1 forKeyedSubscript:(id)arg2;
- (id)objectForKeyedSubscript:(id)arg1;
@end

@interface CIImage (IDEImageComparisonExtensions)
- (id)compareWithImages:(id)arg1 tolerance:(double)arg2 size:(struct CGSize)arg3;
@end

@interface DTDKCrashLog (FontWorkaround6773190)
- (id)crashLogFont;
@end

@interface DTDKCrashLog (IDEiPhoneOrganizerCrashLogViewController)
- (BOOL)canExport;
@end

@interface DVTAskForDeviceAppAlert : NSAlert
{
    NSString *_selectedApp;
    DVTiOSDevice *_device;
    NSPopUpButton *_popup;
}

+ (id)alertForDevice:(id)arg1;
@property(retain) NSPopUpButton *popup; // @synthesize popup=_popup;
@property(retain) DVTiOSDevice *device; // @synthesize device=_device;
@property(copy) NSString *selectedApp; // @synthesize selectedApp=_selectedApp;
- (void).cxx_destruct;
- (void)_menuAction:(id)arg1;
- (void)layout;

// Remaining properties
@property(retain) NSView *accessoryView; // @dynamic accessoryView;

@end

@interface DVTProxiediOSDevice (IDEiOSSupportUI) <DVTBasicDeviceUI>
+ (id)keyPathsForValuesAffectingDeviceSummaryPropertyDictionaries;
+ (id)keyPathsForValuesAffectingImage;
@property(readonly) BOOL showCompanionUI;
@property(readonly) NSArray *deviceSummaryPropertyDictionaries;
@property(readonly) int deviceWindowCategory;
@property(readonly) NSImage *image;

// Remaining properties
@property(readonly, getter=isAvailable) BOOL available;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) _Bool deviceIsBusy;
@property(readonly) unsigned long long hash;
@property(readonly, copy) NSString *identifier;
@property(readonly) BOOL isProxiedDevice;
@property(readonly, copy, nonatomic) NSString *modelCode;
@property(readonly, copy, nonatomic) NSString *modelName;
@property(readonly, copy, nonatomic) NSString *modelUTI;
@property(readonly, copy) NSString *name;
@property(readonly, copy) NSString *nameForDeveloperPortal;
@property(readonly, copy) NSString *nativeArchitecture;
@property(readonly, copy) NSString *operatingSystemBuild;
@property(readonly, copy) NSString *operatingSystemVersion;
@property(readonly, copy, nonatomic) NSString *operatingSystemVersionWithBuildNumber;
@property(readonly) DVTPlatform *platform;
@property(readonly, copy) NSString *platformIdentifier;
@property(readonly, copy) NSString *processorDescription;
@property(readonly, copy) NSSet *proxiedDevices;
@property(readonly) Class superclass;
@property(readonly) BOOL supportsProvisioning;
@property(readonly) NSError *unavailabilityError;
@end

@interface DVTSimulatorProxyWrapper (IDEiOSSupportUI)
- (BOOL)showCompanionUI;
- (id)image;
- (id)deviceSummaryPropertyDictionaries;
@end

@interface DVTWatchSimulatorDeviceType : NSObject
{
    NSString *_name;
    SimDeviceType *_deviceType;
    SimRuntime *_runtime;
}

@property(readonly) SimRuntime *runtime; // @synthesize runtime=_runtime;
@property(readonly) SimDeviceType *deviceType; // @synthesize deviceType=_deviceType;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
- (id)initWithDeviceType:(id)arg1 runTime:(id)arg2;

@end

@interface DVTiOSDevice (DVTDevicesWindowInternalSummary)
+ (id)keyPathsForValuesAffectingDvtDevicesWindow_canTelnet;
+ (id)keyPathsForValuesAffectingDvtDevicesWindow_canSSH;
+ (id)keyPathsForValuesAffectingDeviceSummaryInternalPropertyDictionaries;
+ (id)keyPathsForValuesAffectingDvtDevicesWindow_rsyncPort;
+ (id)keyPathsForValuesAffectingDvtDevicesWindow_telnetPort;
+ (id)keyPathsForValuesAffectingDvtDevicesWindow_sshPort;
- (_Bool)dvtDevicesWindow_canTelnet;
- (_Bool)dvtDevicesWindow_canSSH;
@property(readonly) NSArray *deviceSummaryInternalPropertyDictionaries;
- (id)dvtDevicesWindow_rsyncPort;
- (id)dvtDevicesWindow_telnetPort;
- (id)dvtDevicesWindow_sshPort;
@end

@interface DVTiOSDevice (IDEiOSSupportUI) <DVTBasicDeviceUI>
+ (BOOL)installProvisioningProfilesOnHost:(id)arg1;
+ (BOOL)installProvisioningProfileOnHost:(id)arg1;
+ (void)installNewlyAddedProfiles;
+ (id)profilesToInstall;
+ (id)profilesToSelect;
+ (id)keyPathsForValuesAffectingDeviceSummaryPropertyDictionaries;
+ (id)keyPathsForValuesAffectingActivityImage;
+ (id)keyPathsForValuesAffectingImage;
+ (id)keyPathsForValuesAffectingIconImage;
+ (id)keyPathsForValuesAffectingStatusImage;
+ (void)userInterfacePresentBasicAlertWithMessageText:(id)arg1 informativeText:(id)arg2;
- (_Bool)_askForAlternateApplicationIfNeeded:(id *)arg1;
- (void)takeScreenshotWithCompletionBlock:(CDUnknownBlockType)arg1;
- (_Bool)canTakeScreenshot;
- (void)addToPortal:(id)arg1;
- (void)requestProcessInformationsOnPairedDevice:(BOOL)arg1 handler:(CDUnknownBlockType)arg2;
@property(readonly) NSArray *deviceSummaryPropertyDictionaries;
- (_Bool)supportsBatteryUpdateNotifications;
- (id)activityImage;
@property(readonly) NSImage *image;
- (id)iconImage;
- (id)statusImage;
- (BOOL)shouldApplicationTerminate;
- (void)userInterfacePresentAlertForNoRoutingCoverageFileAtPath:(id)arg1;

// Remaining properties
@property(readonly, getter=isAvailable) BOOL available;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) _Bool deviceIsBusy;
@property(readonly) int deviceWindowCategory;
@property(readonly) unsigned long long hash;
@property(readonly, copy) NSString *identifier;
@property(readonly) BOOL isProxiedDevice;
@property(readonly, copy, nonatomic) NSString *modelCode;
@property(readonly, copy, nonatomic) NSString *modelName;
@property(readonly, copy, nonatomic) NSString *modelUTI;
@property(readonly, copy) NSString *name;
@property(readonly, copy) NSString *nameForDeveloperPortal;
@property(readonly, copy) NSString *nativeArchitecture;
@property(readonly, copy) NSString *operatingSystemBuild;
@property(readonly, copy) NSString *operatingSystemVersion;
@property(readonly, copy, nonatomic) NSString *operatingSystemVersionWithBuildNumber;
@property(readonly) DVTPlatform *platform;
@property(readonly, copy) NSString *platformIdentifier;
@property(readonly, copy) NSString *processorDescription;
@property(readonly, copy) NSSet *proxiedDevices;
@property(readonly) BOOL showCompanionUI;
@property(readonly) Class superclass;
@property(readonly) BOOL supportsProvisioning;
@property(readonly) NSError *unavailabilityError;
@end

@interface DVTiOSDevicePlaceholder (IDEiOSSupportUI) <DVTBasicDeviceUI>
@property(readonly) NSImage *image;

// Remaining properties
@property(readonly, getter=isAvailable) BOOL available;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) _Bool deviceIsBusy;
@property(readonly) NSArray *deviceSummaryPropertyDictionaries;
@property(readonly) int deviceWindowCategory;
@property(readonly) unsigned long long hash;
@property(readonly, copy) NSString *identifier;
@property(readonly) BOOL isProxiedDevice;
@property(readonly, copy, nonatomic) NSString *modelCode;
@property(readonly, copy, nonatomic) NSString *modelName;
@property(readonly, copy, nonatomic) NSString *modelUTI;
@property(readonly, copy) NSString *name;
@property(readonly, copy) NSString *nameForDeveloperPortal;
@property(readonly, copy) NSString *nativeArchitecture;
@property(readonly, copy) NSString *operatingSystemBuild;
@property(readonly, copy) NSString *operatingSystemVersion;
@property(readonly, copy, nonatomic) NSString *operatingSystemVersionWithBuildNumber;
@property(readonly) DVTPlatform *platform;
@property(readonly, copy) NSString *platformIdentifier;
@property(readonly, copy) NSString *processorDescription;
@property(readonly, copy) NSSet *proxiedDevices;
@property(readonly) BOOL showCompanionUI;
@property(readonly) Class superclass;
@property(readonly) BOOL supportsProvisioning;
@property(readonly) NSError *unavailabilityError;
@end

@interface DVTiPhoneSubController : NSObject <DVTInvalidation>
{
    DVTAbstractiOSDevice *_device;
}

+ (id)keyPathsForValuesAffectingDeviceIdentifier;
+ (void)initialize;
@property(retain) DVTAbstractiOSDevice *device; // @synthesize device=_device;
- (void).cxx_destruct;
@property(readonly) NSString *deviceIdentifier;
- (void)primitiveInvalidate;
- (id)init;
- (id)initWithDevice:(id)arg1;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface DVTiPhoneCrashLogController : DVTiPhoneSubController
{
    DVTObservingToken *statusToken;
}

+ (id)keyPathsForValuesAffectingCrashLogs;
+ (id)keyPathsForValuesAffectingCrashLogPredicate;
- (void).cxx_destruct;
- (id)crashLogs;
- (id)crashLogPredicate;
- (void)checkDeviceForLogs:(id)arg1;
- (id)statusMessage;
- (void)primitiveInvalidate;
- (id)initWithDevice:(id)arg1;

@end

@interface DVTiPhoneInternalSummarySliceViewController : DVTDeviceSummarySliceViewController <DVTTableViewDelegate, NSTableViewDataSource>
{
    NSArray *_deviceInfo;
    DVTObservingToken *_deviceInfoToken;
    DVTBorderedView *_tableHeaderLine;
    NSBox *_separator;
    DVTTableView *_table;
}

@property(retain) DVTTableView *table; // @synthesize table=_table;
@property(retain) NSBox *separator; // @synthesize separator=_separator;
@property(retain) DVTBorderedView *tableHeaderLine; // @synthesize tableHeaderLine=_tableHeaderLine;
- (void).cxx_destruct;
- (void)sshDeviceAsRoot:(id)arg1;
- (void)sshDeviceAsMobile:(id)arg1;
- (void)telnetDeviceAsRoot:(id)arg1;
- (void)telnetDeviceAsMobile:(id)arg1;
- (void)connectUsingSSH:(_Bool)arg1 asUser:(id)arg2;
- (id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)primitiveInvalidate;
- (void)loadView;
- (id)iOSDevice;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DVTiPhoneProcessInformation : DVTProcessInformation
{
}

+ (id)_activeWorkspace;
+ (id)_existingExecutableURLForAppName:(id)arg1;
+ (void)requestCurrentProcessInformationsForDevice:(id)arg1 usePairedDevice:(BOOL)arg2 resultHandler:(CDUnknownBlockType)arg3;
- (id)_initFromDictionary:(id)arg1 fileURL:(id)arg2 architecture:(id)arg3;

@end

@interface DVTiPhoneScreenshotController : DVTiPhoneSubController
{
    NSMutableDictionary *_requestDict;
    void *_connection;
    BOOL transferSuccess;
}

+ (id)keyPathsForValuesAffectingScreenshots;
- (void).cxx_destruct;
- (id)initWithDevice:(id)arg1;
- (void)addCapturedScreenshot:(id)arg1;
- (void)sendFileError:(id)arg1;
- (void)sendFileDone:(id)arg1;
- (void)connectionLost:(id)arg1;
- (void)connectionFailed:(id)arg1;
- (void)requestScreenshot;
- (_Bool)canTakeScreenshot;
- (void)_connectToDevice;
- (void *)getDefaultConnection;
- (struct __CFDictionary *)requestDict;
- (void)primitiveInvalidate;
- (void)closeConnection;
- (void)setStatusText:(id)arg1;
- (void)setScreenshotPending:(BOOL)arg1;
- (id)screenshots;
- (id)globalController;

@end

@interface DVTiPhoneSimulator (IDEiOSSupportUI)
- (id)deviceSummaryPropertyDictionaries;
- (void)_updateIconForPath:(id)arg1 launchSession:(id)arg2;
- (id)_iconForApp:(id)arg1;
- (BOOL)showCompanionUI;
- (int)deviceWindowCategory;
- (id)dvt_proxiedDeviceImage;
- (id)image;
@end

@interface DVTiPhoneSimulatorCreationWindowController : DVTPagingSheetWindowController
{
    DVTObservingToken *_selectedDeviceTypeToken;
    NSArray *_deviceTypes;
    NSArrayController *_deviceTypesArrayController;
    NSPopUpButton *_runtimesPopUpButton;
    NSTextField *_appleWatchLabel;
    NSPopUpButton *_appleWatchPopUpButton;
    NSArray *_watchDeviceTypes;
    DVTWatchSimulatorDeviceType *_selectedWatchDeviceType;
    DVTBorderedView *_borderedView;
    NSTextField *_simulatorNameField;
    NSArray *_supportedSimRuntimes;
    SimRuntime *_selectedRuntime;
}

+ (id)keyPathsForValuesAffectingAppleWatchLabelColor;
+ (id)keyPathsForValuesAffectingShouldEnableWatchPopUp;
+ (id)keyPathsForValuesAffectingSelectedDeviceType;
+ (unsigned long long)assertionBehaviorForKeyValueObservationsAtEndOfEvent;
@property(retain) SimRuntime *selectedRuntime; // @synthesize selectedRuntime=_selectedRuntime;
@property(copy) NSArray *supportedSimRuntimes; // @synthesize supportedSimRuntimes=_supportedSimRuntimes;
@property(retain) NSTextField *simulatorNameField; // @synthesize simulatorNameField=_simulatorNameField;
@property(retain) DVTBorderedView *borderedView; // @synthesize borderedView=_borderedView;
@property(retain) DVTWatchSimulatorDeviceType *selectedWatchDeviceType; // @synthesize selectedWatchDeviceType=_selectedWatchDeviceType;
@property(copy) NSArray *watchDeviceTypes; // @synthesize watchDeviceTypes=_watchDeviceTypes;
@property(retain) NSPopUpButton *appleWatchPopUpButton; // @synthesize appleWatchPopUpButton=_appleWatchPopUpButton;
@property(retain) NSTextField *appleWatchLabel; // @synthesize appleWatchLabel=_appleWatchLabel;
@property(retain) NSPopUpButton *runtimesPopUpButton; // @synthesize runtimesPopUpButton=_runtimesPopUpButton;
@property(retain) NSArrayController *deviceTypesArrayController; // @synthesize deviceTypesArrayController=_deviceTypesArrayController;
@property(retain) NSArray *deviceTypes; // @synthesize deviceTypes=_deviceTypes;
- (void).cxx_destruct;
- (void)_determineSupportedSimRuntimes;
- (void)changedSelectedDeviceType;
@property(readonly, nonatomic) NSColor *appleWatchLabelColor;
@property(readonly, nonatomic) BOOL shouldEnableWatchPopUp;
- (id)selectedDeviceType;
- (void)primitiveInvalidate;
- (void)selectRuntime:(id)arg1;
- (void)cancel:(id)arg1;
- (void)create:(id)arg1;
- (void)windowDidLoad;
- (id)init;

@end

@interface DVTiPhoneSimulatorLocator (IDEiOSSupportUI)
- (void)_presentSimValidationError:(id)arg1;
@end

@interface DVTiPhoneSimulatorLocator (UIAdditions)
- (void)beginDeviceCreationAssistantWithWindow:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (BOOL)canCreateDevices;
@end

@interface DVTiPhoneSummaryViewController : DVTDeviceSummaryViewController
{
}

+ (id)keyPathsForValuesAffectingShowApplicationList;
- (Class)deviceLogsViewControllerClass;
- (id)additionalSliceViewControllerClasses;
- (BOOL)showApplicationList;

@end

@interface IDEComplicationsConfigurationViewController : IDETargetEditorSectionViewController
{
    NSPopUpButton *_complicationsAssetCatalogPopUpButton;
    DVTGradientImageButton *_assetCatalogGoToButton;
    IDEiOSTargetEditor *_targetEditor;
    Xcode3TargetEditor *_innerTargetEditor;
    DVTObservingToken *_innerTargetEditorObserver;
    Xcode3InfoEditorClassNamesConformingToProtocolProvider *_conformingProtocolProvider;
}

+ (id)keyPathsForValuesAffectingComplicationsController;
+ (id)keyPathsForValuesAffectingComplicationsFamilyCircularSmall;
+ (id)keyPathsForValuesAffectingComplicationsFamilyUtilitarianLarge;
+ (id)keyPathsForValuesAffectingComplicationsFamilyUtilitarianSmall;
+ (id)keyPathsForValuesAffectingComplicationsFamilyModularLarge;
+ (id)keyPathsForValuesAffectingComplicationsFamilyModularSmall;
@property(retain) Xcode3InfoEditorClassNamesConformingToProtocolProvider *conformingProtocolProvider; // @synthesize conformingProtocolProvider=_conformingProtocolProvider;
@property(retain) DVTObservingToken *innerTargetEditorObserver; // @synthesize innerTargetEditorObserver=_innerTargetEditorObserver;
@property(retain) Xcode3TargetEditor *innerTargetEditor; // @synthesize innerTargetEditor=_innerTargetEditor;
@property(retain, nonatomic) IDEiOSTargetEditor *targetEditor; // @synthesize targetEditor=_targetEditor;
@property __weak DVTGradientImageButton *assetCatalogGoToButton; // @synthesize assetCatalogGoToButton=_assetCatalogGoToButton;
@property __weak NSPopUpButton *complicationsAssetCatalogPopUpButton; // @synthesize complicationsAssetCatalogPopUpButton=_complicationsAssetCatalogPopUpButton;
- (void).cxx_destruct;
- (void)primitiveInvalidate;
- (id)titleForDisplay;
- (void)selectAssetCatalogSet:(id)arg1;
- (void)refreshAssetCatalogPopUpButton;
- (void)goToAssetCatalogSet:(id)arg1;
- (id)classesConformingToProtocol;
- (id)complicationsController;
- (void)setComplicationsController:(id)arg1;
- (BOOL)complicationsFamilyCircularSmall;
- (void)setComplicationsFamilyCircularSmall:(BOOL)arg1;
- (BOOL)complicationsFamilyUtilitarianLarge;
- (void)setComplicationsFamilyUtilitarianLarge:(BOOL)arg1;
- (BOOL)complicationsFamilyUtilitarianSmall;
- (void)setComplicationsFamilyUtilitarianSmall:(BOOL)arg1;
- (BOOL)complicationsFamilyModularLarge;
- (void)setComplicationsFamilyModularLarge:(BOOL)arg1;
- (BOOL)complicationsFamilyModularSmall;
- (void)setComplicationsFamilyModularSmall:(BOOL)arg1;
- (BOOL)_complicationsFamiliesArrayContainsFamilyKeyNamed:(id)arg1;
- (void)_setComplicationsArrayWithFamilyKeyNamed:(id)arg1 includeKey:(BOOL)arg2;
- (id)_complicationsFamiliesArray;
- (void)viewDidLoad;
- (id)initWithTargetEditor:(id)arg1;

@end

@interface IDECrashLogUpgrader : NSObject <IDEInitialization>
{
}

+ (BOOL)ide_initializeWithOptions:(int)arg1 error:(id *)arg2;

@end

@interface IDEDebugServerExtensionTransformer : NSValueTransformer
{
}

+ (Class)transformedValueClass;
- (id)transformedValue:(id)arg1;

@end

@interface IDESimulatorDisplayScaleOptionController : IDELaunchActionOptionViewController
{
}

+ (BOOL)availableForScheme:(id)arg1;

@end

@interface IDEiOSIconsAndLaunchImagesViewController : IDEViewController <IDEiOSImageSectionDelegate>
{
    NSArray *_imageSections;
    IDEiOSTargetEditor *_targetEditor;
    DVTStackView_ML *_contentStackView;
    NSView *_convertAssetCatalogSlice;
    NSView *_assetCatalogSlice;
    NSPopUpButton *_assetCatalogPopUpButton;
    DVTGradientImageButton *_assetCatalogGoToButton;
    NSArray *_assetCatalogWrappers;
}

+ (id)keyPathsForValuesAffectingImageTypeString;
@property(readonly) NSArray *assetCatalogWrappers; // @synthesize assetCatalogWrappers=_assetCatalogWrappers;
@property(retain) DVTGradientImageButton *assetCatalogGoToButton; // @synthesize assetCatalogGoToButton=_assetCatalogGoToButton;
@property(retain) NSPopUpButton *assetCatalogPopUpButton; // @synthesize assetCatalogPopUpButton=_assetCatalogPopUpButton;
@property(retain) NSView *assetCatalogSlice; // @synthesize assetCatalogSlice=_assetCatalogSlice;
@property(retain) NSView *convertAssetCatalogSlice; // @synthesize convertAssetCatalogSlice=_convertAssetCatalogSlice;
@property(retain) DVTStackView_ML *contentStackView; // @synthesize contentStackView=_contentStackView;
@property(readonly) IDEiOSTargetEditor *targetEditor; // @synthesize targetEditor=_targetEditor;
@property(retain, nonatomic) NSArray *imageSections; // @synthesize imageSections=_imageSections;
- (void).cxx_destruct;
- (id)_contentStackCenteringView;
- (id)deploymentOS;
- (id)imageSection:(id)arg1 expandedValueForString:(id)arg2;
- (BOOL)statusBarHiddenForImageSection:(id)arg1;
- (id)iconFilePathSetsByIconBaseNameForImageSection:(id)arg1;
- (id)infoPlistCoordinatorForImageSection:(id)arg1;
- (BOOL)iPadTargeted;
- (BOOL)iPhoneTargeted;
@property(readonly) NSString *imageTypeString;
@property(readonly) int targetEditorImageType;
- (void)rebuildUI;
- (void)rebuildAssetCatalogMenu;
- (void)removeExistingPlistKeys;
- (void)goToAssetCatalog:(id)arg1;
- (void)selectAssetCatalogSet:(id)arg1;
- (void)convertToAssetCatalog:(id)arg1;
- (void)completeAssetCatalogMigration;
- (void)loadView;
- (id)initWithTargetEditor:(id)arg1;
- (void)primitiveInvalidate;

@end

@interface IDEiOSImageRow : NSObject <DVTInvalidation, Xcode3TargetEditorImageModel>
{
    BOOL _hidden;
    BOOL _foundCandidateImageFileWithWrongSize;
    int _sectionType;
    NSString *_title;
    NSString *_device;
    NSString *_subtitle;
    DVTFilePath *_imageFilePath;
    NSString *_tooltip;
    DVTVersion *_minimumOSVersion;
    DVTVersion *_maximumDeploymentOS;
    NSString *_nameSuffix;
    NSArray *_alternateNameSuffixes;
    NSString *_scale;
    NSString *_orientation;
    struct CGSize _imageSize;
    struct CGSize _statusBarHiddenImageSize;
}

+ (void)initialize;
+ (id)keyPathsForValuesAffectingStatusMessage;
+ (id)keyPathsForValuesAffectingStatusImage;
+ (id)rowForDictionary:(id)arg1 withSectionType:(int)arg2;
@property BOOL foundCandidateImageFileWithWrongSize; // @synthesize foundCandidateImageFileWithWrongSize=_foundCandidateImageFileWithWrongSize;
@property(copy, nonatomic) NSString *orientation; // @synthesize orientation=_orientation;
@property(nonatomic) int sectionType; // @synthesize sectionType=_sectionType;
@property(copy, nonatomic) NSString *scale; // @synthesize scale=_scale;
@property(nonatomic, getter=isHidden) BOOL hidden; // @synthesize hidden=_hidden;
@property(nonatomic) struct CGSize statusBarHiddenImageSize; // @synthesize statusBarHiddenImageSize=_statusBarHiddenImageSize;
@property(nonatomic) struct CGSize imageSize; // @synthesize imageSize=_imageSize;
@property(copy, nonatomic) NSArray *alternateNameSuffixes; // @synthesize alternateNameSuffixes=_alternateNameSuffixes;
@property(copy, nonatomic) NSString *nameSuffix; // @synthesize nameSuffix=_nameSuffix;
@property(copy, nonatomic) DVTVersion *maximumDeploymentOS; // @synthesize maximumDeploymentOS=_maximumDeploymentOS;
@property(copy, nonatomic) DVTVersion *minimumOSVersion; // @synthesize minimumOSVersion=_minimumOSVersion;
@property(copy, nonatomic) NSString *tooltip; // @synthesize tooltip=_tooltip;
@property(retain, nonatomic) DVTFilePath *imageFilePath; // @synthesize imageFilePath=_imageFilePath;
@property(copy, nonatomic) NSString *subtitle; // @synthesize subtitle=_subtitle;
@property(copy, nonatomic) NSString *device; // @synthesize device=_device;
@property(copy, nonatomic) NSString *title; // @synthesize title=_title;
- (void).cxx_destruct;
- (void)primitiveInvalidate;
@property(readonly, nonatomic) struct CGSize imageSizeInPoints;
- (int)imageType;
@property(readonly, copy, nonatomic) NSString *statusMessage;
@property(readonly, nonatomic) NSImage *statusImage;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEiOSImageSection : NSObject <DVTInvalidation>
{
    NSMutableDictionary *_plistAdaptersByDevice;
    int _adapterType;
    NSString *_title;
    NSString *_groupTitle;
    NSArray *_rows;
    id <IDEiOSImageSectionDelegate> _delegate;
}

+ (void)initialize;
+ (int)sectionTypeForGroupTitle:(id)arg1;
+ (id)warningImageIcon;
+ (id)sectionInfoFromURL:(id)arg1;
+ (id)sectionForDictionary:(id)arg1 groupTitle:(id)arg2;
@property __weak id <IDEiOSImageSectionDelegate> delegate; // @synthesize delegate=_delegate;
@property(copy, nonatomic) NSArray *rows; // @synthesize rows=_rows;
@property(copy, nonatomic) NSString *groupTitle; // @synthesize groupTitle=_groupTitle;
@property(copy, nonatomic) NSString *title; // @synthesize title=_title;
- (void).cxx_destruct;
- (void)primitiveInvalidate;
- (id)imageBaseNameForRow:(id)arg1;
- (BOOL)requiresBaseImageNameForRow:(id)arg1;
@property(readonly, copy, nonatomic) NSImage *image;
@property(nonatomic) long long applyShineEffect;
- (id)allPlistAdapters;
- (id)plistAdapterForDevice:(id)arg1;
@property(readonly) int adapterType; // @synthesize adapterType=_adapterType;
@property(readonly) int sectionType;
@property(readonly, nonatomic) BOOL supportsShine;
- (id)infoPlistCoordinator;
- (void)deleteImagesInPlist;
- (BOOL)isRowVisible:(id)arg1;
- (BOOL)hasVisibleRows;
- (id)visibleRows;
- (BOOL)isRowVisible:(id)arg1 iPhoneTargeted:(BOOL)arg2 iPadTargeted:(BOOL)arg3;
- (BOOL)hasVisibleRowsWithiPhoneTargeted:(BOOL)arg1 iPadTargeted:(BOOL)arg2;
- (void)addFilePathToInfoPlist:(id)arg1 forRow:(id)arg2;
- (void)refresh;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEiOSInfoPlistIconAdapter : NSObject
{
    NSString *_modifier;
    id <IDEInfoPlistCoordination> _coordinator;
}

+ (BOOL)testPresenceUsingInfoPlistCoordinator:(id)arg1 deviceModifier:(id)arg2;
+ (int)adapterType;
+ (Class)infoPlistValueClass;
+ (id)infoPlistKey;
+ (id)adapterUsingInfoPlistCoordinator:(id)arg1 deviceModifier:(id)arg2 type:(int)arg3 targetDeploymentOS:(id)arg4;
+ (id)_appIconAdapterSubclassesOrderedPreferentially;
@property(readonly) __weak id <IDEInfoPlistCoordination> coordinator; // @synthesize coordinator=_coordinator;
@property(readonly) NSString *modifier; // @synthesize modifier=_modifier;
- (void).cxx_destruct;
- (void)deleteImagesInPlist;
- (id)imageBaseNamesForRow:(id)arg1;
- (void)addImageBaseName:(id)arg1 forFilePath:(id)arg2 forRow:(id)arg3;
- (BOOL)requiresBaseImageNameForRow:(id)arg1;
- (void)setInfoPlistValue:(id)arg1;
- (id)infoPlistValue;
- (id)initWithInfoPlistCoordinator:(id)arg1 deviceModifier:(id)arg2;

// Remaining properties
@property BOOL applyShineEffect; // @dynamic applyShineEffect;

@end

@interface IDEiOSInfoPlistIconAdapter_CFBundleIconFile : IDEiOSInfoPlistIconAdapter
{
}

+ (int)adapterType;
+ (Class)infoPlistValueClass;
+ (id)infoPlistKey;
- (void)addImageBaseName:(id)arg1 forFilePath:(id)arg2 forRow:(id)arg3;
- (id)imageBaseNamesForRow:(id)arg1;
- (BOOL)requiresBaseImageNameForRow:(id)arg1;
- (void)setApplyShineEffect:(BOOL)arg1;
- (BOOL)applyShineEffect;

@end

@interface IDEiOSInfoPlistIconAdapter_CFBundleIconFiles : IDEiOSInfoPlistIconAdapter
{
}

+ (int)adapterType;
+ (Class)infoPlistValueClass;
+ (id)infoPlistKey;
- (void)addImageBaseName:(id)arg1 forFilePath:(id)arg2 forRow:(id)arg3;
- (id)imageBaseNamesForRow:(id)arg1;
- (void)setApplyShineEffect:(BOOL)arg1;
- (BOOL)applyShineEffect;

@end

@interface IDEiOSInfoPlistIconAdapter_CFBundleIcons : IDEiOSInfoPlistIconAdapter
{
}

+ (int)adapterType;
+ (Class)infoPlistValueClass;
+ (id)infoPlistKey;
- (void)deleteImagesInPlist;
- (void)addImageBaseName:(id)arg1 forFilePath:(id)arg2 forRow:(id)arg3;
- (id)imageBaseNamesForRow:(id)arg1;
- (void)setApplyShineEffect:(BOOL)arg1;
- (BOOL)applyShineEffect;
- (void)setPrimaryIconDictionary:(id)arg1;
- (id)primaryIconDictionary;
- (id)mutablePlistValue;
- (id)plistValue;

@end

@interface IDEiOSInfoPlistIconAdapter_UILaunchImageFile : IDEiOSInfoPlistIconAdapter
{
}

+ (int)adapterType;
+ (Class)infoPlistValueClass;
+ (id)infoPlistKey;
- (void)addImageBaseName:(id)arg1 forFilePath:(id)arg2 forRow:(id)arg3;
- (id)imageBaseNamesForRow:(id)arg1;
- (BOOL)requiresBaseImageNameForRow:(id)arg1;

@end

@interface IDEiOSInfoPlistIconAdapter_UILaunchImages : IDEiOSInfoPlistIconAdapter
{
}

+ (int)adapterType;
+ (Class)infoPlistValueClass;
+ (id)infoPlistKey;
- (id)_dictionaryForRow:(id)arg1;
- (void)addImageBaseName:(id)arg1 forFilePath:(id)arg2 forRow:(id)arg3;
- (id)imageBaseNamesForRow:(id)arg1;
- (BOOL)requiresBaseImageNameForRow:(id)arg1;

@end

@interface IDEiOSInfoPlistIconAdapter_UILaunchImagesUILaunchImageFileHybrid : IDEiOSInfoPlistIconAdapter
{
    IDEiOSInfoPlistIconAdapter_UILaunchImageFile *_legacyAdapter;
    IDEiOSInfoPlistIconAdapter_UILaunchImages *_modernAdapter;
}

+ (int)adapterType;
- (void).cxx_destruct;
- (void)deleteImagesInPlist;
- (id)imageBaseNamesForRow:(id)arg1;
- (void)addImageBaseName:(id)arg1 forFilePath:(id)arg2 forRow:(id)arg3;
- (BOOL)_disregardLegacyAdapterForModernRows;
- (BOOL)_rowIsModern:(id)arg1;
- (BOOL)requiresBaseImageNameForRow:(id)arg1;
- (id)initWithInfoPlistCoordinator:(id)arg1 deviceModifier:(id)arg2;

@end

@interface IDEiOSIntegrityLogDataSource : NSObject <IDEPlatformSpecificIntegrityLogDataSource>
{
}

- (void)analyzeModelIntegrityForBlueprintSnapshot:(id)arg1 forConfiguration:(id)arg2 usingRecorder:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEiOSTargetEditor : IDEViewController <DVTInfoPlistValueCellDelegate, IDECapsuleListViewDataSource>
{
    DVTChoice *_selectedDeviceTab;
    NSArray *_imageSections;
    IDECapsuleListView *_capsuleList;
    NSView *_codesigningSettingsView;
    IDECodesigningSettingsViewController *_codesigningSettingsViewController;
    NSView *_identityFields;
    NSTextField *_displayNameField;
    NSTextField *_displayNameLabel;
    NSPopUpButton *_targetDevicePopup;
    NSComboBox *_deploymentOSCombo;
    NSTextField *_targetIdentifierField;
    IDEViewController<IDECapsuleViewController> *_identityViewController;
    IDEViewController<IDECapsuleViewController> *_standardDeploymentInfoViewController;
    IDEViewController<IDECapsuleViewController> *_imageViewController;
    IDEViewController *_complicationsConfigurationViewController;
    DVTStackView_ML *_deploymentInfoStackView;
    NSBox *_universalSeparatorLine1;
    NSBox *_universalSeparatorLine2;
    NSView *_deploymentInfoDeviceFamilyView;
    NSView *_deploymentInfoDevicePickerView;
    NSView *_deploymentInfoUniversalEndcap;
    NSView *_deploymentInfoiPhoneView;
    NSView *_deploymentInfoiPadView;
    NSView *_deploymentInfoAppExtensionView;
    DVTStackView_ML *_identityStack;
    DVTStackView_ML *_deploymentTargetDeviceFamilyStack;
    NSView *_deploymentTargetDeviceFamilyStack_deploymentTarget;
    NSView *_deploymentTargetDeviceFamilyStack_deviceFamily;
    DVTStackView_ML *_iPhoneDeploymentInfoStack;
    NSView *_iPhoneDeploymentInfoStack_mainInterface;
    NSView *_iPhoneDeploymentInfoStack_deviceOrientation;
    NSView *_iPhoneDeploymentInfoStack_statusBarStyle;
    NSView *_iPhoneDeploymentInfoStack_statusBarHiding;
    NSView *_iPhoneDeploymentInfoStack_requireFullScreen;
    NSView *_iPhoneDeploymentInfoStack_spacer;
    IDEViewController<IDECapsuleViewController> *_frameworksViewController;
    IDEViewController<IDECapsuleViewController> *_embeddedBinariesViewController;
    NSView *_chooseInfoPListView;
    NSButton *_chooseInfoPlistButton;
    NSTextField *_chooseInfoPlistLabel;
    NSView *_originalIdentityContentView;
    NSMutableArray *_subviewControllers;
    IDEiOSIconsAndLaunchImagesViewController *_iconsViewController;
    IDEiOSIconsAndLaunchImagesViewController *_launchImagesViewController;
    Xcode3CodesignTroubleshootingViewController *_codesignTroubleController;
    BOOL _iPhoneStatusBarTintingAvailable;
    BOOL _iPhoneStatusBarTintingCustom;
    BOOL _iPhoneStatusBarTintingShowImage;
    BOOL _extensionWantsAppIconsAndLaunchImages;
    BOOL _subviewControllersNeedsRefresh;
    Xcode3TargetEditor *_targetViewController;
    NSDictionary *_iconFilePathSetsByIconBaseName;
    NSArray *_targetIconFiles;
    NSString *_iPhoneStatusBarTintingStyle;
    NSColor *_iPhoneStatusBarTintingColor;
    NSString *_iPhoneStatusBarTintingImage;
    unsigned long long _selectedDeploymentInfoDeviceFamily;
    DVTStackView_ML *_imageStack;
    NSButton *_iPhoneDeploymentInfoButton;
    NSButton *_iPadDeploymentInfoButton;
    NSView *_appExtensionAPISlice;
    NSBox *_appExtensionAPISliceSeparator;
    NSBox *_appExtensionSliceSeparator;
    NSView *_targetLaunchScreenFileSlice;
    IDETargetEditorSectionViewController *_extensionDeploymentSectionViewController;
}

+ (id)keyPathsForValuesAffectingTargetIdentifier;
+ (BOOL)isPrimaFacieValidVersionString:(id)arg1;
+ (id)keyPathsForValuesAffectingIPadStatusBarHidden;
+ (id)keyPathsForValuesAffectingIPhoneStatusBarHidden;
+ (id)keyPathsForValuesAffectingRequiresFullScreen;
+ (id)keyPathsForValuesAffectingIPhoneStatusBarStyle;
+ (id)duplicateTarget:(id)arg1 withTargetController:(Class)arg2 handler:(CDUnknownBlockType)arg3;
+ (id)keyPathsForValuesAffectingSelectedDeviceTabs;
+ (id)defaultViewNibBundle;
+ (id)defaultViewNibName;
@property BOOL subviewControllersNeedsRefresh; // @synthesize subviewControllersNeedsRefresh=_subviewControllersNeedsRefresh;
@property(retain) IDETargetEditorSectionViewController *extensionDeploymentSectionViewController; // @synthesize extensionDeploymentSectionViewController=_extensionDeploymentSectionViewController;
@property BOOL extensionWantsAppIconsAndLaunchImages; // @synthesize extensionWantsAppIconsAndLaunchImages=_extensionWantsAppIconsAndLaunchImages;
@property(retain) NSView *targetLaunchScreenFileSlice; // @synthesize targetLaunchScreenFileSlice=_targetLaunchScreenFileSlice;
@property(retain) NSBox *appExtensionSliceSeparator; // @synthesize appExtensionSliceSeparator=_appExtensionSliceSeparator;
@property(retain) NSBox *appExtensionAPISliceSeparator; // @synthesize appExtensionAPISliceSeparator=_appExtensionAPISliceSeparator;
@property(retain) NSView *appExtensionAPISlice; // @synthesize appExtensionAPISlice=_appExtensionAPISlice;
@property(retain, nonatomic) NSButton *iPadDeploymentInfoButton; // @synthesize iPadDeploymentInfoButton=_iPadDeploymentInfoButton;
@property(retain, nonatomic) NSButton *iPhoneDeploymentInfoButton; // @synthesize iPhoneDeploymentInfoButton=_iPhoneDeploymentInfoButton;
@property(retain) DVTStackView_ML *imageStack; // @synthesize imageStack=_imageStack;
@property(nonatomic) unsigned long long selectedDeploymentInfoDeviceFamily; // @synthesize selectedDeploymentInfoDeviceFamily=_selectedDeploymentInfoDeviceFamily;
@property(copy) NSString *iPhoneStatusBarTintingImage; // @synthesize iPhoneStatusBarTintingImage=_iPhoneStatusBarTintingImage;
@property(copy) NSColor *iPhoneStatusBarTintingColor; // @synthesize iPhoneStatusBarTintingColor=_iPhoneStatusBarTintingColor;
@property(copy) NSString *iPhoneStatusBarTintingStyle; // @synthesize iPhoneStatusBarTintingStyle=_iPhoneStatusBarTintingStyle;
@property(nonatomic) BOOL iPhoneStatusBarTintingShowImage; // @synthesize iPhoneStatusBarTintingShowImage=_iPhoneStatusBarTintingShowImage;
@property(nonatomic) BOOL iPhoneStatusBarTintingCustom; // @synthesize iPhoneStatusBarTintingCustom=_iPhoneStatusBarTintingCustom;
@property(readonly) BOOL iPhoneStatusBarTintingAvailable; // @synthesize iPhoneStatusBarTintingAvailable=_iPhoneStatusBarTintingAvailable;
@property(copy) NSArray *targetIconFiles; // @synthesize targetIconFiles=_targetIconFiles;
@property(retain, nonatomic) NSDictionary *iconFilePathSetsByIconBaseName; // @synthesize iconFilePathSetsByIconBaseName=_iconFilePathSetsByIconBaseName;
@property(retain, nonatomic) Xcode3TargetEditor *targetViewController; // @synthesize targetViewController=_targetViewController;
- (void).cxx_destruct;
- (id)capsuleListView:(id)arg1 viewControllerForRow:(long long)arg2;
- (long long)numberOfObjectsInCapsuleListView:(id)arg1;
- (id)infoPlistValueCell:(id)arg1 expandedValueForString:(id)arg2;
- (void)refreshAppIconsAndLaunchImages;
- (BOOL)_shouldShowLaunchImages;
- (BOOL)_shouldShowAppIcons;
- (void)convertToAssetCatalogFromIconsAndLaunchImagesViewController:(id)arg1;
- (void)showLaunchImageAlertForImageName:(id)arg1;
- (void)deploymentOSChanged:(id)arg1;
@property(readonly) id headerFont;
@property(copy) NSArray *targetIPadOrientations;
@property(copy) NSArray *targetIPhoneOrientations;
@property(readonly) BOOL supportsDeviceOrientations;
@property(copy) NSString *targetLaunchScreenFile;
@property(copy) NSString *targetAppExtensionInterface;
@property(copy) NSString *targetiPadInterface;
@property(copy) NSString *targetiPhoneInterface;
- (void)_setInterfaceFileName:(id)arg1 forInterfaceKeysWithDeviceExtension:(id)arg2;
- (id)_targetIPadNib;
- (id)_targetIPadStoryboard;
- (id)_targetIPhoneNib;
- (id)_targetIPhoneStoryboard;
- (void)setTargetBuildVersion:(id)arg1;
- (id)targetBuildVersion;
@property(copy) NSString *targetVersion;
@property(copy) NSString *targetIdentifier;
@property BOOL allowAppExtensionAPIOnly;
- (void)setTargetDisplayName:(id)arg1;
@property(copy) NSString *targetDeploymentOS;
- (id)targetDisplayName;
@property(copy) NSString *targetDevice;
@property BOOL iPadStatusBarHidden;
@property BOOL iPhoneStatusBarHidden;
@property(nonatomic) BOOL requiresFullScreen;
- (BOOL)supportsRequireFullScreen;
@property(readonly) BOOL supportsUIStatusBarHidden;
@property(copy) NSString *iPhoneStatusBarStyle;
@property(readonly) BOOL supportsUIStatusBarStyle;
- (void)pickInfoPlistFile:(id)arg1;
- (id)deploymentOSVersions;
@property BOOL iPadLandscape2;
@property BOOL iPadPortrait2;
@property BOOL iPadLandscape;
@property BOOL iPadPortrait;
@property BOOL iPhoneLandscape2;
@property BOOL iPhonePortrait2;
@property BOOL iPhoneLandscape;
@property BOOL iPhonePortrait;
- (void)_updateIdentityStackView;
- (void)_updateDeploymentInfoStackView;
- (void)targetDeviceChanged:(id)arg1;
- (void)removeOrientation:(id)arg1 forDevice:(id)arg2;
- (void)setOrientation:(id)arg1 forDevice:(id)arg2;
- (void)viewWillUninstall;
- (void)primitiveInvalidate;
- (void)loadView;
- (id)xcode3Target;
- (id)subviewControllers;
@property(readonly) BOOL iPadTargeted;
@property(readonly) BOOL iPhoneTargeted;
@property(readonly) BOOL supportsBrandAssetsForAppIcon;
@property(readonly) BOOL supportsTargetDeviceFamily;
- (void)selectiPadDeploymentInfo:(id)arg1;
- (void)selectiPhoneDeploymentInfo:(id)arg1;
- (void)refreshExtensionBasedProperties;
- (void)setIPadDisclosed:(BOOL)arg1;
- (void)setIPhoneDisclosed:(BOOL)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEiPhoneApplicationDataOptionController : IDELaunchActionOptionViewController
{
    NSPopUpButton *_deviceAppDataPackagesPopUp;
}

+ (BOOL)availableForScheme:(id)arg1;
- (void).cxx_destruct;
- (void)_selectDeviceAppDataPackage:(id)arg1;
- (void)_selectMenuItemForDeviceApplicationPackage;
- (void)loadView;

@end

@interface IDEiPhoneConsoleLayoutManager : NSLayoutManager
{
}

- (void)drawBackgroundForGlyphRange:(struct _NSRange)arg1 atPoint:(struct CGPoint)arg2;

@end

@interface IDEiPhoneConsoleTextView : NSTextView
{
    NSArray *_foundLocations;
    DVTTextDocumentLocation *_currentFoundLocation;
}

@property(copy) DVTTextDocumentLocation *currentFoundLocation; // @synthesize currentFoundLocation=_currentFoundLocation;
@property(copy, nonatomic) NSArray *foundLocations; // @synthesize foundLocations=_foundLocations;
- (void).cxx_destruct;
- (void)drawFoundLocationsInRange:(struct _NSRange)arg1;

@end

@interface IDEiPhoneDeveloperProfile : DVTDeveloperProfile
{
}

- (void)_showPasswordSheetForDeveloperProfileAtURL:(id)arg1 accountProviders:(id)arg2 window:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)importDeveloperProfileWithAccountProviders:(id)arg1 window:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)importDeveloperProfileFromFilePath:(id)arg1 withAccountProviders:(id)arg2 window:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)exportDeveloperProfileWithAccountProviders:(id)arg1 window:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;

@end

@interface IDEiPhoneDirectionsMenuController : IDESchemeOptionMenuController
{
}

- (id)fileExtension;
- (id)uti;
- (id)doNothingItemRepresentedObject;
- (id)doNothingItemTitle;
- (id)itemsForFilesInWorkspace;
- (id)menuTitle;
- (id)init;

@end

@interface IDEiPhoneDirectionsOptionController : IDELaunchActionOptionViewController
{
    NSPopUpButton *_directionsPopUpButton;
    IDEiPhoneDirectionsMenuController *_directionsMenuController;
}

+ (BOOL)availableForScheme:(id)arg1;
- (void).cxx_destruct;
- (void)primitiveInvalidate;
- (void)_updateMenuSelection:(id)arg1;
- (void)viewDidInstall;
- (void)loadView;
- (id)_computeAbsolutePathForWorkspaceRelativePath:(id)arg1;
- (id)_computeIdentifierForFileReference:(id)arg1;

@end

@interface IDEiPhoneDownloadableIconProvider : NSObject <IDEComponentDownloadIconProvider>
{
}

- (id)imageForDownloadableType:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEiPhoneInternalAppInstallOptionController : IDELaunchActionOptionViewController
{
    _Bool _enableUI;
    NSPopUpButton *_applicationPopUpButton;
    NSPopUpButton *_installStylePopUpButton;
    NSPanel *_otherBundleIdPanel;
    NSTextField *_otherBundleIdField;
    DVTObservingToken *_applicationsTokens;
    DVTObservingToken *_systemApplicationsTokens;
    DVTDelayedInvocation *_updateMenuInvocation;
}

+ (BOOL)availableForScheme:(id)arg1;
@property _Bool enableUI; // @synthesize enableUI=_enableUI;
@property(retain) DVTDelayedInvocation *updateMenuInvocation; // @synthesize updateMenuInvocation=_updateMenuInvocation;
@property(retain) DVTObservingToken *systemApplicationsTokens; // @synthesize systemApplicationsTokens=_systemApplicationsTokens;
@property(retain) DVTObservingToken *applicationsTokens; // @synthesize applicationsTokens=_applicationsTokens;
@property(retain) NSTextField *otherBundleIdField; // @synthesize otherBundleIdField=_otherBundleIdField;
@property(retain) NSPanel *otherBundleIdPanel; // @synthesize otherBundleIdPanel=_otherBundleIdPanel;
@property(retain) NSPopUpButton *installStylePopUpButton; // @synthesize installStylePopUpButton=_installStylePopUpButton;
@property(retain) NSPopUpButton *applicationPopUpButton; // @synthesize applicationPopUpButton=_applicationPopUpButton;
- (void).cxx_destruct;
- (void)loadView;
- (void)cancelBundleIdPanel:(id)arg1;
- (void)confirmBundleIdPanel:(id)arg1;
- (void)_applicationMenuAction:(id)arg1;
- (void)_updateApplicationMenu;
- (void)primitiveInvalidate;

@end

@interface IDEiPhoneInternalDebugServiceExtensionController : IDELaunchActionOptionViewController
{
    NSComboBox *_extensionCombobox;
    NSMutableArray *_possibleExtensions;
}

+ (BOOL)availableForScheme:(id)arg1;
@property(retain) NSMutableArray *possibleExtensions; // @synthesize possibleExtensions=_possibleExtensions;
@property(retain) NSComboBox *extensionCombobox; // @synthesize extensionCombobox=_extensionCombobox;
- (void).cxx_destruct;
- (void)loadView;
- (void)_extensionComboboxAction:(id)arg1;

@end

@interface IDEiPhoneLocationOptionController : IDELaunchActionOptionViewController
{
    NSPopUpButton *_locationPopUpButton;
    IDESimulateLocationMenuController *_simulateLocationMenuController;
}

+ (BOOL)availableForScheme:(id)arg1;
- (void).cxx_destruct;
- (void)primitiveInvalidate;
- (void)loadView;

@end

@interface IDEiPhoneMultiImageView : NSView <DVTInvalidation>
{
    id <IDEiPhoneMultiImageViewDelegate> _delegate;
    double _imageRowHeight;
    NSMutableArray *_cachedImages;
}

+ (void)initialize;
@property double imageRowHeight; // @synthesize imageRowHeight=_imageRowHeight;
@property(retain) id <IDEiPhoneMultiImageViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (BOOL)isFlipped;
- (void)mouseUp:(id)arg1;
- (void)reloadImages;
- (void)drawRect:(struct CGRect)arg1;
- (void)iterateThroughImagesWithBlock:(CDUnknownBlockType)arg1;
- (id)imageAtIndex:(unsigned long long)arg1;
- (void)primitiveInvalidate;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEiPhoneOrganizerCompareFilter : CIFilter
{
    CIImage *inputImage1;
    CIImage *inputImage2;
    CIImage *inputImage3;
    CIImage *inputImage4;
    NSNumber *inputTolerance;
}

- (void).cxx_destruct;
- (id)outputImage;
- (id)init;

@end

@interface IDEiPhoneOrganizerConsoleViewController : DTDKDetailViewController <DVTWindowActivationStateObserver, DTDKRemoteDeviceConsoleControllerDelegate, DVTDevicesWindowConsoleViewController, DVTScopeBarHost, DVTFindBarHostable, DVTFindBarFindable>
{
    NSView *consoleView;
    IDEiPhoneConsoleTextView *consoleTextView;
    DVTiOSDevice *_device;
    unsigned int shouldWrapLines:1;
    unsigned int reserved:31;
    DVTSystemActivityToken *_activityToken;
    id <DVTCancellable> _windowActivationStateObserverCancellable;
    id <DVTCancellable> _themeChangeToken;
    DVTScopeBarsManager *_scopeBarsManager;
    DVTScopeBarController *_findBarScopeBarController;
    DVTIncrementalFindBar *_findBar;
}

+ (id)defaultViewNibName;
+ (id)nibName;
@property(retain) DVTiOSDevice *device; // @synthesize device=_device;
@property _Bool shouldWrapLines; // @synthesize shouldWrapLines;
- (void).cxx_destruct;
- (void)find:(id)arg1;
- (void)dismissFindBar:(id)arg1 andRestoreSelection:(BOOL)arg2;
- (BOOL)isFindBarInstalled;
- (id)findBar;
- (id)startingLocationForFindBar:(id)arg1 findingBackwards:(BOOL)arg2;
- (id)findStringMatchingDescriptor:(id)arg1 backwards:(BOOL)arg2 from:(id)arg3 to:(id)arg4;
- (void)dvtFindBar:(id)arg1 didUpdateCurrentResult:(id)arg2;
- (void)dvtFindBar:(id)arg1 didUpdateResults:(id)arg2;
@property(readonly) NSView *scopeBarsBaseView;
- (void)consoleControllerDidClear:(id)arg1;
- (void)consoleController:(id)arg1 didReceiveConsoleText:(id)arg2;
- (void)save:(id)arg1;
- (void)clear:(id)arg1;
- (void)detailViewDidDisappear;
- (void)detailViewDidAppear;
- (void)saveConsole;
@property(readonly) NSString *saveConsoleButtonTitle;
- (void)clearConsole;
- (void)_themeFontsAndColorsUpdated;
- (void)primitiveInvalidate;
- (void)stopUpdatingConsoleText;
- (void)startUpdatingConsoleText;
- (void)window:(id)arg1 didChangeActivationState:(long long)arg2;
- (id)consoleController;
- (void)stopSuppressingAppNap;
- (void)suppressAppNapIfNeeded;
- (void)viewWillUninstall;
- (void)viewDidInstall;
- (void)loadView;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) NSScrollView *scopeBarsAdjustableScrollView;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEiPhoneOrganizerCrashLogViewController : DTDKDetailViewController <DTDKTableViewDelegate, DVTWindowActivationStateObserver>
{
    DVTObservingToken *_selectionToken;
    DVTObservingToken *_migrationToken;
    DVTObservingToken *_needsSymbolicationToken;
    id _lastSelectedObject;
    id <DVTCancellable> _windowActivationStateObserverCancellable;
    _Bool _isArrayControllerSetUp;
    NSArray *_sortDescriptors;
    NSArrayController *_arrayController;
    DVTDevice *_device;
    NSSearchField *_searchField;
    NSTextView *_textView;
    NSSplitView *_splitView;
    NSView *_listContainerView;
    NSButton *_deviceLogsButton;
    NSButton *_allLogsButton;
}

+ (id)defaultViewNibName;
+ (id)nibName;
+ (void)initialize;
@property(retain) NSButton *allLogsButton; // @synthesize allLogsButton=_allLogsButton;
@property(retain) NSButton *deviceLogsButton; // @synthesize deviceLogsButton=_deviceLogsButton;
@property(retain) NSView *listContainerView; // @synthesize listContainerView=_listContainerView;
@property(retain) NSSplitView *splitView; // @synthesize splitView=_splitView;
@property(retain) NSTextView *textView; // @synthesize textView=_textView;
@property(retain) NSSearchField *searchField; // @synthesize searchField=_searchField;
@property(retain, nonatomic) DVTDevice *device; // @synthesize device=_device;
@property(retain) NSArrayController *arrayController; // @synthesize arrayController=_arrayController;
- (void).cxx_destruct;
- (double)splitView:(id)arg1 constrainMaxCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(id)arg1 constrainMinCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (BOOL)splitView:(id)arg1 shouldAdjustSizeOfSubview:(id)arg2;
- (void)allLogsAction:(id)arg1;
- (void)deviceLogsAction:(id)arg1;
- (void)setRepresentedObject:(id)arg1;
- (void)unsymbolicateLog:(id)arg1;
- (void)resymbolicateLog:(id)arg1;
- (void)importLog:(id)arg1;
- (void)exportUnsymbolicatedLog:(id)arg1;
- (void)exportLog:(id)arg1;
- (void)setupSelectionButton:(id)arg1;
- (BOOL)tableView:(id)arg1 acceptDrop:(id)arg2 row:(long long)arg3 dropOperation:(unsigned long long)arg4;
- (unsigned long long)tableView:(id)arg1 validateDrop:(id)arg2 proposedRow:(long long)arg3 proposedDropOperation:(unsigned long long)arg4;
- (id)tableView:(id)arg1 namesOfPromisedFilesDroppedAtDestination:(id)arg2 forDraggedRowsWithIndexes:(id)arg3;
- (BOOL)tableView:(id)arg1 writeRowsWithIndexes:(id)arg2 toPasteboard:(id)arg3;
- (id)tableView:(id)arg1 contextMenuForRows:(id)arg2;
- (void)tableView:(id)arg1 deleteRows:(id)arg2;
- (void)resymbolicateRepresentedItems:(id)arg1;
- (void)exportRepresentedItems:(id)arg1;
- (void)deleteRepresentedItems:(id)arg1;
- (void)unsymbolicateItems:(id)arg1;
- (void)resymbolicateItems:(id)arg1;
- (void)exportItems:(id)arg1 unsymbolicated:(BOOL)arg2;
- (void)deleteItems:(id)arg1;
@property(copy) NSArray *sortDescriptors; // @synthesize sortDescriptors=_sortDescriptors;
- (void)window:(id)arg1 didChangeActivationState:(long long)arg2;
- (void)viewWillUninstall;
- (void)viewDidInstall;
- (void)_clearArrayController;
- (void)_setupArrayController;
- (void)loadView;
- (void)primitiveInvalidate;
- (void)_symbolicateSelectedLog;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEiPhoneOrganizerDraggableImageView : NSImageView <NSDraggingSource>
{
    id <IDEiPhoneOrganizerDraggableImageViewDelegate> _delegate;
    BOOL _dragging;
}

@property __weak id <IDEiPhoneOrganizerDraggableImageViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (id)menuForEvent:(id)arg1;
- (unsigned long long)draggingSession:(id)arg1 sourceOperationMaskForDraggingContext:(long long)arg2;
- (void)mouseDragged:(id)arg1;
- (void)mouseDown:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEiPhoneOrganizerGoThereTextField : NSTextField
{
    NSButton *_button;
}

- (void).cxx_destruct;
- (void)setFrame:(struct CGRect)arg1;
- (void)setObjectValue:(id)arg1;
- (void)awakeFromNib;
- (void)updateButtonPosition;

@end

@interface IDEiPhoneScopeBar : DVTBorderedView
{
}

- (void)awakeFromNib;

@end

@interface IDEiPhoneTextFieldCell : NSTextFieldCell
{
}

- (id)labelTextColor;
- (id)subtitleTextColor;
- (id)textColor;
- (BOOL)controlViewHasFocus;

@end

@interface IDEiPhoneScreenshotDescriptionCell : IDEiPhoneTextFieldCell
{
    DTDKScreenshot *_screenshot;
}

@property(retain) DTDKScreenshot *screenshot; // @synthesize screenshot=_screenshot;
- (void).cxx_destruct;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;

@end

@interface NSImage (IDEImageComparisonExtensions)
+ (id)combineImages:(id)arg1;
+ (id)compareImages:(id)arg1 tolerance:(double)arg2;
+ (BOOL)canCompareImages:(id)arg1;
- (id)compareWithImage:(id)arg1 tolerance:(double)arg2;
- (id)createCIImage;
@end

@interface SimRuntime (DVTiPhoneSimulatorCreationWindowController)
- (id)dvt_nameForSimCreationMenu;
@end

@interface XCNotifyingView : NSView
{
}

+ (BOOL)automaticallyNotifiesObserversOfWindow;
- (void)viewDidUnhide;
- (void)viewDidHide;
- (void)viewDidMoveToSuperview;
- (void)viewWillMoveToSuperview:(id)arg1;
- (void)viewDidMoveToWindow;
- (void)viewWillMoveToWindow:(id)arg1;

@end

@interface XCRemoteIPhone_SharedScreenshots : NSObject
{
    NSArray *_screenshots;
}

+ (id)sharedScreenshots;
@property(retain) NSArray *screenshots; // @synthesize screenshots=_screenshots;
- (void).cxx_destruct;
- (id)init;
- (BOOL)removeScreenshotForDictionary:(id)arg1;
- (void)addScreenshotForPath:(id)arg1;
- (void)readImageDictionaryArrayFromDisk;
- (void *)deviceForIdentifier:(id)arg1;
- (BOOL)deviceListenerAvailable;
- (void)applicationWillTerminate:(id)arg1;

@end

@interface Xcode3BackgroundModesItemModel : IDEProjectItemModel
{
    id <IDEFlightChecking> _infoPlistFlightCheck;
    NSSet *_enabledBackgroundModes;
}

+ (id)keyPathsForValuesAffectingRemoteNotificationInitiatedFetch;
+ (id)keyPathsForValuesAffectingOpportunisticFetch;
+ (id)keyPathsForValuesAffectingBluetoothPeripheral;
+ (id)keyPathsForValuesAffectingBluetoothCentral;
+ (id)keyPathsForValuesAffectingExternalAccessory;
+ (id)keyPathsForValuesAffectingNewsstandContent;
+ (id)keyPathsForValuesAffectingVoip;
+ (id)keyPathsForValuesAffectingLocation;
+ (id)keyPathsForValuesAffectingAudio;
@property(copy, nonatomic) NSSet *enabledBackgroundModes; // @synthesize enabledBackgroundModes=_enabledBackgroundModes;
- (void).cxx_destruct;
- (BOOL)isEnabledUsingEducatedGuess;
- (id)flightChecks;
- (id)infoPlistFlightCheck;
@property(nonatomic) BOOL remoteNotificationInitiatedFetch; // @dynamic remoteNotificationInitiatedFetch;
- (void)_setRemoteNotificationInitiatedFetch:(BOOL)arg1 postAssignmentBlock:(CDUnknownBlockType)arg2;
@property(nonatomic) BOOL opportunisticFetch; // @dynamic opportunisticFetch;
- (void)_setOpportunisticFetch:(BOOL)arg1 postAssignmentBlock:(CDUnknownBlockType)arg2;
@property(nonatomic) BOOL bluetoothPeripheral; // @dynamic bluetoothPeripheral;
- (void)_setBluetoothPeripheral:(BOOL)arg1 postAssignmentBlock:(CDUnknownBlockType)arg2;
@property(nonatomic) BOOL bluetoothCentral; // @dynamic bluetoothCentral;
- (void)_setBluetoothCentral:(BOOL)arg1 postAssignmentBlock:(CDUnknownBlockType)arg2;
@property(nonatomic) BOOL externalAccessory; // @dynamic externalAccessory;
- (void)_setExternalAccessory:(BOOL)arg1 postAssignmentBlock:(CDUnknownBlockType)arg2;
@property(nonatomic) BOOL newsstandContent; // @dynamic newsstandContent;
- (void)_setNewsstandContent:(BOOL)arg1 postAssignmentBlock:(CDUnknownBlockType)arg2;
@property(nonatomic) BOOL voip; // @dynamic voip;
- (void)_setVoip:(BOOL)arg1 postAssignmentBlock:(CDUnknownBlockType)arg2;
@property(nonatomic) BOOL location; // @dynamic location;
- (void)_setLocation:(BOOL)arg1 postAssignmentBlock:(CDUnknownBlockType)arg2;
@property(nonatomic) BOOL audio; // @dynamic audio;
- (void)_setAudio:(BOOL)arg1 postAssignmentBlock:(CDUnknownBlockType)arg2;
- (void)_setEnabledBackgroundModes:(id)arg1 postAssignmentBlock:(CDUnknownBlockType)arg2;
- (void)readValuesFromPlist;
- (void)publishStateWithContext:(id)arg1;
- (void)modelWasDisabled;
- (void)modelWasEnabledWithContext:(id)arg1;
- (id)initWithCapabilitiesContext:(id)arg1 item:(id)arg2;

// Remaining properties
@property(readonly) id infoPlistCoordinator; // @dynamic infoPlistCoordinator;

@end

@interface Xcode3BackgroundModesItemViewController : IDEProjectItemViewController
{
}

- (id)initWithEditorItemModel:(id)arg1 portalInfoDelegate:(id)arg2;

// Remaining properties
@property(readonly, nonatomic) Xcode3BackgroundModesItemModel *model; // @dynamic model;

@end

@interface Xcode3InterAppAudioItemModel : IDEProjectItemModel
{
    id <IDEFlightChecking> _portalFlightCheck;
    id <IDEFlightChecking> _entitlementsFlightCheck;
    id <IDEFlightChecking> _linkedFrameworksFlightCheck;
}

- (void).cxx_destruct;
- (BOOL)isEnabledUsingEducatedGuess;
- (id)flightChecks;
- (id)linkedFrameworksFlightCheck;
- (id)entitlementsFlightCheck;
- (id)portalFlightCheck;

@end

@interface Xcode3InterAppAudioItemViewController : IDEProjectItemViewController
{
}

- (id)initWithEditorItemModel:(id)arg1 portalInfoDelegate:(id)arg2;

// Remaining properties
@property(readonly, nonatomic) Xcode3InterAppAudioItemModel *model; // @dynamic model;

@end

@interface Xcode3OsloItemModel : IDEProjectItemModel
{
    IDEAppIDItemIdentifiersItemModelSet *_OMCs;
}

@property(retain) IDEAppIDItemIdentifiersItemModelSet *OMCs; // @synthesize OMCs=_OMCs;
- (void).cxx_destruct;
- (BOOL)isEnabledUsingEducatedGuess;
- (id)flightChecks;
- (void)modelWasDisabled;
- (void)modelWasEnabledWithContext:(id)arg1;
- (void)targetCoordinatorChanged:(id)arg1;
- (void)readValuesFromEntitlements;
- (void)publishStateWithContext:(id)arg1;
- (void)primitiveInvalidate;
- (id)initWithCapabilitiesContext:(id)arg1 item:(id)arg2;

@end

@interface Xcode3OsloItemViewController : IDEProjectItemViewController
{
    NSView *_identifiersSlice;
    IDEAppIDItemIdentifiersTableViewController *_identifiersTableViewController;
}

@property(retain) IDEAppIDItemIdentifiersTableViewController *identifiersTableViewController; // @synthesize identifiersTableViewController=_identifiersTableViewController;
@property(retain) NSView *identifiersSlice; // @synthesize identifiersSlice=_identifiersSlice;
- (void).cxx_destruct;
- (void)primitiveInvalidate;
- (void)loadView;

// Remaining properties
@property(readonly, nonatomic) Xcode3OsloItemModel *model; // @dynamic model;

@end

