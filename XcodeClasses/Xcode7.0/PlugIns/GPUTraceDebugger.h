//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark -

//
// File: /Applications/Xcode-7GM.app/Contents/PlugIns/GPUTraceDebugger.ideplugin/Contents/MacOS/GPUTraceDebugger
// UUID: 1D7C0C08-8586-3DDC-97E4-702FC424D447
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 18079.0.0.0.0
//       Minimum Mac OS X version: 10.10.0
//                    SDK version: 10.11.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol DVTInvalidation <NSObject>
- (void)primitiveInvalidate;

@optional
+ (BOOL)supportsInvalidationPrevention;
+ (unsigned long long)assertionBehaviorForKeyValueObservationsAtEndOfEvent;
+ (unsigned long long)assertionBehaviorAfterEndOfEventForSelector:(SEL)arg1;
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly, nonatomic, getter=isValid) BOOL valid;
- (void)invalidate;
@end

@protocol IDEDebuggingAddition <NSObject, DVTInvalidation>
@property(readonly) NSString *identifier;
@property(readonly, nonatomic) IDELaunchSession *launchSession;
- (id)initInLaunchSession:(IDELaunchSession *)arg1 withAppDisplayName:(NSString *)arg2 runDestination:(IDERunDestination *)arg3 fromExtension:(DVTExtension *)arg4;

@optional
+ (BOOL)shouldInstantiateInLaunchSession:(IDELaunchSession *)arg1;
- (void)processFinalLaunchParameters:(IDELaunchParametersSnapshot *)arg1;
- (IDELaunchParametersSnapshot *)adjustedLaunchParametersForLaunchParameters:(IDELaunchParametersSnapshot *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (BOOL)respondsToSelector:(SEL)arg1;
- (BOOL)conformsToProtocol:(Protocol *)arg1;
- (BOOL)isMemberOfClass:(Class)arg1;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (BOOL)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@interface GPUDebuggingAddition : NSObject <IDEDebuggingAddition>
{
    BOOL _breakpointsActiveBeforeCapture;
    BOOL _isFakeDebugSession;
    NSString *_identifier;
    GPUDebuggerController *_debuggerController;
    GPUInferiorSession *_gpuSession;
    NSString *_localizedCaptureUnavailabilityReason;
    IDELaunchSession *_launchSession;
}

+ (id)_extensionsWithIdentifier:(id)arg1 predicate:(id)arg2;
+ (BOOL)shouldInstantiateInLaunchSession:(id)arg1;
+ (BOOL)_isLinkedToCapturableFrameworks:(id)arg1 withPlatformID:(id)arg2;
+ (void)initialize;
@property(retain, nonatomic) IDELaunchSession *launchSession; // @synthesize launchSession=_launchSession;
@property BOOL isFakeDebugSession; // @synthesize isFakeDebugSession=_isFakeDebugSession;
@property BOOL breakpointsActiveBeforeCapture; // @synthesize breakpointsActiveBeforeCapture=_breakpointsActiveBeforeCapture;
@property(copy, nonatomic) NSString *localizedCaptureUnavailabilityReason; // @synthesize localizedCaptureUnavailabilityReason=_localizedCaptureUnavailabilityReason;
@property(retain, nonatomic) GPUInferiorSession *gpuSession; // @synthesize gpuSession=_gpuSession;
@property(retain, nonatomic) GPUDebuggerController *debuggerController; // @synthesize debuggerController=_debuggerController;
@property(readonly) NSString *identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
@property(readonly) BOOL isDebuggingLoadedArchive;
- (void)primitiveInvalidate;
- (void)processFinalLaunchParameters:(id)arg1;
- (id)adjustedLaunchParametersForLaunchParameters:(id)arg1;
- (BOOL)_loadInferiorSession:(id)arg1 forAppWithName:(id)arg2 error:(id *)arg3;
- (void)_displayAlertWithError:(id)arg1;
- (id)initInLaunchSession:(id)arg1 withAppDisplayName:(id)arg2 runDestination:(id)arg3 fromExtension:(id)arg4;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

__attribute__((visibility("hidden")))
@interface GPUOpenGLErrorBreakpoint : IDESymbolicBreakpoint
{
}

+ (id)keyPathsForValuesAffectingDisplayName;
+ (id)assetBundle;
- (id)popUpEditorDisplayName;
- (BOOL)shouldEditNewBreakpoints;
- (id)customStopReasonString;
- (id)displayName;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface GPUOpenGLErrorBreakpointAction : IDEBreakpointAction
{
    NSString *_stopReason;
}

@property(retain, nonatomic) NSString *stopReason; // @synthesize stopReason=_stopReason;
- (void).cxx_destruct;
- (void)performActionUsingContext:(id)arg1 andBreakpoint:(id)arg2;
- (void)_buildStopReasonWithError:(int)arg1 log:(id)arg2;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (id)init;
- (void)_commonInit;

@end

__attribute__((visibility("hidden")))
@interface GPUTraceBreakpointAction : IDEBreakpointAction
{
}

- (void)performActionUsingContext:(id)arg1 andBreakpoint:(id)arg2;
- (id)displayName;

@end

