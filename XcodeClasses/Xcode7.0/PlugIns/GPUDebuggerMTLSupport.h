//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct Argument {
    void *_field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned short _field5;
    unsigned short _field6;
};

struct BindingPoint<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> {
    unsigned long long _objectID;
};

struct BindingPoint<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> {
    unsigned long long _objectID;
};

struct BindingPoint<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> {
    unsigned long long _objectID;
};

struct BindingPoint<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> {
    unsigned long long _objectID;
};

struct BindingPoint<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> {
    unsigned long long _objectID;
};

struct BindingPoint<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> {
    unsigned long long _objectID;
};

struct BindingPoint<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> {
    unsigned long long _objectID;
};

struct BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    unsigned long long _objectID;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> _mLabel;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _mEncodingEnded;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mRootResource;
};

struct Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    unsigned long long _objectID;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mPurgeableState;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mResourceOptions;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> _mLabel;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> _mData;
    struct DYStateElement<long long, GPUTools::SM::MTL::StateBaseDefault> _mLength;
    struct unordered_set<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long>> _ownedTextureIDs;
};

struct CGPoint {
    double _field1;
    double _field2;
};

struct CGSize {
    double _field1;
    double _field2;
};

struct CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    unsigned long long _objectID;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _mStrongReferences;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> _mLabel;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _mProfilingEnabled;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mRootResource;
    struct unordered_set<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long>> _ownedRenderCommandEncoderIDs;
    struct unordered_set<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long>> _ownedBlitCommandEncoderIDs;
    struct unordered_set<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long>> _ownedComputeCommandEncoderIDs;
    struct unordered_set<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long>> _ownedParallelRenderCommandEncoderIDs;
};

struct CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    unsigned long long _objectID;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> _mLabel;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _mExecutionEnabled;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _mSkipRender;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _mProfilingEnabled;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mMaxCommandBufferCount;
    struct unordered_set<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long>> _ownedCommandBufferIDs;
};

struct ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    unsigned long long _objectID;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> _mLabel;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _mEncodingEnded;
    struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> _mComputePipelineState;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mRootResource;
    struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> _mBuffer[32];
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mBufferOffset[32];
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> _mBytes[32];
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mBytesLength[32];
    struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> _mTexture[32];
    struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> _mSampler[32];
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mThreadgroupMemoryLength[32];
    struct DYStateElement<float, GPUTools::SM::MTL::StateBaseDefault> _mSamplerLodMinClamp[32];
    struct DYStateElement<float, GPUTools::SM::MTL::StateBaseDefault> _mSamplerLodMaxClamp[32];
    struct bitset<32> _samplerLODMinMaxBitSet;
};

struct ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    unsigned long long _objectID;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> _mLabel;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mError;
    struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> _mFunction;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mThreadExecutionWidth;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mMaxTotalThreadsPerThreadgroup;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _mThreadGroupSizeIsMultipleOfThreadExecutionWidth;
    struct unordered_map<unsigned long long, std::__1::vector<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::vector<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>>> _argumentTypeToArgumentsMap;
};

struct CoreFunction {
    unsigned int _field1;
    unsigned int _field2;
    unsigned short _field3;
    unsigned short _field4;
    union {
        unsigned long long _field1;
        unsigned long long _field2;
    } _field5;
    struct Argument _field6;
    struct Argument _field7[16];
    unsigned int _field8;
    unsigned int _field9;
    void *_field10;
    void *_field11;
};

struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> {
    struct BindingPoint<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> mStateVal;
};

struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> {
    struct BindingPoint<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> mStateVal;
};

struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> {
    struct BindingPoint<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> mStateVal;
};

struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> {
    struct BindingPoint<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> mStateVal;
};

struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> {
    struct BindingPoint<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> mStateVal;
};

struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> {
    struct BindingPoint<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> mStateVal;
};

struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> {
    struct BindingPoint<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> mStateVal;
};

struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> {
    struct StateBool mStateVal;
};

struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> {
    struct StateEnum mStateVal;
};

struct DYStateElement<GPUTools::SM::VecN<double, 4>, GPUTools::SM::MTL::StateBaseDefault> {
    struct VecN<double, 4> mStateVal;
};

struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::SM::MTL::StateBaseDefault> {
    VecN_24296b45 mStateVal;
};

struct DYStateElement<GPUTools::SM::VecN<float, 6>, GPUTools::SM::MTL::StateBaseDefault> {
    VecN_8f1bdb46 mStateVal;
};

struct DYStateElement<GPUTools::SM::VecN<unsigned long long, 4>, GPUTools::SM::MTL::StateBaseDefault> {
    VecN_d22ea5a0 mStateVal;
};

struct DYStateElement<float, GPUTools::SM::MTL::StateBaseDefault> {
    float mStateVal;
};

struct DYStateElement<long long, GPUTools::SM::MTL::StateBaseDefault> {
    long long mStateVal;
};

struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> {
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> mStateVal;
};

struct DYStateElement<unsigned int, GPUTools::SM::MTL::StateBaseDefault> {
    unsigned int mStateVal;
};

struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> {
    unsigned long long mStateVal;
};

struct DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    unsigned long long _objectID;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> _mLabel;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mDepthCompareFunction;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _mDepthWriteEnabled;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mFrontStencilCompareFunction;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mFrontStencilFailureOperation;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mFrontDepthFailureOperation;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mFrontDepthStencilPassOperation;
    struct DYStateElement<unsigned int, GPUTools::SM::MTL::StateBaseDefault> _mFrontReadMask;
    struct DYStateElement<unsigned int, GPUTools::SM::MTL::StateBaseDefault> _mFrontWriteMask;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mBackStencilCompareFunction;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mBackStencilFailureOperation;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mBackDepthFailureOperation;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mBackDepthStencilPassOperation;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mBackReadMask;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mBackWriteMask;
};

struct Device<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    unsigned long long _objectID;
    struct ObjectTrackingMap<GPUTools::SM::MTL::CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _commandQueueMap;
    struct ObjectTrackingMap<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _bufferMap;
    struct ObjectTrackingMap<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _textureMap;
    struct ObjectTrackingMap<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _samplerMap;
    struct ObjectTrackingMap<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _depthStencilStateMap;
    struct ObjectTrackingMap<GPUTools::SM::MTL::Library<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _libraryMap;
    struct ObjectTrackingMap<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _renderPipelineStateMap;
    struct ObjectTrackingMap<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _computePipelineStateMap;
    struct ObjectTrackingMap<GPUTools::SM::MTL::CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _commandBufferMap;
    struct ObjectTrackingMap<GPUTools::SM::MTL::BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _blitCommandEncoderMap;
    struct ObjectTrackingMap<GPUTools::SM::MTL::RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _renderCommandEncoderMap;
    struct ObjectTrackingMap<GPUTools::SM::MTL::ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _computeCommandEncoderMap;
    struct ObjectTrackingMap<GPUTools::SM::MTL::ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _parallelRenderCommandEncoderMap;
    struct ObjectTrackingMap<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _functionMap;
    unsigned long long _deviceID;
    StateMirrorManager_4613010e *_manager;
    struct unordered_set<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long>> _ownedReceiverSet;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> _mName;
};

struct Function {
    struct CoreFunction _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long *_field4;
    unsigned short _field5;
    unsigned short _field6;
    int _field7;
    void *_field8;
    unsigned int _field9;
    unsigned int _field10;
    unsigned long long _field11;
    unsigned long long _field12;
    struct Function *_field13;
    void *_field14;
};

struct Function<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    unsigned long long _objectID;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> _mName;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mLibraryID;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mRootResource;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mFunctionType;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> _mFilePath;
    struct DYStateElement<long long, GPUTools::SM::MTL::StateBaseDefault> _mLineNumber;
};

struct GPUMTLBindPoint {
    unsigned long long _field1;
    unsigned int _field2;
    unsigned int _field3;
    int _field4;
    unsigned long long _field5;
};

struct GPUMTLBlendChannelSetup {
    unsigned long long _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct GPUMTLStencilSideSetup {
    unsigned long long _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
};

struct Library<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    unsigned long long _objectID;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> _mLabel;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _mFastMathEnabled;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _mDebuggingEnabled;
    struct DYStateElement<unsigned int, GPUTools::SM::MTL::StateBaseDefault> _mDenormsEnabled;
    struct DYStateElement<unsigned int, GPUTools::SM::MTL::StateBaseDefault> _mNativeDoubleEnabled;
    struct DYStateElement<unsigned int, GPUTools::SM::MTL::StateBaseDefault> _mCubemapArrayEnabled;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mLanguageVersion;
    struct unordered_set<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long>> _ownedFunctionIDs;
    _Bool _onlineCompiled;
    _Bool _defaultLibrary;
    NSMutableSet *_sourceURLs;
    NSDictionary *_preprocessorMacros;
    _Bool _optionsExist;
};

struct ObjectTrackingMap<GPUTools::SM::MTL::BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> {
    struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> _objectMap;
};

struct ObjectTrackingMap<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> {
    struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> _objectMap;
};

struct ObjectTrackingMap<GPUTools::SM::MTL::CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> {
    struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> _objectMap;
};

struct ObjectTrackingMap<GPUTools::SM::MTL::CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> {
    struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> _objectMap;
};

struct ObjectTrackingMap<GPUTools::SM::MTL::ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> {
    struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> _objectMap;
};

struct ObjectTrackingMap<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> {
    struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> _objectMap;
};

struct ObjectTrackingMap<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> {
    struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> _objectMap;
};

struct ObjectTrackingMap<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> {
    struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> _objectMap;
};

struct ObjectTrackingMap<GPUTools::SM::MTL::Layer<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> {
    struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Layer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Layer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> _objectMap;
};

struct ObjectTrackingMap<GPUTools::SM::MTL::Library<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> {
    struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Library<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Library<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> _objectMap;
};

struct ObjectTrackingMap<GPUTools::SM::MTL::ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> {
    struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> _objectMap;
};

struct ObjectTrackingMap<GPUTools::SM::MTL::RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> {
    struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> _objectMap;
};

struct ObjectTrackingMap<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> {
    struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> _objectMap;
};

struct ObjectTrackingMap<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> {
    struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> _objectMap;
};

struct ObjectTrackingMap<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> {
    struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> _objectMap;
};

struct ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    unsigned long long _objectID;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> _mLabel;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mRootResource;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _mEncodingEnded;
    struct unordered_set<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long>> _ownedRenderCommandEncoderIDs;
    RenderPassDescriptor_5fd82e83 _renderPassDescriptor;
};

struct PassthroughBase {
    struct function<void *(const char *, unsigned long *)> LoadURLData;
};

struct RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    unsigned long long _objectID;
    struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> _mRenderPipelineState;
    struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> _mVertexBuffer[32];
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mVertexBufferOffset[32];
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> _mVertexBytes[32];
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mVertexBytesLength[32];
    struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> _mVertexTexture[32];
    struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> _mFragmentBuffer[32];
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mFragmentBufferOffset[32];
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> _mFragmentBytes[32];
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mFragmentBytesLength[32];
    struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> _mFragmentTexture[32];
    struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> _mVertexSampler[32];
    struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> _mFragmentSampler[32];
    struct DYStateElement<float, GPUTools::SM::MTL::StateBaseDefault> _mVertexSamplerLodMinClamp[32];
    struct DYStateElement<float, GPUTools::SM::MTL::StateBaseDefault> _mVertexSamplerLodMaxClamp[32];
    struct DYStateElement<float, GPUTools::SM::MTL::StateBaseDefault> _mFragmentSamplerLodMinClamp[32];
    struct DYStateElement<float, GPUTools::SM::MTL::StateBaseDefault> _mFragmentSamplerLodMaxClamp[32];
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> _mLabel;
    struct DYStateElement<GPUTools::SM::VecN<float, 6>, GPUTools::SM::MTL::StateBaseDefault> _mViewport;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mFrontFacingWinding;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mCullMode;
    struct DYStateElement<float, GPUTools::SM::MTL::StateBaseDefault> _mDepthBias;
    struct DYStateElement<float, GPUTools::SM::MTL::StateBaseDefault> _mDepthSlopeScale;
    struct DYStateElement<float, GPUTools::SM::MTL::StateBaseDefault> _mDepthClamp;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mDepthClipMode;
    struct DYStateElement<GPUTools::SM::VecN<unsigned long long, 4>, GPUTools::SM::MTL::StateBaseDefault> _mScissorRect;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mTriangleFillMode;
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::SM::MTL::StateBaseDefault> _mBlendColor;
    struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> _mDepthStencilState;
    struct DYStateElement<long long, GPUTools::SM::MTL::StateBaseDefault> _mStencilFrontReferenceValue;
    struct DYStateElement<long long, GPUTools::SM::MTL::StateBaseDefault> _mStencilBackReferenceValue;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mVisibilityResultMode;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mVisibilityResultOffset;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _mEncodingEnded;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mRootResource;
    _Bool _isCreatedByCommandBuffer;
    _Bool _isCreatedByParallelRenderCommandEncoder;
    _Bool _isFragmentRenderCommandEncoder;
    struct bitset<32> _vertexSamplerLODMinMaxBitSet;
    struct bitset<32> _fragmentSamplerLODMinMaxBitSet;
    RenderPassDescriptor_5fd82e83 _renderPassDescriptor;
};

struct RenderPassAttachmentDescriptor<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    unsigned long long _objectID;
    struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> _mTexture;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mLevel;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mSlice;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mDepthPlane;
    struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> _mResolveTexture;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mResolveLevel;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mResolveSlice;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mResolveDepthPlane;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mLoadAction;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mStoreAction;
    struct DYStateElement<GPUTools::SM::VecN<double, 4>, GPUTools::SM::MTL::StateBaseDefault> _mClearValue;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mDepthResolveFilter;
};

struct RenderPassDescriptor<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    unsigned long long _objectID;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mWidth;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mHeight;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mRenderTargetArrayLength;
    struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> _mVisibilityResultBuffer;
    RenderPassAttachmentDescriptor_8c91cb7e _attachments[10];
};

struct RenderPipelineAttachmentDescriptor<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mPixelFormat;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _mBlendingEnabled;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mSourceRGBBlendFactor;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mDestinationRGBBlendFactor;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mRGBBlendOperation;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mSourceAlphaBlendFactor;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mDestinationAlphaBlendFactor;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mAlphaBlendOperation;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mWriteMask;
};

struct RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    unsigned long long _objectID;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> _mLabel;
    struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> _mVertexFunction;
    struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> _mFragmentFunction;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mSampleCount;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mSampleMask;
    struct DYStateElement<float, GPUTools::SM::MTL::StateBaseDefault> _mSampleCoverage;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _mAlphaToCoverageEnabled;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _mAlphaToOneEnabled;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _mRasterizationEnabled;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mDepthAttachmentPixelFormat;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mStencilAttachmentPixelFormat;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mError;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mInputPrimitiveTopology;
    RenderPipelineAttachmentDescriptor_08890bb5 _renderPipelineAttachmentDescriptors[8];
    VertexDescriptor_e5d3aa79 _vertexDescriptor;
    struct unordered_map<unsigned long long, std::__1::vector<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::vector<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>>> _vertexArgumentTypeToArgumentsMap;
    struct unordered_map<unsigned long long, std::__1::vector<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::vector<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>>> _fragmentArgumentTypeToArgumentsMap;
};

struct ResourceManager<GPUTools::SM::MTL::DefaultBaseObjectTypes>;

struct Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    unsigned long long _objectID;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mMinFilter;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mMagFilter;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mMipFilter;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mMaxAnisotropy;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mSAddressMode;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mTAddressMode;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mRAddressMode;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _mNormalizedCoordinates;
    struct DYStateElement<float, GPUTools::SM::MTL::StateBaseDefault> _mLodMinClamp;
    struct DYStateElement<float, GPUTools::SM::MTL::StateBaseDefault> _mLodMaxClamp;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> _mLabel;
    struct DYStateElement<unsigned int, GPUTools::SM::MTL::StateBaseDefault> _mLodAverage;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mCompareFunction;
};

struct StateBool {
    int _stateEnum;
};

struct StateEnum {
    long long _stateEnum;
};

struct StateMirrorManager<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    struct unordered_map<unsigned long long, std::__1::unique_ptr<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::default_delete<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unique_ptr<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::default_delete<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>>> _deviceMap;
    struct ObjectTrackingMap<GPUTools::SM::MTL::Layer<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _layerMap;
    unsigned long long _surfaceBoundsLayerID;
    struct PassthroughBase _passthrough;
    int _lastFunctionIndex;
};

struct Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    unsigned long long _objectID;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mPurgeableState;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mUsage;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> _mLabel;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mType;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mPixelFormat;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mSampleCount;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mArrayLength;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _mIsDrawable;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _mIsFramebufferOnly;
    struct DYStateElement<long long, GPUTools::SM::MTL::StateBaseDefault> _mMipmapLevelCount;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mRotation;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mIOSurfaceRef;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mIOSurfacePlane;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mRootResource;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mStorageMode;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mCPUCacheMode;
    struct vector<GPUTools::SM::MTL::TextureSlice<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::TextureSlice<GPUTools::SM::MTL::DefaultBaseObjectTypes>>> _textureSlices;
    struct unordered_set<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long>> _ownedTextureIDs;
    _Bool _isTextureView;
    _Bool _isBufferBacked;
};

struct TextureSlice<GPUTools::SM::MTL::DefaultBaseObjectTypes>;

struct VecN<double, 4> {
    double mData[4];
};

struct VecN<float, 4> {
    float mData[4];
};

struct VecN<float, 6> {
    float mData[6];
};

struct VecN<unsigned long long, 4> {
    unsigned long long mData[4];
};

struct VertexAttribute<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _field1;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _field2;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _field3;
};

struct VertexBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _field1;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _field2;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _field3;
};

struct VertexDescriptor<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    struct vector<GPUTools::SM::MTL::VertexBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::VertexBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>> _vertexBuffers;
    struct vector<GPUTools::SM::MTL::VertexAttribute<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::VertexAttribute<GPUTools::SM::MTL::DefaultBaseObjectTypes>>> _vertexAttributes;
};

struct _NSRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct __hash_node<std::__1::__hash_value_type<unsigned long long, GPUMTLBindPoint>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Layer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Library<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::default_delete<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, void *>;

struct __hash_node<unsigned long long, void *>;

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    unsigned long long __cap_;
                    unsigned long long __size_;
                    char *__data_;
                } __l;
                struct __short {
                    union {
                        unsigned char __size_;
                        char __lx;
                    } ;
                    char __data_[23];
                } __s;
                struct __raw {
                    unsigned long long __words[3];
                } __r;
            } ;
        } __first_;
    } __r_;
};

struct bitset<32> {
    unsigned long long __first_;
};

struct deque<unsigned int, std::__1::allocator<unsigned int>> {
    struct __split_buffer<unsigned int *, std::__1::allocator<unsigned int *>> {
        unsigned int **__first_;
        unsigned int **__begin_;
        unsigned int **__end_;
        struct __compressed_pair<unsigned int **, std::__1::allocator<unsigned int *>> {
            unsigned int **__first_;
        } __end_cap_;
    } __map_;
    unsigned long long __start_;
    struct __compressed_pair<unsigned long, std::__1::allocator<unsigned int>> {
        unsigned long long __first_;
    } __size_;
};

struct function<void *(const char *, unsigned long *)> {
    struct type __buf_;
    struct __base<void *(const char *, unsigned long *)> *__f_;
};

struct shared_ptr<GPUTools::FD::Function> {
    struct Function *_field1;
    struct __shared_weak_count *_field2;
};

struct stack<unsigned int, std::__1::deque<unsigned int, std::__1::allocator<unsigned int>>> {
    struct deque<unsigned int, std::__1::allocator<unsigned int>> c;
};

struct type {
    unsigned char __lx[24];
};

struct unique_ptr<GPUTools::MTL::ResourceManager<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::default_delete<GPUTools::MTL::ResourceManager<GPUTools::SM::MTL::DefaultBaseObjectTypes>>> {
    struct __compressed_pair<GPUTools::MTL::ResourceManager<GPUTools::SM::MTL::DefaultBaseObjectTypes>*, std::__1::default_delete<GPUTools::MTL::ResourceManager<GPUTools::SM::MTL::DefaultBaseObjectTypes>>> {
        struct ResourceManager<GPUTools::SM::MTL::DefaultBaseObjectTypes> *__first_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUMTLBindPoint>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUMTLBindPoint>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUMTLBindPoint>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUMTLBindPoint>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned long long, GPUMTLBindPoint>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUMTLBindPoint>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUMTLBindPoint>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Layer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Layer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Layer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Layer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Layer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Layer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Layer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Library<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Library<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Library<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Library<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Library<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Library<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Library<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::default_delete<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::default_delete<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::default_delete<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::default_delete<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::default_delete<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::default_delete<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::default_delete<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<unsigned long long, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<unsigned long long, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *>*>>> {
        struct __hash_node<unsigned long long, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<unsigned long long, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unordered_map<unsigned long long, GPUMTLBindPoint, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, GPUMTLBindPoint>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, GPUMTLBindPoint>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, GPUMTLBindPoint>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, GPUMTLBindPoint>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, GPUMTLBindPoint>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUMTLBindPoint>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUMTLBindPoint>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUMTLBindPoint>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUMTLBindPoint>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUMTLBindPoint>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long long, GPUMTLBindPoint>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, GPUMTLBindPoint>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, GPUMTLBindPoint>, std::__1::equal_to<unsigned long long>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Layer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Layer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Layer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Layer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Layer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Layer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Layer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Layer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Layer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Layer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Layer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Layer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Layer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Layer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Library<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Library<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Library<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Library<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Library<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Library<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Library<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Library<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Library<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Library<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Library<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Library<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Library<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Library<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned long long, std::__1::unique_ptr<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::default_delete<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unique_ptr<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::default_delete<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::default_delete<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::default_delete<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::default_delete<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::default_delete<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::default_delete<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::default_delete<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::default_delete<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::default_delete<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::default_delete<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::default_delete<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::default_delete<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::default_delete<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, std::__1::equal_to<unsigned long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned long long, std::__1::vector<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::vector<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::vector<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::vector<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::vector<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::vector<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::vector<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::vector<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, std::__1::equal_to<unsigned long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_set<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long>> {
    struct __hash_table<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long>> {
        struct unique_ptr<std::__1::__hash_node<unsigned long long, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *>*>, std::__1::allocator<std::__1::__hash_node<unsigned long long, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<unsigned long long, void *>*> {
                struct __hash_node<unsigned long long, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::hash<unsigned long long>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::equal_to<unsigned long long>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct vector<GPUTools::SM::MTL::TextureSlice<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::TextureSlice<GPUTools::SM::MTL::DefaultBaseObjectTypes>>> {
    struct TextureSlice<GPUTools::SM::MTL::DefaultBaseObjectTypes> *__begin_;
    struct TextureSlice<GPUTools::SM::MTL::DefaultBaseObjectTypes> *__end_;
    struct __compressed_pair<GPUTools::SM::MTL::TextureSlice<GPUTools::SM::MTL::DefaultBaseObjectTypes>*, std::__1::allocator<GPUTools::SM::MTL::TextureSlice<GPUTools::SM::MTL::DefaultBaseObjectTypes>>> {
        struct TextureSlice<GPUTools::SM::MTL::DefaultBaseObjectTypes> *__first_;
    } __end_cap_;
};

struct vector<GPUTools::SM::MTL::VertexAttribute<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::VertexAttribute<GPUTools::SM::MTL::DefaultBaseObjectTypes>>> {
    VertexAttribute_ebed2729 *__begin_;
    VertexAttribute_ebed2729 *__end_;
    struct __compressed_pair<GPUTools::SM::MTL::VertexAttribute<GPUTools::SM::MTL::DefaultBaseObjectTypes>*, std::__1::allocator<GPUTools::SM::MTL::VertexAttribute<GPUTools::SM::MTL::DefaultBaseObjectTypes>>> {
        VertexAttribute_ebed2729 *__first_;
    } __end_cap_;
};

struct vector<GPUTools::SM::MTL::VertexBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::VertexBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>> {
    VertexBuffer_34433e31 *__begin_;
    VertexBuffer_34433e31 *__end_;
    struct __compressed_pair<GPUTools::SM::MTL::VertexBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>*, std::__1::allocator<GPUTools::SM::MTL::VertexBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>> {
        VertexBuffer_34433e31 *__first_;
    } __end_cap_;
};

struct vector<unsigned int, std::__1::allocator<unsigned int>> {
    unsigned int *__begin_;
    unsigned int *__end_;
    struct __compressed_pair<unsigned int *, std::__1::allocator<unsigned int>> {
        unsigned int *__first_;
    } __end_cap_;
};

#pragma mark Typedef'd Structures

// Template types
typedef struct BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    unsigned long long _objectID;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> _mLabel;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _mEncodingEnded;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mRootResource;
} BlitCommandEncoder_0e8e1979;

typedef struct Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    unsigned long long _objectID;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mPurgeableState;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mResourceOptions;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> _mLabel;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> _mData;
    struct DYStateElement<long long, GPUTools::SM::MTL::StateBaseDefault> _mLength;
    struct unordered_set<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long>> _ownedTextureIDs;
} Buffer_e8b67ba7;

typedef struct CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    unsigned long long _objectID;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _mStrongReferences;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> _mLabel;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _mProfilingEnabled;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mRootResource;
    struct unordered_set<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long>> _ownedRenderCommandEncoderIDs;
    struct unordered_set<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long>> _ownedBlitCommandEncoderIDs;
    struct unordered_set<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long>> _ownedComputeCommandEncoderIDs;
    struct unordered_set<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long>> _ownedParallelRenderCommandEncoderIDs;
} CommandBuffer_b8d892ad;

typedef struct CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    unsigned long long _objectID;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> _mLabel;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _mExecutionEnabled;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _mSkipRender;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _mProfilingEnabled;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mMaxCommandBufferCount;
    struct unordered_set<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long>> _ownedCommandBufferIDs;
} CommandQueue_f95f9d2e;

typedef struct ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    unsigned long long _objectID;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> _mLabel;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _mEncodingEnded;
    struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> _mComputePipelineState;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mRootResource;
    struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> _mBuffer[32];
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mBufferOffset[32];
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> _mBytes[32];
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mBytesLength[32];
    struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> _mTexture[32];
    struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> _mSampler[32];
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mThreadgroupMemoryLength[32];
    struct DYStateElement<float, GPUTools::SM::MTL::StateBaseDefault> _mSamplerLodMinClamp[32];
    struct DYStateElement<float, GPUTools::SM::MTL::StateBaseDefault> _mSamplerLodMaxClamp[32];
    struct bitset<32> _samplerLODMinMaxBitSet;
} ComputeCommandEncoder_926cb968;

typedef struct ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    unsigned long long _objectID;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> _mLabel;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mError;
    struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> _mFunction;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mThreadExecutionWidth;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mMaxTotalThreadsPerThreadgroup;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _mThreadGroupSizeIsMultipleOfThreadExecutionWidth;
    struct unordered_map<unsigned long long, std::__1::vector<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::vector<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>>> _argumentTypeToArgumentsMap;
} ComputePipelineState_82a05cab;

typedef struct DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    unsigned long long _objectID;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> _mLabel;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mDepthCompareFunction;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _mDepthWriteEnabled;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mFrontStencilCompareFunction;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mFrontStencilFailureOperation;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mFrontDepthFailureOperation;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mFrontDepthStencilPassOperation;
    struct DYStateElement<unsigned int, GPUTools::SM::MTL::StateBaseDefault> _mFrontReadMask;
    struct DYStateElement<unsigned int, GPUTools::SM::MTL::StateBaseDefault> _mFrontWriteMask;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mBackStencilCompareFunction;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mBackStencilFailureOperation;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mBackDepthFailureOperation;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mBackDepthStencilPassOperation;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mBackReadMask;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mBackWriteMask;
} DepthStencilState_d26ffc7c;

typedef struct Device<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    unsigned long long _objectID;
    struct ObjectTrackingMap<GPUTools::SM::MTL::CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _commandQueueMap;
    struct ObjectTrackingMap<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _bufferMap;
    struct ObjectTrackingMap<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _textureMap;
    struct ObjectTrackingMap<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _samplerMap;
    struct ObjectTrackingMap<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _depthStencilStateMap;
    struct ObjectTrackingMap<GPUTools::SM::MTL::Library<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _libraryMap;
    struct ObjectTrackingMap<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _renderPipelineStateMap;
    struct ObjectTrackingMap<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _computePipelineStateMap;
    struct ObjectTrackingMap<GPUTools::SM::MTL::CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _commandBufferMap;
    struct ObjectTrackingMap<GPUTools::SM::MTL::BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _blitCommandEncoderMap;
    struct ObjectTrackingMap<GPUTools::SM::MTL::RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _renderCommandEncoderMap;
    struct ObjectTrackingMap<GPUTools::SM::MTL::ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _computeCommandEncoderMap;
    struct ObjectTrackingMap<GPUTools::SM::MTL::ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _parallelRenderCommandEncoderMap;
    struct ObjectTrackingMap<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _functionMap;
    unsigned long long _deviceID;
    StateMirrorManager_4613010e *_manager;
    struct unordered_set<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long>> _ownedReceiverSet;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> _mName;
} Device_5cef99fc;

typedef struct Function<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    unsigned long long _objectID;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> _mName;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mLibraryID;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mRootResource;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mFunctionType;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> _mFilePath;
    struct DYStateElement<long long, GPUTools::SM::MTL::StateBaseDefault> _mLineNumber;
} Function_130258c1;

typedef struct Library<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    unsigned long long _objectID;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> _mLabel;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _mFastMathEnabled;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _mDebuggingEnabled;
    struct DYStateElement<unsigned int, GPUTools::SM::MTL::StateBaseDefault> _mDenormsEnabled;
    struct DYStateElement<unsigned int, GPUTools::SM::MTL::StateBaseDefault> _mNativeDoubleEnabled;
    struct DYStateElement<unsigned int, GPUTools::SM::MTL::StateBaseDefault> _mCubemapArrayEnabled;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mLanguageVersion;
    struct unordered_set<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long>> _ownedFunctionIDs;
    _Bool _onlineCompiled;
    _Bool _defaultLibrary;
    NSMutableSet *_sourceURLs;
    NSDictionary *_preprocessorMacros;
    _Bool _optionsExist;
} Library_fcf3a16e;

typedef struct ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    unsigned long long _objectID;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> _mLabel;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mRootResource;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _mEncodingEnded;
    struct unordered_set<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long>> _ownedRenderCommandEncoderIDs;
    RenderPassDescriptor_5fd82e83 _renderPassDescriptor;
} ParallelRenderCommandEncoder_874a9a1a;

typedef struct RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    unsigned long long _objectID;
    struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> _mRenderPipelineState;
    struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> _mVertexBuffer[32];
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mVertexBufferOffset[32];
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> _mVertexBytes[32];
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mVertexBytesLength[32];
    struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> _mVertexTexture[32];
    struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> _mFragmentBuffer[32];
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mFragmentBufferOffset[32];
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> _mFragmentBytes[32];
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mFragmentBytesLength[32];
    struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> _mFragmentTexture[32];
    struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> _mVertexSampler[32];
    struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> _mFragmentSampler[32];
    struct DYStateElement<float, GPUTools::SM::MTL::StateBaseDefault> _mVertexSamplerLodMinClamp[32];
    struct DYStateElement<float, GPUTools::SM::MTL::StateBaseDefault> _mVertexSamplerLodMaxClamp[32];
    struct DYStateElement<float, GPUTools::SM::MTL::StateBaseDefault> _mFragmentSamplerLodMinClamp[32];
    struct DYStateElement<float, GPUTools::SM::MTL::StateBaseDefault> _mFragmentSamplerLodMaxClamp[32];
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> _mLabel;
    struct DYStateElement<GPUTools::SM::VecN<float, 6>, GPUTools::SM::MTL::StateBaseDefault> _mViewport;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mFrontFacingWinding;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mCullMode;
    struct DYStateElement<float, GPUTools::SM::MTL::StateBaseDefault> _mDepthBias;
    struct DYStateElement<float, GPUTools::SM::MTL::StateBaseDefault> _mDepthSlopeScale;
    struct DYStateElement<float, GPUTools::SM::MTL::StateBaseDefault> _mDepthClamp;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mDepthClipMode;
    struct DYStateElement<GPUTools::SM::VecN<unsigned long long, 4>, GPUTools::SM::MTL::StateBaseDefault> _mScissorRect;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mTriangleFillMode;
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::SM::MTL::StateBaseDefault> _mBlendColor;
    struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> _mDepthStencilState;
    struct DYStateElement<long long, GPUTools::SM::MTL::StateBaseDefault> _mStencilFrontReferenceValue;
    struct DYStateElement<long long, GPUTools::SM::MTL::StateBaseDefault> _mStencilBackReferenceValue;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mVisibilityResultMode;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mVisibilityResultOffset;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _mEncodingEnded;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mRootResource;
    _Bool _isCreatedByCommandBuffer;
    _Bool _isCreatedByParallelRenderCommandEncoder;
    _Bool _isFragmentRenderCommandEncoder;
    struct bitset<32> _vertexSamplerLODMinMaxBitSet;
    struct bitset<32> _fragmentSamplerLODMinMaxBitSet;
    RenderPassDescriptor_5fd82e83 _renderPassDescriptor;
} RenderCommandEncoder_516b45a3;

typedef struct RenderPassAttachmentDescriptor<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    unsigned long long _objectID;
    struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> _mTexture;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mLevel;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mSlice;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mDepthPlane;
    struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> _mResolveTexture;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mResolveLevel;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mResolveSlice;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mResolveDepthPlane;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mLoadAction;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mStoreAction;
    struct DYStateElement<GPUTools::SM::VecN<double, 4>, GPUTools::SM::MTL::StateBaseDefault> _mClearValue;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mDepthResolveFilter;
} RenderPassAttachmentDescriptor_8c91cb7e;

typedef struct RenderPassDescriptor<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    unsigned long long _objectID;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mWidth;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mHeight;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mRenderTargetArrayLength;
    struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> _mVisibilityResultBuffer;
    RenderPassAttachmentDescriptor_8c91cb7e _attachments[10];
} RenderPassDescriptor_5fd82e83;

typedef struct RenderPipelineAttachmentDescriptor<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mPixelFormat;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _mBlendingEnabled;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mSourceRGBBlendFactor;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mDestinationRGBBlendFactor;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mRGBBlendOperation;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mSourceAlphaBlendFactor;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mDestinationAlphaBlendFactor;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mAlphaBlendOperation;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mWriteMask;
} RenderPipelineAttachmentDescriptor_08890bb5;

typedef struct RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    unsigned long long _objectID;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> _mLabel;
    struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> _mVertexFunction;
    struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> _mFragmentFunction;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mSampleCount;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mSampleMask;
    struct DYStateElement<float, GPUTools::SM::MTL::StateBaseDefault> _mSampleCoverage;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _mAlphaToCoverageEnabled;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _mAlphaToOneEnabled;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _mRasterizationEnabled;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mDepthAttachmentPixelFormat;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mStencilAttachmentPixelFormat;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mError;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mInputPrimitiveTopology;
    RenderPipelineAttachmentDescriptor_08890bb5 _renderPipelineAttachmentDescriptors[8];
    VertexDescriptor_e5d3aa79 _vertexDescriptor;
    struct unordered_map<unsigned long long, std::__1::vector<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::vector<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>>> _vertexArgumentTypeToArgumentsMap;
    struct unordered_map<unsigned long long, std::__1::vector<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::vector<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>>> _fragmentArgumentTypeToArgumentsMap;
} RenderPipelineState_2531dade;

typedef struct Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    unsigned long long _objectID;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mMinFilter;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mMagFilter;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mMipFilter;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mMaxAnisotropy;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mSAddressMode;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mTAddressMode;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mRAddressMode;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _mNormalizedCoordinates;
    struct DYStateElement<float, GPUTools::SM::MTL::StateBaseDefault> _mLodMinClamp;
    struct DYStateElement<float, GPUTools::SM::MTL::StateBaseDefault> _mLodMaxClamp;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> _mLabel;
    struct DYStateElement<unsigned int, GPUTools::SM::MTL::StateBaseDefault> _mLodAverage;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mCompareFunction;
} Sampler_4521416c;

typedef struct StateMirrorManager<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    struct unordered_map<unsigned long long, std::__1::unique_ptr<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::default_delete<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unique_ptr<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::default_delete<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>>> _deviceMap;
    struct ObjectTrackingMap<GPUTools::SM::MTL::Layer<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _layerMap;
    unsigned long long _surfaceBoundsLayerID;
    struct PassthroughBase _passthrough;
    int _lastFunctionIndex;
} StateMirrorManager_4613010e;

typedef struct Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    unsigned long long _objectID;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mPurgeableState;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mUsage;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> _mLabel;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mType;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mPixelFormat;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mSampleCount;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mArrayLength;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _mIsDrawable;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _mIsFramebufferOnly;
    struct DYStateElement<long long, GPUTools::SM::MTL::StateBaseDefault> _mMipmapLevelCount;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mRotation;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mIOSurfaceRef;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mIOSurfacePlane;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mRootResource;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mStorageMode;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mCPUCacheMode;
    struct vector<GPUTools::SM::MTL::TextureSlice<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::TextureSlice<GPUTools::SM::MTL::DefaultBaseObjectTypes>>> _textureSlices;
    struct unordered_set<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long>> _ownedTextureIDs;
    _Bool _isTextureView;
    _Bool _isBufferBacked;
} Texture_f24102c5;

typedef struct VecN<float, 4> {
    float mData[4];
} VecN_24296b45;

typedef struct VecN<float, 6> {
    float mData[6];
} VecN_8f1bdb46;

typedef struct VecN<unsigned long long, 4> {
    unsigned long long mData[4];
} VecN_d22ea5a0;

typedef struct VertexAttribute<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _field1;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _field2;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _field3;
} VertexAttribute_ebed2729;

typedef struct VertexBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _field1;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _field2;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _field3;
} VertexBuffer_34433e31;

typedef struct VertexDescriptor<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    struct vector<GPUTools::SM::MTL::VertexBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::VertexBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>> _vertexBuffers;
    struct vector<GPUTools::SM::MTL::VertexAttribute<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::VertexAttribute<GPUTools::SM::MTL::DefaultBaseObjectTypes>>> _vertexAttributes;
} VertexDescriptor_e5d3aa79;

typedef struct shared_ptr<GPUTools::FD::Function> {
    struct Function *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_e8134367;

typedef struct unordered_map<unsigned long long, GPUMTLBindPoint, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, GPUMTLBindPoint>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, GPUMTLBindPoint>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, GPUMTLBindPoint>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, GPUMTLBindPoint>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, GPUMTLBindPoint>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUMTLBindPoint>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUMTLBindPoint>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUMTLBindPoint>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUMTLBindPoint>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUMTLBindPoint>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long long, GPUMTLBindPoint>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, GPUMTLBindPoint>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, GPUMTLBindPoint>, std::__1::equal_to<unsigned long long>, true>> {
            float _field1;
        } _field4;
    } _field1;
} unordered_map_75cc7d9b;

#pragma mark -

//
// File: /Applications/Xcode-7GM.app/Contents/PlugIns/GPUDebuggerMTLSupport.ideplugin/Contents/MacOS/GPUDebuggerMTLSupport
// UUID: A2381192-AA2E-35AF-B38F-DF3DDC999A12
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 18079.0.0.0.0
//       Minimum Mac OS X version: 10.10.0
//                    SDK version: 10.11.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol DVTInvalidation <NSObject>
- (void)primitiveInvalidate;

@optional
+ (BOOL)supportsInvalidationPrevention;
+ (unsigned long long)assertionBehaviorForKeyValueObservationsAtEndOfEvent;
+ (unsigned long long)assertionBehaviorAfterEndOfEventForSelector:(SEL)arg1;
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly, nonatomic, getter=isValid) BOOL valid;
- (void)invalidate;
@end

@protocol DYBuffer <DYResource, DYCacheableResource>
@property(readonly, nonatomic) NSData *data;
@end

@protocol DYCacheableResource <NSObject>
@property(readonly, nonatomic) unsigned long long cachingCost;
@end

@protocol DYFunctionTracerDelegate <NSObject>

@optional
- (NSString *)generateArrayVariable:(NSString *)arg1 ForArgument:(const struct Argument *)arg2;
- (NSString *)unloadStringForURL:(NSString *)arg1;
- (NSString *)loadStringForURL:(NSString *)arg1 variableName:(NSString *)arg2 bufferType:(NSString *)arg3;
- (NSMutableArray *)constructTraceLinesWithFunction:(const struct Function *)arg1 arguments:(NSArray *)arg2;
- (NSMutableString *)constructTraceLineWithFunction:(const struct Function *)arg1 arguments:(NSArray *)arg2;
- (NSString *)rewriteVariable:(const char *)arg1 receiver:(unsigned long long)arg2;
- (NSString *)rewriteArgument:(const struct Argument *)arg1;
- (NSString *)getCastForArgument:(const struct Argument *)arg1 inFunction:(const struct Function *)arg2;
- (NSString *)createArgument:(const struct Argument *)arg1 forFunction:(const struct Function *)arg2 withValue:(NSString *)arg3;
- (NSString *)rewriteReceiver:(unsigned long long)arg1;
- (NSString *)rewriteURL:(const char *)arg1;
@end

@protocol DYResource <NSObject, NSCoding>
+ (NSString *)keyForResourceWithID:(unsigned long long)arg1 type:(unsigned int)arg2 containerID:(unsigned long long)arg3;
@property(readonly, nonatomic) BOOL isStatic;
@property(readonly, nonatomic) NSMutableDictionary *properties;
@property(readonly, copy, nonatomic) NSString *label;
@property(readonly, nonatomic) unsigned long long objectID;
@property(readonly, nonatomic) unsigned long long containerID;
@property(readonly, nonatomic) unsigned int resourceType;
- (id)initUpdateWithType:(unsigned int)arg1 objectID:(unsigned long long)arg2 containerID:(unsigned long long)arg3 changes:(NSDictionary *)arg4;

@optional
- (id)createFullObjectWithFunctionStream:(DYFunctionStream *)arg1 dataResolver:(NSData * (^)(char *))arg2;
- (NSDictionary *)streamDictAtFunctionIndex:(unsigned int)arg1;
- (NSString *)keyWithSharegroupID:(unsigned long long)arg1;
@end

@protocol DYTexture <DYResource, DYCacheableResource>
@property(readonly, nonatomic) BOOL isFlipped;
@property(readonly, nonatomic) BOOL isCubemap;
@property(readonly, nonatomic) id <DYTextureImage> firstValidTextureImage;
@property(readonly, nonatomic) unsigned int mipmapLevelsUsedMask;
@property(readonly, nonatomic) int maxMipmapLevel;
@property(readonly, nonatomic) int baseMipmapLevel;
- (NSString *)cubemapLabelForFaceIndex:(int)arg1;
- (id <DYTextureImage>)textureImageForMipmapLevel:(int)arg1 layer:(int)arg2;
- (unsigned int)layerCountForMipmapLevel:(unsigned int)arg1;
@end

@protocol GPUDataTableViewDataProvider <NSObject>
- (NSString *)dataTableView:(GPUDataTableView *)arg1 textForCellAtRow:(long long)arg2 column:(long long)arg3 inColumnGroup:(long long)arg4;
- (long long)dataTableView:(GPUDataTableView *)arg1 numberOfColumnsInGroup:(long long)arg2;
- (long long)numberOfColumnGroupsInTableView:(GPUDataTableView *)arg1;
- (long long)numberOfRowsInDataTableView:(GPUDataTableView *)arg1;

@optional
- (NSString *)dataTableView:(GPUDataTableView *)arg1 titleForColumnGroup:(long long)arg2;
- (NSString *)dataTableView:(GPUDataTableView *)arg1 titleForColumn:(long long)arg2 inGroup:(long long)arg3;
@end

@protocol GPUDataTableViewDelegate <NSObject>

@optional
- (double)dataTableView:(GPUDataTableView *)arg1 minimumWidthForColumn:(long long)arg2 inGroup:(long long)arg3;
- (void)dataTableViewWillShowContextMenu:(GPUDataTableView *)arg1;
- (NSColor *)dataTableView:(GPUDataTableView *)arg1 colorForCellAtRow:(long long)arg2 column:(long long)arg3 inGroup:(long long)arg4;
@end

@protocol GPUInvestigatorReportProvider <DVTInvalidation>
- (void)resetReportEditorStateThatDependsOnTheInvestigatorCase;
- (NSDictionary *)findingStatisticsKeyToResourceTypeMap;
- (GPUTreeNode *)createProgramCentricTreeForGroupedFindings:(NSArray *)arg1 investigatorFinding:(DYInvestigatorFinding *)arg2;
- (NSString *)localizedStringWithKey:(NSString *)arg1 andComment:(NSString *)arg2;
- (void)showResource:(GPUInvestigatorReportResource *)arg1;
- (void)updateDisplayedFindingsWithMCSInfo:(DYInvestigatorFinding *)arg1;
- (void)updateReportWithAdditionalInfo;
- (void)addFindingToReport:(DYInvestigatorFinding *)arg1;
- (void)updateReportWithCaseData:(int)arg1;
- (id)initWithReportEditor:(GPUReportEditor *)arg1;
@end

@protocol GPUMTLDisplayableStrategy <NSObject>
@property(nonatomic) __weak GPUMTLTraceTextureDisplayableItem *displayableItem;
- (DYFuture *)loadDisplaySet;
- (id)initWithTextureDisplayable:(GPUMTLTraceTextureDisplayableItem *)arg1;
@end

@protocol GPUMTLStateMirrorInterface <NSObject>
@property(readonly) BOOL hasStateMirror;
@property(copy) GPUMTLStateMirror *stateMirror;
@end

@protocol GPUMTLTraceItemInterface <NSObject>
@property(readonly, nonatomic) unsigned long long receiverID;
@property(readonly, nonatomic) unsigned long long owningDeviceID;
@end

@protocol GPUProgramPerformanceReportProvider
- (NSMutableArray *)generateProgramPerformanceTree;
- (GPUReportTotalItem *)programPerformanceTotalItem;
- (id)initWithReportEditor:(GPUReportEditor *)arg1;
@end

@protocol GPUResourceManager <NSObject>
- (DYFuture *)loadClientDataBufferFromArchive:(NSString *)arg1 offset:(long long)arg2 functionIndex:(unsigned int)arg3;
- (DYFuture *)updateResource:(id <DYResource>)arg1;
- (DYFuture *)loadWireframeImageWithContainerID:(unsigned long long)arg1 functionIndex:(unsigned int)arg2;
- (DYFuture *)loadResourceWithItem:(GPUTraceResourceItem *)arg1 containerID:(unsigned long long)arg2 stateMirrorObject:(const void *)arg3 functionIndex:(unsigned int)arg4;
- (DYFuture *)loadResourceWithType:(unsigned int)arg1 containerID:(unsigned long long)arg2 stateMirrorObject:(const void *)arg3 functionIndex:(unsigned int)arg4;
- (void)invalidateDeviceCache;
- (id)initWithCaptureStore:(id <DYCaptureStore>)arg1 resourceStreamer:(DYResourceStreamer *)arg2;
@end

@protocol GPUTraceDisplaySet <NSObject>
@property(readonly, nonatomic) NSArray *elementIDs;
@property(readonly, nonatomic) unsigned int numElements;

@optional
@property(retain) id <DYResource> wireframeImage;
@end

@protocol GPUTraceFramebuffer <NSObject>
@property(retain) id <DYResource> wireframeImage;
@property(retain) id <DYResource> stencilResourceObject;
@property(retain) id <DYResource> depthResourceObject;
@property(readonly) NSMutableDictionary *colorResourceObjects;
@property(readonly) id <DYFrameBuffer> frameBufferObject;
- (NSArray *)attachments;
- (id <DYFrameBufferAttachment>)attachmentForAttachmentID:(unsigned long long)arg1;
- (id)initWithFBO:(id <DYFrameBuffer>)arg1;
@end

@protocol IDEKeyDrivenNavigableItemRepresentedObject <NSObject>
@property(readonly) NSString *navigableItem_name;

@optional
@property(readonly) NSString *navigableItem_groupIdentifier;
@property(readonly) DVTDocumentLocation *navigableItem_contentDocumentLocation;
@property(readonly) DVTFileDataType *navigableItem_documentType;
@property(readonly) IDEFileReference *navigableItem_fileReference;
@property(readonly) BOOL navigableItem_isLeaf;
@property(readonly) BOOL navigableItem_isMajorGroup;
@property(readonly) NSString *navigableItem_toolTip;
@property(readonly) NSImage *navigableItem_image;
- (DVTDocumentLocation *)navigableItem_contentDocumentLocationInDocumentURL:(NSURL *)arg1;
@end

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (BOOL)respondsToSelector:(SEL)arg1;
- (BOOL)conformsToProtocol:(Protocol *)arg1;
- (BOOL)isMemberOfClass:(Class)arg1;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (BOOL)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

__attribute__((visibility("hidden")))
@interface DYMTLInvestigatorCaseConfigData : DYInvestigatorCaseConfigData
{
}

- (id)_createSample:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface DYMTLOverviewMeasurementsPerSample : DYOverviewMeasurementsPerSample
{
}

- (BOOL)waitOnGPU;
- (void)log;
- (id)initWithDictionary:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)description;

@end

__attribute__((visibility("hidden")))
@interface GPUMTLAnnotationProvider : DVTAnnotationProvider
{
    IDEAnnotationContext *_context;
}

+ (id)annotationProviderForContext:(id)arg1 error:(id *)arg2;
- (void).cxx_destruct;
- (void)onUpdateProfilerData:(id)arg1;
- (void)onUpdatedProfilerDataIsAvailable:(id)arg1;
- (void)onLibraryUpdateAttempted:(id)arg1;
- (void)_addAnnotationWithClass:(Class)arg1 text:(id)arg2 lineRange:(struct _NSRange)arg3;
- (void)providerWillUninstall;
- (id)initWithAnnotationContext:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface GPUMTLBlitDisplayableStrategy : NSObject <GPUMTLDisplayableStrategy>
{
    GPUMTLTraceTextureDisplayableItem *_displayableItem;
}

@property(nonatomic) __weak GPUMTLTraceTextureDisplayableItem *displayableItem; // @synthesize displayableItem=_displayableItem;
- (void).cxx_destruct;
- (id)loadDisplaySet;
- (id)initWithTextureDisplayable:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GPUMTLBufferData : NSObject
{
    unsigned int _fractionDigits;
    BOOL _showAsHex;
    int _dataOffset;
    int _subcomponentOffset;
    unsigned int _format;
    int _stride;
    NSData *_data;
    NSString *_name;
}

+ (id)maxLengthStringForFormat:(unsigned int)arg1;
+ (void)initialize;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
@property(nonatomic) int stride; // @synthesize stride=_stride;
@property(nonatomic) BOOL showAsHex; // @synthesize showAsHex=_showAsHex;
@property(nonatomic) unsigned int format; // @synthesize format=_format;
@property(nonatomic) int subcomponentOffset; // @synthesize subcomponentOffset=_subcomponentOffset;
@property(nonatomic) int dataOffset; // @synthesize dataOffset=_dataOffset;
@property(retain, nonatomic) NSData *data; // @synthesize data=_data;
- (void).cxx_destruct;
- (id)formattedDataAtIndex:(int)arg1;
- (id)dataAtIndex:(int)arg1;
@property(readonly, nonatomic) int bufferLength;
- (id)initWithData:(id)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface GPUMTLBufferEditor : GPUResourceEditor <GPUDataTableViewDataProvider, GPUDataTableViewDelegate>
{
    GPUMTLBufferData *_bufferData;
    DYRenderingAttributes *_renderingAttributes;
    double _minColumnWidth;
    BOOL _isPopulated;
    BOOL _isIndexBuffer;
    BOOL _showOffset;
    GPUDataTableView *_vboView;
    NSPopUpButton *_displayFormatPopup;
    NSString *_displayFormat;
    DVTBorderedView *_bottomToolbar;
    NSLayoutConstraint *_toolbarHeightConstraint;
    long long _numberOfColumns;
}

+ (id)assetBundle;
@property BOOL showOffset; // @synthesize showOffset=_showOffset;
@property(nonatomic) long long numberOfColumns; // @synthesize numberOfColumns=_numberOfColumns;
@property(nonatomic) __weak NSLayoutConstraint *toolbarHeightConstraint; // @synthesize toolbarHeightConstraint=_toolbarHeightConstraint;
@property(nonatomic) __weak DVTBorderedView *bottomToolbar; // @synthesize bottomToolbar=_bottomToolbar;
@property(retain, nonatomic) NSString *displayFormat; // @synthesize displayFormat=_displayFormat;
@property(retain, nonatomic) NSPopUpButton *displayFormatPopup; // @synthesize displayFormatPopup=_displayFormatPopup;
@property(retain, nonatomic) GPUDataTableView *vboView; // @synthesize vboView=_vboView;
- (void).cxx_destruct;
- (void)viewWillUninstall;
- (void)beginEditor;
- (void)populate;
- (void)setRepresentedObject:(id)arg1;
- (void)loadView;
- (struct CGPoint)scrollPointForByteOffset:(long long)arg1;
- (long long)documentVisibleRectOffsetInBytes;
- (unsigned int)bytesPerItem;
- (id)widthInColumns;
- (void)setWidthInColumns:(id)arg1;
- (double)dataTableView:(id)arg1 minimumWidthForColumn:(long long)arg2 inGroup:(long long)arg3;
- (id)dataTableView:(id)arg1 textForCellAtRow:(long long)arg2 column:(long long)arg3 inColumnGroup:(long long)arg4;
- (long long)dataTableView:(id)arg1 numberOfColumnsInGroup:(long long)arg2;
- (long long)numberOfColumnGroupsInTableView:(id)arg1;
- (long long)numberOfRowsInDataTableView:(id)arg1;
- (id)supportedResourceClasses;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GPUMTLChangedLibrary : NSObject
{
    BOOL _offline;
    IDEEditorDocument *_document;
    const Library_fcf3a16e *_library;
    unsigned long long _deviceID;
}

@property(readonly) unsigned long long deviceID; // @synthesize deviceID=_deviceID;
@property(readonly) const Library_fcf3a16e *library; // @synthesize library=_library;
@property(readonly) IDEEditorDocument *document; // @synthesize document=_document;
@property(readonly) BOOL offline; // @synthesize offline=_offline;
- (void).cxx_destruct;
- (id)initWithLibrary:(const Library_fcf3a16e *)arg1 fromDocument:(id)arg2 onDevice:(unsigned long long)arg3;

@end

__attribute__((visibility("hidden")))
@interface GPUMTLComputeDisplayableStrategy : NSObject <GPUMTLDisplayableStrategy>
{
    GPUMTLTraceTextureDisplayableItem *_displayableItem;
}

@property(nonatomic) __weak GPUMTLTraceTextureDisplayableItem *displayableItem; // @synthesize displayableItem=_displayableItem;
- (void).cxx_destruct;
- (id)loadDisplaySet;
- (id)initWithTextureDisplayable:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GPUMTLEncoderStats : NSObject
{
}

@end

__attribute__((visibility("hidden")))
@interface GPUMTLComputeEncoderStats : GPUMTLEncoderStats
{
    unsigned int _dispatchCalls;
}

@property(nonatomic) unsigned int dispatchCalls; // @synthesize dispatchCalls=_dispatchCalls;

@end

__attribute__((visibility("hidden")))
@interface GPUMTLDebuggerController : GPUDebuggerController
{
    NSCache *_sourceCache;
    DYMTLAnalyzerArchiveVisitor *_analyzerVisitor;
    DVTObservingToken *_overviewSamplesObserver;
    NSMutableArray *_overviewSampleArray;
    BOOL _finalizedOverview;
    NSMutableDictionary *_changedLibraries;
    NSObject<OS_dispatch_queue> *_libraryUpdateQueue;
    NSMutableDictionary *_perEncoderStats;
    DVTFilePath *_libraryPath;
    BOOL _updateLibrary;
    BOOL _shadersUpdatable;
    GPUMTLFrameStats *_frameStats;
}

+ (id)assetBundle;
@property(readonly) GPUMTLFrameStats *frameStats; // @synthesize frameStats=_frameStats;
- (BOOL)shadersUpdatable;
- (void).cxx_destruct;
- (BOOL)supportsDebugBarShaderUpdate;
- (id)statsForEncoder:(unsigned long long)arg1;
- (BOOL)analyzeStoredCaptureArchive;
- (void)onRequestProfilerData:(id)arg1;
- (BOOL)isDisassemblerAvailable;
- (id)runShaderProfiler;
- (void)handleInferiorSessionActiveState;
- (void)traceSessionEstablishedWithNewArchive:(BOOL)arg1;
- (BOOL)_configureInvestigatorWithCaseConfigData:(id)arg1;
- (id)createProgramPerformanceReportProvider:(id)arg1;
- (id)createInvestigatorReportProvider:(id)arg1;
- (void)createReportWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)_updateLibrary:(const Library_fcf3a16e *)arg1 withChanges:(id)arg2 forDocument:(id)arg3 onDevice:(unsigned long long)arg4;
- (void)_updateDefaultLibrary:(const Library_fcf3a16e *)arg1 onDevice:(unsigned long long)arg2;
- (void)_updateShaderState;
- (void)updateShaders;
- (void)handleDocumentChanged:(id)arg1 currentAPIItem:(id)arg2;
- (void)resetResourceManagerWithResourceStreamer:(id)arg1;
- (BOOL)handleCaptureSessionFinalization:(id)arg1;
- (void)setupCaptureSessionInfoWithArchive:(id)arg1;
- (void)handleAppSessionTransportMessage:(id)arg1;
- (void)_unarchiveReports;
- (void)setupGuestAppSession:(id)arg1;
- (id)newGuestAppSessionWithGuestApp:(id)arg1 device:(id)arg2 deferLaunch:(BOOL)arg3;
- (void)createModelFactory;
- (BOOL)supportsInvestigator;
- (void)primitiveInvalidate;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface GPUMTLFrameStats : NSObject
{
    unsigned int _drawCalls;
    unsigned int _dispatchCalls;
    unsigned int _renderEncoders;
    unsigned int _computeEncoders;
    unsigned int _blitEncoders;
    unsigned int _commandBuffers;
    unsigned long long _loadBandwidth;
    unsigned long long _storeBandwidth;
}

@property(nonatomic) unsigned int commandBuffers; // @synthesize commandBuffers=_commandBuffers;
@property(nonatomic) unsigned long long storeBandwidth; // @synthesize storeBandwidth=_storeBandwidth;
@property(nonatomic) unsigned long long loadBandwidth; // @synthesize loadBandwidth=_loadBandwidth;
@property(nonatomic) unsigned int blitEncoders; // @synthesize blitEncoders=_blitEncoders;
@property(nonatomic) unsigned int computeEncoders; // @synthesize computeEncoders=_computeEncoders;
@property(nonatomic) unsigned int renderEncoders; // @synthesize renderEncoders=_renderEncoders;
@property(nonatomic) unsigned int dispatchCalls; // @synthesize dispatchCalls=_dispatchCalls;
@property(nonatomic) unsigned int drawCalls; // @synthesize drawCalls=_drawCalls;
@property(readonly, nonatomic) unsigned long long loadStoreBandwidth;
@property(readonly, nonatomic) unsigned int displayableCalls;

@end

__attribute__((visibility("hidden")))
@interface GPUMTLFunctionGeniusResult : NSObject <IDEKeyDrivenNavigableItemRepresentedObject>
{
    NSURL *_sourceURL;
    NSString *_label;
    unsigned long long _lineNumber;
    BOOL _representsLibrary;
}

- (void).cxx_destruct;
@property(readonly) DVTFileDataType *navigableItem_documentType;
@property(readonly) DVTDocumentLocation *navigableItem_contentDocumentLocation;
@property(readonly) NSImage *navigableItem_image;
@property(readonly) NSString *navigableItem_name;
- (id)initWithSourceURL:(id)arg1 label:(id)arg2 lineNumber:(unsigned long long)arg3 representsLibrary:(BOOL)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) IDEFileReference *navigableItem_fileReference;
@property(readonly) NSString *navigableItem_groupIdentifier;
@property(readonly) BOOL navigableItem_isLeaf;
@property(readonly) BOOL navigableItem_isMajorGroup;
@property(readonly) NSString *navigableItem_toolTip;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GPUMTLFunctionGeniusResultNavigableItem : IDEFileNavigableItem
{
}

- (id)documentType;
- (id)contentDocumentLocation;
- (id)image;
- (id)name;
- (id)_geniusResult;

@end

__attribute__((visibility("hidden")))
@interface GPUMTLInvestigatorReportProvider : NSObject <GPUInvestigatorReportProvider>
{
    GPUReportEditor *_reportEditor;
}

- (void).cxx_destruct;
- (void)resetReportEditorStateThatDependsOnTheInvestigatorCase;
- (id)findingStatisticsKeyToResourceTypeMap;
- (id)createProgramCentricTreeForGroupedFindings:(id)arg1 investigatorFinding:(id)arg2;
- (id)localizedStringWithKey:(id)arg1 andComment:(id)arg2;
- (void)showResource:(id)arg1;
- (void)updateDisplayedFindingsWithMCSInfo:(id)arg1;
- (void)updateReportWithAdditionalInfo;
- (void)addFindingToReport:(id)arg1;
- (void)updateReportWithCaseData:(int)arg1;
- (void)primitiveInvalidate;
- (id)initWithReportEditor:(id)arg1;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

__attribute__((visibility("hidden")))
@interface GPUMTLLabelCacheEntry : NSObject
{
    NSMutableDictionary *_labelMap;
    int _firstFunctionIndex;
}

- (void).cxx_destruct;
- (id)firstLabel;
- (id)labelForFunctionIndex:(int)arg1;
- (id)_findClosestFunctionIndex:(int)arg1;
- (void)setLabel:(id)arg1 forFunctionIndex:(int)arg2;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface GPUMTLModelFactory : GPUTraceModelFactory
{
    NSMapTable *_resourceTypeToViewMaptable;
    GPUMTLTraceOutline *_outline;
}

+ (id)_keyForResourceItem:(id)arg1;
+ (Class)renderJobClass;
+ (Class)imageResourceSettingBubbleClass;
+ (Class)textureInfoBubbleClass;
+ (Class)depthStencilInfoBubbleClass;
+ (Class)colorInfoBubbleClass;
+ (Class)captureSessionInfoClassWithAPI:(unsigned int)arg1;
@property(retain, nonatomic) GPUMTLTraceOutline *outline; // @synthesize outline=_outline;
- (void).cxx_destruct;
- (id)createInfoBubbleForImageResource:(id)arg1 parentView:(id)arg2 owner:(id)arg3 renderingAttributes:(id)arg4;
- (id)resourceItemOfType:(unsigned int)arg1 resourceID:(unsigned int)arg2 forFunctionIndex:(unsigned int)arg3;
- (id)storedRenderingAttributesForResourceItem:(id)arg1;
- (id)resolveCurrentResourceItemWithPreviousItem:(id)arg1 currentMainEditorItem:(id)arg2 topLevelObjects:(id)arg3;
- (void)establishChildrenForProgramItem:(id)arg1;
- (id)programObjectFromProgramItem:(id)arg1 shaderType:(unsigned int)arg2;
- (id)realizeResourcesForResourceItem:(id)arg1;
- (void)generateResourcesForGroup:(id)arg1 apiItem:(id)arg2 boundOnly:(BOOL)arg3;
- (void)createParentResourceGroupsForAPIItem:(id)arg1;
- (id)_createResourceGroup:(id)arg1 parentItem:(id)arg2 boundOnly:(BOOL)arg3;
- (void)primitiveInvalidate;
- (id)apiItemFromDisplayIndex:(unsigned int)arg1;
- (id)locateDisplayableItemToDraw:(id)arg1 isAssociatedWithStateItem:(char *)arg2;
- (id)apiItemForTrueFunctionIndex:(unsigned int)arg1;
- (id)apiItemFromFunctionIndex:(unsigned int)arg1;
- (void)invalidateModel;
- (void)generateModelWithTraceSession:(id)arg1;
- (id)resourceTypeToViewClassMaptable;
- (id)frames;
- (id)domainProviderRootProgramGroup;
- (id)domainProviderRootResourceGroup;
- (id)allMarkerItems;
- (id)allAPIItems;
- (id)allDisplayableItems;
- (id)lastDisplayableItem;
- (id)allPrograms;
- (id)allTraceItems;
- (id)rootProcessItem;
- (id)initWithController:(id)arg1 variablesViewContentProviderClass:(Class)arg2;

@end

__attribute__((visibility("hidden")))
@interface GPUMTLOutlineLabelCache : NSObject
{
    NSMutableDictionary *_objectMap;
}

- (void).cxx_destruct;
- (void)setLabel:(id)arg1 forObjectID:(unsigned long long)arg2 functionIndex:(unsigned int)arg3;
- (id)labelForObjectID:(unsigned long long)arg1 functionIndex:(unsigned int)arg2;
- (id)labelForObjectID:(unsigned long long)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface GPUMTLProgramPerformanceReportProvider : NSObject <GPUProgramPerformanceReportProvider>
{
    GPUReportEditor *_reportEditor;
}

- (void).cxx_destruct;
- (id)generateProgramPerformanceTree;
- (id)programPerformanceTotalItem;
- (id)initWithReportEditor:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface GPUMTLRenderEncoderStats : GPUMTLEncoderStats
{
    unsigned int _drawCalls;
    unsigned long long _loadBandwidth;
    unsigned long long _storeBandwidth;
}

@property(nonatomic) unsigned long long storeBandwidth; // @synthesize storeBandwidth=_storeBandwidth;
@property(nonatomic) unsigned long long loadBandwidth; // @synthesize loadBandwidth=_loadBandwidth;
@property(nonatomic) unsigned int drawCalls; // @synthesize drawCalls=_drawCalls;
@property(readonly, nonatomic) unsigned long long loadStoreBandwidth;

@end

__attribute__((visibility("hidden")))
@interface GPUMTLRenderJob : GPURenderJob
{
    unsigned int _attachmentIndex;
    unsigned long long _selectedLevel;
    unsigned long long _selectedSlice;
}

@property(readonly, nonatomic) unsigned int attachmentIndex; // @synthesize attachmentIndex=_attachmentIndex;
@property(nonatomic) unsigned long long selectedSlice; // @synthesize selectedSlice=_selectedSlice;
@property(nonatomic) unsigned long long selectedLevel; // @synthesize selectedLevel=_selectedLevel;
- (BOOL)showOverlay;
- (void)setRenderingAttributes:(id)arg1;
- (struct CGSize)imageSize;
- (BOOL)isColor;
- (BOOL)flipped;
- (id)displayElementName;
- (BOOL)isStencilDisplayElement;
- (BOOL)isDepthDisplayElement;
- (void)resolveWithTraceResourceItem:(id)arg1;
- (id)initWithResource:(id)arg1 modelFactory:(id)arg2 attachmentIndex:(unsigned int)arg3 overlayResource:(id)arg4 framebuffer:(id)arg5;

@end

__attribute__((visibility("hidden")))
@interface GPUMTLResourceManager : NSObject <GPUResourceManager>
{
    struct unique_ptr<GPUTools::MTL::ResourceManager<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::default_delete<GPUTools::MTL::ResourceManager<GPUTools::SM::MTL::DefaultBaseObjectTypes>>> _pResourceManager;
}

+ (unsigned int)_realFunctionIndexForIndex:(unsigned int)arg1;
- (id).cxx_construct;
- (void).cxx_destruct;
- (id)loadClientDataBufferFromArchive:(id)arg1 offset:(long long)arg2 functionIndex:(unsigned int)arg3;
- (id)updateResource:(id)arg1;
- (id)loadWireframeImageWithContainerID:(unsigned long long)arg1 functionIndex:(unsigned int)arg2;
- (id)loadResourceWithType:(unsigned int)arg1 containerID:(unsigned long long)arg2 stateMirrorObject:(const void *)arg3 functionIndex:(unsigned int)arg4;
- (id)loadResourceWithItem:(id)arg1 containerID:(unsigned long long)arg2 stateMirrorObject:(const void *)arg3 functionIndex:(unsigned int)arg4;
- (void)invalidateDeviceCache;
- (id)initWithCaptureStore:(id)arg1 resourceStreamer:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GPUMTLStateMirror : NSObject <NSCopying>
{
    int _functionIndex;
    unsigned long long _retrievalDeviceID;
    unsigned long long _objectID;
    StateMirrorManager_4613010e _manager;
}

@property(nonatomic) unsigned long long objectID; // @synthesize objectID=_objectID;
@property(nonatomic) unsigned long long retrievalDeviceID; // @synthesize retrievalDeviceID=_retrievalDeviceID;
@property int functionIndex; // @synthesize functionIndex=_functionIndex;
@property(readonly, nonatomic) StateMirrorManager_4613010e *manager; // @synthesize manager=_manager;
- (id).cxx_construct;
- (void).cxx_destruct;
- (BOOL)isFramebufferAttachment:(id)arg1;
- (BOOL)isResourceItemBoundAt:(const struct GPUMTLBindPoint *)arg1 resourceItem:(id)arg2;
- (struct GPUMTLBindPoint)getBindPointForResourceItem:(id)arg1;
- (id)labelForImageResource:(id)arg1;
- (id)_labelForComputePipelineState:(const ComputePipelineState_82a05cab *)arg1 usingThumbnail:(BOOL)arg2;
- (id)_labelForPipelineFunction:(const RenderPipelineState_2531dade *)arg1 type:(unsigned long long)arg2 usingThumbnail:(BOOL)arg3;
- (const Function_130258c1 *)_pipelineFunction:(const RenderPipelineState_2531dade *)arg1 forType:(unsigned long long)arg2;
- (id)_labelForFunction:(const Function_130258c1 *)arg1 type:(unsigned long long)arg2 usingThumbnail:(BOOL)arg3;
- (id)_labelForObject:(unsigned long long)arg1 type:(unsigned int)arg2 prefix:(const char *)arg3 suffix:(const char *)arg4 usingThumbnail:(BOOL)arg5;
- (unsigned long long)deviceIDForReceiverID:(unsigned long long)arg1;
- (const Device_5cef99fc *)stateMirrorDevice;
- (void)enumerateLibrariesWithSourceURL:(id)arg1 block:(CDUnknownBlockType)arg2;
- (const ParallelRenderCommandEncoder_874a9a1a *)parallelRenderCommandEncoderObjectFromID:(unsigned long long)arg1;
- (const Texture_f24102c5 *)textureObjectFromID:(unsigned long long)arg1;
- (const Sampler_4521416c *)samplerObjectFromID:(unsigned long long)arg1;
- (const RenderPipelineState_2531dade *)renderPipelineStateObjectFromID:(unsigned long long)arg1;
- (const RenderCommandEncoder_516b45a3 *)renderCommandEncoderObjectFromID:(unsigned long long)arg1;
- (const Library_fcf3a16e *)libraryObjectFromID:(unsigned long long)arg1;
- (const ComputePipelineState_82a05cab *)computePipelineStateObjectFromID:(unsigned long long)arg1;
- (const Function_130258c1 *)functionObjectFromID:(unsigned long long)arg1;
- (const DepthStencilState_d26ffc7c *)depthStencilStateObjectFromID:(unsigned long long)arg1;
- (const ComputeCommandEncoder_926cb968 *)computeCommandEncoderObjectFromID:(unsigned long long)arg1;
- (const CommandQueue_f95f9d2e *)commandQueueObjectFromID:(unsigned long long)arg1;
- (const CommandBuffer_b8d892ad *)commandBufferObjectFromID:(unsigned long long)arg1;
- (const Buffer_e8b67ba7 *)bufferObjectFromID:(unsigned long long)arg1;
- (const BlitCommandEncoder_0e8e1979 *)blitCommandEncoderObjectFromID:(unsigned long long)arg1;
- (unsigned long long)currentPipelineStateID;
- (id)generatePipelineStateProgramGroup:(unsigned long long)arg1 withParent:(id)arg2;
- (void)_addFunctionFromComputePipelineState:(const ComputePipelineState_82a05cab *)arg1 andDevice:(const Device_5cef99fc *)arg2 toProgramGroup:(id)arg3 andChildren:(id)arg4;
- (void)_addFunction:(unsigned long long)arg1 fromRenderPipelineState:(const RenderPipelineState_2531dade *)arg2 andDevice:(const Device_5cef99fc *)arg3 toProgramGroup:(id)arg4 andChildren:(id)arg5;
- (void)setupChildrenForBoundResourceGroup:(id)arg1 resourceType:(unsigned int)arg2;
- (void)_addBoundComputePipelineStateFunctionToResourceGroup:(id)arg1;
- (void)_addBoundPipelineFunctionsToResourceGroup:(id)arg1;
- (void)_addFunctionBindingObjectToResourceGroup:(id)arg1 device:(const Device_5cef99fc *)arg2 objectID:(unsigned long long)arg3 functionType:(unsigned long long)arg4;
- (id)_infoForFunctionWithID:(unsigned long long)arg1 device:(const Device_5cef99fc *)arg2;
- (void)_updateResourceMapWithBoundFramebufferTextures:(unordered_map_75cc7d9b *)arg1 device:(const Device_5cef99fc *)arg2 renderCommandEncoder:(const RenderCommandEncoder_516b45a3 *)arg3;
- (void)_addBoundTexturesToResourceGroup:(id)arg1;
- (void)_addBoundBuffersToResourceGroup:(id)arg1;
- (void)setupChildrenForAllResourceGroup:(id)arg1 resourceType:(unsigned int)arg2;
- (void)_addAllTexturesToResourceGroup:(id)arg1;
- (void)_addAllBuffersToResourceGroup:(id)arg1;
- (void)_addResourceMapContentsToResourceGroup:(id)arg1 usingResourceMap:(const unordered_map_75cc7d9b *)arg2;
- (id)_resourceLabelPrefix:(const struct GPUMTLBindPoint *)arg1;
- (void)_updateResourceMapForID:(unsigned long long)arg1 index:(int)arg2 device:(const Device_5cef99fc *)arg3 resourceType:(unsigned int)arg4 bindingType:(unsigned int)arg5 resourceMap:(unordered_map_75cc7d9b *)arg6 indexType:(unsigned long long)arg7;
- (void)_updateResourceMapForID:(unsigned long long)arg1 index:(int)arg2 device:(const Device_5cef99fc *)arg3 resourceType:(unsigned int)arg4 bindingType:(unsigned int)arg5 resourceMap:(unordered_map_75cc7d9b *)arg6;
- (void)_updateResourceMapForID:(unsigned long long)arg1 index:(int)arg2 device:(const Device_5cef99fc *)arg3 resourceType:(unsigned int)arg4 resourceMap:(unordered_map_75cc7d9b *)arg5;
- (void)_addObjectToParent:(id)arg1 objectID:(unsigned long long)arg2 resourceType:(unsigned int)arg3 indexType:(unsigned long long)arg4 bindPoint:(struct GPUMTLBindPoint)arg5 bindingIndex:(unsigned int)arg6 prefix:(const char *)arg7;
- (unsigned long long)_encoderIDFromBytesResourceID:(unsigned long long)arg1 andBindingIndex:(unsigned long long)arg2;
- (unsigned long long)_bytesResourceIDFromEncoderID:(unsigned long long)arg1 andBindingIndex:(unsigned long long)arg2;
- (id)_createGPUTraceBytesItemWithParent:(id)arg1 encoderObject:(const void *)arg2 bindingIndex:(unsigned long long)arg3 bytesType:(unsigned long long)arg4 prefix:(const char *)arg5 suffix:(const char *)arg6;
- (id)_createGPUTraceResourceItemWithParent:(id)arg1 object:(const void *)arg2 objectID:(unsigned long long)arg3 prefix:(const char *)arg4 suffix:(const char *)arg5 type:(unsigned int)arg6 indexType:(unsigned long long)arg7;
- (unsigned int)processFunction:(const struct Function *)arg1 functionIndex:(int)arg2;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithProperties:(id)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface GPUMTLTextureDisplaySet : NSObject <GPUTraceDisplaySet>
{
    NSMutableArray *_textureIDs;
    NSMutableDictionary *_colorResourceObjects;
    NSMutableDictionary *_baseLevels;
    NSMutableDictionary *_baseSlices;
}

@property(readonly) NSMutableDictionary *baseSlices; // @synthesize baseSlices=_baseSlices;
@property(readonly) NSMutableDictionary *baseLevels; // @synthesize baseLevels=_baseLevels;
@property(readonly) NSMutableDictionary *colorResourceObjects; // @synthesize colorResourceObjects=_colorResourceObjects;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSArray *elementIDs; // @dynamic elementIDs;
@property(readonly, nonatomic) unsigned int numElements; // @dynamic numElements;
- (void)addTexture:(unsigned long long)arg1 slice:(unsigned long long)arg2 level:(unsigned long long)arg3;
- (void)addTexture:(unsigned long long)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(retain) id <DYResource> wireframeImage;

@end

__attribute__((visibility("hidden")))
@interface GPUMTLTextureDisplayableRenderJob : GPUMTLRenderJob
{
    NSString *_displayElementName;
}

- (id)displayElementName;
- (void).cxx_destruct;
- (BOOL)isStencilDisplayElement;
- (BOOL)isDepthDisplayElement;
- (void)_determineElementNameWithItem:(id)arg1 andElementIndex:(unsigned long long)arg2;
- (id)initWithResource:(id)arg1 modelFactory:(id)arg2 displayableItem:(id)arg3 elementIndex:(unsigned long long)arg4 level:(unsigned long long)arg5 slice:(unsigned long long)arg6;

@end

__attribute__((visibility("hidden")))
@interface GPUMTLTraceDisplayableItem : GPUTraceDisplayableItem <DYFunctionTracerDelegate, GPUMTLStateMirrorInterface, GPUMTLTraceItemInterface>
{
    GPUMTLStateMirror *_stateMirror;
    unsigned long long _owningDeviceID;
}

@property(readonly, nonatomic) unsigned long long owningDeviceID; // @synthesize owningDeviceID=_owningDeviceID;
- (void).cxx_destruct;
- (id)rewriteArgument:(const struct Argument *)arg1;
- (id)rewriteReceiver:(unsigned long long)arg1;
- (id)rewriteURL:(const char *)arg1;
- (id)_renderedImage:(id)arg1 showDepth:(BOOL)arg2;
- (id)generateLabel;
@property(readonly, nonatomic) unsigned long long receiverID;
@property(readonly) BOOL hasStateMirror;
@property(copy) GPUMTLStateMirror *stateMirror;
- (void)primitiveInvalidate;
@property(readonly, copy) NSString *description;
- (id)initWithController:(id)arg1 parent:(id)arg2 deviceID:(unsigned long long)arg3 functionIndex:(int)arg4 displayIndex:(int)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GPUMTLTraceDrawItem : GPUMTLTraceDisplayableItem
{
    BOOL _dummyDrawItem;
    unsigned long long _commandBufferIndex;
    unsigned long long _commandEncoderIndex;
    unsigned long long _drawCallIndex;
}

- (BOOL)showAsAPIItem;
- (id)createRenderJobsForDisplaySet:(BOOL)arg1;
- (id)imageToExportToFile;
- (void)_connectWireframeImageToDisplaySet:(id)arg1;
- (void)_connectElementResourceToDisplaySet:(unsigned long long)arg1 resourceObject:(id)arg2;
- (id)_startLoadingWireframeImage;
- (id)_startLoadingDisplaySetElement:(unsigned long long)arg1;
- (void)_displaySetLoadIsComplete:(id)arg1;
- (id)_startLoadingDisplaySet;
- (void)setDecodedFunctionPointer:(shared_ptr_e8134367)arg1;
- (id)generateLabel;
- (id)initWithController:(id)arg1 parent:(id)arg2 deviceID:(unsigned long long)arg3 functionIndex:(int)arg4 displayIndex:(int)arg5 commandBufferIndex:(unsigned long long)arg6 commandEncoderIndex:(unsigned long long)arg7 drawCallIndex:(unsigned long long)arg8;

@end

__attribute__((visibility("hidden")))
@interface GPUMTLTraceFramebuffer : NSObject <GPUTraceFramebuffer, GPUTraceDisplaySet>
{
    id <DYFrameBuffer> _frameBufferObject;
    NSMutableDictionary *_colorResourceObjects;
    id <DYResource> _depthResourceObject;
    id <DYResource> _stencilResourceObject;
    id <DYResource> _wireframeImage;
}

@property(retain) id <DYResource> wireframeImage; // @synthesize wireframeImage=_wireframeImage;
@property(retain) id <DYResource> stencilResourceObject; // @synthesize stencilResourceObject=_stencilResourceObject;
@property(retain) id <DYResource> depthResourceObject; // @synthesize depthResourceObject=_depthResourceObject;
@property(readonly) NSMutableDictionary *colorResourceObjects; // @synthesize colorResourceObjects=_colorResourceObjects;
@property(readonly) id <DYFrameBuffer> frameBufferObject; // @synthesize frameBufferObject=_frameBufferObject;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSArray *elementIDs; // @dynamic elementIDs;
@property(readonly, nonatomic) unsigned int numElements; // @dynamic numElements;
- (id)attachments;
- (id)attachmentForAttachmentID:(unsigned long long)arg1;
- (id)initWithFBO:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GPUMTLTraceGeniusResultsFinder : IDEGeniusResultsFinder
{
}

+ (Class)editorDocumentClass;
- (void)_updateGeniusResults:(id)arg1 withDevice:(const Device_5cef99fc *)arg2 withFunction:(const Function_130258c1 *)arg3;
- (void)_addComputeFunctionGeniusResults:(id)arg1 withDevice:(const Device_5cef99fc *)arg2 objectID:(unsigned long long)arg3;
- (void)_addRenderFunctionGeniusResults:(id)arg1 withDevice:(const Device_5cef99fc *)arg2 objectID:(unsigned long long)arg3;
- (void)_addFunctionGeniusResults:(id)arg1 forAPIItem:(id)arg2;
- (void)_addLibraryGeniusResults:(id)arg1 forAPIItem:(id)arg2;
- (void)_updateGeniusResults;

@end

__attribute__((visibility("hidden")))
@interface GPUMTLTraceGroupItem : GPUTraceGroupItem
{
    NSString *_label;
    unsigned int _objectType;
    unsigned long long _objectID;
}

- (void).cxx_destruct;
- (id)label;
- (id)initWithController:(id)arg1 parent:(id)arg2 objectID:(unsigned long long)arg3 objectType:(unsigned int)arg4 functionIndex:(int)arg5;

@end

__attribute__((visibility("hidden")))
@interface GPUMTLTraceOutline : GPUTraceOutline
{
    GPUMTLStateMirror *_stateMirror;
    unsigned long long _currentCommandBuffer;
    unsigned long long _currentCommandEncoder;
    struct stack<unsigned int, std::__1::deque<unsigned int, std::__1::allocator<unsigned int>>> _markerDepthStack;
    unsigned long long _currentParallelRenderCommandEncoder;
    unsigned long long _lastRenderCommandEncoder;
    NSMutableDictionary *_hidableItems;
    struct vector<unsigned int, std::__1::allocator<unsigned int>> _functionIndexToDisplayIndexMap;
    GPUMTLOutlineLabelCache *_labelCache;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (id)resourceDictionaryForResourceGroupID:(id)arg1;
- (id)labelForObjectID:(unsigned long long)arg1;
- (id)labelForArgument:(const struct Argument *)arg1 functionIndex:(unsigned int)arg2;
- (id)labelForReceiver:(const struct Function *)arg1 functionIndex:(unsigned int)arg2 hideCommandBuffersAndEncoders:(BOOL)arg3;
- (void)_processLabelForFunction:(const struct Function *)arg1 functionIndex:(unsigned int)arg2;
- (void)visitFunctionStreamFile:(id)arg1;
- (void)_addFunctionForDisplayableItem:(id)arg1;
- (void)_popDisclosureLevel;
- (void)_pushDisclosureLevelForObjectID:(unsigned long long)arg1 ofType:(unsigned int)arg2;
- (void)_pushDisclosureLevelWithLabel:(id)arg1;
- (void)_addAPIItemForFunction:(struct Function *)arg1 handleDisclosureLevel:(BOOL)arg2;
- (id)_addAPIItemForFunction:(struct Function *)arg1 markingAsHidden:(BOOL)arg2 handleDisclosureLevel:(BOOL)arg3;
- (void)_handleDisclosureLevelForFunction:(struct Function *)arg1;
- (void)_handleDisclosureLevelForFunction:(struct Function *)arg1 withCommandEncoderReceiver:(unsigned long long)arg2 andCommandEncoderType:(unsigned int)arg3;
- (unsigned int)_getObjectTypeForCommandEncoderCreation:(unsigned int)arg1;
- (void)_popCommandBuffer;
- (void)_popCommandEncoder;
- (id)stateMirrorForTraceItem:(id)arg1;
- (id)_derivedStateMirrorFromStateMirror:(id)arg1 forFunctionIndex:(unsigned int)arg2 fromFunctionIndex:(unsigned int)arg3;
- (id)initWithTraceSession:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface GPUMTLTraceResourceSettingsBubble : GPUTraceResourceSettingsBubble
{
}

- (id)initWithResource:(id)arg1 withDisplayAttributes:(id)arg2 withShowDepth:(BOOL)arg3 parentView:(id)arg4 owner:(id)arg5;

@end

__attribute__((visibility("hidden")))
@interface GPUMTLTraceStateItem : GPUTraceStateItem <DYFunctionTracerDelegate, GPUMTLStateMirrorInterface, GPUMTLTraceItemInterface>
{
    GPUMTLStateMirror *_stateMirror;
    unsigned long long _owningDeviceID;
    BOOL _isHidden;
}

@property(readonly, nonatomic) unsigned long long owningDeviceID; // @synthesize owningDeviceID=_owningDeviceID;
@property(nonatomic) BOOL isHidden; // @synthesize isHidden=_isHidden;
- (void).cxx_destruct;
- (id)rewriteArgument:(const struct Argument *)arg1;
- (id)rewriteReceiver:(unsigned long long)arg1;
- (id)rewriteURL:(const char *)arg1;
- (id)generateLabel;
- (BOOL)isGroupMarkerCall;
@property(readonly, nonatomic) unsigned long long receiverID;
@property(readonly) BOOL hasStateMirror;
@property(copy) GPUMTLStateMirror *stateMirror;
- (id)initWithController:(id)arg1 parent:(id)arg2 label:(id)arg3;
- (id)initWithController:(id)arg1 parent:(id)arg2 deviceID:(unsigned long long)arg3 functionIndex:(int)arg4 displayIndex:(int)arg5 markedHidden:(BOOL)arg6;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GPUMTLTraceTextureDisplayableItem : GPUMTLTraceDisplayableItem
{
    id <GPUMTLDisplayableStrategy> _displayableStrategy;
}

+ (Class)blitDisplayableStrategyClass;
+ (Class)computeDisplayableStrategyClass;
- (void).cxx_destruct;
- (id)createRenderJobsForDisplaySet:(BOOL)arg1;
- (id)imageToExportToFile;
- (void)_connectElementResourceToDisplaySet:(unsigned long long)arg1 resourceObject:(id)arg2;
- (id)_startLoadingDisplaySetElement:(unsigned long long)arg1;
- (void)_displaySetLoadIsComplete:(id)arg1;
- (id)_startLoadingDisplaySet;
- (id)initWithController:(id)arg1 parent:(id)arg2 deviceID:(unsigned long long)arg3 functionIndex:(int)arg4 displayIndex:(int)arg5 displayableStrategyClass:(Class)arg6;

@end

__attribute__((visibility("hidden")))
@interface GPUMTLTraceTextureInfoBubble : GPUTraceResourceInfoBubble
{
    NSTextField *_typeLabel;
    NSTextField *_formatLabel;
    NSTextField *_widthLabel;
    NSTextField *_heightLabel;
    NSTextField *_depthLabel;
}

- (void).cxx_destruct;
- (void)viewDidInstall;
- (id)initWithResource:(id)arg1 parentView:(id)arg2 owner:(id)arg3 modelFactory:(id)arg4 renderingAttributes:(id)arg5;

@end

__attribute__((visibility("hidden")))
@interface GPUMTLVariablesViewContentProvider : GPUVariablesViewContentProvider
{
    GPUMTLStateMirror *_stateMirror;
    GPUMTLStateMirror *_comparisonStateMirror;
    RenderPipelineAttachmentDescriptor_08890bb5 _defaultRenderPipelineAttachment;
    BlitCommandEncoder_0e8e1979 _defaultBlitCommandEncoder;
    Buffer_e8b67ba7 _defaultBuffer;
    CommandBuffer_b8d892ad _defaultCommandBuffer;
    CommandQueue_f95f9d2e _defaultCommandQueue;
    ComputeCommandEncoder_926cb968 _defaultComputeCommandEncoder;
    DepthStencilState_d26ffc7c _defaultDepthStencilState;
    Device_5cef99fc _defaultDevice;
    RenderPassDescriptor_5fd82e83 _defaultRenderPass;
    RenderPassAttachmentDescriptor_8c91cb7e _defaultRenderPassAttachment;
    Function_130258c1 _defaultFunction;
    ComputePipelineState_82a05cab _defaultComputePipelineState;
    Library_fcf3a16e _defaultLibrary;
    RenderCommandEncoder_516b45a3 _defaultRenderCommandEncoder;
    RenderPipelineState_2531dade _defaultRenderPipelineState;
    Sampler_4521416c _defaultSampler;
    Texture_f24102c5 _defaultTexture;
    ParallelRenderCommandEncoder_874a9a1a _defaultParallelRenderCommandEncoder;
    BOOL _drawCallFootprintIsAvailable;
    _Bool _isDispatchCall;
}

+ (void)initialize;
- (id).cxx_construct;
- (void).cxx_destruct;
- (id)imageToUseInDefaultQuickLookForNode:(id)arg1;
- (id)imageForNode:(id)arg1;
- (void)provideScopeChoices:(id)arg1;
- (id)_generateFrameStatsContent:(const Device_5cef99fc *)arg1;
- (id)_generateComputeEncoderStatsContent:(const ComputeCommandEncoder_926cb968 *)arg1;
- (id)_generateParallelRenderEncoderStatsContent:(const ParallelRenderCommandEncoder_874a9a1a *)arg1;
- (id)_generateRenderEncoderStatsContent:(const RenderCommandEncoder_516b45a3 *)arg1;
- (id)_generateParallelRenderCommandEncoderContent:(const ParallelRenderCommandEncoder_874a9a1a *)arg1;
- (id)_generateTextureBindingContent:(unsigned int)arg1 fromComputeCommandEncoderID:(unsigned long long)arg2;
- (id)_generateTextureBindingContent:(unsigned int)arg1 fromFragmentTextures:(BOOL)arg2 fromRenderCommandEncoderID:(unsigned long long)arg3;
- (id)_generateTextureContent:(unsigned long long)arg1 labelPrefix:(id)arg2;
- (id)_generateTextureName:(unsigned long long)arg1 labelPrefix:(id)arg2;
- (id)generateTextureSummary:(unsigned long long)arg1;
- (id)_generateSamplerContent:(const Sampler_4521416c *)arg1 labelPrefix:(id)arg2;
- (id)_generateRenderPipelineStateContent:(const RenderPipelineState_2531dade *)arg1;
- (id)_generateRenderCommandEncoderPerformanceContent:(const RenderCommandEncoder_516b45a3 *)arg1 forPipeline:(const RenderPipelineState_2531dade *)arg2;
- (id)_generateRenderCommandEncoderContent:(const RenderCommandEncoder_516b45a3 *)arg1;
- (id)_generateColor:(VecN_24296b45)arg1;
- (id)_generateScissorRect:(VecN_d22ea5a0)arg1;
- (id)_generateViewport:(VecN_8f1bdb46)arg1;
- (id)_generateLibraryContent:(const Library_fcf3a16e *)arg1;
- (id)_generateComputePipelineStateContent:(const ComputePipelineState_82a05cab *)arg1;
- (id)_generateVertexDescriptorContent:(const VertexDescriptor_e5d3aa79 *)arg1 withComparision:(const VertexDescriptor_e5d3aa79 *)arg2;
- (id)_generateVertexAttributeContent:(const VertexAttribute_ebed2729 *)arg1 withComparision:(const VertexAttribute_ebed2729 *)arg2 withIndex:(unsigned int)arg3;
- (id)_generateVertexBufferContent:(const VertexBuffer_34433e31 *)arg1 withComparision:(const VertexBuffer_34433e31 *)arg2 withIndex:(unsigned int)arg3;
- (id)_generateFunctionContent:(const Function_130258c1 *)arg1 withFunctionType:(id)arg2;
- (id)_generateFunctionContent:(const Function_130258c1 *)arg1 withFunctionType:(id)arg2 name:(id)arg3;
- (id)_generateRenderPassContent:(const RenderPassDescriptor_5fd82e83 *)arg1;
- (id)_generateRenderPassAttachmentContent:(const RenderPassAttachmentDescriptor_8c91cb7e *)arg1 attachmentIndex:(unsigned int)arg2 comparisonAttachment:(const RenderPassAttachmentDescriptor_8c91cb7e *)arg3;
- (id)_generateDepthStencilStateContent:(const DepthStencilState_d26ffc7c *)arg1;
- (id)_generateCondensedSummaryForDepthStencilContent:(const DepthStencilState_d26ffc7c *)arg1;
- (id)_getCondensedStencilSummaryForSide:(const struct GPUMTLStencilSideSetup *)arg1;
- (id)_generateDeviceContent:(const Device_5cef99fc *)arg1;
- (id)_generateComputeCommandEncoderPerformanceContent:(const ComputeCommandEncoder_926cb968 *)arg1 forPipeline:(const ComputePipelineState_82a05cab *)arg2;
- (id)_generateComputeCommandEncoderContent:(const ComputeCommandEncoder_926cb968 *)arg1;
- (id)_generateCommandQueueContent:(const CommandQueue_f95f9d2e *)arg1;
- (id)_generateCommandBufferContent:(const CommandBuffer_b8d892ad *)arg1;
- (id)_generateSamplerBindingContent:(unsigned int)arg1 fromComputeCommandEncoderID:(unsigned long long)arg2;
- (id)_generateSamplerBindingContent:(unsigned int)arg1 fromFragmentSamplers:(BOOL)arg2 fromRenderCommandEncoderID:(unsigned long long)arg3;
- (id)_generateBufferBindingContent:(unsigned int)arg1 fromComputeCommandEncoderID:(unsigned long long)arg2;
- (id)_generateBufferBindingContent:(unsigned int)arg1 fromFragmentBuffers:(BOOL)arg2 fromRenderCommandEncoderID:(unsigned long long)arg3;
- (id)_generateIndirectBufferContent:(unsigned long long)arg1 withOffset:(unsigned long long)arg2 forFunctionIndex:(unsigned long long)arg3 forFenum:(unsigned int)arg4;
- (void)_addDispatchThreadgroupsWithIndirectBuffer:(const Buffer_e8b67ba7 *)arg1 withComparisonBuffer:(const Buffer_e8b67ba7 *)arg2 withOffset:(unsigned long long)arg3 forParent:(id)arg4 forFunctionIndex:(unsigned long long)arg5;
- (void)_addDrawIndexedPrimitivesIndirectArgumentsFromBuffer:(const Buffer_e8b67ba7 *)arg1 withComparisonBuffer:(const Buffer_e8b67ba7 *)arg2 withOffset:(unsigned long long)arg3 forParent:(id)arg4 forFunctionIndex:(unsigned long long)arg5;
- (void)_addDrawPrimitivesIndirectArgumentsFromBuffer:(const Buffer_e8b67ba7 *)arg1 withComparisonBuffer:(const Buffer_e8b67ba7 *)arg2 withOffset:(unsigned long long)arg3 forParent:(id)arg4 forFunctionIndex:(unsigned long long)arg5;
- (id)_generateIndexBufferContent:(unsigned long long)arg1 withOffset:(unsigned long long)arg2;
- (id)_generateBufferContent:(unsigned long long)arg1 labelPrefix:(id)arg2;
- (id)_generateBufferBytesContent:(unsigned long long)arg1 withIndex:(unsigned long long)arg2;
- (id)_generateBlitCommandEncoderContent:(const BlitCommandEncoder_0e8e1979 *)arg1;
- (id)_generateRenderPipelineAttachmentContent:(const RenderPipelineAttachmentDescriptor_08890bb5 *)arg1 withComparision:(const RenderPipelineAttachmentDescriptor_08890bb5 *)arg2 forIndex:(unsigned int)arg3;
- (id)_getCondensedBlendSummaryFromAttachmentContent:(const RenderPipelineAttachmentDescriptor_08890bb5 *)arg1;
- (id)_getCondensedBlendResultForChannel:(struct GPUMTLBlendChannelSetup *)arg1;
- (id)_blendFactorString:(unsigned long long)arg1;
- (id)_generateValueForColorWriteMask:(unsigned long long)arg1 andTextMode:(int)arg2;
- (id)_generateValueForResourceOptions:(unsigned long long)arg1 andTextMode:(int)arg2;
- (id)_generateValueForTextureUsage:(unsigned long long)arg1 andTextMode:(int)arg2;
- (id)_generateValueForOptionValue:(unsigned long long)arg1 withAllOptions:(id)arg2 andSingleOptionList:(id)arg3 andToStringBlock:(CDUnknownBlockType)arg4;
- (void)addAnalyzerFindingContent:(id)arg1 toArray:(id)arg2;
- (void)addFrameStatsContent:(const Device_5cef99fc *)arg1 toArray:(id)arg2;
- (void)addComputeEncoderStatsContent:(const ComputeCommandEncoder_926cb968 *)arg1 toArray:(id)arg2;
- (void)addParallelRenderEncoderStatsContent:(const ParallelRenderCommandEncoder_874a9a1a *)arg1 toArray:(id)arg2;
- (void)addRenderEncoderStatsContent:(const RenderCommandEncoder_516b45a3 *)arg1 toArray:(id)arg2;
- (void)addParallelRenderCommandEncoderContent:(const ParallelRenderCommandEncoder_874a9a1a *)arg1 toArray:(id)arg2;
- (void)addTextureBindingContent:(unsigned long long)arg1 fromComputeCommandEncoderID:(unsigned long long)arg2 toArray:(id)arg3;
- (void)addTextureBindingContent:(unsigned long long)arg1 fromFragmentTextures:(BOOL)arg2 fromRenderCommandEncoderID:(unsigned long long)arg3 toArray:(id)arg4;
- (void)addTextureContent:(unsigned long long)arg1 toArray:(id)arg2;
- (void)addSamplerBindingContent:(unsigned long long)arg1 fromComputeCommandEncoderID:(unsigned long long)arg2 toArray:(id)arg3;
- (void)addSamplerBindingContent:(unsigned long long)arg1 fromFragmentSamplers:(BOOL)arg2 fromRenderCommandEncoderID:(unsigned long long)arg3 toArray:(id)arg4;
- (void)addSamplerContent:(const Sampler_4521416c *)arg1 toArray:(id)arg2;
- (void)addRenderPipelineStateContent:(const RenderPipelineState_2531dade *)arg1 toArray:(id)arg2;
- (void)addRenderCommandEncoderPerformanceContent:(const RenderCommandEncoder_516b45a3 *)arg1 forPipeline:(const RenderPipelineState_2531dade *)arg2 toArray:(id)arg3;
- (void)addRenderCommandEncoderContent:(const RenderCommandEncoder_516b45a3 *)arg1 toArray:(id)arg2;
- (void)addLibraryContent:(const Library_fcf3a16e *)arg1 toArray:(id)arg2;
- (void)addComputePipelineStateContent:(const ComputePipelineState_82a05cab *)arg1 toArray:(id)arg2;
- (void)addFunctionContent:(const Function_130258c1 *)arg1 toArray:(id)arg2;
- (void)addRenderPassContent:(const RenderPassDescriptor_5fd82e83 *)arg1 toArray:(id)arg2;
- (void)addDepthStencilStateContent:(const DepthStencilState_d26ffc7c *)arg1 toArray:(id)arg2;
- (void)addDeviceContent:(const Device_5cef99fc *)arg1 toArray:(id)arg2;
- (void)addComputeCommandEncoderPerformanceContent:(const ComputeCommandEncoder_926cb968 *)arg1 forPipeline:(const ComputePipelineState_82a05cab *)arg2 toArray:(id)arg3;
- (void)addComputeCommandEncoderContent:(const ComputeCommandEncoder_926cb968 *)arg1 toArray:(id)arg2;
- (void)addCommandQueueContent:(const CommandQueue_f95f9d2e *)arg1 toArray:(id)arg2;
- (void)addCommandBufferContent:(const CommandBuffer_b8d892ad *)arg1 toArray:(id)arg2;
- (void)addBufferBindingContent:(unsigned long long)arg1 fromComputeCommandEncoderID:(unsigned long long)arg2 toArray:(id)arg3;
- (void)addBufferBindingContent:(unsigned long long)arg1 fromFragmentBuffers:(BOOL)arg2 fromRenderCommandEncoderID:(unsigned long long)arg3 toArray:(id)arg4;
- (void)addIndirectBufferContent:(unsigned long long)arg1 withOffset:(unsigned long long)arg2 forFunctionIndex:(unsigned long long)arg3 forFenum:(unsigned int)arg4 toArray:(id)arg5;
- (void)addIndexBufferContent:(unsigned long long)arg1 withOffset:(unsigned long long)arg2 toArray:(id)arg3;
- (void)addBufferContent:(unsigned long long)arg1 toArray:(id)arg2;
- (void)addBufferBytesContent:(unsigned long long)arg1 withIndex:(unsigned long long)arg2 toArray:(id)arg3;
- (void)addBlitCommandEncoderContent:(const BlitCommandEncoder_0e8e1979 *)arg1 toArray:(id)arg2;
- (void)addObjectContent:(id)arg1 ofType:(int)arg2 toArray:(id)arg3;
- (void)addBindingContent:(id)arg1 ofType:(int)arg2 toArray:(id)arg3;
- (void)addResourceContent:(unsigned long long)arg1 toArray:(id)arg2;
- (void)_updateFilteredListForAuto;
- (void)_updateFilteredListForContextInfo;
- (void)_addSamplersFromFunction:(const struct Function *)arg1 toArray:(id)arg2;
- (void)_addTexturesFromFunction:(const struct Function *)arg1 toArray:(id)arg2;
- (void)_addBuffersFromFunction:(const struct Function *)arg1 toArray:(id)arg2;
- (void)_addAllTexturesFromDevice:(const Device_5cef99fc *)arg1 toValues:(id)arg2 andNodes:(id)arg3;
- (void)_addAllSamplersFromDevice:(const Device_5cef99fc *)arg1 toValues:(id)arg2 andNodes:(id)arg3;
- (void)_addAllRenderPipelineStatesFromDevice:(const Device_5cef99fc *)arg1 toValues:(id)arg2 andNodes:(id)arg3;
- (void)_addAllRenderCommandEncodersFromDevice:(const Device_5cef99fc *)arg1 toValues:(id)arg2 andNodes:(id)arg3;
- (void)_addAllLibrariesFromDevice:(const Device_5cef99fc *)arg1 toValues:(id)arg2 andNodes:(id)arg3;
- (void)_addAllComputePipelineStatesFromDevice:(const Device_5cef99fc *)arg1 toValues:(id)arg2 andNodes:(id)arg3;
- (void)_addAllDepthStencilStatesFromDevice:(const Device_5cef99fc *)arg1 toValues:(id)arg2 andNodes:(id)arg3;
- (void)_addAllComputeCommandEncodersFromDevice:(const Device_5cef99fc *)arg1 toValues:(id)arg2 andNodes:(id)arg3;
- (void)_addAllCommandQueuesFromDevice:(const Device_5cef99fc *)arg1 toValues:(id)arg2 andNodes:(id)arg3;
- (void)_addAllCommandBuffersFromDevice:(const Device_5cef99fc *)arg1 toValues:(id)arg2 andNodes:(id)arg3;
- (void)_addAllBuffersFromDevice:(const Device_5cef99fc *)arg1 toValues:(id)arg2 andNodes:(id)arg3;
- (void)_addAllBlitCommandEncodersFromDevice:(const Device_5cef99fc *)arg1 toValues:(id)arg2 andNodes:(id)arg3;
- (void)_addObjectArray:(id)arg1 ofType:(int)arg2 andLabel:(id)arg3 toValues:(id)arg4 andNodes:(id)arg5;
- (void)_updateFilteredListForAllObjects;
- (void)_addBoundObjectsFromComputeCommandEncoder:(const ComputeCommandEncoder_926cb968 *)arg1 toValues:(id)arg2 andNodes:(id)arg3;
- (void)_addBoundObjectsFromRenderCommandEncoder:(const RenderCommandEncoder_516b45a3 *)arg1 toValues:(id)arg2 andNodes:(id)arg3;
- (void)_updateFilteredListForBoundObjects;
- (void)_updateFilteredListForCommandEncoder;
- (void)updateFilteredList;
- (void)_setEmptyVarView;
- (void)updateCurrentLocation:(id)arg1;
- (void)primitiveInvalidate;
- (id)initWithIdentifier:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface MTLProgramPerformanceAnnotation : DVTMessageBubbleAnnotation
{
    float _size;
}

- (double)preferredWidthForAvailableWidth:(double)arg1;
- (id)initWithSize:(float)arg1;

@end

__attribute__((visibility("hidden")))
@interface _GPUMTLSupportBundlePrivateClassForFindingBundle : NSObject
{
}

@end

