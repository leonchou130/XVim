//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct AABB {
    struct CGPoint _field1;
    struct CGPoint _field2;
};

struct CATransform3D {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    double _field8;
    double _field9;
    double _field10;
    double _field11;
    double _field12;
    double _field13;
    double _field14;
    double _field15;
    double _field16;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct _NSRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

#pragma mark -

//
// File: /Applications/Xcode-7GM.app/Contents/PlugIns/GPURenderTargetEditor.ideplugin/Contents/MacOS/GPURenderTargetEditor
// UUID: 19B787B2-A74D-35F3-B98F-67B38A56F808
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 18079.0.0.0.0
//       Minimum Mac OS X version: 10.10.0
//                    SDK version: 10.11.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol DVTCompletingTextViewDelegate <NSTextViewDelegate>

@optional
- (NSColor *)textView:(DVTCompletingTextView *)arg1 tokenTintColor:(NSColor *)arg2 forInlineTokenAttachmentCell:(DVTTextFoldInlineTokenAttachmentCell *)arg3;
- (long long)textView:(DVTCompletingTextView *)arg1 interiorBackgroundStyle:(long long)arg2 forInlineTokenAttachmentCell:(DVTTextFoldInlineTokenAttachmentCell *)arg3;
- (void)setupTextViewContextMenuWithMenu:(NSMenu *)arg1;
- (BOOL)completingTextViewHandleCancel:(DVTCompletingTextView *)arg1;
- (unsigned long long)textView:(DVTCompletingTextView *)arg1 lineEndingForWritingSelectionToPasteboard:(NSPasteboard *)arg2 type:(NSString *)arg3;
- (unsigned long long)textView:(DVTCompletingTextView *)arg1 lineEndingForReadingSelectionFromPasteboard:(NSPasteboard *)arg2 type:(NSString *)arg3;
- (void)textView:(DVTCompletingTextView *)arg1 layoutManager:(NSLayoutManager *)arg2 didLayoutGlyphsUpToCharacterIndex:(unsigned long long)arg3;
- (DVTTextDocumentLocation *)completingTextView:(DVTCompletingTextView *)arg1 documentLocationForWordStartLocation:(unsigned long long)arg2;
- (void)completingTextView:(DVTCompletingTextView *)arg1 willPassContextToStrategies:(NSMutableDictionary *)arg2 atWordStartLocation:(unsigned long long)arg3;
@end

@protocol DVTFindBarFindable

@optional
- (struct _NSRange)selectedRangeForFindBar:(DVTFindBar *)arg1;
- (DVTDocumentLocation *)startingLocationForFindBar:(DVTFindBar *)arg1 findingBackwards:(BOOL)arg2;
- (void)dvtFindBar:(DVTFindBar *)arg1 didUpdateCurrentResult:(DVTFindResult *)arg2;
- (void)dvtFindBar:(DVTFindBar *)arg1 didUpdateResults:(NSArray *)arg2;
@end

@protocol DVTInvalidation <NSObject>
- (void)primitiveInvalidate;

@optional
+ (BOOL)supportsInvalidationPrevention;
+ (unsigned long long)assertionBehaviorForKeyValueObservationsAtEndOfEvent;
+ (unsigned long long)assertionBehaviorAfterEndOfEventForSelector:(SEL)arg1;
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly, nonatomic, getter=isValid) BOOL valid;
- (void)invalidate;
@end

@protocol DVTSourceTextViewDelegate <DVTCompletingTextViewDelegate>

@optional
- (double)textView:(DVTSourceTextView *)arg1 constrainAccessoryAnnotationWidth:(double)arg2;
- (double)textView:(DVTSourceTextView *)arg1 constrainMaxAccessoryAnnotationWidth:(double)arg2;
- (double)textView:(DVTSourceTextView *)arg1 constrainMinAccessoryAnnotationWidth:(double)arg2;
- (NSString *)textViewWillReturnPrintJobTitle:(DVTSourceTextView *)arg1;
- (void)textViewDidScroll:(DVTSourceTextView *)arg1;
- (void)setupGutterContextMenuWithMenu:(NSMenu *)arg1;
- (void)didEndTokenizedEditingWithRanges:(DVTMutableRangeArray *)arg1;
- (void)willStartTokenizedEditingWithRanges:(DVTMutableRangeArray *)arg1;
- (void)tokenizableRangesWithRange:(struct _NSRange)arg1 completionBlock:(void (^)(NSArray *))arg2;
- (void)textViewDidFinishAnimatingScroll:(DVTSourceTextView *)arg1;
- (void)textViewDidLoadAnnotationProviders:(DVTSourceTextView *)arg1;
- (void)textView:(DVTSourceTextView *)arg1 didRemoveAnnotations:(NSArray *)arg2;
- (void)textView:(DVTSourceTextView *)arg1 didAddAnnotations:(NSArray *)arg2;
- (DVTAnnotationContext *)annotationContextForTextView:(DVTSourceTextView *)arg1;
- (NSDictionary *)syntaxColoringContextForTextView:(DVTSourceTextView *)arg1;
- (void)textViewDidChangeFolding:(NSNotification *)arg1;
- (void)textViewWillChangeFolding:(NSNotification *)arg1;
- (void)textView:(DVTSourceTextView *)arg1 didClickOnTemporaryLinkAtCharacterIndex:(unsigned long long)arg2 event:(NSEvent *)arg3 isAltEvent:(BOOL)arg4;
- (BOOL)textView:(DVTSourceTextView *)arg1 shouldShowTemporaryLinkForCharacterAtIndex:(unsigned long long)arg2 proposedRange:(struct _NSRange)arg3 effectiveRanges:(id *)arg4;
- (void)textView:(DVTSourceTextView *)arg1 handleMouseDidExitSidebar:(NSEvent *)arg2;
- (void)textView:(DVTSourceTextView *)arg1 handleMouseDidMoveOverSidebar:(NSEvent *)arg2 atLineNumber:(unsigned long long)arg3;
- (void)textView:(DVTSourceTextView *)arg1 handleMouseDownInSidebar:(NSEvent *)arg2 atLineNumber:(unsigned long long)arg3;
@end

@protocol DVTTextFindable <NSObject>
- (DVTFindResult *)findStringMatchingDescriptor:(DVTFindDescriptor *)arg1 backwards:(BOOL)arg2 from:(DVTDocumentLocation *)arg3 to:(DVTDocumentLocation *)arg4;

@optional
@property unsigned long long supportedMatchingOptions;
- (long long)compareFindableLocation:(DVTDocumentLocation *)arg1 withLocation:(DVTDocumentLocation *)arg2;
@end

@protocol DVTTextReplacable <NSObject>
- (BOOL)replaceFindResults:(NSArray *)arg1 withString:(NSString *)arg2 withError:(id *)arg3;

@optional
- (BOOL)replaceFindResults:(NSArray *)arg1 inSelection:(struct _NSRange)arg2 withString:(NSString *)arg3 withError:(id *)arg4;
- (BOOL)replaceTextWithContentsOfURL:(NSURL *)arg1 error:(id *)arg2;
@end

@protocol DVTTextStorageDelegate <NSTextStorageDelegate>

@optional
@property(readonly, nonatomic) NSDictionary *sourceLanguageServiceContext;
- (BOOL)textStorageShouldAllowEditing:(DVTTextStorage *)arg1;
- (void)textStorageDidUpdateSourceLandmarks:(DVTTextStorage *)arg1;
- (long long)nodeTypeForItem:(DVTSourceModelItem *)arg1 withContext:(NSDictionary *)arg2;
@end

@protocol DYCacheableResource <NSObject>
@property(readonly, nonatomic) unsigned long long cachingCost;
@end

@protocol DYOpenGLLayerContentProvider <NSObject>
- (DYRenderingAttributes *)renderingAttributes;
- (BOOL)flipped;
- (BOOL)isColor;
- (BOOL)wantsDepth;
- (struct CGSize)scaledImageSize;
- (id <DYResource>)resource;
- (id <DYResource>)overlay;
@end

@protocol DYRenderBuffer <DYResource, DYCacheableResource>
@property(readonly, nonatomic) NSData *data;
@property(readonly, nonatomic) BOOL flipped;
@property(readonly, nonatomic) int numSamples;
@property(readonly, nonatomic) int height;
@property(readonly, nonatomic) int width;
@property(readonly, nonatomic) unsigned int format;
@end

@protocol DYResource <NSObject, NSCoding>
+ (NSString *)keyForResourceWithID:(unsigned long long)arg1 type:(unsigned int)arg2 containerID:(unsigned long long)arg3;
@property(readonly, nonatomic) BOOL isStatic;
@property(readonly, nonatomic) NSMutableDictionary *properties;
@property(readonly, copy, nonatomic) NSString *label;
@property(readonly, nonatomic) unsigned long long objectID;
@property(readonly, nonatomic) unsigned long long containerID;
@property(readonly, nonatomic) unsigned int resourceType;
- (id)initUpdateWithType:(unsigned int)arg1 objectID:(unsigned long long)arg2 containerID:(unsigned long long)arg3 changes:(NSDictionary *)arg4;

@optional
- (id)createFullObjectWithFunctionStream:(DYFunctionStream *)arg1 dataResolver:(NSData * (^)(char *))arg2;
- (NSDictionary *)streamDictAtFunctionIndex:(unsigned int)arg1;
- (NSString *)keyWithSharegroupID:(unsigned long long)arg1;
@end

@protocol DYTexture <DYResource, DYCacheableResource>
@property(readonly, nonatomic) BOOL isFlipped;
@property(readonly, nonatomic) BOOL isCubemap;
@property(readonly, nonatomic) id <DYTextureImage> firstValidTextureImage;
@property(readonly, nonatomic) unsigned int mipmapLevelsUsedMask;
@property(readonly, nonatomic) int maxMipmapLevel;
@property(readonly, nonatomic) int baseMipmapLevel;
- (NSString *)cubemapLabelForFaceIndex:(int)arg1;
- (id <DYTextureImage>)textureImageForMipmapLevel:(int)arg1 layer:(int)arg2;
- (unsigned int)layerCountForMipmapLevel:(unsigned int)arg1;
@end

@protocol DYTextureImage <NSObject, DYCacheableResource>
+ (NSString *)textureImageKeyForLevel:(unsigned int)arg1 layer:(unsigned int)arg2;
@property(readonly, nonatomic) unsigned long long offset;
@property(readonly, nonatomic) NSData *data;
@property(readonly, nonatomic) int layerIndex;
@property(readonly, nonatomic) int mipmapLevel;
@property(readonly, nonatomic) unsigned int numSamples;
@property(readonly, nonatomic) unsigned long long depth;
@property(readonly, nonatomic) unsigned long long height;
@property(readonly, nonatomic) unsigned long long width;
@property(readonly, nonatomic) unsigned int genericFormat;
- (NSData *)uncompressedData;
@end

@protocol GPURenderBufferViewStateCoordinationProtocol
- (void)renderBufferViewDidChangeState:(GPURenderBufferView *)arg1;
@end

@protocol GPUTraceBubbleOwner <NSObject>
- (GPUTraceDisplayableItem *)currentDisplayableItem;
- (void)settingsToggleAlphaEnable;
- (void)settingsToggleBlueEnable;
- (void)settingsToggleGreenEnable;
- (void)settingsToggleRedEnable;
- (void)settingsBubbleClosed;
- (void)infoBubbleClosed;

@optional
- (void)settingsUpdate;
@end

@protocol IDEDocumentStructureProviding <NSObject>
@property(readonly) NSArray *ideTopLevelStructureObjects;
@end

@protocol IDEEditorAreaContainer
@property(readonly) IDEEditorArea *editorArea;
@end

@protocol IDEGPUAssistantEditorAdditions <NSObject>
- (void)_takeStateDictionaryFromPreviousGPUAssistantEditor:(NSDictionary *)arg1;

@optional
- (BOOL)_shouldInstallGPUEditorWithPreviousStateDictionaryOrNil:(NSDictionary *)arg1;
@end

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSControlTextEditingDelegate <NSObject>

@optional
- (NSArray *)control:(NSControl *)arg1 textView:(NSTextView *)arg2 completions:(NSArray *)arg3 forPartialWordRange:(struct _NSRange)arg4 indexOfSelectedItem:(long long *)arg5;
- (BOOL)control:(NSControl *)arg1 textView:(NSTextView *)arg2 doCommandBySelector:(SEL)arg3;
- (BOOL)control:(NSControl *)arg1 isValidObject:(id)arg2;
- (void)control:(NSControl *)arg1 didFailToValidatePartialString:(NSString *)arg2 errorDescription:(NSString *)arg3;
- (BOOL)control:(NSControl *)arg1 didFailToFormatString:(NSString *)arg2 errorDescription:(NSString *)arg3;
- (BOOL)control:(NSControl *)arg1 textShouldEndEditing:(NSText *)arg2;
- (BOOL)control:(NSControl *)arg1 textShouldBeginEditing:(NSText *)arg2;
@end

@protocol NSMenuDelegate <NSObject>

@optional
- (struct CGRect)confinementRectForMenu:(NSMenu *)arg1 onScreen:(NSScreen *)arg2;
- (void)menu:(NSMenu *)arg1 willHighlightItem:(NSMenuItem *)arg2;
- (void)menuDidClose:(NSMenu *)arg1;
- (void)menuWillOpen:(NSMenu *)arg1;
- (BOOL)menuHasKeyEquivalent:(NSMenu *)arg1 forEvent:(NSEvent *)arg2 target:(id *)arg3 action:(SEL *)arg4;
- (BOOL)menu:(NSMenu *)arg1 updateItem:(NSMenuItem *)arg2 atIndex:(long long)arg3 shouldCancel:(BOOL)arg4;
- (long long)numberOfItemsInMenu:(NSMenu *)arg1;
- (void)menuNeedsUpdate:(NSMenu *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (BOOL)respondsToSelector:(SEL)arg1;
- (BOOL)conformsToProtocol:(Protocol *)arg1;
- (BOOL)isMemberOfClass:(Class)arg1;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (BOOL)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSTableViewDataSource <NSObject>

@optional
- (NSArray *)tableView:(NSTableView *)arg1 namesOfPromisedFilesDroppedAtDestination:(NSURL *)arg2 forDraggedRowsWithIndexes:(NSIndexSet *)arg3;
- (BOOL)tableView:(NSTableView *)arg1 acceptDrop:(id <NSDraggingInfo>)arg2 row:(long long)arg3 dropOperation:(unsigned long long)arg4;
- (unsigned long long)tableView:(NSTableView *)arg1 validateDrop:(id <NSDraggingInfo>)arg2 proposedRow:(long long)arg3 proposedDropOperation:(unsigned long long)arg4;
- (BOOL)tableView:(NSTableView *)arg1 writeRowsWithIndexes:(NSIndexSet *)arg2 toPasteboard:(NSPasteboard *)arg3;
- (void)tableView:(NSTableView *)arg1 updateDraggingItemsForDrag:(id <NSDraggingInfo>)arg2;
- (void)tableView:(NSTableView *)arg1 draggingSession:(NSDraggingSession *)arg2 endedAtPoint:(struct CGPoint)arg3 operation:(unsigned long long)arg4;
- (void)tableView:(NSTableView *)arg1 draggingSession:(NSDraggingSession *)arg2 willBeginAtPoint:(struct CGPoint)arg3 forRowIndexes:(NSIndexSet *)arg4;
- (id <NSPasteboardWriting>)tableView:(NSTableView *)arg1 pasteboardWriterForRow:(long long)arg2;
- (void)tableView:(NSTableView *)arg1 sortDescriptorsDidChange:(NSArray *)arg2;
- (void)tableView:(NSTableView *)arg1 setObjectValue:(id)arg2 forTableColumn:(NSTableColumn *)arg3 row:(long long)arg4;
- (id)tableView:(NSTableView *)arg1 objectValueForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(NSTableView *)arg1;
@end

@protocol NSTableViewDelegate <NSControlTextEditingDelegate>

@optional
- (void)tableViewSelectionIsChanging:(NSNotification *)arg1;
- (void)tableViewColumnDidResize:(NSNotification *)arg1;
- (void)tableViewColumnDidMove:(NSNotification *)arg1;
- (void)tableViewSelectionDidChange:(NSNotification *)arg1;
- (NSArray *)tableView:(NSTableView *)arg1 rowActionsForRow:(long long)arg2 edge:(long long)arg3;
- (BOOL)tableView:(NSTableView *)arg1 shouldReorderColumn:(long long)arg2 toColumn:(long long)arg3;
- (double)tableView:(NSTableView *)arg1 sizeToFitWidthOfColumn:(long long)arg2;
- (BOOL)tableView:(NSTableView *)arg1 isGroupRow:(long long)arg2;
- (BOOL)tableView:(NSTableView *)arg1 shouldTypeSelectForEvent:(NSEvent *)arg2 withCurrentSearchString:(NSString *)arg3;
- (long long)tableView:(NSTableView *)arg1 nextTypeSelectMatchFromRow:(long long)arg2 toRow:(long long)arg3 forString:(NSString *)arg4;
- (NSString *)tableView:(NSTableView *)arg1 typeSelectStringForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (double)tableView:(NSTableView *)arg1 heightOfRow:(long long)arg2;
- (void)tableView:(NSTableView *)arg1 didDragTableColumn:(NSTableColumn *)arg2;
- (void)tableView:(NSTableView *)arg1 didClickTableColumn:(NSTableColumn *)arg2;
- (void)tableView:(NSTableView *)arg1 mouseDownInHeaderOfTableColumn:(NSTableColumn *)arg2;
- (BOOL)tableView:(NSTableView *)arg1 shouldSelectTableColumn:(NSTableColumn *)arg2;
- (NSIndexSet *)tableView:(NSTableView *)arg1 selectionIndexesForProposedSelection:(NSIndexSet *)arg2;
- (BOOL)tableView:(NSTableView *)arg1 shouldSelectRow:(long long)arg2;
- (BOOL)selectionShouldChangeInTableView:(NSTableView *)arg1;
- (NSCell *)tableView:(NSTableView *)arg1 dataCellForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (BOOL)tableView:(NSTableView *)arg1 shouldTrackCell:(NSCell *)arg2 forTableColumn:(NSTableColumn *)arg3 row:(long long)arg4;
- (BOOL)tableView:(NSTableView *)arg1 shouldShowCellExpansionForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (NSString *)tableView:(NSTableView *)arg1 toolTipForCell:(NSCell *)arg2 rect:(struct CGRect *)arg3 tableColumn:(NSTableColumn *)arg4 row:(long long)arg5 mouseLocation:(struct CGPoint)arg6;
- (BOOL)tableView:(NSTableView *)arg1 shouldEditTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (void)tableView:(NSTableView *)arg1 willDisplayCell:(id)arg2 forTableColumn:(NSTableColumn *)arg3 row:(long long)arg4;
- (void)tableView:(NSTableView *)arg1 didRemoveRowView:(NSTableRowView *)arg2 forRow:(long long)arg3;
- (void)tableView:(NSTableView *)arg1 didAddRowView:(NSTableRowView *)arg2 forRow:(long long)arg3;
- (NSTableRowView *)tableView:(NSTableView *)arg1 rowViewForRow:(long long)arg2;
- (NSView *)tableView:(NSTableView *)arg1 viewForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
@end

@protocol NSTextDelegate <NSObject>

@optional
- (void)textDidChange:(NSNotification *)arg1;
- (void)textDidEndEditing:(NSNotification *)arg1;
- (void)textDidBeginEditing:(NSNotification *)arg1;
- (BOOL)textShouldEndEditing:(NSText *)arg1;
- (BOOL)textShouldBeginEditing:(NSText *)arg1;
@end

@protocol NSTextFieldDelegate <NSControlTextEditingDelegate>
@end

@protocol NSTextStorageDelegate <NSObject>

@optional
- (void)textStorage:(NSTextStorage *)arg1 didProcessEditing:(unsigned long long)arg2 range:(struct _NSRange)arg3 changeInLength:(long long)arg4;
- (void)textStorage:(NSTextStorage *)arg1 willProcessEditing:(unsigned long long)arg2 range:(struct _NSRange)arg3 changeInLength:(long long)arg4;
@end

@protocol NSTextViewDelegate <NSTextDelegate>

@optional
- (void)textView:(NSTextView *)arg1 draggedCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3 event:(NSEvent *)arg4;
- (void)textView:(NSTextView *)arg1 doubleClickedOnCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3;
- (void)textView:(NSTextView *)arg1 clickedOnCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3;
- (BOOL)textView:(NSTextView *)arg1 clickedOnLink:(id)arg2;
- (NSUndoManager *)undoManagerForTextView:(NSTextView *)arg1;
- (NSSharingServicePicker *)textView:(NSTextView *)arg1 willShowSharingServicePicker:(NSSharingServicePicker *)arg2 forItems:(NSArray *)arg3;
- (NSURL *)textView:(NSTextView *)arg1 URLForContentsOfTextAttachment:(NSTextAttachment *)arg2 atIndex:(unsigned long long)arg3;
- (NSArray *)textView:(NSTextView *)arg1 didCheckTextInRange:(struct _NSRange)arg2 types:(unsigned long long)arg3 options:(NSDictionary *)arg4 results:(NSArray *)arg5 orthography:(NSOrthography *)arg6 wordCount:(long long)arg7;
- (NSDictionary *)textView:(NSTextView *)arg1 willCheckTextInRange:(struct _NSRange)arg2 options:(NSDictionary *)arg3 types:(unsigned long long *)arg4;
- (NSMenu *)textView:(NSTextView *)arg1 menu:(NSMenu *)arg2 forEvent:(NSEvent *)arg3 atIndex:(unsigned long long)arg4;
- (long long)textView:(NSTextView *)arg1 shouldSetSpellingState:(long long)arg2 range:(struct _NSRange)arg3;
- (BOOL)textView:(NSTextView *)arg1 doCommandBySelector:(SEL)arg2;
- (BOOL)textView:(NSTextView *)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementString:(NSString *)arg3;
- (NSArray *)textView:(NSTextView *)arg1 completions:(NSArray *)arg2 forPartialWordRange:(struct _NSRange)arg3 indexOfSelectedItem:(long long *)arg4;
- (NSString *)textView:(NSTextView *)arg1 willDisplayToolTip:(NSString *)arg2 forCharacterAtIndex:(unsigned long long)arg3;
- (void)textViewDidChangeTypingAttributes:(NSNotification *)arg1;
- (void)textViewDidChangeSelection:(NSNotification *)arg1;
- (NSDictionary *)textView:(NSTextView *)arg1 shouldChangeTypingAttributes:(NSDictionary *)arg2 toAttributes:(NSDictionary *)arg3;
- (BOOL)textView:(NSTextView *)arg1 shouldChangeTextInRanges:(NSArray *)arg2 replacementStrings:(NSArray *)arg3;
- (NSArray *)textView:(NSTextView *)arg1 willChangeSelectionFromCharacterRanges:(NSArray *)arg2 toCharacterRanges:(NSArray *)arg3;
- (struct _NSRange)textView:(NSTextView *)arg1 willChangeSelectionFromCharacterRange:(struct _NSRange)arg2 toCharacterRange:(struct _NSRange)arg3;
- (BOOL)textView:(NSTextView *)arg1 writeCell:(id <NSTextAttachmentCell>)arg2 atIndex:(unsigned long long)arg3 toPasteboard:(NSPasteboard *)arg4 type:(NSString *)arg5;
- (NSArray *)textView:(NSTextView *)arg1 writablePasteboardTypesForCell:(id <NSTextAttachmentCell>)arg2 atIndex:(unsigned long long)arg3;
- (void)textView:(NSTextView *)arg1 draggedCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3 event:(NSEvent *)arg4 atIndex:(unsigned long long)arg5;
- (void)textView:(NSTextView *)arg1 doubleClickedOnCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3 atIndex:(unsigned long long)arg4;
- (void)textView:(NSTextView *)arg1 clickedOnCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3 atIndex:(unsigned long long)arg4;
- (BOOL)textView:(NSTextView *)arg1 clickedOnLink:(id)arg2 atIndex:(unsigned long long)arg3;
@end

@protocol NSWindowDelegate <NSObject>

@optional
- (void)windowDidChangeOcclusionState:(NSNotification *)arg1;
- (void)windowDidExitVersionBrowser:(NSNotification *)arg1;
- (void)windowWillExitVersionBrowser:(NSNotification *)arg1;
- (void)windowDidEnterVersionBrowser:(NSNotification *)arg1;
- (void)windowWillEnterVersionBrowser:(NSNotification *)arg1;
- (void)windowDidExitFullScreen:(NSNotification *)arg1;
- (void)windowWillExitFullScreen:(NSNotification *)arg1;
- (void)windowDidEnterFullScreen:(NSNotification *)arg1;
- (void)windowWillEnterFullScreen:(NSNotification *)arg1;
- (void)windowDidEndLiveResize:(NSNotification *)arg1;
- (void)windowWillStartLiveResize:(NSNotification *)arg1;
- (void)windowDidEndSheet:(NSNotification *)arg1;
- (void)windowWillBeginSheet:(NSNotification *)arg1;
- (void)windowDidChangeBackingProperties:(NSNotification *)arg1;
- (void)windowDidChangeScreenProfile:(NSNotification *)arg1;
- (void)windowDidChangeScreen:(NSNotification *)arg1;
- (void)windowDidUpdate:(NSNotification *)arg1;
- (void)windowDidDeminiaturize:(NSNotification *)arg1;
- (void)windowDidMiniaturize:(NSNotification *)arg1;
- (void)windowWillMiniaturize:(NSNotification *)arg1;
- (void)windowWillClose:(NSNotification *)arg1;
- (void)windowDidResignMain:(NSNotification *)arg1;
- (void)windowDidBecomeMain:(NSNotification *)arg1;
- (void)windowDidResignKey:(NSNotification *)arg1;
- (void)windowDidBecomeKey:(NSNotification *)arg1;
- (void)windowDidMove:(NSNotification *)arg1;
- (void)windowWillMove:(NSNotification *)arg1;
- (void)windowDidExpose:(NSNotification *)arg1;
- (void)windowDidResize:(NSNotification *)arg1;
- (void)window:(NSWindow *)arg1 didDecodeRestorableState:(NSCoder *)arg2;
- (void)window:(NSWindow *)arg1 willEncodeRestorableState:(NSCoder *)arg2;
- (struct CGSize)window:(NSWindow *)arg1 willResizeForVersionBrowserWithMaxPreferredSize:(struct CGSize)arg2 maxAllowedSize:(struct CGSize)arg3;
- (void)windowDidFailToExitFullScreen:(NSWindow *)arg1;
- (void)window:(NSWindow *)arg1 startCustomAnimationToEnterFullScreenOnScreen:(NSScreen *)arg2 withDuration:(double)arg3;
- (NSArray *)customWindowsToEnterFullScreenForWindow:(NSWindow *)arg1 onScreen:(NSScreen *)arg2;
- (void)window:(NSWindow *)arg1 startCustomAnimationToExitFullScreenWithDuration:(double)arg2;
- (NSArray *)customWindowsToExitFullScreenForWindow:(NSWindow *)arg1;
- (void)windowDidFailToEnterFullScreen:(NSWindow *)arg1;
- (void)window:(NSWindow *)arg1 startCustomAnimationToEnterFullScreenWithDuration:(double)arg2;
- (NSArray *)customWindowsToEnterFullScreenForWindow:(NSWindow *)arg1;
- (unsigned long long)window:(NSWindow *)arg1 willUseFullScreenPresentationOptions:(unsigned long long)arg2;
- (struct CGSize)window:(NSWindow *)arg1 willUseFullScreenContentSize:(struct CGSize)arg2;
- (BOOL)window:(NSWindow *)arg1 shouldDragDocumentWithEvent:(NSEvent *)arg2 from:(struct CGPoint)arg3 withPasteboard:(NSPasteboard *)arg4;
- (BOOL)window:(NSWindow *)arg1 shouldPopUpDocumentPathMenu:(NSMenu *)arg2;
- (struct CGRect)window:(NSWindow *)arg1 willPositionSheet:(NSWindow *)arg2 usingRect:(struct CGRect)arg3;
- (NSUndoManager *)windowWillReturnUndoManager:(NSWindow *)arg1;
- (BOOL)windowShouldZoom:(NSWindow *)arg1 toFrame:(struct CGRect)arg2;
- (struct CGRect)windowWillUseStandardFrame:(NSWindow *)arg1 defaultFrame:(struct CGRect)arg2;
- (struct CGSize)windowWillResize:(NSWindow *)arg1 toSize:(struct CGSize)arg2;
- (id)windowWillReturnFieldEditor:(NSWindow *)arg1 toObject:(id)arg2;
- (BOOL)windowShouldClose:(id)arg1;
@end

@protocol UXCollectionViewDataSource <NSObject>
- (UXCollectionViewCell *)collectionView:(UXCollectionView *)arg1 cellForItemAtIndexPath:(NSIndexPath *)arg2;
- (long long)collectionView:(UXCollectionView *)arg1 numberOfItemsInSection:(long long)arg2;

@optional
- (UXCollectionReusableView *)collectionView:(UXCollectionView *)arg1 viewForSupplementaryElementOfKind:(NSString *)arg2 atIndexPath:(NSIndexPath *)arg3;
- (long long)numberOfSectionsInCollectionView:(UXCollectionView *)arg1;
@end

@protocol UXCollectionViewDelegate <NSObject>

@optional
- (void)collectionView:(UXCollectionView *)arg1 atIndexPath:(NSIndexPath *)arg2 didCloseMenu:(NSMenu *)arg3 withEvent:(NSEvent *)arg4;
- (void)collectionView:(UXCollectionView *)arg1 atIndexPath:(NSIndexPath *)arg2 willOpenMenu:(NSMenu *)arg3 withEvent:(NSEvent *)arg4;
- (void)collectionView:(UXCollectionView *)arg1 atIndexPath:(NSIndexPath *)arg2 prepareForMenu:(NSMenu *)arg3 withEvent:(NSEvent *)arg4;
- (NSMenu *)collectionView:(UXCollectionView *)arg1 actionMenuForItemAtIndexPath:(NSIndexPath *)arg2;
- (struct CGPoint)collectionView:(UXCollectionView *)arg1 targetContentOffsetOnResizeForProposedContentOffset:(struct CGPoint)arg2;
- (void)collectionView:(UXCollectionView *)arg1 didPrepareForOverdraw:(struct CGRect)arg2;
- (void)collectionView:(UXCollectionView *)arg1 itemWasRightClickedAtIndexPath:(NSIndexPath *)arg2 withEvent:(NSEvent *)arg3;
- (void)collectionView:(UXCollectionView *)arg1 itemWasDoubleClickedAtIndexPath:(NSIndexPath *)arg2 withEvent:(NSEvent *)arg3;
- (void)collectionView:(UXCollectionView *)arg1 mouseDownWithEvent:(NSEvent *)arg2;
- (void)collectionView:(UXCollectionView *)arg1 didEndDisplayingSupplementaryView:(UXCollectionReusableView *)arg2 forElementOfKind:(NSString *)arg3 atIndexPath:(NSIndexPath *)arg4;
- (void)collectionView:(UXCollectionView *)arg1 didEndDisplayingCell:(UXCollectionViewCell *)arg2 forItemAtIndexPath:(NSIndexPath *)arg3;
- (void)collectionView:(UXCollectionView *)arg1 indexPathsForSelectedItemsDidAdd:(NSArray *)arg2 remove:(NSArray *)arg3 animated:(BOOL)arg4;
- (void)collectionView:(UXCollectionView *)arg1 indexPathsForSelectedItemsWillAdd:(NSArray *)arg2 remove:(NSArray *)arg3 animated:(BOOL)arg4;
- (void)collectionView:(UXCollectionView *)arg1 didDeselectItemAtIndexPath:(NSIndexPath *)arg2;
- (void)collectionView:(UXCollectionView *)arg1 didSelectItemAtIndexPath:(NSIndexPath *)arg2;
- (BOOL)collectionView:(UXCollectionView *)arg1 shouldDeselectItemAtIndexPath:(NSIndexPath *)arg2;
- (BOOL)collectionView:(UXCollectionView *)arg1 shouldSelectItemAtIndexPath:(NSIndexPath *)arg2;
- (void)collectionViewDidEndDecelerating:(UXCollectionView *)arg1;
- (void)collectionViewWillBeginDecelerating:(UXCollectionView *)arg1 targetContentOffset:(struct CGPoint)arg2;
- (void)collectionViewDidEndScrolling:(UXCollectionView *)arg1;
- (void)collectionViewDidScroll:(UXCollectionView *)arg1;
- (void)collectionViewWillBeginScrolling:(UXCollectionView *)arg1;
@end

__attribute__((visibility("hidden")))
@interface GPUDataTableColumnGroup : NSObject
{
    NSString *_title;
    long long _columnCount;
}

@property(readonly, nonatomic) long long columnCount; // @synthesize columnCount=_columnCount;
@property(readonly, nonatomic) NSString *title; // @synthesize title=_title;
- (void).cxx_destruct;
- (id)initWithTitle:(id)arg1 columnCount:(long long)arg2;

@end

__attribute__((visibility("hidden")))
@interface GPUDataTableView : NSTableView <NSTableViewDataSource, NSTableViewDelegate>
{
    struct {
        unsigned int hasSelectorForColumnGroupTitle:1;
        unsigned int hasSelectorForColumnTitle:1;
        unsigned int hasSelectorForCellColor:1;
        unsigned int hasSelectorForWillShowContextMenu:1;
        unsigned int hasSelectorForMinimumColumnWidth:1;
        unsigned int reserved:3;
    } _flags;
    long long *_columnGroupForColumn;
    long long *_columnIndexInGroup;
    long long _rowSelectionStart;
    long long _rowSelectionCurrent;
    long long _columnSelectionStart;
    long long _columnSelectionCurrent;
    NSMenu *_contextMenu;
    NSMenuItem *_copyMenuItem;
    NSMutableDictionary *_columnSizes;
    id <GPUDataTableViewDataProvider> _dataProvider;
    id <GPUDataTableViewDelegate> _dataDelegate;
    NSFont *_cellFont;
    NSColor *_selectedCellColor;
    unsigned long long _cellTextAlignment;
    NSString *_noDataString;
    NSTextField *_textFieldForCellWidth;
}

@property(readonly, nonatomic) NSTextField *textFieldForCellWidth; // @synthesize textFieldForCellWidth=_textFieldForCellWidth;
@property(retain, nonatomic) NSString *noDataString; // @synthesize noDataString=_noDataString;
@property(nonatomic) unsigned long long cellTextAlignment; // @synthesize cellTextAlignment=_cellTextAlignment;
@property(retain, nonatomic) NSColor *selectedCellColor; // @synthesize selectedCellColor=_selectedCellColor;
@property(retain, nonatomic) NSFont *cellFont; // @synthesize cellFont=_cellFont;
@property(nonatomic) __weak id <GPUDataTableViewDelegate> dataDelegate; // @synthesize dataDelegate=_dataDelegate;
@property(nonatomic) __weak id <GPUDataTableViewDataProvider> dataProvider; // @synthesize dataProvider=_dataProvider;
- (void).cxx_destruct;
- (void)clearMinimumColumnWidths;
- (void)viewDidEndLiveResize;
- (void)viewWillStartLiveResize;
- (double)widthOfCellWithString:(id)arg1;
- (void)drawBackgroundInClipRect:(struct CGRect)arg1;
- (BOOL)resignFirstResponder;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (void)reloadData;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (long long)indexOfTableColumn:(id)arg1;
- (id)tableColumnAtIndex:(long long)arg1;
- (void)setNumberOfColumns:(unsigned long long)arg1;
- (void)setNumberOfColumns:(unsigned long long)arg1 usingHeaderCell:(Class)arg2;
- (void)removeAllColumns;
- (long long)firstIndexOfTableColumnInGroup:(long long)arg1;
- (long long)tableColumnIndexForColumnInGroup:(long long)arg1 atIndex:(long long)arg2;
- (long long)indexInGroupOfTableColumnAtIndex:(long long)arg1;
- (long long)groupOfTableColumnAtIndex:(long long)arg1;
- (void)dealloc;
- (void)viewDidMoveToSuperview;
- (void)commonInit;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)menuForEvent:(id)arg1;
- (void)addContextMenuItem:(id)arg1;
- (void)createContextMenu;
- (void)copy:(id)arg1;
- (void)selectAll:(id)arg1;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (void)mouseDown:(id)arg1;
@property(readonly, nonatomic) long long selectionColumnEnd;
@property(readonly, nonatomic) long long selectionColumnStart;
@property(readonly, nonatomic) long long selectionRowEnd;
@property(readonly, nonatomic) long long selectionRowStart;
- (void)clearSelection;
- (BOOL)hasSelection;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GPUDebuggerController (ScreenshotSaving)
- (id)archivedRenderbufferImage;
@end

__attribute__((visibility("hidden")))
@interface GPUEmptyBGView : NSView
{
}

- (void)drawRect:(struct CGRect)arg1;
- (id)hitTest:(struct CGPoint)arg1;
- (BOOL)acceptsFirstResponder;

@end

__attribute__((visibility("hidden")))
@interface GPUFauxUIElement : NSObject
{
    NSString *_role;
    id _parent;
}

+ (id)elementWithRole:(id)arg1 parent:(id)arg2;
- (void).cxx_destruct;
- (id)accessibilityFocusedUIElement;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (BOOL)accessibilityIsIgnored;
- (void)accessibilityPerformAction:(id)arg1;
- (id)accessibilityActionDescription:(id)arg1;
- (id)accessibilityActionNames;
- (void)accessibilitySetValue:(id)arg1 forAttribute:(id)arg2;
- (BOOL)accessibilityIsAttributeSettable:(id)arg1;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)accessibilityAttributeNames;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)initWithRole:(id)arg1 parent:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface GPUFlatSegmentedControlCell : DVTFlatSegmentedControlCell
{
}

- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;

@end

@interface GPUResourceEditor : DVTViewController
{
    GPUSharedTabUIState *_sharedTabState;
    GPUSharedInferiorSessionUIState *_sharedInferiorSessionState;
    id <DYResource> _resourceObject;
    IDEFileTextSettings *_fileTextSettings;
}

+ (id)defaultViewNibBundle;
+ (id)defaultViewNibName;
@property(nonatomic) __weak IDEFileTextSettings *fileTextSettings; // @synthesize fileTextSettings=_fileTextSettings;
@property(nonatomic) __weak id <DYResource> resourceObject; // @synthesize resourceObject=_resourceObject;
@property(nonatomic) __weak GPUSharedInferiorSessionUIState *sharedInferiorSessionState; // @synthesize sharedInferiorSessionState=_sharedInferiorSessionState;
@property(nonatomic) __weak GPUSharedTabUIState *sharedTabState; // @synthesize sharedTabState=_sharedTabState;
- (void).cxx_destruct;
- (BOOL)findBarSupported;
- (void)setRepresentedObject:(id)arg1;
- (void)primitiveInvalidate;
- (void)loadView;
- (void)beginEditor;
- (BOOL)_checkResourceType;
- (id)supportedResourceClasses;
- (id)supportedResourceProtocols;

@end

__attribute__((visibility("hidden")))
@interface GPUImageEditor : GPUResourceEditor <GPUTraceBubbleOwner, GPURenderBufferViewStateCoordinationProtocol>
{
    GPURenderBufferView *_imageView;
    DVTBorderedView *_bottomToolBar;
    NSSegmentedControl *_viewSegmentedControl;
    NSSegmentedControl *_orientationSegmentedControl;
    NSTextField *_viewSegmentedControlLabel;
    GPURenderBufferButton *_infoButton;
    GPURenderBufferButton *_settingsButton;
    GPURenderBufferBezeledLabel *_bezeledLabel;
    NSTextField *levelLabel;
    NSPopUpButton *levelSelector;
    GPUPathControl *_pathControl;
    NSButton *_pathControlSurround;
    NSLayoutConstraint *_toolbarHeightConstraint;
    NSObject<OS_dispatch_queue> *_queue;
    DYRenderingAttributes *_renderingAttributes;
    GPUTraceResourceInfoBubble *_infoBubble;
    BOOL _enableInfoBubblePopup;
    GPUTraceResourceSettingsBubble *_settingsBubble;
    NSLayoutConstraint *_labelConstraint;
    int _toolbarMode;
    id _controlKeyEventTap;
    NSImage *_zoomToFitIcon;
    NSImage *_zoomToActualIcon;
    NSString *_zoomToFitControlLabel;
    NSString *_freeZoomControlLabelFormat;
    struct CGPoint _scrollPoint;
    double _zoom;
    _Bool _zoomToFit;
    double _scaleX;
    double _scaleY;
    int _rotation;
    NSTextField *_imageLabel;
}

+ (id)assetBundle;
@property __weak NSTextField *imageLabel; // @synthesize imageLabel=_imageLabel;
- (void).cxx_destruct;
- (void)dumpImage:(id)arg1 asRaw:(BOOL)arg2;
- (void)settingsUpdate;
- (void)settingsToggleAlphaEnable;
- (void)settingsToggleBlueEnable;
- (void)settingsToggleGreenEnable;
- (void)settingsToggleRedEnable;
- (id)currentDisplayableItem;
- (void)settingsBubbleClosed;
- (void)showSettings:(id)arg1;
- (void)infoBubbleClosed;
- (void)reEnableInfoBubble;
- (void)showInfo:(id)arg1;
- (void)_showBezeledLabelWithString:(id)arg1 forTime:(double)arg2;
- (void)_showZoomLabelWithValue:(double)arg1 forTime:(double)arg2;
- (void)renderBufferViewDidChangeState:(id)arg1;
- (void)changeZoom:(id)arg1;
- (void)gpuZoomToFit:(id)arg1;
- (void)gpuZoomActual:(id)arg1;
- (void)gpuZoomOut:(id)arg1;
- (void)gpuZoomIn:(id)arg1;
- (void)_applyNewZoom:(double)arg1 operation:(int)arg2;
- (BOOL)_zoomToFitEnabled;
- (BOOL)_zoomOutEnabled;
- (BOOL)_zoomInEnabled;
- (void)changeOrientation:(id)arg1;
- (void)gpuFlipHorz:(id)arg1;
- (void)gpuFlipVert:(id)arg1;
- (void)gpuRotateCW:(id)arg1;
- (void)gpuRotateCCW:(id)arg1;
- (void)_updateOrientation:(BOOL)arg1;
- (void)_updateBufferButtonsState;
- (void)_updateToolbarState;
- (void)_switchToolbarMode:(int)arg1;
- (void)chooseImage:(id)arg1;
- (void)_updateImageChooser;
- (void)_updateImageView;
- (void)_updateUIForResourceAndAttributes;
- (void)updateLevelAndLayerMenu:(id)arg1;
- (void)_selectLevel:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)beginEditor;
- (void)_updateConstraints;
- (void)primitiveInvalidate;
- (void)loadView;
- (void)_makeSegmentedControlImagesTemplates:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)supportedResourceProtocols;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GPUImageEditorMenuDelegate : NSObject <NSMenuDelegate>
{
}

- (void)menuNeedsUpdate:(id)arg1;
- (id)editorForMenuContent;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GPUPathCell : NSPathCell
{
    BOOL _componentCellsNeedUpdate;
    NSMenu *_trackingMenu;
    GPUPathComponentCell *_firstCell;
    GPUPathComponentCell *_lastCell;
    int _gradientStyle;
    int _borderSides;
    unsigned int _chosenLayer;
    unsigned int _chosenLevel;
    NSArray *_representedItems;
}

+ (Class)pathComponentCellClass;
+ (unsigned long long)defaultFocusRingType;
@property(nonatomic) unsigned int chosenLevel; // @synthesize chosenLevel=_chosenLevel;
@property(nonatomic) unsigned int chosenLayer; // @synthesize chosenLayer=_chosenLayer;
@property int borderSides; // @synthesize borderSides=_borderSides;
@property(nonatomic) int gradientStyle; // @synthesize gradientStyle=_gradientStyle;
@property(retain, nonatomic) NSArray *representedItems; // @synthesize representedItems=_representedItems;
- (void).cxx_destruct;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (id)pathComponentCellAtPoint:(struct CGPoint)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;
- (struct CGRect)rectOfPathComponentCell:(id)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;
- (void)_updateComponentCells;
- (id)_cellsForItems:(id)arg1;
- (void)popUpMenuForComponentCell:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3;
- (void)populateLevelsMenu:(id)arg1 withItems:(id)arg2;
- (void)populateLayersMenu:(id)arg1 withItems:(id)arg2 forLevel:(unsigned int)arg3;
- (void)_selectLayer:(id)arg1;
- (void)_selectLevel:(id)arg1;
- (void)_updateFirstCellItem:(id)arg1 secondCellItem:(id)arg2;
- (id)peerItemsForCell:(id)arg1;
- (void)invalidateComponentCells;
- (void)setFont:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)init;
- (void)awakeFromNib;
- (void)_commonInit;

@end

__attribute__((visibility("hidden")))
@interface GPUPathComponentCell : IDEPathComponentCell
{
}

@end

__attribute__((visibility("hidden")))
@interface GPUPathControl : NSPathControl
{
    NSArray *_representedItems;
}

+ (Class)cellClass;
+ (unsigned long long)defaultFocusRingType;
@property(retain, nonatomic) NSArray *representedItems; // @synthesize representedItems=_representedItems;
- (void).cxx_destruct;
- (void)drawRect:(struct CGRect)arg1;
- (void)setFont:(id)arg1;
@property int borderSides;
- (BOOL)isOpaque;
@property(nonatomic) int gradientStyle;
- (void)popUpMenuForComponentCell:(id)arg1;
- (void)_popUpMenuForComponentCell:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface GPUProgramEditor : GPUResourceEditor <DVTSourceTextViewDelegate, DVTFindBarFindable>
{
    unsigned long long _sharegroupID;
    NSView *mainView;
    NSTabView *tabView;
    GPUSimpleGLSLSourceView *sourceView;
    DVTBorderedView *bottomBar;
    NSButton *updateProgramButton;
    NSTextField *updateProgramLabel;
    NSTextField *compiledAndLinkedLabel;
    NSImageView *_compiledAndLinkedLabelBadge;
    DVTObservingToken *_programInfoUpdateToken;
    DVTObservingToken *_gpuControllerStateObserverToken;
    DVTObservingToken *_shaderProfilerResultsObserverToken;
    NSString *_programIdentifier;
    NSDictionary *programInfoDict;
    GPUProgramEditorAnnotationContext *annotationContext;
    GPUShaderSource *_shaderSource;
}

+ (id)_createProgramInfoDict:(id)arg1;
+ (id)assetBundle;
@property(retain, nonatomic) NSDictionary *programInfoDict; // @synthesize programInfoDict;
- (void).cxx_destruct;
- (struct _NSRange)selectedRangeForFindBar:(id)arg1;
- (id)startingLocationForFindBar:(id)arg1 findingBackwards:(BOOL)arg2;
- (void)dvtFindBar:(id)arg1 didUpdateCurrentResult:(id)arg2;
- (void)dvtFindBar:(id)arg1 didUpdateResults:(id)arg2;
- (BOOL)findBarSupported;
- (struct _NSRange)textView:(id)arg1 willChangeSelectionFromCharacterRange:(struct _NSRange)arg2 toCharacterRange:(struct _NSRange)arg3;
- (BOOL)textView:(id)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementString:(id)arg3;
- (void)textDidBeginEditing:(id)arg1;
- (id)annotationContextForTextView:(id)arg1;
- (id)annotationContext;
- (void)_removeTextPreferencesObservers;
- (void)_setupTextPreferencesObservers;
- (void)updateProgram:(id)arg1;
- (void)makeAnnotationsWithInfoLog:(id)arg1 applyHeaderOffset:(BOOL)arg2;
- (void)beginEditor;
- (void)_onShaderEdited:(id)arg1;
- (void)_alertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)_onProgramInfoDictUpdated;
- (void)_appendProfilerResultToInfoLog:(id)arg1 programItem:(id)arg2;
- (void)_showToolbar;
- (BOOL)_shouldEnableUpdateProgramButton;
- (void)viewWillUninstall;
- (void)viewDidInstall;
- (void)primitiveInvalidate;
- (void)loadView;
- (id)supportedResourceClasses;
- (void)_updateCompiledAndLinkedLabel;
- (id)_buildInfoLogWithDictionary:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GPUProgramEditorAnnotationContext : DVTAnnotationContext
{
    NSString *_infoLog;
    unsigned long long _lineOffset;
}

@property(nonatomic) unsigned long long lineOffset; // @synthesize lineOffset=_lineOffset;
@property(copy, nonatomic) NSString *infoLog; // @synthesize infoLog=_infoLog;
- (void).cxx_destruct;
- (id)initWithFileDataType:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface GPUProgramEditorAnnotationProvider : DVTAnnotationProvider
{
    DVTObservingToken *_infoLogObserverToken;
    GPUProgramEditorAnnotationContext *_context;
}

+ (id)annotationProviderForContext:(id)arg1 error:(id *)arg2;
@property(retain, nonatomic) GPUProgramEditorAnnotationContext *context; // @synthesize context=_context;
- (void).cxx_destruct;
- (void)rebuildAnnotations;
- (float)_getMaxCost;
- (void)_createCostAnnotionForLine:(int)arg1 type:(unsigned int)arg2 size:(float)arg3 cost:(float)arg4 dcCost:(float)arg5;
- (void)_createAnnotionForLineRange:(struct _NSRange)arg1 type:(unsigned int)arg2 size:(float)arg3 message:(id)arg4;
- (void)providerWillUninstall;
- (id)initWithContext:(id)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface GPUProgramPerformanceAnnotation : DVTMessageBubbleAnnotation
{
    float _size;
}

@property(readonly) float size; // @synthesize size=_size;
- (double)preferredWidthForAvailableWidth:(double)arg1;
- (id)initWithSize:(float)arg1;

@end

@interface GPUTraceSubEditor : NSViewController
{
    GPUSharedTabUIState *_sharedUIStateObj;
    GPUTraceDocument *_editorDocument;
    GPUMainEditor *_mainEditor;
}

+ (id)defaultViewNibBundle;
+ (id)defaultViewNibName;
@property(readonly) __weak GPUMainEditor *mainEditor; // @synthesize mainEditor=_mainEditor;
@property(readonly) __weak GPUTraceDocument *editorDocument; // @synthesize editorDocument=_editorDocument;
@property(readonly) __weak GPUSharedTabUIState *sharedUIStateObj; // @synthesize sharedUIStateObj=_sharedUIStateObj;
- (void).cxx_destruct;
- (void)setRepresentedObject:(id)arg1;
- (void)onReplayCapture:(id)arg1;
- (BOOL)shouldEnableReplayCaptureMenuItem;
- (void)beginEditor;
- (id)initWithTraceDocument:(id)arg1 sharedUIState:(id)arg2 mainEditor:(id)arg3;

@end

@interface GPUQuicklooksEditor : GPUTraceSubEditor
{
    NSObject<OS_dispatch_queue> *_queue;
    NSPopUpButton *_devicePopup;
    NSButton *_activateButton;
    NSButton *_chooseButton;
    NSImageView *_imageView;
    NSTextField *_filenameTextField;
    NSTextField *_descriptionTextField;
    NSImageView *_incompatibleImageView;
    NSTextField *_incompatibleTextField;
    NSTextField *_incompatibleDescTextField;
    NSWindow *_deviceSelectionSheet;
    NSBox *_boxView;
    NSProgressIndicator *_progressIndicator;
    BOOL _traceSessionActivated;
    NSString *_appname;
    NSArray *_usableDevices;
    IDEWorkspaceTabController *_tabController;
    DVTDeviceManager *_deviceManager;
    DVTObservingToken *_debuggingAdditionsObservation;
    DVTObservingToken *_usableDevicesObservation;
    BOOL _isKojakFile;
}

+ (id)assetBundle;
@property(retain, nonatomic) NSArray *usableDevices; // @synthesize usableDevices=_usableDevices;
- (void).cxx_destruct;
- (id)toolsDeviceFromDVTDevice:(id)arg1 error:(id *)arg2;
- (void)_updateUsableDeviceList;
- (void)onReplayCapture:(id)arg1;
- (BOOL)shouldEnableReplayCaptureMenuItem;
- (void)_onUsableDevicesUpdated;
- (void)onDeviceSelectionCancelled:(id)arg1;
- (void)onDeviceSelected:(id)arg1;
- (void)onTraceSessionActivated:(id)arg1;
- (void)_handleTraceSessionActivation:(id)arg1;
- (void)_buildDevicesMenu;
- (void)beginEditor;
- (id)_documentDescription;
- (void)loadView;
- (void)dealloc;

@end

@interface GPURenderBuffer : NSViewController <GPUTraceBubbleOwner, DVTInvalidation>
{
    GPURenderBufferButton *_infoButton;
    GPURenderBufferButton *_settingsButton;
    NSLayoutConstraint *_labelConstraint;
    NSMenu *_contextMenuInitedWith;
    GPUTraceResourceInfoBubble *_infoBubble;
    GPUTraceResourceSettingsBubble *_settingsBubble;
    GPUTraceEditor *_gpuTraceEditor;
    BOOL _showDepth;
    unsigned int _attachmentEnum;
    GPURenderJob *_renderJob;
    id <DYResource> _resource;
    DYRenderingAttributes *_displayAttributes;
    NSTextField *_bufferLabelProxyTextField;
}

+ (void)initialize;
+ (id)assetBundle;
@property __weak NSTextField *bufferLabelProxyTextField; // @synthesize bufferLabelProxyTextField=_bufferLabelProxyTextField;
@property(readonly, nonatomic) DYRenderingAttributes *displayAttributes; // @synthesize displayAttributes=_displayAttributes;
@property(retain, nonatomic) id <DYResource> resource; // @synthesize resource=_resource;
@property(retain, nonatomic) GPURenderJob *renderJob; // @synthesize renderJob=_renderJob;
- (void).cxx_destruct;
- (void)dumpImage:(id)arg1 asRaw:(BOOL)arg2;
- (id)accessibleChildren;
- (id)currentDisplayableItem;
- (void)settingsUpdate;
- (void)settingsToggleAlphaEnable;
- (void)settingsToggleBlueEnable;
- (void)settingsToggleGreenEnable;
- (void)settingsToggleRedEnable;
- (void)unloadView;
- (void)updateView;
- (void)settingsBubbleClosed;
- (void)showSettings:(id)arg1;
- (void)infoBubbleClosed;
- (void)showInfo:(id)arg1;
- (struct CGPoint)_popoverPointForParentButton:(id)arg1;
- (void)hideButtons:(BOOL)arg1;
@property(readonly, nonatomic) __weak GPURenderBufferView *renderBufferView; // @dynamic renderBufferView;
@property(readonly, nonatomic) NSString *name;
@property(readonly) struct CGSize resourceImageSize;
- (void)_updateConstraints;
- (void)loadView;
@property(readonly, copy) NSString *description;
- (void)primitiveInvalidate;
- (id)initWithContextMenu:(id)arg1 traceEditor:(id)arg2 displayAttributes:(id)arg3 showDepth:(BOOL)arg4;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

__attribute__((visibility("hidden")))
@interface GPURenderBufferBezeledLabel : NSView
{
    CALayer *_parentLayer;
    CALayer *_backgroundLayer;
    NSString *_displayedText;
    struct CGSize _displayedTextSize;
    CATextLayer *_textLayer;
    struct CGPoint _normalizedPosition;
}

@property(nonatomic) struct CGPoint normalizedPosition; // @synthesize normalizedPosition=_normalizedPosition;
@property(retain, nonatomic) NSString *displayedText; // @synthesize displayedText=_displayedText;
- (void).cxx_destruct;
- (void)fadeToOpacity:(double)arg1 overTime:(double)arg2;
- (void)layout;
- (void)viewDidChangeBackingProperties;
- (long long)tag;
- (void)dealloc;
- (void)viewDidMoveToSuperview;
- (id)makeBackingLayer;
- (void)_setupLayers;
- (void)_buildLayerTree:(id)arg1;
@property(nonatomic) double opacity; // @dynamic opacity;
- (void)_applyNormalizedPosition;
- (double)_saturate:(double)arg1;

@end

@interface GPURenderBufferButton : NSControl
{
    NSTrackingArea *_ta;
    NSImage *_currentImage;
    NSTimer *_imageUpdateTimer;
    NSImage *_image;
    NSImage *_overImage;
    struct {
        unsigned int mouseInside:1;
        unsigned int mouseDown:1;
        unsigned int sentAction:1;
        unsigned int firstResponder:1;
        unsigned int _pad:4;
    } _state;
}

+ (Class)cellClass;
@property(retain, nonatomic) NSImage *overImage; // @synthesize overImage=_overImage;
@property(retain, nonatomic) NSImage *image; // @synthesize image=_image;
- (void).cxx_destruct;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)accessibilityAttributeNames;
- (BOOL)accessibilityIsIgnored;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)updateTrackingAreas;
- (void)drawRect:(struct CGRect)arg1;
- (BOOL)resignFirstResponder;
- (BOOL)becomeFirstResponder;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)_updateImage:(id)arg1;
- (void)mouseUp:(id)arg1;
- (void)mouseDown:(id)arg1;
- (id)_filtersForMousePressed;
- (id)_filtersForDisabled;
- (void)_updateFilters;
- (void)setEnabled:(BOOL)arg1;
- (BOOL)isOpaque;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface GPURenderBufferCanvas : DVTLayerHostingView
{
    NSMutableArray *_displayedRenderBuffers;
    NSMapTable *_renderBufferObsTokens;
    NSArray *_renderBufferViewConstraints;
    BOOL _landscape;
}

+ (BOOL)requiresConstraintBasedLayout;
+ (id)separatorColor;
@property(nonatomic) BOOL landscape; // @synthesize landscape=_landscape;
- (void).cxx_destruct;
- (struct CGSize)fauxUIElementSize:(id)arg1;
- (struct CGPoint)fauxUIElementPosition:(id)arg1;
- (void)fauxUIElement:(id)arg1 setFocus:(id)arg2;
- (BOOL)isFauxUIElementFocusable:(id)arg1;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)accessibilityAttributeNames;
- (BOOL)accessibilityIsIgnored;
@property(retain, nonatomic) NSArray *renderBuffers; // @dynamic renderBuffers;
- (void)refreshLayout;
- (void)updateConstraints;
- (void)updateRenderBufferViewConstraints;
- (id)constraintsForRenderBufferViews:(id)arg1;
- (void)setRenderBufferViewConstraints:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)drawSeperatorLines:(struct CGRect)arg1;
- (BOOL)canBecomeKeyView;
- (BOOL)acceptsFirstResponder;
- (void)setup;
- (void)awakeFromNib;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface GPURenderBufferCanvasGrid : GPURenderBufferCanvas
{
    unsigned int _maxColumns;
    unsigned int _maxRows;
    unsigned int _renderbufferCount;
    NSMutableArray *_grid;
}

- (void).cxx_destruct;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)accessibilityAttributeNames;
- (BOOL)accessibilityIsIgnored;
- (void)drawRect:(struct CGRect)arg1;
- (id)constraintsForRenderBufferViews:(id)arg1;
- (void)_configurationForRenderbuffers:(id)arg1;
- (void)drawSeperatorLines:(struct CGRect)arg1;
- (void)viewDidEndLiveResize;
- (void)setup;

@end

__attribute__((visibility("hidden")))
@interface GPURenderBufferPool : NSObject <DVTInvalidation>
{
    _Bool _powerOf2ZoomClamping;
    GPURenderBuffer *_pool[24];
    NSArray *_allActiveBuffers;
    NSArray *_activeColorBuffers;
    GPURenderBuffer *_activeDepthBuffer;
    GPURenderBuffer *_activeStencilBuffer;
}

+ (void)initialize;
@property(readonly, nonatomic) GPURenderBuffer *activeStencilBuffer; // @synthesize activeStencilBuffer=_activeStencilBuffer;
@property(readonly, nonatomic) GPURenderBuffer *activeDepthBuffer; // @synthesize activeDepthBuffer=_activeDepthBuffer;
@property(readonly, nonatomic) NSArray *activeColorBuffers; // @synthesize activeColorBuffers=_activeColorBuffers;
@property(readonly, nonatomic) NSArray *allActiveBuffers; // @synthesize allActiveBuffers=_allActiveBuffers;
- (void).cxx_destruct;
- (void)primitiveInvalidate;
@property(readonly, nonatomic) BOOL hasColorData;
@property(readonly, nonatomic) BOOL hasStencilData;
@property(readonly, nonatomic) BOOL hasDepthData;
- (void)enableRenderbuffersWithRenderJobs:(id)arg1;
- (void)setRenderbufferViewCoordinator:(id)arg1;
- (id)initWithContextMenu:(id)arg1 traceEditor:(id)arg2;
- (id)_createRenderBufferWithContextMenu:(id)arg1 andTraceEditor:(id)arg2;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

__attribute__((visibility("hidden")))
@interface GPURenderBufferUIElement : GPUFauxUIElement
{
    GPURenderBuffer *_renderBuffer;
    NSString *_accessibilityTitle;
}

@property(readonly, nonatomic) NSString *accessibilityTitle; // @synthesize accessibilityTitle=_accessibilityTitle;
@property(readonly, nonatomic) GPURenderBuffer *renderBuffer; // @synthesize renderBuffer=_renderBuffer;
- (void).cxx_destruct;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)accessibilityAttributeNames;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)initWithRenderBuffer:(id)arg1 parent:(id)arg2 title:(id)arg3;

@end

@interface GPURenderBufferView : DVTLayerHostingView <DYOpenGLLayerContentProvider>
{
    CAScrollLayer *_scrollLayer;
    DYOpenGLLayer *_imageLayer;
    CATextLayer *_titleLayer;
    CALayer *_titleHighlightLayer;
    struct CGSize _scaledImageSize;
    NSString *_title;
    id <DYResource> _currentResource;
    struct CGPoint _scrollPoint;
    struct CGSize _scrollPadding;
    struct CGPoint _transactionScrollPoint;
    struct CGPoint _dragRange;
    NSObject<OS_dispatch_source> *_snapbackTimer;
    struct CGPoint _scrollMomentumVelocity;
    double _scrollMomentumLastTimestamp;
    CDUnknownBlockType _swipeHandler;
    double _zRotation;
    double _oldZRotation;
    double _maxScale;
    double _savedScaleFactor;
    double _scaleToFitFactor;
    double _uniformScale;
    double _relativeScale;
    double _oldUniformScale;
    struct CGPoint _trackedAnchorPoint;
    struct CGPoint _trackedCursorPoint;
    struct CGRect _scrollLayerBounds;
    struct CGColor *_titleLayerForegroundColor;
    struct CGColor *_titleLayerForegroundColorDark;
    struct CGColor *_titleHighlightLayerColor;
    struct CGColor *_titleHighlightLayerColorDark;
    id <GPURenderBufferViewStateCoordinationProtocol> _coordinator;
    unsigned int _stateFlags;
    GPURenderJob *_renderJob;
    struct CGSize _titleSize;
}

@property(nonatomic) double relativeScale; // @synthesize relativeScale=_relativeScale;
@property(copy, nonatomic) CDUnknownBlockType swipeHandler; // @synthesize swipeHandler=_swipeHandler;
@property(nonatomic) __weak id <GPURenderBufferViewStateCoordinationProtocol> coordinator; // @synthesize coordinator=_coordinator;
@property(nonatomic) struct CGSize titleSize; // @synthesize titleSize=_titleSize;
@property(retain, nonatomic) GPURenderJob *renderJob; // @synthesize renderJob=_renderJob;
- (void).cxx_destruct;
- (void)dumpImage:(id)arg1 asRaw:(BOOL)arg2;
- (void)layout;
- (BOOL)layer:(id)arg1 shouldInheritContentsScale:(double)arg2 fromWindow:(id)arg3;
- (void)layoutSublayersOfLayer:(id)arg1;
- (struct CGRect)imageRectScreen;
- (void)dispatchInTransaction:(CDUnknownBlockType)arg1;
- (void)synchronizeWithView:(id)arg1;
@property(readonly, nonatomic) struct CGRect usableViewRect; // @dynamic usableViewRect;
@property(readonly, nonatomic) struct CGSize scaledImageSize; // @dynamic scaledImageSize;
@property(nonatomic) _Bool useFastShadows; // @dynamic useFastShadows;
@property(nonatomic) _Bool flipAboutY; // @dynamic flipAboutY;
@property(nonatomic) _Bool flipAboutX; // @dynamic flipAboutX;
@property(readonly, nonatomic) struct CATransform3D imageTransform; // @dynamic imageTransform;
@property(nonatomic) double zRotation; // @dynamic zRotation;
@property(nonatomic) double scale; // @dynamic scale;
@property(nonatomic) _Bool clampScaleToPowersOfTwo; // @dynamic clampScaleToPowersOfTwo;
- (_Bool)clampZoomToPowersOfTwo;
@property(nonatomic) _Bool clampScaleToIntegers; // @dynamic clampScaleToIntegers;
@property(nonatomic) _Bool scaleToFit; // @dynamic scaleToFit;
- (void)_setStateFlag:(unsigned int)arg1 testingBool:(_Bool)arg2;
@property(readonly, nonatomic) double minimumScale; // @dynamic minimumScale;
@property(readonly, nonatomic) double maximumScale; // @dynamic maximumScale;
@property(copy, nonatomic) NSString *title; // @dynamic title;
@property(retain, nonatomic) id <DYResource> resource;
- (BOOL)isOpaque;
- (BOOL)wantsDepth;
- (id)overlay;
- (id)renderingAttributes;
- (BOOL)flipped;
- (BOOL)isColor;
- (void)viewDidMoveToSuperview;
- (void)viewDidMoveToWindow;
- (void)setupOrTearDown;
- (void)tearDown;
- (void)setup;
- (void)teardownLayers;
- (void)setupLayers;
- (BOOL)useLayerHosting;
- (id)makeBackingLayer;
- (void)updateLayer;
- (BOOL)wantsUpdateLayer;
- (void)_buildLayerTree:(id)arg1;
- (void)swipeWithEvent:(id)arg1;
- (void)rotateWithEvent:(id)arg1;
- (void)smartMagnifyWithEvent:(id)arg1;
- (void)magnifyWithEvent:(id)arg1;
- (void)scrollWheel:(id)arg1;
- (void)_handleScrollEvent:(id)arg1 usingMomentumPhase:(unsigned long long)arg2;
- (void)mouseUp:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)_handleSmartZoomEvent:(id)arg1;
- (void)_handleZoomEvent:(id)arg1 factor:(double)arg2 animate:(_Bool)arg3;
- (void)_handleDragEvent:(id)arg1 usingPoint:(struct CGPoint)arg2 asAnOffsetVector:(_Bool)arg3;
- (void)endGestureWithEvent:(id)arg1;
- (void)beginGestureWithEvent:(id)arg1;
- (BOOL)canBecomeKeyView;
- (BOOL)acceptsFirstResponder;
- (struct CGSize)_resourceImageSize;
- (void)_updateContentsScale:(double)arg1 forLayer:(id)arg2;
- (void)_layoutLayers;
- (void)_updateTitleForegroundColor;
- (_Bool)_layer:(id)arg1 intersectsLayer:(id)arg2;
- (void)_updateScaleToFitFactor;
- (double)_clampScale:(double)arg1 withDelta:(double)arg2;
- (double)_clampScale:(double)arg1;
- (struct CGPoint)_clampAnchor:(struct CGPoint)arg1;
- (void)_applyTransform;
- (struct CATransform3D)_getCurrentLinearTransformApplyingScale:(_Bool)arg1 flippingZRotation:(_Bool)arg2 adjustingForContentScale:(_Bool)arg3;
- (struct AABB)_calculateAABBWithTransform:(struct CATransform3D)arg1;
- (struct CGPoint)_getUsableCenter;
- (void)dealloc;
- (void)awakeFromNib;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)_commonInit;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GPURenderJob : NSObject
{
    id <DYResource> _resource;
    id <DYResource> _overlayResource;
    GPUTraceModelFactory *_modelFactory;
    DYRenderingAttributes *_renderingAttributes;
    NSString *_displayElementName;
}

@property(readonly, nonatomic) NSString *displayElementName; // @synthesize displayElementName=_displayElementName;
@property(nonatomic) __weak DYRenderingAttributes *renderingAttributes; // @synthesize renderingAttributes=_renderingAttributes;
@property(readonly, nonatomic) __weak GPUTraceModelFactory *modelFactory; // @synthesize modelFactory=_modelFactory;
@property(readonly, nonatomic) __weak id <DYResource> overlayResource; // @synthesize overlayResource=_overlayResource;
@property(nonatomic) __weak id <DYResource> resource; // @synthesize resource=_resource;
- (void).cxx_destruct;
- (BOOL)showOverlay;
- (BOOL)isColor;
- (BOOL)flipped;
- (struct CGSize)imageSize;
- (void)resolveWithTraceResourceItem:(id)arg1;
- (id)initWithResource:(id)arg1 modelFactory:(id)arg2 renderingAttributes:(id)arg3 overlayResource:(id)arg4;

// Remaining properties
@property(readonly, nonatomic) BOOL isDepthDisplayElement; // @dynamic isDepthDisplayElement;
@property(readonly, nonatomic) BOOL isStencilDisplayElement; // @dynamic isStencilDisplayElement;

@end

__attribute__((visibility("hidden")))
@interface GPUResourceEditorGeniusResultsFinder : IDEGeniusResultsFinder
{
}

+ (Class)editorDocumentClass;
- (void)_updateGeniusResults;

@end

__attribute__((visibility("hidden")))
@interface GPUResourceThumbnailFactory : NSObject
{
    NSBundle *_assetBundle;
    NSObject<OS_dispatch_semaphore> *_renderersSema;
    struct {
        void *opaque1;
        long long opaque2;
    } _freeRenderers;
    struct ImageRenderer *_renderers[8];
    NSCache *_thumbnailImageCache;
}

+ (id)sharedThumbnailFactory;
- (void).cxx_destruct;
- (void)invalidateThumbnailForResource:(id)arg1;
- (id)thumbnailWithResourceItem:(id)arg1 withContentsScale:(double)arg2 nocache:(BOOL)arg3;
- (id)thumbnailWithResourceItem:(id)arg1 withContentsScale:(double)arg2;
- (id)defaultImageForResourceItem:(id)arg1;
- (id)_generateThumbnailForImage:(id)arg1 withContentsScale:(double)arg2 nocache:(BOOL)arg3;
- (id)_generateDefaultThumbnailForImage:(id)arg1;
- (id)_imageFromThumbnailCacheForResourceItem:(id)arg1;
- (void)_addImageToThumbnailCache:(id)arg1 forResourceItem:(id)arg2 withCost:(unsigned long long)arg3;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface GPUShaderSource : NSObject <DVTTextFindable, DVTTextReplacable, DVTTextStorageDelegate>
{
    GPUTraceResourceItem *_resourceItem;
    GPUInferiorSession *_inferiorSession;
    DVTUndoManager *_undoManager;
    BOOL _isDisassembly;
    BOOL _isEditable;
    DVTTextStorage *_textStorage;
    NSString *_header;
}

+ (id)_createProgramInfoDict:(id)arg1;
+ (id)_assetBundle;
@property(readonly, nonatomic) BOOL isEditable; // @synthesize isEditable=_isEditable;
@property(readonly, nonatomic) NSString *header; // @synthesize header=_header;
@property(readonly, nonatomic) DVTTextStorage *textStorage; // @synthesize textStorage=_textStorage;
- (void).cxx_destruct;
- (BOOL)replaceFindResults:(id)arg1 withString:(id)arg2 withError:(id *)arg3;
- (BOOL)replaceFindResults:(id)arg1 inSelection:(struct _NSRange)arg2 withString:(id)arg3 withError:(id *)arg4;
- (id)findStringMatchingDescriptor:(id)arg1 backwards:(BOOL)arg2 from:(id)arg3 to:(id)arg4;
- (id)documentLocationFromCharacterRange:(struct _NSRange)arg1;
- (id)updatedLocationFromLocation:(id)arg1 toTimestamp:(double)arg2;
- (BOOL)textStorageShouldAllowEditing:(id)arg1;
- (void)onDisassemblyUpdated;
- (id)initWithResourceItem:(id)arg1 sharedTabUIState:(id)arg2 undoManager:(id)arg3;
- (id)_shaderDisassembly;
- (id)_setupReadOnlyShader:(id)arg1 programInfoLog:(id)arg2;
- (BOOL)_isProgramEditable:(id)arg1;
- (id)findableObject;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) NSDictionary *sourceLanguageServiceContext;
@property(readonly) Class superclass;
@property unsigned long long supportedMatchingOptions;

@end

__attribute__((visibility("hidden")))
@interface GPUTextFindableProxy : NSObject <NSObject, DVTTextFindable>
{
    id <NSObject><DVTTextFindable> _findable;
}

- (void).cxx_destruct;
- (id)findStringMatchingDescriptor:(id)arg1 backwards:(BOOL)arg2 from:(id)arg3 to:(id)arg4;
- (id)initWithFindable:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property unsigned long long supportedMatchingOptions;

@end

@interface GPUTraceDocument : IDEEditorDocument <IDEDocumentStructureProviding>
{
    BOOL _editorWasInstalled;
    GPUTraceSession *_traceSession;
    GPUDebuggingAdditionUIController *_debuggingAdditionUIController;
}

+ (BOOL)preservesVersions;
+ (BOOL)autosavesInPlace;
@property(nonatomic) BOOL editorWasInstalled; // @synthesize editorWasInstalled=_editorWasInstalled;
@property(retain, nonatomic) GPUDebuggingAdditionUIController *debuggingAdditionUIController; // @synthesize debuggingAdditionUIController=_debuggingAdditionUIController;
@property(retain, nonatomic) GPUTraceSession *traceSession; // @synthesize traceSession=_traceSession;
- (void).cxx_destruct;
- (id)sourceLocationForDocumentLocation:(id)arg1;
- (id)boundResourcesGeniusLocationsForDocumentLocation:(id)arg1;
- (id)allResourcesGeniusLocationsForDocumentLocation:(id)arg1;
@property(readonly) NSArray *ideTopLevelStructureObjects;
- (id)printOperationWithSettings:(id)arg1 error:(id *)arg2;
- (void)editorDocumentDidClose;
- (void)editorDocumentWillClose;
- (BOOL)prepareSavePanel:(id)arg1;
- (id)backupFileURL;
- (BOOL)writeSafelyToURL:(id)arg1 ofType:(id)arg2 forSaveOperation:(unsigned long long)arg3 error:(id *)arg4;
- (id)fileWrapperOfType:(id)arg1 error:(id *)arg2;
- (BOOL)canExportDocument;
- (BOOL)validateUserInterfaceItem:(id)arg1;
@property(readonly, nonatomic) DYCaptureSessionInfo *captureSessionInfo; // @dynamic captureSessionInfo;
- (id)captureArchive;
- (void)dealloc;
- (BOOL)readFromURL:(id)arg1 ofType:(id)arg2 error:(id *)arg3;
- (id)initForURL:(id)arg1 withContentsOfURL:(id)arg2 ofType:(id)arg3 error:(id *)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GPUTraceEditor : GPUMainEditor <GPURenderBufferViewStateCoordinationProtocol>
{
    DVTBorderedView *_bottomToolBar;
    NSSegmentedControl *_viewSegmentedControl;
    NSTextField *_viewSegmentLabel;
    NSSegmentedControl *_orientationSegmentedControl;
    GPURenderBufferCanvasGrid *_renderBufferCanvas;
    NSMenuItem *_revealInDebugNavigatorMenuItem;
    GPURenderBufferBezeledLabel *_bezeledLabel;
    NSLayoutConstraint *_toolbarHeightConstraint;
    int _toolbarMode;
    GPUTraceSubEditor *_subEditor;
    NSView *_mainEditorContentView;
    GPURenderBufferPool *_renderBufferPool;
    BOOL _showColorBuffer;
    BOOL _showDepthBuffer;
    BOOL _showStencilBuffer;
    BOOL _showAllBuffer;
    NSView *_superView;
    BOOL _reloadingViewTree;
    NSMenuItem *_toggleWireframeMenuItem;
    NSMenuItem *_toggleDeviceWireframeMenuItem;
    GPUDebuggingAdditionUIController *_debuggingAdditionUIController;
    DVTObservingToken *_debugerControllerDebugStateObserverToken;
    BOOL _haveRequestedUIController;
    id <DVTCancellable> _uiControllerObserver;
    id _controlKeyEventTap;
    NSImage *_zoomToFitIcon;
    NSImage *_zoomToActualIcon;
    NSString *_zoomToFitControlLabel;
    NSString *_freeZoomControlLabelFormat;
    double _zoom;
    _Bool _zoomToFit;
    _Bool _changingVisibleBuffers;
    double _scaleX;
    double _scaleY;
    int _rotation;
    NSSegmentedControl *_buffersSegmentedControl;
}

+ (long long)version;
+ (void)configureStateSavingObjectPersistenceByName:(id)arg1;
@property __weak NSSegmentedControl *buffersSegmentedControl; // @synthesize buffersSegmentedControl=_buffersSegmentedControl;
@property(readonly, nonatomic) GPURenderBufferCanvas *renderBufferCanvas; // @synthesize renderBufferCanvas=_renderBufferCanvas;
@property(copy) NSMenuItem *toggleDeviceWireframeMenuItem; // @synthesize toggleDeviceWireframeMenuItem=_toggleDeviceWireframeMenuItem;
@property(copy) NSMenuItem *toggleWireframeMenuItem; // @synthesize toggleWireframeMenuItem=_toggleWireframeMenuItem;
- (void).cxx_destruct;
- (void)dumpImages:(id)arg1 asRaw:(BOOL)arg2;
- (void)commitStateToDictionary:(id)arg1;
- (void)revertStateWithDictionary:(id)arg1;
- (void)handleOpenScrubberTriggeredNewLocation:(id)arg1;
- (void)selectDocumentLocations:(id)arg1;
- (void)handleDebugBarNavigationWithDocumentLocation:(id)arg1;
- (void)handleUpdatedMainTraceItem:(id)arg1;
- (void)_loadSubEditorForNavItem:(id)arg1;
- (id)currentSelectedDocumentLocations;
- (id)currentSelectedItems;
- (void)debuggingAddtionUIControllerInvalidated:(id)arg1;
- (void)debuggingAddtionUIControllerUpdated:(id)arg1;
- (Class)classOfDebuggingAddtionUIControllerInterestedIn;
- (void)renderBufferViewDidChangeState:(id)arg1;
- (void)changeZoom:(id)arg1;
- (void)gpuZoomToFit:(id)arg1;
- (void)gpuZoomActual:(id)arg1;
- (void)gpuZoomOut:(id)arg1;
- (void)gpuZoomIn:(id)arg1;
- (void)_applyNewZoom:(double)arg1 operation:(int)arg2;
- (BOOL)_zoomToFitEnabled;
- (BOOL)_zoomActualEnabled;
- (BOOL)_zoomOutEnabled;
- (BOOL)_zoomInEnabled;
- (void)changeOrientation:(id)arg1;
- (void)gpuFlipHorz:(id)arg1;
- (void)gpuFlipVert:(id)arg1;
- (void)gpuRotateCW:(id)arg1;
- (void)gpuRotateCCW:(id)arg1;
- (void)_updateOrientation:(BOOL)arg1;
- (void)_changeVisibleBufferViews:(int)arg1;
- (void)changeVisibleBufferViews:(id)arg1;
- (void)_updateBufferButtonsState;
- (void)_updateToolbarState;
- (void)_switchToolbarMode:(int)arg1;
- (void)_showBezeledLabelWithString:(id)arg1 forTime:(double)arg2;
- (void)_showZoomLabelWithValue:(double)arg1 forTime:(double)arg2;
- (void)_storePreferredVisibleRenderBuffers;
- (void)_updateRenderBuffersVisibility;
- (BOOL)_stencilBufferEnabled:(id)arg1;
- (BOOL)_depthBufferEnabled:(id)arg1;
- (BOOL)_colorBufferEnabled:(id)arg1;
- (BOOL)_autoBuffersEnabled:(id)arg1;
- (void)_updateRenderBuffersVisibilityAfterDelay;
- (id)updateViewsWithDisplayableItem:(id)arg1;
- (void)renderDisplaySet:(BOOL)arg1;
- (void)_renderDisplaySet:(BOOL)arg1;
- (void)viewWillUninstall;
- (void)_handleDebuggingAdditionUIControllerCreated:(id)arg1;
- (void)viewDidInstall;
- (BOOL)_documentIsInQuickLookMode;
- (void)_loadInitialDisplayable;
- (void)replayCapture:(id)arg1;
- (void)gpuBuffersStencil:(id)arg1;
- (void)gpuBuffersDepth:(id)arg1;
- (void)gpuBuffersColor:(id)arg1;
- (void)gpuBuffersAuto:(id)arg1;
- (void)toggleDeviceWireframe:(id)arg1;
- (void)toggleWireframe:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)primitiveInvalidate;
- (void)loadView;
- (id)_loadSubEditorWithIdentifier:(id)arg1;
- (id)_subEditorInstanceForIdentifier:(id)arg1;
- (void)_makeSegmentedControlImagesTemplates:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface GPUTraceEmptyEditor : GPUTraceSubEditor
{
    NSString *_emptyContentString;
    NSTextField *_lozengeTextField;
    GPUEmptyBGView *_bgView;
}

- (void).cxx_destruct;
- (void)setEmptyContentString:(id)arg1;
- (void)_centerViewInSuperView:(id)arg1;
- (void)beginEditor;
- (void)loadView;

@end

__attribute__((visibility("hidden")))
@interface GPUTraceGeniusResultsFinder : IDEGeniusResultsFinder
{
    GPUTraceDocumentLocation *_previousLocation;
}

+ (Class)editorDocumentClass;
- (void).cxx_destruct;
- (void)_updateGeniusResults;

@end

__attribute__((visibility("hidden")))
@interface GPUTraceResourceCollectionViewItem : UXCollectionViewCell
{
    GPUTraceResourceItem *_resourceItem;
    CALayer *_imageLayer;
    NSTextField *_label;
}

@property(retain, nonatomic) NSTextField *label; // @synthesize label=_label;
@property(retain, nonatomic) CALayer *imageLayer; // @synthesize imageLayer=_imageLayer;
@property(retain, nonatomic) GPUTraceResourceItem *resourceItem; // @synthesize resourceItem=_resourceItem;
- (void).cxx_destruct;
- (void)recalculateThumbnailWithScale:(double)arg1;
- (void)updateViewUsingRepresentedObject;
- (void)setSelected:(BOOL)arg1;
- (void)prepareForReuse;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface GPUTraceResourceInfoBubble : DVTPopoverContentViewController <NSWindowDelegate>
{
    NSView *_parentView;
    id <DYResource> _resource;
    id <GPUTraceBubbleOwner> _owner;
    GPUTraceModelFactory *_modelFactory;
    DYRenderingAttributes *_renderingAttributes;
    BOOL _isVisible;
    unsigned long long _bubbleEdge;
}

@property(readonly) NSView *parentView; // @synthesize parentView=_parentView;
@property(readonly) id <DYResource> resource; // @synthesize resource=_resource;
- (void).cxx_destruct;
- (void)close;
- (void)_cleanUpAfterClosingPopupWindow;
- (void)showAtPoint:(struct CGPoint)arg1;
- (void)viewDidInstall;
- (id)initWithResource:(id)arg1 parentView:(id)arg2 owner:(id)arg3 modelFactory:(id)arg4 renderingAttributes:(id)arg5;
- (id)initWithResource:(id)arg1 parentView:(id)arg2 nibName:(id)arg3 owner:(id)arg4 modelFactory:(id)arg5 renderingAttributes:(id)arg6;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GPUTraceResourceSettingsBubble : DVTPopoverContentViewController <NSWindowDelegate, NSTextFieldDelegate>
{
    NSView *_parentView;
    id <DYResource> _resource;
    DYRenderingAttributes *_dispAttr;
    id <GPUTraceBubbleOwner> _owner;
    NSButton *_redButton;
    NSButton *_grnButton;
    NSButton *_bluButton;
    NSButton *_alfButton;
    NSBox *_visibleRangeBox;
    NSSlider *_dummySlider;
    NSTextField *_rangeEditMin;
    NSTextField *_rangeEditMax;
    DYRangeSlider *_visibleRangeSlider;
    BOOL _showDepth;
    BOOL _isLuminance;
    BOOL _hasRed;
    BOOL _hasGreen;
    BOOL _hasBlue;
    BOOL _hasAlpha;
    unsigned int _channelCount;
    unsigned int _alphaChannelIndex;
}

@property(nonatomic) BOOL hasAlpha; // @synthesize hasAlpha=_hasAlpha;
@property(nonatomic) BOOL hasBlue; // @synthesize hasBlue=_hasBlue;
@property(nonatomic) BOOL hasGreen; // @synthesize hasGreen=_hasGreen;
@property(nonatomic) BOOL hasRed; // @synthesize hasRed=_hasRed;
@property(nonatomic) BOOL isLuminance; // @synthesize isLuminance=_isLuminance;
@property(nonatomic) unsigned int alphaChannelIndex; // @synthesize alphaChannelIndex=_alphaChannelIndex;
@property(nonatomic) unsigned int channelCount; // @synthesize channelCount=_channelCount;
@property(readonly, nonatomic) BOOL showDepth; // @synthesize showDepth=_showDepth;
- (void).cxx_destruct;
- (void)updateToneMapRangeFields:(id)arg1;
- (void)controlTextDidEndEditing:(id)arg1;
- (void)updateToneMapRange:(id)arg1;
- (void)_setupVisibleRangeSlider;
- (void)_resetChannelToolTips;
- (void)_resetButtonState;
- (void)_setupChannelEnableControl;
- (void)viewDidInstall;
- (void)toggleChannelEnable:(id)arg1;
- (void)updateChannelEnableImages;
- (void)setButtonToolTipText:(id)arg1 withChannel:(id)arg2;
- (void)close;
- (void)_cleanUpAfterClosingPopupWindow;
- (void)showAtPoint:(struct CGPoint)arg1;
- (id)getAlphaButton;
- (id)initWithResource:(id)arg1 withDisplayAttributes:(id)arg2 withShowDepth:(BOOL)arg3 parentView:(id)arg4 owner:(id)arg5;
- (int)numChannelsSelectedInImage;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GPUTraceResourcesDocument : IDEEditorDocument <IDEDocumentStructureProviding>
{
    DVTObservingToken *_uiModeObservation;
    NSArray *_topLevelObjects;
    GPUSharedTabUIState *_sharedTabUIState;
    NSString *_resourceGroup;
    NSString *_resourceSubGroup;
}

+ (BOOL)autosavesInPlace;
+ (id)keyPathsForValuesAffectingNavigableItem_name;
@property(readonly) NSString *resourceSubGroup; // @synthesize resourceSubGroup=_resourceSubGroup;
@property(readonly) NSString *resourceGroup; // @synthesize resourceGroup=_resourceGroup;
@property(readonly) __weak GPUSharedTabUIState *sharedTabUIState; // @synthesize sharedTabUIState=_sharedTabUIState;
- (void).cxx_destruct;
- (id)displayName;
- (id)writableTypesForSaveOperation:(unsigned long long)arg1;
- (BOOL)prepareSavePanel:(id)arg1;
- (BOOL)canExportDocument;
- (BOOL)canSave;
- (BOOL)writeSafelyToURL:(id)arg1 ofType:(id)arg2 forSaveOperation:(unsigned long long)arg3 error:(id *)arg4;
@property(readonly) NSArray *ideTopLevelStructureObjects;
- (int)readOnlyStatus;
- (void)editorDocumentWillClose;
- (BOOL)readFromURL:(id)arg1 ofType:(id)arg2 error:(id *)arg3;
- (void)refreshTopLevelObjects;
- (id)_refresh_MainEditorTopLevelGroup;
- (id)_refresh_AssistantTopLevelGroup;
- (id)_topLevelGroupForItem:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GPUTraceResourcesEditor : GPUMainEditor <UXCollectionViewDelegate, UXCollectionViewDataSource, IDEGPUAssistantEditorAdditions, DVTFindBarFindable>
{
    GPUTraceModelFactory *_modelFactory;
    GPUTraceDocumentLocation *_currentLocation;
    NSDictionary *_previousEditorState;
    BOOL _loadingEditor;
    DVTObservingToken *_programShaderObserver;
    int _lastShaderType;
    GPUSharedTabUIState *_sharedTabState;
    NSString *_identifier;
    NSMutableArray *_resources;
    UXCollectionView *_resourceCollectionView;
    GPUResourceEditor *_currentSubViewController;
    NSScrollView *_resourceCollectionViewEnclosure;
}

+ (long long)version;
+ (void)configureStateSavingObjectPersistenceByName:(id)arg1;
+ (id)assetBundle;
+ (id)defaultViewNibBundle;
+ (id)defaultViewNibName;
@property(retain, nonatomic) NSScrollView *resourceCollectionViewEnclosure; // @synthesize resourceCollectionViewEnclosure=_resourceCollectionViewEnclosure;
@property(nonatomic) __weak GPUResourceEditor *currentSubViewController; // @synthesize currentSubViewController=_currentSubViewController;
@property(nonatomic) __weak UXCollectionView *resourceCollectionView; // @synthesize resourceCollectionView=_resourceCollectionView;
@property(retain, nonatomic) NSMutableArray *resources; // @synthesize resources=_resources;
- (void).cxx_destruct;
- (void)dumpImages:(id)arg1 asRaw:(BOOL)arg2;
- (void)collectionView:(id)arg1 itemWasDoubleClickedAtIndexPath:(id)arg2 withEvent:(id)arg3;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (struct _NSRange)selectedRangeForFindBar:(id)arg1;
- (id)startingLocationForFindBar:(id)arg1 findingBackwards:(BOOL)arg2;
- (void)dvtFindBar:(id)arg1 didUpdateCurrentResult:(id)arg2;
- (void)dvtFindBar:(id)arg1 didUpdateResults:(id)arg2;
- (BOOL)findBarSupported;
- (void)_takeStateDictionaryFromPreviousGPUAssistantEditor:(id)arg1;
- (BOOL)_shouldInstallGPUEditorWithPreviousStateDictionaryOrNil:(id)arg1;
- (void)commitStateToDictionary:(id)arg1;
- (void)revertStateWithDictionary:(id)arg1;
- (id)_findOutlineItemForHistoryAction;
- (id)_currentAssistantDocumentLocations;
- (id)_getSubEditorItemFromPreviousEditorState;
- (void)showResourceItem:(id)arg1;
- (void)_openResourceLocation:(id)arg1;
- (void)handleOpenScrubberTriggeredNewLocation:(id)arg1;
- (void)handleDebugBarNavigationWithDocumentLocation:(id)arg1;
- (void)selectDocumentLocations:(id)arg1;
- (id)currentSelectedDocumentLocations;
- (id)currentSelectedItems;
- (void)_setCurrentLocation:(id)arg1;
- (void)_loadResourceEditorForNavItem:(id)arg1;
- (void)_handleFunctionResourceItem:(id)arg1;
- (id)_findNavigableForShaderItem:(id)arg1;
- (BOOL)_isValidSourceURLPathForShaderItem:(id)arg1;
- (id)_editorForResourceItem:(id)arg1;
- (void)handleResourceItemThumbnailsRecalculation:(id)arg1;
- (void)handleReloadResourceItem:(id)arg1;
- (void)resetResourcesInTree:(id)arg1;
- (void)_resetResource:(id)arg1;
- (void)_loadRelevantDisplayableForProgramOrShaderItem:(id)arg1;
- (void)didSetupEditor;
- (void)viewWillUninstall;
- (void)viewDidInstall;
- (void)primitiveInvalidate;
- (void)loadView;
- (void)_initCollectionView;
- (void)takeFocus;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _GPUDataTableHeaderView : NSTableHeaderView
{
    NSDictionary *_fontDrawingAttributes;
    NSColor *_backgroundColor;
    NSColor *_borderColor;
    NSGradient *_borderGradient;
    NSArray *_columnGroups;
}

@property(retain, nonatomic) NSArray *columnGroups; // @synthesize columnGroups=_columnGroups;
- (void).cxx_destruct;
- (void)drawGroupedColumnWithTitle:(id)arg1 inRect:(struct CGRect)arg2;
- (void)drawRect:(struct CGRect)arg1;
- (void)drawHeaderBackgroundInRect:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface _GPUDataTableHeaderViewCell : NSTableHeaderCell
{
}

- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface _GPUPaddedDataTableCell : NSTextFieldCell
{
}

- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;

@end

