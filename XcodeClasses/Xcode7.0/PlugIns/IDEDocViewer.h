//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

#pragma mark -

//
// File: /Applications/Xcode-7GM.app/Contents/PlugIns/IDEDocViewer.ideplugin/Contents/MacOS/IDEDocViewer
// UUID: F690B799-C51E-3062-A794-320D64A98A9E
//
//                           Arch: x86_64
//                Current version: 8195.0.0
//          Compatibility version: 1.0.0
//                 Source version: 8195.0.0.0.0
//       Minimum Mac OS X version: 10.10.0
//                    SDK version: 10.11.0
//
// Objective-C Garbage Collection: Unsupported
//
//                       Run path: @loader_path/../../../
//                               = /Applications/Xcode-7GM.app/Contents/PlugIns
//

@protocol DOMEventListener <NSObject>
- (void)handleEvent:(DOMEvent *)arg1;
@end

@protocol DSAToken <NSObject>
@property(readonly) DSADocSet *docSet;
@property(readonly, getter=isDeprecated) BOOL deprecated;
@property(readonly, copy) NSString *declaredInFrameworkName;
@property(readonly, copy) NSString *type;
@property(readonly, copy) NSString *scope;
@property(readonly, copy, nonatomic) NSURL *URL;
@property(readonly, copy) NSString *apiLanguage;
@property(readonly, copy) NSString *name;
@property(readonly, copy) NSString *usr;
- (id <DSAToken>)tokenWithFixedUpLanguage:(NSString *)arg1;
- (NSXMLDocument *)XMLDescription;
@end

@protocol DSMDocSetLoaderListener

@optional
- (void)docSetWillBeUnloadedOrUpdated:(DSMDocSetRecord *)arg1;
- (void)docSetDidUnload:(DSMDocSetRecord *)arg1;
- (void)docSetDidLoad:(DSMDocSetRecord *)arg1;
@end

@protocol DVTFindBarFindable

@optional
- (struct _NSRange)selectedRangeForFindBar:(DVTFindBar *)arg1;
- (DVTDocumentLocation *)startingLocationForFindBar:(DVTFindBar *)arg1 findingBackwards:(BOOL)arg2;
- (void)dvtFindBar:(DVTFindBar *)arg1 didUpdateCurrentResult:(DVTFindResult *)arg2;
- (void)dvtFindBar:(DVTFindBar *)arg1 didUpdateResults:(NSArray *)arg2;
@end

@protocol DVTFindBarHostable <DVTFindBarFindable>
- (void)dismissFindBar:(DVTFindBar *)arg1 andRestoreSelection:(BOOL)arg2;

@optional
- (NSView *)viewToShowWrapOrEndOfFileBezelOn:(DVTFindBar *)arg1;
- (BOOL)dvtFindBar:(DVTFindBar *)arg1 validateUserInterfaceItem:(id <NSValidatedUserInterfaceItem>)arg2;
- (void)dvtFindBar:(DVTFindBar *)arg1 didWrap:(BOOL)arg2 reverse:(BOOL)arg3;
@end

@protocol DVTInvalidation <NSObject>
- (void)primitiveInvalidate;

@optional
+ (BOOL)supportsInvalidationPrevention;
+ (unsigned long long)assertionBehaviorForKeyValueObservationsAtEndOfEvent;
+ (unsigned long long)assertionBehaviorAfterEndOfEventForSelector:(SEL)arg1;
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly, nonatomic, getter=isValid) BOOL valid;
- (void)invalidate;
@end

@protocol DVTReplacementViewDelegate <NSObject>

@optional
- (void)replacementView:(DVTReplacementView *)arg1 willDisplayInRect:(struct CGRect)arg2;
- (void)replacementView:(DVTReplacementView *)arg1 willCloseViewController:(NSViewController *)arg2;
- (void)replacementView:(DVTReplacementView *)arg1 didInstallViewController:(NSViewController *)arg2;
- (void)replacementView:(DVTReplacementView *)arg1 willInstallViewController:(NSViewController *)arg2;
@end

@protocol DVTScopeBarContentController <NSObject>
@property(readonly) double preferredViewHeight;

@optional
- (BOOL)shouldCloseOnEscape;
- (void)didPressDismissOnScopeBar:(DVTScopeBarController *)arg1;
- (void)wasAssociatedWithScopeBarController:(DVTScopeBarController *)arg1;
@end

@protocol DVTScopeBarHost <NSObject>
@property(readonly) NSView *scopeBarsBaseView;

@optional
@property(readonly) NSScrollView *scopeBarsAdjustableScrollView;
@end

@protocol DVTSourceExpressionSource <NSObject, DVTInvalidation>
@property(readonly, nonatomic) DVTSourceExpression *mouseOverExpression;
@property(readonly, nonatomic) struct CGRect currentSelectionFrame;
@property(readonly) DVTSourceExpression *contextMenuExpression;
@property(readonly, nonatomic) DVTSourceExpression *selectedExpression;
- (struct CGRect)expressionFrameForExpression:(DVTSourceExpression *)arg1;

@optional
@property(readonly) DVTSDK *sdk;
@property(readonly, nonatomic) DVTSourceLanguageService *languageService;
@property(readonly, nonatomic) NSString *selectedText;
@property(readonly) DVTSourceExpression *quickHelpExpression;
@end

@protocol DVTStateRepositoryDelegate <NSObject>
- (void)stateRepositoryDidChange:(DVTStateRepository *)arg1;
@end

@protocol DVTStatefulObject <NSObject>
+ (long long)version;
+ (void)configureStateSavingObjectPersistenceByName:(NSMutableDictionary *)arg1;
- (void)commitStateToDictionary:(NSMutableDictionary *)arg1;
- (void)revertStateWithDictionary:(NSDictionary *)arg1;
- (void)setStateToken:(DVTStateToken *)arg1;
@end

@protocol DVTTabbedWindowControlling <NSObject>
- (BOOL)isEnteringOrInFullScreenMode;
- (BOOL)isInFullScreenMode;
- (BOOL)closeKeyEquivalentClosesTab;
- (void)_closeWindowIfNoTabs;
- (void)_closeTabWithoutConfirming:(DVTTabbedWindowTabViewItem *)arg1 andInvalidate:(BOOL)arg2;
- (void)_closeTabWithoutConfirming:(DVTTabbedWindowTabViewItem *)arg1;
- (double)tabBarHeight;
- (void)moveTabFromOtherWindow:(DVTTabbedWindowTabViewItem *)arg1 toIndex:(unsigned long long)arg2 andSelect:(BOOL)arg3;
- (void)replaceEmptyTabWithTabs:(NSArray *)arg1;
- (void)closeOtherTabs:(DVTTabbedWindowTabViewItem *)arg1;
- (void)closeTabOrWindow:(NSView *)arg1;
- (void)closeTab:(DVTTabbedWindowTabViewItem *)arg1;
- (void)moveTabToNewWindowFromMenu:(id)arg1;
- (void)closeOtherTabsFromMenu:(id)arg1;
- (void)closeTabFromMenu:(id)arg1;
- (void)selectTab:(NSView *)arg1;
- (DVTTabbedWindowTabViewItem *)createTabWithViewController:(DVTViewController *)arg1 andShow:(BOOL)arg2 addToRightSide:(BOOL)arg3;
- (NSView *)createInactiveTabWithFrameName:(NSString *)arg1;
- (NSView *)createInactiveTab;
- (NSView *)createTabWithFrameName:(NSString *)arg1 andShow:(BOOL)arg2 addToRightSide:(BOOL)arg3;
- (NSView *)createTabWithFrameName:(NSString *)arg1;
- (NSView *)createTab;
- (unsigned long long)selectedTabIndex;
- (DVTTabbedWindowTabViewItem *)selectedTab;
- (NSArray *)orderedTabViewItems;
- (void)setTabBarVisible:(BOOL)arg1;
- (BOOL)isTabBarVisible;
- (void)cancelUpdateTabTitlesSoon;
- (void)tabBarViewUpdateTabTitlesNow;
- (void)tabBarViewUpdateTabTitlesSoon;
- (struct CGRect)adjustedFrameForCascade:(struct CGRect)arg1 fromWindow:(NSWindow *)arg2;
- (struct CGRect)adjustedFrameForSaving:(struct CGRect)arg1;
- (BOOL)canReceiveDragFromTabbedWindowControlling:(id <DVTTabbedWindowControlling>)arg1;
- (BOOL)canCreateNewTab;
- (BOOL)canCloseSelectedTab;
- (void)toggleTabBar:(id)arg1;
- (void)newTabWithinWindow:(id)arg1;
@end

@protocol DVTTabbedWindowTabContentControlling <NSObject>
@property(copy) NSString *userDefinedTabLabel;
@property(readonly) NSString *tabLabel;
@property(retain) NSDocument<DVTTabbedWindowCreation> *document;
@end

@protocol IDECommandHandler <NSObject, NSUserInterfaceValidations>
@end

@protocol IDEComponentDownloadIconProvider <NSObject>
- (NSImage *)imageForDownloadableType:(NSString *)arg1;
@end

@protocol IDEDocContentView <NSObject, DVTInvalidation>
- (void)loadResolvedURL:(NSURL *)arg1;
@end

@protocol IDEDocSearchField_FieldEditorProtocol <NSObject>
- (void)toolbarSearchField_FieldEditorInsertTab:(id)arg1;
- (void)toolbarSearchField_FieldEditorDidComplete:(id)arg1;
- (void)toolbarSearchField_FieldEditorInsertNewLine:(id)arg1;
- (void)toolbarSearchField_FieldEditorDidMoveUp:(id)arg1;
- (void)toolbarSearchField_FieldEditorDidMoveDown:(id)arg1;
@end

@protocol IDEDocTabbedWindowControllerProtocol <NSObject>
- (void)makeNewTabAndLoadURL:(NSURL *)arg1;
@end

@protocol IDEDocumentationWindow <NSObject>
@end

@protocol IDEEditorMenuContentProvider <NSObject>
- (DVTExtension *)extensionForMenuContent;
@end

@protocol IDEInitialization
+ (BOOL)ide_initializeWithOptions:(int)arg1 error:(id *)arg2;
@end

@protocol NSControlTextEditingDelegate <NSObject>

@optional
- (NSArray *)control:(NSControl *)arg1 textView:(NSTextView *)arg2 completions:(NSArray *)arg3 forPartialWordRange:(struct _NSRange)arg4 indexOfSelectedItem:(long long *)arg5;
- (BOOL)control:(NSControl *)arg1 textView:(NSTextView *)arg2 doCommandBySelector:(SEL)arg3;
- (BOOL)control:(NSControl *)arg1 isValidObject:(id)arg2;
- (void)control:(NSControl *)arg1 didFailToValidatePartialString:(NSString *)arg2 errorDescription:(NSString *)arg3;
- (BOOL)control:(NSControl *)arg1 didFailToFormatString:(NSString *)arg2 errorDescription:(NSString *)arg3;
- (BOOL)control:(NSControl *)arg1 textShouldEndEditing:(NSText *)arg2;
- (BOOL)control:(NSControl *)arg1 textShouldBeginEditing:(NSText *)arg2;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSMenuDelegate <NSObject>

@optional
- (struct CGRect)confinementRectForMenu:(NSMenu *)arg1 onScreen:(NSScreen *)arg2;
- (void)menu:(NSMenu *)arg1 willHighlightItem:(NSMenuItem *)arg2;
- (void)menuDidClose:(NSMenu *)arg1;
- (void)menuWillOpen:(NSMenu *)arg1;
- (BOOL)menuHasKeyEquivalent:(NSMenu *)arg1 forEvent:(NSEvent *)arg2 target:(id *)arg3 action:(SEL *)arg4;
- (BOOL)menu:(NSMenu *)arg1 updateItem:(NSMenuItem *)arg2 atIndex:(long long)arg3 shouldCancel:(BOOL)arg4;
- (long long)numberOfItemsInMenu:(NSMenu *)arg1;
- (void)menuNeedsUpdate:(NSMenu *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (BOOL)respondsToSelector:(SEL)arg1;
- (BOOL)conformsToProtocol:(Protocol *)arg1;
- (BOOL)isMemberOfClass:(Class)arg1;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (BOOL)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSOutlineViewDataSource <NSObject>

@optional
- (NSArray *)outlineView:(NSOutlineView *)arg1 namesOfPromisedFilesDroppedAtDestination:(NSURL *)arg2 forDraggedItems:(NSArray *)arg3;
- (BOOL)outlineView:(NSOutlineView *)arg1 acceptDrop:(id <NSDraggingInfo>)arg2 item:(id)arg3 childIndex:(long long)arg4;
- (unsigned long long)outlineView:(NSOutlineView *)arg1 validateDrop:(id <NSDraggingInfo>)arg2 proposedItem:(id)arg3 proposedChildIndex:(long long)arg4;
- (void)outlineView:(NSOutlineView *)arg1 updateDraggingItemsForDrag:(id <NSDraggingInfo>)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 writeItems:(NSArray *)arg2 toPasteboard:(NSPasteboard *)arg3;
- (void)outlineView:(NSOutlineView *)arg1 draggingSession:(NSDraggingSession *)arg2 endedAtPoint:(struct CGPoint)arg3 operation:(unsigned long long)arg4;
- (void)outlineView:(NSOutlineView *)arg1 draggingSession:(NSDraggingSession *)arg2 willBeginAtPoint:(struct CGPoint)arg3 forItems:(NSArray *)arg4;
- (id <NSPasteboardWriting>)outlineView:(NSOutlineView *)arg1 pasteboardWriterForItem:(id)arg2;
- (void)outlineView:(NSOutlineView *)arg1 sortDescriptorsDidChange:(NSArray *)arg2;
- (id)outlineView:(NSOutlineView *)arg1 persistentObjectForItem:(id)arg2;
- (id)outlineView:(NSOutlineView *)arg1 itemForPersistentObject:(id)arg2;
- (void)outlineView:(NSOutlineView *)arg1 setObjectValue:(id)arg2 forTableColumn:(NSTableColumn *)arg3 byItem:(id)arg4;
- (id)outlineView:(NSOutlineView *)arg1 objectValueForTableColumn:(NSTableColumn *)arg2 byItem:(id)arg3;
- (BOOL)outlineView:(NSOutlineView *)arg1 isItemExpandable:(id)arg2;
- (id)outlineView:(NSOutlineView *)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (long long)outlineView:(NSOutlineView *)arg1 numberOfChildrenOfItem:(id)arg2;
@end

@protocol NSOutlineViewDelegate <NSControlTextEditingDelegate>

@optional
- (void)outlineViewItemDidCollapse:(NSNotification *)arg1;
- (void)outlineViewItemWillCollapse:(NSNotification *)arg1;
- (void)outlineViewItemDidExpand:(NSNotification *)arg1;
- (void)outlineViewItemWillExpand:(NSNotification *)arg1;
- (void)outlineViewSelectionIsChanging:(NSNotification *)arg1;
- (void)outlineViewColumnDidResize:(NSNotification *)arg1;
- (void)outlineViewColumnDidMove:(NSNotification *)arg1;
- (void)outlineViewSelectionDidChange:(NSNotification *)arg1;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldShowOutlineCellForItem:(id)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldReorderColumn:(long long)arg2 toColumn:(long long)arg3;
- (double)outlineView:(NSOutlineView *)arg1 sizeToFitWidthOfColumn:(long long)arg2;
- (void)outlineView:(NSOutlineView *)arg1 willDisplayOutlineCell:(id)arg2 forTableColumn:(NSTableColumn *)arg3 item:(id)arg4;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldCollapseItem:(id)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldExpandItem:(id)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 isGroupItem:(id)arg2;
- (NSCell *)outlineView:(NSOutlineView *)arg1 dataCellForTableColumn:(NSTableColumn *)arg2 item:(id)arg3;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldTrackCell:(NSCell *)arg2 forTableColumn:(NSTableColumn *)arg3 item:(id)arg4;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldShowCellExpansionForTableColumn:(NSTableColumn *)arg2 item:(id)arg3;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldTypeSelectForEvent:(NSEvent *)arg2 withCurrentSearchString:(NSString *)arg3;
- (id)outlineView:(NSOutlineView *)arg1 nextTypeSelectMatchFromItem:(id)arg2 toItem:(id)arg3 forString:(NSString *)arg4;
- (NSString *)outlineView:(NSOutlineView *)arg1 typeSelectStringForTableColumn:(NSTableColumn *)arg2 item:(id)arg3;
- (double)outlineView:(NSOutlineView *)arg1 heightOfRowByItem:(id)arg2;
- (NSString *)outlineView:(NSOutlineView *)arg1 toolTipForCell:(NSCell *)arg2 rect:(struct CGRect *)arg3 tableColumn:(NSTableColumn *)arg4 item:(id)arg5 mouseLocation:(struct CGPoint)arg6;
- (void)outlineView:(NSOutlineView *)arg1 didDragTableColumn:(NSTableColumn *)arg2;
- (void)outlineView:(NSOutlineView *)arg1 didClickTableColumn:(NSTableColumn *)arg2;
- (void)outlineView:(NSOutlineView *)arg1 mouseDownInHeaderOfTableColumn:(NSTableColumn *)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldSelectTableColumn:(NSTableColumn *)arg2;
- (NSIndexSet *)outlineView:(NSOutlineView *)arg1 selectionIndexesForProposedSelection:(NSIndexSet *)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldSelectItem:(id)arg2;
- (BOOL)selectionShouldChangeInOutlineView:(NSOutlineView *)arg1;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldEditTableColumn:(NSTableColumn *)arg2 item:(id)arg3;
- (void)outlineView:(NSOutlineView *)arg1 willDisplayCell:(id)arg2 forTableColumn:(NSTableColumn *)arg3 item:(id)arg4;
- (void)outlineView:(NSOutlineView *)arg1 didRemoveRowView:(NSTableRowView *)arg2 forRow:(long long)arg3;
- (void)outlineView:(NSOutlineView *)arg1 didAddRowView:(NSTableRowView *)arg2 forRow:(long long)arg3;
- (NSTableRowView *)outlineView:(NSOutlineView *)arg1 rowViewForItem:(id)arg2;
- (NSView *)outlineView:(NSOutlineView *)arg1 viewForTableColumn:(NSTableColumn *)arg2 item:(id)arg3;
@end

@protocol NSPopoverDelegate <NSObject>

@optional
- (void)popoverDidClose:(NSNotification *)arg1;
- (void)popoverWillClose:(NSNotification *)arg1;
- (void)popoverDidShow:(NSNotification *)arg1;
- (void)popoverWillShow:(NSNotification *)arg1;
- (NSWindow *)detachableWindowForPopover:(NSPopover *)arg1;
- (void)popoverDidDetach:(NSPopover *)arg1;
- (BOOL)popoverShouldDetach:(NSPopover *)arg1;
- (BOOL)popoverShouldClose:(NSPopover *)arg1;
@end

@protocol NSSplitViewDelegate <NSObject>

@optional
- (void)splitViewDidResizeSubviews:(NSNotification *)arg1;
- (void)splitViewWillResizeSubviews:(NSNotification *)arg1;
- (struct CGRect)splitView:(NSSplitView *)arg1 additionalEffectiveRectOfDividerAtIndex:(long long)arg2;
- (struct CGRect)splitView:(NSSplitView *)arg1 effectiveRect:(struct CGRect)arg2 forDrawnRect:(struct CGRect)arg3 ofDividerAtIndex:(long long)arg4;
- (BOOL)splitView:(NSSplitView *)arg1 shouldHideDividerAtIndex:(long long)arg2;
- (BOOL)splitView:(NSSplitView *)arg1 shouldAdjustSizeOfSubview:(NSView *)arg2;
- (void)splitView:(NSSplitView *)arg1 resizeSubviewsWithOldSize:(struct CGSize)arg2;
- (double)splitView:(NSSplitView *)arg1 constrainSplitPosition:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(NSSplitView *)arg1 constrainMaxCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(NSSplitView *)arg1 constrainMinCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (BOOL)splitView:(NSSplitView *)arg1 shouldCollapseSubview:(NSView *)arg2 forDoubleClickOnDividerAtIndex:(long long)arg3;
- (BOOL)splitView:(NSSplitView *)arg1 canCollapseSubview:(NSView *)arg2;
@end

@protocol NSTableViewDataSource <NSObject>

@optional
- (NSArray *)tableView:(NSTableView *)arg1 namesOfPromisedFilesDroppedAtDestination:(NSURL *)arg2 forDraggedRowsWithIndexes:(NSIndexSet *)arg3;
- (BOOL)tableView:(NSTableView *)arg1 acceptDrop:(id <NSDraggingInfo>)arg2 row:(long long)arg3 dropOperation:(unsigned long long)arg4;
- (unsigned long long)tableView:(NSTableView *)arg1 validateDrop:(id <NSDraggingInfo>)arg2 proposedRow:(long long)arg3 proposedDropOperation:(unsigned long long)arg4;
- (BOOL)tableView:(NSTableView *)arg1 writeRowsWithIndexes:(NSIndexSet *)arg2 toPasteboard:(NSPasteboard *)arg3;
- (void)tableView:(NSTableView *)arg1 updateDraggingItemsForDrag:(id <NSDraggingInfo>)arg2;
- (void)tableView:(NSTableView *)arg1 draggingSession:(NSDraggingSession *)arg2 endedAtPoint:(struct CGPoint)arg3 operation:(unsigned long long)arg4;
- (void)tableView:(NSTableView *)arg1 draggingSession:(NSDraggingSession *)arg2 willBeginAtPoint:(struct CGPoint)arg3 forRowIndexes:(NSIndexSet *)arg4;
- (id <NSPasteboardWriting>)tableView:(NSTableView *)arg1 pasteboardWriterForRow:(long long)arg2;
- (void)tableView:(NSTableView *)arg1 sortDescriptorsDidChange:(NSArray *)arg2;
- (void)tableView:(NSTableView *)arg1 setObjectValue:(id)arg2 forTableColumn:(NSTableColumn *)arg3 row:(long long)arg4;
- (id)tableView:(NSTableView *)arg1 objectValueForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(NSTableView *)arg1;
@end

@protocol NSTableViewDelegate <NSControlTextEditingDelegate>

@optional
- (void)tableViewSelectionIsChanging:(NSNotification *)arg1;
- (void)tableViewColumnDidResize:(NSNotification *)arg1;
- (void)tableViewColumnDidMove:(NSNotification *)arg1;
- (void)tableViewSelectionDidChange:(NSNotification *)arg1;
- (NSArray *)tableView:(NSTableView *)arg1 rowActionsForRow:(long long)arg2 edge:(long long)arg3;
- (BOOL)tableView:(NSTableView *)arg1 shouldReorderColumn:(long long)arg2 toColumn:(long long)arg3;
- (double)tableView:(NSTableView *)arg1 sizeToFitWidthOfColumn:(long long)arg2;
- (BOOL)tableView:(NSTableView *)arg1 isGroupRow:(long long)arg2;
- (BOOL)tableView:(NSTableView *)arg1 shouldTypeSelectForEvent:(NSEvent *)arg2 withCurrentSearchString:(NSString *)arg3;
- (long long)tableView:(NSTableView *)arg1 nextTypeSelectMatchFromRow:(long long)arg2 toRow:(long long)arg3 forString:(NSString *)arg4;
- (NSString *)tableView:(NSTableView *)arg1 typeSelectStringForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (double)tableView:(NSTableView *)arg1 heightOfRow:(long long)arg2;
- (void)tableView:(NSTableView *)arg1 didDragTableColumn:(NSTableColumn *)arg2;
- (void)tableView:(NSTableView *)arg1 didClickTableColumn:(NSTableColumn *)arg2;
- (void)tableView:(NSTableView *)arg1 mouseDownInHeaderOfTableColumn:(NSTableColumn *)arg2;
- (BOOL)tableView:(NSTableView *)arg1 shouldSelectTableColumn:(NSTableColumn *)arg2;
- (NSIndexSet *)tableView:(NSTableView *)arg1 selectionIndexesForProposedSelection:(NSIndexSet *)arg2;
- (BOOL)tableView:(NSTableView *)arg1 shouldSelectRow:(long long)arg2;
- (BOOL)selectionShouldChangeInTableView:(NSTableView *)arg1;
- (NSCell *)tableView:(NSTableView *)arg1 dataCellForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (BOOL)tableView:(NSTableView *)arg1 shouldTrackCell:(NSCell *)arg2 forTableColumn:(NSTableColumn *)arg3 row:(long long)arg4;
- (BOOL)tableView:(NSTableView *)arg1 shouldShowCellExpansionForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (NSString *)tableView:(NSTableView *)arg1 toolTipForCell:(NSCell *)arg2 rect:(struct CGRect *)arg3 tableColumn:(NSTableColumn *)arg4 row:(long long)arg5 mouseLocation:(struct CGPoint)arg6;
- (BOOL)tableView:(NSTableView *)arg1 shouldEditTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (void)tableView:(NSTableView *)arg1 willDisplayCell:(id)arg2 forTableColumn:(NSTableColumn *)arg3 row:(long long)arg4;
- (void)tableView:(NSTableView *)arg1 didRemoveRowView:(NSTableRowView *)arg2 forRow:(long long)arg3;
- (void)tableView:(NSTableView *)arg1 didAddRowView:(NSTableRowView *)arg2 forRow:(long long)arg3;
- (NSTableRowView *)tableView:(NSTableView *)arg1 rowViewForRow:(long long)arg2;
- (NSView *)tableView:(NSTableView *)arg1 viewForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
@end

@protocol NSTextDelegate <NSObject>

@optional
- (void)textDidChange:(NSNotification *)arg1;
- (void)textDidEndEditing:(NSNotification *)arg1;
- (void)textDidBeginEditing:(NSNotification *)arg1;
- (BOOL)textShouldEndEditing:(NSText *)arg1;
- (BOOL)textShouldBeginEditing:(NSText *)arg1;
@end

@protocol NSTextFieldDelegate <NSControlTextEditingDelegate>
@end

@protocol NSTextViewDelegate <NSTextDelegate>

@optional
- (void)textView:(NSTextView *)arg1 draggedCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3 event:(NSEvent *)arg4;
- (void)textView:(NSTextView *)arg1 doubleClickedOnCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3;
- (void)textView:(NSTextView *)arg1 clickedOnCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3;
- (BOOL)textView:(NSTextView *)arg1 clickedOnLink:(id)arg2;
- (NSUndoManager *)undoManagerForTextView:(NSTextView *)arg1;
- (NSSharingServicePicker *)textView:(NSTextView *)arg1 willShowSharingServicePicker:(NSSharingServicePicker *)arg2 forItems:(NSArray *)arg3;
- (NSURL *)textView:(NSTextView *)arg1 URLForContentsOfTextAttachment:(NSTextAttachment *)arg2 atIndex:(unsigned long long)arg3;
- (NSArray *)textView:(NSTextView *)arg1 didCheckTextInRange:(struct _NSRange)arg2 types:(unsigned long long)arg3 options:(NSDictionary *)arg4 results:(NSArray *)arg5 orthography:(NSOrthography *)arg6 wordCount:(long long)arg7;
- (NSDictionary *)textView:(NSTextView *)arg1 willCheckTextInRange:(struct _NSRange)arg2 options:(NSDictionary *)arg3 types:(unsigned long long *)arg4;
- (NSMenu *)textView:(NSTextView *)arg1 menu:(NSMenu *)arg2 forEvent:(NSEvent *)arg3 atIndex:(unsigned long long)arg4;
- (long long)textView:(NSTextView *)arg1 shouldSetSpellingState:(long long)arg2 range:(struct _NSRange)arg3;
- (BOOL)textView:(NSTextView *)arg1 doCommandBySelector:(SEL)arg2;
- (BOOL)textView:(NSTextView *)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementString:(NSString *)arg3;
- (NSArray *)textView:(NSTextView *)arg1 completions:(NSArray *)arg2 forPartialWordRange:(struct _NSRange)arg3 indexOfSelectedItem:(long long *)arg4;
- (NSString *)textView:(NSTextView *)arg1 willDisplayToolTip:(NSString *)arg2 forCharacterAtIndex:(unsigned long long)arg3;
- (void)textViewDidChangeTypingAttributes:(NSNotification *)arg1;
- (void)textViewDidChangeSelection:(NSNotification *)arg1;
- (NSDictionary *)textView:(NSTextView *)arg1 shouldChangeTypingAttributes:(NSDictionary *)arg2 toAttributes:(NSDictionary *)arg3;
- (BOOL)textView:(NSTextView *)arg1 shouldChangeTextInRanges:(NSArray *)arg2 replacementStrings:(NSArray *)arg3;
- (NSArray *)textView:(NSTextView *)arg1 willChangeSelectionFromCharacterRanges:(NSArray *)arg2 toCharacterRanges:(NSArray *)arg3;
- (struct _NSRange)textView:(NSTextView *)arg1 willChangeSelectionFromCharacterRange:(struct _NSRange)arg2 toCharacterRange:(struct _NSRange)arg3;
- (BOOL)textView:(NSTextView *)arg1 writeCell:(id <NSTextAttachmentCell>)arg2 atIndex:(unsigned long long)arg3 toPasteboard:(NSPasteboard *)arg4 type:(NSString *)arg5;
- (NSArray *)textView:(NSTextView *)arg1 writablePasteboardTypesForCell:(id <NSTextAttachmentCell>)arg2 atIndex:(unsigned long long)arg3;
- (void)textView:(NSTextView *)arg1 draggedCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3 event:(NSEvent *)arg4 atIndex:(unsigned long long)arg5;
- (void)textView:(NSTextView *)arg1 doubleClickedOnCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3 atIndex:(unsigned long long)arg4;
- (void)textView:(NSTextView *)arg1 clickedOnCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3 atIndex:(unsigned long long)arg4;
- (BOOL)textView:(NSTextView *)arg1 clickedOnLink:(id)arg2 atIndex:(unsigned long long)arg3;
@end

@protocol NSToolbarDelegate <NSObject>

@optional
- (void)toolbarDidRemoveItem:(NSNotification *)arg1;
- (void)toolbarWillAddItem:(NSNotification *)arg1;
- (NSArray *)toolbarSelectableItemIdentifiers:(NSToolbar *)arg1;
- (NSArray *)toolbarAllowedItemIdentifiers:(NSToolbar *)arg1;
- (NSArray *)toolbarDefaultItemIdentifiers:(NSToolbar *)arg1;
- (NSToolbarItem *)toolbar:(NSToolbar *)arg1 itemForItemIdentifier:(NSString *)arg2 willBeInsertedIntoToolbar:(BOOL)arg3;
@end

@protocol NSUserInterfaceItemSearching <NSObject>
- (NSArray *)localizedTitlesForItem:(id)arg1;
- (void)searchForItemsWithSearchString:(NSString *)arg1 resultLimit:(long long)arg2 matchedItemHandler:(void (^)(NSArray *))arg3;

@optional
- (void)showAllHelpTopicsForSearchString:(NSString *)arg1;
- (void)performActionForItem:(id)arg1;
@end

@protocol NSUserInterfaceValidations
- (BOOL)validateUserInterfaceItem:(id <NSValidatedUserInterfaceItem>)arg1;
@end

@protocol NSWindowDelegate <NSObject>

@optional
- (void)windowDidChangeOcclusionState:(NSNotification *)arg1;
- (void)windowDidExitVersionBrowser:(NSNotification *)arg1;
- (void)windowWillExitVersionBrowser:(NSNotification *)arg1;
- (void)windowDidEnterVersionBrowser:(NSNotification *)arg1;
- (void)windowWillEnterVersionBrowser:(NSNotification *)arg1;
- (void)windowDidExitFullScreen:(NSNotification *)arg1;
- (void)windowWillExitFullScreen:(NSNotification *)arg1;
- (void)windowDidEnterFullScreen:(NSNotification *)arg1;
- (void)windowWillEnterFullScreen:(NSNotification *)arg1;
- (void)windowDidEndLiveResize:(NSNotification *)arg1;
- (void)windowWillStartLiveResize:(NSNotification *)arg1;
- (void)windowDidEndSheet:(NSNotification *)arg1;
- (void)windowWillBeginSheet:(NSNotification *)arg1;
- (void)windowDidChangeBackingProperties:(NSNotification *)arg1;
- (void)windowDidChangeScreenProfile:(NSNotification *)arg1;
- (void)windowDidChangeScreen:(NSNotification *)arg1;
- (void)windowDidUpdate:(NSNotification *)arg1;
- (void)windowDidDeminiaturize:(NSNotification *)arg1;
- (void)windowDidMiniaturize:(NSNotification *)arg1;
- (void)windowWillMiniaturize:(NSNotification *)arg1;
- (void)windowWillClose:(NSNotification *)arg1;
- (void)windowDidResignMain:(NSNotification *)arg1;
- (void)windowDidBecomeMain:(NSNotification *)arg1;
- (void)windowDidResignKey:(NSNotification *)arg1;
- (void)windowDidBecomeKey:(NSNotification *)arg1;
- (void)windowDidMove:(NSNotification *)arg1;
- (void)windowWillMove:(NSNotification *)arg1;
- (void)windowDidExpose:(NSNotification *)arg1;
- (void)windowDidResize:(NSNotification *)arg1;
- (void)window:(NSWindow *)arg1 didDecodeRestorableState:(NSCoder *)arg2;
- (void)window:(NSWindow *)arg1 willEncodeRestorableState:(NSCoder *)arg2;
- (struct CGSize)window:(NSWindow *)arg1 willResizeForVersionBrowserWithMaxPreferredSize:(struct CGSize)arg2 maxAllowedSize:(struct CGSize)arg3;
- (void)windowDidFailToExitFullScreen:(NSWindow *)arg1;
- (void)window:(NSWindow *)arg1 startCustomAnimationToEnterFullScreenOnScreen:(NSScreen *)arg2 withDuration:(double)arg3;
- (NSArray *)customWindowsToEnterFullScreenForWindow:(NSWindow *)arg1 onScreen:(NSScreen *)arg2;
- (void)window:(NSWindow *)arg1 startCustomAnimationToExitFullScreenWithDuration:(double)arg2;
- (NSArray *)customWindowsToExitFullScreenForWindow:(NSWindow *)arg1;
- (void)windowDidFailToEnterFullScreen:(NSWindow *)arg1;
- (void)window:(NSWindow *)arg1 startCustomAnimationToEnterFullScreenWithDuration:(double)arg2;
- (NSArray *)customWindowsToEnterFullScreenForWindow:(NSWindow *)arg1;
- (unsigned long long)window:(NSWindow *)arg1 willUseFullScreenPresentationOptions:(unsigned long long)arg2;
- (struct CGSize)window:(NSWindow *)arg1 willUseFullScreenContentSize:(struct CGSize)arg2;
- (BOOL)window:(NSWindow *)arg1 shouldDragDocumentWithEvent:(NSEvent *)arg2 from:(struct CGPoint)arg3 withPasteboard:(NSPasteboard *)arg4;
- (BOOL)window:(NSWindow *)arg1 shouldPopUpDocumentPathMenu:(NSMenu *)arg2;
- (struct CGRect)window:(NSWindow *)arg1 willPositionSheet:(NSWindow *)arg2 usingRect:(struct CGRect)arg3;
- (NSUndoManager *)windowWillReturnUndoManager:(NSWindow *)arg1;
- (BOOL)windowShouldZoom:(NSWindow *)arg1 toFrame:(struct CGRect)arg2;
- (struct CGRect)windowWillUseStandardFrame:(NSWindow *)arg1 defaultFrame:(struct CGRect)arg2;
- (struct CGSize)windowWillResize:(NSWindow *)arg1 toSize:(struct CGSize)arg2;
- (id)windowWillReturnFieldEditor:(NSWindow *)arg1 toObject:(id)arg2;
- (BOOL)windowShouldClose:(id)arg1;
@end

@protocol WebDocumentText <NSObject>
- (void)deselectAll;
- (void)selectAll;
- (NSAttributedString *)selectedAttributedString;
- (NSString *)selectedString;
- (NSAttributedString *)attributedString;
- (NSString *)string;
- (BOOL)supportsTextEncoding;
@end

@protocol WebFrameLoadDelegate <NSObject>

@optional
- (void)webView:(WebView *)arg1 didCreateJavaScriptContext:(JSContext *)arg2 forFrame:(WebFrame *)arg3;
- (void)webView:(WebView *)arg1 windowScriptObjectAvailable:(WebScriptObject *)arg2;
- (void)webView:(WebView *)arg1 didClearWindowObject:(WebScriptObject *)arg2 forFrame:(WebFrame *)arg3;
- (void)webView:(WebView *)arg1 willCloseFrame:(WebFrame *)arg2;
- (void)webView:(WebView *)arg1 didCancelClientRedirectForFrame:(WebFrame *)arg2;
- (void)webView:(WebView *)arg1 willPerformClientRedirectToURL:(NSURL *)arg2 delay:(double)arg3 fireDate:(NSDate *)arg4 forFrame:(WebFrame *)arg5;
- (void)webView:(WebView *)arg1 didChangeLocationWithinPageForFrame:(WebFrame *)arg2;
- (void)webView:(WebView *)arg1 didFailLoadWithError:(NSError *)arg2 forFrame:(WebFrame *)arg3;
- (void)webView:(WebView *)arg1 didFinishLoadForFrame:(WebFrame *)arg2;
- (void)webView:(WebView *)arg1 didReceiveIcon:(NSImage *)arg2 forFrame:(WebFrame *)arg3;
- (void)webView:(WebView *)arg1 didReceiveTitle:(NSString *)arg2 forFrame:(WebFrame *)arg3;
- (void)webView:(WebView *)arg1 didCommitLoadForFrame:(WebFrame *)arg2;
- (void)webView:(WebView *)arg1 didFailProvisionalLoadWithError:(NSError *)arg2 forFrame:(WebFrame *)arg3;
- (void)webView:(WebView *)arg1 didReceiveServerRedirectForProvisionalLoadForFrame:(WebFrame *)arg2;
- (void)webView:(WebView *)arg1 didStartProvisionalLoadForFrame:(WebFrame *)arg2;
@end

@protocol WebPolicyDelegate <NSObject>

@optional
- (void)webView:(WebView *)arg1 unableToImplementPolicyWithError:(NSError *)arg2 frame:(WebFrame *)arg3;
- (void)webView:(WebView *)arg1 decidePolicyForMIMEType:(NSString *)arg2 request:(NSURLRequest *)arg3 frame:(WebFrame *)arg4 decisionListener:(id <WebPolicyDecisionListener>)arg5;
- (void)webView:(WebView *)arg1 decidePolicyForNewWindowAction:(NSDictionary *)arg2 request:(NSURLRequest *)arg3 newFrameName:(NSString *)arg4 decisionListener:(id <WebPolicyDecisionListener>)arg5;
- (void)webView:(WebView *)arg1 decidePolicyForNavigationAction:(NSDictionary *)arg2 request:(NSURLRequest *)arg3 frame:(WebFrame *)arg4 decisionListener:(id <WebPolicyDecisionListener>)arg5;
@end

@protocol WebResourceLoadDelegate <NSObject>

@optional
- (void)webView:(WebView *)arg1 plugInFailedWithError:(NSError *)arg2 dataSource:(WebDataSource *)arg3;
- (void)webView:(WebView *)arg1 resource:(id)arg2 didFailLoadingWithError:(NSError *)arg3 fromDataSource:(WebDataSource *)arg4;
- (void)webView:(WebView *)arg1 resource:(id)arg2 didFinishLoadingFromDataSource:(WebDataSource *)arg3;
- (void)webView:(WebView *)arg1 resource:(id)arg2 didReceiveContentLength:(long long)arg3 fromDataSource:(WebDataSource *)arg4;
- (void)webView:(WebView *)arg1 resource:(id)arg2 didReceiveResponse:(NSURLResponse *)arg3 fromDataSource:(WebDataSource *)arg4;
- (void)webView:(WebView *)arg1 resource:(id)arg2 didCancelAuthenticationChallenge:(NSURLAuthenticationChallenge *)arg3 fromDataSource:(WebDataSource *)arg4;
- (void)webView:(WebView *)arg1 resource:(id)arg2 didReceiveAuthenticationChallenge:(NSURLAuthenticationChallenge *)arg3 fromDataSource:(WebDataSource *)arg4;
- (NSURLRequest *)webView:(WebView *)arg1 resource:(id)arg2 willSendRequest:(NSURLRequest *)arg3 redirectResponse:(NSURLResponse *)arg4 fromDataSource:(WebDataSource *)arg5;
- (id)webView:(WebView *)arg1 identifierForInitialRequest:(NSURLRequest *)arg2 fromDataSource:(WebDataSource *)arg3;
@end

@protocol WebUIDelegate <NSObject>

@optional
- (struct CGRect)webViewContentRect:(WebView *)arg1;
- (void)webView:(WebView *)arg1 setContentRect:(struct CGRect)arg2;
- (NSString *)webView:(WebView *)arg1 runJavaScriptTextInputPanelWithPrompt:(NSString *)arg2 defaultText:(NSString *)arg3;
- (BOOL)webView:(WebView *)arg1 runJavaScriptConfirmPanelWithMessage:(NSString *)arg2;
- (void)webView:(WebView *)arg1 runJavaScriptAlertPanelWithMessage:(NSString *)arg2;
- (void)webView:(WebView *)arg1 drawFooterInRect:(struct CGRect)arg2;
- (void)webView:(WebView *)arg1 drawHeaderInRect:(struct CGRect)arg2;
- (float)webViewFooterHeight:(WebView *)arg1;
- (float)webViewHeaderHeight:(WebView *)arg1;
- (void)webView:(WebView *)arg1 printFrameView:(WebFrameView *)arg2;
- (void)webView:(WebView *)arg1 willPerformDragSourceAction:(unsigned long long)arg2 fromPoint:(struct CGPoint)arg3 withPasteboard:(NSPasteboard *)arg4;
- (unsigned long long)webView:(WebView *)arg1 dragSourceActionMaskForPoint:(struct CGPoint)arg2;
- (void)webView:(WebView *)arg1 willPerformDragDestinationAction:(unsigned long long)arg2 forDraggingInfo:(id <NSDraggingInfo>)arg3;
- (unsigned long long)webView:(WebView *)arg1 dragDestinationActionMaskForDraggingInfo:(id <NSDraggingInfo>)arg2;
- (BOOL)webView:(WebView *)arg1 shouldPerformAction:(SEL)arg2 fromSender:(id)arg3;
- (BOOL)webView:(WebView *)arg1 validateUserInterfaceItem:(id <NSValidatedUserInterfaceItem>)arg2 defaultValidation:(BOOL)arg3;
- (NSArray *)webView:(WebView *)arg1 contextMenuItemsForElement:(NSDictionary *)arg2 defaultMenuItems:(NSArray *)arg3;
- (void)webView:(WebView *)arg1 mouseDidMoveOverElement:(NSDictionary *)arg2 modifierFlags:(unsigned long long)arg3;
- (void)webView:(WebView *)arg1 runOpenPanelForFileButtonWithResultListener:(id <WebOpenPanelResultListener>)arg2 allowMultipleFiles:(BOOL)arg3;
- (void)webView:(WebView *)arg1 runOpenPanelForFileButtonWithResultListener:(id <WebOpenPanelResultListener>)arg2;
- (BOOL)webView:(WebView *)arg1 runBeforeUnloadConfirmPanelWithMessage:(NSString *)arg2 initiatedByFrame:(WebFrame *)arg3;
- (NSString *)webView:(WebView *)arg1 runJavaScriptTextInputPanelWithPrompt:(NSString *)arg2 defaultText:(NSString *)arg3 initiatedByFrame:(WebFrame *)arg4;
- (BOOL)webView:(WebView *)arg1 runJavaScriptConfirmPanelWithMessage:(NSString *)arg2 initiatedByFrame:(WebFrame *)arg3;
- (void)webView:(WebView *)arg1 runJavaScriptAlertPanelWithMessage:(NSString *)arg2 initiatedByFrame:(WebFrame *)arg3;
- (struct CGRect)webViewFrame:(WebView *)arg1;
- (void)webView:(WebView *)arg1 setFrame:(struct CGRect)arg2;
- (void)webView:(WebView *)arg1 setResizable:(BOOL)arg2;
- (BOOL)webViewIsResizable:(WebView *)arg1;
- (void)webView:(WebView *)arg1 setStatusBarVisible:(BOOL)arg2;
- (BOOL)webViewIsStatusBarVisible:(WebView *)arg1;
- (void)webView:(WebView *)arg1 setToolbarsVisible:(BOOL)arg2;
- (BOOL)webViewAreToolbarsVisible:(WebView *)arg1;
- (NSString *)webViewStatusText:(WebView *)arg1;
- (void)webView:(WebView *)arg1 setStatusText:(NSString *)arg2;
- (void)webView:(WebView *)arg1 makeFirstResponder:(NSResponder *)arg2;
- (NSResponder *)webViewFirstResponder:(WebView *)arg1;
- (void)webViewUnfocus:(WebView *)arg1;
- (void)webViewFocus:(WebView *)arg1;
- (void)webViewClose:(WebView *)arg1;
- (void)webViewRunModal:(WebView *)arg1;
- (WebView *)webView:(WebView *)arg1 createWebViewModalDialogWithRequest:(NSURLRequest *)arg2;
- (void)webViewShow:(WebView *)arg1;
- (WebView *)webView:(WebView *)arg1 createWebViewWithRequest:(NSURLRequest *)arg2;
@end

@interface DSANode (IDEDocNavigableItemSupport)
- (id)parentItem;
@end

@interface DSANode (OutlineViewSupport)
- (id)childItems;
@end

@interface DSANode (SampleCodeExtras)
- (BOOL)representsSampleCodeDocument;
@end

@interface DSANode (_IDEDocModelObjectDataProvider)
- (id)image;
- (id)treeControllerChildren;
- (BOOL)treeControllerIsLeaf;
@end

@interface DSANodeDocumentTypeCollection : NSObject <NSCopying>
{
    NSArray *_nodes;
    NSString *_name;
    DSANode *_primaryParent;
    NSImage *_image;
}

+ (id)collectionWithName:(id)arg1 nodes:(id)arg2 parentNode:(id)arg3 image:(id)arg4;
@property(retain) NSImage *image; // @synthesize image=_image;
@property(retain) DSANode *primaryParent; // @synthesize primaryParent=_primaryParent;
@property(copy) NSString *name; // @synthesize name=_name;
@property(copy) NSArray *nodes; // @synthesize nodes=_nodes;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface DSATextSearchResult (IDEDocStringRankingAdditions)
- (id)name;
@end

@interface DSAToken (APIConveniences)
- (void)inheritedProtocols:(id)arg1;
- (void)inheritedSuperclasses:(id)arg1;
@end

@interface IDEDocBookmarksListTableCellView : NSTableCellView
{
    NSTextField *_itemNameField;
    NSTextField *_itemNodePathField;
    NSImageView *_itemDocSetImageView;
}

@property NSImageView *itemDocSetImageView; // @synthesize itemDocSetImageView=_itemDocSetImageView;
@property NSTextField *itemNodePathField; // @synthesize itemNodePathField=_itemNodePathField;
@property NSTextField *itemNameField; // @synthesize itemNameField=_itemNameField;

@end

@interface IDEDocBookmarksListTableView : DVTTableView
{
    NSEvent *_handledEvent;
}

@property(retain) NSEvent *handledEvent; // @synthesize handledEvent=_handledEvent;
- (void).cxx_destruct;
- (BOOL)sendAction:(SEL)arg1 to:(id)arg2;
- (void)keyDown:(id)arg1;
- (void)doCommandBySelector:(SEL)arg1;
- (void)deleteBackward:(id)arg1;

@end

@interface IDEDocNavigator : IDENavigator
{
    id _selectedItem;
}

+ (long long)version;
+ (void)configureStateSavingObjectPersistenceByName:(id)arg1;
@property(retain) id selectedItem; // @synthesize selectedItem=_selectedItem;
- (void).cxx_destruct;
- (void)focusSearchField;
- (void)commitStateToDictionary:(id)arg1;
- (void)revertStateWithDictionary:(id)arg1;
- (void)updateWithURL:(id)arg1 node:(id)arg2 webView:(id)arg3;
- (id)idedocnavigator_identifier;
- (id)contextMenuSelectedNavItems;
- (id)domainIdentifier;

@end

@interface IDEDocBookmarksListViewController : IDEDocNavigator <NSTableViewDataSource, NSTableViewDelegate>
{
    NSArray *_bookmarks;
    id _bookmarksChangedWatcher;
    NSArray *_draggedBookmarks;
    DVTTableView *_tableView;
    DVTBorderedView *_borderedView;
}

@property __weak DVTBorderedView *borderedView; // @synthesize borderedView=_borderedView;
@property DVTTableView *tableView; // @synthesize tableView=_tableView;
- (void).cxx_destruct;
- (BOOL)validateMenuItem:(id)arg1;
- (void)contextMenu_delete:(id)arg1;
- (void)contextMenu_openInTab:(id)arg1;
- (void)contextMenu_open:(id)arg1;
- (id)moveObjectsInArrangedObjectsFromIndexes:(id)arg1 toIndex:(long long)arg2;
- (id)indexSetOfDraggedBookmarks:(id)arg1;
- (BOOL)tableView:(id)arg1 acceptDrop:(id)arg2 row:(long long)arg3 dropOperation:(unsigned long long)arg4;
- (unsigned long long)tableView:(id)arg1 validateDrop:(id)arg2 proposedRow:(long long)arg3 proposedDropOperation:(unsigned long long)arg4;
- (BOOL)tableView:(id)arg1 writeRowsWithIndexes:(id)arg2 toPasteboard:(id)arg3;
- (void)deleteCurrentItem;
- (void)_deleteItemAtRow:(long long)arg1;
- (void)saveBookmarks;
- (void)loadContentForRow:(long long)arg1 inNewTab:(BOOL)arg2;
- (id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3;
- (id)bookNodeNameForNode:(id)arg1;
- (long long)numberOfRowsInTableView:(id)arg1;
- (id)docSetNameForDocSetIdentifier:(id)arg1;
- (void)_updateTable;
- (void)viewDidInstall;
- (void)loadView;
- (id)idedocnavigator_identifier;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEDocBrowserHistory : NSObject
{
    struct __CFDateFormatter *_dateFormatter;
    NSMenu *_historyMenu;
}

+ (id)sharedHistory;
- (void).cxx_destruct;
- (void)selectHistoryItem:(id)arg1;
- (void)clearHistory:(id)arg1;
- (id)historyMenu;
- (void)historyUpdate:(id)arg1;
- (void)loadHistory;
- (id)stringForCalendarDate:(id)arg1;
- (id)init;

@end

@interface IDEDocBrowserHistoryCommandHandler : NSObject <IDECommandHandler>
{
}

+ (id)handlerForAction:(SEL)arg1 withSelectionSource:(id)arg2;
- (void)showBrowserHistory:(id)arg1;
- (BOOL)validateUserInterfaceItem:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEDocCommandHandler : NSObject <IDECommandHandler, NSMenuDelegate>
{
}

+ (BOOL)handleURL:(id)arg1 error:(id *)arg2;
+ (void)handleURLQueryString:(id)arg1;
+ (void)handleURL_recipe:(id)arg1;
+ (void)handleURL_URLString:(id)arg1;
+ (void)handleURL_appleRef:(id)arg1 platform:(id)arg2;
+ (void)handleURL_search:(id)arg1;
+ (BOOL)shouldRegisterURLHandlerForScheme:(id)arg1;
+ (void)showFullResultsPageForSearchString:(id)arg1;
+ (void)showAllResultsInContext:(id)arg1;
+ (void)loadURL:(id)arg1;
+ (void)loadURLInNewTab:(id)arg1;
+ (void)loadURL:(id)arg1 focusSearchField:(BOOL)arg2;
+ (id)handlerForAction:(SEL)arg1 withSelectionSource:(id)arg2;
+ (void)addBookmarkForURL:(id)arg1;
+ (void)showDocumentationForHelpItem:(id)arg1;
+ (id)contextHelpMenuItemForHelpID:(id)arg1;
+ (id)sharedDocViewerWindowController;
- (void)zoomActualSize:(id)arg1;
- (void)zoomOut:(id)arg1;
- (void)zoomIn:(id)arg1;
- (void)showContinuousIntegrationGuide:(id)arg1;
- (void)showSourceControlGuide:(id)arg1;
- (void)showGDBToLLDBTransitionGuide:(id)arg1;
- (void)showWhatsNewInXcode:(id)arg1;
- (void)showXcodeReleaseNotes:(id)arg1;
- (void)showXcodeHelp:(id)arg1;
- (void)windowMenu_showDocumentation:(id)arg1;
- (void)showDeveloperDocumentation:(id)arg1;
- (void)showXcodeUserGuide:(id)arg1;
- (void)documentation_showLibrary:(id)arg1;
- (void)documentation_showBookmarks:(id)arg1;
- (void)documentation_share_openPlayground:(id)arg1;
- (void)documentation_share_showIBook:(id)arg1;
- (void)documentation_share_showPDF:(id)arg1;
- (void)documentation_share_messageLink:(id)arg1;
- (void)documentation_share_emailLink:(id)arg1;
- (void)documentation_share_openInBrowser:(id)arg1;
- (void)documentation_share_addBookmark:(id)arg1;
- (void)idedoc_revealInLibrary:(id)arg1;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (void)searchDocumentationForSelectedText:(id)arg1;
- (void)searchForString:(id)arg1;
- (void)_addBookmarkForNode:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEDocContentAreaReplacementView : DVTReplacementView
{
}

@end

@interface IDEDocContentAreaViewController : DVTViewController <NSSplitViewDelegate, DVTFindBarHostable, DVTScopeBarHost, DVTReplacementViewDelegate>
{
    DVTObservingToken *_selectedNodeWatcher;
    DVTObservingToken *_contentSearchFieldStringWatcher;
    NSView *_findBarView;
    DVTScopeBarsManager *_scopeBarsMgr;
    DVTBasicFindBar *_findBar;
    NSString *_findString;
    BOOL _findCaseSensitive;
    DVTScopeBarController *_findBarScopeBarController;
    WebView *_tempWebView;
    DVTChoice *_detailsChoice;
    DVTChoice *_tableOfContentsChoice;
    BOOL _chooserViewIsSettingChoices;
    BOOL _didRestoreViewConfiguration;
    DVTObservingToken *_contentViewLayoutCompleteWatcher;
    DVTObservingToken *_navigatorAreaSelectedItemWatcher;
    BOOL _sidebarVisible;
    DVTSplitView *contentAreaSplitView;
    DVTStateToken *_stateToken;
    NSString *_UUID;
    DVTReplacementView *_contentReplacementView;
    NSDictionary *_sidebarRevertState;
    IDEDocNavigatorArea *_navigatorArea;
    DVTChoice *_sidebarChoice;
    DVTSplitViewItem *_navigatorAreaSplitViewItem;
}

+ (id)sidebarBackgroundColor;
@property(retain) DVTSplitViewItem *navigatorAreaSplitViewItem; // @synthesize navigatorAreaSplitViewItem=_navigatorAreaSplitViewItem;
@property(retain, nonatomic) DVTChoice *sidebarChoice; // @synthesize sidebarChoice=_sidebarChoice;
@property(retain) IDEDocNavigatorArea *navigatorArea; // @synthesize navigatorArea=_navigatorArea;
@property(retain) NSDictionary *sidebarRevertState; // @synthesize sidebarRevertState=_sidebarRevertState;
@property(getter=isSidebarVisible) BOOL sidebarVisible; // @synthesize sidebarVisible=_sidebarVisible;
@property(retain) DVTReplacementView *contentReplacementView; // @synthesize contentReplacementView=_contentReplacementView;
@property(retain, nonatomic) NSString *UUID; // @synthesize UUID=_UUID;
@property(retain, nonatomic) DVTStateToken *stateToken; // @synthesize stateToken=_stateToken;
@property(retain) DVTSplitView *contentAreaSplitView; // @synthesize contentAreaSplitView;
- (void).cxx_destruct;
- (void)printDocument:(id)arg1;
- (id)printInfo;
- (BOOL)_isDocumentHTML;
- (void)useSelectionForFind:(id)arg1;
- (void)showContentFindView;
- (id)findBar;
- (void)_updateFindBar:(id)arg1;
- (id)_scopeBarsManager;
- (BOOL)isFindBarInstalled;
- (void)basicFindBarLostFocus:(id)arg1;
- (BOOL)basicFindBar:(id)arg1 findPreviousByWrapping:(BOOL)arg2;
- (BOOL)basicFindBar:(id)arg1 findNextByWrapping:(BOOL)arg2;
- (void)findPrevious:(id)arg1;
- (void)findNext:(id)arg1;
- (BOOL)_findPreviousByWrapping:(BOOL)arg1;
- (BOOL)_findNextByWrapping:(BOOL)arg1;
- (long long)basicFindBar:(id)arg1 findString:(id)arg2 caseSensitive:(BOOL)arg3 withFindType:(unsigned long long)arg4 andMatchStyle:(int)arg5;
- (BOOL)basicFindBar:(id)arg1 supportsMatchStyle:(int)arg2;
- (BOOL)basicFindBar:(id)arg1 supportsFindType:(unsigned long long)arg2;
- (void)dismissFindBar:(id)arg1 andRestoreSelection:(BOOL)arg2;
- (void)closeFindBar;
@property(readonly) NSView *scopeBarsBaseView;
- (void)updateContentOutlineViewForURLInFrame:(id)arg1;
- (id)nodeInWebFrame:(id)arg1;
@property(readonly) DSANode *displayedNodeInContentView;
@property(readonly) BOOL webViewCanGoForward;
@property(readonly) BOOL webViewCanGoBack;
@property(readonly) BOOL webViewCanMakeTextStandardSize;
@property(readonly) BOOL webViewCanZoomOut;
@property(readonly) BOOL webViewCanZoomIn;
- (void)webViewMakeTextStandardSize:(id)arg1;
- (void)webViewZoomOut:(id)arg1;
- (void)webViewZoomIn:(id)arg1;
- (void)webViewGoForward:(id)arg1;
- (void)webViewGoBack:(id)arg1;
@property(readonly, copy) NSString *webViewBackForwardListForwardItemURLString;
@property(readonly, copy) NSString *webViewBackForwardListBackItemURLString;
- (void)toggleTOCVisibility;
- (void)toggleNavigatorVisibility;
- (void)showNavigator;
@property(getter=isTableOfContentsVisible) BOOL tableOfContentsVisible;
@property double tableOfContentsSplitterPosition;
@property double splitterPosition;
@property(readonly) NSString *webViewURLString;
- (void)loadURL:(id)arg1;
- (void)loadResultsContext:(id)arg1 selectGroup:(id)arg2;
@property(readonly) IDEDocWebViewContentViewController *installedContentViewController;
@property(readonly) WebView *webView;
- (void)updateSidebarWithURL:(id)arg1 node:(id)arg2;
- (void)replacementView:(id)arg1 didInstallViewController:(id)arg2;
- (void)replacementView:(id)arg1 willCloseViewController:(id)arg2;
@property(readonly) IDEDocContentOutlineViewController *installedOutlineViewController;
- (BOOL)splitView:(id)arg1 canCollapseSubview:(id)arg2;
- (BOOL)splitView:(id)arg1 shouldCollapseSubview:(id)arg2 forDoubleClickOnDividerAtIndex:(long long)arg3;
- (double)splitView:(id)arg1 constrainMaxCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(id)arg1 constrainMinCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(id)arg1 constrainSplitPosition:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)minSplitterPosition;
- (double)maxSplitterPosition;
@property(readonly) DVTScopeBarsManager *scopeBarsManager;
- (void)primitiveInvalidate;
- (void)_restoreViewConfiguration;
- (void)loadView;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) NSScrollView *scopeBarsAdjustableScrollView;
@property(readonly) Class superclass;

@end

@interface IDEDocContentOutlineTableRowView : NSTableRowView
{
}

@end

@interface IDEDocContentOutlineView : DVTOutlineView
{
}

- (struct CGRect)frameOfCellAtColumn:(long long)arg1 row:(long long)arg2;

@end

@interface IDEDocContentOutlineViewController : IDEDocNavigator <NSOutlineViewDataSource, NSOutlineViewDelegate>
{
    DSANode *_selectedNode;
    BOOL _disableOutlineViewSelectionChangeDelegate;
    BOOL _didRestoreExpansionState;
    _IDEDocContentOutlineViewRootNode *_rootNode;
    IDEDocContentOutlineView *outlineView;
}

+ (id)groupFont;
+ (id)nonGroupFont;
+ (id)outlineBackgroundColor;
@property(retain) DSANode *selectedNode; // @synthesize selectedNode=_selectedNode;
@property IDEDocContentOutlineView *outlineView; // @synthesize outlineView;
- (void).cxx_destruct;
- (id)outlineView:(id)arg1 persistentObjectForItem:(id)arg2;
- (id)outlineView:(id)arg1 itemForPersistentObject:(id)arg2;
- (void)outlineViewSelectionDidChange:(id)arg1;
- (id)outlineView:(id)arg1 objectValueForTableColumn:(id)arg2 byItem:(id)arg3;
- (id)outlineView:(id)arg1 viewForTableColumn:(id)arg2 item:(id)arg3;
- (double)outlineView:(id)arg1 heightOfRowByItem:(id)arg2;
- (BOOL)selectionShouldChangeInOutlineView:(id)arg1;
- (BOOL)outlineView:(id)arg1 isItemExpandable:(id)arg2;
- (id)outlineView:(id)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (BOOL)outlineView:(id)arg1 isGroupItem:(id)arg2;
- (long long)outlineView:(id)arg1 numberOfChildrenOfItem:(id)arg2;
- (void)updateWithURL:(id)arg1 node:(id)arg2 webView:(id)arg3;
- (void)primitiveInvalidate;
- (void)loadView;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEDocDocumentationTabViewController : DVTViewController <DVTReplacementViewDelegate, DOMEventListener, DVTTabbedWindowTabContentControlling>
{
    id _titleLoadWatcher;
    NSString *_tabLabel;
    DVTObservingToken *_contentOutlineSplitViewItemIsVisibleWatcher;
    NSString *userDefinedTabLabel;
    NSDocument<DVTTabbedWindowCreation> *document;
    NSString *tabLabel;
    NSString *_UUID;
    NSURL *_loadedURL;
    NSView *_contentAreaContainerView;
    IDEDocContentAreaReplacementView *_contentAreaReplacementView;
    NSDictionary *_sidebarRevertState;
    DVTStateToken *_stateToken;
}

@property(retain, nonatomic) DVTStateToken *stateToken; // @synthesize stateToken=_stateToken;
@property(retain, nonatomic) NSDictionary *sidebarRevertState; // @synthesize sidebarRevertState=_sidebarRevertState;
@property IDEDocContentAreaReplacementView *contentAreaReplacementView; // @synthesize contentAreaReplacementView=_contentAreaReplacementView;
@property NSView *contentAreaContainerView; // @synthesize contentAreaContainerView=_contentAreaContainerView;
@property(copy) NSURL *loadedURL; // @synthesize loadedURL=_loadedURL;
@property(retain) NSString *UUID; // @synthesize UUID=_UUID;
@property(retain) NSDocument<DVTTabbedWindowCreation> *document; // @synthesize document;
@property(copy) NSString *userDefinedTabLabel; // @synthesize userDefinedTabLabel;
- (void).cxx_destruct;
- (void)handleEvent:(id)arg1;
@property double webViewTextMultiplier;
@property int webViewScrollPosition;
- (id)_bodyElementWithScrollHeight;
@property(readonly) NSString *selectedStringInWebView;
- (void)useSelectionForFind:(id)arg1;
- (void)contentFind_FindNext:(id)arg1;
- (void)contentFind_FindPrevious:(id)arg1;
- (void)closeFindBar;
- (void)showContentFindView:(id)arg1;
- (BOOL)canGoBack;
- (BOOL)canGoForward;
- (BOOL)canMakeTextStandardSize;
- (BOOL)canZoomOut;
- (BOOL)canZoomIn;
- (void)makeTextStandardSize:(id)arg1;
- (void)makeLarger:(id)arg1;
- (void)makeSmaller:(id)arg1;
- (void)goForward:(id)arg1;
- (void)goBack:(id)arg1;
@property(readonly, copy) NSString *webViewBackForwardListForwardItemURLString;
@property(readonly, copy) NSString *webViewBackForwardListBackItemURLString;
- (void)makeTableOfContentsFirstResponder;
@property(readonly, getter=isSidebarVisible) BOOL sidebarVisible;
@property(readonly, nonatomic) double tableOfContentsSplitterPosition;
@property(readonly, getter=isTableOfContentsVisible) BOOL tableOfContentsVisible;
@property double splitterPosition;
- (void)showLibrary;
- (void)showBookmarks;
- (void)showDisplayedNodeInBrowseNavigator;
- (void)toggleTOCVisibility:(id)arg1;
- (void)toggleNavigatorVisibility:(id)arg1;
- (void)loadURL:(id)arg1;
@property(readonly) IDEDocContentAreaViewController *installedContentAreaViewController;
- (BOOL)isFindBarInstalled;
- (id)contentWebView;
- (void)showAllResultsInContext:(id)arg1;
- (void)installContentView;
- (void)replacementView:(id)arg1 didInstallViewController:(id)arg2;
- (void)primitiveInvalidate;
- (void)loadView;
- (id)initWithUUID:(id)arg1;
- (id)initUsingDefaultNib;
@property(readonly) NSString *tabLabel; // @synthesize tabLabel;
@property(readonly) NSString *name;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEDocDownloadableIconProvider : NSObject <IDEComponentDownloadIconProvider>
{
}

- (id)imageForDownloadableType:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEDocExploreNavigator : IDEDocNavigator <NSOutlineViewDataSource, NSOutlineViewDelegate, DSMDocSetLoaderListener>
{
    IDEDocExploreOutlineView *_docSetsOutlineView;
    NSSet *_expandedItems;
    NSArray *_selectedObjects;
    BOOL _restoringState;
    DVTObservingToken *_docSetLoadingToken;
    NSArray *_docSetRecords;
    NSMapTable *_documentTypeCollections;
    NSMapTable *_nodeSubgroups;
}

+ (long long)version;
+ (void)configureStateSavingObjectPersistenceByName:(id)arg1;
+ (unsigned long long)assertionBehaviorForKeyValueObservationsAtEndOfEvent;
+ (void)initialize;
@property(retain) IDEDocExploreOutlineView *docSetsOutlineView; // @synthesize docSetsOutlineView=_docSetsOutlineView;
- (void).cxx_destruct;
- (id)stateSavingExpandedItems;
- (id)itemsForNameArrays:(id)arg1;
- (id)docSetNodeNamed:(id)arg1 inArray:(id)arg2;
- (id)nameArraysForItems:(id)arg1;
- (id)stateSavingSelectedObjects;
- (void)setStateSavingSelectedObjects:(id)arg1;
- (void)setStateSavingExpandedItems:(id)arg1;
- (void)commitStateToDictionary:(id)arg1;
- (void)revertStateWithDictionary:(id)arg1;
- (void)setStateToken:(id)arg1;
- (void)outlineViewItemDidCollapse:(id)arg1;
- (void)outlineViewItemDidExpand:(id)arg1;
- (void)outlineView:(id)arg1 concludeDragOperation:(id)arg2;
- (unsigned long long)outlineView:(id)arg1 draggingSourceOperationMaskForLocal:(BOOL)arg2;
- (BOOL)outlineView:(id)arg1 doCommandBySelector:(SEL)arg2;
- (void)outlineViewSelectionDidChange:(id)arg1;
- (BOOL)outlineView:(id)arg1 isGroupHeaderItem:(id)arg2;
- (id)outlineView:(id)arg1 viewForTableColumn:(id)arg2 item:(id)arg3;
- (long long)outlineView:(id)arg1 numberOfChildrenOfItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 isItemExpandable:(id)arg2;
- (id)outlineView:(id)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (void)_loadEditorWithSelectedNode;
- (void)docSetWillBeUnloadedOrUpdated:(id)arg1;
- (void)docSetDidUnload:(id)arg1;
- (void)docSetDidLoad:(id)arg1;
- (void)selectDocSetNode:(id)arg1;
- (void)updateContent;
- (id)contextMenuSelectedNavItems;
- (void)primitiveInvalidate;
- (id)idedocnavigator_identifier;
- (void)loadView;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(copy) NSSet *expandedItems; // @dynamic expandedItems;
@property(readonly) unsigned long long hash;
@property(readonly, copy) NSMutableSet *mutableExpandedItems; // @dynamic mutableExpandedItems;
@property(readonly, copy) NSMutableArray *mutableSelectedObjects; // @dynamic mutableSelectedObjects;
@property(copy) NSArray *selectedObjects; // @dynamic selectedObjects;
@property(readonly) Class superclass;

@end

@interface IDEDocExploreOutlineView : IDENavigatorOutlineView
{
    IDEDocExploreNavigator *_exploreNavigator;
}

@property(retain) IDEDocExploreNavigator *exploreNavigator; // @synthesize exploreNavigator=_exploreNavigator;
- (void).cxx_destruct;
- (void)openClickedNavigableItemAction:(id)arg1;
- (void)openSelectedNavigableItemsKeyAction:(id)arg1;
- (BOOL)_shouldContinueExpandAtLevel:(long long)arg1 beganAtLevel:(long long)arg2;
- (void)primitiveInvalidate;

@end

@interface IDEDocInheritanceHierarchyViewController : DVTViewController <NSTextViewDelegate, DVTScopeBarContentController>
{
    NSDictionary *_characterIndexesToIndexSymbols;
    DVTBorderedView *_borderedView;
    NSTextView *_textView;
    IDEDocContentAreaViewController *_hostContentAreaViewController;
}

+ (id)_indexQueriesSharedQueue;
@property IDEDocContentAreaViewController *hostContentAreaViewController; // @synthesize hostContentAreaViewController=_hostContentAreaViewController;
@property NSTextView *textView; // @synthesize textView=_textView;
@property DVTBorderedView *borderedView; // @synthesize borderedView=_borderedView;
- (void).cxx_destruct;
- (void)_selectClassMember:(id)arg1;
- (BOOL)textView:(id)arg1 clickedOnLink:(id)arg2 atIndex:(unsigned long long)arg3;
- (id)_menuForMembersOfIndexClassOrProtocolSymbol:(id)arg1;
- (void)_collectMembersOfClass:(id)arg1 properties:(id)arg2 instMethods:(id)arg3 clMethods:(id)arg4;
- (void)updateWithIndexSymbol:(id)arg1;
- (id)_attributedStringForSeparatorString:(id)arg1;
- (id)_attributedStringForIndexSymbol:(id)arg1;
@property(readonly) double preferredViewHeight;
- (void)primitiveInvalidate;
- (void)viewDidInstall;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEDocModelObjectDataProvider : NSObject
{
}

@end

@interface IDEDocNavigableItemSupport : NSObject
{
}

@end

@interface IDEDocNavigatorArea : IDEViewController <DVTReplacementViewDelegate, DVTStatefulObject>
{
    DVTChooserView *_chooserView;
    DVTReplacementView *_replacementView;
    NSArrayController *_choicesController;
    DVTExtension *_currentExtension;
    DVTObservingToken *_selectedItemToken;
    NSIndexSet *_chooserViewSelectionIndexes;
    NSString *_UUID;
    id _selectedItem;
    IDEDocContentAreaViewController *_contentAreaViewController;
    DVTBorderedView *_containerBorderedView;
}

+ (long long)version;
+ (void)configureStateSavingObjectPersistenceByName:(id)arg1;
+ (id)keyPathsForValuesAffectingCurrentNavigator;
@property __weak DVTBorderedView *containerBorderedView; // @synthesize containerBorderedView=_containerBorderedView;
@property __weak IDEDocContentAreaViewController *contentAreaViewController; // @synthesize contentAreaViewController=_contentAreaViewController;
@property(retain) id selectedItem; // @synthesize selectedItem=_selectedItem;
@property(retain, nonatomic) NSString *UUID; // @synthesize UUID=_UUID;
@property(copy) NSIndexSet *chooserViewSelectionIndexes; // @synthesize chooserViewSelectionIndexes=_chooserViewSelectionIndexes;
@property(retain) DVTReplacementView *replacementView; // @synthesize replacementView=_replacementView;
@property(retain) DVTChooserView *chooserView; // @synthesize chooserView=_chooserView;
@property(retain, nonatomic) DVTExtension *currentExtension; // @synthesize currentExtension=_currentExtension;
@property(retain) NSArrayController *choicesController; // @synthesize choicesController=_choicesController;
- (void).cxx_destruct;
- (void)commitStateToDictionary:(id)arg1;
- (void)revertStateWithDictionary:(id)arg1;
- (void)_setCurrentExtensionIdentifier:(id)arg1;
- (id)_currentExtensionIdentifier;
- (void)replacementView:(id)arg1 willCloseViewController:(id)arg2;
- (void)replacementView:(id)arg1 didInstallViewController:(id)arg2;
- (void)setStateToken:(id)arg1;
- (void)showBookmarksArea:(id)arg1;
- (void)showExploreAreaAndSelectDocSetNode:(id)arg1;
- (void)showSearchArea:(id)arg1;
- (void)showExploreArea:(id)arg1;
- (void)updateWithURL:(id)arg1 node:(id)arg2 webView:(id)arg3;
- (void)primitiveInvalidate;
- (id)currentNavigator;
- (void)showNavigatorWithIdentifier:(id)arg1;
- (void)viewDidInstall;
- (void)loadView;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEDocPDFDownloadController : NSObject
{
    IDEDocPDFDownloader *_downloader;
    DVTObservingToken *_downloadObservingToken;
    CDUnknownBlockType _completionHandler;
    double _editorLoadingProgress;
}

@property double editorLoadingProgress; // @synthesize editorLoadingProgress=_editorLoadingProgress;
- (void).cxx_destruct;
- (void)downloadFinished:(id)arg1;
- (void)beginDownloadWithCompletionHandler:(CDUnknownBlockType)arg1;
- (id)initWithRequestForPDF:(id)arg1;

@end

@interface IDEDocURLDownloader : NSObject
{
    Class _downloadClass;
    NSURLDownload *_download;
    NSURLRequest *_request;
    NSURLResponse *_downloadResponse;
    NSWindow *_downloadOriginationWindow;
    NSString *_downloadDestinationFilePath;
    unsigned long long _bytesReceived;
    float _percentComplete;
}

@property(retain) Class downloadClass; // @synthesize downloadClass=_downloadClass;
@property float percentComplete; // @synthesize percentComplete=_percentComplete;
@property unsigned long long bytesReceived; // @synthesize bytesReceived=_bytesReceived;
@property(copy) NSURLResponse *downloadResponse; // @synthesize downloadResponse=_downloadResponse;
@property(retain) NSWindow *downloadOriginationWindow; // @synthesize downloadOriginationWindow=_downloadOriginationWindow;
@property(copy) NSString *downloadDestinationFilePath; // @synthesize downloadDestinationFilePath=_downloadDestinationFilePath;
@property(retain) NSURLDownload *download; // @synthesize download=_download;
- (void).cxx_destruct;
- (void)quarantineExtractedArchiveAtPath:(id)arg1 fromDownload:(id)arg2;
- (void)_quarantineFileAtPath:(id)arg1 quarantineDictionary:(id)arg2;
- (void)cleanUp;
- (void)beginDownload;
- (id)download:(id)arg1 willSendRequest:(id)arg2 redirectResponse:(id)arg3;
- (BOOL)download:(id)arg1 shouldDecodeSourceDataOfMIMEType:(id)arg2;
- (void)download:(id)arg1 didFailWithError:(id)arg2;
- (void)downloadDidFinish:(id)arg1;
- (void)download:(id)arg1 decideDestinationWithSuggestedFilename:(id)arg2;
- (void)download:(id)arg1 didReceiveResponse:(id)arg2;
- (id)downloadWindowForAuthenticationSheet:(id)arg1;
- (void)download:(id)arg1 didReceiveDataOfLength:(unsigned long long)arg2;
- (id)initWithRequest:(id)arg1 downloadClass:(Class)arg2;

@end

@interface IDEDocPDFDownloader : IDEDocURLDownloader
{
    IDEDocPDFDownloadController *_downloadController;
}

@property(retain) IDEDocPDFDownloadController *downloadController; // @synthesize downloadController=_downloadController;
- (void).cxx_destruct;
- (void)downloadDidFinish:(id)arg1;

@end

@interface IDEDocPreviewWebViewViewController : NSViewController
{
    WebView *_webView;
}

@property __weak WebView *webView; // @synthesize webView=_webView;
- (void).cxx_destruct;

@end

@interface IDEDocRecipeMenuBuilder : NSObject
{
}

- (void)menuNeedsUpdate:(id)arg1;

@end

@interface IDEDocReferenceHeaderMorePopoverViewController : DVTViewController <NSTextViewDelegate>
{
    NSAttributedString *_inheritsFromAttString;
    NSAttributedString *_conformsToAttString;
    NSTextView *_textView;
    NSTrackingArea *_textViewMouseTracker;
    DVTBorderedView *_borderLine;
    struct CGSize _renderedTextViewSize;
    struct _NSRange _currentUnderlineRange;
}

@property __weak DVTBorderedView *borderLine; // @synthesize borderLine=_borderLine;
@property struct _NSRange currentUnderlineRange; // @synthesize currentUnderlineRange=_currentUnderlineRange;
@property(retain) NSTrackingArea *textViewMouseTracker; // @synthesize textViewMouseTracker=_textViewMouseTracker;
@property(retain) NSTextView *textView; // @synthesize textView=_textView;
@property struct CGSize renderedTextViewSize; // @synthesize renderedTextViewSize=_renderedTextViewSize;
@property(copy) NSAttributedString *conformsToAttString; // @synthesize conformsToAttString=_conformsToAttString;
@property(copy) NSAttributedString *inheritsFromAttString; // @synthesize inheritsFromAttString=_inheritsFromAttString;
- (void).cxx_destruct;
- (void)updateWithToken:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)mouseMoved:(id)arg1;
- (void)removeUnderlineLinkInTextStorage:(id)arg1;
- (void)underlineLinkUnderEvent:(id)arg1;
- (void)addMouseTracker;
- (void)clearMouseTracker;
- (id)groupFont;
- (id)nonGroupFont;
- (BOOL)textView:(id)arg1 clickedOnLink:(id)arg2 atIndex:(unsigned long long)arg3;
- (void)primitiveInvalidate;
- (void)loadView;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEDocReferenceHeaderViewController : DVTViewController <NSTextViewDelegate>
{
    id _bookmarksChangedWatcher;
    id _popoverWatcher;
    DSAToken *_token;
    NSTextField *_containerNameField;
    DVTBorderedView *_borderedView;
    _IDEDocBookmarkButton *_bookmarkButton;
    NSTextView *_inheritanceTextView;
    NSTextView *_conformanceTextView;
    NSTextView *_frameworkTextView;
    NSTextView *_inheritanceLabel;
    NSTextView *_conformanceLabel;
    NSTextView *_frameworkLabel;
    id _contentViewLayoutCompleteWatcher;
    NSTextView *_mouseEnteredTextView;
    NSTextStorage *_mouseEnteredTextStorage;
    NSPopover *_moreInfoPopover;
    struct _NSRange _currentUnderlineRange;
}

@property(retain) NSPopover *moreInfoPopover; // @synthesize moreInfoPopover=_moreInfoPopover;
@property(retain) NSTextStorage *mouseEnteredTextStorage; // @synthesize mouseEnteredTextStorage=_mouseEnteredTextStorage;
@property(retain) NSTextView *mouseEnteredTextView; // @synthesize mouseEnteredTextView=_mouseEnteredTextView;
@property struct _NSRange currentUnderlineRange; // @synthesize currentUnderlineRange=_currentUnderlineRange;
@property(retain) id contentViewLayoutCompleteWatcher; // @synthesize contentViewLayoutCompleteWatcher=_contentViewLayoutCompleteWatcher;
@property(retain) NSTextView *frameworkLabel; // @synthesize frameworkLabel=_frameworkLabel;
@property(retain) NSTextView *conformanceLabel; // @synthesize conformanceLabel=_conformanceLabel;
@property(retain) NSTextView *inheritanceLabel; // @synthesize inheritanceLabel=_inheritanceLabel;
@property(retain) NSTextView *frameworkTextView; // @synthesize frameworkTextView=_frameworkTextView;
@property(retain) NSTextView *conformanceTextView; // @synthesize conformanceTextView=_conformanceTextView;
@property(retain) NSTextView *inheritanceTextView; // @synthesize inheritanceTextView=_inheritanceTextView;
@property(retain) _IDEDocBookmarkButton *bookmarkButton; // @synthesize bookmarkButton=_bookmarkButton;
@property(retain) DVTBorderedView *borderedView; // @synthesize borderedView=_borderedView;
@property(retain) NSTextField *containerNameField; // @synthesize containerNameField=_containerNameField;
@property(retain, nonatomic) DSAToken *token; // @synthesize token=_token;
- (void).cxx_destruct;
- (void)showMoreInfo;
- (void)updateView;
- (void)bookmarkAction:(id)arg1;
- (void)updateBookmark;
- (id)bookNode;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)mouseMoved:(id)arg1;
- (void)removeUnderlineLinkInTextStorage:(id)arg1;
- (void)underlineLinkUnderEvent:(id)arg1;
- (BOOL)textView:(id)arg1 clickedOnLink:(id)arg2 atIndex:(unsigned long long)arg3;
- (void)primitiveInvalidate;
- (void)loadView;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEDocReferenceHeaderViewTextViewHelper : NSObject
{
}

+ (struct _NSRange)rangeOfLinkUnderEvent:(id)arg1 textView:(id)arg2;

@end

@interface IDEDocSampleCodeDownloadActivityReporter : IDEActivityReporter
{
}

@end

@interface IDEDocSampleCodeDownloader : IDEDocURLDownloader
{
    unsigned long long _downloadStage;
    NSURL *_downloadDestinationDirectory;
    NSString *_sampleCodeProjectName;
    long long _sampleCodeDownloadType;
}

@property long long sampleCodeDownloadType; // @synthesize sampleCodeDownloadType=_sampleCodeDownloadType;
@property(copy) NSString *sampleCodeProjectName; // @synthesize sampleCodeProjectName=_sampleCodeProjectName;
@property(copy) NSURL *downloadDestinationDirectory; // @synthesize downloadDestinationDirectory=_downloadDestinationDirectory;
@property unsigned long long downloadStage; // @synthesize downloadStage=_downloadStage;
- (void).cxx_destruct;
- (void)downloadDidFinish:(id)arg1;
- (id)_moveExtractedContentInPath:(id)arg1;
- (id)_moveContentsOfDirectory:(id)arg1 toDirectory:(id)arg2;
- (id)_fileNameFromPath:(id)arg1;
- (void)_openExtractedSampleAtPath:(id)arg1;
- (void)_openExtractedPlaygroundAtPath:(id)arg1;
- (void)_openExtractedProjectInPath:(id)arg1;
- (void)beginDownload;
- (void)cleanUp;
- (void)downloadDidBegin:(id)arg1;

@end

@interface IDEDocSampleCodeUtilities : NSObject
{
}

+ (void)downloadAndOpenPlaygroundArchiveAtURL:(id)arg1 title:(id)arg2 originWindow:(id)arg3;
+ (void)downloadAndOpenSampleCodeArchiveAtURL:(id)arg1 title:(id)arg2 originWindow:(id)arg3;
+ (id)URLForDownloadableNavigableItemOfType:(unsigned long long)arg1 forNode:(id)arg2 foundInNode:(id *)arg3;
+ (id)_downloadURLsForType:(unsigned long long)arg1 fromDictionary:(id)arg2;

@end

@interface IDEDocSearchController : NSObject
{
    NSArray *_frameworkFilteredTokenResults;
    NSArray *_extraTokenResults;
    NSMutableArray *_inflightTextResults;
    NSArray *_finalTextResults;
    NSMutableArray *_tokenResults;
    DSMQuery *_currentQuery;
    DSMQuery *_textQuery;
    BOOL _includeFullText;
    DVTPerformanceMetric *_perfMetric;
    CDUnknownBlockType _completionBlock;
}

@property(copy) CDUnknownBlockType completionBlock; // @synthesize completionBlock=_completionBlock;
- (void).cxx_destruct;
- (void)beginSearchingWithSearchString:(id)arg1 useFastTokenCache:(BOOL)arg2 includeFullTextResults:(BOOL)arg3 perfMetric:(id)arg4 completionBlock:(CDUnknownBlockType)arg5;
- (void)_beginQuery:(id)arg1 useFastTokenCache:(BOOL)arg2;
- (void)extractTokenScopeFromSearchString:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)beginSearchWithQuery:(id)arg1 useTokenCache:(BOOL)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)primeSearchIndexes;
- (void)_prepareSearch;
- (void)docSets:(id)arg1 didFindTextSearchResults:(id)arg2 isFinished:(BOOL)arg3 contextInfo:(void *)arg4;
- (void)docSets:(id)arg1 didFindTokenSearchResults:(id)arg2 isFinished:(BOOL)arg3 contextInfo:(void *)arg4;
- (void)processTokenResults:(id)arg1 updateResults:(BOOL)arg2;
- (void)_updateResultsFinished;
- (id)docSetsForSearch;
- (id)frameworksReferencedInActiveWorkspace;
- (id)_normalizedFamilyIdentifier:(id)arg1;
- (id)activeWorkspaceWindowController;

@end

@interface IDEDocSearchFieldEditor : NSObject
{
}

+ (id)fieldEditorForToolbarSearchTextField;

@end

@interface IDEDocSearchField_FieldEditor : NSTextView
{
    id <IDEDocSearchField_FieldEditorProtocol> _searchFieldEditorDelegate;
}

@property id <IDEDocSearchField_FieldEditorProtocol> searchFieldEditorDelegate; // @synthesize searchFieldEditorDelegate=_searchFieldEditorDelegate;
- (void)doCommandBySelector:(SEL)arg1;
- (void)insertTab:(id)arg1;
- (void)insertNewline:(id)arg1;
- (void)moveDown:(id)arg1;
- (void)moveUp:(id)arg1;
- (void)complete:(id)arg1;
- (void)keyDown:(id)arg1;

@end

@interface IDEDocSearchOptionsViewController : DVTViewController
{
    NSButtonCell *_automaticOption;
    NSButtonCell *_allOption;
    NSButtonCell *_iOSOption;
    NSButtonCell *_OSXOption;
    NSMatrix *_optionsMatrix;
}

+ (BOOL)useOSXSDKs;
+ (BOOL)useiOSSDKs;
+ (BOOL)useAllSDKs;
+ (BOOL)useSDKsForActiveWorkspace;
+ (void)initialize;
@property __weak NSMatrix *optionsMatrix; // @synthesize optionsMatrix=_optionsMatrix;
@property __weak NSButtonCell *OSXOption; // @synthesize OSXOption=_OSXOption;
@property __weak NSButtonCell *iOSOption; // @synthesize iOSOption=_iOSOption;
@property __weak NSButtonCell *allOption; // @synthesize allOption=_allOption;
@property __weak NSButtonCell *automaticOption; // @synthesize automaticOption=_automaticOption;
- (void).cxx_destruct;
- (void)optionChanged:(id)arg1;
- (void)refresh;
- (void)viewDidInstall;

@end

@interface IDEDocSearchResult : NSObject
{
    DSANode *_searchResultNode;
    DSATextSearchResult *_textResult;
    DSMQuery *_searchQuery;
    NSURL *_overrideURL;
}

+ (id)searchResultForTextResult:(id)arg1 overrideURL:(id)arg2 fromQuery:(id)arg3;
+ (id)searchResultForTextResult:(id)arg1 fromQuery:(id)arg2;
+ (id)searchResultForNode:(id)arg1 fromQuery:(id)arg2;
@property(copy) NSURL *overrideURL; // @synthesize overrideURL=_overrideURL;
@property(retain) DSMQuery *searchQuery; // @synthesize searchQuery=_searchQuery;
@property(retain) DSATextSearchResult *textResult; // @synthesize textResult=_textResult;
@property(retain) DSANode *searchResultNode; // @synthesize searchResultNode=_searchResultNode;
- (void).cxx_destruct;
- (id)childItems;
- (id)description;
@property(readonly, copy) NSURL *URL;
@property(readonly, copy) NSString *displayName;
@property(readonly, copy) NSArray *children;

@end

@interface IDEDocSearchResultTableHeaderGroup : NSObject
{
    BOOL _isSeparator;
    BOOL _isSelectable;
    BOOL _isShowMoreRow;
    NSString *_identifier;
    NSString *_displayName;
    NSArray *_allGroupResults;
    NSArray *_displayedResults;
    IDEDocSearchResultsGroup *_representedGroup;
}

+ (id)defaultTextColor;
+ (id)separatorGroup;
@property(retain) IDEDocSearchResultsGroup *representedGroup; // @synthesize representedGroup=_representedGroup;
@property(copy) NSArray *displayedResults; // @synthesize displayedResults=_displayedResults;
@property(copy) NSArray *allGroupResults; // @synthesize allGroupResults=_allGroupResults;
@property BOOL isShowMoreRow; // @synthesize isShowMoreRow=_isShowMoreRow;
@property BOOL isSelectable; // @synthesize isSelectable=_isSelectable;
@property BOOL isSeparator; // @synthesize isSeparator=_isSeparator;
@property(copy) NSString *displayName; // @synthesize displayName=_displayName;
@property(copy) NSString *identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;

@end

@interface IDEDocSearchResultTableRowView : NSTableRowView
{
    BOOL mouseInside;
    BOOL _representsSelectableRow;
    BOOL _representsSeparatorRow;
}

@property BOOL representsSeparatorRow; // @synthesize representsSeparatorRow=_representsSeparatorRow;
@property BOOL representsSelectableRow; // @synthesize representsSelectableRow=_representsSelectableRow;
- (void)setFrame:(struct CGRect)arg1;
- (void)drawSeparatorInRect:(struct CGRect)arg1;
- (void)drawSelectionInRect:(struct CGRect)arg1;
- (long long)selectionHighlightStyle;
@property BOOL mouseInside; // @dynamic mouseInside;

@end

@interface IDEDocSearchResultsContext : NSObject
{
    NSArray *_resultsGroups;
    NSString *_searchString;
    BOOL _valid;
    unsigned long long _resultsCount;
    NSArray *_frameworkTokens;
    NSArray *_extraTokens;
    NSArray *_textResults;
    DSMQuery *_query;
}

+ (id)contextForQuery:(id)arg1 frameworkFilteredTokens:(id)arg2 extraTokens:(id)arg3 textResults:(id)arg4 tokenSortKey:(id)arg5 maximumTextResults:(unsigned long long)arg6 perfMetric:(id)arg7;
+ (id)old_contextForQuery:(id)arg1 frameworkFilteredTokens:(id)arg2 extraTokens:(id)arg3 textResults:(id)arg4 tokenSortKey:(id)arg5 maximumTextResults:(unsigned long long)arg6 perfMetric:(id)arg7;
+ (id)topTokenHitsFromAllTokens:(id)arg1 queryString:(id)arg2;
+ (id)sortedTokensPreferringExactMatches:(id)arg1 sortKey:(id)arg2 queryString:(id)arg3;
+ (id)sortedTokens:(id)arg1 withSortKey:(id)arg2 queryString:(id)arg3;
+ (BOOL)showMultipleTopHits;
+ (unsigned long long)maxDisplayedSearchResults;
+ (void)initialize;
@property(retain) DSMQuery *query; // @synthesize query=_query;
@property(retain) NSArray *textResults; // @synthesize textResults=_textResults;
@property(retain) NSArray *extraTokens; // @synthesize extraTokens=_extraTokens;
@property(retain) NSArray *frameworkTokens; // @synthesize frameworkTokens=_frameworkTokens;
@property(nonatomic) unsigned long long resultsCount; // @synthesize resultsCount=_resultsCount;
@property(getter=isValid) BOOL valid; // @synthesize valid=_valid;
@property(copy) NSString *searchString; // @synthesize searchString=_searchString;
@property(copy) NSArray *resultsGroups; // @synthesize resultsGroups=_resultsGroups;
- (void).cxx_destruct;
- (id)resultsGroupWithIdentifier:(id)arg1;
- (void)sortAPIResultsWithKey:(id)arg1;
@property(readonly, copy) NSArray *childItems;

@end

@interface IDEDocSearchResultsController : NSObject
{
    IDEDocSearchResultsWindowController *_searchResultsWindowController;
    IDEDocSearchController *_searchController;
    DSMQuery *_returnedQuery;
    NSArray *_frameworkFilteredTokenResults;
    NSArray *_extraTokenResults;
    NSArray *_textResults;
    IDEDocSearchTextField *_hostTextField;
    NSTimer *_searchTimer;
    DVTPerformanceMetric *_perfMetric;
}

- (void).cxx_destruct;
- (void)fieldEditorDidInsertTab:(id)arg1;
- (void)fieldEditorDidComplete:(id)arg1;
- (void)fieldEditorDidMoveUp:(id)arg1;
- (void)fieldEditorDidMoveDown:(id)arg1;
- (void)selectSearchResultOrShowResultsPanel:(id)arg1 searchFieldString:(id)arg2;
- (void)updateResultsWithString:(id)arg1 relativeToTextField:(id)arg2;
- (void)_updateResultsFromTimer:(id)arg1;
- (void)primeSearchIndexes;
- (void)closeResultsPanel;
- (void)updateResultsInPanel;
- (void)showPanelFromFieldEditor;
- (void)showResultsPanel;
- (void)prepareResultsPanel;
- (id)init;

@end

@interface IDEDocSearchResultsDisplayPropertiesGenerator : NSObject
{
}

+ (unsigned long long)lineBreakMode;
+ (id)matchAttributes;
+ (id)_underlineHighlightColor;
+ (id)_backgroundHighlightColor;
+ (id)findResultsImageForToken:(id)arg1;
+ (id)_sourceSymbolKindForToken:(id)arg1;
+ (id)imageForSearchResult:(id)arg1;
+ (id)imagePathForResult:(id)arg1;
+ (id)_imageForNode:(id)arg1;
+ (id)genericReferenceImage;
+ (id)playgroundImage;
+ (id)sampleCodeImage;
+ (id)bookmarkImage;
+ (id)genericBookImage;
+ (id)attributedStringForResult:(id)arg1 rowHighlighted:(BOOL)arg2 searchString:(id)arg3 includeTokenScope:(BOOL)arg4;
+ (id)URLForResult:(id)arg1;
+ (id)attributedStringForResult:(id)arg1 rowHighlighted:(BOOL)arg2 searchString:(id)arg3;
+ (id)tokenScopeAttributedString:(id)arg1 textColor:(id)arg2;
+ (BOOL)isTokenDeprecated:(id)arg1;
+ (id)font;

@end

@interface IDEDocSearchResultsGroup : NSObject
{
    BOOL isDisclosable;
    BOOL showsSortMenu;
    BOOL _displaysAllResults;
    NSString *groupIdentifier;
    NSArray *searchResults;
    NSString *displayName;
    NSString *queryString;
}

+ (id)resultsGroupWithGroupIdentifier:(id)arg1 searchResults:(id)arg2 displayName:(id)arg3 queryString:(id)arg4 isDisclosable:(BOOL)arg5 showsSortMenu:(BOOL)arg6;
@property BOOL displaysAllResults; // @synthesize displaysAllResults=_displaysAllResults;
@property BOOL showsSortMenu; // @synthesize showsSortMenu;
@property BOOL isDisclosable; // @synthesize isDisclosable;
@property(copy) NSString *queryString; // @synthesize queryString;
@property(copy) NSString *displayName; // @synthesize displayName;
@property(copy) NSArray *searchResults; // @synthesize searchResults;
@property(copy) NSString *groupIdentifier; // @synthesize groupIdentifier;
- (void).cxx_destruct;
- (id)childItems;

@end

@interface IDEDocSearchResultsHTMLPageGenerator : NSObject
{
    IDEDocSearchController *_searchController;
    IDEDocSearchResultsContext *_resultsContext;
    NSString *_rootOutputDirectory;
}

- (void).cxx_destruct;
- (id)HTMLTemplate;
- (void)_generateHTMLPageForGroup:(id)arg1 outputPath:(id)arg2;
- (id)_chooserViewForResultsContext:(id)arg1 forGroup:(id)arg2;
- (id)_tableRowForResultWithTitle:(id)arg1 URL:(id)arg2 iconPath:(id)arg3 abstract:(id)arg4 scope:(id)arg5 availability:(id)arg6;
- (void)generateHTMLPagesForResultsContext:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (id)_pathToGeneratedHTMLForGroupWithIdentifier:(id)arg1;

@end

@interface IDEDocSearchResultsWindowController : NSWindowController <NSTableViewDataSource, NSTableViewDelegate>
{
    NSArray *_searchResults;
    NSArray *_resultGroups;
    DSMQuery *_currentQuery;
    IDEDocSearchField_FieldEditor *_fieldEditor;
    NSTrackingArea *_trackingArea;
    IDEDocSearchResultsContext *_resultsContext;
    id _topHit;
    DVTPerformanceMetric *_perfMetric;
    unsigned long long _defaultSelectedRowIndex;
    DVTTableView *_resultsTableView;
    struct CGSize _hostWindowSize;
}

@property struct CGSize hostWindowSize; // @synthesize hostWindowSize=_hostWindowSize;
@property DVTTableView *resultsTableView; // @synthesize resultsTableView=_resultsTableView;
- (void).cxx_destruct;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3;
- (void)tableView:(id)arg1 didAddRowView:(id)arg2 forRow:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)updateWithFrameworkFilteredTokenResults:(id)arg1 extraTokenResults:(id)arg2 textResults:(id)arg3 fromQuery:(id)arg4 perfMetric:(id)arg5;
- (void)willBeginSearching;
- (void)updateResultsWithContext:(id)arg1;
- (id)bookmarksMatchingString:(id)arg1;
- (void)_tableViewAction:(id)arg1;
- (void)fieldEditorInsertNewLine:(id)arg1;
- (void)loadContentForClickedRow:(long long)arg1;
- (void)showAllResults;
- (void)reloadDataAndResetHoverRows;
- (void)close;
- (void)_loadContentForSearchResult:(id)arg1;
- (void)fieldEditorDidInsertTab:(id)arg1;
- (void)fieldEditorDidMoveDown:(id)arg1;
- (void)fieldEditorDidMoveUp:(id)arg1;
- (long long)_rowOfPreviousSelectableItemInTableRelativeToRow:(long long)arg1;
- (long long)_rowOfNextSelectableItemInTableRelativeToRow:(long long)arg1;
- (long long)_rowOfFirstSelectableItemInTable;
- (BOOL)_isItemSeparatorRow:(id)arg1;
- (BOOL)_isItemSelectable:(id)arg1;
- (void)_resetSelectedRowViewHoverState:(long long)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)mouseMoved:(id)arg1;
- (void)_updateWindowSizeToFitTable;
- (void)_updateWindowSizeForEmptyTable;
@property(readonly) BOOL isSelectableTableRowSelectedOrMousedOver;
- (void)loadWindow;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEDocSearchTextField : NSTextField
{
    NSProgressIndicator *_progressSpinner;
    NSButton *_searchButton;
    NSTextField *_SDKLabel;
    NSPopover *_popover;
    struct CGRect _lastKnownWindowFrame;
}

- (void).cxx_destruct;
- (void)viewDidMoveToWindow;
- (void)stopSpinner;
- (void)startSpinner;
- (void)resizeSubviewsWithOldSize:(struct CGSize)arg1;
- (void)_positionProgressSpinner;
- (void)_positionSearchButton;
- (void)showOptions:(id)arg1;
- (void)awakeFromNib;

@end

@interface IDEDocSearchTextFieldCell : NSTextFieldCell
{
}

- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (struct CGRect)drawingRectForBounds:(struct CGRect)arg1;

@end

@interface IDEDocShareURLGenerator : NSObject
{
}

+ (id)xcdocURLForQueryString:(id)arg1;
+ (id)xcdocURLForURL:(id)arg1;

@end

@interface IDEDocSymbolUtilities : NSObject
{
    CDUnknownBlockType _queryInfoFromIndexSymbolHandlerBlock;
}

+ (id)typeForSymbolKind:(id)arg1 inContainerWithSymbolKind:(id)arg2;
+ (id)typeForSymbol:(id)arg1;
- (void).cxx_destruct;
- (id)queryInfoFromIndexSymbol:(id)arg1;
- (id)_adoptedProtocolsForIndexSymbol:(id)arg1;
- (id)_inheritanceHierarchyForIndexSymbol:(id)arg1;
- (void)queryInfoFromIndexSymbol:(id)arg1 resultQueue:(id)arg2 handlerBlock:(CDUnknownBlockType)arg3;

@end

@interface IDEDocTabbedWindowController : NSWindowController <DVTTabbedWindowControlling, NSTextFieldDelegate, NSWindowDelegate, IDEDocSearchField_FieldEditorProtocol, DVTStatefulObject, DVTStateRepositoryDelegate, NSToolbarDelegate, IDEDocTabbedWindowControllerProtocol, IDEEditorMenuContentProvider>
{
    DVTObservingToken *_activeTabViewControllerObservingToken;
    DVTObservingToken *_tabLabelWatcher;
    DVTObservingToken *_inactiveTabLabelWatcher;
    DVTObservingToken *_sidebarVisibleWatcher;
    DVTObservingToken *_tableOfContentsVisibleWatcher;
    DVTObservingToken *_firstResponderWatcher;
    IDEDocSearchResultsController *_toolbarSearchResultsController;
    id _searchFieldEditor;
    NSMutableArray *_stateChangeObservingTokens;
    NSMenu *_viewToolbarItemMenu;
    NSURL *_pdfURL;
    NSToolbarItem *_searchToolbarItem;
    IDEDocToolbarItem *_backForwardToolbarItem;
    id _webViewProgressFinishedWatcher;
    NSMapTable *_restoredTabsWebViewProgressWatchers;
    IDEDocSearchController *_searchResultsPageSearchController;
    IDEDocWebHistoryMenu *_webBackHistoryMenu;
    IDEDocWebHistoryMenu *_webForwardHistoryMenu;
    id _windowDidOrderOffWatcher;
    id _windowDidResignWatcher;
    NSButton *_toolbar_tableOfContentsButton;
    NSToolbarItem *_toolbarItem_tableOfContents;
    NSButton *_toolbar_showNavigatorButton;
    NSButton *_toolbar_shareButton;
    BOOL _showToolbar;
    BOOL _enteringFullScreenMode;
    BOOL _exitingFullScreenMode;
    BOOL _fullScreenTabBarAlwaysVisible;
    BOOL _keepTabBarHiddenWhenCreatingTab;
    BOOL _readyToUpdateKeyboardLoop;
    BOOL _canOpenPDF;
    BOOL _canOpenIBook;
    BOOL _canOpenPlayground;
    BOOL _createNewTabUponLoadIfNoTabsExist;
    IDEDocDocumentationTabViewController *_activeDocumentationTabController;
    DVTBarBackground *_tabBarView;
    NSTabView *_tabView;
    DVTTabBarEnclosureView *_tabBarEnclosureView;
    IDECustomToolbar *_toolbar;
    NSTextField *_toolbarSearchTextField;
    NSSegmentedControl *_toolbar_backForward;
    NSToolbarItem *_toolbar_ShareItem;
    NSArray *_topLevelViewOrder;
    NSMapTable *_viewHeightsForResizing;
    NSSearchField *_searchTextField;
    DVTStateToken *_stateToken;
    DVTDelayedInvocation *_stateSavingInvocation;
    DVTStateRepository *_stateRepository;
    NSString *_currentSearchString;
    struct CGRect _windowFrameBeforeFullScreen;
}

+ (long long)version;
+ (void)configureStateSavingObjectPersistenceByName:(id)arg1;
@property(copy) NSString *currentSearchString; // @synthesize currentSearchString=_currentSearchString;
@property(retain) DVTStateRepository *stateRepository; // @synthesize stateRepository=_stateRepository;
@property(retain) DVTDelayedInvocation *stateSavingInvocation; // @synthesize stateSavingInvocation=_stateSavingInvocation;
@property(retain) DVTStateToken *stateToken; // @synthesize stateToken=_stateToken;
@property BOOL createNewTabUponLoadIfNoTabsExist; // @synthesize createNewTabUponLoadIfNoTabsExist=_createNewTabUponLoadIfNoTabsExist;
@property(retain) NSSearchField *searchTextField; // @synthesize searchTextField=_searchTextField;
@property BOOL canOpenPlayground; // @synthesize canOpenPlayground=_canOpenPlayground;
@property BOOL canOpenIBook; // @synthesize canOpenIBook=_canOpenIBook;
@property BOOL canOpenPDF; // @synthesize canOpenPDF=_canOpenPDF;
@property(copy) NSMapTable *viewHeightsForResizing; // @synthesize viewHeightsForResizing=_viewHeightsForResizing;
@property(copy) NSArray *topLevelViewOrder; // @synthesize topLevelViewOrder=_topLevelViewOrder;
@property struct CGRect windowFrameBeforeFullScreen; // @synthesize windowFrameBeforeFullScreen=_windowFrameBeforeFullScreen;
@property BOOL readyToUpdateKeyboardLoop; // @synthesize readyToUpdateKeyboardLoop=_readyToUpdateKeyboardLoop;
@property BOOL keepTabBarHiddenWhenCreatingTab; // @synthesize keepTabBarHiddenWhenCreatingTab=_keepTabBarHiddenWhenCreatingTab;
@property BOOL fullScreenTabBarAlwaysVisible; // @synthesize fullScreenTabBarAlwaysVisible=_fullScreenTabBarAlwaysVisible;
@property BOOL exitingFullScreenMode; // @synthesize exitingFullScreenMode=_exitingFullScreenMode;
@property BOOL enteringFullScreenMode; // @synthesize enteringFullScreenMode=_enteringFullScreenMode;
@property(nonatomic) BOOL showToolbar; // @synthesize showToolbar=_showToolbar;
@property __weak NSToolbarItem *toolbar_ShareItem; // @synthesize toolbar_ShareItem=_toolbar_ShareItem;
@property NSSegmentedControl *toolbar_backForward; // @synthesize toolbar_backForward=_toolbar_backForward;
@property NSTextField *toolbarSearchTextField; // @synthesize toolbarSearchTextField=_toolbarSearchTextField;
@property IDECustomToolbar *toolbar; // @synthesize toolbar=_toolbar;
@property DVTTabBarEnclosureView *tabBarEnclosureView; // @synthesize tabBarEnclosureView=_tabBarEnclosureView;
@property NSTabView *tabView; // @synthesize tabView=_tabView;
@property(retain, nonatomic) DVTBarBackground *tabBarView; // @synthesize tabBarView=_tabBarView;
@property(retain) IDEDocDocumentationTabViewController *activeDocumentationTabController; // @synthesize activeDocumentationTabController=_activeDocumentationTabController;
- (void).cxx_destruct;
- (id)extensionForMenuContent;
- (void)toolbarWillAddItem:(id)arg1;
- (id)toolbar:(id)arg1 itemForItemIdentifier:(id)arg2 willBeInsertedIntoToolbar:(BOOL)arg3;
- (id)toolbarDefaultItemIdentifiers:(id)arg1;
- (id)toolbarAllowedItemIdentifiers:(id)arg1;
- (void)_shareSegmentStateDidChange:(id)arg1;
- (void)_backForwardSegmentStateDidChange:(id)arg1;
- (void)_sideBarsSegmentStateDidChange:(id)arg1;
- (id)URLForCurrentDocumentOfDownloadableType:(unsigned long long)arg1 foundInNode:(id *)arg2;
- (void)scrollWheel:(id)arg1;
- (BOOL)wantsScrollEventsForSwipeTrackingOnAxis:(long long)arg1;
- (void)swipeWithEvent:(id)arg1;
- (void)_jumpToCounterpartUp:(BOOL)arg1;
- (void)_swipeToGoForward:(BOOL)arg1;
- (id)_stateRepositoryFilePath;
- (BOOL)_loadStateData:(id *)arg1;
- (BOOL)_saveStateData:(id *)arg1;
- (void)stateRepositoryDidChange:(id)arg1;
- (void)revertStateWithDictionary:(id)arg1;
- (void)commitStateToDictionary:(id)arg1;
- (void)_configureStateSavingObservers;
- (void)toolbarSearchField_FieldEditorDidComplete:(id)arg1;
- (void)toolbarSearchField_FieldEditorInsertTab:(id)arg1;
- (void)toolbarSearchField_FieldEditorInsertNewLine:(id)arg1;
- (void)toolbarSearchField_FieldEditorDidMoveUp:(id)arg1;
- (void)toolbarSearchField_FieldEditorDidMoveDown:(id)arg1;
- (void)endEditingFor:(id)arg1;
- (id)fieldEditorStringValue;
- (id)windowWillReturnFieldEditor:(id)arg1 toObject:(id)arg2;
- (void)showWindow:(id)arg1;
- (void)showWindow:(id)arg1 focusSearchField:(BOOL)arg2;
- (void)loadURL:(id)arg1;
- (void)loadURL:(id)arg1 inNewTab:(BOOL)arg2;
- (void)showContinuousIntegrationGuide;
- (void)showSourceControlGuide;
- (void)showGDBToLLDBTransitionGuide;
- (void)showWhatsNewInXcode;
- (void)showXcodeReleaseNotes;
- (void)showXcodeUserGuide;
- (void)showXcodeHelpGuides;
- (void)showXcodeHomePage;
- (void)goBackInHistoryByCommand:(id)arg1;
- (void)goForwardInHistoryByCommand:(id)arg1;
@property(readonly) NSString *selectedTextInWebView;
- (void)setSplitterPosition:(double)arg1;
@property(readonly) double splitterPosition;
@property(readonly) BOOL isSidebarVisible;
- (void)useSelectionForFind:(id)arg1;
- (void)focusSearchField:(id)arg1;
- (void)findPrevious:(id)arg1;
- (void)findNext:(id)arg1;
- (void)makeNewTab:(id)arg1;
@property(readonly) BOOL hasMultipleTabs;
- (void)selectNextTab:(id)arg1;
- (void)selectPreviousTab:(id)arg1;
- (void)find:(id)arg1;
- (void)hideFindBar:(id)arg1;
- (void)moveKeyboardFocusToNextArea:(id)arg1;
- (void)findInWorkspace:(id)arg1;
- (void)openQuicklyScoped:(id)arg1;
- (void)idedoc_revealInLibrary:(id)arg1;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)_updateCustomToolbarItems;
- (BOOL)URLRepresentsSearchResultsPage:(id)arg1;
- (void)shareButton_openPlayground:(id)arg1;
- (void)shareButton_openIBook:(id)arg1;
- (void)shareButton_openPDF:(id)arg1;
- (void)shareButton_addBookmark:(id)arg1;
- (void)shareButton_emailURL:(id)arg1;
- (void)shareButton_messageURL:(id)arg1;
- (id)_shareURLForMailOrMessage;
- (id)_shareURLForBookmark;
- (void)shareButton_openInBrowser:(id)arg1;
- (void)updateToolbarState;
@property(readonly) BOOL canGoBack;
@property(readonly) BOOL canGoForward;
@property(readonly) BOOL canMakeTextStandardSize;
@property(readonly) BOOL canZoomOut;
@property(readonly) BOOL canZoomIn;
- (void)showLibrary:(id)arg1;
- (void)showBookmarks:(id)arg1;
- (void)documentation_toggleTableOfContents:(id)arg1;
- (void)documentation_toggleNavigator:(id)arg1;
- (void)makeTextStandardSize:(id)arg1;
- (void)zoomIn:(id)arg1;
- (void)zoomOut:(id)arg1;
- (void)toolbar_backForward:(id)arg1;
- (void)goForward:(id)arg1;
- (void)goBack:(id)arg1;
- (void)selectHistoryItem:(id)arg1;
- (void)showFullResultsPageForHelpMenuSearchString:(id)arg1;
- (void)showFullResultsPageForSearchString:(id)arg1;
- (void)makeNewTabAndLoadURL:(id)arg1;
- (void)_configureActiveTabController:(id)arg1;
- (void)setWindowTitleFromTabViewController:(id)arg1;
- (void)clearSearchField;
- (void)executeSearchForString:(id)arg1;
- (void)closeResultsPanelAndClearSearchField;
- (void)controlTextDidChange:(id)arg1;
- (void)controlTextDidBeginEditing:(id)arg1;
- (void)controlTextDidEndEditing:(id)arg1;
- (void)_searchWithString:(id)arg1;
- (void)showAllResultsInContext:(id)arg1;
- (void)close;
- (void)windowDidLoad;
- (void)_updateToolbarIsVisible;
- (void)toggleToolbarShown:(id)arg1;
- (BOOL)isEnteringOrInFullScreenMode;
- (BOOL)isInFullScreenMode;
@property(readonly) BOOL moreThanOneTabShowing;
- (BOOL)closeKeyEquivalentClosesTab;
- (void)_closeWindowIfNoTabs;
- (void)_closeTabWithoutConfirming:(id)arg1 andInvalidate:(BOOL)arg2;
- (void)_closeTabWithoutConfirming:(id)arg1;
- (double)tabBarHeight;
- (void)_collectViewInfoForResizing;
- (double)_originalHeightForView:(id)arg1;
- (void)moveTabFromOtherWindow:(id)arg1 toIndex:(unsigned long long)arg2 andSelect:(BOOL)arg3;
- (void)replaceEmptyTabWithTabs:(id)arg1;
- (void)_closeOtherTabsWithoutConfirming:(id)arg1;
- (void)closeOtherTabs:(id)arg1;
- (void)closeTabOrWindow:(id)arg1;
- (void)closeTab:(id)arg1;
- (void)_selectNextTabGoingForward:(BOOL)arg1;
- (void)moveTabToNewWindowFromMenu:(id)arg1;
- (void)closeOtherTabsFromMenu:(id)arg1;
- (void)closeCurrentTab:(id)arg1;
@property(readonly) BOOL canCloseSelectedTab;
- (BOOL)_canCloseTab:(id)arg1;
- (void)closeTabFromMenu:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (id)_findTabForView:(id)arg1;
- (void)selectTab:(id)arg1;
- (id)_showTab:(id)arg1;
- (id)_setUpTabForViewController:(id)arg1 atIndex:(unsigned long long)arg2;
- (id)_setUpTabForViewController:(id)arg1 addToRightSide:(BOOL)arg2;
- (id)_setUpTabForViewController:(id)arg1;
- (id)_createTabWithViewController:(id)arg1 atIndex:(unsigned long long)arg2 andShow:(BOOL)arg3;
- (id)createTabWithViewController:(id)arg1 andShow:(BOOL)arg2 addToRightSide:(BOOL)arg3;
- (id)createInactiveTabWithFrameName:(id)arg1;
- (id)createInactiveTab;
- (id)createTabWithFrameName:(id)arg1 andShow:(BOOL)arg2 addToRightSide:(BOOL)arg3 withUUID:(id)arg4;
- (id)createTabWithFrameName:(id)arg1 andShow:(BOOL)arg2 addToRightSide:(BOOL)arg3;
- (id)createNewDocumentationTabViewControllerWithUUID:(id)arg1;
- (id)createTabWithFrameName:(id)arg1;
- (id)createTab;
- (id)createTabRespectingIDENewTabActivationPreference;
- (unsigned long long)selectedTabIndex;
- (id)selectedTab;
- (id)orderedTabViewItems;
- (void)_toggleTabBarWithAnimation:(BOOL)arg1 isShowing:(BOOL)arg2 forceMaintainFullHeight:(BOOL)arg3;
- (void)_toggleTabBarWithAnimation:(BOOL)arg1 isShowing:(BOOL)arg2;
- (void)_toggleTabBarWithAnimation:(BOOL)arg1;
- (id)_screenForWindow;
- (id)_setAutoresizingMasksForOrderedViews:(id)arg1 toResizeOnly:(id)arg2;
- (void)_showTabBarIfNeeded;
- (void)setTabBarVisible:(BOOL)arg1;
- (BOOL)isTabBarVisible;
- (void)cancelUpdateTabTitlesSoon;
- (void)tabBarViewUpdateTabTitlesNow;
- (void)tabBarViewUpdateTabTitlesSoon;
- (struct CGRect)adjustedFrameForCascade:(struct CGRect)arg1 fromWindow:(id)arg2;
- (struct CGRect)adjustedFrameForSaving:(struct CGRect)arg1;
- (BOOL)canReceiveDragFromTabbedWindowControlling:(id)arg1;
- (BOOL)canCreateNewTab;
- (void)toggleTabBar:(id)arg1;
- (id)_newTabWithName:(id)arg1 andShow:(BOOL)arg2 withInstalledTabControllerBlock:(CDUnknownBlockType)arg3;
- (id)newTabWithName:(id)arg1;
- (id)_uniqueNameForNewWorkspaceTabController;
- (void)newTabWithinWindow:(id)arg1;
- (void)newTab:(id)arg1;
- (void)_updateAuxiliaryToolbarViewSizes;
@property(readonly) BOOL _shouldShowTabBar;
- (void)_setTabBarVisible:(BOOL)arg1;
- (BOOL)_alwaysShowTabBar;
- (void)_prepareBarsToExitFullScreen;
- (void)_prepareBarsToEnterFullScreen;
- (void)didExitFullScreenMode:(id)arg1;
- (void)willExitFullScreenMode:(id)arg1;
- (void)willEnterFullScreenMode:(id)arg1;
- (void)didEnterFullScreenMode:(id)arg1;
- (void)_removeFullScreenNotificationObservers;
- (void)_setupFullScreenNotifications;
- (BOOL)_windowIsFullHeight;
- (void)_setUpTabBar;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEDocToolbarItem : NSToolbarItem
{
    unsigned int _handledMouseDownModifiersMask;
}

@property unsigned int handledMouseDownModifiersMask; // @synthesize handledMouseDownModifiersMask=_handledMouseDownModifiersMask;
- (BOOL)_allowToolbarToStealEvent:(id)arg1;
- (BOOL)_viewMightProcessModifiedMouseDownEvent;

@end

@interface IDEDocViewerDocument : IDEEditorDocument
{
}

+ (BOOL)autosavesInPlace;
+ (BOOL)shouldUnlockFileURLBeforeMakingChanges;
- (int)readOnlyStatus;
- (id)dataOfType:(id)arg1 error:(id *)arg2;
- (BOOL)readFromURL:(id)arg1 ofType:(id)arg2 error:(id *)arg3;

@end

@interface IDEDocViewerEditor : IDEEditor
{
}

+ (id)defaultViewNibName;
+ (BOOL)canProvideCurrentSelectedItems;

@end

@interface IDEDocViewerMain : NSObject <NSUserInterfaceItemSearching, IDEInitialization>
{
    DVTObservingToken *_downloadablesWatcher;
}

+ (BOOL)ide_initializeWithOptions:(int)arg1 error:(id *)arg2;
- (void).cxx_destruct;
- (void)showAllHelpTopicsForSearchString:(id)arg1;
- (void)performActionForItem:(id)arg1;
- (id)localizedTitlesForItem:(id)arg1;
- (void)searchForItemsWithSearchString:(id)arg1 resultLimit:(long long)arg2 matchedItemHandler:(CDUnknownBlockType)arg3;
- (void)descendantsOfTextResult:(id)arg1 descendants:(id)arg2;
- (id)queryWithSearchString:(id)arg1 docSet:(id)arg2;
- (void)applicationDidResignActive:(id)arg1;
- (void)applicationDidBecomeActive:(id)arg1;
- (double)_docSetDownloadCheckDelay;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEDocWebHistoryMenu : NSMenu
{
    WebView *m_webView;
    BOOL m_isForwardList;
}

+ (id)historyMenuWithWebView:(id)arg1 isForwardList:(BOOL)arg2;
@property(nonatomic) BOOL isForwardList; // @synthesize isForwardList=m_isForwardList;
@property(retain, nonatomic) WebView *webView; // @synthesize webView=m_webView;
- (void).cxx_destruct;
- (void)update;
- (void)_backList;
- (void)_forwardList;
- (void)webViewSelectHistoryItem:(id)arg1;
- (void)webViewGoForward:(id)arg1;
- (void)webViewGoBack:(id)arg1;
- (id)initWithWebView:(id)arg1 isForwardList:(BOOL)arg2;

@end

@interface IDEDocWebViewContentViewController : DVTViewController <NSPopoverDelegate, DOMEventListener, NSSplitViewDelegate, WebFrameLoadDelegate, WebPolicyDelegate, WebUIDelegate, WebResourceLoadDelegate, IDEDocContentView>
{
    double _cumulativeMagnifyDelta;
    short _stickyTextMagnifyGestureDirection;
    float _textSizeMultiplierAtGestureStart;
    id _bookmarksChangedWatcher;
    NSString *_redirectHash;
    DVTObservingToken *_contentOutlineViewWatcher;
    DVTSplitViewItem *_tocSplitViewItem;
    BOOL _tableOfContentsVisible;
    IDEDocContentAreaViewController *_hostContentAreaViewController;
    WebView *_webView;
    DVTReplacementView *_headerReplacementView;
    NSView *_webViewContainerView;
    DVTSplitView *_splitView;
    NSView *_webViewSampleCodeContainerView;
    DVTReplacementView *_tableOfContentsReplacementView;
    DVTBorderedView *_tableOfContentsBorderedView;
}

+ (id)bookmarkOnPressedImage;
+ (id)bookmarkOnOverImage;
+ (id)bookmarkOnImage;
+ (id)bookmarkOffPressedImage;
+ (id)bookmarkOffOverImage;
+ (id)bookmarkOffImage;
+ (id)mainDocumentElementInWebView:(id)arg1;
+ (void)initialize;
+ (id)webViewLoadingLogAspect;
@property(retain) DVTBorderedView *tableOfContentsBorderedView; // @synthesize tableOfContentsBorderedView=_tableOfContentsBorderedView;
@property(retain) DVTReplacementView *tableOfContentsReplacementView; // @synthesize tableOfContentsReplacementView=_tableOfContentsReplacementView;
@property(retain) NSView *webViewSampleCodeContainerView; // @synthesize webViewSampleCodeContainerView=_webViewSampleCodeContainerView;
@property(retain) DVTSplitView *splitView; // @synthesize splitView=_splitView;
@property __weak NSView *webViewContainerView; // @synthesize webViewContainerView=_webViewContainerView;
@property __weak DVTReplacementView *headerReplacementView; // @synthesize headerReplacementView=_headerReplacementView;
@property(getter=isTableOfContentsVisible) BOOL tableOfContentsVisible; // @synthesize tableOfContentsVisible=_tableOfContentsVisible;
@property __weak WebView *webView; // @synthesize webView=_webView;
@property __weak IDEDocContentAreaViewController *hostContentAreaViewController; // @synthesize hostContentAreaViewController=_hostContentAreaViewController;
- (void).cxx_destruct;
- (void)handleEvent:(id)arg1;
- (void)addBookmarkIconsToDocument:(id)arg1;
- (void)updateBookmarksInDocument:(id)arg1;
- (void)setZoomMultiplier:(float)arg1;
- (float)zoomMultiplier;
- (void)magnifyWithEvent:(id)arg1;
- (void)beginGestureWithEvent:(id)arg1;
- (void)haveWorkspaceOpenOrRevealURL:(id)arg1;
- (void)webView:(id)arg1 decidePolicyForMIMEType:(id)arg2 request:(id)arg3 frame:(id)arg4 decisionListener:(id)arg5;
- (void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 request:(id)arg3 frame:(id)arg4 decisionListener:(id)arg5;
- (void)webView:(id)arg1 decidePolicyForNewWindowAction:(id)arg2 request:(id)arg3 newFrameName:(id)arg4 decisionListener:(id)arg5;
- (BOOL)_allowURLRequest:(id)arg1 webView:(id)arg2;
- (void)webView:(id)arg1 didReceiveTitle:(id)arg2 forFrame:(id)arg3;
- (id)webView:(id)arg1 resource:(id)arg2 willSendRequest:(id)arg3 redirectResponse:(id)arg4 fromDataSource:(id)arg5;
- (void)webView:(id)arg1 didFinishLoadForFrame:(id)arg2;
- (void)webView:(id)arg1 didCommitLoadForFrame:(id)arg2;
- (void)webView:(id)arg1 didChangeLocationWithinPageForFrame:(id)arg2;
- (void)_addBookmarkForLoadedURL:(id)arg1;
- (id)bookNodeInFrame:(id)arg1;
- (id)nodeInFrame:(id)arg1;
- (void)webViewContextMenu_openLinkInNewTab:(id)arg1;
- (void)webViewContextMenu_copyLink:(id)arg1;
- (void)webViewContextMenu_findText:(id)arg1;
- (id)webView:(id)arg1 contextMenuItemsForElement:(id)arg2 defaultMenuItems:(id)arg3;
- (unsigned long long)webView:(id)arg1 dragDestinationActionMaskForDraggingInfo:(id)arg2;
- (void)setTableOfContentsSplitterPosition:(double)arg1;
@property(readonly) double tableOfContentsSplitterPosition;
- (void)toggleTOCVisibility;
- (BOOL)splitView:(id)arg1 canCollapseSubview:(id)arg2;
- (BOOL)splitView:(id)arg1 shouldCollapseSubview:(id)arg2 forDoubleClickOnDividerAtIndex:(long long)arg3;
- (double)splitView:(id)arg1 constrainMaxCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(id)arg1 constrainMinCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(id)arg1 constrainSplitPosition:(double)arg2 ofSubviewAt:(long long)arg3;
@property(readonly) NSString *selectedStringInWebView;
- (void)updateContentOutlineViewForURLInFrame:(id)arg1;
- (id)nodeInWebFrame:(id)arg1;
- (void)showReferenceHeaderViewForToken:(id)arg1;
- (void)fixupPlaygroundDownloadLinksForNode:(id)arg1;
- (void)injectSampleCodeDownloadLinkForNode:(id)arg1;
- (void)hideReferenceHeaderView;
- (void)updateHeaderView;
- (void)loadResolvedURL:(id)arg1;
- (id)docSetTokenForReferenceDocumentNode:(id)arg1;
- (id)appleRefOfReferenceDocumentInWebView;
- (void)primitiveInvalidate;
- (void)loadView;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEDocWindow : NSWindow <IDEDocumentationWindow>
{
    BOOL _firstResponderLocked;
    BOOL _isFullScreen;
}

@property(readonly) BOOL isFullScreen; // @synthesize isFullScreen=_isFullScreen;
@property BOOL firstResponderLocked; // @synthesize firstResponderLocked=_firstResponderLocked;
- (void)toggleToolbarShown:(id)arg1;
- (void)keyDown:(id)arg1;
- (BOOL)makeFirstResponder:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEScriptingLoadDocumentationSetWithPath : NSScriptCommand
{
}

- (id)performDefaultImplementation;

@end

@interface IDEScriptingPathForApple_ref : NSScriptCommand
{
}

- (id)performDefaultImplementation;

@end

@interface IDEScriptingPathForDocumentWithUUID : NSScriptCommand
{
}

- (id)performDefaultImplementation;

@end

@interface IDEScriptingShowDocumentWithApple_ref : NSScriptCommand
{
}

- (id)performDefaultImplementation;

@end

@interface IDEScriptingShowDocumentWithUUID : NSScriptCommand
{
}

- (id)performDefaultImplementation;

@end

@interface IDEScriptingURLStringForApple_ref : NSScriptCommand
{
}

- (id)performDefaultImplementation;

@end

@interface IDEScriptingURLStringForDocumentWithUUID : NSScriptCommand
{
}

- (id)performDefaultImplementation;

@end

@interface NSArray (IDEDocStringRanking)
- (id)sortedArrayByShortestToLongestNames;
- (id)sortedDSATokenArrayByRankingAgainstString:(id)arg1;
@end

@interface NSEvent (IDEDocNSEventAdditions)
- (BOOL)isCommandKeyDown;
- (BOOL)isCommandReturnKeyDown;
- (BOOL)isCommandRightArrowKeyDown;
- (BOOL)isCommandLeftArrowKeyDown;
- (BOOL)isCommandPeriodKeyDown;
- (BOOL)isCommandHomeKeyDown;
- (BOOL)isCommandBacktickKeyDown;
@end

@interface NSMutableArray (IDEDocStringRanking)
- (void)sortArrayByShortestToLongestNames;
@end

@interface _IDEDocBookmarkButton : NSButton
{
    BOOL _inBookmarksList;
    NSTrackingArea *_trackingArea;
}

@property(retain) NSTrackingArea *trackingArea; // @synthesize trackingArea=_trackingArea;
@property BOOL inBookmarksList; // @synthesize inBookmarksList=_inBookmarksList;
- (void).cxx_destruct;
- (void)mouseDown:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)updateTrackingAreas;

@end

@interface _IDEDocContentAreaContentViewController : DVTControllerContentView
{
    BOOL _layoutComplete;
}

@property(getter=isLayoutComplete) BOOL layoutComplete; // @synthesize layoutComplete=_layoutComplete;
- (void)didCompleteLayout;

@end

@interface _IDEDocContentOutlineViewGroupNode : NSObject
{
    DSANode *_representedNode;
    NSArray *_descendants;
}

@property(copy) NSArray *descendants; // @synthesize descendants=_descendants;
@property(retain) DSANode *representedNode; // @synthesize representedNode=_representedNode;
- (void).cxx_destruct;
- (id)initWithNode:(id)arg1;

@end

@interface _IDEDocContentOutlineViewRootNode : NSObject
{
    DSANode *_representedNode;
    NSArray *_groups;
}

@property(copy) NSArray *groups; // @synthesize groups=_groups;
@property(retain) DSANode *representedNode; // @synthesize representedNode=_representedNode;
- (void).cxx_destruct;
- (id)initWithNode:(id)arg1;

@end

@interface _IDEDocNonInteractiveView : NSView
{
}

- (id)hitTest:(struct CGPoint)arg1;
- (void)awakeFromNib;

@end

@interface _IDEDocReferenceHeaderViewContentViewController : DVTControllerContentView
{
    BOOL _layoutComplete;
}

@property(getter=isLayoutComplete) BOOL layoutComplete; // @synthesize layoutComplete=_layoutComplete;
- (void)didCompleteLayout;

@end

@interface _IDEDocReferenceHeaderViewDividerLine : NSView
{
}

- (void)drawRect:(struct CGRect)arg1;

@end

@interface _IDEDocToolbarSearchResultsWindow : NSWindow
{
}

- (BOOL)hasShadow;
- (id)initWithContentRect:(struct CGRect)arg1 styleMask:(unsigned long long)arg2 backing:(unsigned long long)arg3 defer:(BOOL)arg4;

@end

@interface _IDEDocToolbarSearchResultsWindowContentView : NSView
{
}

- (void)drawRect:(struct CGRect)arg1;

@end

@interface _IDEDocWebViewBackgroundView : NSView
{
}

- (void)drawRect:(struct CGRect)arg1;

@end

@interface _IDESharePopUpButtonCell : NSPopUpButtonCell
{
}

- (struct CGRect)imageRectForBounds:(struct CGRect)arg1;

@end

