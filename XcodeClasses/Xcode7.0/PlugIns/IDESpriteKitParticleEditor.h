//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CGPath;

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint _field1;
    struct CGSize _field2;
};

struct CGSize {
    double width;
    double height;
};

struct NodeMovePair;

struct PolyEditor {
    struct CGPath *_path;
    _Bool _dirty;
    struct CGPoint _continuityButtonPos;
    struct CGPoint _lockButtonPos;
    unsigned long long _editIndex;
    int _editPart;
    _Bool _filled;
    _Bool _closed;
    _Bool _smoothPath;
    struct vector<PolyEditor::Vertex, std::__1::allocator<PolyEditor::Vertex>> _verts;
    SKNode *_offsetNode;
    struct CGPoint _lastOffsetPosition;
    struct Vertex _firstVert;
};

struct SnapResult {
    _Bool _field1;
    _Bool _field2;
    float _field3;
    float _field4;
};

struct Vertex {
    struct CGPoint point;
    struct CGPoint tangentIn;
    struct CGPoint tangentOut;
    int tangency;
};

struct _NSRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct map<std::__1::basic_string<char>, CGImage *, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, CGImage *>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, CGImage *>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, CGImage *>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, CGImage *>>> {
        struct __tree_node<std::__1::__value_type<std::__1::basic_string<char>, CGImage *>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, CGImage *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
                struct __tree_node_base<void *> *__left_;
            } __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, CGImage *>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct vector<NodeMovePair, std::__1::allocator<NodeMovePair>> {
    struct NodeMovePair *__begin_;
    struct NodeMovePair *__end_;
    struct __compressed_pair<NodeMovePair *, std::__1::allocator<NodeMovePair>> {
        struct NodeMovePair *__first_;
    } __end_cap_;
};

struct vector<PolyEditor::Vertex, std::__1::allocator<PolyEditor::Vertex>> {
    struct Vertex *__begin_;
    struct Vertex *__end_;
    struct __compressed_pair<PolyEditor::Vertex *, std::__1::allocator<PolyEditor::Vertex>> {
        struct Vertex *__first_;
    } __end_cap_;
};

#pragma mark Typedef'd Structures

typedef struct {
    struct CGPoint _field1;
    struct CGPoint _field2;
    struct CGPoint _field3;
    struct CGPoint _field4;
    struct CGPoint _field5;
    struct CGPoint _field6;
    struct CGPoint _field7;
    struct CGPoint _field8;
    struct CGPoint _field9;
    struct CGPoint _field10;
    struct CGPoint _field11;
    double _field12;
    struct CGPoint _field13;
    struct CGSize _field14;
    struct CGPoint _field15;
    struct CGPoint _field16;
    struct CGPoint _field17;
    struct CGPoint _field18;
} CDStruct_76845b71;

#pragma mark -

//
// File: /Applications/Xcode-7GM.app/Contents/PlugIns/IDESpriteKitParticleEditor.ideplugin/Contents/MacOS/IDESpriteKitParticleEditor
// UUID: 6B95F4C9-2DC5-3375-97A0-A088EF2A610A
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 8126.0.0.0.0
//       Minimum Mac OS X version: 10.10.0
//                    SDK version: 10.11.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol DVTDiffTextFilter <NSObject>
+ (DVTFileDataType *)textFileDataTypeForInputFilePath:(DVTFilePath *)arg1;
+ (BOOL)pathRequiresFilter:(DVTFilePath *)arg1;

@optional
+ (DVTFilePath *)pathToKeyConflictResolutionFromInputFilePath:(DVTFilePath *)arg1 error:(id *)arg2;
+ (DVTFilePath *)pathToTextFileFromInputFilePath:(DVTFilePath *)arg1 error:(id *)arg2;
+ (BOOL)filterInputFilePath:(DVTFilePath *)arg1 toOutputFilePath:(DVTFilePath *)arg2 error:(id *)arg3;
@end

@protocol DVTFindBarFindable

@optional
- (struct _NSRange)selectedRangeForFindBar:(DVTFindBar *)arg1;
- (DVTDocumentLocation *)startingLocationForFindBar:(DVTFindBar *)arg1 findingBackwards:(BOOL)arg2;
- (void)dvtFindBar:(DVTFindBar *)arg1 didUpdateCurrentResult:(DVTFindResult *)arg2;
- (void)dvtFindBar:(DVTFindBar *)arg1 didUpdateResults:(NSArray *)arg2;
@end

@protocol DVTInvalidation <NSObject>
- (void)primitiveInvalidate;

@optional
+ (BOOL)supportsInvalidationPrevention;
+ (unsigned long long)assertionBehaviorForKeyValueObservationsAtEndOfEvent;
+ (unsigned long long)assertionBehaviorAfterEndOfEventForSelector:(SEL)arg1;
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly, nonatomic, getter=isValid) BOOL valid;
- (void)invalidate;
@end

@protocol DVTReplacementViewDelegate <NSObject>

@optional
- (void)replacementView:(DVTReplacementView *)arg1 willDisplayInRect:(struct CGRect)arg2;
- (void)replacementView:(DVTReplacementView *)arg1 willCloseViewController:(NSViewController *)arg2;
- (void)replacementView:(DVTReplacementView *)arg1 didInstallViewController:(NSViewController *)arg2;
- (void)replacementView:(DVTReplacementView *)arg1 willInstallViewController:(NSViewController *)arg2;
@end

@protocol DVTTextAnnotationDelegate <NSObject>

@optional
- (void)annotation:(DVTTextAnnotation *)arg1 willDrawInTextSidebarView:(DVTTextSidebarView *)arg2 withAnnotationsInSameLine:(NSSet *)arg3;
- (BOOL)annotation:(DVTTextAnnotation *)arg1 shouldDrawInTextSidebarView:(DVTTextSidebarView *)arg2 withAnnotationsInSameLine:(NSSet *)arg3;
- (double)sidebarMarkerOpacityForAnnotation:(DVTTextAnnotation *)arg1;
- (BOOL)shouldMoveCursorForAnnotation:(DVTTextAnnotation *)arg1;
- (NSArray *)contextMenuItemsForAnnotation:(DVTTextAnnotation *)arg1 inTextSidebarView:(DVTTextSidebarView *)arg2;
- (void)didRecognizeGestureInAnnotation:(DVTTextAnnotation *)arg1 inTextSidebarView:(DVTTextSidebarView *)arg2 recognizer:(NSGestureRecognizer *)arg3;
- (void)didDeleteOrReplaceParagraphForAnnotation:(DVTTextAnnotation *)arg1;
- (void)didRemoveAnnotation:(DVTAnnotation *)arg1;
- (void)didMoveAnnotation:(DVTAnnotation *)arg1;
- (unsigned long long)annotation:(DVTTextAnnotation *)arg1 willMoveToParagraphNumber:(unsigned long long)arg2;
- (void)didDragAnnotation:(DVTAnnotation *)arg1 inTextSidebarView:(DVTTextSidebarView *)arg2 event:(NSEvent *)arg3;
- (void)didEndRolloverOnAnnotation:(DVTAnnotation *)arg1 inTextSidebarView:(DVTTextSidebarView *)arg2 event:(NSEvent *)arg3;
- (void)didBeginRolloverOnAnnotation:(DVTAnnotation *)arg1 inTextSidebarView:(DVTTextSidebarView *)arg2 event:(NSEvent *)arg3;
- (void)didClickAnnotation:(DVTAnnotation *)arg1 inTextSidebarView:(DVTTextSidebarView *)arg2 event:(NSEvent *)arg3;
@end

@protocol DVTTextFindable <NSObject>
- (DVTFindResult *)findStringMatchingDescriptor:(DVTFindDescriptor *)arg1 backwards:(BOOL)arg2 from:(DVTDocumentLocation *)arg3 to:(DVTDocumentLocation *)arg4;

@optional
@property unsigned long long supportedMatchingOptions;
- (long long)compareFindableLocation:(DVTDocumentLocation *)arg1 withLocation:(DVTDocumentLocation *)arg2;
@end

@protocol EditOverlayDelegate <NSObject>

@optional
- (SKAction *)editOverlayActionForNode:(SKNode *)arg1;
- (void)editOverlayDidChangeTexture:(SKNode *)arg1;
- (void)editOverlayDidRenameNode:(SKNode *)arg1;
- (void)editOverlayDidUndoEvent;
- (void)editOverlayDidRemoveNode;
- (void)editOverlayDidAddNodes:(NSArray *)arg1;
- (void)editOverlayDidDragInAction;
- (void)editOverlayDidClickEmptySpace;
- (void)editOverlayDidSelectNodes:(NSArray *)arg1;
- (void)editOverlayDidChangeScene:(SKScene *)arg1;
- (void)manipulationEnded:(SKNode *)arg1 property:(long long)arg2;
- (void)manipulationPerformed:(SKNode *)arg1 property:(long long)arg2;
- (void)manipulationBegan:(SKNode *)arg1 property:(long long)arg2;
@end

@protocol GTFActionEditorDelegate <NSObject>
@property(readonly, nonatomic) GTFActionLibrary *actionLibrary;
- (void)updateActionPreview;
- (void)refreshObjectLibrary;

@optional
- (BOOL)actionEditor:(GTFActionEditor *)arg1 shouldSupportPastedActions:(NSArray *)arg2;
- (BOOL)actionEditor:(GTFActionEditor *)arg1 shouldCreateReferenceActionWithActions:(NSArray *)arg2;
- (void)actionsDidChangeForTarget:(id <NSCopying>)arg1 withEditor:(GTFActionEditor *)arg2;
@end

@protocol GTFActionLibraryTarget <NSObject>
@property(readonly, nonatomic) NSString *gtf_name;
@property(readonly, nonatomic) GTFActionLibraryTargetThumbnail *gtf_thumbnailImage;
@property(readonly, nonatomic) id <NSCopying> gtf_uid;
@end

@protocol GTFActionLibraryUndoDelegate <NSObject>
- (NSUndoManager *)undoManagerForActionLibrary:(GTFActionLibrary *)arg1;
@end

@protocol GTFFileSystemEventStreamDelegate <NSObject>
- (void)fileSystemEventStream:(GTFFileSystemEventStream *)arg1 notedChangeAtPath:(NSString *)arg2 scanRecursively:(BOOL)arg3;

@optional
- (void)historyWrappedForFileSystemEventStream:(GTFFileSystemEventStream *)arg1;
- (void)historyCompleteForFileSystemEventStream:(GTFFileSystemEventStream *)arg1;
- (void)fileSystemEventStream:(GTFFileSystemEventStream *)arg1 notedVolumeUnmount:(NSString *)arg2;
- (void)fileSystemEventStream:(GTFFileSystemEventStream *)arg1 notedVolumeMount:(NSString *)arg2;
- (void)fileSystemEventStream:(GTFFileSystemEventStream *)arg1 notedChangeOfRootPath:(NSString *)arg2;
@end

@protocol IDEDebuggingAdditionUIController <NSObject, DVTInvalidation>
- (DVTExtension *)extension;
- (id)initWithWorkspaceTabController:(IDEWorkspaceTabController *)arg1 withDebuggingAddition:(id <IDEDebuggingAddition>)arg2 forExtension:(DVTExtension *)arg3;

@optional
- (NSCell *)trayCellForNavigationProcessHeader;
- (NSMenu *)debugSubmenu;
- (BOOL)shouldReplaceDebugSubmenu;
@end

@protocol IDEDocumentStructureProviding <NSObject>
@property(readonly) NSArray *ideTopLevelStructureObjects;
@end

@protocol IDEKeyDrivenNavigableItemRepresentedObject <NSObject>
@property(readonly) NSString *navigableItem_name;

@optional
@property(readonly) NSString *navigableItem_groupIdentifier;
@property(readonly) DVTDocumentLocation *navigableItem_contentDocumentLocation;
@property(readonly) DVTFileDataType *navigableItem_documentType;
@property(readonly) IDEFileReference *navigableItem_fileReference;
@property(readonly) BOOL navigableItem_isLeaf;
@property(readonly) BOOL navigableItem_isMajorGroup;
@property(readonly) NSString *navigableItem_toolTip;
@property(readonly) NSImage *navigableItem_image;
- (DVTDocumentLocation *)navigableItem_contentDocumentLocationInDocumentURL:(NSURL *)arg1;
@end

@protocol IDENavigableItemFileReferenceProxy <NSObject>
@property(readonly) IDENavigableItem *primaryChildItem;

@optional
- (BOOL)showSubitems;
@end

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSControlTextEditingDelegate <NSObject>

@optional
- (NSArray *)control:(NSControl *)arg1 textView:(NSTextView *)arg2 completions:(NSArray *)arg3 forPartialWordRange:(struct _NSRange)arg4 indexOfSelectedItem:(long long *)arg5;
- (BOOL)control:(NSControl *)arg1 textView:(NSTextView *)arg2 doCommandBySelector:(SEL)arg3;
- (BOOL)control:(NSControl *)arg1 isValidObject:(id)arg2;
- (void)control:(NSControl *)arg1 didFailToValidatePartialString:(NSString *)arg2 errorDescription:(NSString *)arg3;
- (BOOL)control:(NSControl *)arg1 didFailToFormatString:(NSString *)arg2 errorDescription:(NSString *)arg3;
- (BOOL)control:(NSControl *)arg1 textShouldEndEditing:(NSText *)arg2;
- (BOOL)control:(NSControl *)arg1 textShouldBeginEditing:(NSText *)arg2;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSKeyedUnarchiverDelegate <NSObject>

@optional
- (void)unarchiverDidFinish:(NSKeyedUnarchiver *)arg1;
- (void)unarchiverWillFinish:(NSKeyedUnarchiver *)arg1;
- (void)unarchiver:(NSKeyedUnarchiver *)arg1 willReplaceObject:(id)arg2 withObject:(id)arg3;
- (id)unarchiver:(NSKeyedUnarchiver *)arg1 didDecodeObject:(id)arg2;
- (Class)unarchiver:(NSKeyedUnarchiver *)arg1 cannotDecodeObjectOfClassName:(NSString *)arg2 originalClasses:(NSArray *)arg3;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (BOOL)respondsToSelector:(SEL)arg1;
- (BOOL)conformsToProtocol:(Protocol *)arg1;
- (BOOL)isMemberOfClass:(Class)arg1;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (BOOL)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSPasteboardReading <NSObject>
+ (NSArray *)readableTypesForPasteboard:(NSPasteboard *)arg1;

@optional
+ (unsigned long long)readingOptionsForType:(NSString *)arg1 pasteboard:(NSPasteboard *)arg2;
- (id)initWithPasteboardPropertyList:(id)arg1 ofType:(NSString *)arg2;
@end

@protocol NSPasteboardWriting <NSObject>
- (id)pasteboardPropertyListForType:(NSString *)arg1;
- (NSArray *)writableTypesForPasteboard:(NSPasteboard *)arg1;

@optional
- (unsigned long long)writingOptionsForType:(NSString *)arg1 pasteboard:(NSPasteboard *)arg2;
@end

@protocol NSPopoverDelegate <NSObject>

@optional
- (void)popoverDidClose:(NSNotification *)arg1;
- (void)popoverWillClose:(NSNotification *)arg1;
- (void)popoverDidShow:(NSNotification *)arg1;
- (void)popoverWillShow:(NSNotification *)arg1;
- (NSWindow *)detachableWindowForPopover:(NSPopover *)arg1;
- (void)popoverDidDetach:(NSPopover *)arg1;
- (BOOL)popoverShouldDetach:(NSPopover *)arg1;
- (BOOL)popoverShouldClose:(NSPopover *)arg1;
@end

@protocol NSSplitViewDelegate <NSObject>

@optional
- (void)splitViewDidResizeSubviews:(NSNotification *)arg1;
- (void)splitViewWillResizeSubviews:(NSNotification *)arg1;
- (struct CGRect)splitView:(NSSplitView *)arg1 additionalEffectiveRectOfDividerAtIndex:(long long)arg2;
- (struct CGRect)splitView:(NSSplitView *)arg1 effectiveRect:(struct CGRect)arg2 forDrawnRect:(struct CGRect)arg3 ofDividerAtIndex:(long long)arg4;
- (BOOL)splitView:(NSSplitView *)arg1 shouldHideDividerAtIndex:(long long)arg2;
- (BOOL)splitView:(NSSplitView *)arg1 shouldAdjustSizeOfSubview:(NSView *)arg2;
- (void)splitView:(NSSplitView *)arg1 resizeSubviewsWithOldSize:(struct CGSize)arg2;
- (double)splitView:(NSSplitView *)arg1 constrainSplitPosition:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(NSSplitView *)arg1 constrainMaxCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(NSSplitView *)arg1 constrainMinCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (BOOL)splitView:(NSSplitView *)arg1 shouldCollapseSubview:(NSView *)arg2 forDoubleClickOnDividerAtIndex:(long long)arg3;
- (BOOL)splitView:(NSSplitView *)arg1 canCollapseSubview:(NSView *)arg2;
@end

@protocol NSTableViewDataSource <NSObject>

@optional
- (NSArray *)tableView:(NSTableView *)arg1 namesOfPromisedFilesDroppedAtDestination:(NSURL *)arg2 forDraggedRowsWithIndexes:(NSIndexSet *)arg3;
- (BOOL)tableView:(NSTableView *)arg1 acceptDrop:(id <NSDraggingInfo>)arg2 row:(long long)arg3 dropOperation:(unsigned long long)arg4;
- (unsigned long long)tableView:(NSTableView *)arg1 validateDrop:(id <NSDraggingInfo>)arg2 proposedRow:(long long)arg3 proposedDropOperation:(unsigned long long)arg4;
- (BOOL)tableView:(NSTableView *)arg1 writeRowsWithIndexes:(NSIndexSet *)arg2 toPasteboard:(NSPasteboard *)arg3;
- (void)tableView:(NSTableView *)arg1 updateDraggingItemsForDrag:(id <NSDraggingInfo>)arg2;
- (void)tableView:(NSTableView *)arg1 draggingSession:(NSDraggingSession *)arg2 endedAtPoint:(struct CGPoint)arg3 operation:(unsigned long long)arg4;
- (void)tableView:(NSTableView *)arg1 draggingSession:(NSDraggingSession *)arg2 willBeginAtPoint:(struct CGPoint)arg3 forRowIndexes:(NSIndexSet *)arg4;
- (id <NSPasteboardWriting>)tableView:(NSTableView *)arg1 pasteboardWriterForRow:(long long)arg2;
- (void)tableView:(NSTableView *)arg1 sortDescriptorsDidChange:(NSArray *)arg2;
- (void)tableView:(NSTableView *)arg1 setObjectValue:(id)arg2 forTableColumn:(NSTableColumn *)arg3 row:(long long)arg4;
- (id)tableView:(NSTableView *)arg1 objectValueForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(NSTableView *)arg1;
@end

@protocol NSTableViewDelegate <NSControlTextEditingDelegate>

@optional
- (void)tableViewSelectionIsChanging:(NSNotification *)arg1;
- (void)tableViewColumnDidResize:(NSNotification *)arg1;
- (void)tableViewColumnDidMove:(NSNotification *)arg1;
- (void)tableViewSelectionDidChange:(NSNotification *)arg1;
- (NSArray *)tableView:(NSTableView *)arg1 rowActionsForRow:(long long)arg2 edge:(long long)arg3;
- (BOOL)tableView:(NSTableView *)arg1 shouldReorderColumn:(long long)arg2 toColumn:(long long)arg3;
- (double)tableView:(NSTableView *)arg1 sizeToFitWidthOfColumn:(long long)arg2;
- (BOOL)tableView:(NSTableView *)arg1 isGroupRow:(long long)arg2;
- (BOOL)tableView:(NSTableView *)arg1 shouldTypeSelectForEvent:(NSEvent *)arg2 withCurrentSearchString:(NSString *)arg3;
- (long long)tableView:(NSTableView *)arg1 nextTypeSelectMatchFromRow:(long long)arg2 toRow:(long long)arg3 forString:(NSString *)arg4;
- (NSString *)tableView:(NSTableView *)arg1 typeSelectStringForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (double)tableView:(NSTableView *)arg1 heightOfRow:(long long)arg2;
- (void)tableView:(NSTableView *)arg1 didDragTableColumn:(NSTableColumn *)arg2;
- (void)tableView:(NSTableView *)arg1 didClickTableColumn:(NSTableColumn *)arg2;
- (void)tableView:(NSTableView *)arg1 mouseDownInHeaderOfTableColumn:(NSTableColumn *)arg2;
- (BOOL)tableView:(NSTableView *)arg1 shouldSelectTableColumn:(NSTableColumn *)arg2;
- (NSIndexSet *)tableView:(NSTableView *)arg1 selectionIndexesForProposedSelection:(NSIndexSet *)arg2;
- (BOOL)tableView:(NSTableView *)arg1 shouldSelectRow:(long long)arg2;
- (BOOL)selectionShouldChangeInTableView:(NSTableView *)arg1;
- (NSCell *)tableView:(NSTableView *)arg1 dataCellForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (BOOL)tableView:(NSTableView *)arg1 shouldTrackCell:(NSCell *)arg2 forTableColumn:(NSTableColumn *)arg3 row:(long long)arg4;
- (BOOL)tableView:(NSTableView *)arg1 shouldShowCellExpansionForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (NSString *)tableView:(NSTableView *)arg1 toolTipForCell:(NSCell *)arg2 rect:(struct CGRect *)arg3 tableColumn:(NSTableColumn *)arg4 row:(long long)arg5 mouseLocation:(struct CGPoint)arg6;
- (BOOL)tableView:(NSTableView *)arg1 shouldEditTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (void)tableView:(NSTableView *)arg1 willDisplayCell:(id)arg2 forTableColumn:(NSTableColumn *)arg3 row:(long long)arg4;
- (void)tableView:(NSTableView *)arg1 didRemoveRowView:(NSTableRowView *)arg2 forRow:(long long)arg3;
- (void)tableView:(NSTableView *)arg1 didAddRowView:(NSTableRowView *)arg2 forRow:(long long)arg3;
- (NSTableRowView *)tableView:(NSTableView *)arg1 rowViewForRow:(long long)arg2;
- (NSView *)tableView:(NSTableView *)arg1 viewForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
@end

@protocol SKActionAssignAddPopoverDelegate <NSObject>
- (void)actionAssignPopoverAssignedActionsNamed:(NSArray *)arg1;
@end

@protocol SKActionAssignControllerDelegate <NSObject>

@optional
- (void)actionAssignControllerDidRemoveTargets:(SKActionAssignController *)arg1;
- (void)actionAssignControllerDidUpdateTargets:(SKActionAssignController *)arg1;
@end

@protocol SKActionPreviewViewControllerDelegate <NSObject>
- (NSURL *)actionDocumentURLForPreviewController:(SKActionPreviewViewController *)arg1;
@end

@protocol SKDocumentDelegate <NSObject>
- (void)handleSceneUndoEvent:(NSData *)arg1;
@end

@protocol SKEditingTarget <DVTTextFindable>
@property(readonly, nonatomic) NSMutableArray *dynamicObjectLibraryAssets;
@property(readonly, nonatomic) NSMutableArray *staticObjectLibraryAssets;
@property(readonly, nonatomic) NSString *objectsLibraryCustomGroupIdentifier;
@property(readonly, nonatomic) NSString *objectsLibraryTitle;
@property(readonly, nonatomic) NSArray *topLevelStructuredObject;
@property(nonatomic) BOOL paused;
@property(nonatomic) __weak SKDocument *document;
- (BOOL)writeToURL:(NSURL *)arg1 ofType:(NSString *)arg2 error:(id *)arg3;
- (BOOL)isTargetForObject:(id)arg1;

@optional
- (void)prepareTargetForDocumentClose;
@end

@protocol SKNodeWithShader <NSObject>
@property(retain, nonatomic) SKShader *shader;
@property(retain, nonatomic) NSURL *customSpriteShader;
@end

@protocol SKSceneDelegate <NSObject>

@optional
- (void)didFinishUpdateForScene:(SKScene *)arg1;
- (void)didApplyConstraintsForScene:(SKScene *)arg1;
- (void)didSimulatePhysicsForScene:(SKScene *)arg1;
- (void)didEvaluateActionsForScene:(SKScene *)arg1;
- (void)update:(double)arg1 forScene:(SKScene *)arg2;
@end

@interface CIFilter (Foo)
- (id)skDisplayName;
@end

@interface EditOverlayView : NSView <SKSceneDelegate, SKDocumentDelegate>
{
    BOOL _isMidCommand;
    SKScene *_pausePlaySceneCopy;
    SKNode *_selectedNode;
    NSMutableArray *_selectedNodes;
    BOOL _isTrackingTouch;
    BOOL _isPBDragging;
    BOOL _isObjectMoved;
    unsigned long long _mainTouchID;
    struct CGPoint _touchBeganPoint;
    struct CGPoint _touchPrevPoint;
    struct CGPoint _touchCurrentPoint;
    struct CGPoint _prevTouchInView;
    struct CGPoint _currTouchInView;
    struct CGColor *_grayColor;
    struct CGColor *_blueColor;
    struct CGColor *_blackColor;
    struct CGColor *_whiteColor;
    struct CGColor *_goldColor;
    struct CGColor *_greenColor;
    struct CGColor *_snappingColor;
    struct CGColor *_selectionColor;
    struct CGColor *_selectionFillColor;
    struct CGContext *_ctx;
    struct CGPoint ll;
    struct CGPoint lm;
    struct CGPoint lr;
    struct CGPoint ml;
    struct CGPoint mm;
    struct CGPoint mr;
    struct CGPoint ul;
    struct CGPoint um;
    struct CGPoint ur;
    struct CGPoint rh;
    struct CGPoint ap;
    BOOL _drawingSelection;
    BOOL _snappingInX;
    BOOL _snappingInY;
    float _snapXValue;
    float _snapYValue;
    BOOL _isTrackingTwoFingerGesture;
    id _twoFingerGestureTouch1ID;
    struct CGPoint _prevTwoFingerGestureLocation;
    double _startRotation;
    struct CGPoint _startScale;
    struct CGSize _startSize;
    struct CGPoint _startPosition;
    struct CGPoint _startAnchorPoint;
    struct CGPoint _startYVec;
    struct CGPoint _startXVec;
    int _editorMode;
    struct PolyEditor _polyEditor;
    struct vector<NodeMovePair, std::__1::allocator<NodeMovePair>> _nodeMoveQueue;
    NSMenu *_rightClickContextMenu;
    int _touchMoveCount;
    NSMutableArray *_observedNodes;
    int _handleBeingManipulated;
    SKNode *_manipulatedNode;
    NSMutableArray *_selectedObjectPopovers;
    long long _lastEnabledFeatureState;
    long long _lastEnabledPropertyManipulationState;
    struct map<std::__1::basic_string<char>, CGImage *, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, CGImage *>>> _overlayImageMap;
    double _cachedViewScale;
    struct CGPoint _cachedViewTranslation;
    struct CGPoint _userViewTranslation;
    struct CGPoint _lastViewTranslation;
    double _lastViewScale;
    int _numPastesSinceLastCopy;
    BOOL _enabled;
    SKScene *_scene;
    SKEditView *_skEditView;
    SKDocumentViewController *_documentViewController;
    id <EditOverlayDelegate> _delegate;
    long long _enabledFeatures;
    long long _enabledPropertyManipulations;
}

+ (id)getEditOverlayViewModeDisplayName:(int)arg1;
@property(nonatomic) long long enabledPropertyManipulations; // @synthesize enabledPropertyManipulations=_enabledPropertyManipulations;
@property(nonatomic) long long enabledFeatures; // @synthesize enabledFeatures=_enabledFeatures;
@property(nonatomic) __weak id <EditOverlayDelegate> delegate; // @synthesize delegate=_delegate;
@property int editorMode; // @synthesize editorMode=_editorMode;
@property(nonatomic) __weak SKDocumentViewController *documentViewController; // @synthesize documentViewController=_documentViewController;
@property(retain, nonatomic) NSArray *selectedNodes; // @synthesize selectedNodes=_selectedNodes;
@property(retain, nonatomic) SKNode *selectedNode; // @synthesize selectedNode=_selectedNode;
@property BOOL enabled; // @synthesize enabled=_enabled;
@property(nonatomic) __weak SKEditView *skEditView; // @synthesize skEditView=_skEditView;
@property(nonatomic) __weak SKScene *scene; // @synthesize scene=_scene;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)selectNodeAtTouchCurrentPoint;
- (void)unlockNodeAtTouchCurrentPoint;
- (void)lockSelectedNodes;
- (void)duplicate:(id)arg1;
- (void)paste:(id)arg1;
- (void)copy:(id)arg1;
- (void)cut:(id)arg1;
- (void)delete:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (void)didEvaluateActionsForScene:(id)arg1;
- (void)thunkPhysicsRecursive:(id)arg1;
- (void)processNodeMoveQueue;
- (void)resetPolygonEditor;
- (void)bringSelectedNodesToFront;
- (void)pushSelectedNodesToBack;
- (void)handleSceneUndoEvent:(id)arg1;
- (void)contextMenuAddNodePressed;
- (id)info:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)unobserveAllNodesAndChildren;
- (void)observeAllNodesAndChildren;
- (void)nodeTextureDidChange:(id)arg1;
- (void)nodeNameDidChange:(id)arg1;
- (void)unobserveNode:(id)arg1;
- (void)observeNode:(id)arg1;
- (float)getGlobalZForNode:(id)arg1;
- (id)getNodeToSelectAtPoint:(struct CGPoint)arg1;
- (void)toggleSelectNode:(id)arg1;
- (void)_deselectAllNodesSkipSync:(BOOL)arg1;
- (void)deselectAllNodes;
- (void)closeSelectedNodeNamePopover:(id)arg1;
- (void)cleanupSelectedObjectPopovers;
- (void)deselectNode:(id)arg1;
- (void)updateSelectionPopover;
- (void)_selectNode:(id)arg1 updateSelectionPopover:(BOOL)arg2 skipSync:(BOOL)arg3;
- (void)selectNode:(id)arg1;
- (void)drawBoundsBox;
- (void)drawRect:(struct CGRect)arg1;
- (void)drawSceneBounds;
- (void)drawFrustumForCamera:(id)arg1;
- (void)drawNodeOverlayImageRecursive:(id)arg1;
- (void)drawParentChildLines;
- (void)drawSelectionRect;
- (void)drawSnapping;
- (void)drawHandleAt:(struct CGPoint)arg1 forNode:(id)arg2;
- (void)generateHandlePoints;
- (void)displayScene:(id)arg1;
- (void)drawAnchorPointHandle;
- (void)drawRotationHandle;
- (BOOL)point:(struct CGPoint)arg1 isWithinRadius:(double)arg2 ofPoint:(struct CGPoint)arg3;
- (void)liveReloadScene;
- (BOOL)togglePlayPause;
- (void)reloadSceneState;
- (void)saveSceneState;
- (BOOL)isClickingOnHandle:(struct CGPoint)arg1;
- (BOOL)isOpaque;
- (void)pan:(float)arg1 deltaY:(float)arg2;
- (void)refreshZoomState;
- (void)restoreZoomToNative;
- (void)restoreZoomToNativeMaintainCenter;
- (void)zoom:(float)arg1 towardScenePosition:(struct CGPoint)arg2;
- (void)zoom:(float)arg1;
- (void)doSnappingForNodeMovement:(id)arg1 lastPosition:(struct CGPoint)arg2;
- (void)doNodeSnappingToPoint:(id)arg1 sceneRect:(struct CGRect)arg2 targetValue:(float)arg3 axis:(int)arg4 side:(int)arg5 resultOut:(struct SnapResult *)arg6;
- (BOOL)wantsScrollEventsForSwipeTrackingOnAxis:(long long)arg1;
- (void)touchesCancelledWithEvent:(id)arg1;
- (void)touchesEndedWithEvent:(id)arg1;
- (void)touchesMovedWithEvent:(id)arg1;
- (void)touchesBeganWithEvent:(id)arg1;
- (void)rotateWithEvent:(id)arg1;
- (void)magnifyWithEvent:(id)arg1;
- (void)scrollWheel:(id)arg1;
- (void)stopAllActionsOnSelectedNodes;
- (void)rotateSelectedNodesCounterClockwise;
- (void)rotateSelectedNodesClockwise;
- (void)rightMouseDown:(id)arg1;
- (void)touchCancelled:(unsigned long long)arg1 location:(struct CGPoint)arg2 clickCount:(int)arg3;
- (void)touchEndedPolygon:(unsigned long long)arg1 location:(struct CGPoint)arg2 clickCount:(int)arg3;
- (void)touchEndedManipulate:(unsigned long long)arg1 location:(struct CGPoint)arg2 clickCount:(int)arg3;
- (void)touchEnded:(unsigned long long)arg1 location:(struct CGPoint)arg2 clickCount:(int)arg3;
- (void)touchMovedIKManipulate:(unsigned long long)arg1 location:(struct CGPoint)arg2 clickCount:(int)arg3;
- (void)touchMovedPolygon:(unsigned long long)arg1 location:(struct CGPoint)arg2 clickCount:(int)arg3;
- (void)touchMovedManipulate:(unsigned long long)arg1 location:(struct CGPoint)arg2 clickCount:(int)arg3;
- (void)touchMoved:(unsigned long long)arg1 location:(struct CGPoint)arg2 clickCount:(int)arg3;
- (void)touchBeganIKManipulate:(unsigned long long)arg1 location:(struct CGPoint)arg2 clickCount:(int)arg3;
- (void)touchBeganPolygon:(unsigned long long)arg1 location:(struct CGPoint)arg2 clickCount:(int)arg3;
- (void)touchBeganManipulate:(unsigned long long)arg1 location:(struct CGPoint)arg2 clickCount:(int)arg3;
- (void)touchBegan:(unsigned long long)arg1 location:(struct CGPoint)arg2 clickCount:(int)arg3;
- (void)keyDownPolygon:(id)arg1;
- (void)keyDownManipulate:(id)arg1;
- (void)keyDown:(id)arg1;
- (void)keyUp:(id)arg1;
- (BOOL)resignFirstResponder;
- (BOOL)becomeFirstResponder;
- (BOOL)acceptsFirstResponder;
- (void)assignNodeUID:(id)arg1;
- (void)setActionsOnNodeAndChildren:(id)arg1;
- (void)addNode:(id)arg1;
- (void)pasteCopiedNode:(id)arg1;
- (void)copySelectedNode:(id)arg1;
- (void)cutSelectedNode:(id)arg1;
- (void)duplicateSelectedNode:(id)arg1;
- (void)deleteSelectedNode:(id)arg1;
- (void)syncDocumentViewController:(id)arg1;
- (BOOL)canPropertyBeManipulated:(long long)arg1;
- (BOOL)isFeatureEnabled:(long long)arg1;
- (void)setFeatureDisabled:(long long)arg1;
@property int handleBeingManipulated;
- (long long)handleTypeToProperty:(int)arg1;
- (struct CGImage *)getSelectedOverlayImageForNode:(id)arg1;
- (struct CGImage *)getOverlayImageForNode:(id)arg1;
- (struct CGImage *)getOverlayImageForImageName:(id)arg1;
- (void)releaseOverlayImages;
- (id)getOverlayTextColorForNodeName:(id)arg1;
- (BOOL)doesNodeTypeDrawAnchor:(id)arg1;
- (BOOL)canNodeTypeResize:(id)arg1;
- (BOOL)canNodeTypeRotate:(id)arg1;
- (BOOL)isIconRepresentedNode:(id)arg1;
- (void)endCommand;
- (void)beginCommand;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface NSTableView (ShaderAttributeEditor)
- (void)scrollRowsToVisible:(id)arg1;
@end

@interface NodeInfo : NSObject
{
    CDStruct_76845b71 *_info;
}

@property CDStruct_76845b71 *info; // @synthesize info=_info;
- (void)dealloc;
- (id)init;

@end

@interface SKActionAssignAddPopoverViewController : DVTViewController <NSPopoverDelegate>
{
    BOOL _invalidateAfterClose;
    DVTTableView *_tableView;
    NSArrayController *_availableActions;
    id <SKActionAssignAddPopoverDelegate> _delegate;
    NSPopover *_popover;
}

@property __weak NSPopover *popover; // @synthesize popover=_popover;
@property(nonatomic) __weak id <SKActionAssignAddPopoverDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)popoverDidClose:(id)arg1;
- (void)_removeFromSuperviewAndInvalidate;
- (void)closePopoverAndInvalidate;
- (void)assignButtonPressed:(id)arg1;
- (void)showPopoverOverView:(id)arg1 withCurrentActions:(id)arg2;
- (void)viewDidInstall;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKActionAssignAsset : NSObject
{
    id <NSCopying> _targetID;
    NSString *_targetName;
    NSImage *_targetThumbnail;
}

@property(retain, nonatomic) NSImage *targetThumbnail; // @synthesize targetThumbnail=_targetThumbnail;
@property(copy, nonatomic) NSString *targetName; // @synthesize targetName=_targetName;
@property(retain, nonatomic) id <NSCopying> targetID; // @synthesize targetID=_targetID;
- (void).cxx_destruct;

@end

@interface SKActionAssignController : NSViewController <DVTInvalidation, NSTableViewDataSource>
{
    NSArrayController *_nodeAssignments;
    DVTBorderedView *_borderView;
    SKActionAssignTableView *_nodesTable;
    NSScrollView *_scrollView;
    NSArray *_heightConstraints;
    NSMutableSet *_currentTargetIDs;
    BOOL _needsBorderSetup;
    unsigned long long _height;
    id <SKActionAssignControllerDelegate> _delegate;
}

+ (void)initialize;
@property(nonatomic) __weak id <SKActionAssignControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) unsigned long long height; // @synthesize height=_height;
- (void).cxx_destruct;
- (void)keyDown:(id)arg1;
- (void)deleteBackward:(id)arg1;
- (void)deleteForward:(id)arg1;
- (void)deleteSelectedAssets;
- (BOOL)tableView:(id)arg1 writeRowsWithIndexes:(id)arg2 toPasteboard:(id)arg3;
- (BOOL)tableView:(id)arg1 acceptDrop:(id)arg2 row:(long long)arg3 dropOperation:(unsigned long long)arg4;
- (unsigned long long)tableView:(id)arg1 validateDrop:(id)arg2 proposedRow:(long long)arg3 proposedDropOperation:(unsigned long long)arg4;
- (void)clearAllTargets;
- (BOOL)addTarget:(id)arg1 atRow:(unsigned long long)arg2;
- (void)primitiveInvalidate;
- (void)viewDidLayout;
- (void)awakeFromNib;
@property(readonly, nonatomic) NSArray *targets;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface SKActionAssignInspector : IDEInspectorViewController <SKActionAssignAddPopoverDelegate>
{
    DVTBorderedView *_controlBar;
    IDEControlGroup *_controlGroup;
    DVTTableView *_tableView;
    DVTGradientImageButton *_removeButton;
    DVTGradientImageButton *_addButton;
    SKActionAssignAddPopoverViewController *_assignActionPopoverController;
    NSArrayController *_assignedActions;
    NSArray *_selectedObjects;
}

+ (BOOL)supportsMultipleObjectInspection;
- (void).cxx_destruct;
- (void)keyDown:(id)arg1;
- (void)deleteBackward:(id)arg1;
- (void)deleteForward:(id)arg1;
- (void)removeSelectedAssignments:(id)arg1;
- (void)addAssignment:(id)arg1;
- (void)actionAssignPopoverAssignedActionsNamed:(id)arg1;
- (void)didSetInspectedObjects:(id)arg1;
- (void)primitiveInvalidate;
- (void)refreshRemoveButtonEnabledState;
- (void)loadView;
- (void)setupControlBarAfterLoading;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKActionAssignTableView : DVTTableView
{
    NSArrayController *_contentController;
}

@property(retain, nonatomic) NSArrayController *contentController; // @synthesize contentController=_contentController;
- (void).cxx_destruct;
- (struct CGSize)_adjustFrameSizeToFitSuperview:(struct CGSize)arg1;

@end

@interface SKActionAssignmentDecodedFileEntry : NSObject
{
    NSDictionary *_assignments;
    NSDate *_dateCreated;
}

@property(readonly, nonatomic) NSDate *dateCreated; // @synthesize dateCreated=_dateCreated;
@property(copy, nonatomic) NSDictionary *assignments; // @synthesize assignments=_assignments;
- (void).cxx_destruct;
- (id)initWithAssignments:(id)arg1;
- (id)initFromEncodedEntry:(id)arg1 withScene:(id)arg2;

@end

@interface SKActionAssignmentEncodedFileEntry : NSObject <NSCoding>
{
    NSDictionary *_assignments;
    NSDate *_dateCreated;
}

@property(readonly, nonatomic) NSDate *dateCreated; // @synthesize dateCreated=_dateCreated;
@property(copy, nonatomic) NSDictionary *assignments; // @synthesize assignments=_assignments;
- (void).cxx_destruct;
- (void)touchEntry;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initFromDecodedEntry:(id)arg1 withUIDToNodeMapping:(id)arg2;

@end

@interface SKActionDocumentBorderedView : DVTBorderedView
{
}

- (void)scrollWheel:(id)arg1;

@end

@interface SKActionDocumentScopeBarView : DVTScopeBarView
{
}

- (void)scrollWheel:(id)arg1;

@end

@interface SKActionDocumentSplitView : DVTSplitView
{
}

- (void)scrollWheel:(id)arg1;

@end

@interface SKDocumentViewController : IDEViewController <DVTFindBarFindable>
{
    BOOL _oldIsScenePaused;
    SKDocumentEditor *_editor;
}

@property(nonatomic) __weak SKDocumentEditor *editor; // @synthesize editor=_editor;
- (void).cxx_destruct;
- (id)startingLocationForFindBar:(id)arg1 findingBackwards:(BOOL)arg2;
- (void)windowChangedOcclusionState:(id)arg1;
- (void)takeFocus;
- (void)selectDocumentLocations:(id)arg1;
@property(readonly, nonatomic) SKView *skView;
@property(readonly) __weak SKDocument *document;
@property(retain, nonatomic) NSArray *currentSelectedItems;
- (void)viewDidInstall;
- (void)invalidate;

@end

@interface SKActionDocumentViewController : SKDocumentViewController <DVTReplacementViewDelegate, NSSplitViewDelegate, SKActionPreviewViewControllerDelegate, SKActionAssignControllerDelegate, GTFActionEditorDelegate>
{
    DVTObservingToken *_actionEditorSelectedActionsKVOToken;
    DVTObservingToken *_actionEditorFilterStringKVOToken;
    DVTObservingToken *_previewSceneTargetKVOToken;
    DVTObservingToken *_previewSceneNavigableObjectKVOToken;
    DVTObservingToken *_previewSceneSelectedObjectsKVOToken;
    DVTReplacementView *_actionEditorReplacementView;
    GTFActionEditor *_actionEditorViewController;
    DVTReplacementView *_previewSceneReplacementView;
    SKActionPreviewViewController *_previewSceneViewController;
    SKEditView *_spriteKitEditView;
    SKActionDocumentSplitView *_splitView;
    SKActionDocumentBorderedView *_sceneEditorGroupView;
    SKActionDocumentScopeBarView *_toolbarView;
    NSPopUpButton *_sceneSelector;
    NSView *_sceneSelectorView;
    DVTGradientImageButton *_actionEditorToggleButton;
    NSView *_playbackSpeedView;
    DVTStepperTextField *_playbackSpeedField;
    DVTGradientImageButton *_previewPauseResumeButton;
    DVTGradientImageButton *_previewPlayStopButton;
    NSMutableDictionary *_actionFilter;
    SKDocument *_previewDocument;
    NSArrayController *_sceneURLs;
    BOOL _isInitialLayout;
    BOOL _ignoreSelectionChanges;
    long long _previewState;
}

+ (id)toolTipForHideActionEditorViewButton;
+ (id)toolTipForShowActionEditorButton;
- (void).cxx_destruct;
- (void)replacementView:(id)arg1 willCloseViewController:(id)arg2;
- (void)replacementView:(id)arg1 didInstallViewController:(id)arg2;
- (void)previewPauseResumeButtonPressed:(id)arg1;
- (void)previewPlayStopButtonPressed:(id)arg1;
- (void)updateActionPreview;
- (BOOL)actionEditor:(id)arg1 shouldSupportPastedActions:(id)arg2;
- (id)undoManagerForActionEditor:(id)arg1;
- (void)refreshObjectLibrary;
@property(readonly, nonatomic) GTFActionLibrary *actionLibrary;
- (id)allTargets;
- (id)nodesFilteredByString:(id)arg1;
- (void)updateActionEditorAllTargetsFilter:(id)arg1;
- (void)updateActionEditorFilterString:(id)arg1;
- (void)updateActionEditorFilteredActions:(id)arg1 toTargets:(id)arg2 sync:(BOOL)arg3;
- (void)selectDocumentLocations:(id)arg1;
- (void)splitViewItemDidExpandOrCollapseBecauseUserDraggedDivider:(id)arg1;
- (BOOL)splitView:(id)arg1 canCollapseSubview:(id)arg2;
- (double)splitView:(id)arg1 constrainSplitPosition:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(id)arg1 constrainMinCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(id)arg1 constrainMaxCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (id)actionDocumentURLForPreviewController:(id)arg1;
- (void)takeFocus;
- (void)playbackSpeedUpdated:(id)arg1;
- (id)loadAndRetainSKDocumentAtURL:(id)arg1;
- (void)setPreviewDocumentOnPreviewSceneViewController;
- (void)loadPreviewFromURL:(id)arg1;
- (void)previewSceneSelected:(id)arg1;
- (void)updateSceneSelectorToURL:(id)arg1;
- (void)refreshPreviewButtonsForState;
- (void)updateToolTipsForShowEditorViewButtons;
- (void)resizeActionEditorToInitialHeight;
- (void)updateLayoutPropertiesAfterUserDraggedDivider;
- (void)updateLayoutAfterButtonPress:(id)arg1;
- (void)populateSceneSelectorIgnoringURL:(id)arg1;
- (void)populateSceneSelector;
- (void)setupToolbarViewLayout;
- (void)updateLastActionEditorState;
- (void)primitiveInvalidate;
- (void)viewWillUninstall;
- (void)registerForActionLibraryNotifications;
- (void)viewDidInstall;
- (void)viewDidLoad;
- (void)viewDidLayout;
@property(readonly, nonatomic) SKEditingActionTarget *actionEditingTarget;
- (id)skView;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKActionEditorNavigableRepresentedNode : NSObject <IDEKeyDrivenNavigableItemRepresentedObject>
{
    NSArray *_children;
    SKNode *_representedNode;
    NSMutableArray *_actions;
}

@property(retain, nonatomic) NSMutableArray *actions; // @synthesize actions=_actions;
@property(readonly, nonatomic) SKNode *representedNode; // @synthesize representedNode=_representedNode;
- (void).cxx_destruct;
- (id)ideModelObjectTypeIdentifier;
@property(readonly) NSString *navigableItem_name;
@property(readonly, nonatomic) NSArray *children;
- (void)updateRepresentedNode:(id)arg1;
- (id)initForRepresentedNode:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTDocumentLocation *navigableItem_contentDocumentLocation;
@property(readonly) DVTFileDataType *navigableItem_documentType;
@property(readonly) IDEFileReference *navigableItem_fileReference;
@property(readonly) NSString *navigableItem_groupIdentifier;
@property(readonly) NSImage *navigableItem_image;
@property(readonly) BOOL navigableItem_isLeaf;
@property(readonly) BOOL navigableItem_isMajorGroup;
@property(readonly) NSString *navigableItem_toolTip;
@property(readonly) Class superclass;

@end

@interface SKActionPreviewViewController : DVTViewController
{
    id <SKActionPreviewViewControllerDelegate> _delegate;
    NSDocument *_previewSceneDocument;
    GTFActionEditor *_actionEditor;
    GTFActionLibrary *_actionLibrary;
    double _playbackSpeed;
}

@property(nonatomic) double playbackSpeed; // @synthesize playbackSpeed=_playbackSpeed;
@property(retain, nonatomic) GTFActionLibrary *actionLibrary; // @synthesize actionLibrary=_actionLibrary;
@property(nonatomic) __weak GTFActionEditor *actionEditor; // @synthesize actionEditor=_actionEditor;
@property(retain, nonatomic) NSDocument *previewSceneDocument; // @synthesize previewSceneDocument=_previewSceneDocument;
@property(nonatomic) __weak id <SKActionPreviewViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)clearSelection;
- (void)setIsInitialLayout;
- (id)restoreCachedNodeAssignmentsForEditorURL:(id)arg1;
- (void)cacheNodeAssignmentsForEditorURL:(id)arg1;
- (void)forceStartSimulate;
- (void)updateActionPreview;
- (void)togglePausePlay;
- (void)togglePlayStop;
@property(retain, nonatomic) NSArray *selectedObjects;
@property(readonly, nonatomic) id topLevelNavigablePreviewSceneObject;
- (void)primitiveInvalidate;

@end

@interface SKActionEmptyPreviewViewController : SKActionPreviewViewController
{
    DVTBorderedView *_backgroundView;
    NSTextField *_messageLabel;
}

@property(retain) NSTextField *messageLabel; // @synthesize messageLabel=_messageLabel;
@property(retain) DVTBorderedView *backgroundView; // @synthesize backgroundView=_backgroundView;
- (void).cxx_destruct;
- (void)viewDidLoad;

@end

@interface SKActionSceneUnarchiverDummy : SKScene
{
}

- (id)initWithCoder:(id)arg1;

@end

@interface SKActionSpriteKitPreviewViewController : SKActionPreviewViewController <EditOverlayDelegate, SKSceneDelegate>
{
    SKDocument *_skPreviewDocument;
    SKScene *_skPreviewScene;
    double _oldPlaybackSpeed;
    SKActionEditorNavigableRepresentedNode *_navigableScene;
    NSArray *_selectedNodes;
    NSMutableDictionary *_uidToNavNode;
    BOOL _isInitialLayoutNext;
    BOOL _isInitialLayout;
    BOOL _isUpdatingSelection;
    SKEditView *_mainView;
    EditOverlayView *_overlayView;
}

@property(retain, nonatomic) EditOverlayView *overlayView; // @synthesize overlayView=_overlayView;
@property(retain, nonatomic) SKEditView *mainView; // @synthesize mainView=_mainView;
- (void).cxx_destruct;
- (void)editOverlayDidChangeScene:(id)arg1;
- (void)didEvaluateActionsForScene:(id)arg1;
- (void)update:(double)arg1 forScene:(id)arg2;
- (void)setActionsOnSceneNodes;
- (void)togglePausePlay;
- (void)togglePlayStop;
- (void)updateActionPreview;
- (void)forceStartSimulate;
- (void)clearSelection;
- (id)selectedObjects;
- (void)_setSelectedObjects:(id)arg1 skipEditOverlay:(BOOL)arg2;
- (void)setSelectedObjects:(id)arg1;
- (void)editOverlayDidSelectNodes:(id)arg1;
@property(retain, nonatomic) SKScene *previewScene;
- (id)topLevelNavigablePreviewSceneObject;
- (void)createNavigablePreviewNodes;
- (void)setPreviewSceneDocument:(id)arg1;
- (void)restoreCachedNodeAssignments;
- (void)cacheNodeAssignments;
- (void)primitiveInvalidate;
- (void)viewWillUninstall;
- (void)setIsInitialLayout;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKBitFlagGroupProperty : IDEInspectorProperty <NSTableViewDelegate>
{
}

- (void)setupRefreshTriggersAndConfigure;
- (void)refresh;
- (double)baseline;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKBitMask32Control : NSControl
{
    unsigned int _bitMask;
    id __target;
    SEL __action;
}

@property(nonatomic) SEL _action; // @synthesize _action=__action;
@property(nonatomic) id _target; // @synthesize _target=__target;
- (void)drawRect:(struct CGRect)arg1;
- (void)mouseUp:(id)arg1;
- (void)mouseDown:(id)arg1;
- (int)calculateBitMaskIndex:(struct CGPoint)arg1;
- (void)mouseDragged:(id)arg1;
@property(nonatomic) unsigned int bitMask;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SKCameraNode (InspectorAdditions)
+ (id)keyPathsForValuesAffectingHasPhysicsBody;
- (id)ide_undoKVOKeypaths;
- (void)setNilValueForKey:(id)arg1;
- (id)inspectorAttributes;
@property(nonatomic) float spriteKitEditorMass;
@property(nonatomic) double physicsBodyAngularDamping;
@property(nonatomic) double physicsBodyLinearDamping;
@property(nonatomic) double physicsBodyRestitution;
@property(nonatomic) double physicsBodyFriction;
@property(nonatomic) BOOL physicsBodyAffectedByGravity;
@property(nonatomic) BOOL physicsBodyPinned;
@property(nonatomic) BOOL physicsBodyAllowsRotation;
@property(nonatomic) BOOL physicsBodyDynamicType;
@property(retain, nonatomic) NSNumber *skEditorFieldMask;
@property(retain, nonatomic) NSNumber *skEditorContactMask;
@property(retain, nonatomic) NSNumber *skEditorCollisionMask;
@property(retain, nonatomic) NSNumber *skEditorCategoryMask;
@property(nonatomic) float physicsBodyRadius;
@property(nonatomic) int physicsBodyType;
- (BOOL)hasPhysicsBody;
@end

@interface SKColorRampControl : NSControl
{
    SKColorRampStop *_selectedStop;
    SKColorWell *_fakeColorWell;
    NSMutableArray *_stops;
    struct CGColor *_stopColor;
    struct CGColor *_selectedStopColor;
    struct CGColor *_bgColor;
    BOOL _didDragSelected;
    BOOL _shouldDeleteSelected;
    id _target;
    SEL _action;
    SKColorRampStop *_selectedColorStop;
}

@property(retain) SKColorRampStop *selectedColorStop; // @synthesize selectedColorStop=_selectedColorStop;
- (void).cxx_destruct;
- (void)drawRect:(struct CGRect)arg1;
- (void)displayKeyframeSequence:(id)arg1;
- (id)createKeyframeSequence;
- (id)colorStopAtLocation:(double)arg1;
- (void)removeColorStop:(id)arg1;
- (void)removeAllColorStops;
- (void)addColorStop:(id)arg1;
- (void)_sortColorStops;
- (id)colorStops;
- (void)mouseUp:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)changeColor:(id)arg1;
- (double)_rampLocationOfPoint:(struct CGPoint)arg1;
- (struct CGRect)_colorRampRect;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)ensurePanelExclusive;
- (SEL)action;
- (id)target;
- (void)setAction:(SEL)arg1;
- (void)setTarget:(id)arg1;
- (void)deactivate;

@end

@interface SKColorRampStop : NSObject <NSCopying>
{
    double _location;
    NSColor *_color;
}

+ (id)stopWithColor:(id)arg1 location:(double)arg2;
@property(copy) NSColor *color; // @synthesize color=_color;
@property double location; // @synthesize location=_location;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)copy;
- (id)init;

@end

@interface SKColorWell : NSColorWell
{
    id _delegate;
}

@property(nonatomic) __weak id delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)deactivate;

@end

@interface SKDebuggingAdditionUIController : NSObject <IDEDebuggingAdditionUIController>
{
    DVTExtension *_extension;
}

- (void).cxx_destruct;
- (void)primitiveInvalidate;
- (id)extension;
- (id)initWithWorkspaceTabController:(id)arg1 withDebuggingAddition:(id)arg2 forExtension:(id)arg3;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface SKDocument : GTFActionDocument <IDEDocumentStructureProviding, NSKeyedUnarchiverDelegate>
{
    BOOL _pauseAttrObserver;
    NSObject<OS_dispatch_queue> *_syncQueue;
    BOOL _usesActions;
    BOOL _isSceneEditor;
    id <SKEditingTarget> _editingTarget;
    NSURL *_workspaceURL;
    SKDocumentEditor *_documentEditor;
    GTFActionTimelineModel *_inspectedAction;
    id <SKDocumentDelegate> _delegate;
}

+ (id)keyPathsForValuesAffectingIdeTopLevelStructureObjects;
+ (id)currentWorkspaceBaseURL;
+ (id)fetchFileUrlFromWorkSpace:(id)arg1;
+ (id)nextUID;
+ (id)documentForNode:(id)arg1;
+ (void)removeDocumentInstance:(id)arg1;
+ (void)addDocumentInstance:(id)arg1;
+ (id)documents;
@property(nonatomic) __weak id <SKDocumentDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) GTFActionTimelineModel *inspectedAction; // @synthesize inspectedAction=_inspectedAction;
@property(readonly, nonatomic) BOOL isSceneEditor; // @synthesize isSceneEditor=_isSceneEditor;
@property(nonatomic) __weak SKDocumentEditor *documentEditor; // @synthesize documentEditor=_documentEditor;
@property(readonly) id <SKEditingTarget> editingTarget; // @synthesize editingTarget=_editingTarget;
- (void).cxx_destruct;
- (BOOL)canSave;
@property(readonly) NSArray *ideTopLevelStructureObjects;
- (BOOL)writeToURL:(id)arg1 ofType:(id)arg2 error:(id *)arg3;
- (BOOL)readFromURL:(id)arg1 ofType:(id)arg2 error:(id *)arg3;
- (Class)unarchiver:(id)arg1 cannotDecodeObjectOfClassName:(id)arg2 originalClasses:(id)arg3;
- (BOOL)ensureDocumentBundle;
@property(readonly, nonatomic) NSURL *workspaceURL; // @synthesize workspaceURL=_workspaceURL;
- (void)undoEvent:(id)arg1;
- (void)createSceneUndoEvent:(id)arg1;
- (void)stopUndoObservationsOf:(id)arg1;
- (void)startUndoObservationsOf:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (BOOL)shouldPauseAttributeObserver;
- (id)findStringMatchingDescriptor:(id)arg1 backwards:(BOOL)arg2 from:(id)arg3 to:(id)arg4;
- (void)toggleAttributeObserverPause:(BOOL)arg1;
- (void)undoWithKVCUndoRecord:(id)arg1;
- (void)setupUndoManager:(id)arg1;
- (void)teardownUndoManager:(id)arg1;
- (long long)actionEditorClientDocumentType;
- (void)editorDocumentWillClose;
- (void)prepareForDocumentClose;
- (void)dealloc;
- (id)init;
- (void)updateChangeCount:(unsigned long long)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKDocumentBundle : NSBundle
{
    SKDocumentBundleCache *_cache;
}

+ (void)releaseSharedBundleForSKDocument:(id)arg1;
+ (id)sharedBundleForSKDocument:(id)arg1;
@property(retain, nonatomic) SKDocumentBundleCache *cache; // @synthesize cache=_cache;
- (void).cxx_destruct;
- (id)searchDirectoryForResource:(id)arg1 withExtension:(id)arg2;
- (id)URLForResource:(id)arg1 withExtension:(id)arg2;
- (id)pathForResource:(id)arg1 ofType:(id)arg2;
- (id)initWithPath:(id)arg1 andCache:(id)arg2;

@end

@interface SKDocumentBundleCache : NSObject <DVTInvalidation>
{
    NSURL *_url;
    id <DVTInvalidation> _variantContextKVOToken;
    IDEMediaResourceVariantContext *_variantContext;
    NSMutableDictionary *_resourceCache;
    BOOL _isBuildingCache;
    NSDictionary *_directoryCache;
}

+ (void)initialize;
@property(retain) NSDictionary *directoryCache; // @synthesize directoryCache=_directoryCache;
@property BOOL isBuildingCache; // @synthesize isBuildingCache=_isBuildingCache;
@property(retain, nonatomic) NSDictionary *resourceCache; // @synthesize resourceCache=_resourceCache;
- (void).cxx_destruct;
- (void)retrieveIDEMediaResourcesWithFoldingStrategy:(id)arg1;
- (void)buildDirectoryCache;
- (void)primitiveInvalidate;
- (void)_commonInit;
- (id)initWithURL:(id)arg1;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface SKDocumentEditor : IDEEditor <DVTFindBarFindable, DVTReplacementViewDelegate>
{
    SKDocumentViewController *_documentViewController;
    GTFFileSystemEventStream *_eventStream;
    NSArray *_currentSelectedItems;
    DVTReplacementView *_documentReplacementView;
}

+ (BOOL)canProvideCurrentSelectedItems;
@property(retain) DVTReplacementView *documentReplacementView; // @synthesize documentReplacementView=_documentReplacementView;
@property(copy) NSArray *currentSelectedItems; // @synthesize currentSelectedItems=_currentSelectedItems;
@property(retain, nonatomic) SKDocumentViewController *documentViewController; // @synthesize documentViewController=_documentViewController;
- (void).cxx_destruct;
- (void)replacementView:(id)arg1 willCloseViewController:(id)arg2;
- (void)replacementView:(id)arg1 willInstallViewController:(id)arg2;
- (id)startingLocationForFindBar:(id)arg1 findingBackwards:(BOOL)arg2;
- (void)dvtFindBar:(id)arg1 didUpdateResults:(id)arg2;
- (void)takeFocus;
- (void)selectDocumentLocations:(id)arg1;
- (id)currentSelectedDocumentLocations;
- (void)registerFSEvents;
@property(readonly) SKDocument *document;
- (void)viewWillUninstall;
- (void)viewDidInstall;
- (void)primitiveInvalidate;
- (void)invalidateFSEvents;
- (id)_activeWorkspace;
- (void)loadView;
- (Class)convertSKTargetToEditorClass:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2 document:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKDocumentInspector : IDEInspectorViewController
{
}

- (id)uistring_sampleSection;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)setContent:(id)arg1;

@end

@interface SKDocumentLocation : DVTDocumentLocation
{
    id _skobject;
}

- (void).cxx_destruct;
@property(readonly, nonatomic) BOOL isSKActionEditorNavigableRepresentedNode;
@property(readonly, nonatomic) SKActionEditorNavigableRepresentedNode *asSKActionEditorNavigableRepresentedNode;
@property(readonly, nonatomic) BOOL isGTFAction;
@property(readonly, nonatomic) GTFActionModel *asGTFAction;
@property(readonly, nonatomic) BOOL isSKNode;
@property(readonly, nonatomic) SKNode *asSKNode;
- (id)description;
- (id)initWithDocumentURL:(id)arg1 withSKObject:(id)arg2;

@end

@interface SKDocumentNavigableItem : IDEKeyDrivenNavigableItem
{
}

+ (id)rootNavigableItemForNode:(id)arg1;
+ (void)removeRootNavigableItem:(id)arg1;
- (id)contentDocumentLocation;
- (BOOL)isLeaf;
- (id)documentType;
- (id)representedDocument;
- (id)representedNode;
- (id)initWithRepresentedObject:(id)arg1;
- (void)_setRepresentedObject:(id)arg1;

@end

@interface SKEditView : SKView
{
    unsigned long long _lastMouseEventModFlags;
    unsigned long long _lastEventFlag;
    unsigned long long _lastDragEventFlag;
    id _eventMonitor;
    struct CGPoint _lastTouchPoint;
    unsigned long long _lastTouchId;
    BOOL _shouldRestoreZoom;
    EditOverlayView *_overlayView;
    NSEvent *_lastMouseDownEvent;
    NSEvent *_lastMouseDragEvent;
}

@property(nonatomic) BOOL shouldRestoreZoom; // @synthesize shouldRestoreZoom=_shouldRestoreZoom;
@property(readonly) NSEvent *lastMouseDragEvent; // @synthesize lastMouseDragEvent=_lastMouseDragEvent;
@property(readonly) NSEvent *lastMouseDownEvent; // @synthesize lastMouseDownEvent=_lastMouseDownEvent;
@property unsigned long long lastMouseEventModFlags; // @synthesize lastMouseEventModFlags=_lastMouseEventModFlags;
@property(nonatomic) __weak EditOverlayView *overlayView; // @synthesize overlayView=_overlayView;
- (void).cxx_destruct;
- (void)draggingEnded:(id)arg1;
- (void)draggingExited:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (void)_update:(double)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (void)sendSelectedNodeToPasteboard:(struct CGPoint)arg1;
- (void)willRenderContent;
- (void)touchCancelled:(unsigned long long)arg1 location:(struct CGPoint)arg2 clickCount:(int)arg3;
- (void)touchEnded:(unsigned long long)arg1 location:(struct CGPoint)arg2 clickCount:(int)arg3;
- (void)touchMoved:(unsigned long long)arg1 location:(struct CGPoint)arg2 clickCount:(int)arg3;
- (void)touchBegan:(unsigned long long)arg1 location:(struct CGPoint)arg2 clickCount:(int)arg3;
- (void)keyUp:(id)arg1;
- (void)keyDown:(id)arg1;
- (void)flagsChanged:(id)arg1;
- (void)mouseUp:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)mouseDown:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SKEditingActionTarget : NSObject <SKEditingTarget, GTFActionLibraryUndoDelegate>
{
    DVTObservingToken *_documentEditedKVOToken;
    GTFActionLibrary *_actionLibrary;
    BOOL _needsToWriteMetadata;
    SKActionEditorNavigableRepresentedNode *_navigableScene;
    SKDocument *_document;
    NSString *_previewScenePath;
    id _topLevelNavigablePreviewSceneObject;
}

+ (id)keyPathsForValuesAffectingTopLevelStructuredObject;
+ (id)targetWithActionFile:(id)arg1 document:(id)arg2;
@property(retain, nonatomic) id topLevelNavigablePreviewSceneObject; // @synthesize topLevelNavigablePreviewSceneObject=_topLevelNavigablePreviewSceneObject;
@property(retain, nonatomic) NSString *previewScenePath; // @synthesize previewScenePath=_previewScenePath;
@property(readonly, nonatomic) GTFActionLibrary *actionLibrary; // @synthesize actionLibrary=_actionLibrary;
@property(nonatomic) __weak SKDocument *document; // @synthesize document=_document;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSMutableArray *dynamicObjectLibraryAssets;
@property(readonly, nonatomic) NSMutableArray *staticObjectLibraryAssets;
@property(readonly, nonatomic) NSString *objectsLibraryCustomGroupIdentifier;
@property(readonly, nonatomic) NSString *objectsLibraryTitle;
- (id)undoManagerForActionLibrary:(id)arg1;
- (id)findStringMatchingDescriptor:(id)arg1 backwards:(BOOL)arg2 from:(id)arg3 to:(id)arg4;
- (void)prepareTargetForDocumentClose;
@property(readonly, nonatomic) NSArray *topLevelStructuredObject;
- (BOOL)writeToURL:(id)arg1 ofType:(id)arg2 error:(id *)arg3;
- (BOOL)isTargetForObject:(id)arg1;
@property(nonatomic) BOOL paused;
- (id)initWithActionFile:(id)arg1 document:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property unsigned long long supportedMatchingOptions;

@end

@interface SKEditingEmitterTarget : NSObject <SKEditingTarget>
{
    SKEmitterNode *_target;
    BOOL _targetObserved;
    SKDocument *_document;
    SKEditorScene *_scene;
}

+ (id)targetWithEmitterNode:(id)arg1 document:(id)arg2;
@property(readonly, nonatomic) SKEditorScene *scene; // @synthesize scene=_scene;
@property(nonatomic) __weak SKDocument *document; // @synthesize document=_document;
- (void).cxx_destruct;
- (void)unobserveTarget;
- (void)observeTarget;
- (void)targetDataDidChange:(id)arg1;
- (void)createEditingEmitterAction;
@property(readonly, nonatomic) NSMutableArray *dynamicObjectLibraryAssets;
@property(readonly, nonatomic) NSMutableArray *staticObjectLibraryAssets;
@property(readonly, nonatomic) NSString *objectsLibraryCustomGroupIdentifier;
@property(readonly, nonatomic) NSString *objectsLibraryTitle;
- (void)setEditSceneSize:(struct CGSize)arg1;
- (id)findStringMatchingDescriptor:(id)arg1 backwards:(BOOL)arg2 from:(id)arg3 to:(id)arg4;
- (void)prepareTargetForDocumentClose;
@property(readonly, nonatomic) NSArray *topLevelStructuredObject;
- (BOOL)writeToURL:(id)arg1 ofType:(id)arg2 error:(id *)arg3;
- (BOOL)isTargetForObject:(id)arg1;
@property(readonly, nonatomic) SKEmitterNode *emitterTarget;
@property(nonatomic) BOOL paused;
- (id)initWithEmitterNode:(id)arg1 document:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property unsigned long long supportedMatchingOptions;

@end

@interface SKEditingSceneTarget : NSObject <SKEditingTarget, GTFActionLibraryUndoDelegate>
{
    DVTObservingToken *_documentEditedKVOToken;
    SKScene *_target;
    GTFActionLibrary *_actionLibrary;
    NSMutableDictionary *_uidToSKNode;
    BOOL _needsToWriteMetadata;
    SKDocument *_document;
    SKScene *_layoutScene;
    NSMutableDictionary *_actionAssignments;
}

+ (id)keyPathsForValuesAffectingTopLevelStructuredObject;
+ (id)targetWithScene:(id)arg1 document:(id)arg2 fileData:(id)arg3;
@property(readonly, nonatomic) GTFActionLibrary *actionLibrary; // @synthesize actionLibrary=_actionLibrary;
@property(retain, nonatomic) NSMutableDictionary *actionAssignments; // @synthesize actionAssignments=_actionAssignments;
@property(retain, nonatomic) SKScene *layoutScene; // @synthesize layoutScene=_layoutScene;
@property(nonatomic) __weak SKDocument *document; // @synthesize document=_document;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSMutableArray *dynamicObjectLibraryAssets;
- (id)actionObjectsLibraryAssets;
- (id)sceneObjectLibraryAssets;
@property(readonly, nonatomic) NSMutableArray *staticObjectLibraryAssets;
@property(readonly, nonatomic) NSString *objectsLibraryCustomGroupIdentifier;
@property(readonly, nonatomic) NSString *objectsLibraryTitle;
- (id)undoManagerForActionLibrary:(id)arg1;
- (void)updateReferenceNodes;
- (id)encodedActionAssignments;
- (id)decodedActionAssignmentsFromData:(id)arg1 withScene:(id)arg2;
- (void)clearActionAssignmentEntryForURL:(id)arg1;
- (void)setActionAssignmentEntry:(id)arg1 forURL:(id)arg2;
- (id)nodeFromUID:(id)arg1;
- (void)addUIDToNode:(id)arg1;
- (void)refreshUIDToNodeMappings:(id)arg1;
- (void)setNewScene:(id)arg1;
- (id)findStringMatchingDescriptor:(id)arg1 backwards:(BOOL)arg2 from:(id)arg3 to:(id)arg4;
- (void)prepareTargetForDocumentClose;
@property(readonly, nonatomic) NSArray *topLevelStructuredObject;
- (BOOL)writeToURL:(id)arg1 ofType:(id)arg2 error:(id *)arg3;
- (BOOL)isTargetForObject:(id)arg1;
@property(readonly, nonatomic) SKScene *sceneTarget;
@property(nonatomic) BOOL paused;
- (id)initWithScene:(id)arg1 document:(id)arg2 fileData:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property unsigned long long supportedMatchingOptions;

@end

@interface SKEditorScene : SKScene
{
}

- (void)didChangeSize:(struct CGSize)arg1;

@end

@interface SKEffectNode (SKEffectNodeIntegration)
- (id)skInspectedAvailableFilters;
@end

@interface SKEmitterNode (InspectorAdditions) <SKNodeWithShader>
+ (id)keyPathsForValuesAffectingParticleTextureImageName;
@property(retain, nonatomic) NSURL *customSpriteShader;
- (id)ide_undoKVOKeypaths;
- (void)setNilValueForKey:(id)arg1;
- (id)inspectorAttributes;
@property(retain, nonatomic) SKNode *inspectorTargetNode;
@property BOOL shouldShowParentInInspector;
@property(nonatomic) struct CGPoint previewParticlePosition;
@property(nonatomic) double particleRotationSpeedDeg;
@property(nonatomic) double particleRotationRangeDeg;
@property(nonatomic) double particleRotationDeg;
@property(nonatomic) double emissionAngleRangeDeg;
@property(nonatomic) double emissionAngleDeg;
@property(retain, nonatomic) NSColor *backgroundColor;
@property(retain, nonatomic) NSString *particleTextureImageName;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(retain, nonatomic) SKShader *shader;
@property(readonly) Class superclass;
@end

@interface SKEmitterNodeDocumentViewController : SKDocumentViewController
{
    SKEditView *_mainView;
    EditOverlayView *_overlayView;
}

@property(nonatomic) __weak EditOverlayView *overlayView; // @synthesize overlayView=_overlayView;
@property(nonatomic) __weak SKEditView *mainView; // @synthesize mainView=_mainView;
- (void).cxx_destruct;
- (void)takeFocus;
- (void)viewWillUninstall;
- (void)viewDidInstall;
- (id)skView;

@end

@interface SKFieldNode (InspectorAdditions)
@property(nonatomic) struct CGPoint skEditorDirection;
@end

@interface SKGeniusResultsFinder : IDEIndexGeniusResultsFinder
{
}

+ (Class)editorDocumentClass;
- (id)_packagedGeniusResultsFromLocations:(id)arg1;
- (id)_geniusLocationsForViewObject:(id)arg1 inIndex:(id)arg2;
- (BOOL)_getUpdateGeniusResultsPhaseOneBlock:(CDUnknownBlockType *)arg1 phaseTwoBlock:(CDUnknownBlockType *)arg2 phaseThreeBlock:(CDUnknownBlockType *)arg3;
- (BOOL)doesNodeHaveShader:(id)arg1;
- (id)geniusCategoryIdentifier;

@end

@interface SKInspectorBitMask32Property : IDEInspectorProperty
{
    SKBitMask32Control *_bitMask32Control;
    IDEInspectorKeyPath *_valueKeyPath;
}

- (void).cxx_destruct;
- (void)setupRefreshTriggersAndConfigure;
- (void)refresh;
- (void)userDidChangeValue:(id)arg1;
- (double)baseline;

@end

@interface SKInspectorColorProperty : IDEInspectorProperty
{
    NSColorWell *bgColorWell;
    IDEInspectorKeyPath *_valueKeyPath;
    NSColor *_defaultColor;
}

- (void).cxx_destruct;
- (void)userDidChangeValue:(id)arg1;
- (void)refresh;
- (void)setupRefreshTriggersAndConfigure;
- (double)baseline;

@end

@interface SKInspectorColorRampProperty : IDEInspectorProperty
{
    SKColorRampControl *colorRampControl;
    IDEInspectorKeyPath *_valueKeyPath;
    NSArray *_representedObjs;
}

- (void).cxx_destruct;
- (void)setupRefreshTriggersAndConfigure;
- (void)refresh;
- (void)userDidChangeValue:(id)arg1;
- (double)baseline;

@end

@interface SKInspectorMultiResourceProperty : IDEInspectorProperty <NSTableViewDataSource, NSTableViewDelegate>
{
    IDEInspectorKeyPath *_valueKeyPath;
    DVTTableView *_tableView;
    NSDictionary *_mediaFileMapper;
    NSDictionary *_displayNamePathMapper;
    id <DVTInvalidation> _variantContextKVOToken;
    IDEMediaResourceVariantContext *_variantContext;
}

+ (id)parseAssetCatalogAtPath:(id)arg1;
+ (id)supportedSoundFileTypes;
+ (id)supportedFileTypes;
- (void).cxx_destruct;
- (void)updateRowSelection;
- (void)tableViewSelectionDidChange:(id)arg1;
- (void)tableViewSelectionIsChanging:(id)arg1;
- (id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3;
- (double)tableView:(id)arg1 heightOfRow:(long long)arg2;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)userDidChangeValue:(id)arg1;
- (void)setupRefreshTriggersAndConfigure;
- (void)keyUp:(id)arg1;
- (void)refresh;
- (double)baseline;
- (BOOL)tableView:(id)arg1 writeRowsWithIndexes:(id)arg2 toPasteboard:(id)arg3;
- (BOOL)tableView:(id)arg1 acceptDrop:(id)arg2 row:(long long)arg3 dropOperation:(unsigned long long)arg4;
- (unsigned long long)tableView:(id)arg1 validateDrop:(id)arg2 proposedRow:(long long)arg3 proposedDropOperation:(unsigned long long)arg4;
- (void)retrieveIDEMediaResourceWithFoldingStrategy:(id)arg1;
- (void)primitiveInvalidate;
- (void)awakeFromNib;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKInspectorNodeFileProperty : IDEInspectorProperty
{
    NSPopUpButton *_popUpButton;
    NSArrayController *_availableNodeFilenames;
    IDEInspectorKeyPath *_valueKeyPath;
}

+ (id)scannedSceneFiles;
- (void).cxx_destruct;
- (void)userDidChangeValue:(id)arg1;
- (void)setupRefreshTriggersAndConfigure;
- (void)refresh;
- (double)baseline;
- (id)popUpButton;

@end

@interface SKInspectorNodeProperty : IDEInspectorProperty
{
    NSComboBox *_comboBox;
    IDEInspectorKeyPath *_valueKeyPath;
    IDEInspectorKeyPath *_sceneKeyPath;
    IDEInspectorKeyPath *_selectionKeyPath;
    NSArray *_sortedResults;
}

- (void).cxx_destruct;
- (void)userDidChangeValue:(id)arg1;
- (void)setupRefreshTriggersAndConfigure;
- (void)refresh;
- (double)baseline;
- (id)comboBox;

@end

@interface SKInspectorResourceProperty : IDEInspectorProperty
{
    NSComboBox *_comboBox;
    NSArray *_availableMediaFiles;
    IDEInspectorKeyPath *_valueKeyPath;
    id <DVTInvalidation> _variantContextKVOToken;
    IDEMediaResourceVariantContext *_variantContext;
}

+ (id)scannedTextureNames;
+ (id)parseAssetCatalogAtPath:(id)arg1;
+ (id)supportedSoundFileTypes;
+ (id)supportedFileTypes;
- (void).cxx_destruct;
- (void)userDidChangeValue:(id)arg1;
- (void)setupRefreshTriggersAndConfigure;
- (void)refresh;
- (void)retrieveIDEMediaResourceWithFoldingStrategy:(id)arg1;
- (double)baseline;
- (id)comboBox;
- (void)primitiveInvalidate;
- (id)initWithPropertyDefinition:(id)arg1 andController:(id)arg2;

@end

@interface SKInspectorShaderProperty : IDEInspectorProperty
{
    NSComboBox *_comboBox;
    NSArray *_availableShaderFiles;
    IDEInspectorKeyPath *_valueKeyPath;
}

+ (id)scannedShaderNames;
+ (id)supportedFileTypes;
- (void).cxx_destruct;
- (void)userDidChangeValue:(id)arg1;
- (void)setupRefreshTriggersAndConfigure;
- (void)refresh;
- (double)baseline;
- (id)comboBox;

@end

@interface SKInspectorSoundProperty : IDEInspectorProperty
{
    NSComboBox *_comboBox;
    NSArray *_availableSoundFiles;
    IDEInspectorKeyPath *_valueKeyPath;
}

+ (id)scannedSoundNames;
+ (id)supportedSoundFileTypes;
- (void).cxx_destruct;
- (void)userDidChangeValue:(id)arg1;
- (void)setupRefreshTriggersAndConfigure;
- (void)refresh;
- (double)baseline;
- (id)comboBox;

@end

@interface SKInspectorThreeColumnsLayoutView : DVTLayoutView_ML
{
}

- (void)layoutBottomUp;
- (void)layoutTopDown;

@end

@interface SKInspectorVector2Property : IDEInspectorProperty
{
    DVTStepperTextField *xLabel;
    DVTStepperTextField *yLabel;
    NSTextField *xTextField;
    NSTextField *yTextField;
    IDEInspectorKeyPath *_valueKeyPath;
    IDEInspectorKeyPath *_xValueKeyPath;
    IDEInspectorKeyPath *_yValueKeyPath;
    NSString *_nilPlaceholder;
}

- (void).cxx_destruct;
- (void)setupRefreshTriggersAndConfigure;
- (void)refresh;
- (void)userDidChangeValue:(id)arg1;
- (void)applyUserSizeFromSender:(id)arg1 byMappingValues:(CDUnknownBlockType)arg2;
- (double)baseline;

@end

@interface SKInspectorVector3Property : IDEInspectorProperty
{
    DVTStepperTextField *xLabel;
    DVTStepperTextField *yLabel;
    DVTStepperTextField *zLabel;
    NSTextField *xTextField;
    NSTextField *yTextField;
    NSTextField *zTextField;
    IDEInspectorKeyPath *_xValueKeyPath;
    IDEInspectorKeyPath *_yValueKeyPath;
    IDEInspectorKeyPath *_zValueKeyPath;
    NSString *_nilPlaceholder;
}

- (void).cxx_destruct;
- (void)setupRefreshTriggersAndConfigure;
- (void)refresh;
- (void)userDidChangeValue:(id)arg1;
- (double)baseline;

@end

@interface SKKVCUndoRecord : NSObject
{
    NSString *_keyPath;
    id _object;
    id _value;
}

@property(readonly) id value; // @synthesize value=_value;
@property(readonly) id object; // @synthesize object=_object;
@property(readonly) NSString *keyPath; // @synthesize keyPath=_keyPath;
- (void).cxx_destruct;
- (id)initWithObject:(id)arg1 andValue:(id)arg2 forKeyPath:(id)arg3;

@end

@interface SKLabelNode (InspectorAdditions) <IDEKeyDrivenNavigableItemRepresentedObject>
+ (id)keyPathsForValuesAffectingNavigableItem_name;
@property(retain, nonatomic) NSFont *ideFont;
@property(readonly) NSString *navigableItem_name;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTDocumentLocation *navigableItem_contentDocumentLocation;
@property(readonly) DVTFileDataType *navigableItem_documentType;
@property(readonly) IDEFileReference *navigableItem_fileReference;
@property(readonly) NSString *navigableItem_groupIdentifier;
@property(readonly) NSImage *navigableItem_image;
@property(readonly) BOOL navigableItem_isLeaf;
@property(readonly) BOOL navigableItem_isMajorGroup;
@property(readonly) NSString *navigableItem_toolTip;
@property(readonly) Class superclass;
@end

@interface SKNode (InspectorAdditions) <IDEKeyDrivenNavigableItemRepresentedObject, GTFActionLibraryTarget>
+ (id)keyPathsForValuesAffectingNav_children;
+ (id)keyPathsForValuesAffectingNavigableItem_name;
+ (id)keyPathsForValuesAffectingGtf_name;
+ (id)keyPathsForValuesAffectingGtf_thumbnailImage;
+ (id)keyPathsForValuesAffectingInspectorName;
@property(readonly, nonatomic) GTFActionTimelineModel *nav_action;
@property(readonly, nonatomic) NSArray *nav_children;
@property(retain, nonatomic) NSString *skCustomModuleName;
@property(retain, nonatomic) NSString *skCustomClassName;
- (id)ideModelObjectTypeIdentifier;
@property(readonly) NSString *navigableItem_name;
@property(readonly, nonatomic) NSIndexPath *indexPath;
@property(readonly, nonatomic) NSString *gtf_name;
@property(readonly, nonatomic) GTFActionLibraryTargetThumbnail *gtf_thumbnailImage;
- (void)setGtf_uid:(id)arg1;
@property(readonly, nonatomic) id <NSCopying> gtf_uid;
- (void)removeUID;
@property(retain, nonatomic) NSValue *uid;
@property(readonly, nonatomic) SKNode *greatestReferenceNodeAncestor;
@property(readonly, nonatomic) BOOL isReferenced;
@property(nonatomic) BOOL isLocked;
@property(nonatomic) double zRotationDeg;
@property(retain, nonatomic) SKNode *parentRef;
@property(readonly, nonatomic) __weak SKNode *selfRef;
@property(retain, nonatomic) NSString *inspectorName;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTDocumentLocation *navigableItem_contentDocumentLocation;
@property(readonly) DVTFileDataType *navigableItem_documentType;
@property(readonly) IDEFileReference *navigableItem_fileReference;
@property(readonly) NSString *navigableItem_groupIdentifier;
@property(readonly) NSImage *navigableItem_image;
@property(readonly) BOOL navigableItem_isLeaf;
@property(readonly) BOOL navigableItem_isMajorGroup;
@property(readonly) NSString *navigableItem_toolTip;
@property(readonly) Class superclass;
@end

@interface SKNode (SKNodeIntegration)
+ (id)keyPathsForValuesAffectingSkInspectedParticipatesInPhysics;
- (void)setSkInspectedParticipatesInPhysics:(BOOL)arg1;
- (BOOL)skInspectedParticipatesInPhysics;
- (id)skAcceptContentsOfPasteboard:(id)arg1 inDocument:(id)arg2 insertionContext:(id)arg3;
- (BOOL)skToManyRelationSupportsInsertion:(id)arg1;
- (BOOL)skToManyRelationSupportsReplacement:(id)arg1;
- (BOOL)skCanAcceptContentsOfPasteboard:(id)arg1 inDocument:(id)arg2 targetChildRelation:(id *)arg3;
- (id)skDisplayNameForKeyPath:(id)arg1;
- (id)skChildRelationOrder;
- (id)skAllToOneRelationshipsKeyPaths;
- (id)skIntegratedKeyPaths;
- (id)skPasteboardTypes;
@end

@interface SKNodeCopyData : NSObject <NSCoding, NSPasteboardWriting, NSPasteboardReading>
{
    SKNode *_node;
    NSValue *_parentUID;
}

+ (unsigned long long)readingOptionsForType:(id)arg1 pasteboard:(id)arg2;
+ (id)readableTypesForPasteboard:(id)arg1;
+ (id)copyDataForNode:(id)arg1 withParentUID:(id)arg2;
@property(readonly, nonatomic) NSValue *parentUID; // @synthesize parentUID=_parentUID;
@property(readonly, nonatomic) SKNode *node; // @synthesize node=_node;
- (void).cxx_destruct;
- (id)pasteboardPropertyListForType:(id)arg1;
- (id)writableTypesForPasteboard:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initForNode:(id)arg1 withParentUID:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKObjectLibraryAsset : DVTLibraryAsset <NSCoding>
{
}

+ (id)assetWithSKObject:(id)arg1 title:(id)arg2 subTitle:(id)arg3 summary:(id)arg4 image:(id)arg5;
+ (id)assetWithSKObject:(id)arg1 title:(id)arg2 subTitle:(id)arg3 summary:(id)arg4 image:(id)arg5 withUDID:(id)arg6;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithSKObject:(id)arg1 title:(id)arg2 subTitle:(id)arg3 summary:(id)arg4 image:(id)arg5;
- (id)initWithSKObject:(id)arg1 title:(id)arg2 subTitle:(id)arg3 summary:(id)arg4 image:(id)arg5 withUDID:(id)arg6;

@end

@interface SKObjectLibraryController : IDELibraryController
{
    NSMutableDictionary *_targetObjectsCacheForSKLibrary;
    NSString *_currentCustomGroupIdentifier;
    NSString *_currentSKLibraryTitle;
    NSArray *_currentStaticObjectsForSKLibrary;
    NSArray *_currentDynamicObjectsForSKLibrary;
    NSMutableArray *_currentUserObjectsForSKLibrary;
}

+ (id)activeController;
- (void).cxx_destruct;
- (id)editorViewControllerForAsset:(id)arg1;
- (BOOL)canRemoveAsset:(id)arg1;
- (BOOL)canEditAsset:(id)arg1;
- (void)userDidEditAsset:(id)arg1;
- (BOOL)removeAssets:(id)arg1 error:(id *)arg2;
- (BOOL)createAsset:(id *)arg1 forLibrarySourceWithIdentifier:(id *)arg2 fromPasteboard:(id)arg3;
- (void)populatePasteboard:(id)arg1 withAssets:(id)arg2;
- (BOOL)canCreateAssetsFromPasteboard:(id)arg1 targetingLibrarySourceIdentifier:(id *)arg2;
- (id)readableAssetPasteboardTypes;
@property(readonly, nonatomic) BOOL allowObjectLibrary;
- (void)libraryDidLoad;
- (void)refreshAssetsFromDocument:(id)arg1;
- (void)activeEditorDocumentDidChange:(id)arg1;
- (void)clearCurrentCustomGroupIdentifier;
- (void)populateObjectLibrary;
- (void)updateObjectsLibraryArrayForSKDocument:(id)arg1 forceUpdate:(BOOL)arg2;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

@end

@interface SKObjectLibraryCustomAssetHelper : NSObject <NSCoding>
{
    id _skObject;
    NSString *_title;
    NSString *_subtitle;
    NSString *_summary;
    NSImage *_image;
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)objectLibraryAssetWithUID:(id)arg1;

@end

@interface SKObjectLibraryDetailViewController : DVTLibraryDetailEditorController
{
}

- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

@end

@interface SKScene (InspectorAdditions) <IDEKeyDrivenNavigableItemRepresentedObject, SKNodeWithShader>
@property(retain, nonatomic) GTFActionLibrary *nav_actionLibrary;
- (id)childFromIndexPath:(id)arg1;
- (void)refreshTexturesForProject;
- (id)recreateTextureForName:(id)arg1 fromImages:(id)arg2;
- (id)reloadTextureFromFile:(id)arg1 fromImages:(id)arg2;
@property(retain, nonatomic) NSURL *customSpriteShader;
@property(nonatomic) struct CGPoint spriteKitEditorGravity;
@property(nonatomic) BOOL nodeNameDrawEnabled;
@property(nonatomic) BOOL physicsDrawEnabled;
@property(nonatomic) struct CGSize skEditorSize;
@property(nonatomic) BOOL useCameraNode;
@property(retain, nonatomic) SKCameraNode *cameraRef;
- (id)ide_undoKVOKeypaths;
- (void)setNilValueForKey:(id)arg1;
- (id)inspectorAttributes;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTDocumentLocation *navigableItem_contentDocumentLocation;
@property(readonly) DVTFileDataType *navigableItem_documentType;
@property(readonly) IDEFileReference *navigableItem_fileReference;
@property(readonly) NSString *navigableItem_groupIdentifier;
@property(readonly) NSImage *navigableItem_image;
@property(readonly) BOOL navigableItem_isLeaf;
@property(readonly) BOOL navigableItem_isMajorGroup;
@property(readonly) NSString *navigableItem_name;
@property(readonly) NSString *navigableItem_toolTip;
@property(retain, nonatomic) SKShader *shader;
@property(readonly) Class superclass;
@end

@interface SKScene (InvisibleNode)
- (id)nodeAtPointInEditor:(struct CGPoint)arg1;
@end

@interface SKSceneDocumentBorderedView : DVTBorderedView
{
}

- (void)scrollWheel:(id)arg1;

@end

@interface SKSceneDocumentScopeBarView : DVTScopeBarView
{
}

- (void)scrollWheel:(id)arg1;

@end

@interface SKSceneDocumentSplitView : DVTSplitView
{
}

- (void)scrollWheel:(id)arg1;

@end

@interface SKSceneDocumentViewController : SKDocumentViewController <DVTReplacementViewDelegate, NSSplitViewDelegate, GTFFileSystemEventStreamDelegate, GTFActionEditorDelegate, EditOverlayDelegate, SKSceneDelegate>
{
    DVTObservingToken *_actionEditorSelectedItemsKVOToken;
    DVTObservingToken *_actionEditorFilterStringKVOToken;
    id <NSObject> _replaceTimelineObserver;
    id <NSObject> _skDocumentBundleObserver;
    DVTReplacementView *_actionEditorReplacementView;
    GTFActionEditor *_actionEditorViewController;
    DVTGradientImageButton *_actionEditorToggleButton;
    SKSceneDocumentSplitView *_splitView;
    SKSceneDocumentBorderedView *_editorBackgroundView;
    SKSceneDocumentScopeBarView *_toolbarView;
    NSButton *_zoomInButton;
    NSButton *_zoomRestoreButton;
    NSButton *_zoomOutButton;
    NSButton *_simulateEditButton;
    NSButton *_previewPausePlayButton;
    NSTextField *_pausePlayTextField;
    DVTBorderedView *_playbackSpeedView;
    DVTStepperTextField *_playbackSpeedField;
    NSTextField *_playbackSpeedLabel;
    NSImage *_swappedActionEditorToggleImage;
    NSImage *_swappedActionEditorToggleAlternateImage;
    NSArray *_selectionCache;
    NSMutableDictionary *_actionFilter;
    float _oldPlaybackSpeed;
    long long _previewState;
    BOOL _isInitialLayout;
    BOOL _buttonImagesSwapped;
    BOOL _ignoreSelectionUpdates;
    SKEditView *_mainView;
    EditOverlayView *_overlayView;
}

+ (id)toolTipForHideActionEditorViewButton;
+ (id)toolTipForShowActionEditorButton;
@property(nonatomic) __weak EditOverlayView *overlayView; // @synthesize overlayView=_overlayView;
@property(nonatomic) __weak SKEditView *mainView; // @synthesize mainView=_mainView;
- (void).cxx_destruct;
- (void)receivedShaderSourceEditorStartedNotification:(id)arg1;
- (void)rebuildShaderForPath:(id)arg1 skipIfNoChange:(BOOL)arg2;
- (void)fileSystemEventStream:(id)arg1 notedChangeAtPath:(id)arg2 scanRecursively:(BOOL)arg3;
- (void)replacementView:(id)arg1 willCloseViewController:(id)arg2;
- (void)replacementView:(id)arg1 didInstallViewController:(id)arg2;
- (id)editOverlayActionForNode:(id)arg1;
- (void)editOverlayDidChangeTexture:(id)arg1;
- (void)editOverlayDidRenameNode:(id)arg1;
- (void)editOverlayDidUndoEvent;
- (void)editOverlayDidRemoveNode;
- (void)editOverlayDidDragInAction;
- (void)editOverlayDidAddNodes:(id)arg1;
- (void)editOverlayDidChangeScene:(id)arg1;
- (void)didEvaluateActionsForScene:(id)arg1;
- (void)update:(double)arg1 forScene:(id)arg2;
- (void)setActionsOnSceneNodes;
- (void)toggleAnimatePlayPause;
- (void)toggleAnimateOrLayout;
- (void)updateActionPreview;
- (void)forceStartSimulate;
- (id)allNodes;
- (id)nodesFilteredByString:(id)arg1;
- (void)updateActionEditorSelectedNodesFilter;
- (void)updateActionEditorAllNodesFilter;
- (void)updateActionEditorFilterString;
- (void)updateActionEditorFilteredActions:(id)arg1 toNodes:(id)arg2 sync:(BOOL)arg3;
- (void)updateNodesWithActionsFilter:(id)arg1;
- (BOOL)actionEditor:(id)arg1 shouldSupportPastedActions:(id)arg2;
- (void)refreshObjectLibrary;
@property(readonly, nonatomic) GTFActionLibrary *actionLibrary;
- (id)startingLocationForFindBar:(id)arg1 findingBackwards:(BOOL)arg2;
- (void)selectDocumentLocations:(id)arg1;
- (void)editOverlayDidClickEmptySpace;
- (void)editOverlayDidSelectNodes:(id)arg1;
- (void)updateSceneSelection:(id)arg1;
- (void)restoreSceneSelection;
- (void)cacheSceneSelection;
- (void)splitViewItemDidExpandOrCollapseBecauseUserDraggedDivider:(id)arg1;
- (BOOL)splitView:(id)arg1 canCollapseSubview:(id)arg2;
- (double)splitView:(id)arg1 constrainSplitPosition:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(id)arg1 constrainMinCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(id)arg1 constrainMaxCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (void)takeFocus;
- (void)playbackSpeedUpdated:(id)arg1;
- (void)setTitle:(id)arg1 forButton:(id)arg2 withColor:(id)arg3;
- (void)swapButtonImage:(id)arg1;
- (void)setToolbarBackgroundViewActive:(BOOL)arg1;
- (void)editorMenuZoomOut:(id)arg1;
- (void)editorMenuRestoreZoom:(id)arg1;
- (void)editorMenuZoomIn:(id)arg1;
- (void)editorMenuSendToBack:(id)arg1;
- (void)editorMenuBringToFront:(id)arg1;
- (void)editorMenuTogglePlayPause:(id)arg1;
- (void)buttonPressed:(id)arg1;
- (void)updateToolTipsForShowEditorViewButtons;
- (void)resizeActionEditorToInitialHeight;
- (void)updateLayoutPropertiesAfterUserDraggedDivider;
- (void)updateLayoutAfterButtonPress:(id)arg1 useAnimation:(BOOL)arg2;
- (void)updateLayoutAfterButtonPress:(id)arg1;
- (void)setupToolbarViewLayout;
- (void)updateLastActionEditorState;
- (void)primitiveInvalidate;
- (void)viewWillUninstall;
- (void)registerForTimelineNotifications;
- (void)viewDidInstall;
- (void)viewDidLoad;
- (void)viewDidLayout;
@property(readonly, nonatomic) SKEditingSceneTarget *sceneEditingTarget;
- (id)skView;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKSelectedObjectViewController : DVTPopoverContentViewController
{
    NSTextField *_selectedNodeTextField;
    NSArray *_nodes;
}

+ (struct CGRect)getRectForNode:(id)arg1;
- (void).cxx_destruct;
- (BOOL)containsNode:(id)arg1;
- (void)showPopoverInView:(id)arg1;
- (void)viewDidLoad;
- (id)initWithNodes:(id)arg1;
- (id)initWithNode:(id)arg1;

@end

@interface SKShaderAnnotationProvider : DVTAnnotationProvider <DVTTextAnnotationDelegate>
{
    IDEAnnotationContext *_context;
    IDEWorkspaceWindowController *_workspaceWindowController;
}

+ (id)annotationProviderForContext:(id)arg1 error:(id *)arg2;
@property(readonly) IDEAnnotationContext *context; // @synthesize context=_context;
- (void).cxx_destruct;
- (void)providerWillUninstall;
- (id)_documentURL;
- (void)_removeAnnotation:(id)arg1;
- (id)generateShaderCompilationAnnotation:(int)arg1 String:(id)arg2 AtLine:(struct _NSRange)arg3;
- (void)receivedShaderBuildLogNotification:(id)arg1;
- (id)initWithContext:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKShaderAttributeTypeDescription : NSObject
{
    id _defaultValue;
    NSString *_name;
    long long _uniformType;
}

+ (id)customAttributeType:(long long)arg1 name:(id)arg2 defaultValue:(id)arg3;
@property(readonly) long long uniformType; // @synthesize uniformType=_uniformType;
@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
@property(readonly, nonatomic) id defaultValue; // @synthesize defaultValue=_defaultValue;
- (void).cxx_destruct;
- (id)initWithType:(long long)arg1 name:(id)arg2 defaultValue:(id)arg3;

@end

@interface SKShaderAttributesInspector : IDEInspectorViewController <NSTableViewDelegate>
{
    NSDictionary *_customAttributeTypes;
    NSButton *_removeButton;
    BOOL _editSelectedRowAfterRefresh;
    DVTObservingToken *_selectionObserver;
    BOOL _reloadingData;
    NSIndexSet *_rowIndexesToSelectAfterRefresh;
    NSSet *_draggedAttributes;
    NSArray *_userDefinedRuntimeAttributes;
    NSString *_currentPasteboardDragMarker;
    IDEControlGroup *_controlGroup;
    DVTBorderedView *_controlBar;
    NSTableView *_attributesTableView;
    NSMenu *_typeMenu;
    SKNode<SKNodeWithShader> *_editingSprite;
}

+ (BOOL)supportsMultipleObjectInspection;
+ (void)rebuildShaderForSprite:(id)arg1 skipIfNoChange:(BOOL)arg2;
+ (void)postShaderCompilationLog:(id)arg1 path:(id)arg2;
@property(nonatomic) __weak SKNode<SKNodeWithShader> *editingSprite; // @synthesize editingSprite=_editingSprite;
@property(retain, nonatomic) NSMenu *typeMenu; // @synthesize typeMenu=_typeMenu;
@property(retain, nonatomic) NSTableView *attributesTableView; // @synthesize attributesTableView=_attributesTableView;
@property(retain, nonatomic) DVTBorderedView *controlBar; // @synthesize controlBar=_controlBar;
@property(retain, nonatomic) IDEControlGroup *controlGroup; // @synthesize controlGroup=_controlGroup;
@property(nonatomic, getter=isReloadingData) BOOL reloadingData; // @synthesize reloadingData=_reloadingData;
@property(copy, nonatomic) NSString *currentPasteboardDragMarker; // @synthesize currentPasteboardDragMarker=_currentPasteboardDragMarker;
@property(copy, nonatomic) NSArray *userDefinedRuntimeAttributes; // @synthesize userDefinedRuntimeAttributes=_userDefinedRuntimeAttributes;
@property(copy, nonatomic) NSSet *draggedAttributes; // @synthesize draggedAttributes=_draggedAttributes;
@property(retain, nonatomic) NSIndexSet *rowIndexesToSelectAfterRefresh; // @synthesize rowIndexesToSelectAfterRefresh=_rowIndexesToSelectAfterRefresh;
- (void).cxx_destruct;
- (void)tableViewSelectionDidChange:(id)arg1;
- (BOOL)tableView:(id)arg1 removeRowsWithIndexes:(id)arg2;
- (BOOL)tableView:(id)arg1 canRemoveRowsWithIndexes:(id)arg2;
- (id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (double)tableView:(id)arg1 heightOfRow:(long long)arg2;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)editTexture:(id)arg1;
- (void)editValue:(id)arg1;
- (void)editType:(id)arg1;
- (void)editUniformName:(id)arg1;
- (void)editAttributeForSender:(id)arg1 editBlock:(CDUnknownBlockType)arg2;
- (void)doubleClickedTableView:(id)arg1;
- (void)removeUserDefinedRuntimeAttribute:(id)arg1;
- (void)insertUserDefinedRuntimeAttribute:(id)arg1;
- (id)newShaderUniformFromType:(long long)arg1 Value:(id)arg2 Name:(id)arg3;
- (void)refreshRemoveButtonEnabledState;
- (id)selectedAttributes;
- (id)defaultType;
- (id)userDefinedRuntimeAttributeTypeForTypeIdentifier:(long long)arg1;
- (id)customAttributeTypes;
- (void)reloadTableViewDataIgnoringEditingActions;
- (id)contentLayoutView;
- (void)setContent:(id)arg1;
- (void)didSetInspectedObjects:(id)arg1;
- (void)loadView;
- (void)setupControlBarAfterLoading;
- (void)primitiveInvalidate;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKShaderAttributesInspectorLayoutView : DVTLayoutView_ML
{
    NSTableView *_tableView;
    DVTBorderedView *_bottomBar;
    SKShaderAttributesInspector *_inspector;
}

@property(retain, nonatomic) SKShaderAttributesInspector *inspector; // @synthesize inspector=_inspector;
@property(retain, nonatomic) DVTBorderedView *bottomBar; // @synthesize bottomBar=_bottomBar;
@property(retain, nonatomic) NSTableView *tableView; // @synthesize tableView=_tableView;
- (void).cxx_destruct;
- (void)awakeFromNib;
- (void)layoutBottomUp;
- (void)layoutTopDown;
- (struct CGSize)preferredTableViewSize;

@end

@interface SKShaderAttributesInspectorTypeCellView : NSTableCellView
{
    NSPopUpButton *_popUpButton;
}

@property(retain, nonatomic) NSPopUpButton *popUpButton; // @synthesize popUpButton=_popUpButton;
- (void).cxx_destruct;

@end

@interface SKShapeNode (InspectorAdditions) <IDEKeyDrivenNavigableItemRepresentedObject>
+ (id)keyPathsForValuesAffectingFillTextureImageName;
+ (id)keyPathsForValuesAffectingStrokeTextureImageName;
+ (id)keyPathsForValuesAffectingZRotationDeg;
@property(retain, nonatomic) NSString *fillTextureImageName;
@property(retain, nonatomic) NSString *strokeTextureImageName;
- (id)ide_undoKVOKeypaths;
- (void)setNilValueForKey:(id)arg1;
- (id)inspectorAttributes;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTDocumentLocation *navigableItem_contentDocumentLocation;
@property(readonly) DVTFileDataType *navigableItem_documentType;
@property(readonly) IDEFileReference *navigableItem_fileReference;
@property(readonly) NSString *navigableItem_groupIdentifier;
@property(readonly) NSImage *navigableItem_image;
@property(readonly) BOOL navigableItem_isLeaf;
@property(readonly) BOOL navigableItem_isMajorGroup;
@property(readonly) NSString *navigableItem_name; // @dynamic navigableItem_name;
@property(readonly) NSString *navigableItem_toolTip;
@property(readonly) Class superclass;
@end

@interface SKSpriteNode (InspectorAdditions) <SKNodeWithShader>
+ (id)keyPathsForValuesAffectingNormalMapImageName;
+ (id)keyPathsForValuesAffectingZRotationDeg;
+ (id)keyPathsForValuesAffectingTextureImageName;
+ (id)keyPathsForValuesAffectingHasPhysicsBody;
- (id)ide_undoKVOKeypaths;
- (void)setNilValueForKey:(id)arg1;
- (id)inspectorAttributes;
@property(nonatomic) double IKConstraintMaxAngle;
@property(nonatomic) double IKConstraintMinAngle;
@property(nonatomic) double normalMapContrast;
@property(nonatomic) double normalMapSmoothness;
- (void)refreshNormalMap;
@property(retain, nonatomic) NSString *normalMapImageName;
@property(retain, nonatomic) NSURL *customSpriteShader;
@property(nonatomic) float spriteKitEditorMass;
@property(nonatomic) double physicsBodyInitialVelocityY;
@property(nonatomic) double physicsBodyInitialVelocityX;
@property(nonatomic) double physicsBodyAngularDamping;
@property(nonatomic) double physicsBodyLinearDamping;
@property(nonatomic) double physicsBodyRestitution;
@property(nonatomic) double physicsBodyFriction;
@property(nonatomic) BOOL physicsBodyAffectedByGravity;
@property(nonatomic) BOOL physicsBodyPinned;
@property(nonatomic) BOOL physicsBodyAllowsRotation;
@property(nonatomic) BOOL physicsBodyDynamicType;
@property(retain, nonatomic) NSNumber *skEditorShadowedBitMask;
@property(retain, nonatomic) NSNumber *skEditorShadowCastBitMask;
@property(retain, nonatomic) NSNumber *skEditorLightingBitMask;
@property(retain, nonatomic) NSNumber *skEditorFieldMask;
@property(retain, nonatomic) NSNumber *skEditorContactMask;
@property(retain, nonatomic) NSNumber *skEditorCollisionMask;
@property(retain, nonatomic) NSNumber *skEditorCategoryMask;
@property(nonatomic) int physicsBodyType;
@property(retain, nonatomic) NSString *textureImageName;
- (BOOL)hasPhysicsBody;
@property(retain, nonatomic) SKNode *parentRef;
@property(readonly, nonatomic) __weak SKNode *selfRef;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(retain, nonatomic) SKShader *shader;
@property(readonly) Class superclass;
@end

@interface SKSpriteNode (SKSpriteNodeIntegration)
@end

@interface SKTextConversionProvider : NSObject <DVTDiffTextFilter>
{
}

+ (id)convertNode:(id)arg1;
+ (BOOL)filterInputFilePath:(id)arg1 toOutputFilePath:(id)arg2 error:(id *)arg3;
+ (id)pathToTextFileFromInputFilePath:(id)arg1 error:(id *)arg2;
+ (id)textFileDataTypeForInputFilePath:(id)arg1;
+ (BOOL)pathRequiresFilter:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKTextureComboBox : NSComboBox
{
}

- (BOOL)usesDataSource;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SKTextureIconView : NSTableRowView
{
    NSImage *_image;
    NSString *_text;
}

@property(retain, nonatomic) NSString *text; // @synthesize text=_text;
@property(retain, nonatomic) NSImage *image; // @synthesize image=_image;
- (void).cxx_destruct;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface SKToolbarBackgroundView : NSView
{
    struct CGContext *_ctx;
    struct CGColor *_greyColor;
    struct CGColor *_blueColor;
    BOOL _isActive;
}

- (void)setActive:(BOOL)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SKUniform (ShaderAttributeEditor)
- (id)toStringRepresentation;
@end

