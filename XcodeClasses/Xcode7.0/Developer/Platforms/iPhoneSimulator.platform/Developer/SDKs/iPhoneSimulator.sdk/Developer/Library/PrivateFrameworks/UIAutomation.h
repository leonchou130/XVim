//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Named Structures

struct CGAffineTransform {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct __va_list_tag {
    unsigned int _field1;
    unsigned int _field2;
    void *_field3;
    void *_field4;
};

#pragma mark Typedef'd Structures

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

typedef struct {
    struct CGPoint _field1;
    double _field2;
    double _field3;
    unsigned char _field4;
} CDStruct_3eca2549;

#pragma mark -

//
// File: /Applications/Xcode-7GM.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/Developer/Library/PrivateFrameworks/UIAutomation.framework/UIAutomation
// UUID: 7E6E746D-A013-3937-AB2C-8A486915E9AB
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 448.0.0.0.0
//            Minimum iOS version: 9.0.0
//                    SDK version: 9.0.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSFastEnumeration
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
@end

@protocol UIAXElement
+ (NSString *)stringForTraits:(unsigned long long)arg1;
+ (NSString *)stringForAXNotification:(int)arg1;
+ (NSString *)stringForAXError:(int)arg1;
+ (id)uiaxAccessibilityUIServerElement;
+ (NSArray *)uiaxFocusedApplicationsElementArray;
+ (id)uiaxFocusedApplicationElement;
+ (id)uiaxSpringBoardElement;
+ (id)uiaxSystemApplicationElement;
+ (id)uiaxSystemWideElement;
+ (id)uiaxElementAtPosition:(struct CGPoint)arg1;
+ (id)uiaxApplicationAtPosition:(struct CGPoint)arg1;
+ (id)uiaxElementWithAXUIElementRef:(struct __AXUIElement *)arg1;
+ (_Bool)unregisterObserver:(struct __AXObserver *)arg1 forAXNotification:(int)arg2;
+ (_Bool)registerObserver:(struct __AXObserver *)arg1 forAXNotification:(int)arg2;
+ (_Bool)registerObserver:(struct __AXObserver *)arg1 forAXNotifications:(_Bool)arg2;
- (NSArray *)ancestry;
- (NSArray *)descendantsWithAttributes:(NSDictionary *)arg1 traits:(unsigned long long)arg2;
- (UIAXElement *)descendantWithTestingTrait:(NSString *)arg1;
- (NSArray *)descendants;
- (UIAXElement *)childWithTestingTrait:(NSString *)arg1;
- (NSArray *)children;
- (UIAXElement *)focusedElement;
- (UIAXElement *)responder;
- (UIAXElement *)parent;
- (UIAXElement *)firstElementOfAttribute:(int)arg1 withValue:(id)arg2 forAttribute:(int)arg3;
- (NSString *)description;
- (NSValue *)centerPoint;
- (NSValue *)rect;
- (NSValue *)hitpoint;
- (unsigned long long)traits;
- (NSNumber *)traitsNumber;
- (NSString *)stringForAllKnownAttributes;
- (NSString *)stringForAttributes:(NSArray *)arg1;
- (NSDictionary *)valuesForAllKnownAttributes;
- (_Bool)checkIsValid;
- (_Bool)isValid;
- (int)axError;
- (int)pid;
- (_Bool)performAXAction:(int)arg1 withValue:(id)arg2;
- (_Bool)performAXAction:(int)arg1;
- (id)valueForAttribute:(int)arg1 parameter:(id)arg2;
- (NSDictionary *)valuesForAttributes:(NSArray *)arg1;
- (_Bool)setValue:(id)arg1 forAttribute:(int)arg2;
- (id)valueForAttribute:(int)arg1;
- (struct __AXUIElement *)axuiElementRef;
@end

@interface NSArray (UIAExtras)
- (unsigned long long)_uiaUniqueIndexOfObject:(id)arg1;
@end

@interface NSValue (UIAutomation)
- (id)height;
- (id)width;
- (id)size;
- (id)y;
- (id)x;
- (id)origin;
@end

@interface UIAElement : NSObject <NSCopying>
{
    UIAXElement *_uiaxElement;
    UIAElement *_parentElement;
    NSInvocation *_selfPatienceInvocation;
    double _createdTime;
    double _lastAccessedTime;
    _Bool _isValid;
    UIAElementArray *_elements;
    NSDictionary *_elementClassIndexSets;
}

+ (id)_predicateForPredicateOrString:(id)arg1;
+ (id)elementAtPosition:(struct CGPoint)arg1;
+ (id)elementForUIAXElement:(id)arg1;
+ (Class)_classForSimpleUIAXElement:(id)arg1;
+ (Class)_uiaClassForClassName:(id)arg1;
+ (id)_jsStringForUIAElement:(id)arg1;
+ (id)_jsStringForInvocationPath:(id)arg1;
+ (id)_jsMethodCallStringForInvoker:(id)arg1 selector:(SEL)arg2;
+ (id)_jsStringForInvocation:(id)arg1;
+ (id)_jsStringForObject:(id)arg1;
+ (id)_jsStringForValue:(id)arg1;
+ (id)_jsStringForRect:(struct CGRect)arg1;
+ (id)_jsStringForPoint:(struct CGPoint)arg1;
+ (id)_jsStringForDictionary:(id)arg1;
+ (id)_jsStringForString:(id)arg1;
+ (id)_jsEscapedStringForString:(id)arg1;
+ (id)_jsMethodNameForSelector:(SEL)arg1;
+ (id)_setPatienceInvocation:(id)arg1 forUIAObject:(id)arg2;
+ (id)_waitForInvocationPath:(id)arg1;
+ (id)_performInvocationPath:(id)arg1;
+ (id)_patienceInvocationPathForUIAObject:(id)arg1;
+ (id)_invocationForInvoker:(id)arg1 selector:(SEL)arg2 arguments:(struct __va_list_tag [1])arg3;
+ (double)popPatience;
+ (void)pushPatience:(double)arg1;
+ (void)setPatience:(double)arg1;
+ (double)patience;
+ (void)_setPatienceRetryInterval:(double)arg1;
+ (double)_patienceRetryInterval;
+ (id)_rectFromDictionary:(id)arg1;
+ (id)_hitPointForObject:(id)arg1;
+ (id)_hitPointFromDictionary:(id)arg1;
+ (id)_valueForAXElement:(id)arg1;
+ (id)_nameForAXElement:(id)arg1;
+ (struct CGPoint)_convertPointToCurrentInterfaceOrientation:(struct CGPoint)arg1;
+ (struct CGPoint)_convertPointFromCurrentInterfaceOrientation:(struct CGPoint)arg1;
+ (struct CGRect)_convertRectFromCurrentInterfaceOrientation:(struct CGRect)arg1;
+ (struct CGRect)_convertRectToCurrentInterfaceOrientation:(struct CGRect)arg1;
+ (struct CGAffineTransform)_transformToRotateToInterfaceOrientation:(long long)arg1;
+ (struct CGAffineTransform)_transformToRotateFromInterfaceOrientation:(long long)arg1;
+ (id)allKeys;
+ (id)toManyRelationshipKeys;
+ (id)toOneRelationshipKeys;
+ (id)attributeKeys;
+ (id)_elementWithUIAXElement:(id)arg1 parent:(id)arg2;
+ (id)_countsString;
+ (long long)_maxCount;
+ (long long)_liveCount;
+ (void)_logVerbosity:(unsigned long long)arg1 format:(id)arg2;
+ (_Bool)_delayForTimeInterval:(double)arg1;
+ (void)initialize;
- (id)webViews;
- (id)textViews;
- (id)toolbar;
- (id)toolbars;
- (id)tabBar;
- (id)tabBars;
- (id)searchBars;
- (id)secureTextFields;
- (id)textFields;
- (id)tableViews;
- (id)staticTexts;
- (id)switches;
- (id)sliders;
- (id)segmentedControls;
- (id)scrollViews;
- (id)progressIndicators;
- (id)popover;
- (id)popovers;
- (id)pickers;
- (id)pageIndicators;
- (id)navigationBar;
- (id)navigationBars;
- (id)mapViews;
- (id)links;
- (id)keys;
- (id)keyboard;
- (id)keyboards;
- (id)images;
- (id)editingMenus;
- (id)collectionViews;
- (id)buttons;
- (id)activityIndicators;
- (id)activityView;
- (id)activityViews;
- (id)actionSheet;
- (id)actionSheets;
- (id)_elementsOfClass:(Class)arg1 forSelector:(SEL)arg2;
- (id)elements;
- (id)withPredicate:(id)arg1;
- (id)withValue:(id)arg1 forKey:(id)arg2;
- (id)withName:(id)arg1;
- (id)focusedElement;
- (id)responder;
- (id)elementAtPoint:(id)arg1;
- (id)_elementAtPosition:(struct CGPoint)arg1;
- (id)_elementForUIAXElement:(id)arg1;
- (id)_inspectedElementForAXAncestry:(id)arg1 index:(unsigned long long *)arg2 triedKeys:(id)arg3;
- (id)_inspectedToManyRelationship:(id)arg1 forAXAncestry:(id)arg2 index:(unsigned long long *)arg3;
- (id)_inspectedToOneRelationship:(id)arg1 forAXAncestry:(id)arg2 index:(unsigned long long *)arg3;
- (_Bool)_inspectConfirmElement:(id)arg1 forAXAncestry:(id)arg2 index:(unsigned long long *)arg3;
- (id)_elementsForUIAXElements:(id)arg1;
- (id)_elementsForUIAXElements:(id)arg1 axFilter:(SEL)arg2;
- (id)_elementForSimpleUIAXElement:(id)arg1;
- (id)scriptingSynonymFullExpressionString;
- (id)scriptingSynonymStrings;
- (id)scriptingSynonyms;
- (id)scriptingFavoredSynonymString;
- (id)_scriptingSynonymsForSubElement:(id)arg1 maxCount:(unsigned long long)arg2;
- (id)scriptingInvocationFullExpressionString;
- (id)scriptingInvocationString;
- (id)scriptingActionExpressionShouldFavorTapOffset;
- (id)_patienceForAttribute:(SEL)arg1 value:(id)arg2;
- (id)_objectWithPatienceInvocationFromUIAObject:(id)arg1 selector:(SEL)arg2;
- (void)chopPatience;
- (void)_setSelfPatienceInvocation:(id)arg1;
- (id)_selfPatienceInvocation;
- (id)scrollToElementWithValue:(id)arg1 forKey:(id)arg2;
- (id)scrollToElementWithPredicate:(id)arg1;
- (id)scrollToElementWithName:(id)arg1;
- (id)scrollToVisible;
- (void)scrollRight;
- (void)scrollLeft;
- (void)scrollDown;
- (void)scrollUp;
- (void)rotateWithOptions:(id)arg1;
- (void)_rotateWithOptions:(id)arg1;
- (void)flickInsideWithOptions:(id)arg1;
- (void)dragInsideWithOptions:(id)arg1;
- (void)_dragInsideWithOptions:(id)arg1 withFlick:(_Bool)arg2;
- (void)touchAndHold:(id)arg1;
- (void)touchWithOptions:(id)arg1;
- (void)tapWithOptions:(id)arg1;
- (void)twoFingerTap;
- (void)doubleTap;
- (void)tap;
- (_Bool)_prepareForAction:(SEL)arg1;
- (void)_delayForAnimationsInProgress;
- (void)redo;
- (void)undo;
- (id)type;
- (id)className;
- (id)dom;
- (id)url;
- (void)setValue:(id)arg1;
- (_Bool)_shouldAllowSettingValue;
- (id)value;
- (id)name;
- (id)target;
- (id)verticalSizeClass;
- (id)horizontalSizeClass;
- (id)isSelected;
- (id)isStarkElement;
- (id)isVisible;
- (id)hasRemoteFocus;
- (id)hasKeyboardFocus;
- (id)isEnabled;
- (id)_uiaHitpoint;
- (id)hitpoint;
- (id)_hitpoint;
- (id)_uiaRect;
- (id)rect;
- (id)label;
- (id)hint;
- (id)pid;
- (void)logAXTree;
- (void)logAXInfo;
- (void)logElementTree;
- (void)logElement;
- (id)_logInfoWithChildren;
- (id)_logInfo;
- (id)ancestry;
- (id)parentElement;
- (id)uiaxElement;
- (id)toManyRelationships;
- (id)toOneRelationships;
- (id)attributes;
- (id)valueForUndefinedKey:(id)arg1;
- (id)_synonymToManyRelationshipKeys;
- (id)allKeys;
- (id)toManyRelationshipKeys;
- (id)toOneRelationshipKeys;
- (id)attributeKeys;
- (_Bool)waitForInvalid;
- (_Bool)checkIsValid;
- (_Bool)isValid;
- (void)_setLastAccessedTime:(double)arg1;
- (double)_lastAccessedTime;
- (double)_createdTime;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (void)_invalidate;
- (void)_emptyCaches;
- (void)dealloc;
- (id)_initWithUIAXElement:(id)arg1 parent:(id)arg2;
- (id)init;

@end

@interface UIAActionSheet : UIAElement
{
}

+ (id)toOneRelationshipKeys;
+ (Class)_classForSimpleUIAXElement:(id)arg1;
- (id)cancelButton;

@end

@interface UIAActivityIndicator : UIAElement
{
}

@end

@interface UIAActivityView : UIAElement
{
}

+ (id)toOneRelationshipKeys;
- (id)cancelButton;

@end

@interface UIAAlert : UIAElement
{
}

+ (id)toOneRelationshipKeys;
+ (id)_moreToOneRelationshipKeys;
+ (Class)_classForSimpleUIAXElement:(id)arg1;
- (id)defaultButton;
- (id)cancelButton;
- (id)buttons;
- (id)name;
- (id)_nameFromChildForAXElement:(id)arg1;

@end

@interface UIAApplication : UIAElement
{
    UIAElementArray *_windows;
    NSString *_name;
    NSString *_bundleID;
    NSString *_bundlePath;
    NSString *_axBundlePath;
    NSString *_version;
    NSString *_bundleVersion;
    const void *_privateRef;
}

+ (id)toManyRelationshipKeys;
+ (id)toOneRelationshipKeys;
+ (id)attributeKeys;
- (id)scriptingSynonymStrings;
- (id)toolbar;
- (id)tabBar;
- (id)navigationBar;
- (id)appIconScrollView;
- (id)appItemScrollView;
- (id)_scrollViewWithElementType:(id)arg1;
- (id)editingMenu;
- (id)sideAppDivider;
- (id)statusBar;
- (id)alert;
- (id)activityView;
- (id)actionSheet;
- (id)keyboard;
- (id)mainWindow;
- (id)_axMainWindow;
- (id)keyWindow;
- (id)windows;
- (id)interfaceOrientation;
- (id)preferencesValueForKey:(id)arg1;
- (void)setPreferencesValue:(id)arg1 forKey:(id)arg2;
- (id)isCameraIrisOpen;
- (id)isVisible;
- (id)bundleVersion;
- (id)version;
- (id)localizedStringForKey:(id)arg1 withOptions:(id)arg2;
- (id)localizedStringForKey:(id)arg1;
- (id)_axBundle;
- (id)_axBundlePath;
- (id)_bundle;
- (id)bundlePath;
- (id)_bundlePath;
- (id)stateDescription;
- (unsigned int)_state;
- (id)name;
- (id)_name;
- (id)bundleID;
- (id)_bundleID;
- (_Bool)_isSystemApplication;
- (void)_invalidate;
- (void)dealloc;
- (id)init;

@end

@interface UIAButton : UIAElement
{
}

- (id)scriptingActionExpressionShouldFavorTapOffset;
- (id)value;

@end

@interface UIACollectionCell : UIAElement
{
}

- (id)scriptingActionExpressionShouldFavorTapOffset;
- (id)value;
- (id)name;

@end

@interface UIAScrollView : UIAElement
{
}

@end

@interface UIACollectionView : UIAScrollView
{
    UIAElementArray *_cells;
}

+ (id)toManyRelationshipKeys;
+ (id)_moreToManyRelationshipKeys;
+ (Class)_classForSimpleUIAXElement:(id)arg1;
- (id)visibleCells;
- (id)cells;
- (id)scrollItemCount;
- (id)scrollItemIndex;
- (id)value;
- (void)_emptyCaches;

@end

@interface UIAEditingMenu : UIAElement
{
}

@end

@interface UIAElementArray : NSArray
{
    NSArray *_array;
    NSInvocation *_selfPatienceInvocation;
    double _refreshedTime;
    double _lastAccessedTime;
}

+ (void)_removeCachedArrayAtPtr:(id *)arg1;
+ (void)_cacheArray:(id)arg1 atPtr:(id *)arg2;
+ (id)_cachedArrayAtPtr:(id *)arg1;
+ (id)_arrayWithArray:(id)arg1;
+ (long long)_maxCount;
+ (long long)_liveCount;
+ (void)initialize;
- (_Bool)isValid;
- (id)scriptingInvocationFullExpressionString;
- (id)scriptingInvocationString;
- (id)scriptingIndexSynonymsForElement:(id)arg1;
- (id)scriptingFavoredIndexSynonymForElement:(id)arg1;
- (id)_scriptingIndexSynonymsForElement:(id)arg1 maxCount:(unsigned long long)arg2;
- (id)elementOfClass:(Class)arg1 atIndex:(unsigned long long)arg2;
- (void)logElementTrees;
- (void)logElements;
- (id)firstWithPredicate:(id)arg1;
- (id)firstWithValue:(id)arg1 forKey:(id)arg2;
- (id)firstWithName:(id)arg1;
- (id)withPredicate:(id)arg1;
- (id)withValue:(id)arg1 forKey:(id)arg2;
- (id)withName:(id)arg1;
- (id)withClass:(Class)arg1;
- (id)_withPredicate:(id)arg1;
- (id)_withValue:(id)arg1 forKey:(id)arg2;
- (id)_withName:(id)arg1;
- (void)_logLocalizedStringHintForKey:(id)arg1 testValue:(id)arg2;
- (id)_withClass:(Class)arg1;
- (_Bool)_isStillFreshAtTime:(double)arg1;
- (void)_setLastAccessedTime:(double)arg1;
- (double)_lastAccessedTime;
- (double)_refreshedTime;
- (void)_setArray:(id)arg1;
- (id)nsArray;
- (id)_objectWithPatienceInvocationFromUIAObject:(id)arg1 selector:(SEL)arg2;
- (void)_setSelfPatienceInvocation:(id)arg1;
- (id)_selfPatienceInvocation;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (_Bool)isEqualToArray:(id)arg1;
- (id)objectAtIndex:(unsigned long long)arg1;
- (unsigned long long)count;
- (void)dealloc;
- (id)_initWithArray:(id)arg1;

@end

@interface UIAElementNil : NSObject <NSFastEnumeration>
{
    NSInvocation *_selfPatienceInvocation;
    double _refreshedTime;
    double _lastAccessedTime;
}

+ (id)_elementNilWithInvocation:(id)arg1;
+ (long long)_maxCount;
+ (long long)_liveCount;
- (void)logAXTree;
- (void)logAXInfo;
- (void)logElementTree;
- (void)logElement;
- (id)_logInfoWithChildren;
- (id)pageIndex;
- (id)pageCount;
- (id)selectedValue;
- (id)values;
- (id)numberOfCells;
- (id)textLength;
- (id)maxValue;
- (id)minValue;
- (id)orientation;
- (id)contentArea;
- (id)keyEquivalentModifiers;
- (id)keyEquivalent;
- (id)isSeparatorItem;
- (id)inputMode;
- (id)defaultButton;
- (id)cancelButton;
- (id)isBackgroundApp;
- (id)isFront;
- (id)architecture;
- (id)stateDescription;
- (id)localizations;
- (id)localizedStringForKey:(id)arg1 value:(id)arg2 table:(id)arg3 bundlePath:(id)arg4;
- (id)localizedStringForKey:(id)arg1 withOptions:(id)arg2;
- (id)localizedStringForKey:(id)arg1;
- (id)bundleVersion;
- (id)bundleID;
- (id)version;
- (id)bundlePath;
- (id)visibleFrame;
- (id)depth;
- (id)target;
- (id)hasOpenMenu;
- (id)hasRemoteFocus;
- (id)hasKeyboardFocus;
- (id)isCameraIrisOpen;
- (id)verticalSizeClass;
- (id)horizontalSizeClass;
- (id)isSelected;
- (id)isStarkElement;
- (id)isVisible;
- (id)isEnabled;
- (id)helpTag;
- (id)pid;
- (void)setValue:(id)arg1;
- (id)dom;
- (id)url;
- (id)value;
- (id)hint;
- (id)label;
- (id)name;
- (id)hitpoint;
- (id)rect;
- (id)visibleGroups;
- (id)groups;
- (id)visibleCells;
- (id)cells;
- (id)headers;
- (id)wheels;
- (id)selectedButton;
- (id)rightButton;
- (id)leftButton;
- (id)toolbar;
- (id)toolbars;
- (id)tabBar;
- (id)tabBars;
- (id)navigationBar;
- (id)navigationBars;
- (id)statusBar;
- (id)keyboard;
- (id)appIconScrollView;
- (id)appItemScrollView;
- (id)editingMenu;
- (id)sideAppDivider;
- (id)alert;
- (id)activityView;
- (id)activityViews;
- (id)actionSheet;
- (id)actionSheets;
- (id)mainWindow;
- (id)keyWindow;
- (id)windows;
- (id)ancestry;
- (id)uiaxElement;
- (id)focusedElement;
- (id)responder;
- (id)parentElement;
- (id)webViews;
- (id)textViews;
- (id)searchBars;
- (id)tableViews;
- (id)secureTextFields;
- (id)textFields;
- (id)sliders;
- (id)switches;
- (id)staticTexts;
- (id)segmentedControls;
- (id)scrollViews;
- (id)progressIndicators;
- (id)popover;
- (id)popovers;
- (id)pickers;
- (id)pageIndicators;
- (id)mapViews;
- (id)links;
- (id)keys;
- (id)keyboards;
- (id)images;
- (id)editingMenus;
- (id)collectionViews;
- (id)buttons;
- (id)activityIndicators;
- (id)elements;
- (id)accessibilityUI;
- (id)scrollToElementWithValue:(id)arg1 forKey:(id)arg2;
- (id)scrollToElementWithPredicate:(id)arg1;
- (id)scrollToElementWithName:(id)arg1;
- (id)scrollToVisible;
- (void)scrollRight;
- (void)scrollLeft;
- (void)scrollDown;
- (void)scrollUp;
- (void)rotateWithOptions:(id)arg1;
- (void)flickInsideWithOptions:(id)arg1;
- (void)dragInsideWithOptions:(id)arg1;
- (void)selectPage:(id)arg1;
- (void)goToPreviousPage;
- (void)goToNextPage;
- (void)dismiss;
- (void)selectValue:(id)arg1;
- (void)dragToValue:(id)arg1;
- (void)triggerDictationFromAudioInputPath:(id)arg1;
- (void)typeString:(id)arg1;
- (void)touchAndHold:(id)arg1;
- (void)tapWithOptions:(id)arg1;
- (void)twoFingerTap;
- (void)doubleTap;
- (void)tap;
- (void)_raiseInvalidElementAction;
- (id)elementOfClass:(Class)arg1 atIndex:(unsigned long long)arg2;
- (id)firstWithPredicate:(id)arg1;
- (id)firstWithValue:(id)arg1 forKey:(id)arg2;
- (id)firstWithName:(id)arg1;
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
- (id)reverseObjectEnumerator;
- (id)objectEnumerator;
- (unsigned long long)indexOfObject:(id)arg1;
- (_Bool)containsObject:(id)arg1;
- (id)nsArray;
- (id)objectAtIndex:(unsigned long long)arg1;
- (unsigned long long)count;
- (id)withPredicate:(id)arg1;
- (id)withValue:(id)arg1 forKey:(id)arg2;
- (id)withName:(id)arg1;
- (_Bool)waitForInvalid;
- (_Bool)checkIsValid;
- (_Bool)isValid;
- (id)scriptingInvocationFullExpressionString;
- (id)scriptingInvocationString;
- (id)_elementNilWithPatienceInvocation:(SEL)arg1;
- (_Bool)_isStillFreshAtTime:(double)arg1;
- (void)_setLastAccessedTime:(double)arg1;
- (double)_lastAccessedTime;
- (double)_refreshedTime;
- (void)dealloc;
- (id)_initWithInvocation:(id)arg1;
- (id)_objectWithPatienceInvocationFromUIAObject:(id)arg1 selector:(SEL)arg2;
- (void)_setSelfPatienceInvocation:(id)arg1;
- (id)_selfPatienceInvocation;

@end

@interface UIAElementSynonym : NSObject
{
    NSString *_relationship;
    NSString *_attribute;
    id _value;
}

+ (void)_setAssociatedStringExpressions:(id)arg1 forSynonymString:(id)arg2;
+ (id)associatedStringExpressionsForSynonymString:(id)arg1;
+ (id)synonymForRelationship:(id)arg1 attribute:(id)arg2 value:(id)arg3;
+ (id)synonymForRelationship:(id)arg1;
@property(readonly) id value; // @synthesize value=_value;
@property(readonly) NSString *attribute; // @synthesize attribute=_attribute;
@property(readonly) NSString *relationship; // @synthesize relationship=_relationship;
- (id)stringForScriptingLanguage:(int)arg1 withOptions:(unsigned long long)arg2;
- (void)dealloc;
- (id)initWithRelationship:(id)arg1 attribute:(id)arg2 value:(id)arg3;

@end

@interface UIAHardwareKeyboard : NSObject
{
    UIASyntheticEvents *_eventGenerator;
    unsigned int _modifierState;
}

+ (id)sharedHardwareKeyboard;
@property unsigned int modifierState; // @synthesize modifierState=_modifierState;
@property(readonly) UIASyntheticEvents *eventGenerator; // @synthesize eventGenerator=_eventGenerator;
- (id)deleteForwardKeyCode;
- (id)deleteBackwardKeyCode;
- (id)enterKeyCode;
- (id)upArrowKeyCode;
- (id)downArrowKeyCode;
- (id)rightArrowKeyCode;
- (id)leftArrowKeyCode;
- (void)capsLockKeyUp;
- (void)capsLockKeyDown;
- (void)shiftKeyUp;
- (void)shiftKeyDown;
- (void)controlKeyUp;
- (void)controlKeyDown;
- (void)commandKeyUp;
- (void)commandKeyDown;
- (void)optionKeyUp;
- (void)optionKeyDown;
- (void)keyUpWithKeyCode:(unsigned int)arg1;
- (void)keyUpWithString:(id)arg1;
- (void)keyDownWithKeyCode:(unsigned int)arg1;
- (void)keyDownWithString:(id)arg1;
- (void)pressKeyWithKeyCode:(unsigned int)arg1;
- (void)pressKeyWithString:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface UIAHost : NSObject
{
}

- (id)performTaskWithPath:(id)arg1 arguments:(id)arg2 timeout:(id)arg3;

@end

@interface UIAImage : UIAElement
{
}

@end

@interface UIAKey : UIAButton
{
}

- (id)scriptingActionExpressionShouldFavorTapOffset;
- (void)_delayForAnimationsInProgress;

@end

@interface UIAKeyboard : UIAElement
{
    double _interKeyDelay;
    double _interKeyDelayVariance;
}

@property double interKeyDelayVariance; // @synthesize interKeyDelayVariance=_interKeyDelayVariance;
@property double interKeyDelay; // @synthesize interKeyDelay=_interKeyDelay;
- (void)triggerDictationFromAudioInputPath:(id)arg1;
- (void)typeString:(id)arg1;
- (void)_typeKeyForString:(id)arg1 keyLayout:(id)arg2;
- (void)_delayForTyping;
- (id)inputMode;
- (id)init;

@end

@interface UIALink : UIAElement
{
}

- (id)scriptingActionExpressionShouldFavorTapOffset;

@end

@interface UIALocalizedValue : NSObject
{
    NSString *_key;
    NSString *_value;
    NSString *_tableName;
    NSString *_bundleID;
    NSString *_bundlePath;
}

@property(readonly) NSString *bundlePath; // @synthesize bundlePath=_bundlePath;
@property(readonly) NSString *bundleID; // @synthesize bundleID=_bundleID;
@property(readonly) NSString *tableName; // @synthesize tableName=_tableName;
@property(readonly) NSString *value; // @synthesize value=_value;
@property(readonly) NSString *key; // @synthesize key=_key;
- (id)_jsVariableExpressionString;
- (id)_jsVariableName;
- (void)dealloc;
- (id)initWithAXAttributedString:(id)arg1;

@end

@interface UIAMapView : UIAElement
{
}

@end

@interface UIANavigationBar : UIAElement
{
}

+ (id)toOneRelationshipKeys;
+ (id)_moreToOneRelationshipKeys;
- (id)elements;
- (_Bool)_navBarShouldAcceptAXElement:(id)arg1;
- (id)rightButton;
- (id)leftButton;
- (id)name;

@end

@interface UIAPageIndicator : UIAElement
{
}

- (void)selectPage:(id)arg1;
- (void)goToPreviousPage;
- (void)goToNextPage;
- (_Bool)_flipPages:(int)arg1;
- (id)pageCount;
- (id)pageIndex;

@end

@interface UIAPicker : UIAElement
{
}

+ (id)toManyRelationshipKeys;
+ (id)_moreToManyRelationshipKeys;
- (id)wheels;

@end

@interface UIAPickerWheel : UIAElement
{
}

- (void)selectValue:(id)arg1;
- (_Bool)_spinWheel:(long long)arg1;
- (id)values;
- (id)elements;

@end

@interface UIAPopover : UIAElement
{
}

- (void)dismiss;

@end

@interface UIAProgressIndicator : UIAElement
{
}

@end

@interface UIARecorder : NSObject
{
    _Bool _isRecording;
    UIATarget *_uiaTarget;
    UIARecorderAction *_currentAction;
    UIAXElement *_previousAXElement;
    NSArray *_pendingTapExpression;
    NSArray *_pendingDragExpressions;
    id <UIARecorderDelegate> _delegate;
    double _lastActionTime;
    unsigned long long _tapCount;
    NSMutableString *_keystrokes;
    NSTimer *_keystrokeFlushTimer;
    NSTimer *_expressionFlushTimer;
    double _releaseTimeForMostRecentEvent;
}

+ (id)defaultRecorder;
@property double releaseTimeForMostRecentEvent; // @synthesize releaseTimeForMostRecentEvent=_releaseTimeForMostRecentEvent;
@property(readonly) NSMutableString *keystrokes; // @synthesize keystrokes=_keystrokes;
@property unsigned long long tapCount; // @synthesize tapCount=_tapCount;
@property double lastActionTime; // @synthesize lastActionTime=_lastActionTime;
@property id <UIARecorderDelegate> delegate; // @synthesize delegate=_delegate;
@property _Bool isRecording; // @synthesize isRecording=_isRecording;
@property(retain) NSArray *pendingDragExpressions; // @synthesize pendingDragExpressions=_pendingDragExpressions;
@property(retain) NSArray *pendingTapExpression; // @synthesize pendingTapExpression=_pendingTapExpression;
@property(retain) UIAXElement *previousAXElement; // @synthesize previousAXElement=_previousAXElement;
@property(retain) UIARecorderAction *currentAction; // @synthesize currentAction=_currentAction;
@property(retain) UIATarget *uiaTarget; // @synthesize uiaTarget=_uiaTarget;
- (void)flushKeystrokes:(id)arg1;
- (void)flushDragExpressions:(id)arg1;
- (void)flushTapExpression:(id)arg1;
- (void)markNewActionAndLog:(_Bool)arg1;
- (void)handleAXEventRepresentation:(id)arg1;
- (void)_handEnded:(id)arg1;
- (id)_scriptingStringForOffsetWithScreenPoint:(struct CGPoint)arg1 inRect:(struct CGRect)arg2;
- (id)_scriptingStringForPoint:(struct CGPoint)arg1;
- (void)_handStarted:(id)arg1;
- (void)_releaseEvents;
- (void)handleOrientationChange;
- (void)handleAlert;
- (void)postMutlitouchGestureDetected;
- (void)postStaleEventMessage;
- (void)postElementNotFoundAtPoint:(struct CGPoint)arg1 description:(id)arg2;
- (void)postRecordedExpression:(id)arg1;
- (void)stop;
- (void)start;
@property(retain) NSTimer *expressionFlushTimer; // @synthesize expressionFlushTimer=_expressionFlushTimer;
@property(retain) NSTimer *keystrokeFlushTimer; // @synthesize keystrokeFlushTimer=_keystrokeFlushTimer;
- (void)dealloc;
- (id)init;

@end

@interface UIARecorderAction : NSObject
{
    _Bool _elementCanScroll;
    int _actionType;
    NSArray *_points;
    UIAElement *_element;
    UIAXElement *_axElement;
    long long _startTime;
    long long _lastUpdateTime;
    NSString *_keyName;
    NSArray *_expression;
    unsigned long long _touchCount;
    struct CGPoint _startLocation;
    struct CGPoint _endLocation;
}

+ (_Bool)_elementCanScroll:(id)arg1;
+ (id)expressionForElement:(id)arg1;
+ (id)actionWithAXEventRepresentation:(id)arg1;
@property struct CGPoint endLocation; // @synthesize endLocation=_endLocation;
@property struct CGPoint startLocation; // @synthesize startLocation=_startLocation;
@property unsigned long long touchCount; // @synthesize touchCount=_touchCount;
@property int actionType; // @synthesize actionType=_actionType;
@property(retain) NSArray *expression; // @synthesize expression=_expression;
@property(retain) NSString *keyName; // @synthesize keyName=_keyName;
@property _Bool elementCanScroll; // @synthesize elementCanScroll=_elementCanScroll;
@property long long lastUpdateTime; // @synthesize lastUpdateTime=_lastUpdateTime;
@property long long startTime; // @synthesize startTime=_startTime;
@property(retain) UIAXElement *axElement; // @synthesize axElement=_axElement;
@property(retain) UIAElement *element; // @synthesize element=_element;
@property(retain) NSArray *points; // @synthesize points=_points;
@property(readonly) double duration;
- (void)updateWithAXEventRepresentation:(id)arg1;
- (void)dealloc;
- (id)_initWithAXEventRepresentation:(id)arg1;

@end

@interface UIARemote : NSObject
{
    UIASyntheticEvents *_eventGenerator;
}

+ (id)sharedRemote;
@property(readonly) UIASyntheticEvents *eventGenerator; // @synthesize eventGenerator=_eventGenerator;
- (void)clickMicrophone;
- (void)holdMicrophone:(double)arg1;
- (void)clickPlayPause;
- (void)holdPlayPause:(double)arg1;
- (void)clickMenu;
- (void)holdMenu:(double)arg1;
- (void)clickSelect;
- (void)holdSelect:(double)arg1;
- (void)clickRight;
- (void)holdRight:(double)arg1;
- (void)clickLeft;
- (void)holdLeft:(double)arg1;
- (void)clickDown;
- (void)holdDown:(double)arg1;
- (void)clickUp;
- (void)holdUp:(double)arg1;
- (void)dealloc;
- (id)init;

@end

@interface UIAScreen : UIAElement
{
    UIScreen *_uiScreen;
}

+ (id)attributeKeys;
- (id)uiScreen;
- (void)setBrightness:(id)arg1;
- (id)brightness;
- (id)_uiaApplicationFrame;
- (id)applicationFrame;
- (id)scale;
- (id)bounds;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
- (id)_uiScreen;
- (void)dealloc;
- (id)_initWithUIScreen:(id)arg1 parent:(id)arg2;

@end

@interface UIATextField : UIAElement
{
}

- (id)scriptingActionExpressionShouldFavorTapOffset;
- (id)elements;
- (_Bool)_textFieldShouldAcceptAXElement:(id)arg1;

@end

@interface UIASearchBar : UIATextField
{
}

@end

@interface UIASecureTextField : UIATextField
{
}

@end

@interface UIASegmentedControl : UIAElement
{
}

- (id)selectedButton;

@end

@interface UIASlider : UIAElement
{
}

- (void)dragToValue:(id)arg1;
- (id)elements;

@end

@interface UIAStaticText : UIAElement
{
}

- (_Bool)_shouldAllowSettingValue;

@end

@interface UIAStatusBar : UIAElement
{
}

@end

@interface UIASwitch : UIAElement
{
}

- (void)setValue:(id)arg1;
- (id)value;
- (id)elements;

@end

@interface UIASyntheticEvents : NSObject
{
    _Bool _voiceOverStyleTouchEventsEnabled;
    UIScreen *_screen;
    double _gsScreenScale;
    CDStruct_3eca2549 *_activePoints;
    unsigned long long _activePointCount;
    struct __IOHIDEventSystemClient *_ioSystemClient;
    struct CGSize _screenSize;
    struct CGSize _gsScreenSize;
    struct CGRect _onScreenRect;
}

+ (id)sharedEventGenerator;
@property(readonly) struct __IOHIDEventSystemClient *ioSystemClient; // @synthesize ioSystemClient=_ioSystemClient;
@property(nonatomic) _Bool voiceOverStyleTouchEventsEnabled; // @synthesize voiceOverStyleTouchEventsEnabled=_voiceOverStyleTouchEventsEnabled;
@property(nonatomic) unsigned long long activePointCount; // @synthesize activePointCount=_activePointCount;
@property(nonatomic) CDStruct_3eca2549 *activePoints; // @synthesize activePoints=_activePoints;
@property(nonatomic) double gsScreenScale; // @synthesize gsScreenScale=_gsScreenScale;
@property(nonatomic) struct CGSize gsScreenSize; // @synthesize gsScreenSize=_gsScreenSize;
@property(nonatomic) struct CGSize screenSize; // @synthesize screenSize=_screenSize;
@property(retain, nonatomic) UIScreen *screen; // @synthesize screen=_screen;
@property struct CGRect onScreenRect; // @synthesize onScreenRect=_onScreenRect;
- (void)postKeyboardEventsForModifiers:(unsigned int)arg1 isKeyDown:(_Bool)arg2;
- (void)postKeyboardEventWithKeyCode:(unsigned short)arg1 orCharacters:(id)arg2 originalCharacters:(id)arg3 modifierState:(unsigned int)arg4 isKeyDown:(_Bool)arg5;
- (void)sendPinchCloseWithStartPoint:(struct CGPoint)arg1 endPoint:(struct CGPoint)arg2 duration:(double)arg3 inRect:(struct CGRect)arg4;
- (void)sendPinchOpenWithStartPoint:(struct CGPoint)arg1 endPoint:(struct CGPoint)arg2 duration:(double)arg3 inRect:(struct CGRect)arg4;
- (void)sendDragWithStartPoint:(struct CGPoint)arg1 endPoint:(struct CGPoint)arg2 duration:(double)arg3 withFlick:(_Bool)arg4 inRect:(struct CGRect)arg5;
- (void)sendRotate:(struct CGPoint)arg1 withRadius:(double)arg2 rotation:(double)arg3 duration:(double)arg4 touchCount:(unsigned long long)arg5;
- (void)sendMultifingerDragWithPointArray:(struct CGPoint *)arg1 numPoints:(int)arg2 duration:(double)arg3 numFingers:(int)arg4;
- (void)sendPinchCloseWithStartPoint:(struct CGPoint)arg1 endPoint:(struct CGPoint)arg2 duration:(double)arg3;
- (void)sendPinchOpenWithStartPoint:(struct CGPoint)arg1 endPoint:(struct CGPoint)arg2 duration:(double)arg3;
- (void)sendFlickWithStartPoint:(struct CGPoint)arg1 endPoint:(struct CGPoint)arg2 duration:(double)arg3;
- (void)sendDragWithStartPoint:(struct CGPoint)arg1 endPoint:(struct CGPoint)arg2 duration:(double)arg3;
- (void)sendTaps:(int)arg1 location:(struct CGPoint)arg2 withNumberOfTouches:(int)arg3 inRect:(struct CGRect)arg4;
- (void)sendDoubleFingerTap:(struct CGPoint)arg1;
- (void)sendDoubleTap:(struct CGPoint)arg1;
- (void)_sendTap:(struct CGPoint)arg1 withPressure:(double)arg2;
- (void)sendTap:(struct CGPoint)arg1;
- (void)_setMajorRadiusForAllPoints:(double)arg1;
- (void)_setPressureForAllPoints:(double)arg1;
- (void)moveToPoints:(struct CGPoint *)arg1 touchCount:(unsigned long long)arg2 duration:(double)arg3;
- (void)_moveLastTouchPoint:(struct CGPoint)arg1;
- (void)liftUp:(struct CGPoint)arg1;
- (void)liftUp:(struct CGPoint)arg1 touchCount:(unsigned long long)arg2;
- (void)liftUpAtPoints:(struct CGPoint *)arg1 touchCount:(unsigned long long)arg2;
- (void)touchDown:(struct CGPoint)arg1;
- (void)touchDown:(struct CGPoint)arg1 touchCount:(unsigned long long)arg2;
- (void)touchDownAtPoints:(struct CGPoint *)arg1 touchCount:(unsigned long long)arg2;
- (void)shake;
- (void)setRinger:(_Bool)arg1;
- (void)holdVolumeDown:(double)arg1;
- (void)clickVolumeDown;
- (void)holdVolumeUp:(double)arg1;
- (void)clickVolumeUp;
- (void)holdLock:(double)arg1;
- (void)clickLock;
- (void)lockDevice;
- (void)holdMenu:(double)arg1;
- (void)clickMenu;
- (void)_sendSimpleEvent:(int)arg1;
- (void)setOrientation:(int)arg1;
- (void)sendAccelerometerX:(double)arg1 Y:(double)arg2 Z:(double)arg3 duration:(double)arg4;
- (void)sendAccelerometerX:(double)arg1 Y:(double)arg2 Z:(double)arg3;
- (void)_updateTouchPoints:(struct CGPoint *)arg1 count:(unsigned long long)arg2;
- (_Bool)_sendHIDVendorDefinedEvent:(unsigned int)arg1 usage:(unsigned int)arg2 data:(char *)arg3 dataLength:(unsigned int)arg4;
- (_Bool)_sendHIDScrollEventX:(double)arg1 Y:(double)arg2 Z:(double)arg3;
- (_Bool)_sendHIDKeyboardEventPage:(unsigned int)arg1 usage:(unsigned int)arg2 duration:(double)arg3;
- (_Bool)_sendHIDEvent:(struct __IOHIDEvent *)arg1;
- (struct __IOHIDEvent *)_UIACreateIOHIDEventType:(unsigned int)arg1;
- (_Bool)_isEdgePoint:(struct CGPoint)arg1;
- (struct CGPoint)_normalizePoint:(struct CGPoint)arg1;
- (void)dealloc;
- (void)_initScreenProperties;
- (id)init;

@end

@interface UIASyntheticStarkEvents : UIASyntheticEvents
{
    struct __CFDictionary *_starkDeviceProperties;
    struct __CFData *_starkDigitizerDescriptorData;
    struct __IOHIDUserDevice *_syntheticStarkDevice;
    NSString *_starkDisplayUUID;
}

+ (id)sharedEventGenerator;
@property(readonly) NSString *starkDisplayUUID; // @synthesize starkDisplayUUID=_starkDisplayUUID;
@property(readonly) struct __IOHIDUserDevice *syntheticStarkDevice; // @synthesize syntheticStarkDevice=_syntheticStarkDevice;
@property(readonly) struct __CFData *starkDigitizerDescriptorData; // @synthesize starkDigitizerDescriptorData=_starkDigitizerDescriptorData;
@property(readonly) struct __CFDictionary *starkDeviceProperties; // @synthesize starkDeviceProperties=_starkDeviceProperties;
- (void)dealloc;
- (int)_submitHIDReportAtLocation:(struct CGPoint)arg1 ofType:(int)arg2;
- (void)_moveLastTouchPoint:(struct CGPoint)arg1;
- (void)liftUpAtPoints:(struct CGPoint *)arg1 touchCount:(unsigned long long)arg2;
- (void)touchDownAtPoints:(struct CGPoint *)arg1 touchCount:(unsigned long long)arg2;
- (void)_updateTouchPoints:(struct CGPoint *)arg1 count:(unsigned long long)arg2;
- (_Bool)_enableStarkModeWithDisplayUUID:(id)arg1;
- (void)_initScreenProperties;
- (id)init;

@end

@interface UIATabBar : UIAElement
{
}

- (id)selectedButton;

@end

@interface UIATableCell : UIAElement
{
}

+ (Class)_classForSimpleUIAXElement:(id)arg1;
- (id)scriptingActionExpressionShouldFavorTapOffset;
- (id)value;
- (id)name;

@end

@interface UIATableGroup : UIAElement
{
}

+ (Class)_classForSimpleUIAXElement:(id)arg1;
- (id)name;

@end

@interface UIATableView : UIAScrollView
{
    UIAElementArray *_cells;
}

+ (id)toManyRelationshipKeys;
+ (id)_moreToManyRelationshipKeys;
+ (Class)_classForSimpleUIAXElement:(id)arg1;
- (id)visibleGroups;
- (id)visibleCells;
- (id)groups;
- (id)cells;
- (id)cellCount;
- (id)lastVisibleCellIndex;
- (id)firstVisibleCellIndex;
- (id)value;
- (void)_emptyCaches;

@end

@interface UIATarget : UIAElement
{
    NSDate *_startupDate;
    long long _textViewValueMaxLength;
    long long _interfaceOrientation;
    double _lastAnimationEndedTime;
    NSString *_nameOfLastApp;
    UIAHost *_host;
    CLSimulationManager *_locationSimulationManager;
    _Bool _logElementTakesScreenshot;
    _Bool _handlesAlerts;
    unsigned long long valueChangedCount;
    UIASyntheticEvents *_eventGenerator;
    UIASyntheticStarkEvents *_starkEventGenerator;
}

+ (id)toManyRelationshipKeys;
+ (id)toOneRelationshipKeys;
+ (id)attributeKeys;
+ (id)_locationForObject:(id)arg1 withOptions:(id)arg2;
+ (id)localTarget;
@property(readonly) UIASyntheticStarkEvents *starkEventGenerator; // @synthesize starkEventGenerator=_starkEventGenerator;
@property(readonly) UIASyntheticEvents *eventGenerator; // @synthesize eventGenerator=_eventGenerator;
@property unsigned long long valueChangedCount; // @synthesize valueChangedCount;
@property _Bool handlesAlerts; // @synthesize handlesAlerts=_handlesAlerts;
@property _Bool logElementTakesScreenshot; // @synthesize logElementTakesScreenshot=_logElementTakesScreenshot;
- (_Bool)reactivateApp;
- (_Bool)deactivateApp;
- (_Bool)deactivateAppForDuration:(id)arg1;
- (_Bool)unlock;
- (_Bool)unlockWithOptions:(id)arg1;
- (void)_enterPasscode:(id)arg1;
- (void)_tapPictureFrame:(id)arg1;
- (void)_slideToHandoff:(id)arg1;
- (void)_slideToCamera:(id)arg1;
- (void)_slideToUnlock:(id)arg1;
- (id)_lockScreenScrollView;
- (_Bool)lock;
- (_Bool)lockForDuration:(id)arg1;
- (_Bool)isScreenOff;
- (_Bool)isLocked;
- (void)setRinger:(id)arg1;
- (void)holdVolumeDown:(id)arg1;
- (void)clickVolumeDown;
- (void)holdVolumeUp:(id)arg1;
- (void)clickVolumeUp;
- (void)holdLock:(id)arg1;
- (void)clickLock;
- (void)holdMenu:(id)arg1;
- (void)clickMenu;
- (void)shake;
- (void)rotate:(id)arg1 withOptions:(id)arg2;
- (void)pinchOpenFrom:(id)arg1 to:(id)arg2 forDuration:(id)arg3;
- (void)pinchCloseFrom:(id)arg1 to:(id)arg2 forDuration:(id)arg3;
- (void)flickFrom:(id)arg1 to:(id)arg2;
- (void)dragFrom:(id)arg1 to:(id)arg2 forDuration:(id)arg3;
- (void)touch:(id)arg1 andHold:(id)arg2;
- (void)touch:(id)arg1 withOptions:(id)arg2;
- (void)touch:(id)arg1;
- (_Bool)_touch:(id)arg1 withOptions:(id)arg2;
- (void)tap:(id)arg1 withOptions:(id)arg2;
- (void)twoFingerTap:(id)arg1;
- (void)doubleTap:(id)arg1;
- (void)tap:(id)arg1;
- (_Bool)_dragFrom:(id)arg1 to:(id)arg2 forDuration:(double)arg3 withTouchCount:(int)arg4 withFlick:(_Bool)arg5;
- (_Bool)_tapRequiredObject:(id)arg1 tapCount:(double)arg2 touchCount:(double)arg3;
- (_Bool)_tapOptionalObject:(id)arg1 tapCount:(double)arg2 touchCount:(double)arg3 tapOffset:(id)arg4;
- (id)localizedStringForKey:(id)arg1 value:(id)arg2 table:(id)arg3 bundlePath:(id)arg4;
- (id)localizedStringForKey:(id)arg1 withOptions:(id)arg2;
- (id)localizedStringForKey:(id)arg1;
- (id)scriptingSynonymStrings;
- (id)scriptingSynonyms;
- (id)scriptingFavoredSynonymString;
- (_Bool)_trackValueChanges:(_Bool)arg1;
- (_Bool)_handleAnnouncement:(id)arg1;
- (_Bool)_handleAlert;
- (void)setPassiveEventListeningMode:(id)arg1 withDelay:(id)arg2;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (unsigned long long)verboseOptions;
- (void)setVerboseOptions:(unsigned long long)arg1;
- (_Bool)delayForTimeInterval:(double)arg1;
- (double)popPatience;
- (void)pushPatience:(double)arg1;
- (void)setPatience:(double)arg1;
- (double)patience;
- (id)uiaxSpringBoardElement;
- (id)uiaxSystemAppElement;
- (id)uiaxSystemWideElement;
- (id)elements;
- (id)hardwareKeyboard;
- (id)remote;
- (id)mainScreen;
- (id)accessibilityUI;
- (id)springboard;
- (id)systemApp;
- (id)foregroundApps;
- (id)frontMostApp;
- (id)applicationAtPoint:(id)arg1;
- (id)_applicationAtPosition:(struct CGPoint)arg1;
- (id)applications;
- (id)host;
- (void)setTextViewValueMaxLength:(long long)arg1;
- (long long)textViewValueMaxLength;
- (void)setTargetClipboard:(id)arg1;
- (id)targetClipboard;
- (void)captureStarkRect:(id)arg1 withName:(id)arg2;
- (void)captureRect:(id)arg1 withName:(id)arg2;
- (void)captureRect:(id)arg1 onScreen:(id)arg2 withName:(id)arg3;
- (id)imageFromRect:(struct CGRect)arg1;
- (void)captureStarkScreenWithName:(id)arg1;
- (void)captureScreenWithName:(id)arg1;
- (id)lastCommandTime;
- (double)upTime;
- (id)startupDate;
- (_Bool)setLocation:(id)arg1 withOptions:(id)arg2;
- (_Bool)setLocation:(id)arg1;
- (_Bool)setDeviceOrientation:(id)arg1;
- (id)deviceOrientation;
- (id)localeName;
- (id)localeID;
- (id)languageName;
- (id)languageID;
- (id)uniqueIdentifier;
- (id)systemBuild;
- (id)systemVersion;
- (id)systemName;
- (id)model;
- (id)name;
- (id)rect;
- (_Bool)checkIsValid;
- (_Bool)isValid;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (void)_setLastAnimationEndedTime:(double)arg1;
- (double)_lastAnimationEndedTime;
- (long long)_interfaceOrientation;
- (void)_updateInterfaceOrientation;
- (void)_invalidate;
- (void)dealloc;
- (id)init;
- (id)_systemVersionDictionary;

@end

@interface UIATextView : UIAElement
{
}

@end

@interface UIAToolbar : UIAElement
{
}

@end

@interface UIAWebView : UIAScrollView
{
}

@end

@interface UIAWindow : UIAElement
{
}

- (id)elements;
- (_Bool)_windowShouldAcceptAXElement:(id)arg1;
- (id)_uiaContentArea;
- (id)contentArea;

@end

@interface UIAXElement : NSObject <UIAXElement>
{
    struct __AXUIElement *_axuiElementRef;
    double _creationTime;
    double _lastAccessedTime;
    _Bool _isValid;
    int _axError;
}

+ (struct CGRect)_convertHostedViewFrame:(struct CGRect)arg1 forContextID:(id)arg2;
+ (struct CGPoint)_convertHostedCoordinates:(struct CGPoint)arg1 forContextID:(id)arg2;
+ (struct CGRect)_convertRectFromScreenToDevice:(struct CGRect)arg1;
+ (struct CGRect)_convertRectFromDeviceToScreen:(struct CGRect)arg1;
+ (struct CGPoint)_convertPointFromScreenToDevice:(struct CGPoint)arg1;
+ (struct CGPoint)_convertPointFromDeviceToScreen:(struct CGPoint)arg1;
+ (id)stringForTraits:(unsigned long long)arg1;
+ (id)stringForAXNotification:(int)arg1;
+ (id)stringForAXError:(int)arg1;
+ (id)uiaxAccessibilityUIServerElement;
+ (id)uiaxFocusedApplicationsElementArray;
+ (id)uiaxFocusedApplicationElement;
+ (id)uiaxSpringBoardElement;
+ (id)uiaxSystemApplicationElement;
+ (id)uiaxSystemWideElement;
+ (id)uiaxElementAtPosition:(struct CGPoint)arg1;
+ (id)uiaxApplicationAtPosition:(struct CGPoint)arg1;
+ (id)_objectForCFTypeRef:(void *)arg1;
+ (int)_parameterizedAttributeForString:(id)arg1;
+ (id)_stringForParameterizedAttribute:(int)arg1;
+ (int)_attributeForString:(id)arg1;
+ (id)_stringForAttribute:(int)arg1;
+ (id)_stringsForTraitsDictionary;
+ (id)_parameterizedAttributesForStringsDictionary;
+ (id)_stringsForParameterizedAttributesDictionary;
+ (id)_regularAttributesForStringsDictionary;
+ (id)_stringsForRegularAttributesDictionary;
+ (id)_traitStrings;
+ (id)_traitNumbers;
+ (id)_parameterizedAttributeStrings;
+ (id)_parameterizedAttributeNumbers;
+ (id)_regularAttributeStrings;
+ (id)_regularAttributeNumbers;
+ (id)uiaxElementWithAXUIElementRef:(struct __AXUIElement *)arg1;
+ (_Bool)unregisterObserver:(struct __AXObserver *)arg1 forAXNotification:(int)arg2;
+ (_Bool)registerObserver:(struct __AXObserver *)arg1 forAXNotification:(int)arg2;
+ (_Bool)registerObserver:(struct __AXObserver *)arg1 forAXNotifications:(_Bool)arg2;
+ (void)_raiseIfAXErrorAPIDisabled:(int)arg1;
+ (void)_raiseAXErrorAPIDisabled;
+ (void)initializeAccessibility;
+ (void)initialize;
- (void)logAXTree;
- (void)logAXAncestry;
- (void)logAXInfo;
- (_Bool)_hasNonzeroFrame;
- (id)ancestry;
- (id)descendantWithTestingTrait:(id)arg1;
- (id)descendantsWithAttributes:(id)arg1 traits:(unsigned long long)arg2;
- (id)descendants;
- (id)childWithTestingTrait:(id)arg1;
- (id)children;
- (id)focusedElement;
- (id)responder;
- (id)parent;
- (id)firstElementOfAttribute:(int)arg1 withValue:(id)arg2 forAttribute:(int)arg3;
- (id)uiaxElementAtCenterPoint;
- (id)centerPoint;
- (id)hitpoint;
- (_Bool)_isVisibleAtPoint:(struct CGPoint)arg1;
- (id)rect;
- (id)description;
- (unsigned long long)traits;
- (id)traitsNumber;
- (id)_copyTraitsNumber;
- (id)stringForAllKnownAttributes;
- (id)stringForAttributes:(id)arg1;
- (id)valuesForAllKnownAttributes;
- (_Bool)checkIsValid;
- (_Bool)isValid;
- (int)axError;
- (int)pid;
- (_Bool)performAXAction:(int)arg1 withValue:(id)arg2;
- (_Bool)performAXAction:(int)arg1;
- (id)valueForUndefinedKey:(id)arg1;
- (id)valueForKey:(id)arg1;
- (id)valueForAttribute:(int)arg1 parameter:(id)arg2;
- (id)valuesForAttributes:(id)arg1;
- (_Bool)setValue:(id)arg1 forAttribute:(int)arg2;
- (id)valueForAttribute:(int)arg1;
- (struct __AXUIElement *)axuiElementRef;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (void)finalize;
- (void)dealloc;
- (void)_setLastAccessedTime:(double)arg1;
- (double)_lastAccessedTime;
- (double)_creationTime;
- (id)_initWithAXUIElementRef:(struct __AXUIElement *)arg1;
- (void)_setValidForAXError:(int)arg1;
- (void)_invalidate;

@end

