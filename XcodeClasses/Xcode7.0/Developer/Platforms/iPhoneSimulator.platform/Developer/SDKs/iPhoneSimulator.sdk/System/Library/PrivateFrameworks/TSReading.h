//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct AttributeCollection {
    CDUnknownFunctionPointerType *_field1;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Boolean::Enum, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Boolean::Enum>>> _field2;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitLength, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitLength>>> _field3;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitLength, std::__1::allocator<EQKitLength>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitLength, std::__1::allocator<EQKitLength>>>>> _field4;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::basic_string<char>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::basic_string<char>>>> _field5;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>>>> _field6;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Align::Enum, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Align::Enum>>> _field7;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::VAlign::Enum, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::VAlign::Enum>>> _field8;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::GroupAlign::Enum, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::GroupAlign::Enum>>> _field9;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Crossout::Enum, std::__1::allocator<EQKitTypes::Crossout::Enum>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Crossout::Enum, std::__1::allocator<EQKitTypes::Crossout::Enum>>>>> _field10;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Notation::Enum, std::__1::allocator<EQKitTypes::Notation::Enum>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Notation::Enum, std::__1::allocator<EQKitTypes::Notation::Enum>>>>> _field11;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::VAlign::Enum, std::__1::allocator<EQKitTypes::VAlign::Enum>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::VAlign::Enum, std::__1::allocator<EQKitTypes::VAlign::Enum>>>>> _field12;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Align::Enum, std::__1::allocator<EQKitTypes::Align::Enum>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Align::Enum, std::__1::allocator<EQKitTypes::Align::Enum>>>>> _field13;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::ScriptLevel, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::ScriptLevel>>> _field14;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Display::Enum, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Display::Enum>>> _field15;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::Config::Operator::Form, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::Config::Operator::Form>>> _field16;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::Script::Variant, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::Script::Variant>>> _field17;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, long, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, long>>> _field18;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, unsigned long, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, unsigned long>>> _field19;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, double, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, double>>> _field20;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitPseudoUnitLength, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitPseudoUnitLength>>> _field21;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, unsigned short, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, unsigned short>>> _field22;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Edge::Enum, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Edge::Enum>>> _field23;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::CFRetainRelease, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::CFRetainRelease>>> _field24;
};

struct CATransform3D {
    double m11;
    double m12;
    double m13;
    double m14;
    double m21;
    double m22;
    double m23;
    double m24;
    double m31;
    double m32;
    double m33;
    double m34;
    double m41;
    double m42;
    double m43;
    double m44;
};

struct CGAffineTransform {
    double a;
    double b;
    double c;
    double d;
    double tx;
    double ty;
};

struct CGColor;

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct Collection;

struct Config {
    int _field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
};

struct Dictionary {
    struct IdentifierMap _field1;
    struct map<std::__1::pair<unsigned short, EQKit::Config::Operator::Form>, EQKit::Config::Operator::Dictionary::Entry, std::__1::less<std::__1::pair<unsigned short, EQKit::Config::Operator::Form>>, std::__1::allocator<std::__1::pair<const std::__1::pair<unsigned short, EQKit::Config::Operator::Form>, EQKit::Config::Operator::Dictionary::Entry>>> _field2;
    struct map<unsigned short, EQKit::Config::Operator::Form, std::__1::less<unsigned short>, std::__1::allocator<std::__1::pair<const unsigned short, EQKit::Config::Operator::Form>>> _field3;
    struct map<unsigned short, unsigned long, std::__1::less<unsigned short>, std::__1::allocator<std::__1::pair<const unsigned short, unsigned long>>> _field4;
};

struct EQKitCache<EQKit::OpticalKern::Glyph::Key, std::__1::shared_ptr<EQKit::OpticalKern::Edge::Path>, std::__1::shared_ptr<const EQKit::OpticalKern::Edge::Path>>;

struct EQKitCacheLRUCounter {
    unsigned long long _field1;
};

struct EQKitLayoutContext {
    CDUnknownFunctionPointerType *_field1;
    struct Info _field2;
    double _field3;
    double _field4;
    double _field5;
    id _field6;
    struct Collection *_field7;
    struct __CTFont *_field8;
    struct CGColor *_field9;
    struct {
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
    } _field10;
    struct {
        double _field1;
        double _field2;
        double _field3;
    } _field11;
};

struct EQKitLayoutElementaryStack;

struct EQKitLayoutManager {
    id _field1;
    double _field2;
    double _field3;
    struct __CFString *_field4;
    struct Manager *_field5;
    struct Config *_field6;
    struct EQKitLayoutContext _field7;
    struct stack<unsigned long, std::__1::deque<unsigned long, std::__1::allocator<unsigned long>>> _field8;
    struct stack<EQKitLayoutContext, std::__1::deque<EQKitLayoutContext, std::__1::allocator<EQKitLayoutContext>>> _field9;
    struct stack<void (^)(id<EQKitLayoutNode>, const EQKit::Layout::Schemata &), std::__1::deque<void (^)(id<EQKitLayoutNode>, const EQKit::Layout::Schemata &), std::__1::allocator<void (^)(id<EQKitLayoutNode>, const EQKit::Layout::Schemata &)>>> _field10;
    struct stack<EQKitLayoutRow, std::__1::deque<EQKitLayoutRow, std::__1::allocator<EQKitLayoutRow>>> _field11;
    struct vector<id<EQKitLayoutNode>, std::__1::allocator<id<EQKitLayoutNode>>> _field12;
    struct stack<id<EQKitLayoutNode>, std::__1::deque<id<EQKitLayoutNode>, std::__1::allocator<id<EQKitLayoutNode>>>> _field13;
    struct stack<EQKitLayoutStretchedOperator, std::__1::deque<EQKitLayoutStretchedOperator, std::__1::allocator<EQKitLayoutStretchedOperator>>> _field14;
    struct stack<EQKitLayoutElementaryStack, std::__1::deque<EQKitLayoutElementaryStack, std::__1::allocator<EQKitLayoutElementaryStack>>> _field15;
    struct stack<EQKitLayoutTable, std::__1::deque<EQKitLayoutTable, std::__1::allocator<EQKitLayoutTable>>> _field16;
    id _field17;
    struct AttributeCollection *_field18;
};

struct EQKitLayoutRow;

struct EQKitLayoutStretchedOperator;

struct EQKitLayoutTable;

struct Entry;

struct IdentifierMap {
    unsigned short _field1;
    struct map<std::__1::basic_string<char>, unsigned short, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, unsigned short>>> _field2;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _field3;
};

struct Info {
    unsigned long long _field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    int _field5;
    double _field6;
    int _field7;
    struct __CFString *_field8;
};

struct NSObject {
    Class _field1;
};

struct ObjcSharedPtr<NSString> {
    id _field1;
};

struct PATHSEGMENT {
    unsigned int :4;
    unsigned int :60;
    struct CGPoint _field1;
};

struct Path {
    int _field1;
    int _field2;
    int _field3;
    struct path_descr *_field4;
    int _field5;
    int _field6;
    _Bool _field7;
    _Bool _field8;
    int _field9;
    int _field10;
    int _field11;
    char *_field12;
};

struct QuantizationConfig {
    unsigned long long _field1;
    double _field2;
    double _field3;
    double _field4;
};

struct Schemata {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    id _field3;
    id _field4;
};

struct Spec {
    struct vector<EQKit::OpticalKern::Spec::Entry, std::__1::allocator<EQKit::OpticalKern::Spec::Entry>> _field1;
    unsigned int _field2;
};

struct TSDBrushVertexData;

struct TSTCellStorage {
    struct {
        unsigned char _field1;
        unsigned int :8;
        unsigned int :8;
        unsigned char _field2;
        unsigned int :16;
        unsigned int :16;
        unsigned int :16;
        unsigned int :16;
    } _field1;
    unsigned char _field2[0];
};

struct TSTStrokeRun {
    unsigned int _field1;
    unsigned int _field2;
    id _field3;
    double _field4;
    unsigned int :1;
    unsigned int :1;
    unsigned int :2;
    unsigned int :2;
};

struct TSTTableRBTreeNode_s {
    unsigned short _field1;
    unsigned short _field2;
    struct TSTTableRBTreeNode_s *_field3;
    struct TSTTableRBTreeNode_s *_field4;
    struct TSTTableRBTreeNode_s *_field5;
    char _field6;
};

struct TSUCustomFormat {
    struct ObjcSharedPtr<NSString> _field1;
    int _field2;
    struct {
        id _field1;
        id _field2;
        id _field3;
        id _field4;
        id _field5;
        double _field6;
        unsigned int :8;
        unsigned char _field7;
        unsigned char _field8;
        unsigned char _field9;
        unsigned char _field10;
        unsigned char _field11;
        unsigned char _field12;
        unsigned char _field13;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
    } _field3;
    struct vector<TSUCustomFormatCondition, std::__1::allocator<TSUCustomFormatCondition>> _field4;
};

struct TSWPAdornmentLine {
    struct CGPoint _field1;
    double _field2;
    struct CGColor *_field3;
    double _field4;
    unsigned int _field5;
    int _field6;
    int _field7;
    double _field8;
    _Bool _field9;
    id _field10;
};

struct TSWPAdornmentRect {
    int _field1;
    id _field2;
    id _field3;
    struct CGRect _field4;
};

struct TSWPAdornments {
    int _field1;
    int _field2;
    double _field3;
    struct CGColor *_field4;
    struct __CTFont *_field5;
    vector_88016b54 _field6;
    struct vector<unsigned short, std::__1::allocator<unsigned short>> _field7;
    struct vector<CGRect, std::__1::allocator<CGRect>> _field8;
    struct vector<CGPoint, std::__1::allocator<CGPoint>> _field9;
    struct vector<TSWPAttachmentPosition, std::__1::allocator<TSWPAttachmentPosition>> _field10;
    double _field11;
    double _field12;
    double _field13;
    struct CGPoint _field14;
    _Bool _field15;
};

struct TSWPAttributeArray {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    struct TSWPAttributeRecord *_field5;
    id _field6;
    unsigned long long _field7;
};

struct TSWPAttributeRecord;

struct TSWPChangeAttributeArray {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    struct TSWPAttributeRecord *_field5;
    id _field6;
    unsigned long long _field7;
    _Bool _field8;
    id _field9;
    int _field10;
};

struct TSWPDrawingState {
    id _field1;
    id _field2;
    struct CGRect _field3;
    id _field4;
    id _field5;
    unsigned long long _field6;
    struct CGColor *_field7;
    double _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    struct TSWPRangeVector _field16;
    struct TSWPRangeVector _field17;
    struct _NSRange _field18;
    struct TSWPRangeVector *_field19;
    struct TSWPRangeVector *_field20;
    struct _NSRange _field21;
    struct _NSRange _field22;
    unsigned long long _field23;
    struct _NSRange _field24;
    id _field25;
    id _field26;
};

struct TSWPLineFragment {
    unsigned long long _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned int _field4;
    double _field5;
    double _field6;
    struct CGRect _field7;
    struct CGRect _field8;
    CDStruct_7660b417 _field9;
    struct TSWPListLabel *_field10;
    id _field11;
    struct vector<TSWPLineRef, std::__1::allocator<TSWPLineRef>> _field12;
    double _field13;
    struct vector<TSWPLineRef, std::__1::allocator<TSWPLineRef>> _field14;
    struct vector<TSWPLineRef, std::__1::allocator<TSWPLineRef>> _field15;
    vector_5a1d2cc3 _field16;
    vector_5a1d2cc3 _field17;
    vector_5a1d2cc3 _field18;
    vector_5a1d2cc3 _field19;
    struct vector<TSWPUIAttachmentData, std::__1::allocator<TSWPUIAttachmentData>> _field20;
    struct TSWPTypesettingState *_field21;
    double _field22;
    double _field23;
    double _field24;
    id _field25;
    id _field26;
    struct vector<TSWPAdornments, std::__1::allocator<TSWPAdornments>> _field27;
    struct TSWPAdornmentLine *_field28;
    id _field29;
    unsigned int _field30;
    struct vector<TSWPLFCharIndexData, std::__1::allocator<TSWPLFCharIndexData>> _field31;
    id _field32;
    double _field33;
    id _field34;
};

struct TSWPLineFragmentArray;

struct TSWPLineRef;

struct TSWPListLabel;

struct TSWPParagraphAttributeArray {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    struct TSWPAttributeRecord *_field5;
    id _field6;
    unsigned long long _field7;
    _Bool _field8;
    unsigned long long _field9;
    unsigned long long _field10;
};

struct TSWPParagraphEnumerator {
    id _field1;
    id _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    _Bool _field7;
};

struct TSWPParagraphTypesetter;

struct TSWPRangeVector {
    struct _NSRange *__begin_;
    struct _NSRange *__end_;
    struct __compressed_pair<_NSRange *, std::__1::allocator<_NSRange>> {
        struct _NSRange *__first_;
    } __end_cap_;
};

struct TSWPStorageTransaction {
    struct vector<TSWPStorageTransactionObject, std::__1::allocator<TSWPStorageTransactionObject>> _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct TSWPStorageTransactionObject;

struct TSWPTopicNumberHints {
    struct map<const TSWPListStyle *, std::__1::vector<TSWPTopicNumberEntry, std::__1::allocator<TSWPTopicNumberEntry>>, std::__1::less<const TSWPListStyle *>, std::__1::allocator<std::__1::pair<const TSWPListStyle *const, std::__1::vector<TSWPTopicNumberEntry, std::__1::allocator<TSWPTopicNumberEntry>>>>> _numbersForListStyle;
    unsigned long long _charIndex;
    unsigned long long _validThroughCharIndex;
    NSObject<TSWPStyleProvider> *_styleProvider;
};

struct TSWPTypesettingState;

struct TSWPUIAttachmentData;

struct UIEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct WHCCol;

struct WHCRow;

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct _TSDStrokeOutsets {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
};

struct _TSKThreadInfo {
    struct _opaque_pthread_t *threadId;
    unsigned int count;
};

struct _TSTDefaultCellBlock {
    TSTCell *defaultBodyCell;
    TSTCell *defaultHeaderRowCell;
    TSTCell *defaultHeaderColumnCell;
    TSTCell *defaultFooterRowCell;
};

struct _TSWPCharIndexAndAffinity;

struct _TSWPCharIndexAndPosition {
    unsigned long long _field1;
    int _field2;
    double _field3;
    int _field4;
    double _field5;
};

struct __CFString;

struct __CTFont;

struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TSUColumnRowRect, void *>>> {
    struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
};

struct __hash_node<std::__1::pair<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>, void *>;

struct __hash_node<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowCoordinate>, void *>;

struct __hash_node<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowSize>, void *>;

struct __hash_node<std::__1::pair<const long long, NSMutableArray *>, void *>;

struct __hash_node<std::__1::pair<const long long, TSPData *__weak>, void *>;

struct __hash_node<std::__1::pair<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *>;

struct __hash_node<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, void *>;

struct __list_node<unsigned long, void *>;

struct __shared_weak_count;

struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
    struct __tree_node_base<void *> *__left_;
};

struct __tree_node<TSTMergeRangeElem, void *>;

struct __tree_node<TSUColumnRowRect, void *>;

struct __va_list_tag {
    unsigned int _field1;
    unsigned int _field2;
    void *_field3;
    void *_field4;
};

struct __wrap_iter<double *> {
    double *_field1;
};

struct _opaque_pthread_rwlock_t {
    long long __sig;
    char __opaque[192];
};

struct _xmlDoc {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlNode *_field7;
    struct _xmlNode *_field8;
    struct _xmlDoc *_field9;
    int _field10;
    int _field11;
    struct _xmlDtd *_field12;
    struct _xmlDtd *_field13;
    struct _xmlNs *_field14;
    char *_field15;
    char *_field16;
    void *_field17;
    void *_field18;
    char *_field19;
    int _field20;
    struct _xmlDict *_field21;
    void *_field22;
    int _field23;
    int _field24;
};

struct _xmlDtd;

struct _xmlNode {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlNode *_field7;
    struct _xmlNode *_field8;
    struct _xmlDoc *_field9;
    struct _xmlNs *_field10;
    char *_field11;
    struct _xmlAttr *_field12;
    struct _xmlNs *_field13;
    void *_field14;
    unsigned short _field15;
    unsigned short _field16;
};

struct _xmlNs {
    struct _xmlNs *_field1;
    int _field2;
    char *_field3;
    char *_field4;
    void *_field5;
    struct _xmlDoc *_field6;
};

struct array<unsigned char, 20> {
    unsigned char __elems_[20];
};

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    unsigned long long _field1;
                    unsigned long long _field2;
                    char *_field3;
                } _field1;
                struct __short {
                    union {
                        unsigned char _field1;
                        char _field2;
                    } _field1;
                    char _field2[23];
                } _field2;
                struct __raw {
                    unsigned long long _field1[3];
                } _field3;
            } _field1;
        } _field1;
    } _field1;
};

struct deque<EQKitLayoutContext, std::__1::allocator<EQKitLayoutContext>> {
    struct __split_buffer<EQKitLayoutContext *, std::__1::allocator<EQKitLayoutContext *>> {
        struct EQKitLayoutContext **_field1;
        struct EQKitLayoutContext **_field2;
        struct EQKitLayoutContext **_field3;
        struct __compressed_pair<EQKitLayoutContext **, std::__1::allocator<EQKitLayoutContext *>> {
            struct EQKitLayoutContext **_field1;
        } _field4;
    } _field1;
    unsigned long long _field2;
    struct __compressed_pair<unsigned long, std::__1::allocator<EQKitLayoutContext>> {
        unsigned long long _field1;
    } _field3;
};

struct deque<EQKitLayoutElementaryStack, std::__1::allocator<EQKitLayoutElementaryStack>> {
    struct __split_buffer<EQKitLayoutElementaryStack *, std::__1::allocator<EQKitLayoutElementaryStack *>> {
        struct EQKitLayoutElementaryStack **_field1;
        struct EQKitLayoutElementaryStack **_field2;
        struct EQKitLayoutElementaryStack **_field3;
        struct __compressed_pair<EQKitLayoutElementaryStack **, std::__1::allocator<EQKitLayoutElementaryStack *>> {
            struct EQKitLayoutElementaryStack **_field1;
        } _field4;
    } _field1;
    unsigned long long _field2;
    struct __compressed_pair<unsigned long, std::__1::allocator<EQKitLayoutElementaryStack>> {
        unsigned long long _field1;
    } _field3;
};

struct deque<EQKitLayoutRow, std::__1::allocator<EQKitLayoutRow>> {
    struct __split_buffer<EQKitLayoutRow *, std::__1::allocator<EQKitLayoutRow *>> {
        struct EQKitLayoutRow **_field1;
        struct EQKitLayoutRow **_field2;
        struct EQKitLayoutRow **_field3;
        struct __compressed_pair<EQKitLayoutRow **, std::__1::allocator<EQKitLayoutRow *>> {
            struct EQKitLayoutRow **_field1;
        } _field4;
    } _field1;
    unsigned long long _field2;
    struct __compressed_pair<unsigned long, std::__1::allocator<EQKitLayoutRow>> {
        unsigned long long _field1;
    } _field3;
};

struct deque<EQKitLayoutStretchedOperator, std::__1::allocator<EQKitLayoutStretchedOperator>> {
    struct __split_buffer<EQKitLayoutStretchedOperator *, std::__1::allocator<EQKitLayoutStretchedOperator *>> {
        struct EQKitLayoutStretchedOperator **_field1;
        struct EQKitLayoutStretchedOperator **_field2;
        struct EQKitLayoutStretchedOperator **_field3;
        struct __compressed_pair<EQKitLayoutStretchedOperator **, std::__1::allocator<EQKitLayoutStretchedOperator *>> {
            struct EQKitLayoutStretchedOperator **_field1;
        } _field4;
    } _field1;
    unsigned long long _field2;
    struct __compressed_pair<unsigned long, std::__1::allocator<EQKitLayoutStretchedOperator>> {
        unsigned long long _field1;
    } _field3;
};

struct deque<EQKitLayoutTable, std::__1::allocator<EQKitLayoutTable>> {
    struct __split_buffer<EQKitLayoutTable *, std::__1::allocator<EQKitLayoutTable *>> {
        struct EQKitLayoutTable **_field1;
        struct EQKitLayoutTable **_field2;
        struct EQKitLayoutTable **_field3;
        struct __compressed_pair<EQKitLayoutTable **, std::__1::allocator<EQKitLayoutTable *>> {
            struct EQKitLayoutTable **_field1;
        } _field4;
    } _field1;
    unsigned long long _field2;
    struct __compressed_pair<unsigned long, std::__1::allocator<EQKitLayoutTable>> {
        unsigned long long _field1;
    } _field3;
};

struct deque<EQKitMathMLParserState, std::__1::allocator<EQKitMathMLParserState>> {
    struct __split_buffer<EQKitMathMLParserState *, std::__1::allocator<EQKitMathMLParserState *>> {
        int **__first_;
        int **__begin_;
        int **__end_;
        struct __compressed_pair<EQKitMathMLParserState **, std::__1::allocator<EQKitMathMLParserState *>> {
            int **__first_;
        } __end_cap_;
    } __map_;
    unsigned long long __start_;
    struct __compressed_pair<unsigned long, std::__1::allocator<EQKitMathMLParserState>> {
        unsigned long long __first_;
    } __size_;
};

struct deque<id<EQKitLayoutNode>, std::__1::allocator<id<EQKitLayoutNode>>> {
    struct __split_buffer<id<EQKitLayoutNode>*, std::__1::allocator<id<EQKitLayoutNode>*>> {
        id **_field1;
        id **_field2;
        id **_field3;
        struct __compressed_pair<id<EQKitLayoutNode>**, std::__1::allocator<id<EQKitLayoutNode>*>> {
            id **_field1;
        } _field4;
    } _field1;
    unsigned long long _field2;
    struct __compressed_pair<unsigned long, std::__1::allocator<id<EQKitLayoutNode>>> {
        unsigned long long _field1;
    } _field3;
};

struct deque<unsigned long, std::__1::allocator<unsigned long>> {
    struct __split_buffer<unsigned long *, std::__1::allocator<unsigned long *>> {
        unsigned long long **_field1;
        unsigned long long **_field2;
        unsigned long long **_field3;
        struct __compressed_pair<unsigned long **, std::__1::allocator<unsigned long *>> {
            unsigned long long **_field1;
        } _field4;
    } _field1;
    unsigned long long _field2;
    struct __compressed_pair<unsigned long, std::__1::allocator<unsigned long>> {
        unsigned long long _field1;
    } _field3;
};

struct deque<void (^)(id<EQKitLayoutNode>, const EQKit::Layout::Schemata &), std::__1::allocator<void (^)(id<EQKitLayoutNode>, const EQKit::Layout::Schemata &)>> {
    struct __split_buffer<void (^*)(id<EQKitLayoutNode>, const EQKit::Layout::Schemata &), std::__1::allocator<void (^*)(id<EQKitLayoutNode>, const EQKit::Layout::Schemata &)>> {
        CDUnknownBlockType **_field1;
        CDUnknownBlockType **_field2;
        CDUnknownBlockType **_field3;
        struct __compressed_pair<void (^**)(id<EQKitLayoutNode>, const EQKit::Layout::Schemata &), std::__1::allocator<void (^*)(id<EQKitLayoutNode>, const EQKit::Layout::Schemata &)>> {
            CDUnknownBlockType **_field1;
        } _field4;
    } _field1;
    unsigned long long _field2;
    struct __compressed_pair<unsigned long, std::__1::allocator<void (^)(id<EQKitLayoutNode>, const EQKit::Layout::Schemata &)>> {
        unsigned long long _field1;
    } _field3;
};

struct hash_map<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int, TSTTableDataObjectHasher, TSTTableDataObjectEqual, std::__1::allocator<std::__1::pair<const SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>>> {
    struct __hash_table<std::__1::pair<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>, __gnu_cxx::__hash_map_hasher<std::__1::pair<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>, TSTTableDataObjectHasher, true>, __gnu_cxx::__hash_map_equal<std::__1::pair<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>, TSTTableDataObjectEqual, true>, std::__1::allocator<std::__1::pair<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::pair<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::pair<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::pair<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>, void *>*> {
                struct __hash_node<std::__1::pair<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, __gnu_cxx::__hash_map_hasher<std::__1::pair<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>, TSTTableDataObjectHasher, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, __gnu_cxx::__hash_map_equal<std::__1::pair<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>, TSTTableDataObjectEqual, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct hash_map<TSUColumnRowCoordinate, TSUColumnRowCoordinate, TSTCellIDHasher, std::__1::equal_to<TSUColumnRowCoordinate>, std::__1::allocator<std::__1::pair<const TSUColumnRowCoordinate, TSUColumnRowCoordinate>>> {
    struct __hash_table<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowCoordinate>, __gnu_cxx::__hash_map_hasher<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowCoordinate>, TSTCellIDHasher, true>, __gnu_cxx::__hash_map_equal<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowCoordinate>, std::__1::equal_to<TSUColumnRowCoordinate>, true>, std::__1::allocator<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowCoordinate>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowCoordinate>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowCoordinate>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowCoordinate>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowCoordinate>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowCoordinate>, void *>*> {
                struct __hash_node<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowCoordinate>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, __gnu_cxx::__hash_map_hasher<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowCoordinate>, TSTCellIDHasher, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, __gnu_cxx::__hash_map_equal<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowCoordinate>, std::__1::equal_to<TSUColumnRowCoordinate>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct hash_map<TSUColumnRowCoordinate, TSUColumnRowSize, TSTCellIDHasher, std::__1::equal_to<TSUColumnRowCoordinate>, std::__1::allocator<std::__1::pair<const TSUColumnRowCoordinate, TSUColumnRowSize>>> {
    struct __hash_table<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowSize>, __gnu_cxx::__hash_map_hasher<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowSize>, TSTCellIDHasher, true>, __gnu_cxx::__hash_map_equal<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowSize>, std::__1::equal_to<TSUColumnRowCoordinate>, true>, std::__1::allocator<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowSize>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowSize>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowSize>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowSize>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowSize>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowSize>, void *>*> {
                struct __hash_node<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowSize>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, __gnu_cxx::__hash_map_hasher<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowSize>, TSTCellIDHasher, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, __gnu_cxx::__hash_map_equal<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowSize>, std::__1::equal_to<TSUColumnRowCoordinate>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct hash_map<const long long, NSMutableArray *, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, NSMutableArray *>>> {
    struct __hash_table<std::__1::pair<const long long, NSMutableArray *>, __gnu_cxx::__hash_map_hasher<std::__1::pair<const long long, NSMutableArray *>, TSP::IdentifierHash, true>, __gnu_cxx::__hash_map_equal<std::__1::pair<const long long, NSMutableArray *>, std::__1::equal_to<const long long>, true>, std::__1::allocator<std::__1::pair<const long long, NSMutableArray *>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::pair<const long long, NSMutableArray *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<const long long, NSMutableArray *>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<const long long, NSMutableArray *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::pair<const long long, NSMutableArray *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::pair<const long long, NSMutableArray *>, void *>*> {
                struct __hash_node<std::__1::pair<const long long, NSMutableArray *>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, __gnu_cxx::__hash_map_hasher<std::__1::pair<const long long, NSMutableArray *>, TSP::IdentifierHash, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, __gnu_cxx::__hash_map_equal<std::__1::pair<const long long, NSMutableArray *>, std::__1::equal_to<const long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct hash_map<const long long, TSPData *__weak, TSP::ObjectIdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, TSPData *__weak>>> {
    struct __hash_table<std::__1::pair<const long long, TSPData *__weak>, __gnu_cxx::__hash_map_hasher<std::__1::pair<const long long, TSPData *__weak>, TSP::ObjectIdentifierHash, true>, __gnu_cxx::__hash_map_equal<std::__1::pair<const long long, TSPData *__weak>, std::__1::equal_to<const long long>, true>, std::__1::allocator<std::__1::pair<const long long, TSPData *__weak>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::pair<const long long, TSPData *__weak>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<const long long, TSPData *__weak>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<const long long, TSPData *__weak>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::pair<const long long, TSPData *__weak>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::pair<const long long, TSPData *__weak>, void *>*> {
                struct __hash_node<std::__1::pair<const long long, TSPData *__weak>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, __gnu_cxx::__hash_map_hasher<std::__1::pair<const long long, TSPData *__weak>, TSP::ObjectIdentifierHash, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, __gnu_cxx::__hash_map_equal<std::__1::pair<const long long, TSPData *__weak>, std::__1::equal_to<const long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct hash_map<const std::__1::array<unsigned char, 20>, TSPData *__weak, TSP::DataDigestHash, TSP::DataDigestEqualTo, std::__1::allocator<std::__1::pair<const std::__1::array<unsigned char, 20>, TSPData *__weak>>> {
    struct __hash_table<std::__1::pair<const std::__1::array<unsigned char, 20>, TSPData *__weak>, __gnu_cxx::__hash_map_hasher<std::__1::pair<const std::__1::array<unsigned char, 20>, TSPData *__weak>, TSP::DataDigestHash, true>, __gnu_cxx::__hash_map_equal<std::__1::pair<const std::__1::array<unsigned char, 20>, TSPData *__weak>, TSP::DataDigestEqualTo, true>, std::__1::allocator<std::__1::pair<const std::__1::array<unsigned char, 20>, TSPData *__weak>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::pair<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::pair<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::pair<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *>*> {
                struct __hash_node<std::__1::pair<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, __gnu_cxx::__hash_map_hasher<std::__1::pair<const std::__1::array<unsigned char, 20>, TSPData *__weak>, TSP::DataDigestHash, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, __gnu_cxx::__hash_map_equal<std::__1::pair<const std::__1::array<unsigned char, 20>, TSPData *__weak>, TSP::DataDigestEqualTo, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct hash_map<unsigned int, SFUtility::ObjcSharedPtr<NSObject>, TSTIntHasher, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, SFUtility::ObjcSharedPtr<NSObject>>>> {
    struct __hash_table<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, __gnu_cxx::__hash_map_hasher<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, TSTIntHasher, true>, __gnu_cxx::__hash_map_equal<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, void *>*> {
                struct __hash_node<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, __gnu_cxx::__hash_map_hasher<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, TSTIntHasher, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, __gnu_cxx::__hash_map_equal<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, std::__1::equal_to<unsigned int>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct in_addr {
    unsigned int _field1;
};

struct list<unsigned long, std::__1::allocator<unsigned long>> {
    struct __list_node_base<unsigned long, void *> {
        struct __list_node<unsigned long, void *> *__prev_;
        struct __list_node<unsigned long, void *> *__next_;
    } __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<unsigned long, void *>>> {
        unsigned long long __first_;
    } __size_alloc_;
};

struct map<const TSWPListStyle *, std::__1::vector<TSWPTopicNumberEntry, std::__1::allocator<TSWPTopicNumberEntry>>, std::__1::less<const TSWPListStyle *>, std::__1::allocator<std::__1::pair<const TSWPListStyle *const, std::__1::vector<TSWPTopicNumberEntry, std::__1::allocator<TSWPTopicNumberEntry>>>>> {
    struct __tree<std::__1::__value_type<const TSWPListStyle *, std::__1::vector<TSWPTopicNumberEntry, std::__1::allocator<TSWPTopicNumberEntry>>>, std::__1::__map_value_compare<const TSWPListStyle *, std::__1::__value_type<const TSWPListStyle *, std::__1::vector<TSWPTopicNumberEntry, std::__1::allocator<TSWPTopicNumberEntry>>>, std::__1::less<const TSWPListStyle *>, true>, std::__1::allocator<std::__1::__value_type<const TSWPListStyle *, std::__1::vector<TSWPTopicNumberEntry, std::__1::allocator<TSWPTopicNumberEntry>>>>> {
        struct __tree_node<std::__1::__value_type<const TSWPListStyle *, std::__1::vector<TSWPTopicNumberEntry, std::__1::allocator<TSWPTopicNumberEntry>>>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<const TSWPListStyle *, std::__1::vector<TSWPTopicNumberEntry, std::__1::allocator<TSWPTopicNumberEntry>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<const TSWPListStyle *, std::__1::__value_type<const TSWPListStyle *, std::__1::vector<TSWPTopicNumberEntry, std::__1::allocator<TSWPTopicNumberEntry>>>, std::__1::less<const TSWPListStyle *>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<std::__1::basic_string<char>, unsigned short, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, unsigned short>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, unsigned short>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned short>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, unsigned short>>> {
        struct __tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned short>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned short>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned short>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::Config::Operator::Form, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::Config::Operator::Form>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::Config::Operator::Form>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::Config::Operator::Form>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::Config::Operator::Form>>> {
        struct __tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::Config::Operator::Form>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::Config::Operator::Form>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::Config::Operator::Form>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::Script::Variant, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::Script::Variant>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::Script::Variant>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::Script::Variant>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::Script::Variant>>> {
        struct __tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::Script::Variant>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::Script::Variant>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::Script::Variant>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::ScriptLevel, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::ScriptLevel>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::ScriptLevel>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::ScriptLevel>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::ScriptLevel>>> {
        struct __tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::ScriptLevel>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::ScriptLevel>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::ScriptLevel>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitLength, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitLength>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitLength>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitLength>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitLength>>> {
        struct __tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitLength>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitLength>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitLength>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitPseudoUnitLength, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitPseudoUnitLength>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitPseudoUnitLength>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitPseudoUnitLength>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitPseudoUnitLength>>> {
        struct __tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitPseudoUnitLength>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitPseudoUnitLength>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitPseudoUnitLength>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Align::Enum, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Align::Enum>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Align::Enum>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Align::Enum>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Align::Enum>>> {
        struct __tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Align::Enum>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Align::Enum>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Align::Enum>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Boolean::Enum, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Boolean::Enum>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Boolean::Enum>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Boolean::Enum>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Boolean::Enum>>> {
        struct __tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Boolean::Enum>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Boolean::Enum>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Boolean::Enum>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::CFRetainRelease, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::CFRetainRelease>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::CFRetainRelease>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::CFRetainRelease>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::CFRetainRelease>>> {
        struct __tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::CFRetainRelease>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::CFRetainRelease>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::CFRetainRelease>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Display::Enum, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Display::Enum>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Display::Enum>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Display::Enum>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Display::Enum>>> {
        struct __tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Display::Enum>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Display::Enum>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Display::Enum>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Edge::Enum, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Edge::Enum>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Edge::Enum>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Edge::Enum>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Edge::Enum>>> {
        struct __tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Edge::Enum>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Edge::Enum>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Edge::Enum>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::GroupAlign::Enum, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::GroupAlign::Enum>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::GroupAlign::Enum>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::GroupAlign::Enum>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::GroupAlign::Enum>>> {
        struct __tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::GroupAlign::Enum>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::GroupAlign::Enum>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::GroupAlign::Enum>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::VAlign::Enum, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::VAlign::Enum>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::VAlign::Enum>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::VAlign::Enum>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::VAlign::Enum>>> {
        struct __tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::VAlign::Enum>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::VAlign::Enum>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::VAlign::Enum>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, double, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, double>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, double>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, double>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, double>>> {
        struct __tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, double>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, double>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, double>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, long, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, long>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, long>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, long>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, long>>> {
        struct __tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, long>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, long>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, long>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::basic_string<char>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::basic_string<char>>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::basic_string<char>>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::basic_string<char>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::basic_string<char>>>> {
        struct __tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::basic_string<char>>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::basic_string<char>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::basic_string<char>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitLength, std::__1::allocator<EQKitLength>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitLength, std::__1::allocator<EQKitLength>>>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitLength, std::__1::allocator<EQKitLength>>>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitLength, std::__1::allocator<EQKitLength>>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitLength, std::__1::allocator<EQKitLength>>>>> {
        struct __tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitLength, std::__1::allocator<EQKitLength>>>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitLength, std::__1::allocator<EQKitLength>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitLength, std::__1::allocator<EQKitLength>>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Align::Enum, std::__1::allocator<EQKitTypes::Align::Enum>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Align::Enum, std::__1::allocator<EQKitTypes::Align::Enum>>>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Align::Enum, std::__1::allocator<EQKitTypes::Align::Enum>>>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Align::Enum, std::__1::allocator<EQKitTypes::Align::Enum>>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Align::Enum, std::__1::allocator<EQKitTypes::Align::Enum>>>>> {
        struct __tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Align::Enum, std::__1::allocator<EQKitTypes::Align::Enum>>>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Align::Enum, std::__1::allocator<EQKitTypes::Align::Enum>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Align::Enum, std::__1::allocator<EQKitTypes::Align::Enum>>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Crossout::Enum, std::__1::allocator<EQKitTypes::Crossout::Enum>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Crossout::Enum, std::__1::allocator<EQKitTypes::Crossout::Enum>>>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Crossout::Enum, std::__1::allocator<EQKitTypes::Crossout::Enum>>>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Crossout::Enum, std::__1::allocator<EQKitTypes::Crossout::Enum>>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Crossout::Enum, std::__1::allocator<EQKitTypes::Crossout::Enum>>>>> {
        struct __tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Crossout::Enum, std::__1::allocator<EQKitTypes::Crossout::Enum>>>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Crossout::Enum, std::__1::allocator<EQKitTypes::Crossout::Enum>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Crossout::Enum, std::__1::allocator<EQKitTypes::Crossout::Enum>>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Notation::Enum, std::__1::allocator<EQKitTypes::Notation::Enum>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Notation::Enum, std::__1::allocator<EQKitTypes::Notation::Enum>>>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Notation::Enum, std::__1::allocator<EQKitTypes::Notation::Enum>>>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Notation::Enum, std::__1::allocator<EQKitTypes::Notation::Enum>>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Notation::Enum, std::__1::allocator<EQKitTypes::Notation::Enum>>>>> {
        struct __tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Notation::Enum, std::__1::allocator<EQKitTypes::Notation::Enum>>>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Notation::Enum, std::__1::allocator<EQKitTypes::Notation::Enum>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Notation::Enum, std::__1::allocator<EQKitTypes::Notation::Enum>>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::VAlign::Enum, std::__1::allocator<EQKitTypes::VAlign::Enum>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::VAlign::Enum, std::__1::allocator<EQKitTypes::VAlign::Enum>>>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::VAlign::Enum, std::__1::allocator<EQKitTypes::VAlign::Enum>>>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::VAlign::Enum, std::__1::allocator<EQKitTypes::VAlign::Enum>>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::VAlign::Enum, std::__1::allocator<EQKitTypes::VAlign::Enum>>>>> {
        struct __tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::VAlign::Enum, std::__1::allocator<EQKitTypes::VAlign::Enum>>>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::VAlign::Enum, std::__1::allocator<EQKitTypes::VAlign::Enum>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::VAlign::Enum, std::__1::allocator<EQKitTypes::VAlign::Enum>>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>>>> {
        struct __tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, unsigned long, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, unsigned long>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, unsigned long>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, unsigned long>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, unsigned long>>> {
        struct __tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, unsigned long>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, unsigned long>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, unsigned long>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, unsigned short, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, unsigned short>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, unsigned short>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, unsigned short>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, unsigned short>>> {
        struct __tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, unsigned short>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, unsigned short>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, unsigned short>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<unsigned short, EQKit::Config::Operator::Form>, EQKit::Config::Operator::Dictionary::Entry, std::__1::less<std::__1::pair<unsigned short, EQKit::Config::Operator::Form>>, std::__1::allocator<std::__1::pair<const std::__1::pair<unsigned short, EQKit::Config::Operator::Form>, EQKit::Config::Operator::Dictionary::Entry>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<unsigned short, EQKit::Config::Operator::Form>, EQKit::Config::Operator::Dictionary::Entry>, std::__1::__map_value_compare<std::__1::pair<unsigned short, EQKit::Config::Operator::Form>, std::__1::__value_type<std::__1::pair<unsigned short, EQKit::Config::Operator::Form>, EQKit::Config::Operator::Dictionary::Entry>, std::__1::less<std::__1::pair<unsigned short, EQKit::Config::Operator::Form>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<unsigned short, EQKit::Config::Operator::Form>, EQKit::Config::Operator::Dictionary::Entry>>> {
        struct __tree_node<std::__1::__value_type<std::__1::pair<unsigned short, EQKit::Config::Operator::Form>, EQKit::Config::Operator::Dictionary::Entry>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<unsigned short, EQKit::Config::Operator::Form>, EQKit::Config::Operator::Dictionary::Entry>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<unsigned short, EQKit::Config::Operator::Form>, std::__1::__value_type<std::__1::pair<unsigned short, EQKit::Config::Operator::Form>, EQKit::Config::Operator::Dictionary::Entry>, std::__1::less<std::__1::pair<unsigned short, EQKit::Config::Operator::Form>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<unsigned int, SFUtility::ObjcSharedPtr<NSObject>, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, SFUtility::ObjcSharedPtr<NSObject>>>> {
    struct __tree<std::__1::__value_type<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>>> {
        struct __tree_node<std::__1::__value_type<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, std::__1::less<unsigned int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<unsigned long, TSWPFontHeightCacheEntry, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, TSWPFontHeightCacheEntry>>> {
    struct __tree<std::__1::__value_type<unsigned long, TSWPFontHeightCacheEntry>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, TSWPFontHeightCacheEntry>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, TSWPFontHeightCacheEntry>>> {
        struct __tree_node<std::__1::__value_type<unsigned long, TSWPFontHeightCacheEntry>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, TSWPFontHeightCacheEntry>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, TSWPFontHeightCacheEntry>, std::__1::less<unsigned long>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<unsigned long, std::__1::shared_ptr<TSWPParagraphTypesetter>, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::shared_ptr<TSWPParagraphTypesetter>>>> {
    struct __tree<std::__1::__value_type<unsigned long, std::__1::shared_ptr<TSWPParagraphTypesetter>>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, std::__1::shared_ptr<TSWPParagraphTypesetter>>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, std::__1::shared_ptr<TSWPParagraphTypesetter>>>> {
        struct __tree_node<std::__1::__value_type<unsigned long, std::__1::shared_ptr<TSWPParagraphTypesetter>>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, std::__1::shared_ptr<TSWPParagraphTypesetter>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, std::__1::shared_ptr<TSWPParagraphTypesetter>>, std::__1::less<unsigned long>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<unsigned short, EQKit::Config::Operator::Form, std::__1::less<unsigned short>, std::__1::allocator<std::__1::pair<const unsigned short, EQKit::Config::Operator::Form>>> {
    struct __tree<std::__1::__value_type<unsigned short, EQKit::Config::Operator::Form>, std::__1::__map_value_compare<unsigned short, std::__1::__value_type<unsigned short, EQKit::Config::Operator::Form>, std::__1::less<unsigned short>, true>, std::__1::allocator<std::__1::__value_type<unsigned short, EQKit::Config::Operator::Form>>> {
        struct __tree_node<std::__1::__value_type<unsigned short, EQKit::Config::Operator::Form>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned short, EQKit::Config::Operator::Form>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned short, std::__1::__value_type<unsigned short, EQKit::Config::Operator::Form>, std::__1::less<unsigned short>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<unsigned short, unsigned long, std::__1::less<unsigned short>, std::__1::allocator<std::__1::pair<const unsigned short, unsigned long>>> {
    struct __tree<std::__1::__value_type<unsigned short, unsigned long>, std::__1::__map_value_compare<unsigned short, std::__1::__value_type<unsigned short, unsigned long>, std::__1::less<unsigned short>, true>, std::__1::allocator<std::__1::__value_type<unsigned short, unsigned long>>> {
        struct __tree_node<std::__1::__value_type<unsigned short, unsigned long>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned short, unsigned long>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned short, std::__1::__value_type<unsigned short, unsigned long>, std::__1::less<unsigned short>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct pair<unsigned long, unsigned short>;

struct path_descr;

struct segment_data<double>;

struct set<EQKitTypes::Attributes::Enum, std::__1::less<EQKitTypes::Attributes::Enum>, std::__1::allocator<EQKitTypes::Attributes::Enum>> {
    struct __tree<EQKitTypes::Attributes::Enum, std::__1::less<EQKitTypes::Attributes::Enum>, std::__1::allocator<EQKitTypes::Attributes::Enum>> {
        struct __tree_node<EQKitTypes::Attributes::Enum, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<EQKitTypes::Attributes::Enum, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<EQKitTypes::Attributes::Enum>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct set<TSTMergeRangeElem, TSTMergeRangeElemCompare, std::__1::allocator<TSTMergeRangeElem>> {
    struct __tree<TSTMergeRangeElem, TSTMergeRangeElemCompare, std::__1::allocator<TSTMergeRangeElem>> {
        struct __tree_node<TSTMergeRangeElem, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TSTMergeRangeElem, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, TSTMergeRangeElemCompare> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct set<TSUColumnRowRect, TSTCellRangeColumnMajorLess, std::__1::allocator<TSUColumnRowRect>> {
    struct __tree<TSUColumnRowRect, TSTCellRangeColumnMajorLess, std::__1::allocator<TSUColumnRowRect>> {
        struct __tree_node<TSUColumnRowRect, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TSUColumnRowRect, void *>>> __pair1_;
        struct __compressed_pair<unsigned long, TSTCellRangeColumnMajorLess> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct set<TSUColumnRowRect, TSTCellRangeRowMajorLess, std::__1::allocator<TSUColumnRowRect>> {
    struct __tree<TSUColumnRowRect, TSTCellRangeRowMajorLess, std::__1::allocator<TSUColumnRowRect>> {
        struct __tree_node<TSUColumnRowRect, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TSUColumnRowRect, void *>>> __pair1_;
        struct __compressed_pair<unsigned long, TSTCellRangeRowMajorLess> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct set<id<TSWPStorageObserver>, std::__1::less<id<TSWPStorageObserver>>, std::__1::allocator<id<TSWPStorageObserver>>> {
    struct __tree<id<TSWPStorageObserver>, std::__1::less<id<TSWPStorageObserver>>, std::__1::allocator<id<TSWPStorageObserver>>> {
        struct __tree_node<id<TSWPStorageObserver>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<id<TSWPStorageObserver>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<id<TSWPStorageObserver>>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct shared_ptr<TSWPLineFragmentArray> {
    struct TSWPLineFragmentArray *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<TSWPParagraphTypesetter> {
    struct TSWPParagraphTypesetter *_field1;
    struct __shared_weak_count *_field2;
};

struct sockaddr_in {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    struct in_addr _field4;
    char _field5[8];
};

struct stack<EQKitLayoutContext, std::__1::deque<EQKitLayoutContext, std::__1::allocator<EQKitLayoutContext>>> {
    struct deque<EQKitLayoutContext, std::__1::allocator<EQKitLayoutContext>> _field1;
};

struct stack<EQKitLayoutElementaryStack, std::__1::deque<EQKitLayoutElementaryStack, std::__1::allocator<EQKitLayoutElementaryStack>>> {
    struct deque<EQKitLayoutElementaryStack, std::__1::allocator<EQKitLayoutElementaryStack>> _field1;
};

struct stack<EQKitLayoutRow, std::__1::deque<EQKitLayoutRow, std::__1::allocator<EQKitLayoutRow>>> {
    struct deque<EQKitLayoutRow, std::__1::allocator<EQKitLayoutRow>> _field1;
};

struct stack<EQKitLayoutStretchedOperator, std::__1::deque<EQKitLayoutStretchedOperator, std::__1::allocator<EQKitLayoutStretchedOperator>>> {
    struct deque<EQKitLayoutStretchedOperator, std::__1::allocator<EQKitLayoutStretchedOperator>> _field1;
};

struct stack<EQKitLayoutTable, std::__1::deque<EQKitLayoutTable, std::__1::allocator<EQKitLayoutTable>>> {
    struct deque<EQKitLayoutTable, std::__1::allocator<EQKitLayoutTable>> _field1;
};

struct stack<EQKitMathMLParserState, std::__1::deque<EQKitMathMLParserState, std::__1::allocator<EQKitMathMLParserState>>> {
    struct deque<EQKitMathMLParserState, std::__1::allocator<EQKitMathMLParserState>> c;
};

struct stack<id<EQKitLayoutNode>, std::__1::deque<id<EQKitLayoutNode>, std::__1::allocator<id<EQKitLayoutNode>>>> {
    struct deque<id<EQKitLayoutNode>, std::__1::allocator<id<EQKitLayoutNode>>> _field1;
};

struct stack<unsigned long, std::__1::deque<unsigned long, std::__1::allocator<unsigned long>>> {
    struct deque<unsigned long, std::__1::allocator<unsigned long>> _field1;
};

struct stack<void (^)(id<EQKitLayoutNode>, const EQKit::Layout::Schemata &), std::__1::deque<void (^)(id<EQKitLayoutNode>, const EQKit::Layout::Schemata &), std::__1::allocator<void (^)(id<EQKitLayoutNode>, const EQKit::Layout::Schemata &)>>> {
    struct deque<void (^)(id<EQKitLayoutNode>, const EQKit::Layout::Schemata &), std::__1::allocator<void (^)(id<EQKitLayoutNode>, const EQKit::Layout::Schemata &)>> _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::pair<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::pair<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>, void *>*>>> {
        struct __hash_node<std::__1::pair<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::pair<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowCoordinate>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowCoordinate>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowCoordinate>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowCoordinate>, void *>*>>> {
        struct __hash_node<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowCoordinate>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowCoordinate>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowCoordinate>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowSize>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowSize>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowSize>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowSize>, void *>*>>> {
        struct __hash_node<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowSize>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowSize>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowSize>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::pair<const long long, NSMutableArray *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<const long long, NSMutableArray *>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::pair<const long long, NSMutableArray *>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<const long long, NSMutableArray *>, void *>*>>> {
        struct __hash_node<std::__1::pair<const long long, NSMutableArray *>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<const long long, NSMutableArray *>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::pair<const long long, NSMutableArray *>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::pair<const long long, TSPData *__weak>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<const long long, TSPData *__weak>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::pair<const long long, TSPData *__weak>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<const long long, TSPData *__weak>, void *>*>>> {
        struct __hash_node<std::__1::pair<const long long, TSPData *__weak>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<const long long, TSPData *__weak>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::pair<const long long, TSPData *__weak>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::pair<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::pair<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *>*>>> {
        struct __hash_node<std::__1::pair<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::pair<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, void *>*>>> {
        struct __hash_node<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct vector<CGPoint, std::__1::allocator<CGPoint>> {
    struct CGPoint *_field1;
    struct CGPoint *_field2;
    struct __compressed_pair<CGPoint *, std::__1::allocator<CGPoint>> {
        struct CGPoint *_field1;
    } _field3;
};

struct vector<CGRect, std::__1::allocator<CGRect>> {
    struct CGRect *_field1;
    struct CGRect *_field2;
    struct __compressed_pair<CGRect *, std::__1::allocator<CGRect>> {
        struct CGRect *_field1;
    } _field3;
};

struct vector<EQKit::OpticalKern::Spec::Entry, std::__1::allocator<EQKit::OpticalKern::Spec::Entry>> {
    struct Entry *_field1;
    struct Entry *_field2;
    struct __compressed_pair<EQKit::OpticalKern::Spec::Entry *, std::__1::allocator<EQKit::OpticalKern::Spec::Entry>> {
        struct Entry *_field1;
    } _field3;
};

struct vector<EQKitTypes::Crossout::Enum, std::__1::allocator<EQKitTypes::Crossout::Enum>> {
    int *__begin_;
    int *__end_;
    struct __compressed_pair<EQKitTypes::Crossout::Enum *, std::__1::allocator<EQKitTypes::Crossout::Enum>> {
        int *__first_;
    } __end_cap_;
};

struct vector<TSDBrushVertexData, std::__1::allocator<TSDBrushVertexData>> {
    struct TSDBrushVertexData *_field1;
    struct TSDBrushVertexData *_field2;
    struct __compressed_pair<TSDBrushVertexData *, std::__1::allocator<TSDBrushVertexData>> {
        struct TSDBrushVertexData *_field1;
    } _field3;
};

struct vector<TSTWidthHeightCache_Private::WHCCol, std::__1::allocator<TSTWidthHeightCache_Private::WHCCol>> {
    struct WHCCol *__begin_;
    struct WHCCol *__end_;
    struct __compressed_pair<TSTWidthHeightCache_Private::WHCCol *, std::__1::allocator<TSTWidthHeightCache_Private::WHCCol>> {
        struct WHCCol *__first_;
    } __end_cap_;
};

struct vector<TSTWidthHeightCache_Private::WHCRow, std::__1::allocator<TSTWidthHeightCache_Private::WHCRow>> {
    struct WHCRow *__begin_;
    struct WHCRow *__end_;
    struct __compressed_pair<TSTWidthHeightCache_Private::WHCRow *, std::__1::allocator<TSTWidthHeightCache_Private::WHCRow>> {
        struct WHCRow *__first_;
    } __end_cap_;
};

struct vector<TSUCustomFormatCondition, std::__1::allocator<TSUCustomFormatCondition>> {
    CDStruct_183601bc *_field1;
    CDStruct_183601bc *_field2;
    struct __compressed_pair<TSUCustomFormatCondition *, std::__1::allocator<TSUCustomFormatCondition>> {
        CDStruct_183601bc *_field1;
    } _field3;
};

struct vector<TSWPAdornmentLine, std::__1::allocator<TSWPAdornmentLine>> {
    struct TSWPAdornmentLine *_field1;
    struct TSWPAdornmentLine *_field2;
    struct __compressed_pair<TSWPAdornmentLine *, std::__1::allocator<TSWPAdornmentLine>> {
        struct TSWPAdornmentLine *_field1;
    } _field3;
};

struct vector<TSWPAdornmentRect, std::__1::allocator<TSWPAdornmentRect>> {
    struct TSWPAdornmentRect *_field1;
    struct TSWPAdornmentRect *_field2;
    struct __compressed_pair<TSWPAdornmentRect *, std::__1::allocator<TSWPAdornmentRect>> {
        struct TSWPAdornmentRect *_field1;
    } _field3;
};

struct vector<TSWPAdornments, std::__1::allocator<TSWPAdornments>> {
    struct TSWPAdornments *_field1;
    struct TSWPAdornments *_field2;
    struct __compressed_pair<TSWPAdornments *, std::__1::allocator<TSWPAdornments>> {
        struct TSWPAdornments *_field1;
    } _field3;
};

struct vector<TSWPAttachmentPosition, std::__1::allocator<TSWPAttachmentPosition>> {
    CDStruct_183601bc *_field1;
    CDStruct_183601bc *_field2;
    struct __compressed_pair<TSWPAttachmentPosition *, std::__1::allocator<TSWPAttachmentPosition>> {
        CDStruct_183601bc *_field1;
    } _field3;
};

struct vector<TSWPLFCharIndexData, std::__1::allocator<TSWPLFCharIndexData>> {
    CDStruct_183601bc *_field1;
    CDStruct_183601bc *_field2;
    struct __compressed_pair<TSWPLFCharIndexData *, std::__1::allocator<TSWPLFCharIndexData>> {
        CDStruct_183601bc *_field1;
    } _field3;
};

struct vector<TSWPLineRef, std::__1::allocator<TSWPLineRef>> {
    struct TSWPLineRef *_field1;
    struct TSWPLineRef *_field2;
    struct __compressed_pair<TSWPLineRef *, std::__1::allocator<TSWPLineRef>> {
        struct TSWPLineRef *_field1;
    } _field3;
};

struct vector<TSWPStorageTransactionObject, std::__1::allocator<TSWPStorageTransactionObject>> {
    struct TSWPStorageTransactionObject *_field1;
    struct TSWPStorageTransactionObject *_field2;
    struct __compressed_pair<TSWPStorageTransactionObject *, std::__1::allocator<TSWPStorageTransactionObject>> {
        struct TSWPStorageTransactionObject *_field1;
    } _field3;
};

struct vector<TSWPTargetHint, std::__1::allocator<TSWPTargetHint>> {
    CDStruct_183601bc *_field1;
    CDStruct_183601bc *_field2;
    struct __compressed_pair<TSWPTargetHint *, std::__1::allocator<TSWPTargetHint>> {
        CDStruct_183601bc *_field1;
    } _field3;
};

struct vector<TSWPUIAttachmentData, std::__1::allocator<TSWPUIAttachmentData>> {
    struct TSWPUIAttachmentData *_field1;
    struct TSWPUIAttachmentData *_field2;
    struct __compressed_pair<TSWPUIAttachmentData *, std::__1::allocator<TSWPUIAttachmentData>> {
        struct TSWPUIAttachmentData *_field1;
    } _field3;
};

struct vector<_TSWPCharIndexAndAffinity, std::__1::allocator<_TSWPCharIndexAndAffinity>> {
    struct _TSWPCharIndexAndAffinity *__begin_;
    struct _TSWPCharIndexAndAffinity *__end_;
    struct __compressed_pair<_TSWPCharIndexAndAffinity *, std::__1::allocator<_TSWPCharIndexAndAffinity>> {
        struct _TSWPCharIndexAndAffinity *__first_;
    } __end_cap_;
};

struct vector<boost::polygon::segment_data<double>, std::__1::allocator<boost::polygon::segment_data<double>>> {
    struct segment_data<double> *_field1;
    struct segment_data<double> *_field2;
    struct __compressed_pair<boost::polygon::segment_data<double>*, std::__1::allocator<boost::polygon::segment_data<double>>> {
        struct segment_data<double> *_field1;
    } _field3;
};

struct vector<double, std::__1::allocator<double>> {
    double *__begin_;
    double *__end_;
    struct __compressed_pair<double *, std::__1::allocator<double>> {
        double *__first_;
    } __end_cap_;
};

struct vector<id<EQKitLayoutNode>, std::__1::allocator<id<EQKitLayoutNode>>> {
    id *_field1;
    id *_field2;
    struct __compressed_pair<id<EQKitLayoutNode>*, std::__1::allocator<id<EQKitLayoutNode>>> {
        id *_field1;
    } _field3;
};

struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> {
    basic_string_a1f69cfb *_field1;
    basic_string_a1f69cfb *_field2;
    struct __compressed_pair<std::__1::basic_string<char>*, std::__1::allocator<std::__1::basic_string<char>>> {
        basic_string_a1f69cfb *_field1;
    } _field3;
};

struct vector<std::__1::pair<unsigned long, unsigned short>, std::__1::allocator<std::__1::pair<unsigned long, unsigned short>>> {
    struct pair<unsigned long, unsigned short> *_field1;
    struct pair<unsigned long, unsigned short> *_field2;
    struct __compressed_pair<std::__1::pair<unsigned long, unsigned short>*, std::__1::allocator<std::__1::pair<unsigned long, unsigned short>>> {
        struct pair<unsigned long, unsigned short> *_field1;
    } _field3;
};

struct vector<unsigned long, std::__1::allocator<unsigned long>> {
    unsigned long long *__begin_;
    unsigned long long *__end_;
    struct __compressed_pair<unsigned long *, std::__1::allocator<unsigned long>> {
        unsigned long long *__first_;
    } __end_cap_;
};

struct vector<unsigned short, std::__1::allocator<unsigned short>> {
    unsigned short *_field1;
    unsigned short *_field2;
    struct __compressed_pair<unsigned short *, std::__1::allocator<unsigned short>> {
        unsigned short *_field1;
    } _field3;
};

#if 0
// Names with conflicting types:
typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct Collection *_field2;
    struct EQKitCacheLRUCounter _field3;
} Manager_e51557f8;

typedef struct {
    struct EQKitCache<EQKit::OpticalKern::Glyph::Key, std::__1::shared_ptr<EQKit::OpticalKern::Edge::Path>, std::__1::shared_ptr<const EQKit::OpticalKern::Edge::Path>> *_field1;
    struct EQKitCacheLRUCounter _field2;
    _Bool _field3;
    struct QuantizationConfig _field4;
} Manager_36464627;

#endif

#pragma mark Typedef'd Structures

typedef struct {
    id _field1;
    id _field2;
} CDStruct_a70f6672;

typedef struct {
    _Bool _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
} CDStruct_7bd98050;

typedef struct {
    unsigned int column;
    unsigned int row;
} CDStruct_e5a208c7;

typedef struct {
    unsigned long long _field1;
    _Bool _field2;
    _Bool _field3;
    int _field4;
    unsigned long long _field5;
    _Bool _field6;
    int _field7;
    unsigned long long _field8;
    _Bool _field9;
    int _field10;
} CDStruct_7549c2a6;

typedef struct {
    unsigned long long x;
    unsigned long long y;
} CDStruct_73b5d383;

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

typedef struct {
    unsigned long long _field1;
    double _field2;
} CDStruct_316206b0;

typedef struct {
    unsigned short row;
    unsigned char column;
    unsigned char reserved;
} CDStruct_0441cfb5;

typedef struct {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    double _field8;
} CDStruct_7660b417;

typedef struct {
    double _field1;
    double _field2;
} CDStruct_c3b9c2ee;

typedef struct {
    float x;
    float y;
    float z;
    float w;
} CDStruct_f2e236b6;

typedef struct {
    float x;
    float y;
    float z;
} CDStruct_03942939;

typedef struct {
    float x;
    float y;
} CDStruct_6e3f967a;

typedef struct {
    int _field1;
    unsigned long long _field2;
    _Bool _field3;
} CDStruct_b9fbe577;

typedef struct {
    int width;
    int height;
} CDStruct_79c71658;

typedef struct CDStruct_183601bc;

typedef struct {
    struct TSWPLineFragment *_field1;
    struct TSWPLineFragment *_field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    _Bool _field7;
    _Bool _field8;
} CDStruct_bccfccf2;

typedef struct {
    int _field1;
    unsigned long long _field2;
    _Bool _field3;
    char *_field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
    _Bool _field8;
    struct _NSRange _field9;
    unsigned long long _field10;
} CDStruct_c6084d62;

typedef struct {
    int _field1;
    int *_field2;
    CDStruct_183601bc *_field3;
} CDStruct_727a4eeb;

typedef struct {
    CDStruct_e5a208c7 topLeft;
    CDStruct_e5a208c7 bottomRight;
} CDStruct_58eae27c;

typedef struct {
    CDStruct_73b5d383 topLeft;
    CDStruct_73b5d383 bottomRight;
} CDStruct_2d1207dd;

typedef struct {
    CDStruct_0441cfb5 origin;
    struct {
        unsigned short numberOfColumns;
        unsigned short numberOfRows;
    } size;
} CDStruct_5f1f7aa9;

typedef struct {
    struct CGPoint _field1;
} CDStruct_499be82c;

typedef struct {
    struct _NSRange _field1;
    id _field2;
    double _field3;
    id _field4[3];
    unsigned int _field5;
    struct TSWPDrawingState *_field6;
    id _field7;
    id _field8;
    id _field9;
    struct __CTFont *_field10;
    struct CGColor *_field11;
    id _field12;
    _Bool _field13;
    int _field14;
    double _field15;
    struct CGColor *_field16;
    double _field17;
} CDStruct_3b6efdb6;

typedef struct {
    union {
        struct {
            unsigned int listStart;
        } ;
        struct {
            unsigned short level;
            unsigned short flags;
        } ;
        struct {
            unsigned short row;
            unsigned short column;
        } ;
        struct {
            int writingDirection;
        } ;
        struct {
            unsigned int _singleValue;
        } ;
        struct {
            unsigned short _first;
            unsigned short _second;
        } ;
    } ;
} CDStruct_8a5ee6e3;

typedef struct {
    CDStruct_0441cfb5 mPreviousCellID;
    CDStruct_0441cfb5 mCellID;
    TSTCell *mCell;
    struct TSTCellStorage *mCellRef;
    CDStruct_5f1f7aa9 mMergeRange;
    _Bool mStyleOnly;
    _Bool mCommentStorageOnly;
    _Bool mHidden;
    _Bool mHiddenRow;
    _Bool mHiddenColumn;
} CDStruct_6188ab8e;

typedef struct {
    struct CGRect _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    _Bool _field6;
} CDStruct_7e4c5a1e;

typedef struct {
    struct CGRect _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
} CDStruct_50f584da;

typedef struct {
    struct CGRect _field1;
    struct _NSRange _field2;
    unsigned long long _field3;
    struct _NSRange _field4;
    unsigned long long _field5;
} CDStruct_6026ced1;

typedef struct {
    struct CGRect _field1;
    struct _NSRange _field2;
    int _field3;
} CDStruct_cd85e889;

typedef struct {
    int mFormatType;
    union {
        struct {
            NSString *mCurrencyCode;
            unsigned int mDecimalPlaces:8;
            unsigned int mNegativeStyle:3;
            unsigned int mShowThousandsSeparator:1;
            unsigned int mUseAccountingStyle:1;
        } mNumberFormatStruct;
        struct {
            unsigned int mFractionAccuracy:8;
        } mFractionFormatStruct;
        struct {
            unsigned int mBase:8;
            unsigned int mBasePlaces:8;
            unsigned int mBaseUseMinusSign:1;
        } mBaseFormatStruct;
        struct {
            unsigned int mSuppressDateFormat:1;
            unsigned int mSuppressTimeFormat:1;
            NSString *mDateTimeFormat;
        } mDateFormatStruct;
        struct {
            unsigned int mUseAutomaticUnits:1;
            int mDurationUnitSmallest;
            int mDurationUnitLargest;
            int mDurationStyle;
        } mDurationFormatStruct;
        struct {
            unsigned int mCustomFormatID;
            CDStruct_183601bc *mData;
        } mCustomFormatStruct;
        struct {
            double mMinimum;
            double mMaximum;
            double mIncrement;
            int mDisplayFormatType;
            unsigned int mOrientation:2;
            unsigned int mPosition:2;
        } mControlFormatStruct;
        struct {
            int mInitialValue;
            unsigned int mMultipleChoiceListFormatID;
            id mData;
        } mMultipleChoiceListFormatStruct;
    } ;
} CDStruct_95e644ef;

// Ambiguous groups
typedef struct {
    unsigned short _field1;
    unsigned short _field2;
} CDStruct_d65e47c4;

typedef struct __wrap_iter<double *> {
    double *_field1;
} __wrap_iter_8fb6ff7c;

typedef struct array<unsigned char, 20> {
    unsigned char __elems_[20];
} array_019f9a10;

typedef struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    unsigned long long _field1;
                    unsigned long long _field2;
                    char *_field3;
                } _field1;
                struct __short {
                    union {
                        unsigned char _field1;
                        char _field2;
                    } _field1;
                    char _field2[23];
                } _field2;
                struct __raw {
                    unsigned long long _field1[3];
                } _field3;
            } _field1;
        } _field1;
    } _field1;
} basic_string_a1f69cfb;

typedef struct set<EQKitTypes::Attributes::Enum, std::__1::less<EQKitTypes::Attributes::Enum>, std::__1::allocator<EQKitTypes::Attributes::Enum>> {
    struct __tree<EQKitTypes::Attributes::Enum, std::__1::less<EQKitTypes::Attributes::Enum>, std::__1::allocator<EQKitTypes::Attributes::Enum>> {
        struct __tree_node<EQKitTypes::Attributes::Enum, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<EQKitTypes::Attributes::Enum, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<EQKitTypes::Attributes::Enum>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} set_386565a4;

typedef struct set<TSUColumnRowRect, TSTCellRangeColumnMajorLess, std::__1::allocator<TSUColumnRowRect>> {
    struct __tree<TSUColumnRowRect, TSTCellRangeColumnMajorLess, std::__1::allocator<TSUColumnRowRect>> {
        struct __tree_node<TSUColumnRowRect, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TSUColumnRowRect, void *>>> __pair1_;
        struct __compressed_pair<unsigned long, TSTCellRangeColumnMajorLess> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
} set_1b864098;

typedef struct set<TSUColumnRowRect, TSTCellRangeRowMajorLess, std::__1::allocator<TSUColumnRowRect>> {
    struct __tree<TSUColumnRowRect, TSTCellRangeRowMajorLess, std::__1::allocator<TSUColumnRowRect>> {
        struct __tree_node<TSUColumnRowRect, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TSUColumnRowRect, void *>>> __pair1_;
        struct __compressed_pair<unsigned long, TSTCellRangeRowMajorLess> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
} set_bf64ed85;

typedef struct shared_ptr<TSWPLineFragmentArray> {
    struct TSWPLineFragmentArray *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_1a254aea;

typedef struct shared_ptr<TSWPParagraphTypesetter> {
    struct TSWPParagraphTypesetter *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_b124cf66;

typedef struct vector<EQKitTypes::Crossout::Enum, std::__1::allocator<EQKitTypes::Crossout::Enum>> {
    int *__begin_;
    int *__end_;
    struct __compressed_pair<EQKitTypes::Crossout::Enum *, std::__1::allocator<EQKitTypes::Crossout::Enum>> {
        int *__first_;
    } __end_cap_;
} vector_2d5e04fe;

typedef struct vector<TSDBrushVertexData, std::__1::allocator<TSDBrushVertexData>> {
    struct TSDBrushVertexData *_field1;
    struct TSDBrushVertexData *_field2;
    struct __compressed_pair<TSDBrushVertexData *, std::__1::allocator<TSDBrushVertexData>> {
        struct TSDBrushVertexData *_field1;
    } _field3;
} vector_b5dead7b;

typedef struct vector<TSWPAdornmentLine, std::__1::allocator<TSWPAdornmentLine>> {
    struct TSWPAdornmentLine *_field1;
    struct TSWPAdornmentLine *_field2;
    struct __compressed_pair<TSWPAdornmentLine *, std::__1::allocator<TSWPAdornmentLine>> {
        struct TSWPAdornmentLine *_field1;
    } _field3;
} vector_5a1d2cc3;

typedef struct vector<TSWPAdornmentRect, std::__1::allocator<TSWPAdornmentRect>> {
    struct TSWPAdornmentRect *_field1;
    struct TSWPAdornmentRect *_field2;
    struct __compressed_pair<TSWPAdornmentRect *, std::__1::allocator<TSWPAdornmentRect>> {
        struct TSWPAdornmentRect *_field1;
    } _field3;
} vector_e65b05c3;

typedef struct vector<TSWPTargetHint, std::__1::allocator<TSWPTargetHint>> {
    CDStruct_183601bc *_field1;
    CDStruct_183601bc *_field2;
    struct __compressed_pair<TSWPTargetHint *, std::__1::allocator<TSWPTargetHint>> {
        CDStruct_183601bc *_field1;
    } _field3;
} vector_2f7f6b92;

typedef struct vector<boost::polygon::segment_data<double>, std::__1::allocator<boost::polygon::segment_data<double>>> {
    struct segment_data<double> *_field1;
    struct segment_data<double> *_field2;
    struct __compressed_pair<boost::polygon::segment_data<double>*, std::__1::allocator<boost::polygon::segment_data<double>>> {
        struct segment_data<double> *_field1;
    } _field3;
} vector_5a9f1b73;

typedef struct vector<double, std::__1::allocator<double>> {
    double *__begin_;
    double *__end_;
    struct __compressed_pair<double *, std::__1::allocator<double>> {
        double *__first_;
    } __end_cap_;
} vector_3f7ffb82;

typedef struct vector<std::__1::pair<unsigned long, unsigned short>, std::__1::allocator<std::__1::pair<unsigned long, unsigned short>>> {
    struct pair<unsigned long, unsigned short> *_field1;
    struct pair<unsigned long, unsigned short> *_field2;
    struct __compressed_pair<std::__1::pair<unsigned long, unsigned short>*, std::__1::allocator<std::__1::pair<unsigned long, unsigned short>>> {
        struct pair<unsigned long, unsigned short> *_field1;
    } _field3;
} vector_a36e5995;

typedef struct vector<unsigned long, std::__1::allocator<unsigned long>> {
    unsigned long long *__begin_;
    unsigned long long *__end_;
    struct __compressed_pair<unsigned long *, std::__1::allocator<unsigned long>> {
        unsigned long long *__first_;
    } __end_cap_;
} vector_88016b54;

#pragma mark -

//
// File: /Applications/Xcode-7GM.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/TSReading.framework/TSReading
// UUID: 3FA2727E-FB0A-3183-A91A-9CF1E812AD4C
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 47.0.0.0.0
//            Minimum iOS version: 9.0.0
//                    SDK version: 9.0.0
//
// Objective-C Garbage Collection: Unsupported
//
//                       Run path: @executable_path/Frameworks
//                               = /Applications/Xcode-7GM.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/TSReading.framework/Frameworks
//                       Run path: @loader_path/Frameworks
//                               = /Applications/Xcode-7GM.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/TSReading.framework/Frameworks
//

@protocol AVAssetResourceLoaderDelegate <NSObject>

@optional
- (void)resourceLoader:(AVAssetResourceLoader *)arg1 didCancelAuthenticationChallenge:(NSURLAuthenticationChallenge *)arg2;
- (_Bool)resourceLoader:(AVAssetResourceLoader *)arg1 shouldWaitForResponseToAuthenticationChallenge:(NSURLAuthenticationChallenge *)arg2;
- (void)resourceLoader:(AVAssetResourceLoader *)arg1 didCancelLoadingRequest:(AVAssetResourceLoadingRequest *)arg2;
- (_Bool)resourceLoader:(AVAssetResourceLoader *)arg1 shouldWaitForRenewalOfRequestedResource:(AVAssetResourceRenewalRequest *)arg2;
- (_Bool)resourceLoader:(AVAssetResourceLoader *)arg1 shouldWaitForLoadingOfRequestedResource:(AVAssetResourceLoadingRequest *)arg2;
@end

@protocol EQKitExpression <EQKitRootNode>
- (id <EQKitLayout>)newLayout;
@end

@protocol EQKitFontStyling <NSObject>
- (int)scriptVariant;
- (int)scriptContext;
@end

@protocol EQKitLayout <NSObject>
- (void)renderIntoContext:(struct CGContext *)arg1 offset:(struct CGPoint)arg2;
- (struct CGRect)erasableBounds;
- (double)naturalAlignmentOffset;
- (double)vsize;
- (double)width;
- (double)depth;
- (double)height;
- (_Bool)layoutWithContext:(id <EQKitLayoutContext>)arg1;
@end

@protocol EQKitLayoutContext <NSObject>
- (double)containerWidth;
- (struct __CFString *)baseFontName;
- (double)baseFontSize;

@optional
- (struct CGColor *)baseFontColor;
@end

@protocol EQKitLayoutElementaryStackRow <NSObject>
@property(readonly, nonatomic) double followingSpace;
@property(readonly, nonatomic) _Bool spansStack;
@property(readonly, nonatomic) unsigned long long columnCount;
@property(nonatomic) unsigned long long firstColumnIndex;
@property(readonly, nonatomic) long long alignmentShift;
- (EQKitBox *)newBoxWithStackWidth:(double)arg1 columnWidthIter:(__wrap_iter_8fb6ff7c)arg2 iterMax:(__wrap_iter_8fb6ff7c)arg3 previousRow:(id <EQKitLayoutElementaryStackRow>)arg4 layoutManager:(const struct EQKitLayoutManager *)arg5;
- (void)populateMaxColumnWidths:(__wrap_iter_8fb6ff7c)arg1;
@end

@protocol EQKitLayoutNode <NSObject>
@property(readonly, nonatomic) id <EQKitLayoutNode> parent;
- (_Bool)isAttributeDefaultInheritableFromStyle:(int)arg1;
- (int)isOperatorPaddingRequired;
- (_Bool)isBaseFontNameUsed;
- (id <EQKitLayoutNode><EQKitOperator>)operatorCore;
- (_Bool)isEmbellishedOperator;
- (struct Schemata)layoutSchemata;
- (id <EQKitLayoutNode>)layoutStyleNode;
- (_Bool)isSpaceLike;
- (_Bool)isNumber;
@end

@protocol EQKitLayoutSchemataEnclose <NSObject>
- (id <EQKitLayoutNode>)schemataRow;
@end

@protocol EQKitLayoutSchemataFenced <NSObject>
- (NSArray *)schemataChildren;
@end

@protocol EQKitLayoutSchemataFraction <NSObject>
- (id <EQKitLayoutNode>)schemataDenominator;
- (id <EQKitLayoutNode>)schemataNumerator;
@end

@protocol EQKitLayoutSchemataLongDivision <NSObject>
- (id <EQKitLayoutNode>)schemataStack;
- (id <EQKitLayoutNode>)schemataDivisor;
@end

@protocol EQKitLayoutSchemataOperator <EQKitLayoutSchemataToken>
- (id <EQKitOperator><EQKitLayoutNode>)schemataOperator;
@end

@protocol EQKitLayoutSchemataPadded <NSObject>
- (id <EQKitLayoutNode>)schemataNode;
@end

@protocol EQKitLayoutSchemataPhantom <NSObject>
- (id <EQKitLayoutNode>)schemataChild;
@end

@protocol EQKitLayoutSchemataRadical <NSObject>
- (id <EQKitLayoutNode>)schemataIndex;
- (id <EQKitLayoutNode>)schemataRadicand;
@end

@protocol EQKitLayoutSchemataRow <NSObject>
- (NSArray *)schemataChildren;
@end

@protocol EQKitLayoutSchemataSpace <NSObject>
@end

@protocol EQKitLayoutSchemataStack <NSObject>
- (NSArray *)schemataChildren;
@end

@protocol EQKitLayoutSchemataStackCarries <NSObject>
- (NSArray *)schemataChildren;
@end

@protocol EQKitLayoutSchemataStackCarry <NSObject>
- (NSArray *)schemataChildren;
@end

@protocol EQKitLayoutSchemataStackGroup <NSObject>
- (NSArray *)schemataChildren;
@end

@protocol EQKitLayoutSchemataStackLine <NSObject>
- (unsigned long long)schemataThickness;
@end

@protocol EQKitLayoutSchemataStackRow <NSObject>
- (NSArray *)schemataChildren;
@end

@protocol EQKitLayoutSchemataSubsuperscript <NSObject>
- (id <EQKitLayoutNode>)schemataSuperscript;
- (id <EQKitLayoutNode>)schemataSubscript;
- (id <EQKitLayoutNode>)schemataKernel;
@end

@protocol EQKitLayoutSchemataTable <NSObject>
- (NSArray *)schemataChildren;
@end

@protocol EQKitLayoutSchemataTd <NSObject>
- (NSArray *)schemataChildren;
@end

@protocol EQKitLayoutSchemataText <NSObject>
- (_Bool)schemataIsQuoted;
- (NSArray *)schemataChildren;
@end

@protocol EQKitLayoutSchemataToken <NSObject>
- (unsigned int)schemataUnicharOrNul;
- (NSString *)schemataTokenString;
- (id <EQKitFontStyling>)schemataFontStyling;
@end

@protocol EQKitLayoutSchemataTr <NSObject>
- (NSArray *)schemataChildren;
@end

@protocol EQKitLayoutSchemataUnderover <NSObject>
- (id <EQKitLayoutNode>)schemataOver;
- (id <EQKitLayoutNode>)schemataUnder;
- (id <EQKitLayoutNode>)schemataBase;
@end

@protocol EQKitMathMLNode
- (const set_386565a4 *)mathMLAttributes;
- (id)initFromXMLNode:(struct _xmlNode *)arg1 parser:(EQKitMathMLParser *)arg2;
@end

@protocol EQKitOperator <NSObject>
- (unsigned int)operatorUnicharOrNul;
- (unsigned short)operatorId;
@end

@protocol EQKitRootNode <EQKitLayoutNode>
- (struct AttributeCollection *)attributeCollection;
@end

@protocol NSCacheDelegate <NSObject>

@optional
- (void)cache:(NSCache *)arg1 willEvictObject:(id)arg2;
@end

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSFastEnumeration
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
@end

@protocol NSMutableCopying
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSURLConnectionDataDelegate <NSURLConnectionDelegate>

@optional
- (void)connectionDidFinishLoading:(NSURLConnection *)arg1;
- (NSCachedURLResponse *)connection:(NSURLConnection *)arg1 willCacheResponse:(NSCachedURLResponse *)arg2;
- (void)connection:(NSURLConnection *)arg1 didSendBodyData:(long long)arg2 totalBytesWritten:(long long)arg3 totalBytesExpectedToWrite:(long long)arg4;
- (NSInputStream *)connection:(NSURLConnection *)arg1 needNewBodyStream:(NSURLRequest *)arg2;
- (void)connection:(NSURLConnection *)arg1 didReceiveData:(NSData *)arg2;
- (void)connection:(NSURLConnection *)arg1 didReceiveResponse:(NSURLResponse *)arg2;
- (NSURLRequest *)connection:(NSURLConnection *)arg1 willSendRequest:(NSURLRequest *)arg2 redirectResponse:(NSURLResponse *)arg3;
@end

@protocol NSURLConnectionDelegate <NSObject>

@optional
- (void)connection:(NSURLConnection *)arg1 didCancelAuthenticationChallenge:(NSURLAuthenticationChallenge *)arg2;
- (void)connection:(NSURLConnection *)arg1 didReceiveAuthenticationChallenge:(NSURLAuthenticationChallenge *)arg2;
- (_Bool)connection:(NSURLConnection *)arg1 canAuthenticateAgainstProtectionSpace:(NSURLProtectionSpace *)arg2;
- (void)connection:(NSURLConnection *)arg1 willSendRequestForAuthenticationChallenge:(NSURLAuthenticationChallenge *)arg2;
- (_Bool)connectionShouldUseCredentialStorage:(NSURLConnection *)arg1;
- (void)connection:(NSURLConnection *)arg1 didFailWithError:(NSError *)arg2;
@end

@protocol NSXMLParserDelegate <NSObject>

@optional
- (void)parser:(NSXMLParser *)arg1 validationErrorOccurred:(NSError *)arg2;
- (void)parser:(NSXMLParser *)arg1 parseErrorOccurred:(NSError *)arg2;
- (NSData *)parser:(NSXMLParser *)arg1 resolveExternalEntityName:(NSString *)arg2 systemID:(NSString *)arg3;
- (void)parser:(NSXMLParser *)arg1 foundCDATA:(NSData *)arg2;
- (void)parser:(NSXMLParser *)arg1 foundComment:(NSString *)arg2;
- (void)parser:(NSXMLParser *)arg1 foundProcessingInstructionWithTarget:(NSString *)arg2 data:(NSString *)arg3;
- (void)parser:(NSXMLParser *)arg1 foundIgnorableWhitespace:(NSString *)arg2;
- (void)parser:(NSXMLParser *)arg1 foundCharacters:(NSString *)arg2;
- (void)parser:(NSXMLParser *)arg1 didEndMappingPrefix:(NSString *)arg2;
- (void)parser:(NSXMLParser *)arg1 didStartMappingPrefix:(NSString *)arg2 toURI:(NSString *)arg3;
- (void)parser:(NSXMLParser *)arg1 didEndElement:(NSString *)arg2 namespaceURI:(NSString *)arg3 qualifiedName:(NSString *)arg4;
- (void)parser:(NSXMLParser *)arg1 didStartElement:(NSString *)arg2 namespaceURI:(NSString *)arg3 qualifiedName:(NSString *)arg4 attributes:(NSDictionary *)arg5;
- (void)parser:(NSXMLParser *)arg1 foundExternalEntityDeclarationWithName:(NSString *)arg2 publicID:(NSString *)arg3 systemID:(NSString *)arg4;
- (void)parser:(NSXMLParser *)arg1 foundInternalEntityDeclarationWithName:(NSString *)arg2 value:(NSString *)arg3;
- (void)parser:(NSXMLParser *)arg1 foundElementDeclarationWithName:(NSString *)arg2 model:(NSString *)arg3;
- (void)parser:(NSXMLParser *)arg1 foundAttributeDeclarationWithName:(NSString *)arg2 forElement:(NSString *)arg3 type:(NSString *)arg4 defaultValue:(NSString *)arg5;
- (void)parser:(NSXMLParser *)arg1 foundUnparsedEntityDeclarationWithName:(NSString *)arg2 publicID:(NSString *)arg3 systemID:(NSString *)arg4 notationName:(NSString *)arg5;
- (void)parser:(NSXMLParser *)arg1 foundNotationDeclarationWithName:(NSString *)arg2 publicID:(NSString *)arg3 systemID:(NSString *)arg4;
- (void)parserDidEndDocument:(NSXMLParser *)arg1;
- (void)parserDidStartDocument:(NSXMLParser *)arg1;
@end

@protocol SFUInputStream <NSObject>
- (id <SFUInputStream>)closeLocalStream;
- (void)close;
- (void)enableSystemCaching;
- (void)disableSystemCaching;
- (void)seekToOffset:(long long)arg1;
- (_Bool)canSeek;
- (unsigned long long)readToBuffer:(char *)arg1 size:(unsigned long long)arg2;
- (long long)offset;
@end

@protocol TSADocumentRootDelegate <TSKAccessControllerDelegate>
@property(readonly, nonatomic) NSString *name;

@optional
@property(readonly, nonatomic) NSString *documentCachePath;
@property(readonly, nonatomic) NSString *defaultDraftName;
- (void)willRemoveICloudTeardownObserver:(id)arg1;
- (void)didAddObserverForICloudTeardown:(id)arg1;
- (void)continueActivityUsingBlock:(void (^)(void))arg1;
- (void)invalidateRestorableState;
@end

@protocol TSDAdaptiveLayout
- (struct CGPoint)applyAdaptiveLayoutTo:(TSDLayout *)arg1 info:(NSObject<TSDInfo> *)arg2 offset:(struct CGPoint)arg3;
- (void)endDynamicAdaptiveLayout;
- (void)beginDynamicAdaptiveLayout;
@end

@protocol TSDAnnotationHosting <NSObject, TSKAnnotation>
@property(nonatomic) id <TSKModel> model;
@property(readonly, nonatomic) NSDate *date;
@property(retain, nonatomic) TSKAnnotationAuthor *author;
- (void)commitText:(NSString *)arg1;
- (_Bool)isEqual:(id)arg1;

@optional
@property(copy, nonatomic) TSDCommentStorage *storage;
@property(readonly, nonatomic) NSString *changeTrackingString;
- (TSKCommand *)commandForDeletingComment;
@end

@protocol TSDArchivedHint <NSObject>
@property(retain, nonatomic) id <TSDHint> hint;
- (id)initWithContext:(TSPObjectContext *)arg1 hint:(id <TSDHint>)arg2;
@end

@protocol TSDAttachmentLayout <NSObject>
@property(readonly, nonatomic) _Bool attachmentLayoutDisplacedByDropCap;
@end

@protocol TSDAttachmentPositioner
- (TSKCommand *)commandForPositioningLayout:(TSDLayout *)arg1 withNewPosition:(struct CGPoint)arg2 interactiveCanvasController:(TSDInteractiveCanvasController *)arg3;
@end

@protocol TSDAudioHUDControllerDelegate <NSObject>
@end

@protocol TSDAutoscrollDelegate
@property(nonatomic) struct CGPoint autoscrollPoint;
@property(retain, nonatomic) TSDAutoscroll *autoscroll;
@property(readonly, nonatomic) TSDInteractiveCanvasController *icc;
- (void)autoscrollWillNotStart;
- (void)updateAfterAutoscroll:(TSDAutoscroll *)arg1;

@optional
- (_Bool)autoscrollWithDirection:(int)arg1 proposedContentOffset:(struct CGPoint)arg2 completionBlock:(void (^)(void))arg3;
- (int)allowedAutoscrollDirections;
- (unsigned long long)maximumAutoscrollDeltaForCount:(unsigned long long)arg1;
- (double)unscaledStartAutoscrollThreshold;
@end

@protocol TSDBackgroundLayoutAndRenderStateDelegate <NSObject>
- (void)backgroundLayoutAndRenderStateDidPerformBackgroundWork:(TSDBackgroundLayoutAndRenderState *)arg1;
- (_Bool)backgroundLayoutAndRenderState:(TSDBackgroundLayoutAndRenderState *)arg1 shouldDispatchBackgroundWork:(void (^)(void))arg2;
- (void)backgroundLayoutAndRenderState:(TSDBackgroundLayoutAndRenderState *)arg1 performWorkInBackgroundTilingOnly:(_Bool)arg2;
@end

@protocol TSDCanvasDelegate <NSObject>
- (TSKDocumentRoot *)documentRoot;

@optional
- (id <TSDLayoutGeometryProvider>)canvas:(TSDCanvas *)arg1 layoutGeometryProviderForLayout:(TSDLayout *)arg2;
- (_Bool)supportsAdaptiveLayout;
- (_Bool)isCanvasDrawingIntoPDF:(TSDCanvas *)arg1;
- (_Bool)shouldShowInstructionalText;
- (_Bool)shouldShowTextOverflowGlyphs;
- (_Bool)shouldSuppressBackgrounds;
- (_Bool)spellCheckingSuppressed;
- (_Bool)spellCheckingSupported;
- (_Bool)isPrintingCanvas;
- (_Bool)isCanvasInteractive;
- (void)canvas:(TSDCanvas *)arg1 createdRep:(TSDRep *)arg2;
- (void)canvas:(TSDCanvas *)arg1 willLayoutRep:(TSDRep *)arg2;
- (NSSet *)infosToHideForCanvas:(TSDCanvas *)arg1;
- (NSSet *)additionalVisibleInfosForCanvas:(TSDCanvas *)arg1;
- (struct CGRect)visibleScaledBoundsForClippingRepsOnCanvas:(TSDCanvas *)arg1;
- (void)canvasDidUpdateRepsFromLayouts:(TSDCanvas *)arg1;
- (void)canvasWillUpdateRepsFromLayouts:(TSDCanvas *)arg1;
- (void)canvasDidUpdateVisibleBounds:(TSDCanvas *)arg1;
- (void)canvasDidValidateLayoutsWithDependencies:(TSDCanvas *)arg1;
- (void)canvasDidLayout:(TSDCanvas *)arg1;
- (void)canvasDidValidateLayouts:(TSDCanvas *)arg1;
- (void)canvasWillLayout:(TSDCanvas *)arg1;
- (void)canvasLayoutInvalidated:(TSDCanvas *)arg1;
@end

@protocol TSDCanvasEditor <TSDEditor, TSDSubcommandProvider, TSDTextInput>
+ (id <TSDCanvasSelection>)canvasSelectionWithInfos:(NSSet *)arg1 andContainer:(TSDDrawableInfo<TSDContainerInfo> *)arg2;
+ (id <TSDCanvasSelection>)canvasSelectionWithInfos:(NSSet *)arg1;
@property(readonly, nonatomic) TSPObject *modelForSelection;
@property(readonly, nonatomic) TSDCanvasEditorHelper *canvasEditorHelper;
@property(readonly, nonatomic) TSDInteractiveCanvasController *interactiveCanvasController;
- (_Bool)shouldPushNewEditorForNewSelection;
- (_Bool)isRepSelectable:(TSDRep *)arg1;
- (_Bool)canvasEditorCanUngroupWithSender:(id)arg1;
- (_Bool)canvasEditorCanGroupWithSender:(id)arg1;
- (_Bool)canvasEditorCanSelectAllWithSender:(id)arg1;
- (_Bool)canvasEditorCanCopyStyleWithSender:(id)arg1;
- (_Bool)canvasEditorCanDuplicateWithSender:(id)arg1;
- (_Bool)canvasEditorCanCopyWithSender:(id)arg1;
- (_Bool)canvasEditorCanCutWithSender:(id)arg1;
- (_Bool)canvasEditorCanDeleteWithSender:(id)arg1;
- (_Bool)shouldUseAlternateSelectionHighlight;
- (NSObject<TSDEditor> *)editorToPopToOnEndEditing;
- (unsigned long long)countOfDrawables;
- (NSArray *)drawables;
- (void)connectWithConnectionLine:(id)arg1;
- (_Bool)canGroupDrawable:(TSDDrawableInfo *)arg1;
- (void)selectAll:(id)arg1;
- (void)select:(id)arg1;
- (void)copyToPasteboard:(TSPPasteboard *)arg1 withSender:(id)arg2;
- (void)copy:(id)arg1;
- (int)canPerformEditorAction:(SEL)arg1 withSender:(id)arg2;
- (_Bool)isSelectedInfo:(NSObject<TSDInfo> *)arg1;
@property(readonly, nonatomic) TSKSelection<TSDCanvasSelection> *canvasSelection;
- (void)setSelectionToInfos:(NSSet *)arg1;
- (void)setSelectionToInfo:(TSDDrawableInfo *)arg1;
- (void)setSelectionToRep:(TSDRep *)arg1;
- (void)setSelection:(TSKSelection *)arg1 withFlags:(unsigned long long)arg2;
- (id <TSDCanvasSelection>)canvasSelectionWithInfos:(NSSet *)arg1 andContainer:(TSDDrawableInfo<TSDContainerInfo> *)arg2;
- (id <TSDCanvasSelection>)canvasSelectionWithInfos:(NSSet *)arg1;
- (void)teardown;
- (void)repWasCreated:(TSDRep *)arg1;
- (void)canvasInfosDidChange;
- (id)initWithInteractiveCanvasController:(TSDInteractiveCanvasController *)arg1;

@optional
- (void)setExteriorTextWrapMargin:(double)arg1 forInfos:(NSSet *)arg2;
- (void)setExteriorTextWrap:(TSDExteriorTextWrap *)arg1 forInfos:(NSSet *)arg2;
- (TSDExteriorTextWrap *)exteriorTextWrapForInfos:(NSSet *)arg1;
@end

@protocol TSDCanvasLayerHosting <NSObject, TSDErrorPresenter, TSDModalOperationPresenter, TSDMovieCompatibilityAlertPresenter, TSDLayerAndSubviewHosting>
@property(readonly, nonatomic) CALayer *clippingLayer;
@property(readonly, nonatomic) TSDCanvasLayer *canvasLayer;
@property(readonly, nonatomic) CALayer *layer;
@property(readonly, nonatomic) TSDCanvasView *canvasView;
@property(nonatomic) TSDInteractiveCanvasController *interactiveCanvasController;
- (_Bool)isInFocusedContainer;
- (void)canvasDidUpdateRepsFromLayouts;
- (NSUndoManager *)undoManager;
- (void)teardown;
- (_Bool)resignFirstResponder;
- (_Bool)becomeFirstResponder;
- (_Bool)isViewLoaded;
- (void)viewDidLoad;

@optional
- (UIViewController *)viewController;
- (TSDMacCanvasViewController *)asMacCVC;
- (TSDiOSCanvasViewController *)asiOSCVC;
@end

@protocol TSDCanvasSelection <NSObject>
+ (TSKSelection<TSDCanvasSelection> *)emptySelection;
@property(readonly, nonatomic) unsigned long long unlockedInfoCount;
@property(readonly, nonatomic) NSSet *unlockedInfos;
@property(readonly, nonatomic) TSDDrawableInfo<TSDContainerInfo> *container;
@property(readonly, nonatomic) _Bool isEmpty;
@property(readonly, nonatomic) unsigned long long infoCount;
@property(readonly, nonatomic) NSSet *infos;
- (id)copyExcludingInfo:(NSObject<TSDInfo> *)arg1;
- (id)copyIncludingInfo:(NSObject<TSDInfo> *)arg1;
- (NSSet *)infosOfClass:(Class)arg1;
- (_Bool)containsUnlockedKindOfClass:(Class)arg1;
- (_Bool)containsKindOfClass:(Class)arg1;
@end

@protocol TSDCanvasZoomTrackerDelegate <NSObject>
- (void)canvasZoomTrackerDidFinish:(TSDCanvasZoomTracker *)arg1;
- (void)canvasZoomTrackerDidEndFinalZoomAnimation:(TSDCanvasZoomTracker *)arg1;
- (void)canvasZoomTrackerWillBeginFinalZoomAnimation:(TSDCanvasZoomTracker *)arg1;
- (void)canvasZoomTrackerDidEndViewScaleFeedback:(TSDCanvasZoomTracker *)arg1;
- (void)canvasZoomTracker:(TSDCanvasZoomTracker *)arg1 willUpdateViewScaleFeedbackWithScale:(double)arg2;
- (void)canvasZoomTracker:(TSDCanvasZoomTracker *)arg1 willBeginViewScaleFeedbackWithFastPinch:(_Bool)arg2;
@end

@protocol TSDChangePropagationMap <NSObject>
- (id <TSDPrototypeChange>)prototypeChangeForPrototype:(id)arg1;
@end

@protocol TSDChangeableInfo <TSDInfo>
@property(readonly, nonatomic) _Bool isUserModifiable;
- (TSSPropertySetChangeDetails *)endCollectingChanges;
- (void)willChangeProperty:(int)arg1;
- (void)beginCollectingChanges;

@optional
@property(readonly, nonatomic) Class editorClass;
- (void)willChangeProperties:(TSSPropertySet *)arg1;
@end

@protocol TSDConnectedInfoReplacing <TSDCanvasDelegate>
- (NSObject<TSDInfo> *)infoToConnectToForConnectionLineConnectedToInfo:(NSObject<TSDInfo> *)arg1;
@end

@protocol TSDContainerInfo <TSDInfo>
- (NSArray *)childInfos;
@end

@protocol TSDContainerRep <TSDLayerProviderRep>
@property(readonly, nonatomic) NSObject<TSDContainerInfo> *containerInfo;
- (void)selectChildRep:(TSDRep *)arg1;
- (_Bool)canSelectChildRep:(TSDRep *)arg1;
- (NSArray *)childReps;

@optional
- (int)positionForChildViewAlternateLayer:(CALayer *)arg1;
- (int)positionForChildView:(UIView *)arg1;
- (_Bool)allowSublayerUpdatesWhenPaused;
- (_Bool)canHandleGesture:(id <TSDGesture>)arg1 forChildRep:(TSDRep *)arg2;
- (id)viewControllerForView:(id)arg1;
- (void)willRemoveChildView:(id)arg1;
- (void)didAddChildView:(id)arg1;
- (void)willAddChildView:(id)arg1 toView:(id)arg2;
- (void)addAlternateLayersForChildViewsToArray:(NSMutableArray *)arg1;
- (void)addChildViewsToArray:(NSMutableArray *)arg1;
- (void)addAdditionalChildBackgroundLayersToArray:(NSMutableArray *)arg1;
- (_Bool)containerManagesChildView;
- (NSArray *)childRepsForHitTesting;
- (void)willEndEditingContainedRep;
- (void)willBeginEditingContainedRep;
- (_Bool)canBeginEditingChildRepOnDoubleTap:(TSDRep *)arg1;
@end

@protocol TSDContentAnimationTiming <NSObject>

@optional
- (double)duration;
@end

@protocol TSDDecorator <NSObject>
- (NSArray *)decoratorOverlayLayers;

@optional
- (void)didEndZoomingOperation;
- (void)willBeginZoomingOperation;
- (void)didEndScrollingOperation;
- (void)willBeginScrollingOperation;
- (void)didEndDynamicOperation;
- (void)willBeginDynamicOperation;
- (void)screenScaleDidChange;
@end

@protocol TSDDrawableContainerInfo <TSDMutableContainerInfo>
@end

@protocol TSDEditor <NSObject>
- (TSKDocumentRoot *)documentRoot;

@optional
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingShrinkTextToFit;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingResize;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingSmartShapeAttributes;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingEndpoints;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingConnectionLineAttributes;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingTextInset;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingOpacity;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingReflection;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingShadow;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingStroke;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingFill;
@property(retain, nonatomic) TSKSelection *selection;
- (NSString *)inspectorTabTipKey;
- (struct CGRect)coachingTipManager:(APDCoachingTipsManager *)arg1 coachingTipView:(APDCoachingTipView *)arg2 canvasRectForKey:(NSString *)arg3;
- (NSSet *)canvasCoachingTips;
- (void)addContextualMenuItemsToArray:(NSMutableArray *)arg1;
- (struct CGRect)targetRectForEditMenu;
- (void)reverseDirection:(id)arg1;
- (_Bool)canBeginEditingRepOnDoubleTap:(TSDRep *)arg1;
- (_Bool)canBeginPathEditing;
- (_Bool)canAddOrShowComment;
- (_Bool)suppressAutozoom;
- (struct CGRect)zoomRectForSelection:(TSKSelection *)arg1;
- (double)targetPointSizeForSelectionWithViewScale:(double)arg1;
- (double)viewScaleForSelectionWithTargetPointSize:(double)arg1;
- (UIViewController *)wrapInspectorController;
- (void)customAction8:(id)arg1;
- (void)customAction7:(id)arg1;
- (void)customAction6:(id)arg1;
- (void)customAction5:(id)arg1;
- (NSArray *)extraMenuItems;
- (void)delete:(id)arg1;
- (void)selectAll:(id)arg1;
- (void)select:(id)arg1;
- (void)paste:(id)arg1;
- (void)copy:(id)arg1;
- (void)cut:(id)arg1;
- (_Bool)shouldProhibitAction:(SEL)arg1;
- (int)canPerformEditorAction:(SEL)arg1 withSender:(id)arg2;
- (void)willEnterForeground;
- (void)didEnterBackground;
- (NSArray *)level2InspectorViewControllers;
- (struct CGSize)topLevelInspectorPreferredPopoverSize;
- (NSString *)topLevelInspectorAutosaveName;
- (NSArray *)topLevelInspectorViewControllers;
- (id <TSKSearchReference>)editingSearchReference;
- (_Bool)wantsToBePushedBackOntoStackForSelection:(TSKSelection<TSDCanvasSelection> *)arg1;
- (_Bool)shouldEndEditingToBeginEditingRep:(TSDRep *)arg1;
- (void)didResignTextInputEditor;
- (void)willResignTextInputEditor;
- (void)didBecomeTextInputEditor;
- (void)willResignCurrentEditor;
- (void)didBecomeCurrentEditor;
- (_Bool)readyToAcceptSelection:(TSKSelection *)arg1 onInfo:(NSObject<TSDInfo> *)arg2;
- (_Bool)ignoreSetSelection:(TSKSelection *)arg1 onInfo:(NSObject<TSDInfo> *)arg2;
- (void)setSelectionWithSearchReference:(id <TSKSearchReference>)arg1;
- (void)setSelection:(TSKSelection *)arg1 withFlags:(unsigned long long)arg2;
- (void)teardown;
- (id <TSKModel>)model;
@end

@protocol TSDErrorPresenter <NSObject>
- (void)presentErrors:(NSArray *)arg1 withLocalizedDescription:(NSString *)arg2 completionHandler:(void (^)(void))arg3;
- (void)presentError:(NSError *)arg1 completionHandler:(void (^)(_Bool))arg2;
@end

@protocol TSDGLDataBufferAccessor <NSObject>
- (void)setGLPoint4D:(CDStruct_f2e236b6)arg1 forAttribute:(TSDGLDataBufferAttribute *)arg2 atIndex:(unsigned long long)arg3;
- (CDStruct_f2e236b6)GLPoint4DForAttribute:(TSDGLDataBufferAttribute *)arg1 atIndex:(unsigned long long)arg2;
- (void)setGLPoint3D:(CDStruct_03942939)arg1 forAttribute:(TSDGLDataBufferAttribute *)arg2 atIndex:(unsigned long long)arg3;
- (CDStruct_03942939)GLPoint3DForAttribute:(TSDGLDataBufferAttribute *)arg1 atIndex:(unsigned long long)arg2;
- (void)setGLPoint2D:(CDStruct_6e3f967a)arg1 forAttribute:(TSDGLDataBufferAttribute *)arg2 atIndex:(unsigned long long)arg3;
- (CDStruct_6e3f967a)GLPoint2DForAttribute:(TSDGLDataBufferAttribute *)arg1 atIndex:(unsigned long long)arg2;
- (void)setCGFloat:(double)arg1 forAttribute:(TSDGLDataBufferAttribute *)arg2 atIndex:(unsigned long long)arg3;
- (void)setGLfloat:(float)arg1 forAttribute:(TSDGLDataBufferAttribute *)arg2 atIndex:(unsigned long long)arg3;
- (float)GLfloatForAttribute:(TSDGLDataBufferAttribute *)arg1 atIndex:(unsigned long long)arg2;
@end

@protocol TSDGLLayerContext <NSObject>
- (void)presentRenderbuffer;
- (_Bool)makeCurrentContext;
- (void)teardown;
- (_Bool)createFramebufferFromLayer:(TSDGLLayer *)arg1;
- (_Bool)isValid;

@optional
- (void)unlock;
- (void)lock;
@end

@protocol TSDGesture <NSObject>
@property(readonly, nonatomic) int gestureState;
@property(retain, nonatomic) TSDRep *targetRep;
@property(retain, nonatomic) NSString *gestureKind;
@property(nonatomic) id <TSDGestureDelegate> gestureDelegate;
@property(retain, nonatomic) id <TSDGestureTarget> cachedGestureTarget;
- (_Bool)isDone;
- (struct CGPoint)naturalLocationForRep:(TSDRep *)arg1;
- (struct CGPoint)boundsLocationForICC:(TSDInteractiveCanvasController *)arg1;
- (struct CGPoint)unscaledLocationForICC:(TSDInteractiveCanvasController *)arg1;
@end

@protocol TSDGestureDelegate <UIGestureRecognizerDelegate>
- (void)gestureRemovedFromView:(id <TSDGesture>)arg1;
- (void)didReset:(id <TSDGesture>)arg1;

@optional
- (_Bool)gestureActionShouldBegin:(id <TSDGesture>)arg1;
@end

@protocol TSDGestureTarget <NSObject>
- (_Bool)handleGesture:(id <TSDGesture>)arg1;
- (_Bool)canHandleGesture:(id <TSDGesture>)arg1;

@optional
- (void)willBeginHandlingGesture:(UIGestureRecognizer *)arg1;
- (void)gestureSequenceDidEnd;
- (void)gestureSequenceWillBegin;
@end

@protocol TSDGradientStopContainer <NSObject, NSMutableCopying>
@property(retain, nonatomic) TSUColor *lastColor;
@property(retain, nonatomic) TSUColor *firstColor;
@property(retain, nonatomic) NSArray *gradientStops;
- (void)setInflectionOfStopAtIndex:(unsigned long long)arg1 toInflection:(double)arg2;
- (void)setColorOfStopAtIndex:(unsigned long long)arg1 toColor:(TSUColor *)arg2;
- (void)moveStopAtIndex:(unsigned long long)arg1 toFraction:(double)arg2;
- (void)evenlyDistributeStops;
- (void)reverseStopOrder;
- (TSDGradientStop *)removeStopAtIndex:(unsigned long long)arg1;
- (void)removeStop:(TSDGradientStop *)arg1;
- (TSDGradientStop *)insertStopAtFraction:(double)arg1 withColor:(TSUColor *)arg2;
- (void)swapStopAtIndex:(unsigned long long)arg1 withStopAtIndex:(unsigned long long)arg2;
- (TSDGradientStop *)insertStopAtFraction:(double)arg1;
- (void)insertGradientStop:(TSDGradientStop *)arg1;
@end

@protocol TSDHint <NSObject>
+ (Class)archivedHintClass;
- (id <TSDHint>)copyForArchiving;
- (id <TSDHint>)lastChildHint;
- (id <TSDHint>)firstChildHint;
- (void)offsetByDelta:(int)arg1;
- (_Bool)overlapsWithSelection:(TSKSelection *)arg1;

@optional
- (struct CGSize)effectiveSize;
- (struct CGSize)maximumSize;
- (_Bool)isFirstHint;
@end

@protocol TSDInfo <NSObject, TSKModel, TSPCopying, TSDInfoUsingObjectPlaceholderGeometry>
@property(readonly, nonatomic, getter=isAttachedToBodyText) _Bool attachedToBodyText;
@property(readonly, nonatomic, getter=isInlineWithText) _Bool inlineWithText;
@property(readonly, nonatomic, getter=isAnchoredToText) _Bool anchoredToText;
@property(readonly, nonatomic, getter=isFloatingAboveText) _Bool floatingAboveText;
@property(readonly, nonatomic) TSPObject<TSDOwningAttachment> *owningAttachmentNoRecurse;
@property(nonatomic) TSPObject<TSDOwningAttachment> *owningAttachment;
@property(nonatomic) NSObject<TSDContainerInfo> *parentInfo;
@property(copy, nonatomic) TSDInfoGeometry *geometry;
- (_Bool)isThemeContent;
- (Class)repClass;
- (Class)layoutClass;
- (void)clearBackPointerToParentInfoIfNeeded:(NSObject<TSDContainerInfo> *)arg1;
@end

@protocol TSDInfoUsingObjectPlaceholderGeometry

@optional
@property(nonatomic) _Bool matchesObjectPlaceholderGeometry;
@end

@protocol TSDInteractiveCanvasControllerDelegate <TSKChangeSourceObserver, TSKDocumentRootProvider>
@property(readonly, retain, nonatomic) TSKDocumentRoot *documentRoot;

@optional
@property(readonly, nonatomic) _Bool allowTextEditingToBegin;
@property(readonly, nonatomic) _Bool allowEditMenuToAppear;
@property(readonly, nonatomic) struct CGSize sizeOfScrollViewEnclosingCanvas;
@property(readonly, nonatomic) _Bool shouldPopKnobsOutsideEnclosingScrollView;
@property(readonly, nonatomic) _Bool shouldShowInstructionalText;
@property(readonly, nonatomic) _Bool shouldShowTextOverflowGlyphs;
@property(readonly, nonatomic) _Bool shouldClipToScrollViewBoundsInVisibleBounds;
@property(readonly, nonatomic) _Bool shouldResizeCanvasToScrollView;
@property(readonly, nonatomic) _Bool spellCheckingSuppressed;
@property(readonly, nonatomic) _Bool spellCheckingSupported;
@property(readonly, nonatomic) _Bool isPrintingCanvas;
@property(readonly, nonatomic) _Bool isCanvasInteractive;
- (_Bool)interactiveCanvasControllerShouldDeferViewCreation:(TSDInteractiveCanvasController *)arg1;
- (struct CGRect)interactiveCanvasController:(TSDInteractiveCanvasController *)arg1 outsetSelectionRect:(struct CGRect)arg2;
- (struct CGRect)interactiveCanvasController:(TSDInteractiveCanvasController *)arg1 canvasViewBoundsWithBounds:(struct CGRect)arg2;
- (_Bool)allowSelectionPopoverForInteractiveCanvasController:(TSDInteractiveCanvasController *)arg1;
- (_Bool)interactiveCanvasController:(TSDInteractiveCanvasController *)arg1 allowsSmartMagnifyForRep:(TSDRep *)arg2;
- (_Bool)interactiveCanvasController:(TSDInteractiveCanvasController *)arg1 allowsHyperlinkWithGesture:(id <TSDGesture>)arg2 forRep:(TSDRep *)arg3;
- (_Bool)interactiveCanvasController:(TSDInteractiveCanvasController *)arg1 allowsEditMenuForRep:(TSDRep *)arg2;
- (_Bool)interactiveCanvasController:(TSDInteractiveCanvasController *)arg1 canvasViewShouldBecomeFirstResponder:(TSDCanvasView *)arg2;
- (void)interactiveCanvasControllerWillBecomeFirstResponder:(TSDInteractiveCanvasController *)arg1;
- (_Bool)interactiveCanvasControllerShouldEndEditingWhenLosingFirstResponder:(TSDInteractiveCanvasController *)arg1;
- (_Bool)interactiveCanvasController:(TSDInteractiveCanvasController *)arg1 shouldTakeFirstResponderForTextEditor:(id <TSDTextInput>)arg2;
- (_Bool)interactiveCanvasControllerShouldAnimateToSearchReferences:(TSDInteractiveCanvasController *)arg1;
- (struct CGRect)interactiveCanvasController:(TSDInteractiveCanvasController *)arg1 targetRectForInfo:(NSObject<TSDInfo> *)arg2 withSelection:(TSKSelection *)arg3;
- (NSObject<TSDInfo> *)interactiveCanvasController:(TSDInteractiveCanvasController *)arg1 infoForModel:(NSObject<TSKModel> *)arg2 withSelection:(TSKSelection *)arg3;
- (_Bool)interactiveCanvasControllerIsRelatedCanvasScrolling:(TSDInteractiveCanvasController *)arg1;
- (_Bool)interactiveCanvasControllerShouldResampleImages:(TSDInteractiveCanvasController *)arg1;
- (NSArray *)additionalGestureTargetsForInteractiveCanvasController:(TSDInteractiveCanvasController *)arg1 gesture:(id <TSDGesture>)arg2;
- (void)interactiveCanvasController:(TSDInteractiveCanvasController *)arg1 updateGestureTargetStack:(NSMutableArray *)arg2 gesture:(id <TSDGesture>)arg3;
- (void)interactiveCanvasController:(TSDInteractiveCanvasController *)arg1 layoutUnregistered:(TSDLayout *)arg2;
- (void)interactiveCanvasController:(TSDInteractiveCanvasController *)arg1 layoutRegistered:(TSDLayout *)arg2;
- (void)interactiveCanvasController:(TSDInteractiveCanvasController *)arg1 willLayoutRep:(TSDRep *)arg2;
- (id)interactiveCanvasController:(TSDInteractiveCanvasController *)arg1 delegateConformingToProtocol:(Protocol *)arg2 forLayout:(TSDLayout *)arg3;
- (id)interactiveCanvasController:(TSDInteractiveCanvasController *)arg1 delegateConformingToProtocol:(Protocol *)arg2 forRep:(TSDRep *)arg3;
- (id <TSDLayoutGeometryProvider>)interactiveCanvasController:(TSDInteractiveCanvasController *)arg1 layoutGeometryProviderForLayout:(TSDLayout *)arg2;
- (NSArray *)interactiveCanvasController:(TSDInteractiveCanvasController *)arg1 gestureTargetStackWhenScrollingWithGesture:(id <TSDGesture>)arg2;
- (id <TSDGestureTarget>)interactiveCanvasController:(TSDInteractiveCanvasController *)arg1 primaryTargetForGesture:(id <TSDGesture>)arg2;
- (id <TSDPanGuide>)panGuideForInteractiveCanvasController:(TSDInteractiveCanvasController *)arg1 withMovementDirection:(struct CGPoint)arg2;
- (_Bool)interactiveCanvasControllerShouldUseGuidedPan:(TSDInteractiveCanvasController *)arg1 withMovementDirection:(struct CGPoint)arg2;
- (struct CGRect)scrollViewClippingBoundsForInteractiveCanvasController:(TSDInteractiveCanvasController *)arg1;
- (struct CGRect)interactiveCanvasController:(TSDInteractiveCanvasController *)arg1 expandBoundsForScrollViewHitTesting:(struct CGRect)arg2;
- (struct CGRect)interactiveCanvasController:(TSDInteractiveCanvasController *)arg1 expandBoundsForHitTesting:(struct CGRect)arg2;
- (double)interactiveCanvasController:(TSDInteractiveCanvasController *)arg1 adjustViewScale:(double)arg2;
- (struct CGPoint)interactiveCanvasController:(TSDInteractiveCanvasController *)arg1 restrictedContentOffset:(struct CGPoint)arg2 forViewScale:(double)arg3;
- (struct CGPoint)interactiveCanvasController:(TSDInteractiveCanvasController *)arg1 clampContentOffset:(struct CGPoint)arg2 forViewScale:(double)arg3 scrollViewBoundsSize:(struct CGSize)arg4;
- (struct CGPoint)interactiveCanvasController:(TSDInteractiveCanvasController *)arg1 clampContentOffset:(struct CGPoint)arg2 forViewScale:(double)arg3;
- (_Bool)isInteractiveCanvasControllerTextOnly:(TSDInteractiveCanvasController *)arg1;
- (_Bool)shouldSuppressCommentKnobsForRep:(TSDRep *)arg1;
- (id <TSCEResolverContainer>)activeResolverContainer;
- (void)canvasEditorDidChangeSelection:(id <TSDEditor>)arg1;
- (_Bool)isPopoverGestureInFlight;
- (Class)canvasViewClassOverride;
- (_Bool)shouldIgnoreTextGestures;
- (_Bool)allowTouchOutsideCanvasView:(UITouch *)arg1 forGesture:(UIGestureRecognizer *)arg2;
- (UIView *)viewForGestureRecognizer:(UIGestureRecognizer *)arg1;
- (_Bool)zoomOnSelectionChange:(TSDInteractiveCanvasController *)arg1;
- (_Bool)inPrintPreviewMode;
- (UIView *)visibleBoundsClipViewForInteractiveCanvasController:(TSDInteractiveCanvasController *)arg1;
- (struct CGRect)interactiveCanvasController:(TSDInteractiveCanvasController *)arg1 visibleBoundsWithClippingLayerBounds:(struct CGRect)arg2 canvasBounds:(struct CGRect)arg3;
- (struct CGRect)interactiveCanvasController:(TSDInteractiveCanvasController *)arg1 expandVisibleBoundsForClippingReps:(struct CGRect)arg2;
- (struct CGRect)interactiveCanvasController:(TSDInteractiveCanvasController *)arg1 expandVisibleBoundsForTiling:(struct CGRect)arg2;
- (double)autoZoomAnimationDurationForInteractiveCanvasController:(TSDInteractiveCanvasController *)arg1;
- (_Bool)interactiveCanvasControllerSupportsAutozoom:(TSDInteractiveCanvasController *)arg1;
- (long long)interactiveCanvasController:(TSDInteractiveCanvasController *)arg1 imageReplaceBadgeBehaviorForRep:(TSDRep *)arg2;
- (id <TSDImageReplacer>)imageReplacerForInteractiveCanvasController:(TSDInteractiveCanvasController *)arg1;
- (void)interactiveCanvasController:(TSDInteractiveCanvasController *)arg1 didScrollForAutoscroll:(TSDAutoscroll *)arg2;
- (_Bool)doubleTappedCanvasBackgroundAtPoint:(struct CGPoint)arg1;
- (_Bool)tappedCanvasBackgroundAtPoint:(struct CGPoint)arg1;
- (Class)wpTrackerClassOverride;
- (Class)wpFloatingCommentEditorClassOverride;
- (Class)wpEditorClassOverride;
- (void)editorDidChangeSelection:(id <TSDEditor>)arg1;
- (void)editorDidChangeSelectionWithTextInputEditor:(id <TSDEditor>)arg1 changingEditor:(id <TSDEditor>)arg2;
- (void)selectionDidChange;
- (void)setSelection:(TSKSelection *)arg1 onModel:(NSObject *)arg2 withFlags:(unsigned long long)arg3;
- (void)willScrollSearchReferenceToVisible:(id <TSKSearchReference>)arg1;
- (void)dynamicOperationDidEnd;
- (void)dynamicOperationWillBegin;
- (NSArray *)rectanglesObscuringView:(UIView *)arg1;
- (NSString *)descriptionForCanvasViewScale:(double)arg1;
- (double)nextCanvasViewScaleDetentForProposedViewScale:(double)arg1 greater:(_Bool)arg2;
- (double)canvasViewScaleForProposedViewScale:(double)arg1 originalViewScale:(double)arg2;
- (struct CGSize)canvasCenterOffsetForProposedViewScale:(double)arg1 originalViewScale:(double)arg2;
- (void)canvasWillEndEditingToBeginEditingRep:(TSDRep *)arg1;
- (TSDEditorController *)editorControllerForInteractiveCanvasController:(TSDInteractiveCanvasController *)arg1;
- (struct CGRect)visibleUnscaledCanvasRectWithoutKeyboard;
- (void)interactiveCanvasControllerDidAnimateViewScale:(TSDInteractiveCanvasController *)arg1;
- (void)interactiveCanvasController:(TSDInteractiveCanvasController *)arg1 willAnimateToViewScale:(double)arg2 withDuration:(double)arg3 unscaledContentOffset:(struct CGPoint)arg4;
- (_Bool)interactiveCanvasControllerShouldMaintainPositionOnSetViewScale:(TSDInteractiveCanvasController *)arg1;
- (void)interactiveCanvasControllerDidLayoutAndRenderOnBackgroundThread:(TSDInteractiveCanvasController *)arg1;
- (_Bool)interactiveCanvasController:(TSDInteractiveCanvasController *)arg1 shouldDispatchBackgroundWork:(void (^)(void))arg2;
- (void)interactiveCanvasControllerDidZoomWithUserGesture:(TSDInteractiveCanvasController *)arg1;
- (void)interactiveCanvasControllerDidZoom:(TSDInteractiveCanvasController *)arg1;
- (void)interactiveCanvasControllerIsZooming:(TSDInteractiveCanvasController *)arg1 viewScale:(double)arg2;
- (void)interactiveCanvasControllerWillZoom:(TSDInteractiveCanvasController *)arg1;
- (void)interactiveCanvasController:(TSDInteractiveCanvasController *)arg1 performLockedAction:(void (^)(void))arg2;
- (void)interactiveCanvasController:(TSDInteractiveCanvasController *)arg1 scrollViewWillEndDragging:(TSKScrollView *)arg2 withVelocity:(struct CGPoint)arg3 targetContentOffset:(inout struct CGPoint *)arg4;
- (void)interactiveCanvasController:(TSDInteractiveCanvasController *)arg1 scrollViewWillBeginDragging:(TSKScrollView *)arg2;
- (void)interactiveCanvasControllerDidStopScrolling:(TSDInteractiveCanvasController *)arg1;
- (void)interactiveCanvasControllerDidScroll:(TSDInteractiveCanvasController *)arg1;
- (void)interactiveCanvasControllerWillScroll:(TSDInteractiveCanvasController *)arg1;
- (void)interactiveCanvasControllerDidEndScrollingAnimation:(TSDInteractiveCanvasController *)arg1 stillAnimating:(_Bool)arg2;
- (void)interactiveCanvasController:(TSDInteractiveCanvasController *)arg1 willAnimateScrollToVisibleUnscaledRect:(struct CGRect)arg2;
- (void)interactiveCanvasControllerDidUpdateLayersFromReps:(TSDInteractiveCanvasController *)arg1;
- (void)interactiveCanvasControllerDidLayout:(TSDInteractiveCanvasController *)arg1;
- (void)interactiveCanvasControllerDidValidateLayouts:(TSDInteractiveCanvasController *)arg1;
- (void)interactiveCanvasControllerWillLayout:(TSDInteractiveCanvasController *)arg1;
@end

@protocol TSDLayerAndSubviewHosting <NSObject>
@property(readonly, retain, nonatomic) TSDCanvasSubviewsController *subviewsController;
@property(readonly, retain, nonatomic) UIViewController *containerViewController;
@property(readonly, retain, nonatomic) UIView *containerView;
@property(readonly, retain, nonatomic) CALayer *containerLayer;
@property(readonly, retain, nonatomic) CALayer *topLevelTilingLayer;
- (NSArray *)topLevelReps;
@end

@protocol TSDLayerProviderRep <NSObject>
- (void)addAdditionalChildLayersToArray:(NSMutableArray *)arg1;
@end

@protocol TSDLayoutGeometryProvider <NSObject>
- (TSDLayoutGeometry *)layoutGeometryForLayout:(TSDLayout *)arg1;

@optional
- (TSDLayoutGeometry *)adjustImageGeometry:(TSDLayoutGeometry *)arg1 withLayoutGeometry:(TSDLayoutGeometry *)arg2 forLayout:(TSDLayout *)arg3;
- (TSDLayoutGeometry *)adjustLayoutGeometry:(TSDLayoutGeometry *)arg1 forLayout:(TSDLayout *)arg2;
@end

@protocol TSDLayoutManipulatingTracker
- (_Bool)operationShouldBeDynamic;
- (_Bool)supportsAlignmentGuides;
- (void)commitChangesForReps:(NSSet *)arg1;
- (_Bool)shouldOpenCommandGroupToCommitChangesForReps:(NSSet *)arg1;
- (void)changeDynamicLayoutsForReps:(NSSet *)arg1;

@optional
- (TSDCommandSelectionBehavior *)selectionBehaviorForReps:(NSSet *)arg1;
- (void)didEndDynamicOperationForReps:(NSSet *)arg1;
- (void)didChangeCurrentlyTransformingReps;
- (void)willBeginDynamicOperationForReps:(NSSet *)arg1;
@end

@protocol TSDMagicMoveMatching

@optional
+ (double)magicMoveAttributeMatchPercentBetweenOutgoingObject:(TSDRep *)arg1 incomingObject:(TSDRep *)arg2;
+ (NSArray *)magicMoveMatchesBetweenOutgoingObjects:(NSArray *)arg1 andIncomingObjects:(NSArray *)arg2 textureContext:(TSDTextureContext *)arg3;
@end

@protocol TSDMatchingAlgorithmMatch
@property(readonly, nonatomic) id outgoingMatchObject;
@property(readonly, nonatomic) id incomingMatchObject;
@property(readonly, nonatomic) long long matchCost;
- (_Bool)conflictsWithMatch:(id <TSDMatchingAlgorithmMatch>)arg1;
- (long long)compareToMatch:(id <TSDMatchingAlgorithmMatch>)arg1;
@end

@protocol TSDMixing
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;

@optional
+ (NSArray *)mixableObjectClasses;
+ (_Bool)canMixWithNilObjects;
- (id)mixedBaseObjectWithObject:(id)arg1;
@end

@protocol TSDModalOperationPresenter <NSObject>
@end

@protocol TSDMovieCompatibilityAlertPresenter <NSObject>
- (void)presentMovieCompatibilityAlertForUnplayableMoviePasteboardDrawableProviders:(NSArray *)arg1 completionHandler:(void (^)(long long))arg2;
- (void)presentMovieCompatibilityAlertForUnplayableMovieURLs:(NSArray *)arg1 completionHandler:(void (^)(long long))arg2;
@end

@protocol TSDMutableContainerInfo <TSDContainerInfo>
- (void)replaceChildInfo:(NSObject<TSDInfo> *)arg1 with:(NSObject<TSDInfo> *)arg2;
- (void)removeChildInfo:(NSObject<TSDInfo> *)arg1;
- (void)moveChildren:(NSArray *)arg1 toIndexes:(NSIndexSet *)arg2;
- (void)insertChildInfo:(NSObject<TSDInfo> *)arg1 above:(NSObject<TSDInfo> *)arg2;
- (void)insertChildInfo:(NSObject<TSDInfo> *)arg1 below:(NSObject<TSDInfo> *)arg2;
- (void)insertChildInfo:(NSObject<TSDInfo> *)arg1 atIndex:(unsigned long long)arg2;
- (void)addChildInfo:(NSObject<TSDInfo> *)arg1;
- (void)setChildInfos:(NSArray *)arg1;
@end

@protocol TSDMutableContainerRep <TSDContainerRep>
@property(readonly, nonatomic) NSObject<TSDMutableContainerInfo> *mutableContainerInfo;
- (void)replaceChildRep:(TSDRep *)arg1 with:(TSDRep *)arg2;
- (void)removeChildRep:(TSDRep *)arg1;
- (void)insertChildRep:(TSDRep *)arg1 above:(TSDRep *)arg2;
- (void)insertChildRep:(TSDRep *)arg1 below:(TSDRep *)arg2;
- (void)insertChildRep:(TSDRep *)arg1 atIndex:(unsigned long long)arg2;
- (void)addChildRep:(TSDRep *)arg1;
- (void)setChildReps:(NSArray *)arg1;
@end

@protocol TSDOwningAttachment <NSObject>
@property(readonly, nonatomic) unsigned long long enabledKnobMask;
@property(readonly, nonatomic) _Bool specifiesEnabledKnobMask;
@property(readonly, nonatomic) _Bool isSearchable;
@property(readonly, nonatomic) Class positionerClass;
@property(readonly, nonatomic) _Bool isAttachedToBodyText;
@property(readonly, nonatomic) _Bool isPartitioned;
@property(readonly, nonatomic) _Bool isAnchored;
@property(readonly, nonatomic) _Bool isDrawable;
- (void)infoChanged;
@end

@protocol TSDPartitioner
- (id <TSDHint><NSCoding>)hintForLayout:(TSDLayout *)arg1;
- (_Bool)didHint:(id <TSDHint>)arg1 syncWithNextHint:(id <TSDHint>)arg2 horizontally:(_Bool)arg3 delta:(int)arg4;
- (TSDLayout *)layoutForHint:(id <TSDHint>)arg1 parentLayout:(TSDLayout *)arg2;
- (id <TSDHint><NSCoding>)nextHintForSize:(struct CGSize)arg1 parentLayout:(TSDLayout *)arg2 previousHint:(id <TSDHint>)arg3 horizontally:(_Bool)arg4 outFinished:(out _Bool *)arg5;
- (TSDLayout *)nextLayoutForSize:(struct CGSize)arg1 parentLayout:(TSDLayout *)arg2 previousHint:(id <TSDHint>)arg3 horizontally:(_Bool)arg4 outFinished:(out _Bool *)arg5;
@end

@protocol TSDPartitioningInteractiveCanvasController
@property(nonatomic) _Bool shouldUseCachedPartitionRendering;
@end

@protocol TSDPathPainter <NSObject>
- (void)drawSwatchInRect:(struct CGRect)arg1 inContext:(struct CGContext *)arg2;
- (void)paintPath:(struct CGPath *)arg1 inContext:(struct CGContext *)arg2;

@optional
- (void)drawSwatchInRect:(struct CGRect)arg1 inContext:(struct CGContext *)arg2 forImage:(struct CGImage *)arg3 swatchRect:(struct CGRect)arg4 wantsStroke:(_Bool)arg5;
@end

@protocol TSDPlatformButtonProtocol <NSObject>
+ (UIButton *)tsdPlatformButtonWithFrame:(struct CGRect)arg1;
- (_Bool)showsTouchWhenHighlighted;
- (void)setShowsTouchWhenHighlighted:(_Bool)arg1;
- (void)setAlternateImageNamed:(NSString *)arg1 inBundle:(NSBundle *)arg2;
- (void)setImageNamed:(NSString *)arg1 inBundle:(NSBundle *)arg2;
- (void)setTarget:(id)arg1 action:(SEL)arg2;
@end

@protocol TSDPrototypeChange <NSObject>
@property(readonly, retain) id <TSSPropertySource> propertiesAfterChange;
@property(readonly, retain) id <TSSPropertySource> propertiesBeforeChange;
@property(readonly, retain) id replacement;
@property(readonly, retain) id prototype;
@property(readonly) _Bool prototypeIsBeingDeleted;
@property(readonly) _Bool prototypeIsBeingModified;
@property(readonly) _Bool prototypeIsBeingReplaced;
- (_Bool)propertiesAreChanging:(TSSPropertySet *)arg1;
- (_Bool)propertyIsChanging:(int)arg1;
@end

@protocol TSDRealignablePathSource
- (void)adjustGeometryForAlignToOrigin:(TSDMutableInfoGeometry *)arg1;
- (void)alignToOrigin;
- (struct CGPath *)pathWithoutFlips;
@end

@protocol TSDReducableInfo
- (struct CGSize)targetSizeForImageData:(TSPData *)arg1 associatedHint:(id <NSObject>)arg2;
- (TSUNoCopyDictionary *)imageDatasForReducingFileSizeWithAssociatedHints;
@end

@protocol TSDRepAnimationFiltering <NSObject>
- (id)animationForRepLayer:(CALayer *)arg1 withEvent:(NSString *)arg2;

@optional
- (id)animationForChildRep:(TSDRep *)arg1 layer:(CALayer *)arg2 withEvent:(NSString *)arg3;
@end

@protocol TSDRepLayerAndSubviewHostingProvider <NSObject>
@property(readonly, retain, nonatomic) id <TSDLayerAndSubviewHosting> layerAndSubviewHost;
@end

@protocol TSDRepTrackerDelegateCreation

@optional
- (id <TSDRepTrackerDelegate>)repTrackerDelegate;
- (id <TSDRepDragTrackerDelegate>)repDragTrackerDelegate;
@end

@protocol TSDSelectionStatisticsContributor <TSDInfo>
- (void)processSelectedStoragesWithStatisticsController:(NSObject<TSDSelectionStatisticsCalculator> *)arg1;
@end

@protocol TSDSmartPathSource
@property(readonly) unsigned long long numberOfControlKnobs;
- (struct CGPath *)newFeedbackPathForKnob:(unsigned long long)arg1;
- (NSString *)getFeedbackStringForKnob:(unsigned long long)arg1;
- (struct CGPoint)getControlKnobPosition:(unsigned long long)arg1;
- (void)setControlKnobPosition:(unsigned long long)arg1 toPoint:(struct CGPoint)arg2;

@optional
- (struct CGPoint)fixedPointForControlKnobChange;
@end

@protocol TSDSubcommandProvider <NSObject>
- (TSPObject *)modelForSelection;
@end

@protocol TSDTapGesture <TSDGesture>
@property(nonatomic) unsigned long long numberOfTapsRequired;
@end

@protocol TSDTextInput <TSDEditor>
@property(readonly, retain) UIView *inputAccessoryView;
@property(readonly, retain) UIView *inputView;
@property(readonly, nonatomic) struct _NSRange markedRange;
@property(readonly, retain, nonatomic) TSKSelection<TSDTextSelection> *textInputSelection;
- (struct _NSRange)rangeOfWordEnclosingCharIndex:(unsigned long long)arg1 backward:(_Bool)arg2;
- (_Bool)isCharIndex:(unsigned long long)arg1 withinTextUnit:(long long)arg2 inDirection:(long long)arg3;
- (unsigned long long)charIndexByMovingPosition:(TSDTextPosition *)arg1 toBoundary:(long long)arg2 inDirection:(long long)arg3 preferPosition:(double *)arg4;
- (_Bool)isCharIndex:(unsigned long long)arg1 withEolAffinity:(_Bool)arg2 atBoundary:(long long)arg3 inDirection:(long long)arg4;
- (void)clearMarkedRange;
- (void)setSelectionWithRange:(struct _NSRange)arg1 endOfLine:(_Bool)arg2;
- (TSKSelection<TSDTextSelection> *)selectionWithRange:(struct _NSRange)arg1;
- (UIFont *)textFontAtCharIndex:(unsigned long long)arg1;
- (UIColor *)textColorAtCharIndex:(unsigned long long)arg1;
- (void)replaceRange:(struct _NSRange)arg1 withText:(NSString *)arg2;
- (void)extendSelectionRight;
- (void)extendSelectionLeft;
- (void)setMarkedText:(NSString *)arg1 selectedRange:(struct _NSRange)arg2;
- (NSArray *)selectionRectsForRange:(struct _NSRange)arg1;
- (struct CGRect)firstRectForRange:(struct _NSRange)arg1;
- (void)insertText:(NSString *)arg1;
- (NSString *)textInRange:(struct _NSRange)arg1;
- (unsigned long long)textLength;
- (long long)returnKeyType;
- (_Bool)textIsVerticalAtCharIndex:(unsigned long long)arg1;
- (void)endEditing;
- (_Bool)wantsKeyboard;
- (struct _NSRange)editRange;

@optional
@property(retain, nonatomic) TSKSelection<TSDTextSelection> *selectionForArrowKeys;
@property(readonly) _Bool wantsRawArrowKeyEvents;
- (NSString *)unfilteredText;
- (void)insertTabIgnoringFieldEditor:(id)arg1;
- (void)insertNewlineIgnoringFieldEditor:(id)arg1;
- (NSArray *)keyCommands;
- (_Bool)isSecureTextEntry;
- (long long)autocorrectionType;
- (UIView *)textInputView;
- (void)insertDictationResult:(NSArray *)arg1;
- (void)arrowKeyReceivedInDirection:(int)arg1 withModifierKeys:(int)arg2;
- (_Bool)canResignFirstResponder;
- (unsigned long long)closestCharIndexToPoint:(struct CGPoint)arg1 isAtEndOfLine:(_Bool *)arg2;
- (void)insertColumnBreak:(id)arg1;
- (_Bool)acceptsColumnBreaks;
- (void)insertPageBreak:(id)arg1;
- (_Bool)acceptsPageBreaks;
- (void)insertLineBreak:(id)arg1;
- (_Bool)acceptsLineBreaks;
- (void)insertSectionBreak:(id)arg1;
- (_Bool)acceptsSectionBreaks;
- (void)insertTab:(id)arg1;
- (_Bool)acceptsTabs;
- (void)insertHyperlink:(id)arg1;
- (_Bool)acceptsHyperlink;
- (void)endEditingAndSelectParent:(id)arg1;
- (long long)writingDirectionForCharIndex:(unsigned long long)arg1;
- (void)setBaseWritingDirection:(long long)arg1 forParagraphsWithRange:(struct _NSRange)arg2;
@end

@protocol TSDTextSelection
@end

@protocol TSDTrackerManipulator
- (void)operationDidEnd;
- (_Bool)readyToEndOperation;
- (NSObject<TSDLayoutManipulatingTracker> *)tracker;
- (_Bool)allowTrackerManipulatorToTakeControl:(NSObject<TSDTrackerManipulator> *)arg1;

@optional
- (void)trackerManipulatorDidTakeControl:(NSObject<TSDTrackerManipulator> *)arg1;
- (void)didRelinquishControl;
- (void)willTakeControl;
- (void)operationWillEnd;
@end

@protocol TSDWrappable <NSObject>
@property(readonly, nonatomic) _Bool hasAlpha;
- (int)wrapFitType;
- (int)wrapDirection;
- (int)wrapType;
- (_Bool)isHTMLWrap;
- (TSDWrapPolygon *)wrapPolygon;
- (struct CGRect)boundsInRoot;
- (struct CGRect)boundsInfluencingExteriorWrap;
- (TSDAbstractLayout *)parent;
@end

@protocol TSDWrappableParent
@property(readonly, nonatomic) int wrapContainerMode;
- (NSArray *)descendentWrappables;
@end

@protocol TSDiOSCanvasViewControllerDelegate <NSObject>

@optional
- (_Bool)canvasViewController:(TSDiOSCanvasViewController *)arg1 enableSwipeGestureWithNumberOfTouches:(unsigned long long)arg2;
- (UIViewController *)viewControllerForPresentingAnnotationAuthorUI;
- (void)handleFindTapAtPoint:(struct CGPoint)arg1;
- (_Bool)inFindReplaceMode;
- (_Bool)allowEditMenuToAppear;
- (_Bool)isPopoverGestureInFlight;
- (Class)canvasViewClassOverride;
- (_Bool)shouldIgnoreTextGestures;
- (_Bool)canvasViewControllerShouldShowScaleFeedback:(TSDiOSCanvasViewController *)arg1;
- (_Bool)canvasViewController:(TSDiOSCanvasViewController *)arg1 shouldBeginTapHoldDragAtPoint:(struct CGPoint)arg2;
- (_Bool)allowTouchOutsideCanvasView:(UITouch *)arg1 forGesture:(UIGestureRecognizer *)arg2;
- (UIView *)viewForGestureRecognizer:(UIGestureRecognizer *)arg1;
@end

@protocol TSKAVPlayerControllerDelegate <NSObject>
- (void)playbackDidStopForPlayerController:(TSKAVPlayerController *)arg1;
- (void)playerController:(TSKAVPlayerController *)arg1 playbackDidFailWithError:(NSError *)arg2;
@end

@protocol TSKAccessControllerDelegate <NSObject>

@optional
- (void)willRelinquishReadLock;
- (void)didAcquireReadLock;
@end

@protocol TSKAnnotation <NSObject>
@property(readonly, nonatomic) int annotationDisplayStringType;
@property(readonly, nonatomic) int annotationType;
@end

@protocol TSKApplicationDelegate

@optional
- (long long)maximumFontSize;
@end

@protocol TSKCGColorProvider <NSObject>
- (struct CGColor *)cgColor;
@end

@protocol TSKChangeSourceObserver <NSObject>

@optional
- (void)asyncProcessChanges:(NSArray *)arg1 forChangeSource:(id)arg2;
- (void)syncProcessChanges:(NSArray *)arg1 forChangeSource:(id)arg2;
@end

@protocol TSKDocumentObject
- (void)wasRemovedFromDocumentRoot:(TSKDocumentRoot *)arg1;
- (void)willBeRemovedFromDocumentRoot:(TSKDocumentRoot *)arg1;
- (void)wasAddedToDocumentRoot:(TSKDocumentRoot *)arg1 context:(TSKAddedToDocumentContext *)arg2;
- (void)willBeAddedToDocumentRoot:(TSKDocumentRoot *)arg1 context:(TSKAddedToDocumentContext *)arg2;
@end

@protocol TSKDocumentRootProvider <NSObject>
@property(readonly, nonatomic) TSKDocumentRoot *documentRoot;
@end

@protocol TSKDocumentViewController
@property(readonly, nonatomic) NSArray *listLanguages;
@property(readonly, nonatomic) NSArray *bidiLanguages;
@property(readonly, nonatomic) _Bool isBiDiEnabled;
@property(readonly, nonatomic) NSArray *CJKLanguages;
@property(readonly, nonatomic) _Bool isCJKEnabled;
@property(readonly, retain, nonatomic) id documentRoot;
- (_Bool)isInspectorVisible;
- (_Bool)inFindReplaceMode;
- (_Bool)inPrintPreviewMode;
- (void)showInsertPopoverFromRect:(struct CGRect)arg1 popoverType:(int)arg2 withDoneButton:(_Bool)arg3;
- (_Bool)insertControllerIsVisible;
- (_Bool)toolsControllerIsVisible;
@end

@protocol TSKEncryptedDocumentExporter <TSKExporter>
- (void)setPassphrase:(NSString *)arg1 hint:(NSString *)arg2;

@optional
- (void)setCopyPassphrase:(NSString *)arg1 hint:(NSString *)arg2;
- (void)setPrintPassphrase:(NSString *)arg1 hint:(NSString *)arg2;
@end

@protocol TSKExporter <NSObject>
- (void)setProgressContext:(TSUProgressContext *)arg1;
- (TSUProgressContext *)progressContext;
- (_Bool)isCancelled;
- (void)quit;
- (void)cancel;
- (_Bool)exportToURL:(NSURL *)arg1 delegate:(id <TSKImportExportDelegate>)arg2 error:(id *)arg3;
- (id)initWithDocumentRoot:(TSKDocumentRoot *)arg1;

@optional
- (_Bool)isExportSupported;
- (NSString *)documentSpecificTypeUTI;
- (NSString *)savePanelMessage;
- (void)setOptions:(NSDictionary *)arg1;
- (void)setSaveToURL:(NSURL *)arg1;
- (void)setTypeUTI:(NSString *)arg1;
- (NSString *)typeUTI;
- (NSString *)exportPathForOutputPath:(NSString *)arg1;
- (_Bool)needsSupplementalFiles;
- (TSUProgress *)progress;
- (void)setUsePackageFormat:(_Bool)arg1;
- (void)setQuickLookThumbnail:(TSUImage *)arg1;
- (void)setBuildVersionHistory:(NSArray *)arg1;
@end

@protocol TSKFindReplaceDelegate <NSObject>
- (struct _NSRange)visibleRootIndexRange;
- (void)setSelection:(TSKSelection *)arg1 onModel:(NSObject *)arg2 withFlags:(unsigned long long)arg3;

@optional
- (_Bool)findReplaceController:(TSKFindReplaceController *)arg1 shouldSkipSearchReference:(id <TSKSearchReference>)arg2;
- (void)findReplaceControllerDidFindNoResults:(TSKFindReplaceController *)arg1;
- (void)findReplaceController:(TSKFindReplaceController *)arg1 didWrapInDirection:(unsigned long long)arg2;
- (void)willScrollToReference:(id <TSKSearchReference>)arg1;
@end

@protocol TSKHighlightArrayControllerProtocol <NSObject>
- (void)pulseAnimationDidStop:(TSKHighlightArrayController *)arg1;
- (TSUImage *)imageForSearchReference:(id <TSKSearchReference>)arg1 forPath:(struct CGPath *)arg2 shouldPulsate:(_Bool)arg3;
- (struct CGPath *)newPathForSearchReference:(id <TSKSearchReference>)arg1;

@optional
- (struct CGRect)rectForSearchReference:(id <TSKSearchReference>)arg1;
@end

@protocol TSKImportExportDelegate <NSObject>
- (void)removeWarning:(TSKWarning *)arg1;
- (void)addWarning:(TSKWarning *)arg1;
- (NSArray *)warnings;

@optional
@property(readonly, nonatomic) _Bool isBrowsingVersions;
@property(readonly, nonatomic) _Bool importingDesignDemoDoc;
- (void)showDownloadPermissionAlertIfNeededForDownloadingAssetsWithEstimatedDownloadSize:(long long)arg1 isPrecise:(_Bool)arg2 completion:(void (^)(_Bool))arg3;
- (void)addIncompatibleMovieInfo:(TSDMovieInfo *)arg1 withCompatibilityLevel:(long long)arg2;
@end

@protocol TSKKeyboardObserver <NSObject>

@optional
- (void)keyboardDidChangeFrame:(NSNotification *)arg1;
- (void)keyboardWillChangeFrame:(NSNotification *)arg1;
- (void)keyboardHideCanceled;
- (void)keyboardDidHideOrUndock:(NSNotification *)arg1;
- (void)keyboardWillHideOrUndock:(NSNotification *)arg1;
- (void)keyboardShowCanceled;
- (void)keyboardDidShowOrDock:(NSNotification *)arg1;
- (void)keyboardWillShowOrDock:(NSNotification *)arg1;
@end

@protocol TSKModalShieldDelegate
- (void)shieldViewReceivedTap;
@end

@protocol TSKModel <NSObject>

@optional
- (void)acceptVisitor:(id <TSKModelVisitor>)arg1;
- (NSString *)modelPathComponentForChild:(id <TSKModel>)arg1;
- (NSEnumerator *)childEnumerator;
@end

@protocol TSKPopoverBasedViewControllerDelegate <NSObject>

@optional
- (void)popoverController:(TSKPopoverBasedViewController *)arg1 learnMoreAPDIDTapped:(NSString *)arg2;
- (double)paddingAboveHalfHeightAtTopOfScreen;
- (_Bool)popoverController:(TSKPopoverBasedViewController *)arg1 shouldReceiveOutsideTouchAtLocation:(struct CGPoint)arg2 inView:(UIView *)arg3;
- (_Bool)wantsCloseArrowForPopoverBasedViewController:(TSKPopoverBasedViewController *)arg1;
- (void)popoverControllerDidDismissPopoverBasedViewController:(TSKPopoverBasedViewController *)arg1;
- (void)popoverControllerWillDismissPopoverBasedViewController:(TSKPopoverBasedViewController *)arg1;
- (void)popoverControllerWillShowPopoverBasedViewController:(TSKPopoverBasedViewController *)arg1;
@end

@protocol TSKPopoverBasedViewControllerDismissible
- (_Bool)wantsDismissButton;
@end

@protocol TSKPulseAnimationControllerProtocol
- (void)pulseAnimationDidStopForPulse:(TSKPulseAnimationController *)arg1;
@end

@protocol TSKScrollViewDelegate <UIScrollViewDelegate>

@optional
- (void)scrollView:(TSKScrollView *)arg1 willAnimateToContentOffset:(struct CGPoint)arg2;
- (void)scrollViewDidEndSwipe:(TSKScrollView *)arg1;
- (void)scrollViewDidEndScrollingAnimation:(TSKScrollView *)arg1;
- (void)scrollViewDidEndDecelerating:(TSKScrollView *)arg1;
- (void)scrollViewDidEndDragging:(TSKScrollView *)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewWillBeginDragging:(TSKScrollView *)arg1;
- (struct CGPoint)scrollView:(TSKScrollView *)arg1 restrictContentOffset:(struct CGPoint)arg2;
- (void)scrollViewDidLayoutSubviews:(TSKScrollView *)arg1;
- (void)scrollViewDidScroll:(TSKScrollView *)arg1;
- (_Bool)allowsVerticalRubberbandingForScrollView:(TSKScrollView *)arg1;
- (_Bool)allowsHorizontalScrollingForScrollView:(TSKScrollView *)arg1;
- (void)scrollViewWillScroll:(TSKScrollView *)arg1;
@end

@protocol TSKSearchReference <NSObject, NSCopying>
@property(retain, nonatomic) id <TSKAnnotation> annotation;
@property(nonatomic) _Bool autohideHighlight;
@property(nonatomic) _Bool pulseHighlight;
@property(retain, nonatomic) NSArray *findHighlights;
@property(nonatomic) struct CGPoint searchReferencePoint;
- (_Bool)isReplaceable;
- (TSKSelection *)selection;
- (id <TSKModel>)model;
- (id <TSKSearchReference>)searchReferenceEnd;
- (id <TSKSearchReference>)searchReferenceStart;
- (id <TSKSearchReference>)searchReferenceForReplacingWithString:(NSString *)arg1 options:(unsigned long long)arg2 authorCreatedWithCommand:(id *)arg3;
- (TSKCommand *)commandForReplacingWithString:(NSString *)arg1 options:(unsigned long long)arg2;
@end

@protocol TSKSearchTarget <NSObject>

@optional
- (void)layoutSearchForSpellingErrorsWithHitBlock:(void (^)(id <TSKSearchReference>))arg1 stop:(_Bool *)arg2;
- (void)layoutSearchForAnnotationWithHitBlock:(void (^)(id <TSKSearchReference>))arg1;
- (NSArray *)childAnnotationSearchTargets;
- (NSArray *)childSearchTargets;
- (void)layoutSearchForString:(NSString *)arg1 options:(unsigned long long)arg2 hitBlock:(void (^)(id <TSKSearchReference>))arg3;
@end

@protocol TSKSearchTargetProvider <NSObject>
- (unsigned long long)nextRootSearchTargetIndexFromIndex:(unsigned long long)arg1 forString:(NSString *)arg2 options:(unsigned long long)arg3 inDirection:(unsigned long long)arg4;
- (void)withRootSearchTargetAtIndex:(unsigned long long)arg1 executeBlock:(void (^)(id <TSKSearchTarget>))arg2;
- (unsigned long long)rootSearchTargetCountThroughIndex:(unsigned long long)arg1;
@end

@protocol TSKSearchable <TSKModel>

@optional
- (TSKReplaceAllChildCommand *)childCommandForReplaceAllCommand:(TSKReplaceAllCommand *)arg1;
- (void)continueAnnotationSearch:(TSKSearch *)arg1;
- (void)continueSearch:(TSKSearch *)arg1;
- (TSKSearch *)searchForAnnotationsWithHitBlock:(void (^)(id <TSKSearchReference>))arg1;
- (TSKSearch *)searchForString:(NSString *)arg1 options:(unsigned long long)arg2 onHit:(void (^)(id <TSKSearchReference>))arg3;
@end

@protocol TSKStyleMapper <NSObject>
- (void)varyInThemeStylesheetIf:(_Bool)arg1 forDurationOfBlock:(void (^)(void))arg2;
- (void)varyInThemeStylesheetForDurationOfBlock:(void (^)(void))arg1;
- (TSSStyle *)mappedStyleForStyle:(TSSStyle *)arg1 inThemeStylesheet:(_Bool)arg2;
- (TSSStyle *)mappedStyleForStyle:(TSSStyle *)arg1;
- (void)popMappingContext:(id)arg1;
- (void)pushMappingContext:(id)arg1;
- (TSSStylesheet *)targetStylesheet;
@end

@protocol TSKTransformableObject <NSObject>
@end

@protocol TSPComponentWriteChannel <NSObject>
- (void)close;
- (void)writeData:(NSObject<OS_dispatch_data> *)arg1;
@end

@protocol TSPCopying
- (id)copyWithContext:(TSPObjectContext *)arg1;
@end

@protocol TSPDataCullingListener <NSObject>
- (void)willCullData:(TSPData *)arg1;
@end

@protocol TSPDataStorage <NSObject>
@property(readonly, nonatomic) _Bool readOnly;
@property(readonly, nonatomic) unsigned long long encodedLength;
@property(readonly, nonatomic) unsigned char packageIdentifier;
@property(readonly, nonatomic) NSString *packageLocator;
@property(readonly, nonatomic) NSString *documentResourceLocator;
- (void)performReadWithAccessor:(void (^)(NSURL *))arg1;
- (void)performIOChannelReadWithAccessor:(void (^)(id <TSUReadChannel>))arg1;
- (_Bool)isInPackage:(id <TSPPackage>)arg1;
- (NSString *)filenameForPreferredFilename:(NSString *)arg1;
- (AVAsset *)AVAssetWithOptions:(NSDictionary *)arg1 usingResourceLoaderWithContentTypeUTI:(NSString *)arg2;
- (AVAsset *)AVAssetWithOptions:(NSDictionary *)arg1 contentTypeUTI:(NSString *)arg2;
- (NSData *)NSDataWithOptions:(unsigned long long)arg1;
- (struct CGImageSource *)newCGImageSource;
- (struct CGDataProvider *)newCGDataProvider;
- (NSData *)bookmarkDataWithOptions:(unsigned long long)arg1;

@optional
@property(readonly, nonatomic) SFUCryptoKey *decryptionKey;
@property(readonly, nonatomic) _Bool needsDownload;
- (void)addDownloadObserver:(id)arg1 forData:(TSPData *)arg2 completionHandler:(void (^)(id, TSPData *, long long))arg3;
- (_Bool)copyToTemporaryURL:(NSURL *)arg1;
- (id)storageForDataCopyFromOtherContext;
@end

@protocol TSPDocumentResourceDownloader <NSObject>
@property(readonly, nonatomic) _Bool isEstimatedDownloadSizePrecise;
@property(readonly, nonatomic) long long estimatedDownloadSize;
@property(readonly, nonatomic) _Bool needsDownload;
@end

@protocol TSPFileCoordinatorDelegate <NSObject>
@end

@protocol TSPLazyReferenceDelegate <NSObject>
- (TSPObject *)objectForIdentifier:(long long)arg1;

@optional
- (void)lazyReference:(TSPLazyReference *)arg1 didCreateCopy:(TSPLazyReference *)arg2;
@end

@protocol TSPObjectContextDelegate <TSPSupportDirectoryDelegate>

@optional
@property(readonly, nonatomic) _Bool areNewExternalReferencesToDataAllowed;
@property(readonly, nonatomic) _Bool isDocumentSupportTemporary;
@property(readonly, nonatomic) _Bool ignoreDocumentSupport;
@property(readonly, nonatomic) id <NSFilePresenter> filePresenter;
- (void)context:(TSPObjectContext *)arg1 didDownloadDocumentResources:(NSArray *)arg2 failedOrCancelledDocumentResources:(NSArray *)arg3 error:(NSError *)arg4;
- (NSSet *)persistenceWarningsForData:(TSPData *)arg1 isReadable:(_Bool)arg2 isExternal:(_Bool)arg3;
- (_Bool)areExternalReferencesToDataAllowedAtURL:(NSURL *)arg1;
- (NSDictionary *)additionalDocumentPropertiesForWrite;
- (NSDictionary *)packageDataForWrite;
- (void)decryptedDocumentWithKey:(SFUCryptoKey *)arg1;
- (_Bool)retrievePassphraseWithConsumer:(id <TSPPassphraseConsumer>)arg1;
- (void)makeDocumentReadOnly;
- (void)addPersistenceWarnings:(NSSet *)arg1;
- (void)presentPersistenceError:(NSError *)arg1;
@end

@protocol TSPObjectDelegate <TSPObjectModifyDelegate>
@property(readonly, nonatomic) TSPObjectContext *context;
- (long long)newObjectIdentifier;
- (long long)modifyObjectTokenForNewObject;
@end

@protocol TSPObjectModifyDelegate <NSObject>
@end

@protocol TSPPassphraseConsumer <NSObject>

@optional
@property(readonly, nonatomic) NSString *service;
@property(readonly, nonatomic) NSData *keychainGenericItem;
@property(readonly, nonatomic) NSString *passphraseHint;
@end

@protocol TSPSupportDirectoryDelegate <NSObject>

@optional
- (NSURL *)supportDirectoryURL;
@end

@protocol TSSPreset <TSSThemeAsset>
@property(readonly, nonatomic) NSString *presetKind;

@optional
- (void)drawSwatchInRect:(struct CGRect)arg1 inContext:(struct CGContext *)arg2;
@end

@protocol TSSPresetSource
+ (void)bootstrapPresetsOfKind:(NSString *)arg1 inTheme:(TSSTheme *)arg2 alternate:(int)arg3;
+ (NSSet *)presetKinds;
@end

@protocol TSSPropertySource <NSObject>
- (double)CGFloatValueForProperty:(int)arg1;
- (double)doubleValueForProperty:(int)arg1;
- (float)floatValueForProperty:(int)arg1;
- (int)intValueForProperty:(int)arg1;
- (id)objectForProperty:(int)arg1;
- (id)boxedObjectForProperty:(int)arg1;
- (_Bool)containsProperty:(int)arg1;
@end

@protocol TSSPropertyValueValidator
+ (_Bool)validateObjectValue:(id *)arg1 withClass:(Class)arg2 forProperty:(int)arg3;
+ (_Bool)validateDoubleValue:(double *)arg1 forProperty:(int)arg2;
+ (_Bool)validateFloatValue:(float *)arg1 forProperty:(int)arg2;
+ (_Bool)validateIntValueAsBool:(int *)arg1 forProperty:(int)arg2;
+ (_Bool)validateIntValue:(int *)arg1 forProperty:(int)arg2 min:(int)arg3 max:(int)arg4;
+ (_Bool)validateIntValue:(int *)arg1 forProperty:(int)arg2;
+ (TSSPropertySet *)propertiesAllowingNSNull;
- (_Bool)validateObjectValue:(id *)arg1 withClass:(Class)arg2 forProperty:(int)arg3;
- (_Bool)validateDoubleValue:(double *)arg1 forProperty:(int)arg2;
- (_Bool)validateFloatValue:(float *)arg1 forProperty:(int)arg2;
- (_Bool)validateIntValueAsBool:(int *)arg1 forProperty:(int)arg2;
- (_Bool)validateIntValue:(int *)arg1 forProperty:(int)arg2 min:(int)arg3 max:(int)arg4;
- (_Bool)validateIntValue:(int *)arg1 forProperty:(int)arg2;
@end

@protocol TSSStyleClient <TSKModel>
- (void)replaceReferencedStylesUsingBlock:(TSSStyle * (^)(TSSStyle *))arg1;
- (NSSet *)referencedStyles;
@end

@protocol TSSStyleObject
@end

@protocol TSSThemeAsset
- (_Bool)isThemeEquivalent:(id <TSSThemeAsset>)arg1;

@optional
- (SEL)mapThemePropertyMapSelector;
- (SEL)mapThemeStyleSelector;
- (SEL)mapThemeAssetSelector;
- (SEL)mapThemePresetsSelector;
@end

@protocol TSSThemedObject <TSKModel>
@end

@protocol TSTCellMap <NSObject>
@property(nonatomic) _Bool appliesToHidden;
- (void)setMayModifyValuesReferencedByFormulas:(_Bool)arg1;
- (_Bool)mayModifyValuesReferencedByFormulas;
- (_Bool)mayModifyFormulasInCells;
- (TSTCell *)cellAtIndex:(unsigned long long)arg1;
- (CDStruct_0441cfb5)cellIDAtIndex:(unsigned long long)arg1;
- (_Bool)containsCellID:(CDStruct_0441cfb5)arg1;
- (CDStruct_0441cfb5 *)cellIDs;
- (void)popLastCell;
- (void)addCell:(TSTCell *)arg1 andCellID:(CDStruct_0441cfb5)arg2;
- (unsigned long long)count;
@end

@protocol TSTCellRegionIterating <NSObject>
- (void)terminate;
- (CDStruct_0441cfb5)getNext;
- (id)initWithCellRegion:(TSTCellRegion *)arg1;
@end

@protocol TSTLayoutDynamicContentProtocol <NSObject>
- (_Bool)dynamicContentMustDrawOnMainThread;
- (_Bool)cell:(id *)arg1 forCellID:(CDStruct_0441cfb5)arg2;

@optional
- (_Bool)mergeRange:(CDStruct_5f1f7aa9 *)arg1 forCellID:(CDStruct_0441cfb5)arg2;
@end

@protocol TSTLayoutDynamicResizeInfoProtocol <NSObject>
- (void)captureNewMinimumRowHeights:(TSTMasterLayout *)arg1;
- (double)applyResizeWidthFactor:(double)arg1;
- (double)applyResizeHeightFactor:(double)arg1;
- (double)getColumnWidthResize:(unsigned char)arg1;
- (double)getRowHeightResize:(unsigned short)arg1;
- (double)getColumnWidth:(unsigned char)arg1;
- (double)getRowHeight:(unsigned short)arg1;
- (double)getColumnInitialWidth:(unsigned char)arg1;
- (double)getRowInitialHeight:(unsigned short)arg1;
- (_Bool)hasWidthForColumn:(unsigned char)arg1;
- (_Bool)hasHeightForRow:(unsigned short)arg1;
- (void)invalidate;
- (_Bool)valid;
- (id)initWithDynamicResizeInfo:(id <TSTLayoutDynamicResizeInfoProtocol>)arg1;
- (id)initWithMasterLayout:(TSTMasterLayout *)arg1 rowRegion:(TSTCellRegion *)arg2;
- (id)initWithMasterLayout:(TSTMasterLayout *)arg1 columnRegion:(TSTCellRegion *)arg2;
- (id)initWithMasterLayout:(TSTMasterLayout *)arg1;
@end

@protocol TSTTableHeaderStorage <NSObject>
- (unsigned int)lowerBound:(unsigned int)arg1;
- (unsigned int)upperBound:(unsigned int)arg1;
- (unsigned int)maxKey;
- (unsigned int)minKey;
- (long long)count;
- (void)shiftKeysAtIndex:(unsigned int)arg1 amount:(int)arg2;
- (void)applyFunction:(CDUnknownFunctionPointerType)arg1 withState:(void *)arg2 willModify:(_Bool)arg3;
- (void)makeHeadersPerformSelector:(SEL)arg1 willModify:(_Bool)arg2;
- (void)removeAllHeaders;
- (void)removeHeaderForKey:(unsigned int)arg1;
- (void)setHeader:(TSTTableHeaderInfo *)arg1 forKey:(unsigned int)arg2;
- (TSTTableHeaderInfo *)headerForKey:(unsigned int)arg1 willModify:(_Bool)arg2 createIfNotThere:(_Bool)arg3;
- (TSTTableHeaderInfo *)headerForKey:(unsigned int)arg1 willModify:(_Bool)arg2;
@end

@protocol TSUStreamReadChannel <NSObject>
- (void)close;
- (void)readWithQueue:(NSObject<OS_dispatch_queue> *)arg1 handler:(void (^)(_Bool, NSObject<OS_dispatch_data> *, NSError *))arg2;
@end

@protocol TSWPChangeSessionManager
@property(readonly, nonatomic) _Bool isTrackingChanges;
- (void)startNewChangeSessionIfNecessaryGettingInsertAuthorCommand:(id *)arg1;
- (TSWPChangeSession *)changeSessionAuthorCreatedWithCommand:(id *)arg1;
@end

@protocol TSWPColumnMetrics
@property(readonly, nonatomic) _Bool columnsAreLeftToRight;
@property(readonly, nonatomic) _Bool shrinkTextToFit;
@property(readonly, nonatomic) _Bool alwaysStartsNewTarget;
@property(readonly, nonatomic) unsigned long long columnCount;
@property(readonly, nonatomic) TSWPPadding *layoutMargins;
@property(readonly, nonatomic) struct CGSize adjustedInsets;
- (double)positionForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2 outWidth:(double *)arg3 outGap:(double *)arg4;
- (double)gapForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2;
- (double)widthForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2;

@optional
@property(readonly, nonatomic) double textScaleFactor;
@end

@protocol TSWPDataDetectorProtocol <NSObject>
+ (NSArray *)scanString:(NSString *)arg1 scanRange:(struct _NSRange)arg2;
+ (struct _NSRange)calculateScanRangeForString:(NSString *)arg1 changedRange:(struct _NSRange)arg2;
+ (NSString *)detectorIdentifier;
@end

@protocol TSWPEditingControllerDelegate <NSObject>

@optional
@property(readonly, nonatomic) _Bool editorAllowsListInteraction;
@property(readonly, nonatomic) _Bool editorAllowsRubyInteraction;
@property(readonly, nonatomic) _Bool editorAllowsHyperlinkInteraction;
@property(readonly, nonatomic) _Bool editorAllowsCaret;
@property(readonly, nonatomic) _Bool editorAllowsKeyboard;
@property(readonly, nonatomic) _Bool editorAllowsParagraphMode;
@property(readonly, nonatomic) _Bool editorAllowsMagnifier;
@property(readonly, nonatomic) _Bool editorAllowsEditMenu;
@property(readonly, nonatomic) _Bool editorShouldAlwaysBeInParagraphMode;
- (void)didSetTappedSelectionWithWPEditor:(TSWPEditingController *)arg1 onWPRep:(TSWPRep *)arg2;
- (_Bool)disallowEditingOfTextStringWithStorage:(TSWPStorage *)arg1;
- (UIView *)formatBarAccessoryView;
- (UIViewController *)viewControllerForPresenting;
- (void)knobTrackingDidEnd;
- (void)knobTrackingDidBegin;
- (void)showCustomEditMenuForStorage:(TSWPStorage *)arg1 range:(struct _NSRange)arg2;
- (_Bool)willChangeContentOffsetIfKeyboardHidden;
- (void)filterPasteboardTextStorages:(NSArray *)arg1 forTargetStorage:(TSWPStorage *)arg2;
- (id <TSWPStyleProvider>)styleProviderForStorage:(TSWPStorage *)arg1;
- (void)editingController:(TSWPEditingController *)arg1 willDeleteCharactersInRange:(struct _NSRange)arg2;
@end

@protocol TSWPFootnoteHeightMeasurer
@end

@protocol TSWPFootnoteMarkProvider <NSObject>
- (NSString *)markStringForFootnoteReferenceStorage:(TSWPStorage *)arg1;
@end

@protocol TSWPGraphicalAttachmentRenderer <NSObject>
- (void)drawAttachment:(TSWPUIGraphicalAttachment *)arg1 inContext:(struct CGContext *)arg2 selection:(TSWPSelection *)arg3;
@end

@protocol TSWPHyperlinkHostRepProtocol <NSObject>
- (TSDRep *)hyperlinkContainerRep;
- (void)willDisplayEditHyperlinkUIForHyperlinkField:(TSWPHyperlinkField *)arg1 beginEditing:(_Bool)arg2;
- (struct CGRect)naturalBoundsRectForHyperlinkField:(TSWPHyperlinkField *)arg1;
- (void)setHighlightedHyperlinkField:(TSWPHyperlinkField *)arg1;
- (TSWPSmartField *)smartFieldAtPoint:(struct CGPoint)arg1;

@optional
- (_Bool)shouldDismissHyperlinkUIOnApplicationEnterBackground;
- (_Bool)shouldUseHyperlinkHighlight;
- (void)didDismissEditHyperlinkUIForHyperlinkField:(TSWPHyperlinkField *)arg1;
- (TSWPHyperlinkField *)hyperlinkFieldForEditingHyperlinkField:(TSWPHyperlinkField *)arg1;
@end

@protocol TSWPInteractiveCanvasControllerDelegate <TSDInteractiveCanvasControllerDelegate>

@optional
@property(readonly, nonatomic) _Bool interactiveCanvasControllerAllowsHyperlinkInteraction;
- (_Bool)interactiveCanvasController:(TSWPInteractiveCanvasController *)arg1 tappedOnFootnoteAttachment:(TSWPFootnoteReferenceAttachment *)arg2;
- (void)showInsertPageNumberUIFromRect:(struct CGRect)arg1 inView:(UIView *)arg2;
- (TSWPTwoPartAction *)actionForHyperlink:(TSWPHyperlinkField *)arg1 inRep:(TSDRep<TSWPHyperlinkHostRepProtocol> *)arg2 gesture:(id <TSDGesture>)arg3;
@end

@protocol TSWPLayoutOwner <NSObject>
- (TSWPLineHintCollection *)lineHintsForTarget:(TSDLayout<TSWPLayoutTarget> *)arg1;
- (id <TSWPTextWrap>)textWrapper;
- (void)layoutManager:(TSWPLayoutManager *)arg1 didClearDirtyRangeWithDelta:(long long)arg2 afterCharIndex:(unsigned long long)arg3;
- (void)layoutManagerNeedsLayout:(TSWPLayoutManager *)arg1;
- (_Bool)caresAboutStorageChanges;

@optional
- (_Bool)shouldAllowFinishingPartionedAttachmentLayout;
- (TSUColor *)textColorOverride;
- (_Bool)invalidateOnExactTextRangeLayout;
- (_Bool)forceWesternLineBreaking;
- (id <TSWPStyleProvider>)styleProvider;
@end

@protocol TSWPLayoutParent
- (Class)repClassForTextLayout:(TSWPLayout *)arg1;
- (id <NSFastEnumeration>)dependentsOfTextLayout:(TSWPLayout *)arg1;
- (struct CGRect)autosizedFrameForTextLayout:(TSWPLayout *)arg1 textSize:(struct CGSize)arg2;
- (struct CGRect)nonAutosizedFrameForTextLayout:(TSWPLayout *)arg1;
- (void)invalidateForAutosizingTextLayout:(TSWPLayout *)arg1;
- (unsigned int)verticalAlignmentForTextLayout:(TSWPLayout *)arg1;
- (unsigned int)autosizeFlagsForTextLayout:(TSWPLayout *)arg1;

@optional
- (_Bool)shouldHyphenateTextLayout:(TSWPLayout *)arg1;
- (unsigned long long)pageNumberForAttachment:(TSWPAttachment *)arg1;
- (unsigned long long)pageCountForAttachment:(TSWPAttachment *)arg1;
- (struct CGSize)initialTextSize;
- (unsigned int)naturalAlignmentForTextLayout:(TSWPLayout *)arg1;
- (struct CGRect)maskRectForTextLayout:(TSWPLayout *)arg1;
- (unsigned int)textLayoutShouldIgnoreEquationAlignment:(TSWPLayout *)arg1;
- (unsigned int)maxLineCountForTextLayout:(TSWPLayout *)arg1;
- (_Bool)allowsLastLineTruncation:(TSWPLayout *)arg1;
- (_Bool)textLayoutShouldLayoutVertically:(TSWPLayout *)arg1;
- (_Bool)textLayoutShouldWrapAroundExternalDrawables:(TSWPLayout *)arg1;
- (unsigned long long)initialCharIndex;
- (double)maxAutoGrowHeightForTextLayout:(TSWPLayout *)arg1;
- (double)maxAutoGrowWidthForTextLayout:(TSWPLayout *)arg1;
- (id <TSWPStyleProvider>)styleProviderForStorage:(TSWPStorage *)arg1;
- (id <TSWPStyleProvider>)styleProviderForLayout:(TSWPLayout *)arg1;
@end

@protocol TSWPLayoutParentHost
- (TSDLayout<TSWPLayoutParent> *)wpLayoutParentForLayout:(TSWPLayout *)arg1;
@end

@protocol TSWPLayoutTarget <NSObject>
@property(readonly, nonatomic) double maxAnchorY;
@property(readonly, nonatomic) _Bool layoutIsValid;
@property(readonly, nonatomic) _Bool textIsVertical;
@property(readonly, nonatomic) unsigned long long pageCount;
@property(readonly, nonatomic) unsigned long long pageNumber;
@property(readonly, nonatomic) _Bool wantsLineFragments;
@property(readonly, nonatomic) int naturalDirection;
@property(readonly, nonatomic) unsigned int naturalAlignment;
@property(readonly, nonatomic) unsigned int verticalAlignment;
@property(readonly, nonatomic) unsigned int autosizeFlags;
@property(readonly, nonatomic) struct CGPoint anchorPoint;
@property(readonly, nonatomic) struct CGPoint position;
@property(readonly, nonatomic) struct CGSize currentSize;
@property(readonly, nonatomic) struct CGSize maxSize;
@property(readonly, nonatomic) struct CGSize minSize;
@property(readonly, nonatomic) TSPObject<TSDHint> *nextTargetFirstChildHint;
@property(readonly, nonatomic) id <TSWPFootnoteMarkProvider> footnoteMarkProvider;
@property(readonly, nonatomic) id <TSWPFootnoteHeightMeasurer> footnoteHeightMeasurer;
@property(readonly, nonatomic) const struct TSWPTopicNumberHints *nextTargetTopicNumbers;
@property(readonly, retain, nonatomic) id <TSWPOffscreenColumn> nextTargetFirstColumn;
@property(readonly, nonatomic) const struct TSWPTopicNumberHints *previousTargetTopicNumbers;
@property(readonly, retain, nonatomic) id <TSWPOffscreenColumn> previousTargetLastColumn;
@property(readonly, retain, nonatomic) NSMutableArray *columns;
- (_Bool)isLayoutOffscreen;
- (void)addAttachmentLayout:(TSDLayout *)arg1;
- (NSArray *)currentAnchoredDrawableLayouts;
- (NSArray *)currentInlineDrawableLayouts;
- (TSDLayout *)validatedLayoutForAnchoredDrawable:(id <TSDInfo>)arg1;
- (TSDLayout *)layoutForInlineDrawable:(id <TSDInfo>)arg1;
- (unsigned long long)iterativeAttachmentPositioningMaxPassCount;
- (_Bool)shouldPositionAttachmentsIteratively;
- (struct CGRect)targetRectForCanvasRect:(struct CGRect)arg1;
- (void)setNeedsDisplayInTargetRect:(struct CGRect)arg1;
- (_Bool)isLastTarget;
- (NSObject<TSWPColumnMetrics> *)columnMetricsForCharIndex:(unsigned long long)arg1 outRange:(struct _NSRange *)arg2;

@optional
@property(readonly, nonatomic) _Bool alwaysAllowWordSplit;
@property(readonly, nonatomic) _Bool pushAscendersIntoColumn;
@property(readonly, nonatomic) _Bool allowsDescendersToClip;
@property(readonly, nonatomic) _Bool ignoresEquationAlignment;
@property(readonly, nonatomic) unsigned int maxLineCount;
@property(readonly, nonatomic) _Bool allowsLastLineTruncation;
@property(readonly, nonatomic) struct __CFLocale *hyphenationLocale;
@property(readonly, nonatomic) _Bool shouldHyphenate;
@property(readonly, nonatomic) TSDLayout *parentLayoutForInlineAttachments;
@property(readonly, nonatomic) TSDCanvas *canvas;
@property(retain, nonatomic) NSMutableArray *anchoredDrawablesForRelayout;
@property(readonly, nonatomic) struct CGRect maskRect;
- (_Bool)adjustColumnOriginForAlignment;
- (_Bool)siblingTargetIsManipulatingDrawable:(TSDDrawableInfo *)arg1;
- (TSDBezierPath *)interiorClippingPath;
- (_Bool)invalidateForPageCountChange;
- (unsigned int)pageIndex;
- (void)drawableAttachment:(TSWPDrawableAttachment *)arg1 didFinalizePosition:(struct CGPoint)arg2;
- (void)drawableAttachment:(TSWPDrawableAttachment *)arg1 willStartNewIterationWithIndex:(unsigned long long)arg2;
- (void)startedIterativePositioningProcessForDrawableAttachment:(TSWPDrawableAttachment *)arg1;
- (struct CGPoint)anchoredAttachmentPositionFromLayoutPosition:(struct CGPoint)arg1;
- (struct CGPoint)layoutPositionFromAnchoredAttachmentPosition:(struct CGPoint)arg1;
- (struct CGPoint)layoutPositionFromInlineAttachmentPosition:(struct CGPoint)arg1;
@end

@protocol TSWPLineFragmentAdornment <NSObject>
@property(readonly, nonatomic) _Bool isBackground;
- (void)drawAdornmentForFragment:(const struct TSWPLineFragment *)arg1 inContext:(struct CGContext *)arg2 withFlags:(unsigned int)arg3 state:(const struct TSWPDrawingState *)arg4 bounds:(struct CGRect)arg5;
@end

@protocol TSWPOffscreenColumn <NSObject>
@property(readonly, nonatomic) unsigned long long nextWidowPullsDownFromCharIndex;
@property(readonly, nonatomic) struct _NSRange anchoredRange;
@property(readonly, nonatomic) unsigned long long startAnchoredCharIndex;
@property(readonly, nonatomic) struct _NSRange range;
@property(readonly, nonatomic) unsigned long long startCharIndex;
- (void)trimToCharIndex:(unsigned long long)arg1 inTarget:(id <TSWPLayoutTarget>)arg2 removeAutoNumberFootnoteCount:(unsigned long long)arg3;
@end

@protocol TSWPReferenceLibraryViewControllerDelegate <NSObject>
- (void)referenceLibrarayViewControllerWasDismissed:(TSWPReferenceLibraryViewController *)arg1;
@end

@protocol TSWPReplaceAction <NSObject>
- (struct _NSRange)insertedRange;
- (long long)delta;
- (unsigned long long)targetCharIndex;
- (void)performWithStorage:(TSWPStorage *)arg1 delta:(long long)arg2 undoTransaction:(struct TSWPStorageTransaction *)arg3 replaceBlock:(void (^)(TSWPSelection *, NSString *))arg4;
@end

@protocol TSWPSection
- (TSWPStorage *)parentStorage;
- (void)setParentStorage:(TSWPStorage *)arg1;
@end

@protocol TSWPShapeLayoutDelegate
- (void)shapeLayoutDidChangeContainedStorage:(TSWPShapeLayout *)arg1;
- (_Bool)shapeLayoutShouldUpdateInstructionalText:(TSWPShapeLayout *)arg1;
@end

@protocol TSWPStorageObserver
- (void)storage:(TSWPStorage *)arg1 didChangeRange:(struct _NSRange)arg2 delta:(long long)arg3 broadcastKind:(int)arg4;
@end

@protocol TSWPStorageParent
@property(readonly, nonatomic) long long contentWritingDirection;
- (_Bool)textIsVertical;
- (_Bool)autoListTermination;
- (_Bool)autoListRecognition;
@end

@protocol TSWPStyleProvider <NSObject>
- (TSWPParagraphStyle *)paragraphStyleAtParIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;

@optional
@property(readonly, nonatomic) _Bool supportsBoldItalicUnderlineShortcuts;
- (id <TSWPCoreTextPropertiesFilterDelegate>)coreTextPropertiesFilterDelegateAtParIndex:(unsigned long long)arg1;
- (unsigned long long)paragraphLevelAtParIndex:(unsigned long long)arg1;
- (TSWPParagraphStyle *)listLabelParagraphStyleOverrideAtParIndex:(unsigned long long)arg1;
- (unsigned long long)listNumberAtParIndex:(unsigned long long)arg1 numberingData:(CDStruct_b9fbe577 *)arg2;
- (TSWPListStyle *)listStyleAtParIndex:(unsigned long long)arg1;
- (TSWPCharacterStyle *)modifiedCharacterStyle:(TSWPCharacterStyle *)arg1 atCharIndex:(unsigned long long)arg2;
@end

@protocol TSWPTextDelegate
- (TSWPPadding *)padding;
- (unsigned int)verticalAlignment;

@optional
- (_Bool)forceWesternLineBreaking;
- (_Bool)adjustColumnOriginForAlignment;
@end

@protocol TSWPTextEditingHostLayout <NSObject>
@property(retain, nonatomic) TSWPShapeInfo *editingShape;
@end

@protocol TSWPTextEditingHostRep <NSObject>
- (void)tswpTextEditingDidEndEditing:(TSWPTextEditing *)arg1;
@end

@protocol TSWPTextMagnifier <NSObject>
@property(nonatomic) struct CGPoint animationPoint;
@property(nonatomic) struct CGPoint offset;
@property(nonatomic) struct CGPoint magnificationPoint;
@property(readonly, nonatomic) _Bool terminalPointPlacedCarefully;
@property(readonly, nonatomic) struct CGPoint terminalPoint;
@property(retain, nonatomic) TSWPRep *target;
- (void)autoscrollWillNotStart;
- (void)setAutoscrollDirections:(int)arg1;
- (void)postAutoscrollPoint:(struct CGPoint)arg1;
- (void)stopMagnifying:(_Bool)arg1;
- (void)beginMagnifyingTarget:(TSWPRep *)arg1 magnificationPoint:(struct CGPoint)arg2 offset:(struct CGPoint)arg3 animated:(_Bool)arg4;
@end

@protocol TSWPTextMagnifierRendererDelegate
@property(readonly, nonatomic) NSString *maskImageName;
@property(readonly, nonatomic) NSString *overlayImageName;
@property(readonly, nonatomic) NSString *underlayImageName;
- (_Bool)shouldHideCanvasLayer;
- (void)drawMagnifierClippedCanvasLayer:(CALayer *)arg1 inContext:(struct CGContext *)arg2;
@end

@protocol TSWPTextSource <NSObject>
- (unsigned long long)storageLength;
- (_Bool)adjustRangesByDelta:(long long)arg1;
- (unsigned long long)charIndexRemappedFromStorage:(unsigned long long)arg1;
- (id)objectAtLocationPriorToMappedCharIndex:(unsigned long long)arg1 forAttributeKind:(unsigned int)arg2 effectiveRange:(struct _NSRange *)arg3;
- (struct _NSRange)charRangeMappedFromStorage:(struct _NSRange)arg1;
- (struct _NSRange)charRangeMappedToStorage:(struct _NSRange)arg1;
- (unsigned long long)charIndexMappedFromStorage:(unsigned long long)arg1;
- (unsigned long long)charIndexMappedToStorage:(unsigned long long)arg1;
- (long long)hyphenationLocationBeforeIndex:(long long)arg1 inRange:(struct _NSRange)arg2 locale:(struct __CFLocale *)arg3 hyphenChar:(unsigned int *)arg4;
- (unsigned short)characterAtIndex:(unsigned long long)arg1;
- (struct _NSRange)wordAtCharIndex:(unsigned long long)arg1 includePreviousWord:(_Bool)arg2;
- (TSWPCharacterStyle *)characterStyleAtCharIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;
- (_Bool)isWritingDirectionRightToLeftForParagraphAtCharIndex:(unsigned long long)arg1;
- (TSWPParagraphStyle *)paragraphStyleAtCharIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;
- (TSWPAttachment *)attachmentOrFootnoteAtCharIndex:(unsigned long long)arg1;
- (TSWPAttachment *)attachmentAtCharIndex:(unsigned long long)arg1;
- (TSWPFootnoteReferenceAttachment *)footnoteReferenceAtCharIndex:(unsigned long long)arg1;
- (NSArray *)smartFieldsWithAttributeKind:(unsigned int)arg1 intersectingRange:(struct _NSRange)arg2;
- (struct __CFDictionary *)createFilteredCoreTextAttributes:(struct __CFDictionary *)arg1 effectiveRange:(struct _NSRange *)arg2 filterDelegate:(id <TSWPCoreTextPropertiesFilterDelegate>)arg3;
- (TSWPSmartField *)smartFieldAtCharIndex:(unsigned long long)arg1 attributeKind:(unsigned int)arg2 effectiveRange:(struct _NSRange *)arg3;
- (void)attributesAtCharIndex:(unsigned long long)arg1 attributesOfInterest:(_Bool [19])arg2 attributesTable:(id [19])arg3 effectiveRange:(struct _NSRange *)arg4;
- (_Bool)hasColumnStyleForParagraphBreakAtCharIndex:(unsigned long long)arg1;
- (_Bool)hasColumnBreakAtCharIndex:(unsigned long long)arg1;
- (void)getCharacters:(unsigned short *)arg1 range:(struct _NSRange)arg2;
- (NSString *)string;
- (unsigned long long)length;

@optional
- (_Bool)hasSmartFieldsInRange:(struct _NSRange)arg1;
- (void)enumerateWithAttributeKind:(unsigned int)arg1 inRange:(struct _NSRange)arg2 usingBlock:(void (^)(id, struct _NSRange, _Bool *))arg3;
- (void)enumerateSmartFieldsWithAttributeKind:(unsigned int)arg1 inRange:(struct _NSRange)arg2 usingBlock:(void (^)(id, struct _NSRange, _Bool *))arg3;
- (NSString *)substringWithRange:(struct _NSRange)arg1;
@end

@protocol TSWPTextWrap
- (double)nextUnobstructedSpanStartingAt:(struct CGRect)arg1 wrappableAttachments:(NSArray *)arg2 userInfo:(id)arg3;
- (unsigned int)splitLine:(struct CGRect)arg1 lineSegmentRects:(struct CGRect [128])arg2 wrappableAttachments:(NSArray *)arg3 ignoreFloatingGraphics:(_Bool)arg4 floatingCausedWrap:(_Bool *)arg5 skipHint:(double *)arg6 userInfo:(id)arg7;
- (id)beginWrappingToColumn:(TSWPColumn *)arg1 target:(TSDLayout<TSWPLayoutTarget> *)arg2 hasWrapables:(_Bool *)arg3;
@end

@protocol UIActionSheetDelegate <NSObject>

@optional
- (void)actionSheet:(UIActionSheet *)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)actionSheet:(UIActionSheet *)arg1 willDismissWithButtonIndex:(long long)arg2;
- (void)didPresentActionSheet:(UIActionSheet *)arg1;
- (void)willPresentActionSheet:(UIActionSheet *)arg1;
- (void)actionSheetCancel:(UIActionSheet *)arg1;
- (void)actionSheet:(UIActionSheet *)arg1 clickedButtonAtIndex:(long long)arg2;
@end

@protocol UIAlertViewDelegate <NSObject>

@optional
- (_Bool)alertViewShouldEnableFirstOtherButton:(UIAlertView *)arg1;
- (void)alertView:(UIAlertView *)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)alertView:(UIAlertView *)arg1 willDismissWithButtonIndex:(long long)arg2;
- (void)didPresentAlertView:(UIAlertView *)arg1;
- (void)willPresentAlertView:(UIAlertView *)arg1;
- (void)alertViewCancel:(UIAlertView *)arg1;
- (void)alertView:(UIAlertView *)arg1 clickedButtonAtIndex:(long long)arg2;
@end

@protocol UIGestureRecognizerDelegate <NSObject>

@optional
- (_Bool)gestureRecognizer:(UIGestureRecognizer *)arg1 shouldReceiveTouch:(UITouch *)arg2;
- (_Bool)gestureRecognizer:(UIGestureRecognizer *)arg1 shouldBeRequiredToFailByGestureRecognizer:(UIGestureRecognizer *)arg2;
- (_Bool)gestureRecognizer:(UIGestureRecognizer *)arg1 shouldRequireFailureOfGestureRecognizer:(UIGestureRecognizer *)arg2;
- (_Bool)gestureRecognizer:(UIGestureRecognizer *)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(UIGestureRecognizer *)arg2;
- (_Bool)gestureRecognizerShouldBegin:(UIGestureRecognizer *)arg1;
@end

@protocol UIKeyInput <UITextInputTraits>
- (void)deleteBackward;
- (void)insertText:(NSString *)arg1;
- (_Bool)hasText;
@end

@protocol UINavigationControllerDelegate <NSObject>

@optional
- (id <UIViewControllerAnimatedTransitioning>)navigationController:(UINavigationController *)arg1 animationControllerForOperation:(long long)arg2 fromViewController:(UIViewController *)arg3 toViewController:(UIViewController *)arg4;
- (id <UIViewControllerInteractiveTransitioning>)navigationController:(UINavigationController *)arg1 interactionControllerForAnimationController:(id <UIViewControllerAnimatedTransitioning>)arg2;
- (long long)navigationControllerPreferredInterfaceOrientationForPresentation:(UINavigationController *)arg1;
- (unsigned long long)navigationControllerSupportedInterfaceOrientations:(UINavigationController *)arg1;
- (void)navigationController:(UINavigationController *)arg1 didShowViewController:(UIViewController *)arg2 animated:(_Bool)arg3;
- (void)navigationController:(UINavigationController *)arg1 willShowViewController:(UIViewController *)arg2 animated:(_Bool)arg3;
@end

@protocol UIPopoverControllerDelegate <NSObject>

@optional
- (void)popoverController:(UIPopoverController *)arg1 willRepositionPopoverToRect:(inout struct CGRect *)arg2 inView:(inout id *)arg3;
- (void)popoverControllerDidDismissPopover:(UIPopoverController *)arg1;
- (_Bool)popoverControllerShouldDismissPopover:(UIPopoverController *)arg1;
@end

@protocol UIScrollViewDelegate <NSObject>

@optional
- (void)scrollViewDidScrollToTop:(UIScrollView *)arg1;
- (_Bool)scrollViewShouldScrollToTop:(UIScrollView *)arg1;
- (void)scrollViewDidEndZooming:(UIScrollView *)arg1 withView:(UIView *)arg2 atScale:(double)arg3;
- (void)scrollViewWillBeginZooming:(UIScrollView *)arg1 withView:(UIView *)arg2;
- (UIView *)viewForZoomingInScrollView:(UIScrollView *)arg1;
- (void)scrollViewDidEndScrollingAnimation:(UIScrollView *)arg1;
- (void)scrollViewDidEndDecelerating:(UIScrollView *)arg1;
- (void)scrollViewWillBeginDecelerating:(UIScrollView *)arg1;
- (void)scrollViewDidEndDragging:(UIScrollView *)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewWillEndDragging:(UIScrollView *)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (void)scrollViewWillBeginDragging:(UIScrollView *)arg1;
- (void)scrollViewDidZoom:(UIScrollView *)arg1;
- (void)scrollViewDidScroll:(UIScrollView *)arg1;
@end

@protocol UITableViewDataSource <NSObject>
- (UITableViewCell *)tableView:(UITableView *)arg1 cellForRowAtIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 numberOfRowsInSection:(long long)arg2;

@optional
- (void)tableView:(UITableView *)arg1 moveRowAtIndexPath:(NSIndexPath *)arg2 toIndexPath:(NSIndexPath *)arg3;
- (void)tableView:(UITableView *)arg1 commitEditingStyle:(long long)arg2 forRowAtIndexPath:(NSIndexPath *)arg3;
- (long long)tableView:(UITableView *)arg1 sectionForSectionIndexTitle:(NSString *)arg2 atIndex:(long long)arg3;
- (NSArray *)sectionIndexTitlesForTableView:(UITableView *)arg1;
- (_Bool)tableView:(UITableView *)arg1 canMoveRowAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)tableView:(UITableView *)arg1 canEditRowAtIndexPath:(NSIndexPath *)arg2;
- (NSString *)tableView:(UITableView *)arg1 titleForFooterInSection:(long long)arg2;
- (NSString *)tableView:(UITableView *)arg1 titleForHeaderInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(UITableView *)arg1;
@end

@protocol UITableViewDelegate <NSObject, UIScrollViewDelegate>

@optional
- (NSIndexPath *)indexPathForPreferredFocusedViewInTableView:(UITableView *)arg1;
- (void)tableView:(UITableView *)arg1 didUpdateFocusInContext:(UITableViewFocusUpdateContext *)arg2 withAnimationCoordinator:(UIFocusAnimationCoordinator *)arg3;
- (_Bool)tableView:(UITableView *)arg1 shouldUpdateFocusInContext:(UITableViewFocusUpdateContext *)arg2;
- (_Bool)tableView:(UITableView *)arg1 canFocusRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 performAction:(SEL)arg2 forRowAtIndexPath:(NSIndexPath *)arg3 withSender:(id)arg4;
- (_Bool)tableView:(UITableView *)arg1 canPerformAction:(SEL)arg2 forRowAtIndexPath:(NSIndexPath *)arg3 withSender:(id)arg4;
- (_Bool)tableView:(UITableView *)arg1 shouldShowMenuForRowAtIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 indentationLevelForRowAtIndexPath:(NSIndexPath *)arg2;
- (NSIndexPath *)tableView:(UITableView *)arg1 targetIndexPathForMoveFromRowAtIndexPath:(NSIndexPath *)arg2 toProposedIndexPath:(NSIndexPath *)arg3;
- (void)tableView:(UITableView *)arg1 didEndEditingRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 willBeginEditingRowAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)tableView:(UITableView *)arg1 shouldIndentWhileEditingRowAtIndexPath:(NSIndexPath *)arg2;
- (NSArray *)tableView:(UITableView *)arg1 editActionsForRowAtIndexPath:(NSIndexPath *)arg2;
- (NSString *)tableView:(UITableView *)arg1 titleForDeleteConfirmationButtonForRowAtIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 editingStyleForRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didDeselectRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didSelectRowAtIndexPath:(NSIndexPath *)arg2;
- (NSIndexPath *)tableView:(UITableView *)arg1 willDeselectRowAtIndexPath:(NSIndexPath *)arg2;
- (NSIndexPath *)tableView:(UITableView *)arg1 willSelectRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didUnhighlightRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didHighlightRowAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)tableView:(UITableView *)arg1 shouldHighlightRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 accessoryButtonTappedForRowWithIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 accessoryTypeForRowWithIndexPath:(NSIndexPath *)arg2;
- (UIView *)tableView:(UITableView *)arg1 viewForFooterInSection:(long long)arg2;
- (UIView *)tableView:(UITableView *)arg1 viewForHeaderInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 estimatedHeightForFooterInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 estimatedHeightForHeaderInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 estimatedHeightForRowAtIndexPath:(NSIndexPath *)arg2;
- (double)tableView:(UITableView *)arg1 heightForFooterInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 heightForHeaderInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 heightForRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didEndDisplayingFooterView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 didEndDisplayingHeaderView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 didEndDisplayingCell:(UITableViewCell *)arg2 forRowAtIndexPath:(NSIndexPath *)arg3;
- (void)tableView:(UITableView *)arg1 willDisplayFooterView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 willDisplayHeaderView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 willDisplayCell:(UITableViewCell *)arg2 forRowAtIndexPath:(NSIndexPath *)arg3;
@end

@protocol UITextFieldDelegate <NSObject>

@optional
- (_Bool)textFieldShouldReturn:(UITextField *)arg1;
- (_Bool)textFieldShouldClear:(UITextField *)arg1;
- (_Bool)textField:(UITextField *)arg1 shouldChangeCharactersInRange:(struct _NSRange)arg2 replacementString:(NSString *)arg3;
- (void)textFieldDidEndEditing:(UITextField *)arg1;
- (_Bool)textFieldShouldEndEditing:(UITextField *)arg1;
- (void)textFieldDidBeginEditing:(UITextField *)arg1;
- (_Bool)textFieldShouldBeginEditing:(UITextField *)arg1;
@end

@protocol UITextInput <UIKeyInput>
@property(readonly, nonatomic) id <UITextInputTokenizer> tokenizer;
@property(nonatomic) __weak id <UITextInputDelegate> inputDelegate;
@property(readonly, nonatomic) UITextPosition *endOfDocument;
@property(readonly, nonatomic) UITextPosition *beginningOfDocument;
@property(copy, nonatomic) NSDictionary *markedTextStyle;
@property(readonly, nonatomic) UITextRange *markedTextRange;
@property(copy) UITextRange *selectedTextRange;
- (UITextRange *)characterRangeAtPoint:(struct CGPoint)arg1;
- (UITextPosition *)closestPositionToPoint:(struct CGPoint)arg1 withinRange:(UITextRange *)arg2;
- (UITextPosition *)closestPositionToPoint:(struct CGPoint)arg1;
- (NSArray *)selectionRectsForRange:(UITextRange *)arg1;
- (struct CGRect)caretRectForPosition:(UITextPosition *)arg1;
- (struct CGRect)firstRectForRange:(UITextRange *)arg1;
- (void)setBaseWritingDirection:(long long)arg1 forRange:(UITextRange *)arg2;
- (long long)baseWritingDirectionForPosition:(UITextPosition *)arg1 inDirection:(long long)arg2;
- (UITextRange *)characterRangeByExtendingPosition:(UITextPosition *)arg1 inDirection:(long long)arg2;
- (UITextPosition *)positionWithinRange:(UITextRange *)arg1 farthestInDirection:(long long)arg2;
- (long long)offsetFromPosition:(UITextPosition *)arg1 toPosition:(UITextPosition *)arg2;
- (long long)comparePosition:(UITextPosition *)arg1 toPosition:(UITextPosition *)arg2;
- (UITextPosition *)positionFromPosition:(UITextPosition *)arg1 inDirection:(long long)arg2 offset:(long long)arg3;
- (UITextPosition *)positionFromPosition:(UITextPosition *)arg1 offset:(long long)arg2;
- (UITextRange *)textRangeFromPosition:(UITextPosition *)arg1 toPosition:(UITextPosition *)arg2;
- (void)unmarkText;
- (void)setMarkedText:(NSString *)arg1 selectedRange:(struct _NSRange)arg2;
- (void)replaceRange:(UITextRange *)arg1 withText:(NSString *)arg2;
- (NSString *)textInRange:(UITextRange *)arg1;

@optional
@property(nonatomic) long long selectionAffinity;
@property(readonly, nonatomic) UIView *textInputView;
- (void)endFloatingCursor;
- (void)updateFloatingCursorAtPoint:(struct CGPoint)arg1;
- (void)beginFloatingCursorAtPoint:(struct CGPoint)arg1;
- (void)removeDictationResultPlaceholder:(id)arg1 willInsertResult:(_Bool)arg2;
- (struct CGRect)frameForDictationResultPlaceholder:(id)arg1;
- (id)insertDictationResultPlaceholder;
- (void)dictationRecognitionFailed;
- (void)dictationRecordingDidEnd;
- (void)insertDictationResult:(NSArray *)arg1;
- (long long)characterOffsetOfPosition:(UITextPosition *)arg1 withinRange:(UITextRange *)arg2;
- (UITextPosition *)positionWithinRange:(UITextRange *)arg1 atCharacterOffset:(long long)arg2;
- (NSDictionary *)textStylingAtPosition:(UITextPosition *)arg1 inDirection:(long long)arg2;
- (_Bool)shouldChangeTextInRange:(UITextRange *)arg1 replacementText:(NSString *)arg2;
@end

@protocol UITextInputTraits <NSObject>

@optional
@property(nonatomic, getter=isSecureTextEntry) _Bool secureTextEntry;
@property(nonatomic) _Bool enablesReturnKeyAutomatically;
@property(nonatomic) long long returnKeyType;
@property(nonatomic) long long keyboardAppearance;
@property(nonatomic) long long keyboardType;
@property(nonatomic) long long spellCheckingType;
@property(nonatomic) long long autocorrectionType;
@property(nonatomic) long long autocapitalizationType;
@end

@protocol UITextViewDelegate <NSObject, UIScrollViewDelegate>

@optional
- (_Bool)textView:(UITextView *)arg1 shouldInteractWithTextAttachment:(NSTextAttachment *)arg2 inRange:(struct _NSRange)arg3;
- (_Bool)textView:(UITextView *)arg1 shouldInteractWithURL:(NSURL *)arg2 inRange:(struct _NSRange)arg3;
- (void)textViewDidChangeSelection:(UITextView *)arg1;
- (void)textViewDidChange:(UITextView *)arg1;
- (_Bool)textView:(UITextView *)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementText:(NSString *)arg3;
- (void)textViewDidEndEditing:(UITextView *)arg1;
- (void)textViewDidBeginEditing:(UITextView *)arg1;
- (_Bool)textViewShouldEndEditing:(UITextView *)arg1;
- (_Bool)textViewShouldBeginEditing:(UITextView *)arg1;
@end

@protocol UIViewControllerAnimatedTransitioning <NSObject>
- (void)animateTransition:(id <UIViewControllerContextTransitioning>)arg1;
- (double)transitionDuration:(id <UIViewControllerContextTransitioning>)arg1;

@optional
- (void)animationEnded:(_Bool)arg1;
@end

@protocol UIViewControllerTransitioningDelegate <NSObject>

@optional
- (UIPresentationController *)presentationControllerForPresentedViewController:(UIViewController *)arg1 presentingViewController:(UIViewController *)arg2 sourceViewController:(UIViewController *)arg3;
- (id <UIViewControllerInteractiveTransitioning>)interactionControllerForDismissal:(id <UIViewControllerAnimatedTransitioning>)arg1;
- (id <UIViewControllerInteractiveTransitioning>)interactionControllerForPresentation:(id <UIViewControllerAnimatedTransitioning>)arg1;
- (id <UIViewControllerAnimatedTransitioning>)animationControllerForDismissedController:(UIViewController *)arg1;
- (id <UIViewControllerAnimatedTransitioning>)animationControllerForPresentedController:(UIViewController *)arg1 presentingController:(UIViewController *)arg2 sourceController:(UIViewController *)arg3;
@end

@protocol _UINonEditableTextSelectionForceGestureDelegate <NSObject>

@optional
- (void)willBeginGesture;
@end

@interface CAAnimation (TSDCAAnimationAdditions)
+ (id)TSD_supportedKeyPaths;
- (id)TSD_animationForKeyPath:(id)arg1 atTime:(double)arg2;
- (_Bool)TSD_containsAnimationForKeyPath:(id)arg1;
- (double)TSD_animationPercentByApplyingTimingFunctionForKeyPath:(id)arg1 atTime:(double)arg2;
- (id)TSD_valueAtTime:(double)arg1 initialValue:(id)arg2;
- (id)TSD_valueForKeyPath:(id)arg1 atTime:(double)arg2;
- (id)TSD_valueForKeyPath:(id)arg1 atTime:(double)arg2 animationCache:(id)arg3;
- (void)p_getValue:(id *)arg1 animationPercent:(double *)arg2 atTime:(double)arg3 initialValue:(id)arg4;
@end

@interface CAAnimationGroup (TSDCAAnimationAdditions)
- (double)TSD_animationPercentByApplyingTimingFunctionForKeyPath:(id)arg1 atTime:(double)arg2;
- (id)TSD_animationForKeyPath:(id)arg1 atTime:(double)arg2;
- (id)TSD_valueForKeyPath:(id)arg1 atTime:(double)arg2 animationCache:(id)arg3;
- (void)p_getValue:(id *)arg1 animation:(id *)arg2 animationPercent:(double *)arg3 forKeyPath:(id)arg4 atTime:(double)arg5 animationCache:(id)arg6;
- (_Bool)TSD_containsAnimationForKeyPath:(id)arg1;
@end

@interface CABasicAnimation (TSDCAAnimationAdditions)
- (double)TSD_animationPercentByApplyingTimingFunctionForKeyPath:(id)arg1 atTime:(double)arg2;
- (id)TSD_valueAtTime:(double)arg1 initialValue:(id)arg2;
- (void)p_getValue:(id *)arg1 animationPercent:(double *)arg2 atTime:(double)arg3 initialValue:(id)arg4;
@end

@interface CAKeyframeAnimation (TSDCAAnimationAdditions)
- (double)TSD_animationPercentByApplyingTimingFunctionForKeyPath:(id)arg1 atTime:(double)arg2;
- (id)TSD_valueAtTime:(double)arg1 initialValue:(id)arg2;
- (void)p_getValue:(id *)arg1 animationPercent:(double *)arg2 atTime:(double)arg3 initialValue:(id)arg4;
@end

@interface CALayer (CanvasLayerAdditions)
- (void)p_clearAllLayerDelegates;
@end

@interface CALayer (TSDAdditions)
@property(readonly, nonatomic) struct CGPoint center;
- (void)scale:(double)arg1 aroundAnchorPoint:(struct CGPoint)arg2 afterOffset:(struct CGPoint)arg3;
- (void)scale:(double)arg1 aroundBoundsPoint:(struct CGPoint)arg2 afterOffset:(struct CGPoint)arg3;
- (struct CATransform3D)transformToScale:(double)arg1 aroundAnchorPoint:(struct CGPoint)arg2 afterOffset:(struct CGPoint)arg3;
- (struct CATransform3D)transformToScale:(double)arg1 aroundBoundsPoint:(struct CGPoint)arg2 afterOffset:(struct CGPoint)arg3;
- (void)resumeAtTime:(double)arg1;
- (void)resume;
- (void)pauseAtTime:(double)arg1;
- (void)pause;
- (id)bakedLayer;
- (struct CGImage *)newRasterizedImageRef;
- (struct CGRect)frameIncludingSublayers;
- (void)animationDidStop:(id)arg1 finished:(_Bool)arg2;
- (id)zoomDownAnimation;
- (void)removeZoomDownAnimation;
- (void)addZoomDownAnimationFromPoint:(struct CGPoint)arg1 endingScale:(double)arg2 delay:(double)arg3;
- (void)addZoomDownAnimationFromPoint:(struct CGPoint)arg1;
- (void)addZoomDownAnimation;
- (void)removeZoomAnimation;
- (void)addZoomAnimationFromPoint:(struct CGPoint)arg1 startingScale:(double)arg2;
- (void)addZoomAnimationFromPoint:(struct CGPoint)arg1;
- (void)addZoomAnimation;
- (void)removeResetAnimation;
- (void)addResetAnimation;
- (void)addResetAnimationWithDelegate:(id)arg1;
- (void)removeRippleAnimation;
- (void)addRippleAnimationFromPosition:(struct CGPoint)arg1 withScale:(double)arg2 addPerspectiveProjection:(_Bool)arg3;
- (void)addRippleAnimationFromPosition:(struct CGPoint)arg1 withScale:(double)arg2;
- (void)addRippleAnimationFromPosition:(struct CGPoint)arg1;
- (void)removeRotateInAnimation;
- (void)addRotateInAnimationWithDuration:(double)arg1 delay:(double)arg2;
- (void)removeDistortAnimation;
- (void)addDistortAnimationWithVector:(struct CGPoint)arg1;
- (void)removePopOutAnimation;
- (void)addPopOutAnimation:(id)arg1;
- (_Bool)hasPopInAnimation;
- (void)removePopInAnimation;
- (void)addPopInAnimation:(id)arg1;
- (void)removeSproingAnimation;
- (void)addSproingAnimationFromPoint:(struct CGPoint)arg1;
- (void)removeFlipTransitionAnimation;
- (void)addFlipTransitionAnimationToLayer:(id)arg1;
- (void)removeDragRotationAnimation;
- (void)addDragRotationAnimationWithDelta:(struct CGPoint)arg1;
- (void)removePulseAnimation;
- (void)addPulseAnimation;
- (void)removeWaveAnimation;
- (void)removeWaveAnimationAnimated:(_Bool)arg1;
- (void)addWaveAnimationWithScale:(double)arg1 offset:(struct CGSize)arg2 zPosition:(double)arg3 addPerspectiveProjection:(_Bool)arg4;
- (void)addWaveAnimationWithScale:(double)arg1 offset:(struct CGSize)arg2 zPosition:(double)arg3;
- (void)addWaveAnimationWithOffset:(struct CGSize)arg1 zPosition:(double)arg2;
- (void)addWaveAnimation;
- (void)removeJiggleAnimation;
- (void)addJiggleAnimationWithDuration:(double)arg1 angle:(double)arg2;
- (void)addJiggleAnimation;
- (double)opacityByApplyingAnimation:(id)arg1 atTime:(double)arg2 animationCache:(id)arg3;
- (struct CATransform3D)transform3DByApplyingAnimation:(id)arg1 atTime:(double)arg2 offset:(struct CGPoint)arg3 parentFrame:(struct CGRect)arg4 animationCache:(id)arg5;
- (void)removeAllAnimationsOnLayerTree;
- (double)durationOfAllAnimations;
- (void)addPerspectiveSublayerProjectionUsingScreenSize:(struct CGSize)arg1;
- (void)addPerspectiveProjection;
- (double)p_perspectiveZDistanceUsingSize:(struct CGSize)arg1;
- (void)addReflectionSubLayerWithHeight:(double)arg1 startOpacity:(double)arg2;
- (id)layerByAddingReflectionWithHeight:(double)arg1 startOpacity:(double)arg2;
- (void)setIfDifferentFrame:(struct CGRect)arg1 orTransform:(struct CGAffineTransform)arg2;
@end

@interface CALayer (TSDTilingLayerSupport)
- (id)tileContentsLayer;
- (void)setTileContents:(id)arg1;
- (void)setNeedsDisplayForDirtyTiles:(id)arg1;
- (_Bool)tilingSafeHasContents;
- (void)tilingSafeSetSublayers:(id)arg1;
- (void)setNeedsLayoutForTilingLayers;
@end

@interface CALayer (TSKAdditions)
- (void)makeStretchableLayerWithUIImage:(id)arg1 leftCap:(double)arg2 rightCap:(double)arg3 topCap:(double)arg4 bottomCap:(double)arg5;
- (void)makeStretchableLayerWithUIImage:(id)arg1 leftCap:(double)arg2 topCap:(double)arg3;
- (void)makeStretchableLayerWithoutImage:(struct CGImage *)arg1 leftCap:(double)arg2 rightCap:(double)arg3 topCap:(double)arg4 bottomCap:(double)arg5;
- (void)makeStretchableLayerWithoutImage:(struct CGImage *)arg1 leftCap:(double)arg2 topCap:(double)arg3;
- (void)makeStretchableLayerWithImage:(struct CGImage *)arg1 leftCap:(double)arg2 rightCap:(double)arg3 topCap:(double)arg4 bottomCap:(double)arg5;
- (void)makeStretchableLayerWithImage:(struct CGImage *)arg1 leftCap:(double)arg2 topCap:(double)arg3;
@end

@interface CAMediaTimingFunction (TSDAdditions)
- (double)solveForTime:(double)arg1;
@property(readonly, nonatomic) TSDBezierPath *bezierPath;
@end

@interface CAMediaTimingFunction (TSDCAAnimationAdditions)
- (double)TSD_valueAtPercent:(double)arg1;
@end

@interface CAPropertyAnimation (TSDCAAnimationAdditions)
- (id)TSD_animationForKeyPath:(id)arg1 atTime:(double)arg2;
- (_Bool)TSD_containsAnimationForKeyPath:(id)arg1;
- (double)TSD_animationPercentFromAnimationTime:(double)arg1;
- (id)p_interpolatedValueFrom:(id)arg1 to:(id)arg2 percent:(double)arg3;
- (id)p_adjustedResultWithValue:(id)arg1;
@end

@interface CAShapeLayer (TSDAdditions)
- (void)setCGLineJoin:(int)arg1;
- (void)setCGLineCap:(int)arg1;
@end

@interface DebugItem : NSObject
{
    NSString *_title;
    id _target;
    SEL _action;
}

@property(readonly, nonatomic) SEL action; // @synthesize action=_action;
@property(readonly, nonatomic) id target; // @synthesize target=_target;
@property(readonly, nonatomic) NSString *title; // @synthesize title=_title;
- (void)dealloc;
- (id)initWithTitle:(id)arg1 target:(id)arg2 action:(SEL)arg3;

@end

@interface EAGLContext (TSDBrush)
- (id)initForBrushes;
@end

@interface EAGLContext (TSDGLShadow)
- (id)initForShadow;
@end

@interface EQKitAdjustableSpace : NSObject
{
    double mAscent;
    double mDescent;
    double mWidth;
}

+ (void)appendSpaceToAttributedString:(id)arg1 ascent:(double)arg2 descent:(double)arg3 width:(double)arg4;
+ (struct __CTRunDelegate *)newRunDelegateWithAscent:(double)arg1 descent:(double)arg2 width:(double)arg3;
@property(readonly, nonatomic) double width; // @synthesize width=mWidth;
@property(readonly, nonatomic) double descent; // @synthesize descent=mDescent;
@property(readonly, nonatomic) double ascent; // @synthesize ascent=mAscent;
- (id)initWithAscent:(double)arg1 descent:(double)arg2 width:(double)arg3;

@end

@interface EQKitBox : NSObject <NSCopying>
{
}

- (id)description;
- (_Bool)appendOpticalAlignToSpec:(struct Spec *)arg1 offset:(struct CGPoint)arg2;
- (_Bool)p_getTransform:(struct CGAffineTransform *)arg1 fromDescendant:(id)arg2;
- (struct CGAffineTransform)transformFromDescendant:(id)arg1;
- (void)renderIntoContext:(struct CGContext *)arg1 offset:(struct CGPoint)arg2;
- (struct CGRect)erasableBounds;
@property(readonly, nonatomic) double layoutVSize;
@property(readonly, nonatomic) double layoutDepth;
@property(readonly, nonatomic) double layoutHeight;
@property(readonly, nonatomic) double vsize;
@property(readonly, nonatomic) double opticalAlignWidth;
@property(readonly, nonatomic) double width;
@property(readonly, nonatomic) double depth;
@property(readonly, nonatomic) double height;
@property(readonly, nonatomic) struct CGColor *color;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface EQKitCompoundBox : EQKitBox
{
    NSArray *mChildBoxes;
    double mHeight;
    double mDepth;
    double mWidth;
    _Bool mDimensionsValid;
    struct CGRect mErasableBounds;
    _Bool mErasableBoundsValid;
}

@property(readonly, nonatomic) NSArray *childBoxes; // @synthesize childBoxes=mChildBoxes;
- (struct CGRect)p_cacheErasableBounds;
- (void)p_cacheDimensionsForHeight:(double *)arg1 depth:(double *)arg2 width:(double *)arg3;
- (id)description;
- (struct CGRect)erasableBounds;
@property(readonly, nonatomic) double width;
@property(readonly, nonatomic) double depth;
@property(readonly, nonatomic) double height;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)init;
- (id)initWithChildBoxes:(id)arg1;

@end

@interface EQKitEnvironment : NSObject
{
}

+ (id)dataForEnvironment:(id)arg1;
+ (id)defaultEnvironment;
+ (id)environmentFromData:(id)arg1;

@end

@interface EQKitEnvironmentInstance : EQKitEnvironment
{
    NSDictionary *mConfig;
    struct Dictionary *mOperatorDictionary;
    struct Manager {
        CDUnknownFunctionPointerType *;
        struct Collection *;
        struct EQKitCacheLRUCounter;
    } *mFontManager;
    struct Manager {
        struct EQKitCache<EQKit::OpticalKern::Glyph::Key, std::__1::shared_ptr<EQKit::OpticalKern::Edge::Path>, std::__1::shared_ptr<const EQKit::OpticalKern::Edge::Path>> *;
        struct EQKitCacheLRUCounter;
        _Bool;
        struct QuantizationConfig;
    } *mKerningManager;
    struct Config *mLayoutConfig;
}

+ (id)dataForEnvironment:(id)arg1;
+ (id)defaultEnvironment;
+ (id)environmentFromData:(id)arg1;
@property(nonatomic) _Bool kerning;
- (void)endLayout;
- (void)beginLayout;
- (const struct Config *)layoutConfig;
- (const Manager_36464627 *)kerningManager;
- (const Manager_e51557f8 *)fontManager;
- (const struct Dictionary *)operatorDictionary;
- (id)newDictionaryForArchiving;
- (void)dealloc;
- (id)initWithConfig:(id)arg1;

@end

@interface EQKitEquation : NSObject
{
    id <EQKitExpression> mRoot;
    NSData *mSource;
    EQKitEnvironment *mEnvironment;
}

+ (id)mathMLStringFromLaTeXString:(id)arg1 environment:(id)arg2 error:(id *)arg3;
+ (id)equationWithXMLDoc:(struct _xmlDoc *)arg1 node:(struct _xmlNode *)arg2 environment:(id)arg3 error:(id *)arg4;
+ (id)equationWithString:(id)arg1 format:(int)arg2 error:(id *)arg3;
+ (id)equationWithString:(id)arg1 format:(int)arg2 environment:(id)arg3 error:(id *)arg4;
+ (id)equationWithData:(id)arg1 format:(int)arg2 environment:(id)arg3 error:(id *)arg4;
+ (int)formatFromString:(id)arg1;
+ (int)formatFromData:(id)arg1;
@property(readonly, nonatomic) EQKitEnvironment *environment; // @synthesize environment=mEnvironment;
@property(readonly, nonatomic) id <EQKitExpression> root; // @synthesize root=mRoot;
- (id)description;
- (void)dealloc;
- (id)newLayout;
- (_Bool)isBaseFontNameUsed;
- (id)pdfDataWithLayout:(id)arg1 layoutContext:(id)arg2;
- (id)pdfDataWithLayoutContext:(id)arg1 baselineOffset:(double *)arg2;
- (_Bool)exportToXMLWriter:(struct _xmlTextWriter *)arg1 ns:(const char *)arg2 prefix:(const char *)arg3 characterCount:(int *)arg4;
- (id)initWithRoot:(id)arg1 source:(id)arg2;
- (id)init;

@end

@interface EQKitHBox : EQKitCompoundBox
{
}

- (struct CGRect)p_cacheErasableBounds;
- (void)p_cacheDimensionsForHeight:(double *)arg1 depth:(double *)arg2 width:(double *)arg3;
- (_Bool)p_getTransform:(struct CGAffineTransform *)arg1 fromDescendant:(id)arg2;
- (_Bool)appendOpticalAlignToSpec:(struct Spec *)arg1 offset:(struct CGPoint)arg2;
- (void)renderIntoContext:(struct CGContext *)arg1 offset:(struct CGPoint)arg2;

@end

@interface EQKitHSpace : EQKitBox
{
    double mWidth;
}

@property(readonly, nonatomic) double width; // @synthesize width=mWidth;
- (_Bool)appendOpticalAlignToSpec:(struct Spec *)arg1 offset:(struct CGPoint)arg2;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;
- (id)initWithWidth:(double)arg1;

@end

@interface EQKitHVSpace : EQKitBox
{
    double mWidth;
    double mHeight;
    double mDepth;
}

@property(readonly, nonatomic) double depth; // @synthesize depth=mDepth;
@property(readonly, nonatomic) double height; // @synthesize height=mHeight;
@property(readonly, nonatomic) double width; // @synthesize width=mWidth;
- (_Bool)appendOpticalAlignToSpec:(struct Spec *)arg1 offset:(struct CGPoint)arg2;
@property(readonly, nonatomic) double layoutDepth;
@property(readonly, nonatomic) double layoutHeight;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithWidth:(double)arg1 height:(double)arg2 depth:(double)arg3;
- (id)init;

@end

@interface EQKitLayout : NSObject <EQKitLayout>
{
    id <EQKitRootNode> mRoot;
    EQKitBox *mBox;
    double mAscent;
    double mDescent;
    double mLeading;
    double mNaturalAlignmentOffset;
    double mScale;
    _Bool mSingleLineHeight;
    EQKitEnvironmentInstance *mEnvironment;
}

@property(readonly, nonatomic) EQKitBox *box; // @synthesize box=mBox;
@property(readonly, copy) NSString *description;
- (void)renderIntoContext:(struct CGContext *)arg1 offset:(struct CGPoint)arg2;
- (struct CGRect)erasableBounds;
- (double)naturalAlignmentOffset;
- (double)vsize;
- (double)width;
- (double)depth;
- (double)height;
- (_Bool)layoutWithContext:(id)arg1;
- (void)dealloc;
- (id)initWithRoot:(id)arg1 environment:(id)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EQKitLayoutElementaryStackDigitRow : NSObject <EQKitLayoutElementaryStackRow>
{
    NSArray *mColumnBoxes;
    long long mAlignmentShift;
    unsigned long long mFirstColumnIndex;
    double mFollowingSpace;
}

@property(readonly, nonatomic) double followingSpace; // @synthesize followingSpace=mFollowingSpace;
@property(nonatomic) unsigned long long firstColumnIndex; // @synthesize firstColumnIndex=mFirstColumnIndex;
@property(readonly, nonatomic) long long alignmentShift; // @synthesize alignmentShift=mAlignmentShift;
- (id)newBoxWithStackWidth:(double)arg1 columnWidthIter:(__wrap_iter_8fb6ff7c)arg2 iterMax:(__wrap_iter_8fb6ff7c)arg3 previousRow:(id)arg4 layoutManager:(const struct EQKitLayoutManager *)arg5;
- (id)p_crossoutDigitBox:(id)arg1 crossout:(int)arg2 layoutManager:(const struct EQKitLayoutManager *)arg3;
@property(readonly, nonatomic) _Bool spansStack;
- (void)populateMaxColumnWidths:(__wrap_iter_8fb6ff7c)arg1;
@property(readonly, nonatomic) unsigned long long columnCount;
- (void)dealloc;
- (id)initWithChildren:(id)arg1 decimalPoint:(unsigned long long)arg2 position:(long long)arg3 followingSpace:(double)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EQKitLayoutElementaryStackCarryRow : EQKitLayoutElementaryStackDigitRow <EQKitLayoutElementaryStackRow>
{
    vector_2d5e04fe mCrossouts;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)populateMaxColumnWidths:(__wrap_iter_8fb6ff7c)arg1;
- (int)crossoutAtColumnIndex:(unsigned long long)arg1;
- (id)initWithChildren:(id)arg1 decimalPoint:(unsigned long long)arg2 position:(long long)arg3 followingSpace:(double)arg4 crossouts:(const vector_2d5e04fe *)arg5;

// Remaining properties
@property(readonly, nonatomic) long long alignmentShift;
@property(readonly, nonatomic) unsigned long long columnCount;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(nonatomic) unsigned long long firstColumnIndex;
@property(readonly, nonatomic) double followingSpace;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) _Bool spansStack;
@property(readonly) Class superclass;

@end

@interface EQKitLayoutElementaryStackLineRow : NSObject <EQKitLayoutElementaryStackRow>
{
    unsigned long long mLength;
    double mThickness;
    long long mAlignmentShift;
    unsigned long long mFirstColumnIndex;
    double mFollowingSpace;
}

@property(readonly, nonatomic) double followingSpace; // @synthesize followingSpace=mFollowingSpace;
@property(readonly, nonatomic) unsigned long long columnCount; // @synthesize columnCount=mLength;
@property(nonatomic) unsigned long long firstColumnIndex; // @synthesize firstColumnIndex=mFirstColumnIndex;
@property(readonly, nonatomic) long long alignmentShift; // @synthesize alignmentShift=mAlignmentShift;
- (id)newBoxWithStackWidth:(double)arg1 columnWidthIter:(__wrap_iter_8fb6ff7c)arg2 iterMax:(__wrap_iter_8fb6ff7c)arg3 previousRow:(id)arg4 layoutManager:(const struct EQKitLayoutManager *)arg5;
@property(readonly, nonatomic) _Bool spansStack;
- (void)populateMaxColumnWidths:(__wrap_iter_8fb6ff7c)arg1;
- (id)initWithLength:(unsigned long long)arg1 thickness:(double)arg2 position:(long long)arg3 followingSpace:(double)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EQKitMathMLNode : NSObject <EQKitLayoutNode>
{
    id <EQKitLayoutNode> mParent;
}

@property(nonatomic) id <EQKitLayoutNode> parent; // @synthesize parent=mParent;
- (_Bool)isAttributeDefaultInheritableFromStyle:(int)arg1;
- (int)isOperatorPaddingRequired;
- (id)operatorCore;
- (_Bool)isEmbellishedOperator;
- (long long)scriptLevelWithBase:(long long)arg1;
- (_Bool)isBaseFontNameUsed;
- (_Bool)isSpaceLike;
- (_Bool)isNumber;
- (id)layoutStyleNode;
- (struct Schemata)layoutSchemata;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EQKitMathMLAnnotation : EQKitMathMLNode <EQKitMathMLNode>
{
}

- (const set_386565a4 *)mathMLAttributes;
- (id)initFromXMLNode:(struct _xmlNode *)arg1 parser:(id)arg2;

@end

@interface EQKitMathMLBinaryNode : EQKitMathMLNode <EQKitMathMLNode>
{
    EQKitMathMLNode *mFirst;
    EQKitMathMLNode *mSecond;
}

- (void)dealloc;
- (_Bool)isBaseFontNameUsed;
- (const set_386565a4 *)mathMLAttributes;
- (id)initFromXMLNode:(struct _xmlNode *)arg1 parser:(id)arg2;
- (id)initWithFirst:(id)arg1 second:(id)arg2;
- (id)init;

@end

@interface EQKitMathMLMAction : EQKitMathMLNode <EQKitMathMLNode>
{
    EQKitMathMLNode *mExpression;
}

- (id)operatorCore;
- (_Bool)isEmbellishedOperator;
- (struct Schemata)layoutSchemata;
- (const set_386565a4 *)mathMLAttributes;
- (void)dealloc;
- (id)initFromXMLNode:(struct _xmlNode *)arg1 parser:(id)arg2;

@end

@interface EQKitMathMLMAlignGroup : EQKitMathMLNode <EQKitMathMLNode>
{
}

- (struct Schemata)layoutSchemata;
- (const set_386565a4 *)mathMLAttributes;
- (id)initFromXMLNode:(struct _xmlNode *)arg1 parser:(id)arg2;

@end

@interface EQKitMathMLMAlignMark : EQKitMathMLNode <EQKitMathMLNode>
{
}

- (struct Schemata)layoutSchemata;
- (const set_386565a4 *)mathMLAttributes;
- (id)initFromXMLNode:(struct _xmlNode *)arg1 parser:(id)arg2;

@end

@interface EQKitMathMLUnaryNode : EQKitMathMLNode <EQKitMathMLNode>
{
    EQKitMathMLNode *mChild;
}

- (void)dealloc;
- (_Bool)isBaseFontNameUsed;
- (const set_386565a4 *)mathMLAttributes;
- (id)initFromXMLNode:(struct _xmlNode *)arg1 parser:(id)arg2;
- (id)initWithChildren:(id)arg1;
- (id)initWithChild:(id)arg1;
- (id)init;

@end

@interface EQKitMathMLMEnclose : EQKitMathMLUnaryNode <EQKitLayoutSchemataEnclose>
{
}

- (id)schemataRow;
- (struct Schemata)layoutSchemata;
- (const set_386565a4 *)mathMLAttributes;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EQKitMathMLMFenced : EQKitMathMLNode <EQKitMathMLNode, EQKitLayoutNode, EQKitLayoutSchemataFenced>
{
    NSArray *mChildren;
}

- (id)schemataChildren;
- (struct Schemata)layoutSchemata;
- (int)isOperatorPaddingRequired;
- (_Bool)isBaseFontNameUsed;
- (void)dealloc;
- (const set_386565a4 *)mathMLAttributes;
- (id)initFromXMLNode:(struct _xmlNode *)arg1 parser:(id)arg2;
- (id)initWithChildren:(id)arg1 node:(struct _xmlNode *)arg2;
- (id)initWithChildren:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) id <EQKitLayoutNode> parent;
@property(readonly) Class superclass;

@end

@interface EQKitMathMLMFraction : EQKitMathMLBinaryNode <EQKitLayoutSchemataFraction>
{
}

- (id)schemataDenominator;
- (id)schemataNumerator;
- (id)operatorCore;
- (_Bool)isEmbellishedOperator;
- (struct Schemata)layoutSchemata;
- (const set_386565a4 *)mathMLAttributes;
- (id)initFromXMLNode:(struct _xmlNode *)arg1 parser:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EQKitMathMLMToken : EQKitMathMLNode <EQKitMathMLNode, EQKitFontStyling, EQKitLayoutSchemataToken>
{
    struct {
        unsigned int mType:2;
    } mFlags;
    union {
        unsigned int mChar;
        NSString *mString;
        EQKitMathMLTokenContent *mContent;
    } mContent;
}

- (id)schemataTokenString;
- (id)schemataFontStyling;
- (_Bool)isNumber;
- (id)fontStyling;
@property(readonly, copy) NSString *description;
- (unsigned int)schemataUnicharOrNul;
- (int)scriptContext;
- (int)scriptVariant;
- (void)dealloc;
- (const set_386565a4 *)mathMLAttributes;
- (id)initFromXMLNode:(struct _xmlNode *)arg1 parser:(id)arg2;
- (id)initWithContent:(id)arg1;
- (id)initWithString:(id)arg1 environment:(id)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EQKitMathMLMIdentifier : EQKitMathMLMToken
{
}

- (int)scriptVariant;
- (struct Schemata)layoutSchemata;

@end

@interface EQKitMathMLMTr : EQKitMathMLNode <EQKitMathMLNode, EQKitLayoutSchemataTr>
{
    NSArray *mChildren;
}

- (id)layoutStyleNode;
- (id)schemataChildren;
@property(readonly, copy) NSString *description;
- (_Bool)isBaseFontNameUsed;
- (struct Schemata)layoutSchemata;
- (void)dealloc;
- (const set_386565a4 *)mathMLAttributes;
- (id)initFromXMLNode:(struct _xmlNode *)arg1 parser:(id)arg2;
- (id)initWithChildren:(id)arg1 node:(struct _xmlNode *)arg2;
- (id)initWithChildren:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EQKitMathMLMLabeledTr : EQKitMathMLMTr <EQKitMathMLNode>
{
}

- (id)initFromXMLNode:(struct _xmlNode *)arg1 parser:(id)arg2;

@end

@interface EQKitMathMLMLongDivision : EQKitMathMLNode <EQKitMathMLNode, EQKitLayoutSchemataLongDivision>
{
    EQKitMathMLNode *mDivisor;
    EQKitMathMLMStack *mStack;
}

- (id)schemataStack;
- (id)schemataDivisor;
- (struct Schemata)layoutSchemata;
- (void)dealloc;
- (const set_386565a4 *)mathMLAttributes;
- (id)initFromXMLNode:(struct _xmlNode *)arg1 parser:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EQKitMathMLMNumber : EQKitMathMLMToken
{
}

- (struct Schemata)layoutSchemata;
- (_Bool)isNumber;

@end

@interface EQKitMathMLMOperator : EQKitMathMLMToken <EQKitOperator, EQKitLayoutSchemataOperator>
{
    unsigned short mOperatorId;
}

- (unsigned int)operatorUnicharOrNul;
- (id)schemataOperator;
- (id)operatorCore;
- (_Bool)isEmbellishedOperator;
- (unsigned short)operatorId;
- (struct Schemata)layoutSchemata;
- (const set_386565a4 *)mathMLAttributes;
- (id)initFromXMLNode:(struct _xmlNode *)arg1 parser:(id)arg2;
- (id)initWithString:(id)arg1 environment:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EQKitMathMLMOver : EQKitMathMLBinaryNode <EQKitLayoutSchemataUnderover>
{
}

- (id)operatorCore;
- (_Bool)isEmbellishedOperator;
- (struct Schemata)layoutSchemata;
- (id)schemataOver;
- (id)schemataUnder;
- (id)schemataBase;
- (const set_386565a4 *)mathMLAttributes;
- (id)initFromXMLNode:(struct _xmlNode *)arg1 parser:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EQKitMathMLMPadded : EQKitMathMLUnaryNode <EQKitLayoutSchemataPadded>
{
}

- (id)schemataNode;
- (id)operatorCore;
- (_Bool)isEmbellishedOperator;
- (struct Schemata)layoutSchemata;
- (void)dealloc;
- (const set_386565a4 *)mathMLAttributes;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EQKitMathMLMPhantom : EQKitMathMLUnaryNode <EQKitMathMLNode, EQKitLayoutSchemataPhantom>
{
}

- (id)schemataChild;
- (id)operatorCore;
- (_Bool)isEmbellishedOperator;
- (struct Schemata)layoutSchemata;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EQKitMathMLMRoot : EQKitMathMLBinaryNode <EQKitLayoutSchemataRadical>
{
}

- (id)schemataIndex;
- (id)schemataRadicand;
- (struct Schemata)layoutSchemata;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EQKitMathMLMRow : EQKitMathMLNode <EQKitMathMLNode, EQKitLayoutSchemataRow>
{
    NSArray *mChildren;
    struct {
        unsigned int mImplied;
    } mFlags;
}

- (id)schemataChildren;
@property(readonly, copy) NSString *description;
- (_Bool)isBaseFontNameUsed;
- (int)isOperatorPaddingRequired;
- (id)operatorCore;
- (_Bool)isEmbellishedOperator;
- (struct Schemata)layoutSchemata;
- (void)dealloc;
- (const set_386565a4 *)mathMLAttributes;
- (id)initFromXMLNode:(struct _xmlNode *)arg1 parser:(id)arg2;
- (id)initWithChildren:(id)arg1 node:(struct _xmlNode *)arg2;
- (id)initWithChildren:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EQKitMathMLMSpace : EQKitMathMLNode <EQKitMathMLNode, EQKitLayoutSchemataSpace>
{
}

- (struct Schemata)layoutSchemata;
- (_Bool)isSpaceLike;
- (const set_386565a4 *)mathMLAttributes;
- (id)initFromXMLNode:(struct _xmlNode *)arg1 parser:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EQKitMathMLMSqrt : EQKitMathMLUnaryNode <EQKitLayoutSchemataRadical>
{
}

- (id)schemataIndex;
- (id)schemataRadicand;
- (struct Schemata)layoutSchemata;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EQKitMathMLMStack : EQKitMathMLNode <EQKitMathMLNode, EQKitLayoutSchemataStack>
{
    NSArray *mChildren;
    int mAlign;
}

- (_Bool)isBaseFontNameUsed;
- (int)schemataAlign;
- (id)schemataChildren;
- (struct Schemata)layoutSchemata;
- (void)dealloc;
- (id)initWithChildren:(id)arg1;
- (const set_386565a4 *)mathMLAttributes;
- (id)initFromXMLNode:(struct _xmlNode *)arg1 parser:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EQKitMathMLMStackCarries : EQKitMathMLNode <EQKitMathMLNode, EQKitLayoutSchemataStackCarries>
{
    NSArray *mChildren;
}

- (id)schemataChildren;
- (_Bool)isBaseFontNameUsed;
- (struct Schemata)layoutSchemata;
- (void)dealloc;
- (const set_386565a4 *)mathMLAttributes;
- (id)initFromXMLNode:(struct _xmlNode *)arg1 parser:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EQKitMathMLMStackCarry : EQKitMathMLNode <EQKitMathMLNode, EQKitLayoutSchemataStackCarry>
{
    NSArray *mChildren;
}

- (id)schemataChildren;
- (struct Schemata)layoutSchemata;
- (void)dealloc;
- (id)initWithChild:(id)arg1;
- (id)initWithChildren:(id)arg1;
- (const set_386565a4 *)mathMLAttributes;
- (id)initFromXMLNode:(struct _xmlNode *)arg1 parser:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EQKitMathMLMStackGroup : EQKitMathMLNode <EQKitMathMLNode, EQKitLayoutSchemataStackGroup>
{
    NSArray *mChildren;
}

- (id)schemataChildren;
- (_Bool)isBaseFontNameUsed;
- (struct Schemata)layoutSchemata;
- (void)dealloc;
- (id)initWithChildren:(id)arg1;
- (const set_386565a4 *)mathMLAttributes;
- (id)initFromXMLNode:(struct _xmlNode *)arg1 parser:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EQKitMathMLMStackLine : EQKitMathMLNode <EQKitMathMLNode, EQKitLayoutSchemataStackLine>
{
}

- (unsigned long long)schemataThickness;
- (struct Schemata)layoutSchemata;
- (const set_386565a4 *)mathMLAttributes;
- (id)initFromXMLNode:(struct _xmlNode *)arg1 parser:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EQKitMathMLMStackRow : EQKitMathMLNode <EQKitMathMLNode, EQKitLayoutSchemataStackRow>
{
    NSArray *mChildren;
}

- (id)schemataChildren;
- (_Bool)isBaseFontNameUsed;
- (struct Schemata)layoutSchemata;
- (void)dealloc;
- (id)initWithChildren:(id)arg1;
- (const set_386565a4 *)mathMLAttributes;
- (id)initFromXMLNode:(struct _xmlNode *)arg1 parser:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EQKitMathMLMText : EQKitMathMLNode <EQKitMathMLNode, EQKitLayoutSchemataText, EQKitFontStyling>
{
    EQKitMathMLTokenContent *mContent;
}

- (int)scriptContext;
- (int)scriptVariant;
- (_Bool)isBaseFontNameUsed;
- (id)schemataChildren;
- (_Bool)schemataIsQuoted;
- (struct Schemata)layoutSchemata;
- (const set_386565a4 *)mathMLAttributes;
- (id)initFromXMLNode:(struct _xmlNode *)arg1 parser:(id)arg2;
- (void)dealloc;
- (id)initWithContent:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EQKitMathMLMStringLiteral : EQKitMathMLMText
{
}

- (_Bool)schemataIsQuoted;
- (const set_386565a4 *)mathMLAttributes;

@end

@interface EQKitMathMLMStyle : EQKitMathMLUnaryNode
{
}

- (id)operatorCore;
- (_Bool)isEmbellishedOperator;
- (int)isOperatorPaddingRequired;
- (id)layoutStyleNode;
- (struct Schemata)layoutSchemata;
- (const set_386565a4 *)mathMLAttributes;

@end

@interface EQKitMathMLMSubscript : EQKitMathMLBinaryNode <EQKitLayoutSchemataSubsuperscript>
{
}

- (id)schemataSuperscript;
- (id)schemataSubscript;
- (id)schemataKernel;
- (id)operatorCore;
- (_Bool)isEmbellishedOperator;
- (struct Schemata)layoutSchemata;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EQKitMathMLTernaryNode : EQKitMathMLNode <EQKitMathMLNode>
{
    EQKitMathMLNode *mFirst;
    EQKitMathMLNode *mSecond;
    EQKitMathMLNode *mThird;
}

- (_Bool)isBaseFontNameUsed;
- (const set_386565a4 *)mathMLAttributes;
- (id)initFromXMLNode:(struct _xmlNode *)arg1 parser:(id)arg2;
- (void)dealloc;
- (id)initWithFirst:(id)arg1 second:(id)arg2 third:(id)arg3;
- (id)init;

@end

@interface EQKitMathMLMSubsuperscript : EQKitMathMLTernaryNode <EQKitLayoutSchemataSubsuperscript>
{
}

- (id)schemataSuperscript;
- (id)schemataSubscript;
- (id)schemataKernel;
- (id)operatorCore;
- (_Bool)isEmbellishedOperator;
- (struct Schemata)layoutSchemata;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EQKitMathMLMSuperscript : EQKitMathMLBinaryNode <EQKitLayoutSchemataSubsuperscript>
{
}

- (id)schemataSuperscript;
- (id)schemataSubscript;
- (id)schemataKernel;
- (id)operatorCore;
- (_Bool)isEmbellishedOperator;
- (struct Schemata)layoutSchemata;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EQKitMathMLMTable : EQKitMathMLNode <EQKitMathMLNode, EQKitLayoutSchemataTable>
{
    NSArray *mChildren;
}

- (id)layoutStyleNode;
- (id)schemataChildren;
@property(readonly, copy) NSString *description;
- (_Bool)isBaseFontNameUsed;
- (struct Schemata)layoutSchemata;
- (void)dealloc;
- (const set_386565a4 *)mathMLAttributes;
- (id)initFromXMLNode:(struct _xmlNode *)arg1 parser:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EQKitMathMLMTd : EQKitMathMLNode <EQKitMathMLNode, EQKitLayoutSchemataTd>
{
    NSArray *mChildren;
}

- (struct Schemata)layoutSchemata;
- (id)schemataChildren;
@property(readonly, copy) NSString *description;
- (_Bool)isBaseFontNameUsed;
- (int)isOperatorPaddingRequired;
- (void)dealloc;
- (const set_386565a4 *)mathMLAttributes;
- (id)initFromXMLNode:(struct _xmlNode *)arg1 parser:(id)arg2;
- (id)initWithChildren:(id)arg1 node:(struct _xmlNode *)arg2;
- (id)initWithChildren:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EQKitMathMLMUnder : EQKitMathMLBinaryNode <EQKitLayoutSchemataUnderover>
{
}

- (id)operatorCore;
- (_Bool)isEmbellishedOperator;
- (struct Schemata)layoutSchemata;
- (id)schemataOver;
- (id)schemataUnder;
- (id)schemataBase;
- (const set_386565a4 *)mathMLAttributes;
- (id)initFromXMLNode:(struct _xmlNode *)arg1 parser:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EQKitMathMLMUnderover : EQKitMathMLTernaryNode <EQKitLayoutSchemataUnderover>
{
}

- (id)operatorCore;
- (_Bool)isEmbellishedOperator;
- (struct Schemata)layoutSchemata;
- (id)schemataOver;
- (id)schemataUnder;
- (id)schemataBase;
- (const set_386565a4 *)mathMLAttributes;
- (id)initFromXMLNode:(struct _xmlNode *)arg1 parser:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EQKitMathMLMath : NSObject <EQKitMathMLNode, EQKitRootNode, EQKitExpression>
{
    EQKitMathMLNode *mExpression;
    struct AttributeCollection *mAttributeCollection;
    EQKitEnvironmentInstance *mEnvironment;
}

@property(readonly, copy) NSString *description;
- (_Bool)isAttributeDefaultInheritableFromStyle:(int)arg1;
- (_Bool)isBaseFontNameUsed;
- (int)isOperatorPaddingRequired;
- (id)operatorCore;
- (_Bool)isEmbellishedOperator;
- (_Bool)isSpaceLike;
- (_Bool)isNumber;
- (long long)scriptLevelWithBase:(long long)arg1;
- (id)layoutStyleNode;
- (struct Schemata)layoutSchemata;
@property(readonly, nonatomic) id <EQKitLayoutNode> parent;
- (id)newLayout;
- (struct AttributeCollection *)attributeCollection;
- (void)dealloc;
- (const set_386565a4 *)mathMLAttributes;
- (id)initFromXMLNode:(struct _xmlNode *)arg1 parser:(id)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EQKitMathMLNone : EQKitMathMLNode <EQKitMathMLNode>
{
}

- (struct Schemata)layoutSchemata;
- (const set_386565a4 *)mathMLAttributes;
- (id)initFromXMLNode:(struct _xmlNode *)arg1 parser:(id)arg2;

@end

@interface EQKitMathMLParser : NSObject
{
    struct _xmlNode *mRootNode;
    struct _xmlNs *mNS;
    NSError *mError;
    EQKitEnvironmentInstance *mEnvironment;
    NSData *mSource;
    struct stack<EQKitMathMLParserState, std::__1::deque<EQKitMathMLParserState, std::__1::allocator<EQKitMathMLParserState>>> mState;
    struct AttributeCollection *mAttributeCollection;
}

@property(readonly, nonatomic) NSError *error; // @synthesize error=mError;
@property(readonly, nonatomic) struct _xmlNs *ns; // @synthesize ns=mNS;
- (id).cxx_construct;
- (void).cxx_destruct;
- (_Bool)isElement:(int)arg1 allowedInState:(int)arg2;
- (int)state;
- (void)popState;
- (void)pushState:(int)arg1;
- (id)parseNode:(struct _xmlNode *)arg1;
- (id)parseChildrenAsTokenContentFromXMLNode:(struct _xmlNode *)arg1;
- (void)parseAttributesForNode:(id)arg1 withXMLNode:(struct _xmlNode *)arg2;
- (id)parseChildrenAsNodeFromXMLNode:(struct _xmlNode *)arg1;
- (id)parseChildrenAsArrayFromXMLNode:(struct _xmlNode *)arg1;
- (id)parse;
- (void)reportError:(long long)arg1 withNode:(struct _xmlNode *)arg2;
- (id)environment;
@property(nonatomic) struct AttributeCollection *attributeCollection;
- (void)dealloc;
- (id)initWithDocument:(struct _xmlDoc *)arg1 node:(struct _xmlNode *)arg2 source:(id)arg3 environment:(id)arg4;
- (id)init;

@end

@interface EQKitMathMLSemantics : EQKitMathMLMRow
{
}

@end

@interface EQKitMathMLTokenContent : NSObject
{
    NSArray *mChildren;
}

@property(readonly, nonatomic) NSArray *children; // @synthesize children=mChildren;
- (void)dealloc;
- (id)initWithChildren:(id)arg1;

@end

@interface EQKitVBox : EQKitCompoundBox
{
    unsigned long long mPivotIndex;
}

@property(readonly, nonatomic) unsigned long long pivotIndex; // @synthesize pivotIndex=mPivotIndex;
- (struct CGRect)p_cacheErasableBounds;
- (void)p_cacheDimensionsForHeight:(double *)arg1 depth:(double *)arg2 width:(double *)arg3;
- (id)description;
- (_Bool)p_getTransform:(struct CGAffineTransform *)arg1 fromDescendant:(id)arg2;
- (_Bool)appendOpticalAlignToSpec:(struct Spec *)arg1 offset:(struct CGPoint)arg2;
- (void)renderIntoContext:(struct CGContext *)arg1 offset:(struct CGPoint)arg2;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;
- (id)initWithChildBoxes:(id)arg1;
- (id)initWithChildBoxes:(id)arg1 pivotIndex:(unsigned long long)arg2;

@end

@interface EQKitOffsetVBox : EQKitVBox
{
    double mOffset;
}

@property(readonly, nonatomic) double offset; // @synthesize offset=mOffset;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)p_cacheDimensionsForHeight:(double *)arg1 depth:(double *)arg2 width:(double *)arg3;
- (id)initWithChildBoxes:(id)arg1 pivotIndex:(unsigned long long)arg2 offset:(double)arg3;
- (id)initWithChildBoxes:(id)arg1 pivotIndex:(unsigned long long)arg2;
- (id)initWithChildBoxes:(id)arg1;
- (id)init;

@end

@interface EQKitOverlayBox : EQKitBox
{
    EQKitBox *mBox;
    EQKitBox *mOverlayBox;
}

@property(readonly, nonatomic) EQKitBox *overlayBox; // @synthesize overlayBox=mOverlayBox;
@property(readonly, nonatomic) EQKitBox *box; // @synthesize box=mBox;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)p_getTransform:(struct CGAffineTransform *)arg1 fromDescendant:(id)arg2;
- (_Bool)appendOpticalAlignToSpec:(struct Spec *)arg1 offset:(struct CGPoint)arg2;
- (void)renderIntoContext:(struct CGContext *)arg1 offset:(struct CGPoint)arg2;
- (struct CGRect)erasableBounds;
- (double)depth;
- (double)height;
- (double)width;
- (void)dealloc;
- (id)initWithBox:(id)arg1 overlayBox:(id)arg2;

@end

@interface EQKitPaddedBox : EQKitBox
{
    EQKitBox *mBox;
    double mHeight;
    double mDepth;
    double mWidth;
    double mLspace;
    double mVoffset;
}

@property(readonly, nonatomic) double voffset; // @synthesize voffset=mVoffset;
@property(readonly, nonatomic) double lspace; // @synthesize lspace=mLspace;
@property(readonly, nonatomic) EQKitBox *box; // @synthesize box=mBox;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)p_getTransform:(struct CGAffineTransform *)arg1 fromDescendant:(id)arg2;
- (_Bool)appendOpticalAlignToSpec:(struct Spec *)arg1 offset:(struct CGPoint)arg2;
- (void)renderIntoContext:(struct CGContext *)arg1 offset:(struct CGPoint)arg2;
- (struct CGRect)erasableBounds;
@property(readonly, nonatomic) double depth;
@property(readonly, nonatomic) double height;
- (double)opticalAlignWidth;
@property(readonly, nonatomic) double width;
- (void)dealloc;
- (id)initWithBox:(id)arg1 height:(double)arg2 width:(double)arg3 depth:(double)arg4 lspace:(double)arg5 voffset:(double)arg6;
- (id)init;

@end

@interface EQKitPathBox : EQKitBox
{
    struct CGPath *mCGPath;
    double mHeight;
    double mPaddingLeft;
    double mPaddingRight;
    double mDepth;
    double mWidth;
    _Bool mDimensionsValid;
    struct CGRect mErasableBounds;
    _Bool mErasableBoundsValid;
    struct CGColor *mCGColor;
    int mDrawingMode;
    double mLineWidth;
}

@property(readonly, nonatomic) double lineWidth; // @synthesize lineWidth=mLineWidth;
@property(readonly, nonatomic) int drawingMode; // @synthesize drawingMode=mDrawingMode;
@property(readonly, nonatomic) struct CGColor *color; // @synthesize color=mCGColor;
@property(readonly, nonatomic) double paddingRight; // @synthesize paddingRight=mPaddingRight;
@property(readonly, nonatomic) double paddingLeft; // @synthesize paddingLeft=mPaddingLeft;
@property(readonly, nonatomic) double height; // @synthesize height=mHeight;
@property(readonly, nonatomic) struct CGPath *cgPath; // @synthesize cgPath=mCGPath;
- (struct CGRect)p_cacheErasableBounds;
- (void)p_cacheDimensions;
- (id)description;
- (_Bool)appendOpticalAlignToSpec:(struct Spec *)arg1 offset:(struct CGPoint)arg2;
- (void)renderIntoContext:(struct CGContext *)arg1 offset:(struct CGPoint)arg2;
- (struct CGRect)erasableBounds;
@property(readonly, nonatomic) double width;
@property(readonly, nonatomic) double depth;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)init;
- (id)initWithCGPath:(struct CGPath *)arg1 height:(double)arg2 cgColor:(struct CGColor *)arg3 drawingMode:(int)arg4 lineWidth:(double)arg5;
- (id)initWithCGPath:(struct CGPath *)arg1 height:(double)arg2 cgColor:(struct CGColor *)arg3;
- (id)initWithCGPath:(struct CGPath *)arg1 height:(double)arg2 paddingLeft:(double)arg3 paddingRight:(double)arg4 cgColor:(struct CGColor *)arg5;
- (id)initWithCGPath:(struct CGPath *)arg1 height:(double)arg2 paddingLeft:(double)arg3 paddingRight:(double)arg4 cgColor:(struct CGColor *)arg5 drawingMode:(int)arg6 lineWidth:(double)arg7;

@end

@interface EQKitRule : EQKitBox
{
    double mHeight;
    double mDepth;
    double mWidth;
    struct CGColor *mCGColor;
}

@property(readonly, nonatomic) struct CGColor *color; // @synthesize color=mCGColor;
@property(readonly, nonatomic) double width; // @synthesize width=mWidth;
@property(readonly, nonatomic) double depth; // @synthesize depth=mDepth;
@property(readonly, nonatomic) double height; // @synthesize height=mHeight;
- (id)description;
- (_Bool)appendOpticalAlignToSpec:(struct Spec *)arg1 offset:(struct CGPoint)arg2;
- (void)renderIntoContext:(struct CGContext *)arg1 offset:(struct CGPoint)arg2;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)init;
- (id)initWithHeight:(double)arg1 depth:(double)arg2 width:(double)arg3 cgColor:(struct CGColor *)arg4;

@end

@interface EQKitStringBox : EQKitBox
{
    NSAttributedString *mAttributedString;
    struct __CTLine *mLine;
    double mHeight;
    double mDepth;
    double mWidth;
    struct CGRect mErasableBounds;
    _Bool mDimensionsValid;
    struct CGColor *mCGColor;
}

@property(readonly, nonatomic) struct CGColor *color; // @synthesize color=mCGColor;
@property(readonly, nonatomic) NSAttributedString *attributedString; // @synthesize attributedString=mAttributedString;
- (void)p_cacheDimensions;
- (id)description;
- (_Bool)appendOpticalAlignToSpec:(struct Spec *)arg1 offset:(struct CGPoint)arg2;
- (double)positionOfCharacterAtIndex:(unsigned long long)arg1;
- (void)renderIntoContext:(struct CGContext *)arg1 offset:(struct CGPoint)arg2;
@property(readonly, nonatomic) struct __CTLine *line;
- (struct CGRect)erasableBounds;
@property(readonly, nonatomic) double width;
@property(readonly, nonatomic) double depth;
@property(readonly, nonatomic) double height;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)init;
- (id)initWithAttributedString:(id)arg1 cgColor:(struct CGColor *)arg2;

@end

@interface EQKitVShift : EQKitBox
{
    EQKitBox *mBox;
    double mOffset;
}

@property(readonly, nonatomic) double offset; // @synthesize offset=mOffset;
@property(readonly, nonatomic) EQKitBox *box; // @synthesize box=mBox;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)p_getTransform:(struct CGAffineTransform *)arg1 fromDescendant:(id)arg2;
- (_Bool)appendOpticalAlignToSpec:(struct Spec *)arg1 offset:(struct CGPoint)arg2;
- (void)renderIntoContext:(struct CGContext *)arg1 offset:(struct CGPoint)arg2;
- (struct CGRect)erasableBounds;
- (double)depth;
- (double)height;
- (double)width;
- (void)dealloc;
- (id)initWithBox:(id)arg1 offset:(double)arg2;
- (id)init;

@end

@interface EQKitVSpace : EQKitBox
{
    double mHeight;
    double mDepth;
}

@property(readonly, nonatomic) double depth; // @synthesize depth=mDepth;
@property(readonly, nonatomic) double height; // @synthesize height=mHeight;
- (_Bool)appendOpticalAlignToSpec:(struct Spec *)arg1 offset:(struct CGPoint)arg2;
@property(readonly, nonatomic) double layoutDepth;
@property(readonly, nonatomic) double layoutHeight;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;
- (id)initWithHeight:(double)arg1 depth:(double)arg2;

@end

@interface NSArray (TSSStyleAdditions)
- (int)propertyAtIndex:(unsigned int)arg1;
@end

@interface NSCharacterSet (SFWPAdditions)
+ (id)lineBreakingCharacterSet;
+ (id)postSmartSet;
+ (id)preSmartSet;
+ (id)allQuotesCharacterSetExcludingRight;
+ (id)allQuotesCharacterSetExcludingLeft;
+ (id)smartQuotesCharacterSet;
+ (id)smartDoubleQuotesCharacterSet;
+ (id)smartSingleQuotesCharacterSet;
+ (id)normalQuotesCharacterSet;
+ (id)spaceCharacterSet;
+ (id)invisibleCharacterSet;
+ (id)breakingSpaceCharacterSet;
@end

@interface NSError (TSKWarningAdditions)
+ (id)errorWithTSKWarning:(id)arg1;
@end

@interface NSError (TSPersistence)
+ (id)tsp_recoverableErrorWithError:(id)arg1;
+ (id)tsp_recoverableErrorWithCode:(long long)arg1;
+ (id)tsp_errorWithCode:(long long)arg1 underlyingError:(id)arg2;
+ (id)tsp_errorWithCode:(long long)arg1;
- (_Bool)tsp_isRecoverable;
@end

@interface NSFileCoordinator (TSPersistence)
+ (_Bool)tsp_coordinateWritingItemAtURL:(id)arg1 options:(unsigned long long)arg2 writingItemAtURL:(id)arg3 options:(unsigned long long)arg4 filePresenter:(id)arg5 error:(id *)arg6 byAccessor:(CDUnknownBlockType)arg7;
+ (_Bool)tsp_coordinateWritingItemAtURL:(id)arg1 options:(unsigned long long)arg2 filePresenter:(id)arg3 error:(id *)arg4 byAccessor:(CDUnknownBlockType)arg5;
+ (_Bool)tsp_coordinateReadingItemAtURL:(id)arg1 options:(unsigned long long)arg2 writingItemAtURL:(id)arg3 options:(unsigned long long)arg4 filePresenter:(id)arg5 error:(id *)arg6 byAccessor:(CDUnknownBlockType)arg7;
+ (_Bool)tsp_coordinateReadingItemAtURL:(id)arg1 options:(unsigned long long)arg2 filePresenter:(id)arg3 error:(id *)arg4 byAccessor:(CDUnknownBlockType)arg5;
+ (void)tsp_removeFilePresenter:(id)arg1;
+ (void)tsp_addFilePresenter:(id)arg1;
@end

@interface NSFileManager (TSPersistence)
- (void)assertDefaultFileProtectionAtDocumentURL:(id)arg1;
- (_Bool)setDefaultFileProtectionForDirectoryPath:(id)arg1 error:(id *)arg2;
- (_Bool)setDefaultFileProtectionAtDocumentURL:(id)arg1 error:(id *)arg2;
@end

@interface NSMapTable (TSPersistence)
+ (id)newTspWeakObjectsMapTable;
+ (id)newTspStrongObjectsMapTable;
- (void)enumerateIdentifiersAndObjectsUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateObjectsUsingBlock:(CDUnknownBlockType)arg1;
- (void)tsp_removeObjectForIdentifier:(long long)arg1;
- (id)tsp_objectForIdentifier:(long long)arg1;
- (void)tsp_setObject:(id)arg1 forIdentifier:(long long)arg2;
@end

@interface NSMutableArray (TSSStyleAdditions)
- (void)addProperty:(int)arg1;
@end

@interface NSMutableCharacterSet (SFWPAdditions)
- (id)initWithCharacters:(const unsigned short *)arg1 length:(unsigned long long)arg2;
@end

@interface NSMutableString (TSWPStorage_conversion)
- (void)replaceBreaksWithPlainTextVersions;
@end

@interface NSNull (TSDColorFill_Additions) <TSDPathPainter>
- (void)drawSwatchInRect:(struct CGRect)arg1 inContext:(struct CGContext *)arg2;
- (void)paintPath:(struct CGPath *)arg1 inContext:(struct CGContext *)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@end

@interface NSNull (TSDMixingAdditions) <TSDMixing>
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
@end

@interface NSNumber (TSDMixingAdditions) <TSDMixing>
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
@end

@interface NSObject (TSHOperationDelegate)
- (double)operation:(id)arg1 connection:(id)arg2 restartDelayForError:(id)arg3;
- (_Bool)operation:(id)arg1 connection:(id)arg2 shouldRestartForError:(id)arg3;
- (id)operation:(id)arg1 connection:(id)arg2 willCacheResponse:(id)arg3;
- (void)operation:(id)arg1 connection:(id)arg2 didFailWithError:(id)arg3;
- (void)operationDidFinish:(id)arg1;
- (void)operation:(id)arg1 connectionDidFinishLoading:(id)arg2;
- (void)operation:(id)arg1 connection:(id)arg2 didSendBodyData:(long long)arg3 totalBytesWritten:(long long)arg4 totalBytesExpectedToWrite:(long long)arg5;
- (void)operation:(id)arg1 connection:(id)arg2 didReceiveData:(id)arg3;
- (void)operation:(id)arg1 connection:(id)arg2 didReceiveResponse:(id)arg3;
- (void)operation:(id)arg1 willStartRequest:(id)arg2;
- (void)operation:(id)arg1 didStartRequest:(id)arg2 withConnection:(id)arg3;
- (void)operation:(id)arg1 connection:(id)arg2 didCancelAuthenticationChallenge:(id)arg3;
@end

@interface NSObject (TSHOperationQueue)
- (void)operationQueue:(id)arg1 dequeuedOperation:(id)arg2;
- (void)operationQueue:(id)arg1 didStartOperation:(id)arg2;
@end

@interface NSObject (TSHRequestQueue)
- (void)requestQueue:(id)arg1 dequeuedRequest:(id)arg2;
- (void)requestQueue:(id)arg1 didCompleteRequest:(id)arg2;
- (void)requestQueue:(id)arg1 didStartRequest:(id)arg2 withConnection:(id)arg3;
- (void)requestQueue:(id)arg1 willStartRequest:(id)arg2;
@end

@interface NSObject (TSHXmlOperationDelegate)
- (void)operation:(id)arg1 parser:(id)arg2 validationErrorOccurred:(id)arg3;
- (void)operation:(id)arg1 parser:(id)arg2 parseErrorOccurred:(id)arg3;
- (id)operation:(id)arg1 parser:(id)arg2 resolveExternalEntityName:(id)arg3 systemID:(id)arg4;
- (void)operation:(id)arg1 parser:(id)arg2 foundCDATA:(id)arg3;
- (void)operation:(id)arg1 parser:(id)arg2 foundComment:(id)arg3;
- (void)operation:(id)arg1 parser:(id)arg2 foundProcessingInstructionWithTarget:(id)arg3 data:(id)arg4;
- (void)operation:(id)arg1 parser:(id)arg2 foundIgnorableWhitespace:(id)arg3;
- (void)operation:(id)arg1 parser:(id)arg2 foundCharacters:(id)arg3;
- (void)operation:(id)arg1 parser:(id)arg2 didEndMappingPrefix:(id)arg3;
- (void)operation:(id)arg1 parser:(id)arg2 didStartMappingPrefix:(id)arg3 toURI:(id)arg4;
- (void)operation:(id)arg1 parser:(id)arg2 didEndElement:(id)arg3 namespaceURI:(id)arg4 qualifiedName:(id)arg5;
- (void)operation:(id)arg1 parser:(id)arg2 didStartElement:(id)arg3 namespaceURI:(id)arg4 qualifiedName:(id)arg5 attributes:(id)arg6;
- (void)operation:(id)arg1 parser:(id)arg2 foundExternalEntityDeclarationWithName:(id)arg3 publicID:(id)arg4 systemID:(id)arg5;
- (void)operation:(id)arg1 parser:(id)arg2 foundInternalEntityDeclarationWithName:(id)arg3 value:(id)arg4;
- (void)operation:(id)arg1 parser:(id)arg2 foundElementDeclarationWithName:(id)arg3 model:(id)arg4;
- (void)operation:(id)arg1 parser:(id)arg2 foundAttributeDeclarationWithName:(id)arg3 forElement:(id)arg4 type:(id)arg5 defaultValue:(id)arg6;
- (void)operation:(id)arg1 parser:(id)arg2 foundUnparsedEntityDeclarationWithName:(id)arg3 publicID:(id)arg4 systemID:(id)arg5 notationName:(id)arg6;
- (void)operation:(id)arg1 parser:(id)arg2 foundNotationDeclarationWithName:(id)arg3 publicID:(id)arg4 systemID:(id)arg5;
- (void)operation:(id)arg1 parserDidEndDocument:(id)arg2;
- (void)operation:(id)arg1 parserDidStartDocument:(id)arg2;
@end

@interface NSString (TSKSearch)
+ (id)regexStringForSearchString:(id)arg1 options:(unsigned long long)arg2;
- (id)stringByReplacingOccurrencesOfString:(id)arg1 withString:(id)arg2 searchOptions:(unsigned long long)arg3 range:(struct _NSRange)arg4 replacementCount:(unsigned long long *)arg5;
- (id)stringByCapitalizingToMatchString:(id)arg1 range:(struct _NSRange)arg2 searchOptions:(unsigned long long)arg3;
- (struct _NSRange)rangeOfString:(id)arg1 searchOptions:(unsigned long long)arg2 updatingSearchRange:(struct _NSRange *)arg3;
@end

@interface NSString (TSPersistence)
+ (id)tsp_stringWithExtensionFieldComponent:(unsigned int)arg1;
+ (id)tsp_stringForDigest:(const char *)arg1 length:(unsigned long long)arg2;
- (id)tsp_stringByAppendingExtensionFieldComponent:(unsigned int)arg1;
@end

@interface NSString (TSWPAdditions)
+ (id)stringForValue:(unsigned int)arg1 withPageNumberFormat:(int)arg2;
+ (id)stringForValue:(unsigned int)arg1 withListNumberFormat:(int)arg2 includeFormatting:(_Bool)arg3;
+ (id)stringForValue:(unsigned int)arg1 withListNumberFormat:(int)arg2;
+ (unsigned long long)numberForString:(id)arg1 withPageNumberFormat:(int)arg2;
+ (unsigned long long)numberForString:(id)arg1 withListNumberFormat:(int)arg2;
- (unsigned int)utf32CharacterAtIndex:(unsigned long long)arg1;
- (int)contentsScriptInRange:(struct _NSRange)arg1;
- (int)contentsScript;
- (id)replaceOccurrencesOfCharactersInSet:(id)arg1 minimumConsecutiveLength:(unsigned long long)arg2 replaceString:(id)arg3;
- (_Bool)isAllWhitespaceInRange:(struct _NSRange)arg1;
- (struct _NSRange)rangeOfWordAtCharacterIndex:(unsigned long long)arg1 range:(struct _NSRange)arg2 includePreviousWord:(_Bool)arg3;
- (struct _NSRange)rangeOfCharactersFromSet:(id)arg1 index:(unsigned long long)arg2;
- (unsigned long long)findIndexOfCharacter:(unsigned short)arg1 range:(struct _NSRange)arg2;
- (id)stringByNormalizingParagraphBreaks;
@end

@interface NSThread (TSPersistence)
+ (void)tsp_performSynchronousOperationMarkingThreadWithKey:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
+ (void)tsp_performSynchronousOperationWithReadFileAccessUsingBlock:(CDUnknownBlockType)arg1;
+ (_Bool)tsp_hasReadFileAccess;
+ (void)tsp_performSynchronousArchiverOperationUsingBlock:(CDUnknownBlockType)arg1;
+ (_Bool)tsp_isArchiverThread;
@end

@interface NSURL (TSPersistence)
- (_Bool)isOnNonHFSVolume;
- (_Bool)isUbiquitous;
- (id)URLExceptPrivate;
- (id)pathExceptPrivate;
- (_Bool)isAssetsLibraryURL;
@end

@interface NSURLCredentialStorage (TSHAdditions)
- (void)purge;
@end

@interface NSUserDefaults (TSKRoleAdditions)
- (void)setBool:(_Bool)arg1 forKeyInCurrentRole:(id)arg2;
- (void)setDouble:(double)arg1 forKeyInCurrentRole:(id)arg2;
- (void)setFloat:(float)arg1 forKeyInCurrentRole:(id)arg2;
- (void)setInteger:(long long)arg1 forKeyInCurrentRole:(id)arg2;
- (_Bool)boolForKeyInCurrentRole:(id)arg1;
- (double)doubleForKeyInCurrentRole:(id)arg1;
- (float)floatForKeyInCurrentRole:(id)arg1;
- (long long)integerForKeyInCurrentRole:(id)arg1;
- (id)dataForKeyInCurrentRole:(id)arg1;
- (id)dictionaryForKeyInCurrentRole:(id)arg1;
- (id)arrayForKeyInCurrentRole:(id)arg1;
- (id)stringForKeyInCurrentRole:(id)arg1;
- (void)removeObjectForKeyInCurrentRole:(id)arg1;
- (void)setObject:(id)arg1 forKeyInCurrentRole:(id)arg2;
- (id)objectForKeyInCurrentRole:(id)arg1;
- (void)setBool:(_Bool)arg1 forKey:(id)arg2 inRole:(id)arg3;
- (void)setDouble:(double)arg1 forKey:(id)arg2 inRole:(id)arg3;
- (void)setFloat:(float)arg1 forKey:(id)arg2 inRole:(id)arg3;
- (void)setInteger:(long long)arg1 forKey:(id)arg2 inRole:(id)arg3;
- (_Bool)boolForKey:(id)arg1 inRole:(id)arg2;
- (double)doubleForKey:(id)arg1 inRole:(id)arg2;
- (float)floatForKey:(id)arg1 inRole:(id)arg2;
- (long long)integerForKey:(id)arg1 inRole:(id)arg2;
- (id)dataForKey:(id)arg1 inRole:(id)arg2;
- (id)dictionaryForKey:(id)arg1 inRole:(id)arg2;
- (id)arrayForKey:(id)arg1 inRole:(id)arg2;
- (id)stringForKey:(id)arg1 inRole:(id)arg2;
- (void)removeObjectForKey:(id)arg1 inRole:(id)arg2;
- (void)setObject:(id)arg1 forKey:(id)arg2 inRole:(id)arg3;
- (id)objectForKey:(id)arg1 inRole:(id)arg2;
- (id)p_currentRole;
- (id)keyForRole:(id)arg1;
@end

@interface NSValue (TSDGeometryAdditions)
+ (id)valueWithTSDEdgeInsets:(struct UIEdgeInsets)arg1;
- (struct UIEdgeInsets)TSDEdgeInsetsValue;
@end

@interface NSValue (TSDMixingAdditions) <TSDMixing>
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
@end

@interface TSDiOSCanvasViewController : UIViewController <TSDCanvasLayerHosting, TSDCanvasZoomTrackerDelegate, UIGestureRecognizerDelegate>
{
    TSDInteractiveCanvasController *mICC;
    id <TSDiOSCanvasViewControllerDelegate> mDelegate;
    _Bool mContextMenuMightBeDisplayed;
    UITapGestureRecognizer *mSingleTapGestureRecognizer;
    UITapGestureRecognizer *mDoubleTapGestureRecognizer;
    TSDEditMenuTapGestureRecognizer *mEditMenuTapGestureRecognizer;
    TSDKnobDragGestureRecognizer *mKnobDragGestureRecognizer;
    TSDMultiSelectGestureRecognizer *mMultiSelectGestureRecognizer;
    TSDRepDragGestureRecognizer *mRepDragGestureRecognizer;
    TSDRepRotateGestureRecognizer *mRepRotateGestureRecognizer;
    TSDCanvasZoomPinchGestureRecognizer *mZoomGestureRecognizer;
    TSDNudgeGestureRecognizer *mNudgeGestureRecognizer;
    TSDAllTouchesDoneGestureRecognizer *mAllTouchesDoneGestureRecognizer;
    TSDPreventScrollGestureRecognizer *mPreventScrollGestureRecognizer;
    UIPanGestureRecognizer *mGuidedPanGestureRecognizer;
    TSDGuidedPanController *mGuidedPanController;
    _Bool mHasBeenTornDown;
    _Bool mIsPopoverGestureInFlight;
    _Bool mInspectorModeEnabled;
    NSMutableArray *mInspectorGestureRecognizersToReenable;
    CDUnknownBlockType mInspectorSingleTapBlock;
    _Bool mCurrentlyScrolling;
    _Bool mRotating;
    TSDCanvasZoomTracker *mCanvasZoomTracker;
    struct CGPoint mLastZoomHUDLocation;
    _Bool _isRotating;
    TSDCanvasSubviewsController *mSubviewsController;
}

@property(readonly, retain, nonatomic) TSDCanvasSubviewsController *subviewsController; // @synthesize subviewsController=mSubviewsController;
@property(readonly, nonatomic) _Bool isRotating; // @synthesize isRotating=_isRotating;
@property(nonatomic) _Bool contextMenuMightBeDisplayed; // @synthesize contextMenuMightBeDisplayed=mContextMenuMightBeDisplayed;
@property(readonly, nonatomic) _Bool isPopoverGestureInFlight; // @synthesize isPopoverGestureInFlight=mIsPopoverGestureInFlight;
@property(readonly, retain, nonatomic) UIPanGestureRecognizer *guidedPanGestureRecognizer; // @synthesize guidedPanGestureRecognizer=mGuidedPanGestureRecognizer;
@property(readonly, retain, nonatomic) TSDPreventScrollGestureRecognizer *preventScrollGestureRecognizer; // @synthesize preventScrollGestureRecognizer=mPreventScrollGestureRecognizer;
@property(retain, nonatomic) TSDAllTouchesDoneGestureRecognizer *allTouchesDoneGestureRecognizer; // @synthesize allTouchesDoneGestureRecognizer=mAllTouchesDoneGestureRecognizer;
@property(retain, nonatomic) TSDNudgeGestureRecognizer *nudgeGestureRecognizer; // @synthesize nudgeGestureRecognizer=mNudgeGestureRecognizer;
@property(retain, nonatomic) UIPinchGestureRecognizer *zoomGestureRecognizer; // @synthesize zoomGestureRecognizer=mZoomGestureRecognizer;
@property(retain, nonatomic) TSDRepRotateGestureRecognizer *repRotateGestureRecognizer; // @synthesize repRotateGestureRecognizer=mRepRotateGestureRecognizer;
@property(retain, nonatomic) TSDRepDragGestureRecognizer *repDragGestureRecognizer; // @synthesize repDragGestureRecognizer=mRepDragGestureRecognizer;
@property(retain, nonatomic) TSDMultiSelectGestureRecognizer *multiSelectGestureRecognizer; // @synthesize multiSelectGestureRecognizer=mMultiSelectGestureRecognizer;
@property(retain, nonatomic) TSDKnobDragGestureRecognizer *knobDragGestureRecognizer; // @synthesize knobDragGestureRecognizer=mKnobDragGestureRecognizer;
@property(retain, nonatomic) TSDEditMenuTapGestureRecognizer *editMenuTapGestureRecognizer; // @synthesize editMenuTapGestureRecognizer=mEditMenuTapGestureRecognizer;
@property(retain, nonatomic) UITapGestureRecognizer *doubleTapGestureRecognizer; // @synthesize doubleTapGestureRecognizer=mDoubleTapGestureRecognizer;
@property(retain, nonatomic) UITapGestureRecognizer *singleTapGestureRecognizer; // @synthesize singleTapGestureRecognizer=mSingleTapGestureRecognizer;
@property(nonatomic) id <TSDiOSCanvasViewControllerDelegate> delegate; // @synthesize delegate=mDelegate;
@property(nonatomic) TSDInteractiveCanvasController *interactiveCanvasController; // @synthesize interactiveCanvasController=mICC;
- (id)topLevelReps;
@property(readonly, retain, nonatomic) UIViewController *containerViewController;
@property(readonly, retain, nonatomic) UIView *containerView;
@property(readonly, retain, nonatomic) CALayer *containerLayer;
@property(readonly, retain, nonatomic) CALayer *topLevelTilingLayer;
- (Class)audioInspectorPaneClass;
- (Class)movieInspectorPaneClass;
- (id)newAudioPlaybackHUDWithFrame:(struct CGRect)arg1 audioRep:(id)arg2 delegate:(id)arg3;
- (void)hideMoviePlaybackHUD;
- (void)showMoviePlaybackHUD:(id)arg1 withFrame:(struct CGRect)arg2;
- (id)newMoviePlaybackHUDWithFrame:(struct CGRect)arg1 playerController:(id)arg2 movieRep:(id)arg3;
- (void)presentMovieCompatibilityAlertForUnplayableMoviePasteboardDrawableProviders:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)presentMovieCompatibilityAlertForUnplayableMovieURLs:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)endModalOperation;
- (void)beginModalOperationWithLocalizedMessage:(id)arg1 progress:(id)arg2 cancelHandler:(CDUnknownBlockType)arg3;
- (void)presentErrors:(id)arg1 withLocalizedDescription:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)p_didPresentErrorWithRecovery:(_Bool)arg1 completionHandler:(void *)arg2;
- (void)presentError:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)p_willPresentError:(id)arg1;
- (void)p_editMenuDidHide:(id)arg1;
- (void)p_guidedPanWithGesture:(id)arg1;
@property(readonly, nonatomic) _Bool isDraggingViaGuidedPan;
- (void)canvasZoomTrackerDidFinish:(id)arg1;
- (void)canvasZoomTrackerDidEndFinalZoomAnimation:(id)arg1;
- (void)canvasZoomTrackerWillBeginFinalZoomAnimation:(id)arg1;
- (void)canvasZoomTrackerDidEndViewScaleFeedback:(id)arg1;
- (void)canvasZoomTracker:(id)arg1 willUpdateViewScaleFeedbackWithScale:(double)arg2;
- (void)canvasZoomTracker:(id)arg1 willBeginViewScaleFeedbackWithFastPinch:(_Bool)arg2;
- (void)p_zoomWithGesture:(id)arg1;
- (void)p_handleSingleTapGesture:(id)arg1;
- (void)addInspectorPanZoomModeGRsToArray:(id)arg1;
- (void)endInspectorPanZoomMode;
- (void)beginInspectorPanZoomModeWithSingleTapBlock:(CDUnknownBlockType)arg1;
- (void)forceStopScrolling;
- (void)stopScrolling;
- (void)unlock:(id)arg1;
- (void)cut:(id)arg1;
- (_Bool)canPerformAction:(SEL)arg1 withSender:(id)arg2;
- (_Bool)canBecomeFirstResponder;
- (id)extraMenuItems;
- (id)itemsToAddToEditMenuForRep:(id)arg1;
- (void)hideEditMenu;
- (void)toggleEditMenuForCurrentSelection;
- (void)showEditMenu:(id)arg1;
- (void)p_buildMenuItems:(id)arg1 forSelection:(id)arg2;
- (void)showEditMenuForSelection:(id)arg1;
- (struct CGRect)targetRectForEditMenu:(id)arg1;
- (id)viewForGestureRecognizer:(id)arg1;
- (_Bool)repDragGestureRecognizer:(id)arg1 shouldBeginTapHoldTrackingAtScaledPoint:(struct CGPoint)arg2;
- (_Bool)allowTouchOutsideCanvasView:(id)arg1 forGesture:(id)arg2;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (_Bool)shouldIgnoreTextGestures;
- (_Bool)shouldSelectAndShowEditMenuOnFirstTapForRep:(id)arg1;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (void)p_handleTapForEditMenu:(id)arg1;
- (void)p_allTouchesDone:(id)arg1;
- (_Bool)handleDoubleTapAtPoint:(struct CGPoint)arg1 withRecognizer:(id)arg2;
- (void)handleDoubleTap:(id)arg1;
- (_Bool)handleSingleTapAtPoint:(struct CGPoint)arg1 withRecognizer:(id)arg2;
- (void)i_updateZoomGestureRecognizer;
- (void)resetGesturesForContextSwitch;
- (void)setUpGestureRecognizers;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;
@property(readonly, nonatomic) NSSet *panGestureRecognizers;
@property(readonly, nonatomic) NSArray *commonGestureRecognizers;
- (id)hitKnobWithTouch:(id)arg1 returningRep:(id *)arg2;
- (id)hitRepWithTouch:(id)arg1;
- (void)canvasDidUpdateRepsFromLayouts;
- (_Bool)isInFocusedContainer;
- (id)viewController;
- (id)asiOSCVC;
@property(readonly, nonatomic) CALayer *clippingLayer;
@property(readonly, nonatomic) CALayer *layer;
@property(readonly, nonatomic) TSDCanvasView *canvasView;
@property(readonly, nonatomic) TSDCanvasLayer *canvasLayer;
- (_Bool)becomeFirstResponder;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)loadView;
- (void)teardown;
- (void)dealloc;
- (void)forwardInvocation:(id)arg1;
- (_Bool)respondsToSelector:(SEL)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
@property(readonly, nonatomic) CDStruct_499be82c centerPlusMovementContentPlacement;
@property(readonly, nonatomic) CDStruct_499be82c touchContentPlacement;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSWPiOSCanvasViewController : TSDiOSCanvasViewController <_UINonEditableTextSelectionForceGestureDelegate>
{
    UIGestureRecognizer *_hyperlinkGestureRecognizer;
    TSWPSwipeGestureRecognizer *_rightSwipeGestureRecognizer;
    TSWPSwipeGestureRecognizer *_leftSwipeGestureRecognizer;
    TSWPTwoPartAction *_delayedTapAction;
    NSMutableArray *_gestureRecognizers;
    UITapGestureRecognizer *_secondarySingleTapGestureRecognizer;
    TSWPHardPressGestureRecognizer *_hardPressGesture;
}

@property(retain, nonatomic) TSWPHardPressGestureRecognizer *hardPressGesture; // @synthesize hardPressGesture=_hardPressGesture;
@property(readonly, nonatomic) UIGestureRecognizer *hyperlinkGestureRecognizer; // @synthesize hyperlinkGestureRecognizer=_hyperlinkGestureRecognizer;
@property(readonly, nonatomic) UITapGestureRecognizer *secondarySingleTapGestureRecognizer; // @synthesize secondarySingleTapGestureRecognizer=_secondarySingleTapGestureRecognizer;
@property(readonly, nonatomic) TSWPSwipeGestureRecognizer *textRightSwipeGestureRecognizer; // @synthesize textRightSwipeGestureRecognizer=_rightSwipeGestureRecognizer;
@property(readonly, nonatomic) TSWPSwipeGestureRecognizer *textLeftSwipeGestureRecognizer; // @synthesize textLeftSwipeGestureRecognizer=_leftSwipeGestureRecognizer;
- (id)p_newSwipeGestureRecognizerWithDirection:(int)arg1 numberOfTouchesRequired:(unsigned int)arg2;
- (void)p_addSwipeGestureRecognizer:(id)arg1 failRequiredFor:(id)arg2;
@property(readonly) TSWPInteractiveCanvasController *interactiveCanvasController;
- (id)hyperlinkUICustomStringForURLString:(id)arg1;
- (void)hyperlinkUIShowCustomUIforRep:(id)arg1 field:(id)arg2;
- (_Bool)hyperlinkUIShouldShow;
- (_Bool)hyperlinkUIShouldShowCustomUI;
- (void)hyperlinkUIDidHide;
- (void)hyperlinkUIWillShow;
- (_Bool)onlyAllowTextSwipesWhenEditing;
- (void)setUpGestureDependenciesForNewCopyOfTextGesture:(id)arg1;
- (_Bool)shouldHideCanvasLayerInMagnifier;
@property(readonly, nonatomic) TSUColor *backgroundColorForMagnifier;
- (void)removeSwipeGestureRecognizers;
- (void)addSwipeGestureRecognizers;
- (_Bool)hasDelayedTapAction;
- (void)finishDelayedTapAction;
- (void)startDelayedTapAction:(id)arg1;
- (void)cancelDelayedTapAction;
- (void)p_handleHardPressGestureRecognizer:(id)arg1;
- (void)willBeginGesture;
- (void)gestureSequenceDidEnd;
- (void)gestureSequenceWillBegin;
- (id)actionForHyperlink:(id)arg1 inRep:(id)arg2 gesture:(id)arg3;
- (_Bool)canDisplayHyperlinkUI;
- (void)setUpGestureRecognizers;
- (void)dealloc;
- (void)teardown;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TIACanvasViewController : TSWPiOSCanvasViewController
{
}

- (id)p_LocalGestureRecognizers;
@property(readonly, nonatomic) TSAInteractiveCanvasController *interactiveCanvasController;
- (_Bool)wantsHyperlinkGestureRecognizer;
@property UIGestureRecognizer *hyperlinkGestureRecognizer;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (void)setUpGestureRecognizers;
- (id)commonGestureRecognizers;

@end

@interface TIADocument : UIDocument <TSADocumentRootDelegate, TSKDocumentRootProvider, TSPObjectContextDelegate>
{
    int _hasPersistenceErrors;
    TSADocumentRoot *_documentRootForDocumentDidLoad;
    TSADocumentRoot *_suspendedDocumentRoot;
    TSPObjectContext *_context;
    NSObject<OS_dispatch_queue> *_ioQueue;
    NSObject<OS_dispatch_queue> *_ioOperationQueue;
    id _documentStateChangedObserver;
    _Bool _passwordEntryWasAbandoned;
    _Bool _isShowingConflictResolutionSheet;
    _Bool _isClosingWithoutSaving;
    _Bool _isReadOnly;
    _Bool _documentNeedsDownloadOnRevert;
    _Bool _documentRevertWasAbandoned;
    TIADocumentInfo *_documentInfo;
    id <TIADocumentPassphraseDelegate> _passphraseDelegate;
    SFUCryptoKey *_encryptionKey;
    NSString *_sourcePathForNondestructiveImport;
    TSPObjectContext *_contextForRevert;
    NSURL *_templateURL;
}

@property(copy, nonatomic) NSURL *templateURL; // @synthesize templateURL=_templateURL;
@property(retain, nonatomic) TSPObjectContext *contextForRevert; // @synthesize contextForRevert=_contextForRevert;
@property(readonly) _Bool documentRevertWasAbandoned; // @synthesize documentRevertWasAbandoned=_documentRevertWasAbandoned;
@property(readonly) _Bool documentNeedsDownloadOnRevert; // @synthesize documentNeedsDownloadOnRevert=_documentNeedsDownloadOnRevert;
@property _Bool isReadOnly; // @synthesize isReadOnly=_isReadOnly;
@property(retain, nonatomic) NSString *sourcePathForNondestructiveImport; // @synthesize sourcePathForNondestructiveImport=_sourcePathForNondestructiveImport;
@property(retain, nonatomic) SFUCryptoKey *encryptionKey; // @synthesize encryptionKey=_encryptionKey;
@property(nonatomic) id <TIADocumentPassphraseDelegate> passphraseDelegate; // @synthesize passphraseDelegate=_passphraseDelegate;
@property _Bool isClosingWithoutSaving; // @synthesize isClosingWithoutSaving=_isClosingWithoutSaving;
@property(readonly) _Bool isShowingConflictResolutionSheet; // @synthesize isShowingConflictResolutionSheet=_isShowingConflictResolutionSheet;
@property(retain, nonatomic) TIADocumentInfo *documentInfo; // @synthesize documentInfo=_documentInfo;
@property(retain, nonatomic) TSPObjectContext *context; // @synthesize context=_context;
@property(readonly) _Bool passwordEntryWasAbandoned; // @synthesize passwordEntryWasAbandoned=_passwordEntryWasAbandoned;
- (id)newExporterForType:(id)arg1 options:(id)arg2 preferredType:(id *)arg3;
@property(copy, nonatomic) NSString *documentPasswordHint;
- (_Bool)validatePassphrase:(id)arg1;
- (void)setEncryptionKeyWithPassphrase:(id)arg1;
@property(readonly, nonatomic) _Bool isPasswordProtected;
- (void)decryptedDocumentWithKey:(id)arg1;
- (void)setDocumentFileProtectionTo:(id)arg1;
- (void)setFileProtectionTo:(id)arg1 atPath:(id)arg2;
- (_Bool)_shouldPreventFileProtectionUpgradeToLevel:(id)arg1;
- (void)context:(id)arg1 didDownloadDocumentResources:(id)arg2 failedOrCancelledDocumentResources:(id)arg3 error:(id)arg4;
- (id)persistenceWarningsForData:(id)arg1 isReadable:(_Bool)arg2 isExternal:(_Bool)arg3;
- (id)additionalDocumentPropertiesForWrite;
- (id)packageDataForWrite;
- (void)coordinatedReadUsingAccessor:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) id <NSFilePresenter> filePresenter;
- (void)passwordStateDidChange;
@property(readonly, nonatomic) NSString *name;
@property(readonly) _Bool hasPersistenceErrors;
- (_Bool)shouldAbandonDocumentRevert;
- (void)documentDidLoad;
- (id)contentsForType:(id)arg1 error:(id *)arg2;
- (void)p_performSynchronousBlockOnMainThread:(CDUnknownBlockType)arg1;
- (void)closeWithCompletionHandler:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) _Bool isClosed;
@property(readonly) _Bool shouldHideForSnapshots;
@property(readonly, nonatomic) NSString *documentCachePath;
- (id)documentUUID;
- (_Bool)hasUnsavedChanges;
@property(readonly, nonatomic) TSADocumentRoot *documentRoot;
- (void)dealloc;
- (id)initWithTemporaryFileURL:(id)arg1;

// Remaining properties
@property(readonly, nonatomic) _Bool areNewExternalReferencesToDataAllowed;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, nonatomic) NSString *defaultDraftName;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) _Bool ignoreDocumentSupport;
@property(readonly, nonatomic) _Bool isDocumentSupportTemporary;
@property(readonly) Class superclass;

@end

@interface TSKApplicationDelegate : NSObject <TSKApplicationDelegate>
{
    id <TSKCompatibilityDelegate> _compatibilityDelegate;
}

+ (id)documentDirectoryPath;
+ (void)setSurrogateDelegate:(id)arg1;
+ (id)sharedDelegate;
+ (_Bool)isUnitTesting;
@property(retain, nonatomic) id <TSKCompatibilityDelegate> compatibilityDelegate; // @synthesize compatibilityDelegate=_compatibilityDelegate;
- (id)toolbarButtonForModalDoneWithTarget:(id)arg1 action:(SEL)arg2;
@property(readonly, getter=isInBackground) _Bool inBackground;
@property(readonly, getter=isActivating) _Bool activating;
- (_Bool)shouldGenerateGuidesForOffscreenLayouts;
@property(readonly, nonatomic) _Bool performanceModeEnabled;
@property(readonly, nonatomic) _Bool designModeEnabled;
- (id)defaultHyperlinkURL;
- (_Bool)openURL:(id)arg1;
- (id)validURLSchemes;
- (id)invalidURLSchemes;
- (id)appChartPropertyOverrides;
- (id)previewImageForType:(id)arg1;
- (_Bool)shouldValidateMasterLayoutWhileInsertingRows;
- (_Bool)supportsScrollingInPhoneCommentUI;
- (_Bool)supportsRTL;
- (_Bool)shouldRenderCurvedShadow;
- (_Bool)shouldRenderContactShadow;
- (struct CGRect)applicationToolbarFrame;
@property(readonly, nonatomic) _Bool isCanvasFullScreen;
@property(readonly, nonatomic) _Bool centerOnInitialSelection;
- (id)createCompatibilityDelegate;
@property(readonly, nonatomic) NSString *templateTypeDisplayName;
@property(readonly, nonatomic) NSString *documentTypeDisplayName;
@property(readonly, nonatomic) NSString *applicationName;
- (id)init;
@property(readonly, nonatomic) _Bool textInspectorShowsMoreSubpane;
@property(readonly, nonatomic) _Bool tableCellInspectorShowsNaturalAlignment;
@property(readonly, nonatomic) _Bool tableHeaderInspectorShowsRepeatHeaderRowsSwitch;
@property(readonly, nonatomic) _Bool tableHeaderInspectorShowsFreezeHeaderColumnsSwitch;
@property(readonly, nonatomic) _Bool tableHeaderInspectorShowsFreezeHeaderRowsSwitch;

@end

@interface TSABaseApplicationDelegate : TSKApplicationDelegate
{
    TSADocumentRoot *mDocumentRoot;
    id <TSADownloadDelegate> _downloadDelegate;
}

+ (void)presentAlertController:(id)arg1 animated:(_Bool)arg2;
+ (void)resetSharedConfigurations;
+ (id)sharedDelegate;
@property(retain, nonatomic) id <TSADownloadDelegate> downloadDelegate; // @synthesize downloadDelegate=_downloadDelegate;
@property(nonatomic) TSADocumentRoot *documentRoot; // @synthesize documentRoot=mDocumentRoot;
- (id)existingNestedDocumentPathForPath:(id)arg1;
- (_Bool)URLIsValidForImportedHyperlink:(id)arg1;
- (_Bool)openURL:(id)arg1;
- (id)validURLSchemes;
- (id)invalidURLSchemes;
- (double)maximumAspectRatioForPreviewImage;
- (double)mimimumAspectRatioForPreviewImage;
- (id)applicationTemplateVariantsForLocale:(struct __CFLocale *)arg1;
@property(readonly, nonatomic) NSArray *applicationTemplateVariants;
- (void)registerDefaults;
- (_Bool)isReadableDocumentType:(id)arg1;
@property(readonly, nonatomic) NSArray *importableDocumentTypes;
@property(readonly, nonatomic) NSArray *readableDocumentTypes;
@property(readonly, nonatomic) NSString *nativeSFFDocumentType;
@property(readonly, nonatomic) NSString *tangierEditingFormatDocumentType;
@property(readonly, nonatomic) NSString *templateDocumentExtension;
@property(readonly, nonatomic) NSString *templateSFFDocumentType;
@property(readonly, nonatomic) NSString *templateDocumentType;
@property(readonly, nonatomic) NSString *nativeDocumentExtension;
@property(readonly, nonatomic) NSString *nativeDocumentType;
- (void)persistenceError:(id)arg1;
- (Class)documentRootClass;
- (id)init;

@end

@interface TSAApplicationDelegate : TSABaseApplicationDelegate
{
    _Bool _terminating;
    _Bool _inBackground;
    _Bool _activating;
    CDUnknownBlockType _alertCompletionBlock;
    _Bool _hasNotifiedEnterBackground;
}

+ (id)sharedDelegate;
@property _Bool hasNotifiedEnterBackground; // @synthesize hasNotifiedEnterBackground=_hasNotifiedEnterBackground;
@property(copy, nonatomic) CDUnknownBlockType alertCompletionBlock; // @synthesize alertCompletionBlock=_alertCompletionBlock;
@property(getter=isInBackground) _Bool inBackground; // @synthesize inBackground=_inBackground;
@property(getter=isActivating) _Bool activating; // @synthesize activating=_activating;
@property(getter=isTerminating) _Bool terminating; // @synthesize terminating=_terminating;
- (id)stringForImportingDocument;
- (void)applicationDidReceiveMemoryWarning:(id)arg1;
- (_Bool)centerOnInitialSelection;
- (id)image32IconForTXTFiles;
- (id)noDocumentsImagePath;
- (id)previewImageNameForEncryptedNativeDocument;
- (id)previewImageNameForNativeDocument;
- (id)previewImageNameForDocumentType:(id)arg1;
- (void)persistenceError:(id)arg1;
- (id)init;

@end

@interface TSABundleLookupClass : NSObject
{
}

@end

@interface TSADebugTableViewController : UITableViewController
{
    NSMutableArray *_debugItems;
    TSADebugViewController *_parent;
}

- (void)hideImmediately;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)addItemWithTitle:(id)arg1 target:(id)arg2 action:(SEL)arg3;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (void)loadView;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)dealloc;
- (id)initWithParent:(id)arg1;
- (id)init;

@end

@interface TSKPopoverBasedViewController : UIViewController <TSKModalShieldDelegate, UIPopoverControllerDelegate, UINavigationControllerDelegate, TSKPopoverBasedViewControllerDismissible, TSKKeyboardObserver>
{
    TSKPopoverController *mPopoverController;
    TSKHideOnTouchOutsideViewGestureRecognizer *mHideOnTouchGestureRecognizer;
    _Bool mWrapInNavigationController;
    _Bool mUseDoneButton;
    _Bool mViewResizesWithKeyboard;
    _Bool mAllowsOutsideTouch;
    _Bool mStaysOpenOnOutsideTouches;
    UIView *mPopoverToggleView;
    id <TSKPopoverBasedViewControllerDelegate> mPopoverDelegate;
    UIViewController *mHalfHeightViewController;
    CDUnknownBlockType mHalfHeightCloseBlock;
    _Bool mHalfHeightAnimated;
    TSKModalShieldView *mHalfHeightTapShield;
    struct CGRect mHalfHeightOriginalFrame;
    UIView *mHalfHeightParentView;
    _Bool mViewControllerVisible;
    _Bool mDismissOnUndo;
    _Bool mUndoManagerNotificationsRegistered;
    _Bool mImposeContentSizeOnViewControllers;
}

@property(retain, nonatomic) UIViewController *halfHeightViewController; // @synthesize halfHeightViewController=mHalfHeightViewController;
@property(nonatomic) _Bool imposeContentSizeOnViewControllers; // @synthesize imposeContentSizeOnViewControllers=mImposeContentSizeOnViewControllers;
@property(nonatomic) _Bool dismissOnUndo; // @synthesize dismissOnUndo=mDismissOnUndo;
@property(retain, nonatomic) UIView *popoverToggleView; // @synthesize popoverToggleView=mPopoverToggleView;
@property(nonatomic) _Bool staysOpenOnOutsideTouches; // @synthesize staysOpenOnOutsideTouches=mStaysOpenOnOutsideTouches;
@property(nonatomic) _Bool allowsOutsideTouch; // @synthesize allowsOutsideTouch=mAllowsOutsideTouch;
@property(nonatomic) _Bool viewResizesWithKeyboard; // @synthesize viewResizesWithKeyboard=mViewResizesWithKeyboard;
@property(nonatomic) _Bool useDoneButton; // @synthesize useDoneButton=mUseDoneButton;
@property(nonatomic) _Bool wrapInNavigationController; // @synthesize wrapInNavigationController=mWrapInNavigationController;
@property(nonatomic) id <TSKPopoverBasedViewControllerDelegate> popoverDelegate; // @synthesize popoverDelegate=mPopoverDelegate;
- (_Bool)p_shouldResizeViewWithKeyboard;
- (double)p_originOffsetForKeyboardFrame:(struct CGRect)arg1;
- (void)p_keyboardWillHide:(_Bool)arg1 withNotification:(id)arg2;
- (void)keyboardDidHideOrUndock:(id)arg1;
- (void)keyboardWillHideOrUndock:(id)arg1;
- (void)keyboardWillShowOrDock:(id)arg1;
- (_Bool)wantsDismissButton;
- (void)navigationController:(id)arg1 willShowViewController:(id)arg2 animated:(_Bool)arg3;
- (void)p_didDismissPopover:(id)arg1;
- (void)p_applicationWillEnterFullScreen:(id)arg1;
- (void)p_willPresentPopover;
- (_Bool)isPopoverVisible;
- (void)showPopoverFromBarItem:(id)arg1;
- (void)showPopoverFromRect:(struct CGRect)arg1 inView:(id)arg2 arrowDirection:(unsigned long long)arg3 animated:(_Bool)arg4 constrainToView:(_Bool)arg5 withPadding:(double)arg6 fromToolbar:(_Bool)arg7;
- (void)showPopoverFromRect:(struct CGRect)arg1 inView:(id)arg2 arrowDirection:(unsigned long long)arg3 animated:(_Bool)arg4;
- (void)showPopoverFromRect:(struct CGRect)arg1 inView:(id)arg2;
@property(readonly, retain, nonatomic) TSKPopoverController *popoverController; // @synthesize popoverController=mPopoverController;
- (_Bool)isVisible;
- (void)dismissPopoverAnimated:(_Bool)arg1;
- (void)dismissAnimated:(_Bool)arg1;
- (void)shieldViewReceivedTap;
- (void)presentInRect:(struct CGRect)arg1 inView:(id)arg2 animated:(_Bool)arg3 modal:(_Bool)arg4 closeBlock:(CDUnknownBlockType)arg5 animations:(CDUnknownBlockType)arg6;
- (void)presentInRect:(struct CGRect)arg1 inView:(id)arg2 animated:(_Bool)arg3 modal:(_Bool)arg4 closeBlock:(CDUnknownBlockType)arg5;
- (void)p_dismissHalfHeight;
- (void)presentModallyWithTitle:(id)arg1 viewController:(id)arg2 animated:(_Bool)arg3 withDoneButton:(_Bool)arg4;
- (void)presentModallyFromBarItem:(id)arg1 viewController:(id)arg2;
- (void)presentModallyFromRect:(struct CGRect)arg1 inView:(id)arg2 viewController:(id)arg3 arrowDirection:(unsigned long long)arg4 animated:(_Bool)arg5 withDoneButton:(_Bool)arg6 constrainToView:(_Bool)arg7 withPadding:(double)arg8 fromToolbar:(_Bool)arg9;
- (void)presentModallyFromRect:(struct CGRect)arg1 inView:(id)arg2 viewController:(id)arg3 arrowDirection:(unsigned long long)arg4 animated:(_Bool)arg5 withDoneButton:(_Bool)arg6;
- (void)presentModallyFromRect:(struct CGRect)arg1 inView:(id)arg2 viewController:(id)arg3 arrowDirection:(unsigned long long)arg4 animated:(_Bool)arg5;
- (void)presentModallyFromRect:(struct CGRect)arg1 inView:(id)arg2 viewController:(id)arg3 withDoneButton:(_Bool)arg4;
- (void)presentModallyFromRect:(struct CGRect)arg1 inView:(id)arg2 viewController:(id)arg3;
- (id)p_newCloseImageBarButtonWithTarget:(id)arg1 action:(SEL)arg2;
- (void)p_showModalInViewController:(id)arg1 withTitle:(id)arg2 animated:(_Bool)arg3 withDoneButton:(_Bool)arg4;
- (void)p_registerPopoverBasedViewControllerNotifications;
- (void)p_dismissPopoverAnimated:(_Bool)arg1;
- (void)p_dismissFullscreenModalFromCloseButton;
- (void)p_dismissHalfHeightFromCloseButton;
- (void)p_dismissFullscreenModalAnimated:(_Bool)arg1;
- (void)p_informDelegateOfDidDismiss;
- (void)p_informDelegateOfWillDismiss;
- (void)p_informDelegateOfWillShow;
- (void)i_configureCloseItem:(id)arg1;
- (void)closeButtonPressed;
- (struct CGRect)frameForCurrentiPhoneOrientation;
@property(readonly, nonatomic) struct CGSize contentSize;
- (void)resetOutsideTouchWatchView;
- (void)clearOutsideTouchWatchView;
- (void)p_removeHideOnTouchGesture;
- (void)p_installHideOnTouchGesture;
- (id)p_outsideTouchWatchView;
- (void)outsideTouch:(id)arg1;
- (id)navigationBar;
- (id)p_newRootViewController;
- (id)i_contentViewController;
- (id)p_topParentViewController;
@property(readonly, nonatomic) _Bool isPopoverGestureInFlight;
@property(readonly, nonatomic) _Bool shouldHideToolbar;
- (unsigned long long)supportedInterfaceOrientations;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSADebugViewController : TSKPopoverBasedViewController
{
    UIViewController *_delegate;
    TSADebugTableViewController *_debugTableViewController;
}

- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)hideIt:(id)arg1;
- (void)showIt:(id)arg1;
- (void)toggleVisible:(id)arg1;
- (void)loadView;
- (void)addItemWithTitle:(id)arg1 target:(id)arg2 action:(SEL)arg3;
- (void)dealloc;
- (id)initWithDelegate:(id)arg1;

@end

@interface TSPObject : NSObject
{
    long long _identifier;
    long long _modifyObjectToken;
    long long _unarchiverIdentifier;
    TSPUnknownContent *_unknownContent;
    id <TSPObjectDelegate> _delegate;
}

+ (_Bool)tsp_isTransientObjectIdentifier:(long long)arg1;
@property(nonatomic) __weak id <TSPObjectDelegate> tsp_delegate; // @synthesize tsp_delegate=_delegate;
@property(nonatomic) long long tsp_modifyObjectToken; // @synthesize tsp_modifyObjectToken=_modifyObjectToken;
@property(readonly, nonatomic) TSPUnknownContent *tsp_unknownContent; // @synthesize tsp_unknownContent=_unknownContent;
@property(readonly, nonatomic) long long tsp_unarchiverIdentifier; // @synthesize tsp_unarchiverIdentifier=_unarchiverIdentifier;
@property(nonatomic) long long tsp_identifier; // @synthesize tsp_identifier=_identifier;
- (void).cxx_destruct;
@property(readonly, nonatomic) _Bool needsArchiving;
- (void)didFinishUnarchiving;
- (_Bool)dirtiesDocumentPackage;
- (_Bool)allowsDuplicatesOutsideOfDocumentPackage;
@property(readonly, nonatomic) _Bool isCommandObject;
- (void)didLoadChildObjectFromDocumentSupport:(id)arg1;
@property(readonly, nonatomic) unsigned int delayedArchivingPriority;
@property(readonly, nonatomic) _Bool shouldDelayArchiving;
@property(readonly, nonatomic) _Bool allowsImplicitComponentOwnership;
@property(readonly, nonatomic) TSPObject *componentRootObject;
@property(readonly, nonatomic) _Bool storeOutsideObjectArchive;
@property(readonly, nonatomic) _Bool isComponentRoot;
@property(readonly, nonatomic) NSString *packageLocator;
- (void)willModifyForUpgrade;
- (void)willModify;
- (id)initDocumentObjectWithContext:(id)arg1;
- (id)initWithContext:(id)arg1;
@property(readonly, nonatomic) TSPObjectContext *context;
- (id)init;
- (id)documentRoot;

@end

@interface TSKDocumentRoot : TSPObject <TSKAccessControllerDelegate, TSKModel, TSKSearchTargetProvider>
{
    TSKAccessController *_accessController;
    TSKChangeNotifier *_changeNotifier;
    _Bool _isFindActive;
    TSKPasteboardController *_pasteboardController;
    id <TSKUndoRedoState> _undoRedoState;
    TSKAnnotationAuthorStorage *_annotationAuthorStorage;
    NSObject<OS_dispatch_queue> *_iCloudTeardownStackQueue;
    NSMutableArray *_iCloudTeardownStack;
    _Bool _isBeingLocalized;
    NSLocale *_locale;
    NSObject<TSKSearchReference> *_activeSearchReference;
    NSDictionary *_searchReferencesToHighlight;
    TSKDocumentSupport *_documentSupport;
}

+ (Class)commandControllerClass;
@property(readonly, nonatomic) TSKDocumentSupport *documentSupport; // @synthesize documentSupport=_documentSupport;
@property(retain, nonatomic) NSDictionary *searchReferencesToHighlight; // @synthesize searchReferencesToHighlight=_searchReferencesToHighlight;
@property(retain, nonatomic) NSObject<TSKSearchReference> *activeSearchReference; // @synthesize activeSearchReference=_activeSearchReference;
@property(readonly, nonatomic) _Bool isBeingLocalized; // @synthesize isBeingLocalized=_isBeingLocalized;
@property(retain, nonatomic) TSKAnnotationAuthorStorage *annotationAuthorStorage; // @synthesize annotationAuthorStorage=_annotationAuthorStorage;
@property(retain, nonatomic) id <TSKUndoRedoState> undoRedoState; // @synthesize undoRedoState=_undoRedoState;
@property(nonatomic, getter=isFindActive) _Bool findActive; // @synthesize findActive=_isFindActive;
@property(retain, nonatomic) TSKPasteboardController *pasteboardController; // @synthesize pasteboardController=_pasteboardController;
@property(readonly, nonatomic) TSKChangeNotifier *changeNotifier; // @synthesize changeNotifier=_changeNotifier;
@property(readonly, nonatomic) TSKAccessController *accessController; // @synthesize accessController=_accessController;
@property(retain, nonatomic) NSLocale *locale; // @synthesize locale=_locale;
- (void)updateForNonCommandChangesWithWriteLock:(id)arg1;
@property(readonly, nonatomic) _Bool hasICloudConflict;
- (_Bool)hasICloudTeardownObserver;
- (void)notifyICloudTeardownObservers;
- (void)removeICloudTeardownObserver:(long long)arg1;
- (long long)addObserverForICloudTeardownWithBlock:(CDUnknownBlockType)arg1;
- (id)commandForPropagatingPresetChangeCommand:(id)arg1 alwaysPreserveAppearance:(_Bool)arg2;
- (unsigned long long)nextRootSearchTargetIndexFromIndex:(unsigned long long)arg1 forString:(id)arg2 options:(unsigned long long)arg3 inDirection:(unsigned long long)arg4;
- (unsigned long long)rootSearchTargetCountThroughIndex:(unsigned long long)arg1;
- (void)withRootSearchTargetAtIndex:(unsigned long long)arg1 executeBlock:(CDUnknownBlockType)arg2;
- (void)markAsModifiedIfLocaleIsOutOfDate;
- (void)coalesceChanges:(id)arg1;
- (id)additionalDocumentPropertiesForWrite;
- (id)modelEnumeratorForObjectsRespondingToSelector:(SEL)arg1;
- (id)modelEnumeratorForObjectsConformingToProtocol:(id)arg1;
- (id)modelEnumeratorForObjectsOfClass:(Class)arg1;
- (id)modelEnumeratorForObjectsPassingTest:(CDUnknownBlockType)arg1;
- (id)modelEnumeratorWithFlags:(unsigned long long)arg1;
- (id)modelEnumerator;
- (_Bool)documentDisallowsHighlightsOnStorage:(id)arg1;
- (_Bool)isDirectionRightToLeft;
@property(readonly, nonatomic) NSString *creationLanguage;
@property(readonly, nonatomic) unsigned long long writingDirection;
- (void)documentDidLoad;
- (void)didSaveWithEncryptionChange;
- (_Bool)documentCacheHasAtMostFileProtection:(id)arg1;
- (void)changeDocumentCacheFileProtection:(id)arg1;
- (id)uniqueDocumentCachePathForProposedPath:(id)arg1;
- (struct CGImageSource *)newImageSourceForDocumentCachePath:(id)arg1;
- (_Bool)writeData:(id)arg1 atDocumentCachePath:(id)arg2;
- (id)dataFromDocumentCachePath:(id)arg1;
@property(readonly, nonatomic) unsigned long long applicationType;
- (void)dealloc;
- (id)initWithContext:(id)arg1;
@property(readonly, nonatomic) UIViewController<TSKDocumentViewController> *viewController;
- (void)enumerateStyleClientsUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) TSSStylesheet *stylesheet;
- (void)setThemeForTemplateImport:(id)arg1;
@property(retain, nonatomic) TSSTheme *theme;
- (id)unavailableDocumentFonts;
- (id)documentFonts;
- (_Bool)useLigatures;
- (struct __CFLocale *)hyphenationLocale;
- (_Bool)shouldHyphenate;
- (id)changeVisibility;
- (id)changeSessionManagerForModel:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSADocumentRoot : TSKDocumentRoot <TSKImportExportDelegate>
{
    int _needsToCaptureViewState;
    id <TSADocumentRootDelegate> _delegate;
    NSMutableDictionary *_upgradeState;
    NSMutableSet *_warnings;
    NSString *_creationLanguage;
    unsigned long long _creationLanguageWritingDirection;
    TSTCustomFormatList *_tablesCustomFormatList;
    _Bool _needsMovieCompatibilityUpgrade;
    _Bool _isClosed;
    NSString *_templateIdentifier;
    _Bool _hasPreUFFVersion;
}

+ (id)persistenceWarningsForData:(id)arg1 isReadable:(_Bool)arg2 isExternal:(_Bool)arg3;
@property(nonatomic) _Bool hasPreUFFVersion; // @synthesize hasPreUFFVersion=_hasPreUFFVersion;
@property(nonatomic) id <TSADocumentRootDelegate> delegate; // @synthesize delegate=_delegate;
- (_Bool)isMultiPageForQuickLook;
- (_Bool)hasICloudConflict;
- (long long)addObserverForICloudTeardownWithBlock:(CDUnknownBlockType)arg1;
- (id)commandForPropagatingPresetChangeCommand:(id)arg1 alwaysPreserveAppearance:(_Bool)arg2;
@property(readonly, nonatomic) TSADrawableFactory *drawableFactory;
@property(readonly, nonatomic, getter=isDocumentEditedSinceLastSave) _Bool documentEditedSinceLastSave;
@property(readonly, nonatomic) NSString *defaultDraftName;
@property(readonly, nonatomic) NSString *name;
- (void)changeDocumentCacheFileProtection:(id)arg1;
- (id)uniqueDocumentCachePathForProposedPath:(id)arg1;
- (struct CGImageSource *)newImageSourceForDocumentCachePath:(id)arg1;
- (_Bool)writeData:(id)arg1 atDocumentCachePath:(id)arg2;
- (void)didSaveWithEncryptionChange;
- (id)dataFromDocumentCachePath:(id)arg1;
- (id)documentCachePath;
- (id)referencedStylesOfClass:(Class)arg1;
- (_Bool)shouldAllowDrawableInGroups:(id)arg1 forImport:(_Bool)arg2;
- (void)p_replaceStyle:(id)arg1 andChildrenWithVariationOfStyle:(id)arg2;
- (void)p_replaceStyles:(id)arg1 andChildrenWithVariationOfStyle:(id)arg2;
- (void)p_removeStyles:(id)arg1;
- (void)performHyperlinkUpgradesIfNecessaryForVersion:(unsigned long long)arg1;
- (void)performStylesheetUpdatesIfNecessaryForVersion:(unsigned long long)arg1;
- (void)pUpgradeHyperlinks;
- (void)pUpgradeHyperlinksInStorage:(id)arg1;
- (id)p_characterStyleWithProperties:(id)arg1 stylesheet:(id)arg2 override:(id)arg3;
- (id)p_parseNumberOutOfBasename:(id)arg1 hasNumber:(_Bool *)arg2 number:(unsigned long long *)arg3;
- (void)insertTextPresetDisplayItemsPreservingGrouping:(id)arg1 insertAtBeginningOfGroup:(_Bool)arg2;
- (id)protected_defaultTextPresetOrdering;
- (void)prepareForSavingAsTemplate;
- (void)removeWarning:(id)arg1;
- (void)addWarning:(id)arg1;
- (id)warnings;
- (_Bool)exportToPath:(id)arg1 exporter:(id)arg2 delegate:(id)arg3 error:(id *)arg4;
- (_Bool)exportToPath:(id)arg1 exporter:(id)arg2 error:(id *)arg3;
- (id)newExporterForType:(id)arg1 options:(id)arg2 preferredType:(id *)arg3;
- (void)importerDidFinish:(id)arg1;
- (void)p_registerAllFormulasAfterImport;
- (void)didDownloadDocumentResources:(id)arg1 failedOrCancelledDocumentResources:(id)arg2 error:(id)arg3;
@property(readonly, nonatomic) NSSet *missingFontWarningMessages;
- (void)willEnterForeground;
- (void)didEnterBackground;
- (void)resumeThumbnailing;
- (void)suspendThumbnailing;
- (void)resumeBackgroundActivities;
- (void)suspendBackgroundActivities;
- (void)setCustomFormatList:(id)arg1;
- (id)customFormatList;
- (void)initializeForImport;
- (void)willClose;
- (void)fulfillPasteboardPromises;
- (id)additionalDocumentPropertiesForWrite;
- (id)packageDataForWrite;
- (void)documentDidSave;
- (id)upgradeState;
- (void)documentDidLoad;
- (void)dealloc;
- (unsigned long long)writingDirection;
- (void)updateWritingDirection:(unsigned long long)arg1;
- (void)p_updateCreationLanguage;
- (void)p_updateBuildVersionHistoryWithVersionOfTemplateBundle:(id)arg1;
- (void)prepareNewDocumentWithTemplateBundle:(id)arg1;
- (id)init;
- (id)initWithContext:(id)arg1;
@property(nonatomic) _Bool needsMovieCompatibilityUpgrade;
@property(copy, nonatomic) NSString *templateIdentifier;
- (void)setCreationLanguage:(id)arg1;
- (id)creationLanguage;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) _Bool importingDesignDemoDoc;
@property(readonly, nonatomic) _Bool isBrowsingVersions;
@property(readonly) Class superclass;

@end

@interface TSAViewController : UIViewController
{
    _Bool _viewDidAppear;
    _Bool _showFirstLaunchCoachingTipAfterViewAppears;
    _Bool _firstLaunchCoachingTipsWereShowingBeforeRotation;
    _Bool _coachingTipsWereShowingBeforeRotation;
    _Bool _shouldShowHelpOnAppear;
    NSArray *_leftApplicationToolbarItems;
    NSArray *_rightApplicationToolbarItems;
    double _leftToolbarItemsInset;
    double _rightToolbarItemsInset;
    double _leftToolbarItemsMaximumWidth;
    double _rightToolbarItemsMaximumWidth;
}

@property(nonatomic) _Bool shouldShowHelpOnAppear; // @synthesize shouldShowHelpOnAppear=_shouldShowHelpOnAppear;
@property(nonatomic) _Bool coachingTipsWereShowingBeforeRotation; // @synthesize coachingTipsWereShowingBeforeRotation=_coachingTipsWereShowingBeforeRotation;
@property(nonatomic) _Bool firstLaunchCoachingTipsWereShowingBeforeRotation; // @synthesize firstLaunchCoachingTipsWereShowingBeforeRotation=_firstLaunchCoachingTipsWereShowingBeforeRotation;
@property(nonatomic) _Bool showFirstLaunchCoachingTipAfterViewAppears; // @synthesize showFirstLaunchCoachingTipAfterViewAppears=_showFirstLaunchCoachingTipAfterViewAppears;
@property(nonatomic) _Bool viewDidAppear; // @synthesize viewDidAppear=_viewDidAppear;
@property(nonatomic) double rightToolbarItemsMaximumWidth; // @synthesize rightToolbarItemsMaximumWidth=_rightToolbarItemsMaximumWidth;
@property(nonatomic) double leftToolbarItemsMaximumWidth; // @synthesize leftToolbarItemsMaximumWidth=_leftToolbarItemsMaximumWidth;
@property(readonly, nonatomic) double rightToolbarItemsInset; // @synthesize rightToolbarItemsInset=_rightToolbarItemsInset;
@property(readonly, nonatomic) double leftToolbarItemsInset; // @synthesize leftToolbarItemsInset=_leftToolbarItemsInset;
@property(retain, nonatomic) NSArray *rightApplicationToolbarItems; // @synthesize rightApplicationToolbarItems=_rightApplicationToolbarItems;
@property(retain, nonatomic) NSArray *leftApplicationToolbarItems; // @synthesize leftApplicationToolbarItems=_leftApplicationToolbarItems;
- (id)firstLaunchCoachingTipShownUserDefaultKey;
@property(readonly, nonatomic) id coachingTipsButton;
- (void)hideFirstLaunchCoachingTipIfNecessary;
- (_Bool)isFirstLaunchCoachingTipShowing;
- (void)showFirstLaunchCoachingTipIfNecessary;
- (void)dismissHelpWithCompletion:(CDUnknownBlockType)arg1;
- (void)showHelpWithTopicId:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)toolbarButtonItemForCoachingTipsWithTarget:(id)arg1 action:(SEL)arg2;
- (id)toolbarButtonForCoachingTipsWithTarget:(id)arg1 action:(SEL)arg2;
- (void)willHideCoachingTips;
- (void)willShowCoachingTips;
- (void)dismissCoachingTips;
- (void)toggleCoachingTips:(id)arg1;
- (id)imageViewFromSnapshotOfView:(id)arg1;
- (_Bool)modalToolbarSupportsUndo;
@property(readonly, nonatomic, getter=isPresentingModalViewController) _Bool presentingModalViewController;
- (void)presentViewController:(id)arg1 animated:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)p_stopListeningForVoiceOverNotifications;
- (void)p_voiceOverStatusDidChange;
- (void)p_startListeningForVoiceOverNotifications;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (id)toolbarButtonForModalDoneWithTarget:(id)arg1 action:(SEL)arg2;
- (id)toolbarButtonForModalDone;
- (id)toolbarButtonForUndoWithIsModal:(_Bool)arg1;
@property(readonly, nonatomic) NSString *toolbarButtonModalGearImageName;
- (id)toolbarButtonWithImageName:(id)arg1 disabledImageName:(id)arg2 target:(id)arg3 action:(SEL)arg4;
- (id)toolbarButtonWithImageName:(id)arg1 target:(id)arg2 action:(SEL)arg3;
- (id)toolbarButtonWithTitle:(id)arg1 target:(id)arg2 action:(SEL)arg3 isModal:(_Bool)arg4;
@property(readonly, nonatomic) UIColor *applicationToolbarBackgroundColor;
@property(readonly, nonatomic) UIColor *applicationToolbarTintColor;
@property(readonly, nonatomic) UIColor *applicationToolbarTitleColor;
@property(readonly, nonatomic) UIColor *applicationBackgroundColor;
- (void)willSetupApplicationToolbar;
@property(readonly, nonatomic) _Bool isLayoutBelowApplicationToolbar;
@property(readonly, nonatomic) _Bool isViewVisible;
- (void)dealloc;

@end

@interface TSADocumentViewController : TSAViewController <TSKDocumentViewController, TSKPopoverBasedViewControllerDelegate, TSWPInteractiveCanvasControllerDelegate, UIActionSheetDelegate, TSKFindReplaceDelegate, TSKKeyboardObserver, TSDiOSCanvasViewControllerDelegate, TSKChangeSourceObserver>
{
    _Bool _navigatorHidden;
    TSDScrollView *_scrollView;
    UIButton *_doneButton;
    UIButton *_closeButton;
    _Bool _registered;
    _Bool _isPrintingDocument;
    _Bool _printerOptionsShowing;
    _Bool _inspectorIsCompletelyVisible;
    long long _helpViewVisibleState;
    TSDiOSCanvasViewController *_canvasViewController;
    id <TSANavigatorViewController> _navigatorViewController;
    TIADocument *_document;
    _Bool _isDocumentLoaded;
    _Bool _isClosingDocument;
    _Bool _isAbandoningDocument;
    _Bool _isFirstTimeSharing;
    TSAInteractiveCanvasController *_interactiveCanvasController;
    TSADebugViewController *_debugViewController;
    long long _documentMode;
    _Bool _settingDocumentMode;
    _Bool _shouldShowInstructionalText;
    long long _documentModeBeforeReplaceController;
    TSAFindReplaceUIController *_findReplaceUIController;
    double _keyboardHeight;
    double _contentFrameAnimationDuration;
    _Bool _isHidingStatusBar;
    struct CGPoint mSavedContentOffset;
    double mSavedCanvasViewScale;
    _Bool _waitingToZoomOut;
    _Bool _scheduledBackgroundInit;
    _Bool _dismissInspectorOnRotation;
    _Bool _isLandscapeOrientation;
    _Bool _documentModeChangeInProgress;
    double _footerHeightPadding;
    _Bool _isPopoverGestureInFlight;
    _Bool _preventDocumentModeChangesDuringSelectionChanges;
    _Bool _editMenuTapGRWasEnabledForFind;
    UIButton *_coachingTipsButton;
    TSKUIAlert *_openDocumentKeepOrDeleteAlert;
    UIButton *_sharingButton;
    TSASyncResolveConflictViewController *__openDocumentResolveConflictViewController;
    TSKUIAlert *__openDocumentUpdatedAlert;
    TSKUIAlert *__openDocumentEvictionAlert;
}

+ (void)resetLastDocumentMode;
@property(retain, nonatomic) TSKUIAlert *_openDocumentEvictionAlert; // @synthesize _openDocumentEvictionAlert=__openDocumentEvictionAlert;
@property(retain, nonatomic, setter=_setOpenDocumentUpdatedAlert:) TSKUIAlert *_openDocumentUpdatedAlert; // @synthesize _openDocumentUpdatedAlert=__openDocumentUpdatedAlert;
@property(retain, nonatomic) TSASyncResolveConflictViewController *_openDocumentResolveConflictViewController; // @synthesize _openDocumentResolveConflictViewController=__openDocumentResolveConflictViewController;
@property(nonatomic) _Bool editMenuTapGRWasEnabledForFind; // @synthesize editMenuTapGRWasEnabledForFind=_editMenuTapGRWasEnabledForFind;
@property(readonly, nonatomic) UIButton *sharingButton; // @synthesize sharingButton=_sharingButton;
@property(retain, nonatomic) TSKUIAlert *openDocumentKeepOrDeleteAlert; // @synthesize openDocumentKeepOrDeleteAlert=_openDocumentKeepOrDeleteAlert;
@property(readonly, nonatomic) _Bool preventDocumentModeChangesDuringSelectionChanges; // @synthesize preventDocumentModeChangesDuringSelectionChanges=_preventDocumentModeChangesDuringSelectionChanges;
@property(readonly, nonatomic) _Bool isPopoverGestureInFlight; // @synthesize isPopoverGestureInFlight=_isPopoverGestureInFlight;
@property(nonatomic) _Bool printerOptionsShowing; // @synthesize printerOptionsShowing=_printerOptionsShowing;
@property(readonly, nonatomic) TSAFindReplaceUIController *findReplaceUIController; // @synthesize findReplaceUIController=_findReplaceUIController;
@property(readonly, retain, nonatomic) TIADocument *document; // @synthesize document=_document;
@property(readonly, nonatomic) UIButton *coachingTipsButton; // @synthesize coachingTipsButton=_coachingTipsButton;
@property(retain, nonatomic) TSAInteractiveCanvasController *interactiveCanvasController; // @synthesize interactiveCanvasController=_interactiveCanvasController;
@property(nonatomic) _Bool isLandscapeOrientation; // @synthesize isLandscapeOrientation=_isLandscapeOrientation;
@property(nonatomic, getter=isHidingStatusBar) _Bool hidingStatusBar; // @synthesize hidingStatusBar=_isHidingStatusBar;
@property(readonly, nonatomic) _Bool isPrintingDocument; // @synthesize isPrintingDocument=_isPrintingDocument;
@property(readonly, nonatomic) _Bool shouldShowInstructionalText; // @synthesize shouldShowInstructionalText=_shouldShowInstructionalText;
@property(nonatomic) long long documentMode; // @synthesize documentMode=_documentMode;
@property(readonly, nonatomic) _Bool isClosingDocument; // @synthesize isClosingDocument=_isClosingDocument;
@property(readonly, nonatomic) _Bool isDocumentLoaded; // @synthesize isDocumentLoaded=_isDocumentLoaded;
@property(readonly, nonatomic) UIScrollView *canvasScrollView; // @synthesize canvasScrollView=_scrollView;
@property(retain, nonatomic) id <TSANavigatorViewController> navigatorViewController; // @synthesize navigatorViewController=_navigatorViewController;
@property(retain, nonatomic) TSDiOSCanvasViewController *canvasViewController; // @synthesize canvasViewController=_canvasViewController;
- (long long)p_documentModeToRestoreFor:(long long)arg1;
- (void)p_scrollToCurrentSelection;
- (void)p_scrollToRect:(struct CGRect)arg1;
- (_Bool)insertControllerIsVisible;
- (_Bool)toolsControllerIsVisible;
- (_Bool)shouldIgnoreTextGestures;
- (double)paddingAboveChartDataEditor:(id)arg1;
- (id)superviewForChartDataEditor:(id)arg1;
- (void)commitChartDataEditorEdits;
- (void)forceChartDataEditorToCloseWithSave:(_Bool)arg1;
- (void)dismissChartDataEditor:(id)arg1;
- (double)paddingAboveHalfHeightAtTopOfScreen;
- (_Bool)showEditMenuOnChartInsert;
- (void)insertedDrawableInfoDidFinishDragging:(id)arg1;
- (void)willInsertDrawable;
- (id)drawableFactory;
- (id)mainInteractiveCanvasController;
- (id)rectanglesObscuringView:(id)arg1;
- (void)canvasWillEndEditingToBeginEditingRep:(id)arg1;
- (void)canvasEditorDidChangeSelection:(id)arg1;
- (void)editorDidChangeSelection:(id)arg1;
- (double)autoZoomAnimationDurationForInteractiveCanvasController:(id)arg1;
@property(readonly, nonatomic) _Bool shouldShowTextOverflowGlyphs;
- (void)interactiveCanvasControllerDidUpdateLayersFromReps:(id)arg1;
@property(readonly, nonatomic) _Bool isPrintingCanvas;
@property(readonly, nonatomic) _Bool isCanvasInteractive;
- (void)asyncProcessChanges:(id)arg1 forChangeSource:(id)arg2;
- (void)keyboardDidHideOrUndock:(id)arg1;
- (void)keyboardWillHideOrUndock:(id)arg1;
- (void)keyboardShowCanceled;
- (void)keyboardWillShowOrDock:(id)arg1;
- (void)setCanvasScrollViewClipsToBoundsForKeyboardAnimation:(_Bool)arg1;
- (float)viewBottomInScreenCoordinates;
- (void)p_willEnterFullScreen:(id)arg1;
- (void)zoomOutAnimated:(_Bool)arg1;
- (void)p_zoomOutForCurrentSelection;
@property(readonly, nonatomic) long long modalToolbarTitleBaselineOffsetBarMetrics;
@property(readonly, nonatomic) double modalToolbarTitleBaselineOffset;
@property(readonly, nonatomic) NSString *closeDocumentButtonTitle;
- (void)hideSharedUIPanelsForReadMode;
- (void)p_setDocumentMode:(long long)arg1 animated:(_Bool)arg2 dismissOnTop:(_Bool)arg3;
@property(readonly, nonatomic) _Bool allowImagePickerToAppear;
@property(readonly, nonatomic) _Bool allowTextEditingToBegin;
@property(readonly, nonatomic) _Bool allowEditMenuToAppear;
@property(readonly, nonatomic) struct CGSize sizeOfScrollViewEnclosingCanvas;
- (struct CGRect)visibleUnscaledCanvasRectWithoutKeyboard;
- (struct CGRect)visibleScaledCanvasRectWithoutKeyboard;
- (void)scrollToRect:(struct CGRect)arg1;
- (_Bool)preserveScrollViewClipping;
- (void)didSetContentViewFrame;
- (void)adjustContentViewFrame;
- (void)adjustScrollViewInsets;
- (id)contentView;
- (_Bool)shouldAdjustContentFrameWhileRotating;
- (_Bool)willChangeContentOffsetIfKeyboardHidden;
- (struct CGRect)contentFrame;
- (void)p_editingCellDidChange:(id)arg1;
- (_Bool)shouldAutoscrollToSelectionOnContentViewSizeChange;
- (_Bool)tappedCanvasBackgroundAtPoint:(struct CGPoint)arg1;
- (void)didSetDocumentToMode:(long long)arg1 fromMode:(long long)arg2 animated:(_Bool)arg3;
- (void)willSetDocumentToMode:(long long)arg1 fromMode:(long long)arg2 animated:(_Bool)arg3;
- (void)setLastDocumentMode:(long long)arg1;
- (long long)lastDocumentMode;
- (long long)defaultDocumentMode;
- (void)setDocumentMode:(long long)arg1 animated:(_Bool)arg2 dismissOnTop:(_Bool)arg3;
- (void)setDocumentMode:(long long)arg1 animated:(_Bool)arg2;
- (struct _NSRange)visibleRootIndexRange;
- (id)childViewControllerForStatusBarStyle;
- (void)interactiveCanvasController:(id)arg1 willAnimateToViewScale:(double)arg2 withDuration:(double)arg3 unscaledContentOffset:(struct CGPoint)arg4;
- (double)toolbarTextButtonSpaceWidth;
- (double)toolbarSpaceWidth;
- (_Bool)useToolBarHeightForSetDocumentMode;
- (id)alternativeOpenCloseDocumentAnimationView;
- (double)externalKeyboardHideMinDuration;
- (void)didStopLaunchDocumentAnimation;
- (void)didStopCloseDocumentAnimation;
- (void)performCloseDocumentAnimation;
- (void)prepareCloseDocumentAnimation;
- (void)didStopOpenDocumentAnimation;
- (void)performOpenDocumentAnimation;
- (void)prepareOpenDocumentAnimation;
- (id)openCloseAnimationAlternativeView;
- (struct CGRect)openCloseAnimationCanvasFrame;
- (void)didReceiveMemoryWarning;
- (void)p_deregisterForNotifications;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)deRegisterForCanvasEditorNotifications;
- (void)registerForCanvasEditorNotifications;
- (struct CGRect)rectForPopoverFromToolbarButton:(id)arg1;
- (double)rightToolbarItemsInset;
- (double)leftToolbarItemsInset;
@property(readonly, nonatomic) _Bool displaySharingButton;
- (id)closeDocumentButton;
- (void)willSetupApplicationToolbar;
- (_Bool)isLayoutBelowApplicationToolbar;
- (id)title;
- (void)viewDidLoad;
- (void)toolsFindReplace;
- (struct CGPoint)clampedUnscaledContentOffset:(struct CGPoint)arg1;
- (void)teardown;
- (void)unloadDocument;
- (void)p_teardown;
- (void)loadDocument;
- (void)willEnterForeground;
- (void)didEnterBackground;
- (void)documentWillCloseAfterError;
- (void)documentWillClose;
- (_Bool)p_shouldZoomOutForCurrentSelection;
- (_Bool)p_shouldZoomOutFromTable;
- (void)closeDocumentPressed;
@property(readonly, nonatomic) double viewHeaderHeight;
- (void)setNavigatorHiddenDefault:(_Bool)arg1;
- (_Bool)navigatorHiddenDefault;
- (void)showPlaceholderTools:(id)arg1;
- (void)popoverController:(id)arg1 learnMoreAPDIDTapped:(id)arg2;
- (_Bool)popoverController:(id)arg1 shouldReceiveOutsideTouchAtLocation:(struct CGPoint)arg2 inView:(id)arg3;
- (void)popoverControllerDidDismissPopoverBasedViewController:(id)arg1;
- (void)showInsertPopoverFromRect:(struct CGRect)arg1 popoverType:(int)arg2 withDoneButton:(_Bool)arg3;
- (void)p_restoreTextSelectionAfterModalDismiss;
- (double)mainToolsMenuMinimumHeight;
- (_Bool)teardownAppUIForDocumentManagerAction;
- (void)backgroundInit;
- (void)p_backgroundInit;
- (void)p_startBackgroundInit;
- (void)navigatePlay:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)setSelection:(id)arg1 onModel:(id)arg2 withFlags:(unsigned long long)arg3;
- (void)abandonDocument;
- (void)didReplaceDocument;
- (void)willReplaceDocument;
- (void)setDocumentUnloaded;
@property(readonly, retain, nonatomic) TSADocumentRoot *documentRoot;
- (void)setDocument:(id)arg1;
@property(retain, nonatomic) TSAInteractiveCanvasController *defaultInteractiveCanvasController;
@property(readonly, nonatomic) NSArray *bidiLanguages;
@property(readonly, nonatomic) NSArray *CJKLanguages;
@property(readonly, nonatomic) NSArray *listLanguages;
- (id)p_arrayByAddingLanguage:(id)arg1 toArray:(id)arg2;
@property(readonly, nonatomic) _Bool isBiDiEnabled;
@property(readonly, nonatomic) _Bool isCJKEnabled;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)initWithDefaultView;
@property(readonly, nonatomic) TSADebugViewController *debugViewController; // @synthesize debugViewController=_debugViewController;
- (_Bool)inFindReplaceMode;
- (_Bool)isInspectorVisible;
- (_Bool)zoomOnSelectionChange:(id)arg1;
- (_Bool)inPrintPreviewMode;
- (_Bool)isKeyboardUp;
@property(readonly, nonatomic) _Bool chartDataEditorShowing;
@property(readonly, nonatomic) _Bool isCanvasFullScreen;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) _Bool interactiveCanvasControllerAllowsHyperlinkInteraction;
@property(readonly, nonatomic) _Bool shouldClipToScrollViewBoundsInVisibleBounds;
@property(readonly, nonatomic) _Bool shouldPopKnobsOutsideEnclosingScrollView;
@property(readonly, nonatomic) _Bool shouldResizeCanvasToScrollView;
@property(readonly, nonatomic) _Bool spellCheckingSupported;
@property(readonly, nonatomic) _Bool spellCheckingSuppressed;
@property(readonly) Class superclass;

@end

@interface TSAHyperlinkGestureRecognizer : UIGestureRecognizer
{
    TSDInteractiveCanvasController *_icc;
    TSWPHyperlinkField *_hitField;
    TSDRep<TSWPHyperlinkHostRepProtocol> *_hitRep;
    _Bool _tapEnabled;
    _Bool _tapHoldEnabled;
    _Bool _wasTapHold;
    struct CGPoint _touchBeginPoint;
}

@property(retain, nonatomic) TSWPHyperlinkField *hitField; // @synthesize hitField=_hitField;
@property(retain, nonatomic) TSDRep<TSWPHyperlinkHostRepProtocol> *hitRep; // @synthesize hitRep=_hitRep;
@property(nonatomic) TSDInteractiveCanvasController *icc; // @synthesize icc=_icc;
@property(readonly, nonatomic) _Bool wasTapHold; // @synthesize wasTapHold=_wasTapHold;
@property(nonatomic) _Bool tapHoldEnabled; // @synthesize tapHoldEnabled=_tapHoldEnabled;
@property(nonatomic) _Bool tapEnabled; // @synthesize tapEnabled=_tapEnabled;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)p_delayElapsed:(id)arg1;
- (id)p_smartFieldForTouch:(id)arg1 outRep:(id *)arg2;
- (void)setState:(long long)arg1;
- (void)setEnabled:(_Bool)arg1;
- (void)reset;
- (void)dealloc;
- (id)initWithTarget:(id)arg1 action:(SEL)arg2;

@end

@interface TSDInteractiveCanvasController : NSObject <TSDCanvasDelegate, TSDErrorPresenter, TSDModalOperationPresenter, TSKChangeSourceObserver, NSCoding, TSKScrollViewDelegate, TSDBackgroundLayoutAndRenderStateDelegate, TSDRepTrackerDelegateCreation>
{
    id <TSDInteractiveCanvasControllerDelegate> mDelegate;
    TSDCanvas *mCanvas;
    id <TSDCanvasLayerHosting> mLayerHost;
    struct __CFDictionary *mContainerLayersByRep;
    struct __CFDictionary *mRepLayersByRep;
    struct __CFDictionary *mRepsByRepLayer;
    struct __CFDictionary *mRepsByContainerLayer;
    struct __CFDictionary *mDirectLayerHostsByRep;
    CALayer *mRepContainerLayer;
    TSDEditorController *mEditorController;
    TSDGuideController *mGuideController;
    NSObject<TSDCanvasEditor> *mCanvasEditor;
    _Bool mHasBeenTornDown;
    _Bool mHadLayerHost;
    _Bool mLayerHostHasBeenTornDown;
    TSDTextInputResponder *mTextInputResponder;
    TSDInteractiveCanvasController *mTextInputResponderSource;
    unsigned long long mTextInputResponderShareCount;
    NSFormatter *mUnitFormatter;
    _Bool mResizeCanvasOnLayout;
    _Bool mCreateRepsForOffscreenLayouts;
    _Bool mShouldAutoscrollToSelectionAfterLayout;
    _Bool mSuppressAutozoomToSelectionAfterLayout;
    _Bool mShouldAnimateAutoscroll;
    _Bool mShouldCenterSelectionWhenAutoscrolling;
    CALayer *mOverlayLayer;
    _Bool mOverlayLayerSuppressed;
    CALayer *mPopoutLayer;
    NSMutableArray *mDecorators;
    _Bool mShowGrayOverlay;
    _Bool mInDynamicOperation;
    int mDynamicOperationCounter;
    _Bool mInReadMode;
    _Bool mInVersionBrowsingMode;
    struct CGColor *mSelectionHighlightColor;
    _Bool mShowInvisibleObjects;
    TSDCanvasAnimation *mCurrentAnimation;
    TSDTrackerManipulatorCoordinator *mTMCoordinator;
    TSDDynamicOperationController *mDynOpController;
    NSObject<TSDRulerController> *mRulerController;
    TSDGestureDispatcher *mGestureDispatcher;
    _Bool mInspectorModeEnabled;
    NSMutableArray *mInspectorGestureRecognizersToReenable;
    CDUnknownBlockType mInspectorSingleTapBlock;
    struct CGPoint mLastTapPoint;
    struct CGRect mVisibleBoundsRectForTiling;
    struct CGRect mVisibleUnscaledRect;
    struct CGRect mUnobscuredScrollViewFrame;
    TSDBackgroundLayoutAndRenderState *mBackgroundLayoutAndRenderState;
    _Bool mStaticLayoutAndRenderOnThread;
    _Bool mLayoutAndRenderOnThreadDuringScroll;
    _Bool mNestedCanvasAllowLayoutAndRenderOnThread;
    _Bool mTemporarilyDisabledLayoutAndRenderOnThreadDuringScroll;
    _Bool mCurrentlyScrolling;
    _Bool mAnimatingScroll;
    _Bool mSuppressedAutozoom;
    _Bool mTextGesturesInFlight;
    _Bool _orbTextGesturesInFlight;
    id <TSDEditor> mSelectionChangeNotificationDeferredEditor;
    _Bool mShouldAutoscrollToSelectionAfterGestures;
    _Bool mSuspendedLowPriorityThreadDispatcher;
    _Bool mCurrentlyWaitingOnThreadedLayoutAndRender;
    int mDisableThreadedLayoutAndRender;
    unsigned int mEmbeddedCanvasScrolling;
    NSMutableArray *mHiddenTopLevelLayers;
    _Bool mShouldSuppressRendering;
    _Bool mSupportsBackgroundTileRendering;
    NSMutableSet *mNotificationsToPostWithValidLayouts;
    NSArray *mLayersWithZoomFadeAnimation;
    _Bool mDynamicallyZooming;
    double mDynamicViewScale;
    _Bool mUsesAlternateDrawableSelectionHighlight;
    double mTargetPointSize;
    _Bool mAnimatingViewScale;
    _Bool mSuppressingKeyboard;
    NSObject<TSDImageHUDController> *mImageHUDController;
    long long mImageHUDLock;
    NSObject<TSDImageHUDController> *mIAHUDController;
    long long mIAHUDLock;
    _Bool mIgnoreContentOffsetChanges;
    TSDTileStorage *mTileStorage;
    struct CGPoint mZoomCenterInBounds;
    NSMutableArray *mBackgroundRenderingObjects;
    id <TSDAnnotationHosting> mDisplayedAnnotation;
    id <TSDAnnotationPopoverController> mAnnotationPopoverController;
    _Bool mShouldClipThemeContentToCanvas;
    NSMutableArray *mNextLayoutBlocks;
    _Bool mShowUserDefinedGuides;
    _Bool mTeardownOnBackgroundThread;
    TSDDisplayLinkDispatch *mDisplayLinkDispatch;
    _Bool mRepViewsNeedUpdating;
    NSRecursiveLock *mSelfSync;
    _Bool mPreventSettingNilEditorOnTextResponder;
    _Bool mForceTilingLayoutOnThreadWhenScrolling;
    id <TSDRepDirectLayerHostProvider> _directLayerHostProvider;
    TSDTrackingController *mTrackingController;
    NSSet *mCachedTopLevelTilingLayers;
}

+ (double)smallRepOutsetForHitTesting;
+ (id)keyPathsForValuesAffectingCurrentViewScale;
+ (id)keyPathsForValuesAffectingViewScale;
+ (id)keyPathsForValuesAffectingEditorController;
+ (id)keyPathsForValuesAffectingDocumentRoot;
+ (_Bool)selectorIsActionMethod:(SEL)arg1;
@property(copy) NSSet *p_cachedTopLevelTilingLayers; // @synthesize p_cachedTopLevelTilingLayers=mCachedTopLevelTilingLayers;
@property(nonatomic) _Bool supportsBackgroundTileRendering; // @synthesize supportsBackgroundTileRendering=mSupportsBackgroundTileRendering;
@property(retain, nonatomic) TSDTrackingController *trackingController; // @synthesize trackingController=mTrackingController;
@property(nonatomic) _Bool showInvisibleObjects; // @synthesize showInvisibleObjects=mShowInvisibleObjects;
@property(nonatomic) _Bool inReadMode; // @synthesize inReadMode=mInReadMode;
@property(nonatomic) _Bool inVersionBrowsingMode; // @synthesize inVersionBrowsingMode=mInVersionBrowsingMode;
@property(nonatomic) _Bool showGrayOverlay; // @synthesize showGrayOverlay=mShowGrayOverlay;
@property(nonatomic) _Bool overlayLayerSuppressed; // @synthesize overlayLayerSuppressed=mOverlayLayerSuppressed;
@property(readonly, nonatomic) CALayer *overlayLayer; // @synthesize overlayLayer=mOverlayLayer;
@property(readonly, nonatomic) CALayer *repContainerLayer; // @synthesize repContainerLayer=mRepContainerLayer;
@property struct CGRect p_visibleUnscaledRect; // @synthesize p_visibleUnscaledRect=mVisibleUnscaledRect;
@property struct CGRect p_visibleBoundsRectForTiling; // @synthesize p_visibleBoundsRectForTiling=mVisibleBoundsRectForTiling;
@property(nonatomic) _Bool shouldClipThemeContentToCanvas; // @synthesize shouldClipThemeContentToCanvas=mShouldClipThemeContentToCanvas;
@property(nonatomic) struct CGRect unobscuredScrollViewFrame; // @synthesize unobscuredScrollViewFrame=mUnobscuredScrollViewFrame;
@property(nonatomic) _Bool suppressAutozoomToSelectionAfterLayout; // @synthesize suppressAutozoomToSelectionAfterLayout=mSuppressAutozoomToSelectionAfterLayout;
@property(nonatomic) _Bool shouldAutoscrollToSelectionAfterLayout; // @synthesize shouldAutoscrollToSelectionAfterLayout=mShouldAutoscrollToSelectionAfterLayout;
@property(readonly, nonatomic) _Bool currentlyWaitingOnThreadedLayoutAndRender; // @synthesize currentlyWaitingOnThreadedLayoutAndRender=mCurrentlyWaitingOnThreadedLayoutAndRender;
@property(nonatomic) _Bool forceTilingLayoutOnThreadWhenScrolling; // @synthesize forceTilingLayoutOnThreadWhenScrolling=mForceTilingLayoutOnThreadWhenScrolling;
@property(nonatomic) _Bool nestedCanvasAllowLayoutAndRenderOnThread; // @synthesize nestedCanvasAllowLayoutAndRenderOnThread=mNestedCanvasAllowLayoutAndRenderOnThread;
@property(nonatomic) _Bool staticLayoutAndRenderOnThread; // @synthesize staticLayoutAndRenderOnThread=mStaticLayoutAndRenderOnThread;
@property(nonatomic) _Bool allowLayoutAndRenderOnThread; // @synthesize allowLayoutAndRenderOnThread=mLayoutAndRenderOnThreadDuringScroll;
@property(nonatomic) _Bool createRepsForOffscreenLayouts; // @synthesize createRepsForOffscreenLayouts=mCreateRepsForOffscreenLayouts;
@property(nonatomic) _Bool preventSettingNilEditorOnTextResponder; // @synthesize preventSettingNilEditorOnTextResponder=mPreventSettingNilEditorOnTextResponder;
@property(readonly, nonatomic) TSDTextInputResponder *textInputResponder; // @synthesize textInputResponder=mTextInputResponder;
@property(retain, nonatomic) NSObject<TSDCanvasEditor> *canvasEditor; // @synthesize canvasEditor=mCanvasEditor;
@property(nonatomic) _Bool resizeCanvasOnLayout; // @synthesize resizeCanvasOnLayout=mResizeCanvasOnLayout;
@property(retain, nonatomic) id <TSDRepDirectLayerHostProvider> directLayerHostProvider; // @synthesize directLayerHostProvider=_directLayerHostProvider;
@property(nonatomic) NSObject<TSDRulerController> *rulerController; // @synthesize rulerController=mRulerController;
@property(nonatomic) _Bool orbTextGesturesInFlight; // @synthesize orbTextGesturesInFlight=_orbTextGesturesInFlight;
@property(nonatomic) _Bool textGesturesInFlight; // @synthesize textGesturesInFlight=mTextGesturesInFlight;
@property(readonly, nonatomic) _Bool animatingViewScale; // @synthesize animatingViewScale=mAnimatingViewScale;
@property(nonatomic) _Bool shouldSuppressRendering; // @synthesize shouldSuppressRendering=mShouldSuppressRendering;
@property(readonly, nonatomic) _Bool inspectorModeEnabled; // @synthesize inspectorModeEnabled=mInspectorModeEnabled;
@property(nonatomic) id <TSDInteractiveCanvasControllerDelegate> delegate; // @synthesize delegate=mDelegate;
@property(readonly, nonatomic) TSDCanvas *canvas; // @synthesize canvas=mCanvas;
@property(nonatomic) struct CGPoint lastTapPoint; // @synthesize lastTapPoint=mLastTapPoint;
@property(nonatomic) id <TSDCanvasLayerHosting> layerHost; // @synthesize layerHost=mLayerHost;
@property(readonly, nonatomic) id canvasReferenceController;
- (id)viewWithTransferredLayers;
- (void)doubleTappedCanvasBackgroundAtPoint:(struct CGPoint)arg1;
- (void)p_applyViewScale:(double)arg1 andContentOffset:(struct CGPoint)arg2;
- (void)animateToViewScale:(double)arg1 contentOffset:(struct CGPoint)arg2 duration:(double)arg3 forceAnimation:(_Bool)arg4 completion:(CDUnknownBlockType)arg5;
- (void)animateToViewScale:(double)arg1 contentOffset:(struct CGPoint)arg2 duration:(double)arg3 completion:(CDUnknownBlockType)arg4;
- (void)animateToViewScale:(double)arg1 contentOffset:(struct CGPoint)arg2 duration:(double)arg3;
- (void)i_syncWithLayoutThread;
- (void)p_autoscrollToSelection:(id)arg1 withInfo:(id)arg2 isInitialSelection:(_Bool)arg3 focusRect:(struct CGRect)arg4 scrollImmediately:(_Bool)arg5 skipZoom:(_Bool)arg6;
- (void)p_autoscrollToSelection:(id)arg1 withInfo:(id)arg2 isInitialSelection:(_Bool)arg3 focusRect:(struct CGRect)arg4;
- (struct CGRect)p_outsetSelectionRect:(struct CGRect)arg1;
- (_Bool)p_centerOnInitialSelection;
- (void)p_setTargetPointSize:(double)arg1;
- (double)p_targetPointSize;
- (void)p_editorDoneChangingSelection:(id)arg1 withFlags:(unsigned long long)arg2;
- (void)p_editorDoneChangingSelection:(id)arg1;
- (void)p_editorDidChangeSelection:(id)arg1 withSelectionFlags:(unsigned long long)arg2;
- (void)p_textGesturesDidEndNotification:(id)arg1;
- (void)p_textGesturesWillBeginNotification:(id)arg1;
- (void)p_guideColorChanged:(id)arg1;
- (void)p_rulerUnitsDidChangeNotification:(id)arg1;
- (void)p_invalidateTilingLayers;
- (void)p_invalidateForBackgroundLayout;
- (void)p_viewScrollingEnded;
- (_Bool)p_shouldLayoutAndRenderOnThreadForcePendingLayout:(_Bool)arg1;
- (_Bool)p_shouldLayoutAndRenderOnThread;
- (_Bool)i_temporarilyDisabledLayoutAndRenderOnThreadDuringScroll;
- (void)enableThreadedLayoutAndRender;
- (void)disableThreadedLayoutAndRender;
- (id)p_backgroundLayoutAndRenderState;
- (_Bool)p_endEditingToBeginEditingRep:(id)arg1;
- (void)i_drawRepWithReadLock:(id)arg1 inContext:(struct CGContext *)arg2 forLayer:(id)arg3;
- (void)p_drawLayerWithReadLock:(id)arg1;
- (id)p_overlayLayerForReps:(id)arg1;
- (void)p_setupPopoutLayerForReps:(id)arg1;
- (void)p_discardLayer:(id)arg1 forRep:(id)arg2;
- (void)p_recursivelyUpdateLayerEdgeAntialiasingForLayer:(id)arg1;
- (void)p_discardContainerLayer:(id)arg1 forRep:(id)arg2;
- (void)p_recursivelyUpdateLayerForRep:(id)arg1 accumulatingLayers:(id)arg2 andReps:(id)arg3;
- (void)p_updateLayersFromReps;
- (void)p_updateViewsFromRepsForceUpdate:(_Bool)arg1;
- (_Bool)p_allowUpdateViewsFromReps;
- (void)p_updateViewsFromReps;
- (void)p_updateCanvasSizeFromLayouts;
- (void)p_postNotificationOnMainThreadWithValidLayouts:(id)arg1;
- (id)i_topLevelLayersForTiling;
- (struct CGRect)i_clippingBoundsForScrollViewEnclosingCanvas;
- (id)i_descriptionForViewScale:(double)arg1;
- (id)i_currentAnimation;
- (_Bool)i_inPrintPreviewMode;
- (id)i_tileStorage;
- (void)i_repNeedsDisplay:(id)arg1 inRect:(struct CGRect)arg2;
- (void)i_repNeedsDisplay:(id)arg1;
- (void)i_recordUserViewScale;
- (void)i_viewScrollingEnded;
- (void)i_viewScrollWillChange;
- (void)i_viewScrollDidChange;
- (double)i_nextCanvasViewScaleDetentForProposedViewScale:(double)arg1 greater:(_Bool)arg2;
- (double)i_adjustViewScale:(double)arg1;
- (struct CGSize)i_canvasCenterOffsetForProposedViewScale:(double)arg1 originalViewScale:(double)arg2;
- (double)i_viewScaleForProposedViewScale:(double)arg1 originalViewScale:(double)arg2;
- (void)i_viewScaleDidChange;
- (void)i_canvasContentsScaleDidChange;
- (void)viewDidEndZooming;
- (void)i_viewDidZoomToViewScale:(double)arg1;
- (void)i_viewIsZoomingAtPoint:(struct CGPoint)arg1;
- (void)i_viewWillBeginZooming;
- (void)p_layoutWithReadLock;
- (void)i_layout;
- (_Bool)i_needsLayout;
- (void)i_layoutUnregistered:(id)arg1;
- (void)i_layoutRegistered:(id)arg1;
- (void)setAnimationUseRepFiltering:(_Bool)arg1;
- (void)setAnimationFilterBlock:(CDUnknownBlockType)arg1;
- (void)setAnimationCompletionBlock:(CDUnknownBlockType)arg1;
- (void)setAnimation:(id)arg1 forLayer:(id)arg2 forKey:(id)arg3;
- (void)setAnimationRepeatAutoreverses:(_Bool)arg1;
- (void)setAnimationRepeatCount:(float)arg1;
- (void)setAnimationTimingFunction:(id)arg1;
- (void)setAnimationStartDate:(id)arg1;
- (void)setAnimationDelay:(double)arg1;
- (double)animationBeginTime;
- (double)animationDuration;
- (void)setAnimationDuration:(double)arg1;
- (void)setAnimationDidStopSelector:(SEL)arg1;
- (void)setAnimationWillStartSelector:(SEL)arg1;
- (void)setAnimationDelegate:(id)arg1;
- (void)commitAnimations;
- (void)beginAnimations:(id)arg1 context:(void *)arg2;
- (void)p_maybeSetTextResponderEditorTo:(id)arg1;
- (void)changeFirstResponderIfNecessary;
- (_Bool)canPerformInteractiveAction:(SEL)arg1 withSender:(id)arg2;
- (_Bool)shouldResampleImages;
- (void)makeEditorPerformAction:(SEL)arg1 withSender:(id)arg2;
- (void)deselectAll:(id)arg1;
- (void)p_acquireLockAndPerformAction:(CDUnknownBlockType)arg1;
- (void)p_willEnterForeground:(id)arg1;
- (void)asyncProcessChanges:(id)arg1 forChangeSource:(id)arg2;
- (struct CGPoint)scrollView:(id)arg1 restrictContentOffset:(struct CGPoint)arg2;
- (_Bool)selectionContainsOnlyInfosOnCanvas:(id)arg1 model:(id)arg2;
- (void)syncProcessChanges:(id)arg1 forChangeSource:(id)arg2;
- (void)p_scrollViewDidEndScrollingAnimation:(id)arg1;
- (void)scrollViewDidScrollToTop:(id)arg1;
- (void)scrollViewDidEndScrollingAnimation:(id)arg1;
- (void)scrollView:(id)arg1 willAnimateToContentOffset:(struct CGPoint)arg2;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewWillEndDragging:(id)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (void)backgroundLayoutAndRenderStateDidPerformBackgroundWork:(id)arg1;
- (_Bool)backgroundLayoutAndRenderState:(id)arg1 shouldDispatchBackgroundWork:(CDUnknownBlockType)arg2;
- (void)backgroundLayoutAndRenderState:(id)arg1 performWorkInBackgroundTilingOnly:(_Bool)arg2;
- (void)didLayoutAndRenderOnThread;
- (id)queueForDrawingTilingLayerInBackground:(id)arg1;
- (_Bool)mustDrawTilingLayerOnMainThread:(id)arg1;
- (void)didEndDrawingTilingLayerInBackground:(id)arg1 withToken:(id)arg2;
- (_Bool)shouldBeginDrawingTilingLayerInBackground:(id)arg1 returningToken:(id *)arg2 andQueue:(id *)arg3;
- (_Bool)canDrawTilingLayerInBackground:(id)arg1;
- (struct CGRect)visibleBoundsForTilingLayer:(id)arg1;
- (_Bool)shouldLayoutTilingLayer:(id)arg1;
- (void)drawLayer:(id)arg1 inContext:(struct CGContext *)arg2;
- (id)actionForLayer:(id)arg1 forKey:(id)arg2;
- (id)gestureTargetStack:(id)arg1;
- (void)tappedCanvasBackgroundAtPoint:(struct CGPoint)arg1;
- (_Bool)handleDoubleTapAtPoint:(struct CGPoint)arg1;
- (_Bool)handleSingleTapAtPoint:(struct CGPoint)arg1;
- (void)updateSelectionForTapOnSelectedRep:(id)arg1;
- (void)updateSelectionForTapAtPoint:(struct CGPoint)arg1 extendingSelection:(_Bool)arg2;
- (id)hitRepChromeAtUnscaledPoint:(struct CGPoint)arg1;
@property(readonly, retain, nonatomic) TSDGestureDispatcher *gestureDispatcher;
@property(readonly, retain, nonatomic) TSDTrackerManipulatorCoordinator *tmCoordinator;
@property(readonly, retain, nonatomic) TSDDynamicOperationController *dynamicOperationController;
- (void)p_endZoomingOperation;
- (void)p_beginZoomingOperation;
- (void)endScrollingOperation;
- (void)beginScrollingOperation;
- (void)i_invalidateSelectionHighlightLayers;
@property(nonatomic) _Bool usesAlternateDrawableSelectionHighlight;
- (_Bool)isInInspectorDynamicOperation;
- (void)endPossiblyParallelInspectorDynamicOperation;
- (void)beginPossiblyParallelInspectorDynamicOperation;
- (_Bool)isInDynamicOperation;
- (void)endDynamicOperation;
- (void)beginDynamicOperation;
- (void)actionGhostKnobHitForRep:(id)arg1;
- (void)toggleHyperlinkUIForRep:(id)arg1;
- (_Bool)hasAnnotations;
- (id)annotationController;
- (_Bool)attachedCommentsAllowedForDrawable:(id)arg1;
- (void)invalidateComments;
- (_Bool)shouldDisplayCommentUIForInfo:(id)arg1;
@property(nonatomic) _Bool showsComments;
- (void)showOrHideComments:(id)arg1;
- (id)p_decorators;
- (void)removeDecorator:(id)arg1;
- (void)addDecorator:(id)arg1;
- (void)closeOverlays;
- (_Bool)shouldPopKnobsOutsideEnclosingScrollView;
- (id)actionGhostKnobForRep:(id)arg1;
- (_Bool)shouldShowOnRepHyperlinkUI;
- (int)defaultKnobTypeForRep:(id)arg1;
- (_Bool)shouldShowPathHighlightOnUnselectedInvisibleShapes;
- (_Bool)shouldEverShowPathHighlightOnInvisibleShapes;
@property(readonly, nonatomic) NSArray *additionalLayersOverRepLayers;
@property(readonly, nonatomic) NSArray *additionalLayersUnderRepLayers;
- (void)performBlockAfterNextLayout:(CDUnknownBlockType)arg1;
- (void)layoutIfNeeded;
- (id)layoutForInfoNearestVisibleRect:(id)arg1 intersectingSelection:(id)arg2;
- (id)layoutForInfoNearestVisibleRect:(id)arg1;
- (id)layoutsForInfo:(id)arg1 intersectingSelection:(id)arg2;
- (id)layoutForModel:(id)arg1 withSelection:(id)arg2;
- (id)layoutForInfo:(id)arg1;
- (id)layoutsForModel:(id)arg1 withSelection:(id)arg2;
- (id)layoutsForInfo:(id)arg1;
- (id)validatedLayoutForInfo:(id)arg1;
@property(readonly, nonatomic) TSDLayoutController *layoutController;
- (id)hitKnobAtPoint:(struct CGPoint)arg1 returningRep:(id *)arg2;
- (void)p_recursiveHitKnobAtPoint:(struct CGPoint)arg1 inRep:(id)arg2 minDistance:(double *)arg3 hitKnob:(id *)arg4 hitRep:(id *)arg5;
- (id)hitRepsAtPoint:(struct CGPoint)arg1 withSlop:(struct CGSize)arg2;
- (id)hitRep:(struct CGPoint)arg1;
- (id)hitRep:(struct CGPoint)arg1 withGesture:(id)arg2 passingTest:(CDUnknownBlockType)arg3;
- (id)topLevelRepsForHitTesting;
- (id)topLevelRepsForDragSelecting;
@property(readonly, nonatomic) TSDContainerRep *topLevelContainerRepForEditing;
- (void)performBlockNextFrame:(CDUnknownBlockType)arg1;
- (id)ancestorRepOfRep:(id)arg1 orDelegateConformingToProtocol:(id)arg2;
- (id)unitStringForAngle:(double)arg1 andLength:(double)arg2;
- (id)unitStringForAngle:(double)arg1;
- (id)unitStringForNumber:(double)arg1;
- (id)unitStringForSize:(struct CGSize)arg1;
- (id)unitStringForPoint:(struct CGPoint)arg1;
- (id)unitFormatter;
- (struct CGSize)growUnscaledCanvasLayerSize:(struct CGSize)arg1;
- (struct CGSize)convertBoundsToUnscaledSize:(struct CGSize)arg1;
- (struct CGSize)convertUnscaledToBoundsSize:(struct CGSize)arg1;
- (struct CGPoint)convertBoundsToUnscaledPoint:(struct CGPoint)arg1;
- (struct CGPoint)convertUnscaledToBoundsPoint:(struct CGPoint)arg1;
- (struct CGRect)convertBoundsToUnscaledRect:(struct CGRect)arg1;
- (struct CGRect)convertUnscaledToBoundsRect:(struct CGRect)arg1;
- (_Bool)allowNegativeAutoscroll;
- (_Bool)allowAutoscroll;
@property(readonly, nonatomic) struct CGRect visibleUnscaledRectForScrollingAutomatically;
@property(readonly, nonatomic) struct CGRect visibleUnscaledRectForAutoscroll;
@property(readonly, nonatomic) struct CGRect visibleUnscaledRectValidWhileZooming;
- (struct CGRect)p_calculateVisibleUnscaledRect;
@property(readonly, nonatomic) struct CGRect visibleUnscaledRect;
- (struct CGRect)p_calculateVisibleBoundsRectForTiling;
@property(readonly, nonatomic) struct CGRect visibleBoundsRectForTiling;
@property(readonly, nonatomic) struct CGRect visibleBoundsRectClippedToWindow;
- (struct CGRect)p_visibleBoundsRectUsingSizeOfEnclosingScrollView:(_Bool)arg1;
@property(readonly, nonatomic) struct CGRect visibleBoundsRectUsingSizeOfEnclosingScrollView;
@property(readonly, nonatomic) struct CGRect visibleBoundsRect;
- (void)discardRepForClassChange:(id)arg1;
- (void)recreateAllLayoutsAndReps;
- (id)repForContainerLayer:(id)arg1;
- (id)repForLayer:(id)arg1;
- (id)containerLayerForRep:(id)arg1;
- (id)layerForRep:(id)arg1;
- (id)repForLayout:(id)arg1;
- (id)p_repForLayout:(id)arg1 createIfNeeded:(_Bool)arg2;
- (id)repForInfo:(id)arg1;
- (id)repForInfo:(id)arg1 createIfNeeded:(_Bool)arg2;
- (id)repsForInfo:(id)arg1;
- (id)topLevelZOrderedSiblingsOfInfos:(id)arg1;
@property(copy, nonatomic) NSArray *infosToDisplay;
- (id)localizedPercentStringForAlignmentGuide:(id)arg1;
- (id)provideUserDefinedGuides;
- (id)provideDynamicGuides;
- (struct CGRect)boundingRectForActiveGuidesForRect:(struct CGRect)arg1;
- (id)infosForGuides;
@property(readonly, nonatomic) TSDGuideStorage *guideStorage;
- (void)makeUserDefinedGuidesVisible;
- (void)toggleShouldShowUserDefinedGuides;
- (void)forceBackgroundLayout;
- (void)forceStopScrolling;
- (void)embeddedCanvasDidEndScrolling;
- (void)embeddedCanvasWillBeginScrolling;
- (void)popThreadedLayoutAndRenderDisabled;
- (void)pushThreadedLayoutAndRenderDisabled;
@property(nonatomic) _Bool shouldShowUserDefinedGuides;
- (_Bool)shouldShowInstructionalText;
- (_Bool)shouldShowTextOverflowGlyphs;
- (_Bool)isPrinting;
- (_Bool)isCanvasInteractive;
- (_Bool)spellCheckingSuppressed;
- (_Bool)spellCheckingSupported;
@property(readonly, nonatomic) struct CGRect visibleUnscaledRectForCanvasUI;
- (id)replaceImageController;
- (void)hideRuler;
- (void)displayRulerForRect:(struct CGRect)arg1;
- (void)displayRulerWithSlowFade:(_Bool)arg1;
@property(nonatomic) struct CGColor *selectionHighlightColor;
- (struct CGColor *)newDefaultSelectionHighlightColor;
- (void)setNeedsDisplayInRect:(struct CGRect)arg1 onLayer:(id)arg2;
- (void)setNeedsDisplayOnLayer:(id)arg1;
@property(readonly, nonatomic) struct CGSize sizeOfScrollViewEnclosingCanvas;
- (_Bool)zoomToFitRect:(struct CGRect)arg1 outset:(_Bool)arg2 fitWidthOnly:(_Bool)arg3 centerHorizontally:(_Bool)arg4 centerVertically:(_Bool)arg5 animated:(_Bool)arg6;
- (double)viewScaleForZoomToFitRect:(struct CGRect)arg1 outset:(_Bool)arg2 fitWidthOnly:(_Bool)arg3;
- (struct CGPoint)contentOffset;
- (void)setContentOffset:(struct CGPoint)arg1 clamp:(_Bool)arg2 animated:(_Bool)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (void)setContentOffset:(struct CGPoint)arg1 clamp:(_Bool)arg2 animated:(_Bool)arg3;
- (void)setContentOffset:(struct CGPoint)arg1 animated:(_Bool)arg2;
- (void)scrollRectToVisibleWithSelectionOutset:(struct CGRect)arg1 animated:(_Bool)arg2;
- (void)scrollRectToVisibleCenter:(struct CGRect)arg1 animated:(_Bool)arg2 onlyScrollNecessaryAxes:(_Bool)arg3;
- (void)scrollRectToVisible:(struct CGRect)arg1 animated:(_Bool)arg2;
- (void)unobscuredFrameDidChange;
- (_Bool)wantsUpdatedScrollIndicatorInsets;
- (struct CGRect)unobscuredFrameOfView:(id)arg1;
- (void)setViewScale:(double)arg1 andScrollViewFrame:(struct CGRect)arg2 animated:(_Bool)arg3;
- (void)setViewScale:(double)arg1 andScrollViewFrame:(struct CGRect)arg2 maintainPosition:(_Bool)arg3 animated:(_Bool)arg4;
- (struct CGPoint)clampedUnscaledContentOffset:(struct CGPoint)arg1 forViewScale:(double)arg2 scrollViewBoundsSize:(struct CGSize)arg3;
- (struct CGPoint)clampedUnscaledContentOffset:(struct CGPoint)arg1 forViewScale:(double)arg2;
- (void)setViewScale:(double)arg1 contentOffset:(struct CGPoint)arg2 clampOffset:(_Bool)arg3 animationDuration:(double)arg4 forceAnimation:(_Bool)arg5 completion:(CDUnknownBlockType)arg6;
- (void)setViewScale:(double)arg1 contentOffset:(struct CGPoint)arg2 clampOffset:(_Bool)arg3 animationDuration:(double)arg4 completion:(CDUnknownBlockType)arg5;
- (void)setViewScale:(double)arg1 contentOffset:(struct CGPoint)arg2 clampOffset:(_Bool)arg3 animated:(_Bool)arg4;
- (struct CGRect)canvasViewBoundsWithBounds:(struct CGRect)arg1;
- (_Bool)shouldResizeCanvasToScrollView;
@property(readonly, nonatomic) struct CGSize canvasScrollingOutset;
@property(readonly, nonatomic) double fitWidthViewScale;
@property(readonly, nonatomic) double currentViewScale;
@property(nonatomic) double viewScale;
@property(readonly, nonatomic) double defaultViewScale;
@property(readonly, nonatomic) TSDCanvasLayer *canvasLayer;
- (_Bool)canvasViewShouldBecomeFirstResponder:(id)arg1;
@property(readonly, nonatomic) TSDCanvasView *canvasView;
- (void)p_editorControllerSelectionDidChangeAndWantsKeyboard:(id)arg1;
- (void)p_editorControllerSelectionDidChange:(id)arg1;
- (_Bool)p_shouldSuppressAutozoomForEditor:(id)arg1;
- (void)p_editorControllerDidChangeCurrentEditors:(id)arg1;
- (void)p_editorControllerDidChangeTextInputEditor:(id)arg1;
- (void)resumeEditing;
- (void)reuseTextInputResponderFrom:(id)arg1;
- (void)setKeyboardSuppressedAndTextInputEditorIgnoresFirstResponderChanges:(_Bool)arg1;
- (_Bool)keyboardSuppressedAndTextInputEditorIgnoresFirstResponderChanges;
- (_Bool)p_currentlyScrollingIncludeEmbeddedCanvasScrolling:(_Bool)arg1;
- (_Bool)p_currentlyScrolling;
@property(readonly, nonatomic) _Bool currentlyScrolling;
- (void)setShouldSuppressRendering:(_Bool)arg1 animated:(_Bool)arg2;
- (void)invalidateLayers;
- (void)invalidateVisibleBounds;
- (void)invalidateVisibleBoundsInBackground;
- (void)invalidateLayoutInBackground:(id)arg1;
- (void)invalidateRepsInBackground;
- (void)invalidateRepsIfSynced;
- (void)invalidateReps;
- (void)layoutInvalidated;
- (void)scrollToPrimarySelection;
- (void)scrollToPrimarySelectionForEditor:(id)arg1;
- (void)p_scrollToPrimarySelectionForEditor:(id)arg1 skipZoom:(_Bool)arg2;
- (void)scrollToSelection:(id)arg1 onModel:(id)arg2 scrollImmediately:(_Bool)arg3;
- (void)scrollToSelection:(id)arg1 onModel:(id)arg2;
- (struct CGRect)scrollFocusRectForModel:(id)arg1 withSelection:(id)arg2;
- (void)setSelection:(id)arg1 onModel:(id)arg2 withFlags:(unsigned long long)arg3;
- (void)p_scrollModelToVisible:(id)arg1 withSelection:(id)arg2;
- (void)scrollSearchReferenceToVisible:(id)arg1;
- (void)scrollCurrentSelectionToVisible;
- (id)infoToScrollToForModel:(id)arg1 withSelection:(id)arg2;
- (id)infoForModel:(id)arg1 withSelection:(id)arg2;
- (id)p_setSelection:(id)arg1 onInfo:(id)arg2 withFlags:(unsigned long long)arg3;
- (_Bool)shouldZoomOnSelectionChange;
- (void)zoomWithAnimationToUnscaledRect:(struct CGRect)arg1;
- (void)zoomToCurrentSelection;
- (struct CGPoint)smartZoomCenterForNoSelection;
- (_Bool)canZoomToCurrentSelection;
- (void)endEditing;
- (id)beginEditingRep:(id)arg1;
- (id)beginEditingRep:(id)arg1 clearingSelection:(_Bool)arg2 withEditorProvider:(CDUnknownBlockType)arg3;
- (id)beginEditingRepForInfo:(id)arg1;
- (id)newCanvasEditor;
@property(readonly, nonatomic) TSDEditorController *editorController;
- (void)presentErrors:(id)arg1 withLocalizedDescription:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)presentError:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)canvas:(id)arg1 layoutGeometryProviderForLayout:(id)arg2;
- (void)canvas:(id)arg1 createdRep:(id)arg2;
- (void)canvas:(id)arg1 willLayoutRep:(id)arg2;
- (id)additionalVisibleInfosForCanvas:(id)arg1;
- (struct CGRect)visibleScaledBoundsForClippingRepsOnCanvas:(id)arg1;
- (void)canvasDidValidateLayoutsWithDependencies:(id)arg1;
- (void)canvasDidUpdateRepsFromLayouts:(id)arg1;
- (void)canvasWillUpdateRepsFromLayouts:(id)arg1;
- (void)canvasDidLayout:(id)arg1;
- (void)canvasDidValidateLayouts:(id)arg1;
- (void)canvasWillLayout:(id)arg1;
- (void)canvasDidUpdateVisibleBounds:(id)arg1;
- (void)canvasLayoutInvalidated:(id)arg1;
- (_Bool)isPrintingCanvas;
@property(readonly, nonatomic) struct CGSize defaultMinimumUnscaledCanvasSize;
@property(readonly, nonatomic) TSKAccessController *accessController;
@property(readonly, nonatomic) TSKChangeNotifier *changeNotifier;
@property(readonly, nonatomic) TSPObjectContext *objectContext;
@property(readonly, nonatomic) TSKDocumentRoot *documentRoot;
@property(readonly, nonatomic) id <TSKDocumentRootProvider> documentRootProvider;
- (void)removeBackgroundRenderingObject:(id)arg1;
- (void)addBackgroundRenderingObject:(id)arg1;
- (void)teardownBackgroundRendering;
- (void)p_iccWillResignFirstResponderNotification:(id)arg1;
- (void)p_iccWillBecomeFirstResponderNotification:(id)arg1;
- (void)i_cvcWillResignFirstResponder;
- (void)i_cvcWillBecomeFirstResponder;
- (void)i_layerHostHasBeenTornDown;
- (void)p_recursivelyClearLayerDelegate:(id)arg1;
- (void)teardown;
- (void)teardownCanvasEditor;
- (void)forwardInvocation:(id)arg1;
- (_Bool)respondsToSelector:(SEL)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (void)dealloc;
- (void)p_commonInit;
- (void)removeCommonObservers;
- (void)addCommonObservers;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)init;
- (CDStruct_499be82c)contentPlacementForPoint:(struct CGPoint)arg1 inView:(id)arg2;
- (struct CGPoint)clampedCenterPointForPoint:(struct CGPoint)arg1 withPlacement:(CDStruct_499be82c)arg2 viewScale:(double)arg3;
- (id)clampedCenterContentLocationForPoint:(struct CGPoint)arg1 withPlacement:(CDStruct_499be82c)arg2 viewScale:(double)arg3;
- (id)convertContentLocation:(id)arg1 fromPlacement:(CDStruct_499be82c)arg2 toPlacement:(CDStruct_499be82c)arg3;
- (id)clampContentLocation:(id)arg1 forPlacement:(CDStruct_499be82c)arg2;
@property(readonly, nonatomic) CDStruct_499be82c centerPlusMovementContentPlacement;
@property(readonly, nonatomic) CDStruct_499be82c touchContentPlacement;
@property(readonly, nonatomic) CDStruct_499be82c screenBottomContentPlacement;
@property(readonly, nonatomic) CDStruct_499be82c screenTopContentPlacement;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSWPInteractiveCanvasController : TSDInteractiveCanvasController <TSDGestureTarget>
{
    _Bool _isTearingDown;
}

@property(readonly, nonatomic) _Bool isTearingDown; // @synthesize isTearingDown=_isTearingDown;
- (id)infosToHideForCanvas:(id)arg1;
- (void)setShowsComments:(_Bool)arg1;
- (_Bool)showsComments;
- (_Bool)cellCommentsAllowedForTableInfo:(id)arg1;
- (_Bool)hyperlinkPopoverIsShown;
- (void)closeHyperlinkPopover;
- (void)showHyperlinkInfoForField:(id)arg1 inRep:(id)arg2 openInEditMode:(_Bool)arg3;
- (_Bool)zoomColumnAtPoint:(struct CGPoint)arg1;
- (id)closestRepToPoint:(struct CGPoint)arg1 forStorage:(id)arg2;
- (id)p_repsForStorage:(id)arg1;
- (void)p_recursivelyAddRep:(id)arg1 forStorage:(id)arg2 toSet:(id)arg3;
- (_Bool)textRepsShouldTileAggressively;
- (_Bool)suppressDoubleTapForSelection;
- (void)willEndEditingText;
- (void)didBeginEditingText;
- (void)gestureSequenceDidEnd;
- (void)gestureSequenceWillBegin;
- (_Bool)handleGesture:(id)arg1;
- (_Bool)canHandleGesture:(id)arg1;
@property(readonly, nonatomic) _Bool isEditingText;
- (void)resumeEditing;
- (id)beginEditingRepForInfo:(id)arg1;
- (id)p_beginEditingPossibleContainedRep:(id *)arg1;
@property(readonly, nonatomic) _Bool shouldRespondToTextHyperlinks;
@property(readonly, nonatomic) _Bool handleHyperlinksWithTextGRs;
- (void)withLayoutForModel:(id)arg1 withSelection:(id)arg2 performBlock:(CDUnknownBlockType)arg3;
- (struct CGRect)scrollFocusRectForModel:(id)arg1 withSelection:(id)arg2;
- (void)teardown;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSAInteractiveCanvasController : TSWPInteractiveCanvasController
{
    TSDDrawableInfo *mInfoBeingDragInserted;
    _Bool _supportsAnnotations;
    TSAAnnotationController *_annotationController;
}

@property(readonly, nonatomic) TSAAnnotationController *annotationController; // @synthesize annotationController=_annotationController;
@property(readonly, nonatomic) _Bool supportsAnnotations; // @synthesize supportsAnnotations=_supportsAnnotations;
@property(retain, nonatomic) TSDDrawableInfo *infoBeingDragInserted; // @synthesize infoBeingDragInserted=mInfoBeingDragInserted;
@property(readonly, nonatomic) _Bool wantsCanvasReferenceController;
- (id)p_activeTextRep;
- (_Bool)hasInspectableSelection;
- (_Bool)requiresSimilarInfos;
- (_Bool)hasEmptyWPSelection;
- (id)additionalVisibleInfosForCanvas:(id)arg1;
- (void)didSetDocumentToMode:(long long)arg1 fromMode:(long long)arg2 animated:(_Bool)arg3;
- (void)willSetDocumentToMode:(long long)arg1 fromMode:(long long)arg2 animated:(_Bool)arg3;
- (void)selectAll:(id)arg1;
- (void)asyncProcessChanges:(id)arg1 forChangeSource:(id)arg2;
- (void)handleHyperlinkGesture:(id)arg1;
- (_Bool)wantsHyperlinkGestureRecognizer;
- (void)unloadDocument;
- (void)loadDocument;
- (void)teardown;
- (void)dealloc;

@end

@interface TSASingleTouchButton : UIButton
{
    UIImage *_touchImage;
    _Bool _showsTouchOnTopWhenHighlighted;
}

@property(retain, nonatomic) UIImage *touchImage; // @synthesize touchImage=_touchImage;
@property(nonatomic) _Bool showsTouchOnTopWhenHighlighted; // @synthesize showsTouchOnTopWhenHighlighted=_showsTouchOnTopWhenHighlighted;
- (void)setHighlighted:(_Bool)arg1;
- (void)layoutSubviews;
- (id)_pressFeedbackImage;
- (struct CGPoint)_pressFeedbackPosition;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)dealloc;

@end

@interface TSSStyleMapper : NSObject <TSKStyleMapper>
{
    TSSStylesheet *_targetStylesheet;
    TSSStylesheet *_targetThemeStylesheet;
    TSKAddedToDocumentContext *_dolcContext;
    TSURetainedPointerKeyDictionary *_styleMap;
    NSMutableArray *_mappingContext;
    _Bool _forceMatchStyle;
    _Bool _varyInThemeStylesheet;
}

@property(nonatomic) _Bool forceMatchStyle; // @synthesize forceMatchStyle=_forceMatchStyle;
- (void)varyInThemeStylesheetIf:(_Bool)arg1 forDurationOfBlock:(CDUnknownBlockType)arg2;
- (void)varyInThemeStylesheetForDurationOfBlock:(CDUnknownBlockType)arg1;
- (id)mappedStyleForStyle:(id)arg1 inThemeStylesheet:(_Bool)arg2;
- (id)mappedStyleForStyle:(id)arg1;
- (id)_mappedStyleForStyle:(id)arg1 depth:(unsigned long long)arg2;
- (id)pTargetParentForStyle:(id)arg1 withParentIdentifier:(id)arg2;
- (id)createStyleForStyle:(id)arg1 withPropertyMap:(id)arg2;
- (id)pCascadedFindExistingRootlessStyle:(id)arg1 propertyMap:(id)arg2;
- (void)popMappingContext:(id)arg1;
- (void)pushMappingContext:(id)arg1;
@property(readonly, nonatomic) TSSStylesheet *targetStylesheet;
- (id)initWithTargetStylesheet:(id)arg1 newStyleDOLCContext:(id)arg2;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSAStyleMapper : TSSStyleMapper
{
}

- (id)pTargetParentForStyle:(id)arg1 withParentIdentifier:(id)arg2;

@end

@interface TSDAbstractLayout : NSObject
{
    TSDAbstractLayout *mParent;
    NSMutableArray *mChildren;
    TSDLayoutGeometry *mGeometry;
    struct CGPoint mInterimPosition;
    _Bool mInterimPositionXSet;
    _Bool mInterimPositionYSet;
    struct CGPoint mLastInterimPosition;
    _Bool mLastInterimPositionXSet;
    _Bool mLastInterimPositionYSet;
}

@property(nonatomic) TSDAbstractLayout *parent; // @synthesize parent=mParent;
@property(copy, nonatomic) TSDLayoutGeometry *geometry; // @synthesize geometry=mGeometry;
- (id)delegateConformingToProtocol:(id)arg1 forLayout:(id)arg2;
- (_Bool)canRotateChildLayout:(id)arg1;
- (_Bool)supportsFlipping;
- (_Bool)supportsParentRotation;
- (_Bool)supportsRotation;
- (_Bool)supportsInspectorPositioning;
- (_Bool)supportsResize;
- (struct CGPoint)positionInRootForAttachmentPositioner;
- (void)offsetGeometryBy:(struct CGPoint)arg1;
- (struct CGPoint)alignmentFrameOriginForFixingInterimPosition;
- (void)p_fixTransformFromInterimPosition:(struct CGPoint)arg1 interimPositionXSet:(_Bool)arg2 interimPositionYSet:(_Bool)arg3;
- (void)fixTransformFromLastInterimPosition;
- (void)fixTransformFromInterimPosition;
@property(nonatomic) double interimPositionY;
@property(nonatomic) double interimPositionX;
- (_Bool)shouldSnapWhileResizing;
- (struct CGRect)alignmentFrameForProvidingGuidesInRoot;
- (struct CGRect)alignmentFrameInRoot;
- (struct CGRect)alignmentFrame;
- (struct CGRect)frameForCulling;
- (void)addDescendentLayoutsToArray:(id)arg1;
- (void)addLayoutsToArray:(id)arg1;
- (void)addLayoutsInRect:(struct CGRect)arg1 toArray:(id)arg2 deep:(_Bool)arg3;
- (void)exchangeChildAtIndex:(unsigned long long)arg1 withChildAtIndex:(unsigned long long)arg2;
- (void)replaceChild:(id)arg1 with:(id)arg2;
- (void)insertChild:(id)arg1 above:(id)arg2;
- (void)insertChild:(id)arg1 below:(id)arg2;
- (void)insertChild:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)addChild:(id)arg1;
- (void)removeFromParent;
@property(copy, nonatomic) NSArray *children;
@property(readonly, nonatomic) TSDAbstractLayout *root;
- (id)additionalDependenciesForChildLayout:(id)arg1;
- (id)layoutsForProvidingGuidesForChildLayouts;
- (id)parentLayoutForProvidingGuides;
- (_Bool)providesGuidesForChildLayouts;
- (_Bool)isRootLayoutForInspectorGeometry;
- (_Bool)isAxisAlignedUnflippedInRoot;
- (struct CGRect)rectInRoot:(struct CGRect)arg1;
- (struct CGRect)rectInParent:(struct CGRect)arg1;
- (struct CGRect)frameInRoot;
- (struct CGRect)frameInParent;
- (struct CGRect)frame;
- (struct CGAffineTransform)transformInRoot;
- (struct CGAffineTransform)transformInParent;
- (struct CGAffineTransform)transform;
- (id)visibleGeometries;
- (id)geometryForTransforming;
- (id)geometryInRoot:(id)arg1;
- (id)geometryInRoot;
- (id)geometryInParent;
- (void)dealloc;
- (id)init;

@end

@interface TSDAllTouchesDoneGestureRecognizer : UIGestureRecognizer
{
    NSMutableSet *mTouches;
}

- (void)p_touchesEndedOrCancelled:(id)arg1;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (_Bool)canBePreventedByGestureRecognizer:(id)arg1;
- (_Bool)canPreventGestureRecognizer:(id)arg1;
- (void)reset;
- (void)dealloc;
- (id)initWithTarget:(id)arg1 action:(SEL)arg2;

@end

@interface TSDFill : NSObject <TSDPathPainter, TSSThemeAsset>
{
    int mInterest;
}

- (int)fillType;
- (void)i_flushCaches;
- (void)removeInterest;
- (void)addInterest;
- (id)referenceColor;
- (_Bool)drawsInOneStep;
- (_Bool)isClear;
- (_Bool)isNearlyWhite;
- (_Bool)isOpaque;
- (void)applyToCAShapeLayer:(id)arg1 withScale:(double)arg2;
- (_Bool)canApplyToCAShapeLayer;
- (void)applyToCALayer:(id)arg1 withScale:(double)arg2;
- (_Bool)shouldBeReappliedToCALayer:(id)arg1;
- (_Bool)canApplyToCALayerByAddingSublayers;
- (_Bool)canApplyToCALayer;
- (_Bool)isThemeEquivalent:(id)arg1;
- (void)paintPath:(struct CGPath *)arg1 inContext:(struct CGContext *)arg2;
- (void)drawSwatchInRect:(struct CGRect)arg1 inContext:(struct CGContext *)arg2;
- (void)paintPath:(struct CGPath *)arg1 naturalBounds:(struct CGRect)arg2 inContext:(struct CGContext *)arg3 isPDF:(_Bool)arg4;
- (void)paintRect:(struct CGRect)arg1 inContext:(struct CGContext *)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSDGradient : TSDFill <TSSPreset, TSSPresetSource, TSDMixing, NSCopying, NSMutableCopying>
{
    NSMutableArray *mStops;
    unsigned long long mType;
    double mOpacity;
    struct CGShading *mShadingRef;
    _Bool mIsAdvancedGradient;
}

+ (void)bootstrapPresetsOfKind:(id)arg1 inTheme:(id)arg2 alternate:(int)arg3;
+ (id)presetKinds;
+ (id)radialGradientWithGradientStops:(id)arg1;
+ (id)radialGradientWithStartColor:(id)arg1 endColor:(id)arg2;
+ (id)linearGradientWithGradientStops:(id)arg1;
+ (id)linearGradientWithStartColor:(id)arg1 endColor:(id)arg2;
+ (void)sortStopsArray:(id)arg1;
+ (_Bool)useQuartzShadings;
+ (_Bool)useInflections;
+ (void)disableInflections;
+ (void)enableInflections;
@property(nonatomic) _Bool isAdvancedGradient; // @synthesize isAdvancedGradient=mIsAdvancedGradient;
@property(nonatomic) double opacity; // @synthesize opacity=mOpacity;
@property(readonly, nonatomic) unsigned long long gradientType; // @synthesize gradientType=mType;
- (void)p_setInflectionOfStopAtIndex:(unsigned long long)arg1 toInflection:(double)arg2;
- (void)p_setColorOfStopAtIndex:(unsigned long long)arg1 toColor:(id)arg2;
- (void)p_swapStopAtIndex:(unsigned long long)arg1 withStopAtIndex:(unsigned long long)arg2;
- (void)p_moveStopAtIndex:(unsigned long long)arg1 toFraction:(double)arg2;
- (void)p_setGradientType:(unsigned long long)arg1;
- (void)p_evenlyDistributeStops;
- (void)p_reverseStopOrder;
- (id)p_insertStopAtFraction:(double)arg1 withColor:(id)arg2;
- (id)p_insertStopAtFraction:(double)arg1;
- (id)p_removeStopAtIndex:(unsigned long long)arg1;
- (void)p_removeStop:(id)arg1;
- (void)p_insertGradientStop:(id)arg1;
- (void)p_setGradientStops:(id)arg1;
- (SEL)mapThemeAssetSelector;
@property(readonly, nonatomic) NSString *presetKind;
- (void)p_endBitmapWrapperContext:(struct CGContext *)arg1 inContext:(struct CGContext *)arg2 withIntegralBounds:(struct CGRect)arg3;
- (struct CGContext *)p_beginBitmapWrapperContextInContext:(struct CGContext *)arg1 returningIntegralBounds:(struct CGRect *)arg2;
- (void)p_setAlpha:(struct CGContext *)arg1;
- (struct CGPoint)endPointForPath:(id)arg1 andBounds:(struct CGRect)arg2;
- (struct CGPoint)startPointForPath:(id)arg1 andBounds:(struct CGRect)arg2;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (int)fillType;
@property(readonly, nonatomic) _Bool hasAlpha;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
@property(readonly, nonatomic) _Bool isOpaque;
- (struct CGAffineTransform)centeredRadialTransformInRect:(struct CGRect)arg1;
- (void)drawSwatchInRect:(struct CGRect)arg1 inContext:(struct CGContext *)arg2;
- (void)paintPath:(struct CGPath *)arg1 inContext:(struct CGContext *)arg2;
- (void)paintRect:(struct CGRect)arg1 inContext:(struct CGContext *)arg2 atAngle:(double)arg3;
- (void)paintRect:(struct CGRect)arg1 inContext:(struct CGContext *)arg2;
- (void)colorComponents:(double *)arg1 atFraction:(double)arg2;
- (id)newColorAtFraction:(double)arg1;
- (id)stopAtIndex:(unsigned long long)arg1;
- (id)stopAfterFraction:(double)arg1;
- (id)stopBeforeFraction:(double)arg1;
- (_Bool)isAdvancedGradientIgnoringFlag;
- (void)releaseShadingRef;
@property(readonly, nonatomic) struct CGShading *shadingRef;
- (id)referenceColor;
@property(readonly, nonatomic) TSUColor *lastColor;
@property(readonly, nonatomic) TSUColor *firstColor;
@property(readonly, retain, nonatomic) NSArray *gradientStops;
- (_Bool)isEqualIgnoringTransform:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)description;
- (void)dealloc;
- (id)initWithStartColor:(id)arg1 endColor:(id)arg2 type:(unsigned long long)arg3;
- (id)initWithGradientStops:(id)arg1 type:(unsigned long long)arg2;
- (id)initWithGradientStops:(id)arg1 type:(unsigned long long)arg2 opacity:(double)arg3;
- (id)init;

@end

@interface TSDAngleGradient : TSDGradient <TSDMixing>
{
    double mAngle;
}

@property(nonatomic) double gradientAngle; // @synthesize gradientAngle=mAngle;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (void)p_paintPath:(struct CGPath *)arg1 inContext:(struct CGContext *)arg2;
- (struct CGAffineTransform)p_shadingTransformForBounds:(struct CGRect)arg1;
- (void)paintPath:(struct CGPath *)arg1 inContext:(struct CGContext *)arg2;
- (void)paintPath:(struct CGPath *)arg1 naturalBounds:(struct CGRect)arg2 inContext:(struct CGContext *)arg3 isPDF:(_Bool)arg4;
- (void)paintRect:(struct CGRect)arg1 inContext:(struct CGContext *)arg2;
- (void)paintRect:(struct CGRect)arg1 inContext:(struct CGContext *)arg2 atAngle:(double)arg3;
- (struct CGPoint)endPointForPath:(id)arg1 andBounds:(struct CGRect)arg2;
- (struct CGPoint)startPointForPath:(id)arg1 andBounds:(struct CGRect)arg2;
- (double)p_bestGradientLengthForRect:(struct CGRect)arg1 atAngle:(double)arg2;
@property(readonly, nonatomic) double gradientAngleInDegrees;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)description;
- (id)initWithStartColor:(id)arg1 endColor:(id)arg2 type:(unsigned long long)arg3 angle:(double)arg4;
- (id)initWithGradientStops:(id)arg1 type:(unsigned long long)arg2 opacity:(double)arg3 angle:(double)arg4;
- (void)setLastColor:(id)arg1;
- (void)setFirstColor:(id)arg1;
- (void)setInflectionOfStopAtIndex:(unsigned long long)arg1 toInflection:(double)arg2;
- (void)setColorOfStopAtIndex:(unsigned long long)arg1 toColor:(id)arg2;
- (void)swapStopAtIndex:(unsigned long long)arg1 withStopAtIndex:(unsigned long long)arg2;
- (void)moveStopAtIndex:(unsigned long long)arg1 toFraction:(double)arg2;
- (void)setGradientType:(unsigned long long)arg1;
- (void)evenlyDistributeStops;
- (void)reverseStopOrder;
- (id)insertStopAtFraction:(double)arg1 withColor:(id)arg2;
- (id)insertStopAtFraction:(double)arg1;
- (id)removeStopAtIndex:(unsigned long long)arg1;
- (void)removeStop:(id)arg1;
- (void)insertGradientStop:(id)arg1;
- (void)setGradientStops:(id)arg1;

@end

@interface TSDAnnotationController : NSObject
{
}

- (void)commitCommentText:(id)arg1 forAnnotation:(id)arg2;
- (void)didShowAnnotation:(id)arg1;
- (void)willShowAnnotation:(id)arg1;
- (void)previousAnnotation:(id)arg1;
- (void)nextAnnotation:(id)arg1;
- (void)unregisterDelegate:(id)arg1;
- (void)registerDelegate:(id)arg1;
@property(nonatomic) _Bool textSelectionChangeShouldDismissAnnotations;
@property(readonly, nonatomic) NSString *annotationNavigationString;
- (id)annotationNavigationTypeStringUsedForNavigating:(_Bool)arg1;
@property(readonly, nonatomic) _Bool hasAnnotations;

@end

@interface TSDLayout : TSDAbstractLayout <TSKSearchTarget, TSDAttachmentLayout>
{
    NSObject<TSDInfo> *mInfo;
    int mLayoutState;
    struct CGPoint mBaseAlignmentFrameOriginForFixingInterimPosition;
    struct CGPoint mBaseCapturedAlignmentFrameOriginForInline;
    struct CGRect mDirtyRect;
    struct {
        unsigned int position:1;
        unsigned int size:1;
    } mInvalidFlags;
    TSDLayoutGeometry *mBaseGeometry;
    struct CGRect mInitialBoundsForStandardKnobs;
    struct CGPoint mCapturedInfoGeometryPositionForInline;
    struct CGPoint mCapturedAlignmentFrameOriginForInline;
    NSMutableSet *mConnectedLayouts;
    _Bool mHasFinishedIterativePositioning;
    id mIterativePositioningState;
}

+ (id)descendentWrappablesOfLayout:(id)arg1;
@property(readonly, nonatomic) _Bool hasFinishedIterativePositioning; // @synthesize hasFinishedIterativePositioning=mHasFinishedIterativePositioning;
@property(retain, nonatomic) id iterativePositioningState; // @synthesize iterativePositioningState=mIterativePositioningState;
@property(readonly, nonatomic) NSSet *connectedLayouts; // @synthesize connectedLayouts=mConnectedLayouts;
@property(readonly, nonatomic) int layoutState; // @synthesize layoutState=mLayoutState;
@property(readonly, nonatomic) TSDLayoutGeometry *originalGeometry; // @synthesize originalGeometry=mBaseGeometry;
@property(readonly, nonatomic) NSObject<TSDInfo> *info; // @synthesize info=mInfo;
- (void)p_invalidateConnectedLayouts;
- (void)removeConnectedLayout:(id)arg1;
- (void)addConnectedLayout:(id)arg1;
- (_Bool)allowsConnections;
- (struct CGRect)rectForPresentingAnnotationPopoverForSelection:(id)arg1;
- (struct CGRect)rectForSelection:(id)arg1;
- (id)childSearchTargets;
- (void)layoutSearchForAnnotationWithHitBlock:(CDUnknownBlockType)arg1;
- (void)p_recursiveInvalidate;
- (void)p_unregisterWithLayoutController:(id)arg1;
- (void)p_registerWithLayoutController:(id)arg1;
- (id)i_externalWrapPath;
- (id)i_wrapPath;
- (struct CGRect)i_takeDirtyRect;
- (void)i_accumulateLayoutsIntoSet:(id)arg1;
@property(readonly, nonatomic) _Bool attachmentLayoutDisplacedByDropCap;
- (void)setNeedsDisplayInRect:(struct CGRect)arg1;
- (void)setNeedsDisplay;
- (_Bool)wantsRoundedInlinePosition;
- (void)willLayoutInlineWithTextAttributes:(struct __CFDictionary *)arg1 columnWidth:(double)arg2;
- (double)inlineCenteredAlignmentOffset;
- (double)inlineVerticalOffset;
- (id)additionalGuides;
- (_Bool)shouldProvideSizingGuides;
- (_Bool)shouldDisplayGuides;
- (_Bool)orderedBefore:(id)arg1;
- (struct CGSize)maximumFrameSizeForChild:(id)arg1;
- (id)additionalLayoutsForRepCreation;
- (id)reliedOnLayouts;
- (id)dependentLayouts;
- (struct CGPoint)calculatePointFromSearchReference:(id)arg1;
- (id)additionalDependenciesForChildLayout:(id)arg1;
- (id)searchTarget;
- (void)processChangedProperty:(int)arg1;
- (double)scaleForInlineClampingUnrotatedSize:(struct CGSize)arg1 withGeometry:(id)arg2;
- (id)computeLayoutGeometry;
- (id)computeInfoGeometryDuringResize;
- (struct CGPoint)centerForConnecting;
- (struct CGPoint)centerForRotation;
- (struct CGRect)boundsForStandardKnobs;
- (void)validateFromLastInterimPosition;
- (_Bool)canFlip;
- (struct CGAffineTransform)originalPureTransformInRoot;
- (struct CGAffineTransform)pureTransformInRoot;
- (id)inspectorGeometry;
- (id)pureGeometryInRoot;
- (id)pureGeometry;
- (id)originalPureGeometry;
- (id)initialInfoGeometry;
- (struct CGRect)initialBoundsForStandardKnobs;
- (_Bool)isBeingManipulated;
- (void)resizeWithTransform:(struct CGAffineTransform)arg1 asChild:(_Bool)arg2;
- (struct CGSize)maximumSizeForChildLayout:(id)arg1;
- (struct CGSize)minimumSize;
- (void)beginResize;
@property(readonly, nonatomic) _Bool canAspectRatioLockBeChangedByUser;
@property(readonly, nonatomic) _Bool resizeMayChangeAspectRatio;
- (void)endRotate;
- (void)takeRotationFromTracker:(id)arg1;
- (void)beginRotate;
- (_Bool)shouldProvideGuidesDuringExclusiveAlignmentOperation;
- (struct CGAffineTransform)layoutTransformInInfoSpace:(struct CGAffineTransform)arg1;
- (struct CGAffineTransform)originalTransformForProvidingGuides;
- (struct CGAffineTransform)originalTransformInRoot;
- (void)endDrag;
- (void)dragBy:(struct CGPoint)arg1;
- (void)dragByUnscaled:(struct CGPoint)arg1;
- (void)beginDrag;
- (_Bool)isBeingTransformed;
- (void)pauseDynamicTransformation;
- (void)endDynamicOperation;
- (void)beginDynamicOperation;
- (_Bool)i_useBaseCapturedAlignmentFrameOriginForInline;
- (void)i_setBaseCapturedAlignmentFrameOriginForInline;
- (struct CGPoint)alignmentFrameOriginForFixingInterimPosition;
- (void)dynamicStrokeWidthChangeDidEnd;
- (void)dynamicStrokeWidthUpdateToValue:(double)arg1;
- (void)dynamicStrokeWidthChangeDidBegin;
@property(readonly, nonatomic) _Bool isStrokeBeingManipulated;
- (id)stroke;
- (_Bool)isInTopLevelContainerForEditing;
- (_Bool)isInGroup;
- (_Bool)shouldBeDisplayedInShowMode;
- (struct CGPoint)infoGeometryPositionForCurrentAttachedLayoutGeometry;
- (Class)repClassOverride;
- (void)processChanges:(id)arg1;
- (id)computeInfoGeometryFromLayoutGeometry:(id)arg1;
- (id)layoutGeometryFromInfo;
- (id)layoutGeometryFromProvider;
- (id)i_layoutGeometryProvider;
- (struct CGPoint)capturedInfoPositionForAttachment;
- (void)validate;
@property(readonly, nonatomic) _Bool invalidGeometry;
- (id)layoutController;
- (id)rootLayout;
- (void)wasRemovedFromLayoutController:(id)arg1;
- (void)willBeRemovedFromLayoutController:(id)arg1;
- (void)wasAddedToLayoutController:(id)arg1;
- (void)willBeAddedToLayoutController:(id)arg1;
- (void)parentDidChange;
- (void)parentWillChangeTo:(id)arg1;
- (void)setParent:(id)arg1;
- (void)unregisterFromLayoutController;
- (void)updateChildrenFromInfo;
- (void)invalidateChildren;
- (void)invalidateExteriorWrap;
- (void)invalidateFrame;
- (_Bool)dependentsRelyOnSize;
- (void)invalidateSize;
- (void)invalidatePosition;
- (void)invalidate;
- (void)finishIterativePositioning;
- (_Bool)shouldValidate;
@property(copy, nonatomic) TSDLayoutGeometry *dynamicGeometry;
- (void)dealloc;
- (id)initWithInfo:(id)arg1;
- (void)setAdjustedInterimPositionY:(double)arg1;
- (void)setAdjustedInterimPositionX:(double)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSDDrawableLayout : TSDLayout <TSDWrappable>
{
    TSDWrapPolygon *mCachedWrapPolygon;
    TSDBezierPath *mCachedWrapPath;
    TSDBezierPath *mCachedExternalWrapPath;
}

- (_Bool)supportsInspectorPositioning;
- (void)invalidateParentForWrap;
- (void)i_invalidateWrap;
- (_Bool)allowsConnections;
- (void)parentDidChange;
- (void)processChangedProperty:(int)arg1;
- (void)setGeometry:(id)arg1;
- (void)dragBy:(struct CGPoint)arg1;
- (void)invalidateExteriorWrap;
- (void)invalidate;
@property(readonly, nonatomic) _Bool hasAlpha;
- (int)wrapFitType;
- (int)wrapDirection;
- (int)wrapType;
- (_Bool)isHTMLWrap;
- (id)wrapPolygon;
- (id)i_externalWrapPath;
- (id)i_wrapPath;
- (id)i_computeWrapPath;
- (id)i_computeWrapPathClosed:(_Bool)arg1;
- (struct CGRect)boundsInRoot;
- (struct CGRect)boundsInfluencingExteriorWrap;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSDStyledLayout : TSDDrawableLayout
{
    _Bool mIsUpdatingOpacity;
    double mDynamicOpacity;
}

- (void)dynamicOpacityChangeDidEnd;
- (void)dynamicOpacityUpdateToValue:(double)arg1;
- (void)dynamicOpacityChangeDidBegin;
- (_Bool)canFlip;
- (_Bool)isInvisible;
@property(readonly, nonatomic) double opacity;
- (struct CGRect)frameForCulling;
- (struct CGRect)reflectionFrameForSubRect:(struct CGRect)arg1;
- (struct CGRect)reflectionFrameInRoot;
- (struct CGRect)reflectionFrame;
- (struct CGRect)i_baseFrame;
- (struct CGRect)reflectionBoundsForRect:(struct CGRect)arg1;
- (struct CGRect)shadowedNaturalBoundsWithoutOffset;
- (struct CGRect)alignmentFrameInRoot;
- (struct CGRect)aliasedAlignmentFrameForScale:(double)arg1;
- (id)styledInfo;

@end

@interface TSDMediaLayout : TSDStyledLayout
{
    struct CGRect mCachedAlignmentFrame;
    struct {
        unsigned int alignmentFrame:1;
    } mMediaInvalidFlags;
    TSDMutableStroke *mDynamicStroke;
    _Bool mShouldRenderFrameStroke;
    struct CGRect mBoundsForStandardKnobs;
}

- (void)invalidateAlignmentFrame;
- (struct CGRect)alignmentFrameInRoot;
- (struct CGRect)alignmentFrame;
- (struct CGRect)computeAlignmentFrameInRoot:(_Bool)arg1;
- (void)setGeometry:(id)arg1;
- (void)dynamicStrokeWidthChangeDidEnd;
- (void)dynamicStrokeWidthUpdateToValue:(double)arg1;
- (void)dynamicStrokeWidthChangeDidBegin;
- (id)stroke;
- (_Bool)isStrokeBeingManipulated;
- (id)mediaInfo;
- (id)initWithInfo:(id)arg1;
- (void)processChangedProperty:(int)arg1;
- (_Bool)supportsRotation;
@property(nonatomic) _Bool shouldRenderFrameStroke;
@property(nonatomic) struct CGRect boundsForStandardKnobs;

@end

@interface TSDAudioLayout : TSDMediaLayout
{
}

- (id)movieInfo;
- (int)wrapType;
- (_Bool)canFlip;
- (_Bool)allowsConnections;
- (struct CGRect)alignmentFrame;
- (struct CGRect)computeAlignmentFrameInRoot:(_Bool)arg1;
- (_Bool)shouldDisplayGuides;
- (id)layoutGeometryFromInfo;
- (_Bool)canAspectRatioLockBeChangedByUser;
- (_Bool)resizeMayChangeAspectRatio;
- (_Bool)supportsRotation;
- (id)initWithInfo:(id)arg1;

@end

@interface TSDRep : NSObject <TSDMagicMoveMatching>
{
    TSDCanvas *mCanvas;
    TSDRep<TSDContainerRep> *mParentRep;
    NSArray *mKnobs;
    _Bool mKnobPositionsInvalid;
    _Bool mShowKnobsWhenManipulated;
    _Bool mKnobsAreShowing;
    TSDKnobTracker *mKnobTracker;
    _Bool mSelectionHighlightLayerValid;
    CALayer *mSelectionHighlightLayer;
    unsigned long long mTextureDeliveryStyle;
    int mTextureByGlyphStyle;
    TSDTextureContext *mTextureContext;
    unsigned long long mTextureStage;
    _Bool mForceRasterization;
    NSDictionary *mTextureActionAttributes;
    NSDictionary *mTextureAnimationInfo;
    _Bool mShowTemporaryHighlight;
    CALayer *mTemporaryHighlightLayer;
    _Bool mShowDragAndDropHighlight;
    CALayer *mDragAndDropHighlightLayer;
    unsigned long long mLayerUpdatesPausedCount;
    TSDLayout *mTemporaryMixingLayout;
    TSDLayout *mLayout;
    TSDTextureSet *mTexture;
    struct CGColor *mDefaultSelectionHighlightColor;
    TSDLayoutGeometry *mLastGeometryInRoot;
    struct CGRect mOriginalLayerFrameInScaledCanvas;
    TSDTilingBackgroundQueue *mTileQueue;
    long long mTileQueueOnce;
    long long mTileProviderQueueLock;
    NSObject<OS_dispatch_queue> *mTileProviderQueue;
    _Bool mHasBeenRemoved;
}

@property(retain, nonatomic) NSDictionary *textureAnimationInfo; // @synthesize textureAnimationInfo=mTextureAnimationInfo;
@property(retain, nonatomic) NSDictionary *textureActionAttributes; // @synthesize textureActionAttributes=mTextureActionAttributes;
@property(nonatomic) unsigned long long textureStage; // @synthesize textureStage=mTextureStage;
@property(copy, nonatomic) TSDTextureContext *textureContext; // @synthesize textureContext=mTextureContext;
@property(nonatomic) int textureByGlyphStyle; // @synthesize textureByGlyphStyle=mTextureByGlyphStyle;
@property(nonatomic) unsigned long long textureDeliveryStyle; // @synthesize textureDeliveryStyle=mTextureDeliveryStyle;
@property(retain, nonatomic) TSDTextureSet *texture; // @synthesize texture=mTexture;
@property(nonatomic) TSDKnobTracker *currentKnobTracker; // @synthesize currentKnobTracker=mKnobTracker;
@property(nonatomic) TSDRep<TSDContainerRep> *parentRep; // @synthesize parentRep=mParentRep;
@property(retain, nonatomic) TSDLayout *temporaryMixingLayout; // @synthesize temporaryMixingLayout=mTemporaryMixingLayout;
@property _Bool forceRasterization; // @synthesize forceRasterization=mForceRasterization;
@property(readonly, nonatomic) TSDCanvas *canvas; // @synthesize canvas=mCanvas;
- (id)delegateConformingToProtocol:(id)arg1 forRep:(id)arg2;
- (void)replaceContentsFromRep:(id)arg1;
- (void)willReplaceContentsFromRep:(id)arg1;
@property(readonly, nonatomic) NSArray *hyperlinkRegions;
- (_Bool)wantsToDistortWithImagerContext;
- (void)i_shutdownTileQueue;
- (id)i_tileQueue;
- (id)i_queueForTileProvider;
- (_Bool)mustDrawOnMainThreadForInteractiveCanvas;
- (_Bool)canDrawInParallel;
- (_Bool)canDrawInBackgroundDuringScroll;
- (int)tilingMode;
- (_Bool)directlyManagesLayerContent;
- (void)didCreateLayer:(id)arg1;
- (struct CGPoint)centerForRotation;
- (struct CGRect)boundsForResizeGuideUI;
- (_Bool)wantsGuidesWhileResizing;
- (id)infoForTransforming;
- (_Bool)resizeFromCenterOnly;
- (double)opacity;
- (unsigned long long)adjustedKnobForComputingResizeGeometry:(unsigned long long)arg1;
- (struct CGRect)targetRectForEditMenu;
- (id)itemsToAddToEditMenu;
- (_Bool)handlesEditMenu;
- (_Bool)isLocked;
- (_Bool)isPlaceholder;
- (_Bool)isSelectable;
- (int)dragHUDAndGuidesTypeAtCanvasPoint:(struct CGPoint)arg1;
- (int)dragTypeAtCanvasPoint:(struct CGPoint)arg1;
- (_Bool)shouldShowSizesInRulers;
- (_Bool)shouldShowDragHUD;
- (_Bool)isDraggable;
- (_Bool)isOpaque;
- (_Bool)masksToBounds;
- (id)allLayers;
- (void)invalidateAnnotationColor;
- (void)invalidateComments;
- (_Bool)shouldShowCommentHighlight;
- (id)additionalLayersOverLayer;
- (id)additionalLayersUnderLayer;
- (void)didUpdateLayer:(id)arg1;
- (void)willUpdateLayer:(id)arg1;
- (_Bool)canEditWithEditor:(id)arg1;
- (id)beginEditing;
- (void)willBeRemoved;
- (void)processChangedProperty:(int)arg1;
- (void)drawInContext:(struct CGContext *)arg1;
- (_Bool)repDirectlyManagesContentsScaleOfLayer:(id)arg1;
- (void)didEndDrawingTilingLayerInBackground:(id)arg1 withToken:(id)arg2;
- (_Bool)shouldBeginDrawingTilingLayerInBackground:(id)arg1 returningToken:(id *)arg2 andQueue:(id *)arg3;
- (id)queueForDrawingTilingLayerInBackground:(id)arg1;
- (struct CGRect)visibleBoundsForTilingLayer:(id)arg1;
- (_Bool)mustDrawTilingLayerOnMainThread:(id)arg1;
- (_Bool)canDrawTilingLayerInBackground:(id)arg1;
- (_Bool)shouldLayoutTilingLayer:(id)arg1;
- (id)textureForContext:(id)arg1;
- (void)p_setMagicMoveTextureAttributes:(id)arg1;
- (struct CGAffineTransform)unRotatedTransform:(struct CGAffineTransform)arg1;
- (void)markTextureDirty;
@property(readonly, nonatomic) double textureAngle;
- (_Bool)wantsToHandleTapsWhenLocked;
- (_Bool)wantsToHandleTapsOnContainingGroup;
- (_Bool)canClipThemeContentToCanvas;
- (_Bool)handleDoubleTapAtPoint:(struct CGPoint)arg1;
- (_Bool)handleSingleTapAtPoint:(struct CGPoint)arg1;
- (_Bool)shouldIgnoreSingleTapAtPoint:(struct CGPoint)arg1 withRecognizer:(id)arg2;
- (_Bool)shouldIgnoreEditMenuTapAtPoint:(struct CGPoint)arg1 withRecognizer:(id)arg2;
- (_Bool)wantsEditMenuForTapAtPoint:(struct CGPoint)arg1 onKnob:(id)arg2;
- (_Bool)handleDoubleTapAtPoint:(struct CGPoint)arg1 onKnob:(id)arg2;
- (_Bool)handleSingleTapAtPoint:(struct CGPoint)arg1 onKnob:(id)arg2;
- (struct CGPoint)unscaledGuidePosition;
- (double)angleForRotation;
- (_Bool)isBeingRotated;
- (void)p_dynamicRotateDidBegin;
- (void)dynamicRotateDidBegin;
- (struct CGRect)i_originalLayerFrameInScaledCanvas;
- (struct CGPoint)i_dragOffset;
- (_Bool)isInDynamicOperation;
- (id)popoutLayers;
- (id)overlayLayers;
- (id)p_addLayersForKnobsToArray:(id)arg1 withDelegate:(id)arg2 isOverlay:(_Bool)arg3;
- (struct CGPoint)convertKnobPositionToUnscaledCanvas:(struct CGPoint)arg1;
- (void)i_invalidateSelectionHighlightLayer;
- (id)selectionHighlightLayer;
- (struct CGAffineTransform)transformForHighlightLayer;
- (struct CGRect)boundsForHighlightLayer;
@property(nonatomic) struct CGColor *selectionHighlightColor;
- (double)selectionHighlightWidth;
- (_Bool)directlyManagesVisibilityOfKnob:(id)arg1;
- (void)fadeKnobsOut;
- (void)fadeKnobsIn;
- (void)turnKnobsOn;
- (void)showKnobsDuringManipulation:(_Bool)arg1;
- (_Bool)shouldShowKnobs;
- (_Bool)shouldDisplayHyperlinkUI;
@property(readonly, nonatomic) _Bool isEditingPath;
- (_Bool)shouldShowCommentUIDirectlyOverRep;
- (_Bool)shouldCreateCommentKnob;
- (_Bool)shouldCreateLockedKnobs;
- (_Bool)shouldCreateSelectionKnobs;
- (_Bool)shouldCreateKnobs;
- (_Bool)shouldShowSelectionHighlight;
- (double)additionalRotationForKnobOrientation;
- (id)knobForTag:(unsigned long long)arg1;
- (void)p_actionGhostKnobHit;
- (void)p_toggleHyperlinkUIVisibility;
- (id)newTrackerForKnob:(id)arg1;
- (void)invalidateKnobPositions;
- (struct CGPoint)positionOfStandardKnob:(id)arg1 forBounds:(struct CGRect)arg2;
- (struct CGPoint)p_positionOfActionGhostKnobForBounds:(struct CGRect)arg1;
- (struct CGPoint)positionOfActionGhostKnob;
- (struct CGPoint)positionOfHyperlinkKnob;
- (_Bool)forcesPlacementOnTop;
- (void)updatePositionsOfKnobs:(id)arg1;
- (struct CGRect)trackingBoundsForStandardKnobs;
- (struct CGRect)boundsForStandardKnobs;
- (_Bool)canUseSpecializedHitRegionForKnob:(id)arg1;
- (void)addActionGhostKnobToArrayIfNecessary:(id)arg1;
- (void)addHyperlinkKnobToArray:(id)arg1;
- (void)addCommentKnobToArray:(id)arg1;
- (void)addLockedKnobsToArray:(id)arg1;
- (void)addSelectionKnobsToArray:(id)arg1;
- (id)newSelectionKnobForType:(int)arg1 tag:(unsigned long long)arg2;
- (void)addKnobsToArray:(id)arg1;
- (unsigned long long)enabledKnobMask;
- (void)invalidateKnobs;
@property(readonly, nonatomic) NSArray *knobs;
- (void)becameNotSelected;
- (void)becameSelected;
- (_Bool)isSelected;
- (_Bool)isSelectedIgnoringLocking;
- (void)i_configureFontSmoothingForContext:(struct CGContext *)arg1 layer:(id)arg2;
- (void)endDrawingOperation;
- (void)beginDrawingOperation;
- (void)recursivelyDrawChildrenInContext:(struct CGContext *)arg1;
- (void)recursivelyDrawInContext:(struct CGContext *)arg1;
- (void)addBitmapsToRenderingQualityInfo:(id)arg1 inContext:(struct CGContext *)arg2;
- (struct CGRect)clipRect;
- (_Bool)isDrawingInFlippedContext;
- (void)didDrawInLayer:(id)arg1 context:(struct CGContext *)arg2;
- (void)drawInLayerContext:(struct CGContext *)arg1;
- (void)setupForDrawingInLayer:(id)arg1 context:(struct CGContext *)arg2;
- (id)colorBehindLayer:(id)arg1;
- (Class)layerClass;
- (void)viewScrollingEnded;
- (void)viewScrollDidChange;
- (void)viewScrollWillChange;
- (void)viewScaleDidChange;
- (void)screenScaleDidChange;
- (void)setNeedsDisplayInRect:(struct CGRect)arg1;
- (void)setNeedsDisplay;
- (void)processChanges:(id)arg1;
- (void)computeDirectLayerFrame:(struct CGRect *)arg1 andTransform:(struct CGAffineTransform *)arg2 basedOnLayoutGeometry:(id)arg3;
- (void)computeDirectLayerFrame:(struct CGRect *)arg1 andTransform:(struct CGAffineTransform *)arg2;
- (void)computeDirectLayerFrame:(struct CGRect *)arg1 andTransform:(struct CGAffineTransform *)arg2 basedOnTransform:(struct CGAffineTransform)arg3 andSize:(struct CGSize)arg4;
- (void)antiAliasDefeatLayerFrame:(struct CGRect *)arg1 forTransform:(struct CGAffineTransform)arg2;
- (void)antiAliasDefeatLayerTransform:(struct CGAffineTransform *)arg1 forFrame:(struct CGRect)arg2;
- (void)updateLayerGeometryFromLayout:(id)arg1;
- (struct CGAffineTransform)layerTransformInRootForZeroAnchor;
- (struct CGAffineTransform)parentLayerInverseTransformInRootForZeroAnchor;
- (struct CGAffineTransform)layerTransform;
- (void)layoutInRootChangedFrom:(id)arg1 to:(id)arg2 translatedOnly:(_Bool)arg3;
- (void)updateFromLayout;
- (void)updateChildrenFromLayout;
- (id)repForHandleSingleTap;
- (id)repForRotating;
- (id)repForSelecting;
- (id)additionalRepsForDragging;
- (id)repForDragging;
- (_Bool)intersectsUnscaledRect:(struct CGRect)arg1;
- (double)shortestDistanceToPoint:(struct CGPoint)arg1 countAsHit:(_Bool *)arg2;
- (_Bool)shouldExpandHitRegionWhenSmall;
- (id)hitRepChrome:(struct CGPoint)arg1;
- (id)hitRepChrome:(struct CGPoint)arg1 passingTest:(CDUnknownBlockType)arg2;
- (id)hitReps:(struct CGPoint)arg1 withSlopBlock:(CDUnknownBlockType)arg2;
- (id)hitReps:(struct CGPoint)arg1 withSlop:(struct CGSize)arg2;
- (id)hitRep:(struct CGPoint)arg1;
- (id)hitRep:(struct CGPoint)arg1 withGesture:(id)arg2 passingTest:(CDUnknownBlockType)arg3;
- (_Bool)containsPoint:(struct CGPoint)arg1 withSlop:(struct CGSize)arg2;
- (_Bool)containsPoint:(struct CGPoint)arg1;
- (void)scrollRectToVisible:(struct CGRect)arg1 animated:(_Bool)arg2;
- (double)scaleToConvertNaturalToLayerRelative;
- (struct CGPoint)convertUnscaledPointFromLayerRelative:(struct CGPoint)arg1;
- (struct CGPoint)convertUnscaledPointToLayerRelative:(struct CGPoint)arg1;
- (struct CGRect)convertNaturalRectFromLayerRelative:(struct CGRect)arg1;
- (struct CGRect)convertNaturalRectToLayerRelative:(struct CGRect)arg1;
- (struct CGPoint)convertNaturalPointFromLayerRelative:(struct CGPoint)arg1;
- (struct CGPoint)convertNaturalPointToLayerRelative:(struct CGPoint)arg1;
- (struct CGAffineTransform)transformToConvertNaturalFromLayerRelative;
- (struct CGAffineTransform)transformToConvertNaturalToLayerRelative;
- (struct CGPoint)layerOffsetForDragging;
- (struct CGRect)layerFrameInScaledCanvasRelativeToParent;
- (struct CGRect)i_layerFrameInScaledCanvasIgnoringDragging;
- (struct CGRect)layerFrameInScaledCanvas;
- (struct CGRect)frameInScreenSpace;
- (struct CGRect)frameInUnscaledCanvasIncludingChrome;
- (struct CGRect)frameInUnscaledCanvas;
- (struct CGPoint)convertNaturalPointFromUnscaledCanvas:(struct CGPoint)arg1;
- (struct CGPoint)convertNaturalPointToUnscaledCanvas:(struct CGPoint)arg1;
- (struct CGPath *)newPathInScaledCanvasFromNaturalRect:(struct CGRect)arg1;
- (struct CGRect)convertNaturalRectFromUnscaledCanvas:(struct CGRect)arg1;
- (struct CGRect)convertNaturalRectToUnscaledCanvas:(struct CGRect)arg1;
- (_Bool)isVisibleOnCanvas;
- (struct CGRect)naturalBounds;
- (double)angleInRoot;
- (void)addToSet:(id)arg1;
- (id)parentRepToPerformSelecting;
- (void)i_willEnterForeground;
- (_Bool)hasBeenRemoved;
- (void)i_willBeRemoved;
- (void)recursivelyPerformSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (void)recursivelyPerformSelector:(SEL)arg1 withObject:(id)arg2;
- (void)recursivelyPerformSelector:(SEL)arg1;
- (void)recursivelyPerformSelectorIfImplemented:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (void)recursivelyPerformSelectorIfImplemented:(SEL)arg1 withObject:(id)arg2;
- (void)recursivelyPerformSelectorIfImplemented:(SEL)arg1;
- (void)wasAddedToParent;
- (void)willBeRemovedFromParent;
- (id)connectedReps;
- (void)resumeLayerUpdatesAndLayoutImmediately;
- (void)resumeLayerUpdates;
- (void)pauseLayerUpdates;
- (_Bool)layerUpdatesPaused;
- (id)info;
@property(readonly, nonatomic) TSDLayout *layout; // @synthesize layout=mLayout;
@property(readonly, nonatomic) TSDInteractiveCanvasController *interactiveCanvasController;
- (_Bool)i_hasInteractiveCanvasController;
- (id)description;
- (void)dealloc;
- (id)initWithLayout:(id)arg1 canvas:(id)arg2;
- (id)subviewsController;
- (struct CGRect)i_partition_deepClipRect;
- (_Bool)allowTrackingContainedRep:(id)arg1;
- (void)addTrackingAboveChildren:(id)arg1;
- (void)addTracking:(id)arg1;

@end

@interface TSDStyledRep : TSDRep
{
    CALayer *mShadowLayer;
    CALayer *mReflectionLayer;
    struct CGPoint mOriginalReflectionLayerPositionInScaledCanvas;
    _Bool mIsUpdatingReflectionOpacity;
    TSDMutableReflection *mDynamicReflection;
    _Bool mIsUpdatingShadow;
    TSDShadow *mDynamicShadow;
    struct {
        unsigned int shadowInvalid:1;
    } mFlags;
}

@property(readonly, nonatomic) CALayer *reflectionLayer; // @synthesize reflectionLayer=mReflectionLayer;
@property(readonly, nonatomic) CALayer *shadowLayer; // @synthesize shadowLayer=mShadowLayer;
- (id)textureForContext:(id)arg1;
- (id)magicMoveAttributesWithShapeAttributes:(_Bool)arg1;
- (void)setMagicMoveTextureAttributes:(id)arg1;
- (id)pathSourceForSelectionHighlightBehavior;
- (_Bool)shouldShowSelectionHighlight;
- (_Bool)shouldHideSelectionHighlightDueToRectangularPath;
- (id)additionalLayersUnderLayer;
- (void)didUpdateLayer:(id)arg1;
- (void)willUpdateLayer:(id)arg1;
- (void)processChangedProperty:(int)arg1;
- (void)drawInContextWithoutEffectsOrChildrenForAlphaOnly:(struct CGContext *)arg1;
- (void)drawInContextWithoutEffectsForAlphaOnly:(struct CGContext *)arg1;
- (void)drawInContextWithoutEffectsOrChildren:(struct CGContext *)arg1;
- (void)drawInContextWithoutEffects:(struct CGContext *)arg1;
- (void)drawInContextWithoutEffects:(struct CGContext *)arg1 withContent:(_Bool)arg2 withStroke:(_Bool)arg3 withOpacity:(_Bool)arg4 forAlphaOnly:(_Bool)arg5 drawChildren:(_Bool)arg6;
- (void)drawInContext:(struct CGContext *)arg1;
- (void)drawReflectionInContext:(struct CGContext *)arg1 drawChildren:(_Bool)arg2;
- (void)drawReflectionInContext:(struct CGContext *)arg1 withTransparencyLayer:(_Bool)arg2 applyingOpacity:(_Bool)arg3 shouldClipGradient:(_Bool)arg4 withBlock:(CDUnknownBlockType)arg5;
- (void)drawShadowInContext:(struct CGContext *)arg1 withChildren:(_Bool)arg2 withDrawableOpacity:(_Bool)arg3;
- (void)drawReflectionIntoReflectionFrameInContext:(struct CGContext *)arg1 withTransparencyLayer:(_Bool)arg2 applyingOpacity:(_Bool)arg3 drawChildren:(_Bool)arg4;
- (void)p_drawReflectionIntoReflectionFrameInContext:(struct CGContext *)arg1 withTransparencyLayer:(_Bool)arg2 applyingOpacity:(_Bool)arg3 shouldClipGradient:(_Bool)arg4 withBlock:(CDUnknownBlockType)arg5;
- (void)drawGradientWithAlphaOverReflection:(struct CGContext *)arg1 applyingOpacity:(_Bool)arg2 reflectionSize:(struct CGSize)arg3;
- (struct CGImage *)p_newReflectionImageWithSize:(struct CGSize)arg1 applyOpacity:(_Bool)arg2 viewScale:(double)arg3 withBlock:(CDUnknownBlockType)arg4;
- (struct CGImage *)newShadowImageWithSize:(struct CGSize)arg1 unflipped:(_Bool)arg2 withChildren:(_Bool)arg3;
- (struct CGImage *)newShadowImageWithSize:(struct CGSize)arg1 shadow:(id)arg2 drawSelector:(SEL)arg3 unflipped:(_Bool)arg4;
- (_Bool)canDrawShadowInOneStepWithChildren:(_Bool)arg1;
- (void)positionShadowLayer:(id)arg1 forShadow:(id)arg2 withNaturalBounds:(struct CGRect)arg3;
- (void)invalidateShadowLayer;
- (void)didUpdateEffectLayersForLayer:(id)arg1;
- (struct CGRect)reflectionLayerFrame;
- (struct CGRect)reflectionLayerFrameInRoot;
- (_Bool)isInvisible;
- (void)willUpdateEffectLayersForLayer:(id)arg1;
- (void)disposeReflectionLayer;
- (void)createReflectionLayer;
- (_Bool)shouldShowShadow;
- (_Bool)shouldShowReflection;
@property(readonly, nonatomic) TSDShadow *shadow;
@property(readonly, nonatomic) TSDReflection *reflection;
- (struct CGRect)p_rectWithEffectsAppliedToRect:(struct CGRect)arg1 additionalTransform:(struct CGAffineTransform)arg2;
- (struct CGRect)rectWithEffectsAppliedToRect:(struct CGRect)arg1;
@property(readonly, nonatomic) double opacity;
- (void)drawLayer:(id)arg1 inContext:(struct CGContext *)arg2;
- (void)p_drawReflectionInContext:(struct CGContext *)arg1;
- (id)actionForLayer:(id)arg1 forKey:(id)arg2;
- (struct CGRect)p_clipRectInRootForTransform:(struct CGAffineTransform)arg1;
- (struct CGRect)clipRect;
- (struct CGRect)clipRectWithoutEffects;
- (void)viewScaleDidChange;
- (void)setNeedsDisplay;
- (id)styledLayout;
- (id)styledInfo;
- (id)description;
- (void)dealloc;

@end

@interface TSDMediaRep : TSDStyledRep
{
    _Bool mIsZooming;
    CALayer *mTapToReplaceLayer;
    CAShapeLayer *mMaskLayer;
    CAShapeLayer *mStrokeLayer;
    CALayer *mFrameMaskLayer;
    TSDFrameRep *mFrameRep;
    struct CGRect mLastPictureFrameLayerRect;
}

- (void)p_updateTapToReplaceLayerPosition;
- (struct CGPoint)p_scaledPositionOfImageReplaceKnob;
- (struct CGSize)p_replaceButtonSize;
- (void)p_addLayerForReplaceButtonToArray:(id)arg1;
- (id)p_tapToReplaceLayer;
- (_Bool)replaceButtonContainsPoint:(struct CGPoint)arg1;
- (id)currentReplaceButtonHighlightedImage;
- (id)currentReplaceButtonImage;
- (id)visibleMediaReplaceButtonLayer;
@property(readonly, nonatomic) _Bool shouldShowMediaReplaceUI;
- (_Bool)shouldAllowReplacementFromPaste;
- (_Bool)shouldAllowReplacementFromDrop;
- (_Bool)isPlaceholder;
- (struct CGPoint)positionOfHyperlinkKnob;
- (void)updatePositionsOfKnobs:(id)arg1;
- (void)addKnobsToArray:(id)arg1;
- (_Bool)shouldCreateKnobs;
- (_Bool)canResetMediaSize;
- (id)additionalLayersOverLayer;
- (id)overlayLayers;
- (void)didEndZooming;
- (void)willBeginZooming;
- (void)processChangedProperty:(int)arg1;
@property(readonly, nonatomic) TSDMediaLayout *mediaLayout;
@property(readonly, nonatomic) TSDMediaInfo *mediaInfo;
- (void)dealloc;
- (_Bool)i_shouldRenderStroke:(id)arg1;
- (void)i_updateFrameRep;

@end

@interface TSDAudioRep : TSDMediaRep <TSKAVPlayerControllerDelegate, TSDAudioHUDControllerDelegate>
{
    TSKAVPlayerController *mPlayerController;
    CALayer *mPlayPauseButtonLayer;
    CALayer *mAudioImageLayer;
    float mDynamicVolume;
    _Bool mIsChangingDynamicVolume;
    id <TSDAudioHUDController> mAudioHUDController;
}

@property(readonly, nonatomic) id <TSDAudioHUDController> audioHUDController; // @synthesize audioHUDController=mAudioHUDController;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)playbackDidStopForPlayerController:(id)arg1;
- (void)playerController:(id)arg1 playbackDidFailWithError:(id)arg2;
@property(readonly, nonatomic) TSKAVPlayerController *playerController;
- (void)p_teardownPlayerController;
- (void)p_setupPlayerControllerIfNecessary;
- (_Bool)p_shouldPlayerControllerExistThroughoutSelection;
- (void)dynamicVolumeChangeDidEnd;
- (void)dynamicVolumeUpdateToValue:(float)arg1;
- (void)dynamicVolumeChangeDidBegin;
@property(readonly, nonatomic) float volume;
- (void)p_updateButtonForPlaying:(_Bool)arg1 pressed:(_Bool)arg2;
- (id)textureWithContext:(id)arg1;
- (_Bool)containsPoint:(struct CGPoint)arg1;
- (void)didEndZooming;
- (void)willBeginZooming;
- (_Bool)exclusivelyProvidesGuidesWhileAligning;
- (_Bool)providesGuidesWhileAligning;
- (struct CGRect)boundsForStandardKnobs;
- (void)updateLayerGeometryFromLayout:(id)arg1;
- (_Bool)shouldShowKnobs;
- (_Bool)p_isEditingAnimations;
- (_Bool)shouldShowSelectionHighlight;
- (_Bool)shouldShowSizesInRulers;
- (_Bool)shouldShowDragHUD;
- (_Bool)isDraggable;
- (void)p_updateEndTime;
- (void)p_updateStartTime;
- (void)p_updateVolume;
- (void)p_updateRepeatMode;
- (void)processChangedProperty:(int)arg1;
- (_Bool)p_isPlaying;
- (_Bool)shouldAllowReplacementFromDrop;
- (_Bool)shouldAllowReplacementFromPaste;
- (id)hitRepChrome:(struct CGPoint)arg1;
- (void)updatePlayButtonForPoint:(struct CGPoint)arg1;
- (_Bool)hitPlayPauseButtonWithPoint:(struct CGPoint)arg1;
- (void)willBeginReadMode;
- (void)willBeRemoved;
- (void)becameNotSelected;
- (void)becameSelected;
- (void)willUpdateLayer:(id)arg1;
- (_Bool)p_shouldShowPlayPauseLayers;
- (void)drawInContext:(struct CGContext *)arg1;
- (void)drawInContextWithoutEffects:(struct CGContext *)arg1 withContent:(_Bool)arg2 withStroke:(_Bool)arg3 withOpacity:(_Bool)arg4 forAlphaOnly:(_Bool)arg5 drawChildren:(_Bool)arg6;
- (_Bool)shouldShowMediaReplaceUI;
- (_Bool)canResetMediaSize;
- (Class)layerClass;
- (_Bool)directlyManagesLayerContent;
- (void)dealloc;
@property(readonly, nonatomic) TSDMovieInfo *movieInfo;
- (id)initWithLayout:(id)arg1 canvas:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSDAutoscroll : NSObject
{
    NSObject<TSDAutoscrollDelegate> *mTarget;
    struct CGPoint mPoint;
    int mDirections;
    double mRepeatInterval;
    NSTimer *mTimer;
    unsigned long long mCount;
    _Bool mActive;
    struct CGPoint mLastAutoscrollDelta;
    double mLastFired;
    _Bool mTargetIsAutoscrolling;
}

+ (void)startAutoscroll:(id)arg1 unscaledPoint:(struct CGPoint)arg2;
@property(nonatomic) _Bool targetIsAutoscrolling; // @synthesize targetIsAutoscrolling=mTargetIsAutoscrolling;
@property(readonly, nonatomic) struct CGPoint lastAutoscrollDelta; // @synthesize lastAutoscrollDelta=mLastAutoscrollDelta;
@property(nonatomic) _Bool active; // @synthesize active=mActive;
@property(nonatomic) unsigned long long count; // @synthesize count=mCount;
@property(nonatomic) double repeatInterval; // @synthesize repeatInterval=mRepeatInterval;
@property(nonatomic) int directions; // @synthesize directions=mDirections;
@property(nonatomic) struct CGPoint point; // @synthesize point=mPoint;
@property(retain, nonatomic) NSObject<TSDAutoscrollDelegate> *target; // @synthesize target=mTarget;
- (void)timerFired:(id)arg1;
- (unsigned long long)p_deltaForCount:(unsigned long long)arg1;
- (void)invalidate;
- (void)p_cleanup;
- (_Bool)startAutoscroll:(id)arg1 unscaledPoint:(struct CGPoint)arg2 directions:(int)arg3 repeatInterval:(double)arg4;
- (void)dealloc;

@end

@interface TSDBackgroundLayoutAndRenderState : NSObject
{
    id <TSDBackgroundLayoutAndRenderStateDelegate> mDelegate;
    _Bool mNeedsLayoutAndRender;
    _Bool mNeedsLayoutForTilingLayers;
}

- (void)p_didBackgroundLayoutAndRender;
- (void)setNeedsLayoutForTilingLayers;
- (void)setNeedsLayoutAndRender;
- (void)clearDelegate;
- (id)initWithDelegate:(id)arg1;

@end

@interface TSDBezierNode : NSObject
{
    struct CGPoint mIn;
    struct CGPoint mNode;
    struct CGPoint mOut;
    int mReflectedState;
    _Bool mSelected;
    int mType;
}

+ (id)bezierNodeWithPoint:(struct CGPoint)arg1 inControlPoint:(struct CGPoint)arg2 outControlPoint:(struct CGPoint)arg3;
+ (id)bezierNodeWithPoint:(struct CGPoint)arg1;
@property(nonatomic, getter=isSelected) _Bool selected; // @synthesize selected=mSelected;
@property(nonatomic) int type; // @synthesize type=mType;
@property(nonatomic) int reflectedState; // @synthesize reflectedState=mReflectedState;
@property(nonatomic) struct CGPoint outControlPoint; // @synthesize outControlPoint=mOut;
@property(nonatomic) struct CGPoint inControlPoint; // @synthesize inControlPoint=mIn;
@property(nonatomic) struct CGPoint nodePoint; // @synthesize nodePoint=mNode;
- (id)description;
- (id)typeString;
- (id)reflectedStateString;
- (_Bool)underPoint:(struct CGPoint)arg1 withTransform:(struct CGAffineTransform)arg2 andTolerance:(double)arg3 returningType:(long long *)arg4;
- (void)transformUsingAffineTransform:(struct CGAffineTransform)arg1;
- (void)swapControlPoints;
- (void)updateReflectedState;
@property(readonly, nonatomic) _Bool isCollapsed;
- (void)collapse;
- (void)setInControlPointFromReflection:(struct CGPoint)arg1 constrain:(_Bool)arg2;
- (void)setOutControlPoint:(struct CGPoint)arg1 reflect:(int)arg2 constrain:(_Bool)arg3;
- (void)setInControlPoint:(struct CGPoint)arg1 reflect:(int)arg2 constrain:(_Bool)arg3;
- (void)moveToPoint:(struct CGPoint)arg1;
- (void)setNode:(struct CGPoint)arg1;
- (void)balanceControlPoints;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface TSDBezierPath : NSObject <NSCopying, NSCoding>
{
    long long sfr_elementCount;
    long long sfr_elementMax;
    struct PATHSEGMENT *sfr_head;
    double *sfr_elementLength;
    double sfr_totalLength;
    long long sfr_lastSubpathIndex;
    void *sfr_extraSegments;
    double sfr_lineWidth;
    struct CGRect sfr_controlPointBounds;
    double sfr_miterLimit;
    double sfr_flatness;
    double *sfr_dashedLinePattern;
    unsigned long long sfr_dashedLineCount;
    double sfr_dashedLinePhase;
    void *sfr_path;
    long long sfr_extraSegmentCount;
    long long sfr_extraSegmentMax;
    struct {
        unsigned int sfr_flags:8;
        unsigned int sfr_pathState:2;
        unsigned int sfr_calculatedLengths:1;
        unsigned int sfr_unused:21;
    } sfr_bpFlags;
}

+ (double)defaultLineWidth;
+ (void)setDefaultLineWidth:(double)arg1;
+ (unsigned long long)defaultLineJoinStyle;
+ (void)setDefaultLineJoinStyle:(unsigned long long)arg1;
+ (unsigned long long)defaultLineCapStyle;
+ (void)setDefaultLineCapStyle:(unsigned long long)arg1;
+ (unsigned long long)defaultWindingRule;
+ (void)setDefaultWindingRule:(unsigned long long)arg1;
+ (double)defaultFlatness;
+ (void)setDefaultFlatness:(double)arg1;
+ (double)defaultMiterLimit;
+ (void)setDefaultMiterLimit:(double)arg1;
+ (void)strokeLineFromPoint:(struct CGPoint)arg1 toPoint:(struct CGPoint)arg2;
+ (void)clipRect:(struct CGRect)arg1;
+ (void)strokeRect:(struct CGRect)arg1;
+ (void)fillRect:(struct CGRect)arg1;
+ (id)bezierPathWithCGPath:(struct CGPath *)arg1;
+ (id)bezierPathWithRoundedRect:(struct CGRect)arg1 cornerRadius:(double)arg2;
+ (id)bezierPathWithOvalInRect:(struct CGRect)arg1;
+ (id)bezierPathWithRect:(struct CGRect)arg1;
+ (id)bezierPathWithStart:(struct CGPoint)arg1 end:(struct CGPoint)arg2;
+ (id)bezierPath;
+ (void)initialize;
+ (double)lineWidth;
+ (void)setLineWidth:(double)arg1;
+ (unsigned long long)lineJoinStyle;
+ (void)setLineJoinStyle:(unsigned long long)arg1;
+ (unsigned long long)lineCapStyle;
+ (void)setLineCapStyle:(unsigned long long)arg1;
+ (unsigned long long)windingRule;
+ (void)setWindingRule:(unsigned long long)arg1;
+ (double)flatness;
+ (void)setFlatness:(double)arg1;
+ (double)miterLimit;
+ (void)setMiterLimit:(double)arg1;
+ (id)bezierPathWithConvexHullOfPoints:(struct CGPoint *)arg1 count:(unsigned long long)arg2;
+ (id)smoothBezierPath:(id)arg1 withThreshold:(double)arg2;
+ (id)exteriorOfBezierPath:(id)arg1;
+ (id)outsideEdgeOfBezierPath:(id)arg1;
+ (id)outlineBezierPath:(id)arg1 withThreshold:(double)arg2;
+ (id)outlineBezierPath:(id)arg1;
+ (id)appendBezierPaths:(id)arg1;
+ (id)excludeBezierPaths:(id)arg1;
+ (id)subtractBezierPaths:(id)arg1;
+ (id)intersectBezierPaths:(id)arg1;
+ (id)uniteBezierPaths:(id)arg1;
+ (id)p_booleanWithBezierPaths:(id)arg1 operation:(int)arg2;
+ (struct CGRect)p_pathToBounds:(struct Path *)arg1;
+ (id)p_pathToBezier:(struct Path *)arg1;
+ (struct Path *)p_bezierToPath:(id)arg1;
+ (id)tracedPathForInstantAlphaBinaryBitmap:(id)arg1 pointSpacing:(double)arg2;
+ (id)tracedPathForImage:(struct CGImage *)arg1 alphaThreshold:(double)arg2 pointSpacing:(double)arg3;
- (id)initWithCString:(const char *)arg1;
- (const char *)cString;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (_Bool)containsPoint:(struct CGPoint)arg1;
- (void)appendBezierPathWithArcFromPoint:(struct CGPoint)arg1 toPoint:(struct CGPoint)arg2 radius:(double)arg3;
- (void)appendBezierPathWithArcWithCenter:(struct CGPoint)arg1 radius:(double)arg2 startAngle:(double)arg3 endAngle:(double)arg4;
- (void)appendBezierPathWithArcWithCenter:(struct CGPoint)arg1 radius:(double)arg2 startAngle:(double)arg3 endAngle:(double)arg4 clockwise:(_Bool)arg5;
- (void)_appendArcSegmentWithCenter:(struct CGPoint)arg1 radius:(double)arg2 angle1:(double)arg3 angle2:(double)arg4;
- (void)appendBezierPathWithOvalInRect:(struct CGRect)arg1;
- (void)appendBezierPathWithPoints:(struct CGPoint *)arg1 count:(long long)arg2;
- (void)appendBezierPathWithRect:(struct CGRect)arg1;
- (void)appendBezierPath:(id)arg1;
- (void)_appendToPath:(id)arg1;
- (void)setAssociatedPoints:(struct CGPoint *)arg1 atIndex:(long long)arg2;
- (unsigned long long)elementAtIndex:(long long)arg1 allPoints:(struct CGPoint *)arg2;
- (unsigned long long)elementAtIndex:(long long)arg1 associatedPoints:(struct CGPoint *)arg2;
- (unsigned long long)elementAtIndex:(long long)arg1;
- (long long)elementCount;
- (double)lengthToElement:(long long)arg1;
- (double)lengthOfElement:(long long)arg1;
- (double)length;
- (void)calculateLengths;
- (double)calculateLengthOfElement:(long long)arg1;
- (_Bool)isClockwise;
- (_Bool)isFlat;
- (struct CGRect)bounds;
- (struct CGRect)controlPointBounds;
- (struct CGPoint)currentPoint;
- (_Bool)isEmpty;
- (_Bool)isCircular;
- (_Bool)isRectangular;
- (_Bool)isDiamond;
- (_Bool)isTriangular;
- (struct CGPath *)CGPath;
- (void)transformUsingAffineTransform:(struct CGAffineTransform)arg1;
- (id)bezierPathByReversingPath;
- (id)_copyFlattenedPath;
- (id)bezierPathByFlatteningPath;
- (void)flattenIntoPath:(id)arg1;
- (void)subdivideBezierWithFlatness:(double)arg1 startPoint:(struct CGPoint)arg2 controlPoint1:(struct CGPoint)arg3 controlPoint2:(struct CGPoint)arg4 endPoint:(struct CGPoint)arg5;
- (void)addClip;
- (void)fill;
- (void)stroke;
- (void)_doPath;
- (void)getLineDash:(double *)arg1 count:(long long *)arg2 phase:(double *)arg3;
- (void)setLineDash:(const double *)arg1 count:(long long)arg2 phase:(double)arg3;
- (void)setFlatness:(double)arg1;
- (double)flatness;
- (void)setMiterLimit:(double)arg1;
- (double)miterLimit;
- (void)setWindingRule:(unsigned long long)arg1;
- (unsigned long long)windingRule;
- (void)setLineJoinStyle:(unsigned long long)arg1;
- (unsigned long long)lineJoinStyle;
- (void)setLineCapStyle:(unsigned long long)arg1;
- (unsigned long long)lineCapStyle;
- (void)setLineWidth:(double)arg1;
- (double)lineWidth;
- (void)relativeCurveToPoint:(struct CGPoint)arg1 controlPoint1:(struct CGPoint)arg2 controlPoint2:(struct CGPoint)arg3;
- (void)relativeLineToPoint:(struct CGPoint)arg1;
- (void)relativeMoveToPoint:(struct CGPoint)arg1;
- (void)removeAllPoints;
- (void)closePath;
- (void)curveToPoint:(struct CGPoint)arg1 controlPoint1:(struct CGPoint)arg2 controlPoint2:(struct CGPoint)arg3;
- (void)lineToPoint:(struct CGPoint)arg1;
- (void)moveToPoint:(struct CGPoint)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)finalize;
- (void)dealloc;
- (id)init;
- (id)chisel;
- (void)recursiveSubdivideOntoPath:(id)arg1 withScaling:(CDStruct_c3b9c2ee)arg2 inElementRange:(struct _NSRange)arg3 into:(id)arg4;
- (void)recursiveSubdivideOntoPath:(id)arg1 withScaling:(CDStruct_c3b9c2ee)arg2 into:(id)arg3;
- (void)recursiveSubdivideOntoPath:(id)arg1 into:(id)arg2;
- (double)curvatureAt:(double)arg1 fromElement:(int)arg2;
- (float)curvatureAt:(float)arg1;
- (struct CGPoint)myGradientAt:(float)arg1 fromElement:(long long)arg2;
- (struct CGPoint)myGradientAt:(float)arg1;
- (struct CGPoint)rawGradientAt:(float)arg1 fromElement:(long long)arg2;
- (float)elementPercentageFromElement:(int)arg1 forOverallPercentage:(float)arg2;
- (struct CGPoint)transformedTotalCoordinate:(struct CGPoint)arg1 betweenElement:(long long)arg2 andElement:(long long)arg3 withPressure:(id)arg4 getElement:(long long *)arg5 getPercentage:(float *)arg6;
- (struct CGPoint)transformedTotalCoordinate:(struct CGPoint)arg1 inElement:(long long)arg2 withPressure:(id)arg3;
- (struct CGPoint)transformedCoordinate:(struct CGPoint)arg1 withPressure:(id)arg2;
- (struct CGPoint)gradientAt:(float)arg1;
- (struct CGPoint)gradientAt:(double)arg1 fromElement:(long long)arg2;
- (struct CGPoint)pointAt:(double)arg1 fromElement:(long long)arg2;
- (long long)elementPercentage:(float *)arg1 forOverallPercentage:(float)arg2;
- (id)pressure;
- (struct CGPoint)nearestAngleOnPathToLine:(struct CGPoint [2])arg1;
- (struct CGPoint)nearestPointOnPathToLine:(struct CGPoint [2])arg1;
- (id)copyFromSegment:(int)arg1 t:(float)arg2 toSegment:(int)arg3 t:(float)arg4;
- (void)appendBezierPath:(id)arg1 fromSegment:(long long)arg2 t:(double)arg3 toSegment:(long long)arg4 t:(double)arg5 withoutMove:(_Bool)arg6;
- (void)appendBezierPath:(id)arg1 fromSegment:(long long)arg2 toSegment:(long long)arg3;
- (void)addIntersectionsWithLine:(struct CGPoint [2])arg1 to:(id)arg2;
- (void)addIntersectionsWithPath:(id)arg1 to:(id)arg2;
- (void)addIntersectionsWithPath:(id)arg1 to:(id)arg2 allIntersections:(_Bool)arg3 reversed:(_Bool)arg4;
- (void)getStartPoint:(struct CGPoint *)arg1 andEndPoint:(struct CGPoint *)arg2;
- (void)_deviceClosePath;
- (void)_deviceCurveToPoint:(struct CGPoint)arg1 controlPoint1:(struct CGPoint)arg2 controlPoint2:(struct CGPoint)arg3;
- (void)_deviceLineToPoint:(struct CGPoint)arg1;
- (void)_deviceMoveToPoint:(struct CGPoint)arg1;
- (void)_addPathSegment:(long long)arg1 point:(struct CGPoint)arg2;
- (id)description;
- (id)aliasedPathWithViewScale:(float)arg1 effectiveStrokeWidth:(float)arg2;
- (id)aliasedPathInContext:(struct CGContext *)arg1 effectiveStrokeWidth:(float)arg2;
- (id)p_aliasedPathInContext:(struct CGContext *)arg1 viewScale:(float)arg2 effectiveStrokeWidth:(float)arg3;
- (struct CGPoint)roundPoint:(struct CGPoint)arg1 inContext:(struct CGContext *)arg2 strokeWidth:(int)arg3;
- (void)addPathToContext:(struct CGContext *)arg1;
- (_Bool)intersectsRect:(struct CGRect)arg1 hasFill:(_Bool)arg2;
@property(readonly, nonatomic) _Bool isLineSegment;
@property(readonly, nonatomic) _Bool isOpen;
- (id)pathByWobblingByUpTo:(double)arg1 subdivisions:(unsigned long long)arg2;
- (void)clearStroke:(struct CGContext *)arg1;
- (_Bool)isEqual:(id)arg1;
- (id)intersectBezierPath:(id)arg1;
- (id)subtractBezierPath:(id)arg1;
- (id)uniteWithBezierPath:(id)arg1;
- (id)outlineStroke;
- (id)bezierPathByOffsettingPath:(double)arg1 joinStyle:(unsigned long long)arg2 withThreshold:(double)arg3;
- (id)p_beziersFromSegmentIntersections:(id)arg1;
- (id)p_pathAsSegments;
- (id)bezierPathByRemovingRedundantElements;
- (void)appendBezierPathWithArcWithEllipseBounds:(struct CGRect)arg1 startRadialVector:(struct CGPoint)arg2 endRadialVector:(struct CGPoint)arg3 angleSign:(int)arg4 startNewPath:(_Bool)arg5;
- (void)appendBezierPathWithArcWithEllipseBounds:(struct CGRect)arg1 startAngle:(double)arg2 swingAngle:(double)arg3 angleType:(int)arg4 startNewPath:(_Bool)arg5;
@property(readonly, nonatomic) _Bool containsClosePathElement;
@property(readonly, nonatomic) _Bool isEffectivelyClosed;
- (struct CGPoint)pointAlongPathAtPercentage:(double)arg1;
- (double)distanceToPoint:(struct CGPoint)arg1 elementIndex:(unsigned long long *)arg2 tValue:(double *)arg3 threshold:(double)arg4;
- (_Bool)pointOnPath:(struct CGPoint)arg1 tolerance:(double)arg2;
- (struct CGRect)boundsIncludingTSDStroke:(id)arg1;
- (struct CGRect)boundsIncludingStroke;
- (struct CGRect)boundsIncludingStrokeWidth:(double)arg1 joinStyle:(unsigned long long)arg2 capStyle:(unsigned long long)arg3 miterLimit:(double)arg4 needsToExtendJoins:(_Bool)arg5;
- (struct CGRect)_addMitersFromSegments:(id)arg1 toRect:(struct CGRect)arg2;
- (void)takeAttributesFromStroke:(id)arg1;
@property(readonly, nonatomic) _Bool isSelfIntersecting;
@property(readonly, nonatomic) _Bool isCompound;
- (void)alignBoundsToOrigin;
- (double)yValueFromXValue:(double)arg1;
- (id)pathBySplittingAtPointOnPath:(struct CGPoint)arg1;
- (double)yValueFromXValue:(double)arg1 elementIndex:(long long *)arg2 parametricValue:(double *)arg3;
- (id)bezierPathByFittingCurve:(id)arg1;
- (id)bezierPathByFittingCurve;

@end

@interface TSDPathSource : NSObject <TSDMixing, NSCopying>
{
    _Bool mHorizontalFlip;
    _Bool mVerticalFlip;
}

+ (id)pathSourceForShapeType:(int)arg1 naturalSize:(struct CGSize)arg2;
@property _Bool hasVerticalFlip; // @synthesize hasVerticalFlip=mVerticalFlip;
@property _Bool hasHorizontalFlip; // @synthesize hasHorizontalFlip=mHorizontalFlip;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (id)valueForSetSelector:(SEL)arg1;
- (struct CGAffineTransform)pathFlipTransform;
- (void)scaleToNaturalSize:(struct CGSize)arg1;
- (double)uniformScaleForScalingToNaturalSize:(struct CGSize)arg1;
- (void)setNaturalSize:(struct CGSize)arg1;
- (struct CGSize)naturalSize;
- (Class)preferredControllerClass;
- (id)interiorWrapPath;
- (id)bezierPathWithoutFlips;
- (id)bezierPath;
- (_Bool)isCircular;
- (_Bool)isRectangularForever;
- (_Bool)isRectangular;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface TSDBezierPathSource : TSDPathSource <TSDMixing>
{
    TSDBezierPath *mPath;
    _Bool mIsRectangular;
    struct CGSize mNaturalSize;
}

+ (id)pathSourceWithBezierPath:(id)arg1;
@property(nonatomic) struct CGSize naturalSize; // @synthesize naturalSize=mNaturalSize;
- (void)p_setBezierPath:(id)arg1;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (_Bool)isCircular;
- (_Bool)isRectangularForever;
- (_Bool)isRectangular;
- (id)bezierPathWithoutFlips;
- (struct CGAffineTransform)transformToNaturalSize;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)init;
- (id)initWithNaturalSize:(struct CGSize)arg1;
- (id)initWithBezierPath:(id)arg1;

@end

@interface TSDBezierSegment : NSObject
{
    struct CGPoint mA;
    struct CGPoint mOut;
    struct CGPoint mIn;
    struct CGPoint mB;
}

+ (id)segmentFromPoint:(struct CGPoint)arg1 outPoint:(struct CGPoint)arg2 inPoint:(struct CGPoint)arg3 toPoint:(struct CGPoint)arg4;
- (struct CGPoint)closestPointToPoint:(struct CGPoint)arg1;
- (struct CGPoint)pointAtParametricValue:(double)arg1;
- (void)splitAtParametricValue:(double)arg1 left:(id *)arg2 right:(id *)arg3;
- (double)parametricValueForPoint:(struct CGPoint)arg1;
@property(readonly, nonatomic) struct CGPoint outPoint;
@property(readonly, nonatomic) struct CGPoint inPoint;
@property(readonly, nonatomic) struct CGPoint toPoint;
@property(readonly, nonatomic) struct CGPoint fromPoint;
- (id)initFromPoint:(struct CGPoint)arg1 outPoint:(struct CGPoint)arg2 inPoint:(struct CGPoint)arg3 toPoint:(struct CGPoint)arg4;
@property(readonly, nonatomic) _Bool bogusSegment;
- (id)description;

@end

@interface TSDBezierSubpath : NSObject
{
    NSMutableArray *mNodes;
    _Bool mClosed;
}

@property(nonatomic, getter=isClosed) _Bool closed; // @synthesize closed=mClosed;
@property(retain, nonatomic) NSMutableArray *nodes; // @synthesize nodes=mNodes;
- (void)convertToHobby;
- (id)splitEdgeAtIndex:(unsigned long long)arg1;
- (void)addNodesToArray:(id)arg1;
@property(readonly, nonatomic) _Bool closeIfEndpointsAreEqual;
- (void)smoothNode:(id)arg1;
- (void)sharpenAllNodes;
@property(readonly, nonatomic) struct CGRect nodeBounds;
- (id)insertNodeAtPoint:(struct CGPoint)arg1 tolerance:(double)arg2;
- (id)bezierNodeUnderPoint:(struct CGPoint)arg1 withTransform:(struct CGAffineTransform)arg2 andTolerance:(double)arg3 returningType:(long long *)arg4;
- (double)distanceToPoint:(struct CGPoint)arg1 elementIndex:(unsigned long long *)arg2 tValue:(double *)arg3 threshold:(double)arg4;
- (void)deselectAllNodes;
- (void)selectAllNodes;
- (void)deleteSelectedNodes;
@property(readonly, nonatomic) _Bool canDeleteSelectedNodes;
- (void)removeNode:(id)arg1;
@property(readonly, nonatomic) _Bool hasSelectedNode;
@property(readonly, nonatomic) _Bool allNodesSelected;
- (void)offsetSelectedEdgesByDelta:(struct CGPoint)arg1;
- (void)offsetSelectedNodesByDelta:(struct CGPoint)arg1;
@property(readonly, nonatomic) TSDBezierNode *lastNode;
@property(readonly, nonatomic) TSDBezierNode *firstNode;
- (id)nodeAfterNode:(id)arg1;
- (id)nodePriorToNode:(id)arg1;
- (void)removeLastNode;
- (void)addNode:(id)arg1;
- (void)transformUsingAffineTransform:(struct CGAffineTransform)arg1;
- (void)reverseDirection;
- (void)updateReflectedState;
- (void)appendToBezierPath:(id)arg1;
- (void)appendToBezierPath:(id)arg1 selectedNodesOnly:(_Bool)arg2 fromIndex:(unsigned long long)arg3;
@property(readonly, nonatomic) TSDBezierPath *bezierPath;
- (_Bool)isCircular;
@property(readonly, nonatomic) _Bool isRectangular;
- (void)dealloc;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;

@end

@interface TSDImageProvider : NSObject
{
    int mLoadState;
    TSPData *mImageData;
    int mRetainCount;
    int mOwnerCount;
    TSUFlushingManager *mFlushingManager;
    int mInterest;
    int mInterestLock;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
- (unsigned long long)retainCount;
- (oneway void)release;
- (id)retain;
- (void)ownerAccess;
- (void)removeOwner;
- (void)addOwner;
- (_Bool)hasFlushableContent;
- (void)setFlushingManager:(id)arg1;
- (void)flush;
- (void)flushIfInterestLessThan:(int)arg1;
- (void)removeInterest;
- (void)addInterest;
- (int)interest;
- (void)drawImageInContext:(struct CGContext *)arg1 rect:(struct CGRect)arg2;
- (_Bool)isError;
- (_Bool)isValid;
- (struct CGSize)dpiAdjustedNaturalSize;
- (struct CGSize)naturalSize;
- (id)imageData;
- (void)dealloc;
- (void)i_commonInit;
- (id)initWithImageData:(id)arg1;

@end

@interface TSDBitmapImageProvider : TSDImageProvider
{
    struct CGImageSource *mImageSource;
    struct CGImage *mImage;
    struct CGSize mNaturalSize;
    long long mOrientation;
    _Bool mIsOpaque;
    _Bool mIsValid;
    unsigned long long mDPI;
    NSObject<OS_dispatch_semaphore> *mImageLock;
    long long mCheckIfValidToken;
    struct CGImage *mHalfSizeImage;
    struct CGImage *mQuarterSizeImage;
}

+ (struct CGImageSource *)p_newImageSourceFromFilePath:(id)arg1;
+ (struct CGImageSource *)p_newImageSourceFromCacheForData:(id)arg1 withFilenameSuffix:(id)arg2;
+ (void)clearCacheForData:(id)arg1;
+ (id)p_cacheStringForData:(id)arg1;
+ (void)initialize;
+ (struct CGSize)naturalSizeForImageData:(id)arg1;
+ (id)TSUImageForImageData:(id)arg1;
+ (struct CGImageSource *)temporaryCGImageSourceForImageData:(id)arg1;
+ (struct CGImage *)temporaryCGImageForImageData:(id)arg1;
+ (struct CGImage *)CGImageForImageData:(id)arg1;
- (struct CGImageSource *)CGImageSource;
- (struct CGImageSource *)p_newImageOfSize:(struct CGSize)arg1 andWriteToCacheWithSuffix:(id)arg2;
- (struct CGImageSource *)p_newCGImageSourceForTemporaryUse;
- (void)p_configureOrientationAndSizeFromImageSource:(struct CGImageSource *)arg1 andImage:(struct CGImage *)arg2;
- (struct CGImage *)p_newImageFromSource:(struct CGImageSource *)arg1;
- (struct CGImageSource *)p_newCGImageSource;
- (void)p_loadSourceRefIfNecessary;
- (void)p_loadFullSizedImageIfNecessary;
- (void)p_loadImageMetadata;
- (void)flush;
- (_Bool)hasFlushableContent;
- (struct CGSize)dpiAdjustedNaturalSize;
- (struct CGSize)dpiAdjustedFillSize;
- (unsigned long long)imageDPI;
- (_Bool)isOpaque;
- (long long)orientation;
- (struct CGImage *)p_resampledImageOfSizeType:(int)arg1;
- (struct CGImage *)p_loadOrCreateResampledImageWithScale:(unsigned long long)arg1 andCGImage:(struct CGImage **)arg2;
- (struct CGImage *)CGImageForSize:(struct CGSize)arg1 lowQuality:(_Bool)arg2;
- (struct CGImage *)CGImageForSize:(struct CGSize)arg1 inContext:(struct CGContext *)arg2 orLayer:(id)arg3;
- (struct CGImage *)CGImageForNaturalSize;
- (void)drawImageInContext:(struct CGContext *)arg1 rect:(struct CGRect)arg2;
- (_Bool)isValid;
- (struct CGSize)naturalSize;
- (void)dealloc;
- (void)i_commonInit;

@end

@interface TSDBitmapRenderingQualityImageMapValue : NSObject
{
    struct CGSize mMaxSize;
    struct CGImage *mDegradedImageRef;
}

- (struct CGImage *)degradedImageRefForForProvider:(id)arg1 quality:(int)arg2 canvasScale:(float)arg3;
- (void)addSize:(struct CGSize)arg1;
- (void)dealloc;

@end

@interface TSDBitmapRenderingQualityInfo : NSObject
{
    int mQuality;
    float mCanvasScale;
    NSMutableDictionary *mImageMap;
}

@property(readonly, nonatomic) int quality; // @synthesize quality=mQuality;
- (struct CGImage *)degradedImageRefForProvider:(id)arg1 ofSize:(struct CGSize)arg2;
- (void)cacheProvider:(id)arg1 ofSize:(struct CGSize)arg2;
- (void)dealloc;
- (id)initWithQuality:(int)arg1 canvasScale:(float)arg2;

@end

@interface TSDPathManipulation : NSObject
{
    TSDPathManipulation *mPrecedingManipulation;
}

- (_Bool)canDecomposeRectIntoParts;
- (struct CGPath *)manipulatePath:(struct CGPath *)arg1 withLineWidth:(double)arg2;
- (void)dealloc;
- (id)initWithProperties:(id)arg1 bundle:(id)arg2 dataManager:(void *)arg3 precedingManipulation:(id)arg4;

@end

@interface TSDBrushPathManipulation : TSDPathManipulation
{
    struct CGPath *mBrushStroke;
    double mRepeatLength;
    NSMutableDictionary *mSections;
    NSMutableArray *mMiddleSections;
    NSMutableArray *mSmallSections;
    double mSmallLimitWidth;
    _Bool mSplitAtSharpAngles;
}

@end

@interface TSDStroke : NSObject <TSSThemeAsset, TSDPathPainter, TSDMixing, NSCopying, NSMutableCopying>
{
    TSUColor *mColor;
    double mWidth;
    double mActualWidth;
    int mCap;
    int mJoin;
    TSDStrokePattern *mPattern;
    double mMiterLimit;
}

+ (_Bool)canMixWithNilObjects;
+ (id)strokeWithColor:(id)arg1 width:(double)arg2 cap:(int)arg3 join:(int)arg4 pattern:(id)arg5 miterLimit:(double)arg6;
+ (id)strokeWithColor:(id)arg1 width:(double)arg2 cap:(int)arg3 join:(int)arg4 pattern:(id)arg5;
+ (id)strokeWithColor:(id)arg1 width:(double)arg2 pattern:(id)arg3 miterLimit:(double)arg4;
+ (id)strokeWithColor:(id)arg1 width:(double)arg2 pattern:(id)arg3;
+ (id)strokeWithColor:(id)arg1 width:(double)arg2;
+ (id)emptyStroke;
+ (id)stroke;
+ (id)p_newEmptyStroke;
+ (id)p_newStroke;
+ (Class)mutableClass;
@property(nonatomic) double actualWidth; // @synthesize actualWidth=mActualWidth;
@property(retain, nonatomic) TSDStrokePattern *pattern; // @synthesize pattern=mPattern;
@property(nonatomic) double miterLimit; // @synthesize miterLimit=mMiterLimit;
@property(nonatomic) int join; // @synthesize join=mJoin;
@property(nonatomic) int cap; // @synthesize cap=mCap;
@property(nonatomic) double width; // @synthesize width=mWidth;
@property(retain, nonatomic) TSUColor *color; // @synthesize color=mColor;
- (id)strokeByTransformingByTransform:(struct CGAffineTransform)arg1;
- (SEL)mapThemeAssetSelector;
- (_Bool)isThemeEquivalent:(id)arg1;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (_Bool)shouldAntialiasDefeat;
- (_Bool)drawsInOneStep;
- (void)applyToCAShapeLayer:(id)arg1 insideStroke:(_Bool)arg2 withScale:(double)arg3;
- (void)applyToCAShapeLayer:(id)arg1 withScale:(double)arg2;
- (_Bool)prefersToApplyToCAShapeLayerDuringManipulation;
- (_Bool)canApplyToCAShapeLayer;
- (void)applyToRepCALayer:(id)arg1 withScale:(double)arg2;
- (_Bool)canApplyDirectlyToRepCALayer;
@property(readonly, nonatomic) _Bool isNearlyWhite;
@property(readonly, nonatomic) _Bool isFrame;
@property(readonly, nonatomic) double suggestedMinimumLineWidth;
@property(readonly, nonatomic) _Bool supportsLineOptions;
@property(readonly, nonatomic) _Bool supportsColor;
@property(readonly, nonatomic) _Bool supportsWidth;
@property(readonly, nonatomic) _Bool supportsPattern;
- (void)drawSwatchInRect:(struct CGRect)arg1 inContext:(struct CGContext *)arg2;
- (id)pathForLineEnd:(id)arg1 wrapPath:(_Bool)arg2 atPoint:(struct CGPoint)arg3 atAngle:(double)arg4 withScale:(double)arg5;
- (struct CGRect)boundsForLineEnd:(id)arg1 atPoint:(struct CGPoint)arg2 atAngle:(double)arg3 withScale:(double)arg4 transform:(struct CGAffineTransform)arg5;
- (void)paintLineEnd:(id)arg1 atPoint:(struct CGPoint)arg2 atAngle:(double)arg3 withScale:(double)arg4 inContext:(struct CGContext *)arg5 useFastDrawing:(_Bool)arg6;
- (void)paintLineEnd:(id)arg1 atPoint:(struct CGPoint)arg2 atAngle:(double)arg3 withScale:(double)arg4 inContext:(struct CGContext *)arg5;
- (void)paintPathWithNormalClip:(struct CGPath *)arg1 wantsInteriorStroke:(_Bool)arg2 inContext:(struct CGContext *)arg3;
- (void)paintPath:(struct CGPath *)arg1 wantsInteriorStroke:(_Bool)arg2 inContext:(struct CGContext *)arg3 useFastDrawing:(_Bool)arg4;
- (void)paintPath:(struct CGPath *)arg1 wantsInteriorStroke:(_Bool)arg2 inContext:(struct CGContext *)arg3;
- (void)paintPath:(struct CGPath *)arg1 inContext:(struct CGContext *)arg2;
- (void)paintRect:(struct CGRect)arg1 wantsInteriorStroke:(_Bool)arg2 inContext:(struct CGContext *)arg3;
- (void)paintRect:(struct CGRect)arg1 inContext:(struct CGContext *)arg2;
- (id)colorForCGContext:(struct CGContext *)arg1;
- (id)strokeLineEnd:(id)arg1;
- (double)lineEndInsetAdjustment;
@property(readonly, nonatomic) _Bool shouldRender;
@property(readonly, nonatomic) _Bool isNullStroke;
- (void)applyInteriorWrapPropertiesToContext:(struct CGContext *)arg1 insideStroke:(_Bool)arg2;
- (void)applyToContext:(struct CGContext *)arg1 insideStroke:(_Bool)arg2;
- (void)applyToContext:(struct CGContext *)arg1;
- (void)p_setPatternPropertiesFromStroke:(id)arg1;
- (void)p_setPropertiesFromStroke:(id)arg1;
@property(readonly, nonatomic) struct _TSDStrokeOutsets outsets;
- (struct CGRect)boundsForPath:(id)arg1;
- (_Bool)needsToExtendJoinsForBoundsCalculation;
@property(readonly, nonatomic) _Bool drawsOutsideStrokeBounds;
@property(readonly, nonatomic) _Bool isRoundDash;
@property(readonly, nonatomic) _Bool isDash;
@property(readonly, nonatomic) double dashSpacing;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
- (_Bool)isEqual:(id)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithColor:(id)arg1 width:(double)arg2 cap:(int)arg3 join:(int)arg4 pattern:(id)arg5;
- (id)init;
- (id)initWithColor:(id)arg1 width:(double)arg2 cap:(int)arg3 join:(int)arg4 pattern:(id)arg5 miterLimit:(double)arg6;
- (_Bool)isEqualToStroke:(id)arg1;
@property(readonly, nonatomic) _Bool solid;
@property(readonly, nonatomic) _Bool empty;
@property(readonly, nonatomic) _Bool dontClearBackground;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

@interface TSDSmartStroke : TSDStroke
{
    NSString *mStrokeName;
}

+ (id)strokeWithName:(id)arg1 color:(id)arg2 width:(double)arg3;
+ (Class)classForName:(id)arg1;
@property(copy, nonatomic) NSString *strokeName; // @synthesize strokeName=mStrokeName;
- (_Bool)shouldAntialiasDefeat;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (_Bool)canApplyDirectlyToRepCALayer;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithColor:(id)arg1 width:(double)arg2 cap:(int)arg3 join:(int)arg4 pattern:(id)arg5 miterLimit:(double)arg6;
- (id)initWithName:(id)arg1 color:(id)arg2 width:(double)arg3 cap:(int)arg4 join:(int)arg5 pattern:(id)arg6;
- (id)initWithName:(id)arg1 color:(id)arg2 width:(double)arg3 cap:(int)arg4 join:(int)arg5 pattern:(id)arg6 miterLimit:(double)arg7;

@end

@interface TSDBrushStroke : TSDSmartStroke
{
}

+ (struct CGImage *)newCGImageFromGL;
+ (void)applicationDidBecomeActive;
+ (void)applicationWillResignActive;
+ (id)renderQueue;
+ (id)brushProgram;
+ (id)sharedContext;
+ (void)loadSectionsForBrush:(id)arg1 inSVGDoc:(struct _xmlDoc *)arg2;
+ (id)loadImageForBrush:(id)arg1;
+ (void)loadLineEndsForBrush:(id)arg1 inSVGDoc:(struct _xmlDoc *)arg2;
+ (void)loadLineEndTextureForBrush:(id)arg1 lineEnd:(id)arg2 path:(struct CGPath *)arg3 andBounds:(struct CGRect)arg4;
+ (void)loadBrush:(id)arg1;
+ (id)cacheDirectory;
+ (Class)mutableClass;
- (void)brushPath:(struct CGPath *)arg1 inContext:(struct CGContext *)arg2;
- (void)brushPath:(id)arg1 withScaling:(CDStruct_c3b9c2ee)arg2 inElementRange:(struct _NSRange)arg3 into:(void *)arg4 sectionIndex:(unsigned long long *)arg5 viewScale:(double)arg6;
- (void)brushSection:(id)arg1 sectionIndex:(unsigned long long)arg2 ontoPath:(id)arg3 withScaling:(CDStruct_c3b9c2ee)arg4 inElementRange:(struct _NSRange)arg5 into:(void *)arg6 viewScale:(double)arg7;
- (void)paintPath:(struct CGPath *)arg1 wantsInteriorStroke:(_Bool)arg2 inContext:(struct CGContext *)arg3 useFastDrawing:(_Bool)arg4;
- (void)glBrushPath:(struct CGPath *)arg1 inContext:(struct CGContext *)arg2;
- (void)finishOpenGLRenderInContext:(struct CGContext *)arg1 pathVertexData:(vector_b5dead7b *)arg2;
- (void)renderOpenGLSection:(id)arg1 sectionIndex:(unsigned long long)arg2 ontoPath:(id)arg3 withScaling:(CDStruct_c3b9c2ee)arg4 inElementRange:(struct _NSRange)arg5 into:(vector_b5dead7b *)arg6 viewScale:(double)arg7;
- (id)brushTextureForId:(id)arg1;
- (_Bool)needsToExtendJoinsForBoundsCalculation;
- (int)cap;
- (id)description;
- (_Bool)supportsPattern;
- (_Bool)drawsInOneStep;
- (_Bool)prefersToApplyToCAShapeLayerDuringManipulation;
- (_Bool)canApplyToCAShapeLayer;
- (void)paintLineEnd:(id)arg1 atPoint:(struct CGPoint)arg2 atAngle:(double)arg3 withScale:(double)arg4 inContext:(struct CGContext *)arg5 useFastDrawing:(_Bool)arg6;
- (id)strokeLineEnd:(id)arg1;
- (double)suggestedMinimumLineWidth;
- (double)lineEndInsetAdjustment;
- (struct CGImage *)maskForId:(id)arg1;
- (id)brushBoundsForId:(id)arg1;
- (id)brushPathsForId:(id)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface TSDBundleLookupClass : NSObject
{
}

@end

@interface TSDKnob : NSObject
{
    int mType;
    struct CGPoint mPosition;
    _Bool mOffsetValid;
    struct CGPoint mOffset;
    double mRadius;
    unsigned long long mTag;
    TSDRep *mRep;
    _Bool mWorksWhenRepLocked;
    _Bool mWorksWhenInVersionBrowsingMode;
    _Bool mShouldDisplayDirectlyOverRep;
    CALayer *mLayer;
    TSDBezierPath *mHitRegionPath;
    CAShapeLayer *mHitRegionLayer;
}

@property(readonly, nonatomic) TSDRep *rep; // @synthesize rep=mRep;
@property(copy, nonatomic) TSDBezierPath *hitRegionPath; // @synthesize hitRegionPath=mHitRegionPath;
@property(nonatomic) _Bool shouldDisplayDirectlyOverRep; // @synthesize shouldDisplayDirectlyOverRep=mShouldDisplayDirectlyOverRep;
@property(nonatomic) _Bool worksWhenInVersionBrowsingMode; // @synthesize worksWhenInVersionBrowsingMode=mWorksWhenInVersionBrowsingMode;
@property(nonatomic) _Bool worksWhenRepLocked; // @synthesize worksWhenRepLocked=mWorksWhenRepLocked;
@property(nonatomic) unsigned long long tag; // @synthesize tag=mTag;
@property(nonatomic) double radius; // @synthesize radius=mRadius;
@property(nonatomic) struct CGPoint offset; // @synthesize offset=mOffset;
@property(nonatomic) _Bool offsetValid; // @synthesize offsetValid=mOffsetValid;
@property(nonatomic) struct CGPoint position; // @synthesize position=mPosition;
@property(nonatomic) int type; // @synthesize type=mType;
- (id)description;
- (_Bool)obscuresKnob:(id)arg1;
- (_Bool)overlapsWithKnob:(id)arg1;
- (void)updateHitRegionPathForRep:(id)arg1;
- (double)i_rotationInDegreesForKnobOnRep:(id)arg1;
- (struct CGRect)boundingBoxOfHitRegionForRep:(id)arg1 scale:(double)arg2;
- (id)hitRegionLayerForRep:(id)arg1;
@property(readonly, nonatomic) CALayer *layer;
- (id)knobImage;
- (int)dragType;
- (_Bool)isHitByUnscaledPoint:(struct CGPoint)arg1 andRep:(id)arg2 returningDistance:(double *)arg3;
- (_Bool)isHitByUnscaledPoint:(struct CGPoint)arg1 andRep:(id)arg2;
- (id)init;
- (void)dealloc;
- (id)initWithType:(int)arg1 position:(struct CGPoint)arg2 radius:(double)arg3 tag:(unsigned long long)arg4 onRep:(id)arg5;

@end

@interface TSDButtonKnob : TSDKnob
{
    TSUImage *mImage;
    _Bool mEnabled;
    _Bool mHighlighted;
}

@property(nonatomic, getter=isHighlighted) _Bool highlighted; // @synthesize highlighted=mHighlighted;
@property(nonatomic, getter=isEnabled) _Bool enabled; // @synthesize enabled=mEnabled;
@property(retain, nonatomic) TSUImage *image; // @synthesize image=mImage;
- (void)p_updateLayerImage;
- (id)knobImage;
- (_Bool)isHitByUnscaledPoint:(struct CGPoint)arg1 andRep:(id)arg2 returningDistance:(double *)arg3;
- (void)dealloc;
- (id)initWithType:(int)arg1 position:(struct CGPoint)arg2 radius:(double)arg3 tag:(unsigned long long)arg4 onRep:(id)arg5;
- (id)initWithImage:(id)arg1 tag:(unsigned long long)arg2 onRep:(id)arg3;

@end

@interface TSDCAAnimationCache : NSObject
{
    NSDictionary *_overrideInitialValuesDict;
    double _animationDuration;
    long long _cacheValuesCount;
    struct CGPoint *_anchorPointCache;
    double *_anchorPointZCache;
    double *_borderWidthCache;
    struct CGRect *_boundsCache;
    _Bool *_doubleSidedCache;
    _Bool *_hiddenCache;
    double *_opacityCache;
    struct CGPoint *_positionCache;
    struct CATransform3D *_transformCache;
    double *_transformRotationCache;
    double *_transformRotationXCache;
    double *_transformRotationYCache;
    double *_transformRotationZCache;
    double *_transformScaleXCache;
    double *_transformScaleYCache;
    double *_transformScaleXYCache;
    struct CGPoint *_transformTranslationCache;
    double *_transformTranslationXCache;
    double *_transformTranslationYCache;
    double *_transformTranslationZCache;
    double *_zPositionCache;
    _Bool _anchorPointAnimationExists;
    _Bool _anchorPointZAnimationExists;
    _Bool _borderColorAnimationExists;
    _Bool _borderWidthAnimationExists;
    _Bool _boundsAnimationExists;
    _Bool _contentsAnimationExists;
    _Bool _doubleSidedAnimationExists;
    _Bool _doubleSidedInitialValue;
    _Bool _hiddenAnimationExists;
    _Bool _hiddenInitialValue;
    _Bool _opacityAnimationExists;
    _Bool _positionAnimationExists;
    _Bool _transformAnimationExists;
    _Bool _transformRotationAnimationExists;
    _Bool _transformRotationXAnimationExists;
    _Bool _transformRotationYAnimationExists;
    _Bool _transformRotationZAnimationExists;
    _Bool _transformScaleXAnimationExists;
    _Bool _transformScaleYAnimationExists;
    _Bool _transformScaleXYAnimationExists;
    _Bool _transformTranslationAnimationExists;
    _Bool _transformTranslationXAnimationExists;
    _Bool _transformTranslationYAnimationExists;
    _Bool _transformTranslationZAnimationExists;
    _Bool _zPositionAnimationExists;
    CALayer *_layer;
    CAAnimation *_animation;
    double _anchorPointZInitialValue;
    struct CGColor *_borderColorInitialValue;
    double _borderWidthInitialValue;
    struct CGImage *_contentsInitialValue;
    double _opacityInitialValue;
    double _transformRotationInitialValue;
    double _transformRotationXInitialValue;
    double _transformRotationYInitialValue;
    double _transformRotationZInitialValue;
    double _transformScaleXInitialValue;
    double _transformScaleYInitialValue;
    double _transformScaleXYInitialValue;
    double _transformTranslationXInitialValue;
    double _transformTranslationYInitialValue;
    double _transformTranslationZInitialValue;
    double _zPositionInitialValue;
    NSDictionary *_initialValues;
    struct CGPoint _anchorPointInitialValue;
    struct CGPoint _positionInitialValue;
    struct CGPoint _transformTranslationInitialValue;
    struct CGRect _boundsInitialValue;
    struct CATransform3D _transformInitialValue;
}

@property(readonly, nonatomic) NSDictionary *initialValues; // @synthesize initialValues=_initialValues;
@property(readonly, nonatomic) double zPositionInitialValue; // @synthesize zPositionInitialValue=_zPositionInitialValue;
@property(readonly, nonatomic) _Bool zPositionAnimationExists; // @synthesize zPositionAnimationExists=_zPositionAnimationExists;
@property(readonly, nonatomic) double transformTranslationZInitialValue; // @synthesize transformTranslationZInitialValue=_transformTranslationZInitialValue;
@property(readonly, nonatomic) _Bool transformTranslationZAnimationExists; // @synthesize transformTranslationZAnimationExists=_transformTranslationZAnimationExists;
@property(readonly, nonatomic) double transformTranslationYInitialValue; // @synthesize transformTranslationYInitialValue=_transformTranslationYInitialValue;
@property(readonly, nonatomic) _Bool transformTranslationYAnimationExists; // @synthesize transformTranslationYAnimationExists=_transformTranslationYAnimationExists;
@property(readonly, nonatomic) double transformTranslationXInitialValue; // @synthesize transformTranslationXInitialValue=_transformTranslationXInitialValue;
@property(readonly, nonatomic) _Bool transformTranslationXAnimationExists; // @synthesize transformTranslationXAnimationExists=_transformTranslationXAnimationExists;
@property(readonly, nonatomic) struct CGPoint transformTranslationInitialValue; // @synthesize transformTranslationInitialValue=_transformTranslationInitialValue;
@property(readonly, nonatomic) _Bool transformTranslationAnimationExists; // @synthesize transformTranslationAnimationExists=_transformTranslationAnimationExists;
@property(readonly, nonatomic) double transformScaleXYInitialValue; // @synthesize transformScaleXYInitialValue=_transformScaleXYInitialValue;
@property(readonly, nonatomic) _Bool transformScaleXYAnimationExists; // @synthesize transformScaleXYAnimationExists=_transformScaleXYAnimationExists;
@property(readonly, nonatomic) double transformScaleYInitialValue; // @synthesize transformScaleYInitialValue=_transformScaleYInitialValue;
@property(readonly, nonatomic) _Bool transformScaleYAnimationExists; // @synthesize transformScaleYAnimationExists=_transformScaleYAnimationExists;
@property(readonly, nonatomic) double transformScaleXInitialValue; // @synthesize transformScaleXInitialValue=_transformScaleXInitialValue;
@property(readonly, nonatomic) _Bool transformScaleXAnimationExists; // @synthesize transformScaleXAnimationExists=_transformScaleXAnimationExists;
@property(readonly, nonatomic) double transformRotationZInitialValue; // @synthesize transformRotationZInitialValue=_transformRotationZInitialValue;
@property(readonly, nonatomic) _Bool transformRotationZAnimationExists; // @synthesize transformRotationZAnimationExists=_transformRotationZAnimationExists;
@property(readonly, nonatomic) double transformRotationYInitialValue; // @synthesize transformRotationYInitialValue=_transformRotationYInitialValue;
@property(readonly, nonatomic) _Bool transformRotationYAnimationExists; // @synthesize transformRotationYAnimationExists=_transformRotationYAnimationExists;
@property(readonly, nonatomic) double transformRotationXInitialValue; // @synthesize transformRotationXInitialValue=_transformRotationXInitialValue;
@property(readonly, nonatomic) _Bool transformRotationXAnimationExists; // @synthesize transformRotationXAnimationExists=_transformRotationXAnimationExists;
@property(readonly, nonatomic) double transformRotationInitialValue; // @synthesize transformRotationInitialValue=_transformRotationInitialValue;
@property(readonly, nonatomic) _Bool transformRotationAnimationExists; // @synthesize transformRotationAnimationExists=_transformRotationAnimationExists;
@property(readonly, nonatomic) struct CATransform3D transformInitialValue; // @synthesize transformInitialValue=_transformInitialValue;
@property(readonly, nonatomic) _Bool transformAnimationExists; // @synthesize transformAnimationExists=_transformAnimationExists;
@property(readonly, nonatomic) struct CGPoint positionInitialValue; // @synthesize positionInitialValue=_positionInitialValue;
@property(readonly, nonatomic) _Bool positionAnimationExists; // @synthesize positionAnimationExists=_positionAnimationExists;
@property(readonly, nonatomic) double opacityInitialValue; // @synthesize opacityInitialValue=_opacityInitialValue;
@property(readonly, nonatomic) _Bool opacityAnimationExists; // @synthesize opacityAnimationExists=_opacityAnimationExists;
@property(readonly, nonatomic) _Bool hiddenInitialValue; // @synthesize hiddenInitialValue=_hiddenInitialValue;
@property(readonly, nonatomic) _Bool hiddenAnimationExists; // @synthesize hiddenAnimationExists=_hiddenAnimationExists;
@property(readonly, nonatomic) _Bool doubleSidedInitialValue; // @synthesize doubleSidedInitialValue=_doubleSidedInitialValue;
@property(readonly, nonatomic) _Bool doubleSidedAnimationExists; // @synthesize doubleSidedAnimationExists=_doubleSidedAnimationExists;
@property(readonly, nonatomic) struct CGImage *contentsInitialValue; // @synthesize contentsInitialValue=_contentsInitialValue;
@property(readonly, nonatomic) _Bool contentsAnimationExists; // @synthesize contentsAnimationExists=_contentsAnimationExists;
@property(readonly, nonatomic) struct CGRect boundsInitialValue; // @synthesize boundsInitialValue=_boundsInitialValue;
@property(readonly, nonatomic) _Bool boundsAnimationExists; // @synthesize boundsAnimationExists=_boundsAnimationExists;
@property(readonly, nonatomic) double borderWidthInitialValue; // @synthesize borderWidthInitialValue=_borderWidthInitialValue;
@property(readonly, nonatomic) _Bool borderWidthAnimationExists; // @synthesize borderWidthAnimationExists=_borderWidthAnimationExists;
@property(readonly, nonatomic) struct CGColor *borderColorInitialValue; // @synthesize borderColorInitialValue=_borderColorInitialValue;
@property(readonly, nonatomic) _Bool borderColorAnimationExists; // @synthesize borderColorAnimationExists=_borderColorAnimationExists;
@property(readonly, nonatomic) double anchorPointZInitialValue; // @synthesize anchorPointZInitialValue=_anchorPointZInitialValue;
@property(readonly, nonatomic) _Bool anchorPointZAnimationExists; // @synthesize anchorPointZAnimationExists=_anchorPointZAnimationExists;
@property(readonly, nonatomic) struct CGPoint anchorPointInitialValue; // @synthesize anchorPointInitialValue=_anchorPointInitialValue;
@property(readonly, nonatomic) _Bool anchorPointAnimationExists; // @synthesize anchorPointAnimationExists=_anchorPointAnimationExists;
@property(readonly, nonatomic) CAAnimation *animation; // @synthesize animation=_animation;
@property(readonly, nonatomic) CALayer *layer; // @synthesize layer=_layer;
- (double)zPositionCachedValueAtTime:(double)arg1 layer:(id)arg2 animation:(id)arg3;
- (double)transformTranslationZCachedValueAtTime:(double)arg1 layer:(id)arg2 animation:(id)arg3;
- (double)transformTranslationYCachedValueAtTime:(double)arg1 layer:(id)arg2 animation:(id)arg3;
- (double)transformTranslationXCachedValueAtTime:(double)arg1 layer:(id)arg2 animation:(id)arg3;
- (struct CGPoint)transformTranslationCachedValueAtTime:(double)arg1 layer:(id)arg2 animation:(id)arg3;
- (double)transformScaleXYCachedValueAtTime:(double)arg1 layer:(id)arg2 animation:(id)arg3;
- (double)transformScaleYCachedValueAtTime:(double)arg1 layer:(id)arg2 animation:(id)arg3;
- (double)transformScaleXCachedValueAtTime:(double)arg1 layer:(id)arg2 animation:(id)arg3;
- (double)transformRotationZCachedValueAtTime:(double)arg1 layer:(id)arg2 animation:(id)arg3;
- (double)transformRotationYCachedValueAtTime:(double)arg1 layer:(id)arg2 animation:(id)arg3;
- (double)transformRotationXCachedValueAtTime:(double)arg1 layer:(id)arg2 animation:(id)arg3;
- (double)transformRotationCachedValueAtTime:(double)arg1 layer:(id)arg2 animation:(id)arg3;
- (struct CATransform3D)transformCachedValueAtTime:(double)arg1 layer:(id)arg2 animation:(id)arg3;
- (struct CGPoint)positionCachedValueAtTime:(double)arg1 layer:(id)arg2 animation:(id)arg3;
- (double)opacityCachedValueAtTime:(double)arg1 layer:(id)arg2 animation:(id)arg3;
- (_Bool)hiddenCachedValueAtTime:(double)arg1 layer:(id)arg2 animation:(id)arg3;
- (_Bool)doubleSidedCachedValueAtTime:(double)arg1 layer:(id)arg2 animation:(id)arg3;
- (struct CGRect)boundsCachedValueAtTime:(double)arg1 layer:(id)arg2 animation:(id)arg3;
- (double)borderWidthCachedValueAtTime:(double)arg1 layer:(id)arg2 animation:(id)arg3;
- (double)anchorPointZCachedValueAtTime:(double)arg1 layer:(id)arg2 animation:(id)arg3;
- (struct CGPoint)anchorPointCachedValueAtTime:(double)arg1 layer:(id)arg2 animation:(id)arg3;
- (void)dealloc;
- (id)initWithLayer:(id)arg1 animation:(id)arg2 overrideInitialValues:(id)arg3 cacheAnimationValues:(_Bool)arg4;
- (_Bool)verifyCache;
- (_Bool)p_setupAndCacheAnimationValues:(_Bool)arg1 verifyOnly:(_Bool)arg2;

@end

@interface TSDCalligraphyStroke : TSDSmartStroke
{
}

+ (Class)mutableClass;
+ (id)strokeWithName:(id)arg1 color:(id)arg2 width:(double)arg3;
- (struct CGRect)boundsForLineEnd:(id)arg1 atPoint:(struct CGPoint)arg2 atAngle:(double)arg3 withScale:(double)arg4 transform:(struct CGAffineTransform)arg5;
- (void)paintLineEnd:(id)arg1 atPoint:(struct CGPoint)arg2 atAngle:(double)arg3 withScale:(double)arg4 inContext:(struct CGContext *)arg5 useFastDrawing:(_Bool)arg6;
- (void)paintPath:(struct CGPath *)arg1 wantsInteriorStroke:(_Bool)arg2 inContext:(struct CGContext *)arg3 useFastDrawing:(_Bool)arg4;
- (void)applyToContext:(struct CGContext *)arg1 insideStroke:(_Bool)arg2;
- (struct CGAffineTransform)transformInContext:(struct CGContext *)arg1;
- (struct CGRect)boundsForPath:(id)arg1;
- (_Bool)drawsOutsideStrokeBounds;
- (_Bool)drawsInOneStep;
- (_Bool)prefersToApplyToCAShapeLayerDuringManipulation;
- (_Bool)canApplyToCAShapeLayer;
- (_Bool)chisel;
- (double)scale;
- (double)angle;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithName:(id)arg1 color:(id)arg2 width:(double)arg3 cap:(int)arg4 join:(int)arg5 pattern:(id)arg6 miterLimit:(double)arg7;
- (id)initWithColor:(id)arg1 width:(double)arg2 cap:(int)arg3 join:(int)arg4 pattern:(id)arg5 miterLimit:(double)arg6;

@end

@interface TSDCalloutPathSource : TSDPathSource <TSDSmartPathSource, TSDMixing>
{
    double mCornerRadius;
    double mTailSize;
    struct CGPoint mTailPosition;
    struct CGSize mNaturalSize;
    _Bool mIsTailAtCenter;
}

+ (id)quoteBubbleWithTailPosition:(struct CGPoint)arg1 tailSize:(double)arg2 naturalSize:(struct CGSize)arg3;
+ (id)calloutWithCornerRadius:(double)arg1 tailPosition:(struct CGPoint)arg2 tailSize:(double)arg3 naturalSize:(struct CGSize)arg4;
- (struct CGPoint)p_getControlKnobPointForRoundedRect;
- (void)p_setControlKnobPointForRoundedRect:(struct CGPoint)arg1;
- (id)p_buildPath;
- (id)p_basePath;
- (void)p_getTailPath:(id)arg1 center:(struct CGPoint *)arg2 tailSize:(double *)arg3 intersections:(struct CGPoint [2])arg4;
- (struct CGPoint)p_adjustedCenterForPath:(id)arg1;
- (void)p_setTailAtCenter:(_Bool)arg1;
- (void)p_setNaturalSize:(struct CGSize)arg1;
- (void)p_setTailSize:(double)arg1;
- (struct CGPoint)p_tailPosition;
- (void)p_setTailPosition:(struct CGPoint)arg1;
- (void)p_setCornerRadius:(double)arg1;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (_Bool)isCircular;
- (_Bool)isRectangular;
- (id)interiorWrapPath;
- (id)bezierPathWithoutFlips;
@property(readonly, nonatomic) _Bool isTailAtCenter;
@property(readonly, nonatomic) struct CGPoint tailCenter;
- (struct CGSize)naturalSize;
- (void)scaleToNaturalSize:(struct CGSize)arg1;
- (void)setNaturalSize:(struct CGSize)arg1;
- (id)valueForSetSelector:(SEL)arg1;
@property(nonatomic) struct CGPoint tailKnobPosition;
@property(nonatomic) struct CGPoint tailSizeKnobPosition;
@property(readonly, nonatomic) double maxTailSize;
@property(nonatomic) double tailSize;
@property(readonly, nonatomic) double maxCornerRadius;
@property(nonatomic) double cornerRadius;
- (_Bool)isOval;
- (struct CGPath *)newFeedbackPathForKnob:(unsigned long long)arg1;
- (id)getFeedbackStringForKnob:(unsigned long long)arg1;
- (void)setControlKnobPosition:(unsigned long long)arg1 toPoint:(struct CGPoint)arg2;
- (struct CGPoint)getControlKnobPosition:(unsigned long long)arg1;
@property(readonly) unsigned long long numberOfControlKnobs;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;
- (id)initWithCornerRadius:(double)arg1 tailPosition:(struct CGPoint)arg2 tailSize:(double)arg3 naturalSize:(struct CGSize)arg4 tailAtCenter:(_Bool)arg5;

@end

@interface TSDCanvas : NSObject
{
    id <TSDCanvasDelegate> mDelegate;
    TSDInteractiveCanvasController *mCanvasController;
    NSArray *mInfos;
    NSArray *mTopLevelReps;
    NSSet *mAllReps;
    struct __CFDictionary *mRepsByLayout;
    TSDLayoutController *mLayoutController;
    _Bool mIsTemporaryForLayout;
    struct CGSize mUnscaledSize;
    double mViewScale;
    double mContentsScale;
    struct {
        unsigned int layout:1;
        unsigned int reps:1;
        unsigned int visibleBounds:1;
        unsigned int layers:1;
    } mInvalidFlags;
    _Bool mInLayout;
    NSArray *mPreviouslyVisibleLayouts;
    struct CGColor *mBackgroundColor;
    struct UIEdgeInsets mContentInset;
    _Bool mClipToCanvas;
    _Bool mAllowsFontSubpixelQuantization;
    _Bool pInTearDown;
}

@property(readonly, nonatomic) _Bool isTemporaryForLayout; // @synthesize isTemporaryForLayout=mIsTemporaryForLayout;
@property(nonatomic) double viewScale; // @synthesize viewScale=mViewScale;
@property(nonatomic) struct CGSize unscaledSize; // @synthesize unscaledSize=mUnscaledSize;
@property(nonatomic) _Bool allowsFontSubpixelQuantization; // @synthesize allowsFontSubpixelQuantization=mAllowsFontSubpixelQuantization;
@property(nonatomic) struct UIEdgeInsets contentInset; // @synthesize contentInset=mContentInset;
@property(nonatomic) struct CGColor *backgroundColor; // @synthesize backgroundColor=mBackgroundColor;
@property(readonly, nonatomic) TSDLayoutController *layoutController; // @synthesize layoutController=mLayoutController;
@property(copy, nonatomic) NSArray *infosToDisplay; // @synthesize infosToDisplay=mInfos;
@property(nonatomic) id <TSDCanvasDelegate> delegate; // @synthesize delegate=mDelegate;
@property(nonatomic) _Bool pInTearDown; // @synthesize pInTearDown;
- (void)p_removeAllReps;
- (_Bool)p_updateRepsFromLayouts;
- (void)p_layoutWithReadLock;
- (struct CGRect)p_bounds;
- (struct CGImage *)i_newImageInContext:(struct CGContext *)arg1 bounds:(struct CGRect)arg2 integralBounds:(struct CGRect)arg3 distortedToMatch:(_Bool)arg4;
- (struct CGContext *)i_createContextToDrawImageInScaledRect:(struct CGRect)arg1 withTargetIntegralSize:(struct CGSize)arg2 returningBounds:(struct CGRect *)arg3 integralBounds:(struct CGRect *)arg4 forceSRGB:(_Bool)arg5;
- (struct CGImage *)i_imageInScaledRect:(struct CGRect)arg1 withTargetIntegralSize:(struct CGSize)arg2 distortedToMatch:(_Bool)arg3 forceSRGB:(_Bool)arg4;
- (struct CGImage *)i_imageInScaledRect:(struct CGRect)arg1 forceSRGB:(_Bool)arg2;
- (struct CGImage *)i_image;
- (void)i_clipsImagesToBounds:(_Bool)arg1;
- (void)i_drawRepsInContext:(struct CGContext *)arg1;
- (void)i_drawRepsInContext:(struct CGContext *)arg1 distort:(struct CGAffineTransform)arg2;
- (void)addBitmapsToRenderingQualityInfo:(id)arg1 inContext:(struct CGContext *)arg2;
- (void)i_drawBackgroundInContext:(struct CGContext *)arg1 bounds:(struct CGRect)arg2;
- (void)i_drawBackgroundInContext:(struct CGContext *)arg1;
- (struct CGRect)i_clipRectForCreatingRepsFromLayouts;
- (struct CGRect)i_unscaledRectOfLayouts;
- (struct CGRect)i_approximateScaledFrameOfEditingMenuAtPoint:(struct CGPoint)arg1;
- (void)i_unregisterRep:(id)arg1;
- (void)i_registerRep:(id)arg1;
- (_Bool)p_expandHitRegionOfPoint:(struct CGPoint)arg1 forRep:(id)arg2 smallRepOutset:(double)arg3 forShortestDistance:(double *)arg4;
- (_Bool)p_shouldRep:(id)arg1 countAsClosestSmallRepForSizeLimit:(double)arg2;
- (id)hitRep:(struct CGPoint)arg1 inTopLevelReps:(id)arg2 smallRepOutset:(double)arg3 withGesture:(id)arg4 passingTest:(CDUnknownBlockType)arg5;
- (struct CGRect)visibleUnscaledRectForClippingReps;
- (struct CGSize)convertBoundsToUnscaledSize:(struct CGSize)arg1;
- (struct CGSize)convertUnscaledToBoundsSize:(struct CGSize)arg1;
- (struct CGPoint)convertBoundsToUnscaledPoint:(struct CGPoint)arg1;
- (struct CGPoint)convertUnscaledToBoundsPoint:(struct CGPoint)arg1;
- (struct CGRect)convertBoundsToUnscaledRect:(struct CGRect)arg1;
- (struct CGRect)convertUnscaledToBoundsRect:(struct CGRect)arg1;
- (double)contentsScale;
- (void)i_setContentsScale:(double)arg1;
- (_Bool)isDrawingIntoPDF;
- (_Bool)shouldSuppressBackgrounds;
- (_Bool)shouldShowInstructionalText;
- (_Bool)shouldShowTextOverflowGlyphs;
- (_Bool)isPrinting;
@property(readonly, nonatomic) _Bool isCanvasInteractive;
- (_Bool)spellCheckingSuppressed;
- (_Bool)spellCheckingSupported;
- (id)layoutGeometryProviderForLayout:(id)arg1;
@property(readonly, nonatomic) _Bool supportsAdaptiveLayout;
- (_Bool)i_needsLayout;
- (void)layoutIfNeeded;
- (void)invalidateLayers;
- (void)invalidateVisibleBounds;
- (void)invalidateReps;
- (void)layoutInvalidated;
- (void)recreateAllLayoutsAndReps;
- (id)allReps;
- (id)topLevelReps;
- (id)repForLayout:(id)arg1;
- (void)i_updateInfosInLayoutController;
- (void)i_setInfosToDisplay:(id)arg1 updatingLayoutController:(_Bool)arg2;
@property(readonly, nonatomic) TSDInteractiveCanvasController *canvasController;
- (void)i_setCanvasController:(id)arg1;
@property(readonly, nonatomic) TSKAccessController *accessController;
@property(readonly, nonatomic) TSKChangeNotifier *changeNotifier;
@property(readonly, nonatomic) TSPObjectContext *objectContext;
@property(readonly, nonatomic) TSKDocumentRoot *documentRoot;
- (void)dealloc;
- (void)teardown;
- (id)initForTemporaryLayout;
- (id)init;
- (id)textRendererForLayer:(id)arg1 context:(struct CGContext *)arg2;

@end

@interface TSDCanvasAnimation : NSObject
{
    NSString *_animationID;
    void *_context;
    id _delegate;
    SEL _willStartSelector;
    SEL _didStopSelector;
    double _duration;
    double _delay;
    NSDate *_startDate;
    CAMediaTimingFunction *_timingFunction;
    float _repeatCount;
    _Bool _repeatAutoreverses;
    TSUNoCopyDictionary *_animationDictionariesForLayers;
    CDUnknownBlockType _completionBlock;
    unsigned int _outstandingAnimationCount;
    _Bool _firstAnimationDidStart;
    _Bool _allAnimationsFinishedBeforeStopping;
    CDUnknownBlockType _filterBlock;
    _Bool _useRepFiltering;
    TSDInteractiveCanvasController *_interactiveCanvasController;
}

@property(readonly, nonatomic) TSDInteractiveCanvasController *interactiveCanvasController; // @synthesize interactiveCanvasController=_interactiveCanvasController;
@property(nonatomic) _Bool useRepFiltering; // @synthesize useRepFiltering=_useRepFiltering;
@property(copy, nonatomic) CDUnknownBlockType filterBlock; // @synthesize filterBlock=_filterBlock;
@property(copy, nonatomic) CDUnknownBlockType completionBlock; // @synthesize completionBlock=_completionBlock;
@property(nonatomic) _Bool repeatAutoreverses; // @synthesize repeatAutoreverses=_repeatAutoreverses;
@property(nonatomic) float repeatCount; // @synthesize repeatCount=_repeatCount;
@property(retain, nonatomic) CAMediaTimingFunction *timingFunction; // @synthesize timingFunction=_timingFunction;
@property(retain, nonatomic) NSDate *startDate; // @synthesize startDate=_startDate;
@property(nonatomic) double delay; // @synthesize delay=_delay;
@property(nonatomic) double duration; // @synthesize duration=_duration;
@property(nonatomic) SEL didStopSelector; // @synthesize didStopSelector=_didStopSelector;
@property(nonatomic) SEL willStartSelector; // @synthesize willStartSelector=_willStartSelector;
@property(nonatomic) id delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) void *context; // @synthesize context=_context;
@property(readonly, retain, nonatomic) NSString *animationID; // @synthesize animationID=_animationID;
- (void)animationDidStop:(id)arg1 finished:(_Bool)arg2;
- (void)animationDidStart:(id)arg1;
- (void)setAnimation:(id)arg1 forLayer:(id)arg2 forKey:(id)arg3;
- (id)actionForLayer:(id)arg1 forKey:(id)arg2;
@property(readonly, nonatomic) NSString *beginTimeMode;
@property(readonly, nonatomic) double beginTime;
- (void)dealloc;
- (id)initWithAnimationID:(id)arg1 interactiveCanvasController:(id)arg2 context:(void *)arg3;

@end

@interface TSDCanvasEditor : NSObject <TSDCanvasEditor>
{
    TSDInteractiveCanvasController *mInteractiveCanvasController;
    TSDCanvasEditorHelper *mCanvasEditorHelper;
    TSDCanvasSelection *mSelection;
    NSObject<TSDArrangeInspectorDelegate> *mZOrderArranger;
    NSObject<TSDInlineFloatingWrapInspectorDelegate> *mInlineFloatingEditor;
    _Bool mPreventImageDataReplace;
    UIView *mInputView;
}

+ (CDUnknownBlockType)spatialInfoComparator;
+ (_Bool)physicalKeyboardIsSender:(id)arg1;
+ (Class)canvasEditorHelperClass;
+ (id)canvasSelectionWithInfos:(id)arg1 andContainer:(id)arg2;
+ (id)canvasSelectionWithInfos:(id)arg1;
- (void)p_notifyRepsForSelectionChangeFrom:(id)arg1 to:(id)arg2;
- (void)scrollToEndOfDocument:(id)arg1;
- (void)scrollToBeginningOfDocument:(id)arg1;
- (void)insertBacktab:(id)arg1;
- (void)insertTab:(id)arg1;
- (id)p_spatiallySortedDrawables;
- (id)p_nextInfoInTabSequence:(int)arg1;
- (void)connectWithConnectionLine:(id)arg1;
- (_Bool)canGroupDrawable:(id)arg1;
- (void)selectAll:(id)arg1;
@property(readonly, nonatomic) NSSet *infosForSelectAllInRoot;
- (void)select:(id)arg1;
- (void)copy:(id)arg1;
- (void)copyToPasteboard:(id)arg1 withSender:(id)arg2;
- (_Bool)canAddOrShowComment;
- (int)canPerformEditorAction:(SEL)arg1 withSender:(id)arg2;
- (_Bool)canvasEditorCanUngroupWithSender:(id)arg1;
- (_Bool)canUngroupWithSender:(id)arg1;
- (_Bool)canvasEditorCanGroupWithSender:(id)arg1;
- (_Bool)canGroupWithSender:(id)arg1;
- (_Bool)canvasEditorCanSelectAllWithSender:(id)arg1;
- (_Bool)canSelectAllWithSender:(id)arg1;
- (_Bool)canvasEditorCanDuplicateWithSender:(id)arg1;
- (_Bool)canvasEditorCanCopyStyleWithSender:(id)arg1;
- (_Bool)canvasEditorCanCutWithSender:(id)arg1;
- (_Bool)canvasEditorCanCopyWithSender:(id)arg1;
- (_Bool)canvasEditorCanDeleteWithSender:(id)arg1;
- (_Bool)canCopyStyle;
- (id)pasteboardController;
- (void)setSelectionToRep:(id)arg1;
- (void)setSelection:(id)arg1 withFlags:(unsigned long long)arg2;
@property(retain, nonatomic) TSKSelection *selection;
@property(readonly, retain, nonatomic) TSKSelection<TSDTextSelection> *textInputSelection;
- (_Bool)shouldPushNewEditorForNewSelection;
- (id)drawables;
- (unsigned long long)countOfDrawables;
- (_Bool)shouldUseAlternateSelectionHighlight;
- (id)editorToPopToOnEndEditing;
- (Class)editorClassForSelection;
- (id)p_filterNonDisplayedInfos:(id)arg1;
- (void)repWasCreated:(id)arg1;
- (void)canvasInfosDidChange;
@property(readonly, nonatomic) TSPObject *modelForSelection;
- (_Bool)isSelectedInfo:(id)arg1;
@property(readonly, nonatomic) TSKSelection<TSDCanvasSelection> *canvasSelection;
@property(readonly, nonatomic) TSDInteractiveCanvasController *interactiveCanvasController;
- (id)documentRoot;
@property(readonly, nonatomic) TSDCanvasEditorHelper *canvasEditorHelper;
- (void)dealloc;
- (void)teardown;
- (id)initWithInteractiveCanvasController:(id)arg1;
- (_Bool)canDeleteComment;
- (id)keyCommands;
- (_Bool)isRepSelectable:(id)arg1;
- (void)setSelectionToInfos:(id)arg1;
- (void)setSelectionToInfo:(id)arg1;
- (id)canvasSelectionWithInfos:(id)arg1 andContainer:(id)arg2;
- (id)canvasSelectionWithInfos:(id)arg1;
@property(readonly) _Bool wantsRawArrowKeyEvents;
- (void)setSelectionWithRange:(struct _NSRange)arg1 endOfLine:(_Bool)arg2;
- (id)selectionWithRange:(struct _NSRange)arg1;
- (void)clearMarkedRange;
- (struct _NSRange)rangeOfWordEnclosingCharIndex:(unsigned long long)arg1 backward:(_Bool)arg2;
- (void)replaceRange:(struct _NSRange)arg1 withText:(id)arg2;
- (void)extendSelectionRight;
- (void)extendSelectionLeft;
- (void)setMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2;
- (id)selectionRectsForRange:(struct _NSRange)arg1;
- (struct CGRect)firstRectForRange:(struct _NSRange)arg1;
- (id)textInRange:(struct _NSRange)arg1;
- (unsigned long long)textLength;
- (_Bool)textIsVerticalAtCharIndex:(unsigned long long)arg1;
- (void)endEditing;
- (struct _NSRange)editRange;
@property(readonly, nonatomic) struct _NSRange markedRange;
- (unsigned long long)charIndexByMovingPosition:(id)arg1 toBoundary:(long long)arg2 inDirection:(long long)arg3 preferPosition:(double *)arg4;
- (_Bool)isCharIndex:(unsigned long long)arg1 withinTextUnit:(long long)arg2 inDirection:(long long)arg3;
- (_Bool)isCharIndex:(unsigned long long)arg1 withEolAffinity:(_Bool)arg2 atBoundary:(long long)arg3 inDirection:(long long)arg4;
- (id)textFontAtCharIndex:(unsigned long long)arg1;
- (id)textColorAtCharIndex:(unsigned long long)arg1;
- (long long)returnKeyType;
@property(readonly, retain) UIView *inputAccessoryView;
- (void)insertText:(id)arg1;
- (_Bool)wantsKeyboard;
@property(readonly, retain) UIView *inputView;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingConnectionLineAttributes;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingEndpoints;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingFill;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingOpacity;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingReflection;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingResize;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingShadow;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingShrinkTextToFit;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingSmartShapeAttributes;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingStroke;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingTextInset;
@property(retain, nonatomic) TSKSelection<TSDTextSelection> *selectionForArrowKeys;
@property(readonly) Class superclass;

@end

@interface TSDCanvasEditorHelper : NSObject <TSKChangeSourceObserver>
{
    TSKChangeNotifier *mChangeNotifier;
    id <TSDCanvasEditor> mCanvasEditor;
    _Bool mTornDown;
}

+ (_Bool)physicalKeyboardIsSender:(id)arg1;
+ (id)canvasSelectionWithInfos:(id)arg1 andContainer:(id)arg2;
+ (id)canvasSelectionWithInfos:(id)arg1;
+ (Class)selectionClass;
- (_Bool)canDeleteComment;
- (id)layoutsForAlignAndDistribute;
- (_Bool)p_canReduceFileSizeForSelectedImages;
- (_Bool)canGroupDrawables:(id)arg1;
- (void)p_copy:(id)arg1;
- (int)canPerformEditorAction:(SEL)arg1 withSender:(id)arg2;
- (_Bool)p_selectionContainsInlineObjects:(id)arg1;
- (_Bool)canUngroupWithSelection:(id)arg1;
- (int)canvasEditorCanPerformLockAction:(SEL)arg1 withSender:(id)arg2;
- (_Bool)canPerformMaskWithShapeTypeWithSender:(id)arg1;
- (_Bool)canPerformMaskWithShapeWithSender:(id)arg1;
- (_Bool)canPerformUnmaskWithSender:(id)arg1;
- (_Bool)canPerformMaskWithSender:(id)arg1;
- (int)canvasEditorCanPerformDistributeAction:(SEL)arg1 withSender:(id)arg2;
- (int)canvasEditorCanPerformAlignAction:(SEL)arg1 withSender:(id)arg2;
- (int)canvasEditorCanPerformConnectWithConnectionLineAction:(SEL)arg1 withSender:(id)arg2;
- (int)canvasEditorCanPerformUngroupAction:(SEL)arg1 withSender:(id)arg2;
- (int)canvasEditorCanPerformGroupAction:(SEL)arg1 withSender:(id)arg2;
- (int)canvasEditorCanPerformSelectAllAction:(SEL)arg1 withSender:(id)arg2;
- (int)canvasEditorCanPerformDuplicateAction:(SEL)arg1 withSender:(id)arg2;
- (int)canvasEditorCanPerformCutAction:(SEL)arg1 withSender:(id)arg2;
- (int)canvasEditorCanPerformCopyStyleAction:(SEL)arg1 withSender:(id)arg2;
- (int)canvasEditorCanPerformCopyAction:(SEL)arg1 withSender:(id)arg2;
- (int)canvasEditorCanPerformDeleteAction:(SEL)arg1 withSender:(id)arg2;
- (id)infosFromCanvasSelection:(id)arg1;
- (id)canvasSelectionWithInfos:(id)arg1 andContainer:(id)arg2;
- (id)canvasSelectionWithInfos:(id)arg1;
- (id)canvasSelectionFromRep:(id)arg1;
- (void)pushNewEditorForSelection:(id)arg1;
- (id)newEditorForEditorClass:(Class)arg1;
- (id)editorToPopToOnEndEditingForSelection:(id)arg1;
- (Class)editorClassForSelection:(id)arg1;
- (Class)editorClassForSelectionIgnoringLockedState:(id)arg1;
- (Class)p_editorClassForSelection:(id)arg1 shouldIgnoreLockedState:(_Bool)arg2;
- (void)notifyRepsForSelectionChangeFrom:(id)arg1 to:(id)arg2;
- (_Bool)isRepSelectable:(id)arg1;
- (void)asyncProcessChanges:(id)arg1 forChangeSource:(id)arg2;
- (void)dealloc;
- (void)teardown;
- (id)interactiveCanvasController;
- (id)documentRoot;
- (id)canvasEditor;
- (id)initWithCanvasEditor:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSDNoDefaultImplicitActionLayer : CALayer
{
}

+ (id)defaultActionForKey:(id)arg1;

@end

@interface TSDCanvasLayer : TSDNoDefaultImplicitActionLayer <TSKKeyboardObserver>
{
    TSDInteractiveCanvasController *mController;
    struct CGSize mUnscaledSize;
    struct UIEdgeInsets mContentInset;
    double mViewScale;
    unsigned long long mViewScaleAnimationCount;
    unsigned long long mLayoutDisabledDepth;
    _Bool mAllowsPinchZoom;
    double mMinimumPinchViewScale;
    double mMaximumPinchViewScale;
    _Bool mShowsScaleFeedback;
    _Bool mIsInfinite;
    _Bool mHorizontallyCenteredInScrollView;
    _Bool mVerticallyCenteredInScrollView;
    _Bool mDisableLayout;
    _Bool mAvoidKeyboardWhenVerticallyCenteredInScrollView;
    _Bool _disableLayout;
    _Bool _torndown;
    _Bool _createdByPresentationLayer;
}

@property(nonatomic) _Bool createdByPresentationLayer; // @synthesize createdByPresentationLayer=_createdByPresentationLayer;
@property(nonatomic) _Bool torndown; // @synthesize torndown=_torndown;
@property(nonatomic, getter=isLayoutDisabled) _Bool disableLayout; // @synthesize disableLayout=_disableLayout;
@property(nonatomic) _Bool avoidKeyboardWhenVerticallyCenteredInScrollView; // @synthesize avoidKeyboardWhenVerticallyCenteredInScrollView=mAvoidKeyboardWhenVerticallyCenteredInScrollView;
@property(nonatomic) _Bool verticallyCenteredInScrollView; // @synthesize verticallyCenteredInScrollView=mVerticallyCenteredInScrollView;
@property(nonatomic) _Bool horizontallyCenteredInScrollView; // @synthesize horizontallyCenteredInScrollView=mHorizontallyCenteredInScrollView;
@property(nonatomic) struct UIEdgeInsets contentInset; // @synthesize contentInset=mContentInset;
@property(nonatomic) struct CGSize unscaledSize; // @synthesize unscaledSize=mUnscaledSize;
@property(nonatomic) TSDInteractiveCanvasController *controller; // @synthesize controller=mController;
@property(nonatomic, getter=isInfinite) _Bool infinite; // @synthesize infinite=mIsInfinite;
@property(nonatomic) _Bool showsScaleFeedback; // @synthesize showsScaleFeedback=mShowsScaleFeedback;
@property(nonatomic) _Bool allowsPinchZoom; // @synthesize allowsPinchZoom=mAllowsPinchZoom;
@property(nonatomic) double maximumPinchViewScale; // @synthesize maximumPinchViewScale=mMaximumPinchViewScale;
@property(nonatomic) double minimumPinchViewScale; // @synthesize minimumPinchViewScale=mMinimumPinchViewScale;
@property(nonatomic) double viewScale; // @synthesize viewScale=mViewScale;
- (void)keyboardWillChangeFrame:(id)arg1;
- (void)keyboardDidChangeFrame:(id)arg1;
- (void)_adjustContentInsetsForKeyboard;
- (void)p_fixFrameAndScrollView;
- (void)adjustContentInsets;
- (struct CGRect)p_fixedBoundsForScrollViewSize:(struct CGSize)arg1 viewScale:(double)arg2 contentInset:(struct UIEdgeInsets)arg3;
- (void)p_setEnclosingScrollViewZoomParameters;
- (void)p_setViewScale:(double)arg1 preservingScrollOffset:(_Bool)arg2;
- (void)p_setViewScale:(double)arg1;
- (void)setScrollViewFrameMaintainingApparentScrollPosition:(struct CGRect)arg1 animated:(_Bool)arg2;
- (void)setScrollViewFrameMaintainingApparentScrollPosition:(struct CGRect)arg1;
- (void)animateToViewScale:(double)arg1 contentCenter:(struct CGPoint)arg2 contentInset:(struct UIEdgeInsets)arg3 duration:(double)arg4 animation:(id)arg5 completionBlock:(CDUnknownBlockType)arg6;
- (void)animateToViewScale:(double)arg1 contentCenter:(struct CGPoint)arg2 contentInset:(struct UIEdgeInsets)arg3 duration:(double)arg4 completionBlock:(CDUnknownBlockType)arg5;
- (void)setViewScale:(double)arg1 andScrollViewFrame:(struct CGRect)arg2 maintainPosition:(_Bool)arg3 animated:(_Bool)arg4;
- (struct CGPoint)p_contentOffsetForUnscaledContentCenter:(struct CGPoint)arg1 viewScale:(double)arg2 contentInset:(struct UIEdgeInsets)arg3;
- (struct CGPoint)contentOffsetForUnscaledContentCenter:(struct CGPoint)arg1;
@property(readonly, nonatomic) struct CGPoint unscaledContentCenter;
- (void)setNeedsDisplayForDirtyTiles:(id)arg1;
- (void)popLayoutDisabled;
- (void)pushLayoutDisabled;
@property(readonly, nonatomic) TSDCanvasView *canvasView;
- (struct CGRect)p_boundsRect;
- (void)p_reenableDrawingAfterResumingFromBackground;
- (void)layoutSublayers;
- (void)layoutIfNeededIgnoringDisabledLayout;
- (void)setNeedsLayoutForTilingLayers;
- (void)setNeedsLayout;
- (void)fixFrameAndScrollView;
@property(nonatomic) _Bool centeredInScrollView; // @dynamic centeredInScrollView;
- (void)setUnscaledSizeOnLayer:(struct CGSize)arg1;
- (void)teardownWithoutClearingLayerDelegates;
- (void)teardown;
- (void)dealloc;
- (void)p_scrollViewScrollerStyleDidChange:(id)arg1;
- (id)presentationLayer;
- (id)initWithCoder:(id)arg1;
- (id)initWithLayer:(id)arg1;
- (id)init;
- (void)p_commonInit;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSDCanvasSearchReference : NSObject <TSKSearchReference>
{
    id <TSDCanvasSelection> mCanvasSelection;
    TSDDrawableInfo *mDrawableInfo;
    TSKDocumentRoot *mDocumentRoot;
    _Bool mAutohideHighlight;
    _Bool mPulseHighlight;
    NSArray *mFindHighlights;
    id <TSKAnnotation> mAnnotation;
    struct CGPoint mSearchReferencePoint;
}

+ (id)searchReferenceWithDrawableInfo:(id)arg1;
@property(retain, nonatomic) id <TSKAnnotation> annotation; // @synthesize annotation=mAnnotation;
@property(nonatomic) struct CGPoint searchReferencePoint; // @synthesize searchReferencePoint=mSearchReferencePoint;
@property(nonatomic) _Bool pulseHighlight; // @synthesize pulseHighlight=mPulseHighlight;
@property(nonatomic) _Bool autohideHighlight; // @synthesize autohideHighlight=mAutohideHighlight;
@property(retain, nonatomic) NSArray *findHighlights; // @synthesize findHighlights=mFindHighlights;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)searchReferenceEnd;
- (id)searchReferenceStart;
- (id)searchReferenceForReplacingWithString:(id)arg1 options:(unsigned long long)arg2 authorCreatedWithCommand:(id *)arg3;
- (_Bool)isReplaceable;
- (id)selection;
- (id)model;
- (id)drawableInfo;
- (id)commandForReplacingWithString:(id)arg1 options:(unsigned long long)arg2;
@property(readonly, copy) NSString *description;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)initWithDrawableInfo:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSKSelection : NSObject
{
}

+ (Class)archivedSelectionClass;
- (long long)compare:(id)arg1;

@end

@interface TSDCanvasSelection : TSKSelection <TSDCanvasSelection, NSCopying>
{
    NSSet *mInfos;
    TSDDrawableInfo<TSDContainerInfo> *mContainer;
}

+ (id)emptySelection;
@property(readonly, nonatomic) TSDDrawableInfo<TSDContainerInfo> *container; // @synthesize container=mContainer;
- (id)copyExcludingInfo:(id)arg1;
- (id)copyIncludingInfo:(id)arg1;
- (_Bool)containsUnlockedKindOfClass:(Class)arg1;
@property(readonly, nonatomic) unsigned long long unlockedInfoCount;
@property(readonly, nonatomic) NSSet *unlockedInfos;
- (_Bool)containsKindOfClass:(Class)arg1;
- (id)infosOfClass:(Class)arg1;
@property(readonly, nonatomic) _Bool isEmpty;
- (_Bool)isEqual:(id)arg1;
@property(readonly, nonatomic) unsigned long long infoCount;
@property(readonly, nonatomic) NSSet *infos;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithInfos:(id)arg1;
- (id)initWithInfos:(id)arg1 andContainer:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSDCanvasSubviewsController : NSObject
{
    NSSet *_repChildViews;
    NSDictionary *_repsByChildView;
    id <TSDLayerAndSubviewHosting> _host;
    NSArray *_alternateLayersForViews;
    _Bool _needsLayout;
    _Bool _hasBeenTornDown;
    TSURetainedPointerKeyDictionary *_repViewControllersByChildView;
    struct _opaque_pthread_mutex_t {
        long long __sig;
        char __opaque[56];
    } _mutex;
}

@property(readonly, nonatomic) NSSet *repChildViews; // @synthesize repChildViews=_repChildViews;
- (void)removeSubviews:(id)arg1;
- (void)addSubviews:(id)arg1;
- (void)updateTopLevelLayersForTiling:(id)arg1;
- (void)syncPerformBlock:(CDUnknownBlockType)arg1;
- (void)updateViewsFromReps;
- (void)p_sortSubviews:(id)arg1;
- (void)p_sortLayers:(id)arg1;
- (void)p_recursivelyFindHostingRepsForRep:(id)arg1 accumulatingHostingReps:(id)arg2;
- (void)p_recursivelyFindChildViewsForRep:(id)arg1 accumulatingViews:(id)arg2 accumulatingRepsByChildView:(id)arg3;
- (id)updateAlternateLayersForViews;
- (void)p_recursivelyFindAlternateLayersForRep:(id)arg1 accumulatingLayers:(id)arg2 repsByChildLayer:(id)arg3;
- (void)setNeedsLayout;
- (id)p_topLevelReps;
- (void)teardown;
- (void)dealloc;
- (id)initWithLayerAndSubviewHost:(id)arg1;

@end

@interface TSDCanvasView : UIView
{
    TSDInteractiveCanvasController *mController;
    id <TSDCanvasLayerHosting> mLayerHost;
}

+ (Class)layerClass;
@property(nonatomic) TSDInteractiveCanvasController *controller; // @synthesize controller=mController;
@property(nonatomic) id <TSDCanvasLayerHosting> layerHost; // @synthesize layerHost=mLayerHost;
- (id)actionForLayer:(id)arg1 forKey:(id)arg2;
- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;
@property(readonly, nonatomic) TSDCanvasView *rootCanvasView;
@property(readonly) TSKScrollView *enclosingScrollView;
@property(readonly, nonatomic) TSDCanvasLayer *canvasLayer;
- (void)teardown;

@end

@interface TSDCanvasZoomPinchGestureRecognizer : UIPinchGestureRecognizer
{
    _Bool mZoomTimedOut;
}

- (void)p_cancelAfterDelay;
- (void)p_stopCancellationTimer;
- (void)p_startCancellationTimer;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)reset;

@end

@interface TSDCanvasZoomTracker : NSObject
{
    TSDCanvasLayer *mCanvasLayer;
    NSObject<TSDCanvasZoomTrackerDelegate> *mDelegate;
    _Bool mAlwaysUsesTranslationSprings;
    _Bool mSnapsViewScale;
    _Bool mAnimateTransform;
    struct CGAffineTransform mSavedTransform;
    struct CGPoint mZoomOrigin;
    _Bool mHasGestureOrigin;
    struct CGPoint mGestureOrigin;
    struct CGPoint mGestureOffset;
    struct CGPoint mSavedContentOffset;
    _Bool mIsZooming;
    unsigned long long mZoomVelocitySampleCount;
    double mZoomVelocity;
    double mZoomStartTime;
    _Bool mIsShowingZoomHUD;
}

@property(nonatomic) _Bool animateTransform; // @synthesize animateTransform=mAnimateTransform;
@property(nonatomic) _Bool snapsViewScale; // @synthesize snapsViewScale=mSnapsViewScale;
@property(nonatomic) _Bool alwaysUsesTranslationSprings; // @synthesize alwaysUsesTranslationSprings=mAlwaysUsesTranslationSprings;
@property(nonatomic) __weak NSObject<TSDCanvasZoomTrackerDelegate> *delegate; // @synthesize delegate=mDelegate;
- (void)p_finishZoomWithFinalScaleFactor:(double)arg1 contentOffset:(struct CGPoint)arg2;
- (void)zoomWithScale:(double)arg1 velocity:(double)arg2 locationInView:(struct CGPoint)arg3 phase:(int)arg4;
- (id)initWithCanvasLayer:(id)arg1;

@end

@interface TSDCapabilities : NSObject
{
    long long _platform;
    long long _device;
    long long _renderer;
}

+ (id)currentCapabilities;
@property(readonly, nonatomic) long long renderer; // @synthesize renderer=_renderer;
@property(readonly, nonatomic) long long device; // @synthesize device=_device;
@property(readonly, nonatomic) long long platform; // @synthesize platform=_platform;
@property(readonly, nonatomic) struct CGSize maximumTextureSize;
@property(readonly, nonatomic) _Bool hasLightningPort;
@property(readonly, nonatomic) _Bool isRendererH5OrBelow;
@property(readonly, nonatomic) _Bool isRendererH4OrBelow;
@property(readonly, nonatomic) _Bool isRendererH3OrBelow;
- (id)init;
- (void)p_setupDevice;
- (void)p_setupPlatform;

@end

@interface TSDChangePropagationMap : NSObject <TSDChangePropagationMap>
{
    TSUNoCopyDictionary *mDictionary;
    NSMutableSet *mClassesOfChangedPrototypes;
}

- (id)prototypePassingTest:(CDUnknownBlockType)arg1;
- (id)prototypeChangeForPrototype:(id)arg1;
- (void)p_addClassesForPrototype:(id)arg1;
- (_Bool)hasAnyChangesForPrototypesOfClasses:(id)arg1;
- (void)recordDeleteChangeForPrototype:(id)arg1 replacement:(id)arg2;
- (void)recordNewValueForModifyChangeForPrototype:(id)arg1 property:(int)arg2 newBoxedValue:(id)arg3;
- (void)recordOldValueForModifyChangeForPrototype:(id)arg1 property:(int)arg2 oldBoxedValue:(id)arg3;
- (void)recordModifyChangeForPrototype:(id)arg1 property:(int)arg2 oldBoxedValue:(id)arg3 newBoxedValue:(id)arg4;
- (void)recordReplacementChangeForPrototype:(id)arg1 replacement:(id)arg2;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSDCheckableTableViewCell : UITableViewCell
{
    UIButton *mImageButton;
    UIImageView *mCheckmarkImageView;
    _Bool mChecked;
    _Bool mShowsCheckboxOnRight;
}

@property(nonatomic) _Bool checked; // @synthesize checked=mChecked;
@property(readonly, nonatomic) _Bool showsCheckboxOnRight; // @synthesize showsCheckboxOnRight=mShowsCheckboxOnRight;
- (void)setHighlighted:(_Bool)arg1 animated:(_Bool)arg2;
- (void)layoutSubviews;
- (void)setImage:(id)arg1 forState:(unsigned long long)arg2;
- (id)imageForState:(unsigned long long)arg1;
- (void)setCheckmarkImage:(id)arg1 forState:(unsigned long long)arg2;
- (void)dealloc;
- (id)initWithReuseIdentifier:(id)arg1 showsCheckboxOnRight:(_Bool)arg2 style:(long long)arg3;
- (id)initWithReuseIdentifier:(id)arg1 showsCheckboxOnRight:(_Bool)arg2;

@end

@interface TSDColorFill : TSDFill <TSDMixing, NSCopying, NSMutableCopying>
{
    TSUColor *mColor;
}

+ (id)keyPathsForValuesAffectingBrightness;
+ (id)keyPathsForValuesAffectingSaturation;
+ (id)keyPathsForValuesAffectingHue;
+ (id)keyPathsForValuesAffectingLuminance;
+ (id)keyPathsForValuesAffectingOpacity;
+ (id)keyPathsForValuesAffectingCGColor;
+ (id)brownColor;
+ (id)purpleColor;
+ (id)orangeColor;
+ (id)magentaColor;
+ (id)yellowColor;
+ (id)cyanColor;
+ (id)blueColor;
+ (id)greenColor;
+ (id)redColor;
+ (id)grayColor;
+ (id)whiteColor;
+ (id)blackColor;
+ (id)clearColor;
+ (id)randomColor;
+ (id)colorWithUIColor:(id)arg1;
+ (id)colorWithWhite:(double)arg1 alpha:(double)arg2;
+ (id)colorWithRed:(double)arg1 green:(double)arg2 blue:(double)arg3 alpha:(double)arg4;
+ (id)colorWithCGColor:(struct CGColor *)arg1;
+ (id)colorWithColor:(id)arg1;
@property(readonly, copy, nonatomic) TSUColor *color; // @synthesize color=mColor;
@property(readonly, nonatomic) double brightness;
@property(readonly, nonatomic) double saturation;
@property(readonly, nonatomic) double hue;
@property(readonly, nonatomic) double luminance;
@property(readonly, nonatomic) double opacity;
@property(readonly, nonatomic) struct CGColor *CGColor;
- (double)p_hsbComponentWithIndex:(unsigned long long)arg1;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (id)referenceColor;
- (SEL)mapThemeAssetSelector;
- (int)fillType;
- (void)applyToCAShapeLayer:(id)arg1 withScale:(double)arg2;
- (_Bool)canApplyToCAShapeLayer;
- (void)applyToCALayer:(id)arg1 withScale:(double)arg2;
- (_Bool)canApplyToCALayer;
- (void)paintPath:(struct CGPath *)arg1 inContext:(struct CGContext *)arg2;
- (void)paintRect:(struct CGRect)arg1 inContext:(struct CGContext *)arg2;
- (_Bool)drawsInOneStep;
- (_Bool)isNearlyWhite;
- (_Bool)isClear;
- (_Bool)isOpaque;
- (id)invertedColor;
- (id)grayscaleColor;
- (id)UIColor;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)dealloc;
- (id)initWithUIColor:(id)arg1;
- (id)initWithWhite:(double)arg1 alpha:(double)arg2;
- (id)initWithRed:(double)arg1 green:(double)arg2 blue:(double)arg3 alpha:(double)arg4;
- (id)initWithCGColor:(struct CGColor *)arg1;
- (id)initWithColor:(id)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface TSDShapeLayout : TSDStyledLayout
{
    struct {
        unsigned int path:1;
        unsigned int pathBounds:1;
        unsigned int pathBoundsWithoutStroke:1;
        unsigned int pathIsOpen:1;
        unsigned int pathIsLineSegment:1;
        unsigned int alignmentFrame:1;
        unsigned int headAndTail:1;
        unsigned int headLineEnd:1;
        unsigned int tailLineEnd:1;
        unsigned int clippedPath:1;
    } mShapeInvalidFlags;
    TSDBezierPath *mCachedPath;
    struct CGRect mCachedPathBounds;
    struct CGRect mCachedPathBoundsWithoutStroke;
    _Bool mCachedPathIsOpen;
    _Bool mCachedPathIsLineSegment;
    struct CGRect mCachedAlignmentFrame;
    struct CGPoint mHeadPoint;
    struct CGPoint mTailPoint;
    struct CGPoint mHeadLineEndPoint;
    struct CGPoint mTailLineEndPoint;
    double mHeadLineEndAngle;
    double mTailLineEndAngle;
    long long mHeadCutSegment;
    long long mTailCutSegment;
    double mHeadCutT;
    double mTailCutT;
    TSDBezierPath *mCachedClippedPath;
    TSDPathSource *mShrunkenPathSource;
    TSDEditableBezierPathSource *mCachedEditableBezierPathSource;
    TSDPathSource *mCachedPathSource;
    TSDPathSource *mResizePathSource;
    TSDInfoGeometry *mResizeInfoGeometry;
    TSDInfoGeometry *mInitialInfoGeometry;
    TSDPathSource *mProvidedPathSource;
    TSDMutableStroke *mDynamicStroke;
    TSDFill *mDynamicFill;
}

@property(retain, nonatomic) TSDFill *dynamicFill; // @synthesize dynamicFill=mDynamicFill;
- (void)p_updateResizeInfoGeometryFromResizePathSource;
- (id)p_unitePath:(id)arg1 withLineEndForHead:(_Bool)arg2 stroke:(id)arg3;
- (struct CGRect)p_boundsOfLineEndForHead:(_Bool)arg1 transform:(struct CGAffineTransform)arg2;
- (id)p_createClippedPath;
- (void)p_computeAngle:(double *)arg1 point:(struct CGPoint *)arg2 cutSegment:(long long *)arg3 cutT:(double *)arg4 forLineEndAtHead:(_Bool)arg5;
- (void)p_validateTailLineEnd;
- (void)p_validateHeadLineEnd;
- (void)p_validateHeadAndTail;
- (void)p_invalidateClippedPath;
- (void)p_invalidateTail;
- (void)p_invalidateHead;
- (_Bool)p_cachedPathIsLineSegment;
- (_Bool)p_cachedPathIsOpen;
- (struct CGRect)p_cachedPathBoundsWithoutStroke;
- (struct CGRect)p_cachedPathBounds;
- (id)p_cachedPath;
- (id)i_computeWrapPathClosed:(_Bool)arg1;
- (id)i_computeWrapPath;
- (struct CGPoint)getControlKnobPosition:(unsigned long long)arg1;
- (void)setControlKnobPosition:(unsigned long long)arg1 toPoint:(struct CGPoint)arg2;
- (unsigned long long)numberOfControlKnobs;
- (id)strokeTailLineEnd;
- (id)strokeHeadLineEnd;
- (struct CGPoint)unclippedTailPoint;
- (struct CGPoint)unclippedHeadPoint;
- (_Bool)isBeingManipulated;
- (_Bool)supportsRotation;
- (id)initialInfoGeometry;
- (struct CGSize)minimumSize;
- (void)endDynamicOperation;
- (void)beginDynamicOperation;
- (_Bool)supportsResize;
- (void)invalidatePathBounds;
- (void)invalidatePath;
- (void)invalidateFrame;
- (_Bool)canResetTextAndObjectHandles;
- (_Bool)canBeIntersected;
@property(readonly, nonatomic) TSDFill *fill;
- (void)aliasPathForScale:(double)arg1 originalStroke:(id)arg2 adjustedStroke:(id *)arg3 adjustedPath:(id *)arg4 startDelta:(struct CGPoint *)arg5 endDelta:(struct CGPoint *)arg6;
- (void)aliasPathForScale:(double)arg1 adjustedStroke:(id *)arg2 adjustedPath:(id *)arg3 startDelta:(struct CGPoint *)arg4 endDelta:(struct CGPoint *)arg5;
- (struct CGRect)aliasedAlignmentFrameForScale:(double)arg1;
- (struct CGPoint)centerForConnecting;
- (_Bool)isInvisibleAutosizingShape;
- (_Bool)shouldBeDisplayedInShowMode;
- (_Bool)isInvisible;
- (struct CGRect)shapeFrameWithTransform:(struct CGAffineTransform)arg1;
- (id)clippedPathForLineEnds;
- (double)lineEndScale;
- (_Bool)isTailEndOnLeft;
- (double)tailLineEndAngle;
- (double)headLineEndAngle;
- (struct CGPoint)tailLineEndPoint;
- (struct CGPoint)headLineEndPoint;
- (struct CGPoint)tailPoint;
- (struct CGPoint)headPoint;
- (id)layoutInfoGeometry;
- (_Bool)pathIsLineSegment;
- (_Bool)pathIsOpen;
- (id)smartPathSource;
- (struct CGRect)pathBoundsWithoutStroke;
- (struct CGRect)pathBounds;
- (id)path;
- (id)editablePathSource;
- (id)pathSource;
- (id)shapeInfo;
- (_Bool)isStrokeBeingManipulated;
- (void)dynamicStrokeWidthChangeDidEnd;
- (void)dynamicStrokeWidthUpdateToValue:(double)arg1;
- (void)dynamicStrokeWidthChangeDidBegin;
- (id)stroke;
- (struct CGRect)boundsForStandardKnobs;
- (void)processChangedProperty:(int)arg1;
- (struct CGRect)alignmentFrameInRoot;
- (struct CGRect)alignmentFrame;
- (void)setGeometry:(id)arg1;
- (struct CGAffineTransform)computeLayoutTransform;
- (id)computeLayoutGeometry;
- (id)layoutGeometryFromInfo;
- (void)dealloc;
- (id)initWithInfo:(id)arg1;

@end

@interface TSDConnectionLineAbstractLayout : TSDShapeLayout
{
    TSDBezierPath *mClippedBezierPath;
    TSDConnectionLinePathSource *mOriginalPathSource;
    TSDConnectionLinePathSource *mConnectedPathSource;
    TSDInfoGeometry *mConnectedInfoGeometry;
    TSDLayout *mConnectedFrom;
    TSDLayout *mConnectedTo;
    TSDBezierPath *mCachedFromWrapPath;
    TSDBezierPath *mCachedToWrapPath;
    double mCachedFromOutset;
    double mCachedToOutset;
    TSDBezierPath *mCachedFromOutsetWrapPath;
    TSDBezierPath *mCachedToOutsetWrapPath;
    TSDLayout *mOldConnectedFrom;
    TSDLayout *mOldConnectedTo;
    _Bool mValidConnections;
    _Bool mVisibleLine;
    _Bool mValidLine;
    struct CGPoint mLooseEndPosition;
    struct CGPoint mAcumulatedDrag;
    _Bool mUseResizePoints[3];
    struct CGPoint mResizeControlPoints[3];
    _Bool mUseDynamicOutsets;
    double mDynamicOutsetFrom;
    double mDynamicOutsetTo;
}

@property(nonatomic) double dynamicOutsetTo; // @synthesize dynamicOutsetTo=mDynamicOutsetTo;
@property(nonatomic) double dynamicOutsetFrom; // @synthesize dynamicOutsetFrom=mDynamicOutsetFrom;
@property(nonatomic) _Bool useDynamicOutsets; // @synthesize useDynamicOutsets=mUseDynamicOutsets;
@property(readonly, nonatomic) _Bool validLine; // @synthesize validLine=mValidLine;
@property(nonatomic) TSDLayout *connectedTo; // @synthesize connectedTo=mConnectedTo;
@property(nonatomic) TSDLayout *connectedFrom; // @synthesize connectedFrom=mConnectedFrom;
- (id)p_infoForConnectingToInfo:(id)arg1;
- (struct CGPoint)getControlKnobPosition:(unsigned long long)arg1;
- (_Bool)isStraightLine;
- (void)pauseDynamicTransformation;
- (struct CGPoint)i_accumulatedDrag;
- (void)endDynamicOperation;
- (void)beginDynamicOperation;
- (_Bool)shouldDisplayGuides;
- (struct CGPoint)unclippedTailPoint;
- (struct CGPoint)unclippedHeadPoint;
- (id)path;
- (_Bool)pathIsOpen;
- (_Bool)pathIsLineSegment;
- (void)invalidatePath;
- (void)invalidatePosition;
- (struct CGRect)boundsForStandardKnobs;
- (id)layoutInfoGeometry;
- (id)pathSource;
@property(readonly, nonatomic) TSDConnectionLinePathSource *connectedPathSource;
- (int)wrapType;
- (_Bool)canResetTextAndObjectHandles;
- (_Bool)canBeIntersected;
- (_Bool)canFlip;
- (_Bool)canEndpointsCoincide;
- (_Bool)isInvisible;
- (void)updateConnectedPath;
- (id)clipPath:(id)arg1 onLayout:(id)arg2 outset:(double)arg3 reversed:(_Bool)arg4 isValid:(_Bool *)arg5;
- (struct CGPoint)controlPointForPointA:(struct CGPoint)arg1 pointB:(struct CGPoint)arg2 andOriginalA:(struct CGPoint)arg3 originalB:(struct CGPoint)arg4;
- (id)createConnectedPathFrom:(id)arg1 to:(id)arg2 withControlPoints:(struct CGPoint [3])arg3;
- (void)checkConnections;
- (void)validate;
- (void)invalidateConnections;
- (void)removeConnections;
- (void)connectedLayoutInvalidated:(id)arg1;
- (void)processChangedProperty:(int)arg1;
- (void)parentDidChange;
- (void)updateRepPath;
- (_Bool)supportsFlipping;
- (_Bool)supportsRotation;
- (_Bool)supportsResize;
- (id)additionalLayoutsForRepCreation;
- (id)reliedOnLayouts;
- (_Bool)shouldValidate;
- (id)connectionLineInfo;
@property(readonly, nonatomic) double outsetTo;
@property(readonly, nonatomic) double outsetFrom;
- (void)dealloc;

@end

@interface TSDDrawableInfo : TSPObject <TSSPropertySource, TSDChangeableInfo, TSKDocumentObject, TSKTransformableObject, TSKSearchable>
{
    TSDInfoGeometry *mGeometry;
    NSObject<TSDContainerInfo> *mParentInfo;
    TSPLazyReference *mParentInfoReference;
    _Bool mLocked;
    _Bool mAspectRatioLocked;
    TSSPropertySetChangeDetails *mChanges;
    TSDExteriorTextWrap *mExteriorTextWrap;
    TSPObject<TSDOwningAttachment> *mOwningAttachment;
    TSDDefaultPartitioner *mDefaultPartitioner;
    NSURL *mHyperlinkURL;
    id <TSDAnnotationHosting> mComment;
    NSString *mAccessibilityDescription;
    NSMutableDictionary *mAccessibilityDescriptions;
}

+ (_Bool)canPartition;
+ (void)setShouldPartitionByDefault:(_Bool)arg1;
@property(retain, nonatomic) NSMutableDictionary *accessibilityDescriptions; // @synthesize accessibilityDescriptions=mAccessibilityDescriptions;
@property(copy, nonatomic) NSString *accessibilityDescription; // @synthesize accessibilityDescription=mAccessibilityDescription;
@property(nonatomic) _Bool aspectRatioLocked; // @synthesize aspectRatioLocked=mAspectRatioLocked;
@property(nonatomic, getter=isLocked) _Bool locked; // @synthesize locked=mLocked;
@property(copy, nonatomic) NSURL *hyperlinkURL; // @synthesize hyperlinkURL=mHyperlinkURL;
@property(nonatomic) TSPObject<TSDOwningAttachment> *owningAttachment; // @synthesize owningAttachment=mOwningAttachment;
@property(nonatomic) NSObject<TSDContainerInfo> *parentInfo; // @synthesize parentInfo=mParentInfo;
@property(nonatomic) _Bool matchesObjectPlaceholderGeometry;
- (struct CGPoint)transformableObjectAnchorPoint;
- (id)transformedGeometryWithTransform:(struct CGAffineTransform)arg1 inBounds:(struct CGRect)arg2;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (id)containingGroup;
- (id)descriptionForPasteboardWithSource:(id)arg1;
- (id)descriptionForPasteboard;
- (_Bool)reverseChunkingIsSupported;
- (id)textureDeliveryStylesLocalized:(_Bool)arg1 animationFilter:(id)arg2;
- (unsigned long long)textureDeliveryStyleFromDeliveryString:(id)arg1;
- (unsigned long long)chunkCountForTextureDeliveryStyle:(unsigned long long)arg1 byGlyphStyle:(int)arg2 animationFilter:(id)arg3;
- (unsigned long long)chunkCountForTextureDeliveryStyle:(unsigned long long)arg1 animationFilter:(id)arg2;
- (id)animationFilters;
- (void)adoptStylesheet:(id)arg1 withMapper:(id)arg2;
- (_Bool)canChangeWrapType;
- (void)wasRemovedFromDocumentRoot:(id)arg1;
- (void)willBeRemovedFromDocumentRoot:(id)arg1;
- (void)wasAddedToDocumentRoot:(id)arg1 context:(id)arg2;
- (void)willBeAddedToDocumentRoot:(id)arg1 context:(id)arg2;
@property(readonly, nonatomic) Class editorClass;
- (void)coalesceChanges:(id)arg1;
- (id)endCollectingChanges;
- (void)willChangeProperties:(id)arg1;
- (void)willChangeProperty:(int)arg1;
- (void)beginCollectingChanges;
- (id)searchForAnnotationsWithHitBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) _Bool supportsAttachedComments;
- (_Bool)canAnchor;
- (void)didCopy;
- (void)willCopyWithOtherDrawables:(id)arg1;
- (id)copyWithContext:(id)arg1;
@property(readonly, nonatomic, getter=isLockable) _Bool lockable;
- (id)presetKind;
@property(readonly, nonatomic) _Bool supportsHyperlinks;
- (id)partitioner;
- (_Bool)isThemeContent;
- (Class)repClass;
- (Class)layoutClass;
@property(readonly, nonatomic) _Bool isUserModifiable;
@property(copy, nonatomic) TSDExteriorTextWrap *exteriorTextWrap;
@property(readonly, nonatomic, getter=isAttachedToBodyText) _Bool attachedToBodyText;
@property(readonly, nonatomic, getter=isInlineWithText) _Bool inlineWithText;
@property(readonly, nonatomic, getter=isAnchoredToText) _Bool anchoredToText;
@property(readonly, nonatomic, getter=isFloatingAboveText) _Bool floatingAboveText;
- (struct CGAffineTransform)transformInRoot;
- (struct CGAffineTransform)fullTransformInRoot;
- (struct CGAffineTransform)computeFullTransform;
- (struct CGAffineTransform)computeLayoutFullTransform;
- (void)performBlockWithTemporaryLayout:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) _Bool canSizeBeChangedIncrementally;
@property(copy, nonatomic) TSDInfoGeometry *geometry;
@property(readonly, nonatomic) TSPObject<TSDOwningAttachment> *owningAttachmentNoRecurse;
@property(copy, nonatomic) id <TSDAnnotationHosting> comment;
- (void)clearBackPointerToParentInfoIfNeeded:(id)arg1;
- (void)dealloc;
- (id)initWithContext:(id)arg1 geometry:(id)arg2;
- (void)setInsertionCenterPosition:(struct CGPoint)arg1;
- (double)CGFloatValueForProperty:(int)arg1;
- (double)doubleValueForProperty:(int)arg1;
- (float)floatValueForProperty:(int)arg1;
- (int)intValueForProperty:(int)arg1;
- (id)objectForProperty:(int)arg1;
- (id)boxedObjectForProperty:(int)arg1;
- (_Bool)containsProperty:(int)arg1;
- (int)elementKind;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSDStyledInfo : TSDDrawableInfo <TSSStyleClient>
{
}

- (void)replaceReferencedStylesUsingBlock:(CDUnknownBlockType)arg1;
- (id)referencedStyles;
- (id)styleIdentifierTemplateForNewPreset;
- (id)propertyMapForNewPreset;
- (void)adoptStylesheet:(id)arg1 withMapper:(id)arg2;
- (void)i_setValue:(id)arg1 forProperty:(int)arg2;
- (void)setValuesForProperties:(id)arg1;
- (void)setBoxedValue:(id)arg1 forProperty:(int)arg2;
- (id)objectForProperty:(int)arg1;
- (id)boxedValueForProperty:(int)arg1;
@property(copy, nonatomic) TSDShadow *shadow;
@property(copy, nonatomic) TSDReflection *reflection;
@property(nonatomic) float opacity;
@property(copy, nonatomic) TSDStroke *stroke;
- (id)stylesForCopyStyle;
@property(retain, nonatomic) TSSStyle *style;
- (Class)styleClass;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSDShapeInfo : TSDStyledInfo <TSSThemedObject, TSDMixing, TSDReducableInfo, TSKSearchable>
{
    TSDPathSource *mPathSource;
    TSDShapeStyle *mStyle;
    TSDLineEnd *mHeadLineEnd;
    TSDLineEnd *mTailLineEnd;
}

@property(retain, nonatomic) TSDPathSource *pathSource; // @synthesize pathSource=mPathSource;
- (id)style;
- (id)objectForProperty:(int)arg1;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (id)animationFilters;
- (struct CGSize)targetSizeForImageData:(id)arg1 associatedHint:(id)arg2;
- (id)imageDatasForReducingFileSizeWithAssociatedHints;
- (void)setValuesForProperties:(id)arg1;
@property(copy, nonatomic) TSDFill *fill;
- (void)setStyle:(id)arg1;
@property(readonly, nonatomic) _Bool supportsShrinkTextToFit;
@property(readonly, nonatomic) _Bool supportsTextInset;
- (void)setGeometry:(id)arg1;
@property(readonly, nonatomic) TSDShapeStyle *shapeStyle;
- (Class)styleClass;
- (Class)repClass;
- (Class)layoutClass;
- (id)copyWithContext:(id)arg1;
- (void)dealloc;
- (id)initWithContext:(id)arg1 geometry:(id)arg2;
- (id)initWithContext:(id)arg1 geometry:(id)arg2 style:(id)arg3;
- (id)initWithContext:(id)arg1 geometry:(id)arg2 style:(id)arg3 pathSource:(id)arg4;
@property(retain, nonatomic) TSDLineEnd *tailLineEnd;
@property(retain, nonatomic) TSDLineEnd *headLineEnd;
- (int)elementKind;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSDConnectionLineInfo : TSDShapeInfo
{
    TSDDrawableInfo *mConnectedFrom;
    TSDDrawableInfo *mConnectedTo;
    struct {
        unsigned int connectedFrom:1;
        unsigned int connectedTo:1;
    } mInvalidFlags;
}

@property(retain, nonatomic) TSDDrawableInfo *connectedTo; // @synthesize connectedTo=mConnectedTo;
@property(retain, nonatomic) TSDDrawableInfo *connectedFrom; // @synthesize connectedFrom=mConnectedFrom;
- (void)acceptVisitor:(id)arg1;
- (void)performBlockWithTemporaryLayout:(CDUnknownBlockType)arg1;
- (void)didCopy;
- (void)willCopyWithOtherDrawables:(id)arg1;
- (_Bool)canAnchor;
- (struct CGAffineTransform)computeLayoutFullTransform;
- (void)computeLayoutInfoGeometry:(id *)arg1 andPathSource:(id *)arg2;
- (id)computeLayoutInfoGeometry;
- (id)presetKind;
- (Class)repClass;
- (Class)layoutClass;
- (id)copyWithContext:(id)arg1;
- (void)dealloc;

@end

@interface TSDConnectionLineLayout : TSDConnectionLineAbstractLayout
{
    double mStartClipT;
    double mEndClipT;
}

- (struct CGPoint)getControlKnobPosition:(unsigned long long)arg1;
- (struct CGPoint)controlPointForPointA:(struct CGPoint)arg1 pointB:(struct CGPoint)arg2 andOriginalA:(struct CGPoint)arg3 originalB:(struct CGPoint)arg4;
- (id)createConnectedPathFrom:(id)arg1 to:(id)arg2 withControlPoints:(struct CGPoint [3])arg3;
- (id)quadraticCurve:(struct CGPoint [3])arg1;

@end

@interface TSDConnectionLineOrthogonalLayout : TSDConnectionLineAbstractLayout
{
}

- (struct CGPoint)getControlKnobPosition:(unsigned long long)arg1;
- (void)addEndpointSnapsToXs:(vector_3f7ffb82 *)arg1 andYs:(vector_3f7ffb82 *)arg2;
- (struct CGPoint)axisSnapPoint:(struct CGPoint)arg1 toXs:(vector_3f7ffb82)arg2 toYs:(vector_3f7ffb82)arg3 withThreshold:(double)arg4;
- (_Bool)canEndpointsCoincide;
- (struct CGPoint)controlPointForPointA:(struct CGPoint)arg1 pointB:(struct CGPoint)arg2 andOriginalA:(struct CGPoint)arg3 originalB:(struct CGPoint)arg4;
- (id)createConnectedPathFrom:(id)arg1 to:(id)arg2 withControlPoints:(struct CGPoint [3])arg3;
- (struct CGRect)orthoRectOfLayout:(id)arg1 outset:(double)arg2;

@end

@interface TSDConnectionLinePathSource : TSDBezierPathSource <TSDSmartPathSource>
{
    int mType;
    double mOutsetFrom;
    double mOutsetTo;
}

+ (id)pathSourceAtAngleOfSize:(struct CGSize)arg1 forType:(int)arg2;
+ (id)pathSourceOfLength:(double)arg1;
@property(nonatomic) double outsetTo; // @synthesize outsetTo=mOutsetTo;
@property(nonatomic) double outsetFrom; // @synthesize outsetFrom=mOutsetFrom;
@property(nonatomic) int type; // @synthesize type=mType;
- (id)description;
- (void)p_setBezierPath:(id)arg1;
- (_Bool)isLineSegment;
- (_Bool)isCircular;
- (_Bool)isRectangular;
- (struct CGPath *)newFeedbackPathForKnob:(unsigned long long)arg1;
- (id)getFeedbackStringForKnob:(unsigned long long)arg1;
- (struct CGPoint)fixedPointForControlKnobChange;
- (id)bezierPath;
- (void)scaleToNaturalSize:(struct CGSize)arg1;
- (void)setControlKnobPosition:(unsigned long long)arg1 toPoint:(struct CGPoint)arg2;
- (struct CGPoint)getControlKnobPosition:(unsigned long long)arg1;
- (long long)pathElementIndexForKnobTag:(unsigned long long)arg1;
@property(readonly) unsigned long long numberOfControlKnobs;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)bend;
- (id)initWithBezierPath:(id)arg1;

@end

@interface TSDShapeRep : TSDStyledRep <TSDMagicMoveMatching>
{
    struct CGRect mFrameInUnscaledCanvasRelativeToSuper;
    _Bool mFrameInUnscaledCanvasIsValid;
    _Bool mDirectlyManagesLayerContent;
    struct CGRect mOriginalAliasedAlignmentFrameInLayerFrame;
    _Bool mShadowOnChildrenDisabled;
}

+ (double)magicMoveAttributeMatchPercentBetweenOutgoingObject:(id)arg1 incomingObject:(id)arg2;
@property(nonatomic) _Bool shadowOnChildrenDisabled; // @synthesize shadowOnChildrenDisabled=mShadowOnChildrenDisabled;
- (_Bool)i_editMenuOverlapsEndKnobs;
- (_Bool)shouldShowShadow;
- (_Bool)canDrawShadowInOneStepWithChildren:(_Bool)arg1;
- (_Bool)p_drawsSelfInOneStep;
- (_Bool)p_canApplyFillToLayer;
- (_Bool)p_canApplyStrokeToLayer;
- (_Bool)p_pathIsAxisAlignedRect;
- (void)p_endDynamicallyResizingOrMovingLineEnd;
- (void)p_beginDynamicallyResizingOrMovingLineEnd;
- (void)p_drawLineEndForHead:(_Bool)arg1 withDelta:(struct CGPoint)arg2 andStroke:(id)arg3 inContext:(struct CGContext *)arg4 useFastDrawing:(_Bool)arg5;
- (id)magicMoveAttributesWithShapeAttributes:(_Bool)arg1;
- (struct CGPoint)centerForGuideLayerPlacement;
- (_Bool)isEditingPath;
- (struct CGAffineTransform)naturalToEditablePathSpaceTransform;
- (id)editablePathSource;
- (_Bool)canMakePathEditable;
- (_Bool)isPathEditable;
- (_Bool)canDrawInParallel;
- (_Bool)isInvisible;
- (void)invalidateEffectLayersForChildren;
- (id)overlayLayers;
- (id)additionalLayersOverLayer;
- (void)updatePositionsOfKnobs:(id)arg1;
- (_Bool)directlyManagesVisibilityOfKnob:(id)arg1;
- (_Bool)canUseSpecializedHitRegionForKnob:(id)arg1;
- (_Bool)shouldShowSmartShapeKnobs;
- (_Bool)shouldShowAdvancedGradientKnobs;
- (_Bool)shouldShowAdditionalKnobs;
- (void)addSelectionKnobsToArray:(id)arg1;
- (unsigned long long)enabledKnobMask;
- (_Bool)canBeUsedForImageMask;
- (id)pathSourceForSelectionHighlightBehavior;
- (_Bool)shouldHideSelectionHighlightDueToRectangularPath;
- (_Bool)shouldShowSelectionHighlight;
- (struct CGRect)targetRectForEditMenu;
- (_Bool)isDraggable;
- (void)processChangedProperty:(int)arg1;
- (_Bool)intersectsUnscaledRect:(struct CGRect)arg1;
- (double)shortestDistanceToPoint:(struct CGPoint)arg1 countAsHit:(_Bool *)arg2;
- (_Bool)shouldExpandHitRegionWhenSmall;
- (_Bool)containsPoint:(struct CGPoint)arg1;
- (void)didUpdateLayer:(id)arg1;
- (void)willUpdateLayer:(id)arg1;
- (id)imageOfStroke:(struct CGRect *)arg1;
- (void)p_drawInContext:(struct CGContext *)arg1 withContent:(_Bool)arg2 withStroke:(_Bool)arg3 withOpacity:(_Bool)arg4;
- (void)drawInContextWithoutEffects:(struct CGContext *)arg1 withContent:(_Bool)arg2 withStroke:(_Bool)arg3 withOpacity:(_Bool)arg4 forAlphaOnly:(_Bool)arg5 drawChildren:(_Bool)arg6;
- (_Bool)isEditingChildRep;
- (void)drawInLayerContext:(struct CGContext *)arg1;
- (void)p_drawChildrenWithoutOpacityInContext:(struct CGContext *)arg1;
- (void)recursivelyDrawChildrenInContext:(struct CGContext *)arg1;
- (void)addBitmapsToRenderingQualityInfo:(id)arg1 inContext:(struct CGContext *)arg2;
- (void)p_endApplyOpacity:(struct CGContext *)arg1 apply:(_Bool)arg2;
- (_Bool)p_beginApplyOpacity:(struct CGContext *)arg1 forDrawingInOneStep:(_Bool)arg2;
- (void)willBeRemoved;
- (struct CGRect)clipRect;
- (_Bool)directlyManagesLayerContent;
- (void)layoutInRootChangedFrom:(id)arg1 to:(id)arg2 translatedOnly:(_Bool)arg3;
- (struct CGRect)layerFrameInScaledCanvasRelativeToParent;
- (struct CGRect)layerFrameInScaledCanvas;
- (struct CGRect)frameInUnscaledCanvas;
- (id)shapeLayout;
- (id)shapeInfo;
- (id)initWithLayout:(id)arg1 canvas:(id)arg2;

@end

@interface TSDConnectionLineRep : TSDShapeRep
{
    TSDPathSource *mLastPathSource;
}

+ (_Bool)canConnectToRep:(id)arg1;
+ (id)infosToConnectFromSelection:(id)arg1 withInteractiveCanvasController:(id)arg2;
- (_Bool)p_controlKnobVisible;
- (_Bool)p_isConnectedToLockedObjects;
- (_Bool)p_isConnected;
- (_Bool)i_editMenuOverlapsEndKnobs;
- (struct CGPoint)i_dragOffset;
- (void)updateFromLayout;
- (_Bool)canBeUsedForImageMask;
- (_Bool)directlyManagesLayerContent;
- (_Bool)canUseSpecializedHitRegionForKnob:(id)arg1;
- (struct CGRect)targetRectForEditMenu;
- (_Bool)canMakePathEditable;
- (_Bool)isDraggable;
- (_Bool)isSelectable;
- (id)additionalRepsForDragging;
- (_Bool)shouldCreateSelectionKnobs;
- (unsigned long long)enabledKnobMask;
- (double)shortestDistanceToPoint:(struct CGPoint)arg1 countAsHit:(_Bool *)arg2;
- (_Bool)containsPoint:(struct CGPoint)arg1;
- (_Bool)shouldShowCommentHighlight;
- (_Bool)shouldCreateKnobs;
- (_Bool)shouldShowSmartShapeKnobs;
- (_Bool)canConnectToRep:(id)arg1;
- (id)connectionLineLayout;
- (void)dealloc;

@end

@interface TSDShadow : NSObject <TSDMixing, TSSPreset, TSSPresetSource, NSCopying, NSMutableCopying>
{
    double mAngle;
    double mOffset;
    double mRadius;
    double mOpacity;
    struct CGColor *mColor;
    _Bool mEnabled;
}

+ (id)mixableObjectClasses;
+ (_Bool)canMixWithNilObjects;
+ (void)bootstrapPresetsOfKind:(id)arg1 inTheme:(id)arg2 alternate:(int)arg3;
+ (id)presetKinds;
+ (_Bool)automaticallyNotifiesObserversOfTSUColor;
+ (id)keyPathsForValuesAffectingTSUColor;
+ (id)curvedShadowWithOffset:(double)arg1 angle:(double)arg2 radius:(double)arg3 curve:(double)arg4 opacity:(double)arg5 color:(struct CGColor *)arg6 enabled:(_Bool)arg7;
+ (id)shadowWithNSShadow:(id)arg1;
+ (id)contactShadowWithAngle:(double)arg1 offset:(double)arg2 radius:(double)arg3 height:(double)arg4 opacity:(double)arg5 color:(struct CGColor *)arg6 enabled:(_Bool)arg7;
+ (id)shadowWithAngle:(double)arg1 offset:(double)arg2 radius:(double)arg3 opacity:(double)arg4 color:(struct CGColor *)arg5 enabled:(_Bool)arg6;
+ (id)defaultDisabledShadow;
+ (id)defaultShadow;
+ (id)p_defaultShadowEnabled:(_Bool)arg1;
@property(readonly, nonatomic, getter=isEnabled) _Bool enabled; // @synthesize enabled=mEnabled;
@property(readonly, nonatomic) struct CGColor *color; // @synthesize color=mColor;
@property(readonly, nonatomic) double opacity; // @synthesize opacity=mOpacity;
@property(readonly, nonatomic) double radius; // @synthesize radius=mRadius;
@property(readonly, nonatomic) double offset; // @synthesize offset=mOffset;
@property(readonly, nonatomic) double angle; // @synthesize angle=mAngle;
- (id)NSShadow;
- (id)shadowByTransformingByTransform:(struct CGAffineTransform)arg1;
- (id)mixedBaseObjectWithObject:(id)arg1;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (SEL)mapThemeAssetSelector;
- (_Bool)isThemeEquivalent:(id)arg1;
@property(readonly, nonatomic) NSString *presetKind;
- (_Bool)differenceRequiresRebuilding:(id)arg1;
- (struct CGRect)shadowBoundsForRect:(struct CGRect)arg1 additionalAngle:(double)arg2;
- (struct CGRect)shadowBoundsForRect:(struct CGRect)arg1;
- (struct CGRect)shadowBoundsForRect:(struct CGRect)arg1 additionalTransform:(struct CGAffineTransform)arg2;
- (struct CGImage *)newShadowImageForRep:(id)arg1 withSize:(struct CGSize)arg2 drawSelector:(SEL)arg3 unflipped:(_Bool)arg4;
- (struct CGRect)boundsForRep:(id)arg1;
- (struct CGRect)boundsInNaturalSpaceForRep:(id)arg1;
- (void)applyToContext:(struct CGContext *)arg1 viewScale:(double)arg2 flipped:(_Bool)arg3 extraOffset:(struct CGSize)arg4;
- (void)applyToContext:(struct CGContext *)arg1 viewScale:(double)arg2 flipped:(_Bool)arg3;
- (void)applyToContext:(struct CGContext *)arg1 viewScale:(double)arg2;
@property(readonly, nonatomic) TSUColor *TSUColor;
@property(readonly, nonatomic) struct CGPoint offsetDelta;
- (id)typeDescription;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)shadowType;
- (_Bool)showForEditingText;
- (_Bool)isCurvedShadow;
- (_Bool)isDropShadow;
- (_Bool)isContactShadow;
- (unsigned long long)hash;
- (void)dealloc;
- (id)newShadowClampedForSwatches;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)mutableCopy;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (double)clampOpacity:(double)arg1;
- (double)clampRadius:(double)arg1;
- (double)clampOffset:(double)arg1;
- (struct CGImage *)i_newEmptyImageWithSize:(struct CGSize)arg1;
- (id)i_initWithOpacity:(double)arg1 color:(struct CGColor *)arg2 enabled:(_Bool)arg3;

@end

@interface TSDContactShadow : TSDShadow
{
    double mHeight;
}

+ (id)contactShadowWithOffset:(double)arg1 height:(double)arg2 radius:(double)arg3 opacity:(double)arg4 color:(struct CGColor *)arg5 enabled:(_Bool)arg6;
@property(readonly, nonatomic) double height; // @synthesize height=mHeight;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (struct CGImage *)newShadowImageFromContext:(struct CGContext *)arg1 withSize:(struct CGSize)arg2 bounds:(struct CGRect)arg3 unflipped:(_Bool)arg4;
- (struct CGImage *)newShadowImageForRep:(id)arg1 withSize:(struct CGSize)arg2 drawSelector:(SEL)arg3 unflipped:(_Bool)arg4;
- (struct CGRect)boundsForRep:(id)arg1;
- (struct CGRect)boundsInNaturalSpaceForRep:(id)arg1;
- (struct CGRect)shadowBoundsForRect:(struct CGRect)arg1 additionalTransform:(struct CGAffineTransform)arg2;
- (double)clampOffset:(double)arg1;
- (double)clampRadius:(double)arg1;
@property(readonly, nonatomic) double perspective;
- (id)newShadowClampedForSwatches;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)shadowType;
- (id)initWithOffset:(double)arg1 height:(double)arg2 radius:(double)arg3 opacity:(double)arg4 color:(struct CGColor *)arg5 enabled:(_Bool)arg6;

@end

@interface TSDContainerInfo : TSPObject <TSDMutableContainerInfo, TSKDocumentObject>
{
    TSDInfoGeometry *mGeometry;
    NSObject<TSDContainerInfo> *mParentInfo;
    NSMutableArray *mChildInfos;
}

@property(nonatomic) NSObject<TSDContainerInfo> *parentInfo; // @synthesize parentInfo=mParentInfo;
@property(copy, nonatomic) TSDInfoGeometry *geometry; // @synthesize geometry=mGeometry;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (void)wasRemovedFromDocumentRoot:(id)arg1;
- (void)willBeRemovedFromDocumentRoot:(id)arg1;
- (void)wasAddedToDocumentRoot:(id)arg1 context:(id)arg2;
- (void)willBeAddedToDocumentRoot:(id)arg1 context:(id)arg2;
- (void)replaceChildInfo:(id)arg1 with:(id)arg2;
- (void)removeChildInfo:(id)arg1;
- (void)moveChildren:(id)arg1 toIndexes:(id)arg2;
- (void)insertChildInfo:(id)arg1 above:(id)arg2;
- (void)insertChildInfo:(id)arg1 below:(id)arg2;
- (void)insertChildInfo:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)addChildInfo:(id)arg1;
- (void)setChildInfos:(id)arg1;
- (id)childInfos;
- (id)copyWithContext:(id)arg1;
- (_Bool)isThemeContent;
- (Class)repClass;
- (Class)layoutClass;
@property(readonly, nonatomic, getter=isAttachedToBodyText) _Bool attachedToBodyText;
@property(readonly, nonatomic, getter=isInlineWithText) _Bool inlineWithText;
@property(readonly, nonatomic, getter=isAnchoredToText) _Bool anchoredToText;
@property(readonly, nonatomic, getter=isFloatingAboveText) _Bool floatingAboveText;
@property(readonly, nonatomic) TSPObject<TSDOwningAttachment> *owningAttachmentNoRecurse;
@property(nonatomic) TSPObject<TSDOwningAttachment> *owningAttachment;
- (void)clearBackPointerToParentInfoIfNeeded:(id)arg1;
- (void)dealloc;
- (id)initWithContext:(id)arg1 geometry:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(nonatomic) _Bool matchesObjectPlaceholderGeometry;
@property(readonly) Class superclass;

@end

@interface TSDContainerLayout : TSDLayout
{
}

- (id)containerInfo;
- (void)updateChildrenFromInfo;
- (id)childInfosForLayout;
- (id)initWithInfo:(id)arg1;

@end

@interface TSDContainerRep : TSDRep <TSDMutableContainerRep>
{
    NSMutableArray *mChildReps;
}

- (void)replaceContentsFromRep:(id)arg1;
- (void)willReplaceContentsFromRep:(id)arg1;
- (id)hitReps:(struct CGPoint)arg1 withSlopBlock:(CDUnknownBlockType)arg2;
- (id)hitRep:(struct CGPoint)arg1;
- (id)hitRep:(struct CGPoint)arg1 withGesture:(id)arg2 passingTest:(CDUnknownBlockType)arg3;
- (id)hitRepChrome:(struct CGPoint)arg1;
- (id)hitRepChrome:(struct CGPoint)arg1 passingTest:(CDUnknownBlockType)arg2;
- (void)recursivelyPerformSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (void)recursivelyPerformSelectorIfImplemented:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (void)drawInContext:(struct CGContext *)arg1;
- (id)visibleChildLayouts;
- (void)updateChildrenFromLayout;
- (_Bool)canDrawInParallel;
- (_Bool)mustDrawOnMainThreadForInteractiveCanvas;
- (void)replaceChildRep:(id)arg1 with:(id)arg2;
- (void)removeChildRep:(id)arg1;
- (void)insertChildRep:(id)arg1 above:(id)arg2;
- (void)insertChildRep:(id)arg1 below:(id)arg2;
- (void)insertChildRep:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)addChildRep:(id)arg1;
- (void)setChildReps:(id)arg1;
@property(readonly, nonatomic) NSObject<TSDMutableContainerInfo> *mutableContainerInfo;
- (void)selectChildRep:(id)arg1;
- (_Bool)canSelectChildRep:(id)arg1;
- (void)addAdditionalChildLayersToArray:(id)arg1;
- (id)childRepsForHitTesting;
- (id)childReps;
@property(readonly, nonatomic) NSObject<TSDContainerInfo> *containerInfo;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSDContentAnimation : NSObject <TSDContentAnimationTiming>
{
}

+ (id)animation;
- (id)i_endLocation;
- (id)i_animationWithTransformBlock:(CDUnknownBlockType)arg1;
- (_Bool)i_canProduceAnimation;
- (void)i_applyToLayer:(id)arg1 withTransformBlock:(CDUnknownBlockType)arg2 completionBlock:(CDUnknownBlockType)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSDContentAnimationGroup : TSDContentAnimation
{
    NSArray *_animations;
    CAMediaTimingFunction *_timingFunction;
    double _duration;
}

@property(nonatomic) double duration; // @synthesize duration=_duration;
@property(retain, nonatomic) CAMediaTimingFunction *timingFunction; // @synthesize timingFunction=_timingFunction;
@property(copy, nonatomic) NSArray *animations; // @synthesize animations=_animations;
- (id)i_endLocation;
- (id)i_animationWithTransformBlock:(CDUnknownBlockType)arg1;
- (_Bool)i_canProduceAnimation;
- (void)dealloc;

@end

@interface TSDContentLocation : NSObject <NSCopying>
{
    double _viewScale;
    struct CGPoint _unscaledPoint;
}

+ (id)contentLocationInterpolatingFromLocation:(id)arg1 toLocation:(id)arg2 fraction:(double)arg3;
+ (id)contentLocationWithUnscaledPoint:(struct CGPoint)arg1 viewScale:(double)arg2;
+ (id)contentLocation;
@property(nonatomic) double viewScale; // @synthesize viewScale=_viewScale;
@property(nonatomic) struct CGPoint unscaledPoint; // @synthesize unscaledPoint=_unscaledPoint;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface TSDContentPath : NSObject
{
    NSArray *_contentLocations;
}

+ (id)contentPathWithLocations:(id)arg1;
@property(copy, nonatomic) NSArray *contentLocations; // @synthesize contentLocations=_contentLocations;
- (id)i_contentLocations;
- (id)contentLocationAtTime:(double)arg1 withTimingFunction:(id)arg2;
- (void)dealloc;

@end

@interface TSDContentPathAnimation : TSDContentAnimation
{
    NSArray *_contentLocations;
    CAMediaTimingFunction *_timingFunction;
    NSArray *_keyTimes;
    NSArray *_timingFunctions;
    double _duration;
}

@property(nonatomic) double duration; // @synthesize duration=_duration;
@property(copy, nonatomic) NSArray *timingFunctions; // @synthesize timingFunctions=_timingFunctions;
@property(copy, nonatomic) NSArray *keyTimes; // @synthesize keyTimes=_keyTimes;
@property(retain, nonatomic) CAMediaTimingFunction *timingFunction; // @synthesize timingFunction=_timingFunction;
@property(copy, nonatomic) NSArray *contentLocations; // @synthesize contentLocations=_contentLocations;
- (id)i_endLocation;
- (id)i_animationWithTransformBlock:(CDUnknownBlockType)arg1;
- (_Bool)i_canProduceAnimation;
@property(copy, nonatomic) TSDContentPath *contentPath;
- (void)dealloc;

@end

@interface TSDContinuousContentPathAnimation : TSDContentAnimation
{
    CDUnknownBlockType _tick;
    CDUnknownBlockType _isFinished;
}

@property(copy, nonatomic) CDUnknownBlockType isFinished; // @synthesize isFinished=_isFinished;
@property(copy, nonatomic) CDUnknownBlockType tick; // @synthesize tick=_tick;
- (void)i_applyToLayer:(id)arg1 withTransformBlock:(CDUnknownBlockType)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)dealloc;

@end

@interface TSDCurveFitter : NSObject
{
    double mErrorDistance;
    long long mErrorIterations;
}

+ (id)curveFitter;
@property(nonatomic) long long errorIterations; // @synthesize errorIterations=mErrorIterations;
@property(nonatomic) double errorDistance; // @synthesize errorDistance=mErrorDistance;
- (void)fitCurveToPointArray:(CDStruct_c3b9c2ee *)arg1 count:(long long)arg2 bezierCallback:(CDUnknownFunctionPointerType)arg3 context:(void *)arg4;
- (void)fitCurveToPoints:(id)arg1 bezierCallback:(CDUnknownFunctionPointerType)arg2 context:(void *)arg3;
- (id)bezierPathFittingPointArray:(CDStruct_c3b9c2ee *)arg1 count:(long long)arg2;
- (id)bezierPathFittingPoints:(id)arg1;
- (id)init;

@end

@interface TSDCurvedShadow : TSDShadow
{
    double mCurve;
}

+ (id)curvedShadowWithOffset:(double)arg1 angle:(double)arg2 radius:(double)arg3 curve:(double)arg4 opacity:(double)arg5 color:(struct CGColor *)arg6 enabled:(_Bool)arg7;
@property(readonly, nonatomic) double curve; // @synthesize curve=mCurve;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (struct CGImage *)newShadowImageForRep:(id)arg1 withSize:(struct CGSize)arg2 drawSelector:(SEL)arg3 unflipped:(_Bool)arg4;
- (struct CGRect)boundsForRep:(id)arg1;
- (struct CGRect)boundsInNaturalSpaceForRep:(id)arg1;
- (struct CGRect)shadowBoundsForRect:(struct CGRect)arg1 additionalTransform:(struct CGAffineTransform)arg2;
- (_Bool)showForEditingText;
- (_Bool)isEqual:(id)arg1;
- (id)newShadowClampedForSwatches;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (double)offsetFromCurve;
- (double)getVerticalOffset:(struct CGSize)arg1;
- (struct CGPoint)boundsShiftForSize:(struct CGSize)arg1;
- (struct CGRect)expandedBoundsForRect:(struct CGRect)arg1;
- (double)paddingForBlur;
- (unsigned long long)shadowType;
- (double)clampOffset:(double)arg1;
- (id)description;
- (id)initWithOffset:(double)arg1 angle:(double)arg2 radius:(double)arg3 curve:(double)arg4 opacity:(double)arg5 color:(struct CGColor *)arg6 enabled:(_Bool)arg7;

@end

@interface TSDDefaultHint : NSObject <TSDHint, NSCoding>
{
    struct CGRect mBounds;
    unsigned long long mEdges;
}

+ (Class)archivedHintClass;
@property(readonly, nonatomic) unsigned long long edges; // @synthesize edges=mEdges;
@property(readonly, nonatomic) struct CGRect bounds; // @synthesize bounds=mBounds;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)lastChildHint;
- (id)firstChildHint;
- (void)offsetByDelta:(int)arg1;
- (_Bool)overlapsWithSelection:(id)arg1;
- (_Bool)isLastPartitionHorizontally:(_Bool)arg1;
- (id)copyForArchiving;
- (id)initWithBounds:(struct CGRect)arg1 edges:(unsigned long long)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSDDefaultPartitioner : NSObject <TSDPartitioner, TSDCanvasDelegate>
{
    NSObject<TSDInfo> *mInfo;
    TSDCanvas *mCanvas;
    TSDLayout *mLayout;
    TSUPointerKeyDictionary *mMainRepsByCanvas;
    TSUPointerKeyDictionary *mCachedImagesByCanvas;
    TSUPointerKeyDictionary *mPartialRepsByCanvas;
}

- (unsigned long long)p_edgesForHintBounds:(struct CGRect)arg1;
- (id)p_nextHintForSize:(struct CGSize)arg1 previousHint:(id)arg2 horizontally:(_Bool)arg3;
- (id)p_firstHintForSize:(struct CGSize)arg1;
- (void)p_teardownLayouts;
- (void)p_generateLayouts;
- (void)i_unregisterPartialRep:(id)arg1;
- (void)i_registerPartialRep:(id)arg1;
- (void)i_removeCachedImageForCanvas:(id)arg1;
- (void)i_setCachedImage:(struct CGImage *)arg1 forCanvas:(id)arg2;
- (struct CGImage *)i_cachedImageForCanvas:(id)arg1;
- (id)i_repForCanvas:(id)arg1;
- (id)i_layout;
- (id)documentRoot;
- (id)nextLayoutForSize:(struct CGSize)arg1 parentLayout:(id)arg2 previousHint:(id)arg3 horizontally:(_Bool)arg4 outFinished:(out _Bool *)arg5;
- (id)nextHintForSize:(struct CGSize)arg1 parentLayout:(id)arg2 previousHint:(id)arg3 horizontally:(_Bool)arg4 outFinished:(out _Bool *)arg5;
- (id)layoutForHint:(id)arg1 parentLayout:(id)arg2;
- (_Bool)didHint:(id)arg1 syncWithNextHint:(id)arg2 horizontally:(_Bool)arg3 delta:(int)arg4;
- (id)hintForLayout:(id)arg1;
- (void)dealloc;
- (id)initWithInfo:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSDDefaultRenderingObjects : NSObject
{
}

+ (id)p_transposedArrayOfColorFills:(id)arg1;
+ (id)p_frameInspectorDictionary;
+ (double)defaultAssetScaleForFrame:(id)arg1;
+ (id)defaultGrayscaleFillsWithNoFillButton:(_Bool)arg1 forTheme:(id)arg2;
+ (id)defaultGrayscaleTextColorsForTheme:(id)arg1;
+ (id)defaultShadowsForTheme:(id)arg1;
+ (id)defaultFrames;
+ (id)defaultEndpoints;
+ (id)defaultLines;
+ (id)defaultPresetImageStrokesForTheme:(id)arg1;
+ (id)defaultPresetStrokesForShapes;
+ (id)defaultStrokes;
+ (id)defaultBasicStrokes;
+ (id)defaultColorAndGrayscaleFillsForTheme:(id)arg1 withNoFillButton:(_Bool)arg2;
+ (id)defaultColorAndGrayscaleFillsForTheme:(id)arg1;
+ (id)defaultImageFillsForTheme:(id)arg1;
+ (id)defaultGradientFillsForTheme:(id)arg1;
+ (id)defaultColorFillsForTheme:(id)arg1;

@end

@interface TSDDisplayLink : NSObject
{
    CADisplayLink *_displayLink;
    CDUnknownBlockType _tickBlock;
    CDUnknownBlockType _completionBlock;
    double _startTime;
    double _lastTime;
}

@property(nonatomic) double lastTime; // @synthesize lastTime=_lastTime;
@property(nonatomic) double startTime; // @synthesize startTime=_startTime;
@property(copy, nonatomic) CDUnknownBlockType completionBlock; // @synthesize completionBlock=_completionBlock;
@property(copy, nonatomic) CDUnknownBlockType tickBlock; // @synthesize tickBlock=_tickBlock;
- (void)p_handleDisplayLink:(id)arg1;
- (void)teardown;
- (void)start;
- (void)dealloc;

@end

@interface TSDDisplayLinkDispatch : NSObject
{
    TSDDisplayLink *_displayLink;
    NSMutableArray *_blocks;
}

- (void)performBlockNextFrame:(CDUnknownBlockType)arg1;
- (void)teardown;

@end

@interface TSDDoubleSegmentedControlTableViewCell : UITableViewCell
{
    TSKSegmentedControl *mLeftSegmentedControl;
    TSKSegmentedControl *mRightSegmentedControl;
}

@property(readonly, nonatomic) TSKSegmentedControl *rightSegmentedControl; // @synthesize rightSegmentedControl=mRightSegmentedControl;
@property(readonly, nonatomic) TSKSegmentedControl *leftSegmentedControl; // @synthesize leftSegmentedControl=mLeftSegmentedControl;
- (void)layoutSubviews;
- (void)dealloc;
- (id)initWithLeftSegmentedControl:(id)arg1 rightSegmentedControl:(id)arg2;

@end

@interface TSDInsertionContext : NSObject
{
}

+ (id)dragInsertionContextWithPreferredCenter:(struct CGPoint)arg1 required:(_Bool)arg2 shouldEndEditing:(_Bool)arg3 fromDragToInsertController:(_Bool)arg4 insertWillBeDiscarded:(_Bool)arg5;
+ (id)dragInsertionContextWithPreferredCenter:(struct CGPoint)arg1 required:(_Bool)arg2 fromDragToInsertController:(_Bool)arg3 insertWillBeDiscarded:(_Bool)arg4;
+ (id)nonInteractiveFloatingInsertionContext;
+ (id)nonInteractiveInsertionContext;
@property(readonly, nonatomic, getter=isInteractive) _Bool interactive;
@property(readonly, nonatomic) _Bool insertWillBeDiscarded;
@property(readonly, nonatomic) _Bool fromDragToInsertController;
@property(readonly, nonatomic) _Bool insertFromDrag;
@property(readonly, nonatomic) _Bool insertFloating;
@property(readonly, nonatomic) _Bool shouldEndEditing;
@property(readonly, nonatomic) struct CGPoint preferredCenter;
@property(readonly, nonatomic, getter=isPreferredCenterRequired) _Bool preferredCenterRequired;
@property(readonly, nonatomic) _Bool hasPreferredCenter;
- (id)init;

@end

@interface TSDDragInsertionContext : TSDInsertionContext
{
    struct CGPoint mPreferredCenter;
    _Bool mPreferredCenterRequired;
    _Bool mShouldEndEditing;
    _Bool mFromDragToInsertController;
    _Bool mInsertWillBeDiscarded;
}

- (_Bool)insertWillBeDiscarded;
- (_Bool)fromDragToInsertController;
- (_Bool)shouldEndEditing;
- (struct CGPoint)preferredCenter;
- (_Bool)isPreferredCenterRequired;
- (_Bool)isInteractive;
- (_Bool)insertFromDrag;
- (_Bool)insertFloating;
- (_Bool)hasPreferredCenter;
- (id)init;
- (id)initWithPreferredCenter:(struct CGPoint)arg1 required:(_Bool)arg2 shouldEndEditing:(_Bool)arg3 fromDragToInsertController:(_Bool)arg4 insertWillBeDiscarded:(_Bool)arg5;

@end

@interface TSDDrawableEditor : NSObject <TSDEditor>
{
    TSDInteractiveCanvasController *mICC;
    NSSet *mInfos;
    TSDMultiPaneController *mGraphicInspector;
}

+ (id)keyPathsForValuesAffectingLayouts;
+ (_Bool)shouldSuppressMultiselection;
+ (id)keyPathsForValuesAffectingFirstInfo;
+ (id)keyPathsForValuesAffectingInfo;
@property(retain, nonatomic) NSSet *infos; // @synthesize infos=mInfos;
@property(readonly, nonatomic) TSDInteractiveCanvasController *interactiveCanvasController; // @synthesize interactiveCanvasController=mICC;
- (_Bool)canAddOrShowComment;
- (double)pictureFrameAssetScaleForNormalizedWidth:(double)arg1;
- (double)strokeWidthForNormalizedWidth:(double)arg1;
- (id)strokeColorPickerTitle;
- (id)strokeSwatches;
- (void)endChangingStrokeWidth:(id)arg1;
- (void)didChangeStrokeWidth:(id)arg1;
- (void)beginChangingStrokeWidth:(id)arg1;
- (void)setStrokeColor:(id)arg1;
- (id)strokeColor;
- (void)takePatternFromStroke:(id)arg1 withDefaultStroke:(id)arg2;
- (void)setStroke:(id)arg1;
- (id)stroke;
- (void)applyStylePresetWithIndex:(id)arg1;
- (void)setStyleValue:(id)arg1 forStyleProperty:(int)arg2;
- (id)selectedLayoutsSupportingInspectorPositioning;
- (id)selectedLayoutsSupportingFlipping;
- (id)selectedLayoutsSupportingRotation;
- (id)topLevelInspectorAutosaveName;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingSmartShapeAttributes;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingConnectionLineAttributes;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingShrinkTextToFit;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingTextInset;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingResize;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingEndpoints;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingFill;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingOpacity;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingReflection;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingShadow;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingStroke;
- (id)documentRoot;
- (int)canPerformEditorAction:(SEL)arg1 withSender:(id)arg2;
- (int)canPerformAction:(SEL)arg1;
@property(readonly, nonatomic) NSSet *layouts;
@property(readonly, nonatomic) TSDDrawableInfo *firstInfo;
- (id)infosOfClass:(Class)arg1;
@property(readonly, retain, nonatomic) TSDDrawableInfo *info;
- (void)dealloc;
- (id)initWithInteractiveCanvasController:(id)arg1;
- (id)imageForPreset:(id)arg1 size:(struct CGSize)arg2;
- (id)viewControllerForMoreStyleOptions;
- (void)presetSelected:(id)arg1 sender:(id)arg2;
- (id)stylePresetKindForInspector;
- (void)stylePresetInspector:(id)arg1 didSelectPreset:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(retain, nonatomic) TSKSelection *selection;
@property(readonly) Class superclass;

@end

@interface TSDDropShadow : TSDShadow
{
}

- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (struct CGImage *)newShadowImageForRep:(id)arg1 withSize:(struct CGSize)arg2 drawSelector:(SEL)arg3 unflipped:(_Bool)arg4;
- (struct CGRect)boundsForRep:(id)arg1;
- (struct CGRect)boundsInNaturalSpaceForRep:(id)arg1;
- (id)newShadowClampedForSwatches;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)shadowType;
- (id)initWithAngle:(double)arg1 offset:(double)arg2 radius:(double)arg3 opacity:(double)arg4 color:(struct CGColor *)arg5 enabled:(_Bool)arg6;

@end

@interface TSDDynamicOperationController : NSObject
{
    TSDInteractiveCanvasController *mICC;
    _Bool mOperationIsDynamic;
    _Bool mResetGuides;
    _Bool mSupportsAlignmentGuides;
    _Bool mPossibleDynamicOperation;
    NSMutableSet *mReps;
    NSMutableSet *mAllTransformedReps;
    TSDAutoscroll *mAutoscroll;
}

@property(readonly, nonatomic) NSSet *allTransformedReps; // @synthesize allTransformedReps=mAllTransformedReps;
@property(readonly, nonatomic) NSSet *currentlyTransformingReps; // @synthesize currentlyTransformingReps=mReps;
- (void)p_resetGuidesForCleanup:(_Bool)arg1;
- (void)invalidateGuides;
- (void)handleTrackerManipulator:(id)arg1;
- (void)p_controllingTMDidResetInOperation:(id)arg1;
- (void)handleGestureRecognizer:(id)arg1;
- (void)stopTransformingReps:(id)arg1;
- (void)startTransformingReps:(id)arg1;
- (void)p_cleanupOperation;
- (void)cancelOperation;
- (_Bool)isOperationDynamic;
- (_Bool)isInPossibleDynamicOperation;
- (_Bool)isInOperation;
- (void)endOperation;
- (void)p_beginDynamicOperationForReps:(id)arg1;
- (void)beginOperation;
- (void)beginPossibleDynamicOperation;
- (void)dealloc;
- (id)initWithInteractiveCanvasController:(id)arg1;

@end

@interface TSDEditMenuTapGestureRecognizer : UITapGestureRecognizer
{
    TSDRep *mTouchedRep;
    _Bool mIgnoreTargetAction;
}

@property(nonatomic) _Bool ignoreTargetAction; // @synthesize ignoreTargetAction=mIgnoreTargetAction;
- (id)touchedRep;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)reset;

@end

@interface TSDEditableBezierPathSource : TSDPathSource <TSDRealignablePathSource, TSDMixing>
{
    NSMutableArray *mSubpaths;
    unsigned long long mActiveSubpath;
    _Bool mHasLockedFlipTransform;
    struct CGAffineTransform mLockedFlipTransform;
}

+ (id)editableBezierPathSourceWithBezierPath:(id)arg1;
+ (id)editableBezierPathSourceWithPathSource:(id)arg1;
+ (id)editableBezierPathSource;
@property(retain, nonatomic) NSMutableArray *subpaths; // @synthesize subpaths=mSubpaths;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (void)closePath;
- (void)smoothCurveToPoint:(struct CGPoint)arg1 controlPoint1:(struct CGPoint)arg2 controlPoint2:(struct CGPoint)arg3;
- (void)curveToPoint:(struct CGPoint)arg1 controlPoint1:(struct CGPoint)arg2 controlPoint2:(struct CGPoint)arg3;
- (void)lineToPoint:(struct CGPoint)arg1;
- (void)moveToPoint:(struct CGPoint)arg1;
@property(retain, nonatomic) NSArray *nodeTypes;
@property(readonly, nonatomic) struct CGPath *subpathForSelection;
- (void)cutAtSelectedNodes;
- (_Bool)canCutAtSelectedNodes;
- (void)splitSelectedNodes;
- (void)splitSelectedEdges;
- (id)splitEdge:(long long)arg1 at:(double)arg2 fromSubpath:(long long)arg3;
- (void)deleteSelectedEdges;
- (void)closeSelectedNodes;
- (_Bool)canCloseSelectedNodes;
- (void)connectSelectedNodes;
- (_Bool)canConnectSelectedNodes;
- (id)subpathsForConnectingUsingFirstSubpathFirstNode:(_Bool *)arg1 andSecondPathFirstNode:(_Bool *)arg2;
- (void)selectSubpathForNode:(id)arg1 toggle:(_Bool)arg2;
@property(nonatomic, getter=isClosed) _Bool closed;
@property(readonly, nonatomic) _Bool isOpen;
- (void)smoothAllNodes;
- (void)smoothNode:(id)arg1;
- (void)sharpenAllNodes;
- (void)toggleSelectedNodesToType:(int)arg1;
- (void)toggleNode:(id)arg1 toType:(int)arg2 prevNode:(id)arg3 nextNode:(id)arg4;
@property(readonly, nonatomic) struct CGRect nodeBounds;
- (id)insertNodeAtPoint:(struct CGPoint)arg1 tolerance:(double)arg2;
- (_Bool)bezierPathUnderPoint:(struct CGPoint)arg1 withTransform:(struct CGAffineTransform)arg2 tolerance:(double)arg3;
- (double)distanceToPoint:(struct CGPoint)arg1 subpathIndex:(unsigned long long *)arg2 elementIndex:(unsigned long long *)arg3 tValue:(double *)arg4 threshold:(double)arg5;
- (id)bezierNodeUnderPoint:(struct CGPoint)arg1 withTransform:(struct CGAffineTransform)arg2 andTolerance:(double)arg3 returningType:(long long *)arg4;
- (void)deselectAllNodes;
- (void)selectAllNodes;
- (void)deleteSelectedNodes;
- (void)deleteSelectedNodesForced:(_Bool)arg1;
@property(readonly, nonatomic) _Bool deletingSelectedNodesWillDeleteShape;
@property(readonly, nonatomic) _Bool canDeleteSelectedNodes;
@property(readonly, nonatomic) _Bool isCompound;
- (void)removeNode:(id)arg1;
@property(readonly, nonatomic) _Bool allNodesSelected;
@property(readonly, nonatomic) _Bool hasSelectedNode;
- (void)offsetSelectedEdgesByDelta:(struct CGPoint)arg1;
- (void)offsetSelectedNodesByDelta:(struct CGPoint)arg1;
@property(readonly, nonatomic) TSDBezierNode *lastNode;
@property(readonly, nonatomic) TSDBezierNode *firstNode;
- (id)nodeAfterNode:(id)arg1;
- (id)nodePriorToNode:(id)arg1;
- (void)removeLastNode;
- (void)addNode:(id)arg1;
- (void)adjustGeometryForAlignToOrigin:(id)arg1;
- (void)alignToOrigin;
- (void)transformUsingAffineTransform:(struct CGAffineTransform)arg1;
- (void)setNaturalSize:(struct CGSize)arg1;
- (Class)preferredRepClass;
- (struct CGSize)naturalSize;
- (struct CGAffineTransform)pathFlipTransform;
- (void)setLockedFlipTransform:(_Bool)arg1;
- (void)reverseDirection;
@property(retain, nonatomic) NSMutableArray *nodes;
- (void)setBezierPath:(id)arg1;
- (void)convertToHobby;
- (struct CGPath *)pathWithoutFlips;
- (id)bezierPathWithoutFlips;
- (_Bool)isCircular;
- (_Bool)isRectangular;
- (void)dealloc;
@property(readonly, nonatomic) _Bool closeIfEndpointsAreEqual;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
- (id)init;

@end

@interface TSDEditorController : NSObject
{
    TSKDocumentRoot *mDocumentRoot;
    NSMutableArray *mEditorStack;
    NSObject<TSDEditor> *mTextInputEditor;
    unsigned long long mTransactionLevel;
    _Bool mDidChangeTextInputEditor;
    _Bool mDidChangeCurrentEditors;
    _Bool mNotifiedWillChangeTextInputEditor;
    _Bool mNotifiedWillChangeCurrentEditors;
    _Bool mIsReentrantResigningTextInputEditors;
    NSMutableArray *mResignedTextInputEditors;
    NSMutableDictionary *mInspectorPropertyValueMap;
    unsigned long long mChangingCurrentEditorsWhenCommittingInspectorChangesCount;
}

- (void)p_didChangeCurrentEditors;
- (void)p_willChangeCurrentEditors;
- (void)p_willChangeCurrentEditorsWithNewEditors:(id)arg1;
- (void)p_didChangeTextInputEditor;
- (void)p_willChangeTextInputEditor;
- (void)p_setTextInputEditor:(id)arg1;
- (void)editorDidChangeSelectionAndWantsKeyboard:(id)arg1 withSelectionFlags:(unsigned long long)arg2;
- (void)editorSelectionWasForciblyChanged:(id)arg1;
- (void)editorDidChangeSelection:(id)arg1 withSelectionFlags:(unsigned long long)arg2;
- (void)didChangeCurrentEditorsWhenCommittingInspectorChanges;
- (void)willChangeCurrentEditorsWhenCommittingInspectorChanges;
@property(readonly, nonatomic, getter=isChangingCurrentEditorsWhenCommittingInspectorChanges) _Bool changingCurrentEditorsWhenCommittingInspectorChanges;
- (id)objectForInspectorPropertyKey:(id)arg1;
- (void)removeObjectForInspectorPropertyKey:(id)arg1;
- (void)setObject:(id)arg1 forInspectorPropertyKey:(id)arg2;
- (void)popToEditor:(id)arg1;
- (id)mostSpecificEditorConformingToProtocol:(id)arg1;
- (id)currentEditorsConformingToProtocol:(id)arg1;
- (id)mostSpecificCurrentEditorOfClass:(Class)arg1 conformingToProtocol:(id)arg2;
- (id)mostSpecificCurrentEditorOfClass:(Class)arg1;
- (id)currentEditorsOfClass:(Class)arg1;
- (void)enumerateEditorsOnStackUsingBlock:(CDUnknownBlockType)arg1;
- (void)notifyResignedTextInputEditors;
- (void)endTransaction;
- (void)beginTransaction;
- (void)popEditor:(id)arg1 andPushTextInputEditor:(id)arg2;
- (void)popEditor:(id)arg1;
- (void)pushEditor:(id)arg1;
- (_Bool)anyEditorProhibitsAction:(SEL)arg1;
- (id)editorForEditAction:(SEL)arg1 withSender:(id)arg2 response:(int *)arg3;
- (id)editorForEditAction:(SEL)arg1 withSender:(id)arg2;
- (void)setTextInputEditor:(id)arg1;
- (id)textInputEditor;
- (id)currentEditors;
- (void)dealloc;
- (void)teardown;
- (id)initWithDocumentRoot:(id)arg1;
- (id)init;

@end

@interface TSDErrorImageProvider : TSDImageProvider
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)sharedInstance;
+ (id)_singletonAlloc;
- (struct CGPDFDocument *)p_iconPDFDocument;
- (void)drawImageInContext:(struct CGContext *)arg1 rect:(struct CGRect)arg2;
- (_Bool)isError;
- (_Bool)isValid;
- (struct CGSize)naturalSize;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;

@end

@interface TSDExteriorTextWrap : NSObject <NSCopying, NSMutableCopying>
{
    _Bool _isHTMLWrap;
    int _type;
    int _direction;
    int _fitType;
    double _margin;
    double _alphaThreshold;
}

+ (id)exteriorTextWrapWithIsHTMLWrap:(_Bool)arg1 type:(int)arg2 direction:(int)arg3 fitType:(int)arg4 margin:(double)arg5 alphaThreshold:(double)arg6;
+ (id)exteriorTextWrap;
@property(readonly, nonatomic) double alphaThreshold; // @synthesize alphaThreshold=_alphaThreshold;
@property(readonly, nonatomic) double margin; // @synthesize margin=_margin;
@property(readonly, nonatomic) int fitType; // @synthesize fitType=_fitType;
@property(readonly, nonatomic) int direction; // @synthesize direction=_direction;
@property(readonly, nonatomic) int type; // @synthesize type=_type;
@property(readonly, nonatomic) _Bool isHTMLWrap; // @synthesize isHTMLWrap=_isHTMLWrap;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithIsHTMLWrap:(_Bool)arg1 type:(int)arg2 direction:(int)arg3 fitType:(int)arg4 margin:(double)arg5 alphaThreshold:(double)arg6;
- (id)init;

@end

@interface TSDFPSCounter : NSObject
{
    NSMutableArray *_dateArray;
}

- (id)p_getFPSInfo:(_Bool)arg1;
- (void)writeFPSInfoToLog:(id)arg1 identifier:(id)arg2 type:(id)arg3 direction:(id)arg4 duration:(double)arg5 graphing:(_Bool)arg6 slide:(long long)arg7;
- (id)fpsGraphString;
- (id)fpsSummaryString;
- (id)p_fpsSummaryStringIncludingGraph:(_Bool)arg1;
- (void)addFrameAtDrawTime:(double)arg1 duration:(double)arg2;
- (void)addFrameAtDrawTime:(double)arg1;
- (void)addFrame;
- (void)reset;
- (void)dealloc;
- (id)init;

@end

@interface TSDFPSCACounter : TSDFPSCounter
{
    unsigned int mCAFrameCount;
    NSTimer *mTimer;
}

- (void)stopLoggingFPS;
- (void)startLoggingFPS;
- (void)p_updateFrameCount;
- (void)reset;

@end

@interface TSDFrame : TSDStroke
{
    TSDFrameSpec *mSpec;
    NSString *mFrameName;
    double mAssetScale;
    _Bool mScaledSizesValid;
    double mLeftWidth;
    double mRightWidth;
    double mTopHeight;
    double mBottomHeight;
    struct CGSize mAdornmentSize;
}

+ (Class)mutableClass;
@property(readonly, nonatomic) TSDFrameSpec *frameSpec; // @synthesize frameSpec=mSpec;
@property(readonly, nonatomic) double assetScale; // @synthesize assetScale=mAssetScale;
- (struct CGSize)p_minimumRenderedSize;
- (void)drawSwatchInRect:(struct CGRect)arg1 inContext:(struct CGContext *)arg2;
- (void)paintPath:(struct CGPath *)arg1 wantsInteriorStroke:(_Bool)arg2 inContext:(struct CGContext *)arg3 useFastDrawing:(_Bool)arg4;
- (_Bool)drawsInOneStep;
- (_Bool)prefersToApplyToCAShapeLayerDuringManipulation;
- (_Bool)canApplyToCAShapeLayer;
- (_Bool)canApplyDirectlyToRepCALayer;
- (_Bool)isNullStroke;
- (struct _TSDStrokeOutsets)outsets;
- (_Bool)shouldRenderForSizeIncludingCoverage:(struct CGSize)arg1;
- (_Bool)shouldRender;
- (_Bool)supportsLineOptions;
- (_Bool)supportsColor;
- (_Bool)supportsPattern;
- (_Bool)isFrame;
- (struct CGRect)coverageRectWithoutAdornment:(struct CGRect)arg1;
- (struct CGRect)coverageRect:(struct CGRect)arg1;
- (struct CGRect)p_coverageRectWithAdornment:(struct CGRect)arg1;
- (struct CGRect)p_coverageRectWithoutAdornment:(struct CGRect)arg1;
- (_Bool)hasMask;
- (double)minimumAssetScale;
- (id)archivableFrameName;
- (id)frameName;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithFrameName:(id)arg1;
- (id)initWithFrameSpec:(id)arg1;
- (id)initWithFrameSpec:(id)arg1 assetScale:(double)arg2;
- (id)initWithFrameSpec:(id)arg1 assetScale:(double)arg2 archivableFrameName:(id)arg3;
- (id)strokeByTransformingByTransform:(struct CGAffineTransform)arg1;
- (_Bool)i_willRenderForRect:(struct CGRect)arg1;
- (struct CGRect)i_adornmentRectForRect:(struct CGRect)arg1;
- (double)i_bottomHeight;
- (double)i_topHeight;
- (double)i_rightWidth;
- (double)i_leftWidth;

@end

@interface TSDFrameImageCache : NSObject
{
    NSMutableArray *mEntries;
}

+ (id)sharedFrameImageCache;
- (void)p_didReceiveMemoryWarning:(id)arg1;
- (id)p_newEntryForFrame:(id)arg1 size:(struct CGSize)arg2 viewScale:(double)arg3 createIfNeeded:(_Bool)arg4;
- (struct CGImage *)setCachedImage:(struct CGImage *)arg1 forFrame:(id)arg2 size:(struct CGSize)arg3 viewScale:(double)arg4 forCALayer:(_Bool)arg5 mask:(_Bool)arg6;
- (struct CGImage *)newCachedImageForFrame:(id)arg1 size:(struct CGSize)arg2 viewScale:(double)arg3 forCALayer:(_Bool)arg4 mask:(_Bool)arg5;
- (void)dealloc;
- (id)init;
- (void)didCloseDocument;

@end

@interface TSDFrameImageCacheEntry : NSObject
{
    TSDFrameSpec *mFrameSpec;
    double mAssetScale;
    struct CGSize mSize;
    double mViewScale;
    struct CGImage *mImages[4];
}

@property(nonatomic) double viewScale; // @synthesize viewScale=mViewScale;
@property(nonatomic) struct CGSize size; // @synthesize size=mSize;
@property(nonatomic) double assetScale; // @synthesize assetScale=mAssetScale;
@property(nonatomic) TSDFrameSpec *frameSpec; // @synthesize frameSpec=mFrameSpec;
- (void)setImage:(struct CGImage *)arg1 forCALayer:(_Bool)arg2 mask:(_Bool)arg3;
- (struct CGImage *)newImageForCALayer:(_Bool)arg1 mask:(_Bool)arg2;
- (void)dealloc;

@end

@interface TSDFrameRep : NSObject
{
    TSDFrame *mFrame;
    NSArray *mImages;
    NSArray *mMasks;
    TSDBitmapImageProvider *mAdornment;
    CALayer *mMaskLayer;
    _Bool mShouldEnableBlendMode;
}

- (void)p_adjustRepeatingLayer:(id)arg1 withImageRect:(struct CGRect)arg2 start:(double)arg3 end:(double)arg4 vertical:(_Bool)arg5;
- (void)p_setRepeatingLayerWithIndex:(unsigned int)arg1 sublayers:(id)arg2 maskLayers:(id)arg3 toRect:(struct CGRect)arg4 start:(double)arg5 end:(double)arg6;
- (void)p_setUnreplicatedLayerWithIndex:(unsigned int)arg1 sublayers:(id)arg2 maskLayers:(id)arg3 toRect:(struct CGRect)arg4;
- (id)p_createRepeatingLayerWithImage:(struct CGImage *)arg1 vertical:(_Bool)arg2 screenScale:(double)arg3;
- (void)p_addEdgeLayerForIndex:(unsigned int)arg1 toLayer:(id)arg2 maskLayer:(id)arg3;
- (void)p_addUnreplicatedLayerForIndex:(unsigned int)arg1 toLayer:(id)arg2 maskLayer:(id)arg3;
- (void)p_drawTiles:(id)arg1 inContext:(struct CGContext *)arg2 rect:(struct CGRect)arg3 start:(double)arg4 end:(double)arg5 vertical:(_Bool)arg6;
- (void)p_drawFrameIntoRect:(struct CGRect)arg1 inContext:(struct CGContext *)arg2 withImages:(id)arg3 atViewScale:(double)arg4 isMask:(_Bool)arg5;
- (struct CGImage *)p_newRenderedFrameForMask:(_Bool)arg1 size:(struct CGSize)arg2 forCALayer:(_Bool)arg3 viewScale:(double)arg4;
- (struct CGImage *)p_newFrameForMask:(_Bool)arg1 size:(struct CGSize)arg2 forCALayer:(_Bool)arg3 viewScale:(double)arg4;
- (void)updateCALayer:(id)arg1 toRect:(struct CGRect)arg2 withRepLayer:(id)arg3 maskLayer:(id)arg4 viewScale:(double)arg5 maskLayerTransform:(struct CGAffineTransform)arg6;
- (id)applyToCALayer:(id)arg1 withRepLayer:(id)arg2 maskLayer:(id)arg3 viewScale:(double)arg4;
- (void)blendMaskBeforeRenderingImageInContext:(struct CGContext *)arg1;
- (void)applyMaskForRectWithCoverage:(struct CGRect)arg1 toContext:(struct CGContext *)arg2;
- (void)frameRect:(struct CGRect)arg1 inContext:(struct CGContext *)arg2 withTotalScale:(double)arg3;
- (id)frame;
- (void)dealloc;
- (id)initWithTSDFrame:(id)arg1;

@end

@interface TSDFrameSpec : NSObject <NSCopying>
{
    NSBundle *mBundle;
    NSString *mFrameName;
    double mLeftInset;
    double mRightInset;
    double mTopInset;
    double mBottomInset;
    struct CGPoint mAdornmentPosition;
    double mMinimumAssetScale;
    int mTilingMode;
    _Bool mDisplayInPicker;
    _Bool mHasImages;
    _Bool mHasMask;
    _Bool mHasAdornment;
    NSMutableDictionary *mProvidersByKey;
    _Bool mLoadedImageMetrics;
    double mLeftWidth;
    double mRightWidth;
    double mTopHeight;
    double mBottomHeight;
    struct CGSize mAdornmentSize;
    int mInterest;
}

+ (id)p_imageKeys;
+ (id)frameSpecWithName:(id)arg1;
+ (id)frameSpecs;
@property(readonly, nonatomic) _Bool displayInPicker; // @synthesize displayInPicker=mDisplayInPicker;
@property(readonly, copy, nonatomic) NSString *frameName; // @synthesize frameName=mFrameName;
- (void)p_loadImageMetrics;
- (id)p_imageDataForKey:(id)arg1;
- (id)p_infoDictionary;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithBundle:(id)arg1 isVolatile:(_Bool)arg2;
- (int)i_tilingMode;
- (struct CGPoint)i_adornmentPosition;
- (double)i_minimumAssetScale;
- (struct CGSize)i_adornmentSize;
- (double)i_bottomHeight;
- (double)i_topHeight;
- (double)i_rightWidth;
- (double)i_leftWidth;
- (double)i_bottomInset;
- (double)i_topInset;
- (double)i_rightInset;
- (double)i_leftInset;
- (id)i_providerForIndex:(int)arg1 mask:(_Bool)arg2;
- (void)i_removeInterestInProviders;
- (void)i_addInterestInProviders;
- (_Bool)i_hasAdornment;
- (_Bool)i_hasMask;
- (_Bool)i_hasImages;

@end

@interface TSDGLBloomEffect : NSObject
{
    struct CGSize _effectSize;
    struct CGSize _blurBufferSize;
    TSDGLFrameBuffer *_colorFramebuffer;
    TSDGLFrameBuffer *_blurFramebuffer;
    TSDGLDataBuffer *_dataBuffer;
    TSDGLDataBuffer *_blurTransferDataBuffer;
    TSDGLDataBuffer *_blurDataBuffer;
    TSDGLShader *_blurHorizontalShader;
    TSDGLShader *_blurVerticalShader;
    TSDGLShader *_bloomShader;
    TSDGLShader *_fboTransferShader;
    int _oldViewportRect[4];
    _Bool _oldViewportRectInitialized;
}

- (void)drawBloomEffectWithMVPMatrix:(struct CATransform3D)arg1 bloomAmount:(double)arg2 currentGLFramebuffer:(int)arg3;
- (void)p_blurColorBufferWithPreviousFramebuffer:(int)arg1;
- (void)unbindFramebufferAndBindGLFramebuffer:(int)arg1;
- (void)bindFramebuffer;
- (void)p_setupBuffers;
- (void)p_setupShaders;
- (void)teardown;
- (void)dealloc;
- (id)initWithEffectSize:(struct CGSize)arg1 blurScale:(double)arg2;

@end

@interface TSDGLShadow : NSObject
{
}

+ (id)sharedContext;
+ (id)renderQueue;
- (void)createOffscreenRenderBuffer:(struct CGSize)arg1 framebuffer:(id)arg2 requiresDepth:(_Bool)arg3 colorRenderBuffer:(unsigned int *)arg4 depthRenderBuffer:(unsigned int *)arg5;
- (struct CGImage *)newCGImageFromGLBuffer:(char **)arg1;
- (void)setupGLTextureParameters;

@end

@interface TSDGLCurvedShadow : TSDGLShadow
{
    TSDGLFrameBuffer *mAlphaFrameBuffer;
    TSDGLDataBuffer *mAlphaDataBuffer;
    TSDGLShader *mAlphaShader;
    TSDGLFrameBuffer *mCurvedFrameBuffer;
    TSDGLDataBuffer *mCurvedDataBuffer;
    TSDGLShader *mCurvedShader;
    TSDGLFrameBuffer *mCurveInterpolationFrameBuffer;
    TSDGLDataBuffer *mCurveInterpolationDataBuffer;
    TSDGLShader *mCurveInterpolationShader;
    char *mBuffer;
    CIContext *mCIContext;
}

+ (void)applicationDidBecomeActive;
+ (void)applicationWillResignActive;
- (void)releaseShaders;
- (void)p_deleteFramebuffersWithCurrentGLFramebuffer:(int)arg1;
- (void)p_unbindFramebuffersWithCurrentGLFramebuffer:(int)arg1;
- (struct CGImage *)newCGImageWithTexture:(id)arg1 size:(struct CGSize)arg2 shader:(id)arg3 framebuffer:(id)arg4 databuffer:(id)arg5;
- (void)p_bindCurvedInterpolationShaderForShadow:(id)arg1 framebufferSize:(struct CGSize)arg2;
- (void)p_bindCurvedShaderForShadow:(id)arg1 framebufferSize:(struct CGSize)arg2;
- (void)p_bindAlphaShaderForShadow:(id)arg1 framebufferSize:(struct CGSize)arg2;
- (void)p_newBlurredImageFromImage:(struct CGImage *)arg1 blurRadius:(double)arg2 blurredImage:(struct CGImage **)arg3 framebufferSize:(struct CGSize)arg4;
- (void)p_newBlurredImageFromImage:(struct CGImage *)arg1 blurRadius:(double)arg2 halfBlurredImage:(struct CGImage **)arg3 blurredImage:(struct CGImage **)arg4 framebufferSize:(struct CGSize)arg5;
- (void)p_newTintedImage:(struct CGImage **)arg1 fromImage:(struct CGImage *)arg2 withColor:(CDStruct_f2e236b6)arg3 framebufferSize:(struct CGSize)arg4;
- (_Bool)p_shrinkImageIfNecessary:(struct CGImage *)arg1 originalSize:(struct CGSize)arg2 newImage:(struct CGImage **)arg3 newSize:(struct CGSize *)arg4;
- (void)p_setupCIContextForFramebufferSize:(struct CGSize)arg1;
- (void)drawShadow:(id)arg1 forImage:(struct CGImage *)arg2 inContext:(struct CGContext *)arg3 forSize:(struct CGSize)arg4;
- (double)baseBlurRadiusForCurvedShadow:(id)arg1 framebufferSize:(struct CGSize)arg2;
- (void)dealloc;

@end

@interface TSDGLDataArrayBuffer : NSObject <TSDGLDataBufferAccessor>
{
    NSMutableArray *_vertexAttributes;
    unsigned long long mVertexCount;
    unsigned long long _dataTypeSizeInBytes;
    unsigned int _bufferUsage;
    long long *mNeedsUpdateFirstIndex;
    long long *mNeedsUpdateLastIndex;
    char *mGLData;
    _Bool mGLDataBufferHasBeenSetup;
    unsigned int *mGLDataBuffers;
    NSMutableDictionary *mAttributeOffsetsDictionary;
    unsigned long long _GLDataBufferEntrySize;
    unsigned long long _bufferCount;
    unsigned long long _currentBufferIndex;
}

@property(nonatomic) unsigned long long currentBufferIndex; // @synthesize currentBufferIndex=_currentBufferIndex;
@property(readonly, nonatomic) unsigned long long bufferCount; // @synthesize bufferCount=_bufferCount;
@property(readonly, nonatomic) unsigned long long GLDataBufferEntrySize; // @synthesize GLDataBufferEntrySize=_GLDataBufferEntrySize;
@property(readonly, copy) NSString *description;
- (void)setGLPoint4D:(CDStruct_f2e236b6)arg1 forAttribute:(id)arg2 atIndex:(unsigned long long)arg3;
- (CDStruct_f2e236b6)GLPoint4DForAttribute:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)setGLPoint3D:(CDStruct_03942939)arg1 forAttribute:(id)arg2 atIndex:(unsigned long long)arg3;
- (CDStruct_03942939)GLPoint3DForAttribute:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)setGLPoint2D:(CDStruct_6e3f967a)arg1 forAttribute:(id)arg2 atIndex:(unsigned long long)arg3;
- (CDStruct_6e3f967a)GLPoint2DForAttribute:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)setCGFloat:(double)arg1 forAttribute:(id)arg2 atIndex:(unsigned long long)arg3;
- (void)setGLfloat:(float)arg1 forAttribute:(id)arg2 atIndex:(unsigned long long)arg3;
- (float)GLfloatForAttribute:(id)arg1 atIndex:(unsigned long long)arg2;
- (unsigned long long)vertexCount;
@property(readonly, nonatomic) _Bool hasUpdatedData;
- (char *)GLDataPointer;
- (void)swapGLDataBuffers;
- (void)disableVertexAttributeArrayBuffersWithShader:(id)arg1;
- (void)enableVertexAttributeArrayBuffersWithShader:(id)arg1;
- (void)addIndexNeedsUpdate:(long long)arg1;
- (void)addIndexRangeNeedsUpdate:(struct _NSRange)arg1;
- (void)addAllIndexesNeedUpdate;
- (void)dealloc;
- (id)initWithVertexAttributes:(id)arg1 vertexCount:(unsigned long long)arg2 bufferCount:(unsigned long long)arg3;
- (unsigned long long)p_bufferOffsetOfAttribute:(id)arg1 atIndex:(unsigned long long)arg2 component:(unsigned long long)arg3;
- (void)updateDataBufferIfNecessary;
- (void)p_setupGLDataBufferIfNecessary;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSDGLDataBuffer : NSObject <TSDGLDataBufferAccessor>
{
    unsigned long long mCurrentBufferIndex;
    NSMutableArray *mArrayBuffers;
    NSMutableDictionary *mAttributeToArrayBuffersDictionary;
    unsigned long long mElementArrayCount;
    unsigned short *mGLElementData;
    _Bool mGLElementDataBufferWasSetup;
    unsigned int mGLElementDataBuffer;
    struct CGSize mGLElementMeshSize;
    unsigned long long mGLElementQuadParticleCount;
    unsigned int mGLVertexArrayObjects[2];
    _Bool _isUpdatingRawDataBuffer;
    _Bool _didTeardown;
    _Bool _isDoubleBuffered;
    unsigned int _drawMode;
    unsigned long long _vertexCount;
    NSArray *_vertexAttributes;
}

@property(readonly) _Bool isDoubleBuffered; // @synthesize isDoubleBuffered=_isDoubleBuffered;
@property(nonatomic) unsigned int drawMode; // @synthesize drawMode=_drawMode;
@property(readonly) NSArray *vertexAttributes; // @synthesize vertexAttributes=_vertexAttributes;
@property(readonly) unsigned long long vertexCount; // @synthesize vertexCount=_vertexCount;
- (_Bool)p_setAttributeUpdateData:(CDStruct_c6084d62 *)arg1 fromAttribute:(id)arg2;
- (void)updateDataBufferAttributes:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (id)vertexAttributeNamed:(id)arg1;
- (void)setDataForAttribute:(id)arg1 atIndex:(unsigned long long)arg2 fromAttribute:(id)arg3 dataBuffer:(id)arg4 index:(unsigned long long)arg5;
- (void)setGLPoint4D:(CDStruct_f2e236b6)arg1 forAttribute:(id)arg2 atIndex:(unsigned long long)arg3;
- (CDStruct_f2e236b6)GLPoint4DForAttribute:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)setGLPoint3D:(CDStruct_03942939)arg1 forAttribute:(id)arg2 atIndex:(unsigned long long)arg3;
- (CDStruct_03942939)GLPoint3DForAttribute:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)setGLPoint2D:(CDStruct_6e3f967a)arg1 forAttribute:(id)arg2 atIndex:(unsigned long long)arg3;
- (CDStruct_6e3f967a)GLPoint2DForAttribute:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)setCGFloat:(double)arg1 forAttribute:(id)arg2 atIndex:(unsigned long long)arg3;
- (void)setGLfloat:(float)arg1 forAttribute:(id)arg2 atIndex:(unsigned long long)arg3;
- (float)GLfloatForAttribute:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)drawWithShader:(id)arg1 range:(struct _NSRange)arg2;
- (void)drawWithShader:(id)arg1;
- (void)disableElementArrayBuffer;
- (void)enableElementArrayBuffer;
- (void)setGLushort:(unsigned short)arg1 forIndexElement:(unsigned long long)arg2;
- (unsigned short)GLushortForIndexElement:(unsigned long long)arg1;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (void)teardown;
- (id)initWithVertexRect:(struct CGRect)arg1 textureRect:(struct CGRect)arg2 textureFlipped:(_Bool)arg3;
- (id)initWithVertexRect:(struct CGRect)arg1 textureRect:(struct CGRect)arg2;
- (id)initWithVertexRect:(struct CGRect)arg1 textureRect:(struct CGRect)arg2 meshSize:(struct CGSize)arg3;
- (id)initWithVertexRect:(struct CGRect)arg1 textureRect:(struct CGRect)arg2 meshSize:(struct CGSize)arg3 textureFlipped:(_Bool)arg4;
- (id)initWithVertexRect:(struct CGRect)arg1 textureRect:(struct CGRect)arg2 meshSize:(struct CGSize)arg3 textureFlipped:(_Bool)arg4 includeCenterAttribute:(_Bool)arg5;
- (id)initWithVertexAttributes:(id)arg1 quadParticleCount:(unsigned long long)arg2;
- (id)initWithVertexAttributes:(id)arg1 meshSize:(struct CGSize)arg2;
- (id)initWithVertexAttributes:(id)arg1 vertexCount:(unsigned long long)arg2 indexElementCount:(unsigned long long)arg3 doubleBuffered:(_Bool)arg4;
- (void)p_setupGLElementArrayBufferIfNecessary;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSDGLDataBufferAttribute : NSObject
{
    _Bool _isNormalized;
    unsigned int _bufferUsage;
    int _dataType;
    int _componentCount;
    int _locationInShader;
    NSString *_name;
    unsigned long long _bufferOffset;
    TSDGLDataArrayBuffer *_dataArrayBuffer;
    TSDGLDataBuffer *_dataBuffer;
}

+ (id)attributeWithName:(id)arg1 bufferUsage:(unsigned int)arg2 dataType:(int)arg3 normalized:(_Bool)arg4 componentCount:(unsigned long long)arg5;
@property(nonatomic) TSDGLDataBuffer *dataBuffer; // @synthesize dataBuffer=_dataBuffer;
@property(nonatomic) TSDGLDataArrayBuffer *dataArrayBuffer; // @synthesize dataArrayBuffer=_dataArrayBuffer;
@property(nonatomic) unsigned long long bufferOffset; // @synthesize bufferOffset=_bufferOffset;
@property(nonatomic) int locationInShader; // @synthesize locationInShader=_locationInShader;
@property(readonly, nonatomic) _Bool isNormalized; // @synthesize isNormalized=_isNormalized;
@property(readonly, nonatomic) int componentCount; // @synthesize componentCount=_componentCount;
@property(readonly, nonatomic) int dataType; // @synthesize dataType=_dataType;
@property(readonly, nonatomic) unsigned int bufferUsage; // @synthesize bufferUsage=_bufferUsage;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
- (id)description;
- (void)setComponentCount:(int)arg1;
- (void)setBufferUsage:(unsigned int)arg1;
- (void)dealloc;
- (id)initWithName:(id)arg1 bufferUsage:(unsigned int)arg2 dataType:(int)arg3 normalized:(_Bool)arg4 componentCount:(unsigned long long)arg5;

@end

@interface TSDGLEdgeDistanceField : NSObject
{
    unsigned int _inputTexture;
    struct CGSize _textureSize;
    struct CGSize _squareSize;
    TSDGLFrameBufferTextureConfig *_framebufferTextureConfig;
    TSDGLFrameBuffer *_exteriorFramebuffer;
    TSDGLFrameBuffer *_interiorFramebuffer;
    TSDGLDataBuffer *_rectDataBuffer;
    TSDGLDataBuffer *_squareDataBuffer;
    TSDGLShader *_drawShader;
    TSDGLShader *_combineShader;
    TSDGLShader *_seedShader;
    TSDGLShader *_floodShader;
    TSDGLShader *_gradientShader;
    int _oldViewport[4];
}

+ (unsigned int)distanceFieldTextureWithTexture:(unsigned int)arg1 textureSize:(struct CGSize)arg2 maxDistance:(double)arg3;
- (unsigned int)p_gradientTextureFromCombinedTexture:(unsigned int)arg1 withCurrentGLFramebuffer:(int)arg2;
- (unsigned int)p_combinedTextureWithCurrentGLFramebuffer:(int)arg1;
- (void)p_floodTextureInFramebuffer:(id)arg1 maxDistance:(double)arg2;
- (void)p_seedTextureFromTexture:(unsigned int)arg1 invertSeed:(_Bool)arg2;
- (void)p_writeIntoSquareTexture;
- (void)p_setupShaders;
- (void)p_setupBuffers;
- (void)dealloc;
- (id)initWithTexture:(unsigned int)arg1 textureSize:(struct CGSize)arg2;
- (void)teardown;

@end

@interface TSDGLEdgeDistanceFieldMorphEffect : NSObject
{
    _Bool _didTeardown;
    struct CGSize _outgoingTextureSize;
    struct CGSize _incomingTextureSize;
    struct CGRect _outgoingTextBounds;
    struct CGRect _incomingTextBounds;
    struct CGPoint _skewAngleOffsetX;
    _Bool _didSetupSkewAngleOffsetX;
    _Bool _isTextStyleIdenticalExceptSize;
    unsigned int _outgoingTextureName;
    unsigned int _incomingTextureName;
    TSDGLShader *_shader;
}

@property(nonatomic) _Bool isTextStyleIdenticalExceptSize; // @synthesize isTextStyleIdenticalExceptSize=_isTextStyleIdenticalExceptSize;
@property(readonly, nonatomic) TSDGLShader *shader; // @synthesize shader=_shader;
@property(readonly, nonatomic) unsigned int incomingTextureName; // @synthesize incomingTextureName=_incomingTextureName;
@property(readonly, nonatomic) unsigned int outgoingTextureName; // @synthesize outgoingTextureName=_outgoingTextureName;
- (void)setupShaderWithMorphPercent:(double)arg1 MVPMatrix:(struct CATransform3D)arg2 generateTextureMatrices:(_Bool)arg3;
- (void)setupShaderWithMorphPercent:(double)arg1 MVPMatrix:(struct CATransform3D)arg2 outgoingTextureMatrix:(struct CGAffineTransform)arg3 incomingTextureMatrix:(struct CGAffineTransform)arg4;
- (struct CGPoint)textureMatchingSkewAngleOffsetX;
- (struct CGAffineTransform)p_affineTransformConvertingRect:(struct CGRect)arg1 intoRect:(struct CGRect)arg2 atPercent:(double)arg3;
- (struct CGAffineTransform)p_affineTransformWithSkewAngleOffsetX:(struct CGPoint)arg1 textureSize:(struct CGSize)arg2;
- (double)p_errorFromApplyingSkewAngleOffsetX:(struct CGPoint)arg1 toOutgoingScanlines:(double *)arg2 incomingScanlines:(double *)arg3 samples:(unsigned long long)arg4;
- (void)p_fillScanlineLocations:(double *)arg1 samples:(unsigned long long)arg2 fromTexture:(unsigned int)arg3 textureSize:(struct CGSize)arg4;
- (struct CGRect)p_actualPixelBoundsOfTexturedRectangle:(id)arg1;
- (struct CGContext *)newContextFromTexture:(id)arg1;
- (void)teardown;
- (void)dealloc;
- (id)initWithOutgoingTextureName:(unsigned int)arg1 outgoingTextureSize:(struct CGSize)arg2 outgoingTextBounds:(struct CGRect)arg3 outgoingColor:(CDStruct_f2e236b6)arg4 incomingTextureName:(unsigned int)arg5 incomingTextureSize:(struct CGSize)arg6 incomingTextBounds:(struct CGRect)arg7 incomingColor:(CDStruct_f2e236b6)arg8;
- (id)initWithOutgoingTR:(id)arg1 incomingTR:(id)arg2;

@end

@interface TSDGLFrameBuffer : NSObject
{
    NSArray *_textureConfigs;
    NSDictionary *_namesToTextureDict;
    unsigned int *_textures[16];
    unsigned long long _textureCount[16];
    unsigned long long _currentTextureIndex[16];
    unsigned long long _desiredTextureIndex[16];
    unsigned int _framebuffer;
    _Bool _isUsingNonDefaultAttachments;
    _Bool _isBound;
    _Bool _shouldDeleteTexturesOnTeardown;
    NSString *_name;
    struct CGSize _size;
}

+ (void)setCurrentGLFramebuffer:(int)arg1;
+ (int)currentGLFramebuffer;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(nonatomic) _Bool shouldDeleteTexturesOnTeardown; // @synthesize shouldDeleteTexturesOnTeardown=_shouldDeleteTexturesOnTeardown;
@property(readonly, nonatomic) _Bool isBound; // @synthesize isBound=_isBound;
@property(readonly, nonatomic) struct CGSize size; // @synthesize size=_size;
- (unsigned int)currentGLTexture;
- (unsigned int)currentGLTextureAtAttachment:(unsigned int)arg1;
- (void)teardown;
- (unsigned int)GLTextureNamed:(id)arg1;
- (unsigned int)GLTextureAtIndex:(unsigned long long)arg1;
- (unsigned int)GLTextureAtIndex:(unsigned long long)arg1 attachment:(unsigned int)arg2;
- (void)setCurrentTextureToNext;
- (void)setCurrentTextureToNextAtAttachment:(unsigned int)arg1;
- (void)setCurrentTextureNamed:(id)arg1;
- (void)setCurrentTextureIndex:(unsigned long long)arg1;
- (void)setCurrentTextureIndex:(unsigned long long)arg1 atAttachment:(unsigned int)arg2;
- (void)unbindFramebufferAndBindGLFramebuffer:(int)arg1;
- (void)bindFramebuffer;
- (void)setupFramebufferIfNecessary;
- (id)description;
- (void)dealloc;
- (id)initWithSize:(struct CGSize)arg1;
- (id)initWithSize:(struct CGSize)arg1 textureCount:(unsigned long long)arg2;
- (id)initWithSize:(struct CGSize)arg1 textureConfigs:(id)arg2;

@end

@interface TSDGLFrameBufferTextureConfig : NSObject
{
    int _GLInternalFormat;
    unsigned int _GLFormat;
    unsigned int _GLType;
    unsigned int _attachment;
    NSString *_name;
    NSArray *_textureParameters;
    struct CGSize _size;
}

+ (id)textureConfigWithSize:(struct CGSize)arg1 name:(id)arg2;
+ (id)textureConfigWithSize:(struct CGSize)arg1 internalFormat:(int)arg2 format:(unsigned int)arg3 type:(unsigned int)arg4 attachment:(unsigned int)arg5 name:(id)arg6;
@property(retain, nonatomic) NSArray *textureParameters; // @synthesize textureParameters=_textureParameters;
@property(nonatomic) unsigned int attachment; // @synthesize attachment=_attachment;
@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
@property(readonly, nonatomic) unsigned int GLType; // @synthesize GLType=_GLType;
@property(readonly, nonatomic) unsigned int GLFormat; // @synthesize GLFormat=_GLFormat;
@property(readonly, nonatomic) int GLInternalFormat; // @synthesize GLInternalFormat=_GLInternalFormat;
@property(readonly, nonatomic) struct CGSize size; // @synthesize size=_size;
- (void)dealloc;
- (id)initWithSize:(struct CGSize)arg1 internalFormat:(int)arg2 format:(unsigned int)arg3 type:(unsigned int)arg4 attachment:(unsigned int)arg5 name:(id)arg6;

@end

@interface TSDGLFrameBufferTextureLookupInfo : NSObject
{
    unsigned int _attachment;
    unsigned int _name;
    long long _index;
}

+ (id)textureLookupInfoWithAttachment:(unsigned int)arg1 index:(long long)arg2 name:(unsigned int)arg3;
@property(readonly, nonatomic) unsigned int name; // @synthesize name=_name;
@property(readonly, nonatomic) long long index; // @synthesize index=_index;
@property(readonly, nonatomic) unsigned int attachment; // @synthesize attachment=_attachment;
- (id)initWithAttachment:(unsigned int)arg1 index:(long long)arg2 name:(unsigned int)arg3;

@end

@interface TSDGLLayer : CAEAGLLayer
{
    NSObject<TSDGLLayerDelegate> *mDelegate;
    id <TSDGLLayerContext> mContext;
    CADisplayLink *mDisplayLink;
}

@property(nonatomic) NSObject<TSDGLLayerDelegate> *animationDelegate; // @synthesize animationDelegate=mDelegate;
- (void)displayAtCurrentLayerTime;
- (void)unlock;
- (void)lock;
- (void)resumeAnimation;
- (void)pauseAnimation;
- (void)stopAnimation;
- (void)startAnimation;
- (void)setCurrentContext;
- (void)p_drawFrameFromDisplayLink:(id)arg1;
- (void)p_drawFrameAtLayerTime:(double)arg1;
- (void)teardown;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 isOpaque:(_Bool)arg2 delegate:(id)arg3;

@end

@interface TSDGLLayerContext : NSObject <TSDGLLayerContext>
{
    EAGLContext *mContext;
    unsigned int mRenderbuffer;
    unsigned int mFramebuffer;
}

- (void)unlock;
- (void)lock;
- (void)presentRenderbuffer;
- (void)teardown;
- (_Bool)createFramebufferFromLayer:(id)arg1;
- (id)init;
- (_Bool)makeCurrentContext;
- (_Bool)isValid;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSDGLMotionBlurEffect : NSObject
{
    struct CGSize mFramebufferSize;
    struct CGSize mSlideSize;
    long long mDebugDrawMode;
    TSDGLFrameBuffer *mColorFrameBuffer;
    TSDGLShader *mVelocityVisualizerShader;
    TSDGLShader *mVelocityCollectionShader;
    TSDGLFrameBuffer *mVelocityFrameBuffer;
    TSDGLShader *mDefaultTextureShader;
    TSDGLDataBuffer *mVelocityFBODataBuffer;
    TSDGLDataBuffer *mFBODataBuffer;
    TSDGLShader *mBlurHorizontalShader;
    TSDGLShader *mBlurVerticalShader;
    double mDilationDistanceInSlidePercent;
    double mMotionBlurStrength;
    int mBackingWidth;
    int mBackingHeight;
}

@property(nonatomic) long long debugDrawMode; // @synthesize debugDrawMode=mDebugDrawMode;
@property(nonatomic) double motionBlurStrength; // @synthesize motionBlurStrength=mMotionBlurStrength;
@property(nonatomic) double dilationDistanceInSlidePercent; // @synthesize dilationDistanceInSlidePercent=mDilationDistanceInSlidePercent;
- (void)drawResultWithCurrentGLFramebuffer:(int)arg1;
- (void)unbindFramebufferAndBindGLFramebuffer:(int)arg1;
- (void)bindVelocityFramebuffer;
- (void)bindColorFramebuffer;
- (void)updateVelocityScaleInShader:(id)arg1;
- (void)setupMotionBlurEffectIfNecessary;
- (void)dealloc;
- (id)initWithFramebufferSize:(struct CGSize)arg1 slideSize:(struct CGSize)arg2;
- (void)p_updateMaxVelocityInShadersWithScale:(double)arg1;
- (void)p_setupVelocityFramebufferIfNecessary;
- (void)p_setupGLTextureParameters;
- (struct CGSize)p_velocityFramebufferSize;
- (double)p_velocityFramebufferScale;
- (void)p_setupBlurShaders;
- (void)p_dilateVelocityBufferWithCurrentGLFramebuffer:(int)arg1;
@property(readonly, nonatomic) struct CGSize velocityScale;

@end

@interface TSDGLParticleSystem : NSObject
{
    _Bool *_visibilities;
    _Bool _isInitialized;
    _Bool _isDataBufferInitialized;
    unsigned long long _textureCount;
    _Bool _hasParticleTexture;
    _Bool _shouldDraw;
    unsigned long long _particleCount;
    unsigned long long _visibleParticleCount;
    unsigned long long _particlesWide;
    unsigned long long _particlesHigh;
    double _duration;
    unsigned long long _direction;
    TSDGLDataBufferAttribute *_positionAttribute;
    TSDGLDataBufferAttribute *_centerAttribute;
    TSDGLDataBufferAttribute *_texCoordAttribute;
    TSDGLDataBufferAttribute *_particleTexCoordAttribute;
    TSDGLDataBufferAttribute *_colorAttribute;
    TSDGLDataBufferAttribute *_lifeSpanAttribute;
    TSDGLDataBufferAttribute *_speedAttribute;
    TSDGLDataBufferAttribute *_rotationAttribute;
    TSDGLDataBufferAttribute *_scaleAttribute;
    TSDGLDataBuffer *_dataBuffer;
    TSDGLShader *_shader;
    struct CGSize _particleSize;
    struct CGSize _objectSize;
    struct CGSize _slideSize;
}

+ (_Bool)useGLSL;
+ (_Bool)willOverrideVisibilities;
+ (_Bool)shouldDrawInvisibleParticles;
+ (_Bool)willOverrideColors;
+ (_Bool)willOverrideStartingPoints;
+ (_Bool)willOverrideGeometry;
+ (unsigned long long)numberOfVerticesPerParticle;
+ (id)newDataBufferAttributeWithName:(id)arg1;
@property(readonly, nonatomic) _Bool shouldDraw; // @synthesize shouldDraw=_shouldDraw;
@property(readonly, nonatomic) TSDGLShader *shader; // @synthesize shader=_shader;
@property(readonly, nonatomic) TSDGLDataBuffer *dataBuffer; // @synthesize dataBuffer=_dataBuffer;
@property(readonly, nonatomic) TSDGLDataBufferAttribute *scaleAttribute; // @synthesize scaleAttribute=_scaleAttribute;
@property(readonly, nonatomic) TSDGLDataBufferAttribute *rotationAttribute; // @synthesize rotationAttribute=_rotationAttribute;
@property(readonly, nonatomic) TSDGLDataBufferAttribute *speedAttribute; // @synthesize speedAttribute=_speedAttribute;
@property(readonly, nonatomic) TSDGLDataBufferAttribute *lifeSpanAttribute; // @synthesize lifeSpanAttribute=_lifeSpanAttribute;
@property(readonly, nonatomic) TSDGLDataBufferAttribute *colorAttribute; // @synthesize colorAttribute=_colorAttribute;
@property(readonly, nonatomic) TSDGLDataBufferAttribute *particleTexCoordAttribute; // @synthesize particleTexCoordAttribute=_particleTexCoordAttribute;
@property(readonly, nonatomic) TSDGLDataBufferAttribute *texCoordAttribute; // @synthesize texCoordAttribute=_texCoordAttribute;
@property(readonly, nonatomic) TSDGLDataBufferAttribute *centerAttribute; // @synthesize centerAttribute=_centerAttribute;
@property(readonly, nonatomic) TSDGLDataBufferAttribute *positionAttribute; // @synthesize positionAttribute=_positionAttribute;
@property(readonly, nonatomic) unsigned long long direction; // @synthesize direction=_direction;
@property(readonly, nonatomic) double duration; // @synthesize duration=_duration;
@property(readonly, nonatomic) struct CGSize slideSize; // @synthesize slideSize=_slideSize;
@property(readonly, nonatomic) struct CGSize objectSize; // @synthesize objectSize=_objectSize;
@property(readonly, nonatomic) struct CGSize particleSize; // @synthesize particleSize=_particleSize;
@property(readonly, nonatomic) unsigned long long particlesHigh; // @synthesize particlesHigh=_particlesHigh;
@property(readonly, nonatomic) unsigned long long particlesWide; // @synthesize particlesWide=_particlesWide;
@property(readonly, nonatomic) unsigned long long visibleParticleCount; // @synthesize visibleParticleCount=_visibleParticleCount;
@property(readonly, nonatomic) unsigned long long particleCount; // @synthesize particleCount=_particleCount;
- (void)drawGLSLWithPercent:(double)arg1 opacity:(double)arg2;
- (void)setupGLSL;
- (_Bool)visibilityAtIndexPoint:(struct CGPoint)arg1;
- (CDStruct_f2e236b6)colorAtIndexPoint:(struct CGPoint)arg1;
- (CDStruct_6e3f967a)lifeSpanAtIndexPoint:(struct CGPoint)arg1;
- (double)scaleAtIndexPoint:(struct CGPoint)arg1;
- (double)rotationMax;
- (CDStruct_03942939)rotationAtIndexPoint:(struct CGPoint)arg1;
- (double)speedMax;
- (CDStruct_03942939)speedAtIndexPoint:(struct CGPoint)arg1;
- (struct CGPoint)startingPointAtIndexPoint:(struct CGPoint)arg1;
- (CDStruct_6e3f967a)centerAtIndexPoint:(struct CGPoint)arg1;
- (CDStruct_6e3f967a)vertexPositionAtVertexIndex:(unsigned long long)arg1 particleIndexPoint:(struct CGPoint)arg2;
- (struct CGContext *)newContextFromTexture:(id)arg1;
@property(readonly, nonatomic) NSArray *dataBufferAttributes;
- (struct CGPoint)indexPointFromIndex:(unsigned long long)arg1;
- (unsigned long long)indexFromPoint:(struct CGPoint)arg1;
- (id)description;
- (void)setupWithTexture:(id)arg1 particleTextureSize:(struct CGSize)arg2 reverseDrawOrder:(_Bool)arg3;
- (void)dealloc;
- (id)initWithNumberOfParticles:(unsigned long long)arg1 objectSize:(struct CGSize)arg2 slideSize:(struct CGSize)arg3 duration:(double)arg4 direction:(unsigned long long)arg5 shader:(id)arg6;
- (id)initWithParticleSize:(struct CGSize)arg1 particleSystemSize:(struct CGSize)arg2 objectSize:(struct CGSize)arg3 slideSize:(struct CGSize)arg4 duration:(double)arg5 direction:(unsigned long long)arg6 shader:(id)arg7;
- (void)p_logParticleInformation;
- (struct CGSize)p_particleSystemSizeWithRequestedNumber:(unsigned long long)arg1 objectSize:(struct CGSize)arg2;
- (void)p_reverseParticleDataDrawOrder;
- (void)p_setupVertexData;
- (void)p_setupParticleDataWithTexture:(id)arg1;
- (void)p_setupDataBufferWithParticleCount:(unsigned long long)arg1 visibleParticleCount:(unsigned long long)arg2;
- (void)p_setDataBufferAttribute:(id *)arg1 withName:(id)arg2 defaultDataType:(int)arg3 normalized:(_Bool)arg4 componentCount:(unsigned long long)arg5;

@end

@interface TSDGLShader : NSObject
{
    NSMutableDictionary *_uniforms;
    NSMutableSet *_uniformsNeedingUpdate;
    NSMutableDictionary *_attributeLocations;
    _Bool _isActive;
    unsigned int _programObject;
    NSString *_name;
}

+ (id)defaultVelocityVisualizerFragmentShaderString;
@property(readonly, nonatomic) _Bool isActive; // @synthesize isActive=_isActive;
@property(readonly, nonatomic) unsigned int programObject; // @synthesize programObject=_programObject;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
- (_Bool)validateUniforms;
- (void)deactivate;
- (void)activate;
- (void)p_setQualifiersIfNecessary;
- (int)locationForAttribute:(id)arg1;
- (int)locationForUniform:(id)arg1;
- (void)setMat4WithTransform3D:(struct CATransform3D)arg1 forUniform:(id)arg2;
- (void)setMat4WithTransform3D:(struct CATransform3D)arg1 forShaderQualifier:(id)arg2;
- (void)setMat3WithAffineTransform:(struct CGAffineTransform)arg1 forUniform:(id)arg2;
- (void)setMat3WithAffineTransform:(struct CGAffineTransform)arg1 forShaderQualifier:(id)arg2;
- (void)setColor:(CDStruct_f2e236b6)arg1 forUniform:(id)arg2;
- (void)setColor:(CDStruct_f2e236b6)arg1 forShaderQualifier:(id)arg2;
- (void)setPoint4D:(CDStruct_f2e236b6)arg1 forUniform:(id)arg2;
- (void)setPoint4D:(CDStruct_f2e236b6)arg1 forShaderQualifier:(id)arg2;
- (void)setPoint3D:(CDStruct_03942939)arg1 forUniform:(id)arg2;
- (void)setPoint3D:(CDStruct_03942939)arg1 forShaderQualifier:(id)arg2;
- (void)setLifeSpan:(CDStruct_6e3f967a)arg1 forUniform:(id)arg2;
- (void)setLifeSpan:(CDStruct_6e3f967a)arg1 forShaderQualifier:(id)arg2;
- (void)setPoint2D:(CDStruct_6e3f967a)arg1 forUniform:(id)arg2;
- (void)setPoint2D:(CDStruct_6e3f967a)arg1 forShaderQualifier:(id)arg2;
- (void)setCGFloat:(double)arg1 forUniform:(id)arg2;
- (void)setCGFloat:(double)arg1 forShaderQualifier:(id)arg2;
- (void)setGLFloat:(float)arg1 forUniform:(id)arg2;
- (void)setGLFloat:(float)arg1 forShaderQualifier:(id)arg2;
- (void)setInteger:(long long)arg1 forUniform:(id)arg2;
- (void)setGLint:(int)arg1 forUniform:(id)arg2;
- (void)setInteger:(long long)arg1 forShaderQualifier:(id)arg2;
- (void)setGLint:(int)arg1 forShaderQualifier:(id)arg2;
- (id)p_qualifierForUniform:(id)arg1 class:(Class)arg2;
- (id)shaderQualifierForUniform:(id)arg1 type:(long long)arg2;
- (_Bool)loadVertexShader:(id)arg1 fragmentShader:(id)arg2 defines:(id)arg3;
- (_Bool)p_compileShader:(unsigned int *)arg1 withType:(unsigned int)arg2 shaderString:(id)arg3 defines:(id)arg4;
- (id)description;
- (void)dealloc;
- (void)teardown;
- (id)initWithVertexShader:(id)arg1 fragmentShader:(id)arg2 uniforms:(id)arg3 attributes:(id)arg4 defines:(id)arg5;
- (id)initWithVertexShader:(id)arg1 fragmentShader:(id)arg2;
- (id)initWithVertexShaderFileName:(id)arg1 fragmentShaderFileName:(id)arg2 bundle:(id)arg3 uniforms:(id)arg4 attributes:(id)arg5 defines:(id)arg6;
- (id)p_contentsOfShader:(id)arg1 extension:(id)arg2 bundle:(id)arg3;
- (id)initWithShaderFileName:(id)arg1 bundle:(id)arg2 uniforms:(id)arg3 attributes:(id)arg4 defines:(id)arg5;
- (id)initWithShaderFileName:(id)arg1 bundle:(id)arg2;
- (id)initWithDefaultUniformMotionBlurShader;
- (id)initWithDefaultHorizontalBlurShader;
- (id)initWithDefaultVerticalBlurShader;
- (id)initWithDefaultVelocityVisualizerShader;
- (id)initWithDefaultVelocityCollectionShader;
- (id)initWithDefaultVelocityMeshShader;
- (id)initWithDefaultVelocityShader;
- (id)initWithDefaultRandomColorTextureShader;
- (id)initWithDefaultRandomColorShader;
- (id)initWithDefaultTextureAndOpacityShader;
- (id)initWithDefaultTextureCoordinatesShader;
- (id)initWithDefaultTextureShader;

@end

@interface TSDGLShaderQualifier : NSObject
{
    int _uniformLocation;
    _Bool _needsUpdate;
    NSString *_name;
}

@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
@property(nonatomic) int uniformLocation; // @synthesize uniformLocation=_uniformLocation;
@property(readonly, nonatomic) _Bool needsUpdate; // @synthesize needsUpdate=_needsUpdate;
- (void)updateUniformLocationWithShaderProgramObject:(int)arg1;
- (void)setGLUniformCheckWithShader:(id)arg1;
- (void)setGLUniformWithShader:(id)arg1;
- (void)dealloc;
- (id)initWithName:(id)arg1;

@end

@interface TSDGLShaderQualifierFloat : TSDGLShaderQualifier
{
    float _GLfloatValue;
    float _proposedGLfloatValue;
}

@property(nonatomic) float proposedGLfloatValue; // @synthesize proposedGLfloatValue=_proposedGLfloatValue;
@property(readonly, nonatomic) float GLfloatValue; // @synthesize GLfloatValue=_GLfloatValue;
- (id)description;
- (void)setGLUniformWithShader:(id)arg1;

@end

@interface TSDGLShaderQualifierInt : TSDGLShaderQualifier
{
    int _GLintValue;
    int _proposedGLintValue;
}

@property(nonatomic) int proposedGLintValue; // @synthesize proposedGLintValue=_proposedGLintValue;
@property(readonly, nonatomic) int GLintValue; // @synthesize GLintValue=_GLintValue;
- (id)description;
- (void)setGLUniformWithShader:(id)arg1;

@end

@interface TSDGLShaderQualifierMat3 : TSDGLShaderQualifier
{
    struct CGAffineTransform _affineTransform;
    struct CGAffineTransform _proposedAffineTransform;
}

@property(nonatomic) struct CGAffineTransform proposedAffineTransform; // @synthesize proposedAffineTransform=_proposedAffineTransform;
@property(readonly, nonatomic) struct CGAffineTransform affineTransform; // @synthesize affineTransform=_affineTransform;
- (id)description;
- (void)setGLUniformWithShader:(id)arg1;
- (id)initWithAffineTransform:(struct CGAffineTransform)arg1;

@end

@interface TSDGLShaderQualifierMat4 : TSDGLShaderQualifier
{
    struct CATransform3D _transform3D;
    struct CATransform3D _proposedTransform3D;
}

@property(nonatomic) struct CATransform3D proposedTransform3D; // @synthesize proposedTransform3D=_proposedTransform3D;
@property(readonly, nonatomic) struct CATransform3D transform3D; // @synthesize transform3D=_transform3D;
- (id)description;
- (void)setGLUniformWithShader:(id)arg1;
- (id)initWithTransform3D:(struct CATransform3D)arg1;

@end

@interface TSDGLShaderQualifierPoint2D : TSDGLShaderQualifier
{
    CDStruct_6e3f967a _GLPoint2DValue;
    CDStruct_6e3f967a _proposedGLPoint2DValue;
}

@property(nonatomic) CDStruct_6e3f967a proposedGLPoint2DValue; // @synthesize proposedGLPoint2DValue=_proposedGLPoint2DValue;
@property(readonly, nonatomic) CDStruct_6e3f967a GLPoint2DValue; // @synthesize GLPoint2DValue=_GLPoint2DValue;
- (id)description;
- (void)setGLUniformWithShader:(id)arg1;

@end

@interface TSDGLShaderQualifierPoint3D : TSDGLShaderQualifier
{
    CDStruct_03942939 _GLPoint3DValue;
    CDStruct_03942939 _proposedGLPoint3DValue;
}

@property(nonatomic) CDStruct_03942939 proposedGLPoint3DValue; // @synthesize proposedGLPoint3DValue=_proposedGLPoint3DValue;
@property(readonly, nonatomic) CDStruct_03942939 GLPoint3DValue; // @synthesize GLPoint3DValue=_GLPoint3DValue;
- (id)description;
- (void)setGLUniformWithShader:(id)arg1;

@end

@interface TSDGLShaderQualifierPoint4D : TSDGLShaderQualifier
{
    CDStruct_f2e236b6 _GLPoint4DValue;
    CDStruct_f2e236b6 _proposedGLPoint4DValue;
}

@property(nonatomic) CDStruct_f2e236b6 proposedGLPoint4DValue; // @synthesize proposedGLPoint4DValue=_proposedGLPoint4DValue;
@property(readonly, nonatomic) CDStruct_f2e236b6 GLPoint4DValue; // @synthesize GLPoint4DValue=_GLPoint4DValue;
- (id)description;
- (void)setGLUniformWithShader:(id)arg1;

@end

@interface TSDGLTextureInfo : NSObject
{
    _Bool _containsMipmaps;
    unsigned int _name;
    unsigned int _target;
    unsigned int _height;
    unsigned int _width;
}

@property(readonly, nonatomic) unsigned int width; // @synthesize width=_width;
@property(readonly, nonatomic) unsigned int height; // @synthesize height=_height;
@property(readonly, nonatomic) unsigned int target; // @synthesize target=_target;
@property(readonly, nonatomic) _Bool containsMipmaps; // @synthesize containsMipmaps=_containsMipmaps;
@property(readonly, nonatomic) unsigned int name; // @synthesize name=_name;
- (void)teardown;
- (id)initWithName:(unsigned int)arg1 target:(unsigned int)arg2 width:(unsigned int)arg3 height:(unsigned int)arg4 containsMipmaps:(_Bool)arg5;

@end

@interface TSDGLTextureLoader : NSObject
{
}

+ (id)textureWithContentsOfFile:(id)arg1 generateMipmaps:(_Bool)arg2 error:(id *)arg3;
+ (id)textureWithCGImage:(struct CGImage *)arg1 generateMipmaps:(_Bool)arg2 error:(id *)arg3;
+ (id)p_textureInfoFromCGImage:(struct CGImage *)arg1 generateMipmaps:(_Bool)arg2;

@end

@interface TSDGLTextureParameter : NSObject
{
    unsigned int _pname;
    unsigned long long _paramCount;
    int *_intData;
    float *_floatData;
}

+ (id)textureParameterWithPName:(unsigned int)arg1 floatParameters:(float *)arg2 count:(unsigned long long)arg3;
+ (id)textureParameterWithPName:(unsigned int)arg1 floatParameter:(float)arg2;
+ (id)textureParameterWithPName:(unsigned int)arg1 integerParameters:(int *)arg2 count:(unsigned long long)arg3;
+ (id)textureParameterWithPName:(unsigned int)arg1 integerParameter:(int)arg2;
+ (id)stringWithCurrentTextureParameters;
- (void)setGLTextureParameter;
- (void)dealloc;
- (id)initWithPName:(unsigned int)arg1 paramCount:(unsigned long long)arg2 intData:(int *)arg3 floatData:(float *)arg4;

@end

@interface TSDGLVoronoiTriangleData : NSObject
{
    unsigned long long *_triangleIndexToCellIndexMappingTable;
    unsigned long long *_triangleIndexToCellTriangleIndexMappingTable;
    unsigned long long _triangleIndexToCellMappingTableCount;
    unsigned long long _triangleCount;
    NSArray *_cells;
    struct CGRect _bounds;
}

@property(readonly, nonatomic) struct CGRect bounds; // @synthesize bounds=_bounds;
@property(readonly, nonatomic) NSArray *cells; // @synthesize cells=_cells;
@property(readonly, nonatomic) unsigned long long triangleCount; // @synthesize triangleCount=_triangleCount;
- (unsigned long long)triangleIndexInCellFromGlobalTriangleIndex:(unsigned long long)arg1;
- (unsigned long long)cellIndexFromTriangleIndex:(unsigned long long)arg1;
- (id)cellFromTriangleIndex:(unsigned long long)arg1;
@property(readonly, nonatomic) unsigned long long cellCount;
- (void)dealloc;
- (id)initWithPoints:(unsigned long long)arg1 clippedToRect:(struct CGRect)arg2 percentOfCellsToSplit:(double)arg3;
- (void)p_setupDataWithPointCount:(unsigned long long)arg1 clippedToRect:(struct CGRect)arg2 percentOfCellsToSplit:(double)arg3;

@end

@interface TSDGLVoronoiTriangleDataCell : NSObject
{
    unsigned long long _triangleCount;
    unsigned long long _vertexCount;
    CDStruct_6e3f967a *_vertexData;
    CDStruct_6e3f967a _centerPoint;
    struct CGRect _bounds;
}

@property(readonly, nonatomic) struct CGRect bounds; // @synthesize bounds=_bounds;
@property(readonly, nonatomic) CDStruct_6e3f967a centerPoint; // @synthesize centerPoint=_centerPoint;
@property(readonly, nonatomic) CDStruct_6e3f967a *vertexData; // @synthesize vertexData=_vertexData;
@property(readonly, nonatomic) unsigned long long vertexCount; // @synthesize vertexCount=_vertexCount;
@property(readonly, nonatomic) unsigned long long triangleCount; // @synthesize triangleCount=_triangleCount;
- (void)dealloc;
- (id)initWithTrianglePoints:(CDStruct_6e3f967a *)arg1;
- (id)initWithEdges:(vector_5a9f1b73)arg1;
- (id)cellsBySplittingCellIntoTriangles;
- (void)p_setupTriangleDataWithEdges:(vector_5a9f1b73)arg1;

@end

@interface TSDGestureDispatcher : NSObject <TSDGestureDelegate>
{
    TSDInteractiveCanvasController *_interactiveCanvasController;
    NSMutableArray *_simultaneitySets;
    TSUNoCopyDictionary *_priorityMap;
    _Bool _runningTargetHandleGesture;
    NSMutableArray *_gesturesInFlight;
    NSMutableArray *_targetsInFlight;
    _Bool _gestureDidFire;
}

@property(nonatomic) TSDInteractiveCanvasController *interactiveCanvasController; // @synthesize interactiveCanvasController=_interactiveCanvasController;
- (void)p_gestureNoLongerInFlight:(id)arg1;
- (void)didReset:(id)arg1;
- (void)gestureRemovedFromView:(id)arg1;
- (_Bool)gestureActionShouldBegin:(id)arg1;
- (id)p_getGestureTarget:(id)arg1;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;
- (void)prioritizeRecognizer:(id)arg1 overRecognizer:(id)arg2;
- (void)allowSimultaneousRecognitionByRecognizers:(id)arg1;
- (_Bool)handleGesture:(id)arg1 withTarget:(id)arg2;
- (void)handleGesture:(id)arg1;
- (void)teardown;
- (void)dealloc;
- (id)initWithInteractiveCanvasController:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSDGradientStop : NSObject <TSDMixing, NSCopying, NSMutableCopying>
{
    TSUColor *mColor;
    double mFraction;
    double mInflection;
}

+ (id)gradientStopWithColor:(id)arg1 fraction:(double)arg2 inflection:(double)arg3;
+ (id)gradientStopWithColor:(id)arg1 fraction:(double)arg2;
@property(readonly, nonatomic) double inflection; // @synthesize inflection=mInflection;
@property(readonly, nonatomic) double fraction; // @synthesize fraction=mFraction;
@property(readonly, copy, nonatomic) TSUColor *color; // @synthesize color=mColor;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (id)gradientStopWithInflection:(double)arg1;
- (id)gradientStopWithColor:(id)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)p_setInflection:(double)arg1;
- (void)p_setFraction:(double)arg1;
- (void)p_setColor:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)description;
- (void)dealloc;
- (id)initWithGradientStop:(id)arg1;
- (id)initWithColor:(id)arg1 fraction:(double)arg2 inflection:(double)arg3;
- (id)initWithColor:(id)arg1 fraction:(double)arg2;

@end

@interface TSDGroupInfo : TSDDrawableInfo <TSDMutableContainerInfo, TSDMixing, TSKDocumentObject, TSDSelectionStatisticsContributor>
{
    NSMutableArray *mChildInfos;
    _Bool mIsInDocument;
}

+ (id)p_drawablesToInsertForGroup:(id)arg1 filteredWithTarget:(id)arg2 action:(SEL)arg3 didUngroup:(_Bool *)arg4;
+ (id)drawablesToInsertForGroup:(id)arg1 filteredWithTarget:(id)arg2 action:(SEL)arg3;
+ (id)groupGeometryFromChildrenInfos:(id)arg1;
- (void)processSelectedStoragesWithStatisticsController:(id)arg1;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (void)adoptStylesheet:(id)arg1 withMapper:(id)arg2;
- (void)wasRemovedFromDocumentRoot:(id)arg1;
- (void)willBeRemovedFromDocumentRoot:(id)arg1;
- (void)wasAddedToDocumentRoot:(id)arg1 context:(id)arg2;
- (void)willBeAddedToDocumentRoot:(id)arg1 context:(id)arg2;
- (void)acceptVisitor:(id)arg1;
- (id)childEnumerator;
- (void)didCopy;
- (void)willCopyWithOtherDrawables:(id)arg1;
- (void)ensureGeometryFitsChildren;
- (void)replaceChildInfo:(id)arg1 with:(id)arg2;
- (void)removeChildInfo:(id)arg1;
- (void)makeChildGeometriesRelativeAndComputeOwnAbsoluteGeometry;
- (id)ungroupedGeometryForChildInfo:(id)arg1;
- (id)groupedGeometryForChildInfo:(id)arg1;
- (void)removeAllChildrenInDocument:(_Bool)arg1;
- (void)moveChildren:(id)arg1 toIndexes:(id)arg2;
- (void)insertChildInfo:(id)arg1 above:(id)arg2;
- (void)insertChildInfo:(id)arg1 below:(id)arg2;
- (void)insertChildInfo:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)addChildInfo:(id)arg1;
- (void)setChildInfos:(id)arg1;
- (id)childInfos;
- (id)allNestedChildrenInfosIncludingGroups;
- (id)onlyChild;
- (id)allNestedChildrenInfos;
- (id)copyWithContext:(id)arg1;
- (Class)repClass;
- (Class)layoutClass;
@property(copy, nonatomic) TSDInfoGeometry *geometry;
- (_Bool)aspectRatioLocked;
- (_Bool)canAspectRatioLockBeChangedByUser;
- (void)dealloc;

// Remaining properties
@property(readonly, nonatomic, getter=isAnchoredToText) _Bool anchoredToText; // @dynamic anchoredToText;
@property(readonly, nonatomic, getter=isAttachedToBodyText) _Bool attachedToBodyText;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic, getter=isFloatingAboveText) _Bool floatingAboveText; // @dynamic floatingAboveText;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic, getter=isInlineWithText) _Bool inlineWithText; // @dynamic inlineWithText;
@property(nonatomic) _Bool matchesObjectPlaceholderGeometry;
@property(nonatomic) TSPObject<TSDOwningAttachment> *owningAttachment; // @dynamic owningAttachment;
@property(readonly, nonatomic) TSPObject<TSDOwningAttachment> *owningAttachmentNoRecurse; // @dynamic owningAttachmentNoRecurse;
@property(nonatomic) NSObject<TSDContainerInfo> *parentInfo; // @dynamic parentInfo;
@property(readonly) Class superclass;

@end

@interface TSDGroupLayout : TSDContainerLayout <TSDWrappableParent>
{
    TSDLayoutGeometry *mDynamicLayoutGeometry;
    struct CGRect mBoundsForStandardKnobs;
    TSDBezierPath *mCachedWrapPath;
    TSDBezierPath *mCachedExternalWrapPath;
}

- (void)p_invalidateDescendentWrapPaths;
- (void)p_invalidateParentForWrap;
- (void)p_destroyDynamicCopies;
- (void)setDynamicGeometry:(id)arg1;
- (void)p_createDynamicCopies;
@property(readonly, nonatomic) int wrapContainerMode;
- (id)descendentWrappables;
- (void)wrappableChildInvalidated;
- (id)i_externalWrapPath;
- (id)i_wrapPath;
- (id)i_computeWrapPath;
- (id)p_childWrapPathsFrom:(id)arg1;
- (_Bool)supportsFlipping;
- (_Bool)canFlip;
- (_Bool)supportsRotation;
- (_Bool)supportsParentRotation;
- (_Bool)allowsConnections;
- (id)layoutsForProvidingGuidesForChildLayouts;
- (_Bool)providesGuidesForChildLayouts;
- (void)setGeometry:(id)arg1;
- (void)dragBy:(struct CGPoint)arg1;
- (void)invalidateExteriorWrap;
- (void)invalidate;
- (void)endDynamicOperation;
- (struct CGSize)minimumSize;
- (_Bool)resizeMayChangeAspectRatio;
- (_Bool)canAspectRatioLockBeChangedByUser;
- (void)takeRotationFromTracker:(id)arg1;
- (id)computeInfoGeometryDuringResize;
- (void)beginDynamicOperation;
- (struct CGRect)rectForPresentingAnnotationPopoverForSelection:(id)arg1;
- (struct CGRect)alignmentFrame;
- (struct CGRect)boundsForStandardKnobs;
- (void)processChangedProperty:(int)arg1;
- (id)computeLayoutGeometry;
- (id)additionalDependenciesForChildLayout:(id)arg1;
- (id)reliedOnLayouts;
- (id)layoutGeometryFromInfo;
- (id)visibleGeometries;
- (void)dealloc;

@end

@interface TSDGroupRep : TSDContainerRep <TSDMagicMoveMatching>
{
}

+ (double)magicMoveAttributeMatchPercentBetweenOutgoingObject:(id)arg1 incomingObject:(id)arg2;
- (_Bool)handleDoubleTapAtPoint:(struct CGPoint)arg1;
- (_Bool)handleSingleTapAtPoint:(struct CGPoint)arg1;
- (_Bool)wantsToHandleTapsWhenLocked;
- (id)allRepsContainedInGroup;
- (void)setNeedsDisplay;
- (void)processChangedProperty:(int)arg1;
- (_Bool)intersectsUnscaledRect:(struct CGRect)arg1;
- (_Bool)containsPoint:(struct CGPoint)arg1 withSlop:(struct CGSize)arg2;
- (_Bool)containsPoint:(struct CGPoint)arg1;
- (struct CGPoint)convertNaturalPointFromUnscaledCanvas:(struct CGPoint)arg1;
- (_Bool)shouldShowCommentHighlight;
- (struct CGRect)frameInUnscaledCanvas;
- (struct CGColor *)selectionHighlightColor;
- (_Bool)shouldShowSelectionHighlight;
- (void)recursivelyDrawInContext:(struct CGContext *)arg1;
- (struct CGRect)clipRect;
- (void)drawInContext:(struct CGContext *)arg1;
- (_Bool)isDraggable;
- (Class)layerClass;
- (_Bool)directlyManagesLayerContent;

@end

@interface TSDGuidedPanController : NSObject
{
    TSDInteractiveCanvasController *_interactiveCanvasController;
    TSDCanvasView *_canvasView;
    TSDCanvasLayer *_canvasLayer;
    UIScrollView *_canvasScrollView;
    id <TSDPanGuide> _guide;
    struct CGPoint _startPoint;
    struct CGPoint _movement;
    struct CGPoint _velocity;
}

@property(retain, nonatomic) id <TSDPanGuide> guide; // @synthesize guide=_guide;
@property(nonatomic) struct CGPoint velocity; // @synthesize velocity=_velocity;
@property(nonatomic) struct CGPoint movement; // @synthesize movement=_movement;
@property(nonatomic) struct CGPoint startPoint; // @synthesize startPoint=_startPoint;
@property(nonatomic) UIScrollView *canvasScrollView; // @synthesize canvasScrollView=_canvasScrollView;
@property(nonatomic) TSDCanvasLayer *canvasLayer; // @synthesize canvasLayer=_canvasLayer;
@property(nonatomic) TSDCanvasView *canvasView; // @synthesize canvasView=_canvasView;
@property(nonatomic) TSDInteractiveCanvasController *interactiveCanvasController; // @synthesize interactiveCanvasController=_interactiveCanvasController;
- (void)p_didEnd;
- (void)p_willBegin;
- (id)p_convertContentLocation:(id)arg1 fromPlacement:(CDStruct_499be82c)arg2 toPlacement:(CDStruct_499be82c)arg3;
- (void)p_scrollToContentLocation:(id)arg1 placement:(CDStruct_499be82c)arg2;
- (struct CATransform3D)p_transformForContentLocation:(id)arg1 placement:(CDStruct_499be82c)arg2;
- (struct CGPoint)p_boundsOffsetForContentLocation:(id)arg1 placement:(CDStruct_499be82c)arg2;
- (id)p_currentContentLocationWithPlacement:(CDStruct_499be82c)arg1;
@property(readonly, nonatomic) CDStruct_499be82c centerPlusMovementContentPlacement;
@property(readonly, nonatomic) CDStruct_499be82c touchContentPlacement;
- (id)convertContentLocation:(id)arg1 fromPlacement:(CDStruct_499be82c)arg2 toPlacement:(CDStruct_499be82c)arg3;
- (void)handlePanGesture:(id)arg1;
- (void)dealloc;
- (id)initWithInteractiveCanvasController:(id)arg1;

@end

@interface TSDHyperlinkRegion : NSObject
{
    NSURL *mURL;
    TSDBezierPath *mBezierPath;
}

+ (id)hyperlinkRegionWithURL:(id)arg1 bezierPath:(id)arg2;
@property(retain, nonatomic) TSDBezierPath *bezierPath; // @synthesize bezierPath=mBezierPath;
@property(retain, nonatomic) NSURL *URL; // @synthesize URL=mURL;
- (id)initWithURL:(id)arg1 bezierPath:(id)arg2;
- (void)dealloc;

@end

@interface TSDImageAdjuster : NSObject
{
    TSDImageAdjustments *mImageAdjustments;
}

- (struct CGImage *)p_newImageFromCIImage:(id)arg1 underlyingImage:(struct CGImage *)arg2;
- (struct CGImage *)newFilteredImageForImage:(struct CGImage *)arg1 enhancedImage:(struct CGImage **)arg2;
- (void)dealloc;
- (id)initWithImageAdjustments:(id)arg1;
- (id)init;

@end

@interface TSDImageFill : TSDFill <TSDMixing, TSSPreset, TSSPresetSource, NSCopying, NSMutableCopying>
{
    TSPData *mImageData;
    TSPData *mOriginalImageData;
    _Bool mInterpretsUntaggedImageDataAsGeneric;
    int mTechnique;
    TSUColor *mTintColor;
    TSUFlushableCachedImage *mStandardSizeTintedImage;
    TSUFlushableCachedImage *mHalfSizeTintedImage;
    TSUFlushableCachedImage *mQuarterSizeTintedImage;
    TSUColor *mReferenceColor;
    struct CGSize mFillSize;
    _Bool mHasIndicatedInterestInProvider;
    NSObject<OS_dispatch_queue> *mTempRenderLock;
    struct CGImage *mTempRenderCopy;
    struct CGImage *mSourceOfTempRenderCopy;
    long long mTempRenderCount;
}

+ (void)bootstrapPresetsOfKind:(id)arg1 inTheme:(id)arg2 alternate:(int)arg3;
+ (id)presetKinds;
@property(readonly, nonatomic) _Bool interpretsUntaggedImageDataAsGeneric; // @synthesize interpretsUntaggedImageDataAsGeneric=mInterpretsUntaggedImageDataAsGeneric;
@property(readonly, copy, nonatomic) TSUColor *tintColor; // @synthesize tintColor=mTintColor;
@property(nonatomic) int technique; // @synthesize technique=mTechnique;
@property(readonly, retain, nonatomic) TSPData *originalImageData; // @synthesize originalImageData=mOriginalImageData;
@property(readonly, retain, nonatomic) TSPData *imageData; // @synthesize imageData=mImageData;
- (void)p_drawPDFWithProvider:(id)arg1 inContext:(struct CGContext *)arg2 bounds:(struct CGRect)arg3;
- (void)p_drawBitmapImage:(struct CGImage *)arg1 withOrientation:(long long)arg2 inContext:(struct CGContext *)arg3 bounds:(struct CGRect)arg4;
- (struct CGRect)p_drawnRectForImageSize:(struct CGSize)arg1 destRect:(struct CGRect)arg2 inContext:(struct CGContext *)arg3;
- (id)p_validatedImageProvider;
- (void)i_flushCaches;
- (SEL)mapThemeAssetSelector;
@property(readonly, nonatomic) NSString *presetKind;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (id)p_quarterSizeCachedImage;
- (struct CGImage *)p_newQuarterSizeImage;
- (id)p_halfSizeCachedImage;
- (struct CGImage *)p_newHalfSizeImage;
- (id)p_standardSizeCachedImage;
- (struct CGImage *)p_newStandardSizeImage;
- (struct CGImage *)p_newTintedImageWithScale:(double)arg1;
- (void)paintPath:(struct CGPath *)arg1 naturalBounds:(struct CGRect)arg2 inContext:(struct CGContext *)arg3 isPDF:(_Bool)arg4;
- (void)paintPath:(struct CGPath *)arg1 inContext:(struct CGContext *)arg2;
- (void)addBitmapsToRenderingQualityInfo:(id)arg1 forShapeRep:(id)arg2 inContext:(struct CGContext *)arg3;
- (void)p_paintPath:(struct CGPath *)arg1 inContext:(struct CGContext *)arg2;
- (struct CGSize)p_sizeOfFillImageForDestRect:(struct CGRect)arg1 inContext:(struct CGContext *)arg2;
- (void)drawSwatchInRect:(struct CGRect)arg1 inContext:(struct CGContext *)arg2;
- (struct CGSize)renderedImageSizeForObjectSize:(struct CGSize)arg1;
- (void)applyToCALayer:(id)arg1 withScale:(double)arg2;
- (id)p_cachedImageForSize:(struct CGSize)arg1 inContext:(struct CGContext *)arg2 orLayer:(id)arg3;
- (_Bool)shouldBeReappliedToCALayer:(id)arg1;
- (_Bool)p_shouldApplyTintedImage;
- (int)fillType;
- (_Bool)canApplyToCALayerByAddingSublayers;
- (_Bool)canApplyToCALayer;
- (_Bool)drawsInOneStep;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)referenceColor;
- (id)imageDataAtFillSize;
- (void)p_setFillSizeForApplicationData;
- (_Bool)isOpaque;
@property(readonly, nonatomic) struct CGSize fillSize; // @synthesize fillSize=mFillSize;
@property(readonly, nonatomic) double scale;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithGenericImageData:(id)arg1 technique:(int)arg2 tintColor:(id)arg3 size:(struct CGSize)arg4 originalImageData:(id)arg5;
- (id)initWithImageData:(id)arg1 technique:(int)arg2 tintColor:(id)arg3 size:(struct CGSize)arg4 originalImageData:(id)arg5;

@end

@interface TSDMediaInfo : TSDStyledInfo
{
    struct CGSize mOriginalSize;
    struct {
        unsigned int isPlaceholder:1;
        unsigned int wasMediaReplaced:1;
    } mFlags;
}

@property(nonatomic) struct CGSize originalSize; // @synthesize originalSize=mOriginalSize;
- (struct CGPoint)centerForReplacingWithNewMedia;
- (void)updateGeometryToReplaceMediaInfo:(id)arg1;
- (void)takePropertiesFromReplacedMediaInfo:(id)arg1;
@property(readonly, nonatomic) struct CGSize rawDataSize;
@property(readonly, nonatomic) NSString *mediaFileType;
@property(readonly, nonatomic) NSString *mediaDisplayName;
- (void)setGeometry:(id)arg1;
@property(nonatomic) _Bool wasMediaReplaced;
@property(nonatomic) _Bool isPlaceholder;
@property(nonatomic) unsigned int flags;
@property(readonly, nonatomic) struct CGSize defaultOriginalSize;
- (id)copyWithContext:(id)arg1;
- (id)initWithContext:(id)arg1 geometry:(id)arg2;

@end

@interface TSDImageInfo : TSDMediaInfo <TSDContainerInfo, TSDMixing, TSSPresetSource, TSSThemedObject, TSKTransformableObject, TSDReducableInfo>
{
    TSPData *mImageData;
    TSPData *mThumbnailImageData;
    TSPData *mOriginalImageData;
    _Bool mInterpretsUntaggedImageDataAsGeneric;
    TSDImageAdjustments *mImageAdjustments;
    TSPData *mAdjustedImageData;
    TSPData *mThumbnailAdjustedImageData;
    TSPData *mEnhancedImageData;
    TSDMediaStyle *mStyle;
    TSDMaskInfo *mMaskInfo;
    TSDBezierPath *mInstantAlphaPath;
    TSDBezierPath *mTracedPath;
    struct CGSize mNaturalSize;
}

+ (id)presetKinds;
+ (void)bootstrapPresetsOfKind:(id)arg1 inTheme:(id)arg2 alternate:(int)arg3 reservedCount:(unsigned long long)arg4;
+ (void)bootstrapPresetsOfKind:(id)arg1 inTheme:(id)arg2 alternate:(int)arg3;
+ (id)bootstrapPropertyMapForPresetIndex:(unsigned long long)arg1 inTheme:(id)arg2 alternate:(int)arg3;
+ (void)adjustIncomingImageGeometry:(id)arg1 maskGeometry:(id)arg2 forImageData:(id)arg3 maskedWithInstantAlphaPath:(id)arg4 withNaturalSize:(struct CGSize)arg5 forTargetImageGeometry:(id)arg6 withTargetMaskGeometry:(id)arg7;
@property(retain, nonatomic) TSPData *thumbnailAdjustedImageData; // @synthesize thumbnailAdjustedImageData=mThumbnailAdjustedImageData;
@property(retain, nonatomic) TSPData *adjustedImageData; // @synthesize adjustedImageData=mAdjustedImageData;
@property(copy, nonatomic) TSDImageAdjustments *imageAdjustments; // @synthesize imageAdjustments=mImageAdjustments;
@property(retain, nonatomic) TSDBezierPath *instantAlphaPath; // @synthesize instantAlphaPath=mInstantAlphaPath;
@property(retain, nonatomic) TSDMaskInfo *maskInfo; // @synthesize maskInfo=mMaskInfo;
- (id)style;
@property(retain, nonatomic) TSPData *originalImageData; // @synthesize originalImageData=mOriginalImageData;
@property(retain, nonatomic) TSPData *thumbnailImageData; // @synthesize thumbnailImageData=mThumbnailImageData;
@property(retain, nonatomic) TSPData *imageData; // @synthesize imageData=mImageData;
- (void)acceptVisitor:(id)arg1;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
@property(nonatomic) struct CGSize naturalSize;
@property(readonly, nonatomic) TSDBezierPath *tracedPath;
- (void)updateGeometryToReplaceMediaInfo:(id)arg1;
- (struct CGPoint)centerForReplacingWithNewMedia;
- (_Bool)isOpaque;
- (_Bool)isValid;
- (_Bool)isPDF;
- (id)updatedMaskInfoGeometryForImageDraggedBy:(struct CGPoint)arg1;
- (id)defaultMaskInfo;
- (id)defaultMaskInfoWithContext:(id)arg1;
- (_Bool)maskCanBeReset;
- (_Bool)isMasked;
- (id)objectForProperty:(int)arg1;
- (struct CGSize)rawDataSize;
- (struct CGSize)defaultOriginalSize;
- (struct CGSize)originalSize;
- (void)setStyle:(id)arg1;
- (id)i_thumbnailForImageData:(id)arg1;
@property(nonatomic) _Bool interpretsUntaggedImageDataAsGeneric;
- (id)mediaFileType;
- (id)mediaDisplayName;
- (struct CGSize)targetSizeForImageData:(id)arg1 associatedHint:(id)arg2;
- (id)imageDatasForReducingFileSizeWithAssociatedHints;
- (struct CGAffineTransform)computeFullTransform;
- (id)geometryWithMask;
- (id)childInfos;
- (void)wasRemovedFromDocumentRoot:(id)arg1;
@property(nonatomic) NSObject<TSDContainerInfo> *parentInfo;
@property(copy, nonatomic) TSDInfoGeometry *geometry;
@property(readonly, nonatomic) TSDMediaStyle *imageStyle;
- (id)presetKind;
- (Class)repClass;
- (Class)layoutClass;
- (Class)styleClass;
- (void)setExteriorTextWrap:(id)arg1;
- (id)copyWithContext:(id)arg1;
- (id)copyWithContext:(id)arg1 style:(id)arg2;
- (void)dealloc;
- (id)initWithContext:(id)arg1 geometry:(id)arg2;
- (id)initWithContext:(id)arg1 geometry:(id)arg2 style:(id)arg3 imageData:(id)arg4 originalImageData:(id)arg5;
@property(retain, nonatomic) TSPData *enhancedImageData;

// Remaining properties
@property(readonly, nonatomic, getter=isAnchoredToText) _Bool anchoredToText; // @dynamic anchoredToText;
@property(readonly, nonatomic, getter=isAttachedToBodyText) _Bool attachedToBodyText;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic, getter=isFloatingAboveText) _Bool floatingAboveText; // @dynamic floatingAboveText;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic, getter=isInlineWithText) _Bool inlineWithText; // @dynamic inlineWithText;
@property(nonatomic) _Bool matchesObjectPlaceholderGeometry;
@property(nonatomic) TSPObject<TSDOwningAttachment> *owningAttachment; // @dynamic owningAttachment;
@property(readonly, nonatomic) TSPObject<TSDOwningAttachment> *owningAttachmentNoRecurse; // @dynamic owningAttachmentNoRecurse;
@property(readonly) Class superclass;

@end

@interface TSDImageLayout : TSDMediaLayout
{
    TSDLayoutGeometry *mImageGeometry;
    TSDMaskLayout *mMaskLayout;
    struct CGPath *mPathToStroke;
    struct CGAffineTransform mLayoutToImageTransform;
    struct CGAffineTransform mLayoutToMaskTransform;
    _Bool mMaskIntersectsImage;
    TSDBezierPath *mTracedPath;
    int mHasAlpha;
    TSDLayoutGeometry *mBaseImageLayoutGeometry;
    TSDInfoGeometry *mDynamicInfoGeometry;
    TSDInfoGeometry *mBaseInfoGeometry;
    int mMaskEditMode;
    _Bool mScalingInMaskMode;
    _Bool mInInstantAlphaMode;
    _Bool mIsUpdatingImageAdjustments;
    TSDImageAdjustments *mDynamicImageAdjustments;
}

@property(readonly, nonatomic, getter=isInInstantAlphaMode) _Bool inInstantAlphaMode; // @synthesize inInstantAlphaMode=mInInstantAlphaMode;
@property(readonly, nonatomic, getter=isInMaskScaleMode) _Bool inMaskScaleMode; // @synthesize inMaskScaleMode=mScalingInMaskMode;
@property(readonly, nonatomic) int maskEditMode; // @synthesize maskEditMode=mMaskEditMode;
- (void)p_destroyDynamicCopies;
- (void)p_setDynamicInfoGeometry:(id)arg1;
- (void)p_createDynamicCopies;
- (_Bool)supportsRotation;
- (id)i_computeWrapPath;
- (struct CGRect)boundsInfluencingExteriorWrap;
- (void)dynamicImageAdjustmentsChangeDidEnd;
- (void)dynamicImageAdjustmentsUpdateToValue:(id)arg1;
- (void)dynamicImageAdjustmentsChangeDidBegin;
- (_Bool)isDynamicallyChangingImageAdjustments;
- (id)imageAdjustments;
- (id)maskLayout;
- (struct CGAffineTransform)imageDataToVisualSizeTransform;
- (struct CGAffineTransform)layoutToMaskTransform;
- (struct CGAffineTransform)layoutToImageTransform;
- (struct CGSize)sizeOfFrameRectIncludingCoverage;
- (struct CGPath *)pathToStroke;
- (_Bool)hasMaskingPath;
- (id)inspectorGeometry;
- (id)imageGeometryInRoot;
- (id)originalImageGeometry;
- (id)imageGeometry;
- (id)imageInfo;
- (void)endInstantAlphaMode;
- (void)beginInstantAlphaMode;
- (void)maskModeScaleDidEnd;
- (void)maskModeScaleDidBegin;
@property(readonly, nonatomic) int maskEditModeForLayoutState;
@property(readonly, nonatomic) int maskEditModeForResizing;
@property(readonly, nonatomic) int maskEditModeForRotating;
@property(readonly, nonatomic) int maskEditModeForDragging;
@property(readonly, nonatomic) _Bool isResizingInMaskEditMode;
@property(readonly, nonatomic) _Bool isRotatingInMaskEditMode;
@property(readonly, nonatomic) _Bool isDraggingInMaskEditMode;
@property(readonly, nonatomic, getter=isInMaskEditMode) _Bool inMaskEditMode;
- (void)endMaskEditMode;
- (void)beginEditingMaskInMaskEditMode;
- (void)beginEditingImageInMaskEditMode;
- (void)maskWasApplied;
- (void)maskWasReset;
- (struct CGRect)pathBoundsWithoutStroke;
- (id)smartPathSource;
- (void)resizeWithTransform:(struct CGAffineTransform)arg1 asChild:(_Bool)arg2;
- (_Bool)shouldSnapWhileResizing;
- (_Bool)resizeMayChangeAspectRatio;
- (_Bool)canAspectRatioLockBeChangedByUser;
- (struct CGPoint)centerForConnecting;
- (struct CGPoint)centerForRotationInMaskMode;
- (struct CGPoint)centerForRotation;
- (void)takeRotationFromTracker:(id)arg1;
- (struct CGAffineTransform)layoutTransformInInfoSpace:(struct CGAffineTransform)arg1;
- (void)endDrag;
- (_Bool)i_useBaseCapturedAlignmentFrameOriginForInline;
- (void)dragBy:(struct CGPoint)arg1;
- (void)beginDrag;
- (void)beginResize;
- (void)endDynamicOperation;
- (void)beginDynamicOperation;
- (_Bool)maskIntersectsImage;
- (_Bool)shouldRenderFrameStroke;
- (_Bool)shouldDisplayGuides;
- (_Bool)isInvisible;
- (_Bool)hasAlpha;
- (void)offsetGeometryBy:(struct CGPoint)arg1;
- (struct CGRect)alignmentFrameForProvidingGuidesInRoot;
- (struct CGRect)computeAlignmentFrameInRoot:(_Bool)arg1;
- (void)updateChildrenFromInfo;
- (void)processChangedProperty:(int)arg1;
- (id)computeLayoutGeometry;
- (id)layoutGeometryFromInfo;
- (id)currentInfoGeometry;
- (id)visibleGeometries;
- (id)geometryForTransforming;
- (void)dealloc;
- (id)initWithInfo:(id)arg1;

@end

@interface TSDImageProviderPool : NSObject <TSPDataCullingListener>
{
    TSUPointerKeyDictionary *mImageDataToImageProviderMap;
    unsigned long long mOpenFileDescriptorLimit;
    _Bool mHaveRaisedFileDescriptorLimit;
}

+ (_Bool)isValidImageData:(id)arg1;
+ (Class)p_providerClassForData:(id)arg1;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)sharedPool;
+ (id)_singletonAlloc;
- (void)p_updateFileDescriptorLimit;
- (unsigned long long)p_removeProvidersWithZeroInterest;
- (void)p_didReceiveMemoryWarning:(id)arg1;
- (void)p_freeFileDescriptorsWithProviderCount:(unsigned long long)arg1;
- (unsigned long long)p_providerLimitForFileDescriptorLimit:(unsigned long long)arg1;
- (void)willCullData:(id)arg1;
- (void)flushImageProviders;
- (void)willCloseDocumentContext:(id)arg1;
- (void)removeInterestInProviderForData:(id)arg1;
- (void)addInterestInProviderForData:(id)arg1;
- (id)p_providerForData:(id)arg1 temporary:(_Bool)arg2 shouldValidate:(_Bool)arg3;
- (id)temporaryProviderForData:(id)arg1 shouldValidate:(_Bool)arg2;
- (id)providerForData:(id)arg1 shouldValidate:(_Bool)arg2;
- (void)dealloc;
- (id)init;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSDSwatchRenderingOperation : NSOperation
{
    UIView *mView;
    NSObject<TSSPreset> *mPreset;
    struct CGSize mImageSize;
    double mImageScale;
    struct CGRect mSwatchFrame;
    TSKDocumentRoot *mDocumentRoot;
    struct CGImage *mDeliveredImage;
    unsigned long long mInsertPopoverPageType;
    unsigned long long mInsertPopoverPageNumber;
    NSString *mIdentifier;
}

@property(copy) NSString *identifier; // @synthesize identifier=mIdentifier;
@property unsigned long long insertPopoverPageNumber; // @synthesize insertPopoverPageNumber=mInsertPopoverPageNumber;
@property unsigned long long insertPopoverPageType; // @synthesize insertPopoverPageType=mInsertPopoverPageType;
@property(readonly) struct CGRect swatchFrame; // @synthesize swatchFrame=mSwatchFrame;
@property(readonly) double imageScale; // @synthesize imageScale=mImageScale;
@property(readonly) struct CGSize imageSize; // @synthesize imageSize=mImageSize;
@property(readonly) NSObject<TSSPreset> *preset; // @synthesize preset=mPreset;
@property(retain) UIView *view; // @synthesize view=mView;
- (void)main;
- (void)doWorkWithReadLock;
- (struct UIEdgeInsets)swatchEdgeInsets;
- (_Bool)needsPressedStateBackground;
@property(readonly, nonatomic) struct CGImage *deliveredImage;
- (void)deliverCGImage:(struct CGImage *)arg1;
- (void)p_deliverResultOnMainThread:(id)arg1;
- (struct CGImage *)p_newSwatchPressedStateBackgroundFromCGImage:(struct CGImage *)arg1;
- (void)p_animateSwatchIn;
- (void)dealloc;
- (id)initWithPreset:(id)arg1 imageSize:(struct CGSize)arg2 imageScale:(double)arg3 swatchFrame:(struct CGRect)arg4 documentRoot:(id)arg5;

@end

@interface TSDImageRenderingOperation : TSDSwatchRenderingOperation
{
    TSDImageInfo *mImageInfo;
    _Bool mShouldClipVertically;
}

@property(retain) TSDImageInfo *imageInfo; // @synthesize imageInfo=mImageInfo;
- (void)doWorkWithReadLock;
- (void)dealloc;
- (id)initWithPreset:(id)arg1 imageSize:(struct CGSize)arg2 imageScale:(double)arg3 swatchFrame:(struct CGRect)arg4 imageInfo:(id)arg5 documentRoot:(id)arg6;
- (id)initWithPreset:(id)arg1 imageSize:(struct CGSize)arg2 imageScale:(double)arg3 swatchFrame:(struct CGRect)arg4 imageInfo:(id)arg5 documentRoot:(id)arg6 shouldClipVertically:(_Bool)arg7;

@end

@interface TSDImageRep : TSDMediaRep <TSDMagicMoveMatching>
{
    TSDLayoutGeometry *mLastImageGeometryInRoot;
    TSDLayoutGeometry *mLastMaskGeometryInRoot;
    struct CGAffineTransform mLastLayoutToImageTransform;
    struct CGRect mFrameInUnscaledCanvasRelativeToSuper;
    _Bool mFrameInUnscaledCanvasIsValid;
    CALayer *mContentsLayer;
    CAShapeLayer *mMaskPathLayer;
    CAShapeLayer *mIAMaskLayer;
    CAShapeLayer *mMaskSublayer;
    struct CGAffineTransform mLastPictureFrameLayerTransform;
    _Bool mDirectlyManagesLayerContent;
    _Bool mShowImageHighlight;
    _Bool mInInstantAlphaMode;
    TSDInstantAlphaTracker *mInstantAlphaTracker;
    struct CGImage *mInstantAlphaImage;
    struct CGAffineTransform mBaseMaskLayoutTransform;
    NSRecursiveLock *mLayerUpdateAndSizingStateLock;
    TSDImageRepSizingState *mSizingState;
    _Bool mSizingStateReady;
    NSObject<OS_dispatch_queue> *mSizedImageAccessQueue;
    struct CGImage *mSizedImage;
    struct CGSize mSizedImageSize;
    long long mSizedImageOrientation;
    _Bool mSizedImageHasMaskBakedIn;
    _Bool mSizedImageHasAdjustmentsBakedIn;
    struct CGPath *mSizedImageMaskPath;
    struct CGImage *mCachedSizedImage;
    struct CGSize mCachedSizedImageSize;
    long long mCachedSizedImageOrientation;
    NSCache *mHitTestCache;
    long long mHitTestCacheOnce;
    NSMutableArray *mUpdateFromLayoutBlocks;
    NSObject<OS_dispatch_semaphore> *mUpdateFromLayoutBlocksLock;
    unsigned long long mImageSizingDisabledCount;
}

+ (struct CGPath *)p_newPathToBakeIntoSizedImageForSize:(struct CGSize)arg1 withImageLayout:(id)arg2 orientation:(long long)arg3;
+ (double)magicMoveAttributeMatchPercentBetweenOutgoingObject:(id)arg1 incomingObject:(id)arg2;
- (void)p_popoverViewPresented:(id)arg1;
- (void)p_hitCacheSetCachedValue:(_Bool)arg1 forPoint:(struct CGPoint)arg2;
- (_Bool)p_hitCacheGetCachedValue:(_Bool *)arg1 forPoint:(struct CGPoint)arg2;
- (void)p_invalidateHitTestCache;
- (_Bool)shouldShowMediaReplaceUI;
- (double)additionalRotationForKnobOrientation;
- (void)addKnobsToArray:(id)arg1;
- (void)updatePositionsOfKnobs:(id)arg1;
- (_Bool)shouldCreateSelectionKnobs;
- (_Bool)shouldShowSmartMaskKnobs;
- (void)generateSizedImageOnBackgroundThread;
- (void)useCachedSizedImage:(id)arg1;
- (id)newCachedSizedImageWithNaturalSize;
- (id)newCachedSizedImage;
- (void)cacheImageAtCurrentSize;
- (void)p_takeSizedImageFromCache;
- (_Bool)p_shouldRenderWithMaskToBounds;
- (_Bool)p_shouldBakeMaskIntoSizedImage;
- (void)p_invalidateSizedImageFromQueue;
- (void)p_invalidateSizedImage;
- (void)p_takeSizedImageFromState;
- (_Bool)p_takeSizedImageFromState:(id)arg1;
- (void)p_takeSizedImageFromStateIfReady;
- (void)i_willEnterForeground;
- (void)p_generateSizedImage:(id)arg1;
- (void)p_startSizing;
- (void)p_generateSizedImageIfNecessary;
- (void)popDisableImageSizing;
- (void)pushDisableImageSizing;
- (_Bool)p_okayToGenerateSizedImage;
- (struct CGSize)p_desiredSizedImageSize;
- (_Bool)shouldShowShadow;
- (_Bool)canDrawShadowInOneStepWithChildren:(_Bool)arg1;
- (_Bool)p_drawsInOneStep;
- (void)p_updateMaskSublayersForMaskEditMode;
- (void)p_createMaskLayerForLayer:(id)arg1;
- (void)p_disposeMaskLayer;
- (void)p_disposeStrokeLayer;
- (id)p_validatedThumbnailImageProvider;
- (id)p_validatedBitmapImageProvider;
- (id)p_validatedImageProvider;
- (id)p_imageProvider;
- (id)p_imageData;
- (id)textureForContext:(id)arg1;
- (id)magicMoveAttributesWithShapeAttributes:(_Bool)arg1;
- (void)setMagicMoveTextureAttributes:(id)arg1;
- (void)viewScaleDidChange;
- (id)additionalLayersOverLayer;
- (void)p_updateStrokeLayerForStroke:(id)arg1 repLayer:(id)arg2;
- (void)p_updateMaskLayer:(id)arg1 forRepLayer:(id)arg2 shouldIncludeMask:(_Bool)arg3 shouldIncludeInstantAlpha:(_Bool)arg4;
- (_Bool)p_shouldMaskWithFrameLayers;
- (void)didUpdateLayer:(id)arg1;
- (void)willUpdateLayer:(id)arg1;
- (void)updateLayerGeometryFromLayout:(id)arg1;
- (void)p_getAliasedValuesForMaskToBoundsDirectLayerFrame:(out struct CGRect *)arg1 transform:(out struct CGAffineTransform *)arg2;
- (struct CGRect)frameInUnscaledCanvas;
- (struct CGImage *)p_newImageByApplyingAdjustmentsToImage:(struct CGImage *)arg1 alreadyEnhanced:(_Bool)arg2;
- (_Bool)p_directlyManagesContentForLayer:(id)arg1;
- (long long)p_orientationForDirectlyManagedLayer;
- (struct CGImage *)p_imageForDirectlyManagedLayer:(id)arg1;
- (void)p_updateDirectlyManagesLayerContentForLayer:(id)arg1;
- (_Bool)directlyManagesLayerContent;
- (void)didCreateLayer:(id)arg1;
- (void)addBitmapsToRenderingQualityInfo:(id)arg1 inContext:(struct CGContext *)arg2;
- (void)p_drawInContext:(struct CGContext *)arg1 withContent:(_Bool)arg2 withStroke:(_Bool)arg3 withOpacity:(double)arg4 withMask:(_Bool)arg5 withIAMask:(_Bool)arg6 forLayer:(_Bool)arg7 forShadow:(_Bool)arg8 forHitTest:(_Bool)arg9;
- (_Bool)canDrawInParallel;
- (id)imageOfStroke:(struct CGRect *)arg1;
- (void)drawInContextWithoutEffects:(struct CGContext *)arg1 withContent:(_Bool)arg2 withStroke:(_Bool)arg3 withOpacity:(_Bool)arg4 forAlphaOnly:(_Bool)arg5 drawChildren:(_Bool)arg6;
- (void)drawInLayerContext:(struct CGContext *)arg1;
- (id)contentsLayer;
- (struct CGPoint)centerForRotation;
- (_Bool)shouldShowDragHUD;
- (_Bool)isDraggable;
- (_Bool)shouldAllowReplacementFromPaste;
- (struct CGAffineTransform)transformForHighlightLayer;
- (struct CGRect)boundsForHighlightLayer;
- (struct CGPoint)positionOfStandardKnob:(id)arg1 forBounds:(struct CGRect)arg2;
- (struct CGRect)boundsForStandardKnobs;
- (struct CGRect)targetRectForEditMenu;
- (_Bool)wantsToDistortWithImagerContext;
- (id)hitRepChrome:(struct CGPoint)arg1;
- (id)overlayLayers;
- (void)willBeginReadMode;
- (void)layoutInRootChangedFrom:(id)arg1 to:(id)arg2 translatedOnly:(_Bool)arg3;
- (void)updateFromLayout;
- (void)processChangedProperty:(int)arg1;
- (void)processChanges:(id)arg1;
- (id)pathSourceForSelectionHighlightBehavior;
- (_Bool)shouldShowSelectionHighlight;
- (_Bool)shouldIgnoreEditMenuTapAtPoint:(struct CGPoint)arg1 withRecognizer:(id)arg2;
- (_Bool)handleDoubleTapAtPoint:(struct CGPoint)arg1;
- (int)dragTypeAtCanvasPoint:(struct CGPoint)arg1;
- (_Bool)containsPoint:(struct CGPoint)arg1;
- (void)becameNotSelected;
- (void)willBeRemoved;
- (void)p_canvasSelectionDidChange:(id)arg1;
- (void)unhighlightImage;
- (void)highlightImage;
- (id)maskLayout;
- (id)maskInfo;
- (id)imageLayout;
- (id)imageInfo;
- (void)dealloc;
- (id)initWithLayout:(id)arg1 canvas:(id)arg2;

@end

@interface TSDImageRepCachedSizedImage : NSObject
{
    struct CGImage *mImageRef;
    struct CGPath *mImageMaskPath;
    _Bool mImageHasMaskBakedIn;
    _Bool mImageHasAdjustmentsBakedImage;
    long long mImageOrientation;
    struct CGSize mImageSize;
}

@property(nonatomic) _Bool imageHasAdjustmentsBakedImage; // @synthesize imageHasAdjustmentsBakedImage=mImageHasAdjustmentsBakedImage;
@property(nonatomic) _Bool imageHasMaskBakedIn; // @synthesize imageHasMaskBakedIn=mImageHasMaskBakedIn;
@property(nonatomic) long long imageOrientation; // @synthesize imageOrientation=mImageOrientation;
@property(nonatomic) struct CGSize imageSize; // @synthesize imageSize=mImageSize;
@property(nonatomic) struct CGPath *imageMaskPath;
@property(nonatomic) struct CGImage *imageRef;
- (void)dealloc;

@end

@interface TSDImageRepSizingState : NSObject
{
    struct CGSize mDesiredSize;
    TSDImageProvider *mProvider;
    struct CGPath *mMaskPath;
    _Bool mIncludesAdjustments;
    int mStatus;
    struct CGImage *mSizedImage;
    long long mSizedImageOrientation;
}

@property(nonatomic) _Bool sizedImageIncludesAdjustments; // @synthesize sizedImageIncludesAdjustments=mIncludesAdjustments;
@property(readonly, nonatomic) struct CGPath *maskPath; // @synthesize maskPath=mMaskPath;
@property(nonatomic) long long sizedImageOrientation; // @synthesize sizedImageOrientation=mSizedImageOrientation;
@property(nonatomic) struct CGImage *sizedImage; // @synthesize sizedImage=mSizedImage;
@property(nonatomic) int status; // @synthesize status=mStatus;
@property(retain, nonatomic) TSDImageProvider *provider; // @synthesize provider=mProvider;
@property(nonatomic) struct CGSize desiredSize; // @synthesize desiredSize=mDesiredSize;
- (void)generateSizedImage;
@property(readonly, nonatomic) _Bool sizedImageHasMask;
- (void)dealloc;
- (id)initWithDesiredSize:(struct CGSize)arg1 provider:(id)arg2 maskPath:(struct CGPath *)arg3;

@end

@interface TSDImageResamplingOperation : NSObject
{
    TSDImageProvider *mImageProvider;
    struct CGSize mDesiredSize;
    NSString *mDisplayName;
    struct CGPath *mMaskingPath;
    TSPObjectContext *mObjectContext;
}

@property(nonatomic) struct CGPath *maskingPath; // @synthesize maskingPath=mMaskingPath;
@property(retain, nonatomic) TSPObjectContext *objectContext; // @synthesize objectContext=mObjectContext;
@property(copy, nonatomic) NSString *displayName; // @synthesize displayName=mDisplayName;
@property(nonatomic) struct CGSize desiredSize; // @synthesize desiredSize=mDesiredSize;
@property(retain, nonatomic) TSDImageProvider *imageProvider; // @synthesize imageProvider=mImageProvider;
- (id)performResampleOperationWithResampleOptions:(unsigned long long)arg1 bitmapContextOptions:(unsigned long long)arg2;
- (void)dealloc;
- (id)init;
- (id)initWithImageProvider:(id)arg1 desiredSize:(struct CGSize)arg2;

@end

@interface TSDImager : NSObject <TSDCanvasDelegate>
{
    NSArray *mInfos;
    struct CGColor *mBackgroundColor;
    struct CGRect mUnscaledClipRect;
    double mViewScale;
    struct CGSize mScaledImageSize;
    struct CGSize mMaximumScaledImageSize;
    _Bool mUseScaledImageSize;
    _Bool mDistortedToMatch;
    _Bool mImageMustHaveEvenDimensions;
    _Bool mShouldReuseBitmapContext;
    struct UIEdgeInsets mContentInset;
    TSKDocumentRoot *mDocumentRoot;
    TSDCanvas *mCanvas;
    struct CGRect mActualScaledClipRect;
    _Bool mDrawingIntoPDF;
    _Bool mIsPrinting;
    _Bool mShouldUseSRGBColorSpace;
    struct CGContext *mReusableBitmapContext;
    struct CGRect mReusableBounds;
    struct CGRect mReusableIntegralBounds;
    struct CGRect mReusableActualScaledClipRect;
    struct CGSize mReusableScaledImageSize;
    _Bool mReusableShouldUseSRGBColorSpace;
    CDUnknownBlockType mPostRenderAction;
}

@property(readonly, nonatomic) TSDCanvas *canvas; // @synthesize canvas=mCanvas;
@property(nonatomic) _Bool isPrinting; // @synthesize isPrinting=mIsPrinting;
@property(nonatomic) _Bool shouldReuseBitmapContext; // @synthesize shouldReuseBitmapContext=mShouldReuseBitmapContext;
@property(nonatomic) _Bool imageMustHaveEvenDimensions; // @synthesize imageMustHaveEvenDimensions=mImageMustHaveEvenDimensions;
@property(nonatomic) _Bool distortedToMatch; // @synthesize distortedToMatch=mDistortedToMatch;
@property(readonly, nonatomic) struct CGRect actualScaledClipRect; // @synthesize actualScaledClipRect=mActualScaledClipRect;
@property(nonatomic) struct UIEdgeInsets contentInset; // @synthesize contentInset=mContentInset;
@property(nonatomic) struct CGRect unscaledClipRect; // @synthesize unscaledClipRect=mUnscaledClipRect;
@property(nonatomic) struct CGColor *backgroundColor; // @synthesize backgroundColor=mBackgroundColor;
@property(retain, nonatomic) NSArray *infos; // @synthesize infos=mInfos;
- (struct CGImage *)p_newImageInReusableContext;
- (void)p_drawPageInContext:(struct CGContext *)arg1 createPage:(_Bool)arg2;
- (_Bool)p_configureCanvas;
- (_Bool)isPrintingCanvas;
- (_Bool)isCanvasDrawingIntoPDF:(id)arg1;
- (struct CGRect)visibleScaledBoundsForClippingRepsOnCanvas:(id)arg1;
- (id)documentRoot;
- (_Bool)drawPageInContext:(struct CGContext *)arg1 createPage:(_Bool)arg2;
- (id)pdfData;
- (struct CGImage *)newImage;
@property(nonatomic) struct CGSize maximumScaledImageSize;
@property(nonatomic) struct CGSize scaledImageSize;
@property(nonatomic) double viewScale;
- (void)setPostRenderAction:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (id)initWithDocumentRoot:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSDInfoGeometry : NSObject <TSDMixing, NSCopying, NSMutableCopying>
{
    struct CGPoint mPosition;
    struct CGSize mSize;
    struct {
        unsigned int widthValid:1;
        unsigned int heightValid:1;
        unsigned int horizontalFlip:1;
        unsigned int verticalFlip:1;
    } mFlags;
    double mAngle;
}

+ (id)geometryFromTransform:(struct CGAffineTransform)arg1 withSize:(struct CGSize)arg2;
+ (id)geometryFromFullTransform:(struct CGAffineTransform)arg1;
+ (id)geometryFromFullTransform:(struct CGAffineTransform)arg1 widthValid:(_Bool)arg2 heightValid:(_Bool)arg3;
@property(readonly, nonatomic) double angle; // @synthesize angle=mAngle;
@property(readonly, nonatomic) struct CGSize size; // @synthesize size=mSize;
@property(readonly, nonatomic) struct CGPoint position; // @synthesize position=mPosition;
- (id)description;
- (id)normalizedGeometry;
- (id)geometryWithNewBounds:(struct CGRect)arg1;
- (id)geometryRelativeToGeometry:(id)arg1;
- (id)geometryByAppendingGeometry:(id)arg1;
- (id)geometryWithParentGeometry:(id)arg1;
- (id)geometryByAppendingTransform:(struct CGAffineTransform)arg1;
- (id)initWithTransform:(struct CGAffineTransform)arg1 size:(struct CGSize)arg2;
- (id)initWithFullTransform:(struct CGAffineTransform)arg1 widthValid:(_Bool)arg2 heightValid:(_Bool)arg3;
- (struct CGAffineTransform)fullTransform;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (_Bool)isEqualExceptForPosition:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (struct CGPoint)transformedBoundsOrigin;
- (struct CGRect)transformedBounds;
- (struct CGAffineTransform)transformWithoutFlips;
- (struct CGAffineTransform)transformBasedOnPoint:(struct CGPoint)arg1 centeredAtPoint:(struct CGPoint)arg2 withFlips:(_Bool)arg3;
- (struct CGAffineTransform)transformBasedOnPoint:(struct CGPoint)arg1 centeredAtPoint:(struct CGPoint)arg2;
- (struct CGAffineTransform)transformBasedOnRect:(struct CGRect)arg1;
- (struct CGAffineTransform)transform;
- (struct CGPoint)center;
- (struct CGRect)boundsBeforeRotation;
@property(readonly, nonatomic) _Bool verticalFlip;
@property(readonly, nonatomic) _Bool horizontalFlip;
@property(readonly, nonatomic) _Bool heightValid;
@property(readonly, nonatomic) _Bool widthValid;
- (id)initWithTransformedBoundsOrigin:(struct CGPoint)arg1 size:(struct CGSize)arg2 horizontalFlip:(_Bool)arg3 verticalFlip:(_Bool)arg4 angle:(double)arg5;
- (id)initWithTransformedBoundsOrigin:(struct CGPoint)arg1 size:(struct CGSize)arg2 angle:(double)arg3;
- (id)initWithCenter:(struct CGPoint)arg1 size:(struct CGSize)arg2;
- (id)initWithPosition:(struct CGPoint)arg1 size:(struct CGSize)arg2 angle:(double)arg3;
- (id)initWithPosition:(struct CGPoint)arg1 size:(struct CGSize)arg2;
- (id)initWithHeight:(double)arg1;
- (id)initWithWidth:(double)arg1;
- (id)initWithSize:(struct CGSize)arg1;
- (id)init;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithPosition:(struct CGPoint)arg1 size:(struct CGSize)arg2 widthValid:(_Bool)arg3 heightValid:(_Bool)arg4 horizontalFlip:(_Bool)arg5 verticalFlip:(_Bool)arg6 angle:(double)arg7;

@end

@interface TSDInstantAlphaBinaryBitmap : NSObject
{
    long long mWidth;
    long long mHeight;
    long long mRowBytes;
    char *mData;
}

- (void)unionWithBitmap:(id)arg1;
- (void)dealloc;
- (id)initWithWidth:(long long)arg1 height:(long long)arg2;

@end

@interface TSDKnobDragGestureRecognizer : UIGestureRecognizer <TSDAutoscrollDelegate, TSDTrackerManipulator>
{
    TSDiOSCanvasViewController *mCVC;
    TSDInteractiveCanvasController *mICC;
    UITouch *mTouch;
    struct CGPoint mKnobToTouchOffset;
    TSDKnobTracker *mTracker;
    _Bool mKnobTouchHasMoved;
    _Bool mDelayHasElapsed;
    struct CGPoint mOriginalPointInWindow;
    UITouch *mSecondTouch;
    TSDRep *mLastHitRep;
    _Bool mTouchesMoved;
    TSDAutoscroll *mAutoscroll;
    struct CGPoint mAutoscrollPoint;
}

@property(readonly, nonatomic) TSDInteractiveCanvasController *interactiveCanvasController; // @synthesize interactiveCanvasController=mICC;
@property(nonatomic) struct CGPoint autoscrollPoint; // @synthesize autoscrollPoint=mAutoscrollPoint;
@property(retain, nonatomic) TSDAutoscroll *autoscroll; // @synthesize autoscroll=mAutoscroll;
- (struct CGPoint)p_pointInUnscaledCanvas;
- (_Bool)p_hitRepIsValid:(id)arg1;
- (int)allowedAutoscrollDirections;
- (double)unscaledStartAutoscrollThreshold;
- (void)autoscrollWillNotStart;
- (void)updateAfterAutoscroll:(id)arg1;
@property(readonly, nonatomic) TSDInteractiveCanvasController *icc;
- (void)p_triggerDelayedKnobTracking:(id)arg1;
- (void)p_requestDelayedKnobTracking:(double)arg1;
- (void)p_cancelDelayedKnobTracking;
- (void)operationDidEnd;
- (_Bool)readyToEndOperation;
- (id)tracker;
- (_Bool)allowTrackerManipulatorToTakeControl:(id)arg1;
- (void)cancelBecauseOfRotation;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)reset;
- (void)setState:(long long)arg1;
- (void)dealloc;
- (id)initWithInteractiveCanvasController:(id)arg1;

@end

@interface TSDKnobTracker : NSObject <TSDLayoutManipulatingTracker>
{
    TSDRep *mRep;
    TSDKnob *mKnob;
    struct CGPoint mCurrentPosition;
    struct CGPoint mKnobOffset;
    _Bool mDidBegin;
    _Bool mDidDrag;
    _Bool mDragEnding;
    _Bool mEndedOperationDueToESC;
    _Bool mIsInspectorDrivenTracking;
    TSDAutoscroll *mAutoscroll;
}

@property(retain, nonatomic) TSDAutoscroll *autoscroll; // @synthesize autoscroll=mAutoscroll;
@property(readonly, nonatomic) struct CGPoint knobOffset; // @synthesize knobOffset=mKnobOffset;
@property(readonly, nonatomic) _Bool endedOperationDueToESC; // @synthesize endedOperationDueToESC=mEndedOperationDueToESC;
@property(nonatomic) _Bool dragEnding; // @synthesize dragEnding=mDragEnding;
@property(nonatomic) struct CGPoint currentPosition; // @synthesize currentPosition=mCurrentPosition;
@property(nonatomic) _Bool didDrag; // @synthesize didDrag=mDidDrag;
@property(readonly, nonatomic) _Bool didBegin; // @synthesize didBegin=mDidBegin;
@property(retain, nonatomic) TSDKnob *knob; // @synthesize knob=mKnob;
@property(nonatomic) _Bool isInspectorDrivenTracking; // @synthesize isInspectorDrivenTracking=mIsInspectorDrivenTracking;
@property(retain, nonatomic) TSDRep *rep; // @synthesize rep=mRep;
- (_Bool)operationShouldBeDynamic;
- (_Bool)supportsAlignmentGuides;
- (void)commitChangesForReps:(id)arg1;
- (_Bool)shouldOpenCommandGroupToCommitChangesForReps:(id)arg1;
- (void)changeDynamicLayoutsForReps:(id)arg1;
- (int)allowedAutoscrollDirections;
- (double)unscaledStartAutoscrollThreshold;
- (void)autoscrollWillNotStart;
- (void)updateAfterAutoscroll:(id)arg1;
- (_Bool)wantsAutoscroll;
- (void)i_resetCurrentPositionToKnobPositionIfAppropriate;
- (void)i_setKnobOffset:(struct CGPoint)arg1;
- (void)willEndMovingKnobDueToESC;
- (_Bool)shouldEndMovingKnobOnESC;
- (_Bool)shouldUseKnobOffset;
- (_Bool)allowHUDToDisplay;
- (_Bool)shouldHideSelectionHighlight;
- (_Bool)shouldHideOtherKnobs;
- (unsigned long long)enabledKnobMask;
- (struct CGAffineTransform)transformInRootForStandardKnobs;
- (struct CGRect)currentBoundsForStandardKnobs;
- (void)endMovingKnob;
- (void)beginMovingKnob;
- (struct CGPoint)convertKnobPositionToUnscaledCanvas:(struct CGPoint)arg1;
- (void)moveKnobToCanvasPosition:(struct CGPoint)arg1;
- (void)moveKnobToRepPosition:(struct CGPoint)arg1;
@property(readonly, nonatomic) double delay;
@property(readonly, nonatomic) TSDInteractiveCanvasController *icc;
- (void)dealloc;
- (id)initWithRep:(id)arg1 knob:(id)arg2;

@end

@interface TSDLayoutController : NSObject
{
    TSDCanvas *mCanvas;
    TSDRootLayout *mRootLayout;
    struct __CFDictionary *mLayoutsByInfo;
    NSMutableSet *mInvalidLayouts;
    NSMutableSet *mLayoutsNeedingRecreating;
    NSMutableSet *mInvalidChildrenLayouts;
    TSDLayout *mValidatingLayout;
}

+ (void)temporaryLayoutControllerForInfos:(id)arg1 useInBlock:(CDUnknownBlockType)arg2;
+ (id)allInteractiveLayoutControllers;
- (void)unregisterLayout:(id)arg1;
- (void)preregisterLayout:(id)arg1;
- (id)ancestorLayoutOfLayout:(id)arg1 orDelegateConformingToProtocol:(id)arg2;
- (id)layoutGeometryProviderForLayout:(id)arg1;
- (void)i_removeAllLayouts;
- (void)i_unregisterLayout:(id)arg1;
- (void)i_registerLayout:(id)arg1;
- (id)validatedLayoutForInfo:(id)arg1 childOfLayout:(id)arg2;
- (id)validatedLayoutsForInfo:(id)arg1;
- (id)validatedLayoutForInfo:(id)arg1;
- (void)validateLayoutWithDependencies:(id)arg1;
- (void)validateLayoutsWithDependencies:(id)arg1;
- (void)validateLayouts:(id)arg1;
- (void)validateOrderedLayouts:(id)arg1;
- (id)sortLayoutsForDependencies:(id)arg1;
- (void)validateLayouts;
- (struct CGRect)rectOfTopLevelLayouts;
- (id)layoutsInRect:(struct CGRect)arg1;
- (id)layoutForInfo:(id)arg1 childOfLayout:(id)arg2;
- (id)layoutsForInfos:(id)arg1;
- (id)layoutsForInfo:(id)arg1;
- (id)layoutForInfo:(id)arg1;
- (void)invalidateLayoutForRecreation:(id)arg1;
- (void)invalidateChildrenOfLayout:(id)arg1;
- (void)invalidateLayout:(id)arg1;
- (void)setInfos:(id)arg1;
- (id)rootLayout;
- (id)canvas;
- (void)dealloc;
- (id)initWithCanvas:(id)arg1;
- (_Bool)isLayoutOffscreen;

@end

@interface TSDLayoutGeometry : NSObject <NSCopying, NSMutableCopying>
{
    struct CGSize mSize;
    struct CGAffineTransform mTransform;
}

+ (id)geometryFromFullTransform:(struct CGAffineTransform)arg1;
@property(readonly, nonatomic) struct CGAffineTransform transform; // @synthesize transform=mTransform;
@property(readonly, nonatomic) struct CGSize size; // @synthesize size=mSize;
- (_Bool)differsInMoreThanTranslationFrom:(id)arg1;
- (struct CGAffineTransform)transformByConcatenatingTransformTo:(struct CGAffineTransform)arg1;
- (id)geometryByOutsettingBy:(struct CGSize)arg1;
- (id)geometryByTranslatingBy:(struct CGPoint)arg1;
- (id)geometryByTransformingBy:(struct CGAffineTransform)arg1;
- (id)infoGeometry;
- (struct CGAffineTransform)fullTransform;
- (struct CGAffineTransform)inverseTransform;
- (struct CGRect)frame;
- (struct CGPoint)center;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithInfoGeometry:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)init;
- (id)initWithSize:(struct CGSize)arg1 transform:(struct CGAffineTransform)arg2;

@end

@interface TSDLineEnd : NSObject <NSCopying>
{
    struct CGPath *mPath;
    struct CGPath *mWrapPath;
    struct CGPoint mEndPoint;
    _Bool mIsFilled;
    NSString *mIdentifier;
    int mLineJoin;
}

+ (id)lineEndWithPath:(struct CGPath *)arg1 wrapPath:(struct CGPath *)arg2 endPoint:(struct CGPoint)arg3 isFilled:(_Bool)arg4 identifier:(id)arg5;
+ (id)lineEndWithPath:(struct CGPath *)arg1 endPoint:(struct CGPoint)arg2 isFilled:(_Bool)arg3 identifier:(id)arg4;
+ (id)lineEndWithIdentifier:(id)arg1;
+ (id)lineEndWithType:(int)arg1;
+ (id)none;
+ (id)line;
+ (id)invertedArrow;
+ (id)openCircle;
+ (id)openSquare;
+ (id)filledSquare;
+ (id)filledArrow;
+ (id)openArrow;
+ (id)filledDiamond;
+ (id)filledCircle;
+ (id)simpleArrow;
@property(readonly, nonatomic) int lineJoin; // @synthesize lineJoin=mLineJoin;
@property(readonly, nonatomic) _Bool isFilled; // @synthesize isFilled=mIsFilled;
@property(readonly, nonatomic) struct CGPoint endPoint; // @synthesize endPoint=mEndPoint;
@property(readonly, nonatomic) struct CGPath *path; // @synthesize path=mPath;
@property(readonly, nonatomic) NSString *identifier; // @synthesize identifier=mIdentifier;
- (id)description;
@property(readonly, nonatomic) _Bool isNone;
@property(readonly, nonatomic) struct CGPath *wrapPath;
- (struct CGImage *)newLineEndImageOnRight:(_Bool)arg1 forContentsScale:(double)arg2 withSize:(struct CGSize)arg3;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)dealloc;
- (id)initWithPath:(struct CGPath *)arg1 endPoint:(struct CGPoint)arg2 isFilled:(_Bool)arg3 identifier:(id)arg4;
- (id)initWithPath:(struct CGPath *)arg1 wrapPath:(struct CGPath *)arg2 endPoint:(struct CGPoint)arg3 isFilled:(_Bool)arg4 identifier:(id)arg5 lineJoin:(int)arg6;

@end

@interface TSDLineEndView : UIView
{
    TSDLineEnd *mLineEnd;
    _Bool mOnRight;
}

+ (id)viewWithLineEnd:(id)arg1 onRight:(_Bool)arg2;
@property(nonatomic) _Bool onRight; // @synthesize onRight=mOnRight;
@property(retain, nonatomic) TSDLineEnd *lineEnd; // @synthesize lineEnd=mLineEnd;
- (void)drawRect:(struct CGRect)arg1;
- (void)dealloc;

@end

@interface TSDLinePreset : NSObject
{
    TSDLineEnd *mHeadLineEnd;
    TSDLineEnd *mTailLineEnd;
    TSDStroke *mStroke;
}

+ (id)lineWithStroke:(id)arg1 headLineEnd:(id)arg2 tailLineEnd:(id)arg3;
@property(readonly, copy, nonatomic) TSDStroke *stroke; // @synthesize stroke=mStroke;
@property(readonly, copy, nonatomic) TSDLineEnd *tailLineEnd; // @synthesize tailLineEnd=mTailLineEnd;
@property(readonly, copy, nonatomic) TSDLineEnd *headLineEnd; // @synthesize headLineEnd=mHeadLineEnd;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)initWithStroke:(id)arg1 headLineEnd:(id)arg2 tailLineEnd:(id)arg3;

@end

@interface TSDMagicMoveAnimationMatch : NSObject
{
    TSDTextureSet *_morphTexture;
    TSDTextureSet *_morphQueuedTexture;
    TSDTextureSet *_morphQueuedForDeletionTexture;
    NSLock *_morphTextureUpdateLock;
    _Bool _isUsingMorphTexture;
    _Bool _didUseMorphTexture;
    _Bool _hasBeenTornDown;
    _Bool _isMorphMatch;
    _Bool _isTextStyleIdenticalExceptSize;
    _Bool _shouldDisableTextMorphing;
    TSDTextureSet *_outgoingTexture;
    TSDTextureSet *_incomingTexture;
}

+ (id)animationMatch;
+ (unsigned long long)magicMoveMorphTexturesPerSecond;
@property(nonatomic) _Bool shouldDisableTextMorphing; // @synthesize shouldDisableTextMorphing=_shouldDisableTextMorphing;
@property(nonatomic) _Bool isTextStyleIdenticalExceptSize; // @synthesize isTextStyleIdenticalExceptSize=_isTextStyleIdenticalExceptSize;
@property(nonatomic) _Bool isMorphMatch; // @synthesize isMorphMatch=_isMorphMatch;
@property(retain, nonatomic) TSDTextureSet *incomingTexture; // @synthesize incomingTexture=_incomingTexture;
@property(retain, nonatomic) TSDTextureSet *outgoingTexture; // @synthesize outgoingTexture=_outgoingTexture;
- (void)unlockCurrentMorphTexture;
- (id)lockCurrentMorphTexture;
- (void)addMorphTexture:(id)arg1;
@property(readonly, nonatomic) _Bool isMatched;
- (id)description;
- (void)teardown;
- (void)dealloc;
- (id)init;

@end

@interface TSDMagicMoveMatch : NSObject <TSDMatchingAlgorithmMatch>
{
    TSDMagicMoveMatchObject *_outgoingObject;
    TSDMagicMoveMatchObject *_incomingObject;
    long long _matchType;
    double _distance;
    double _zOrderDistance;
    double _attributeMatchPercent;
    TSDTextureContext *_textureContext;
    long long _matchCost;
    NSString *_name;
}

+ (id)matchWithOutgoingObject:(id)arg1 incomingObject:(id)arg2 matchType:(long long)arg3 attributeMatchPercent:(double)arg4 textureContext:(id)arg5;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
@property(readonly, nonatomic) long long matchCost; // @synthesize matchCost=_matchCost;
@property(retain, nonatomic) TSDTextureContext *textureContext; // @synthesize textureContext=_textureContext;
@property(nonatomic) double attributeMatchPercent; // @synthesize attributeMatchPercent=_attributeMatchPercent;
@property(nonatomic) double zOrderDistance; // @synthesize zOrderDistance=_zOrderDistance;
@property(nonatomic) double distance; // @synthesize distance=_distance;
@property(nonatomic) long long matchType; // @synthesize matchType=_matchType;
@property(readonly, nonatomic) TSDMagicMoveMatchObject *incomingObject; // @synthesize incomingObject=_incomingObject;
@property(readonly, nonatomic) TSDMagicMoveMatchObject *outgoingObject; // @synthesize outgoingObject=_outgoingObject;
- (_Bool)conflictsWithMatch:(id)arg1;
- (id)description;
- (void)p_updateMagicMoveCost;
- (long long)compareToMatch:(id)arg1;
- (void)dealloc;
@property(readonly, nonatomic) _Bool isTextMatch;
@property(readonly, nonatomic) id incomingMatchObject;
@property(readonly, nonatomic) id outgoingMatchObject;

@end

@interface TSDMagicMoveMatchObject : NSObject
{
    TSDRep *_rep;
    long long _zOrder;
    NSMutableDictionary *_attributes;
    NSString *_stringValue;
    NSString *_name;
    struct CGPoint _position;
    struct _NSRange _stringRange;
}

+ (id)matchObjectWithTextRep:(id)arg1 position:(struct CGPoint)arg2 stringValue:(id)arg3 stringRange:(struct _NSRange)arg4;
+ (id)matchObjectWithRep:(id)arg1 position:(struct CGPoint)arg2;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
@property(nonatomic) struct _NSRange stringRange; // @synthesize stringRange=_stringRange;
@property(retain, nonatomic) NSString *stringValue; // @synthesize stringValue=_stringValue;
@property(retain, nonatomic) NSMutableDictionary *attributes; // @synthesize attributes=_attributes;
@property(nonatomic) long long zOrder; // @synthesize zOrder=_zOrder;
@property(nonatomic) struct CGPoint position; // @synthesize position=_position;
@property(retain, nonatomic) TSDRep *rep; // @synthesize rep=_rep;
- (_Bool)conflictsWithMatchObject:(id)arg1;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithRep:(id)arg1 position:(struct CGPoint)arg2 stringValue:(id)arg3 stringRange:(struct _NSRange)arg4;

@end

@interface TSDMagicMoveMatchingEngine : NSObject
{
    NSMutableArray *_matches;
}

+ (id)matchingEngine;
- (id)matchResults;
- (void)addMatches:(id)arg1;
- (void)addMatch:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface TSDMagicMoveTextureZOrderer : NSObject
{
    NSArray *_zOrderMatches;
    NSArray *_outgoingTexturesInZOrder;
    NSArray *_incomingTexturesInZOrder;
    double *_percentTexturesTimes;
    NSArray *_percentTextures;
    unsigned long long _zOrderIntersectionsCount;
}

@property(readonly, nonatomic) unsigned long long zOrderIntersectionsCount; // @synthesize zOrderIntersectionsCount=_zOrderIntersectionsCount;
- (void)p_calculateTextureArraysFromIntersections;
- (unsigned long long)p_bestZIndexForUnassignedMatch:(id)arg1 inMatchArray:(id)arg2;
- (unsigned long long)p_zIntersectionsBetweenZOrdererMatches:(id)arg1;
- (void)p_setupZOrderMatchesWithAnimationMatches:(id)arg1;
- (id)p_arrayBySortingMatches:(id)arg1 withInterpolatedPercent:(double)arg2;
- (void)p_addVisibleTexturesFromMatches:(id)arg1 toArray:(id)arg2 interpolatedPercent:(double)arg3;
- (id)texturedRectanglesAtPercent:(double)arg1;
- (void)dealloc;
- (id)initWithAnimationMatches:(id)arg1;

@end

@interface TSDMagicMoveTextureZOrdererMatch : NSObject
{
    _Bool _isOutgoingZIndexUnmatched;
    _Bool _isIncomingZIndexUnmatched;
    TSDTextureSet *_outgoingTexture;
    TSDTextureSet *_incomingTexture;
    long long _outgoingZIndex;
    long long _incomingZIndex;
    TSDMagicMoveAnimationMatch *_animationMatch;
}

@property(readonly, nonatomic) TSDMagicMoveAnimationMatch *animationMatch; // @synthesize animationMatch=_animationMatch;
@property(readonly, nonatomic) _Bool isIncomingZIndexUnmatched; // @synthesize isIncomingZIndexUnmatched=_isIncomingZIndexUnmatched;
@property(readonly, nonatomic) _Bool isOutgoingZIndexUnmatched; // @synthesize isOutgoingZIndexUnmatched=_isOutgoingZIndexUnmatched;
@property(nonatomic) long long incomingZIndex; // @synthesize incomingZIndex=_incomingZIndex;
@property(nonatomic) long long outgoingZIndex; // @synthesize outgoingZIndex=_outgoingZIndex;
@property(readonly, nonatomic) TSDTextureSet *incomingTexture; // @synthesize incomingTexture=_incomingTexture;
@property(readonly, nonatomic) TSDTextureSet *outgoingTexture; // @synthesize outgoingTexture=_outgoingTexture;
- (id)description;
- (double)interpolatedZIndexAtPercent:(double)arg1;
- (double)intersectionPercentWithZOrdererMatch:(id)arg1;
- (_Bool)intersectsZOrdererMatch:(id)arg1;
- (_Bool)intersectsZOrdererMatch:(id)arg1 withAttemptedZIndex:(long long)arg2;
- (id)initWithAnimationMatch:(id)arg1;

@end

@interface TSDMaskInfo : TSDDrawableInfo <TSDMixing>
{
    TSDPathSource *mPathSource;
}

@property(retain, nonatomic) TSDPathSource *pathSource; // @synthesize pathSource=mPathSource;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (void)setGeometry:(id)arg1;
- (Class)repClass;
- (Class)layoutClass;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithContext:(id)arg1;
- (void)dealloc;
- (id)initWithContext:(id)arg1 geometry:(id)arg2;
- (id)initWithContext:(id)arg1 geometry:(id)arg2 pathSource:(id)arg3;

@end

@interface TSDMaskLayout : TSDLayout
{
    struct {
        unsigned int path:1;
        unsigned int tightPathBounds:1;
    } mMaskInvalidFlags;
    struct CGPath *mCachedPath;
    struct CGPath *mCachedPathNoScale;
    struct CGRect mCachedTightPathBounds;
    struct CGRect mCachedTightPathBoundsNoScale;
    double mPathScale;
    TSDInfoGeometry *mDynamicInfoGeometry;
    TSDPathSource *mDynamicPathSource;
    TSDPathSource *mPathSourceWithProvidedSize;
    _Bool mScalingInMaskMode;
}

@property(nonatomic) double pathScale; // @synthesize pathScale=mPathScale;
- (void)p_destroyDynamicCopies;
- (void)p_setDynamicInfoGeometry:(id)arg1;
- (void)p_createDynamicCopies;
- (struct CGRect)p_cachedTightPathBoundsNoScale;
- (struct CGRect)p_cachedTightPathBounds;
- (void)p_calculateTightPathBoundsIfNecessary;
- (struct CGPath *)p_cachedPathNoScale;
- (struct CGPath *)p_cachedPath;
- (void)p_calculateCachedPathIfNecessary;
- (id)infoGeometry;
- (struct CGPoint)getControlKnobPosition:(unsigned long long)arg1;
- (void)setControlKnobPosition:(unsigned long long)arg1 toPoint:(struct CGPoint)arg2;
- (unsigned long long)numberOfControlKnobs;
@property(readonly, nonatomic) _Bool hasSmartPath;
- (void)dynamicallyMovedSmartShapeKnobTo:(struct CGPoint)arg1 withTracker:(id)arg2;
- (void)dynamicMovePathKnobDidBegin;
- (id)pathSource;
- (struct CGRect)pathBounds;
- (struct CGPath *)path;
- (id)maskInfo;
- (_Bool)shouldDisplayGuides;
- (void)maskModeScaleDidEnd;
- (void)maskModeScaleDidBegin;
- (void)dragBy:(struct CGPoint)arg1;
@property(readonly, nonatomic) TSDImageLayout *imageLayout;
- (struct CGAffineTransform)layoutTransformInInfoSpace:(struct CGAffineTransform)arg1;
- (void)endDynamicOperation;
- (void)takeScaledMaskGeometry:(id)arg1;
- (void)resizeWithTransform:(struct CGAffineTransform)arg1 asChild:(_Bool)arg2;
- (void)beginDynamicOperation;
- (struct CGRect)alignmentFrameForProvidingGuidesInRoot;
- (_Bool)shouldSnapWhileResizing;
- (struct CGAffineTransform)originalTransformForProvidingGuides;
- (struct CGRect)alignmentFrame;
- (void)invalidatePath;
- (void)invalidate;
- (void)processChangedProperty:(int)arg1;
- (struct CGAffineTransform)affineTransformForTightPathBounds;
- (id)computeLayoutGeometry;
- (id)dependentLayouts;
- (void)dealloc;
- (id)initWithInfo:(id)arg1;

@end

@interface TSDMatchingAlgorithm : NSObject
{
    long long *mCostMatrix;
    char *mMaskMatrix;
    _Bool *mIsStarInColumn;
    _Bool *mIsStarInRow;
    _Bool *mIsColCovered;
    _Bool *mIsRowCovered;
    id *mObjectMapping;
    long long mMatrixDimension;
    long long mZ0Row;
    long long mZ0Col;
    NSMutableArray *mResults;
}

+ (id)bestMatchesFromArray:(id)arg1;
- (id)p_bestMatchesFromArray:(id)arg1;
- (int)p_doStep6;
- (int)p_doStep5;
- (int)p_doStep4;
- (int)p_step4IndexOfStarredZeroInRow:(int)arg1;
- (_Bool)p_step4FindAZeroAndReturnRow:(int *)arg1 column:(int *)arg2;
- (int)p_doStep3;
- (int)p_doStep2;
- (int)p_doStep1;
- (void)p_deallocateMatrices;
- (void)p_allocateMatrices;

@end

@interface TSSStyle : TSPObject <NSCopying, TSSPropertyValueValidator, TSSStyleObject, TSSThemeAsset, TSSPropertySource, TSSStyleClient, TSKModel, TSKTransformableObject>
{
    TSSPropertyMap *mOverridePropertyMap;
    NSString *mName;
    NSString *mStyleIdentifier;
    TSSStyle *mParent;
    _Bool mIsVariation;
    TSSStylesheet *mStylesheet;
}

+ (double)fontSizeForFontSize:(double)arg1 scalingFactor:(double)arg2;
+ (_Bool)validateObjectValue:(id *)arg1 withClass:(Class)arg2 forProperty:(int)arg3;
+ (_Bool)validateDoubleValue:(double *)arg1 forProperty:(int)arg2;
+ (_Bool)validateFloatValue:(float *)arg1 forProperty:(int)arg2;
+ (_Bool)validateIntValueAsBool:(int *)arg1 forProperty:(int)arg2;
+ (_Bool)validateIntValue:(int *)arg1 forProperty:(int)arg2 min:(int)arg3 max:(int)arg4;
+ (_Bool)validateIntValue:(int *)arg1 forProperty:(int)arg2;
+ (id)propertiesAllowingNSNull;
+ (id)defaultPropertyMap;
+ (id)defaultStyleWithContext:(id)arg1;
+ (double)defaultDoubleValueForProperty:(int)arg1;
+ (float)defaultFloatValueForProperty:(int)arg1;
+ (int)defaultIntValueForProperty:(int)arg1;
+ (id)defaultValueForProperty:(int)arg1;
+ (id)boxedDefaultValueForProperty:(int)arg1;
+ (id)description;
+ (id)properties;
@property(readonly, nonatomic) TSSStylesheet *stylesheet; // @synthesize stylesheet=mStylesheet;
@property(readonly, nonatomic) _Bool isVariation; // @synthesize isVariation=mIsVariation;
@property(readonly, nonatomic) TSSStyle *parent; // @synthesize parent=mParent;
- (void)replaceReferencedStylesUsingBlock:(CDUnknownBlockType)arg1;
- (id)referencedStyles;
- (id)boxedValueForProperty:(int)arg1 oldBoxedValue:(id)arg2 transformedByTransform:(struct CGAffineTransform)arg3;
- (_Bool)transformsFontSizes;
- (SEL)mapThemeAssetSelector;
- (_Bool)isThemeEquivalent:(id)arg1;
- (_Bool)validateObjectValue:(id *)arg1 withClass:(Class)arg2 forProperty:(int)arg3;
- (_Bool)validateDoubleValue:(double *)arg1 forProperty:(int)arg2;
- (_Bool)validateFloatValue:(float *)arg1 forProperty:(int)arg2;
- (_Bool)validateIntValueAsBool:(int *)arg1 forProperty:(int)arg2;
- (_Bool)validateIntValue:(int *)arg1 forProperty:(int)arg2 min:(int)arg3 max:(int)arg4;
- (_Bool)validateIntValue:(int *)arg1 forProperty:(int)arg2;
- (_Bool)isAncestorOf:(id)arg1;
- (_Bool)isDescendentOf:(id)arg1;
- (_Bool)isParentOf:(id)arg1;
- (_Bool)isChildOf:(id)arg1;
@property(readonly, nonatomic) NSSet *children;
- (void)setParent:(id)arg1;
@property(readonly, nonatomic) TSSStyle *rootIdentifiedAncestor;
@property(readonly, nonatomic) TSSStyle *firstIdentifiedAncestor;
@property(readonly, nonatomic) TSSStyle *baseStyleForVariation;
@property(readonly, nonatomic) TSSStyle *rootAncestor;
- (_Bool)overridePropertyMapIsEqualTo:(id)arg1;
- (void)setOverridePropertyMap:(id)arg1;
@property(readonly, nonatomic) TSSPropertyMap *overridePropertyMap;
- (_Bool)hasEqualValues:(id)arg1 forProperties:(id)arg2;
- (_Bool)hasEqualValuesToPropertyMap:(id)arg1 forProperties:(id)arg2;
- (_Bool)p_hasEqualValuesTo:(id)arg1 forProperty:(int)arg2;
- (_Bool)hasEqualPropertyValues:(id)arg1;
- (id)newOverridePropertyMapWithPropertyMap:(id)arg1;
- (id)overridePropertyMapWithPropertyMap:(id)arg1 overridePropertyMap:(id)arg2 collapseSourceOverrides:(_Bool)arg3;
- (id)fullPropertyMap;
- (id)copyPropertyMap;
- (id)propertyMapIgnoringStyle:(id)arg1;
- (id)propertyMap;
- (double)overrideCGFloatValueForProperty:(int)arg1;
- (double)overrideDoubleValueForProperty:(int)arg1;
- (float)overrideFloatValueForProperty:(int)arg1;
- (int)overrideIntValueForProperty:(int)arg1;
- (id)overrideValueForProperty:(int)arg1;
- (id)boxedOverrideValueForProperty:(int)arg1;
- (unsigned long long)overrideCount;
- (id)overriddenProperties;
- (_Bool)overridesAnyProperty;
- (_Bool)overridesProperty:(int)arg1;
- (_Bool)containsProperty:(int)arg1;
- (_Bool)definesProperty:(int)arg1;
@property(readonly, nonatomic) _Bool isIdentified;
@property(readonly, nonatomic) _Bool isNamed;
- (void)removeAllValues;
- (void)removeValueForProperty:(int)arg1;
- (void)setValuesForProperties:(id)arg1;
- (void)setCGFloatValue:(double)arg1 forProperty:(int)arg2;
- (void)setDoubleValue:(double)arg1 forProperty:(int)arg2;
- (void)setFloatValue:(float)arg1 forProperty:(int)arg2;
- (void)setIntValue:(int)arg1 forProperty:(int)arg2;
- (void)setValue:(id)arg1 forProperty:(int)arg2;
- (void)setBoxedValue:(id)arg1 forProperty:(int)arg2;
- (id)valuesForProperties:(id)arg1;
- (double)CGFloatValueForProperty:(int)arg1;
- (double)doubleValueForProperty:(int)arg1;
- (float)floatValueForProperty:(int)arg1;
- (int)intValueForProperty:(int)arg1;
- (id)objectForProperty:(int)arg1;
- (id)valueForProperty:(int)arg1;
- (id)boxedObjectForProperty:(int)arg1;
- (id)boxedValueForProperty:(int)arg1;
- (id)copyWithContext:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1 context:(id)arg2;
- (id)copyFlattenedWithContext:(id)arg1;
- (_Bool)isEqual:(id)arg1;
@property(readonly) unsigned long long hash;
- (void)dealloc;
- (id)init;
- (id)initWithContext:(id)arg1;
- (id)initWithContext:(id)arg1 name:(id)arg2 overridePropertyMap:(id)arg3 isVariation:(_Bool)arg4;
- (void)setStylesheet:(id)arg1;
- (void)setStyleIdentifier:(id)arg1;
@property(readonly, nonatomic) NSString *styleIdentifier;
@property(copy, nonatomic) NSString *name;
- (id)constrainShapeStyleForContext:(id)arg1;
- (void)constrainStrokeForSwatchGeneration;
- (void)constrainShadowForSwatchGeneration;
- (void)fadeReflectionForSwatchGeneration;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;

@end

@interface TSDMediaStyle : TSSStyle <TSDMixing, TSSPreset>
{
}

+ (id)p_magicMoveProperties;
+ (_Bool)validateFloatValue:(float *)arg1 forProperty:(int)arg2;
+ (id)propertiesAllowingNSNull;
+ (id)defaultValueForProperty:(int)arg1;
+ (float)defaultFloatValueForProperty:(int)arg1;
+ (id)properties;
+ (id)movieStylePresetStyleDescriptor;
+ (id)imageStylePresetStyleDescriptor;
+ (void)initialize;
- (id)boxedValueForProperty:(int)arg1 oldBoxedValue:(id)arg2 transformedByTransform:(struct CGAffineTransform)arg3;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (SEL)mapThemePropertyMapSelector;
@property(readonly, nonatomic) NSString *presetKind;

@end

@interface TSDModifyPrototypeChange : NSObject <TSDPrototypeChange>
{
    id mPrototype;
    TSSMutablePropertySet *mChangedPropertySet;
    TSSPropertyMap *mChangedPropertyMapBeforeChange;
    TSSPropertyMap *mChangedPropertyMapAfterChange;
    TSDPropertySourceForModifyPrototypeChange *mPropertySourceBeforeChange;
    TSDPropertySourceForModifyPrototypeChange *mPropertySourceAfterChange;
    TSSMutablePropertySet *mPropertiesWithOldValuesRecordedButNotNewValues;
}

@property(readonly, retain) TSSMutablePropertySet *i_propertiesWithOldValuesRecordedButNotNewValues; // @synthesize i_propertiesWithOldValuesRecordedButNotNewValues=mPropertiesWithOldValuesRecordedButNotNewValues;
@property(readonly, retain) TSSPropertyMap *changedPropertyMapAfterChange; // @synthesize changedPropertyMapAfterChange=mChangedPropertyMapAfterChange;
@property(readonly, retain) TSSPropertyMap *changedPropertyMapBeforeChange; // @synthesize changedPropertyMapBeforeChange=mChangedPropertyMapBeforeChange;
@property(readonly, retain) TSSMutablePropertySet *changedPropertySet; // @synthesize changedPropertySet=mChangedPropertySet;
@property(readonly, retain) id prototype; // @synthesize prototype=mPrototype;
- (_Bool)propertiesAreChanging:(id)arg1;
- (_Bool)propertyIsChanging:(int)arg1;
@property(readonly, retain) id <TSSPropertySource> propertiesAfterChange;
@property(readonly, retain) id <TSSPropertySource> propertiesBeforeChange;
@property(readonly, retain) id replacement;
@property(readonly) _Bool prototypeIsBeingDeleted;
@property(readonly) _Bool prototypeIsBeingReplaced;
@property(readonly) _Bool prototypeIsBeingModified;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)initModifyPrototypeChangeForPrototype:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSDMovieCompatibilityChecker : NSObject
{
    AVAsset *mAsset;
    long long mCompatibilityLevel;
    NSError *mError;
    CDStruct_79c71658 mCustomMaxPlayableVideoDimensions;
    NSSet *mCustomPlayableVideoCodecTypes;
    int mCustomMaxPlayableVideoPixelsPerFrame;
}

@property(readonly, nonatomic) NSError *error; // @synthesize error=mError;
@property(readonly, nonatomic) long long compatibilityLevel; // @synthesize compatibilityLevel=mCompatibilityLevel;
- (_Bool)p_isAudioTrackPlayableOnAllDevices:(id)arg1;
- (id)p_sampleDescriptionExtensionAtomDataFromVideoFormatDescription:(struct opaqueCMFormatDescription *)arg1 forAtomType:(id)arg2;
- (_Bool)p_isH263VideoFormatPlayableOnAllDevices:(struct opaqueCMFormatDescription *)arg1;
- (_Bool)p_isMPEG4VideoFormatPlayableOnAllDevices:(struct opaqueCMFormatDescription *)arg1;
- (_Bool)p_isH264VideoFormatPlayableOnAllDevices:(struct opaqueCMFormatDescription *)arg1;
- (_Bool)p_isSorenson3VideoFormatPlayableOnAllDevices:(struct opaqueCMFormatDescription *)arg1;
- (_Bool)p_isVideoTrackPlayableOnAllDevices:(id)arg1;
- (_Bool)p_assetHasSupportedFileTypeOnAllDevices;
- (_Bool)p_isLoadedAssetPlayableOnAllDevices;
- (void)cancel;
- (void)p_didFinishCheckingCompatibilityUpToLevel:(long long)arg1 actualLevel:(long long)arg2 didCancel:(_Bool)arg3 error:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)checkCustomCompatibilityWithVideoCodecTypes:(id)arg1 maxPlayableVideoDimensions:(struct CGSize)arg2 maxPlayableVideoPixelsPerFrame:(int)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)checkCompatibilityUpToLevel:(long long)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)dealloc;
- (id)init;
- (id)initWithAsset:(id)arg1;

@end

@interface TSDMovieInfo : TSDMediaInfo <TSDMixing>
{
    TSPData *mMovieData;
    NSURL *mMovieRemoteURL;
    TSPData *mImportedAuxiliaryMovieData;
    TSPData *mAudioOnlyImageData;
    double mStartTime;
    double mEndTime;
    double mPosterTime;
    TSPData *mPosterImageData;
    struct CGSize mNaturalSize;
    unsigned long long mLoopOption;
    float mVolume;
    _Bool mStreaming;
    int mControlStyle;
    _Bool mAllowsAirPlayVideo;
    _Bool mUsesAirPlayVideoWhileAirPlayScreenIsActive;
    NSURL *mURLForMPMPC;
    TSDMediaStyle *mStyle;
    _Bool mAudioOnly;
}

+ (id)presetKinds;
+ (double)defaultPosterTimeForDuration:(double)arg1;
@property(nonatomic, getter=isStreaming) _Bool streaming; // @synthesize streaming=mStreaming;
@property(retain, nonatomic) TSPData *posterImageData; // @synthesize posterImageData=mPosterImageData;
- (id)style;
- (_Bool)supportsHyperlinks;
- (int)intValueForProperty:(int)arg1;
- (float)floatValueForProperty:(int)arg1;
- (double)doubleValueForProperty:(int)arg1;
- (id)objectForProperty:(int)arg1;
- (_Bool)containsProperty:(int)arg1;
- (_Bool)supportsAttachedComments;
- (id)synchronouslyGenerateDefaultPosterImageForContext:(id)arg1;
- (id)generateEmptyPosterImageForContext:(id)arg1;
- (id)makePosterImageGeneratorWithAVAsset:(id)arg1;
- (id)makeAVAssetWithOptions:(id)arg1;
- (id)makeAVAsset;
- (void)acceptVisitor:(id)arg1;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (id)animationFilters;
- (_Bool)canChangeWrapType;
- (Class)editorClass;
- (Class)repClass;
- (Class)layoutClass;
- (Class)styleClass;
- (void)p_setPropertiesFromLoadedAsset:(id)arg1;
- (struct CGSize)rawDataSize;
- (id)presetKind;
- (void)setStyle:(id)arg1;
- (id)mediaFileType;
- (id)mediaDisplayName;
- (id)copyWithContext:(id)arg1 stylesheet:(id)arg2;
- (id)copyWithContext:(id)arg1;
- (void)dealloc;
- (id)initWithContext:(id)arg1 geometry:(id)arg2 style:(id)arg3 movieRemoteURL:(id)arg4 loadedAsset:(id)arg5;
- (id)initWithContext:(id)arg1 geometry:(id)arg2 style:(id)arg3 movieData:(id)arg4 loadedAsset:(id)arg5;
- (id)initWithContext:(id)arg1 geometry:(id)arg2 style:(id)arg3;
- (id)initWithContext:(id)arg1 geometry:(id)arg2;
@property(retain, nonatomic) NSURL *urlForMPMPC;
@property(nonatomic) int controlStyle;
@property(nonatomic) _Bool usesAirPlayVideoWhileAirPlayScreenIsActive;
@property(nonatomic) _Bool allowsAirPlayVideo;
@property(nonatomic, getter=isAudioOnly) _Bool audioOnly;
@property(nonatomic) float volume;
@property(nonatomic) unsigned long long loopOption;
@property(nonatomic) double posterTime;
@property(nonatomic) double endTime;
@property(nonatomic) double startTime;
@property(retain, nonatomic) TSPData *audioOnlyImageData;
@property(retain, nonatomic) TSPData *importedAuxiliaryMovieData;
@property(retain, nonatomic) NSURL *movieRemoteURL;
@property(retain, nonatomic) TSPData *movieData;

@end

@interface TSDMovieKnob : TSDButtonKnob
{
}

- (void)updateHitRegionPathForRep:(id)arg1;

@end

@interface TSDMovieLayout : TSDMediaLayout
{
    TSDInfoGeometry *mDynamicInfoGeometry;
}

- (void)p_destroyDynamicCopies;
- (void)p_createDynamicCopies;
- (struct CGRect)computeAlignmentFrameInRoot:(_Bool)arg1;
- (id)computeLayoutGeometry;
- (struct CGRect)fullReflectionFrame;
- (struct CGRect)fullReflectionBoundsForRect:(struct CGRect)arg1;
- (void)endDynamicOperation;
- (void)beginDynamicOperation;
- (void)takeRotationFromTracker:(id)arg1;
- (id)movieInfo;
- (id)layoutGeometryFromInfo;
- (_Bool)supportsRotation;
- (id)i_computeWrapPath;
- (void)processChangedProperty:(int)arg1;
- (void)dealloc;
- (id)initWithInfo:(id)arg1;

@end

@interface TSDMovieRenderingOperation : TSDSwatchRenderingOperation
{
    TSDMovieInfo *mMovieInfo;
    _Bool mShouldClipVertically;
}

@property(retain) TSDMovieInfo *movieInfo; // @synthesize movieInfo=mMovieInfo;
- (void)doWorkWithReadLock;
- (void)dealloc;
- (id)initWithPreset:(id)arg1 imageSize:(struct CGSize)arg2 imageScale:(double)arg3 swatchFrame:(struct CGRect)arg4 movieInfo:(id)arg5 documentRoot:(id)arg6;
- (id)initWithPreset:(id)arg1 imageSize:(struct CGSize)arg2 imageScale:(double)arg3 swatchFrame:(struct CGRect)arg4 movieInfo:(id)arg5 documentRoot:(id)arg6 shouldClipVertically:(_Bool)arg7;

@end

@interface TSDMovieRep : TSDMediaRep <TSKAVPlayerControllerDelegate>
{
    TSKAVPlayerController *mPlayerController;
    _Bool mCurrentlyObservingPlayerLayer;
    _Bool mPlayerLayerShouldBeDisplayed;
    AVPlayerLayer *mPlayerLayer;
    CALayer *mLayerToStroke;
    CALayer *mMovieReflectionLayer;
    CALayer *mMovieReflectionMaskLayer;
    AVPlayerLayer *mReflectionPlayerLayer;
    CALayer *mReflectionPlayerStrokeMaskLayer;
    _Bool mPreventDisposeOfPlayerLayer;
    CALayer *mPlayerStrokeLayer;
    CALayer *mReflectionPlayerStrokeLayer;
    TSDFrameRep *mReflectionFrameRep;
    CALayer *mReflectionFrameMaskLayer;
    AVAsset *mAssetForPlayability;
    _Bool mDidCheckPlayability;
    _Bool mIsPlayable;
    TSDButtonKnob *mPlayButtonKnob;
    _Bool mPlayButtonKnobVisible;
    _Bool mDidCancelUpdatingPlayButtonVisibility;
    _Bool mInReadMode;
    struct CGImage *mAlternatePosterImage;
    unsigned long long mIsChangingDynamicVisibleTimeCount;
    float mDynamicVolume;
    _Bool mIsChangingDynamicVolume;
    _Bool mNeedsTeardownPlayerController;
}

+ (double)magicMoveAttributeMatchPercentBetweenOutgoingObject:(id)arg1 incomingObject:(id)arg2;
@property(nonatomic) struct CGImage *alternatePosterImage; // @synthesize alternatePosterImage=mAlternatePosterImage;
@property(readonly, nonatomic, getter=isPlayable) _Bool playable; // @synthesize playable=mIsPlayable;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)dynamicVolumeChangeDidEnd;
- (void)dynamicVolumeUpdateToValue:(float)arg1;
- (void)dynamicVolumeChangeDidBegin;
@property(readonly, nonatomic) float volume;
- (void)dynamicVisibleTimeChangeDidEnd;
- (void)dynamicVisibleTimeUpdateToValue:(double)arg1 withTolerance:(double)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)dynamicVisibleTimeChangeDidBegin;
@property(readonly, nonatomic) double visibleTime;
- (_Bool)isDraggable;
- (_Bool)canResetMediaSize;
- (id)additionalLayersOverLayer;
- (id)additionalLayersUnderLayer;
- (void)p_updateEndTime;
- (void)p_updateStartTime;
- (void)p_updateVolume;
- (void)p_teardownPlayerControllerIfNeeded;
- (void)p_setNeedsTeardownPlayerControllerOnUpdateLayer;
- (void)p_teardownPlayerController;
- (void)p_setupPlayerControllerIfNecessary;
- (_Bool)p_shouldPlayerControllerExistThroughoutSelection;
- (void)p_togglePlaying;
- (void)p_playForKnob;
@property(readonly, nonatomic, getter=isPlaying) _Bool playing;
- (void)playbackDidStopForPlayerController:(id)arg1;
- (void)playerController:(id)arg1 playbackDidFailWithError:(id)arg2;
- (id)playerController;
- (void)p_updatePlayButtonVisibility;
@property(readonly, nonatomic) _Bool p_playButtonFitsInFrame;
- (void)p_cancelUpdatingUIStateForMoviePlayability;
- (void)p_stopUpdatingUIStateForMoviePlayability;
- (void)p_updateUIStateForMoviePlayability;
@property(readonly, nonatomic) TSDButtonKnob *p_playButtonKnob;
- (_Bool)shouldShowMediaReplaceUI;
- (void)willEndReadMode;
- (void)willBeginReadMode;
- (void)willBeRemoved;
- (_Bool)directlyManagesVisibilityOfKnob:(id)arg1;
- (unsigned long long)enabledKnobMask;
- (void)addKnobsToArray:(id)arg1;
- (void)p_addPlayButtonToKnobs:(id)arg1;
- (void)screenScaleDidChange;
- (void)p_updateRepeatMode;
- (_Bool)handleSingleTapAtPoint:(struct CGPoint)arg1;
- (_Bool)wantsToHandleTapsWhenLocked;
@property(readonly, nonatomic) _Bool shouldSingleTapPlay;
- (void)becameNotSelected;
- (void)becameSelected;
- (void)processChangedProperty:(int)arg1;
- (id)actionForLayer:(id)arg1 forKey:(id)arg2;
- (void)drawInLayerContext:(struct CGContext *)arg1;
- (void)drawInContextWithoutEffects:(struct CGContext *)arg1 withContent:(_Bool)arg2 withStroke:(_Bool)arg3 withOpacity:(_Bool)arg4 forAlphaOnly:(_Bool)arg5 drawChildren:(_Bool)arg6;
- (void)p_drawInContext:(struct CGContext *)arg1 withContent:(_Bool)arg2 withStroke:(_Bool)arg3 withOpacity:(double)arg4 withMask:(_Bool)arg5 forShadowOrHitTest:(_Bool)arg6;
- (void)p_drawPosterImageInContext:(struct CGContext *)arg1;
- (void)p_updateMovieReflectionMaskLayer;
- (void)p_drawReflectionGradientIntoMovieReflectionLayer:(struct CGContext *)arg1 reflectionSize:(struct CGSize)arg2;
- (void)p_updateStrokeLayerForStroke:(id)arg1 repLayer:(id)arg2;
- (void)p_applyBasicStrokeToLayer:(id)arg1 layer:(id)arg2 bounds:(struct CGRect)arg3;
- (void)p_drawStrokeInContext:(struct CGContext *)arg1;
- (void)p_drawReflectionStrokeInContext:(struct CGContext *)arg1;
- (void)p_commonDrawStrokeInContext:(struct CGContext *)arg1;
- (void)i_updateFrameRep;
- (void)p_updateReflectionFrameRep;
- (void)updateFromLayout;
- (void)updateLayerGeometryFromLayout:(id)arg1;
- (void)p_placeReflectionPlayerLayer:(struct CGRect)arg1 transform:(struct CGAffineTransform)arg2;
- (void)p_setPositionAndBoundsIfDifferent:(id)arg1 position:(struct CGPoint)arg2 bounds:(struct CGRect)arg3;
- (void)didUpdateLayer:(id)arg1;
- (void)willUpdateLayer:(id)arg1;
- (void)p_arrangeLayerVisibility:(id)arg1;
- (struct CGRect)p_strokeFrameForLayerFrame:(struct CGRect)arg1;
- (void)p_setupStrokeLayers:(_Bool)arg1 needsMaskLayer:(_Bool)arg2 isFrame:(_Bool)arg3;
- (void)p_checkAndsyncTilingLayerState:(_Bool)arg1;
- (void)p_setupPlayerStrokeLayers:(_Bool)arg1;
- (_Bool)p_needsTilingLayerForStroke:(id)arg1;
- (void)setShapeReflectionPlayerStrokeLayer:(id)arg1;
- (void)p_setupTilingReflectionPlayerStrokeLayer;
- (void)p_setupShapeReflectionPlayerStrokeLayer;
- (id)reflectionPlayerStrokeLayer;
- (id)p_tilingLayerForReflectionStroke;
- (id)p_shapeLayerForReflectionStroke;
- (void)p_setupShapePlayerStrokeLayer;
- (void)p_setupTilingPlayerStrokeLayer;
- (id)playerStrokeLayer;
- (id)p_tilingLayerForPlayerStroke;
- (id)p_shapeLayerForPlayerStroke;
- (void)drawLayer:(id)arg1 inContext:(struct CGContext *)arg2;
- (void)p_setupPlayerLayerIfNecessary;
- (void)p_setupReflectionPlayerLayerIfNecessary;
- (void)createReflectionLayer;
- (void)disposeReflectionLayer;
- (void)p_showReflectionLayer;
- (void)p_hideReflectionLayer;
- (void)p_disposeReflectionStrokeLayers;
- (void)p_disposeMaskLayer;
- (void)p_disposeStrokeLayer;
- (void)p_createReflectionPlayerStrokeMaskLayer;
- (void)p_createMaskLayerForLayer:(id)arg1;
- (_Bool)directlyManagesLayerContent;
- (void)dealloc;
- (id)movieLayout;
@property(readonly, nonatomic) TSDMovieInfo *movieInfo;
- (id)initWithLayout:(id)arg1 canvas:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSDMutableAngleGradient : TSDAngleGradient <TSDGradientStopContainer>
{
}

@property(nonatomic) double gradientAngleInDegrees; // @dynamic gradientAngleInDegrees;
@property(retain, nonatomic) TSUColor *lastColor;
@property(retain, nonatomic) TSUColor *firstColor;
- (void)setInflectionOfStopAtIndex:(unsigned long long)arg1 toInflection:(double)arg2;
- (void)setColorOfStopAtIndex:(unsigned long long)arg1 toColor:(id)arg2;
- (void)swapStopAtIndex:(unsigned long long)arg1 withStopAtIndex:(unsigned long long)arg2;
- (void)moveStopAtIndex:(unsigned long long)arg1 toFraction:(double)arg2;
@property(nonatomic) unsigned long long gradientType; // @dynamic gradientType;
- (void)evenlyDistributeStops;
- (void)reverseStopOrder;
- (id)insertStopAtFraction:(double)arg1 withColor:(id)arg2;
- (id)insertStopAtFraction:(double)arg1;
- (id)removeStopAtIndex:(unsigned long long)arg1;
- (void)removeStop:(id)arg1;
- (void)insertGradientStop:(id)arg1;
@property(retain, nonatomic) NSArray *gradientStops; // @dynamic gradientStops;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(nonatomic) double gradientAngle; // @dynamic gradientAngle;
@property(readonly) unsigned long long hash;
@property(nonatomic) _Bool isAdvancedGradient; // @dynamic isAdvancedGradient;
@property(nonatomic) double opacity; // @dynamic opacity;
@property(readonly) Class superclass;

@end

@interface TSDMutableBrushStroke : TSDBrushStroke
{
}

- (void)setPatternPropertiesFromStroke:(id)arg1;
- (void)setPropertiesFromStroke:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;

// Remaining properties
@property(nonatomic) double actualWidth; // @dynamic actualWidth;
@property(nonatomic) int cap; // @dynamic cap;
@property(retain, nonatomic) TSUColor *color; // @dynamic color;
@property(nonatomic) int join; // @dynamic join;
@property(nonatomic) double miterLimit; // @dynamic miterLimit;
@property(retain, nonatomic) TSDStrokePattern *pattern; // @dynamic pattern;
@property(copy, nonatomic) NSString *strokeName; // @dynamic strokeName;
@property(nonatomic) double width; // @dynamic width;

@end

@interface TSDMutableCalligraphyStroke : TSDCalligraphyStroke
{
}

- (void)setPatternPropertiesFromStroke:(id)arg1;
- (void)setPropertiesFromStroke:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;

// Remaining properties
@property(nonatomic) double actualWidth; // @dynamic actualWidth;
@property(nonatomic) int cap; // @dynamic cap;
@property(retain, nonatomic) TSUColor *color; // @dynamic color;
@property(nonatomic) int join; // @dynamic join;
@property(nonatomic) double miterLimit; // @dynamic miterLimit;
@property(retain, nonatomic) TSDStrokePattern *pattern; // @dynamic pattern;
@property(copy, nonatomic) NSString *strokeName; // @dynamic strokeName;
@property(nonatomic) double width; // @dynamic width;

@end

@interface TSDMutableColorFill : TSDColorFill
{
}

@property(nonatomic) double saturation; // @dynamic saturation;
@property(nonatomic) double brightness; // @dynamic brightness;
@property(nonatomic) double hue; // @dynamic hue;
@property(nonatomic) double opacity; // @dynamic opacity;
@property(copy, nonatomic) TSUColor *color; // @dynamic color;

@end

@interface TSDMutableContactShadow : TSDContactShadow
{
}

@property(nonatomic) TSUColor *TSUColor; // @dynamic TSUColor;
@property(nonatomic) struct CGColor *color; // @dynamic color;
- (void)setOpacity:(double)arg1;
@property(nonatomic) double offset; // @dynamic offset;
@property(nonatomic) double radius; // @dynamic radius;
@property(nonatomic) double perspective; // @dynamic perspective;
@property(nonatomic) double height; // @dynamic height;

// Remaining properties
@property(nonatomic, getter=isEnabled) _Bool enabled; // @dynamic enabled;

@end

@interface TSDMutableCurvedShadow : TSDCurvedShadow
{
}

@property(nonatomic) TSUColor *TSUColor; // @dynamic TSUColor;
@property(nonatomic) struct CGColor *color; // @dynamic color;
@property(nonatomic) double opacity; // @dynamic opacity;
@property(nonatomic) double radius; // @dynamic radius;
@property(nonatomic) double angle; // @dynamic angle;
@property(nonatomic) double offset; // @dynamic offset;
@property(nonatomic) double curve; // @dynamic curve;

// Remaining properties
@property(nonatomic, getter=isEnabled) _Bool enabled; // @dynamic enabled;

@end

@interface TSDMutableDropShadow : TSDDropShadow
{
}

- (void)setTSUColor:(id)arg1;
@property(nonatomic, getter=isEnabled) _Bool enabled; // @dynamic enabled;
@property(nonatomic) struct CGColor *color; // @dynamic color;
@property(nonatomic) double opacity; // @dynamic opacity;
@property(nonatomic) double radius; // @dynamic radius;
@property(nonatomic) double offset; // @dynamic offset;
@property(nonatomic) double angle; // @dynamic angle;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface TSDMutableExteriorTextWrap : TSDExteriorTextWrap
{
}

- (void)setAlphaThreshold:(double)arg1;
- (void)setMargin:(double)arg1;
- (void)setFitType:(int)arg1;
- (void)setDirection:(int)arg1;
- (void)setType:(int)arg1;
- (void)setIsHTMLWrap:(_Bool)arg1;

@end

@interface TSDMutableFrame : TSDFrame
{
}

@property(nonatomic) double assetScale; // @dynamic assetScale;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface TSDMutableGradient : TSDGradient <TSDGradientStopContainer>
{
}

- (void)setFraction:(double)arg1 ofStopAtIndex:(unsigned long long)arg2;
@property(retain, nonatomic) TSUColor *lastColor;
@property(retain, nonatomic) TSUColor *firstColor;
- (void)setInflectionOfStopAtIndex:(unsigned long long)arg1 toInflection:(double)arg2;
- (void)setColorOfStopAtIndex:(unsigned long long)arg1 toColor:(id)arg2;
- (void)swapStopAtIndex:(unsigned long long)arg1 withStopAtIndex:(unsigned long long)arg2;
- (void)moveStopAtIndex:(unsigned long long)arg1 toFraction:(double)arg2;
@property(nonatomic) unsigned long long gradientType; // @dynamic gradientType;
- (void)evenlyDistributeStops;
- (void)reverseStopOrder;
- (id)insertStopAtFraction:(double)arg1 withColor:(id)arg2;
- (id)insertStopAtFraction:(double)arg1;
- (id)removeStopAtIndex:(unsigned long long)arg1;
- (void)removeStop:(id)arg1;
- (void)insertGradientStop:(id)arg1;
@property(retain, nonatomic) NSArray *gradientStops; // @dynamic gradientStops;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(nonatomic) _Bool isAdvancedGradient; // @dynamic isAdvancedGradient;
@property(nonatomic) double opacity; // @dynamic opacity;
@property(readonly) Class superclass;

@end

@interface TSDMutableGradientStop : TSDGradientStop
{
}

@property(nonatomic) double inflection; // @dynamic inflection;
@property(nonatomic) double fraction; // @dynamic fraction;
@property(copy, nonatomic) TSUColor *color; // @dynamic color;

@end

@interface TSDMutableImageFill : TSDImageFill
{
}

@property(nonatomic) _Bool interpretsUntaggedImageDataAsGeneric; // @dynamic interpretsUntaggedImageDataAsGeneric;
- (void)setScale:(double)arg1;
@property(nonatomic) struct CGSize fillSize; // @dynamic fillSize;
@property(retain, nonatomic) TSPData *imageData; // @dynamic imageData;
@property(nonatomic) int technique; // @dynamic technique;
@property(copy, nonatomic) TSUColor *tintColor; // @dynamic tintColor;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface TSDMutableInfoGeometry : TSDInfoGeometry
{
}

- (void)setTransformedBoundsOrigin:(struct CGPoint)arg1;
- (void)setCenter:(struct CGPoint)arg1;
- (void)setVerticalFlip:(_Bool)arg1;
- (void)setHorizontalFlip:(_Bool)arg1;
- (void)setHeightValid:(_Bool)arg1;
- (void)setWidthValid:(_Bool)arg1;
- (void)setAngle:(double)arg1;
- (void)setSize:(struct CGSize)arg1;
- (void)setPosition:(struct CGPoint)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface TSDMutableLayoutGeometry : TSDLayoutGeometry
{
}

- (void)outsetBy:(struct CGSize)arg1;
- (void)transformBy:(struct CGAffineTransform)arg1;
- (void)setTransform:(struct CGAffineTransform)arg1;
- (void)setSize:(struct CGSize)arg1;

@end

@interface TSDReflection : NSObject <TSDMixing, NSCopying, NSMutableCopying>
{
    double mOpacity;
    double mFadeAcceleration;
}

+ (_Bool)canMixWithNilObjects;
+ (id)reflection;
@property(readonly, nonatomic) double fadeAcceleration; // @synthesize fadeAcceleration=mFadeAcceleration;
@property(readonly, nonatomic) double opacity; // @synthesize opacity=mOpacity;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (id)description;
- (unsigned long long)hash;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEqual:(id)arg1;
- (id)initWithOpacity:(double)arg1;
- (id)initWithOpacity:(double)arg1 fadeAcceleration:(double)arg2;
- (id)init;

@end

@interface TSDMutableReflection : TSDReflection
{
}

- (void)setFadeAcceleration:(double)arg1;
- (void)setOpacity:(double)arg1;

@end

@interface TSDMutableShadow : TSDShadow
{
}

- (void)setEnabled:(_Bool)arg1;
- (void)setTSUColor:(id)arg1;
- (void)setColor:(struct CGColor *)arg1;
- (void)setOpacity:(double)arg1;
- (void)setRadius:(double)arg1;
- (void)setOffset:(double)arg1;
- (void)setAngle:(double)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface TSDMutableStroke : TSDStroke
{
}

+ (id)emptyStroke;
+ (id)stroke;
- (void)setPatternPropertiesFromStroke:(id)arg1;
- (void)setPropertiesFromStroke:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
@property(nonatomic) _Bool dontClearBackground; // @dynamic dontClearBackground;

// Remaining properties
@property(nonatomic) double actualWidth; // @dynamic actualWidth;
@property(nonatomic) int cap; // @dynamic cap;
@property(retain, nonatomic) TSUColor *color; // @dynamic color;
@property(nonatomic) int join; // @dynamic join;
@property(nonatomic) double miterLimit; // @dynamic miterLimit;
@property(retain, nonatomic) TSDStrokePattern *pattern; // @dynamic pattern;
@property(nonatomic) double width; // @dynamic width;

@end

@interface TSDTransformGradient : TSDGradient <TSDMixing>
{
    struct CGPoint mStart;
    struct CGPoint mEnd;
    struct CGSize mBaseNaturalSize;
    struct CGAffineTransform mTransformBeforeUpgrade;
}

@property(nonatomic) struct CGSize baseNaturalSize; // @synthesize baseNaturalSize=mBaseNaturalSize;
@property(nonatomic) struct CGPoint endPoint; // @synthesize endPoint=mEnd;
@property(nonatomic) struct CGPoint startPoint; // @synthesize startPoint=mStart;
- (void)p_drawQuartzShadingInContext:(struct CGContext *)arg1 withGradientNaturalSize:(struct CGSize)arg2 baseNaturalSize:(struct CGSize)arg3 start:(struct CGPoint)arg4 end:(struct CGPoint)arg5;
- (struct CGPoint)p_scalePoint:(struct CGPoint)arg1 fromShapeWithNaturalSize:(struct CGSize)arg2;
- (struct CGPoint)p_scalePoint:(struct CGPoint)arg1 toShapeWithNaturalSize:(struct CGSize)arg2;
- (void)p_setDefaultValues;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (double)gradientAngleInDegrees;
- (struct CGSize)baseNaturalSizeForBounds:(struct CGRect)arg1;
- (struct CGPoint)endPointForPath:(id)arg1 andBounds:(struct CGRect)arg2;
- (struct CGPoint)startPointForPath:(id)arg1 andBounds:(struct CGRect)arg2;
- (struct CGAffineTransform)transformForSize:(struct CGSize)arg1;
- (void)paintPath:(struct CGPath *)arg1 naturalBounds:(struct CGRect)arg2 inContext:(struct CGContext *)arg3 isPDF:(_Bool)arg4;
- (void)paintPath:(struct CGPath *)arg1 inContext:(struct CGContext *)arg2;
- (void)paintRect:(struct CGRect)arg1 inContext:(struct CGContext *)arg2;
- (void)paintRect:(struct CGRect)arg1 inContext:(struct CGContext *)arg2 atAngle:(double)arg3;
- (struct CGPoint)normalizedPointForSize:(struct CGSize)arg1 endPoint:(_Bool)arg2;
- (_Bool)isAdvancedGradientIgnoringFlag;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEqualIgnoringTransform:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (id)description;
- (void)dealloc;
- (unsigned long long)hash;
- (id)initWithGradient:(id)arg1 inPath:(id)arg2 andBounds:(struct CGRect)arg3;
- (id)initWithGradientStops:(id)arg1 type:(unsigned long long)arg2;
- (id)initWithStartColor:(id)arg1 endColor:(id)arg2 type:(unsigned long long)arg3;

@end

@interface TSDMutableTransformGradient : TSDTransformGradient <TSDGradientStopContainer>
{
}

- (void)setGradientAngleInDegrees:(double)arg1;
- (void)upgradeIfNecessaryWithBaseNaturalSize:(struct CGSize)arg1;
- (void)setEndPoint:(struct CGPoint)arg1 inShapeWithNaturalSize:(struct CGSize)arg2;
- (void)setStartPoint:(struct CGPoint)arg1 inShapeWithNaturalSize:(struct CGSize)arg2;
@property(retain, nonatomic) TSUColor *lastColor;
@property(retain, nonatomic) TSUColor *firstColor;
- (void)setInflectionOfStopAtIndex:(unsigned long long)arg1 toInflection:(double)arg2;
- (void)setColorOfStopAtIndex:(unsigned long long)arg1 toColor:(id)arg2;
- (void)swapStopAtIndex:(unsigned long long)arg1 withStopAtIndex:(unsigned long long)arg2;
- (void)moveStopAtIndex:(unsigned long long)arg1 toFraction:(double)arg2;
@property(nonatomic) unsigned long long gradientType; // @dynamic gradientType;
- (void)evenlyDistributeStops;
- (void)reverseStopOrder;
- (id)insertStopAtFraction:(double)arg1 withColor:(id)arg2;
- (id)insertStopAtFraction:(double)arg1;
- (id)removeStopAtIndex:(unsigned long long)arg1;
- (void)removeStop:(id)arg1;
- (void)insertGradientStop:(id)arg1;
@property(retain, nonatomic) NSArray *gradientStops; // @dynamic gradientStops;

// Remaining properties
@property(nonatomic) struct CGSize baseNaturalSize; // @dynamic baseNaturalSize;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(nonatomic) struct CGPoint endPoint; // @dynamic endPoint;
@property(readonly) unsigned long long hash;
@property(nonatomic) _Bool isAdvancedGradient; // @dynamic isAdvancedGradient;
@property(nonatomic) double opacity; // @dynamic opacity;
@property(nonatomic) struct CGPoint startPoint; // @dynamic startPoint;
@property(readonly) Class superclass;

@end

@interface TSDNoChangePrototypeChange : NSObject <TSDPrototypeChange>
{
    id mPrototype;
}

@property(readonly, retain) id prototype; // @synthesize prototype=mPrototype;
- (_Bool)propertiesAreChanging:(id)arg1;
- (_Bool)propertyIsChanging:(int)arg1;
@property(readonly, retain) id <TSSPropertySource> propertiesAfterChange;
@property(readonly, retain) id <TSSPropertySource> propertiesBeforeChange;
@property(readonly, retain) id replacement;
- (id)changedPropertySet;
@property(readonly) _Bool prototypeIsBeingDeleted;
@property(readonly) _Bool prototypeIsBeingReplaced;
@property(readonly) _Bool prototypeIsBeingModified;
- (void)dealloc;
@property(readonly, copy) NSString *description;
- (id)initNoChangePrototypeChangeForPrototype:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSDNoDefaultImplicitActionGradientLayer : CAGradientLayer
{
}

+ (id)defaultActionForKey:(id)arg1;

@end

@interface TSDNoDefaultImplicitActionScrollLayer : CAScrollLayer
{
}

+ (id)defaultActionForKey:(id)arg1;

@end

@interface TSDNoDefaultImplicitActionShapeLayer : CAShapeLayer
{
}

+ (id)defaultActionForKey:(id)arg1;

@end

@interface TSDNoDefaultImplicitActionTransformLayer : CATransformLayer
{
}

+ (id)defaultActionForKey:(id)arg1;

@end

@interface TSDNonInteractiveInsertionContext : TSDInsertionContext
{
}

- (_Bool)isInteractive;
- (struct CGPoint)preferredCenter;
- (_Bool)insertWillBeDiscarded;
- (_Bool)fromDragToInsertController;
- (_Bool)insertFromDrag;
- (_Bool)insertFloating;
- (_Bool)shouldEndEditing;
- (_Bool)isPreferredCenterRequired;
- (_Bool)hasPreferredCenter;

@end

@interface TSDNonInteractiveFloatingInsertionContext : TSDNonInteractiveInsertionContext
{
}

- (_Bool)insertFloating;

@end

@interface TSDPDFImageProvider : TSDImageProvider
{
    struct CGPDFDocument *mPDFDocument;
    struct CGSize mNaturalSize;
}

- (struct CGPDFDocument *)p_load;
- (void)p_loadIfNecessary;
- (void)flush;
- (_Bool)hasFlushableContent;
- (void)drawImageInContext:(struct CGContext *)arg1 rect:(struct CGRect)arg2;
- (_Bool)isValid;
- (struct CGSize)naturalSize;
- (long long)pageAngle;
- (struct CGPDFDocument *)CGPDFDocument;
- (void)dealloc;

@end

@interface TSDPartitionedPartialLayout : TSDLayout
{
    struct CGRect mBounds;
    TSDDefaultPartitioner *mPartitioner;
}

@property(readonly, nonatomic) TSDDefaultPartitioner *partitioner; // @synthesize partitioner=mPartitioner;
@property(readonly, nonatomic) struct CGRect bounds; // @synthesize bounds=mBounds;
- (id)computeLayoutGeometry;
- (Class)repClassOverride;
- (id)initWithInfo:(id)arg1 bounds:(struct CGRect)arg2 partitioner:(id)arg3;

@end

@interface TSDPartitionedPartialRep : TSDRep
{
}

- (struct CGRect)p_convertBaseToNaturalRect:(struct CGRect)arg1;
- (struct CGImage *)p_newImageForCachingBaseRep;
- (struct CGRect)p_clipRect;
- (struct UIEdgeInsets)p_edgeInsetsForClipping;
- (id)i_queueForTileProvider;
- (void)resetCachedPartitionedRendering;
- (void)didUpdateLayer:(id)arg1;
- (void)addBitmapsToRenderingQualityInfo:(id)arg1 inContext:(struct CGContext *)arg2;
- (void)drawInContext:(struct CGContext *)arg1;
- (void)willBeRemoved;
- (struct CGRect)clipRect;
- (struct CGRect)layerFrameInScaledCanvas;
- (_Bool)directlyManagesLayerContent;
- (id)initWithLayout:(id)arg1 canvas:(id)arg2;

@end

@interface TSDPathCut : NSObject
{
    long long mSegment;
    double mT;
    double mSkew;
}

@property(readonly, nonatomic) double skew; // @synthesize skew=mSkew;
@property(readonly, nonatomic) double t; // @synthesize t=mT;
@property(readonly, nonatomic) long long segment; // @synthesize segment=mSegment;
- (id)description;
- (id)initWithSegment:(long long)arg1 atT:(double)arg2 withSkew:(double)arg3;

@end

@interface TSDPathStroker : NSObject
{
    TSUColor *mColor;
    double mWidth;
    TSDPathStroker *mPrecedingStroker;
}

@property(nonatomic) double width; // @synthesize width=mWidth;
- (void)strokePath:(struct CGPath *)arg1 inContext:(struct CGContext *)arg2 inColor:(id)arg3;
- (void)dealloc;
- (id)initWithProperties:(id)arg1 bundle:(id)arg2 dataManager:(void *)arg3 precedingStroker:(id)arg4;

@end

@interface TSDPathFiller : TSDPathStroker
{
}

- (void)strokePath:(struct CGPath *)arg1 inContext:(struct CGContext *)arg2 inColor:(id)arg3;
- (id)initWithProperties:(id)arg1 bundle:(id)arg2 dataManager:(void *)arg3 precedingStroker:(id)arg4;

@end

@interface TSDPathIntersection : NSObject
{
    long long mSegment;
    long long mSegmentB;
    double mT;
    double mTB;
    struct CGPoint mPoint;
}

@property(readonly, nonatomic) double tB; // @synthesize tB=mTB;
@property(readonly, nonatomic) long long segmentB; // @synthesize segmentB=mSegmentB;
@property(nonatomic) struct CGPoint point; // @synthesize point=mPoint;
@property(readonly, nonatomic) double t; // @synthesize t=mT;
@property(readonly, nonatomic) long long segment; // @synthesize segment=mSegment;
- (long long)compareT:(id)arg1;
- (long long)compareSegmentAndT:(id)arg1;
- (id)description;
- (id)initWithSegment:(long long)arg1 atT:(double)arg2 onSegmentB:(long long)arg3 atT:(double)arg4 atPoint:(struct CGPoint)arg5;
- (id)initWithSegment:(long long)arg1 atT:(double)arg2 atPoint:(struct CGPoint)arg3;

@end

@interface TSDPointPathSource : TSDPathSource <TSDMixing, TSDSmartPathSource>
{
    int mType;
    struct CGPoint mPoint;
    struct CGSize mNaturalSize;
}

+ (id)pathSourceWithType:(int)arg1 point:(struct CGPoint)arg2 naturalSize:(struct CGSize)arg3;
+ (id)plusWithPoint:(struct CGPoint)arg1 naturalSize:(struct CGSize)arg2;
+ (id)starWithPoint:(struct CGPoint)arg1 naturalSize:(struct CGSize)arg2;
+ (id)doubleArrowWithPoint:(struct CGPoint)arg1 naturalSize:(struct CGSize)arg2;
+ (id)leftSingleArrowWithPoint:(struct CGPoint)arg1 naturalSize:(struct CGSize)arg2;
+ (id)rightSingleArrowWithPoint:(struct CGPoint)arg1 naturalSize:(struct CGSize)arg2;
@property struct CGSize naturalSize; // @synthesize naturalSize=mNaturalSize;
@property struct CGPoint point; // @synthesize point=mPoint;
@property int type; // @synthesize type=mType;
- (_Bool)p_isFlippedDoubleArrow;
- (_Bool)p_isRightFacingArrow;
- (struct CGPoint)p_getControlKnobPointForPlus;
- (void)p_setControlKnobPointForPlus:(struct CGPoint)arg1;
- (struct CGPoint)p_getControlKnobPointForStarInnerRadius;
- (void)p_setControlKnobPointForStarInnerRadius:(struct CGPoint)arg1;
- (struct CGPoint)p_getControlKnobPointForStarPoints;
- (void)p_setControlKnobPointForStarPoints:(struct CGPoint)arg1;
- (struct CGPoint)p_getControlKnobPointForArrow;
- (void)p_setControlKnobPointForArrow:(struct CGPoint)arg1;
- (struct CGPath *)p_newPlusPath;
- (struct CGPath *)p_newStarPath;
- (struct CGPath *)p_newArrowPath;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (struct CGSize)scaleFactorForInscribedRectangle;
- (_Bool)isCircular;
- (_Bool)isRectangular;
- (id)bezierPathWithoutFlips;
- (id)valueForSetSelector:(SEL)arg1;
- (struct CGPath *)newFeedbackPathForKnob:(unsigned long long)arg1;
- (id)getFeedbackStringForKnob:(unsigned long long)arg1;
- (void)setControlKnobPosition:(unsigned long long)arg1 toPoint:(struct CGPoint)arg2;
- (struct CGPoint)getControlKnobPosition:(unsigned long long)arg1;
@property(readonly) unsigned long long numberOfControlKnobs;
- (void)setPointValue:(id)arg1;
- (void)scaleToNaturalSize:(struct CGSize)arg1;
- (struct CGPoint)maxPointValue;
- (struct CGPoint)minPointValue;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;
- (id)initWithType:(int)arg1 point:(struct CGPoint)arg2 naturalSize:(struct CGSize)arg3;

@end

@interface TSDPreventScrollGestureRecognizer : UIGestureRecognizer
{
    TSDInteractiveCanvasController *mICC;
    UITouch *mTouch;
    UITouch *mSecondTouch;
}

- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)reset;
- (id)initWithInteractiveCanvasController:(id)arg1;

@end

@interface TSDPropertySourceForModifyPrototypeChange : NSObject <TSSPropertySource>
{
    TSDModifyPrototypeChange *mChange;
    _Bool mAfterChange;
}

- (double)CGFloatValueForProperty:(int)arg1;
- (double)doubleValueForProperty:(int)arg1;
- (float)floatValueForProperty:(int)arg1;
- (int)intValueForProperty:(int)arg1;
- (id)objectForProperty:(int)arg1;
- (id)boxedObjectForProperty:(int)arg1;
- (_Bool)containsProperty:(int)arg1;
- (id)p_propertyMap;
- (id)initWithPrototypeChange:(id)arg1 afterChange:(_Bool)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSDTileProvider : NSObject
{
    id <NSObject> mTarget;
    TSDTileStorage *mTileStorage;
    TSKAccessController *mAccessController;
    NSObject<OS_dispatch_queue> *mQueue;
    CDStruct_2d1207dd mVisibleTileRect;
}

@property CDStruct_2d1207dd visibleTileRect; // @synthesize visibleTileRect=mVisibleTileRect;
- (id)p_bucketKey;
- (id)actionForLayer:(id)arg1 forKey:(id)arg2;
- (void)drawLayer:(id)arg1 inContext:(struct CGContext *)arg2;
- (void)drawTargetInLayer:(id)arg1 context:(struct CGContext *)arg2;
- (_Bool)canTargetDrawInParallel;
- (_Bool)isTargetOpaque;
- (void)removeStoredImages;
- (void)flush;
- (id)contentsInRect:(struct CGRect)arg1 contentsScale:(double)arg2 forTile:(id)arg3 atLocation:(CDStruct_73b5d383)arg4 takingReadLock:(_Bool)arg5;
- (void)provideContentsInRect:(struct CGRect)arg1 contentsScale:(double)arg2 forTile:(id)arg3 atLocation:(CDStruct_73b5d383)arg4 inGroup:(id)arg5 limitedBySemaphore:(id)arg6 takingReadLock:(_Bool)arg7 startBlock:(CDUnknownBlockType)arg8 completionBlock:(CDUnknownBlockType)arg9;
- (void)dealloc;
- (id)initWithTarget:(id)arg1 queue:(id)arg2 storage:(id)arg3 accessController:(id)arg4;

@end

@interface TSDRepTileProvider : TSDTileProvider
{
}

- (void)endDrawingOperation;
- (void)beginDrawingOperation;
- (void)drawTargetInLayer:(id)arg1 context:(struct CGContext *)arg2;
- (_Bool)canTargetDrawInParallel;
- (_Bool)isTargetOpaque;
- (id)initWithRep:(id)arg1;

@end

@interface TSDReplaceDeletePrototypeChange : NSObject <TSDPrototypeChange>
{
    _Bool mPrototypeIsBeingReplaced;
    _Bool mPrototypeIsBeingDeleted;
    id mReplacement;
    id mPrototype;
}

@property(readonly, retain) id prototype; // @synthesize prototype=mPrototype;
@property(readonly, retain) id replacement; // @synthesize replacement=mReplacement;
@property(readonly) _Bool prototypeIsBeingDeleted; // @synthesize prototypeIsBeingDeleted=mPrototypeIsBeingDeleted;
@property(readonly) _Bool prototypeIsBeingReplaced; // @synthesize prototypeIsBeingReplaced=mPrototypeIsBeingReplaced;
- (_Bool)propertiesAreChanging:(id)arg1;
- (_Bool)propertyIsChanging:(int)arg1;
@property(readonly, retain) id <TSSPropertySource> propertiesAfterChange;
@property(readonly, retain) id <TSSPropertySource> propertiesBeforeChange;
- (id)changedPropertySet;
@property(readonly) _Bool prototypeIsBeingModified;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)initDeletePrototypeChangeForPrototype:(id)arg1 replacement:(id)arg2;
- (id)initReplacePrototypeChangeForPrototype:(id)arg1 toReplacement:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSDRootLayout : TSDAbstractLayout <TSDAdaptiveLayout>
{
    TSDLayoutController *mLayoutController;
    _Bool mSupportsAdaptiveLayout;
    TSUPointerKeyDictionary *mShiftedObjects;
}

- (struct CGPoint)applyAdaptiveLayoutTo:(id)arg1 info:(id)arg2 offset:(struct CGPoint)arg3;
- (void)endDynamicAdaptiveLayout;
- (void)beginDynamicAdaptiveLayout;
- (id)p_shiftedObjects;
- (_Bool)isRootLayoutForInspectorGeometry;
- (id)layoutsForProvidingGuidesForChildLayouts;
- (_Bool)providesGuidesForChildLayouts;
- (id)childLayoutsInRect:(struct CGRect)arg1;
- (id)layoutController;
- (void)dealloc;
- (id)initWithLayoutController:(id)arg1;

@end

@interface TSDScalarPathSource : TSDPathSource <TSDMixing, TSDSmartPathSource>
{
    int mType;
    double mScalar;
    struct CGSize mNaturalSize;
}

+ (id)pathSourceWithType:(int)arg1 scalar:(double)arg2 naturalSize:(struct CGSize)arg3;
+ (id)chevronWithScalar:(double)arg1 naturalSize:(struct CGSize)arg2;
+ (id)regularPolygonWithScalar:(double)arg1 naturalSize:(struct CGSize)arg2;
+ (id)roundedRectangleWithScalar:(double)arg1 naturalSize:(struct CGSize)arg2;
+ (id)rectangleWithNaturalSize:(struct CGSize)arg1;
@property(nonatomic) struct CGSize naturalSize; // @synthesize naturalSize=mNaturalSize;
@property(nonatomic) double scalar; // @synthesize scalar=mScalar;
@property(nonatomic) int type; // @synthesize type=mType;
- (struct CGPoint)p_getControlKnobPointForChevron;
- (void)p_setControlKnobPointForChevron:(struct CGPoint)arg1;
- (struct CGPoint)p_getControlKnobPointForRegularPolygon;
- (void)p_setControlKnobPointForRegularPolygon:(struct CGPoint)arg1;
- (struct CGPoint)p_getControlKnobPointForRoundedRect;
- (void)p_setControlKnobPointForRoundedRect:(struct CGPoint)arg1;
- (struct CGPath *)p_newChevronPath;
- (struct CGPath *)p_newRegularPolygonPath;
- (struct CGPath *)p_newRoundedRectPath;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (struct CGSize)scaleFactorForInscribedRectangle;
- (_Bool)isCircular;
- (_Bool)isRectangular;
- (id)bezierPathWithoutFlips;
- (id)valueForSetSelector:(SEL)arg1;
- (struct CGPath *)newFeedbackPathForKnob:(unsigned long long)arg1;
- (id)getFeedbackStringForKnob:(unsigned long long)arg1;
- (void)setControlKnobPosition:(unsigned long long)arg1 toPoint:(struct CGPoint)arg2;
- (struct CGPoint)getControlKnobPosition:(unsigned long long)arg1;
@property(readonly) unsigned long long numberOfControlKnobs;
@property(readonly, nonatomic) double maxScalar;
- (void)setScalarValue:(id)arg1;
- (void)scaleToNaturalSize:(struct CGSize)arg1;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;
- (id)initWithType:(int)arg1 scalar:(double)arg2 naturalSize:(struct CGSize)arg3;

@end

@interface TSKScrollView : UIScrollView
{
    unsigned long long mAnimatingContentOffsetCount;
    _Bool _mayPassScrollEventsToNextResponder;
    _Bool _shouldDisableScrollingWhenCursorIsHidden;
    struct CGRect _scrollableAreaBounds;
}

@property(readonly, nonatomic) struct CGRect scrollableAreaBounds; // @synthesize scrollableAreaBounds=_scrollableAreaBounds;
@property(nonatomic) _Bool shouldDisableScrollingWhenCursorIsHidden; // @synthesize shouldDisableScrollingWhenCursorIsHidden=_shouldDisableScrollingWhenCursorIsHidden;
@property(nonatomic) _Bool mayPassScrollEventsToNextResponder; // @synthesize mayPassScrollEventsToNextResponder=_mayPassScrollEventsToNextResponder;
- (void)hideScrollIndicators;
- (void)layoutSubviews;
@property(readonly, nonatomic) UIView *contentView;
- (void)setContentOffset:(struct CGPoint)arg1;
- (void)setContentOffset:(struct CGPoint)arg1 animated:(_Bool)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)setContentOffset:(struct CGPoint)arg1 animated:(_Bool)arg2;
@property(readonly, nonatomic, getter=isScrolling) _Bool scrolling;
- (struct CGRect)visibleFrame;
- (void)scrollRectToVisible:(struct CGRect)arg1 animated:(_Bool)arg2;
@property(readonly, nonatomic) struct CGRect tsk_bounds;
- (struct CGSize)tsk_contentSize;

// Remaining properties
@property(nonatomic) id <UIScrollViewDelegate><TSKScrollViewDelegate> delegate; // @dynamic delegate;

@end

@interface TSDScrollView : TSKScrollView
{
}

@end

@interface TSDShadowSwatch : NSObject <TSDPathPainter>
{
    TSDShadow *mShadow;
}

@property(readonly, nonatomic) TSDShadow *shadow; // @synthesize shadow=mShadow;
- (void)p_drawCurvedShadowInContext:(struct CGContext *)arg1 inRect:(struct CGRect)arg2 forShadow:(id)arg3 forImage:(struct CGImage *)arg4 forSwatchRect:(struct CGRect)arg5;
- (void)p_drawContactShadowInContext:(struct CGContext *)arg1 inRect:(struct CGRect)arg2 forShadow:(id)arg3 forImage:(struct CGImage *)arg4 forSwatchRect:(struct CGRect)arg5;
- (void)paintPath:(struct CGPath *)arg1 inContext:(struct CGContext *)arg2;
- (void)drawSwatchInRect:(struct CGRect)arg1 inContext:(struct CGContext *)arg2;
- (void)drawSwatchInRect:(struct CGRect)arg1 inContext:(struct CGContext *)arg2 forImage:(struct CGImage *)arg3 swatchRect:(struct CGRect)arg4 wantsStroke:(_Bool)arg5;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)initWithShadow:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSDShapeRenderingOperation : TSDSwatchRenderingOperation
{
    int mShapeType;
    double mAngle;
}

- (void)doWorkWithReadLock;
- (_Bool)needsPressedStateBackground;
- (struct UIEdgeInsets)swatchEdgeInsets;
- (id)initWithPreset:(id)arg1 imageSize:(struct CGSize)arg2 imageScale:(double)arg3 swatchFrame:(struct CGRect)arg4 shapeType:(int)arg5 angle:(double)arg6 documentRoot:(id)arg7;
- (id)initWithPreset:(id)arg1 imageSize:(struct CGSize)arg2 imageScale:(double)arg3 swatchFrame:(struct CGRect)arg4 shapeType:(int)arg5 documentRoot:(id)arg6;

@end

@interface TSDShapeStyle : TSSStyle <TSDMixing>
{
}

+ (id)p_magicMoveProperties;
+ (_Bool)validateFloatValue:(float *)arg1 forProperty:(int)arg2;
+ (id)propertiesAllowingNSNull;
+ (id)defaultValueForProperty:(int)arg1;
+ (float)defaultFloatValueForProperty:(int)arg1;
+ (id)properties;
+ (void)initialize;
- (_Bool)wantsHighContrastBackgroundColor;
- (id)boxedValueForProperty:(int)arg1 oldBoxedValue:(id)arg2 transformedByTransform:(struct CGAffineTransform)arg3;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (void)fixImageFillTechniqueForSwatchOfSize:(struct CGSize)arg1;

@end

@interface TSDSimpleTileProvider : TSDTileProvider
{
    SEL mAction;
}

@property(nonatomic) SEL action; // @synthesize action=mAction;
- (void)drawTargetInLayer:(id)arg1 context:(struct CGContext *)arg2;
- (_Bool)canTargetDrawInParallel;
- (_Bool)isTargetOpaque;

@end

@interface TSDStrokePattern : NSObject <NSCopying, TSDMixing>
{
    double mPattern[6];
    unsigned long long mCount;
    double mPhase;
    int mType;
}

+ (id)strokePatternWithPattern:(const double *)arg1 count:(unsigned long long)arg2 phase:(double)arg3;
+ (id)dashPatternWithSpacing:(double)arg1;
+ (id)roundDashPatternWithSpacing:(double)arg1;
+ (id)roundDashPattern;
+ (id)longDashPattern;
+ (id)mediumDashPattern;
+ (id)shortDashPattern;
+ (id)emptyPattern;
+ (id)solidPattern;
@property(readonly, nonatomic) double phase; // @synthesize phase=mPhase;
@property(readonly, nonatomic) unsigned long long count; // @synthesize count=mCount;
@property(readonly, nonatomic) int patternType; // @synthesize patternType=mType;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (void)p_applyToCAShapeLayer:(id)arg1 lineWidth:(double)arg2;
- (void)applyToCAShapeLayer:(id)arg1;
- (void)i_applyToContext:(struct CGContext *)arg1 lineWidth:(double)arg2 capStyle:(unsigned long long *)arg3;
- (void)applyToContext:(struct CGContext *)arg1 lineWidth:(double)arg2;
@property(readonly, nonatomic) _Bool isRoundDash;
@property(readonly, nonatomic) _Bool isDash;
@property(readonly, nonatomic) double *pattern;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithPattern:(const double *)arg1 count:(unsigned long long)arg2 phase:(double)arg3;
- (id)p_initWithType:(int)arg1 pattern:(const double *)arg2 count:(unsigned long long)arg3 phase:(double)arg4;

@end

@interface TSDStyleWarmingOperation : NSOperation
{
    TSSStyle *mStyle;
    int mProperty;
    TSKAccessController *mAccessController;
}

- (void)warm;
- (void)main;
- (id)initWithStyle:(id)arg1 property:(int)arg2 accessController:(id)arg3;

@end

@interface TSDSwatchCache : NSObject
{
    NSOperationQueue *mOperationQueue;
}

+ (id)swatchCache;
- (id)imageForMoviePreset:(id)arg1 imageSize:(struct CGSize)arg2 imageScale:(double)arg3 movieInfo:(id)arg4 shouldClipVertically:(_Bool)arg5 documentRoot:(id)arg6;
- (id)imageForMoviePreset:(id)arg1 imageSize:(struct CGSize)arg2 imageScale:(double)arg3 swatchFrame:(struct CGRect)arg4 movieInfo:(id)arg5 shouldClipVertically:(_Bool)arg6 documentRoot:(id)arg7;
- (id)p_thumbnailImageDataForImageData:(id)arg1;
- (id)p_maskInfoForMovieInfo:(id)arg1 context:(id)arg2;
- (struct CGSize)imageSizeForPreset:(id)arg1 swatchSize:(struct CGSize)arg2;
- (id)imageForImagePreset:(id)arg1 imageSize:(struct CGSize)arg2 imageScale:(double)arg3 swatchFrame:(struct CGRect)arg4 imageInfo:(id)arg5 shouldClipVertically:(_Bool)arg6 documentRoot:(id)arg7;
- (struct CGImage *)p_newImageWithConnectionLineKnobsForShape:(id)arg1 atScale:(double)arg2 ofSize:(struct CGSize)arg3 overImage:(struct CGImage *)arg4;
- (id)imageForShapePreset:(id)arg1 imageSize:(struct CGSize)arg2 imageScale:(double)arg3 swatchFrame:(struct CGRect)arg4 shapeType:(int)arg5 angle:(double)arg6 documentRoot:(id)arg7;
- (id)imageForImagePreset:(id)arg1 imageSize:(struct CGSize)arg2 imageScale:(double)arg3 imageInfo:(id)arg4 shouldClipVertically:(_Bool)arg5 documentRoot:(id)arg6;
- (id)imageForShapePreset:(id)arg1 imageSize:(struct CGSize)arg2 imageScale:(double)arg3 shapeType:(int)arg4 angle:(double)arg5 documentRoot:(id)arg6;
- (void)applyFakeShadowForWhitePresetsIfNecessary:(id)arg1 documentRoot:(id)arg2;
- (struct CGSize)shapeSwatchInset;
- (void)warmStyle:(id)arg1 withFillProperty:(int)arg2 documentRoot:(id)arg3;
- (void)dealloc;
- (id)init;

@end

@interface TSDSwatchRenderingResult : NSObject
{
    struct CGImage *foreground;
    struct CGImage *background;
}

+ (id)renderingResultWithForeground:(struct CGImage *)arg1 background:(struct CGImage *)arg2;
@property(readonly, nonatomic) struct CGImage *background; // @synthesize background;
@property(readonly, nonatomic) struct CGImage *foreground; // @synthesize foreground;
- (void)dealloc;

@end

@interface TSDTapGestureRecognizer : UITapGestureRecognizer
{
    struct CGPoint mFirstTapLocation;
    _Bool mSavedFirstTapLocation;
    unsigned long long mTapCount;
}

@property(readonly, nonatomic) unsigned long long tapCount; // @synthesize tapCount=mTapCount;
@property(readonly, nonatomic) struct CGPoint firstTapLocation; // @synthesize firstTapLocation=mFirstTapLocation;
- (void)reset;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;

@end

@interface TSDTextInputResponder : UIResponder <UITextInput>
{
    NSObject<TSDTextInput> *_editor;
    TSDTextInputTokenizer *_tokenizer;
    _Bool _isResigning;
    int _respondingToUITextInput;
    _Bool _isSettingSelectedTextRange;
    float _preferredStartPosition;
    float _preferredEndPosition;
    TSDTextPosition *_referencePosition;
    long long _referenceOffset;
    TSDTextPosition *_cachedPosition;
    _Bool _pendingEditorChange;
    NSObject<TSDTextInput> *_pendingEditor;
    _Bool _pendingFirstResponderChange;
    id <TSDTextInput> _pendingFirstResponderObject;
    _Bool _inDynamicOperation;
    UIResponder *_nextResponder;
    id <UITextInputDelegate> _inputDelegate;
    _Bool _editorRespondsToRawArrowKeySelectors;
    int _ignoreKeyboardInputCount;
}

@property(nonatomic) float preferredEndPosition; // @synthesize preferredEndPosition=_preferredEndPosition;
@property(nonatomic) float preferredStartPosition; // @synthesize preferredStartPosition=_preferredStartPosition;
@property(nonatomic) __weak id <UITextInputDelegate> inputDelegate; // @synthesize inputDelegate=_inputDelegate;
@property(retain, nonatomic) id <TSDTextInput> editor; // @synthesize editor=_editor;
- (id)superview;
@property(readonly, nonatomic) UIView *textInputView;
- (void)makeTextWritingDirectionRightToLeft:(id)arg1;
- (void)makeTextWritingDirectionLeftToRight:(id)arg1;
- (void)setBaseWritingDirection:(long long)arg1 forRange:(id)arg2;
- (long long)baseWritingDirectionForPosition:(id)arg1 inDirection:(long long)arg2;
- (id)characterRangeByExtendingPosition:(id)arg1 inDirection:(long long)arg2;
- (id)positionWithinRange:(id)arg1 farthestInDirection:(long long)arg2;
- (id)characterRangeAtPoint:(struct CGPoint)arg1;
- (id)closestPositionToPoint:(struct CGPoint)arg1 withinRange:(id)arg2;
- (id)closestPositionToPoint:(struct CGPoint)arg1;
@property(copy, nonatomic) NSDictionary *markedTextStyle;
- (void)p_didUndoRedoChangeNotification:(id)arg1;
- (void)p_willUndoChangeNotification:(id)arg1;
- (void)p_willShowPopoverNotification:(id)arg1;
- (void)editorDidChangeSelection:(id)arg1 withFlags:(unsigned long long)arg2;
- (void)editorDidChangeSelection:(id)arg1;
- (void)p_editorSelectionWasForciblyChangedNotification:(id)arg1;
- (void)p_editorWillHandleTapNotification:(id)arg1;
- (void)p_editorWillStyleTextNotification:(id)arg1;
- (void)p_editorWillClearSelectionNotification:(id)arg1;
- (void)p_editorDidInsertTextNotification:(id)arg1;
- (void)p_textChanged;
- (_Bool)p_wantRawArrowKeys;
- (void)p_finishDynamicOperation:(id)arg1;
- (void)p_startDynamicOperation:(id)arg1;
- (id)p_ICC;
- (id)inputAccessoryView;
- (id)inputView;
@property(readonly, nonatomic) id <UITextInputTokenizer> tokenizer;
- (void)deleteForward;
- (void)deleteBackward;
- (void)insertText:(id)arg1;
- (_Bool)hasText;
@property(nonatomic, getter=isSecureTextEntry) _Bool secureTextEntry;
@property(nonatomic) long long returnKeyType;
@property(nonatomic) long long autocorrectionType;
- (void)customAction8:(id)arg1;
- (void)customAction7:(id)arg1;
- (void)customAction6:(id)arg1;
- (void)forwardInvocation:(id)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (void)toggleUnderline:(id)arg1;
- (void)toggleItalics:(id)arg1;
- (void)toggleBoldface:(id)arg1;
- (void)delete:(id)arg1;
- (void)selectAll:(id)arg1;
- (_Bool)canPerformAction:(SEL)arg1 withSender:(id)arg2;
- (_Bool)p_currentEditorIsNotOnMyCanvas;
- (void)insertDictationResult:(id)arg1;
- (id)keyCommands;
- (id)textStylingAtPosition:(id)arg1 inDirection:(long long)arg2;
- (struct CGRect)caretRectForPosition:(id)arg1;
- (id)rectsForRange:(id)arg1;
- (id)selectionRectsForRange:(id)arg1;
- (struct CGRect)firstRectForRange:(id)arg1;
- (id)positionFromPosition:(id)arg1 offset:(long long)arg2;
- (id)positionFromPosition:(id)arg1 inDirection:(long long)arg2 offset:(long long)arg3;
- (long long)offsetFromPosition:(id)arg1 toPosition:(id)arg2;
- (long long)comparePosition:(id)arg1 toPosition:(id)arg2;
- (id)textRangeFromPosition:(id)arg1 toPosition:(id)arg2;
- (void)replaceRange:(id)arg1 withText:(id)arg2;
- (id)textInRange:(id)arg1;
@property(readonly, nonatomic) UITextPosition *endOfDocument;
@property(readonly, nonatomic) UITextPosition *beginningOfDocument;
- (void)unmarkText;
- (void)p_unmarkText;
- (void)setMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2;
@property(readonly, nonatomic) UITextRange *markedTextRange;
@property(copy) UITextRange *selectedTextRange;
- (void)p_setSelectedTextRange:(id)arg1;
- (_Bool)p_isExecutingUITextInput;
- (void)p_willExitUITextInput;
- (_Bool)p_didEnterUITextInput;
- (_Bool)resignFirstResponder;
- (_Bool)p_resignFirstResponder;
- (_Bool)canResignFirstResponder;
- (_Bool)becomeFirstResponder;
- (_Bool)canBecomeFirstResponder;
- (id)nextResponder;
- (void)acceptAutocorrection;
- (void)canvasWillRotate;
- (void)canvasWillZoom;
- (void)canvasWillScroll;
- (id)editingTextRep;
- (id)editingTextReps;
- (void)forceDelayedResponderChange;
- (void)cancelDelayedResponderChange;
- (void)changeFirstResponderIfNecessary;
- (void)resumeEditing;
- (void)clearEditorAndResignFirstResponder;
- (void)endIgnoringKeyboardInput;
- (void)beginIgnoringKeyboardInput;
- (void)p_setFirstResponderAndEditorAfterDelay;
- (void)p_setFirstResponderAndEditor:(id)arg1;
- (void)p_setFirstResponder:(id)arg1;
- (void)p_setFirstResponderAfterDelay;
- (_Bool)p_requiresFirstResponderChangeForEditor:(id)arg1;
- (void)p_setEditor:(id)arg1;
- (_Bool)_disableAutomaticKeyboardUI;
@property(readonly, nonatomic, getter=isResigning) _Bool resigning;
- (void)teardown;
- (void)dealloc;
- (id)initWithNextResponder:(id)arg1;

// Remaining properties
@property(nonatomic) long long autocapitalizationType;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(nonatomic) _Bool enablesReturnKeyAutomatically;
@property(readonly) unsigned long long hash;
@property(nonatomic) long long keyboardAppearance;
@property(nonatomic) long long keyboardType;
@property(nonatomic) long long selectionAffinity;
@property(nonatomic) long long spellCheckingType;
@property(readonly) Class superclass;

@end

@interface TSDTextInputTokenizer : UITextInputStringTokenizer
{
    TSDTextInputResponder *_textInputResponder;
}

- (id)rangeEnclosingPosition:(id)arg1 withGranularity:(long long)arg2 inDirection:(long long)arg3;
- (_Bool)isPosition:(id)arg1 withinTextUnit:(long long)arg2 inDirection:(long long)arg3;
- (id)positionFromPosition:(id)arg1 toBoundary:(long long)arg2 inDirection:(long long)arg3;
- (id)p_moveToEndOfWordFromPosition:(id)arg1;
- (id)p_moveToStartOfWordFromPosition:(id)arg1;
- (id)p_positionFromPosition:(id)arg1 toBoundary:(long long)arg2 inDirection:(long long)arg3;
- (_Bool)isPosition:(id)arg1 atBoundary:(long long)arg2 inDirection:(long long)arg3;
@property(readonly, nonatomic) id <TSDTextInput> editor;
- (id)initWithTextInput:(id)arg1;

@end

@interface TSDTextPosition : UITextPosition
{
    unsigned long long _charIndex;
    _Bool _eolAffinity;
    float _preferredPosition;
    _Bool _isPreferredStart;
}

+ (id)textPositionWithCharIndex:(unsigned long long)arg1;
+ (id)textPositionWithCharIndex:(unsigned long long)arg1 eolAffinity:(_Bool)arg2 preferredPosition:(float)arg3 isPreferredStart:(_Bool)arg4;
@property(readonly, nonatomic) _Bool isPreferredStart; // @synthesize isPreferredStart=_isPreferredStart;
@property(readonly, nonatomic) float preferredPosition; // @synthesize preferredPosition=_preferredPosition;
@property(readonly, nonatomic) _Bool endOfLineAffinity; // @synthesize endOfLineAffinity=_eolAffinity;
@property(readonly, nonatomic) unsigned long long charIndex; // @synthesize charIndex=_charIndex;
- (int)distanceFromPosition:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (long long)compare:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCharIndex:(unsigned long long)arg1;
- (id)initWithCharIndex:(unsigned long long)arg1 eolAffinity:(_Bool)arg2 preferredPosition:(float)arg3 isPreferredStart:(_Bool)arg4;

@end

@interface TSDTextRange : UITextRange
{
    struct _NSRange _range;
    _Bool _eolAffinity;
    float _preferredStartPosition;
    float _preferredEndPosition;
}

+ (id)textRangeWithRange:(struct _NSRange)arg1 eolAffinity:(_Bool)arg2 preferredStartPosition:(float)arg3 preferredEndPosition:(float)arg4;
+ (id)textRangeWithRange:(struct _NSRange)arg1;
@property(readonly, nonatomic) float preferredEndPosition; // @synthesize preferredEndPosition=_preferredEndPosition;
@property(readonly, nonatomic) float preferredStartPosition; // @synthesize preferredStartPosition=_preferredStartPosition;
@property(nonatomic) _Bool isAtEndOfLine; // @synthesize isAtEndOfLine=_eolAffinity;
@property(nonatomic) struct _NSRange range; // @synthesize range=_range;
- (_Bool)isEqual:(id)arg1;
- (_Bool)isEmpty;
- (id)end;
- (id)start;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithRange:(struct _NSRange)arg1 eolAffinity:(_Bool)arg2 preferredStartPosition:(float)arg3 preferredEndPosition:(float)arg4;
- (id)initWithRange:(struct _NSRange)arg1;

@end

@interface TSDTextSelectionRect : UITextSelectionRect
{
    struct CGRect _rect;
    long long _writingDirection;
    UITextRange *_range;
    _Bool _containsStart;
    _Bool _containsEnd;
    _Bool _isVertical;
}

- (_Bool)isVertical;
- (_Bool)containsEnd;
- (_Bool)containsStart;
@property(retain, nonatomic) UITextRange *range; // @synthesize range=_range;
- (long long)writingDirection;
- (struct CGRect)rect;
- (id)initWithRect:(struct CGRect)arg1 direction:(long long)arg2 range:(id)arg3 containsStart:(_Bool)arg4 containsEnd:(_Bool)arg5 isVertical:(_Bool)arg6;

@end

@interface TSDTextureContext : NSObject <NSCopying>
{
    id <TSDAnimationSession> _session;
    unsigned int _isMagicMove:1;
    unsigned int _shouldAddFinal:1;
    unsigned int _shouldAddReversedFinal:1;
    unsigned int _shouldAddMagicMoveObjectOnly:1;
    unsigned int _shouldNotAddContainedReps:1;
    unsigned int _shouldNotAddShapeAttributes:1;
    unsigned int _shouldNotAddText:1;
    unsigned int _shouldNotCacheTexture:1;
    unsigned int _shouldSeparateReflection:1;
    unsigned int _shouldSeparateShadow:1;
    unsigned int _shouldSeparateStroke:1;
    unsigned int _shouldSeparateText:1;
    unsigned int _shouldDistortToFit:1;
    unsigned int _shouldForceTextureGeneration:1;
    _Bool _shouldAddNoShapeAttributes;
}

+ (id)contextWithTextureContext:(id)arg1;
+ (id)contextWithSession:(id)arg1;
+ (id)context;
@property(nonatomic) _Bool shouldForceTextureGeneration; // @synthesize shouldForceTextureGeneration=_shouldForceTextureGeneration;
@property(nonatomic) _Bool shouldSeparateText; // @synthesize shouldSeparateText=_shouldSeparateText;
@property(nonatomic) _Bool shouldSeparateStroke; // @synthesize shouldSeparateStroke=_shouldSeparateStroke;
@property(nonatomic) _Bool shouldSeparateShadow; // @synthesize shouldSeparateShadow=_shouldSeparateShadow;
@property(nonatomic) _Bool shouldSeparateReflection; // @synthesize shouldSeparateReflection=_shouldSeparateReflection;
@property(nonatomic) _Bool shouldNotCacheTexture; // @synthesize shouldNotCacheTexture=_shouldNotCacheTexture;
@property(nonatomic) _Bool shouldNotAddText; // @synthesize shouldNotAddText=_shouldNotAddText;
@property(nonatomic) _Bool shouldNotAddShapeAttributes; // @synthesize shouldNotAddShapeAttributes=_shouldAddNoShapeAttributes;
@property(nonatomic) _Bool shouldNotAddContainedReps; // @synthesize shouldNotAddContainedReps=_shouldNotAddContainedReps;
@property(nonatomic) _Bool shouldDistortToFit; // @synthesize shouldDistortToFit=_shouldDistortToFit;
@property(nonatomic) _Bool shouldAddReversedFinal; // @synthesize shouldAddReversedFinal=_shouldAddReversedFinal;
@property(nonatomic) _Bool shouldAddMagicMoveObjectOnly; // @synthesize shouldAddMagicMoveObjectOnly=_shouldAddMagicMoveObjectOnly;
@property(nonatomic) _Bool shouldAddFinal; // @synthesize shouldAddFinal=_shouldAddFinal;
@property(nonatomic) _Bool isMagicMove; // @synthesize isMagicMove=_isMagicMove;
@property(nonatomic) id <TSDAnimationSession> session; // @synthesize session=_session;
- (void)reset;
- (unsigned long long)hash;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface TSDTextureSet : NSObject <NSCopying>
{
    struct CGPoint mCenter;
    struct CGRect mBounds;
    struct CGPoint mOriginalPosition;
    _Bool mIsBaked;
    _Bool mShouldIncludeFinalTexturesInVisibleSet;
    _Bool mShouldTransformUsingTextureCenter;
    unsigned long long mChunkCount;
    NSMutableArray *mTextures;
    NSMutableArray *mAllTextures;
    TSUNoCopyDictionary *mStageIndexForTexture;
    NSMutableDictionary *mFinalTextureForStage;
    NSMutableDictionary *mBoundingRectForStage;
    NSMutableDictionary *mContentRectForStage;
    NSMutableDictionary *mReverseFinalTextureForStage;
    TSUNoCopyDictionary *mFinalTexturesToStageMap;
    TSUNoCopyDictionary *mReverseFinalTexturesToStageMap;
    NSDictionary *mBakedAttributes;
    struct _NSRange mActiveChunkIndices;
    CALayer *mLayer;
    _Bool mIsMagicMove;
    double mTextureOpacity;
    struct CGRect mTextureContentRect;
    double mTextureAngle;
    long long mTextureZOrder;
    _Bool mIsBackground;
    CALayer *mAlternateLayer;
    TSDRep *mRep;
    struct CGColorSpace *mColorSpace;
    long long mMaxStageIndex;
    long long _stageIndex;
}

@property(readonly, nonatomic) long long stageIndex; // @synthesize stageIndex=_stageIndex;
@property TSDRep *rep; // @synthesize rep=mRep;
@property(nonatomic) long long textureZOrder; // @synthesize textureZOrder=mTextureZOrder;
@property(nonatomic) double textureOpacity; // @synthesize textureOpacity=mTextureOpacity;
@property(nonatomic) double textureAngle; // @synthesize textureAngle=mTextureAngle;
@property(nonatomic) struct CGRect textureContentRect; // @synthesize textureContentRect=mTextureContentRect;
@property(nonatomic) _Bool shouldTransformUsingTextureCenter; // @synthesize shouldTransformUsingTextureCenter=mShouldTransformUsingTextureCenter;
@property(nonatomic) _Bool shouldIncludeFinalTexturesInVisibleSet; // @synthesize shouldIncludeFinalTexturesInVisibleSet=mShouldIncludeFinalTexturesInVisibleSet;
@property(nonatomic) struct CGPoint originalPosition; // @synthesize originalPosition=mOriginalPosition;
@property(readonly, nonatomic) long long maxStageIndex; // @synthesize maxStageIndex=mMaxStageIndex;
@property(nonatomic) _Bool isMagicMove; // @synthesize isMagicMove=mIsMagicMove;
@property(nonatomic) _Bool isBaked; // @synthesize isBaked=mIsBaked;
@property(nonatomic) _Bool isBackground; // @synthesize isBackground=mIsBackground;
@property(retain, nonatomic) NSDictionary *contentRectForStage; // @synthesize contentRectForStage=mContentRectForStage;
@property(nonatomic) struct CGColorSpace *colorSpace; // @synthesize colorSpace=mColorSpace;
@property(readonly, nonatomic) unsigned long long chunkCount; // @synthesize chunkCount=mChunkCount;
@property(nonatomic) struct CGPoint center; // @synthesize center=mCenter;
@property(retain, nonatomic) NSDictionary *boundingRectForStage; // @synthesize boundingRectForStage=mBoundingRectForStage;
@property(readonly, nonatomic) struct CGRect boundingRect; // @synthesize boundingRect=mBounds;
@property(retain, nonatomic) CALayer *alternateLayer; // @synthesize alternateLayer=mAlternateLayer;
@property(readonly, nonatomic) NSArray *allTextures; // @synthesize allTextures=mAllTextures;
- (id)description;
- (void)addPerspectiveLayerToTexture:(id)arg1 withShowSize:(struct CGSize)arg2;
@property(readonly, nonatomic) _Bool isRenderable;
- (void)renderIntoContext:(struct CGContext *)arg1;
@property(readonly, nonatomic) struct CGRect frame;
- (void)setContentRect:(struct CGRect)arg1 forStage:(long long)arg2;
- (void)setBoundingRect:(struct CGRect)arg1 forStage:(long long)arg2;
- (void)setBoundingRect:(struct CGRect)arg1;
- (_Bool)isBackgroundTexture:(id)arg1;
- (void)applyActionEffect:(id)arg1 viewScale:(double)arg2 isMagicMove:(_Bool)arg3 shouldBake:(_Bool)arg4 applyScaleOnly:(_Bool)arg5 ignoreScale:(_Bool)arg6 shouldCheckActionKeys:(_Bool)arg7;
- (void)p_applyPositionFromAttributes:(id)arg1 viewScale:(double)arg2;
- (void)p_resetAttributesWithViewScale:(double)arg1;
- (void)resetAnchorPoint;
- (void)adjustAnchorPointRelativeToCenterOfRotation;
- (void)setLayerGeometryFromRep:(id)arg1;
- (void)hideLayersOfFinalTextures;
- (id)finalTextureForStage:(long long)arg1 reverse:(_Bool)arg2;
- (long long)stageIndexForTexture:(id)arg1;
- (id)newFlattenedTexture;
- (id)newFlattenedTextureFromTextures:(id)arg1 newRect:(struct CGRect)arg2;
- (id)firstVisibleTextureForTextureType:(int)arg1;
- (void)removeRenderable:(id)arg1;
- (id)visibleTexturesForStage:(long long)arg1 isBuildIn:(_Bool)arg2 shouldFlatten:(_Bool)arg3;
@property(readonly, nonatomic) NSArray *visibleTextures;
- (void)renderLayerContentsIfNeeded;
- (void)addFinalTexture:(id)arg1 forStage:(long long)arg2 reverse:(_Bool)arg3;
- (void)addRenderable:(id)arg1 forStage:(long long)arg2;
- (void)addRenderable:(id)arg1;
- (struct CGRect)contentRectForStage:(long long)arg1 isBuildIn:(_Bool)arg2;
- (struct CGRect)boundingRectForStage:(long long)arg1 isBuildIn:(_Bool)arg2;
@property(readonly, nonatomic) CALayer *layer;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (void)teardown;
- (id)init;

@end

@interface TSDTexturedRectangle : NSObject <NSCopying>
{
    struct CGPoint mOffset;
    struct CGPoint mOriginalPosition;
    struct CGSize mSize;
    struct CGRect mContentRect;
    struct CGRect mOriginalFrame;
    CALayer *mLayer;
    CDUnknownBlockType mRenderBlock;
    struct CGImage *mSourceImage;
    struct CGImage *mBakedImage;
    TSDTextureSet *mParent;
    int mTextureType;
    double mTextureOpacity;
    unsigned int mSingleTextureName;
    _Bool mSingleTextureContainsMipmaps;
    _Bool mIsFlattened;
    NSMutableDictionary *mAttributes;
    NSMutableArray *mTags;
    struct CGColorSpace *mColorSpace;
    struct CGRect mFrameOnCanvas;
}

@property(nonatomic) struct CGRect frameOnCanvas; // @synthesize frameOnCanvas=mFrameOnCanvas;
@property(retain, nonatomic) NSMutableArray *tags; // @synthesize tags=mTags;
@property(nonatomic) double textureOpacity; // @synthesize textureOpacity=mTextureOpacity;
@property(nonatomic) int textureType; // @synthesize textureType=mTextureType;
@property(readonly, nonatomic) struct CGSize size; // @synthesize size=mSize;
@property(nonatomic) TSDTextureSet *parent; // @synthesize parent=mParent;
@property(nonatomic) struct CGPoint originalPosition; // @synthesize originalPosition=mOriginalPosition;
@property(nonatomic) _Bool isFlattened; // @synthesize isFlattened=mIsFlattened;
@property(readonly, nonatomic) CALayer *layer; // @synthesize layer=mLayer;
@property(nonatomic) struct CGColorSpace *colorSpace; // @synthesize colorSpace=mColorSpace;
@property(nonatomic) struct CGRect contentRect; // @synthesize contentRect=mContentRect;
@property(retain, nonatomic) NSMutableDictionary *attributes; // @synthesize attributes=mAttributes;
@property(readonly, nonatomic) CALayer *parentLayer;
- (struct CGRect)boundingRectForStage:(long long)arg1 isBuildIn:(_Bool)arg2;
@property(readonly, nonatomic) _Bool isBackgroundTexture;
- (void)renderIntoContext:(struct CGContext *)arg1;
- (void)bakeLayerWithAngle:(double)arg1 scale:(double)arg2;
@property(readonly, nonatomic) struct CGImage *image;
@property(readonly, nonatomic) double singleTextureOpacity;
- (void)releaseSingleTexture;
@property(readonly, nonatomic) unsigned int singleTextureTarget;
@property(readonly, nonatomic) unsigned int singleTextureName;
- (void)setupSingleTexture;
- (void)setupSingleTextureAndGenerateMipMaps:(_Bool)arg1;
- (void)renderLayerContentsIfNeeded;
@property(readonly, nonatomic) _Bool isRenderable;
- (void)resetToSourceImage;
- (struct CGImage *)p_newImageAndBufferWithAngle:(double)arg1 scale:(double)arg2 offset:(struct CGPoint)arg3;
- (struct CGColorSpace *)p_colorSpace;
- (void)resetAnchorPoint;
- (void)adjustAnchorRelativeToParentsCenterOfRotation:(struct CGPoint)arg1 isMagicMove:(_Bool)arg2;
@property(readonly, nonatomic) struct CGRect frame;
@property(nonatomic) struct CGPoint offset;
@property(readonly, nonatomic) struct CATransform3D transformFromAttributes;
@property(readonly, nonatomic) float opacityFromAttributes;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
- (void)dealloc;
- (void)teardown;
- (id)initWithCGImage:(struct CGImage *)arg1;
- (id)initWithLayer:(id)arg1;
- (id)initWithSize:(struct CGSize)arg1 offset:(struct CGPoint)arg2 renderBlock:(CDUnknownBlockType)arg3;

@end

@interface TSDTileStorage : NSObject <NSCacheDelegate>
{
    NSCache *mCache;
    TSUPointerKeyDictionary *mReverseCacheKeys;
    NSObject<OS_dispatch_semaphore> *mReverseCacheKeysLock;
    NSObject<OS_dispatch_queue> *mCacheKeysQueue;
    NSMutableDictionary *mCacheKeysByBucket;
}

- (id)p_cacheKeyForImageInRect:(struct CGRect)arg1 contentsScale:(double)arg2 tileLocation:(CDStruct_73b5d383)arg3;
- (void)removeAllContents;
- (void)removeImagesInBucket:(id)arg1;
- (void)cache:(id)arg1 willEvictObject:(id)arg2;
- (id)contentsInRect:(struct CGRect)arg1 contentsScale:(double)arg2 forTileAtLocation:(CDStruct_73b5d383)arg3 inBucket:(id)arg4;
- (void)storeContents:(id)arg1 inRect:(struct CGRect)arg2 contentsScale:(double)arg3 forTileAtLocation:(CDStruct_73b5d383)arg4 inBucket:(id)arg5;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSDTilingBackgroundQueue : NSObject
{
    NSObject<OS_dispatch_semaphore> *mCanEnqueueReaders;
    NSObject<OS_dispatch_group> *mInFlightReaders;
    int mReaderSpinLock;
    unsigned long long mReaderCount;
    NSObject<OS_dispatch_semaphore> *mReadLockSignal;
    long long mShutdownToken;
    _Bool mShuttingDown;
    TSKAccessController *mAccessController;
}

+ (_Bool)isHoldingReadLockFromBackgroundQueue;
+ (id)p_sharedLimitedQueue;
@property(getter=isShuttingDown) _Bool shuttingDown; // @synthesize shuttingDown=mShuttingDown;
- (void)p_readUnlock;
- (void)p_readLock;
- (void)drainAndPerformSync:(CDUnknownBlockType)arg1;
- (void)performAsync:(CDUnknownBlockType)arg1;
- (void)shutdown;
- (void)dealloc;
- (id)initWithAccessController:(id)arg1;
- (id)init;

@end

@interface TSDTilingHostingLayer : TSDNoDefaultImplicitActionLayer
{
    NSMutableSet *mDirtyTilingLayers;
    TSDInteractiveCanvasController *mController;
}

@property(nonatomic) TSDInteractiveCanvasController *controller; // @synthesize controller=mController;
- (void)setNeedsDisplayForDirtyTiles:(id)arg1;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (id)init;
- (void)p_commonInit;

@end

@interface TSDTilingLayer : CALayer
{
    int mTilingMode;
    struct CGSize mTileSize;
    struct {
        unsigned int tiled:1;
        unsigned int hasCustomContents:1;
        unsigned int drawsInBackground:1;
        unsigned int forceTiling:1;
        unsigned int needsTileLayout:1;
        unsigned int needsTileDisplay:1;
        unsigned int needsSelfDisplay:1;
    } mFlags;
    struct CGRect mLastVisibleBounds;
    struct CGSize mLastBoundsSize;
    CALayer *mProviderContentLayer;
    NSMutableArray *mDirtyTiles;
    _Bool mHasEverHadTileLayout;
}

+ (struct CGImage *)p_newGeneratedCheckerboardImage;
+ (struct CGImage *)p_newCheckerboardImage;
@property(nonatomic) int tilingMode; // @synthesize tilingMode=mTilingMode;
- (id)p_nonTileAndContentLayers;
- (id)p_tileAndContentLayers;
- (id)p_tileLayers;
- (_Bool)p_updateTileSizeWithLayerSize:(struct CGSize)arg1;
- (void)i_setNeedsTileDisplayForTile:(id)arg1;
- (void)i_drawTileInBackground:(id)arg1 inRect:(struct CGRect)arg2;
- (void)i_drawRect:(struct CGRect)arg1 inContext:(struct CGContext *)arg2 inBackground:(_Bool)arg3;
- (void)i_drawTile:(id)arg1 inContext:(struct CGContext *)arg2;
- (_Bool)tilingSafeHasContents;
- (void)tilingSafeSetSublayers:(id)arg1;
@property(nonatomic) _Bool forceTiling;
@property(nonatomic) _Bool drawsInBackground;
- (void)drawLayer:(id)arg1 inContext:(struct CGContext *)arg2;
- (void)setNeedsDisplayForDirtyTiles:(id)arg1;
- (void)layoutSublayers;
- (void)setNeedsLayout;
- (void)setNeedsLayoutForTilingLayers;
- (void)setNeedsDisplayInRect:(struct CGRect)arg1;
- (void)display;
- (void)setTileContents:(id)arg1;
- (void)setContents:(id)arg1;
- (void)setContentsScale:(double)arg1;
- (void)dealloc;
- (id)init;

@end

@interface TSDTilingLimitedQueue : NSObject
{
    NSObject<OS_dispatch_queue> *mManagerQueue;
    NSObject<OS_dispatch_queue> *mTargetQueue;
    unsigned long long mLimit;
    unsigned long long mReaderCount;
    int mSpinLock;
}

- (void)performAsync:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (id)initWithLimit:(unsigned long long)arg1;
- (id)init;

@end

@interface TSDTilingTileLayer : TSDNoDefaultImplicitActionLayer
{
    unsigned long long mIndex;
    _Bool mNeedsTileDisplay;
    CDStruct_73b5d383 mLocation;
}

@property(nonatomic) CDStruct_73b5d383 location; // @synthesize location=mLocation;
@property(nonatomic) _Bool needsTileDisplay; // @synthesize needsTileDisplay=mNeedsTileDisplay;
@property(nonatomic) unsigned long long index; // @synthesize index=mIndex;
- (id)tileContentsLayer;
- (void)setNeedsDisplayInRectIgnoringBackground:(struct CGRect)arg1;
- (void)setNeedsDisplayInRect:(struct CGRect)arg1;
- (void)updateFrameWithTileSize:(struct CGSize)arg1 tilesWide:(unsigned long long)arg2 tilesHigh:(unsigned long long)arg3;
- (id)hitTest:(struct CGPoint)arg1;
- (void)setNeedsLayoutForTilingLayers;
- (void)drawInContext:(struct CGContext *)arg1;
- (void)display;

@end

@interface TSDTrackerManipulatorCoordinator : NSObject
{
    NSMutableSet *mRegisteredTMs;
    NSObject<TSDTrackerManipulator> *mControllingTM;
}

+ (void)p_removeDynamicSubclass:(id)arg1;
+ (void)p_dynamicallySubclassGRForNotification:(id)arg1;
@property(readonly, nonatomic) NSObject<TSDTrackerManipulator> *controllingTM; // @synthesize controllingTM=mControllingTM;
- (void)p_notifyControlChange;
- (void)operationDidEnd;
- (void)operationWillEnd;
- (_Bool)relinquishTrackerManipulatorControl:(id)arg1;
- (_Bool)takeControlWithTrackerManipulator:(id)arg1;
- (_Bool)hasRegisteredTrackerManipulator:(id)arg1;
- (void)unregisterTrackerManipulator:(id)arg1;
- (void)registerTrackerManipulator:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface TSDTrackingController : NSObject
{
}

- (void)popDisableUpdates;
- (void)pushDisableUpdates;
- (void)teardown;
- (void)interactiveCanvasControllerUpdatedRepsFromLayouts:(id)arg1;

@end

@interface TSDWrapPolygon : NSObject <NSCopying>
{
    void *mPolygon;
    _Bool mIntersectsSelf;
    _Bool mComputedSelfIntersection;
    struct CGRect mBounds;
    _Bool mComputedBounds;
}

- (struct CGPoint)intersectionPointBetween:(struct CGPoint)arg1 and:(struct CGPoint)arg2;
- (void)transformUsingAffineTransform:(struct CGAffineTransform)arg1;
- (id)bezierPath;
- (struct CGRect)bounds;
- (void *)polygon;
- (_Bool)intersectsSelf;
- (void)setIntersectsSelf:(_Bool)arg1;
- (void)setPath:(id)arg1;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithPath:(id)arg1;
- (void)p_computeIntersectionState;
- (int)p_countSegments;
- (void)p_setPolygon:(CDStruct_727a4eeb *)arg1;
- (void)p_freePolygon;

@end

@interface TSDiOSToolbar : UIToolbar
{
    UIImage *mBackgroundImage;
    _Bool mDrawsBackground;
    double mShadowOpacity;
    struct CGSize mShadowOffset;
    double mShadowRadius;
    double mShadowX;
}

@property(nonatomic) double shadowX; // @synthesize shadowX=mShadowX;
@property(nonatomic) double shadowRadius; // @synthesize shadowRadius=mShadowRadius;
@property(nonatomic) struct CGSize shadowOffset; // @synthesize shadowOffset=mShadowOffset;
@property(nonatomic) double shadowOpacity; // @synthesize shadowOpacity=mShadowOpacity;
@property(nonatomic) _Bool drawsBackground; // @synthesize drawsBackground=mDrawsBackground;
@property(retain, nonatomic) UIImage *backgroundImage; // @synthesize backgroundImage=mBackgroundImage;
- (id)actionForLayer:(id)arg1 forKey:(id)arg2;
- (void)setupShadowPath;
- (void)layoutSubviews;
- (void)drawRect:(struct CGRect)arg1;
- (void)p_updateLayerFlags;
- (void)dealloc;

@end

@interface TSHAccount : NSObject
{
    NSURLCredential *mCredentials;
    NSURL *mBaseURL;
}

- (id)baseURL;
- (id)credentials;
- (id)initWithURL:(id)arg1 user:(id)arg2 password:(id)arg3 persistence:(unsigned long long)arg4;
- (void)dealloc;

@end

@interface TSHConnectionFactory : NSObject
{
}

- (id)connectionWithRequest:(id)arg1 delegate:(id)arg2;

@end

@interface TSHOperation : NSObject <NSURLConnectionDataDelegate>
{
    NSURLCredential *mCredentials;
    NSURL *mTarget;
    NSMutableArray *mDependencies;
    NSString *mUserAgent;
    NSMutableDictionary *mDefaultAuthenticationMethods;
    _Bool mIgnoreInvalidCertificate;
    id mDelegate;
    TSHRequestQueue *mRequestQueue;
    TSHOperationQueue *mOperationQueue;
    unsigned long long mContextHint;
    unsigned long long mRestarts;
    NSMutableArray *mRequests;
    long long mErrorCode;
    NSMutableDictionary *mErrorUserInfo;
    _Bool mCacheControlNoCache;
    _Bool mCacheControlNoStore;
    _Bool mCacheControlMustRevalidate;
}

@property _Bool ignoreInvalidCertificate; // @synthesize ignoreInvalidCertificate=mIgnoreInvalidCertificate;
- (unsigned long long)restarts;
- (void)setContextHint:(unsigned long long)arg1;
- (unsigned long long)contextHint;
- (void)requestQueue:(id)arg1 willStartRequest:(id)arg2;
- (void)requestQueue:(id)arg1 didStartRequest:(id)arg2 withConnection:(id)arg3;
- (void)requestQueue:(id)arg1 dequeuedRequest:(id)arg2;
- (void)requestQueue:(id)arg1 didCompleteRequest:(id)arg2;
- (void)operationQueue:(id)arg1 dequeuedOperation:(id)arg2;
- (void)operationQueue:(id)arg1 didStartOperation:(id)arg2;
- (id)connection:(id)arg1 willCacheResponse:(id)arg2;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didSendBodyData:(long long)arg2 totalBytesWritten:(long long)arg3 totalBytesExpectedToWrite:(long long)arg4;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (void)connection:(id)arg1 didCancelAuthenticationChallenge:(id)arg2;
- (void)connection:(id)arg1 didReceiveAuthenticationChallenge:(id)arg2;
- (id)connection:(id)arg1 willSendRequest:(id)arg2 redirectResponse:(id)arg3;
- (void)cancel;
- (void)start:(id)arg1 notifyWhenFinished:(id)arg2;
- (id)dependencies;
- (void)removeDependency:(id)arg1;
- (void)addDependency:(id)arg1;
- (id)credentials;
- (id)defaultAuthenicationMethodForScheme:(id)arg1;
- (void)setDefaultAuthenticationMethod:(id)arg1 forScheme:(id)arg2;
- (id)userAgent;
- (void)setUserAgent:(id)arg1;
- (void)setOperationQueue:(id)arg1;
- (id)operationQueue;
- (void)setRequestQueue:(id)arg1;
- (id)requestQueue;
- (id)delegate;
- (id)targetURL;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)initWithAccount:(id)arg1 andPath:(id)arg2 delegate:(id)arg3;
- (id)initWithURL:(id)arg1 user:(id)arg2 password:(id)arg3 persistence:(unsigned long long)arg4 delegate:(id)arg5;
- (void)addHeadersTo:(id)arg1;
- (void)restart;
- (void)cancelRequests;
- (id)basicAuthenticationHeader;
- (id)localizedDescription;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSHRequestOperation : TSHOperation
{
    NSString *mEtag;
}

- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (void)setEtag:(id)arg1;
- (id)etag;
- (void)dealloc;
- (void)start:(id)arg1 notifyWhenFinished:(id)arg2;
- (id)request;
- (id)initWithAccount:(id)arg1 andPath:(id)arg2 delegate:(id)arg3;
- (id)initWithURL:(id)arg1 user:(id)arg2 password:(id)arg3 persistence:(unsigned long long)arg4 delegate:(id)arg5;

@end

@interface TSHDeleteOperation : TSHRequestOperation
{
}

- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (id)request;
- (void)dealloc;
- (id)initWithAccount:(id)arg1 andPath:(id)arg2 delegate:(id)arg3;
- (id)initWithURL:(id)arg1 user:(id)arg2 password:(id)arg3 persistence:(unsigned long long)arg4 delegate:(id)arg5;

@end

@interface TSHRequestDataOperation : TSHRequestOperation
{
    NSMutableData *mData;
}

- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (id)data;
- (void)start:(id)arg1 notifyWhenFinished:(id)arg2;
- (void)dealloc;
- (id)initWithAccount:(id)arg1 andPath:(id)arg2 delegate:(id)arg3;
- (id)initWithURL:(id)arg1 user:(id)arg2 password:(id)arg3 persistence:(unsigned long long)arg4 delegate:(id)arg5;
- (void)clearData;

@end

@interface TSHXmlOperation : TSHRequestDataOperation <NSXMLParserDelegate>
{
    NSXMLParser *mParser;
}

- (void)parser:(id)arg1 validationErrorOccurred:(id)arg2;
- (void)parser:(id)arg1 parseErrorOccurred:(id)arg2;
- (id)parser:(id)arg1 resolveExternalEntityName:(id)arg2 systemID:(id)arg3;
- (void)parser:(id)arg1 foundCDATA:(id)arg2;
- (void)parser:(id)arg1 foundComment:(id)arg2;
- (void)parser:(id)arg1 foundProcessingInstructionWithTarget:(id)arg2 data:(id)arg3;
- (void)parser:(id)arg1 foundIgnorableWhitespace:(id)arg2;
- (void)parser:(id)arg1 foundCharacters:(id)arg2;
- (void)parser:(id)arg1 didEndMappingPrefix:(id)arg2;
- (void)parser:(id)arg1 didStartMappingPrefix:(id)arg2 toURI:(id)arg3;
- (void)parser:(id)arg1 didEndElement:(id)arg2 namespaceURI:(id)arg3 qualifiedName:(id)arg4;
- (void)parser:(id)arg1 didStartElement:(id)arg2 namespaceURI:(id)arg3 qualifiedName:(id)arg4 attributes:(id)arg5;
- (void)parser:(id)arg1 foundExternalEntityDeclarationWithName:(id)arg2 publicID:(id)arg3 systemID:(id)arg4;
- (void)parser:(id)arg1 foundInternalEntityDeclarationWithName:(id)arg2 value:(id)arg3;
- (void)parser:(id)arg1 foundElementDeclarationWithName:(id)arg2 model:(id)arg3;
- (void)parser:(id)arg1 foundAttributeDeclarationWithName:(id)arg2 forElement:(id)arg3 type:(id)arg4 defaultValue:(id)arg5;
- (void)parser:(id)arg1 foundUnparsedEntityDeclarationWithName:(id)arg2 publicID:(id)arg3 systemID:(id)arg4 notationName:(id)arg5;
- (void)parser:(id)arg1 foundNotationDeclarationWithName:(id)arg2 publicID:(id)arg3 systemID:(id)arg4;
- (void)parserDidEndDocument:(id)arg1;
- (void)parserDidStartDocument:(id)arg1;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (void)start:(id)arg1 notifyWhenFinished:(id)arg2;
- (id)prefix:(id)arg1;
- (void)dealloc;
- (id)initWithAccount:(id)arg1 andPath:(id)arg2 delegate:(id)arg3;
- (id)initWithURL:(id)arg1 user:(id)arg2 password:(id)arg3 persistence:(unsigned long long)arg4 delegate:(id)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSHListPropertiesOperation : TSHXmlOperation
{
    NSNumber *mDepth;
    NSArray *mLimitedProperties;
    long long mParserDepth;
    long long mHrefDepth;
    long long mPropDepth;
    NSMutableDictionary *mProperties;
    NSMutableDictionary *mNamespacePrefixes;
    _Bool mInProp;
    _Bool mInHref;
    NSMutableString *mPath;
    NSString *mProperty;
}

- (void)parser:(id)arg1 foundCharacters:(id)arg2;
- (void)parser:(id)arg1 didEndElement:(id)arg2 namespaceURI:(id)arg3 qualifiedName:(id)arg4;
- (void)parser:(id)arg1 didStartElement:(id)arg2 namespaceURI:(id)arg3 qualifiedName:(id)arg4 attributes:(id)arg5;
- (id)getProperty:(id)arg1 propertyNamespace:(id)arg2 href:(id)arg3;
- (id)depth;
- (void)start:(id)arg1 notifyWhenFinished:(id)arg2;
- (id)request;
- (id)namespacePrefixes;
- (id)properties;
- (id)description;
- (void)dealloc;
- (id)initWithURL:(id)arg1 user:(id)arg2 password:(id)arg3 persistence:(unsigned long long)arg4 depth:(id)arg5 limitedProperties:(id)arg6 delegate:(id)arg7;
- (id)initWithAccount:(id)arg1 andPath:(id)arg2 depth:(id)arg3 limitedProperties:(id)arg4 delegate:(id)arg5;
- (void)appendValue:(id)arg1 toProperty:(id)arg2 atPath:(id)arg3;

@end

@interface TSHInfoOperation : TSHListPropertiesOperation
{
}

- (id)etag;
- (id)contentLength;
- (_Bool)isCollection;
- (id)modified;
- (id)created;
- (id)objectForKey:(id)arg1;
- (void)dealloc;
- (id)initWithURL:(id)arg1 user:(id)arg2 password:(id)arg3 persistence:(unsigned long long)arg4 delegate:(id)arg5;
- (id)initWithAccount:(id)arg1 andPath:(id)arg2 delegate:(id)arg3;

@end

@interface TSHJsonOperation : TSHRequestDataOperation
{
    unsigned long long mResponseStringEncoding;
    NSObject *mJSONResultObject;
}

- (void)dealloc;
- (id)jsonResult;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (void)start:(id)arg1 notifyWhenFinished:(id)arg2;

@end

@interface TSHListOperation : TSHListPropertiesOperation
{
    NSMutableArray *mSubPaths;
}

- (void)parserDidEndDocument:(id)arg1;
- (void)start:(id)arg1 notifyWhenFinished:(id)arg2;
- (id)subPaths;
- (void)dealloc;
- (id)initWithURL:(id)arg1 user:(id)arg2 password:(id)arg3 persistence:(unsigned long long)arg4 delegate:(id)arg5;
- (id)initWithAccount:(id)arg1 andPath:(id)arg2 delegate:(id)arg3;

@end

@interface TSHNetworkActivity : NSObject
{
    int mActiveConnections;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)sharedNetworkActivity;
+ (id)_singletonAlloc;
- (void)connectionFinished;
- (void)connectionStarted;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;

@end

@interface TSHNetworkReachability : NSObject
{
    struct __SCNetworkReachability *mReachabilityRef;
}

+ (id)reachabilityForLocalWiFi;
+ (id)reachabilityForInternetConnection;
+ (id)reachabilityWithAddress:(const struct sockaddr_in *)arg1;
+ (id)reachabilityWithHostName:(id)arg1;
- (id)getFlagsStatus;
- (_Bool)isReachableByWifi;
- (int)currentReachabilityStatus;
- (int)networkStatusForFlags:(unsigned int)arg1;
- (void)dealloc;
- (void)stopNotifier;
- (_Bool)startNotifier;

@end

@interface TSHOperationQueue : NSObject
{
    TSHRequestQueue *mRequestQueue;
    NSMutableArray *mOperationQueue;
    NSMutableArray *mActiveOperations;
    NSString *mDefaultUserAgent;
    NSMutableDictionary *mDefaultAuthenticationMethods;
}

- (void)operation:(id)arg1 connection:(id)arg2 didFailWithError:(id)arg3;
- (void)operationDidFinish:(id)arg1;
- (id)defaultAuthenicationMethodForScheme:(id)arg1;
- (void)setDefaultAuthenticationMethod:(id)arg1 forScheme:(id)arg2;
- (void)appendUserAgentFragment:(id)arg1;
- (void)setDefaultUserAgent:(id)arg1;
- (id)defaultUserAgent;
- (_Bool)isInactive;
- (id)requestQueue;
- (void)doWork;
- (void)cancel;
- (void)cancelOperation:(id)arg1;
- (void)addOperation:(id)arg1;
- (unsigned long long)maxConcurrentRequestCount;
- (void)setMaxConcurrentRequestCount:(unsigned long long)arg1;
- (void)dealloc;
- (id)init;
- (void)dequeueDependantsOf:(id)arg1;
- (id)dependantsOf:(id)arg1;
- (id)nextUnblockedOperation;
- (_Bool)isBlocked:(id)arg1;

@end

@interface TSHPersonIDOperation : TSHXmlOperation
{
    NSString *mPersonID;
    _Bool mInHref;
    long long mHrefCount;
}

- (void)parser:(id)arg1 foundCharacters:(id)arg2;
- (void)parser:(id)arg1 didEndElement:(id)arg2 namespaceURI:(id)arg3 qualifiedName:(id)arg4;
- (void)parser:(id)arg1 didStartElement:(id)arg2 namespaceURI:(id)arg3 qualifiedName:(id)arg4 attributes:(id)arg5;
- (void)start:(id)arg1 notifyWhenFinished:(id)arg2;
- (id)request;
- (id)personID;
- (void)dealloc;
- (id)initWithAccount:(id)arg1 andPath:(id)arg2 delegate:(id)arg3;
- (id)initWithURL:(id)arg1 user:(id)arg2 password:(id)arg3 persistence:(unsigned long long)arg4 delegate:(id)arg5;

@end

@interface TSHRequestFileOperation : TSHRequestOperation
{
    NSString *mLocalPath;
    id mContext;
    unsigned long long mTotalBytesExpected;
    unsigned long long mTotalBytesReceived;
    SFUFileOutputStream *mStream;
}

- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (unsigned long long)totalBytesReceived;
- (unsigned long long)totalBytesExpected;
- (void)start:(id)arg1 notifyWhenFinished:(id)arg2;
- (void)addHeadersTo:(id)arg1;
- (id)localPath;
- (void)setContext:(id)arg1;
- (id)context;
- (void)dealloc;
- (id)initWithAccount:(id)arg1 path:(id)arg2 localPath:(id)arg3 delegate:(id)arg4;
- (id)initWithURL:(id)arg1 localPath:(id)arg2 user:(id)arg3 password:(id)arg4 persistence:(unsigned long long)arg5 delegate:(id)arg6;

@end

@interface TSHRequestQueue : NSObject
{
    unsigned long long mMaxConcurrentRequestCount;
    TSHConnectionFactory *mConnectionFactory;
    NSMutableArray *mRequestQueue;
    NSMutableArray *mActiveRequests;
}

- (id)connection:(id)arg1 needNewBodyStream:(id)arg2;
- (id)connection:(id)arg1 willCacheResponse:(id)arg2;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didSendBodyData:(long long)arg2 totalBytesWritten:(long long)arg3 totalBytesExpectedToWrite:(long long)arg4;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (void)connection:(id)arg1 didCancelAuthenticationChallenge:(id)arg2;
- (void)connection:(id)arg1 didReceiveAuthenticationChallenge:(id)arg2;
- (_Bool)connection:(id)arg1 canAuthenticateAgainstProtectionSpace:(id)arg2;
- (id)connection:(id)arg1 willSendRequest:(id)arg2 redirectResponse:(id)arg3;
- (id)requestForConnection:(id)arg1;
- (void)setConnectionFactory:(id)arg1;
- (unsigned long long)unblockedQueuedRequestCount;
- (_Bool)isInactive;
- (_Bool)isBusy;
- (void)unregisterDelegate:(id)arg1;
- (unsigned long long)maxConcurrentRequestCount;
- (void)setMaxConcurrentRequestCount:(unsigned long long)arg1;
- (void)cancelRequest:(id)arg1;
- (void)startReadyRequests;
- (void)addRequest:(id)arg1 dependsUpon:(id)arg2 delegate:(id)arg3 startRightAway:(_Bool)arg4;
- (void)addRequest:(id)arg1 dependsUpon:(id)arg2 delegate:(id)arg3;
- (void)addRequest:(id)arg1 delegate:(id)arg2;
- (void)dealloc;
- (id)init;
- (void)dequeueDependantsOf:(id)arg1;
- (id)dependantsOf:(id)arg1;
- (void)doWork;
- (unsigned long long)nextUnblockedQueueEntryIndex;
- (_Bool)isBlocked:(id)arg1;
- (id)entryForConnection:(id)arg1;
- (id)entryForRequest:(id)arg1;

@end

@interface TSHRequestQueueEntry : NSObject
{
    NSURLRequest *mRequest;
    NSURLRequest *mDependancy;
    NSURLConnection *mConnection;
    id mDelegate;
}

- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)setConnection:(id)arg1;
- (id)connection;
- (void)setDependancy:(id)arg1;
- (id)dependancy;
- (void)setRequest:(id)arg1;
- (id)request;
- (void)dealloc;

@end

@interface TSHSetPropertiesOperation : TSHXmlOperation
{
    long long mParserDepth;
    long long mHrefDepth;
    long long mPropDepth;
    NSDictionary *mProperties;
    NSDictionary *mNamespacePrefixes;
    NSArray *mDeleteProps;
    _Bool mInProp;
    _Bool mInHref;
    _Bool mInStatus;
    NSMutableString *mPath;
    NSMutableArray *mResponseProperties;
}

- (void)parser:(id)arg1 foundCharacters:(id)arg2;
- (void)parser:(id)arg1 didEndElement:(id)arg2 namespaceURI:(id)arg3 qualifiedName:(id)arg4;
- (void)parser:(id)arg1 didStartElement:(id)arg2 namespaceURI:(id)arg3 qualifiedName:(id)arg4 attributes:(id)arg5;
- (id)description;
- (void)start:(id)arg1 notifyWhenFinished:(id)arg2;
- (id)request;
- (void)dealloc;
- (id)initWithURL:(id)arg1 user:(id)arg2 password:(id)arg3 persistence:(unsigned long long)arg4 properties:(id)arg5 deleteProperties:(id)arg6 namespacePrefixes:(id)arg7 delegate:(id)arg8;
- (id)initWithAccount:(id)arg1 andPath:(id)arg2 properties:(id)arg3 deleteProperties:(id)arg4 namespacePrefixes:(id)arg5 delegate:(id)arg6;

@end

@interface TSHUploadOperation : TSHOperation
{
    NSArray *mExceptPaths;
    NSMutableArray *mUploadedPaths;
    NSURL *mSourceURL;
    NSMutableDictionary *mFileSizes;
    NSNumber *mSizeOfIncludedFiles;
    NSNumber *mSizeOfUploadedFiles;
    NSNumber *mSizeOfUploadingFiles;
    TSURetainedPointerKeyDictionary *mSubpathsForRequests;
    TSURetainedPointerKeyDictionary *mTransmittedBytesForRequests;
    _Bool mBytesSentTwice;
}

- (id)connection:(id)arg1 needNewBodyStream:(id)arg2;
- (void)connection:(id)arg1 didSendBodyData:(long long)arg2 totalBytesWritten:(long long)arg3 totalBytesExpectedToWrite:(long long)arg4;
- (void)requestQueue:(id)arg1 willStartRequest:(id)arg2;
- (void)requestQueue:(id)arg1 didCompleteRequest:(id)arg2;
- (id)description;
- (unsigned long long)bytesTransmittedOfUploadingFiles;
- (id)sizeOfUploadingFiles;
- (id)sizeOfUploadedFiles;
- (id)sizeOfIncludedFiles;
- (id)sourceURL;
- (void)start:(id)arg1 notifyWhenFinished:(id)arg2;
- (void)dealloc;
- (id)initWithAccount:(id)arg1 andPath:(id)arg2 source:(id)arg3 exceptPaths:(id)arg4 delegate:(id)arg5;
- (id)initWithURL:(id)arg1 source:(id)arg2 user:(id)arg3 password:(id)arg4 persistence:(unsigned long long)arg5 exceptPaths:(id)arg6 delegate:(id)arg7;
- (id)dummyPutAtPath:(id)arg1;
- (id)remoteURLForSourcePath:(id)arg1;
- (id)propFindAtPath:(id)arg1;
- (id)uploadFileAtPath:(id)arg1 error:(id *)arg2;
- (id)makeCollectionAtPath:(id)arg1 error:(id *)arg2;
- (void)uploadResources;
- (_Bool)uploadSubpath:(id)arg1 after:(id)arg2 error:(id *)arg3;
- (_Bool)uploadResource:(id)arg1 after:(id)arg2 error:(id *)arg3;
- (_Bool)shouldUploadPath:(id)arg1;
- (void)populateFileSizes:(id)arg1;

@end

@interface TSKACReadArguments : NSObject
{
    SEL _selector;
    id _target;
    void *_argument;
    id _argument2;
}

@property(readonly, nonatomic) id argument2; // @synthesize argument2=_argument2;
@property(readonly, nonatomic) void *argument; // @synthesize argument=_argument;
@property(readonly, nonatomic) id target; // @synthesize target=_target;
@property(readonly, nonatomic) SEL selector; // @synthesize selector=_selector;
- (void)dealloc;
- (id)initWithSelector:(SEL)arg1 target:(id)arg2 argument:(void *)arg3 argument2:(id)arg4;
- (id)initWithSelector:(SEL)arg1 target:(id)arg2 argument:(void *)arg3;

@end

@interface TSKAVPlayerController : NSObject
{
    AVPlayer *mPlayer;
    id <TSKAVPlayerControllerDelegate> mDelegate;
    long long mRepeatMode;
    float mVolume;
    float mRateBeforeScrubbing;
    unsigned long long mScrubbingCount;
    _Bool mCanPlay;
    _Bool mPlaying;
    _Bool mFastReversing;
    _Bool mFastForwarding;
    _Bool mIsObservingStatus;
    unsigned long long mAdditionalReferences;
    double _absoluteCurrentTime;
}

+ (id)keyPathsForValuesAffectingEndTime;
+ (_Bool)automaticallyNotifiesObserversOfEndTime;
+ (id)keyPathsForValuesAffectingStartTime;
+ (_Bool)automaticallyNotifiesObserversOfStartTime;
+ (id)keyPathsForValuesAffectingAbsoluteDuration;
+ (id)keyPathsForValuesAffectingDuration;
@property(nonatomic) double absoluteCurrentTime; // @synthesize absoluteCurrentTime=_absoluteCurrentTime;
@property(nonatomic, getter=isFastForwarding) _Bool fastForwarding; // @synthesize fastForwarding=mFastForwarding;
@property(nonatomic, getter=isFastReversing) _Bool fastReversing; // @synthesize fastReversing=mFastReversing;
@property(nonatomic, getter=isPlaying) _Bool playing; // @synthesize playing=mPlaying;
@property(readonly, nonatomic) _Bool canPlay; // @synthesize canPlay=mCanPlay;
@property(nonatomic) float volume; // @synthesize volume=mVolume;
@property(nonatomic) long long repeatMode; // @synthesize repeatMode=mRepeatMode;
@property(readonly, nonatomic) AVPlayer *player; // @synthesize player=mPlayer;
@property(readonly, nonatomic) id <TSKAVPlayerControllerDelegate> delegate; // @synthesize delegate=mDelegate;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)p_applicationDidResignActive;
- (void)p_playbackDidFailWithError:(id)arg1;
- (void)p_playerItemDidPlayToEndTime:(id)arg1;
- (void)playerItemDidPlayToEndTimeAtRate:(float)arg1;
- (void)p_closedCaptioningStatusDidChange:(id)arg1;
- (void)p_updateClosedCaptionDisplayEnabled;
- (void)p_stopObservingClosedCaptionDisplayEnabled;
- (void)p_startObservingClosedCaptionDisplayEnabled;
- (_Bool)p_canFastForward;
- (_Bool)p_canFastReverse;
- (void)seekToEnd;
- (void)seekToBeginning;
- (void)seekBackwardByOneFrame;
- (void)seekForwardByOneFrame;
- (void)endScrubbing;
- (void)scrubToTime:(double)arg1 withTolerance:(double)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)scrubToTime:(double)arg1 withTolerance:(double)arg2;
- (void)beginScrubbing;
@property(readonly, nonatomic, getter=isScrubbing) _Bool scrubbing;
@property(readonly, nonatomic) double remainingTime;
@property(readonly, nonatomic) double currentTime;
- (void)p_applyVolumeToPlayerItem;
@property(nonatomic) double endTime;
@property(nonatomic) double startTime;
@property(readonly, nonatomic) double absoluteDuration;
@property(readonly, nonatomic) double duration;
- (void)teardown;
- (void)addAdditionalReference;
- (void)dealloc;
- (id)init;
- (id)initWithPlayer:(id)arg1 delegate:(id)arg2;

@end

@interface TSKAVPlayerTimeController : NSObject
{
    id mTimeObserver;
    _Bool mObservingPlayerStatus;
    double mAbsoluteCurrentTime;
    double mCurrentTime;
    double mRemainingTime;
    double mUpdateInterval;
    TSKAVPlayerController *mPlayerController;
}

@property(readonly, retain, nonatomic) TSKAVPlayerController *playerController; // @synthesize playerController=mPlayerController;
@property(nonatomic) double updateInterval; // @synthesize updateInterval=mUpdateInterval;
@property(readonly, nonatomic) double remainingTime; // @synthesize remainingTime=mRemainingTime;
@property(nonatomic) double currentTime; // @synthesize currentTime=mCurrentTime;
@property(nonatomic) double absoluteCurrentTime; // @synthesize absoluteCurrentTime=mAbsoluteCurrentTime;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)p_endScrubbing;
- (void)p_beginScrubbingIfNeeded;
- (void)p_setTimeValuesWithoutScrubbing;
- (void)p_teardownTimeObserver;
- (void)p_createTimeObserver;
- (void)stopObservingTime;
- (void)startObservingTime;
- (void)dealloc;
- (id)initWithPlayerController:(id)arg1;

@end

@interface TSKAVQueuePlayerController : TSKAVPlayerController
{
    NSArray *mAssets;
}

- (void)p_enqueueAssetsFromIndex:(unsigned long long)arg1;
- (void)skipToAssetAtIndex:(unsigned long long)arg1;
- (void)playerItemDidPlayToEndTimeAtRate:(float)arg1;
- (void)dealloc;
- (id)initWithQueuePlayer:(id)arg1 delegate:(id)arg2 assets:(id)arg3 initialAssetIndex:(unsigned long long)arg4;
- (id)initWithQueuePlayer:(id)arg1 delegate:(id)arg2 assets:(id)arg3;

@end

@interface TSKAbstractAlert : NSObject
{
    long long _result;
    id _context;
    id <TSKUIAlertProtocol> _delegate;
    _Bool _isDelegateRetained;
    _Bool _cancelOnEnterBackground;
    _Bool _inBackground;
    _Bool _clickedButtonAtIndex;
    _Bool _didDismissWithButtonIndex;
    _Bool _willDismissWithButtonIndex;
    _Bool _didPresentAlertView;
    _Bool _willPresentAlertView;
    CDUnknownBlockType _clickedBlock;
    CDUnknownBlockType _dismissedBlock;
}

@property(nonatomic) id <TSKUIAlertProtocol> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) id context; // @synthesize context=_context;
@property(nonatomic) _Bool cancelOnEnterBackground; // @synthesize cancelOnEnterBackground=_cancelOnEnterBackground;
@property(readonly, nonatomic) _Bool inBackground; // @synthesize inBackground=_inBackground;
- (void)showAlert;
- (void)applicationDidEnterBackground:(id)arg1;
- (void)applicationWillEnterForeground:(id)arg1;
- (void)enterBackground;
- (void)willPresentAlertView;
- (void)didPresentAlertView;
- (void)willDismissWithButtonIndex:(long long)arg1;
- (void)didDismissWithButtonIndex:(long long)arg1;
- (void)clickedButtonAtIndex:(long long)arg1;
- (void)dismissWithClickedButtonIndex:(long long)arg1 animated:(_Bool)arg2;
- (long long)firstOtherButtonIndex;
@property(nonatomic) long long cancelButtonIndex;
- (long long)numberOfButtons;
- (id)buttonTitleAtIndex:(long long)arg1;
- (long long)result;
- (long long)showSynchronously;
- (void)showWithDismissedByButtonBlock:(CDUnknownBlockType)arg1;
- (void)showWithClickedButtonBlock:(CDUnknownBlockType)arg1;
- (void)show;
- (void)showWithDelegate:(id)arg1 context:(id)arg2;
- (long long)addButtonWithTitle:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface TSKAccessController : NSObject
{
    struct _opaque_pthread_rwlock_t _rwLock;
    _Bool _secondaryThreadWriting;
    NSCondition *_cond;
    NSMutableDictionary *_signalIdentifiers;
    NSMutableDictionary *_waitIdentifiers;
    struct __CFRunLoopSource *_mainThreadPingSource;
    NSMutableArray *_pendingMainThreadInvocations;
    struct _TSKThreadInfo _readerInfo[64];
    unsigned int _readerCount;
    NSMutableArray *_writerQueue;
    _Bool _writeHeld;
    _Bool _writeBlockedMainThread;
    TSUWeakReference *_delegate;
}

- (_Bool)currentThreadHasWriteLock;
- (void)p_signalThread:(id)arg1;
- (_Bool)p_waitWithCondition:(id)arg1 untilDate:(id)arg2;
- (void)p_flushPendingMainThreadBlocksQueueAcquiringLock:(_Bool)arg1;
- (void)p_performReadOnMainThread:(id)arg1;
- (void)p_scheduleMainThreadRead:(id)arg1;
- (void)p_dequeueWrite;
- (void)p_enqueueWriteAndBlock;
- (id)p_threadIdentifier;
- (void)p_writeUnlockAndPerformWithMainThreadBlocked:(CDUnknownBlockType)arg1;
- (void)p_writeUnlock;
- (void)p_writeLockAndBlockMainThread:(_Bool)arg1;
- (void)p_asyncPerformSelectorOnMainThread:(SEL)arg1 withTarget:(id)arg2 argument:(void *)arg3;
- (void)p_blockMainThreadForWrite;
- (void)p_readUnlock;
- (_Bool)hasWrite;
- (_Bool)hasRead;
- (_Bool)p_hasWrite;
- (_Bool)p_hasRead;
- (void)p_readLock;
- (void)performRead:(SEL)arg1 thenWrite:(SEL)arg2 thenReadOnMainThread:(SEL)arg3 withTarget:(id)arg4 argument:(void *)arg5 passReadResultToMainThreadRead:(_Bool)arg6;
- (void)performRead:(SEL)arg1 thenWrite:(SEL)arg2 thenReadOnMainThread:(SEL)arg3 withTarget:(id)arg4 argument:(void *)arg5;
- (void)performRead:(SEL)arg1 thenReadOnMainThread:(SEL)arg2 withTarget:(id)arg3 argument:(void *)arg4;
- (void)performWrite:(SEL)arg1 withTarget:(id)arg2 argument:(void *)arg3;
- (void)performWrite:(CDUnknownBlockType)arg1 blockMainThread:(_Bool)arg2;
- (void)performWrite:(CDUnknownBlockType)arg1;
- (void)performRead:(SEL)arg1 withTarget:(id)arg2 argument:(void *)arg3 argument2:(void *)arg4;
- (void)performRead:(SEL)arg1 withTarget:(id)arg2 argument:(void *)arg3;
- (void)performRead:(CDUnknownBlockType)arg1;
- (void)spinMainThreadRunLoopUntil:(SEL)arg1 onTarget:(id)arg2;
- (void)signalIdentifier:(id)arg1;
- (_Bool)waitOnIdentifier:(id)arg1 untilDate:(id)arg2 releaseReadWhileWaiting:(_Bool)arg3;
- (void)waitOnIdentifier:(id)arg1;
- (void)dealloc;
- (id)initWithDelegate:(id)arg1;
- (id)init;

@end

@interface TSKAddedToDocumentContext : NSObject
{
}

+ (id)changeTrackingSubstorageForCopyContext;
+ (id)exportFootnoteContext;
+ (id)undoDeleteContext;
+ (id)unhidingContext;
+ (id)movingContext;
+ (id)insertingPrototypeContext;
+ (id)dragCopyContext;
+ (id)dragMoveContext;
+ (id)pastingMatchStyleContext;
+ (id)pastingContext;
+ (id)importingMasterTemplateContextWithImporterID:(id)arg1;
+ (id)importingContextWithImporterID:(id)arg1;
+ (id)unarchivingContext;
- (void)setTableIDMap:(struct __CFDictionary *)arg1;
- (struct __CFDictionary *)tableIDMap;
- (id)undoContext;
- (_Bool)changeTrackingSubstorage;
- (_Bool)exportingFootnotes;
- (_Bool)matchStyle;
- (_Bool)syncChanges;
- (_Bool)uniqueBookmarks;
- (_Bool)autoUpdateSmartFields;
- (_Bool)invokeDOLC;
- (_Bool)wasUndoDelete;
- (_Bool)wasUnhidden;
- (_Bool)wasMoved;
- (_Bool)wasDragMoved;
- (_Bool)wasDragOperation;
- (_Bool)wasPasted;
- (_Bool)wasImportedFromMasterTemplate;
- (_Bool)wasImported;
- (id)importerID;
- (_Bool)wasUnarchived;

@end

@interface TSKAddedToDocumentContext_Pasting : TSKAddedToDocumentContext
{
    struct __CFDictionary *mTableIDMap;
}

- (_Bool)syncChanges;
- (_Bool)uniqueBookmarks;
- (_Bool)autoUpdateSmartFields;
- (_Bool)wasPasted;
- (id)description;
- (void)setTableIDMap:(struct __CFDictionary *)arg1;
- (struct __CFDictionary *)tableIDMap;
- (void)dealloc;
- (id)init;

@end

@interface TSKAddedToDocumentContext_DragCopy : TSKAddedToDocumentContext_Pasting
{
}

- (_Bool)wasDragOperation;
- (id)description;

@end

@interface TSKAddedToDocumentContext_DragMove : TSKAddedToDocumentContext_DragCopy
{
}

- (_Bool)wasDragMoved;
- (id)description;

@end

@interface TSKAddedToDocumentContext_ExportFootnotes : TSKAddedToDocumentContext
{
}

- (_Bool)exportingFootnotes;
- (id)description;

@end

@interface TSKAddedToDocumentContext_Importing : TSKAddedToDocumentContext
{
    NSString *mImporterID;
}

- (id)importerID;
- (id)description;
- (id)initWithImporterID:(id)arg1;
- (void)dealloc;

@end

@interface TSKAddedToDocumentContext_ImportingMasterTemplate : TSKAddedToDocumentContext_Importing
{
}

- (_Bool)wasImportedFromMasterTemplate;

@end

@interface TSKAddedToDocumentContext_InsertingPrototype : TSKAddedToDocumentContext
{
}

- (_Bool)syncChanges;
- (_Bool)uniqueBookmarks;
- (_Bool)autoUpdateSmartFields;
- (_Bool)wasPasted;
- (id)description;

@end

@interface TSKAddedToDocumentContext_Moving : TSKAddedToDocumentContext
{
}

- (id)undoContext;
- (_Bool)wasMoved;
- (id)description;

@end

@interface TSKAddedToDocumentContext_PastingMatchStyle : TSKAddedToDocumentContext_Pasting
{
}

- (_Bool)matchStyle;
- (id)description;

@end

@interface TSKAddedToDocumentContext_SubstorageForChangeTrackingCopy : TSKAddedToDocumentContext
{
}

- (_Bool)changeTrackingSubstorage;
- (id)description;

@end

@interface TSKAddedToDocumentContext_Unarchiving : TSKAddedToDocumentContext
{
}

- (_Bool)autoUpdateSmartFields;
- (_Bool)wasUnarchived;
- (id)description;

@end

@interface TSKAddedToDocumentContext_UndoDelete : TSKAddedToDocumentContext
{
}

- (_Bool)wasUndoDelete;
- (id)description;

@end

@interface TSKAddedToDocumentContext_Unhiding : TSKAddedToDocumentContext
{
}

- (id)undoContext;
- (_Bool)wasUnhidden;
- (id)description;

@end

@interface TSKAggregateSearchTargetProvider : NSObject <TSKSearchTargetProvider>
{
    NSArray *_searchTargetProviders;
}

@property(retain, nonatomic) NSArray *searchTargetProviders; // @synthesize searchTargetProviders=_searchTargetProviders;
- (unsigned long long)p_firstTargetIndexForProvider:(id)arg1;
- (void)p_enumerateTargetProvidersFromTargetIndex:(unsigned long long)arg1 direction:(unsigned long long)arg2 action:(CDUnknownBlockType)arg3;
- (unsigned long long)nextRootSearchTargetIndexFromIndex:(unsigned long long)arg1 forString:(id)arg2 options:(unsigned long long)arg3 inDirection:(unsigned long long)arg4;
- (void)withRootSearchTargetAtIndex:(unsigned long long)arg1 executeBlock:(CDUnknownBlockType)arg2;
- (unsigned long long)rootSearchTargetCountThroughIndex:(unsigned long long)arg1;
- (void)dealloc;
- (id)initWithSearchTargetProviders:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSKAnnotationAuthor : TSPObject
{
    NSString *mName;
    TSUColor *mColor;
}

+ (id)defaultAuthorName;
+ (id)authorColorNameForIndex:(unsigned long long)arg1;
+ (id)authorColorAppearanceNameForIndex:(unsigned long long)arg1;
+ (id)authorPopoverColorForIndex:(unsigned long long)arg1;
+ (id)authorFlagFillColorForIndex:(unsigned long long)arg1;
+ (id)authorChangeAdornmentsColorForIndex:(unsigned long long)arg1;
+ (id)authorFlagPressedColorForIndex:(unsigned long long)arg1;
+ (id)authorFlagStrokeColorForIndex:(unsigned long long)arg1;
+ (id)authorCellViolatorColorForIndex:(unsigned long long)arg1;
+ (id)authorTextHighlightColorForIndex:(unsigned long long)arg1;
+ (id)authorTextMarkupColorForIndex:(unsigned long long)arg1;
+ (id)authorStorageColorForIndex:(unsigned long long)arg1;
+ (unsigned long long)presetColorCount;
- (_Bool)allowsImplicitComponentOwnership;
- (id)componentRootObject;
@property(readonly, nonatomic) TSUColor *popoverColor;
@property(readonly, nonatomic) TSUColor *flagFillColor;
@property(readonly, nonatomic) TSUColor *changeAdornmentsColor;
@property(readonly, nonatomic) TSUColor *flagPressedColor;
@property(readonly, nonatomic) TSUColor *flagStrokeColor;
@property(readonly, nonatomic) TSUColor *cellViolatorColor;
@property(readonly, nonatomic) TSUColor *textHighlightColor;
@property(readonly, nonatomic) TSUColor *textMarkupColor;
- (unsigned long long)p_authorColorIndex;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)initWithContext:(id)arg1 name:(id)arg2 color:(id)arg3;
@property(retain, nonatomic) TSUColor *storageColor;
@property(copy, nonatomic) NSString *name;

@end

@interface TSKAnnotationAuthorStorage : TSPObject
{
    NSMutableSet *mAuthors;
}

@property(readonly, nonatomic) NSSet *authors; // @synthesize authors=mAuthors;
- (void)didLoadChildObjectFromDocumentSupport:(id)arg1;
- (id)packageLocator;
- (unsigned int)delayedArchivingPriority;
- (_Bool)shouldDelayArchiving;
- (id)description;
- (void)didRemoveAuthorRelationshipFromDocument;
- (void)didAddAuthorRelationshipToDocument;
- (id)nextAuthorColor;
- (id)authorWithName:(id)arg1;
- (void)removeAuthor:(id)arg1;
- (void)p_addAuthor:(id)arg1 isFromDocumentSupport:(_Bool)arg2;
- (void)addAuthor:(id)arg1;
- (void)dealloc;

@end

@interface TSKAnnotationAuthorTextHighlightColorProvider : NSObject <TSKCGColorProvider>
{
    TSKAnnotationAuthor *mAnnotationAuthor;
}

- (struct CGColor *)cgColor;
- (void)dealloc;
- (id)initWithAnnotationAuthor:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSKBiggerButton : UIButton
{
    _Bool mHitTestWithOutsets;
    struct UIEdgeInsets mOutsets;
}

+ (id)tsdPlatformButtonWithFrame:(struct CGRect)arg1;
- (void)setHitBufferTop:(double)arg1 left:(double)arg2 bottom:(double)arg3 right:(double)arg4;
- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;

@end

@interface TSKBroadcast : NSObject
{
}

+ (void)syncNotificationWithAccessController:(id)arg1 changeNotifier:(id)arg2 changeGroup:(id)arg3;
+ (void)syncNotificationWithAccessController:(id)arg1 changeNotifier:(id)arg2 changeKind:(int)arg3 details:(id)arg4 changeSource:(id)arg5;
+ (void)asyncNotificationWithAccessController:(id)arg1 changeNotifier:(id)arg2 changeGroup:(id)arg3;
+ (void)asyncNotificationWithAccessController:(id)arg1 changeNotifier:(id)arg2 changeKind:(int)arg3 details:(id)arg4 changeSource:(id)arg5;
+ (void)twoPhaseNotificationWithAccessController:(id)arg1 changeNotifier:(id)arg2 changeGroup:(id)arg3;
+ (void)twoPhaseNotificationWithAccessController:(id)arg1 changeNotifier:(id)arg2 changeKind:(int)arg3 details:(id)arg4 changeSource:(id)arg5;

@end

@interface TSKBundleLookupClass : NSObject
{
}

@end

@interface TSKCellEditorField : UIView
{
    UITextView *mTextView;
    UILabel *mLeftSymbolView;
    UILabel *mRightSymbolView;
}

@property(retain, nonatomic) UILabel *rightSymbolView; // @synthesize rightSymbolView=mRightSymbolView;
@property(retain, nonatomic) UILabel *leftSymbolView; // @synthesize leftSymbolView=mLeftSymbolView;
@property(retain, nonatomic) UITextView *textView; // @synthesize textView=mTextView;
- (void)layoutSubviews;
@property(retain, nonatomic) NSString *rightSymbol;
@property(retain, nonatomic) NSString *leftSymbol;
@property(retain, nonatomic) NSString *text;
- (id)p_symbolContainerBackgroundColor;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface TSKCenterTilingButton : UIButton
{
    UIImage *mLeftCapImage_Normal;
    UIImage *mLeftCapImage_Disabled;
    UIImage *mLeftCapImage_Active;
    UIImage *mLeftCapImage_Selected;
    UIImage *mLeftCapImage_ActiveSelected;
    UIImage *mRightCapImage_Normal;
    UIImage *mRightCapImage_Disabled;
    UIImage *mRightCapImage_Active;
    UIImage *mRightCapImage_Selected;
    UIImage *mRightCapImage_ActiveSelected;
    UIImage *mCenterTileImage_Normal;
    UIImage *mCenterTileImage_Disabled;
    UIImage *mCenterTileImage_Active;
    UIImage *mCenterTileImage_Selected;
    UIImage *mCenterTileImage_ActiveSelected;
    UIImage *mLeftCenterTileImage_Normal;
    UIImage *mLeftCenterTileImage_Disabled;
    UIImage *mLeftCenterTileImage_Active;
    UIImage *mLeftCenterTileImage_Selected;
    UIImage *mLeftCenterTileImage_ActiveSelected;
    UIImage *mRightCenterTileImage_Normal;
    UIImage *mRightCenterTileImage_Disabled;
    UIImage *mRightCenterTileImage_Active;
    UIImage *mRightCenterTileImage_Selected;
    UIImage *mRightCenterTileImage_ActiveSelected;
    int mTilingType;
}

- (void)p_tileHorizCenterOutwardwithLeft:(id)arg1 andRight:(id)arg2 inRect:(struct CGRect)arg3;
- (void)p_tileButtedToCapRtoL:(id)arg1 inRect:(struct CGRect)arg2;
- (void)p_tileButtedToCapLtoR:(id)arg1 inRect:(struct CGRect)arg2;
- (void)p_tileSimple:(id)arg1 inRect:(struct CGRect)arg2;
- (void)p_resetBackgroundImageForState:(unsigned long long)arg1;
- (void)setRightCenterTileImage:(id)arg1 forState:(unsigned long long)arg2;
- (void)setLeftCenterTileImage:(id)arg1 forState:(unsigned long long)arg2;
- (void)setCenterTileImage:(id)arg1 forState:(unsigned long long)arg2;
- (void)setRightCapImage:(id)arg1 forState:(unsigned long long)arg2;
- (void)setLeftCapImage:(id)arg1 forState:(unsigned long long)arg2;
- (id)rightCenterTileImageForState:(unsigned long long)arg1;
- (id)leftCenterTileImageForState:(unsigned long long)arg1;
- (id)centerTileImageForState:(unsigned long long)arg1;
- (id)rightCapImageForState:(unsigned long long)arg1;
- (id)leftCapImageForState:(unsigned long long)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 andTilingType:(int)arg2;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface TSKCenterTilingImageView : UIView
{
    UIImage *mLeftCapImage;
    UIImage *mCenterTileImage;
    UIImage *mRightCapImage;
}

@property(retain, nonatomic) UIImage *rightCapImage; // @synthesize rightCapImage=mRightCapImage;
@property(retain, nonatomic) UIImage *centerTileImage; // @synthesize centerTileImage=mCenterTileImage;
@property(retain, nonatomic) UIImage *leftCapImage; // @synthesize leftCapImage=mLeftCapImage;
- (void)drawRect:(struct CGRect)arg1;
- (void)dealloc;

@end

@interface TSKChangeCollector : NSObject
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)threadCollector;
+ (id)_singletonAlloc;
- (void)registerChange:(int)arg1 details:(id)arg2 forChangeSource:(id)arg3;
- (id)peekCollectedChanges;
- (id)endCollectingChanges;
- (void)beginCollectingChanges;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;

@end

@interface TSKChangeEntry : NSObject
{
    id mChangeSource;
    NSMutableArray *mChanges;
}

@property(readonly, nonatomic) NSMutableArray *changes; // @synthesize changes=mChanges;
@property(readonly, nonatomic) id changeSource; // @synthesize changeSource=mChangeSource;
- (void)dealloc;
- (id)initWithChangeSource:(id)arg1 changes:(id)arg2;

@end

@interface TSKChangeGroup : NSObject <NSCopying>
{
    NSMutableArray *mChangesArray;
}

@property(readonly, nonatomic) NSMutableArray *changesArray; // @synthesize changesArray=mChangesArray;
- (void)registerChange:(int)arg1 details:(id)arg2 forChangeSource:(id)arg3;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)init;

@end

@interface TSKChangeNotifier : NSObject
{
    struct __CFDictionary *mChangeSourceObservers;
    struct __CFDictionary *mChangeSourceOfClassObservers;
    struct __CFArray *mQueuedObserverListChanges;
    unsigned long long mProcessingChanges;
    id mQueuedObserverLock;
}

- (void)asyncProcessChanges:(id)arg1;
- (void)syncProcessChanges:(id)arg1;
- (void)p_updateObserverList;
- (void)removeObserver:(id)arg1 forChangeSourceOfClass:(Class)arg2;
- (void)addObserver:(id)arg1 forChangeSourceOfClass:(Class)arg2;
- (void)removeObserver:(id)arg1 forChangeSource:(id)arg2;
- (void)p_removeObserver:(id)arg1 forChangeSource:(id)arg2 isClass:(_Bool)arg3;
- (void)addObserver:(id)arg1 forChangeSource:(id)arg2;
- (void)p_addObserver:(id)arg1 forChangeSource:(id)arg2 isClass:(_Bool)arg3;
- (void)p_queueObserverListChange:(id)arg1;
- (_Bool)p_pendingAddOrRemoveOfObserver:(id)arg1 forChangeSource:(id)arg2;
- (id)p_findCountedObserverForObserver:(id)arg1 inArray:(id)arg2;
- (void)dealloc;
- (id)init;

@end

@interface TSKChangeRecord : NSObject
{
    int mKind;
    id mDetails;
}

+ (id)changeRecordWithKind:(int)arg1 details:(id)arg2;
@property(readonly, nonatomic) id details; // @synthesize details=mDetails;
@property(readonly, nonatomic) int kind; // @synthesize kind=mKind;
@property(readonly, nonatomic) _Bool allowedInCommit;
- (void)dealloc;
- (id)initWithKind:(int)arg1 details:(id)arg2;

@end

@interface TSKCoachingTipUtilities : NSObject
{
}

+ (void)updateCoachingTipContext;

@end

@interface TSKComposedViewController : TSKPopoverBasedViewController
{
    UIViewController *mComposedViewController;
}

@property(readonly, nonatomic) UIViewController *composedViewController; // @synthesize composedViewController=mComposedViewController;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (id)i_contentViewController;
- (id)title;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)p_unloadChildView;
- (void)p_loadChildView;
- (void)dealloc;
- (id)initWithViewController:(id)arg1;

@end

@interface TSKCountedObserver : NSObject
{
    TSUWeakReference *mWeakObserver;
    unsigned long long mCount;
}

- (unsigned long long)decrementCount;
- (unsigned long long)incrementCount;
- (id)observer;
- (void)dealloc;
- (id)initWithObserver:(id)arg1;

@end

@interface TSKDocumentModelEnumerator : NSEnumerator
{
    _Bool _stop;
    _Bool _filterBeforeAddingChildren;
    id <TSKModel> _root;
    NSMutableArray *_enumeratorStack;
    CDUnknownBlockType _filter;
}

@property(copy, nonatomic) CDUnknownBlockType filter; // @synthesize filter=_filter;
@property(retain, nonatomic) NSMutableArray *enumeratorStack; // @synthesize enumeratorStack=_enumeratorStack;
@property(retain, nonatomic) id <TSKModel> root; // @synthesize root=_root;
@property(nonatomic) _Bool filterBeforeAddingChildren; // @synthesize filterBeforeAddingChildren=_filterBeforeAddingChildren;
- (void)enumerateUsingBlock:(CDUnknownBlockType)arg1;
- (id)nextObject;
- (void)dealloc;
- (id)initWithEnumerator:(id)arg1 filter:(CDUnknownBlockType)arg2;
- (id)initWithRootModelObject:(id)arg1 filter:(CDUnknownBlockType)arg2;
- (void)enumerateReferencedStylesUsingBlock:(CDUnknownBlockType)arg1;

@end

@interface TSKDocumentRootICloudObserver : NSObject
{
    long long _identifier;
    NSOperationQueue *_operationQueue;
    CDUnknownBlockType _block;
    long long _identifer;
}

@property(readonly, nonatomic) long long identifer; // @synthesize identifer=_identifer;
- (void)invokeWithDocumentRoot:(id)arg1;
- (void)dealloc;
- (id)initWithBlock:(CDUnknownBlockType)arg1;

@end

@interface TSKEditableTextFieldCell : UITableViewCell
{
    UITextField *mTextField;
}

@property(retain, nonatomic) UITextField *textField; // @synthesize textField=mTextField;
- (void)textFieldDidEndEditing:(id)arg1;
- (void)endEditing;
- (void)beginEditing;
- (void)layoutSubviews;
- (void)dealloc;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface TSKEditableTextViewCell : UITableViewCell <UITextViewDelegate>
{
    TSKPlaceholderTextView *mTextView;
    UIView *mInputView;
    _Bool mNumberHasDecimal;
    id <UITextViewDelegate> mSavedDelegate;
}

- (void)toggleNegative;
- (void)deleteBackward;
- (void)insertDecimalSeparator;
- (void)insertNumber:(long long)arg1;
- (_Bool)isNegative;
- (void)parseText;
- (void)p_insertString:(id)arg1;
- (void)textFieldDidEndEditing:(id)arg1;
- (_Bool)textViewShouldBeginEditing:(id)arg1;
- (void)endEditing;
- (void)beginEditing;
- (void)setTextDelegate:(id)arg1;
- (void)setTextTag:(long long)arg1;
- (void)setPlaceholder:(id)arg1;
- (void)setInputView:(id)arg1;
@property(retain, nonatomic) NSString *string;
- (void)p_parseText:(id)arg1;
- (void)layoutSubviews;
- (void)tintColorDidChange;
- (void)dealloc;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSKFidgetResolver : NSObject
{
    double _fidgetThreshold;
    id *_values;
    double *_times;
    unsigned long long _head;
}

@property(nonatomic) double fidgetThreshold; // @synthesize fidgetThreshold=_fidgetThreshold;
- (unsigned long long)p_previousValidIndexFromIndex:(unsigned long long)arg1;
- (void)p_advanceHead;
- (void)pushValue:(id)arg1 withTime:(double)arg2;
- (void)pushValue:(id)arg1;
@property(readonly, nonatomic) id nonFidgetValue;
- (void)dealloc;
- (id)init;

@end

@interface TSKFindReplaceController : NSObject
{
    _Bool _onlySearchesAnnotations;
    NSEnumerator *_currentModelEnumerator;
    id <TSKSearchable> _currentSearchable;
    TSKSearch *_currentSearch;
    double _currentSearchStartTime;
    _Bool _commentsIncludedInAnnotationSearch;
    NSMutableSet *_annotationDisplayStringTypes;
    _Bool _countSearchHits;
    unsigned long long _searchResultsCount;
    id <TSKFindReplaceDelegate> _findReplaceDelegate;
    id <TSKSearchTargetProvider> _searchTargetProvider;
    id <TSKDocumentRootProvider> _documentRootProvider;
    NSString *_searchString;
    unsigned long long _searchOptions;
    CDUnknownBlockType _searchResultComparator;
    NSMutableArray *_layoutSearchResults;
    NSMutableDictionary *_layoutSearchCountForRootIndexMap;
    CDUnknownBlockType _progressBlock;
    struct _NSRange _currentRootSearchTargetRange;
}

+ (_Bool)searchReference:(id)arg1 isAfterSearchReference:(id)arg2 orEqual:(_Bool)arg3 inDirection:(unsigned long long)arg4 comparator:(CDUnknownBlockType)arg5;
+ (_Bool)searchReference:(id)arg1 isBeforeSearchReference:(id)arg2 orEqual:(_Bool)arg3 inDirection:(unsigned long long)arg4 comparator:(CDUnknownBlockType)arg5;
+ (_Bool)p_searchReference:(id)arg1 comparedWithSearchReference:(id)arg2 orEqual:(_Bool)arg3 inDirection:(unsigned long long)arg4 before:(_Bool)arg5 comparator:(CDUnknownBlockType)arg6;
+ (void)_recursiveSearchWithSearchTarget:(id)arg1 forAnnotationsWithHitBlock:(CDUnknownBlockType)arg2;
+ (void)_recursiveSearchWithSearchTarget:(id)arg1 forString:(id)arg2 options:(unsigned long long)arg3 hitBlock:(CDUnknownBlockType)arg4;
+ (void)_assertSearchTargetImplementsProperMethods:(id)arg1;
@property(copy, nonatomic) CDUnknownBlockType progressBlock; // @synthesize progressBlock=_progressBlock;
@property(retain, nonatomic) NSMutableDictionary *layoutSearchCountForRootIndexMap; // @synthesize layoutSearchCountForRootIndexMap=_layoutSearchCountForRootIndexMap;
@property(retain, nonatomic) NSMutableArray *layoutSearchResults; // @synthesize layoutSearchResults=_layoutSearchResults;
@property(nonatomic) struct _NSRange currentRootSearchTargetRange; // @synthesize currentRootSearchTargetRange=_currentRootSearchTargetRange;
@property(copy, nonatomic) CDUnknownBlockType searchResultComparator; // @synthesize searchResultComparator=_searchResultComparator;
@property(nonatomic) _Bool countSearchHits; // @synthesize countSearchHits=_countSearchHits;
@property(nonatomic) unsigned long long searchOptions; // @synthesize searchOptions=_searchOptions;
@property(copy, nonatomic) NSString *searchString; // @synthesize searchString=_searchString;
@property(nonatomic) id <TSKDocumentRootProvider> documentRootProvider; // @synthesize documentRootProvider=_documentRootProvider;
@property(readonly, nonatomic) id <TSKSearchTargetProvider> searchTargetProvider; // @synthesize searchTargetProvider=_searchTargetProvider;
@property(readonly, nonatomic) id <TSKFindReplaceDelegate> findReplaceDelegate; // @synthesize findReplaceDelegate=_findReplaceDelegate;
@property(nonatomic) _Bool commentsIncludedInAnnotationSearch; // @synthesize commentsIncludedInAnnotationSearch=_commentsIncludedInAnnotationSearch;
@property(retain, nonatomic) NSSet *annotationDisplayStringTypes; // @synthesize annotationDisplayStringTypes=_annotationDisplayStringTypes;
- (id)searchReferenceAfterReference:(id)arg1 inDirection:(unsigned long long)arg2;
- (unsigned long long)_resultCountInRootObjectRange:(struct _NSRange)arg1;
- (unsigned long long)indexOfVisibleSearchReference:(id)arg1;
- (id)annotationSearchReferenceForAnnotation:(id)arg1;
- (id)firstVisibleResultInRect:(struct CGRect)arg1;
- (void)p_buildVisibleSearchResultsIfNecessary;
- (void)p_buildSearchResultsIfNecessary;
- (id)_lastResultInDirection:(unsigned long long)arg1;
- (id)_firstResultInDirection:(unsigned long long)arg1;
- (void)_nextSearchTargetWithMatchInDirection:(unsigned long long)arg1;
- (unsigned long long)_nextRootSearchTargetFromIndex:(unsigned long long)arg1 inDirection:(unsigned long long)arg2 wrapped:(_Bool *)arg3;
- (void)_buildLayoutSearchResultsForRootSearchTargetsInRange:(struct _NSRange)arg1 resultsArray:(id)arg2;
- (void)sortLayoutSearchResultsArray:(id)arg1;
- (void)invalidateSearchResults;
- (id)searchReferencesToHighlightInVisibleRootObjectRange:(struct _NSRange)arg1;
- (void)p_startCountingHits;
- (void)p_stopCountingHits;
- (void)p_continueCountingHits;
- (_Bool)p_searchCriteriaIsValid;
- (_Bool)p_shouldCountAnnotation:(id)arg1;
- (id)documentRoot;
@property(readonly, nonatomic) unsigned long long searchResultsCount; // @synthesize searchResultsCount=_searchResultsCount;
- (void)setSearchProgressBlock:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (id)initWithDocumentRootProvider:(id)arg1 delegate:(id)arg2 targetProvider:(id)arg3 onlySearchesAnnotations:(_Bool)arg4;
- (id)initWithDocumentRootProvider:(id)arg1 delegate:(id)arg2 onlySearchesAnnotations:(_Bool)arg3;
- (id)initWithDocumentRootProvider:(id)arg1 delegate:(id)arg2;

@end

@interface TSKGradientShapeLayer : CAShapeLayer
{
    CAGradientLayer *_gradient;
    CAShapeLayer *_shapeMask;
}

@property(retain, nonatomic) CAShapeLayer *shapeMask; // @synthesize shapeMask=_shapeMask;
@property(retain, nonatomic) CAGradientLayer *gradient; // @synthesize gradient=_gradient;
- (void)p_flatten;
- (void)p_createGradientTreeIfNeeded;
- (_Bool)isGradientTree;
@property(copy) NSString *type;
@property struct CGPoint endPoint;
@property struct CGPoint startPoint;
@property(copy) NSArray *locations;
@property(copy) NSArray *colors;
- (void)setLineDashPattern:(id)arg1;
- (void)setLineDashPhase:(double)arg1;
- (void)setLineJoin:(id)arg1;
- (void)setLineCap:(id)arg1;
- (void)setMiterLimit:(double)arg1;
- (void)setLineWidth:(double)arg1;
- (void)setStrokeEnd:(double)arg1;
- (void)setStrokeStart:(double)arg1;
- (void)setStrokeColor:(struct CGColor *)arg1;
- (void)setFillRule:(id)arg1;
- (void)setFillColor:(struct CGColor *)arg1;
- (void)setPath:(struct CGPath *)arg1;
- (void)setDelegate:(id)arg1;
- (void)dealloc;

@end

@interface TSKHideOnTouchOutsideViewGestureRecognizer : UIGestureRecognizer <UIGestureRecognizerDelegate>
{
    UIView *mWatchView;
    NSMutableSet *mTargets;
}

+ (_Bool)isInFlight;
@property(nonatomic) UIView *watchView; // @synthesize watchView=mWatchView;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)removeTarget:(id)arg1 action:(SEL)arg2;
- (void)addTarget:(id)arg1 action:(SEL)arg2;
- (void)dealloc;
- (id)initWithTarget:(id)arg1 action:(SEL)arg2 watchView:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSKHideOnTouchOutsideViewGestureRecognizerTarget : NSObject
{
    id mTarget;
    SEL mAction;
}

@property(nonatomic) SEL action; // @synthesize action=mAction;
@property(nonatomic) id target; // @synthesize target=mTarget;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;

@end

@interface TSKHighlightArrayController : NSObject <TSKPulseAnimationControllerProtocol>
{
    NSMutableArray *_layers;
    NSMutableArray *_controllers;
    double _zOrder;
    id <TSKHighlightArrayControllerProtocol> _delegate;
    _Bool _creatingLayers;
    struct CGAffineTransform _canvasTransform;
    struct CGAffineTransform _layerTransform;
    _Bool _shouldPulsate;
    _Bool _pulsating;
    _Bool _autohide;
    double _viewScale;
}

@property(nonatomic) _Bool autohide; // @synthesize autohide=_autohide;
@property(nonatomic) _Bool pulsating; // @synthesize pulsating=_pulsating;
@property(nonatomic) _Bool shouldPulsate; // @synthesize shouldPulsate=_shouldPulsate;
@property(readonly, nonatomic) NSArray *layers; // @synthesize layers=_layers;
@property(nonatomic) double viewScale; // @synthesize viewScale=_viewScale;
- (void)setCanvasTransform:(struct CGAffineTransform)arg1 layerTransform:(struct CGAffineTransform)arg2;
@property(nonatomic) struct CGAffineTransform transform;
- (id)buildHighlightsForSearchReferences:(id)arg1 contentsScaleForLayers:(double)arg2;
- (void)reset;
- (void)disconnect;
- (void)pulseAnimationDidStopForPulse:(id)arg1;
- (void)stop;
- (void)startAnimating;
- (void)dealloc;
- (id)initWithZOrder:(double)arg1 delegate:(id)arg2;

@end

@interface TSKHighlightController : NSObject
{
    CALayer *_imageLayer;
    TSUImage *_image;
    struct CGRect _overallRect;
    struct CGAffineTransform _canvasTransform;
    struct CGAffineTransform _layerTransform;
    CALayer *_containingLayer;
    double _viewScale;
    struct CGPath *_path;
}

@property(retain, nonatomic) TSUImage *image; // @synthesize image=_image;
@property(nonatomic) struct CGPath *path; // @synthesize path=_path;
@property(nonatomic) double viewScale; // @synthesize viewScale=_viewScale;
@property(readonly, nonatomic) CALayer *layer; // @synthesize layer=_containingLayer;
- (void)setCanvasTransform:(struct CGAffineTransform)arg1 layerTransform:(struct CGAffineTransform)arg2;
@property(nonatomic) struct CGAffineTransform transform;
- (struct CGRect)buildLayersForPath:(struct CGPath *)arg1 withImage:(id)arg2;
- (void)createLayerWithZOrder:(double)arg1 contentsScaleForLayers:(double)arg2;
- (void)hide;
- (id)actionForLayer:(id)arg1 forKey:(id)arg2;
- (_Bool)drawRoundedRect;
- (void)reset;
- (void)disconnect;
- (void)dealloc;

@end

@interface TSKHorizontalDragRecognizer : UIGestureRecognizer
{
    struct CGPoint mStartPoint;
    UIScrollView *mContainingScrollView;
}

@property(nonatomic) UIScrollView *containingScrollView; // @synthesize containingScrollView=mContainingScrollView;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (_Bool)canBePreventedByGestureRecognizer:(id)arg1;

@end

@interface TSKKeyboardMonitor : NSObject
{
    UIWindow *_rootWindow;
    _Bool _keyboardIsVisibleAndDocked;
    _Bool _keyboardIsAnimatingInOrDocking;
    _Bool _keyboardIsAnimatingOutOrUndocking;
    _Bool _weAreFakingAHideEvent;
    _Bool _lastHideWasFake;
    _Bool _suppressDidHide;
    struct CGRect _keyboardFrame;
    double _onScreenHeight;
    struct __CFArray *_keyboardObservers;
    NSMutableArray *_completionBlocks;
    id <TSKKeyboardObserver> _exclusiveKeyboardObserver;
    double _keyboardAnimationDuration;
}

+ (void)afterKeyboardAnimationPerformBlock:(CDUnknownBlockType)arg1;
+ (_Bool)keyboardIsAnimatingOutOrUndocking;
+ (_Bool)keyboardIsAnimatingInOrDocking;
+ (_Bool)keyboardIsAnimating;
+ (_Bool)keyboardIsVisibleAndDocked;
+ (void)setKeyboardHiddenByModalObserver:(id)arg1;
+ (void)setModalKeyboardObserver:(id)arg1;
+ (void)removeKeyboardObserver:(id)arg1;
+ (void)addKeyboardObserver:(id)arg1;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)sharedKeyboardMonitor;
+ (id)_singletonAlloc;
@property(readonly) double keyboardAnimationDuration; // @synthesize keyboardAnimationDuration=_keyboardAnimationDuration;
@property(readonly) double onScreenHeight; // @synthesize onScreenHeight=_onScreenHeight;
@property(readonly) struct CGRect keyboardFrame; // @synthesize keyboardFrame=_keyboardFrame;
@property(readonly) _Bool keyboardIsAnimatingOutOrUndocking; // @synthesize keyboardIsAnimatingOutOrUndocking=_keyboardIsAnimatingOutOrUndocking;
@property(readonly) _Bool keyboardIsAnimatingInOrDocking; // @synthesize keyboardIsAnimatingInOrDocking=_keyboardIsAnimatingInOrDocking;
@property(readonly) _Bool keyboardIsVisibleAndDocked; // @synthesize keyboardIsVisibleAndDocked=_keyboardIsVisibleAndDocked;
@property(nonatomic) UIWindow *rootWindow; // @synthesize rootWindow=_rootWindow;
- (void)p_KeyboardDidChangeFrame:(id)arg1;
- (void)p_KeyboardWillChangeFrame:(id)arg1;
- (void)p_keyboardDidHideOrUndock:(id)arg1;
- (void)p_keyboardWillHideOrUndock:(id)arg1;
- (void)p_keyboardDidShowOrDock:(id)arg1;
- (void)p_keyboardWillShowOrDock:(id)arg1;
- (void)p_enumerateObserversUsingBlock:(CDUnknownBlockType)arg1;
- (void)p_removeKeyboardNotifications;
- (void)p_installKeyboardNotifications;
- (void)p_performAnimationCompletionBlocksWithVisible:(_Bool)arg1;
- (void)p_updateKeyboardInfoFromNotification:(id)arg1;
- (id)p_keyboardFrameView;
- (double)keyboardHeightInView:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;
- (void)afterKeyboardAnimationPerformBlock:(CDUnknownBlockType)arg1;
- (void)setKeyboardHiddenByModalObserver:(id)arg1;
- (void)setModalKeyboardObserver:(id)arg1;
- (void)removeKeyboardObserver:(id)arg1;
- (void)addKeyboardObserver:(id)arg1;
- (void)dealloc;
- (id)init;
@property(readonly) _Bool keyboardIsAnimating;

@end

@interface TSKLayerPool : NSObject
{
    NSMutableArray *mLayerPool;
    Class mLayerClass;
    id mLayerDelegate;
}

@property(nonatomic) id layerDelegate; // @synthesize layerDelegate=mLayerDelegate;
@property(nonatomic) Class layerClass; // @synthesize layerClass=mLayerClass;
- (void)returnLayerToPool:(id)arg1;
- (id)requestLayerFromPool;
- (void)dealloc;
- (id)init;

@end

@interface TSKThreadDispatcher : NSObject
{
}

+ (id)sharedInstance;
- (id)p_dispatchQueue;
- (void)dispatchSelector:(SEL)arg1 target:(id)arg2 argument:(id)arg3;
- (void)dispatch:(CDUnknownBlockType)arg1;

@end

@interface TSKLowPriorityThreadDispatcher : TSKThreadDispatcher
{
    NSObject<OS_dispatch_queue> *_queue;
    int _suspendCount;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)sharedLowPriorityDispatcher;
+ (id)_singletonAlloc;
- (id)p_dispatchQueue;
- (void)resume;
- (void)suspend;
@property(readonly, getter=isSuspended) _Bool suspended;
- (id)init;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;

@end

@interface TSKUIAlert : TSKAbstractAlert <UIAlertViewDelegate>
{
    UIAlertView *_alertView;
}

+ (id)alertWithTitle:(id)arg1 message:(id)arg2 cancelButtonTitle:(id)arg3 otherButtonTitle:(id)arg4;
+ (void)setUseMockUIAlert:(_Bool)arg1;
- (void)willPresentAlertView:(id)arg1;
- (void)didPresentAlertView:(id)arg1;
- (void)alertView:(id)arg1 willDismissWithButtonIndex:(long long)arg2;
- (void)alertView:(id)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)dismissWithClickedButtonIndex:(long long)arg1 animated:(_Bool)arg2;
- (long long)firstOtherButtonIndex;
- (void)setCancelButtonIndex:(long long)arg1;
- (long long)cancelButtonIndex;
- (long long)numberOfButtons;
- (id)buttonTitleAtIndex:(long long)arg1;
- (long long)addButtonWithTitle:(id)arg1;
- (void)showAlert;
- (void)dealloc;
- (id)initWithTitle:(id)arg1 message:(id)arg2 cancelButtonTitle:(id)arg3 otherButtonTitle:(id)arg4 otherOtherButtonTitle:(id)arg5;
- (id)initWithTitle:(id)arg1 message:(id)arg2 cancelButtonTitle:(id)arg3 otherButtonTitle:(id)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSKMockUIAlert : TSKUIAlert
{
}

+ (void)setDismissalButtonIndex:(long long)arg1;
- (void)showWithDismissedByButtonBlock:(CDUnknownBlockType)arg1;
- (long long)firstOtherButtonIndex;
- (long long)cancelButtonIndex;
- (id)initWithTitle:(id)arg1 message:(id)arg2 cancelButtonTitle:(id)arg3 otherButtonTitle:(id)arg4;

@end

@interface TSKModalNavigationController : UINavigationController
{
    UIView *mTopSeparator;
    _Bool mShowTopSeparator;
    _Bool mIsFullscreenViewController;
}

@property(nonatomic) _Bool isFullscreenViewController; // @synthesize isFullscreenViewController=mIsFullscreenViewController;
@property(nonatomic) _Bool showTopSeparator; // @synthesize showTopSeparator=mShowTopSeparator;
- (long long)positionForBar:(id)arg1;
- (void)viewDidLoad;
- (void)layoutViews;
- (void)p_statusBarWillChange:(id)arg1;
- (void)dealloc;
- (id)initWithRootViewController:(id)arg1;

@end

@interface TSKModalShieldView : UIView
{
    id <TSKModalShieldDelegate> mDelegate;
}

@property(nonatomic) id <TSKModalShieldDelegate> delegate; // @synthesize delegate=mDelegate;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;

@end

@interface TSKMoviePlaybackRegistry : NSObject
{
}

+ (id)sharedMoviePlaybackRegistry;
- (void)object:(id)arg1 willTransferMoviePlaybackToObject:(id)arg2;
- (void)objectDidEndMoviePlayback:(id)arg1;
- (void)objectWillBeginMoviePlayback:(id)arg1;

@end

@interface TSKNullActionLayerDelegate : NSObject
{
}

+ (id)layerDelegate;
- (id)actionForLayer:(id)arg1 forKey:(id)arg2;

@end

@interface TSKPicaFormatter : NSFormatter
{
    NSString *mPicaSeparator;
    NSNumber *mMinimum;
    NSNumber *mMaximum;
}

@property(copy, nonatomic) NSNumber *maximum; // @synthesize maximum=mMaximum;
@property(copy, nonatomic) NSNumber *minimum; // @synthesize minimum=mMinimum;
@property(copy, nonatomic) NSString *picaSeparator; // @synthesize picaSeparator=mPicaSeparator;
- (_Bool)getObjectValue:(id *)arg1 forString:(id)arg2 errorDescription:(id *)arg3;
- (id)stringForObjectValue:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithPicaSeparator:(id)arg1;

@end

@interface TSKPlaceholderTextView : UITextView
{
    UILabel *mPlaceholderView;
}

- (_Bool)becomeFirstResponder;
- (void)p_textDidChange:(id)arg1;
- (void)setText:(id)arg1;
- (void)didMoveToSuperview;
- (void)removeFromSuperview;
- (void)setTextColor:(id)arg1;
- (void)setFont:(id)arg1;
- (void)setTextAlignment:(long long)arg1;
- (void)setFrame:(struct CGRect)arg1;
@property(retain, nonatomic) NSString *placeholder;
- (void)setContentOffset:(struct CGPoint)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface TSKPopoverController : UIPopoverController <UIPopoverControllerDelegate>
{
    _Bool mDismissOnUndo;
    _Bool mDismissOnMoviePlayback;
    _Bool mDismissAnimatedOnOrientationChange;
    id <UIPopoverControllerDelegate> mSavedDelegate;
    _Bool mIsDismissing;
}

+ (double)defaultPopoverPlacementPadding;
+ (_Bool)anyPopoversVisible;
@property(nonatomic) _Bool dismissAnimatedOnOrientationChange; // @synthesize dismissAnimatedOnOrientationChange=mDismissAnimatedOnOrientationChange;
@property(nonatomic) _Bool dismissOnMoviePlayback; // @synthesize dismissOnMoviePlayback=mDismissOnMoviePlayback;
@property(nonatomic) _Bool dismissOnUndo; // @synthesize dismissOnUndo=mDismissOnUndo;
- (void)p_applicationDidEnterBackground:(id)arg1;
- (void)popoverControllerDidDismissPopover:(id)arg1;
- (_Bool)popoverControllerShouldDismissPopover:(id)arg1;
- (void)p_orientationWillChange:(id)arg1;
- (void)moviePlaybackWillBegin:(id)arg1;
- (void)presentPopoverFromRect:(struct CGRect)arg1 inView:(id)arg2 permittedArrowDirections:(unsigned long long)arg3 animated:(_Bool)arg4;
- (void)presentPopoverFromRect:(struct CGRect)arg1 inView:(id)arg2 permittedArrowDirections:(unsigned long long)arg3 animated:(_Bool)arg4 constrainToView:(_Bool)arg5 withPadding:(double)arg6;
- (void)p_willShowPopoverNotification:(id)arg1;
- (void)p_dismissPopoverAnimated:(_Bool)arg1;
- (void)p_sendPopoverHidDelegateMessage;
- (void)dismissPopoverAnimated:(_Bool)arg1;
- (void)setDelegate:(id)arg1;
- (void)dealloc;
- (id)initWithContentViewController:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSKPopoverUndoObserver : NSObject
{
    NSUndoManager *mUndoManager;
    NSMutableSet *mPopoverBasedViewControllers;
    NSMutableSet *mPopoverControllers;
}

+ (id)sharedObserver;
@property(retain, nonatomic) NSUndoManager *observedUndoManager; // @synthesize observedUndoManager=mUndoManager;
- (void)removePopoverBasedViewController:(id)arg1;
- (void)addPopoverBasedViewController:(id)arg1;
- (void)removePopoverController:(id)arg1;
- (void)addPopoverController:(id)arg1;
- (void)undoManagerWillRedo:(id)arg1;
- (void)undoManagerWillUndo:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface TSKPulseAnimationController : TSKHighlightController
{
    id <TSKPulseAnimationControllerProtocol> _delegate;
    _Bool _pulsating;
    _Bool _autohide;
    double _duration;
    double _pulseOffset;
}

@property(nonatomic) double pulseOffset; // @synthesize pulseOffset=_pulseOffset;
@property(nonatomic) double duration; // @synthesize duration=_duration;
@property(nonatomic) _Bool autohide; // @synthesize autohide=_autohide;
@property(nonatomic) _Bool pulsating; // @synthesize pulsating=_pulsating;
- (void)startAnimating;
- (_Bool)drawRoundedRect;
- (void)stop;
- (void)animationDidStop:(id)arg1 finished:(_Bool)arg2;
- (void)disconnect;
- (void)reset;
- (void)dealloc;
- (id)initWithDelegate:(id)arg1;

@end

@interface TSKQueuedObserverSet : NSObject
{
    int mChangeType;
    id mObserver;
    id mChangeSource;
    _Bool mIsClass;
}

+ (id)queuedObserverSetWithChangeType:(int)arg1 observer:(id)arg2 changeSource:(id)arg3 isClass:(_Bool)arg4;
- (void)dealloc;

@end

@interface TSKRemovedFromDocumentContext : NSObject
{
}

+ (id)hidingContext;
+ (id)movingContext;
- (id)undoContext;
- (_Bool)wasHidden;
- (_Bool)wasMoved;

@end

@interface TSKRemovedFromDocumentContext_Hiding : TSKRemovedFromDocumentContext
{
}

- (id)undoContext;
- (_Bool)wasHidden;
- (id)description;

@end

@interface TSKRemovedFromDocumentContext_Moving : TSKRemovedFromDocumentContext
{
}

- (id)undoContext;
- (_Bool)wasMoved;
- (id)description;

@end

@interface TSKReverseShadowButton : UIButton
{
}

- (void)setHighlighted:(_Bool)arg1;
- (void)setSelected:(_Bool)arg1;

@end

@interface TSKRulerUnits : NSObject
{
    int _rulerUnits;
    _Bool _showRulerAsPercentage;
    _Bool _centerRulerOrigin;
    int _preferredPixelUnit;
    NSFormatter *_formatter;
    NSFormatter *_lenientFormatter;
    NSFormatter *_highPrecisionFormatter;
    NSFormatter *_lenientHighPrecisionFormatter;
}

+ (id)formatterForRulerUnits:(int)arg1 decimalPlaces:(int)arg2 trailingZeros:(_Bool)arg3 lenient:(_Bool)arg4;
+ (id)instance;
@property(nonatomic) int preferredPixelUnit; // @synthesize preferredPixelUnit=_preferredPixelUnit;
@property(nonatomic) _Bool centerRulerOrigin; // @synthesize centerRulerOrigin=_centerRulerOrigin;
@property(nonatomic) _Bool showRulerAsPercentage; // @synthesize showRulerAsPercentage=_showRulerAsPercentage;
@property(nonatomic) int rulerUnits; // @synthesize rulerUnits=_rulerUnits;
- (id)localizedCompatibleRulerUnits;
- (id)compatibleRulerUnits;
- (id)formatter:(_Bool)arg1 lenient:(_Bool)arg2;
- (double)convertPointsToRulerUnits:(double)arg1;
- (double)convertRulerUnitsToPoints:(double)arg1;
- (void)dealloc;
- (id)init;

@end

@interface TSKSearch : NSObject
{
    _Bool _isComplete;
    NSString *_string;
    unsigned long long _options;
    CDUnknownBlockType _hitBlock;
}

@property(nonatomic) _Bool isComplete; // @synthesize isComplete=_isComplete;
@property(copy, nonatomic) CDUnknownBlockType hitBlock; // @synthesize hitBlock=_hitBlock;
@property(nonatomic) unsigned long long options; // @synthesize options=_options;
@property(copy, nonatomic) NSString *string; // @synthesize string=_string;
- (void)dealloc;
- (id)initWithString:(id)arg1 options:(unsigned long long)arg2 hitBlock:(CDUnknownBlockType)arg3;

@end

@interface TSKSegmentedControl : UIControl
{
    NSMutableArray *mItems;
    NSMutableArray *mButtonSegments;
    NSIndexSet *mSelectedSegmentIndices;
    _Bool mAllowsMultipleSelection;
    _Bool mAllowsEmptySelection;
    long long mLastPressedSegmentIndex;
    void *mUserData;
    UIFont *mFont;
    int mStyle;
    int _segmentedControlStyle;
    UIColor *mSelectedTintColor;
}

@property(readonly, nonatomic) int segmentedControlStyle; // @synthesize segmentedControlStyle=_segmentedControlStyle;
@property(nonatomic) void *userData; // @synthesize userData=mUserData;
@property(readonly, nonatomic) long long lastPressedSegmentIndex; // @synthesize lastPressedSegmentIndex=mLastPressedSegmentIndex;
@property(nonatomic) _Bool allowsEmptySelection; // @synthesize allowsEmptySelection=mAllowsEmptySelection;
@property(nonatomic) _Bool allowsMultipleSelection; // @synthesize allowsMultipleSelection=mAllowsMultipleSelection;
@property(copy, nonatomic) NSIndexSet *selectedSegmentIndices; // @synthesize selectedSegmentIndices=mSelectedSegmentIndices;
@property(retain, nonatomic) UIFont *font; // @synthesize font=mFont;
- (void)tappedSegment:(id)arg1;
- (void)p_updateSegmentProperties;
- (void)p_setButtonAttributedTitle:(id)arg1 color:(id)arg2 forState:(unsigned long long)arg3 button:(id)arg4;
- (id)p_backgroundImageForButton:(id)arg1 item:(id)arg2 fillColor:(id)arg3;
- (id)p_losengeBackgroundImageForButton:(id)arg1 item:(id)arg2 fillColor:(id)arg3;
- (id)p_fullBleedBackgroundImageForButton:(id)arg1 item:(id)arg2 fillColor:(id)arg3;
- (unsigned long long)segmentWithTag:(long long)arg1;
- (long long)tagForSegment:(unsigned long long)arg1;
- (void)setTag:(long long)arg1 forSegment:(unsigned long long)arg2;
- (void)setBackgroundImage:(id)arg1 forState:(unsigned long long)arg2 forSegment:(unsigned long long)arg3;
- (void)setImage:(id)arg1 forSegment:(unsigned long long)arg2;
- (void)setEnabled:(_Bool)arg1 forSegment:(unsigned long long)arg2;
- (void)setTitle:(id)arg1 forSegment:(unsigned long long)arg2;
@property(readonly, nonatomic) unsigned long long numberOfSegments;
- (void)sizeToFitWidth:(float)arg1;
- (void)sizeToFit;
- (void)setFrame:(struct CGRect)arg1;
- (void)setSegmentedControlStyle:(int)arg1;
- (void)p_setSegmentedControlStyle:(int)arg1;
@property(retain, nonatomic) UIColor *selectedTintColor; // @synthesize selectedTintColor=mSelectedTintColor;
- (void)p_setSelectedTintColor:(id)arg1;
- (void)tintColorDidChange;
- (void)dealloc;
- (id)initWithItems:(id)arg1 style:(int)arg2 target:(id)arg3 action:(SEL)arg4;
- (id)initWithItems:(id)arg1 style:(int)arg2;
- (id)initWithItems:(id)arg1;

@end

@interface TSKSheetViewController : UIViewController <UIViewControllerTransitioningDelegate, UIViewControllerAnimatedTransitioning, UIGestureRecognizerDelegate>
{
    UIViewController *_contentViewController;
    NSLayoutConstraint *_contentVerticalConstraint;
    _Bool _isContentHidden;
    id <TSKSheetViewControllerDelegate> _delegate;
}

@property(nonatomic) id <TSKSheetViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)setContentHidden:(_Bool)arg1;
- (void)animateDismissWithContext:(id)arg1;
- (void)animateShowWithContext:(id)arg1;
- (_Bool)isShowingForTransitionContext:(id)arg1;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (void)animateTransition:(id)arg1;
- (double)transitionDuration:(id)arg1;
- (id)animationControllerForDismissedController:(id)arg1;
- (id)animationControllerForPresentedController:(id)arg1 presentingController:(id)arg2 sourceController:(id)arg3;
- (_Bool)shouldAutorotate;
- (void)didTapView;
- (void)dismissSheetAnimated:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (id)initWithContentViewController:(id)arg1 allowTapsOutsideContentView:(_Bool)arg2;
- (id)initWithContentViewController:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSKShuffleMapping : NSObject <NSCopying>
{
    unsigned short mStartIndex;
    unsigned short mEndIndex;
    unsigned short *mMapping;
    _Bool mIsVertical;
    _Bool mIsMoveOperation;
    unsigned short mFirstMovedIndex;
    unsigned short mDestinationIndexForMove;
    unsigned short mNumberOfIndicesMoved;
}

@property(readonly, nonatomic) unsigned short *mapping; // @synthesize mapping=mMapping;
@property(readonly, nonatomic) unsigned short endIndex; // @synthesize endIndex=mEndIndex;
@property(readonly, nonatomic) unsigned short startIndex; // @synthesize startIndex=mStartIndex;
- (void)swapIndex:(unsigned short)arg1 withIndex:(unsigned short)arg2;
- (void)remove:(unsigned short)arg1 indicesAtIndex:(unsigned short)arg2;
- (void)insert:(unsigned short)arg1 indicesAtIndex:(unsigned short)arg2 insertingBefore:(_Bool)arg3;
- (void)enumerateMappingRange:(struct _NSRange)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (_Bool)isMove;
- (_Bool)isVertical;
- (unsigned short)reverseMapIndex:(unsigned short)arg1;
- (unsigned short)mapIndex:(unsigned short)arg1;
- (id)copyInverse;
- (id)copyWithZone:(struct _NSZone *)arg1;
@property(readonly, nonatomic) unsigned short mappingSize; // @dynamic mappingSize;
- (void)dealloc;
- (id)initForMovedIndicesStartingAtIndex:(unsigned short)arg1 destinationIndex:(unsigned short)arg2 numberOfIndices:(unsigned short)arg3 vertical:(_Bool)arg4;
- (id)initWithStartIndex:(unsigned short)arg1 endIndex:(unsigned short)arg2;
- (id)initWithStartIndex:(unsigned short)arg1 endIndex:(unsigned short)arg2 mapping:(unsigned short *)arg3;

@end

@interface TSKSmudgedLabel : UILabel
{
    UIImage *mSmudgeImage;
}

@property(retain) UIImage *smudgeImage; // @synthesize smudgeImage=mSmudgeImage;
- (void)drawTextInRect:(struct CGRect)arg1;
- (void)dealloc;

@end

@interface TSKStarRatingView : UIControl
{
    long long mRating;
    long long mRatingOnFingerDown;
    int mStyle;
    TSKHorizontalDragRecognizer *mDragGesture;
    _Bool mShowsDots;
    TSUColor *mColor;
}

+ (struct CGPath *)newStarPath:(double)arg1;
+ (void)renderRating:(long long)arg1 intoContext:(struct CGContext *)arg2 rect:(struct CGRect)arg3 style:(int)arg4 showDots:(_Bool)arg5;
@property(copy, nonatomic) TSUColor *color; // @synthesize color=mColor;
@property(nonatomic) _Bool showsDots; // @synthesize showsDots=mShowsDots;
@property(nonatomic) int style; // @synthesize style=mStyle;
- (Class)renderClass;
- (void)drawRect:(struct CGRect)arg1;
@property(nonatomic) long long value;
- (void)willMoveToSuperview:(id)arg1;
- (void)p_horizontalDrag:(id)arg1;
- (void)p_tapped:(id)arg1;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (long long)p_starRatingForGesture:(id)arg1;
- (long long)p_starRatingForLocation:(double)arg1;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)p_setupGestureRecognizers;

@end

@interface TSKStarRatingViewRenderer : NSObject
{
}

+ (void)renderRating:(long long)arg1 intoContext:(struct CGContext *)arg2 rect:(struct CGRect)arg3 style:(int)arg4 showDots:(_Bool)arg5 color:(id)arg6;
+ (struct CGPath *)newStarPath:(double)arg1;
- (id)init;

@end

@interface TSKStretchableBackgroundButton : UIButton
{
    long long mBackgroundTopCapHeight;
    long long mBackgroundLeftCapWidth;
}

@property(nonatomic) long long backgroundLeftCapWidth; // @synthesize backgroundLeftCapWidth=mBackgroundLeftCapWidth;
@property(nonatomic) long long backgroundTopCapHeight; // @synthesize backgroundTopCapHeight=mBackgroundTopCapHeight;
- (void)p_resetBackgroundImage;
- (void)p_resetBackgroundImageForState:(unsigned long long)arg1;
- (void)awakeFromNib;
- (void)guessBackgroundTopLeftCapSize;
- (void)setBackgroundTopLeftCapHeight:(long long)arg1 width:(long long)arg2;
- (void)setBackgroundImage:(id)arg1 forState:(unsigned long long)arg2;

@end

@interface TSKTintLayer : CAReplicatorLayer
{
    CALayer *_contentsLayer;
}

@property(retain, nonatomic) CALayer *contentsLayer; // @synthesize contentsLayer=_contentsLayer;
- (void)layoutSublayers;
@property struct CGColor *tintColor;
- (void)setNeedsDisplay;
- (void)setContents:(id)arg1;
- (id)contents;

@end

@interface TSKToolbar : UINavigationBar
{
    UINavigationItem *_navigationItem;
    CALayer *_shadowLayer;
    _Bool _shadowEnabled;
    TSKToolbarTitleView *_navigationTitleView;
    double _leftToolbarItemsInset;
    double _rightToolbarItemsInset;
    double _leftToolbarItemsMaximumWidth;
    double _rightToolbarItemsMaximumWidth;
}

@property(nonatomic) double rightToolbarItemsMaximumWidth; // @synthesize rightToolbarItemsMaximumWidth=_rightToolbarItemsMaximumWidth;
@property(nonatomic) double leftToolbarItemsMaximumWidth; // @synthesize leftToolbarItemsMaximumWidth=_leftToolbarItemsMaximumWidth;
@property(nonatomic) double rightToolbarItemsInset; // @synthesize rightToolbarItemsInset=_rightToolbarItemsInset;
@property(nonatomic) double leftToolbarItemsInset; // @synthesize leftToolbarItemsInset=_leftToolbarItemsInset;
@property(nonatomic) _Bool shadowEnabled; // @synthesize shadowEnabled=_shadowEnabled;
@property(retain, nonatomic) TSKToolbarTitleView *navigationTitleView; // @synthesize navigationTitleView=_navigationTitleView;
@property(retain, nonatomic) UIColor *titleColor;
@property(copy, nonatomic) NSString *title;
- (void)setItems:(id)arg1 animated:(_Bool)arg2 height:(double)arg3 isLeft:(_Bool)arg4;
- (void)setLeftItems:(id)arg1 title:(id)arg2 rightItems:(id)arg3 duration:(double)arg4;
- (id)itemWithTag:(long long)arg1;
- (void)layoutSubviews;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface TSKToolbarButtonCollectionView : UIView
{
}

- (id)initWithHeight:(double)arg1 items:(id)arg2 maximumWidth:(double)arg3;

@end

@interface TSKToolbarShadowLayer : CALayer
{
}

- (void)drawInContext:(struct CGContext *)arg1;

@end

@interface TSKToolbarSpace : NSObject
{
    double _width;
}

+ (id)spaceWithWidth:(double)arg1;
@property(nonatomic) double width; // @synthesize width=_width;
@property(nonatomic, getter=isEnabled) _Bool enabled;

@end

@interface TSKToolbarTitleView : UIView
{
    NSString *_title;
    UIColor *_titleColor;
}

@property(retain, nonatomic) UIColor *titleColor; // @synthesize titleColor=_titleColor;
@property(copy, nonatomic) NSString *title; // @synthesize title=_title;

@end

@interface TSKTreeNode : TSPObject
{
    NSString *mDisplayName;
    id mObject;
    NSMutableArray *mChildren;
}

- (id)description;
- (id)shallowCopy;
- (void)enumerateAllChildrenWithBlock:(CDUnknownBlockType)arg1;
- (id)childEnumerator;
- (void)removeAllChildren;
- (void)removeChildAtIndex:(unsigned long long)arg1;
- (void)removeChildWithDataObject:(id)arg1;
- (void)removeChildWithName:(id)arg1;
- (void)addNode:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)addObject:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)addChildWithName:(id)arg1 object:(id)arg2;
- (_Bool)hasChildWithName:(id)arg1;
- (long long)indexOfNodeWithObject:(id)arg1;
- (id)nodeWithObject:(id)arg1;
- (id)nodeAtIndex:(unsigned long long)arg1;
- (id)objectAtIndex:(unsigned long long)arg1;
@property(retain, nonatomic) id dataObject;
@property(retain, nonatomic) NSMutableArray *children;
@property(retain, nonatomic) NSString *name;
- (void)dealloc;
- (id)initWithContext:(id)arg1;

@end

@interface TSKTwoLabelButton : UIButton
{
    UILabel *mSecondLabel;
    UIImageView *mImageView;
    UIImage *mNormalStateImage;
    UIImage *mHighlightedStateImage;
    UIImage *mDisabledStateImage;
    UIColor *mSecondLabelTextColor;
}

@property(retain, nonatomic) UIColor *secondLabelTextColor; // @synthesize secondLabelTextColor=mSecondLabelTextColor;
@property(retain, nonatomic) UIImage *disabledStateImage; // @synthesize disabledStateImage=mDisabledStateImage;
@property(retain, nonatomic) UIImage *highlightedStateImage; // @synthesize highlightedStateImage=mHighlightedStateImage;
@property(retain, nonatomic) UIImage *normalStateImage; // @synthesize normalStateImage=mNormalStateImage;
@property(retain, nonatomic) UIImageView *imageView; // @synthesize imageView=mImageView;
@property(retain, nonatomic) UILabel *secondLabel; // @synthesize secondLabel=mSecondLabel;
- (void)cancelTrackingWithEvent:(id)arg1;
- (void)endTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (_Bool)continueTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (_Bool)beginTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (void)layoutSubviews;
- (void)p_syncButtonState;
- (void)dealloc;

@end

@interface TSKUIActionSheet : TSKAbstractAlert <UIActionSheetDelegate>
{
    UIActionSheet *_actionSheet;
    UIView *_targetView;
}

+ (id)alertWithTitle:(id)arg1 cancelButtonTitle:(id)arg2 destructiveButtonTitle:(id)arg3 otherButtonTitle:(id)arg4 targetView:(id)arg5;
- (void)willPresentActionSheet:(id)arg1;
- (void)didPresentActionSheet:(id)arg1;
- (void)actionSheet:(id)arg1 willDismissWithButtonIndex:(long long)arg2;
- (void)actionSheet:(id)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)actionSheet:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)dismissWithClickedButtonIndex:(long long)arg1 animated:(_Bool)arg2;
- (long long)firstOtherButtonIndex;
- (void)setCancelButtonIndex:(long long)arg1;
- (long long)cancelButtonIndex;
- (long long)numberOfButtons;
- (id)buttonTitleAtIndex:(long long)arg1;
- (long long)addButtonWithTitle:(id)arg1;
- (void)showAlert;
- (void)dealloc;
- (id)initWithTitle:(id)arg1 cancelButtonTitle:(id)arg2 destructiveButtonTitle:(id)arg3 otherButtonTitle:(id)arg4 targetView:(id)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSKUIAlertViewCompletionHandlerDelegate : NSObject <UIAlertViewDelegate>
{
    CDUnknownBlockType mCompletionHandler;
}

@property(copy, nonatomic) CDUnknownBlockType completionHandler; // @synthesize completionHandler=mCompletionHandler;
- (void)alertView:(id)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSKWarning : NSObject
{
    NSString *mMessage;
    NSArray *mInfos;
    unsigned int mKind;
    int mSeverity;
}

+ (id)warningWithMessage:(id)arg1 kind:(unsigned int)arg2 severity:(int)arg3 infos:(id)arg4;
+ (id)warningWithMessage:(id)arg1 kind:(unsigned int)arg2 infos:(id)arg3;
+ (id)warningWithMessage:(id)arg1;
+ (id)warningWithMessage:(id)arg1 severity:(int)arg2;
@property(readonly, nonatomic) int severity; // @synthesize severity=mSeverity;
@property(readonly, nonatomic) unsigned int kind; // @synthesize kind=mKind;
@property(copy, nonatomic) NSArray *infos; // @synthesize infos=mInfos;
@property(copy, nonatomic) NSString *message; // @synthesize message=mMessage;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)dealloc;
- (id)initWithMessage:(id)arg1 kind:(unsigned int)arg2 severity:(int)arg3 infos:(id)arg4;

@end

@interface TSKiOSUnhittableView : UIView
{
}

- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;

@end

@interface TSPAVAssetResourceLoaderDelegate : NSObject <AVAssetResourceLoaderDelegate>
{
    TSPFileDataStorage *_dataStorage;
    NSObject<OS_dispatch_queue> *_delegateQueue;
    id <TSUReadChannel> _readChannel;
    NSObject<OS_dispatch_queue> *_concurrentRequestQueue;
    NSString *_contentTypeUTI;
}

- (void).cxx_destruct;
- (_Bool)resourceLoader:(id)arg1 shouldWaitForLoadingOfRequestedResource:(id)arg2;
- (void)dealloc;
- (void)_provideData:(id)arg1 untilRequestCancelledForResourceLoadingRequest:(id)arg2;
- (id)delegateQueue;
- (id)initWithTSPFileDataStorage:(id)arg1 contentTypeUTI:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSPAssetReadChannel : NSObject <TSUStreamReadChannel>
{
    ALAssetRepresentation *_representation;
    ALAssetsLibrary *_library;
    NSObject<OS_dispatch_queue> *_readQueue;
}

- (void).cxx_destruct;
- (void)close;
- (void)readWithQueue:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (id)initWithRepresentation:(id)arg1 library:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSPBundleLookupClass : NSObject
{
}

@end

@interface TSPContainedObject : NSObject
{
    TSPObject *_owner;
}

@property(nonatomic) __weak TSPObject *owner; // @synthesize owner=_owner;
- (void).cxx_destruct;
- (void)willModifyForUpgrade;
- (void)willModify;
- (id)initWithOwner:(id)arg1;
- (id)documentRoot;

@end

@interface TSPCryptoComponentWriteChannel : NSObject <TSPComponentWriteChannel>
{
    id <TSPComponentWriteChannel> _writeChannel;
    struct _CCCryptor *_cryptor;
    char *_buffer;
    struct {
        unsigned int ctx[96];
    } _ccHmacContext;
}

- (void).cxx_destruct;
- (void)close;
- (void)_writeData:(id)arg1 updateHmac:(_Bool)arg2;
- (void)writeData:(id)arg1;
- (void)dealloc;
- (id)initWithWriteChannel:(id)arg1 encryptionKey:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSPCryptoReadChannel : NSObject <TSUStreamReadChannel>
{
    id <TSUStreamReadChannel> _readChannel;
    NSObject<OS_dispatch_queue> *_readChannelQueue;
    SFUCryptoKey *_decryptionKey;
    NSObject<OS_dispatch_data> *_holdData;
    char *_iv;
    unsigned long long _ivRead;
    struct _CCCryptor *_cryptor;
    char *_buffer;
    unsigned long long _initialBytesIgnored;
}

- (void).cxx_destruct;
- (void)readWithQueue:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)close;
- (void)dealloc;
- (id)initWithReadChannel:(id)arg1 decryptionKey:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSPCryptoTranscodeReadChannel : NSObject <TSUStreamReadChannel>
{
    id <TSUStreamReadChannel> _readChannel;
    SFUCryptoKey *_encryptionKey;
    NSObject<OS_dispatch_queue> *_readQueue;
}

- (void).cxx_destruct;
- (void)close;
- (void)readWithQueue:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (id)initWithReadChannel:(id)arg1 decryptionKey:(id)arg2 encryptionKey:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSPData : NSObject
{
    int _didCull;
    long long _identifier;
    NSObject<OS_dispatch_queue> *_accessQueue;
    id <TSPDataStorage> _storage;
    NSString *_filename;
    TSPDataManager *_manager;
    array_019f9a10 _digest;
    _Bool _isDeallocating;
}

+ (_Bool)updateDigest:(array_019f9a10 *)arg1 withProtobufString:(const basic_string_a1f69cfb *)arg2;
+ (id)requiredAVAssetOptions;
+ (id)cullingListeners;
+ (void)removeCullingListener:(id)arg1;
+ (void)addCullingListener:(id)arg1;
+ (id)cullingListenersQueue;
+ (id)null;
+ (id)readOnlyDataWithoutDataDigestFromURL:(id)arg1 context:(id)arg2;
+ (id)readOnlyDataFromDataRep:(id)arg1 filename:(id)arg2 context:(id)arg3;
+ (id)readOnlyDataFromNSData:(id)arg1 filename:(id)arg2 context:(id)arg3;
+ (id)readOnlyDataFromURL:(id)arg1 context:(id)arg2;
+ (id)dataFromReadChannel:(id)arg1 filename:(id)arg2 context:(id)arg3;
+ (id)dataFromDataRep:(id)arg1 filename:(id)arg2 context:(id)arg3;
+ (id)dataFromNSData:(id)arg1 filename:(id)arg2 context:(id)arg3;
+ (id)dataFromURL:(id)arg1 useExternalReferenceIfAllowed:(_Bool)arg2 useFileCoordination:(_Bool)arg3 context:(id)arg4;
+ (id)dataFromURL:(id)arg1 useExternalReferenceIfAllowed:(_Bool)arg2 context:(id)arg3;
+ (id)dataFromURL:(id)arg1 context:(id)arg2;
+ (void)dataForAssetsLibraryURL:(id)arg1 context:(id)arg2 queue:(id)arg3 completion:(CDUnknownBlockType)arg4;
@property(readonly, nonatomic) long long identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
- (_Bool)isStorageInPackage:(id)arg1;
- (const array_019f9a10 *)digest;
- (id)preferredFilename;
- (void)setFilename:(id)arg1 storage:(id)arg2;
@property(retain, nonatomic) id <TSPDataStorage> storage;
- (id)initWithIdentifier:(long long)arg1 digest:(const array_019f9a10 *)arg2 filename:(id)arg3 storage:(id)arg4 manager:(id)arg5;
@property(readonly, nonatomic) unsigned long long encodedLength;
- (_Bool)isLengthLikelyToBeGreaterThan:(unsigned long long)arg1;
- (_Bool)writeToURL:(id)arg1 error:(id *)arg2;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)addDownloadObserver:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic) _Bool needsDownload;
- (void)performInputStreamReadWithAccessor:(CDUnknownBlockType)arg1;
- (void)performIOChannelReadWithAccessor:(CDUnknownBlockType)arg1;
- (id)copyWithContext:(id)arg1;
@property(readonly, nonatomic) NSString *uniqueName;
@property(readonly, nonatomic) TSPObjectContext *context;
@property(readonly, nonatomic) unsigned char packageIdentifier;
@property(readonly, nonatomic) NSString *packageLocator;
@property(readonly, nonatomic) NSString *documentResourceLocator;
@property(readonly, nonatomic) _Bool isExternalData;
@property(readonly, nonatomic) _Bool isApplicationData;
@property(readonly, nonatomic) _Bool isReadable;
@property(readonly, nonatomic) NSString *type;
@property(readonly, nonatomic) NSString *filename;
- (id)AVAssetWithOptions:(id)arg1;
- (id)AVAsset;
- (struct CGImage *)newCGImage;
- (struct CGImageSource *)newCGImageSource;
- (struct CGDataProvider *)newCGDataProvider;
- (id)NSData;
- (id)bookmarkData;
- (void)willCull;
- (void)dealloc;
- (id)UIImage;

@end

@interface TSPDataManager : NSObject
{
    TSPObjectContext *_context;
    NSObject<OS_dispatch_queue> *_datasQueue;
    long long _nextNewIdentifier;
    struct hash_map<const long long, TSPData *__weak, TSP::ObjectIdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, TSPData *__weak>>> _identifierToDataMap;
    struct hash_map<const std::__1::array<unsigned char, 20>, TSPData *__weak, TSP::DataDigestHash, TSP::DataDigestEqualTo, std::__1::allocator<std::__1::pair<const std::__1::array<unsigned char, 20>, TSPData *__weak>>> _digestToDataMap;
    NSObject<OS_dispatch_queue> *_temporaryDirectoryQueue;
    NSURL *_lastDocumentURL;
    NSURL *_temporaryDirectoryURL;
    NSURL *_temporaryUniqueDirectoryURL;
    TSUPathSet *_temporaryPathSet;
    _Bool _hasExternalReferences;
    NSObject<OS_dispatch_group> *_externalReferenceRemovalGroup;
}

+ (id)stringForDigest:(const array_019f9a10 *)arg1;
+ (void)readWithChannel:(id)arg1 handler:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic) __weak TSPObjectContext *context; // @synthesize context=_context;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)removeFileAtPath:(id)arg1;
- (id)checkForPersistenceWarningsWithPackageURL:(id)arg1;
- (void)addData:(id)arg1;
- (id)addNewDataForStorage:(id)arg1 digest:(const array_019f9a10 *)arg2 filename:(id)arg3;
- (id)dataWithStorage:(id)arg1 digest:(const array_019f9a10 *)arg2 filename:(id)arg3 skipDocumentResourcesLookup:(_Bool)arg4 accessorBlock:(CDUnknownBlockType)arg5;
- (void)dataForDigest:(const array_019f9a10 *)arg1 queue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)dataForDigest:(const array_019f9a10 *)arg1;
- (id)dataForDigestImpl:(const array_019f9a10 *)arg1 skipDocumentResourcesLookup:(_Bool)arg2 accessorBlock:(CDUnknownBlockType)arg3;
- (id)dataForDigestImpl:(const array_019f9a10 *)arg1 accessorBlock:(CDUnknownBlockType)arg2;
- (void)removeExternalReferenceForData:(id)arg1 storage:(id)arg2;
- (void)waitForRemoveExternalReferencesToComplete;
- (void)removeExternalReferences;
- (id)dataFromExternalReferenceURL:(id)arg1 useFileCoordination:(_Bool)arg2;
- (void)removeTemporaryDirectory;
- (void)setDocumentURL:(id)arg1;
- (id)dataWithTemporaryPath:(id)arg1 digest:(const array_019f9a10 *)arg2 filename:(id)arg3;
- (id)temporaryPathForFilename:(id)arg1;
- (_Bool)linkTemporaryPath:(id)arg1 fromURL:(id)arg2;
- (int)openTemporaryPath:(id)arg1;
- (id)dataForIdentifierImpl:(long long)arg1;
- (id)dataForIdentifier:(long long)arg1;
- (id)dataOrNilForIdentifier:(long long)arg1;
- (void)enumerateDatasUsingBlock:(CDUnknownBlockType)arg1;
- (id)copyData:(id)arg1;
- (id)documentResourceDataWithStorage:(id)arg1 digestString:(id)arg2 filename:(id)arg3;
- (id)dataFromNSData:(id)arg1 filename:(id)arg2;
- (void)findExistingDataForReadChannel:(id)arg1 dataURL:(id)arg2 readHandler:(CDUnknownBlockType)arg3 completion:(CDUnknownBlockType)arg4;
- (void)findExistingDataForReadChannel:(id)arg1 dataURL:(id)arg2 temporaryPath:(id)arg3 shouldWriteIfFound:(_Bool)arg4 completion:(CDUnknownBlockType)arg5;
- (id)dataForExistingData:(id)arg1 digest:(const array_019f9a10 *)arg2 filename:(id)arg3 temporaryPath:(id)arg4;
- (id)dataFromReadChannel:(id)arg1 filename:(id)arg2 temporaryPath:(id)arg3;
- (id)dataFromReadChannel:(id)arg1 filename:(id)arg2 linkURLOrNil:(id)arg3;
- (id)dataFromReadChannel:(id)arg1 filename:(id)arg2;
- (void)dataFromAssetsLibraryURL:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)dataFromAssetsLibraryURL:(id)arg1;
- (void)coordinateReadingNewFileURL:(id)arg1 byAccessor:(CDUnknownBlockType)arg2;
- (id)dataFromFileURL:(id)arg1 useFileCoordination:(_Bool)arg2;
- (id)dataFromURL:(id)arg1 useFileCoordination:(_Bool)arg2;
- (void)didCloseDocument;
- (void)dealloc;
- (id)initWithContext:(id)arg1;
- (id)createTemporaryDirectoryForPackageURL:(id)arg1;

@end

@interface TSPDataRepReadChannel : NSObject <TSUStreamReadChannel>
{
    SFUDataRepresentation *_representation;
    id <SFUInputStream> _inputStream;
    NSObject<OS_dispatch_queue> *_readQueue;
}

- (void).cxx_destruct;
- (void)close;
- (void)readWithQueue:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)dealloc;
- (id)initWithRepresentation:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSPDatabaseInputStream : NSObject <TSUStreamReadChannel, SFUInputStream>
{
    struct sqlite3_blob *_blob;
    int _offset;
    int _length;
}

- (id)closeLocalStream;
- (void)enableSystemCaching;
- (void)disableSystemCaching;
- (void)seekToOffset:(long long)arg1;
- (_Bool)canSeek;
- (unsigned long long)readToBuffer:(char *)arg1 size:(unsigned long long)arg2;
- (long long)offset;
- (void)readWithQueue:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)close;
- (void)dealloc;
- (id)initWithBlob:(struct sqlite3_blob *)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSPDocumentResourceCache : NSObject
{
    NSURL *_cacheURL;
    NSObject<OS_dispatch_queue> *_accessQueue;
    NSMutableDictionary *_entries;
    long long _maxCacheSizeInBytes;
}

+ (id)sharedCache;
+ (id)defaultCacheURL;
@property(nonatomic) long long maxCacheSizeInBytes; // @synthesize maxCacheSizeInBytes=_maxCacheSizeInBytes;
- (void).cxx_destruct;
- (void)reloadEntries;
- (void)enumerateEntriesFromCacheURLWithHandler:(CDUnknownBlockType)arg1;
- (void)shrinkCacheWithMaxCacheSizeInBytes:(long long)arg1;
- (void)clearCache;
- (void)shrinkCache;
- (void)endDocumentResourceAccessForDigestString:(id)arg1;
- (_Bool)beginDocumentResourceAccessForDigestString:(id)arg1;
- (_Bool)cacheDocumentResourceDigestString:(id)arg1 extension:(id)arg2 sourceURL:(id)arg3 fileSize:(long long)arg4 wasDownloaded:(_Bool)arg5;
- (id)URLForDocumentResourceDigestString:(id)arg1;
- (id)entryForDigestString:(id)arg1;
- (id)initWithCacheURL:(id)arg1;
- (id)init;

@end

@interface TSPDocumentResourceCacheEntry : NSObject
{
    _Bool _wasDownloaded;
    NSString *_digestString;
    long long _accessCount;
    NSURL *_URL;
    long long _fileSize;
    NSDate *_contentAccessDate;
}

@property(nonatomic) _Bool wasDownloaded; // @synthesize wasDownloaded=_wasDownloaded;
@property(retain, nonatomic) NSDate *contentAccessDate; // @synthesize contentAccessDate=_contentAccessDate;
@property(nonatomic) long long fileSize; // @synthesize fileSize=_fileSize;
@property(copy, nonatomic) NSURL *URL; // @synthesize URL=_URL;
@property(nonatomic) long long accessCount; // @synthesize accessCount=_accessCount;
@property(readonly, nonatomic) NSString *digestString; // @synthesize digestString=_digestString;
- (void).cxx_destruct;
- (id)initWithDigestString:(id)arg1;
- (id)init;

@end

@interface TSPSaveOperationState : NSObject
{
    NSMapTable *_newDataStorages;
    int _sampleID;
    unsigned long long _updateType;
}

@property(nonatomic) int sampleID; // @synthesize sampleID=_sampleID;
@property(readonly, nonatomic) unsigned long long updateType; // @synthesize updateType=_updateType;
- (void).cxx_destruct;
@property(readonly, nonatomic) _Bool shouldUpdate;
- (void)enumerateDatasAndStoragesUsingBlock:(CDUnknownBlockType)arg1;
- (_Bool)hasNewStorageForData:(id)arg1;
- (void)addNewStorage:(id)arg1 forData:(id)arg2;
- (id)initWithUpdateType:(unsigned long long)arg1;
- (id)init;

@end

@interface TSPDocumentSaveOperationState : TSPSaveOperationState
{
    _Bool _shouldLeavePendingEndSave;
    NSURL *_URL;
    NSURL *_relativeURLForExternalData;
    TSPDocumentProperties *_documentProperties;
    TSPObject *_documentObject;
    TSPObject *_supportObject;
    NSURL *_originalSupportURL;
    id <TSPPackage> _documentPackage;
    id <TSPPackage> _supportPackage;
    NSUUID *_documentUUID;
}

@property(nonatomic) _Bool shouldLeavePendingEndSave; // @synthesize shouldLeavePendingEndSave=_shouldLeavePendingEndSave;
@property(copy, nonatomic) NSUUID *documentUUID; // @synthesize documentUUID=_documentUUID;
@property(retain, nonatomic) id <TSPPackage> supportPackage; // @synthesize supportPackage=_supportPackage;
@property(retain, nonatomic) id <TSPPackage> documentPackage; // @synthesize documentPackage=_documentPackage;
@property(copy, nonatomic) NSURL *originalSupportURL; // @synthesize originalSupportURL=_originalSupportURL;
@property(retain, nonatomic) TSPObject *supportObject; // @synthesize supportObject=_supportObject;
@property(retain, nonatomic) TSPObject *documentObject; // @synthesize documentObject=_documentObject;
@property(retain, nonatomic) TSPDocumentProperties *documentProperties; // @synthesize documentProperties=_documentProperties;
@property(copy, nonatomic) NSURL *relativeURLForExternalData; // @synthesize relativeURLForExternalData=_relativeURLForExternalData;
@property(readonly, nonatomic) NSURL *URL; // @synthesize URL=_URL;
- (void).cxx_destruct;
- (id)initWithURL:(id)arg1 updateType:(unsigned long long)arg2;
- (id)init;

@end

@interface TSPFileDataStorage : NSObject <TSPDataStorage>
{
}

- (_Bool)isInPackage:(id)arg1;
@property(readonly, nonatomic) _Bool readOnly;
@property(readonly, nonatomic) unsigned long long encodedLength;
- (id)filenameForPreferredFilename:(id)arg1;
@property(readonly, nonatomic) unsigned char packageIdentifier;
@property(readonly, nonatomic) NSString *packageLocator;
@property(readonly, nonatomic) NSString *documentResourceLocator;
- (id)AVAssetWithOptions:(id)arg1 usingResourceLoaderWithContentTypeUTI:(id)arg2;
- (id)AVAssetWithOptions:(id)arg1 contentTypeUTI:(id)arg2;
- (id)NSDataWithOptions:(unsigned long long)arg1;
- (struct CGImageSource *)newCGImageSource;
- (struct CGDataProvider *)newCGDataProvider;
- (id)bookmarkDataWithOptions:(unsigned long long)arg1;
- (void)performIOChannelReadWithAccessor:(CDUnknownBlockType)arg1;
- (void)performReadWithAccessor:(CDUnknownBlockType)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, nonatomic) SFUCryptoKey *decryptionKey;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) _Bool needsDownload;
@property(readonly) Class superclass;

@end

@interface TSPExternalReferenceDataStorage : TSPFileDataStorage
{
    NSURL *_URL;
    NSData *_bookmarkData;
    TSPObjectContext *_context;
}

- (void).cxx_destruct;
@property(readonly, nonatomic, getter=isReadable) _Bool readable;
- (void)performReadWithAccessor:(CDUnknownBlockType)arg1;
- (id)bookmarkDataForArchiver:(id)arg1;
- (id)storageForDataCopyFromOtherContext;
- (id)initWithBookmarkData:(id)arg1 context:(id)arg2;
- (id)initWithURL:(id)arg1;

@end

@interface TSPFileManager : NSObject
{
}

+ (_Bool)linkOrCopyURL:(id)arg1 decryptionKey:(id)arg2 toURL:(id)arg3 encryptionKey:(id)arg4;
+ (_Bool)linkOrCopyURL:(id)arg1 toURL:(id)arg2;
+ (_Bool)linkFileAtPath:(id)arg1 toPath:(id)arg2;
+ (_Bool)linkFileAtURL:(id)arg1 toURL:(id)arg2;

@end

@interface TSPIOHandlerWriteChannelAdapter : NSObject <TSPComponentWriteChannel>
{
    NSObject<OS_dispatch_queue> *_queue;
    CDUnknownBlockType _handler;
    NSError *_error;
}

- (void).cxx_destruct;
- (void)close;
- (void)setError:(id)arg1;
- (void)writeData:(id)arg1;
- (id)initWithQueue:(id)arg1 handler:(CDUnknownBlockType)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSPLazyReference : NSObject <NSCopying>
{
    TSPObject *_strongObject;
    TSPObject *_weakObject;
    _Bool _isWeak;
    _Bool _allowUnknownObject;
    id <TSPLazyReferenceDelegate> _delegate;
    long long _identifier;
    TSPComponent *_component;
}

+ (id)referenceForObject:(id)arg1;
@property(nonatomic) _Bool isWeak; // @synthesize isWeak=_isWeak;
@property(nonatomic) __weak TSPComponent *component; // @synthesize component=_component;
@property(readonly, nonatomic) long long identifier; // @synthesize identifier=_identifier;
@property(nonatomic) __weak id <TSPLazyReferenceDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (id)debugDescription;
- (void)resetIdentifier;
- (_Bool)discardStrongObjectIfPossible;
@property(retain, nonatomic) TSPObject *strongObject;
@property(readonly, nonatomic) TSPObject *weakObject;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)referencesObject:(id)arg1;
- (_Bool)isEqualToLazyReference:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
@property(readonly, nonatomic) id objectIfLoaded;
@property(readonly, nonatomic) id object;
- (id)initWithObject:(id)arg1;
- (id)initWithDelegate:(id)arg1 identifier:(long long)arg2 isWeak:(_Bool)arg3 allowUnknownObject:(_Bool)arg4;
- (id)init;

@end

@interface TSPLazyReferenceArray : NSMutableArray
{
    NSMutableArray *_references;
    unsigned long long _mutations;
}

@property(readonly, nonatomic) NSArray *references; // @synthesize references=_references;
- (void).cxx_destruct;
- (void)replaceObjectsInRange:(struct _NSRange)arg1 withObjectsFromArray:(id)arg2 range:(struct _NSRange)arg3;
- (void)replaceObjectsInRange:(struct _NSRange)arg1 withObjectsFromArray:(id)arg2;
- (void)replaceObjectAtIndex:(unsigned long long)arg1 withObject:(id)arg2;
- (void)removeObjectsInRange:(struct _NSRange)arg1;
- (void)removeObjectAtIndex:(unsigned long long)arg1;
- (void)removeLastObject;
- (void)insertObject:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)addObjectsFromArray:(id)arg1;
- (void)addReference:(id)arg1;
- (void)addObject:(id)arg1;
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
- (id)subarrayWithRange:(struct _NSRange)arg1;
- (id)objectsAtIndexes:(id)arg1;
- (id)referenceAtIndex:(unsigned long long)arg1;
- (id)objectAtIndex:(unsigned long long)arg1;
- (unsigned long long)count;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithArray:(id)arg1;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)init;

@end

@interface TSPObjectContainer : TSPObject
{
    unsigned char _packageIdentifier;
    NSArray *_childObjects;
}

+ (long long)objectIdentifierForPackageIdentifier:(unsigned char)arg1;
- (void).cxx_destruct;
- (void)prepareForComponentWriteWithDelayedObjects:(id)arg1;
- (unsigned int)delayedArchivingPriority;
- (_Bool)shouldDelayArchiving;
- (id)packageLocator;
- (long long)tsp_identifier;
- (id)initWithContext:(id)arg1 packageIdentifier:(unsigned char)arg2;
- (id)initWithContext:(id)arg1;

@end

@interface TSPObjectContext : NSObject <TSPFileCoordinatorDelegate, TSPObjectDelegate, TSPLazyReferenceDelegate, TSPSupportDirectoryDelegate, TSPDocumentResourceDownloader, TSPPassphraseConsumer>
{
    long long _lastObjectIdentifier;
    long long _modifyObjectToken;
    int _modifyObjectCount;
    unsigned int _mode;
    SFUCryptoKey *_decryptionKey;
    NSURL *_documentURL;
    NSURL *_supportURL;
    NSMapTable *_objects;
    NSObject<OS_dispatch_queue> *_objectsQueue;
    NSObject<OS_dispatch_queue> *_writeQueue;
    NSRecursiveLock *_readLock;
    NSObject<OS_dispatch_queue> *_documentStateQueue;
    NSObject<OS_dispatch_queue> *_loadObserversQueue;
    NSObject<OS_dispatch_queue> *_runLoadObserversQueue;
    NSObject<OS_dispatch_queue> *_documentResourceDataProviderQueue;
    _Bool _isWaitingForEndSave;
    NSObject<OS_dispatch_group> *_pendingEndSaveGroup;
    NSObject<OS_dispatch_group> *_outstandingReadsGroup;
    NSObject<OS_dispatch_queue> *_temporaryDirectoryQueue;
    TSUTemporaryDirectory *_temporaryDirectory;
    struct hash_map<const long long, NSMutableArray *, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, NSMutableArray *>>> _loadObservers;
    _Bool _isDocumentModified;
    _Bool _isSupportModified;
    _Bool _isPasswordProtected;
    _Bool _documentHasCurrentFileFormatVersion;
    NSString *_documentPasswordHint;
    TSPObject *_documentObject;
    id <TSPObjectContextDelegate> _delegate;
    NSUUID *_documentUUID;
    NSUUID *_versionUUID;
    TSPObject *_supportObject;
    TSPDataManager *_dataManager;
    TSPObjectContainer *_documentObjectContainer;
    TSPObjectContainer *_supportObjectContainer;
    NSData *_passwordVerifier;
}

+ (void)waitForPendingEndSaveGroup:(id)arg1;
@property(retain, nonatomic) NSData *passwordVerifier; // @synthesize passwordVerifier=_passwordVerifier;
@property(readonly, nonatomic) _Bool documentHasCurrentFileFormatVersion; // @synthesize documentHasCurrentFileFormatVersion=_documentHasCurrentFileFormatVersion;
@property(retain, nonatomic) TSPObjectContainer *supportObjectContainer; // @synthesize supportObjectContainer=_supportObjectContainer;
@property(retain, nonatomic) TSPObjectContainer *documentObjectContainer; // @synthesize documentObjectContainer=_documentObjectContainer;
@property(readonly, nonatomic) TSPDataManager *dataManager; // @synthesize dataManager=_dataManager;
@property(retain, nonatomic) TSPObject *supportObject; // @synthesize supportObject=_supportObject;
@property(readonly, nonatomic) NSUUID *versionUUID; // @synthesize versionUUID=_versionUUID;
@property(readonly, nonatomic) NSUUID *documentUUID; // @synthesize documentUUID=_documentUUID;
@property(nonatomic) __weak id <TSPObjectContextDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) TSPObject *documentObject; // @synthesize documentObject=_documentObject;
@property(copy, nonatomic) NSString *documentPasswordHint; // @synthesize documentPasswordHint=_documentPasswordHint;
@property(nonatomic) _Bool isPasswordProtected; // @synthesize isPasswordProtected=_isPasswordProtected;
@property(nonatomic) _Bool isSupportModified; // @synthesize isSupportModified=_isSupportModified;
@property(nonatomic) _Bool isDocumentModified; // @synthesize isDocumentModified=_isDocumentModified;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)addLoadObserver:(id)arg1 action:(SEL)arg2 forLazyReference:(id)arg3;
- (void)addLoadObserver:(id)arg1 action:(SEL)arg2 forObjectIdentifier:(long long)arg3 objectOrNil:(id)arg4;
- (void)runObjectNotificationsInQueue:(id)arg1;
- (id)addLoadedObjectsAndEnqueueNotifications:(id)arg1;
- (long long)updateModifyObjectToken;
- (long long)incrementLastObjectIdentifier:(long long)arg1;
@property(nonatomic) long long lastObjectIdentifier;
- (long long)newObjectIdentifier;
- (void)didReadDocumentObject:(id)arg1;
- (void)setDocumentObject:(id)arg1;
@property(readonly, nonatomic) _Bool ignoreDocumentResourcesWhileReading;
@property(readonly, nonatomic) _Bool ignoreVersionCheckingWhileReading;
@property(readonly, nonatomic) _Bool ignoreUnknownContentWhileReading;
@property(readonly, nonatomic) _Bool isDocumentSupportTemporary;
@property(readonly, nonatomic) _Bool ignoreDocumentSupport;
- (id)dataOrNilForIdentifier:(long long)arg1;
- (id)supportDirectoryURL;
- (long long)modifyObjectTokenForNewObject;
@property(readonly, nonatomic) TSPObjectContext *context;
- (void)waitForSaveToFinishIfNeeded;
@property(readonly, nonatomic) SFUCryptoKey *decryptionKey;
@property(readonly, nonatomic) _Bool isEstimatedDownloadSizePrecise;
@property(readonly, nonatomic) long long estimatedDownloadSize;
@property(readonly, nonatomic) _Bool needsDownload;
- (_Bool)areExternalReferencesToDataAllowedAtURL:(id)arg1;
@property(readonly, nonatomic) _Bool areNewExternalReferencesToDataAllowed;
- (_Bool)areExternalReferencesSupported;
- (void)resumeLoadingModifiedFlushedComponents;
- (void)suspendLoadingModifiedFlushedComponentsAndWait;
- (void)didMoveSupportToURL:(id)arg1;
- (void)didMoveToURL:(id)arg1;
@property(readonly, nonatomic) NSURL *documentURL;
- (void)endIgnoringCachedObjectEviction;
- (void)beginIgnoringCachedObjectEviction;
- (void)checkforDataWarningsWithPackageURL:(id)arg1;
- (id)temporaryDirectory;
- (void)performReadOperationOnKnownObjects:(CDUnknownBlockType)arg1;
- (id)objectForIdentifier:(long long)arg1;
- (void)endAssertOnModify;
- (void)beginAssertOnModify;
- (void)performReadOperation:(CDUnknownBlockType)arg1;
- (void)endWriteOperation;
- (void)beginWriteOperation;
- (void)close;
- (void)dealloc;
- (id)initWithDelegate:(id)arg1;
- (id)init;
- (id)documentRoot;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) NSData *keychainGenericItem;
@property(readonly, nonatomic) NSString *passphraseHint;
@property(readonly, nonatomic) NSString *service;
@property(readonly) Class superclass;

@end

@interface TSPObjectContextObserver : NSObject
{
    id _target;
    SEL _action;
}

@property(readonly, nonatomic) SEL action; // @synthesize action=_action;
@property(readonly, nonatomic) __weak id target; // @synthesize target=_target;
- (void).cxx_destruct;
- (id)initWithTarget:(id)arg1 action:(SEL)arg2;
- (id)init;

@end

@interface TSPReadOnlyFileDataStorage : TSPFileDataStorage
{
    NSURL *_URL;
}

- (void).cxx_destruct;
- (_Bool)writeToBundleWriter:(id)arg1 preferredFilename:(id)arg2 filename:(id *)arg3 didCopyDataToBundle:(_Bool *)arg4;
- (_Bool)readOnly;
- (void)performReadWithAccessor:(CDUnknownBlockType)arg1;
- (id)initWithURL:(id)arg1;

@end

@interface TSPReadOnlyMemoryDataStorage : NSObject <TSPDataStorage>
{
    NSData *_NSData;
}

- (void).cxx_destruct;
- (_Bool)isInPackage:(id)arg1;
@property(readonly, nonatomic) _Bool readOnly;
- (void)performIOChannelReadWithAccessor:(CDUnknownBlockType)arg1;
- (void)performReadWithAccessor:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long encodedLength;
- (id)filenameForPreferredFilename:(id)arg1;
@property(readonly, nonatomic) unsigned char packageIdentifier;
@property(readonly, nonatomic) NSString *packageLocator;
@property(readonly, nonatomic) NSString *documentResourceLocator;
- (id)AVAssetWithOptions:(id)arg1 usingResourceLoaderWithContentTypeUTI:(id)arg2;
- (id)AVAssetWithOptions:(id)arg1 contentTypeUTI:(id)arg2;
- (id)NSDataWithOptions:(unsigned long long)arg1;
- (struct CGImageSource *)newCGImageSource;
- (struct CGDataProvider *)newCGDataProvider;
- (id)bookmarkDataWithOptions:(unsigned long long)arg1;
- (id)initWithNSData:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, nonatomic) SFUCryptoKey *decryptionKey;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) _Bool needsDownload;
@property(readonly) Class superclass;

@end

@interface TSPReadOnlyProvidedDataStorage : NSObject <TSPDataStorage>
{
    SFUDataRepresentation *_dataRep;
}

- (void).cxx_destruct;
- (_Bool)writeToBundleWriter:(id)arg1 preferredFilename:(id)arg2 filename:(id *)arg3 didCopyDataToBundle:(_Bool *)arg4;
- (id)AVAssetWithOptions:(id)arg1 usingResourceLoaderWithContentTypeUTI:(id)arg2;
- (id)AVAssetWithOptions:(id)arg1 contentTypeUTI:(id)arg2;
@property(readonly, nonatomic) unsigned char packageIdentifier;
@property(readonly, nonatomic) NSString *packageLocator;
- (_Bool)isInPackage:(id)arg1;
@property(readonly, nonatomic) _Bool readOnly;
- (void)performIOChannelReadWithAccessor:(CDUnknownBlockType)arg1;
- (void)performReadWithAccessor:(CDUnknownBlockType)arg1;
- (unsigned long long)length;
- (id)applicationDataLocator;
- (id)AVAssetWithOptions:(id)arg1;
- (id)NSDataWithOptions:(unsigned long long)arg1;
- (struct CGImageSource *)newCGImageSource;
@property(readonly, nonatomic) unsigned long long encodedLength;
- (struct CGDataProvider *)newCGDataProvider;
- (id)bookmarkDataWithOptions:(unsigned long long)arg1;
- (id)filenameForPreferredFilename:(id)arg1;
@property(readonly, nonatomic) NSString *documentResourceLocator;
- (id)initWithDataRepresentation:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, nonatomic) SFUCryptoKey *decryptionKey;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) _Bool needsDownload;
@property(readonly) Class superclass;

@end

@interface TSPTemporaryDataStorage : TSPFileDataStorage
{
    NSURL *_URL;
    SFUCryptoKey *_decryptionKey;
    _Bool _isMissingData;
}

@property(nonatomic) _Bool isMissingData; // @synthesize isMissingData=_isMissingData;
- (void).cxx_destruct;
- (void)performIOChannelReadWithAccessor:(CDUnknownBlockType)arg1;
- (void)performReadWithAccessor:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (id)initWithURL:(id)arg1;
- (id)initWithURL:(id)arg1 decryptionKey:(id)arg2;

@end

@interface TSPTemporaryObjectContextDelegate : NSObject <TSPFileCoordinatorDelegate, TSPObjectContextDelegate>
{
    NSMutableSet *_persistenceWarnings;
    _Bool _ignoreDocumentSupport;
    NSURL *_packageURL;
    NSError *_error;
}

@property(nonatomic) _Bool ignoreDocumentSupport; // @synthesize ignoreDocumentSupport=_ignoreDocumentSupport;
@property(readonly, nonatomic) NSSet *persistenceWarnings; // @synthesize persistenceWarnings=_persistenceWarnings;
@property(readonly, nonatomic) NSError *error; // @synthesize error=_error;
@property(copy, nonatomic) NSURL *packageURL; // @synthesize packageURL=_packageURL;
- (void).cxx_destruct;
- (id)persistenceWarningsForData:(id)arg1 isReadable:(_Bool)arg2 isExternal:(_Bool)arg3;
- (void)performReadUsingAccessor:(CDUnknownBlockType)arg1;
- (void)addPersistenceWarnings:(id)arg1;
- (void)presentPersistenceError:(id)arg1;
- (id)initWithPackageURL:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, nonatomic) _Bool areNewExternalReferencesToDataAllowed;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic) id <NSFilePresenter> filePresenter;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) _Bool isDocumentSupportTemporary;
@property(readonly) Class superclass;

@end

@interface TSPUnknownObject : TSPObject
{
    NSString *_packageLocator;
    NSObject<OS_dispatch_data> *_serializedData;
}

@property(readonly, nonatomic) NSObject<OS_dispatch_data> *serializedData; // @synthesize serializedData=_serializedData;
- (void).cxx_destruct;
- (id)packageLocator;
- (void)willModifyForUpgrade;
- (void)willModify;
- (id)initWithContext:(id)arg1;

@end

@interface TSSPropertySet : NSObject <NSCopying, NSMutableCopying>
{
    id mIndexSet;
}

+ (id)propertySet;
+ (id)propertySetWithProperties:(int)arg1;
+ (id)propertySetWithProperty:(int)arg1;
+ (id)p_mutableIndexSetWithFirstProperty:(int)arg1 argumentList:(struct __va_list_tag [1])arg2;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)propertyStrings;
- (id)propertySetByIntersectingWithPropertySet:(id)arg1;
- (id)propertySetByRemovingPropertiesFromSet:(id)arg1;
- (id)propertySetByRemovingProperties:(int)arg1;
- (id)propertySetByRemovingProperty:(int)arg1;
- (id)propertySetByAddingProperty:(int)arg1;
- (id)propertySetByAddingPropertiesFromSet:(id)arg1;
- (id)propertySetByAddingProperties:(int)arg1;
- (_Bool)intersectsProperties:(id)arg1;
- (void)enumeratePropertiesUsingBlock:(CDUnknownBlockType)arg1;
- (_Bool)containsProperties:(id)arg1;
- (_Bool)containsProperty:(int)arg1;
- (unsigned long long)count;
- (id)initWithProperties:(int)arg1;
- (id)initWithPropertySet:(id)arg1;
- (id)initWithFirstProperty:(int)arg1 argumentList:(struct __va_list_tag [1])arg2;
- (void)dealloc;
- (id)init;
- (id)initWithIndexSet:(id)arg1;

@end

@interface TSSMutablePropertySet : TSSPropertySet
{
}

- (void)intersectPropertySet:(id)arg1;
- (void)removeProperties:(id)arg1;
- (void)removeProperty:(int)arg1;
- (void)addProperties:(id)arg1;
- (void)addProperty:(int)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithPropertySet:(id)arg1;
- (id)initWithFirstProperty:(int)arg1 argumentList:(struct __va_list_tag [1])arg2;
- (id)init;

@end

@interface TSSPropertyMap : NSObject <NSCopying, TSSPropertySource>
{
    struct TSSPropertyStore *mStore;
}

+ (id)propertyMapWithPropertiesAndValues:(int)arg1;
+ (id)propertyMapWithPropertyMap:(id)arg1;
+ (id)propertyMap;
- (id)propertyMapWithProperties:(id)arg1;
- (id)propertyMapByRemovingValuesForProperties:(id)arg1;
- (id)propertyMapByRemovingValuesFromPropertyMap:(id)arg1;
- (id)propertyMapByAddingValuesFromPropertyMap:(id)arg1;
- (id)diffPropertyNames:(id)arg1;
- (id)diffOnlyDifferences:(id)arg1;
- (id)diff:(id)arg1;
- (void)minusPropertyMap:(id)arg1;
- (void)filterWithProperties:(id)arg1;
- (void)removeAllPropertyValues;
- (void)removeValuesForProperties:(id)arg1;
- (void)removeValueForProperty:(int)arg1;
- (_Bool)containsAnyPropertyInProperties:(id)arg1;
- (_Bool)definesProperty:(int)arg1;
- (_Bool)containsProperty:(int)arg1;
- (void)removeValuesFromPropertyMap:(id)arg1;
- (void)addValuesFromPropertyMap:(id)arg1;
- (void)setBoolValue:(_Bool)arg1 forProperty:(int)arg2;
- (void)setCGFloatValue:(double)arg1 forProperty:(int)arg2;
- (void)setDoubleValue:(double)arg1 forProperty:(int)arg2;
- (void)setFloatValue:(float)arg1 forProperty:(int)arg2;
- (void)setIntValue:(int)arg1 forProperty:(int)arg2;
- (void)setObject:(id)arg1 forProperty:(int)arg2;
- (void)setBoxedObject:(id)arg1 forProperty:(int)arg2;
- (double)CGFloatValueForProperty:(int)arg1;
- (double)doubleValueForProperty:(int)arg1;
- (float)floatValueForProperty:(int)arg1;
- (int)intValueForProperty:(int)arg1;
- (id)objectForProperty:(int)arg1;
- (id)boxedObjectForProperty:(int)arg1;
@property(readonly, copy) NSString *description;
- (void)enumeratePropertiesAndObjectsUsingBlock:(CDUnknownBlockType)arg1;
- (id)old_description;
- (void)p_getAllKeys:(int *)arg1;
- (id)allProperties;
- (id)allKeys;
- (unsigned long long)count;
@property(readonly) unsigned long long hash;
- (_Bool)isEqual:(id)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithFirstKey:(int)arg1 andArgumentList:(struct __va_list_tag [1])arg2;
- (id)initWithPropertiesAndValues:(int)arg1;
- (id)initWithPropertyMap:(id)arg1;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)init;
- (void)pSetArrayOfFloats:(double [9])arg1 forProperty:(int)arg2;
- (void)pSetArrayOfObjects:(id [9])arg1 forProperty:(int)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

@interface TSSPropertySetChangeDetails : NSObject
{
    TSSMutablePropertySet *mChangedProperties;
}

- (id)changedProperties;
- (void)addChangedProperties:(id)arg1;
- (void)addChangedProperty:(int)arg1;
- (void)dealloc;
- (id)init;
- (id)initWithChangedProperties:(id)arg1;

@end

@interface TSSStylePromise : NSObject <TSSStyleObject>
{
    TSSStyle *_sourceStyle;
    NSMutableArray *_promisees;
}

+ (id)promiseForStyle:(id)arg1;
- (void)fulfillWithStyle:(id)arg1;
- (void)addPromisee:(id)arg1;
- (void)dealloc;
- (id)initWithStyle:(id)arg1;

@end

@interface TSSStylesheet : TSPObject <TSKTransformableObject>
{
    TSSStylesheet *mParent;
    TSSStylesheet *mChild;
    TSUMutableRetainedPointerSet *mStyles;
    NSMutableDictionary *mIdentifierToStyleMap;
    TSURetainedPointerKeyDictionary *mParentToChildrenStyleMap;
    _Bool mIsLocked;
    _Bool mCanCullStyles;
}

@property(readonly, nonatomic) TSSStylesheet *child; // @synthesize child=mChild;
@property(readonly, nonatomic) TSSStylesheet *parent; // @synthesize parent=mParent;
- (id)unusedStyleIdentifierWithPackageString:(id)arg1 styleDescriptor:(id)arg2 contentTag:(id)arg3;
- (id)pVariationOfStyle:(id)arg1 propertyMap:(id)arg2 matchStyles:(id)arg3 context:(id)arg4;
- (void)p_removeStyleFromParentChildren:(id)arg1;
- (void)p_addStyleToParentChildren:(id)arg1;
- (void)p_setParent:(id)arg1 ofStyle:(id)arg2;
- (void)p_setIdentifier:(id)arg1 ofStyle:(id)arg2;
- (void)p_removeStyle:(id)arg1;
- (void)p_addStyle:(id)arg1 withParent:(id)arg2 identifier:(id)arg3;
- (void)unlockStylesheetForDurationOfBlock:(CDUnknownBlockType)arg1;
- (void)didLoadChildObjectFromDocumentSupport:(id)arg1;
- (id)variationOfStyle:(id)arg1 exactPropertyMap:(id)arg2;
- (id)variationOfStyle:(id)arg1 propertyMap:(id)arg2 matchStyles:(id)arg3 context:(id)arg4;
- (id)variationOfStyle:(id)arg1 propertyMap:(id)arg2 context:(id)arg3;
- (id)variationOfStyleMatchingStyle:(id)arg1 withNewParentStyle:(id)arg2;
- (id)variationOfStyle:(id)arg1 propertyMap:(id)arg2;
- (id)firstRootlessStyleOfClass:(Class)arg1 withOverridePropertyMap:(id)arg2;
- (id)namedStylesOfClass:(Class)arg1;
- (id)stylesPassingTest:(CDUnknownBlockType)arg1;
- (void)enumerateCascadedStylesUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateStylesUsingBlock:(CDUnknownBlockType)arg1;
- (id)identifiedStylesOfClass:(Class)arg1;
- (id)identifiedStyles;
- (id)stylesOfClass:(Class)arg1;
- (id)stylesWithName:(id)arg1 ofClass:(Class)arg2;
- (id)stylesWithName:(id)arg1;
- (id)cascadedFirstStyleWithName:(id)arg1;
- (id)firstStyleWithName:(id)arg1;
- (id)childrenOfStyle:(id)arg1;
- (void)setParent:(id)arg1 ofStyle:(id)arg2;
- (void)setIdentifier:(id)arg1 ofStyle:(id)arg2;
- (id)cascadedStyleWithIdentifier:(id)arg1 componentMask:(int)arg2;
- (id)styleWithIdentifier:(id)arg1 componentMask:(int)arg2;
- (id)cascadedStyleWithIdentifier:(id)arg1;
- (id)styleWithIdentifier:(id)arg1;
- (_Bool)cascadedContainsStyle:(id)arg1;
- (_Bool)containsStyle:(id)arg1;
- (void)removeStyle:(id)arg1;
- (void)addStyle:(id)arg1 withParent:(id)arg2 identifier:(id)arg3;
- (void)addStyle:(id)arg1 withParent:(id)arg2;
- (void)addStyle:(id)arg1 withIdentifier:(id)arg2;
- (void)addStyle:(id)arg1;
- (unsigned long long)descendantCount;
- (id)rootAncestor;
- (_Bool)isAncestorOf:(id)arg1;
- (_Bool)isDescendentOf:(id)arg1;
- (_Bool)isParentOf:(id)arg1;
- (_Bool)isChildOf:(id)arg1;
- (void)setParent:(id)arg1 withParentStyleMap:(struct __CFDictionary *)arg2;
- (void)setParent:(id)arg1;
@property(readonly, nonatomic) NSSet *styles;
@property(nonatomic) _Bool canCullStyles;
@property(nonatomic) _Bool isLocked;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)initWithContext:(id)arg1;
- (id)initWithContext:(id)arg1 canCullStyles:(_Bool)arg2;
- (id)headerAndFooterStyle;
- (id)defaultColumnStyle;
- (id)defaultParagraphStyle;
- (id)defaultListStyle;
- (id)hyperlinkStyle;
- (id)defaultCharacterStyle;
- (id)variationOfCharacterStyle:(id)arg1 paragraphStyle:(id)arg2 propertyMap:(id)arg3;
- (id)p_variationMapForVaryingCharacterStyle:(id)arg1 overParagraphStyle:(id)arg2 withPropertyMap:(id)arg3;
- (id)_defaultStyleOfClass:(Class)arg1 withIdentifier:(id)arg2 wasCreated:(_Bool *)arg3 usingBlock:(CDUnknownBlockType)arg4;
- (id)_defaultColumnStyleWasCreated:(_Bool *)arg1;
- (id)_defaultListStyleWasCreated:(_Bool *)arg1;
- (id)_defaultParagraphStyleWasCreated:(_Bool *)arg1;
- (id)_hyperlinkStyleWasCreated:(_Bool *)arg1;
- (id)_defaultCharacterStyleWasCreated:(_Bool *)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSSTheme : TSPObject <TSKModel>
{
    NSString *mThemeIdentifier;
    TSSStylesheet *mStylesheet;
    NSMutableDictionary *mPresetsByKind;
}

+ (id)presetBootstrapOrder;
+ (void)registerPresetSourceClass:(Class)arg1;
+ (void)registerPresetSourceClasses;
+ (id)presetSources;
+ (id)themeWithContext:(id)arg1 alternate:(int)arg2;
@property(readonly, nonatomic) TSSStylesheet *stylesheet; // @synthesize stylesheet=mStylesheet;
- (void)checkThemeStylesheetConsistency;
- (void)bootstrapThemeAlternate:(int)arg1;
- (id)p_identifierForBootstrapTheme:(int)arg1;
- (id)modelPathComponentForChild:(id)arg1;
- (id)childEnumerator;
- (_Bool)containsCGColor:(struct CGColor *)arg1;
- (id)colors;
- (unsigned long long)indexOfPreset:(id)arg1;
- (id)presetOfKind:(id)arg1 index:(unsigned long long)arg2;
- (void)movePresetOfKind:(id)arg1 fromIndex:(unsigned long long)arg2 toIndex:(unsigned long long)arg3;
- (void)removePreset:(id)arg1;
- (void)insertPreset:(id)arg1 ofKind:(id)arg2 atIndex:(unsigned long long)arg3;
- (void)addPreset:(id)arg1 ofKind:(id)arg2;
- (void)setPresets:(id)arg1 ofKind:(id)arg2;
- (void)disablePresetValidation;
- (void)enablePresetValidation;
- (_Bool)hasPresetsOfKind:(id)arg1;
- (id)presetsOfKind:(id)arg1;
@property(nonatomic) _Bool isLocked;
@property(retain, nonatomic) NSString *themeIdentifier;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)initWithContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSSThemeAssetMapper : NSObject
{
    TSSTheme *mFromTheme;
    TSSTheme *mToTheme;
    TSUCustomCallBackDictionary *mAssetMap;
}

@property(readonly, nonatomic) TSSTheme *toTheme; // @synthesize toTheme=mToTheme;
@property(readonly, nonatomic) TSSTheme *fromTheme; // @synthesize fromTheme=mFromTheme;
- (void)clearMappingCache;
- (void)cacheAssetMappings:(id)arg1;
- (void)cacheMappingFromAsset:(id)arg1 toAsset:(id)arg2;
- (id)mapStyle:(id)arg1;
- (id)mapPresetsWithKindFromPreset:(id)arg1;
- (id)mappedAssetForAsset:(id)arg1;
- (id)init;
- (id)initWithFromTheme:(id)arg1 toTheme:(id)arg2;
- (void)dealloc;
- (_Bool)p_hasCachedMappingsForPresetsOfKind:(id)arg1;

@end

@interface TSTAnimation : NSObject <NSCopying>
{
    TSTLayout *mLayout;
    int mKind;
    CDStruct_5f1f7aa9 *mCellRanges;
    unsigned long long mCellRangeCount;
    unsigned long long mStageCount;
    unsigned long long mStage;
    _Bool mFinal;
    _Bool mByColumn;
    _Bool mByRow;
    _Bool mByCell;
    _Bool mByContent;
    _Bool mByCellRange;
    _Bool mByMissingCellRange;
    _Bool mReverse;
    _Bool mShowsTableChrome;
    _Bool mShowsOverlayLayers;
    _Bool mExpandBackgroundFill;
    _Bool mDrawsBlackAndWhite;
}

+ (_Bool)deliveryStyleSupportedForExport:(unsigned long long)arg1;
+ (unsigned long long)textureDeliveryStyleFromDeliveryString:(id)arg1;
+ (unsigned long long)stageCountForTextureDeliveryStyle:(unsigned long long)arg1 andTable:(id)arg2;
+ (id)textureDeliveryStylesLocalized:(_Bool)arg1;
+ (id)newAnimationWithLayout:(id)arg1 andCellRange:(CDStruct_5f1f7aa9)arg2;
+ (id)newAnimationWithLayout:(id)arg1 andDeliveryStyle:(unsigned long long)arg2;
@property _Bool drawsBlackAndWhite; // @synthesize drawsBlackAndWhite=mDrawsBlackAndWhite;
@property _Bool expandBackgroundFill; // @synthesize expandBackgroundFill=mExpandBackgroundFill;
@property _Bool showsOverlayLayers; // @synthesize showsOverlayLayers=mShowsOverlayLayers;
@property _Bool showsTableChrome; // @synthesize showsTableChrome=mShowsTableChrome;
@property(readonly) _Bool final; // @synthesize final=mFinal;
@property(readonly) unsigned long long stage; // @synthesize stage=mStage;
@property(readonly) unsigned long long stageCount; // @synthesize stageCount=mStageCount;
@property(readonly) _Bool drawStrokes;
@property(readonly) _Bool clipStrokes;
@property(readonly) _Bool drawCellContent;
@property(readonly) _Bool drawCellBackground;
@property(readonly) _Bool drawTableBackground;
@property(readonly) _Bool drawTableName;
@property(readonly) _Bool enabled;
- (void)clearCellRanges;
- (void)addCellRange:(CDStruct_5f1f7aa9)arg1;
@property(readonly) unsigned long long cellRangeCount;
- (CDStruct_5f1f7aa9)cellRangeAtIndex:(unsigned long long)arg1;
- (void)setStage:(unsigned long long)arg1 andFinal:(_Bool)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;

@end

@interface TSTArchivedLayoutHint : TSPObject <TSDArchivedHint>
{
    TSTLayoutHint *mHint;
}

@property(retain, nonatomic) TSTLayoutHint *hint; // @synthesize hint=mHint;
- (id)initWithContext:(id)arg1 hint:(id)arg2;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSTBundleLookupClass : NSObject
{
}

@end

@interface TSTCell : NSObject <NSCopying>
{
    struct {
        unsigned int mUnused:8;
        unsigned int mValueType:8;
        unsigned int mCellFlags:16;
        union {
            double mDouble;
            struct {
                unsigned int mID;
                NSString *mString;
            } mString;
            NSDate *mDate;
        } mValue;
        unsigned int mCellStyleID;
        TSTCellStyle *mCellStyle;
        unsigned int mTextStyleID;
        TSWPParagraphStyle *mTextStyle;
        unsigned int mRichTextPayloadID;
        TSTRichTextPayload *mRichTextPayload;
        unsigned int mCommentStorageID;
        TSDCommentStorage *mCommentStorage;
        struct {
            unsigned int mExplicitFormatFlags:16;
            unsigned int mCurrentCellFormatID;
            CDStruct_95e644ef mCurrentCellFormat;
            unsigned int mNumberFormatID;
            TSUFormatReferenceObject *mNumberFormatRef;
            unsigned int mCurrencyFormatID;
            TSUFormatReferenceObject *mCurrencyFormatRef;
            unsigned int mDurationFormatID;
            TSUFormatReferenceObject *mDurationFormatRef;
            unsigned int mDateFormatID;
            TSUFormatReferenceObject *mDateFormatRef;
            unsigned int mControlFormatID;
            TSUFormatReferenceObject *mControlFormatRef;
            unsigned int mCustomFormatID;
            TSUFormatReferenceObject *mCustomFormatRef;
            unsigned int mBaseFormatID;
            TSUFormatReferenceObject *mBaseFormatRef;
            unsigned int mMultipleChoiceListFormatID;
            TSUFormatReferenceObject *mMultipleChoiceListFormatRef;
        } mCellFormats;
        unsigned char mStrokePresetNumber;
    } mPrivate;
}

+ (id)cell;
- (id)description;
- (_Bool)isCellContentsEqualToCell:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)writeToStorageRef:(struct TSTCellStorage *)arg1;
- (void)inflateFromStorageRef:(struct TSTCellStorage *)arg1 dataStore:(id)arg2 suppressingFormulaInflation:(_Bool)arg3;
- (void)inflateFromStorageRef:(struct TSTCellStorage *)arg1 dataStore:(id)arg2;
- (void)dealloc;
- (id)initWithStorageRef:(struct TSTCellStorage *)arg1 dataStore:(id)arg2;
- (id)initWithCell:(id)arg1;
- (id)init;

@end

@interface TSTCellDictionary : NSObject
{
    TSUIntegerKeyDictionary *mDict;
    struct _opaque_pthread_rwlock_t mDictRWLock;
}

- (void)applyBlockToAllCells:(CDUnknownBlockType)arg1;
- (id)allCells;
- (void)removeAllCells;
- (id)cellAtCellID:(CDStruct_0441cfb5)arg1;
- (void)setCell:(id)arg1 atCellID:(CDStruct_0441cfb5)arg2;
- (void)dealloc;
- (id)init;

@end

@interface TSTCellIterator : NSObject
{
    TSTTableModel *mTableModel;
    TSTCellRegion *mModelRegion;
    struct NSObject *mModelRegionIterator;
    TSTTableDataStore *mTableDataStore;
    CDStruct_0441cfb5 mPreviousCellID;
    TSTTableTileRowInfo *mCurRow;
    TSTTableTile *mCurTile;
    unsigned short mCurRowID;
    struct _NSRange mCurTileRange;
    TSTCell *mCell;
    _Bool mSkipStyleOnlyCells;
    _Bool mSkipCommentStorageOnlyCells;
    _Bool mDontExpandCellRefs;
    int mRowWalkDirection;
    _Bool mDontCheckSize;
    _Bool mDontReturnMergeRegions;
    _Bool mReturnHiddenCells;
    _Bool mDontInflateFormulas;
    _Bool mReturnEmptyCells;
}

@property(readonly) int rowWalkDirection; // @synthesize rowWalkDirection=mRowWalkDirection;
@property(readonly) _Bool dontExpandCellRefs; // @synthesize dontExpandCellRefs=mDontExpandCellRefs;
- (void)terminate;
- (_Bool)getNext:(CDStruct_6188ab8e *)arg1;
- (_Bool)p_getData:(CDStruct_6188ab8e *)arg1 forCellID:(CDStruct_0441cfb5)arg2;
- (void)p_resetIterData:(CDStruct_6188ab8e *)arg1;
- (void)dealloc;
- (id)initWithTableModel:(id)arg1 flags:(unsigned long long)arg2;
- (id)initWithTableModel:(id)arg1;
- (id)initWithTableModel:(id)arg1 range:(CDStruct_5f1f7aa9)arg2 flags:(unsigned long long)arg3;
- (id)initWithTableModel:(id)arg1 range:(CDStruct_5f1f7aa9)arg2;
- (id)initWithTableModel:(id)arg1 region:(id)arg2;
- (id)initWithTableModel:(id)arg1 region:(id)arg2 flags:(unsigned long long)arg3;

@end

@interface TSTCellRegion : NSObject <NSCopying>
{
    unsigned long long mCellRangesCount;
    CDStruct_5f1f7aa9 *mCellRanges;
    CDStruct_5f1f7aa9 mBoundingCellRange;
    unsigned long long mCellCount;
    NSIndexSet *mIntersectingColumnsIndexSet;
    NSIndexSet *mIntersectingRowsIndexSet;
    CDStruct_0441cfb5 mUpperLeftCellID;
    CDStruct_0441cfb5 mBottomRightCellID;
}

+ (id)regionFromColumnIndices:(id)arg1;
+ (id)regionFromRowIndices:(id)arg1;
+ (id)regionFillingRowsFromRegion:(id)arg1;
+ (id)regionFillingColumnsFromRegion:(id)arg1;
+ (id)invalidRegion;
+ (id)region:(id)arg1 subtractingRegion:(id)arg2;
+ (id)region:(id)arg1 addingRegion:(id)arg2;
+ (id)unionEveryRangeInRegion:(id)arg1 withRange:(CDStruct_5f1f7aa9)arg2;
+ (id)region:(id)arg1 intersectingRange:(CDStruct_5f1f7aa9)arg2;
+ (id)region:(id)arg1 subtractingRange:(CDStruct_5f1f7aa9)arg2;
+ (id)region:(id)arg1 addingRange:(CDStruct_5f1f7aa9)arg2;
+ (id)regionFromCellMap:(id)arg1;
+ (id)regionFromRange:(CDStruct_5f1f7aa9)arg1;
- (id)description;
- (void)p_calculateUpperLeftAndBottomRightCellID;
- (void)p_calculateIntersectingRows;
- (void)p_calculateIntersectingColumns;
- (void)p_calculateAncillaryInformation;
- (void)p_insertRangeIntoRegion:(CDStruct_5f1f7aa9)arg1;
- (void)enumerateColumnRangesUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateRowRangesUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateInDirection:(int)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)enumerateRowsUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateColumnsUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateCellRangesUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateCellIDsUsingBlock:(CDUnknownBlockType)arg1;
- (struct NSObject *)topToBottomIterator;
- (struct NSObject *)rightToLeftIterator;
- (struct NSObject *)iterator;
- (CDStruct_0441cfb5)suitableCursor;
- (CDStruct_0441cfb5)suitableAnchor;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isValid;
- (id)intersectingRowsIndexSet;
- (id)intersectingColumnsIndexSet;
@property(readonly, nonatomic) unsigned short numberOfIntersectingRows;
@property(readonly, nonatomic) unsigned short numberOfIntersectingColumns;
- (_Bool)intersectsRow:(unsigned short)arg1;
- (_Bool)intersectsColumn:(unsigned char)arg1;
- (_Bool)partiallyIntersectsCellRange:(CDStruct_5f1f7aa9)arg1;
- (_Bool)intersectsCellRange:(CDStruct_5f1f7aa9)arg1;
- (_Bool)equalsCellRange:(CDStruct_5f1f7aa9)arg1;
- (_Bool)equalsCellRegion:(id)arg1;
- (_Bool)containsCellRegion:(id)arg1;
- (_Bool)containsCellRange:(CDStruct_5f1f7aa9)arg1;
- (_Bool)containsCellID:(CDStruct_0441cfb5)arg1;
@property(readonly, nonatomic) _Bool isRectangle;
@property(readonly, nonatomic) _Bool isEmpty;
@property(readonly, nonatomic) unsigned long long cellCount;
@property(readonly, nonatomic) CDStruct_5f1f7aa9 boundingCellRange;
@property(readonly, nonatomic) CDStruct_0441cfb5 bottomRightCellID;
@property(readonly, nonatomic) CDStruct_0441cfb5 upperLeftCellID;
- (id)regionByApplyingRowMapping:(id)arg1;
- (id)regionByAddingColumns:(id)arg1;
- (id)regionByAddingRows:(id)arg1;
- (id)regionByIntersectingColumnIndices:(id)arg1;
- (id)regionByIntersectingRowIndices:(id)arg1;
- (id)regionByRemovingColumns:(id)arg1;
- (id)regionByRemovingRows:(id)arg1;
- (id)regionOffsetBy:(CDStruct_79c71658)arg1;
- (id)regionBySubtractingRegion:(id)arg1;
- (id)regionByAddingRegion:(id)arg1;
- (id)regionByUnioningEveryRangeInRegionWithRange:(CDStruct_5f1f7aa9)arg1;
- (id)regionByIntersectingRange:(CDStruct_5f1f7aa9)arg1;
- (id)regionBySubtractingRange:(CDStruct_5f1f7aa9)arg1;
- (id)regionByAddingRange:(CDStruct_5f1f7aa9)arg1;
- (void)dealloc;
- (id)init;
- (void)fillCellRangeRowMajorSet:(set_bf64ed85 *)arg1 leftToRight:(_Bool)arg2;
- (void)fillCellRangeColMajorSet:(set_1b864098 *)arg1 leftToRight:(_Bool)arg2;

@end

@interface TSTCellRegionColMajorIterator : NSObject <TSTCellRegionIterating>
{
    set_1b864098 mCellRangeSet;
    CDStruct_0441cfb5 mCellID;
    CDStruct_5f1f7aa9 mBoundingCellRange;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)terminate;
- (CDStruct_0441cfb5)getNext;
- (void)dealloc;
- (id)initWithCellRegion:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSTCellRegionRowMajorIterator : NSObject <TSTCellRegionIterating>
{
    set_bf64ed85 mCellRangeSet;
    CDStruct_0441cfb5 mCellID;
    CDStruct_5f1f7aa9 mBoundingCellRange;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)terminate;
- (CDStruct_0441cfb5)getNext;
- (void)dealloc;
- (id)initWithCellRegion:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSTCellRegionRowMajorReverseIterator : TSTCellRegionRowMajorIterator
{
}

- (CDStruct_0441cfb5)getNext;
- (id)initWithCellRegion:(id)arg1;

@end

@interface TSTCellStateForLayout : NSObject
{
    _Bool mCellPropsRowHeight;
    _Bool mCellWraps;
    _Bool mForDrawing;
    _Bool mInDynamicLayout;
    CDStruct_0441cfb5 mModelCellID;
    unsigned int mVerticalAlignment;
    int mLayoutCacheFlags;
    TSTCell *mCell;
    CDStruct_5f1f7aa9 mMergedRange;
    TSWPColumn *mWPColumn;
    id mCellContents;
    TSTLayoutContentCachedKey *mKeyVal;
    unsigned long long mPageNumber;
    unsigned long long mPageCount;
    struct CGSize mMinSize;
    struct CGSize mMaxSize;
    struct UIEdgeInsets mPaddingInsets;
}

@property(nonatomic) unsigned long long pageCount; // @synthesize pageCount=mPageCount;
@property(nonatomic) unsigned long long pageNumber; // @synthesize pageNumber=mPageNumber;
@property(nonatomic) int layoutCacheFlags; // @synthesize layoutCacheFlags=mLayoutCacheFlags;
@property(retain, nonatomic) TSTLayoutContentCachedKey *keyVal; // @synthesize keyVal=mKeyVal;
@property(retain, nonatomic) id cellContents; // @synthesize cellContents=mCellContents;
@property(nonatomic) unsigned int verticalAlignment; // @synthesize verticalAlignment=mVerticalAlignment;
@property(nonatomic) struct UIEdgeInsets paddingInsets; // @synthesize paddingInsets=mPaddingInsets;
@property(nonatomic) struct CGSize maxSize; // @synthesize maxSize=mMaxSize;
@property(nonatomic) struct CGSize minSize; // @synthesize minSize=mMinSize;
@property(retain, nonatomic) TSWPColumn *wpColumn; // @synthesize wpColumn=mWPColumn;
@property(nonatomic) _Bool inDynamicLayout; // @synthesize inDynamicLayout=mInDynamicLayout;
@property(nonatomic) _Bool forDrawing; // @synthesize forDrawing=mForDrawing;
@property(nonatomic) _Bool cellWraps; // @synthesize cellWraps=mCellWraps;
@property(nonatomic) _Bool cellPropsRowHeight; // @synthesize cellPropsRowHeight=mCellPropsRowHeight;
@property(nonatomic) CDStruct_5f1f7aa9 mergedRange; // @synthesize mergedRange=mMergedRange;
@property(copy, nonatomic) TSTCell *cell; // @synthesize cell=mCell;
@property(nonatomic) CDStruct_0441cfb5 modelCellID; // @synthesize modelCellID=mModelCellID;
@property(readonly, nonatomic) _Bool hasContent;
- (void)dealloc;
- (id)init;

@end

@interface TSTCellStyle : TSSStyle
{
}

+ (void)initDefaultPropertyMap:(id)arg1 forTableArea:(unsigned int)arg2 presetIndex:(unsigned long long)arg3 colors:(id)arg4 alternate:(int)arg5;
+ (void)p_initFooterRowRegionPropertyMap:(id)arg1 presetIndex:(unsigned long long)arg2 colors:(id)arg3 alternate:(int)arg4;
+ (void)p_initHeaderColumnRegionPropertyMap:(id)arg1 presetIndex:(unsigned long long)arg2 colors:(id)arg3 alternate:(int)arg4;
+ (void)p_initHeaderRowRegionPropertyMap:(id)arg1 presetIndex:(unsigned long long)arg2 colors:(id)arg3 alternate:(int)arg4;
+ (void)p_initBodyRegionPropertyMap:(id)arg1 presetIndex:(unsigned long long)arg2 colors:(id)arg3 alternate:(int)arg4;
+ (id)textStyleIDForPreset:(unsigned long long)arg1 andTableArea:(unsigned int)arg2;
+ (id)styleIDForPreset:(unsigned long long)arg1 andTableArea:(unsigned int)arg2;
+ (id)regionStringForTableArea:(unsigned int)arg1;
+ (id)nonEmphasisCellProperties;
+ (id)propertiesAllowingNSNull;
+ (id)properties;
- (SEL)mapThemePropertyMapSelector;
- (void)tstMapCellStylePropertyMap:(id)arg1;
- (void)dealloc;
- (void)validate;

@end

@interface TSTChangeDescriptor : NSObject
{
    int mChangeDescriptor;
    TSTCellRegion *mCellRegion;
    CDStruct_0441cfb5 mCellID;
    TSTCellRegion *mExpandedRegion;
    TSTCellRegion *mStrokeRegion;
    NSHashTable *mReferenceIdentifiers;
}

+ (id)changeDescriptorWithType:(int)arg1 referenceIdentifiers:(id)arg2;
+ (id)changeDescriptorWithType:(int)arg1 cellRange:(CDStruct_5f1f7aa9)arg2 strokeRange:(CDStruct_5f1f7aa9)arg3;
+ (id)changeDescriptorWithType:(int)arg1 strokeRange:(CDStruct_5f1f7aa9)arg2;
+ (id)changeDescriptorWithType:(int)arg1 cellRange:(CDStruct_5f1f7aa9)arg2;
+ (id)changeDescriptorWithType:(int)arg1 cellID:(CDStruct_0441cfb5)arg2 strokeRange:(CDStruct_5f1f7aa9)arg3;
+ (id)changeDescriptorWithType:(int)arg1 cellID:(CDStruct_0441cfb5)arg2 cellRange:(CDStruct_5f1f7aa9)arg3 strokeRange:(CDStruct_5f1f7aa9)arg4;
+ (id)changeDescriptorWithType:(int)arg1 cellID:(CDStruct_0441cfb5)arg2 cellRange:(CDStruct_5f1f7aa9)arg3;
+ (id)changeDescriptorWithType:(int)arg1;
+ (id)changeDescriptorWithType:(int)arg1 cellID:(CDStruct_0441cfb5)arg2 cellRegion:(id)arg3 strokeRegion:(id)arg4;
+ (id)changeDescriptorWithType:(int)arg1 strokeRegion:(id)arg2;
+ (id)changeDescriptorWithType:(int)arg1 cellRegion:(id)arg2 strokeRegion:(id)arg3;
+ (id)changeDescriptorWithType:(int)arg1 cellRegion:(id)arg2;
@property(readonly, nonatomic) NSHashTable *referenceIdentifiers; // @synthesize referenceIdentifiers=mReferenceIdentifiers;
@property(retain, nonatomic) TSTCellRegion *expandedRegion; // @synthesize expandedRegion=mExpandedRegion;
@property(readonly, nonatomic) TSTCellRegion *strokeRegion; // @synthesize strokeRegion=mStrokeRegion;
@property(readonly, nonatomic) CDStruct_0441cfb5 cellID; // @synthesize cellID=mCellID;
@property(readonly, nonatomic) TSTCellRegion *cellRegion; // @synthesize cellRegion=mCellRegion;
@property(readonly, nonatomic) int changeDescriptor; // @synthesize changeDescriptor=mChangeDescriptor;
- (id)description;
- (CDStruct_5f1f7aa9)cellRange;
- (CDStruct_5f1f7aa9)expandedRange;
- (void)setExpandedRange:(CDStruct_5f1f7aa9)arg1;
- (CDStruct_5f1f7aa9)strokeRange;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)initWithChangeDescriptorType:(int)arg1 andCellRegion:(id)arg2 andCellID:(CDStruct_0441cfb5)arg3 andStrokeRegion:(id)arg4 andReferenceIdentifiers:(id)arg5;

@end

@interface TSTConfiguration : NSObject
{
    _Bool mSupportsContainedTextEditing;
    _Bool mSupportsResumingTextEditing;
    _Bool mBeginEditingOnSingleTap;
    _Bool mSupportsMergedCells;
    _Bool mSupportsHiddenCells;
    _Bool mReturnWhileEditingNavigates;
    _Bool mTabWhileEditingNavigates;
    _Bool mArrowKeyAtEdgeWhileEditingNavigates;
    _Bool mArrowKeysWrap;
    _Bool mArrowKeysNavigateWhenEditingBeganByTyping;
    _Bool mBackTabWraps;
    _Bool mTabAtEdgeAddsRow;
    _Bool mTabAtEdgeAddsColumn;
    _Bool mPastesTile;
    _Bool mAllowHorizontalAutoresize;
    _Bool mSelectsCellOnInitialTap;
    _Bool mDragByHandleOnly;
    _Bool mCornersCanDragResize;
    _Bool mSupportsControlCells;
    _Bool mHasLargerFonts;
    _Bool mSupportsFrozenHeaders;
    _Bool mSupportsAutoResizedTables;
    _Bool mSupportsCreateChartFromSelection;
    _Bool mShowsAddressBarAlways;
    _Bool mShowsAddressBarHighlights;
    _Bool mShowsAddressBarLetteringAndNumbering;
    _Bool mSelectionUsesBezierPath;
    _Bool mUsesWholeChromeResizer;
    _Bool mSupportsCanvasReferenceEditing;
    _Bool mUsesLimitedAutomaticFormatParsing;
    _Bool mSupportsFormulaEditing;
    _Bool mSupportsImplicitEditing;
    _Bool mFormulaEqualsTokenIsSelectable;
    _Bool mAllowFreeformFormulaText;
    _Bool mAllowWhitespaceInFormulas;
    _Bool mRequireMatchedFunctionTokens;
    _Bool mShowsHideUnhideUI;
    _Bool mExportPermanentHidingState;
    _Bool mShowsCellOverflowIndicator;
    _Bool mSupportsAutofill;
    _Bool mUsesLimitedNumberFormatInspector;
    _Bool mHeadersFrozenByDefault;
    _Bool mCreateLargeDefaultTables;
    _Bool mTableNameEnabledInNewTables;
    _Bool mSupportsRowColumnAdderKnob;
    _Bool mSupportsDragDropMoveMode;
    _Bool mExportsCellComments;
    _Bool mExportsCellAnnotations;
    _Bool mSupportsRepeatHeaderRowsOnEachPage;
    _Bool _formulaEditorEvaluatesFormulas;
    _Bool _showReferenceHighlightsOnFormulaCellSelection;
    _Bool _tokenizeFormulaStringLiterals;
    _Bool _cellEditorsCanScrollToNonLocalTableSelection;
    _Bool _formulaCellEditorSupportsTextTokenEditor;
    _Bool _disableImplicitNaming;
    _Bool _supportsComplexFilterUI;
    _Bool _supportsQuickFilterUI;
    _Bool _pasteFilterHidingAsUserHiding;
    _Bool _allowsFullyFilteredTables;
    unsigned int mMaxNumberOfRows;
    unsigned int mMaxNumberOfColumns;
    unsigned int mMaxNumberOfPopulatedCells;
}

+ (void)resetSharedTableConfiguration;
+ (id)sharedTableConfiguration;
@property(nonatomic) _Bool allowsFullyFilteredTables; // @synthesize allowsFullyFilteredTables=_allowsFullyFilteredTables;
@property(nonatomic) _Bool pasteFilterHidingAsUserHiding; // @synthesize pasteFilterHidingAsUserHiding=_pasteFilterHidingAsUserHiding;
@property(nonatomic) _Bool supportsQuickFilterUI; // @synthesize supportsQuickFilterUI=_supportsQuickFilterUI;
@property(nonatomic) _Bool supportsComplexFilterUI; // @synthesize supportsComplexFilterUI=_supportsComplexFilterUI;
@property(nonatomic) _Bool disableImplicitNaming; // @synthesize disableImplicitNaming=_disableImplicitNaming;
@property(nonatomic) _Bool formulaCellEditorSupportsTextTokenEditor; // @synthesize formulaCellEditorSupportsTextTokenEditor=_formulaCellEditorSupportsTextTokenEditor;
@property(nonatomic) _Bool cellEditorsCanScrollToNonLocalTableSelection; // @synthesize cellEditorsCanScrollToNonLocalTableSelection=_cellEditorsCanScrollToNonLocalTableSelection;
@property(nonatomic) _Bool tokenizeFormulaStringLiterals; // @synthesize tokenizeFormulaStringLiterals=_tokenizeFormulaStringLiterals;
@property(nonatomic) _Bool showReferenceHighlightsOnFormulaCellSelection; // @synthesize showReferenceHighlightsOnFormulaCellSelection=_showReferenceHighlightsOnFormulaCellSelection;
@property(nonatomic) _Bool formulaEditorEvaluatesFormulas; // @synthesize formulaEditorEvaluatesFormulas=_formulaEditorEvaluatesFormulas;
@property(nonatomic) _Bool supportsRepeatHeaderRowsOnEachPage; // @synthesize supportsRepeatHeaderRowsOnEachPage=mSupportsRepeatHeaderRowsOnEachPage;
@property(nonatomic) _Bool exportsCellAnnotations; // @synthesize exportsCellAnnotations=mExportsCellAnnotations;
@property(nonatomic) _Bool exportsCellComments; // @synthesize exportsCellComments=mExportsCellComments;
@property(nonatomic) _Bool supportsDragDropMoveMode; // @synthesize supportsDragDropMoveMode=mSupportsDragDropMoveMode;
@property(nonatomic) _Bool supportsRowColumnAdderKnob; // @synthesize supportsRowColumnAdderKnob=mSupportsRowColumnAdderKnob;
@property(nonatomic) _Bool tableNameEnabledInNewTables; // @synthesize tableNameEnabledInNewTables=mTableNameEnabledInNewTables;
@property(nonatomic) _Bool createLargeDefaultTables; // @synthesize createLargeDefaultTables=mCreateLargeDefaultTables;
@property(nonatomic) _Bool headersFrozenByDefault; // @synthesize headersFrozenByDefault=mHeadersFrozenByDefault;
@property(nonatomic) _Bool usesLimitedNumberFormatInspector; // @synthesize usesLimitedNumberFormatInspector=mUsesLimitedNumberFormatInspector;
@property(nonatomic) _Bool supportsAutofill; // @synthesize supportsAutofill=mSupportsAutofill;
@property(nonatomic) _Bool showsCellOverflowIndicator; // @synthesize showsCellOverflowIndicator=mShowsCellOverflowIndicator;
@property(nonatomic) _Bool exportPermanentHidingState; // @synthesize exportPermanentHidingState=mExportPermanentHidingState;
@property(nonatomic) _Bool showsHideUnhideUI; // @synthesize showsHideUnhideUI=mShowsHideUnhideUI;
@property(nonatomic) _Bool requireMatchedFunctionTokens; // @synthesize requireMatchedFunctionTokens=mRequireMatchedFunctionTokens;
@property(nonatomic) _Bool allowWhitespaceInFormulas; // @synthesize allowWhitespaceInFormulas=mAllowWhitespaceInFormulas;
@property(nonatomic) _Bool allowFreeformFormulaText; // @synthesize allowFreeformFormulaText=mAllowFreeformFormulaText;
@property(nonatomic) _Bool formulaEqualsTokenIsSelectable; // @synthesize formulaEqualsTokenIsSelectable=mFormulaEqualsTokenIsSelectable;
@property(nonatomic) _Bool supportsImplicitEditing; // @synthesize supportsImplicitEditing=mSupportsImplicitEditing;
@property(nonatomic) _Bool supportsFormulaEditing; // @synthesize supportsFormulaEditing=mSupportsFormulaEditing;
@property(nonatomic) _Bool usesLimitedAutomaticFormatParsing; // @synthesize usesLimitedAutomaticFormatParsing=mUsesLimitedAutomaticFormatParsing;
@property(nonatomic) _Bool supportsCanvasReferenceEditing; // @synthesize supportsCanvasReferenceEditing=mSupportsCanvasReferenceEditing;
@property(nonatomic) _Bool usesWholeChromeResizer; // @synthesize usesWholeChromeResizer=mUsesWholeChromeResizer;
@property(nonatomic) _Bool selectionUsesBezierPath; // @synthesize selectionUsesBezierPath=mSelectionUsesBezierPath;
@property(nonatomic) _Bool showsAddressBarLetteringAndNumbering; // @synthesize showsAddressBarLetteringAndNumbering=mShowsAddressBarLetteringAndNumbering;
@property(nonatomic) _Bool showsAddressBarHighlights; // @synthesize showsAddressBarHighlights=mShowsAddressBarHighlights;
@property(nonatomic) _Bool showsAddressBarAlways; // @synthesize showsAddressBarAlways=mShowsAddressBarAlways;
@property(nonatomic) _Bool supportsCreateChartFromSelection; // @synthesize supportsCreateChartFromSelection=mSupportsCreateChartFromSelection;
@property(nonatomic) _Bool supportsAutoResizedTables; // @synthesize supportsAutoResizedTables=mSupportsAutoResizedTables;
@property(nonatomic) _Bool supportsFrozenHeaders; // @synthesize supportsFrozenHeaders=mSupportsFrozenHeaders;
@property(nonatomic) _Bool hasLargerFonts; // @synthesize hasLargerFonts=mHasLargerFonts;
@property(nonatomic) _Bool supportsControlCells; // @synthesize supportsControlCells=mSupportsControlCells;
@property(nonatomic) _Bool cornersCanDragResize; // @synthesize cornersCanDragResize=mCornersCanDragResize;
@property(nonatomic) _Bool dragByHandleOnly; // @synthesize dragByHandleOnly=mDragByHandleOnly;
@property(nonatomic) _Bool selectsCellOnInitialTap; // @synthesize selectsCellOnInitialTap=mSelectsCellOnInitialTap;
@property(nonatomic) _Bool allowHorizontalAutoresize; // @synthesize allowHorizontalAutoresize=mAllowHorizontalAutoresize;
@property(nonatomic) _Bool pastesTile; // @synthesize pastesTile=mPastesTile;
@property(nonatomic) _Bool tabAtEdgeAddsColumn; // @synthesize tabAtEdgeAddsColumn=mTabAtEdgeAddsColumn;
@property(nonatomic) _Bool tabAtEdgeAddsRow; // @synthesize tabAtEdgeAddsRow=mTabAtEdgeAddsRow;
@property(nonatomic) _Bool backTabWraps; // @synthesize backTabWraps=mBackTabWraps;
@property(nonatomic) _Bool arrowKeysNavigateWhenEditingBeganByTyping; // @synthesize arrowKeysNavigateWhenEditingBeganByTyping=mArrowKeysNavigateWhenEditingBeganByTyping;
@property(nonatomic) _Bool arrowKeysWrap; // @synthesize arrowKeysWrap=mArrowKeysWrap;
@property(nonatomic) _Bool arrowKeyAtEdgeWhileEditingNavigates; // @synthesize arrowKeyAtEdgeWhileEditingNavigates=mArrowKeyAtEdgeWhileEditingNavigates;
@property(nonatomic) _Bool tabWhileEditingNavigates; // @synthesize tabWhileEditingNavigates=mTabWhileEditingNavigates;
@property(nonatomic) _Bool returnWhileEditingNavigates; // @synthesize returnWhileEditingNavigates=mReturnWhileEditingNavigates;
@property(nonatomic) _Bool supportsHiddenCells; // @synthesize supportsHiddenCells=mSupportsHiddenCells;
@property(nonatomic) _Bool supportsMergedCells; // @synthesize supportsMergedCells=mSupportsMergedCells;
@property(nonatomic) _Bool beginEditingOnSingleTap; // @synthesize beginEditingOnSingleTap=mBeginEditingOnSingleTap;
@property(nonatomic) _Bool supportsResumingTextEditing; // @synthesize supportsResumingTextEditing=mSupportsResumingTextEditing;
@property(nonatomic) _Bool supportsContainedTextEditing; // @synthesize supportsContainedTextEditing=mSupportsContainedTextEditing;
@property(nonatomic) unsigned int maxNumberOfPopulatedCells; // @synthesize maxNumberOfPopulatedCells=mMaxNumberOfPopulatedCells;
@property(nonatomic) unsigned int maxNumberOfColumns; // @synthesize maxNumberOfColumns=mMaxNumberOfColumns;
@property(nonatomic) unsigned int maxNumberOfRows; // @synthesize maxNumberOfRows=mMaxNumberOfRows;
- (id)init;

@end

@interface TSTCoordinateArray : NSObject
{
    unsigned int mOffset;
    unsigned int mCount;
    double *mCoordinates;
    double mAverage;
    NSMutableIndexSet *mVisibleIndices;
    _Bool mLayoutDirectionIsLeftToRight;
    double mTableWidth;
}

- (id)description;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (void)hasRightToLeftOrderingWithWidth:(double)arg1;
- (id)initWithCount:(unsigned int)arg1 atOffset:(unsigned int)arg2;

@end

@interface TSTTableDataList : TSPObject
{
    int mListType;
    unsigned int mNextID;
    TSTIntegerKeyDict *mData;
    TSTTableDataObjectKeyDict *mIDs;
}

@property(readonly, nonatomic) unsigned int nextID; // @synthesize nextID=mNextID;
@property(readonly, nonatomic) TSTIntegerKeyDict *data;
- (id)allRichTextPayloadStorages;
- (id)packageLocator;
- (unsigned long long)flushableSize;
- (void)dealloc;
- (id)initWithType:(int)arg1 context:(id)arg2;
- (void)p_setupWithType:(int)arg1 nextKeyID:(unsigned int)arg2;
- (_Bool)supportsIDMapForType:(int)arg1;

@end

@interface TSTCustomFormatList : TSTTableDataList
{
    NSMutableDictionary *mNamesList;
}

- (id)newUniqueNameFromName:(id)arg1 preserveSeed:(_Bool)arg2;
- (id)newUniqueNameFromName:(id)arg1;
- (void)p_setupNamesList;
- (id)allNumberKeys;
- (unsigned int)maxKey;
- (long long)count;
- (id)customFormatWrapperForKey:(unsigned int)arg1;
- (struct TSUCustomFormat *)customFormatForKey:(unsigned int)arg1;
- (unsigned int)addCustomFormat:(struct TSUCustomFormat *)arg1 withOldKey:(unsigned int)arg2;
- (unsigned int)addCustomFormat:(struct TSUCustomFormat *)arg1 duringImport:(_Bool)arg2;
- (_Bool)supportsIDMapForType:(int)arg1;
- (void)dealloc;
- (id)initWithContext:(id)arg1;
- (id)init;

@end

@interface TSTDupContentCache : TSUConcurrentCache
{
}

- (id)description;

@end

@interface TSTEditingState : TSPObject <TSWPStorageObserver>
{
    TSWPStorage *mEditingStorage;
    TSTTableInfo *mTableInfo;
    TSTCell *mEditingCell;
    CDStruct_0441cfb5 mEditingCellID;
    int mEditingMode;
    TSTTableSelection *mSelection;
    TSTTableSelection *mSelectionReflectingEditingState;
    TSTSearchReference *mSearchReference;
    int mPreviousEditingMode;
    unsigned char mLastColumnHitByTap;
    TSUPointerKeyDictionary *mColoredReferences;
    _Bool mCellWasEditedInCurrentSession;
    _Bool mEditingCellInProxy;
    TSTTextStatisticsTracker *mTracker;
    _Bool mEndingEditingDueToCancelOperation;
    _Bool _dispatchingPreflight;
    CDStruct_0441cfb5 _lastEditingCellID;
    NSArray *_coloredReferences;
    TSKCommandController *_commandController;
}

@property(nonatomic, getter=isDispatchingPreflight) _Bool dispatchingPreflight; // @synthesize dispatchingPreflight=_dispatchingPreflight;
@property(readonly, nonatomic) TSKCommandController *commandController; // @synthesize commandController=_commandController;
@property(readonly, nonatomic) NSArray *coloredReferences; // @synthesize coloredReferences=_coloredReferences;
@property(nonatomic) CDStruct_0441cfb5 lastEditingCellID; // @synthesize lastEditingCellID=_lastEditingCellID;
@property(readonly, nonatomic) int previousEditingMode; // @synthesize previousEditingMode=mPreviousEditingMode;
@property(nonatomic) unsigned char lastColumnHitByTap; // @synthesize lastColumnHitByTap=mLastColumnHitByTap;
@property(nonatomic) TSTTextStatisticsTracker *tracker; // @synthesize tracker=mTracker;
@property(nonatomic, getter=isEndingEditingDueToCancelOperation) _Bool endingEditingDueToCancelOperation; // @synthesize endingEditingDueToCancelOperation=mEndingEditingDueToCancelOperation;
@property(retain, nonatomic) TSTSearchReference *searchReference; // @synthesize searchReference=mSearchReference;
@property(nonatomic) _Bool editingCellInProxy; // @synthesize editingCellInProxy=mEditingCellInProxy;
@property(retain, nonatomic) TSWPStorage *editingStorage; // @synthesize editingStorage=mEditingStorage;
- (void)didEndEditingDueToCancelOperation;
- (void)willEndEditingDueToCancelOperation;
- (_Bool)p_shouldSetCellPostFlight;
- (void)adoptStylesheet:(id)arg1 withMapper:(id)arg2;
- (void)p_unregisterStorageObserver;
- (void)p_registerStorageObserver;
- (void)storage:(id)arg1 didChangeRange:(struct _NSRange)arg2 delta:(long long)arg3 broadcastKind:(int)arg4;
- (void)changeEditingMode:(int)arg1;
@property(readonly, nonatomic) int editingMode;
- (void)reloadValueFromFocusedCell;
- (void)reloadValue;
- (void)performEndRichTextEditing;
- (id)prepareEditingStorageToEditCell:(CDStruct_0441cfb5)arg1;
- (id)storageForCellID:(CDStruct_0441cfb5)arg1;
@property(readonly, nonatomic) CDStruct_5f1f7aa9 editingCellRange;
@property(retain, nonatomic) TSTCell *editingCell;
@property(copy, nonatomic) TSTTableSelection *selection;
@property(nonatomic) TSTTableInfo *tableInfo; // @synthesize tableInfo=mTableInfo;
@property(readonly, nonatomic) TSTTableModel *tableModel;
- (void)p_performRichTextStorageDOLC:(id)arg1 newStorage:(id)arg2;
- (void)dealloc;
- (id)initForPasteboardFromSourceInfo:(id)arg1 stylesheet:(id)arg2;
- (id)initWithTableInfo:(id)arg1;
@property(nonatomic) _Bool cellWasEditedInCurrentSession;
@property(nonatomic) CDStruct_0441cfb5 editingCellID;

@end

@interface TSTEphemeralCellMap : NSObject <TSTCellMap>
{
    CDStruct_0441cfb5 *mCellIDs;
    id *mCells;
    unsigned long long mCapacity;
    unsigned long long mCount;
    _Bool mMayModifyValuesReferencedByFormulas;
    _Bool mIgnoreHiddenCellsWhenApplying;
    _Bool mAppliesToHidden;
}

@property(nonatomic) _Bool appliesToHidden; // @synthesize appliesToHidden=mAppliesToHidden;
- (void)setMayModifyValuesReferencedByFormulas:(_Bool)arg1;
- (_Bool)mayModifyValuesReferencedByFormulas;
- (_Bool)mayModifyFormulasInCells;
- (void)popLastCell;
- (void)addCell:(id)arg1 andCellID:(CDStruct_0441cfb5)arg2;
- (id)cellAtIndex:(unsigned long long)arg1;
- (CDStruct_0441cfb5)cellIDAtIndex:(unsigned long long)arg1;
- (_Bool)containsCellID:(CDStruct_0441cfb5)arg1;
- (CDStruct_0441cfb5 *)cellIDs;
- (unsigned long long)count;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSTFilteredTableDynamicContentDelegate : NSObject <TSTLayoutDynamicContentProtocol>
{
    TSTTableModel *mTableModel;
}

- (_Bool)dynamicContentMustDrawOnMainThread;
- (_Bool)cell:(id *)arg1 forCellID:(CDStruct_0441cfb5)arg2;
- (void)dealloc;
- (id)initWithTableModel:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSTFindReplace : NSObject
{
}

+ (void)searchLayout:(id)arg1 forAnnotationsWithHitBlock:(CDUnknownBlockType)arg2;
+ (void)searchInfo:(id)arg1 forAnnotationsWithHitBlock:(CDUnknownBlockType)arg2;
+ (void)p_searchInfo:(id)arg1 layout:(id)arg2 forAnnotationsWithHitBlock:(CDUnknownBlockType)arg3;
+ (void)searchLayout:(id)arg1 forSpellingErrorsWithHitBlock:(CDUnknownBlockType)arg2 stop:(_Bool *)arg3;
+ (void)searchLayout:(id)arg1 forString:(id)arg2 options:(unsigned long long)arg3 hitBlock:(CDUnknownBlockType)arg4;
+ (void)searchInfo:(id)arg1 forString:(id)arg2 options:(unsigned long long)arg3 hitBlock:(CDUnknownBlockType)arg4;

@end

@interface TSTHiddenDimensionCache : NSObject <NSCopying>
{
    unsigned long long mCount;
    NSMutableIndexSet *mCachedVisible;
    NSMutableIndexSet *mCachedUserVisible;
    NSMutableIndexSet *mInvalidRanges;
    unsigned long long mMarkIndex;
}

@property(readonly, nonatomic) NSIndexSet *visibleIndices; // @synthesize visibleIndices=mCachedVisible;
- (id)description;
- (void)insertRange:(struct _NSRange)arg1;
- (void)deleteRange:(struct _NSRange)arg1;
- (void)moveRangeFrom:(struct _NSRange)arg1 toIndex:(unsigned long long)arg2;
- (void)setAllInvalidValuesUsingBlock:(CDUnknownBlockType)arg1;
- (void)setAllValuesToZero;
- (unsigned short)numberOfVisibleIndicesToMarkIndexFrom:(unsigned long long)arg1;
- (void)setMarkIndex:(unsigned long long)arg1;
- (unsigned long long)findNthNextVisibleIndex:(unsigned long long)arg1 fromIndex:(unsigned long long)arg2;
- (unsigned long long)findNthPreviousVisibleIndex:(unsigned long long)arg1 fromIndex:(unsigned long long)arg2;
- (unsigned long long)findNextVisibleIndex:(unsigned long long)arg1;
- (unsigned long long)findPreviousVisibleIndex:(unsigned long long)arg1;
- (_Bool)anyUserHiddenIndicesInRange:(struct _NSRange)arg1;
- (_Bool)anyHiddenIndicesInRange:(struct _NSRange)arg1;
- (unsigned long long)numberUserHiddenIndicesInRange:(struct _NSRange)arg1;
- (unsigned long long)numberHiddenIndicesInRange:(struct _NSRange)arg1;
- (_Bool)isIndexUserHidden:(unsigned long long)arg1;
- (_Bool)isIndexHidden:(unsigned long long)arg1;
- (void)invalidate:(struct _NSRange)arg1;
- (void)setCount:(unsigned long long)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithUserHiddenInformation:(_Bool)arg1;

@end

@interface TSTHiddenRowsColumnsCache : NSObject <NSCopying>
{
    TSTHiddenDimensionCache *mHiddenRows;
    TSTHiddenDimensionCache *mHiddenColumns;
}

- (id)description;
- (void)validateChangeDescriptors:(id)arg1;
- (void)validate:(id)arg1;
- (void)pop;
- (void)swap;
- (void)push;
- (void)pushAndValidate:(id)arg1;
- (unsigned short)numberOfVisibleRowsFromHeader:(unsigned short)arg1;
@property(readonly, nonatomic) NSIndexSet *visibleColumnIndices;
@property(readonly, nonatomic) NSIndexSet *visibleRowIndices;
- (CDStruct_0441cfb5)visibleCellOffsetBy:(CDStruct_79c71658)arg1 fromCellID:(CDStruct_0441cfb5)arg2;
- (unsigned char)previousNthVisibleColumn:(unsigned short)arg1 fromColumnIndex:(unsigned char)arg2;
- (unsigned short)previousNthVisibleRow:(unsigned short)arg1 fromRowIndex:(unsigned short)arg2;
- (unsigned char)nextVisibleColumn:(unsigned char)arg1;
- (unsigned char)previousVisibleColumn:(unsigned char)arg1;
- (unsigned short)nextVisibleRow:(unsigned short)arg1;
- (unsigned short)previousVisibleRow:(unsigned short)arg1;
- (_Bool)anyColumnsHiddenInCellRange:(CDStruct_5f1f7aa9)arg1;
- (_Bool)anyRowsUserHiddenInCellRange:(CDStruct_5f1f7aa9)arg1;
- (_Bool)anyRowsHiddenInCellRange:(CDStruct_5f1f7aa9)arg1;
- (unsigned short)numberColumnsHiddenInCellRange:(CDStruct_5f1f7aa9)arg1;
- (unsigned short)numberRowsUserHiddenInCellRange:(CDStruct_5f1f7aa9)arg1;
- (unsigned short)numberRowsHiddenInCellRange:(CDStruct_5f1f7aa9)arg1;
- (_Bool)isColumnHidden:(unsigned char)arg1;
- (_Bool)isRowUserHidden:(unsigned short)arg1;
- (_Bool)isRowHidden:(unsigned short)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)init;

@end

@interface TSTIntegerKeyDict : NSObject
{
    struct hash_map<unsigned int, SFUtility::ObjcSharedPtr<NSObject>, TSTIntHasher, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, SFUtility::ObjcSharedPtr<NSObject>>>> *mMap;
}

- (id)allValues;
- (long long)count;
- (void)transformWithFunction:(CDUnknownFunctionPointerType)arg1 withState:(void *)arg2;
- (void)applyFunction:(CDUnknownFunctionPointerType)arg1 withState:(void *)arg2 andState:(void *)arg3;
- (void)applyFunction:(CDUnknownFunctionPointerType)arg1 withState:(void *)arg2;
- (void)makeObjectsPerformSelector:(SEL)arg1;
- (void)removeAllObjects;
- (void)removeObjectForKey:(unsigned int)arg1;
- (void)removeFirstObject;
- (void)setObject:(id)arg1 forKey:(unsigned int)arg2;
- (id)objectForKey:(unsigned int)arg1;
- (void)dealloc;
- (id)init;

@end

@interface TSWPTextHostLayout : TSDDrawableLayout <TSWPTextEditingHostLayout>
{
    TSWPShapeInfo *_editingShapeInfo;
    TSWPShapeLayout *_editingShapeLayout;
}

@property(retain, nonatomic) TSWPShapeInfo *editingShape; // @synthesize editingShape=_editingShapeInfo;
@property(readonly, nonatomic) TSWPShapeLayout *editingShapeLayout; // @synthesize editingShapeLayout=_editingShapeLayout;
- (void)updateChildrenFromInfo;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSTLayout : TSWPTextHostLayout <TSKSearchTarget, TSWPColumnMetrics, TSWPLayoutParent, TSWPStorageObserver>
{
    TSTMasterLayout *mMasterLayout;
    TSTLayoutHint *mLayoutHint;
    struct CGRect mCanvasVisibleRect;
    struct CGRect mPreviousVisibleStrokeFrame;
    _Bool mProcessChangesFiltering;
    _Bool mTabsVisible;
    _Bool mTableNameVisibilityIsValid;
    _Bool mTableNameVisible;
    _Bool mNewCanvasRevealedHorizontally;
    _Bool mNewCanvasRevealedVertically;
    _Bool mLayoutDirectionIsLeftToRight;
    TSTLayoutSpaceBundle *mSpaceBundle;
    struct {
        double tableNameHeight;
        struct CGSize scaleToFitParent;
        struct CGSize scaleToFitEnclosingTextColumn;
    } mCached;
    struct CGRect mRenderingFrameForLayoutGeometryFromInfo;
    TSWPLayout *mContainedTextEditingLayout;
    struct UIEdgeInsets mCachedPaddingForEditingCell;
    struct CGRect mComputedEditingCellContentFrame;
    unsigned int mCachedVerticalAlignmentForEditingCell;
    struct CGSize mTableSizeWithoutStrokes;
    struct CGSize mStrokeDelta;
    struct CGSize mCapturedStrokeFrameSizeForInline;
    CDStruct_5f1f7aa9 mEditingSpillingTextRange;
    unsigned int mContainedTextEditorParagraphAlignment;
    _Bool mContainedTextEditorTextWraps;
    _Bool mContainedTextEditorSpills;
    struct CGSize mSpillingTextSize;
    int mCoordinatesChangedMaskForChrome;
}

@property(nonatomic) _Bool processChangesFiltering; // @synthesize processChangesFiltering=mProcessChangesFiltering;
@property(retain, nonatomic) TSTLayoutHint *layoutHint; // @synthesize layoutHint=mLayoutHint;
@property(retain, nonatomic) TSTMasterLayout *masterLayout; // @synthesize masterLayout=mMasterLayout;
@property(readonly, nonatomic) _Bool layoutDirectionIsLeftToRight; // @synthesize layoutDirectionIsLeftToRight=mLayoutDirectionIsLeftToRight;
@property(readonly, nonatomic) CDStruct_5f1f7aa9 editingSpillingTextRange; // @synthesize editingSpillingTextRange=mEditingSpillingTextRange;
@property(retain, nonatomic) TSTLayoutSpaceBundle *spaceBundle; // @synthesize spaceBundle=mSpaceBundle;
@property(readonly, nonatomic) struct UIEdgeInsets paddingForEditingCell; // @synthesize paddingForEditingCell=mCachedPaddingForEditingCell;
@property(retain, nonatomic) TSWPLayout *containedTextEditingLayout; // @synthesize containedTextEditingLayout=mContainedTextEditingLayout;
@property(nonatomic) _Bool newCanvasRevealedVertically; // @synthesize newCanvasRevealedVertically=mNewCanvasRevealedVertically;
@property(nonatomic) _Bool newCanvasRevealedHorizontally; // @synthesize newCanvasRevealedHorizontally=mNewCanvasRevealedHorizontally;
- (_Bool)p_getLayoutDirectionLeftToRight;
- (unsigned int)p_defaultAlignmentForTableWritingDirection;
- (void)storage:(id)arg1 didChangeRange:(struct _NSRange)arg2 delta:(long long)arg3 broadcastKind:(int)arg4;
- (int)reapCoordinatesChangedMaskForChrome;
- (void)processChanges:(id)arg1;
- (void)p_processChangeActions:(id)arg1;
- (void)p_processChange:(id)arg1 forChangeSource:(id)arg2 actions:(id)arg3;
- (struct CGSize)initialTextSize;
- (struct CGRect)maskRectForTextLayout:(id)arg1;
- (Class)repClassForTextLayout:(id)arg1;
- (id)dependentsOfTextLayout:(id)arg1;
- (id)dependentLayouts;
- (struct CGRect)p_computeSpillingTextFrameForLayout:(id)arg1 textSize:(struct CGSize)arg2 editingSpillRange:(CDStruct_5f1f7aa9 *)arg3;
- (struct CGRect)autosizedFrameForTextLayout:(id)arg1 textSize:(struct CGSize)arg2;
- (_Bool)p_layoutWhollyContainsGridRange:(CDStruct_58eae27c)arg1;
- (struct CGSize)p_rangeUpAndLeftOfIntersectionRangeOfGridRange:(CDStruct_58eae27c)arg1;
- (struct CGRect)nonAutosizedFrameForTextLayout:(id)arg1;
- (void)invalidateForAutosizingTextLayout:(id)arg1;
- (unsigned int)verticalAlignmentForTextLayout:(id)arg1;
- (double)maxAutoGrowWidthForTextLayout:(id)arg1;
- (unsigned int)autosizeFlagsForTextLayout:(id)arg1;
- (unsigned int)naturalAlignmentForTextLayout:(id)arg1;
- (unsigned int)p_naturalAlignmentForCellID:(CDStruct_0441cfb5)arg1;
@property(readonly, nonatomic) struct CGRect computedEditingCellContentFrame;
- (_Bool)textIsVertical;
@property(readonly, nonatomic) _Bool shrinkTextToFit;
@property(readonly, nonatomic) _Bool alwaysStartsNewTarget;
- (double)positionForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2 outWidth:(double *)arg3 outGap:(double *)arg4;
- (double)gapForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2;
- (double)widthForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2;
@property(readonly, nonatomic) _Bool columnsAreLeftToRight;
@property(readonly, nonatomic) unsigned long long columnCount;
@property(readonly, nonatomic) TSWPPadding *layoutMargins;
@property(readonly, nonatomic) struct CGSize adjustedInsets;
- (struct CGRect)rectForPresentingAnnotationPopoverForSelection:(id)arg1;
- (struct CGRect)rectForSelection:(id)arg1;
- (_Bool)orderedBefore:(id)arg1;
- (struct CGPoint)calculatePointFromSearchReference:(id)arg1;
- (id)childSearchTargets;
- (void)layoutSearchForAnnotationWithHitBlock:(CDUnknownBlockType)arg1;
- (void)layoutSearchForSpellingErrorsWithHitBlock:(CDUnknownBlockType)arg1 stop:(_Bool *)arg2;
- (void)layoutSearchForString:(id)arg1 options:(unsigned long long)arg2 hitBlock:(CDUnknownBlockType)arg3;
- (void)removeContainedTextEditingLayout;
- (void)updateChildrenFromInfo;
- (id)children;
- (void)setupContainedTextEditingLayout:(CDStruct_0441cfb5)arg1;
- (void)p_updateCachedStyleInformationFromCellID:(CDStruct_0441cfb5)arg1;
- (_Bool)isBeingManipulated;
- (void)validateTableNameVisibility;
- (void)invalidateTableNameVisibility;
- (void)bezierPathsForCellRegion:(id)arg1 transform:(struct CGAffineTransform)arg2 viewScale:(double)arg3 inset:(double)arg4 block:(CDUnknownBlockType)arg5;
- (void)invalidateSize;
- (void)invalidate;
- (void)setNeedsDisplayInRect:(struct CGRect)arg1;
- (void)setNeedsDisplay;
- (void)validate;
- (_Bool)isZoomedEditing;
- (_Bool)inFindReplaceMode;
- (_Bool)inPrintPreviewMode;
- (struct CGRect)alignmentFrameForProvidingGuidesInRoot;
- (struct CGRect)alignmentFrame;
- (int)wrapFitType;
- (id)initialInfoGeometry;
- (id)computeLayoutGeometry;
- (id)layoutGeometryFromInfo;
- (struct CGPoint)capturedInfoPositionForAttachment;
- (struct CGPoint)infoGeometryPositionForCurrentAttachedLayoutGeometry;
- (struct CGSize)minimumSize;
- (_Bool)canAspectRatioLockBeChangedByUser;
- (_Bool)resizeMayChangeAspectRatio;
- (_Bool)canRotateChildLayout:(id)arg1;
- (_Bool)supportsRotation;
- (void)offsetGeometryBy:(struct CGPoint)arg1;
- (void)willBeRemovedFromLayoutController:(id)arg1;
- (void)willBeAddedToLayoutController:(id)arg1;
- (void)dealloc;
- (id)initWithInfo:(id)arg1;
- (id)initWithInfo:(id)arg1 layoutHint:(id)arg2;
@property(readonly, nonatomic) TSTTableModel *tableModel;
@property(readonly, nonatomic) TSTTableInfo *tableInfo;
@property(readonly, nonatomic) TSTEditingState *editingState;
@property(nonatomic) struct CGSize scaleToFit;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(readonly, nonatomic) double textScaleFactor;

@end

@interface TSTLayoutCellIterator : TSTCellIterator
{
    TSTMasterLayout *mMasterLayout;
    CDStruct_5f1f7aa9 mLayoutRange;
    CDStruct_0441cfb5 mLayoutCellID;
    TSTCell *mLayoutCell;
    CDStruct_6188ab8e mModelIteratorData;
    _Bool mQueriedModel;
    _Bool mModelIteratorHasCell;
    unsigned short mNumberOfLayoutColumns;
    unsigned short mNumberOfColumns;
    unsigned short mNumberOfRows;
}

@property(readonly, nonatomic) TSTMasterLayout *masterLayout; // @synthesize masterLayout=mMasterLayout;
@property(readonly, nonatomic) TSTTableModel *tableModel;
- (void)dealloc;
- (id)initWithMasterLayout:(id)arg1 range:(CDStruct_5f1f7aa9)arg2 flags:(unsigned long long)arg3;
- (id)initWithLayout:(id)arg1 range:(CDStruct_5f1f7aa9)arg2 flags:(unsigned long long)arg3;
- (id)initWithMasterLayout:(id)arg1 range:(CDStruct_5f1f7aa9)arg2;
- (id)initWithLayout:(id)arg1 range:(CDStruct_5f1f7aa9)arg2;
- (id)initWithMasterLayout:(id)arg1;
- (id)initWithLayout:(id)arg1;

@end

@interface TSTLayoutContentCachedKey : NSObject <NSCopying>
{
    NSString *mString;
    double mWidth;
    double mHeight;
    TSWPParagraphStyle *mParagraphStyle;
    _Bool mCellWraps;
    int mValueType;
    struct UIEdgeInsets mPaddingInsets;
    unsigned int mVerticalAlignment;
    int mWritingDirection;
}

@property(readonly, nonatomic) int writingDirection; // @synthesize writingDirection=mWritingDirection;
@property(readonly, nonatomic) unsigned int verticalAlignment; // @synthesize verticalAlignment=mVerticalAlignment;
@property(readonly, nonatomic) struct UIEdgeInsets paddingInsets; // @synthesize paddingInsets=mPaddingInsets;
@property(readonly, nonatomic) int valueType; // @synthesize valueType=mValueType;
@property(readonly, nonatomic) _Bool cellWraps; // @synthesize cellWraps=mCellWraps;
@property(readonly, nonatomic) TSWPParagraphStyle *paragraphStyle; // @synthesize paragraphStyle=mParagraphStyle;
@property(readonly, nonatomic) double height; // @synthesize height=mHeight;
@property(readonly, nonatomic) double width; // @synthesize width=mWidth;
@property(readonly, nonatomic) NSString *string; // @synthesize string=mString;
- (id)description;
- (_Bool)isEqualToLayoutContentCachedKey:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithString:(id)arg1 width:(double)arg2 height:(double)arg3 paragraphStyle:(id)arg4 cellWraps:(_Bool)arg5 valueType:(int)arg6 paddingInsets:(struct UIEdgeInsets)arg7 verticalAlignment:(unsigned int)arg8 writingDirection:(int)arg9;

@end

@interface TSTLayoutDynamicResizeInfo : NSObject <TSTLayoutDynamicResizeInfoProtocol>
{
    _Bool mValid;
    int mTableRowsBehavior;
    TSTCellRegion *mRowRegion;
    unsigned short mStartRowIndex;
    unsigned short mNumberOfRows;
    unsigned short mNumberOfResizableRows;
    double *mCapturedRowHeights;
    double *mCurrentRowHeights;
    double *mMinimumRowHeights;
    double mCapturedRowHeightTotal;
    TSTCellRegion *mColumnRegion;
    unsigned char mStartColumnIndex;
    unsigned short mNumberOfColumns;
    unsigned short mNumberOfResizableColumns;
    double *mCapturedColumnWidths;
    double *mCurrentColumnWidths;
    double *mMinimumColumnWidths;
    double mCapturedColumnWidthTotal;
}

- (id)columnWidths;
- (id)rowHeights;
- (void)enumerateRowHeightsUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateColumnWidthsUsingBlock:(CDUnknownBlockType)arg1;
- (struct CGSize)capturedTableSize;
- (void)captureNewMinimumRowHeights:(id)arg1;
- (double)applyColumnTotalWidth:(double)arg1;
- (double)applyRowTotalHeight:(double)arg1;
- (double)applyResizeWidthFactor:(double)arg1;
- (double)applyResizeHeightFactor:(double)arg1;
- (double)getColumnWidthResize:(unsigned char)arg1;
- (double)getRowHeightResize:(unsigned short)arg1;
- (double)getColumnWidth:(unsigned char)arg1;
- (double)getRowHeight:(unsigned short)arg1;
- (double)getColumnInitialWidth:(unsigned char)arg1;
- (double)getRowInitialHeight:(unsigned short)arg1;
- (_Bool)hasWidthForColumn:(unsigned char)arg1;
- (_Bool)hasHeightForRow:(unsigned short)arg1;
- (void)invalidate;
- (_Bool)valid;
- (void)p_captureRowColumnInformation:(id)arg1 columnRegion:(id)arg2 rowRegion:(id)arg3;
- (void)dealloc;
- (id)initWithDynamicResizeInfo:(id)arg1;
- (id)initWithMasterLayout:(id)arg1 rowRegion:(id)arg2;
- (id)initWithMasterLayout:(id)arg1 columnRegion:(id)arg2;
- (id)initWithMasterLayout:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSTLayoutHint : NSObject <TSDHint, NSCoding>
{
    _Bool mIsValid;
    _Bool mHorizontal;
    CDStruct_5f1f7aa9 mCellRange;
    CDStruct_0441cfb5 mCacheHintID;
    NSNumber *mPartitioningPass;
    unsigned int mPartitionPosition;
    struct CGSize mMaximumSize;
    struct CGSize mEffectiveSize;
    TSTLayout *mLayout;
}

+ (Class)archivedHintClass;
@property(retain, nonatomic) NSNumber *partitioningPass; // @synthesize partitioningPass=mPartitioningPass;
@property(nonatomic) _Bool horizontal; // @synthesize horizontal=mHorizontal;
@property(nonatomic) TSTLayout *layout; // @synthesize layout=mLayout;
@property(nonatomic) struct CGSize effectiveSize; // @synthesize effectiveSize=mEffectiveSize;
@property(nonatomic) struct CGSize maximumSize; // @synthesize maximumSize=mMaximumSize;
@property(nonatomic) unsigned int partitionPosition; // @synthesize partitionPosition=mPartitionPosition;
@property(nonatomic) CDStruct_0441cfb5 cacheHintID; // @synthesize cacheHintID=mCacheHintID;
@property(nonatomic) CDStruct_5f1f7aa9 cellRange; // @synthesize cellRange=mCellRange;
@property(nonatomic) _Bool isValid; // @synthesize isValid=mIsValid;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
@property(readonly, copy) NSString *description;
- (void)invalidate;
- (_Bool)isFirstHint;
- (id)lastChildHint;
- (id)firstChildHint;
- (void)offsetByDelta:(int)arg1;
- (_Bool)overlapsWithSelection:(id)arg1;
- (id)copyForArchiving;
- (oneway void)release;
- (void)dealloc;
- (id)init;
- (id)initWithRange:(CDStruct_5f1f7aa9)arg1 hintId:(CDStruct_0441cfb5)arg2 partitionPosition:(unsigned int)arg3 maximumSize:(struct CGSize)arg4 effectiveSize:(struct CGSize)arg5 layout:(id)arg6 validity:(_Bool)arg7 horizontal:(_Bool)arg8;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSTLayoutProcessChangesActions : NSObject
{
    _Bool mLayoutInvalidate;
    _Bool mLayoutInvalidateProvider;
    _Bool mLayoutInvalidateSize;
    _Bool mLayoutInvalidateTableNameVisibility;
    _Bool mLayoutSpacesInvalidateCoordinates;
    _Bool mLayoutSpacesInvalidateTableOffsets;
}

@property(nonatomic) _Bool layoutSpacesInvalidateTableOffsets; // @synthesize layoutSpacesInvalidateTableOffsets=mLayoutSpacesInvalidateTableOffsets;
@property(nonatomic) _Bool layoutSpacesInvalidateCoordinates; // @synthesize layoutSpacesInvalidateCoordinates=mLayoutSpacesInvalidateCoordinates;
@property(nonatomic) _Bool layoutInvalidateTableNameVisibility; // @synthesize layoutInvalidateTableNameVisibility=mLayoutInvalidateTableNameVisibility;
@property(nonatomic) _Bool layoutInvalidateSize; // @synthesize layoutInvalidateSize=mLayoutInvalidateSize;
@property(nonatomic) _Bool layoutInvalidateProvider; // @synthesize layoutInvalidateProvider=mLayoutInvalidateProvider;
@property(nonatomic) _Bool layoutInvalidate; // @synthesize layoutInvalidate=mLayoutInvalidate;

@end

@interface TSTLayoutSpace : NSObject
{
    TSTLayoutSpaceBundle *mBundle;
    int mLayoutSpaceType;
    struct {
        _Bool coordinates;
        _Bool tableOffset;
    } mInvalidFlags;
    CDStruct_58eae27c mGridRange;
    _Bool mHeaderColumnsRepeat;
    _Bool mHeaderRowsRepeat;
    double mViewScale;
    struct CGAffineTransform mTransformToCanvas;
    struct CGAffineTransform mTransformFromCanvas;
    struct CGAffineTransform mTransformToDevice;
    struct CGAffineTransform mTransformFromDevice;
    _Bool mDrawBlackAndWhite;
    _Bool mDrawPreventAntialias;
    struct CGPoint mTableOffset;
    TSTCoordinateArray *mHeaderRowColumnCoordinates;
    TSTCoordinateArray *mBodyColumnCoordinates;
    TSTCoordinateArray *mHeaderColumnRowCoordinates;
    TSTCoordinateArray *mBodyRowCoordinates;
    struct CGRect mCachedFrame;
    struct CGRect mCachedAlignedFrame;
    struct CGRect mCachedStrokeFrame;
    struct CGRect mCachedAlignedStrokeFrame;
    _Bool mLayoutDirectionIsLeftToRight;
    struct _opaque_pthread_rwlock_t mLock;
}

@property(nonatomic) struct CGPoint tableOffset; // @synthesize tableOffset=mTableOffset;
@property(nonatomic) _Bool drawPreventAntialias; // @synthesize drawPreventAntialias=mDrawPreventAntialias;
@property(nonatomic) _Bool drawBlackAndWhite; // @synthesize drawBlackAndWhite=mDrawBlackAndWhite;
@property(nonatomic) struct CGAffineTransform transformFromDevice; // @synthesize transformFromDevice=mTransformFromDevice;
@property(nonatomic) struct CGAffineTransform transformToDevice; // @synthesize transformToDevice=mTransformToDevice;
@property(nonatomic) struct CGAffineTransform transformFromCanvas; // @synthesize transformFromCanvas=mTransformFromCanvas;
@property(nonatomic) struct CGAffineTransform transformToCanvas; // @synthesize transformToCanvas=mTransformToCanvas;
@property(nonatomic) double viewScale; // @synthesize viewScale=mViewScale;
@property(nonatomic) _Bool headerRowsRepeat; // @synthesize headerRowsRepeat=mHeaderRowsRepeat;
@property(nonatomic) _Bool headerColumnsRepeat; // @synthesize headerColumnsRepeat=mHeaderColumnsRepeat;
@property(readonly, nonatomic) _Bool layoutDirectionIsLeftToRight; // @synthesize layoutDirectionIsLeftToRight=mLayoutDirectionIsLeftToRight;
@property(readonly, nonatomic) int layoutSpaceType; // @synthesize layoutSpaceType=mLayoutSpaceType;
@property(readonly, nonatomic) TSTLayoutSpaceBundle *bundle; // @synthesize bundle=mBundle;
- (int)validateCoordinateCache:(id)arg1;
- (void)validateCachedFrames;
- (int)validateTableOffset:(id)arg1;
- (int)validate:(id)arg1;
- (void)invalidateTableOffset;
- (void)invalidateCoordinates;
- (void)unlock;
- (void)lockForWrite;
- (void)lockForRead;
- (id)description;
- (void)dealloc;
- (id)initWithLayoutSpaceBundle:(id)arg1 type:(int)arg2;
@property(readonly, nonatomic) _Bool isCorner;
@property(readonly, nonatomic) _Bool isRows;
@property(readonly, nonatomic) _Bool isColumns;
@property(readonly, nonatomic) _Bool isRepeat;
@property(readonly, nonatomic) _Bool isFrozen;
@property(readonly, nonatomic) _Bool isMain;
- (_Bool)p_getLayoutDirectionLeftToRight;
@property(readonly, nonatomic) TSTMasterLayout *masterLayout;
@property(readonly, nonatomic) TSTLayout *layout;

@end

@interface TSTLayoutSpaceBundle : NSObject
{
    TSTLayout *mLayout;
    TSTLayoutSpace *mSpace;
    TSTLayoutSpace *mFrozenHeaderColumnsSpace;
    TSTLayoutSpace *mFrozenHeaderRowsSpace;
    TSTLayoutSpace *mFrozenHeaderCornerSpace;
    TSTLayoutSpace *mRepeatHeaderColumnsSpace;
    TSTLayoutSpace *mRepeatHeaderRowsSpace;
    TSTLayoutSpace *mRepeatHeaderCornerSpace;
}

@property(retain, nonatomic) TSTLayoutSpace *repeatHeaderCornerSpace; // @synthesize repeatHeaderCornerSpace=mRepeatHeaderCornerSpace;
@property(retain, nonatomic) TSTLayoutSpace *repeatHeaderRowsSpace; // @synthesize repeatHeaderRowsSpace=mRepeatHeaderRowsSpace;
@property(retain, nonatomic) TSTLayoutSpace *repeatHeaderColumnsSpace; // @synthesize repeatHeaderColumnsSpace=mRepeatHeaderColumnsSpace;
@property(retain, nonatomic) TSTLayoutSpace *frozenHeaderCornerSpace; // @synthesize frozenHeaderCornerSpace=mFrozenHeaderCornerSpace;
@property(retain, nonatomic) TSTLayoutSpace *frozenHeaderRowsSpace; // @synthesize frozenHeaderRowsSpace=mFrozenHeaderRowsSpace;
@property(retain, nonatomic) TSTLayoutSpace *frozenHeaderColumnsSpace; // @synthesize frozenHeaderColumnsSpace=mFrozenHeaderColumnsSpace;
@property(retain, nonatomic) TSTLayoutSpace *space; // @synthesize space=mSpace;
@property(nonatomic) TSTLayout *layout; // @synthesize layout=mLayout;
- (id)description;
- (_Bool)performActionOnRepeatLayoutSpaces:(CDUnknownBlockType)arg1;
- (_Bool)performActionOnFrozenLayoutSpaces:(CDUnknownBlockType)arg1;
- (void)performActionOnEachLayoutSpace:(CDUnknownBlockType)arg1;
- (int)validateLayoutSpaces;
- (id)getSpaceContainingCellID:(CDStruct_0441cfb5)arg1;
- (void)invalidateTableOffsets;
- (void)invalidateCoordinates;
- (void)dealloc;
- (id)initWithLayout:(id)arg1;

@end

@interface TSTLayoutTask : NSObject
{
    TSTMasterLayout *mMasterLayout;
    NSMutableArray *mCellStatesToLayout;
}

@property(retain, nonatomic) NSMutableArray *cellStatesToLayout; // @synthesize cellStatesToLayout=mCellStatesToLayout;
- (void)flushToGlobalCaches;
- (void)dealloc;
- (id)initWithMasterLayout:(id)arg1;

@end

@interface TSTMasterLayout : NSObject <TSKChangeSourceObserver>
{
    TSKChangeNotifier *mChangeNotifier;
    int mReferenceCount;
    TSTTableInfo *mTableInfo;
    TSTWPColumnCache *mCellIDToWPColumnCache;
    TSTDupContentCache *mDupContentCache;
    TSTWPColumnCache *mTempWPColumnCache;
    TSTWidthHeightCache *mWidthHeightCache;
    TSUReadWriteQueue *mWHCacheQueue;
    TSTHiddenRowsColumnsCache *mHiddenRowsColumnsCache;
    NSMutableArray *mChangeDescriptors;
    NSObject<OS_dispatch_group> *mLayoutInFlight;
    TSTLayoutTask *mCurrentLayoutTask;
    NSObject<OS_dispatch_semaphore> *mLayoutSemaphore;
    unsigned int mMaxConcurrentTasks;
    unsigned int mNumCellsPerTask;
    _Bool mHeaderColumnsFrozen;
    _Bool mHeaderRowsFrozen;
    _Bool mHeaderColumnsRepeat;
    _Bool mHeaderRowsRepeat;
    _Bool mTableNameEnabled;
    struct CGRect mTableNameBounds;
    double mCachedTableNameHeight;
    unsigned short mCachedNumberOfHeaderColumns;
    unsigned long long mCachedMaxNumberOfColumns;
    unsigned short mCachedNumberOfHeaderRows;
    unsigned short mCachedNumberOfFooterRows;
    unsigned long long mCachedMaxNumberOfRows;
    struct TSTTableStrokeDefaults *mDefaultStrokes;
    NSMutableArray *mTopRowStrokes;
    NSMutableArray *mBottomRowStrokes;
    NSMutableArray *mLeftColumnStrokes;
    NSMutableArray *mRightColumnStrokes;
    NSRecursiveLock *mStrokesLock;
    TSURetainedPointerKeyDictionary *mParaStyleToHeightCache;
    NSLock *mLock;
    _Bool mBandedFillIsValid;
    _Bool mUseBandedFill;
    TSDFill *mBandedFillObject;
    int mTableEnvironment;
    int mTableRowsBehavior;
    _Bool mTableDefaultFontHeightsAreValid;
    double mTableDefaultFontHeightForArea[4];
    _Bool mInDynamicLayoutMode;
    NSMutableSet *mDynamicLayouts;
    double mDynamicAddOrRemoveColumnElementSize;
    double mDynamicAddOrRemoveRowElementSize;
    _Bool mDynamicBandedFill;
    _Bool mDynamicBandedFillSetting;
    int mDynamicColumnAdjustment;
    id <TSTLayoutDynamicColumnSwapProtocol> mDynamicColumnSwapDelegate;
    double mDynamicColumnTabSize;
    id <TSTLayoutDynamicContentProtocol> mDynamicContentDelegate;
    TSUColor *mDynamicFontColor;
    CDStruct_5f1f7aa9 mDynamicFontColorCellRange;
    CDStruct_5f1f7aa9 mDynamicHidingRowsCols;
    int mDynamicHidingRowsColsDirection;
    CDStruct_5f1f7aa9 mDynamicHidingContent;
    CDStruct_5f1f7aa9 mDynamicHidingText;
    TSDInfoGeometry *mDynamicInfoGeometry;
    _Bool mDynamicRepResize;
    _Bool mDynamicRepressFrozenHeader;
    _Bool mDynamicResizingColumns;
    CDStruct_5f1f7aa9 mDynamicResizingColumnRange;
    double mDynamicResizingColumnAdjustment;
    _Bool mDynamicResizingRows;
    CDStruct_5f1f7aa9 mDynamicResizingRowRange;
    double mDynamicResizingRowAdjustment;
    CDStruct_5f1f7aa9 mDynamicRevealingRowsCols;
    int mDynamicRevealingRowsColsDirection;
    int mDynamicRowAdjustment;
    id <TSTLayoutDynamicRowSwapProtocol> mDynamicRowSwapDelegate;
    double mDynamicRowTabSize;
    TSDLayoutGeometry *mDynamicSavedLayoutGeometry;
    TSTCellRegion *mDynamicSelectionRegion;
    double mDynamicWidthResize;
    double mDynamicHeightResize;
    double mDynamicTableNameResize;
    TSTLayoutDynamicResizeInfo *mDynamicResizeInfo;
    CDStruct_0441cfb5 mDynamicSuppressingConditionalStylesCellID;
    TSWPEditingController *mContainedTextEditor;
    TSTMergeRangeSortedSet *mMergeRanges;
    _Bool mProcessHiddenRowsForExport;
    _Bool mEmptyFilteredTable;
    struct CGSize mMaximumPartitionSize;
}

+ (double)effectiveTableNameHeightForModel:(id)arg1;
+ (struct CGSize)tableNameTextSize:(id)arg1;
+ (id)tableNameTextEngine:(id)arg1;
@property(retain, nonatomic) TSKChangeNotifier *changeNotifier; // @synthesize changeNotifier=mChangeNotifier;
@property(nonatomic) struct CGSize maximumPartitionSize; // @synthesize maximumPartitionSize=mMaximumPartitionSize;
@property(nonatomic) _Bool processHiddenRowsForExport; // @synthesize processHiddenRowsForExport=mProcessHiddenRowsForExport;
@property(retain, nonatomic) TSTMergeRangeSortedSet *mergeRanges; // @synthesize mergeRanges=mMergeRanges;
@property(readonly, nonatomic) NSMutableArray *changeDescriptors; // @synthesize changeDescriptors=mChangeDescriptors;
@property(nonatomic) TSWPEditingController *containedTextEditor; // @synthesize containedTextEditor=mContainedTextEditor;
@property(readonly, nonatomic) CDStruct_0441cfb5 dynamicSuppressingConditionalStylesCellID; // @synthesize dynamicSuppressingConditionalStylesCellID=mDynamicSuppressingConditionalStylesCellID;
@property(readonly, nonatomic) double dynamicTableNameResize; // @synthesize dynamicTableNameResize=mDynamicTableNameResize;
@property(readonly, nonatomic) TSTCellRegion *dynamicSelectionRegion; // @synthesize dynamicSelectionRegion=mDynamicSelectionRegion;
@property(copy, nonatomic) TSDLayoutGeometry *dynamicSavedLayoutGeometry; // @synthesize dynamicSavedLayoutGeometry=mDynamicSavedLayoutGeometry;
@property(readonly, nonatomic) double dynamicRowTabSize; // @synthesize dynamicRowTabSize=mDynamicRowTabSize;
@property(readonly, nonatomic) int dynamicRowAdjustment; // @synthesize dynamicRowAdjustment=mDynamicRowAdjustment;
@property(readonly, nonatomic) CDStruct_5f1f7aa9 dynamicResizingRowRange; // @synthesize dynamicResizingRowRange=mDynamicResizingRowRange;
@property(readonly, nonatomic) double dynamicResizingRowAdjustment; // @synthesize dynamicResizingRowAdjustment=mDynamicResizingRowAdjustment;
@property(readonly, nonatomic) _Bool dynamicResizingRows; // @synthesize dynamicResizingRows=mDynamicResizingRows;
@property(readonly, nonatomic) CDStruct_5f1f7aa9 dynamicResizingColumnRange; // @synthesize dynamicResizingColumnRange=mDynamicResizingColumnRange;
@property(readonly, nonatomic) double dynamicResizingColumnAdjustment; // @synthesize dynamicResizingColumnAdjustment=mDynamicResizingColumnAdjustment;
@property(readonly, nonatomic) _Bool dynamicResizingColumns; // @synthesize dynamicResizingColumns=mDynamicResizingColumns;
@property(nonatomic) double dynamicWidthResize; // @synthesize dynamicWidthResize=mDynamicWidthResize;
@property(nonatomic) double dynamicHeightResize; // @synthesize dynamicHeightResize=mDynamicHeightResize;
@property(readonly, nonatomic) TSDInfoGeometry *dynamicInfoGeometry; // @synthesize dynamicInfoGeometry=mDynamicInfoGeometry;
@property(nonatomic) _Bool dynamicRepResize; // @synthesize dynamicRepResize=mDynamicRepResize;
@property(readonly, nonatomic) CDStruct_5f1f7aa9 dynamicFontColorCellRange; // @synthesize dynamicFontColorCellRange=mDynamicFontColorCellRange;
@property(readonly, nonatomic) TSUColor *dynamicFontColor; // @synthesize dynamicFontColor=mDynamicFontColor;
@property(readonly, nonatomic) double dynamicColumnTabSize; // @synthesize dynamicColumnTabSize=mDynamicColumnTabSize;
@property(readonly, nonatomic) int dynamicColumnAdjustment; // @synthesize dynamicColumnAdjustment=mDynamicColumnAdjustment;
@property(readonly, nonatomic) _Bool dynamicBandedFillSetting; // @synthesize dynamicBandedFillSetting=mDynamicBandedFillSetting;
@property(readonly, nonatomic) _Bool dynamicBandedFill; // @synthesize dynamicBandedFill=mDynamicBandedFill;
@property(readonly, nonatomic) double dynamicAddOrRemoveRowElementSize; // @synthesize dynamicAddOrRemoveRowElementSize=mDynamicAddOrRemoveRowElementSize;
@property(readonly, nonatomic) double dynamicAddOrRemoveColumnElementSize; // @synthesize dynamicAddOrRemoveColumnElementSize=mDynamicAddOrRemoveColumnElementSize;
@property(readonly, nonatomic) NSMutableSet *dynamicLayouts; // @synthesize dynamicLayouts=mDynamicLayouts;
@property(readonly, nonatomic) _Bool inDynamicLayoutMode; // @synthesize inDynamicLayoutMode=mInDynamicLayoutMode;
@property(nonatomic) unsigned int numCellsPerTask; // @synthesize numCellsPerTask=mNumCellsPerTask;
@property(nonatomic) unsigned int maxConcurrentTasks; // @synthesize maxConcurrentTasks=mMaxConcurrentTasks;
@property(readonly, nonatomic) TSUReadWriteQueue *whCacheQueue; // @synthesize whCacheQueue=mWHCacheQueue;
@property(readonly, nonatomic) int tableRowsBehavior; // @synthesize tableRowsBehavior=mTableRowsBehavior;
@property(nonatomic) int tableEnvironment; // @synthesize tableEnvironment=mTableEnvironment;
@property(readonly, nonatomic) TSDFill *bandedFillObject; // @synthesize bandedFillObject=mBandedFillObject;
@property(readonly, nonatomic) TSTHiddenRowsColumnsCache *hiddenRowsColumnsCache; // @synthesize hiddenRowsColumnsCache=mHiddenRowsColumnsCache;
@property(readonly, nonatomic) TSTWidthHeightCache *widthHeightCache; // @synthesize widthHeightCache=mWidthHeightCache;
@property(readonly, nonatomic) TSTWPColumnCache *tempWPColumnCache; // @synthesize tempWPColumnCache=mTempWPColumnCache;
@property(readonly, nonatomic) TSTDupContentCache *dupContentCache; // @synthesize dupContentCache=mDupContentCache;
@property(readonly, nonatomic) TSTWPColumnCache *cellIDToWPColumnCache; // @synthesize cellIDToWPColumnCache=mCellIDToWPColumnCache;
@property(nonatomic) TSTTableInfo *tableInfo; // @synthesize tableInfo=mTableInfo;
- (double)fontHeightOfParagraphStyle:(id)arg1;
- (struct UIEdgeInsets)defaultPaddingForCellID:(CDStruct_0441cfb5)arg1;
- (struct UIEdgeInsets)paddingForCellID:(CDStruct_0441cfb5)arg1;
- (struct UIEdgeInsets)edgeInsetsFromPadding:(id)arg1;
- (id)accountingParagraphStylePropertyMapForCell:(id)arg1 atCellID:(CDStruct_0441cfb5)arg2;
- (id)newTextEngineForCell:(id)arg1 atCellID:(CDStruct_0441cfb5)arg2;
- (void)waitForLayoutToComplete;
- (void)processLayoutTask:(id)arg1;
- (void)measureTextForLayoutState:(id)arg1;
- (void)queueCellForValidation:(CDStruct_5f1f7aa9)arg1 cell:(id)arg2 mergeRange:(CDStruct_5f1f7aa9)arg3 wrap:(_Bool)arg4 verticalAlignment:(unsigned int)arg5 padding:(id)arg6 prop:(_Bool)arg7 layoutCacheFlags:(int)arg8;
- (id)validateCellForDrawing:(CDStruct_0441cfb5)arg1 cell:(id)arg2 contents:(id)arg3 wrap:(_Bool)arg4 verticalAlignment:(unsigned int)arg5 padding:(id)arg6 layoutCacheFlags:(int)arg7 pageNumber:(unsigned long long)arg8 pageCount:(unsigned long long)arg9;
- (void)validateFittingWidthsForRegion:(id)arg1;
- (id)validateFittingInfoForChangeDescriptors:(id)arg1 rowsNeedingFittingInfo:(id)arg2;
- (void)p_validateFittingInfoForCellID:(CDStruct_0441cfb5)arg1 inMergeRange:(CDStruct_5f1f7aa9)arg2;
- (CDStruct_0441cfb5)p_validateFittingInfoForEmptyCellsBetween:(CDStruct_0441cfb5)arg1 andCellID:(CDStruct_0441cfb5)arg2 inRange:(CDStruct_5f1f7aa9)arg3;
- (void)p_validateFittingInfoForEmptyCellsOnSingleRowBetween:(CDStruct_0441cfb5)arg1 andEndCellID:(CDStruct_0441cfb5)arg2;
- (void)validateFittingInfoWithCellRange:(CDStruct_5f1f7aa9)arg1;
- (void)validateFittingInfoForCell:(id)arg1 cellID:(CDStruct_0441cfb5)arg2 mergeRange:(CDStruct_5f1f7aa9)arg3 setFitting:(_Bool)arg4;
- (void)validateRowVisibility:(id)arg1;
- (void)updateWHCForMergeRanges;
- (void)validateChangeDescriptorQueue;
- (void)validateMasterLayoutForChangeDescriptors:(id)arg1;
- (void)validate;
- (void)wasRemovedFromDocumentRoot;
- (void)willBeAddedToDocumentRoot:(id)arg1;
- (void)addChangeDescriptor:(id)arg1;
- (void)addChangeDescriptorWithType:(int)arg1 andCellRange:(CDStruct_5f1f7aa9)arg2 andStrokeRange:(CDStruct_5f1f7aa9)arg3;
- (void)addChangeDescriptorWithType:(int)arg1 andCellRange:(CDStruct_5f1f7aa9)arg2;
- (void)syncProcessChanges:(id)arg1 forChangeSource:(id)arg2;
- (void)p_processChange:(id)arg1 forChangeSource:(id)arg2;
@property(readonly, nonatomic) _Bool isGrouped;
- (void)validateDynamicResizeInfo;
- (void)invalidateDynamicResizeInfo;
- (void)updateDynamicResizeInfo:(id)arg1;
- (void)captureDynamicResizeInfo;
- (_Bool)isDynamicallySwappingColumns;
@property(readonly, nonatomic) id <TSTLayoutDynamicColumnSwapProtocol> dynamicColumnSwapDelegate; // @synthesize dynamicColumnSwapDelegate=mDynamicColumnSwapDelegate;
- (_Bool)isDynamicallySwappingRows;
@property(readonly, nonatomic) id <TSTLayoutDynamicRowSwapProtocol> dynamicRowSwapDelegate; // @synthesize dynamicRowSwapDelegate=mDynamicRowSwapDelegate;
- (_Bool)isDynamicallyChangingFontColorOfCellID:(CDStruct_0441cfb5)arg1;
- (_Bool)isDynamicallyChangingContent;
@property(readonly, nonatomic) id <TSTLayoutDynamicContentProtocol> dynamicContentDelegate; // @synthesize dynamicContentDelegate=mDynamicContentDelegate;
- (void)updateDynamicSuppressingConditionalStylesCellID:(CDStruct_0441cfb5)arg1;
- (void)updateDynamicColumnSwapDelegate:(id)arg1;
- (void)updateDynamicRowSwapDelegate:(id)arg1;
- (void)updateDynamicFontColor:(id)arg1 andRange:(CDStruct_5f1f7aa9)arg2;
- (void)updateDynamicContentDelegate:(id)arg1;
- (void)updateDynamicRevealingRowsCols:(int)arg1 revealingCellRange:(CDStruct_5f1f7aa9)arg2;
- (void)updateDynamicInfoGeometry:(id)arg1;
- (void)updateDynamicHidingText:(CDStruct_5f1f7aa9)arg1;
- (void)updateDynamicHidingContent:(CDStruct_5f1f7aa9)arg1;
- (void)updateDynamicHidingRowsCols:(int)arg1 hidingCellRange:(CDStruct_5f1f7aa9)arg2;
- (void)updateDynamicRepressFrozenHeader:(_Bool)arg1;
- (void)updateDynamicBandedFill:(_Bool)arg1 setting:(_Bool)arg2;
- (void)updateDynamicRowTabSize:(double)arg1;
- (void)updateDynamicColumnTabSize:(double)arg1;
- (_Bool)updateDynamicChangeRowOrColumnCount:(int)arg1 count:(int)arg2 newlyAddedElementSize:(double)arg3;
- (_Bool)isDynamicallyRepressingFrozenHeaders;
- (_Bool)isDynamicallySettingBandedFill;
- (_Bool)isDynamicallyRowTabResizing;
- (_Bool)isDynamicallyColumnTabResizing;
- (_Bool)isDynamicallyChangingSelection;
- (void)updateDynamicSelectionRegion:(id)arg1;
- (_Bool)isDynamicallyChangingRowOrColumnCount;
- (_Bool)isDynamicallyChangingColumnCount;
- (_Bool)isDynamicallyChangingRowCount;
- (_Bool)isDynamicallyResizingTableName;
- (void)updateDynamicTableNameSize:(double)arg1;
- (_Bool)isDynamicallyRevealingRowsCols:(int)arg1 rowColIndex:(unsigned short)arg2;
- (_Bool)isDynamicallyRevealingRowsCols;
- (void)updateDynamicResize:(int)arg1 resizingRange:(CDStruct_5f1f7aa9)arg2 resizeAdjustment:(double)arg3;
- (_Bool)isDynamicallyChangingInfoGeometry;
- (_Bool)isDynamicallyHidingTextOfCellID:(CDStruct_0441cfb5)arg1;
- (_Bool)isDynamicallyHidingContentOfCellID:(CDStruct_0441cfb5)arg1;
- (_Bool)isDynamicallyHidingRowsColsCellID:(CDStruct_0441cfb5)arg1;
- (_Bool)isDynamicallyHidingRowsCols:(int)arg1 rowColIndex:(unsigned short)arg2;
- (_Bool)isDynamicallyHidingRowsCols;
@property(readonly, nonatomic) TSTLayout *dynamicLayout;
@property(readonly, nonatomic) NSIndexSet *visibleColumnIndices;
@property(readonly, nonatomic) NSIndexSet *visibleRowIndices;
- (_Bool)isDynamicallyResizingCellID:(CDStruct_0441cfb5)arg1;
- (_Bool)isDynamicallyResizing:(int)arg1 rowColIndex:(unsigned short)arg2;
- (_Bool)isDynamicallyResizing:(int)arg1;
- (CDStruct_0441cfb5)layoutCellIDForModelCellID:(CDStruct_0441cfb5)arg1;
- (CDStruct_0441cfb5)modelCellIDForStrokesOfLayoutCellID:(CDStruct_0441cfb5)arg1;
- (CDStruct_0441cfb5)modelCellIDForLayoutCellID:(CDStruct_0441cfb5)arg1;
- (_Bool)cell:(id *)arg1 forCellID:(CDStruct_0441cfb5)arg2;
- (void)removeDynamicLayoutEndIfNecessary:(id)arg1;
- (void)addDynamicLayoutBeginIfNecessary:(id)arg1;
- (void)endDynamicMode;
- (void)cancelDynamicModeChanges;
- (void)p_cancelDynamicRowColCountChanges;
- (void)beginDynamicMode:(id)arg1;
- (void)calculateRawTableSize:(struct CGSize *)arg1 andStrokeDelta:(struct CGSize *)arg2;
- (void)validateDefaultFontHeights;
- (void)invalidateDefaultFontHeights;
- (void)validateTableRowsBehavior;
- (void)validateBandedFill;
- (void)invalidateBandedFill;
- (_Bool)shouldRowUseBandedFill:(unsigned short)arg1;
@property(readonly, nonatomic) _Bool useBandedFill;
- (void)validateStrokesForRegion:(id)arg1 regionAlreadyValidated:(id)arg2;
- (id)regionForStrokeValidationFromChangeDescriptors:(id)arg1;
- (unsigned int)tableAreaForCellID:(CDStruct_0441cfb5)arg1;
- (void)invalidateTableNameHeight;
- (double)calculatedTableNameHeightIncludingDynamicResize:(_Bool)arg1;
- (double)calculatedTableNameHeight;
- (double)tableNameHeight;
- (struct CGSize)tableNameTextSize;
- (id)tableNameTextEngine;
- (void)clearModelHeightWidthCacheForCellRange:(CDStruct_5f1f7aa9)arg1;
- (void)resetModelHeightWidthCache;
- (void)validateLayoutHint:(id)arg1;
- (_Bool)hintIsValid:(id)arg1;
- (id)newLayoutHint;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)initWithInfo:(id)arg1;
@property(readonly, nonatomic) _Bool emptyFilteredTable; // @synthesize emptyFilteredTable=mEmptyFilteredTable;
@property(readonly, nonatomic) TSTTableModel *tableModel;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSTMergeRangeSortedSet : NSObject
{
    struct set<TSTMergeRangeElem, TSTMergeRangeElemCompare, std::__1::allocator<TSTMergeRangeElem>> *mSet;
    struct __tree_const_iterator<TSTMergeRangeElem, std::__1::__tree_node<TSTMergeRangeElem, void *>*, long> {
        struct __tree_node<TSTMergeRangeElem, void *> *__ptr_;
    } mIter;
    NSObject<OS_dispatch_semaphore> *mSem;
}

- (id).cxx_construct;
- (void)reset;
- (struct UIEdgeInsets)getPaddingInsets;
- (_Bool)isCheckbox;
- (struct CGSize)getSize;
- (CDStruct_5f1f7aa9)iter;
- (CDStruct_5f1f7aa9)begin;
- (unsigned long long)count;
- (void)addRange:(CDStruct_5f1f7aa9)arg1 andSize:(struct CGSize)arg2 andPaddingInsets:(struct UIEdgeInsets)arg3 andIsCheckbox:(_Bool)arg4;
- (void)dealloc;
- (id)init;

@end

@interface TSTMergeRegionMap : TSPObject
{
    struct hash_map<TSUColumnRowCoordinate, TSUColumnRowCoordinate, TSTCellIDHasher, std::__1::equal_to<TSUColumnRowCoordinate>, std::__1::allocator<std::__1::pair<const TSUColumnRowCoordinate, TSUColumnRowCoordinate>>> mCellIDToMergeRegionTopLeft;
    struct hash_map<TSUColumnRowCoordinate, TSUColumnRowSize, TSTCellIDHasher, std::__1::equal_to<TSUColumnRowCoordinate>, std::__1::allocator<std::__1::pair<const TSUColumnRowCoordinate, TSUColumnRowSize>>> mMergeRegionTopLeftToMergeRegionSize;
    CDStruct_5f1f7aa9 mUnionedMergeRange;
}

+ (id)mergeRegionMapFromMap:(id)arg1 intersectingRange:(CDStruct_5f1f7aa9)arg2;
- (id).cxx_construct;
- (void).cxx_destruct;
- (_Bool)hasRangeSpanningRows;
- (id)mergedGridIndicesForDimension:(int)arg1;
- (_Bool)find:(CDStruct_5f1f7aa9)arg1;
- (CDStruct_5f1f7aa9)unionedMergeRange;
- (_Bool)partiallyIntersectsCellRegion:(id)arg1;
- (_Bool)partiallyIntersectsCellRange:(CDStruct_5f1f7aa9)arg1;
- (CDStruct_5f1f7aa9)mergedRangeForCellID:(CDStruct_0441cfb5)arg1;
- (_Bool)remove:(CDStruct_5f1f7aa9)arg1;
- (_Bool)insert:(CDStruct_5f1f7aa9)arg1;
- (id)description;
- (unsigned long long)count;
- (id)iterator;
- (id)initWithContext:(id)arg1;
- (id)initRegionMapFromMap:(id)arg1 intersectingRange:(CDStruct_5f1f7aa9)arg2;
- (id)initRegionMapFromMap:(id)arg1 rowRemapping:(id)arg2;

@end

@interface TSTMergeRegionMapIterator : NSObject
{
    TSTMergeRegionMap *mMergeRegionMap;
    struct __hash_map_iterator<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowSize>, void *>*>> {
        struct __hash_iterator<std::__1::__hash_node<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowSize>, void *>*> {
            struct __hash_node<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowSize>, void *> *__node_;
        } __i_;
    } mMergeRegionIterator;
}

- (id).cxx_construct;
- (void)reset;
- (void)dealloc;
- (_Bool)hasNextMergeRegion;
- (CDStruct_5f1f7aa9)nextMergeRegion;
- (id)initWithMergeRegionMap:(id)arg1;

@end

@interface TSTRichTextPayload : TSPObject <TSPCopying>
{
    TSWPStorage *mStorage;
}

- (_Bool)requiresRichText;
- (id)string;
- (id)copyWithContext:(id)arg1;
- (void)dealloc;
- (id)initWithContext:(id)arg1 storage:(id)arg2;
- (id)initWithStorage:(id)arg1;
@property(retain, nonatomic) TSWPStorage *storage; // @synthesize storage=mStorage;

@end

@interface TSTSearchReference : NSObject <TSKSearchReference>
{
    TSTTableInfo *_tableInfo;
    CDStruct_0441cfb5 _cellID;
    struct _NSRange _range;
    _Bool _autohideHighlight;
    _Bool _pulseHighlight;
    NSArray *_findHighlights;
    id <TSKAnnotation> annotation;
    struct CGPoint searchReferencePoint;
}

+ (id)searchReferenceWithTableInfo:(id)arg1 cellID:(CDStruct_0441cfb5)arg2 range:(struct _NSRange)arg3;
@property(retain, nonatomic) id <TSKAnnotation> annotation; // @synthesize annotation;
@property(nonatomic) struct CGPoint searchReferencePoint; // @synthesize searchReferencePoint;
@property(nonatomic) _Bool pulseHighlight; // @synthesize pulseHighlight=_pulseHighlight;
@property(nonatomic) _Bool autohideHighlight; // @synthesize autohideHighlight=_autohideHighlight;
@property(retain, nonatomic) NSArray *findHighlights; // @synthesize findHighlights=_findHighlights;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)searchReferenceEnd;
- (id)searchReferenceStart;
- (id)searchReferenceForReplacingWithString:(id)arg1 options:(unsigned long long)arg2 authorCreatedWithCommand:(id *)arg3;
- (_Bool)isReplaceable;
- (id)selection;
- (id)tableInfo;
- (id)model;
- (id)commandForReplacingWithString:(id)arg1 options:(unsigned long long)arg2;
@property(readonly, copy) NSString *description;
- (CDStruct_0441cfb5)cellID;
- (void)setCellID:(CDStruct_0441cfb5)arg1;
- (struct _NSRange)range;
- (void)setRange:(struct _NSRange)arg1;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)initWithTableInfo:(id)arg1 cellID:(CDStruct_0441cfb5)arg2 range:(struct _NSRange)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSTStrokeAssociatedObject : NSObject
{
    _Bool dontClearBackground;
}

@property(nonatomic) _Bool dontClearBackground; // @synthesize dontClearBackground;

@end

@interface TSTStrokeRunArray : NSObject
{
    _Bool mHasCustomStrokes;
    double mMaxWidth;
    unsigned int mCount;
    unsigned int mAllocCount;
    unsigned int mLastLookup;
    struct TSTStrokeRun *mStrokes;
    struct _opaque_pthread_rwlock_t mRWLock;
}

@property(readonly, nonatomic) double maxWidth; // @synthesize maxWidth=mMaxWidth;
- (id)description;
- (void)dealloc;
- (id)initWithCount:(unsigned int)arg1;

@end

@interface TSTTableBadge : NSObject
{
    int _badgeType;
    TSUColor *_color;
    double _viewScale;
    struct CGRect _frame;
}

+ (id)badgeWithType:(int)arg1 color:(id)arg2 viewScale:(double)arg3 frame:(struct CGRect)arg4;
@property(nonatomic) struct CGRect frame; // @synthesize frame=_frame;
@property(nonatomic) double viewScale; // @synthesize viewScale=_viewScale;
@property(retain, nonatomic) TSUColor *color; // @synthesize color=_color;
@property(nonatomic) int badgeType; // @synthesize badgeType=_badgeType;
- (void)drawInContext:(struct CGContext *)arg1;

@end

@interface TSTTableDataObject : NSObject
{
    unsigned int mRefCount;
}

@end

@interface TSTTableDataCommentStorage : TSTTableDataObject
{
    TSDCommentStorage *mCommentStorage;
}

- (void)dealloc;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)initObjectWithCommentStorage:(id)arg1;

@end

@interface TSTTableDataConditionalStyleSet : TSTTableDataObject
{
    TSTConditionalStyleSet *mConditionalStyleSet;
}

- (void)dealloc;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)initObjectWithConditionalStyleSet:(id)arg1;

@end

@interface TSTTableDataCustomFormat : TSTTableDataObject
{
    struct TSUCustomFormat *mCustomFormat;
}

- (void)dealloc;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)initObjectWithCustomFormat:(struct TSUCustomFormat *)arg1;

@end

@interface TSTTableDataFormat : TSTTableDataObject
{
    CDStruct_95e644ef mFormat;
}

- (void)dealloc;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)initObjectWithFormat:(CDStruct_95e644ef)arg1;

@end

@interface TSTTableDataFormulaError : TSTTableDataObject
{
    TSWPStorage *mFormulaError;
}

- (void)dealloc;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)initObjectWithFormulaError:(id)arg1;

@end

@interface TSTTableDataMultipleChoiceList : TSTTableDataObject
{
    TSTPopUpMenuModel *mPopUpMenuModel;
}

- (void)dealloc;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)initObjectWithPopUpMenuModel:(id)arg1;

@end

@interface TSTTableDataObjectKeyDict : NSObject
{
    struct hash_map<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int, TSTTableDataObjectHasher, TSTTableDataObjectEqual, std::__1::allocator<std::__1::pair<const SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>>> *mMap;
}

- (unsigned long long)count;
- (void)removeAllKeys;
- (void)removeKeyForObject:(id)arg1;
- (void)setKey:(unsigned int)arg1 forObject:(id)arg2;
- (unsigned int)keyForObject:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface TSTTableDataRichTextPayload : TSTTableDataObject
{
    TSTRichTextPayload *mPayload;
}

- (void)dealloc;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)initObjectWithRichTextPayload:(id)arg1;

@end

@interface TSTTableDataStore : TSPContainedObject
{
    struct TSTTableRBTreeNode_s *mColumnTileIndex;
    struct TSTTableRBTreeNode_s *mRowTileIndex;
    TSTTileIDKeyDict *mTileStorage;
    TSTTableHeaderStorage *mRowHeaderStorage;
    TSPLazyReference *mColumnHeaderStorageReference;
    TSPLazyReference *mConditionalStyleSetTableReference;
    TSPLazyReference *mStringTableReference;
    TSPLazyReference *mStyleTableReference;
    TSPLazyReference *mFormulaTableReference;
    TSPLazyReference *mFormulaErrorTableReference;
    TSPLazyReference *mRichTextPayloadTableReference;
    TSPLazyReference *mFormatTableReference;
    TSPLazyReference *mMultipleChoiceListFormatTableReference;
    TSPLazyReference *mCommentStorageTableReference;
    TSTCustomFormatList *mPasteboardCustomFormatList;
    unsigned short mNextRowStripID;
    unsigned short mNextColumnStripID;
    TSTMergeRegionMap *mMergedCellRanges;
    unsigned int mCellCount;
    _Bool mCellCountValid;
    _Bool mDrawableIsBeingCopied;
    unsigned int mStorageVersion;
}

- (void)validate;
- (void)debugDump;
- (void)upgradeDataStoreCellStorage;
- (_Bool)needToUpgradeCellStorage;
- (void)setStorageParentToInfo:(id)arg1;
- (void)p_updateTileStorageToCurrentVersion;
- (void)setDrawableIsBeingCopied:(_Bool)arg1;
- (void)dealloc;
- (id)initWithOwner:(id)arg1;

@end

@interface TSTTableDataString : TSTTableDataObject
{
    NSString *mString;
}

- (void)dealloc;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)initObjectWithString:(id)arg1;

@end

@interface TSTTableDataStyle : TSTTableDataObject
{
    TSSStyle *mStyle;
}

- (void)dealloc;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)initObjectWithStyle:(id)arg1;

@end

@interface TSTTableHeaderInfo : NSObject
{
    TSTCellStyle *mCellStyle;
    TSWPParagraphStyle *mTextStyle;
    double mSize;
    unsigned char mHidingState;
    unsigned short mNumberOfCells;
}

@property(nonatomic) unsigned short numberOfCells; // @synthesize numberOfCells=mNumberOfCells;
@property(nonatomic) unsigned char hidingState; // @synthesize hidingState=mHidingState;
@property(nonatomic) double size; // @synthesize size=mSize;
@property(retain, nonatomic) TSWPParagraphStyle *textStyle; // @synthesize textStyle=mTextStyle;
@property(retain, nonatomic) TSTCellStyle *cellStyle; // @synthesize cellStyle=mCellStyle;
- (id)description;
- (void)dealloc;

@end

@interface TSTTableHeaderStorage : TSPContainedObject <TSTTableHeaderStorage>
{
    TSTTableHeaderStorageBucket *mBuckets[1];
}

- (unsigned int)lowerBound:(unsigned int)arg1;
- (unsigned int)upperBound:(unsigned int)arg1;
- (unsigned int)maxKey;
- (unsigned int)minKey;
- (long long)count;
- (void)shiftKeysAtIndex:(unsigned int)arg1 amount:(int)arg2;
- (void)applyFunction:(CDUnknownFunctionPointerType)arg1 withState:(void *)arg2 willModify:(_Bool)arg3;
- (void)makeHeadersPerformSelector:(SEL)arg1 willModify:(_Bool)arg2;
- (void)removeAllHeaders;
- (void)removeHeaderForKey:(unsigned int)arg1;
- (void)setHeader:(id)arg1 forKey:(unsigned int)arg2;
- (id)headerForKey:(unsigned int)arg1 willModify:(_Bool)arg2 createIfNotThere:(_Bool)arg3;
- (id)headerForKey:(unsigned int)arg1 willModify:(_Bool)arg2;
- (void)dealloc;
- (id)initWithOwner:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSTTableHeaderStorageBucket : TSPObject <TSTTableHeaderStorage>
{
    struct map<unsigned int, SFUtility::ObjcSharedPtr<NSObject>, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, SFUtility::ObjcSharedPtr<NSObject>>>> *mMap;
    double mHorizontalScaleFactor;
}

@property(nonatomic) double horizontalScaleFactor; // @synthesize horizontalScaleFactor=mHorizontalScaleFactor;
- (unsigned int)lowerBound:(unsigned int)arg1;
- (unsigned int)upperBound:(unsigned int)arg1;
- (unsigned int)maxKey;
- (unsigned int)minKey;
- (long long)count;
- (void)shiftKeysAtIndex:(unsigned int)arg1 amount:(int)arg2;
- (void)applyFunction:(CDUnknownFunctionPointerType)arg1 withState:(void *)arg2 willModify:(_Bool)arg3;
- (void)makeHeadersPerformSelector:(SEL)arg1 willModify:(_Bool)arg2;
- (void)removeAllHeaders;
- (void)removeHeaderForKey:(unsigned int)arg1;
- (void)setHeader:(id)arg1 forKey:(unsigned int)arg2;
- (id)headerForKey:(unsigned int)arg1 willModify:(_Bool)arg2 createIfNotThere:(_Bool)arg3;
- (id)headerForKey:(unsigned int)arg1 willModify:(_Bool)arg2;
- (id)packageLocator;
- (unsigned long long)flushableSize;
- (void)dealloc;
- (id)initWithContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSTTableInfo : TSDDrawableInfo <TSKModel, TSKSearchable, TSSThemedObject, TSSPresetSource, TSSStyleClient, TSDContainerInfo, TSDMixing, TSWPStorageParent>
{
    TSTTableModel *mTableModel;
    _Bool mIsFormulaEditing;
    _Bool mHasReference;
    CDStruct_0441cfb5 mEditingCellID;
    CDStruct_0441cfb5 mPreviousEditingCellID;
    TSTTablePartitioner *mPartitioner;
    TSTMasterLayout *mMasterLayout;
    TSTEditingState *mEditingState;
}

+ (id)presetKinds;
+ (void)bootstrapPresetsOfKind:(id)arg1 inTheme:(id)arg2 alternate:(int)arg3 reservedCount:(unsigned long long)arg4;
+ (void)bootstrapPresetsOfKind:(id)arg1 inTheme:(id)arg2 alternate:(int)arg3;
+ (_Bool)canPartition;
+ (id)tablePrototypeWithIndex:(long long)arg1 context:(id)arg2 geometry:(id)arg3 styles:(id)arg4;
+ (id)geometryForPrototypeIndex:(long long)arg1 withCanvasPoint:(struct CGPoint)arg2;
+ (unsigned short)numberOfColumnsForProtoIndex:(unsigned long long)arg1;
+ (unsigned short)numberOfRowsForProtoIndex:(unsigned long long)arg1;
@property(nonatomic) _Bool hasReference; // @synthesize hasReference=mHasReference;
@property(nonatomic, getter=isFormulaEditing) _Bool formulaEditing; // @synthesize formulaEditing=mIsFormulaEditing;
@property(readonly, nonatomic) CDStruct_0441cfb5 previousEditingCellID; // @synthesize previousEditingCellID=mPreviousEditingCellID;
@property(retain, nonatomic) TSTEditingState *editingState; // @synthesize editingState=mEditingState;
@property(nonatomic) CDStruct_0441cfb5 editingCellID; // @synthesize editingCellID=mEditingCellID;
- (void)performBlockWithStylesheetForAddingStyles:(CDUnknownBlockType)arg1;
- (void)didReplaceTextsInStoragesWithPlaceHolderString;
- (id)allWPStorages;
- (_Bool)textIsVertical;
- (_Bool)autoListTermination;
- (_Bool)autoListRecognition;
- (void)didCopy;
- (void)willCopyWithOtherDrawables:(id)arg1;
- (void)debugDump;
- (void)validate;
@property(readonly, nonatomic) CDStruct_5f1f7aa9 editingCellRange;
- (id)childInfos;
- (id)mergedContainedStorages;
- (id)descriptionForPasteboardWithSource:(id)arg1;
- (id)descriptionForExactCopy;
- (id)descriptionForPasteboard;
- (id)childCommandForApplyThemeCommand:(id)arg1;
- (void)replaceReferencedStylesUsingBlock:(CDUnknownBlockType)arg1;
- (id)referencedStyles;
- (void)adoptStylesheet:(id)arg1 withMapper:(id)arg2;
- (id)childCommandForReplaceAllCommand:(id)arg1;
- (id)searchForAnnotationsWithHitBlock:(CDUnknownBlockType)arg1;
- (id)searchForString:(id)arg1 options:(unsigned long long)arg2 onHit:(CDUnknownBlockType)arg3;
- (void)acceptVisitor:(id)arg1;
- (id)childEnumerator;
- (void)wasRemovedFromDocumentRoot:(id)arg1;
- (void)willBeRemovedFromDocumentRoot:(id)arg1;
- (void)wasAddedToDocumentRoot:(id)arg1 context:(id)arg2;
- (void)willBeAddedToDocumentRoot:(id)arg1 context:(id)arg2;
- (_Bool)canAspectRatioLockBeChangedByUser;
- (void)scaleInfoGeometry:(struct CGSize)arg1;
@property(nonatomic) long long contentWritingDirection;
@property(copy, nonatomic) TSDInfoGeometry *geometry; // @dynamic geometry;
- (void)setGeometry:(id)arg1 resizeInternal:(_Bool)arg2;
- (void)setGeometry:(id)arg1 resizeInternal:(_Bool)arg2 scaleFactor:(struct CGSize)arg3 shouldClearObjectPlaceholderFlag:(_Bool)arg4;
- (void)setGeometry:(id)arg1 resizeInternal:(_Bool)arg2 scaleFactor:(struct CGSize)arg3;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (_Bool)reverseChunkingIsSupported;
- (unsigned long long)textureDeliveryStyleFromDeliveryString:(id)arg1;
- (id)textureDeliveryStylesLocalized:(_Bool)arg1 animationFilter:(id)arg2;
- (unsigned long long)chunkCountForTextureDeliveryStyle:(unsigned long long)arg1 animationFilter:(id)arg2;
- (Class)layoutClass;
- (_Bool)supportsAttachedComments;
- (int)elementKind;
@property(readonly, nonatomic) TSTMasterLayout *masterLayout;
- (void)clearPartitioner;
@property(readonly, nonatomic) TSTTablePartitioner *partitioner;
- (_Bool)supportsHyperlinks;
- (Class)editorClass;
- (Class)repClass;
@property(readonly, nonatomic) TSTTableModel *tableModel;
@property(readonly, nonatomic) TSKDocumentRoot *documentRoot;
- (_Bool)isSafeToConvertToText;
- (_Bool)isSafeToConvertToAttributedString;
- (_Bool)isSafeToConvertToImage;
- (double)masterLayoutEffectiveTableNameHeight;
- (void)shiftGeometryToExcludeTableNameHeight;
- (void)shiftGeometryToIncludeTableNameHeight;
- (void)p_didLoadRichTextPayloadTable:(id)arg1;
- (void)setupTableModelForPrototypeIndex:(long long)arg1;
- (id)copyWithContext:(id)arg1;
- (void)dealloc;
- (id)initWithContext:(id)arg1 fromSourceInfo:(id)arg2 carrySelection:(_Bool)arg3;
- (id)initWithContext:(id)arg1 fromSourceInfo:(id)arg2 cellRegion:(id)arg3 carrySelection:(_Bool)arg4;
- (id)initWithContext:(id)arg1 otherTableInfo:(id)arg2;
- (id)initWithContext:(id)arg1 geometry:(id)arg2;
- (id)initWithContext:(id)arg1 geometry:(id)arg2 styles:(id)arg3;
- (id)initForTestingWithContext:(id)arg1 rows:(unsigned short)arg2 columns:(unsigned short)arg3;
- (id)initWithContext:(id)arg1 geometry:(id)arg2 rows:(unsigned short)arg3 columns:(unsigned short)arg4 styles:(id)arg5;
- (id)tabularTextRepresentation;

// Remaining properties
@property(readonly, nonatomic, getter=isAnchoredToText) _Bool anchoredToText; // @dynamic anchoredToText;
@property(readonly, nonatomic, getter=isAttachedToBodyText) _Bool attachedToBodyText;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic, getter=isFloatingAboveText) _Bool floatingAboveText; // @dynamic floatingAboveText;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic, getter=isInlineWithText) _Bool inlineWithText; // @dynamic inlineWithText;
@property(nonatomic) _Bool matchesObjectPlaceholderGeometry;
@property(nonatomic) TSPObject<TSDOwningAttachment> *owningAttachment; // @dynamic owningAttachment;
@property(readonly, nonatomic) TSPObject<TSDOwningAttachment> *owningAttachmentNoRecurse; // @dynamic owningAttachmentNoRecurse;
@property(nonatomic) NSObject<TSDContainerInfo> *parentInfo; // @dynamic parentInfo;
@property(readonly) Class superclass;

@end

@interface TSTTableModel : TSPObject
{
    TSTTableDataStore *mDataStore;
    struct __CFUUID *mTableID;
    struct __CFUUID *mFromTableID;
    unsigned short mNumberOfRows;
    unsigned short mNumberOfColumns;
    unsigned short mNumberOfHeaderRows;
    unsigned short mNumberOfHeaderColumns;
    unsigned short mNumberOfFooterRows;
    _Bool mHeaderRowsFrozen;
    _Bool mHeaderColumnsFrozen;
    unsigned short mNumberOfHiddenRows;
    unsigned short mNumberOfHiddenColumns;
    unsigned short mNumberOfUserHiddenRows;
    unsigned short mNumberOfUserHiddenColumns;
    unsigned short mNumberOfFilteredRows;
    double mDefaultRowHeight;
    double mDefaultColumnWidth;
    NSString *mTableName;
    _Bool mTableNameEnabled;
    double mTableNameHeight;
    _Bool mTableNameBorderEnabled;
    _Bool mRepeatingHeaderRowsEnabled;
    _Bool mRepeatingHeaderColumnsEnabled;
    unsigned long long mPresetIndex;
    _Bool mStyleApplyClearsAll;
    struct {
        TSTTableStyle *tableStyle;
        TSTCellStyle *bodyCellStyle;
        TSTCellStyle *headerRowCellStyle;
        TSTCellStyle *headerColumnCellStyle;
        TSTCellStyle *footerRowCellStyle;
        TSWPParagraphStyle *bodyTextStyle;
        TSWPParagraphStyle *headerRowTextStyle;
        TSWPParagraphStyle *headerColumnTextStyle;
        TSWPParagraphStyle *footerRowTextStyle;
        TSWPParagraphStyle *tableNameStyle;
        TSWPShapeStyle *tableNameShapeStyle;
    } mStyles;
    struct _TSTDefaultCellBlock mDefaultCells;
    TSTCellDictionary *mCellsPendingWrite;
    TSWPStorage *mDeprecatedProvider;
    _Bool mWasUnarchivedFromAProvidedTable;
}

+ (CDStruct_5f1f7aa9)cellRangeForTableArea:(unsigned int)arg1 givenTableSize:(CDStruct_d65e47c4)arg2 numberOfHeaderRows:(unsigned short)arg3 numberOfFooterRows:(unsigned short)arg4 numberOfHeaderColumns:(unsigned short)arg5;
+ (unsigned int)tableAreaForCellID:(CDStruct_0441cfb5)arg1 inTableWithHeaderColumns:(unsigned short)arg2 headerRows:(unsigned short)arg3 footerRows:(unsigned short)arg4 totalRows:(unsigned short)arg5;
+ (id)unnamedTableString;
@property(readonly, nonatomic) TSTCellDictionary *cellsPendingWrite; // @synthesize cellsPendingWrite=mCellsPendingWrite;
@property(nonatomic) _Bool wasUnarchivedFromAProvidedTable; // @synthesize wasUnarchivedFromAProvidedTable=mWasUnarchivedFromAProvidedTable;
@property(readonly, nonatomic) unsigned short numberOfUserHiddenColumns; // @synthesize numberOfUserHiddenColumns=mNumberOfUserHiddenColumns;
@property(readonly, nonatomic) unsigned short numberOfUserHiddenRows; // @synthesize numberOfUserHiddenRows=mNumberOfUserHiddenRows;
@property(readonly, nonatomic) unsigned short numberOfHiddenColumns; // @synthesize numberOfHiddenColumns=mNumberOfHiddenColumns;
@property(readonly, nonatomic) unsigned short numberOfHiddenRows; // @synthesize numberOfHiddenRows=mNumberOfHiddenRows;
- (id)allRichTextPayloadStorages;
- (void)upgradeFromPreUFF;
- (void)transformStrokes:(struct CGAffineTransform)arg1 transformedObjects:(id)arg2 inBounds:(struct CGRect)arg3;
- (void)p_scaleStrokesOnCell:(id)arg1 atCellID:(CDStruct_0441cfb5)arg2 transformedObjects:(id)arg3 scale:(double)arg4;
- (void)p_scaleStrokeFromProperty:(int)arg1 style:(id)arg2 pmap:(id)arg3 scale:(double)arg4;
- (CDStruct_5f1f7aa9)minPopulatedCellRange;
- (void)validate;
- (void)private_validateMergeCellsPedantically;
- (void)validateStyles;
- (void)moveCalcEngineReferencesFromSourceTable:(struct __CFUUID *)arg1 sourceRange:(CDStruct_5f1f7aa9)arg2 sourceOffset:(CDStruct_79c71658)arg3;
- (void)adoptStylesheet:(id)arg1 withMapper:(id)arg2;
- (void)mapTableStylesToStylesheet:(id)arg1 withMapper:(id)arg2;
- (id)cellRegionWithConditionalStyleMatchingCell:(CDStruct_0441cfb5)arg1;
- (void)defaultStrokesForCellID:(CDStruct_0441cfb5)arg1 inTableWithHeaderColumns:(unsigned short)arg2 headerRows:(unsigned short)arg3 footerRows:(unsigned short)arg4 totalColumns:(unsigned short)arg5 totalRows:(unsigned short)arg6 tableArea:(unsigned int)arg7 outTopStroke:(id *)arg8 outLeftStroke:(id *)arg9 outBottomStroke:(id *)arg10 outRightStroke:(id *)arg11;
- (void)defaultStrokesForCellID:(CDStruct_0441cfb5)arg1 outTopStroke:(id *)arg2 outLeftStroke:(id *)arg3 outBottomStroke:(id *)arg4 outRightStroke:(id *)arg5;
@property(readonly, nonatomic) TSDStroke *footerRowSeparatorStroke;
@property(readonly, nonatomic) TSDStroke *footerRowBodyRowStroke;
@property(readonly, nonatomic) TSDStroke *footerRowBodyColumnStroke;
@property(readonly, nonatomic) TSDStroke *footerRowBorderStroke;
@property(readonly, nonatomic) TSDStroke *headerRowSeparatorStroke;
@property(readonly, nonatomic) TSDStroke *headerRowBodyRowStroke;
@property(readonly, nonatomic) TSDStroke *headerRowBodyColumnStroke;
@property(readonly, nonatomic) TSDStroke *headerRowBorderStroke;
@property(readonly, nonatomic) TSDStroke *headerColumnSeparatorStroke;
@property(readonly, nonatomic) TSDStroke *headerColumnBodyRowStroke;
@property(readonly, nonatomic) TSDStroke *headerColumnBodyColumnStroke;
@property(readonly, nonatomic) TSDStroke *headerColumnBorderStroke;
@property(readonly, nonatomic) TSDStroke *bodyRowStroke;
@property(readonly, nonatomic) TSDStroke *bodyColumnStroke;
@property(readonly, nonatomic) TSDStroke *parentBorderStroke;
@property(readonly, nonatomic) TSDStroke *borderStrokeEvenIfNotVisible;
@property(readonly, nonatomic) TSDFill *footerRowsFill;
@property(readonly, nonatomic) TSDFill *headerRowsFill;
@property(readonly, nonatomic) TSDFill *headerColumnsFill;
@property(readonly, nonatomic) TSDFill *bodyFill;
@property(readonly, nonatomic) TSDFill *backgroundFill;
- (id)mergedGridIndicesForDirection:(int)arg1;
- (_Bool)hasMergeRanges;
@property(readonly, nonatomic) unsigned short numberOfVisibleBodyColumns;
@property(readonly, nonatomic) unsigned short numberOfVisibleBodyRows;
- (int)hidingStateForColumn:(unsigned char)arg1;
- (int)hidingStateForRow:(unsigned short)arg1;
- (_Bool)isColumnHidden:(unsigned char)arg1 forAction:(int)arg2;
- (_Bool)isRowHidden:(unsigned short)arg1 forAction:(int)arg2;
- (CDStruct_5f1f7aa9)footerRowRange;
- (CDStruct_5f1f7aa9)headerColumnRange;
- (CDStruct_5f1f7aa9)headerRowRange;
- (CDStruct_5f1f7aa9)bodyRowRange;
- (CDStruct_5f1f7aa9)bodyColumnRange;
- (CDStruct_5f1f7aa9)bodyRange;
- (CDStruct_5f1f7aa9)range;
@property NSArray *rowHeights;
@property NSArray *columnWidths;
- (void)setWidth:(double)arg1 ofColumn:(unsigned char)arg2;
- (void)setHeight:(double)arg1 ofRow:(unsigned short)arg2;
- (id)defaultTextStyleForTableArea:(unsigned int)arg1;
- (id)defaultCellStyleForTableArea:(unsigned int)arg1;
- (void)p_fetchCellHoldingReadLock:(void *)arg1 returnCode:(void *)arg2;
- (int)defaultCell:(id)arg1 forTableArea:(unsigned int)arg2;
- (id)defaultCellForTableArea:(unsigned int)arg1;
- (CDStruct_5f1f7aa9)cellRangeForTableArea:(unsigned int)arg1;
- (unsigned int)tableAreaForCellID:(CDStruct_0441cfb5)arg1;
- (void)setStorageParentToInfo:(id)arg1;
- (id)bandedFillObject;
- (_Bool)useBandedFill;
@property(readonly, nonatomic) TSTCell *defaultHeaderColumnCell;
@property(readonly, nonatomic) TSTCell *defaultHeaderRowCell;
@property(readonly, nonatomic) TSTCell *defaultFooterRowCell;
@property(readonly, nonatomic) TSTCell *defaultBodyCell;
@property(readonly, nonatomic) struct __CFUUID *fromTableID;
- (void)setTableID:(struct __CFUUID *)arg1;
@property(readonly, nonatomic) struct __CFUUID *tableID;
- (id)dataStore;
@property(readonly, nonatomic) TSDStroke *tableNameBorderStroke;
@property(readonly, nonatomic) _Bool hasAlternatingRows;
@property(readonly, nonatomic) _Bool hasTableBorder;
- (void)setTableNameShapeStyle:(id)arg1;
@property(readonly, nonatomic) TSWPShapeStyle *tableNameShapeStyle;
- (void)setTableNameStyle:(id)arg1;
@property(readonly, nonatomic) TSWPParagraphStyle *tableNameStyle;
- (void)setFooterRowTextStyle:(id)arg1;
@property(readonly, nonatomic) TSWPParagraphStyle *footerRowTextStyle;
- (void)setHeaderColumnTextStyle:(id)arg1;
@property(readonly, nonatomic) TSWPParagraphStyle *headerColumnTextStyle;
- (void)setHeaderRowTextStyle:(id)arg1;
@property(readonly, nonatomic) TSWPParagraphStyle *headerRowTextStyle;
- (void)setBodyTextStyle:(id)arg1;
@property(readonly, nonatomic) TSWPParagraphStyle *bodyTextStyle;
- (void)setFooterRowCellStyle:(id)arg1;
@property(readonly, nonatomic) TSTCellStyle *footerRowCellStyle;
- (void)setHeaderColumnCellStyle:(id)arg1;
@property(readonly, nonatomic) TSTCellStyle *headerColumnCellStyle;
- (void)setHeaderRowCellStyle:(id)arg1;
@property(readonly, nonatomic) TSTCellStyle *headerRowCellStyle;
- (void)setBodyCellStyle:(id)arg1;
@property(readonly, nonatomic) TSTCellStyle *bodyCellStyle;
- (void)setTableStyle:(id)arg1;
@property(readonly, nonatomic) TSTTableStyle *tableStyle;
@property(nonatomic) _Bool headerColumnsFrozen;
@property(nonatomic) _Bool headerRowsFrozen;
@property(nonatomic) unsigned long long presetIndex;
@property(nonatomic) unsigned short numberOfHeaderColumns;
@property(nonatomic) unsigned short numberOfFooterRows;
@property(nonatomic) unsigned short numberOfHeaderRows;
@property(nonatomic) unsigned short numberOfColumns;
@property(nonatomic) unsigned short numberOfRows;
@property(nonatomic) _Bool styleApplyClearsAll;
@property(nonatomic) _Bool repeatingHeaderColumnsEnabled;
@property(nonatomic) _Bool repeatingHeaderRowsEnabled;
@property(nonatomic) double tableNameHeight;
@property(nonatomic) _Bool tableNameBorderEnabled;
@property(nonatomic) _Bool tableNameEnabled;
@property(retain, nonatomic) NSString *tableName;
- (void)setDrawableIsBeingCopied:(_Bool)arg1;
- (void)dealloc;
@property(readonly, nonatomic) TSKDocumentRoot *documentRoot;
- (id)initWithContext:(id)arg1 fromSourceModel:(id)arg2 region:(id)arg3 tableInfo:(id)arg4;
- (id)initWithContext:(id)arg1 rows:(unsigned short)arg2 columns:(unsigned short)arg3 styles:(id)arg4 tableInfo:(id)arg5;
- (void)setupDefaultCells;
- (void)resetStyles:(id)arg1;
- (void)p_releaseExistingDefaultStyles;
- (id)init;

@end

@interface TSTTablePartitioner : NSObject <TSDPartitioner>
{
    TSTTableInfo *mTableInfo;
    TSDInfoGeometry *mInfoGeometry;
    double mFirstPartitionWidth;
    struct CGSize mScaleToFit;
    TSTLayout *mScaledLayout;
    TSUPointerKeyDictionary *mHintMatricesByCanvas;
    NSMutableDictionary *mPartitioningPassCache;
}

@property(copy, nonatomic) TSDInfoGeometry *infoGeometry; // @synthesize infoGeometry=mInfoGeometry;
@property(nonatomic) struct CGSize scaleToFit; // @synthesize scaleToFit=mScaleToFit;
@property(readonly, nonatomic) double inlineTableWidth; // @synthesize inlineTableWidth=mFirstPartitionWidth;
@property(readonly, nonatomic) TSTTableInfo *tableInfo; // @synthesize tableInfo=mTableInfo;
- (void)p_flushCacheAfterPartitioningFinished:(id)arg1 lastHint:(id)arg2 horizontally:(_Bool)arg3;
- (id)hintCacheKeyForHint:(id)arg1;
- (id)hintCacheKeyForPartitioningPass:(id)arg1 andHintID:(CDStruct_0441cfb5)arg2;
- (id)partitioningPassForHint:(id)arg1 withPreviousHint:(id)arg2;
- (id)partitioningPassForFirstPartitionSize:(struct CGSize)arg1;
@property(readonly, nonatomic) TSTLayout *scaledLayout;
@property(readonly, nonatomic) _Bool scaleIsValid;
- (_Bool)shouldReuseLayout:(id)arg1 forSize:(struct CGSize)arg2 parentLayout:(id)arg3 hint:(id)arg4;
- (id)hintForLayout:(id)arg1;
- (_Bool)p_didFinishPartitioningHint:(id)arg1 horizontally:(_Bool)arg2;
- (_Bool)didHint:(id)arg1 syncWithNextHint:(id)arg2 horizontally:(_Bool)arg3 delta:(int)arg4;
- (id)layoutForHint:(id)arg1 parentLayout:(id)arg2;
- (id)nextLayoutForSize:(struct CGSize)arg1 parentLayout:(id)arg2 previousHint:(id)arg3 horizontally:(_Bool)arg4 outFinished:(out _Bool *)arg5;
- (id)nextHintForSize:(struct CGSize)arg1 parentLayout:(id)arg2 previousHint:(id)arg3 horizontally:(_Bool)arg4 outFinished:(out _Bool *)arg5;
- (CDStruct_5f1f7aa9)measureCellRangeForNextPartitionOfSize:(struct CGSize)arg1 previousHint:(id)arg2 horizontally:(_Bool)arg3;
- (void)validateScaledLayout;
- (void)dealloc;
- (id)initWithInfo:(id)arg1;

@end

@interface TSWPTextHostRep : TSDRep <TSDContainerRep, TSWPTextEditingHostRep, TSKHighlightArrayControllerProtocol>
{
    TSWPShapeRep *_editingRep;
    TSKHighlightArrayController *_pulseArrayController;
    TSKHighlightArrayController *_highlightArrayController;
    NSObject<TSKSearchReference> *_activeSearchReference;
    NSArray *_searchReferences;
}

@property(retain, nonatomic) NSArray *searchReferences; // @synthesize searchReferences=_searchReferences;
@property(retain, nonatomic) NSObject<TSKSearchReference> *activeSearchReference; // @synthesize activeSearchReference=_activeSearchReference;
@property(retain, nonatomic) TSKHighlightArrayController *highlightArrayController; // @synthesize highlightArrayController=_highlightArrayController;
@property(retain, nonatomic) TSKHighlightArrayController *pulseArrayController; // @synthesize pulseArrayController=_pulseArrayController;
- (void)drawTextBackground:(struct CGContext *)arg1 insetRect:(struct CGRect)arg2 pulsating:(_Bool)arg3;
- (id)overlayLayers;
@property(readonly, nonatomic) _Bool useFindOverlayers;
- (void)updateHighlights;
- (id)lineSearchReferencesForSearchReference:(id)arg1;
- (void)updateFindAnimationWithAnimatingPulse:(_Bool)arg1;
- (void)p_setSearchReferencesToHighlight:(id)arg1;
- (void)p_findUIStateChangedNotification:(id)arg1;
- (void)p_setActiveSearchReference:(id)arg1;
- (void)p_activeFindHighlightChangedNotification:(id)arg1;
- (_Bool)doesRepContainSearchReference:(id)arg1;
- (void)pulseAnimationDidStop:(id)arg1;
- (id)imageForSearchReference:(id)arg1 forPath:(struct CGPath *)arg2 shouldPulsate:(_Bool)arg3;
- (struct CGPath *)newPathForSearchReference:(id)arg1;
- (void)setPulseControllerActive:(_Bool)arg1 autohide:(_Bool)arg2;
- (void)tswpTextEditingDidEndEditing:(id)arg1;
- (void)selectChildRep:(id)arg1;
- (_Bool)canSelectChildRep:(id)arg1;
- (void)addAdditionalChildLayersToArray:(id)arg1;
- (id)childReps;
@property(readonly, nonatomic) NSObject<TSDContainerInfo> *containerInfo;
- (id)hitRep:(struct CGPoint)arg1;
- (void)updateChildrenFromLayout;
- (void)willBeRemoved;
- (void)dealloc;
- (id)initWithLayout:(id)arg1 canvas:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSTTableRep : TSWPTextHostRep <UITextFieldDelegate>
{
    struct CGRect mCanvasVisibleRect;
    struct CGRect mSearchSelectionBounds;
    TSDTilingLayer *mOverlayTableName;
    TSDTilingLayer *mOverlayFrozenHeaderCorner;
    TSDTilingLayer *mOverlayFrozenHeaderRows;
    TSDTilingLayer *mOverlayFrozenHeaderColumns;
    CALayer *mOverlayFrozenHeaderRowsMask;
    CALayer *mOverlayFrozenHeaderColumnsMask;
    CALayer *mOverlayFrozenHeaderTableBodyMask;
    CALayer *mOverlayFrozenHeaderTableNameMask;
    double mCurrentScreenScale;
    CDStruct_5f1f7aa9 mDirtyCellRange;
    _Bool mRecursivelyDrawingInContext;
    NSMutableArray *mAnimationStack;
    id <TSTTableAnimationController> mAnimationController;
    TSTTableCellTextEditingRep *mContainedTextEditingRep;
    TSWPTextEditing *mTableNameTextEditing;
    CDStruct_0441cfb5 mControlCellID;
    CDStruct_0441cfb5 mRatingsDragCellID;
    id <TSTTableChromeProvider> mTableChrome;
    TSTTableReferences *mReferences;
    CAShapeLayer *mHighlightedHyperlinkLayer;
    _Bool mIsAspectOperationInProgress;
    _Bool mIsZoomOperationInProgress;
    _Bool mIsZoomToEditOperationInProgress;
    CDStruct_5f1f7aa9 mZoomToEditVisibleCellRange;
    CAShapeLayer *mFindSelectionHighlightLayer;
    TSTTableSelection *mSourceFillSelection;
    TSTTableSelection *mTargetFillSelection;
    _Bool mWPEndedTableNameEditing;
    _Bool _settingSelection;
    TSTSelectionDragController *mCellDragController;
    _Bool mDragByHandleOnly;
    _Bool mSelectionUsesBezierPath;
    _Bool mSelectsCellOnInitialTap;
    _Bool mUsesWholeChromeResizer;
    id <TSTCanvasReferenceController> mCanvasReferenceController;
    id <TSTTableRepDelegate> mDelegate;
    TSDKnobTracker<TSTTableKnobTrackerVisitorProtocol> *mVisitorKnobTracker;
    NSSet *mVisibleFillKnobs;
    CDStruct_0441cfb5 mEditingHyperlinkCellID;
    TSWPStorage *mHyperlinkParentStorage;
    _Bool mHyperlinkModified;
    _Bool mInspectingHyperlinkInEditingStorage;
    TSWPHyperlinkField *mHyperlinkField;
    CAShapeLayer *mCellEditingMaskLayer;
}

+ (Class)tableRepDelegateClass;
@property(readonly, nonatomic) _Bool isZoomToEditOperationInProgress; // @synthesize isZoomToEditOperationInProgress=mIsZoomToEditOperationInProgress;
@property(readonly, nonatomic) TSDKnobTracker<TSTTableKnobTrackerVisitorProtocol> *visitorKnobTracker; // @synthesize visitorKnobTracker=mVisitorKnobTracker;
@property(nonatomic) CDStruct_0441cfb5 ratingsDragCellID; // @synthesize ratingsDragCellID=mRatingsDragCellID;
@property(nonatomic) TSTSelectionDragController *cellDragController; // @synthesize cellDragController=mCellDragController;
@property(readonly, nonatomic) id <TSTTableRepDelegate> delegate; // @synthesize delegate=mDelegate;
@property(readonly, nonatomic) id <TSTTableChromeProvider> tableChrome; // @synthesize tableChrome=mTableChrome;
@property(nonatomic) id <TSTTableAnimationController> animationController; // @synthesize animationController=mAnimationController;
@property(readonly, nonatomic) id <TSTCanvasReferenceController> canvasReferenceController; // @synthesize canvasReferenceController=mCanvasReferenceController;
@property(readonly, copy) NSString *description;
- (struct CGRect)boundsForResizeGuideUI;
- (id)imageForSearchReference:(id)arg1 forPath:(struct CGPath *)arg2 shouldPulsate:(_Bool)arg3;
- (struct CGPath *)newPathForSearchReference:(id)arg1;
- (void)p_editingDidEnd;
- (void)p_hideSelectionLayers;
- (struct CGPath *)p_newPathForSearchReference:(id)arg1;
- (id)p_textImageForPath:(struct CGPath *)arg1 shouldPulsate:(_Bool)arg2;
- (void)drawInContext:(struct CGContext *)arg1;
- (void)recursivelyDrawInContext:(struct CGContext *)arg1;
- (int)tilingMode;
- (_Bool)canDrawInParallel;
- (_Bool)mustDrawOnMainThreadForInteractiveCanvas;
- (_Bool)canDrawInBackgroundDuringScroll;
- (void)endDragInsertFromPalette;
- (void)beginDragInsertFromPalette;
- (_Bool)canDrawTilingLayerInBackground:(id)arg1;
- (void)invalidateFrozenHeaders;
- (void)validateFrozenHeaderTableBodyMask;
- (void)addAdditionalChildLayersToArray:(id)arg1;
- (void)validateFrozenHeaderColumns;
- (void)validateFrozenHeaderRows;
- (void)validateFrozenHeaderCorner;
- (struct CGRect)p_alignedLayerFrameForLayoutSpace:(id)arg1 transform:(struct CGAffineTransform)arg2;
- (id)p_frozenHeaderOverlayLayers;
- (void)validateTableName;
- (id)p_tableNameOverlayLayers;
- (id)additionalLayersUnderLayer;
- (id)additionalLayersOverLayer;
- (id)overlayLayers;
- (id)actionForLayer:(id)arg1 forKey:(id)arg2;
- (void)drawLayer:(id)arg1 inContext:(struct CGContext *)arg2;
- (void)popAnimation;
- (void)pushAnimation:(id)arg1;
@property(readonly, nonatomic) TSTAnimation *currentAnimation;
- (void)orientationDidChange:(id)arg1;
- (void)invalidateComments;
- (void)invalidateAnnotationColor;
- (void)p_invalidateCellCommentBadges;
- (void)dirtyCellRange:(CDStruct_5f1f7aa9)arg1;
- (void)setNeedsDisplayInCellRange:(CDStruct_5f1f7aa9)arg1;
- (void)setNeedsDisplayInRect:(struct CGRect)arg1;
- (void)setNeedsDisplay;
- (void)invalidateTableName;
- (void)invalidateCellRange:(CDStruct_5f1f7aa9)arg1 fittingRange:(CDStruct_5f1f7aa9)arg2 invalidateSize:(_Bool)arg3;
- (void)invalidateCellRange:(CDStruct_5f1f7aa9)arg1;
- (void)invalidateSelection;
- (void)updateDynamicModeForEditingSpillText;
- (void)screenScaleDidChange;
- (void)viewScaleDidChange;
- (_Bool)isFullyVisibleWithBorder:(int)arg1;
- (void)validateVisibleRect;
- (void)validateStrokesInEditingSpillingTextRange;
- (void)layoutInRootChangedFrom:(id)arg1 to:(id)arg2 translatedOnly:(_Bool)arg3;
- (void)updateFromLayout;
- (id)editorSelection;
- (void)contentsRectForCellRangeAcrossSpaces:(CDStruct_5f1f7aa9)arg1 contentsCenterInfo:(CDStruct_7bd98050 *)arg2 canvasFrame:(struct CGRect *)arg3 contentsRect:(struct CGRect *)arg4;
- (struct CGRect)boundsForCellSelection:(CDStruct_0441cfb5)arg1;
- (struct CGRect)canvasBoundsForCellRange:(CDStruct_5f1f7aa9)arg1;
- (struct CGRect)deviceBoundsForCellRange:(CDStruct_5f1f7aa9)arg1;
- (_Bool)isDraggable;
- (void)updateChildrenFromLayout;
- (void)willBeRemoved;
- (void)invalidateEditingCell;
- (void)asyncPostTextChangedInRange:(CDStruct_5f1f7aa9)arg1 strokeRange:(CDStruct_5f1f7aa9)arg2;
- (_Bool)handlesEditMenu;
- (_Bool)shouldCommitPendingTextEdit;
- (_Bool)shouldRestartTextEditing;
- (id)initWithLayout:(id)arg1 canvas:(id)arg2;
- (void)dealloc;
- (id)newCommandToApplyGeometry:(id)arg1 toInfo:(id)arg2;
- (struct CGRect)layerFrameInScaledCanvas;
- (id)repForDragging;
- (id)hitRepChrome:(struct CGPoint)arg1;
- (id)hitRep:(struct CGPoint)arg1;
@property(readonly, nonatomic) TSTCellRegion *selectionRegion;
@property(readonly, nonatomic) CALayer *layerForRep;
@property(readonly, nonatomic) struct CGRect canvasVisibleRect;
@property(readonly, nonatomic) struct CGAffineTransform transformFromCanvas;
@property(readonly, nonatomic) struct CGAffineTransform transformToCanvas;
@property(readonly, nonatomic) TSDEditorController *editorController;
@property(readonly, nonatomic) TSDCanvasView *canvasView;
@property(readonly, nonatomic) TSTMasterLayout *masterLayout;
@property(readonly, nonatomic) TSTLayout *tableLayout;
@property(readonly, nonatomic) TSTEditingState *editingState;
@property(readonly, nonatomic) TSTTableModel *tableModel;
@property(readonly, nonatomic) TSTTableInfo *tableInfo;

// Remaining properties
@property(retain, nonatomic) TSTSearchReference *activeSearchReference; // @dynamic activeSearchReference;
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSTTableRepProcessChangesActions : NSObject
{
    _Bool _invalidateAllChrome;
    _Bool _invalidateColumnChrome;
    _Bool _invalidateRowChrome;
    _Bool _hideChromeContextMenuButton;
    _Bool _invalidateKnobs;
    _Bool _invalidateSelection;
    _Bool _invalidateTableName;
    _Bool _updateEditorRemainders;
    _Bool _syncReferenceHighlightState;
    _Bool _setNeedsDisplay;
    _Bool _hideStepperHUD;
    CDStruct_5f1f7aa9 dirtyCellRange;
    CDStruct_5f1f7aa9 dirtyStrokeRange;
}

@property(nonatomic) _Bool hideStepperHUD; // @synthesize hideStepperHUD=_hideStepperHUD;
@property(nonatomic) _Bool setNeedsDisplay; // @synthesize setNeedsDisplay=_setNeedsDisplay;
@property(nonatomic) _Bool syncReferenceHighlightState; // @synthesize syncReferenceHighlightState=_syncReferenceHighlightState;
@property(nonatomic) _Bool updateEditorRemainders; // @synthesize updateEditorRemainders=_updateEditorRemainders;
@property(nonatomic) _Bool invalidateTableName; // @synthesize invalidateTableName=_invalidateTableName;
@property(nonatomic) _Bool invalidateSelection; // @synthesize invalidateSelection=_invalidateSelection;
@property(nonatomic) _Bool invalidateKnobs; // @synthesize invalidateKnobs=_invalidateKnobs;
@property(nonatomic) _Bool hideChromeContextMenuButton; // @synthesize hideChromeContextMenuButton=_hideChromeContextMenuButton;
@property(nonatomic) _Bool invalidateRowChrome; // @synthesize invalidateRowChrome=_invalidateRowChrome;
@property(nonatomic) _Bool invalidateColumnChrome; // @synthesize invalidateColumnChrome=_invalidateColumnChrome;
@property(nonatomic) _Bool invalidateAllChrome; // @synthesize invalidateAllChrome=_invalidateAllChrome;
@property(nonatomic) CDStruct_5f1f7aa9 dirtyStrokeRange; // @synthesize dirtyStrokeRange;
@property(nonatomic) CDStruct_5f1f7aa9 dirtyCellRange; // @synthesize dirtyCellRange;

@end

@interface TSTTableSelection : TSKSelection <NSCopying, TSDTextSelection>
{
    int mSelectionType;
    CDStruct_0441cfb5 mAnchorCellID;
    TSTCellRegion *mCellRegion;
    TSTCellRegion *mBaseRegion;
    CDStruct_0441cfb5 mCursorCellID;
    struct _NSRange mSearchReferenceRange;
}

@property(nonatomic) struct _NSRange searchReferenceRange; // @synthesize searchReferenceRange=mSearchReferenceRange;
@property(readonly, nonatomic) CDStruct_0441cfb5 cursorCellID; // @synthesize cursorCellID=mCursorCellID;
@property(readonly, nonatomic) TSTCellRegion *baseRegion; // @synthesize baseRegion=mBaseRegion;
@property(readonly, nonatomic) CDStruct_0441cfb5 anchorCellID; // @synthesize anchorCellID=mAnchorCellID;
@property(readonly, nonatomic) int selectionType; // @synthesize selectionType=mSelectionType;
@property(readonly, nonatomic) TSTCellRegion *cellRegion; // @synthesize cellRegion=mCellRegion;
@property(readonly, nonatomic) _Bool isAtEndOfLine;
@property(readonly, nonatomic) struct _NSRange range;
- (_Bool)intersectsPartialMergeRangeInTable:(id)arg1;
@property(readonly, copy) NSString *description;
- (_Bool)containsCell:(CDStruct_0441cfb5)arg1;
- (_Bool)containsSelection:(id)arg1;
- (_Bool)areCellsInTheSameRegionInTable:(id)arg1;
- (_Bool)isEqualToSelection:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)remove:(int)arg1 atIndex:(unsigned short)arg2 count:(unsigned short)arg3;
- (void)insert:(int)arg1 atIndex:(unsigned short)arg2 count:(unsigned short)arg3;
- (void)enumerateSelectedCellsInTable:(id)arg1 withFlags:(unsigned long long)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)enumerateSelectedCellsInTable:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (id)selectionByMovingInTableInfo:(id)arg1 inDirection:(int)arg2 withModifierKeys:(int)arg3 forReferenceMove:(_Bool)arg4 suppressWrap:(_Bool)arg5;
- (id)selectionByMovingInTableInfo:(id)arg1 inDirection:(int)arg2 withModifierKeys:(int)arg3 forReferenceMove:(_Bool)arg4;
- (id)selectionByRemovingCellRange:(CDStruct_5f1f7aa9)arg1 inTable:(id)arg2 withAnchor:(CDStruct_0441cfb5)arg3 cursor:(CDStruct_0441cfb5)arg4 selectionType:(int)arg5;
- (id)selectionByAddingCellRange:(CDStruct_5f1f7aa9)arg1 inTable:(id)arg2 withAnchor:(CDStruct_0441cfb5)arg3 cursor:(CDStruct_0441cfb5)arg4 selectionType:(int)arg5;
- (id)selectionByExtendingWithCellRange:(CDStruct_5f1f7aa9)arg1 inTable:(id)arg2 selectionType:(int)arg3 cursorCell:(CDStruct_0441cfb5)arg4;
- (void)dealloc;
- (id)initWithTableModel:(id)arg1 cellRegion:(id)arg2;
- (id)initWithTableModel:(id)arg1 andPreviousSelection:(id)arg2 offsetBy:(CDStruct_79c71658)arg3;
- (id)initWithTableModel:(id)arg1 rowOrColumn:(int)arg2 index:(unsigned int)arg3 count:(unsigned int)arg4;
- (id)initWithTableModel:(id)arg1 startingColumnIndex:(unsigned short)arg2 numberOfColumns:(unsigned short)arg3;
- (id)initWithTableModel:(id)arg1 startingRowIndex:(unsigned short)arg2 numberOfRows:(unsigned short)arg3;
- (id)initWithTableModel:(id)arg1 andCellID:(CDStruct_0441cfb5)arg2;
- (id)initWithTableModel:(id)arg1 cellID:(CDStruct_0441cfb5)arg2 selectionType:(int)arg3;
- (id)initWithTableModel:(id)arg1 andCellRange:(CDStruct_5f1f7aa9)arg2;
- (id)initWithTableModel:(id)arg1 selectionType:(int)arg2;
- (id)initWithTableModel:(id)arg1 cellRange:(CDStruct_5f1f7aa9)arg2 type:(int)arg3 anchorCellID:(CDStruct_0441cfb5)arg4 cursorCellID:(CDStruct_0441cfb5)arg5;
- (id)initWithTableModel:(id)arg1 cellRegion:(id)arg2 anchorCellID:(CDStruct_0441cfb5)arg3 cursorCellID:(CDStruct_0441cfb5)arg4;
- (id)initWithTableModel:(id)arg1 cellRegion:(id)arg2 anchorCellID:(CDStruct_0441cfb5)arg3 cursorCellID:(CDStruct_0441cfb5)arg4 selectionType:(int)arg5;
- (id)initWithTableModel:(id)arg1 cellRegion:(id)arg2 anchorCellID:(CDStruct_0441cfb5)arg3 cursorCellID:(CDStruct_0441cfb5)arg4 baseRegion:(id)arg5;
- (id)initWithTableModel:(id)arg1 cellRegion:(id)arg2 anchorCellID:(CDStruct_0441cfb5)arg3 cursorCellID:(CDStruct_0441cfb5)arg4 baseRegion:(id)arg5 selectionType:(int)arg6;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSTTableStrokePresetData : NSObject
{
    TSDStroke *mHorizontalStroke;
    TSDStroke *mVerticalStroke;
    TSDStroke *mExteriorStroke;
    unsigned int mVisibleMask;
}

@property(nonatomic) unsigned int mask; // @synthesize mask=mVisibleMask;
@property(retain, nonatomic) TSDStroke *exteriorStroke; // @synthesize exteriorStroke=mExteriorStroke;
@property(retain, nonatomic) TSDStroke *verticalStroke; // @synthesize verticalStroke=mVerticalStroke;
@property(retain, nonatomic) TSDStroke *horizontalStroke; // @synthesize horizontalStroke=mHorizontalStroke;
- (_Bool)isEqual:(id)arg1;
- (id)initWithMask:(unsigned int)arg1 horizontalStroke:(id)arg2 verticalStroke:(id)arg3 exteriorStroke:(id)arg4;
- (void)dealloc;
- (id)init;

@end

@interface TSTTableStrokePresetList : NSObject
{
    unsigned long long mCount;
    TSTTableStrokePresetData *mPresets[15];
}

+ (id)strokePresetListForDefaultPropertyMapWithFatStroke:(id)arg1 andThinStroke:(id)arg2;
+ (id)strokePresetListForDefaultPropertyMapWithHorizontalStroke:(id)arg1 verticalStroke:(id)arg2 exteriorStroke:(id)arg3;
+ (id)strokePresetListForDefaultPropertyMapForTablePresetIndex:(unsigned long long)arg1 colors:(id)arg2;
+ (id)init;
- (void)setStroke:(id)arg1 forPresetIndex:(unsigned long long)arg2;
- (unsigned int)maskForStrokePreset:(unsigned long long)arg1;
- (id)exteriorStrokeForStrokePreset:(unsigned long long)arg1;
- (id)verticalStrokeForStrokePreset:(unsigned long long)arg1;
- (id)horizontalStrokeForStrokePreset:(unsigned long long)arg1;
- (void)setStrokePreset:(id)arg1 atIndex:(unsigned long long)arg2;
- (id)presetAtIndex:(unsigned long long)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)count;
- (void)dealloc;

@end

@interface TSTTableStyle : TSSStyle
{
}

+ (void)p_populateParagraphStyle:(id)arg1;
+ (void)initDefaultPropertyMap:(id)arg1 presetIndex:(unsigned long long)arg2 colors:(id)arg3 alternate:(int)arg4;
+ (void)initDefaultStrokePresetListInPropertyMap:(id)arg1 presetIndex:(unsigned long long)arg2 colors:(id)arg3;
+ (id)styleIDForPreset:(unsigned long long)arg1;
+ (id)nonEmphasisTableProperties;
+ (id)propertiesAllowingNSNull;
+ (id)properties;
- (SEL)mapThemePropertyMapSelector;
- (void)validate;
- (unsigned int)maskForStrokePreset:(unsigned long long)arg1;
- (id)exteriorStrokeForStrokePreset:(unsigned long long)arg1;
- (id)verticalStrokeForStrokePreset:(unsigned long long)arg1;
- (id)horizontalStrokeForStrokePreset:(unsigned long long)arg1;
- (id)strokeForStrokePreset:(unsigned long long)arg1;
- (void)dealloc;
- (id)initWithContext:(id)arg1 name:(id)arg2 overridePropertyMap:(id)arg3 isVariation:(_Bool)arg4;

@end

@interface TSTTableStyleNetwork : TSPObject <NSFastEnumeration>
{
    unsigned long long mPresetIndex;
    TSTTableStyle *mTableStyle;
    TSTCellStyle *mHeaderRowCellStyle;
    TSTCellStyle *mHeaderColumnCellStyle;
    TSTCellStyle *mFooterRowCellStyle;
    TSTCellStyle *mBodyCellStyle;
    TSWPParagraphStyle *mHeaderRowTextStyle;
    TSWPParagraphStyle *mHeaderColumnTextStyle;
    TSWPParagraphStyle *mFooterRowTextStyle;
    TSWPParagraphStyle *mBodyTextStyle;
    TSWPParagraphStyle *mTableNameStyle;
    TSWPShapeStyle *mTableNameShapeStyle;
}

+ (id)identifiersForPresetIndex:(unsigned long long)arg1;
+ (id)defaultTableNameShapeStyleWithContext:(id)arg1;
+ (id)tableNameShapeStyleIDForPreset:(unsigned long long)arg1;
+ (id)tableNameStyleIDForPreset:(unsigned long long)arg1;
+ (id)networkFromTheme:(id)arg1 presetIndex:(unsigned long long)arg2;
+ (id)networkFromStylesheet:(id)arg1 presetIndex:(unsigned long long)arg2;
+ (id)createStylesInStylesheet:(id)arg1 presetIndex:(unsigned long long)arg2 colors:(id)arg3 alternate:(int)arg4;
+ (id)networkWithContext:(id)arg1 presetIndex:(unsigned long long)arg2 colors:(id)arg3 alternate:(int)arg4;
+ (id)networkFromTableModel:(id)arg1;
- (id)initWithContext:(id)arg1 fromDictionary:(id)arg2 withPreset:(unsigned long long)arg3;
- (_Bool)valid;
- (id)dictionaryWithPreset:(unsigned long long)arg1;
- (id)styleArray;
- (void)setStylesFromTableModel:(id)arg1;
- (void)setTextStyle:(id)arg1 forTableArea:(unsigned int)arg2;
- (void)setCellStyle:(id)arg1 forTableArea:(unsigned int)arg2;
- (id)textStyleForTableArea:(unsigned int)arg1;
- (id)cellStyleForTableArea:(unsigned int)arg1;
- (_Bool)stylesInStylesheet:(id)arg1;
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)copy;
- (id)copyWithContext:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1 context:(id)arg2;
- (id)initWithContext:(id)arg1 fromArray:(id)arg2 presetIndex:(unsigned long long)arg3;
- (id)initWithContext:(id)arg1;
@property(nonatomic) unsigned long long presetIndex;
@property(retain, nonatomic) TSWPShapeStyle *tableNameShapeStyle;
@property(retain, nonatomic) TSWPParagraphStyle *tableNameStyle;
- (void)setHeaderRowTextStyle:(id)arg1;
@property(readonly, nonatomic) TSWPParagraphStyle *headerRowTextStyle;
- (void)setFooterRowTextStyle:(id)arg1;
@property(readonly, nonatomic) TSWPParagraphStyle *footerRowTextStyle;
- (void)setHeaderColumnTextStyle:(id)arg1;
@property(readonly, nonatomic) TSWPParagraphStyle *headerColumnTextStyle;
- (void)setBodyTextStyle:(id)arg1;
@property(readonly, nonatomic) TSWPParagraphStyle *bodyTextStyle;
- (void)setHeaderRowCellStyle:(id)arg1;
@property(readonly, nonatomic) TSTCellStyle *headerRowCellStyle;
- (void)setFooterRowCellStyle:(id)arg1;
@property(readonly, nonatomic) TSTCellStyle *footerRowCellStyle;
- (void)setHeaderColumnCellStyle:(id)arg1;
@property(readonly, nonatomic) TSTCellStyle *headerColumnCellStyle;
- (void)setBodyCellStyle:(id)arg1;
@property(readonly, nonatomic) TSTCellStyle *bodyCellStyle;
@property(retain, nonatomic) TSTTableStyle *tableStyle;

@end

@interface TSTTableStylePreset : TSPObject <TSSPreset, TSSStyleClient, TSKModel>
{
    unsigned long long mIndex;
    TSTTableStyleNetwork *mStyleNetwork;
}

- (void)replaceReferencedStylesUsingBlock:(CDUnknownBlockType)arg1;
- (id)referencedStyles;
- (void)drawSwatchInRect:(struct CGRect)arg1 inContext:(struct CGContext *)arg2;
- (id)styleNetworkInStylesheet:(id)arg1;
- (id)swatchImage;
@property(readonly, nonatomic) NSString *presetKind;
- (_Bool)isThemeEquivalent:(id)arg1;
@property(readonly) unsigned long long hash;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)initWithContext:(id)arg1;
- (id)initWithStyleNetwork:(id)arg1 index:(unsigned long long)arg2;
- (id)p_documentRoot;
@property(copy, nonatomic) TSTTableStyleNetwork *styleNetwork;
@property(nonatomic) unsigned long long index;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;

@end

@interface TSTTableTile : TSPObject
{
    unsigned char mMaxColumn;
    unsigned short mMaxRow;
    unsigned short mNumCells;
    NSMutableArray *mRowInfos;
    unsigned short mNumRows;
    unsigned char mStorageVersion;
}

- (id)description;
- (void)validate;
- (void)debugListRows;
- (void)debugDump;
@property(readonly, nonatomic) NSArray *rowInfos;
@property(readonly, nonatomic) unsigned short numRows;
@property(readonly, nonatomic) unsigned short numCells;
@property(readonly, nonatomic) unsigned short maxRow;
@property(readonly, nonatomic) unsigned char maxColumn;
- (id)packageLocator;
- (unsigned long long)flushableSize;
- (void)dealloc;
- (id)initWithContext:(id)arg1;
- (id)initWithRows:(id)arg1 context:(id)arg2;
- (void)i_upgradeTileRowInfosWithDataStore:(id)arg1;

@end

@interface TSTTableTileRowInfo : TSPContainedObject
{
    struct __CFData *mStorageBuffer;
    unsigned short mStorageOffsets[255];
    unsigned short mBufferSize;
    unsigned short mTileRowIndex;
    unsigned short mCellCount;
    unsigned char mMaxTileColumnIndex;
    _Bool mMaxTileColumnIndexValid;
    unsigned char mStorageVersion;
}

@property(readonly, nonatomic) unsigned short cellCount; // @synthesize cellCount=mCellCount;
@property(nonatomic) unsigned short tileRowIndex; // @synthesize tileRowIndex=mTileRowIndex;
- (id)description;
- (id)p_debugDumpCompact;
- (void)validate;
- (void)debugDump;
- (void)dealloc;
- (id)initWithOwner:(id)arg1 tileRowIndex:(unsigned short)arg2;
- (void)i_upgradeWithDataStore:(id)arg1;

@end

@interface TSTTextEngineDelegate : NSObject <TSWPTextDelegate>
{
    TSWPPadding *mPadding;
    unsigned int mVerticalAlignment;
}

- (_Bool)forceWesternLineBreaking;
- (unsigned int)verticalAlignment;
- (id)padding;
- (void)dealloc;
- (id)initWithPadding:(struct UIEdgeInsets)arg1 verticalAlignment:(unsigned int)arg2;

@end

@interface TSTTileIDKeyDict : TSPContainedObject
{
    struct hash_map<unsigned int, SFUtility::ObjcSharedPtr<NSObject>, TSTIntHasher, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, SFUtility::ObjcSharedPtr<NSObject>>>> *mMap;
}

- (long long)count;
- (void)applyFunction:(CDUnknownFunctionPointerType)arg1 withState:(void *)arg2;
- (void)makeTilesPerformSelector:(SEL)arg1;
- (void)removeAllTiles;
- (void)removeTileForID:(CDStruct_d65e47c4)arg1;
- (void)setTile:(id)arg1 forID:(CDStruct_d65e47c4)arg2;
- (id)tileForID:(CDStruct_d65e47c4)arg1;
- (void)dealloc;
- (id)initWithOwner:(id)arg1;

@end

@interface TSTWPColumnCache : TSUConcurrentCache
{
}

- (id)description;

@end

@interface TSTWPTableInfo : TSTTableInfo
{
}

@end

@interface TSTWidthHeightCache : NSObject
{
    struct vector<TSTWidthHeightCache_Private::WHCCol, std::__1::allocator<TSTWidthHeightCache_Private::WHCCol>> mFittingColumnWidth;
    struct vector<TSTWidthHeightCache_Private::WHCRow, std::__1::allocator<TSTWidthHeightCache_Private::WHCRow>> mFittingRowHeight;
    vector_3f7ffb82 mModelColumnWidth;
    vector_3f7ffb82 mModelRowHeight;
    unsigned short mMaxRow;
    unsigned char mMaxCol;
    struct _opaque_pthread_rwlock_t mLock;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (id)description;
- (void)_increaseRowCapacity:(unsigned int)arg1;
- (void)_increaseColCapacity:(unsigned int)arg1;
- (id)validateChangeDescriptors:(id)arg1 tableModel:(id)arg2;
- (void)logInternalState;
- (_Bool)verifyDims:(struct CGSize)arg1 forCellID:(CDStruct_0441cfb5)arg2;
- (void)setNumsRows:(unsigned short)arg1 andNumCols:(unsigned char)arg2;
- (void)resetFitHeightForCellID:(CDStruct_0441cfb5)arg1;
- (void)resetRowHeightForCell:(CDStruct_0441cfb5)arg1;
- (void)resetWidthsHeightsForRange:(CDStruct_5f1f7aa9)arg1;
- (void)resetAllCol;
- (void)resetAllRow;
- (void)resetColWidthsStartingWith:(unsigned char)arg1 andEndingWith:(unsigned char)arg2;
- (void)resetRowHeightsStartingWith:(unsigned short)arg1 andEndingWith:(unsigned short)arg2;
- (unsigned long long)resetAllInvalidColsInRow:(unsigned short)arg1;
- (id)getListOfInvalidColsInRow:(unsigned short)arg1;
- (double)getModelWidthForColumn:(unsigned char)arg1;
- (double)getModelHeightForRow:(unsigned short)arg1;
- (double)getFitWidthForCol:(unsigned char)arg1;
- (double)getFitHeightForRow:(unsigned short)arg1;
- (_Bool)moveColsFrom:(CDStruct_5f1f7aa9)arg1 toCol:(unsigned char)arg2;
- (_Bool)moveRowsFrom:(CDStruct_5f1f7aa9)arg1 toRow:(unsigned short)arg2;
- (_Bool)insertRows:(unsigned short)arg1 atRow:(unsigned short)arg2;
- (_Bool)insertCols:(unsigned short)arg1 atColumn:(unsigned char)arg2;
- (_Bool)deleteRowsStartingWith:(unsigned short)arg1 andEndingWith:(unsigned short)arg2;
- (_Bool)deleteColsStartingWith:(unsigned char)arg1 andEndingWith:(unsigned char)arg2;
- (_Bool)resetModelCacheRange:(CDStruct_5f1f7aa9)arg1;
- (unsigned long long)numModelRowHeights;
- (unsigned long long)numModelColumnWidths;
- (_Bool)resetModelCache;
- (_Bool)setModelHeight:(double)arg1 forRow:(unsigned short)arg2;
- (_Bool)setModelWidth:(double)arg1 forColumn:(unsigned char)arg2;
- (_Bool)setFitHeight:(double)arg1 forCellID:(CDStruct_0441cfb5)arg2;
- (_Bool)setFitWidth:(double)arg1 forCellID:(CDStruct_0441cfb5)arg2;
- (_Bool)setFitDims:(struct CGSize)arg1 forCellID:(CDStruct_0441cfb5)arg2;
- (void)dealloc;
- (id)initWithNumRows:(unsigned short)arg1 andNumCols:(unsigned short)arg2;
- (id)init;

@end

@interface TSUColor (TSDAdditions)
+ (id)highContrastBackgroundColorForPreset:(id)arg1;
@end

@interface TSUColor (TSSAdditions) <TSSPreset, TSSPresetSource, TSSThemeAsset>
+ (void)bootstrapPresetsOfKind:(id)arg1 inTheme:(id)arg2 alternate:(int)arg3;
+ (id)presetKinds;
+ (id)p_defaultPresetColors:(int)arg1;
- (_Bool)isThemeEquivalent:(id)arg1;
@property(readonly, nonatomic) NSString *presetKind;
@end

@interface TSUCustomCallBackDictionary (TSSThemeAssetMapperAdditions)
- (id)initForThemeAssetMapperWithCapacity:(unsigned long long)arg1;
@end

@interface TSUImage (TSDAdditions)
- (struct CGImage *)CGImageForSize:(struct CGSize)arg1 inContext:(struct CGContext *)arg2 orLayer:(id)arg3;
@end

@interface TSURemoteDefaults (TSPDocumentResources)
@property(readonly, nonatomic) NSURL *downloadableContentURL;
@end

@interface TSWPArchivedSelection : TSPObject
{
    TSWPSelection *_selection;
}

@property(retain, nonatomic) TSWPSelection *selection; // @synthesize selection=_selection;
- (void)dealloc;
- (id)initWithContext:(id)arg1;

@end

@interface TSWPAttachment : TSPObject <TSKDocumentObject, TSDOwningAttachment, TSPCopying>
{
    TSWPStorage *_parentStorage;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (unsigned int)attributeArrayKind;
@property(nonatomic) TSWPStorage *parentStorage; // @synthesize parentStorage=_parentStorage;
- (void)wasRemovedFromDocumentRoot:(id)arg1;
- (void)willBeRemovedFromDocumentRoot:(id)arg1;
- (void)wasAddedToDocumentRoot:(id)arg1 context:(id)arg2;
- (void)willBeAddedToDocumentRoot:(id)arg1 context:(id)arg2;
- (void)infoChanged;
@property(readonly, nonatomic) unsigned long long enabledKnobMask;
@property(readonly, nonatomic) _Bool specifiesEnabledKnobMask;
@property(readonly, nonatomic) _Bool isSearchable;
@property(readonly, nonatomic) Class positionerClass;
@property(readonly, nonatomic) _Bool isAttachedToBodyText;
@property(readonly, nonatomic) _Bool isPartitioned;
@property(readonly, nonatomic) _Bool isAnchored;
@property(readonly, nonatomic) _Bool isDrawable;
- (void)adoptStylesheet:(id)arg1 withMapper:(id)arg2;
- (unsigned long long)findCharIndex;
- (id)topLevelAttachment;
- (_Bool)changesWithPageCount;
- (int)elementKind;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithContext:(id)arg1;
- (id)initWithContext:(id)arg1;
- (_Bool)changesWithPageNumber;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSWPBeginMagnificationUserInfo : NSObject
{
    TSWPRep *_target;
    struct CGPoint _magnificationPoint;
    struct CGPoint _offset;
    _Bool _animated;
}

@property(nonatomic) _Bool animated; // @synthesize animated=_animated;
@property(nonatomic) struct CGPoint offset; // @synthesize offset=_offset;
@property(nonatomic) struct CGPoint magnificationPoint; // @synthesize magnificationPoint=_magnificationPoint;
@property(nonatomic) TSWPRep *target; // @synthesize target=_target;

@end

@interface TSWPBundleLookupClass : NSObject
{
}

@end

@interface TSWPCTTypesetterCache : NSObject
{
    struct map<unsigned long, std::__1::shared_ptr<TSWPParagraphTypesetter>, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::shared_ptr<TSWPParagraphTypesetter>>>> _typesetters;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)p_limitCacheSize:(unsigned long long)arg1;
- (void)clearCache;
- (void)removeTypesetterForParagraphIndex:(unsigned long long)arg1;
- (void)addTypesetterForParagraphIdentifier:(unsigned long long)arg1 typesetter:(shared_ptr_b124cf66)arg2;
- (shared_ptr_b124cf66)cachedTypesetterForParagraphIdentifier:(unsigned long long)arg1;
- (void)dealloc;

@end

@interface TSWPChange : TSPObject <TSKDocumentObject, TSPCopying>
{
    TSWPStorage *_parentStorage;
    int _kind;
    TSWPChangeSession *_session;
    NSDate *_date;
    _Bool _hidden;
}

@property(nonatomic) TSWPStorage *parentStorage; // @synthesize parentStorage=_parentStorage;
- (_Bool)isFromChangeSession:(id)arg1;
- (_Bool)canMergeWithKind:(int)arg1 session:(id)arg2;
- (void)adoptStylesheet:(id)arg1 withMapper:(id)arg2;
- (id)copyWithContext:(id)arg1;
- (void)wasRemovedFromDocumentRoot:(id)arg1;
- (void)willBeRemovedFromDocumentRoot:(id)arg1;
- (void)wasAddedToDocumentRoot:(id)arg1 context:(id)arg2;
- (void)willBeAddedToDocumentRoot:(id)arg1 context:(id)arg2;
- (void)p_invalidateAnnotationResultsForDocumentRoot:(id)arg1;
- (void)trackedTextDidChange;
@property(readonly, nonatomic) TSUColor *changeAdornmentsColor;
@property(readonly, nonatomic) TSUColor *textMarkupColor;
@property(readonly, nonatomic) _Bool showsHiddenDeletionMarkup;
@property(readonly, nonatomic) _Bool showsMarkup;
@property(nonatomic, getter=isHidden) _Bool hidden;
@property(readonly, nonatomic) _Bool isDeletion;
@property(readonly, nonatomic) _Bool isInsertion;
- (void)dealloc;
- (id)initWithContext:(id)arg1 kind:(int)arg2 session:(id)arg3;
@property(retain, nonatomic) NSDate *date;
@property(retain, nonatomic) TSWPChangeSession *session;

@end

@interface TSWPChangeDetails : NSObject <TSDAnnotationHosting>
{
    NSString *mChangeString;
    id <TSKModel> model;
    TSWPChange *_change;
}

@property(retain, nonatomic) TSWPChange *change; // @synthesize change=_change;
@property(nonatomic) id <TSKModel> model; // @synthesize model;
- (void)commitText:(id)arg1;
@property(readonly, nonatomic) int annotationDisplayStringType;
@property(readonly, nonatomic) int annotationType;
@property(readonly, nonatomic) NSString *changeTrackingString;
@property(readonly, nonatomic) NSDate *date;
@property(retain, nonatomic) TSKAnnotationAuthor *author;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEqualToChangeDetails:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)initWithChange:(id)arg1 changeString:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(copy, nonatomic) TSDCommentStorage *storage;
@property(readonly) Class superclass;

@end

@interface TSWPChangeSession : TSPObject
{
    unsigned int _sessionUID;
    TSKAnnotationAuthor *_author;
    NSDate *_date;
}

- (_Bool)isEqualToSession:(id)arg1;
- (void)dealloc;
@property(retain, nonatomic) NSDate *date;
@property(retain, nonatomic) TSKAnnotationAuthor *author;
@property(nonatomic) unsigned int sessionUID;

@end

@interface TSWPCharacterStyle : TSSStyle <TSSPreset>
{
}

+ (id)nullStyleWithContext:(id)arg1;
+ (id)nullStyleName;
+ (id)propertiesAllowingNSNull;
+ (id)nonEmphasisCharacterProperties;
+ (id)emphasisProperties;
+ (id)properties;
- (_Bool)transformsFontSizes;
- (int)writingDirection;
@property(readonly, nonatomic) NSString *presetKind;

@end

@interface TSWPColumn : NSObject <TSWPOffscreenColumn>
{
    TSWPStorage *_storage;
    struct CGRect _frameBounds;
    struct CGAffineTransform _transform;
    unsigned long long _startCharIndex;
    unsigned long long _characterCount;
    unsigned long long _startAnchoredCharIndex;
    unsigned long long _anchoredCharCount;
    unsigned long long _nextWidowPullsDownFromCharIndex;
    double _contentBottom;
    double _erasableContentBottom;
    int _layoutResultFlags;
    unsigned long long _columnIndex;
    unsigned long long _pageNumber;
    unsigned long long _scaleTextPercent;
    id <TSWPStyleProvider> _styleProvider;
    shared_ptr_1a254aea _lineFragmentArray;
    void *_paragraphAdornments;
    _Bool _textIsVertical;
}

+ (id)columnForCharIndex:(unsigned long long)arg1 eol:(_Bool)arg2 withColumns:(id)arg3;
+ (struct CGRect)boundsRectForSelection:(id)arg1 columnArray:(id)arg2 includeRuby:(_Bool)arg3;
+ (id)pathForHighlightWithRange:(struct _NSRange)arg1 columnArray:(id)arg2 pathStyle:(int)arg3;
+ (id)footnoteReferenceAttachmentInColumnArray:(id)arg1 atPoint:(struct CGPoint)arg2;
+ (id)footnoteMarkAttachmentInColumnArray:(id)arg1 atPoint:(struct CGPoint)arg2;
+ (id)smartFieldWithAttributeKind:(unsigned int)arg1 inColumnArray:(id)arg2 atPoint:(struct CGPoint)arg3;
+ (unsigned long long)charIndexForTopicDragAtPoint:(struct CGPoint)arg1 inColumnsArray:(id)arg2;
+ (unsigned long long)charIndexForPoint:(struct CGPoint)arg1 inColumnsArray:(id)arg2 allowPastBreak:(_Bool)arg3 allowNotFound:(_Bool)arg4 pastCenterGoesToNextChar:(_Bool)arg5 isAtEndOfLine:(_Bool *)arg6 leadingEdge:(_Bool *)arg7;
+ (unsigned long long)charIndexForPoint:(struct CGPoint)arg1 inColumnsArray:(id)arg2 allowPastBreak:(_Bool)arg3 allowNotFound:(_Bool)arg4 isAtEndOfLine:(_Bool *)arg5 leadingEdge:(_Bool *)arg6;
+ (id)closestColumnInColumnsArray:(id)arg1 forPoint:(struct CGPoint)arg2 ignoreEmptyColumns:(_Bool)arg3 ignoreDrawableOnlyColumns:(_Bool)arg4;
+ (struct CGRect)rectForSelection:(id)arg1 withColumns:(id)arg2 useParagraphModeRects:(_Bool)arg3;
+ (struct CGRect)rectForSelection:(id)arg1 withColumns:(id)arg2;
+ (struct CGRect)caretRectForInsertionPoint:(id)arg1 withColumns:(id)arg2;
@property(nonatomic) _Bool textIsVertical; // @synthesize textIsVertical=_textIsVertical;
@property(retain, nonatomic) id <TSWPStyleProvider> styleProvider; // @synthesize styleProvider=_styleProvider;
@property(nonatomic) unsigned long long scaleTextPercent; // @synthesize scaleTextPercent=_scaleTextPercent;
@property(nonatomic) unsigned long long pageNumber; // @synthesize pageNumber=_pageNumber;
@property(nonatomic) unsigned long long columnIndex; // @synthesize columnIndex=_columnIndex;
@property(nonatomic) int layoutResultFlags; // @synthesize layoutResultFlags=_layoutResultFlags;
@property(nonatomic) double erasableContentBottom; // @synthesize erasableContentBottom=_erasableContentBottom;
@property(nonatomic) double contentBottom; // @synthesize contentBottom=_contentBottom;
@property(nonatomic) unsigned long long nextWidowPullsDownFromCharIndex; // @synthesize nextWidowPullsDownFromCharIndex=_nextWidowPullsDownFromCharIndex;
@property(nonatomic) unsigned long long anchoredCharCount; // @synthesize anchoredCharCount=_anchoredCharCount;
@property(nonatomic) unsigned long long startAnchoredCharIndex; // @synthesize startAnchoredCharIndex=_startAnchoredCharIndex;
@property(nonatomic) unsigned long long characterCount; // @synthesize characterCount=_characterCount;
@property(nonatomic) unsigned long long startCharIndex; // @synthesize startCharIndex=_startCharIndex;
@property(nonatomic) struct CGAffineTransform transformFromWP; // @synthesize transformFromWP=_transform;
@property(nonatomic) struct CGRect wpBounds; // @synthesize wpBounds=_frameBounds;
@property(readonly, nonatomic) TSWPStorage *storage; // @synthesize storage=_storage;
- (id).cxx_construct;
- (void).cxx_destruct;
- (_Bool)onlyHasAnchoredDrawable;
- (id)singleLinePartitionedInfoAtStart:(_Bool)arg1;
- (id)partitionedLayoutForInfo:(id)arg1;
- (id)smartFieldAtCharIndex:(unsigned long long)arg1 attributeKind:(unsigned int)arg2;
- (void)renderWithRenderer:(id)arg1 currentSelection:(id)arg2 limitSelection:(id)arg3 listRange:(struct _NSRange)arg4 rubyGlyphRange:(struct _NSRange)arg5 isCanvasInteractive:(_Bool)arg6 spellChecker:(id)arg7 suppressedMisspellingRange:(struct _NSRange)arg8 blackAndWhite:(_Bool)arg9 dictationInterpretations:(const struct TSWPRangeVector *)arg10 autocorrections:(const struct TSWPRangeVector *)arg11 markedRange:(struct _NSRange)arg12 markedText:(id)arg13 renderMode:(int)arg14 pageCount:(unsigned long long)arg15 suppressInvisibles:(_Bool)arg16 currentCanvasSelection:(id)arg17;
- (void)renderWithRenderer:(id)arg1 pageCount:(unsigned long long)arg2;
- (struct _TSWPCharIndexAndPosition)calcAttachmentPositionForDrawable:(id)arg1 atPoint:(struct CGPoint)arg2 inTextLayoutTarget:(id)arg3 tlBoundsInfluencingWrap:(struct CGPoint)arg4 wrapOutset:(struct CGSize)arg5 wrapMargin:(double)arg6 makeInline:(_Bool)arg7;
- (unsigned long long)charIndexFromWPPoint:(struct CGPoint)arg1 pastCenterGoesToNextChar:(_Bool)arg2 allowNotFound:(_Bool)arg3 outFragment:(const struct TSWPLineFragment **)arg4 leadingEdge:(_Bool *)arg5;
- (unsigned long long)charIndexForSelectionFromPoint:(struct CGPoint)arg1 isTail:(_Bool)arg2;
- (unsigned long long)charIndexFromPoint:(struct CGPoint)arg1 allowPastBreak:(_Bool)arg2 pastCenterGoesToNextChar:(_Bool)arg3 allowNotFound:(_Bool)arg4 isAtEndOfLine:(_Bool *)arg5 outFragment:(const struct TSWPLineFragment **)arg6 leadingEdge:(_Bool *)arg7;
- (unsigned long long)charIndexFromPoint:(struct CGPoint)arg1 allowPastBreak:(_Bool)arg2 pastCenterGoesToNextChar:(_Bool)arg3 allowNotFound:(_Bool)arg4 isAtEndOfLine:(_Bool *)arg5 leadingEdge:(_Bool *)arg6;
- (id)drawableIntersectionRectsForSelection:(id)arg1 inTarget:(id)arg2;
- (struct CGRect)erasableRectForSelectionRange:(struct _NSRange)arg1;
- (id)rectsForSelection:(id)arg1 ranges:(id *)arg2;
- (id)rectsForSelectionRange:(struct _NSRange)arg1 selectionType:(int)arg2 includeSpaceAfter:(_Bool)arg3 includeSpaceBefore:(_Bool)arg4 includeLeading:(_Bool)arg5 forParagraphMode:(_Bool)arg6 includeRuby:(_Bool)arg7;
- (id)rectsForSelectionRange:(struct _NSRange)arg1 selectionType:(int)arg2 forParagraphMode:(_Bool)arg3 includeRuby:(_Bool)arg4;
- (id)rectsForSelectionRange:(struct _NSRange)arg1 selectionType:(int)arg2 forParagraphMode:(_Bool)arg3;
- (id)rectsForSelectionRange:(struct _NSRange)arg1 selectionType:(int)arg2;
- (id)rectsForSelectionRanges:(id)arg1 selectionType:(int)arg2;
- (id)pMutableRectsForSelectionRange:(struct _NSRange)arg1 selectionType:(int)arg2 includeSpaceAfter:(_Bool)arg3 includeSpaceBefore:(_Bool)arg4 includeLeading:(_Bool)arg5 forParagraphMode:(_Bool)arg6 includeRuby:(_Bool)arg7 inranges:(id)arg8 outranges:(id *)arg9;
- (const struct TSWPLineFragment *)pColumnEndingPartitionedLineFragmentInSelectionRange:(struct _NSRange)arg1;
- (id)rectsForSelectionRange:(struct _NSRange)arg1;
- (id)rectsForSelection:(id)arg1;
- (struct CGRect)firstRectForSelection:(id)arg1 includeSpaceAfter:(_Bool)arg2 includeSpaceBefore:(_Bool)arg3 includeLeading:(_Bool)arg4;
- (id)lineSelectionsForSelection:(id)arg1;
@property(readonly, nonatomic) struct CGRect typographicBoundsForCell;
@property(readonly, nonatomic) struct CGRect typographicBounds;
- (double)topOfLineAtCharIndex:(unsigned long long)arg1;
- (struct CGRect)columnRectForRange:(struct _NSRange)arg1;
- (unsigned long long)glyphCountForRubyFieldAtCharIndex:(unsigned long long)arg1;
- (struct CGRect)glyphRectForRubyFieldAtCharIndex:(unsigned long long)arg1 glyphRange:(struct _NSRange)arg2;
- (struct CGRect)glyphRectForRange:(struct _NSRange)arg1 includingLabel:(_Bool)arg2;
- (struct CGRect)caretRectForSelection:(id)arg1;
- (unsigned long long)lineIndexForCharIndex:(unsigned long long)arg1 eol:(_Bool)arg2;
- (const struct TSWPLineFragment *)lineFragmentForCharIndex:(unsigned long long)arg1 knobTag:(unsigned long long)arg2 selectionType:(int)arg3;
- (const struct TSWPLineFragment *)lineFragmentClosestToPoint:(struct CGPoint)arg1 knobTag:(unsigned long long)arg2;
- (double)horizontalOffsetForCharIndex:(unsigned long long)arg1 lineFragmentIndex:(unsigned long long)arg2 bumpPastHyphen:(_Bool)arg3 allowPastLineBounds:(_Bool)arg4;
- (CDStruct_50f584da)lineMetricsAtCharIndex:(unsigned long long)arg1 allowEndOfLine:(_Bool)arg2;
- (double)baselineOfLineFragmentAtCharIndex:(unsigned long long)arg1;
- (struct _NSRange)rangeOfLineFragmentAtIndex:(unsigned long long)arg1;
- (struct CGRect)labelBoundsOfLineFragmentAtIndex:(unsigned long long)arg1;
- (struct CGRect)boundsOfLineFragmentAtIndex:(unsigned long long)arg1;
- (void)makeEmpty:(unsigned long long)arg1 layoutResultFlags:(int)arg2;
- (unsigned long long)lineFragmentCountForBaseline:(double)arg1;
- (void)offsetLineFragmentsByPoint:(struct CGPoint)arg1;
- (void)normalizeLineFragmentOrigins:(struct CGPoint)arg1;
- (const struct TSWPLineFragment *)lineFragmentAtIndex:(unsigned long long)arg1;
- (void)setLineFragmentArray:(const shared_ptr_1a254aea *)arg1;
- (const shared_ptr_1a254aea *)lineFragmentArray;
@property(readonly, nonatomic) unsigned long long countLines;
@property(readonly, nonatomic) struct CGAffineTransform transformToWP;
@property(readonly, nonatomic) struct CGRect frameBounds;
- (void)clearAdornments;
- (void)addAdornmentRect:(const struct TSWPAdornmentRect *)arg1;
- (_Bool)requiresGlyphVectorsForHeightMeasurement;
- (double)textHeight;
@property(readonly, nonatomic) double textBottom;
- (struct CGRect)erasableBounds:(unsigned int)arg1;
- (double)minimumHeightForLayoutOnPage;
- (double)trimToCharIndex:(unsigned long long)arg1 inTarget:(id)arg2;
- (void)trimToCharIndex:(unsigned long long)arg1 inTarget:(id)arg2 removeAutoNumberFootnoteCount:(unsigned long long)arg3;
- (struct CGSize)maxSize;
- (void)setStorage:(id)arg1 range:(struct _NSRange)arg2;
- (void)incrementRanges:(long long)arg1;
@property(nonatomic) struct _NSRange anchoredRange;
@property(nonatomic) struct _NSRange range;
- (double)logicalBoundsBottom;
- (double)logicalBoundsTop;
- (void)dealloc;
- (id)initWithStorage:(id)arg1 frameBounds:(struct CGRect)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSWPColumnStyle : TSSStyle <TSWPColumnMetrics>
{
}

+ (id)defaultStyleWithContext:(id)arg1;
+ (id)defaultValueForProperty:(int)arg1;
+ (float)defaultFloatValueForProperty:(int)arg1;
+ (int)defaultIntValueForProperty:(int)arg1;
+ (id)propertiesAllowingNSNull;
+ (id)properties;
@property(readonly, nonatomic) _Bool columnsAreLeftToRight;
@property(readonly, nonatomic) _Bool shrinkTextToFit;
@property(readonly, nonatomic) _Bool alwaysStartsNewTarget;
- (double)positionForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2 outWidth:(double *)arg3 outGap:(double *)arg4;
- (double)gapForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2;
- (double)widthForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2;
@property(readonly, nonatomic) unsigned long long columnCount;
- (_Bool)equalWidth;
@property(readonly, nonatomic) TSWPPadding *layoutMargins;
@property(readonly, nonatomic) struct CGSize adjustedInsets;

// Remaining properties
@property(readonly, nonatomic) double textScaleFactor;

@end

@interface TSWPColumns : NSObject
{
    unsigned long long _columnCount;
    _Bool _equalWidth;
    double _widthArray[10];
    double _gapArray[9];
}

+ (id)columns;
@property(nonatomic) _Bool equalWidth; // @synthesize equalWidth=_equalWidth;
@property(nonatomic) unsigned long long columnCount; // @synthesize columnCount=_columnCount;
- (id)description;
- (void)setGap:(double)arg1 forColumnIndex:(unsigned long long)arg2 bodyWidth:(double)arg3;
- (double)p_maxEqualGapForBodyWidth:(double)arg1;
- (void)setWidth:(double)arg1 forColumnIndex:(unsigned long long)arg2 bodyWidth:(double)arg3;
- (double)p_equalWidthForEqualGap:(double)arg1;
- (double)p_equalGapForEqualWidth:(double)arg1;
- (double)positionForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2 outWidth:(double *)arg3 outGap:(double *)arg4;
- (double)gapForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2;
- (double)widthForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2;
- (_Bool)isEqual:(id)arg1;
- (void)p_setColumnCount:(unsigned long long)arg1 gapFraction:(double)arg2;
- (void)p_setEqualWidth:(double)arg1 equalGap:(double)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithEqualColumnCount:(unsigned long long)arg1 gapFraction:(double)arg2;
- (id)initWithColumnCount:(unsigned long long)arg1 equalWidth:(_Bool)arg2 widthArray:(double *)arg3 gapArray:(double *)arg4;
- (id)init;
- (id)initWithColumnCount:(unsigned long long)arg1;

@end

@interface TSWPDataDetectors : NSObject
{
}

+ (id)scanString:(id)arg1 scanRanges:(id)arg2;
+ (id)calculateScanRanges:(id)arg1 changedRange:(struct _NSRange)arg2;
+ (void)registerDataDetectorClass:(Class)arg1;

@end

@interface TSWPDefaultGraphicalAttachmentRenderer : NSObject <TSWPGraphicalAttachmentRenderer>
{
}

- (void)drawAttachment:(id)arg1 inContext:(struct CGContext *)arg2 selection:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSWPDeletionRangeMap : NSObject
{
    unsigned long long _subRangeStart;
    TSWPRangeArray *_removedRanges;
}

- (_Bool)containsCharIndex:(unsigned long long)arg1;
- (id)inverseRangesInStorageRange:(struct _NSRange)arg1;
- (void)adjustByDelta:(long long)arg1;
- (struct _NSRange)unmappedCharRange:(struct _NSRange)arg1;
- (struct _NSRange)mappedCharRange:(struct _NSRange)arg1;
- (unsigned long long)unmappedCharIndex:(unsigned long long)arg1;
- (unsigned long long)mappedCharIndex:(unsigned long long)arg1;
- (void)dealloc;
- (id)initWithSubRange:(struct _NSRange)arg1 removeRanges:(id)arg2;

@end

@interface TSWPDrawableAttachment : TSWPAttachment
{
    TSDDrawableInfo *_drawableInfo;
    int _hOffsetType;
    double _hOffset;
    int _vOffsetType;
    double _vOffset;
    int _vAlignment;
    double _attachmentAnchorY;
}

+ (void)setPositionerClass:(Class)arg1;
@property(nonatomic) double attachmentAnchorY; // @synthesize attachmentAnchorY=_attachmentAnchorY;
@property(nonatomic) int vAlignment; // @synthesize vAlignment=_vAlignment;
@property(nonatomic) double vOffset; // @synthesize vOffset=_vOffset;
@property(nonatomic) int vOffsetType; // @synthesize vOffsetType=_vOffsetType;
@property(nonatomic) double hOffset; // @synthesize hOffset=_hOffset;
@property(nonatomic) int hOffsetType; // @synthesize hOffsetType=_hOffsetType;
@property(readonly, retain, nonatomic) TSDDrawableInfo *drawable; // @synthesize drawable=_drawableInfo;
- (void)wasRemovedFromDocumentRoot:(id)arg1;
- (void)willBeRemovedFromDocumentRoot:(id)arg1;
- (void)wasAddedToDocumentRoot:(id)arg1 context:(id)arg2;
- (void)willBeAddedToDocumentRoot:(id)arg1 context:(id)arg2;
- (void)adoptStylesheet:(id)arg1 withMapper:(id)arg2;
- (void)infoChanged;
- (unsigned long long)enabledKnobMask;
- (_Bool)specifiesEnabledKnobMask;
- (_Bool)isSearchable;
- (Class)positionerClass;
- (_Bool)isAnchored;
- (_Bool)isPartitioned;
- (_Bool)isDrawable;
- (_Bool)isHTMLWrap;
- (void)setParentStorage:(id)arg1;
- (void)attachDrawable:(id)arg1;
- (id)detachDrawable;
- (void)invalidate;
@property(readonly, nonatomic) double descent;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithContext:(id)arg1;
- (id)initWithContext:(id)arg1 drawable:(id)arg2;
- (id)init;
- (void)dealloc;
- (int)elementKind;
- (id)textStorages;
- (id)textRepresentationForCopy;

@end

@interface TSWPDropCap : NSObject <NSCopying>
{
    unsigned long long _charCount;
    TSSPropertyMap *_characterStyleOverridePropertyMap;
    NSArray *_spacings;
}

+ (id)dropCapWithCharCount:(unsigned long long)arg1 characterStyleOverridePropertyMap:(id)arg2 spacings:(id)arg3;
+ (id)dropCapWithCharCount:(unsigned long long)arg1 characterStyleOverridePropertyMap:(id)arg2 spacing:(id)arg3;
+ (id)dropCapWithCharCount:(unsigned long long)arg1 characterStyleOverridePropertyMap:(id)arg2 lineCount:(unsigned long long)arg3;
@property(readonly, retain, nonatomic) NSArray *spacings; // @synthesize spacings=_spacings;
@property(readonly, retain, nonatomic) TSSPropertyMap *characterStyleOverridePropertyMap; // @synthesize characterStyleOverridePropertyMap=_characterStyleOverridePropertyMap;
@property(readonly, nonatomic) unsigned long long charCount; // @synthesize charCount=_charCount;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCharCount:(unsigned long long)arg1 characterStyleOverridePropertyMap:(id)arg2 spacings:(id)arg3;

@end

@interface TSWPDropCapBackgroundAdornment : NSObject <TSWPLineFragmentAdornment>
{
    TSUColor *_color;
    struct CGRect _bounds;
}

- (void)drawAdornmentForFragment:(const struct TSWPLineFragment *)arg1 inContext:(struct CGContext *)arg2 withFlags:(unsigned int)arg3 state:(const struct TSWPDrawingState *)arg4 bounds:(struct CGRect)arg5;
@property(readonly, nonatomic) _Bool isBackground;
- (void)dealloc;
- (id)initWithColor:(id)arg1 bounds:(struct CGRect)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSWPDropCapSpacing : NSObject <NSCopying>
{
    _Bool _allowSpanParagraphs;
    unsigned long long _lineCount;
    unsigned long long _elevatedLineCount;
    unsigned long long _followingLineCount;
    double _padding;
    unsigned long long _flags;
    double _maxWidthFactor;
}

+ (id)dropCapSpacingWithLineCount:(unsigned long long)arg1 elevatedLineCount:(unsigned long long)arg2;
@property(nonatomic) double maxWidthFactor; // @synthesize maxWidthFactor=_maxWidthFactor;
@property(nonatomic) unsigned long long flags; // @synthesize flags=_flags;
@property(nonatomic) _Bool allowSpanParagraphs; // @synthesize allowSpanParagraphs=_allowSpanParagraphs;
@property(nonatomic) double padding; // @synthesize padding=_padding;
@property(nonatomic) unsigned long long followingLineCount; // @synthesize followingLineCount=_followingLineCount;
@property(nonatomic) unsigned long long elevatedLineCount; // @synthesize elevatedLineCount=_elevatedLineCount;
@property(nonatomic) unsigned long long lineCount; // @synthesize lineCount=_lineCount;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)init;

@end

@interface TSWPEditMenuController : NSObject <TSKKeyboardObserver>
{
    int _menuState;
    _Bool _showMenuOnKeyboard;
    _Bool _isBeginningEditing;
}

+ (_Bool)isAnimating;
+ (void)hideEditMenu;
+ (void)showEditMenuAtTargetRect:(struct CGRect)arg1 canCenterHUD:(_Bool)arg2 interactiveCanvasController:(id)arg3;
+ (void)p_showEditMenuForInteractiveCanvasController:(id)arg1;
+ (id)sharedEditMenuController;
+ (int)menuState;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)p_sharedEditMenuController;
+ (id)_singletonAlloc;
@property(nonatomic) _Bool isBeginningEditing; // @synthesize isBeginningEditing=_isBeginningEditing;
@property(nonatomic) _Bool showMenuOnKeyboard; // @synthesize showMenuOnKeyboard=_showMenuOnKeyboard;
- (void)p_clearIsBeginningEditing;
- (void)p_didAnimateKeyboard;
- (void)p_didHideMenu:(id)arg1;
- (void)p_willHideMenu:(id)arg1;
- (void)p_didShowMenu:(id)arg1;
- (void)p_willShowMenu:(id)arg1;
- (void)p_setMenuVisible:(id)arg1;
- (void)keyboardDidHideOrUndock:(id)arg1;
- (void)keyboardDidShowOrDock:(id)arg1;
- (void)dealloc;
- (id)init;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSWPEditingController : NSObject <TSDAutoscrollDelegate, TSDGestureTarget, TSKPopoverBasedViewControllerDelegate, TSWPReferenceLibraryViewControllerDelegate, TSDTextInput, TSDTrackerManipulator, TSKChangeSourceObserver>
{
    TSWPStorage *_storage;
    unsigned long long _initialStorageChangeCount;
    TSWPInteractiveCanvasController *_interactiveCanvasController;
    TSWPReferenceLibraryViewController *_definitionViewController;
    UIPopoverController *_definitionPopoverController;
    TSKPopoverBasedViewController<TSWPDismissBlockPopover> *_rubyTextViewController;
    _Bool _cancelRubyText;
    TSWPSelection *_selection;
    struct _NSRange _markedRange;
    NSAttributedString *_markedText;
    TSWPCharacterStyle *_insertionStyle;
    unsigned long long _selectionAnchor;
    _Bool _coalescingText;
    _Bool _canCoalesce;
    _Bool _selectionLastModifiedWithKnob;
    _Bool _selectionLastModifiedWithKeyboard;
    _Bool _knobTracking;
    _Bool _tapAndLongPressIsPossible;
    _Bool _ignoreFutureImmediatePresses;
    unsigned long long _knobTag;
    struct CGPoint _knobTrackingDragPoint;
    unsigned int _knobTrackingTapCount;
    _Bool _isBecomingActive;
    struct _NSRange _originalSelectionRange;
    TSDAutoscroll *_autoscroll;
    struct CGPoint _autoscrollPoint;
    _Bool _magnifying;
    NSArray *_suggestions;
    id <TSDEditor> _hostEditor;
    _Bool _suppressBreaks;
    _Bool _suppressTabs;
    _Bool _suppressPhonetics;
    _Bool _disableInspector;
    _Bool _supportsDataDetectors;
    _Bool _isEditingPlainText;
    _Bool _suppressEditMenu;
    unsigned long long _initialPressTextSelectionGranularity;
    _Bool _shouldShowEditMenuForInsertionPoint;
    _Bool _showNextEditMenu;
    struct CGPoint _knobToTouchOffset;
    TSWPTextKnobTracker *_knobTracker;
    _Bool _readyToEnd;
    _Bool _shouldDisplayKeyboard;
    TSKFidgetResolver *_fidgetResolver;
    _Bool _editMenuIsVisible;
    NSString *_mostRecentGestureKind;
    _Bool _gestureBeganWhenEditingBegan;
    _Bool _annotationWasShowingAtStartOfGesture;
    unsigned long long _currentSelectionFlags;
    NSDictionary *_tapInfo;
    TSDMultiPaneController *_insertBreakPopoverController;
    NSMutableDictionary *_dictationInterpretations;
    NSMutableDictionary *_autocorrectedEntries;
    id <TSDAnnotationHosting> _previousSelectedAnnotation;
    UIView *_inputViewForHidingKeyboard;
    _Bool _suppressDataDetectorsOnResignTextInput;
    _Bool _canCoalesceBreakingCharacters;
}

@property(nonatomic) _Bool canCoalesceBreakingCharacters; // @synthesize canCoalesceBreakingCharacters=_canCoalesceBreakingCharacters;
@property(nonatomic) _Bool coalescingText; // @synthesize coalescingText=_coalescingText;
@property(nonatomic) _Bool disableInspector; // @synthesize disableInspector=_disableInspector;
@property(nonatomic) _Bool suppressTabs; // @synthesize suppressTabs=_suppressTabs;
@property(nonatomic) _Bool suppressPhonetics; // @synthesize suppressPhonetics=_suppressPhonetics;
@property(nonatomic) _Bool suppressBreaks; // @synthesize suppressBreaks=_suppressBreaks;
@property(nonatomic) id <TSDEditor> hostEditor; // @synthesize hostEditor=_hostEditor;
@property(nonatomic) struct CGPoint autoscrollPoint; // @synthesize autoscrollPoint=_autoscrollPoint;
@property(retain, nonatomic) TSDAutoscroll *autoscroll; // @synthesize autoscroll=_autoscroll;
@property(readonly, nonatomic) _Bool suppressDataDetectorsOnResignTextInput; // @synthesize suppressDataDetectorsOnResignTextInput=_suppressDataDetectorsOnResignTextInput;
@property(readonly, nonatomic) _Bool selectionLastModifiedWithKeyboard; // @synthesize selectionLastModifiedWithKeyboard=_selectionLastModifiedWithKeyboard;
@property(readonly, nonatomic) _Bool selectionLastModifiedWithKnob; // @synthesize selectionLastModifiedWithKnob=_selectionLastModifiedWithKnob;
@property(readonly, nonatomic) unsigned long long currentSelectionFlags; // @synthesize currentSelectionFlags=_currentSelectionFlags;
@property(nonatomic) _Bool shouldDisplayKeyboard; // @synthesize shouldDisplayKeyboard=_shouldDisplayKeyboard;
@property(nonatomic) _Bool isEditingPlainText; // @synthesize isEditingPlainText=_isEditingPlainText;
@property(nonatomic) _Bool supportsDataDetectors; // @synthesize supportsDataDetectors=_supportsDataDetectors;
@property(nonatomic) _Bool isBecomingActive; // @synthesize isBecomingActive=_isBecomingActive;
@property(nonatomic) _Bool canCoalesce; // @synthesize canCoalesce=_canCoalesce;
@property(readonly, nonatomic) TSWPCharacterStyle *insertionStyle; // @synthesize insertionStyle=_insertionStyle;
@property(nonatomic) unsigned int knobTrackingTapCount; // @synthesize knobTrackingTapCount=_knobTrackingTapCount;
@property(nonatomic) struct CGPoint knobTrackingDragPoint; // @synthesize knobTrackingDragPoint=_knobTrackingDragPoint;
@property(nonatomic) unsigned long long knobTag; // @synthesize knobTag=_knobTag;
@property(nonatomic) _Bool knobTracking; // @synthesize knobTracking=_knobTracking;
@property(readonly, nonatomic) NSAttributedString *markedText; // @synthesize markedText=_markedText;
@property(readonly, retain, nonatomic) TSWPStorage *storage; // @synthesize storage=_storage;
@property(readonly, nonatomic) TSWPInteractiveCanvasController *interactiveCanvasController; // @synthesize interactiveCanvasController=_interactiveCanvasController;
- (_Bool)shouldShowSelectedTextAsFocused;
@property(readonly, nonatomic) _Bool suppressesTextInspector;
- (void)addAllDictationInterpretationRangesInRange:(struct _NSRange)arg1 toRanges:(struct TSWPRangeVector *)arg2;
- (id)dictationInterpretationsAtCharIndex:(unsigned long long)arg1 outRange:(struct _NSRange *)arg2;
- (void)p_removeAutocorrectionAtCharIndex:(unsigned long long)arg1;
- (int)valueForWritingDirectionPropertyForInspector:(id)arg1;
- (id)p_previousAutocorrectionForWordAtCharIndex:(unsigned long long)arg1 outRange:(struct _NSRange *)arg2;
- (_Bool)textEditingSupportsFormatBar;
@property(readonly, retain) UIView *inputAccessoryView;
@property(readonly, retain) UIView *inputView;
- (void)p_adjustSelection:(id)arg1 withOtherSelection:(id)arg2 textSelectionGranularity:(unsigned long long)arg3;
- (_Bool)p_canEditTextString;
- (void)p_inputLanguageDidChangeNotification:(id)arg1;
- (void)p_adjustSelection:(id)arg1 withUnscaledCanvasPoint:(struct CGPoint)arg2 textSelectionGranularity:(unsigned long long)arg3 isTapHold:(_Bool)arg4 allowPastBreak:(_Bool)arg5;
- (id)selectionFromUnscaledCanvasPoint:(struct CGPoint)arg1 textSelectionGranularity:(unsigned long long)arg2 isTapHold:(_Bool)arg3 allowPastBreak:(_Bool)arg4 selectsEntireLink:(_Bool)arg5;
- (void)p_setSelectionFromPoint:(struct CGPoint)arg1 textSelectionGranularity:(unsigned long long)arg2 includeListLabels:(_Bool)arg3;
- (void)willBeginMagnification;
- (id)p_extendSelectionToIncludeSmartFields:(id)arg1;
- (id)editingSearchReference;
- (void)setSelectionWithRange:(struct _NSRange)arg1 leadingEdge:(_Bool)arg2 endOfLine:(_Bool)arg3;
- (void)setSelectionWithRange:(struct _NSRange)arg1 endOfLine:(_Bool)arg2;
- (id)selectionWithRange:(struct _NSRange)arg1;
- (id)textFontAtCharIndex:(unsigned long long)arg1;
- (id)p_columnForCharIndex:(unsigned long long)arg1;
- (id)textColorAtCharIndex:(unsigned long long)arg1;
- (id)selectionRectsForRange:(struct _NSRange)arg1;
- (struct CGRect)p_firstRectForRange:(struct _NSRange)arg1 actualRange:(struct _NSRange *)arg2;
- (void)replaceRange:(struct _NSRange)arg1 withText:(id)arg2;
- (void)extendSelectionRight;
- (void)extendSelectionLeft;
- (void)deleteForward;
- (void)deleteBackward;
- (id)characterStyleForDeletedRange:(struct _NSRange)arg1;
- (void)p_setInsertionStyle:(id)arg1;
- (void)setMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2;
- (struct CGRect)firstRectForRange:(struct _NSRange)arg1;
- (void)insertText:(id)arg1;
- (id)textInRange:(struct _NSRange)arg1;
- (id)unfilteredText;
- (unsigned long long)textLength;
- (long long)returnKeyType;
- (_Bool)textIsVerticalAtCharIndex:(unsigned long long)arg1;
- (void)endEditingAndSelectParent:(id)arg1;
- (void)endEditing;
- (void)abandonMarkedText;
- (_Bool)p_keyboardShouldShowOnscreen;
- (_Bool)wantsKeyboard;
- (_Bool)wantsCaret;
- (_Bool)p_isIgnoringKeyboardInput;
- (void)cancelPhoneticsHUDAnimated:(_Bool)arg1;
- (void)dismissPhoneticsHUDAnimated:(_Bool)arg1;
- (_Bool)isDisplayingPhoneticsHUD;
- (struct _NSRange)rangeOfWordEnclosingCharIndex:(unsigned long long)arg1 backward:(_Bool)arg2;
- (_Bool)p_isCharIndex:(unsigned long long)arg1 withinTextUnit:(int)arg2 inDirection:(long long)arg3;
- (_Bool)isCharIndex:(unsigned long long)arg1 withinTextUnit:(long long)arg2 inDirection:(long long)arg3;
- (unsigned long long)p_charIndexByMovingCharIndex:(unsigned long long)arg1 withEolAffinity:(_Bool *)arg2 toBoundary:(int)arg3 inDirection:(long long)arg4 preferPosition:(double *)arg5 isLeadingEdge:(_Bool *)arg6;
- (unsigned long long)charIndexByMovingPosition:(id)arg1 toBoundary:(long long)arg2 inDirection:(long long)arg3 preferPosition:(double *)arg4;
- (const struct TSWPLineFragment *)p_nearestLineFragmentWithSameVerticalPositionAs:(unsigned long long)arg1 xPos:(double)arg2 inColumn:(id)arg3;
- (const struct TSWPLineFragment *)p_lastVisibleLineFragmentForCharIndex:(unsigned long long)arg1 eol:(_Bool)arg2;
- (const struct TSWPLineFragment *)p_lineFragmentForCharIndex:(unsigned long long)arg1 column:(id *)arg2 eol:(_Bool)arg3;
- (id)logicalToVisualSelection:(id)arg1;
- (id)calculateVisualRunsFromSelection:(id)arg1 updateControllerSelection:(_Bool)arg2;
- (void)invalidateSelectionVisualRuns;
- (unsigned long long)p_lineIndexForCharIndex:(unsigned long long)arg1 column:(id *)arg2 eol:(_Bool)arg3;
- (unsigned long long)p_MoveByLineRange:(struct _NSRange)arg1 up:(_Bool)arg2;
- (id)p_layoutTargetForCharIndex:(unsigned long long)arg1 eolAffinity:(_Bool)arg2;
- (_Bool)p_isCharIndex:(unsigned long long)arg1 withEolAffinity:(_Bool)arg2 atBoundary:(int)arg3 inDirection:(long long)arg4;
- (_Bool)isCharIndex:(unsigned long long)arg1 withEolAffinity:(_Bool)arg2 atBoundary:(long long)arg3 inDirection:(long long)arg4;
- (unsigned long long)p_charIndexAtPoint:(struct CGPoint)arg1 isAtEndOfLine:(_Bool *)arg2;
- (unsigned long long)closestCharIndexToPoint:(struct CGPoint)arg1 isAtEndOfLine:(_Bool *)arg2;
- (id)p_highlightSelectionForSelection:(id)arg1;
- (_Bool)canAcceptOrRejectChange;
- (_Bool)canAddOrShowComment;
- (_Bool)canRemoveHighlightForCurrentSelection;
- (_Bool)canShowCommentForCurrentSelectionGetHighlight:(id *)arg1 range:(struct _NSRange *)arg2;
- (_Bool)canHighlightCurrentSelection;
- (id)currentFontColor;
- (_Bool)p_isTextInputEditor;
- (void)customSelectAll:(id)arg1;
- (void)selectAll:(id)arg1;
- (void)noReplacementsFound:(id)arg1;
- (void)p_switchToReplaceSelection;
- (void)styleAction:(id)arg1;
- (void)definitionAction:(id)arg1;
- (void)replaceAction:(id)arg1;
- (id)extraMenuItems;
- (void)p_addCommonEditItemsIntoMenu:(id)arg1;
- (void)p_addInsertItemsIntoMenu:(id)arg1;
- (void)customSelect:(id)arg1;
- (void)select:(id)arg1;
- (void)popoverControllerDidDismissPopoverBasedViewController:(id)arg1;
- (void)referenceLibrarayViewControllerWasDismissed:(id)arg1;
- (_Bool)editorKeyboardLanguageIsRTL;
- (id)editorKeyboardLanguage;
- (long long)writingDirectionForCharIndex:(unsigned long long)arg1;
- (_Bool)canSetWritingDirection:(int)arg1;
- (_Bool)selectionIsOnEmptyParagraph;
- (void)copyObject:(id)arg1;
- (void)copyToPasteboard:(id)arg1;
- (void)copy:(id)arg1;
- (id)currentLayoutParent;
- (id)styleProvider;
- (int)p_canPerformOptInEditorAction:(SEL)arg1 withSender:(id)arg2;
- (int)canPerformEditorAction:(SEL)arg1 withSender:(id)arg2;
- (_Bool)p_canInsertBreak;
- (_Bool)p_canSelectAllWithSender:(id)arg1;
- (_Bool)p_selectionIsSimpleInsertionPoint;
- (_Bool)textStorage:(id)arg1 hasWhitespaceBoundedWordAtSelection:(id)arg2;
- (struct CGRect)targetRectForSelection:(id)arg1;
- (struct CGRect)overrideCaretRectForSelection:(id)arg1;
- (struct _NSRange)smartDeletionSelection:(id)arg1 isVisual:(_Bool *)arg2;
- (_Bool)pStorageCanAcceptDrawableAttachments;
- (id)pasteboardController;
- (void)autoscrollWillNotStart;
- (void)updateAfterAutoscroll:(id)arg1;
@property(readonly, nonatomic) TSDInteractiveCanvasController *icc;
- (void)asyncProcessChanges:(id)arg1 forChangeSource:(id)arg2;
- (id)p_selectionForRep:(id)arg1 point:(struct CGPoint)arg2 textSelectionGranularity:(unsigned long long)arg3 isTapHold:(_Bool)arg4 precise:(_Bool)arg5 includeListLabels:(_Bool)arg6 allowPastBreak:(_Bool)arg7 selectsEntireLink:(_Bool)arg8;
- (id)p_selectionFromUnscaledCanvasPoint:(struct CGPoint)arg1 textSelectionGranularity:(unsigned long long)arg2 isTapHold:(_Bool)arg3 allowPastBreak:(_Bool)arg4 selectsEntireLink:(_Bool)arg5;
- (_Bool)p_hitListLabelAtCharIndex:(unsigned long long)arg1 atNaturalPoint:(struct CGPoint)arg2 inRep:(id)arg3;
- (void)p_setTappedSelection:(id)arg1;
- (void)p_sendHandleTapNotification;
- (void)tappedOnKnob:(id)arg1;
- (id)selectionForRep:(id)arg1 point:(struct CGPoint)arg2 textSelectionGranularity:(unsigned long long)arg3;
- (void)tappedInRep:(id)arg1 point:(struct CGPoint)arg2 tapCount:(unsigned long long)arg3 isTapHold:(_Bool)arg4 precise:(_Bool)arg5;
- (unsigned long long)textSelectionGranularityForTapCount:(unsigned long long)arg1;
- (unsigned long long)charIndexInRep:(id)arg1 fromPoint:(struct CGPoint)arg2 allowPastBreak:(_Bool)arg3 allowNotFound:(_Bool)arg4 pastCenterGoesToNextChar:(_Bool)arg5 isAtEndOfLine:(_Bool *)arg6;
- (unsigned long long)charIndexInRep:(id)arg1 fromPoint:(struct CGPoint)arg2 allowPastBreak:(_Bool)arg3 allowNotFound:(_Bool)arg4 isAtEndOfLine:(_Bool *)arg5;
- (unsigned long long)charIndexInRep:(id)arg1 fromPoint:(struct CGPoint)arg2 allowPastBreak:(_Bool)arg3 isAtEndOfLine:(_Bool *)arg4 leadingEdge:(_Bool *)arg5;
- (id)p_hitRepWithPoint:(struct CGPoint)arg1 keyboardAdjustmentDelta:(double)arg2;
- (unsigned long long)countOfHyperlinksInUserSelection;
- (void)clearMarkedRange;
@property(readonly, nonatomic) struct _NSRange markedRange;
- (_Bool)trackingKnobInParagraphMode;
- (_Bool)isParagraphModeWithSelection:(id)arg1 onStorage:(id)arg2;
- (_Bool)isInParagraphMode;
- (id)p_columnForCharIndex:(unsigned long long)arg1 withStorage:(id)arg2;
- (id)extendSelectionToParagraphs:(id)arg1;
- (void)selectionChangedWithFlags:(unsigned long long)arg1 wpFlags:(unsigned long long)arg2;
- (void)p_postSelectionContentsChangedNotification;
- (void)p_postWillStyleTextNotification;
- (void)protectedStopMagnification;
- (void)p_beginMagnification:(id)arg1 forRep:(id)arg2 atPoint:(struct CGPoint)arg3;
- (void)revertLastSelectionChangeIfElapsedTimeIsUnderPinFidgetThreshold;
- (void)p_setSelection:(id)arg1 withFlags:(unsigned long long)arg2 force:(_Bool)arg3;
- (void)setSelection:(id)arg1 withFlags:(unsigned long long)arg2;
- (void)p_setRevertibleSelection:(id)arg1;
@property(retain, nonatomic) TSWPSelection *selection; // @synthesize selection=_selection;
- (void)setInsertionPoint:(unsigned long long)arg1 withFlags:(unsigned long long)arg2;
@property(nonatomic) unsigned long long insertionPoint;
- (void)p_handleKnobDragGestureRecognizer:(id)arg1;
- (void)p_endAutoscroll;
- (void)p_beginOperationAndTakeControl;
- (void)operationDidEnd;
- (_Bool)readyToEndOperation;
- (id)tracker;
- (_Bool)allowTrackerManipulatorToTakeControl:(id)arg1;
- (void)gestureSequenceDidEnd;
- (void)gestureSequenceWillBegin;
- (_Bool)handleGesture:(id)arg1;
- (void)p_handleTapGestures:(id)arg1;
- (void)p_createKnobTracker:(id)arg1 forRep:(id)arg2 tapCount:(unsigned long long)arg3;
- (void)p_beginKnobTrackingSelection:(id)arg1 forRep:(id)arg2 atPoint:(struct CGPoint)arg3;
- (void)p_dismissDefinitionPopover;
- (void)p_cancelTapAndLongPressPreviousSelector;
- (void)p_beginTapAndLongPress:(id)arg1;
- (void)p_handleTapAndTouchGesture:(id)arg1;
- (void)handleHardPressGestureRecognizer:(id)arg1;
- (id)p_updateEditingRepIfApplicableWithGesture:(id)arg1 unscaledCanvasPoint:(struct CGPoint)arg2;
- (void)p_stopHorizontalRangedMagnification;
- (void)p_moveHorizontalRangedLoupeForRep:(id)arg1 unscaledCanvasPoint:(struct CGPoint)arg2;
- (void)p_beginHorizontalRangedMagnificationForRep:(id)arg1 unscaledCanvasPoint:(struct CGPoint)arg2;
- (struct CGPoint)p_clampPointToLine:(struct CGPoint)arg1 trackingRep:(id)arg2;
- (void)p_handleLongPressGesture:(id)arg1;
- (void)p_handleSwipeMoveCaretWithTextGranularity:(long long)arg1 textDirection:(long long)arg2 layoutDirection:(long long)arg3;
- (_Bool)canHandleGesture:(id)arg1;
- (_Bool)swipeableParagraphIsSelected;
- (_Bool)canHandleSwipeGestureForGestureRecognizer:(id)arg1 outDelta:(long long *)arg2 outTextDirection:(long long *)arg3 outLayoutDirection:(long long *)arg4;
- (id)p_repForSwipeAtUnscaledLocation:(struct CGPoint)arg1;
- (_Bool)p_respondsToRubyGestures;
- (_Bool)p_respondsToHyperlinkGestures;
- (_Bool)p_respondsToListGestures;
- (id)p_documentViewController;
- (struct CGRect)p_adjustedPopoverTargetRectForRange:(struct _NSRange)arg1;
- (id)p_viewControllerForPresenting;
- (id)p_wordRangesForRange:(struct _NSRange)arg1;
- (void)p_clearSecondaryHighlight;
- (void)p_highlightRubyTextWithRange:(struct _NSRange)arg1;
- (double)targetPointSizeForSelectionWithViewScale:(double)arg1;
- (double)viewScaleForSelectionWithTargetPointSize:(double)arg1;
- (double)p_effectiveFontSizeForCurrentSelection;
- (struct _NSRange)editRange;
- (id)topLevelInspectorAutosaveName;
- (void)updateHUDState;
- (void)p_cancelDelayedSelectors;
- (_Bool)canCenterHUD;
- (void)p_updateHUDState;
- (void)p_rescheduleDelayedUpdateHUDState;
- (_Bool)isSelectionSingleAnchoredDrawableAttachment;
- (void)p_clearEditMenuFlags;
- (void)dismissActivePopovers;
- (_Bool)wantsDoneButtonWhenEditing;
- (_Bool)editorCanHideEditMenu;
- (_Bool)shouldShowEditMenu;
- (struct CGRect)p_targetRectForSelection:(id)arg1;
- (void)p_suppressSelectionHighlight:(_Bool)arg1;
- (id)p_editingRepForCharIndex:(unsigned long long)arg1;
- (id)editingReps;
- (void)cancelKnobTrackingAndMagnifying;
- (void)didEnterBackground;
- (void)willEnterForeground;
- (void)willResignTextInputEditor;
- (void)willResignTextInputEditorAndDeselect:(_Bool)arg1;
- (id)p_containingShapeRep;
- (void)didBecomeTextInputEditor;
- (void)willResignCurrentEditor;
- (void)didBecomeCurrentEditor;
- (id)documentRoot;
- (id)model;
- (void)teardown;
- (void)dealloc;
- (id)initWithStorage:(id)arg1 interactiveCanvasController:(id)arg2;
@property(readonly, retain, nonatomic) TSKSelection<TSDTextSelection> *textInputSelection;
- (struct _NSRange)tsax_rangeOfLineFragmentAtCharIndex:(unsigned long long)arg1;
- (id)tsax_listItemLabelForCharIndex:(unsigned long long)arg1 textIsLiteral:(_Bool *)arg2;
- (unsigned long long)p_getVisualInsertionPointIndexForString:(id)arg1 selection:(id)arg2;
- (unsigned long long)p_getVisualDeletionIndexForSelection:(id)arg1 backward:(_Bool *)arg2;
- (const struct TSWPLineFragment *)p_lineFragmentWithCaretInfo:(CDStruct_7549c2a6 *)arg1 forSelection:(id)arg2;
- (int)p_writingDirectionForCharAtIndex:(unsigned long long)arg1;
- (void)p_selection:(id)arg1 toGlyphRange:(CDStruct_bccfccf2 *)arg2;
- (unsigned long long)p_leftEdgeForSelection:(id)arg1 withLeadingEdge:(_Bool *)arg2;
- (unsigned long long)p_rightEdgeForSelection:(id)arg1 withLeadingEdge:(_Bool *)arg2;
- (unsigned long long)p_LeftCharForInsertion:(const CDStruct_bccfccf2 *)arg1;
- (struct _NSRange)p_adjustVisualSelection:(id)arg1 withOtherSelection:(id)arg2;
- (unsigned long long)charIndexMovingByWordFromCharIndex:(unsigned long long)arg1 inDirection:(long long)arg2;
- (int)p_moveFromCharIndex:(unsigned long long *)arg1 tokenizerRef:(struct __CFStringTokenizer **)arg2 tokenizerRange:(struct _NSRange *)arg3 direction:(long long)arg4 currentWordRange:(struct _NSRange)arg5 newWordRange:(struct _NSRange *)arg6 reasonToStop:(unsigned int)arg7;
- (struct __CFStringTokenizer *)p_createTokenizerForCharIndex:(unsigned long long)arg1 outTokenizerRange:(struct _NSRange *)arg2;
- (unsigned long long)p_adjustedCharIndexForWordTestingFromCharIndex:(unsigned long long)arg1 forDirection:(long long)arg2;
- (_Bool)p_isLayoutLeftToRightAtCharIndex:(unsigned long long)arg1;
- (unsigned long long)charIndexMovingByCharacterFromCharIndex:(unsigned long long)arg1 leadingEdge:(_Bool *)arg2 inDirection:(long long)arg3;
- (struct _NSRange)p_expandParagraphRangeForEnumerator:(struct TSWPParagraphEnumerator *)arg1;
- (unsigned long long)charIndexMovingByCharacterFromCharIndex:(unsigned long long)arg1 inDirection:(long long)arg2;
- (unsigned long long)p_layoutOrderCharIndexForCaretCharIndex:(unsigned long long)arg1 inDirection:(long long)arg2;
- (unsigned long long)p_caretCharIndexForLayoutOrderCharIndex:(unsigned long long)arg1 inDirection:(long long)arg2;
- (_Bool)pIsSelectionPlaceHolderTextWithSelection:(id)arg1;
- (_Bool)pIsSelectionPlaceHolderText;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingConnectionLineAttributes;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingEndpoints;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingFill;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingOpacity;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingReflection;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingResize;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingShadow;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingShrinkTextToFit;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingSmartShapeAttributes;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingStroke;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingTextInset;
@property(retain, nonatomic) TSKSelection<TSDTextSelection> *selectionForArrowKeys;
@property(readonly) Class superclass;
@property(readonly) _Bool wantsRawArrowKeyEvents;

@end

@interface TSWPEffectsWindow : UIWindow
{
    _Bool _readyToGo;
    unsigned int _activeEffectsCount;
    UITextView *_dummyToReclaimFirstResponder;
}

+ (id)sharedEffectsWindowAboveStatusBar;
- (void)pDidChangeStatusBarOrientation:(id)arg1;
- (void)p_updateForOrientation:(long long)arg1;
- (void)willRemoveSubview:(id)arg1;
- (void)didAddSubview:(id)arg1;
- (void)dealloc;
- (_Bool)_canAffectStatusBarAppearance;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface TSWPEquationInfo : TSDDrawableInfo
{
    EQKitEquation *_equation;
}

+ (void)registerMathMLFontsWithWP;
+ (void)forceLoadAllMathMLFonts;
@property(retain, nonatomic) EQKitEquation *equation; // @synthesize equation=_equation;
- (Class)repClass;
- (Class)layoutClass;
- (void)dealloc;
- (id)copyWithContext:(id)arg1;
- (id)initWithContext:(id)arg1 mathMLNode:(struct _xmlNode *)arg2 fromXMLDoc:(struct _xmlDoc *)arg3;

@end

@interface TSWPEquationLayout : TSDLayout
{
    _Bool _equationIsValid;
    id <EQKitLayout> _equationLayout;
    id <EQKitLayoutContext> _equationLayoutContext;
    struct CGColor *_textColor;
    TSDShadow *_textShadow;
}

@property(readonly, nonatomic) TSDShadow *textShadow; // @synthesize textShadow=_textShadow;
@property(readonly, nonatomic) struct CGColor *textColor; // @synthesize textColor=_textColor;
@property(readonly, nonatomic) _Bool equationIsValid; // @synthesize equationIsValid=_equationIsValid;
@property(retain, nonatomic) id <EQKitLayoutContext> equationLayoutContext; // @synthesize equationLayoutContext=_equationLayoutContext;
@property(readonly, nonatomic) id <EQKitLayout> equationLayout; // @synthesize equationLayout=_equationLayout;
- (_Bool)wantsRoundedInlinePosition;
- (void)willLayoutInlineWithTextAttributes:(struct __CFDictionary *)arg1 columnWidth:(double)arg2;
- (double)inlineCenteredAlignmentOffset;
- (double)inlineVerticalOffset;
- (struct CGRect)frameForCulling;
- (id)computeLayoutGeometry;
- (void)validate;
- (void)dealloc;

@end

@interface TSWPEquationLayoutContext : NSObject <EQKitLayoutContext>
{
    struct __CFString *_fontName;
    double _fontSize;
    double _columnWidth;
}

@property(nonatomic) double columnWidth; // @synthesize columnWidth=_columnWidth;
@property(nonatomic) double fontSize; // @synthesize fontSize=_fontSize;
- (double)containerWidth;
- (struct __CFString *)baseFontName;
- (double)baseFontSize;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)initWithTextAttributes:(struct __CFDictionary *)arg1 columnWidth:(double)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSWPEquationRep : TSDRep
{
    CALayer *_equationLayer;
}

@property(retain, nonatomic) CALayer *equationLayer; // @synthesize equationLayer=_equationLayer;
- (struct CGRect)visibleBoundsForTilingLayer:(id)arg1;
- (id)actionForLayer:(id)arg1 forKey:(id)arg2;
- (void)drawLayer:(id)arg1 inContext:(struct CGContext *)arg2;
- (void)drawInLayerContext:(struct CGContext *)arg1;
- (void)drawInContext:(struct CGContext *)arg1;
- (struct CGRect)clipRect;
- (void)setNeedsDisplayInRect:(struct CGRect)arg1;
- (void)setNeedsDisplay;
- (void)screenScaleDidChange;
- (void)didUpdateLayer:(id)arg1;
- (_Bool)directlyManagesLayerContent;
- (_Bool)containsPoint:(struct CGPoint)arg1;
- (void)willBeRemoved;
- (void)dealloc;

@end

@interface TSWPFilteredStorage : NSObject <TSWPTextSource>
{
    TSWPStorage *_storage;
    TSWPDeletionRangeMap *_rangeMap;
    unsigned long long _length;
    unsigned long long _storageLength;
}

- (struct _NSRange)rangeForSelectionAtCharIndex:(unsigned long long)arg1 caretIndex:(unsigned long long)arg2;
- (struct _NSRange)whiteSpaceRangeAtCharIndex:(unsigned long long)arg1 includingBreaks:(_Bool)arg2;
- (unsigned long long)nextCharacterIndex:(unsigned long long)arg1;
- (unsigned long long)previousCharacterIndex:(unsigned long long)arg1;
- (struct _NSRange)scanBackwardForWordAtCharIndex:(unsigned long long)arg1;
- (unsigned long long)storageLength;
- (_Bool)hasSmartFieldsInRange:(struct _NSRange)arg1;
- (void)enumerateSmartFieldsWithAttributeKind:(unsigned int)arg1 inRange:(struct _NSRange)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)enumerateWithAttributeKind:(unsigned int)arg1 inRange:(struct _NSRange)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (id)substringWithRange:(struct _NSRange)arg1;
- (_Bool)adjustRangesByDelta:(long long)arg1;
- (_Bool)isWritingDirectionRightToLeftForParagraphAtCharIndex:(unsigned long long)arg1;
- (id)paragraphStyleAtCharIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;
- (unsigned long long)charIndexRemappedFromStorage:(unsigned long long)arg1;
- (struct _NSRange)charRangeMappedFromStorage:(struct _NSRange)arg1;
- (struct _NSRange)charRangeMappedToStorage:(struct _NSRange)arg1;
- (unsigned long long)charIndexMappedFromStorage:(unsigned long long)arg1;
- (unsigned long long)charIndexMappedToStorage:(unsigned long long)arg1;
- (struct __CFDictionary *)createFilteredCoreTextAttributes:(struct __CFDictionary *)arg1 effectiveRange:(struct _NSRange *)arg2 filterDelegate:(id)arg3;
- (id)objectAtLocationPriorToMappedCharIndex:(unsigned long long)arg1 forAttributeKind:(unsigned int)arg2 effectiveRange:(struct _NSRange *)arg3;
- (long long)hyphenationLocationBeforeIndex:(long long)arg1 inRange:(struct _NSRange)arg2 locale:(struct __CFLocale *)arg3 hyphenChar:(unsigned int *)arg4;
- (struct _NSRange)wordAtCharIndex:(unsigned long long)arg1 includePreviousWord:(_Bool)arg2;
- (id)characterStyleAtCharIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;
- (id)attachmentOrFootnoteAtCharIndex:(unsigned long long)arg1;
- (id)attachmentAtCharIndex:(unsigned long long)arg1;
- (id)footnoteReferenceAtCharIndex:(unsigned long long)arg1;
- (id)smartFieldsWithAttributeKind:(unsigned int)arg1 intersectingRange:(struct _NSRange)arg2;
- (id)smartFieldAtCharIndex:(unsigned long long)arg1 attributeKind:(unsigned int)arg2 effectiveRange:(struct _NSRange *)arg3;
- (void)attributesAtCharIndex:(unsigned long long)arg1 attributesOfInterest:(_Bool [19])arg2 attributesTable:(id [19])arg3 effectiveRange:(struct _NSRange *)arg4;
- (_Bool)hasColumnStyleForParagraphBreakAtCharIndex:(unsigned long long)arg1;
- (_Bool)hasColumnBreakAtCharIndex:(unsigned long long)arg1;
- (void)getCharacters:(unsigned short *)arg1 range:(struct _NSRange)arg2;
- (unsigned short)characterAtIndex:(unsigned long long)arg1;
- (id)string;
- (unsigned long long)length;
- (void)dealloc;
- (id)initWithStorage:(id)arg1 subRange:(struct _NSRange)arg2 removeRanges:(id)arg3;
- (id)initWithStorage:(id)arg1 subRange:(struct _NSRange)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSWPFilteredString : NSString
{
    unsigned long long _length;
    NSString *_sourceString;
    TSWPDeletionRangeMap *_rangeMap;
    TSWPRangeArray *_sourceRanges;
}

@property(readonly, retain, nonatomic) TSWPRangeArray *sourceRanges; // @synthesize sourceRanges=_sourceRanges;
@property(retain, nonatomic) TSWPDeletionRangeMap *rangeMap; // @synthesize rangeMap=_rangeMap;
@property(retain, nonatomic) NSString *sourceString; // @synthesize sourceString=_sourceString;
@property(readonly, nonatomic) unsigned long long length; // @synthesize length=_length;
- (struct _NSRange)charRangeMappedFromStorage:(struct _NSRange)arg1;
- (struct _NSRange)charRangeMappedToStorage:(struct _NSRange)arg1;
- (unsigned long long)charIndexMappedFromStorage:(unsigned long long)arg1;
- (unsigned long long)charIndexMappedToStorage:(unsigned long long)arg1;
- (void)getCharacters:(unsigned short *)arg1 range:(struct _NSRange)arg2;
- (unsigned short)characterAtIndex:(unsigned long long)arg1;
- (void)dealloc;
- (id)initWithString:(id)arg1 subrange:(struct _NSRange)arg2 removeRanges:(id)arg3;

@end

@interface TSWPFont : NSObject
{
    NSString *_fontName;
    NSString *_compatibilityName;
    NSString *_displayName;
    NSString *_familyName;
    unsigned long long _hash;
}

+ (_Bool)isKeyValueProxyLeafType;
+ (id)fontWithName:(id)arg1 compatibilityName:(id)arg2;
+ (id)fontWithName:(id)arg1;
@property(copy, nonatomic) NSString *compatibilityName; // @synthesize compatibilityName=_compatibilityName;
@property(copy, nonatomic) NSString *fontName; // @synthesize fontName=_fontName;
@property(readonly, nonatomic) NSString *familyName;
@property(readonly, nonatomic) NSString *displayName;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)init;
- (id)initWithFontName:(id)arg1 compatibilityName:(id)arg2;
- (id)initWithFontName:(id)arg1;

@end

@interface TSWPFontCache : NSObject
{
    TSULRUCache *_fontCache;
    NSArray *_familyNames;
    NSMutableDictionary *_familyDisplayNames;
    NSArray *_familyFonts;
    NSMutableArray *_cachedAvailableMembers;
    NSString *_cachedMembersFamilyName;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)sharedCache;
+ (id)_singletonAlloc;
- (void)p_FontWasDownloaded:(id)arg1;
- (id)availableMembersOfFontFamily:(id)arg1;
- (id)displayNameForFontFamily:(id)arg1;
- (id)sortedFontFamilyEntriesForStylesheet:(id)arg1;
- (id)sortedFontFamilies;
- (id)p_excludedFamilyNames;
- (struct __CTFont *)createFontWithName:(id)arg1 size:(double)arg2;
- (void)dealloc;
- (id)init;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;

@end

@interface TSWPFontCacheKey : NSObject
{
    NSString *_fontName;
    double _fontSize;
    unsigned long long _hash;
}

+ (id)cacheKeyWithFontName:(id)arg1 size:(double)arg2;
@property(readonly, nonatomic) double fontSize; // @synthesize fontSize=_fontSize;
@property(readonly, nonatomic) NSString *fontName; // @synthesize fontName=_fontName;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)dealloc;
- (id)initWithFontName:(id)arg1 size:(double)arg2;

@end

@interface TSWPFontCacheValue : NSObject
{
    struct __CTFont *_ctFont;
}

+ (id)cacheValueWithCTFont:(struct __CTFont *)arg1;
@property(readonly, nonatomic) struct __CTFont *ctFont; // @synthesize ctFont=_ctFont;
- (void)dealloc;
- (id)initWithCTFont:(struct __CTFont *)arg1;

@end

@interface TSWPFontHeightCache : NSObject
{
    struct list<unsigned long, std::__1::allocator<unsigned long>> _fontHashList;
    struct map<unsigned long, TSWPFontHeightCacheEntry, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, TSWPFontHeightCacheEntry>>> _fontHashToInfoMap;
    unsigned int _cacheSize;
    unsigned int _maxCacheSize;
    struct _opaque_pthread_rwlock_t _lock;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)sharedCache;
+ (id)_singletonAlloc;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)p_addEntryForFont:(struct __CTFont *)arg1 heightInfo:(const CDStruct_7660b417 *)arg2;
- (_Bool)p_findEntryForFont:(struct __CTFont *)arg1 outHeightInfo:(CDStruct_7660b417 *)arg2 collision:(_Bool *)arg3;
- (CDStruct_7660b417)fontHeightInfoForFont:(struct __CTFont *)arg1;
- (void)dealloc;
- (id)init;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;

@end

@interface TSWPTextualAttachment : TSWPAttachment
{
}

- (id)stringEquivalentWithLayoutParent:(id)arg1;
- (void)setStringEquivalent:(id)arg1;
- (id)stringEquivalent;
- (id)stringWithPageNumber:(unsigned long long)arg1 pageCount:(unsigned long long)arg2 charIndex:(unsigned long long)arg3;
- (_Bool)shouldArchiveStringEquivalent;

@end

@interface TSWPFootnoteMarkAttachment : TSWPTextualAttachment
{
}

- (_Bool)shouldStyleBeExtended;
- (id)copyWithContext:(id)arg1;
- (int)elementKind;
- (id)stringEquivalent;

@end

@interface TSWPFootnoteReferenceAttachment : TSWPTextualAttachment
{
    TSWPStorage *_containedStorage;
    NSString *_customMarkString;
}

@property(retain, nonatomic) TSWPStorage *containedStorage; // @synthesize containedStorage=_containedStorage;
@property(retain, nonatomic) NSString *customMarkString; // @synthesize customMarkString=_customMarkString;
- (void)checkDebug;
- (void)adoptStylesheet:(id)arg1 withMapper:(id)arg2;
- (void)wasRemovedFromDocumentRoot:(id)arg1;
- (void)willBeRemovedFromDocumentRoot:(id)arg1;
- (void)wasAddedToDocumentRoot:(id)arg1 context:(id)arg2;
- (void)willBeAddedToDocumentRoot:(id)arg1 context:(id)arg2;
- (_Bool)isSearchable;
- (id)stringEquivalent;
- (unsigned long long)findCharIndex;
- (void)setParentStorage:(id)arg1;
- (void)setContainedStorageParentInfoToStorage:(id)arg1;
- (id)copyWithContext:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (int)elementKind;
- (void)applyMark;
- (void)dealloc;
- (id)initWithContext:(id)arg1;
- (id)initWithContext:(id)arg1 wpStorage:(id)arg2;

@end

@interface TSWPHardPressGestureRecognizer : _UINonEditableTextSelectionForceGesture
{
    TSWPRep *_targetRep;
    unsigned long long _previousPressCount;
}

@property(nonatomic) unsigned long long previousPressCount; // @synthesize previousPressCount=_previousPressCount;
@property(retain, nonatomic) TSWPRep *targetRep; // @synthesize targetRep=_targetRep;
@property(readonly, nonatomic) unsigned long long currentPressCount;
- (void)dealloc;

@end

@interface TSWPTwoPartAction : NSObject
{
    CDUnknownBlockType _startAction;
    CDUnknownBlockType _cancelAction;
    CDUnknownBlockType _finishAction;
    _Bool _performImmediately;
}

+ (id)actionWithStartAction:(CDUnknownBlockType)arg1 cancelAction:(CDUnknownBlockType)arg2 finishAction:(CDUnknownBlockType)arg3;
@property _Bool performImmediately; // @synthesize performImmediately=_performImmediately;
- (void)cancel;
- (void)performFinishAction;
- (void)performStartAction;
- (void)dealloc;
- (id)initWithStartAction:(CDUnknownBlockType)arg1 cancelAction:(CDUnknownBlockType)arg2 finishAction:(CDUnknownBlockType)arg3;

@end

@interface TSWPHyperlinkAction : TSWPTwoPartAction
{
    TSWPHyperlinkField *_hyperlinkField;
    TSDRep<TSWPHyperlinkHostRepProtocol> *_hyperlinkRep;
}

+ (id)hyperlinkActionWithHyperlink:(id)arg1 inRep:(id)arg2 action:(CDUnknownBlockType)arg3;
- (void)dealloc;
- (id)initWithHyperlink:(id)arg1 inRep:(id)arg2 action:(CDUnknownBlockType)arg3;

@end

@interface TSWPHyperlinkActionsViewController : UIViewController <UITableViewDataSource, UITableViewDelegate>
{
    TSWPHyperlinkField *_hyperlink;
    _Bool _readOnly;
    TSWPHyperlinkSettingsViewController *_hyperlinkSettingsViewController;
}

@property(retain, nonatomic) TSWPHyperlinkField *hyperlink; // @synthesize hyperlink=_hyperlink;
- (id)hyperlinkSettingsViewController;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)loadView;
- (void)dealloc;
- (id)initWithHyperlink:(id)arg1 readOnly:(_Bool)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSWPSmartField : TSPObject <TSKDocumentObject, TSPCopying>
{
    TSWPStorage *_parentStorage;
    unsigned long long _lastTableIndex;
}

+ (id)defaultFieldStyleIdentifier;
+ (id)allocWithZone:(struct _NSZone *)arg1;
@property(nonatomic) TSWPStorage *parentStorage; // @synthesize parentStorage=_parentStorage;
- (void)wasRemovedFromDocumentRoot:(id)arg1;
- (void)willBeRemovedFromDocumentRoot:(id)arg1;
- (void)wasAddedToDocumentRoot:(id)arg1 context:(id)arg2;
- (void)willBeAddedToDocumentRoot:(id)arg1 context:(id)arg2;
- (void)adoptStylesheet:(id)arg1 withMapper:(id)arg2;
- (id)text;
- (_Bool)canCopy:(struct _NSRange)arg1;
- (_Bool)allowsPasteAsSmartField;
- (_Bool)allowsEditing;
@property(readonly, nonatomic) struct _NSRange range;
@property(readonly, nonatomic) int styleAttributeArrayKind;
@property(readonly, nonatomic) unsigned int attributeArrayKind;
- (int)elementKind;
- (id)copyWithContext:(id)arg1;
- (void)dealloc;
- (id)initWithContext:(id)arg1;

@end

@interface TSWPHyperlinkField : TSWPSmartField
{
    NSURL *_url;
}

+ (id)newURLFromURLReference:(id)arg1;
+ (id)urlReferenceFromURL:(id)arg1;
+ (id)defaultMailURL;
+ (id)defaultFileURL;
+ (id)urlWithEmailAddress:(id)arg1 subject:(id)arg2;
+ (id)defaultWebURL;
+ (id)defaultURLFromDefaultsKey:(id)arg1 defaultValue:(id)arg2;
+ (_Bool)schemeIsValidForURLReference:(id)arg1;
+ (_Bool)schemeIsValidForURL:(id)arg1;
+ (int)schemeFromURL:(id)arg1;
+ (id)defaultFieldStyleIdentifier;
- (id)fullPath;
- (id)filePath;
- (_Bool)hasDisplayText;
- (_Bool)isFileURL;
- (id)urlPrefix;
- (int)scheme;
- (void)setURLReference:(id)arg1;
- (id)urlReference;
@property(retain, nonatomic, setter=setURL:) NSURL *url;
- (_Bool)allowsEditing;
- (int)elementKind;
- (void)adoptStylesheet:(id)arg1 withMapper:(id)arg2;
- (id)copyWithContext:(id)arg1;
- (id)initWithContext:(id)arg1 url:(id)arg2;
- (void)dealloc;
@property(readonly, nonatomic) NSString *displayText;

@end

@interface TSWPHyperlinkPopoverTitleView : UIView
{
    NSString *_titleString;
}

@property(retain, nonatomic) NSString *titleString; // @synthesize titleString=_titleString;
- (void)drawRect:(struct CGRect)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 titleString:(id)arg2;

@end

@interface TSWPHyperlinkSettingsViewController : UIViewController <UITableViewDataSource, UITableViewDelegate, TSKKeyboardObserver>
{
    TSWPHyperlinkField *_hyperlink;
    UITableViewCell *_editingCell;
    _Bool _readOnly;
}

@property(retain, nonatomic) TSWPHyperlinkField *hyperlink; // @synthesize hyperlink=_hyperlink;
- (void)keyboardDidHideOrUndock:(id)arg1;
- (void)keyboardDidShowOrDock:(id)arg1;
- (unsigned long long)supportedInterfaceOrientations;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)loadView;
- (void)dealloc;
- (id)initWithHyperlink:(id)arg1 readOnly:(_Bool)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSWPHyperlinkUIController : NSObject <TSWPStorageObserver, UIPopoverControllerDelegate, UITextFieldDelegate>
{
    TSDRep<TSWPHyperlinkHostRepProtocol> *_hyperlinkRep;
    TSWPHyperlinkField *_hyperlinkField;
    TSWPStorage *_observedStorage;
    unsigned long long _hyperlinkUISessionID;
    TSWPEditingController *_cachedEditingController;
    TSWPChangeSession *_changeSession;
    NSString *_originalDisplayText;
    NSString *_editedDisplayText;
    NSString *_editedURLString;
    _Bool _removeHyperlink;
    _Bool _readOnly;
    _Bool _closingDocument;
    _Bool _shouldMaintainKeyboardWhenEndingSession;
}

+ (id)defaultTableView;
+ (id)sharedHyperlinkUIController;
@property(nonatomic) _Bool shouldMaintainKeyboardWhenEndingSession; // @synthesize shouldMaintainKeyboardWhenEndingSession=_shouldMaintainKeyboardWhenEndingSession;
@property(retain, nonatomic) NSString *editedURLString; // @synthesize editedURLString=_editedURLString;
@property(retain, nonatomic) NSString *editedDisplayText; // @synthesize editedDisplayText=_editedDisplayText;
- (void)storage:(id)arg1 didChangeRange:(struct _NSRange)arg2 delta:(long long)arg3 broadcastKind:(int)arg4;
@property(readonly, nonatomic) UIViewController *viewControllerForPresenting;
@property(readonly, nonatomic) TSWPInteractiveCanvasController *interactiveCanvasController;
@property(readonly, nonatomic) NSString *stringForURL;
@property(readonly, nonatomic) NSString *stringForDisplay;
- (void)i_openURLAction;
- (_Bool)p_shouldSetTextSelectionWhenDismissing;
- (_Bool)p_shouldSetCanvasSelectionWhenDismissing;
- (void)p_initChangeSessionAuthorCreatedWithCommand:(id *)arg1;
- (struct CGRect)p_viewBoundsForField;
- (_Bool)isDisplayingHyperlinkUI;
- (void)p_clearTextSelection;
- (void)p_selectHyperlinkField;
- (void)hideHyperlinkHighlight;
- (void)showHyperlinkHighlight;
@property(readonly, nonatomic) TSWPEditingController *editingController;
- (void)endUISession;
- (void)p_stopObservingStorage;
- (_Bool)hasStartedSession;
- (_Bool)hasOpenSessionForHyperlinkField:(id)arg1;
- (void)startUISessionForHyperlinkField:(id)arg1 inRep:(id)arg2;
- (void)setKeyboardSuppressedAndTextInputEditorIgnoresFirstResponderChanges:(_Bool)arg1;
- (void)visit;
- (void)dealloc;
- (int)p_UIState;
@property(readonly, nonatomic) _Bool isCanvasInReadMode;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSWPImageBulletProvider : NSObject
{
    NSMutableArray *_images;
    NSMutableArray *_filenames;
}

+ (id)sharedInstance;
- (id)p_predefinedImageNames;
- (id)p_pathToPredefinedImages;
- (id)dataForImageBullet:(id)arg1 withContext:(id)arg2;
- (id)dataForDefaultImageBulletWithContext:(id)arg1;
@property(readonly, nonatomic) NSArray *predefinedImages;

@end

@interface TSWPInteriorCookie : NSObject
{
    TSWPColumn *_column;
    TSWPShapeLayout *_shapeLayout;
}

@property(nonatomic) TSWPShapeLayout *layout; // @synthesize layout=_shapeLayout;
@property(nonatomic) TSWPColumn *column; // @synthesize column=_column;

@end

@interface TSWPInteriorTextWrapController : NSObject <TSWPTextWrap>
{
}

+ (id)sharedInteriorTextWrapController;
- (double)nextUnobstructedSpanStartingAt:(struct CGRect)arg1 wrappableAttachments:(id)arg2 userInfo:(id)arg3;
- (unsigned int)splitLine:(struct CGRect)arg1 lineSegmentRects:(struct CGRect [128])arg2 wrappableAttachments:(id)arg3 ignoreFloatingGraphics:(_Bool)arg4 floatingCausedWrap:(_Bool *)arg5 skipHint:(double *)arg6 userInfo:(id)arg7;
- (id)beginWrappingToColumn:(id)arg1 target:(id)arg2 hasWrapables:(_Bool *)arg3;

@end

@interface TSWPIterativeAttachmentPositioningState : NSObject
{
    unsigned long long _passCount;
    NSArray *_passPositions;
    double _mismatch;
    double _smallestMismatch;
    struct CGPoint _position;
    struct CGPoint _bestPosition;
}

@property(readonly, nonatomic) struct CGPoint bestPosition; // @synthesize bestPosition=_bestPosition;
@property(readonly, nonatomic) double smallestMismatch; // @synthesize smallestMismatch=_smallestMismatch;
@property(readonly, nonatomic) double mismatch; // @synthesize mismatch=_mismatch;
@property(readonly, nonatomic) struct CGPoint position; // @synthesize position=_position;
@property(readonly, nonatomic) NSArray *passPositions; // @synthesize passPositions=_passPositions;
@property(readonly, nonatomic) unsigned long long passCount; // @synthesize passCount=_passCount;
- (void)dealloc;
- (_Bool)hasLoopInLastPasses;
- (void)setPosition:(struct CGPoint)arg1 mismatch:(double)arg2 afterLoop:(_Bool)arg3;
- (void)setPosition:(struct CGPoint)arg1 mismatch:(double)arg2;
- (id)init;

@end

@interface TSWPLayout : TSDLayout <TSWPLayoutTarget, TSWPLayoutOwner>
{
    TSWPLayoutManager *_layoutManager;
    NSMutableArray *_columns;
    _Bool _textLayoutValid;
}

@property(readonly, retain, nonatomic) NSMutableArray *columns; // @synthesize columns=_columns;
@property(readonly, nonatomic) _Bool shouldWrapAroundExternalDrawables;
- (id)textColorOverride;
@property(readonly, nonatomic) unsigned int lineCount;
@property(readonly, nonatomic) TSDBezierPath *interiorClippingPath;
- (id)styleProvider;
- (struct CGRect)p_rectForSelection:(id)arg1 useParagraphModeRects:(_Bool)arg2;
- (struct CGRect)rectForPresentingAnnotationPopoverForSelection:(id)arg1;
- (struct CGRect)rectForSelection:(id)arg1;
- (id)lineHintsForTarget:(id)arg1;
- (id)textWrapper;
- (void)layoutManager:(id)arg1 didClearDirtyRangeWithDelta:(long long)arg2 afterCharIndex:(unsigned long long)arg3;
- (void)layoutManagerNeedsLayout:(id)arg1;
@property(readonly, nonatomic) _Bool shouldHyphenate;
@property(readonly, nonatomic) _Bool ignoresEquationAlignment;
@property(readonly, nonatomic) unsigned int maxLineCount;
@property(readonly, nonatomic) _Bool allowsLastLineTruncation;
@property(readonly, nonatomic) _Bool layoutIsValid;
- (_Bool)isLayoutOffscreen;
@property(readonly, nonatomic) struct CGRect maskRect;
@property(readonly, nonatomic) _Bool textIsVertical;
@property(readonly, nonatomic) unsigned long long pageCount;
@property(readonly, nonatomic) unsigned long long pageNumber;
- (id)p_firstAncestorRespondingToSelector:(SEL)arg1;
@property(readonly, nonatomic) double maxAnchorY;
- (id)currentAnchoredDrawableLayouts;
- (id)currentInlineDrawableLayouts;
- (void)addAttachmentLayout:(id)arg1;
@property(readonly, nonatomic) TSDLayout *parentLayoutForInlineAttachments;
- (unsigned long long)iterativeAttachmentPositioningMaxPassCount;
- (_Bool)shouldPositionAttachmentsIteratively;
- (id)validatedLayoutForAnchoredDrawable:(id)arg1;
- (id)layoutForInlineDrawable:(id)arg1;
@property(readonly, nonatomic) TSDCanvas *canvas;
- (struct CGRect)targetRectForCanvasRect:(struct CGRect)arg1;
- (void)setNeedsDisplayInTargetRect:(struct CGRect)arg1;
@property(readonly, nonatomic) _Bool wantsLineFragments;
@property(readonly, nonatomic) int naturalDirection;
@property(readonly, nonatomic) unsigned int naturalAlignment;
@property(readonly, nonatomic) unsigned int verticalAlignment;
@property(readonly, nonatomic) unsigned int autosizeFlags;
@property(readonly, nonatomic) struct CGPoint anchorPoint;
@property(readonly, nonatomic) struct CGPoint position;
@property(readonly, nonatomic) struct CGSize currentSize;
@property(readonly, nonatomic) struct CGSize maxSize;
@property(readonly, nonatomic) struct CGSize minSize;
- (_Bool)isLastTarget;
@property(readonly, nonatomic) id <TSWPFootnoteMarkProvider> footnoteMarkProvider;
@property(readonly, nonatomic) id <TSWPFootnoteHeightMeasurer> footnoteHeightMeasurer;
@property(readonly, nonatomic) TSPObject<TSDHint> *nextTargetFirstChildHint;
@property(readonly, retain, nonatomic) id <TSWPOffscreenColumn> nextTargetFirstColumn;
@property(readonly, nonatomic) const struct TSWPTopicNumberHints *nextTargetTopicNumbers;
@property(readonly, nonatomic) const struct TSWPTopicNumberHints *previousTargetTopicNumbers;
@property(readonly, retain, nonatomic) id <TSWPOffscreenColumn> previousTargetLastColumn;
- (id)columnMetricsForCharIndex:(unsigned long long)arg1 outRange:(struct _NSRange *)arg2;
- (void)layoutSearchForAnnotationWithHitBlock:(CDUnknownBlockType)arg1;
- (void)layoutSearchForString:(id)arg1 options:(unsigned long long)arg2 hitBlock:(CDUnknownBlockType)arg3;
- (struct CGPoint)calculatePointFromSearchReference:(id)arg1;
- (struct CGRect)p_protectedRectWithinLayoutForSelectionRect:(struct CGRect)arg1;
- (struct CGRect)frameForCulling;
- (void)wrappableChildInvalidated:(id)arg1;
- (void)parentDidChange;
- (void)parentWillChangeTo:(id)arg1;
- (_Bool)shouldProvideSizingGuides;
- (_Bool)shouldDisplayGuides;
- (Class)repClassOverride;
- (double)baselineForCharIndex:(unsigned int)arg1;
- (void)invalidateParentForAutosizing;
- (_Bool)invalidateForPageCountChange;
- (void)invalidateForFootnoteNumberingChange;
- (void)p_invalidateTextLayout;
- (void)invalidateMaxAutoGrowWidth;
- (void)invalidateTextLayout;
- (void *)initialLayoutState;
- (id)computeLayoutGeometry;
- (id)layoutGeometryFromInfo;
- (struct CGPoint)capturedInfoPositionForAttachment;
- (void)validate;
- (void)p_validateTextLayout;
- (id)reliedOnLayouts;
- (id)dependentLayouts;
- (_Bool)p_parentAutosizes;
- (id)p_wpLayoutParent;
- (void)invalidateSize;
- (_Bool)caresAboutStorageChanges;
@property(readonly, nonatomic) _Bool textLayoutValid;
@property(readonly, nonatomic) TSWPLayoutManager *layoutManager;
- (void)dealloc;
- (id)initWithInfo:(id)arg1 frame:(struct CGRect)arg2;
- (id)initWithInfo:(id)arg1;

// Remaining properties
@property(readonly, nonatomic) _Bool allowsDescendersToClip;
@property(readonly, nonatomic) _Bool alwaysAllowWordSplit;
@property(retain, nonatomic) NSMutableArray *anchoredDrawablesForRelayout;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) struct __CFLocale *hyphenationLocale;
@property(readonly, nonatomic) _Bool pushAscendersIntoColumn;
@property(readonly) Class superclass;

@end

@interface TSWPLayoutManager : NSObject <TSWPStorageObserver>
{
    id <TSWPLayoutOwner> _owner;
    TSWPStorage *_storage;
    _Bool _isObservingStorage;
    _Bool _useLigatures;
    long long _delta;
    struct _NSRange _dirtyRange;
    TSWPCTTypesetterCache *_typesetterCache;
    struct TSWPTopicNumberHints _cachedTopicNumbers;
}

+ (void)fixColumnBoundsForTarget:(id)arg1 storage:(id)arg2 charIndex:(unsigned long long)arg3 firstColumnIndex:(unsigned long long)arg4 precedingHeight:(double)arg5 height:(double)arg6 alreadyHasMargins:(_Bool)arg7 styleProvider:(id)arg8 vertical:(_Bool)arg9;
@property(readonly, nonatomic) struct _NSRange dirtyRange; // @synthesize dirtyRange=_dirtyRange;
@property(readonly, retain, nonatomic) TSWPStorage *storage; // @synthesize storage=_storage;
@property(readonly, nonatomic) id <TSWPLayoutOwner> owner; // @synthesize owner=_owner;
- (id).cxx_construct;
- (void).cxx_destruct;
- (int)p_layoutConfigFlagsForTarget:(id)arg1;
@property(readonly, retain, nonatomic) TSWPCTTypesetterCache *typesetterCache;
- (void)destroyLayoutState:(void *)arg1;
- (void)inflateTarget:(id)arg1 fromHints:(const vector_2f7f6b92 *)arg2 childHint:(id)arg3 anchoredAttachmentPositions:(id)arg4 topicNumbers:(const struct TSWPTopicNumberHints *)arg5;
- (void)deflateTarget:(id)arg1 intoHints:(vector_2f7f6b92 *)arg2 childHints:(id [2])arg3 anchoredAttachmentPositions:(id *)arg4 topicNumbers:(struct TSWPTopicNumberHints *)arg5 layoutState:(void *)arg6;
- (void *)layoutStateForLayoutTarget:(id)arg1 afterHint:(const CDStruct_6026ced1 *)arg2 childHint:(id)arg3 topicNumbers:(const struct TSWPTopicNumberHints *)arg4 textIsVertical:(_Bool)arg5;
- (double)layoutIntoTarget:(id)arg1 withRange:(struct _NSRange)arg2;
- (void *)layoutIntoTarget:(id)arg1 withLayoutState:(void *)arg2 outSync:(_Bool *)arg3;
- (_Bool)needsLayoutInColumn:(id)arg1;
- (void)willRemoveAttachmentLayout:(id)arg1;
- (void)storage:(id)arg1 didChangeRange:(struct _NSRange)arg2 delta:(long long)arg3 broadcastKind:(int)arg4;
- (void)clearTypesetterCache;
- (void)clearOwner;
- (void)resetTopicNumbers;
- (id)styleProvider;
- (void)dealloc;
- (id)initWithStorage:(id)arg1 owner:(id)arg2;

@end

@interface TSWPLineHintCollection : TSPObject
{
    CDStruct_cd85e889 *mHints;
    unsigned long long mHintsCount;
    _Bool mValid;
    _Bool mHasColumnIndices;
    TSWPLineHintCollection *mContainingCollection;
}

@property(readonly, nonatomic) _Bool hasColumnIndices; // @synthesize hasColumnIndices=mHasColumnIndices;
@property(readonly, nonatomic) _Bool valid; // @synthesize valid=mValid;
@property(readonly, nonatomic) unsigned long long hintsCount; // @synthesize hintsCount=mHintsCount;
- (id)descriptionWithStorage:(id)arg1;
- (struct _NSRange)hintRangeForLineStartingAtHintIndex:(unsigned long long)arg1;
- (struct _NSRange)hintRangeForColumnIndex:(unsigned long long)arg1 frameBounds:(struct CGRect)arg2 charIndex:(unsigned long long)arg3;
- (unsigned long long)p_columnIndexForHintIndex:(unsigned long long)arg1;
- (id)newSubCollectionWithRange:(struct _NSRange)arg1;
- (_Bool)checkSubCollectionRange:(struct _NSRange)arg1;
- (id)initWithContainingCollection:(id)arg1 range:(struct _NSRange)arg2 context:(id)arg3;
@property(readonly, nonatomic) const CDStruct_cd85e889 *hints;
- (void)dealloc;

@end

@interface TSWPLineSpacing : NSObject <NSCopying>
{
    int _mode;
    double _amount;
    double _baselineRule;
}

+ (id)lineSpacing;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (double)baselineRule;
- (double)amount;
- (int)mode;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithMode:(int)arg1 amount:(double)arg2;
- (id)initWithMode:(int)arg1 amount:(double)arg2 baselineRule:(double)arg3;
- (id)init;

@end

@interface TSWPListLabelGeometry : NSObject
{
    double mScale;
    double mBaselineOffset;
    _Bool mScaleWithText;
}

+ (id)listLabelGeometry;
@property(nonatomic) _Bool scaleWithText; // @synthesize scaleWithText=mScaleWithText;
@property(nonatomic) double baselineOffset; // @synthesize baselineOffset=mBaselineOffset;
@property(nonatomic) double scale; // @synthesize scale=mScale;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEqual:(id)arg1;
- (id)initWithScale:(double)arg1 scaleWithText:(_Bool)arg2 baselineOffset:(double)arg3;

@end

@interface TSWPListStyle : TSSStyle <TSSPreset>
{
}

+ (id)presetStyleDescriptor;
+ (id)pDefaultLabelValuesForLabelTypeProperty:(int)arg1;
+ (id)pLabelTypeArrayForType:(int)arg1;
+ (id)CJKListNameForNumberType:(int)arg1;
+ (id)propertyMapForListNumberType:(int)arg1;
+ (id)listStyleWithNumberType:(int)arg1 inStyleSheet:(id)arg2 withNumberedPresetStyle:(id)arg3;
+ (id)numberedlistStyleForPresets:(id)arg1;
+ (id)harvardStyleWithContext:(id)arg1;
+ (id)defaultStyleWithContext:(id)arg1 type:(int)arg2;
+ (id)defaultStyleWithContext:(id)arg1;
+ (id)defaultPropertyMap;
+ (id)defaultMissingBulletImage;
+ (id)defaultLabelGeometries;
+ (id)defaultLabelIndents;
+ (id)defaultTextIndents;
+ (void)pGetDefaultTextIndentFloats:(double [9])arg1;
+ (_Bool)defaultTieredNumber;
+ (int)defaultLabelNumberType;
+ (id)defaultLabelString;
+ (int)firstLabelTypeForPropertyMapping:(id)arg1;
+ (int)labelTypeForLevel:(unsigned long long)arg1 forPropertyMapping:(id)arg2;
+ (int)effectiveTypeForLevel:(unsigned long long)arg1 forPropertyMapping:(id)arg2;
+ (int)pLabelTypeForLevel:(unsigned long long)arg1 forPropertyMapping:(id)arg2 includeDegenerateLevels:(_Bool)arg3;
+ (_Bool)isDefaultMissingBulletImage:(id)arg1;
+ (id)propertiesAllowingNSNull;
+ (id)properties;
+ (id)stickyOverrideProperties;
- (id)baseStyleForTopicNumbers;
@property(readonly, nonatomic) NSString *presetKind;
- (id)overridePropertyMapWithValue:(id)arg1 forProperty:(int)arg2 atParagraphLevels:(id)arg3 withContext:(id)arg4;
- (id)pOverrideArrayWithValue:(id)arg1 forProperty:(int)arg2 atParagraphLevels:(id)arg3 withContext:(id)arg4;
- (int)firstLabelType;
- (int)labelTypeForLevel:(unsigned long long)arg1;
- (int)effectiveTypeForLevel:(unsigned long long)arg1;
- (double)textIndentForLevel:(unsigned long long)arg1 fontSize:(double)arg2;
- (double)labelIndentForLevel:(unsigned long long)arg1;
- (id)initWithContext:(id)arg1 name:(id)arg2 overridePropertyMap:(id)arg3 isVariation:(_Bool)arg4;

@end

@interface TSWPLoadableFontInfo : NSObject
{
    NSString *_groupUID;
    NSString *_fontPath;
    NSString *_fontName;
    NSString *_fontFamily;
    struct CGFont *_cgFont;
    unsigned char _attemptedLoad;
    _Bool _obfuscated;
}

@property(nonatomic) _Bool obfuscated; // @synthesize obfuscated=_obfuscated;
@property(nonatomic) struct CGFont *cgFont; // @synthesize cgFont=_cgFont;
@property(copy, nonatomic) NSString *fontFamily; // @synthesize fontFamily=_fontFamily;
@property(copy, nonatomic) NSString *fontName; // @synthesize fontName=_fontName;
@property(copy, nonatomic) NSString *fontPath; // @synthesize fontPath=_fontPath;
@property(copy, nonatomic) NSString *groupUID; // @synthesize groupUID=_groupUID;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;

@end

@interface TSWPLoadableFonts : NSObject
{
    NSOperationQueue *_fontQueue;
    NSMutableDictionary *_loadableFonts;
    NSMutableDictionary *_loadableFontFamilies;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)sharedInstance;
+ (id)_singletonAlloc;
- (void)p_loadFontWithInfo:(id)arg1;
- (void)unregisterFontsForGroup:(id)arg1;
- (void)registerFontName:(id)arg1 forPath:(id)arg2 forGroup:(id)arg3 isObfuscated:(_Bool)arg4 backgroundLoad:(_Bool)arg5;
- (void)loadFontsForGroup:(id)arg1;
- (void)loadFontWithName:(id)arg1;
- (void)loadAll;
- (void)backgroundLoadAll;
- (void)resumeBackgroundLoading;
- (void)pauseBackgroundLoading;
- (void)dealloc;
- (id)init;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;

@end

@interface TSWPLongPressGestureRecognizer : UILongPressGestureRecognizer
{
}

- (void)reset;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;

@end

@interface TSWPNumberAttachment : TSWPTextualAttachment
{
    int _numberFormat;
    NSString *_stringValue;
}

@property(copy, nonatomic) NSString *stringValue; // @synthesize stringValue=_stringValue;
@property(nonatomic) int numberFormat; // @synthesize numberFormat=_numberFormat;
- (id)stringWithNumber:(unsigned long long)arg1;
- (id)stringEquivalentWithLayoutParent:(id)arg1;
- (id)stringEquivalent;
- (id)copyWithContext:(id)arg1;
- (void)dealloc;

@end

@interface TSWPObfuscatedFontDataProvider : NSObject
{
    NSInputStream *_stream;
    unsigned char _xorMask[20];
}

- (void)rewind;
- (long long)skipForwardBy:(long long)arg1;
- (unsigned long long)readBytes:(char *)arg1 count:(unsigned long long)arg2;
- (long long)p_currentOffset;
- (void)dealloc;
- (id)initWithPath:(id)arg1 groupUID:(id)arg2;

@end

@interface TSWPPadding : NSObject
{
    double _topInset;
    double _leftInset;
    double _bottomInset;
    double _rightInset;
}

+ (id)paddingWithTopInset:(double)arg1 leftInset:(double)arg2 bottomInset:(double)arg3 rightInset:(double)arg4;
+ (id)padding;
@property(nonatomic) double rightInset; // @synthesize rightInset=_rightInset;
@property(nonatomic) double bottomInset; // @synthesize bottomInset=_bottomInset;
@property(nonatomic) double leftInset; // @synthesize leftInset=_leftInset;
@property(nonatomic) double topInset; // @synthesize topInset=_topInset;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (void)transform:(struct CGAffineTransform)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithTopInset:(double)arg1 leftInset:(double)arg2 bottomInset:(double)arg3 rightInset:(double)arg4;
- (id)init;

@end

@interface TSWPPageNumberAttachment : TSWPNumberAttachment
{
}

- (_Bool)shouldArchiveStringEquivalent;
- (int)elementKind;
- (id)stringWithPageNumber:(unsigned long long)arg1 pageCount:(unsigned long long)arg2 charIndex:(unsigned long long)arg3;
- (_Bool)changesWithPageNumber;

@end

@interface TSWPParagraphStyle : TSSStyle <TSSPreset>
{
    void *_coreTextParagraphStyle;
    struct __CFDictionary *_styleCache;
    struct __CFDictionary *_scalePercentStyleCaches;
}

+ (id)styleSummaryForPropertyMap:(id)arg1;
+ (id)presetStyleDescriptor;
+ (id)defaultStyleWithContext:(id)arg1;
+ (id)defaultPropertyMap;
+ (id)defaultValueForProperty:(int)arg1;
+ (id)p_normalDecimalSeparator;
+ (float)defaultFloatValueForProperty:(int)arg1;
+ (int)defaultIntValueForProperty:(int)arg1;
+ (id)paragraphPropertiesAllowingNSNull;
+ (id)propertiesAllowingNSNull;
+ (id)nonEmphasisParagraphProperties;
+ (id)deprecatedProperties;
+ (id)paragraphProperties;
+ (id)properties;
+ (void)initialize;
- (id)styleSummary;
@property(readonly, nonatomic) NSString *presetKind;
- (SEL)mapThemePropertyMapSelector;
- (_Bool)transformsFontSizes;
- (void)localizeForBidi:(_Bool)arg1;
- (void)localizeForRightToLeft;
- (id)initialListStyle;
- (void)setInitialListStyle:(id)arg1;
- (id)contentTag;
- (id)followingParagraphStyle;
- (struct __CFDictionary *)p_newCoreTextCharacterStyle:(id)arg1 allowLigatures:(_Bool)arg2 scalePercent:(unsigned long long)arg3;
- (struct __CTParagraphStyle *)p_createCoreTextParagraphStyleWithCharacterStyle:(id)arg1 writingDirection:(int)arg2;
- (BOOL)p_coreTextWritingDirectionFromWPWritingDirection:(int)arg1;
- (struct __CTFont *)findCachedFontForCharacterStyle:(id)arg1 scalePercent:(unsigned long long)arg2;
- (struct __CFDictionary *)getTypesetterAttributes:(id)arg1 scalePercent:(unsigned long long)arg2 isRightToLeft:(_Bool)arg3;
- (void)clearStyleCaches;
- (void)setOverridePropertyMap:(id)arg1;
- (id)fullPropertyMap;
- (void)dealloc;

@end

@interface TSWPPlaceholderSmartField : TSWPSmartField
{
    _Bool _localizable;
}

@property(nonatomic) _Bool isLocalizable; // @synthesize isLocalizable=_localizable;
- (int)elementKind;
- (id)copyWithContext:(id)arg1;
- (void)dealloc;
- (id)initWithContext:(id)arg1;

@end

@interface TSWPRangeArray : NSObject <NSCopying>
{
    void *_rangeVectorOpaque;
}

- (id)description;
- (void)enumerateRangesInRange:(struct _NSRange)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)enumerateRangesUsingBlock:(CDUnknownBlockType)arg1;
- (void)removeRange:(struct _NSRange)arg1;
- (struct _NSRange *)rangeReferenceAtIndex:(unsigned long long)arg1;
- (void)addRange:(struct _NSRange)arg1;
@property(readonly, nonatomic) unsigned long long start;
@property(readonly, nonatomic) unsigned long long finish;
@property(readonly, nonatomic) _Bool isEmpty;
- (struct _NSRange)rangeAtIndex:(unsigned long long)arg1;
@property(readonly, nonatomic) unsigned long long rangeCount;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithRangeVector:(const void *)arg1;
- (id)initWithRange:(struct _NSRange)arg1;
- (id)init;

@end

@interface TSWPRangeMap : NSObject
{
    struct _NSRange _subRange;
    struct vector<_TSWPCharIndexAndAffinity, std::__1::allocator<_TSWPCharIndexAndAffinity>> _unmappedIndexes;
    struct vector<_TSWPCharIndexAndAffinity, std::__1::allocator<_TSWPCharIndexAndAffinity>> _mappedIndexes;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)adjustByDelta:(long long)arg1;
- (struct _NSRange)unmappedCharRange:(struct _NSRange)arg1;
- (struct _NSRange)mappedCharRange:(struct _NSRange)arg1;
- (unsigned long long)p_extendRightMappedIndex:(unsigned long long)arg1;
- (unsigned long long)p_extendLeftMappedIndex:(unsigned long long)arg1;
- (unsigned long long)unmappedCharIndex:(unsigned long long)arg1;
- (unsigned long long)mappedCharIndex:(unsigned long long)arg1;
- (id)initWithSubRange:(struct _NSRange)arg1 unmappedIndexes:(const vector_88016b54 *)arg2 affinity:(int)arg3;
- (id)initWithSubRange:(struct _NSRange)arg1 unmappedPairIndexes:(const vector_88016b54 *)arg2;

@end

@interface TSWPReferenceLibraryViewController : UIReferenceLibraryViewController
{
    id <TSWPReferenceLibraryViewControllerDelegate> _delegate;
}

@property(nonatomic) id <TSWPReferenceLibraryViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)shouldAutorotate;
- (void)viewDidDisappear:(_Bool)arg1;

@end

@interface TSWPRenderer : NSObject
{
    struct CGContext *_context;
    _Bool _flipShadows;
    double _viewScale;
    TSDBezierPath *_interiorClippingPath;
    _Bool _preventClipToColumn;
}

+ (struct __CTFont *)invisiblesFont;
@property(nonatomic) _Bool preventClipToColumn; // @synthesize preventClipToColumn=_preventClipToColumn;
@property(retain, nonatomic) TSDBezierPath *interiorClippingPath; // @synthesize interiorClippingPath=_interiorClippingPath;
@property(nonatomic) double viewScale; // @synthesize viewScale=_viewScale;
@property(nonatomic) _Bool flipShadows; // @synthesize flipShadows=_flipShadows;
- (void)p_drawListLabelForFragment:(const struct TSWPLineFragment *)arg1 drawingState:(const struct TSWPDrawingState *)arg2 lineDrawFlags:(unsigned int)arg3;
- (void)p_drawInvisiblesBreakLine:(const struct TSWPAdornmentLine *)arg1 lineFragment:(const struct TSWPLineFragment *)arg2 state:(const struct TSWPDrawingState *)arg3;
- (void)p_drawAdornments:(const struct TSWPAdornments *)arg1 lineFragment:(const struct TSWPLineFragment *)arg2 state:(const struct TSWPDrawingState *)arg3;
- (void)p_drawAdornmentGlyphs:(const struct TSWPAdornments *)arg1 lineFragment:(const struct TSWPLineFragment *)arg2 state:(const struct TSWPDrawingState *)arg3;
- (void)p_drawAttachmentAdornments:(const struct TSWPAdornments *)arg1 lineFragment:(const struct TSWPLineFragment *)arg2 state:(const struct TSWPDrawingState *)arg3;
- (_Bool)p_canvasSelectionIncludesDrawableOfAttachmentAtCharIndex:(unsigned long long)arg1 state:(const struct TSWPDrawingState *)arg2;
- (void)p_drawHiddenDeletionsAdornments:(const struct TSWPAdornments *)arg1 lineFragment:(const struct TSWPLineFragment *)arg2 state:(const struct TSWPDrawingState *)arg3;
- (void)p_drawInvisiblesAdornments:(const struct TSWPAdornments *)arg1 lineFragment:(const struct TSWPLineFragment *)arg2 state:(const struct TSWPDrawingState *)arg3;
- (void)p_drawAttachmentGlyphAtPosition:(CDStruct_316206b0)arg1 fragment:(const struct TSWPLineFragment *)arg2;
- (void)p_drawTextInRunsForLine:(struct __CTLine *)arg1 fragment:(const struct TSWPLineFragment *)arg2 state:(const struct TSWPDrawingState *)arg3 tateChuYoko:(_Bool)arg4 baseRange:(struct _NSRange)arg5 isFirstLineRef:(_Bool)arg6;
- (void)p_calculateMarkAdornments:(vector_5a1d2cc3 *)arg1 drawingState:(const struct TSWPDrawingState *)arg2 lineFragment:(const struct TSWPLineFragment *)arg3;
- (void)p_strokeWavyLineFromPoint:(struct CGPoint)arg1 toPoint:(struct CGPoint)arg2 width:(double)arg3;
- (void)p_strokeLineFromPoint:(struct CGPoint)arg1 toPoint:(struct CGPoint)arg2 width:(double)arg3;
- (void)p_drawAdornmentLineBackgroundRect:(const struct TSWPAdornmentLine *)arg1 lineDrawFlags:(unsigned int)arg2 drawingState:(const struct TSWPDrawingState *)arg3 bounds:(struct CGRect)arg4;
- (void)p_drawAdornmentLine:(const struct TSWPAdornmentLine *)arg1 drawingState:(const struct TSWPDrawingState *)arg2 lineFragment:(const struct TSWPLineFragment *)arg3 lineFragmentStart:(struct CGPoint)arg4 vertical:(_Bool)arg5;
- (void)p_drawAutocorrectionMarkingsFragment:(const struct TSWPLineFragment *)arg1 drawingState:(const struct TSWPDrawingState *)arg2;
- (void)p_drawDictationMarkingsFragment:(const struct TSWPLineFragment *)arg1 drawingState:(const struct TSWPDrawingState *)arg2;
- (void)p_drawUngrammaticMarkingsFragment:(const struct TSWPLineFragment *)arg1 drawingState:(const struct TSWPDrawingState *)arg2;
- (void)p_drawMisspelledWordMarkingsFragment:(const struct TSWPLineFragment *)arg1 drawingState:(const struct TSWPDrawingState *)arg2;
- (void)p_drawWordMarkingsForFragment:(const struct TSWPLineFragment *)arg1 color:(id)arg2 ranges:(const struct TSWPRangeVector *)arg3 suppressRange:(struct _NSRange)arg4 drawingState:(const struct TSWPDrawingState *)arg5;
- (_Bool)p_shouldClipFragment:(const struct TSWPLineFragment *)arg1 drawingState:(const struct TSWPDrawingState *)arg2 lineDrawFlags:(unsigned int)arg3 updateRect:(struct CGRect)arg4 outClipRect:(struct CGRect *)arg5;
- (void)drawAdornmentRects:(const vector_e65b05c3 *)arg1 forColumn:(id)arg2 foreground:(_Bool)arg3;
- (void)drawFragment:(const struct TSWPLineFragment *)arg1 updateRect:(struct CGRect)arg2 drawingState:(const struct TSWPDrawingState *)arg3 runState:(CDStruct_3b6efdb6 *)arg4 lineDrawFlags:(unsigned int)arg5;
- (void)didRenderFragments;
- (void)willRenderFragmentsWithDrawingState:(const struct TSWPDrawingState *)arg1;
- (struct CGSize)convertSizeToDeviceSpace:(struct CGSize)arg1;
- (struct CGRect)getClipBoundingBox;
- (void)dealloc;
- (id)initWithContext:(struct CGContext *)arg1;

@end

@interface TSWPRep : TSDContainerRep <TSKHighlightArrayControllerProtocol, TSKPulseAnimationControllerProtocol, TSWPHyperlinkHostRepProtocol, TSDDecorator>
{
    CALayer *_textLayers[2];
    CALayer *_caretLayer;
    CAShapeLayer *_selectionLineLayers[2];
    CAShapeLayer *_selectionHighlightLayer;
    CAShapeLayer *_selectionParagraphBorderLayer;
    CAShapeLayer *_markHighlightLayer;
    CAShapeLayer *_smartFieldHighlightLayer;
    CAShapeLayer *_secondaryHighlightLayer;
    struct _NSRange _secondaryHighlightRange;
    int _secondaryHighlightPathStyle;
    TSKHighlightArrayController *_pulseArrayController;
    TSKHighlightArrayController *_highlightArrayController;
    TSKPulseAnimationController *_caretPulseController;
    _Bool _caretAnimationDisabled;
    _Bool _suppressCaret;
    TSWPStorageSpellChecker *_spellChecker;
    struct _NSRange _suppressedMisspellingRange;
    _Bool _updatingHighlights;
    _Bool _suppressSelectionHighlight;
    struct _NSRange _dragRange;
    TSWPSelection *_lastSelection;
    _Bool _selectionChanged;
    _Bool _markChanged;
    unsigned long long _newSelectionFlags;
    _Bool _repFieldsAreActive;
    _Bool _secondaryHighlightChanged;
    _Bool _indentAnimationRunning;
    CALayer *_indentAnimationLayer;
    long long _indentDelta;
    SEL _indentSelector;
    id _indentTarget;
    _Bool _hudStateDirty;
    _Bool _invalidateHUDState;
    _Bool _useKeyboardWhenEditing;
    CALayer *_dragAndDropCaretLayer;
    TSWPSelection *_dropSelection;
    _Bool _findIsShowing;
    TSWPSearchReference *_activeSearchReference;
    NSArray *_searchReferences;
}

@property(retain, nonatomic) NSArray *searchReferences; // @synthesize searchReferences=_searchReferences;
@property(nonatomic) _Bool findIsShowing; // @synthesize findIsShowing=_findIsShowing;
@property(retain, nonatomic) TSWPSearchReference *activeSearchReference; // @synthesize activeSearchReference=_activeSearchReference;
@property(nonatomic) TSWPSelection *dropSelection; // @synthesize dropSelection=_dropSelection;
@property(nonatomic) struct _NSRange dragRange; // @synthesize dragRange=_dragRange;
@property(nonatomic, getter=isSelectionHighlightSuppressed) _Bool suppressSelectionHighlight; // @synthesize suppressSelectionHighlight=_suppressSelectionHighlight;
@property(nonatomic) _Bool useKeyboardWhenEditing; // @synthesize useKeyboardWhenEditing=_useKeyboardWhenEditing;
- (id)imageForSearchReference:(id)arg1 forPath:(struct CGPath *)arg2 shouldPulsate:(_Bool)arg3;
- (struct CGPath *)newPathForSearchReference:(id)arg1;
- (void)p_updateHighlights;
- (void)p_didDismissPopover:(id)arg1;
- (void)p_setSearchReferencesToHighlight:(id)arg1;
- (void)p_findUIStateChangedNotification:(id)arg1;
- (void)processFindUIStateChangedNotificationUserInfo:(id)arg1;
- (void)p_setActiveSearchReference:(id)arg1;
- (void)p_activeFindHighlightChangedNotification:(id)arg1;
- (void)p_setPulseControllerActive:(_Bool)arg1 autohide:(_Bool)arg2;
- (_Bool)shouldAlwaysAutoHide;
- (void)pulseAnimationDidStopForPulse:(id)arg1;
- (void)pulseAnimationDidStop:(id)arg1;
- (id)selectionForDragAndDropNaturalPoint:(struct CGPoint)arg1 dragIsTopicSelection:(_Bool)arg2;
@property(readonly, nonatomic) struct CGAffineTransform transformToConvertNaturalToScaledRoot;
- (struct CGColor *)p_caretLayerColor;
- (_Bool)p_hasEmptyList;
- (_Bool)p_hasVisibleContents;
- (void)p_editingDidEndNotification:(id)arg1;
- (void)p_markChangedNotification:(id)arg1;
- (void)p_selectionContentsChangedNotification:(id)arg1;
- (void)p_selectionChangedNotification:(id)arg1;
- (void)p_invalidateCommentKnobs;
- (void)didDrawInLayer:(id)arg1 context:(struct CGContext *)arg2;
- (void)p_updateSmartFieldHighlightLayer;
- (void)p_hideSmartFieldHighlightLayer;
- (void)p_createSmartFieldHighlightLayer;
- (void)p_destroySpellChecker;
- (_Bool)p_needsSpellChecker;
- (_Bool)p_spellCheckingEnabled;
- (void)p_updateMarkHighlightLayer;
- (void)p_hideMarkHighlightLayer;
- (void)p_createMarkHighlightLayer;
- (void)p_showSelectionParagraphBorderLayerWithPath:(struct CGPath *)arg1;
- (void)p_hideSelectionParagraphBorderLayer;
- (void)p_hideSelectionHighlightLayer;
- (void)p_createSelectionParagraphBorderLayer;
- (void)p_createSelectionHighlightLayer;
- (void)p_setSelectionHighlightColor;
- (void)p_setSelectionLineLayersHidden:(_Bool)arg1;
- (void)p_createSelectionLineLayers;
- (void)p_stopCaretLayerAnimation;
- (void)p_startCaretLayerAnimation;
- (void)p_hideCaretLayer;
- (void)p_showCaretLayer;
- (_Bool)p_positionCaretLayer:(id)arg1 forSelection:(id)arg2 layerRelative:(_Bool)arg3;
- (id)p_newCaretLayerWithZPosition:(double)arg1;
- (void)p_destroyLayer:(int)arg1;
- (void)p_createLayer:(int)arg1;
- (void)p_drawTextInLayer:(id)arg1 context:(struct CGContext *)arg2 limitSelection:(id)arg3 rubyGlyphRange:(struct _NSRange)arg4 renderMode:(int)arg5 suppressInvisibles:(_Bool)arg6;
- (_Bool)preventClipToColumn;
- (void)p_teardown;
@property(readonly, nonatomic) _Bool textIsVertical;
- (void)tilingLayerWillSetNeedsDisplayForDirtyTiles:(id)arg1;
- (void)tilingLayerWillSetNeedsLayout:(id)arg1;
- (void)tilingLayerWillSetNeedsDisplay:(id)arg1;
- (id)actionForLayer:(id)arg1 forKey:(id)arg2;
- (void)drawLayer:(id)arg1 inContext:(struct CGContext *)arg2;
- (void)p_drawTextBackgroundLayerInContext:(struct CGContext *)arg1;
- (void)p_drawTextLayerInContext:(struct CGContext *)arg1;
- (void)i_setNeedsDisplayForSelectionChange;
- (void)p_updateForCurrentSelectionWithFlags:(unsigned long long)arg1;
- (void)p_updateSuppressedSpellingRange;
- (void)p_setSuppressedMisspellingRange:(struct _NSRange)arg1;
- (void)p_invalidateSuppressedMisspellingRange;
- (void)p_renderingOptionsDidChangeNotification:(id)arg1;
- (void)p_spellCheckerLanguageDidChangeNotification:(id)arg1;
- (void)i_setNeedsErasableDisplayInRange:(struct _NSRange)arg1;
- (void)p_hideSelectionLayers;
- (_Bool)p_isSelectionSingleAnchoredDrawableAttachment;
- (_Bool)p_canShowSelectionAndCaretLayers;
- (void)p_updateLayersForRangeSelection:(id)arg1 selectionFlags:(unsigned long long)arg2;
- (struct CGPoint)p_pinPoint:(struct CGPoint)arg1 toRect:(struct CGRect)arg2;
- (id)lineSearchReferencesForSearchReference:(id)arg1;
- (id)lineSelectionsForSelection:(id)arg1;
- (id)p_lineSelectionsForSelection:(id)arg1;
- (struct CGPath *)p_newSelectionPathForRange:(struct _NSRange)arg1 headKnobRect:(struct CGRect *)arg2 tailKnobRect:(struct CGRect *)arg3 selectionType:(int)arg4 selection:(id)arg5;
- (struct CGPath *)p_createPathForParagraphSelection:(id)arg1 needsParagraphBorder:(_Bool)arg2;
- (_Bool)p_paragraphModeBorderNeededForColumn:(id)arg1 dragCharIndex:(unsigned long long)arg2 knobTag:(unsigned long long)arg3;
- (struct CGRect)p_paragraphModeRectangleForColumn:(id)arg1 selection:(id)arg2;
- (void)p_updateAnimationWithAnimatingPulse:(_Bool)arg1;
- (void)editingDidEnd;
- (_Bool)doesNeedDisplayOnEditingDidEnd;
- (_Bool)isOverflowing;
- (id)textImageForRect:(struct CGRect)arg1;
- (id)textImageForSelection:(id)arg1 frame:(struct CGRect *)arg2 usingGlyphRect:(_Bool)arg3 shouldPulsate:(_Bool)arg4 suppressInvisibles:(_Bool)arg5;
- (id)textImageForSelection:(id)arg1;
- (id)p_imageForRect:(struct CGRect)arg1 usingGlyphRect:(_Bool)arg2 drawBackground:(_Bool)arg3 shouldPulsate:(_Bool)arg4 forCaret:(_Bool)arg5 drawSelection:(id)arg6 suppressInvisibles:(_Bool)arg7;
- (void)p_addRoundedRectToContext:(struct CGContext *)arg1 rect:(struct CGRect)arg2 forCaret:(_Bool)arg3;
- (void)p_addRectToContext:(struct CGContext *)arg1 rect:(struct CGRect)arg2;
- (void)p_addRoundedRectToContext:(struct CGContext *)arg1 rect:(struct CGRect)arg2;
- (void)p_updateLayersForInsertionPointSelection:(id)arg1;
- (struct CGRect)p_convertNaturalRectToRotated:(struct CGRect)arg1 repAngle:(double)arg2;
- (struct _NSRange)rangeOfMisspelledWordAtCharIndex:(unsigned long long)arg1;
- (struct CGRect)glyphRectForRubyFieldAtCharIndex:(unsigned long long)arg1 glyphRange:(struct _NSRange)arg2;
- (unsigned long long)glyphCountForRubyFieldAtCharIndex:(unsigned long long)arg1;
- (unsigned long long)charCountOfGlyphStartingAtCharIndex:(unsigned long long)arg1;
- (struct CGRect)glyphRectForRange:(struct _NSRange)arg1 includingLabel:(_Bool)arg2;
- (struct CGRect)columnRectForRange:(struct _NSRange)arg1;
- (struct CGRect)labelRectForCharIndex:(unsigned long long)arg1;
- (id)decoratorOverlayLayers;
- (void)animateIndent:(long long)arg1 target:(id)arg2 action:(SEL)arg3;
- (void)p_indentAfterAnimationWithOptions:(id)arg1;
- (_Bool)shouldCreateTextKnobs;
- (_Bool)shouldCreateLockedKnobs;
- (_Bool)shouldCreateSelectionKnobs;
- (void)updatePositionsOfKnobs:(id)arg1;
- (void)addKnobsToArray:(id)arg1;
- (void)invalidateKnobs;
@property(readonly, nonatomic) TSWPSelection *selection;
@property(readonly, nonatomic) NSArray *columns;
@property(readonly, nonatomic) TSWPStorage *storage;
- (_Bool)wantsToHandleTapsWhenLocked;
- (_Bool)wantsToHandleTapsOnContainingGroup;
- (id)hyperlinkRegions;
- (_Bool)handleSingleTapAtPoint:(struct CGPoint)arg1;
- (void)willDisplayEditHyperlinkUIForHyperlinkField:(id)arg1 beginEditing:(_Bool)arg2;
- (id)hyperlinkContainerRep;
- (id)repForDragging;
- (id)siblings;
- (id)repForCharIndex:(unsigned long long)arg1 isStart:(_Bool)arg2;
- (void)pulseCaret;
- (void)didEnterBackground;
- (void)willEnterForeground;
- (void)enableCaretAnimation;
- (void)canvasDidBeginFreeTransform;
- (void)viewScrollingEnded;
- (void)viewScaleDidChange;
- (void)disableCaretAnimation;
- (void)viewDidAppear;
- (void)gesturesDidEnd;
- (void)didEndZooming;
- (void)willBeginZooming;
@property(readonly, nonatomic) TSWPEditingController *textEditor;
- (_Bool)isEditing;
- (id)p_hyperlinkWithTouch:(id)arg1;
- (id)p_smartFieldWithTouch:(id)arg1;
- (id)columnForCharIndex:(unsigned long long)arg1;
- (id)closestColumnForPoint:(struct CGPoint)arg1;
- (_Bool)shouldIgnoreSingleTapAtPoint:(struct CGPoint)arg1 withRecognizer:(id)arg2;
- (void)setHighlightedHyperlinkField:(id)arg1;
- (void)clearSecondaryHighlight;
- (void)setSecondaryHighlightRange:(struct _NSRange)arg1 color:(struct CGColor *)arg2 pathStyle:(int)arg3;
- (void)p_updateSecondaryHighlightLayer;
- (id)footnoteReferenceAttachmentAtPoint:(struct CGPoint)arg1;
- (id)footnoteMarkAttachmentAtPoint:(struct CGPoint)arg1;
- (id)rubyFieldAtPoint:(struct CGPoint)arg1;
- (id)smartFieldAtPoint:(struct CGPoint)arg1;
- (_Bool)shouldBeginEditingWithGesture:(id)arg1;
- (_Bool)p_canRepBeginEditingOnDoubleTap;
- (_Bool)canEditWithEditor:(id)arg1;
- (id)beginEditing;
- (Class)wpEditorClass;
- (_Bool)handlesEditMenu;
- (struct CGRect)newTextLayerUnscaledBounds:(struct CGRect)arg1 forNewTextBounds:(struct CGRect)arg2;
- (void)screenScaleDidChange;
- (void)didUpdateLayer:(id)arg1;
- (struct CGRect)clipRect;
- (struct CGRect)p_clipRect:(struct CGRect)arg1;
- (void)updateFromLayout;
- (void)invalidateHUDState;
- (void)addAdditionalChildLayersToArray:(id)arg1;
- (id)overlayLayers;
- (void)drawRubyInContext:(struct CGContext *)arg1 rubyFieldStart:(unsigned long long)arg2 rubyGlyphRange:(struct _NSRange)arg3;
- (void)drawInContext:(struct CGContext *)arg1 limitSelection:(id)arg2 suppressInvisibles:(_Bool)arg3;
- (void)drawInContext:(struct CGContext *)arg1;
- (void)drawInLayerContext:(struct CGContext *)arg1;
- (void)setNeedsDisplayInRect:(struct CGRect)arg1;
- (void)setNeedsDisplayInRange:(struct _NSRange)arg1;
- (void)setNeedsDisplay;
- (id)textBackgroundLayer;
- (id)textLayer;
- (void)performBlockOnTextLayers:(CDUnknownBlockType)arg1;
- (int)dragTypeAtCanvasPoint:(struct CGPoint)arg1;
- (id)p_hyperlinkAtPoint:(struct CGPoint)arg1;
- (void)spellCheckingStateChanged;
- (void)verticalTextPropertyChanged;
- (int)tilingMode;
- (_Bool)forceTiling;
- (_Bool)directlyManagesLayerContent;
- (Class)layerClass;
- (unsigned long long)charIndexFromPoint:(struct CGPoint)arg1 allowPastBreak:(_Bool)arg2 allowNotFound:(_Bool)arg3 pastCenterGoesToNextChar:(_Bool)arg4 isAtEndOfLine:(_Bool *)arg5 leadingEdge:(_Bool *)arg6;
- (unsigned long long)charIndexFromPoint:(struct CGPoint)arg1 allowPastBreak:(_Bool)arg2 allowNotFound:(_Bool)arg3 isAtEndOfLine:(_Bool *)arg4 leadingEdge:(_Bool *)arg5;
- (unsigned long long)charIndexFromPoint:(struct CGPoint)arg1 allowPastBreak:(_Bool)arg2 isAtEndOfLine:(_Bool *)arg3;
- (unsigned long long)charIndexForPointWithPinning:(struct CGPoint)arg1 isTail:(_Bool)arg2 selectionType:(int)arg3;
- (unsigned long long)charIndexForPointWithPinning:(struct CGPoint)arg1;
- (double)knobOffsetForKnob:(id)arg1 paragraphMode:(_Bool)arg2;
- (struct CGPoint)knobCenterForSelection:(id)arg1 knob:(id)arg2;
- (id)p_annotationAtPoint:(struct CGPoint)arg1 outRange:(struct _NSRange *)arg2;
- (id)newTrackerForKnob:(id)arg1;
- (_Bool)shouldCreateCommentKnobs;
- (void)invalidateAnnotationColor;
- (struct CGRect)closestCaretRectForPoint:(struct CGPoint)arg1 inSelection:(_Bool)arg2;
- (struct CGRect)p_topicDragRectForSelection:(id)arg1;
- (struct CGRect)p_caretRectForSelection:(id)arg1;
- (struct CGRect)caretRectForSelection:(id)arg1;
- (CDStruct_7e4c5a1e)wordMetricsAtCharIndex:(unsigned long long)arg1;
- (CDStruct_50f584da)lineMetricsAtCharIndex:(unsigned long long)arg1;
- (CDStruct_50f584da)lineMetricsAtPoint:(struct CGPoint)arg1;
- (struct CGRect)caretRectForCharIndex:(unsigned long long)arg1 leadingEdge:(_Bool)arg2 caretAffinity:(int)arg3;
- (struct CGRect)caretRectForCharIndex:(unsigned long long)arg1 caretAffinity:(int)arg2;
- (struct CGRect)naturalBoundsRectForHyperlinkField:(id)arg1;
- (struct CGRect)rectForSelection:(id)arg1 includeRuby:(_Bool)arg2;
- (struct CGRect)rectForSelection:(id)arg1;
- (_Bool)isPointInSelectedArea:(struct CGPoint)arg1;
- (struct CGRect)selectionRect;
- (struct CGRect)caretRect;
- (struct CGPoint)pinToClosestColumn:(struct CGPoint)arg1;
- (struct CGPoint)pinToNaturalBounds:(struct CGPoint)arg1 andLastLineFragment:(_Bool)arg2;
- (struct _NSRange)range;
- (void)willBeRemoved;
- (void)dealloc;
- (id)initWithLayout:(id)arg1 canvas:(id)arg2;
- (_Bool)shouldShowKnobs;
- (_Bool)p_shouldDisplaySelectionControls;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) TSWPLayout *layout; // @dynamic layout;
@property(readonly) Class superclass;

@end

@interface TSWPRubyField : TSWPSmartField
{
    NSString *_rubyText;
}

@property(copy, nonatomic) NSString *rubyText; // @synthesize rubyText=_rubyText;
- (_Bool)canCopy:(struct _NSRange)arg1;
- (_Bool)allowsEditing;
- (int)styleAttributeArrayKind;
- (unsigned int)attributeArrayKind;
- (int)elementKind;
- (id)text;
@property(readonly, nonatomic) int baseTextScript;
@property(readonly, nonatomic) NSString *baseText;
- (void)dealloc;
- (id)copyWithContext:(id)arg1;
- (id)initWithContext:(id)arg1 rubyText:(id)arg2;

@end

@interface TSWPRubyTextSource : NSObject <TSWPTextSource>
{
    vector_88016b54 _spaceCharIndexes;
    vector_88016b54 _bidiCharIndexes;
    id <TSWPTextSource> _source;
    TSWPRangeMap *_rangeMap;
    unsigned long long _length;
    unsigned long long _storageLength;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (unsigned long long)storageLength;
- (unsigned long long)charIndexRemappedFromStorage:(unsigned long long)arg1;
- (struct _NSRange)charRangeMappedFromStorage:(struct _NSRange)arg1;
- (struct _NSRange)charRangeMappedToStorage:(struct _NSRange)arg1;
- (unsigned long long)charIndexMappedFromStorage:(unsigned long long)arg1;
- (unsigned long long)charIndexMappedToStorage:(unsigned long long)arg1;
- (id)objectAtLocationPriorToMappedCharIndex:(unsigned long long)arg1 forAttributeKind:(unsigned int)arg2 effectiveRange:(struct _NSRange *)arg3;
- (long long)hyphenationLocationBeforeIndex:(long long)arg1 inRange:(struct _NSRange)arg2 locale:(struct __CFLocale *)arg3 hyphenChar:(unsigned int *)arg4;
- (unsigned short)characterAtIndex:(unsigned long long)arg1;
- (struct _NSRange)wordAtCharIndex:(unsigned long long)arg1 includePreviousWord:(_Bool)arg2;
- (id)characterStyleAtCharIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;
- (_Bool)isWritingDirectionRightToLeftForParagraphAtCharIndex:(unsigned long long)arg1;
- (id)paragraphStyleAtCharIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;
- (id)attachmentOrFootnoteAtCharIndex:(unsigned long long)arg1;
- (id)attachmentAtCharIndex:(unsigned long long)arg1;
- (id)footnoteReferenceAtCharIndex:(unsigned long long)arg1;
- (id)smartFieldsWithAttributeKind:(unsigned int)arg1 intersectingRange:(struct _NSRange)arg2;
- (id)smartFieldAtCharIndex:(unsigned long long)arg1 attributeKind:(unsigned int)arg2 effectiveRange:(struct _NSRange *)arg3;
- (struct __CFDictionary *)createFilteredCoreTextAttributes:(struct __CFDictionary *)arg1 effectiveRange:(struct _NSRange *)arg2 filterDelegate:(id)arg3;
- (void)attributesAtCharIndex:(unsigned long long)arg1 attributesOfInterest:(_Bool [19])arg2 attributesTable:(id [19])arg3 effectiveRange:(struct _NSRange *)arg4;
- (_Bool)hasColumnStyleForParagraphBreakAtCharIndex:(unsigned long long)arg1;
- (_Bool)hasColumnBreakAtCharIndex:(unsigned long long)arg1;
- (void)getCharacters:(unsigned short *)arg1 range:(struct _NSRange)arg2;
- (id)string;
- (unsigned long long)length;
- (_Bool)adjustRangesByDelta:(long long)arg1;
- (void)dealloc;
- (unsigned int)composedCharacterAtCharIndex:(unsigned long long)arg1 isSurrogatePair:(_Bool *)arg2;
- (id)initWithSource:(id)arg1 subRange:(struct _NSRange)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSWPRuleOffset : NSObject <NSCopying>
{
    double _dX;
    double _dY;
}

+ (id)ruleOffset;
@property(readonly, nonatomic) double dY; // @synthesize dY=_dY;
@property(readonly, nonatomic) double dX; // @synthesize dX=_dX;
- (id)description;
- (struct CGSize)sizeValue;
- (struct CGPoint)pointValue;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;
- (id)initWithDX:(double)arg1 dY:(double)arg2;

@end

@interface TSWPSearch : TSKSearch
{
    NSString *_searchedString;
    TSWPFilteredString *_filteredString;
    TSWPStorage *_storage;
    struct _NSRange _range;
}

@property(readonly, nonatomic) TSWPStorage *storage; // @synthesize storage=_storage;
@property(readonly, retain, nonatomic) TSWPFilteredString *filteredString; // @synthesize filteredString=_filteredString;
@property(readonly, nonatomic) NSString *searchedString; // @synthesize searchedString=_searchedString;
@property(nonatomic) struct _NSRange range; // @synthesize range=_range;
- (void)foundHitWithRange:(struct _NSRange)arg1;
- (_Bool)isComplete;
- (void)dealloc;
- (id)initWithString:(id)arg1 options:(unsigned long long)arg2 hitBlock:(CDUnknownBlockType)arg3 storage:(id)arg4 range:(struct _NSRange)arg5;

@end

@interface TSWPSearchReference : NSObject <TSKSearchReference>
{
    TSWPStorage *_storage;
    TSWPSelection *_selection;
    struct _NSRange _smartFieldRange;
    _Bool _refersToSmartField;
    TSWPSmartField *_smartField;
    _Bool _autohideHighlight;
    _Bool _pulseHighlight;
    NSArray *_findHighlights;
    id <TSKAnnotation> annotation;
    struct CGPoint searchReferencePoint;
}

+ (id)searchReferenceWithStorage:(id)arg1 selection:(id)arg2;
+ (id)searchReferenceWithStorage:(id)arg1 range:(struct _NSRange)arg2;
@property(retain, nonatomic) id <TSKAnnotation> annotation; // @synthesize annotation;
@property(nonatomic) struct CGPoint searchReferencePoint; // @synthesize searchReferencePoint;
@property(nonatomic) _Bool pulseHighlight; // @synthesize pulseHighlight=_pulseHighlight;
@property(nonatomic) _Bool autohideHighlight; // @synthesize autohideHighlight=_autohideHighlight;
@property(retain, nonatomic) NSArray *findHighlights; // @synthesize findHighlights=_findHighlights;
@property(retain, nonatomic) TSWPSelection *selection; // @synthesize selection=_selection;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isSelectable;
- (_Bool)isReplaceable;
- (id)model;
- (id)commandForReplacingWithString:(id)arg1 options:(unsigned long long)arg2;
- (id)searchReferenceEnd;
- (id)searchReferenceStart;
- (id)searchReferenceForReplacingWithString:(id)arg1 options:(unsigned long long)arg2 authorCreatedWithCommand:(id *)arg3;
- (id)storage;
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic) _Bool isInsertionPoint;
@property(nonatomic) struct _NSRange range;
- (long long)compare:(id)arg1;
- (_Bool)isEqual:(id)arg1;
@property(retain, nonatomic) TSWPSmartField *smartField;
@property(nonatomic) _Bool refersToSmartField;
@property(nonatomic) struct _NSRange smartFieldRange;
- (void)pUpdateSelection;
- (void)dealloc;
- (id)initWithStorage:(id)arg1 selection:(id)arg2;
- (id)initWithStorage:(id)arg1 range:(struct _NSRange)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSWPSectionPlaceholder : TSPObject <TSKDocumentObject, TSWPSection>
{
    TPDocumentRoot *_documentRoot;
    TSWPStorage *_parentStorage;
}

- (id)description;
- (void)i_ensureHeaderFooterStoragesExistWithStylesheet:(id)arg1;
- (void)wasRemovedFromDocumentRoot:(id)arg1;
- (void)willBeRemovedFromDocumentRoot:(id)arg1;
- (void)wasAddedToDocumentRoot:(id)arg1 context:(id)arg2;
- (void)willBeAddedToDocumentRoot:(id)arg1 context:(id)arg2;
- (void)adoptStylesheet:(id)arg1 withMapper:(id)arg2;
- (void)setParentStorage:(id)arg1;
- (id)parentStorage;
- (id)copyWithContext:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (id)initWithContext:(id)arg1;

@end

@interface TSWPSelection : TSKSelection <NSCopying, TSDTextSelection>
{
    int _type;
    struct _NSRange _range;
    unsigned long long _headChar;
    unsigned long long _tailChar;
    _Bool _leadingEdge;
    unsigned long long _leadingCharIndex;
    _Bool _validVisualRanges;
    int _styleInsertionBehavior;
    int _caretAffinity;
    struct _NSRange _smartFieldRange;
    struct TSWPRangeVector _visualRanges;
}

+ (id)selectionWithRange:(struct _NSRange)arg1 type:(int)arg2 leadingEdge:(_Bool)arg3 storage:(id)arg4;
+ (id)selectionWithRange:(struct _NSRange)arg1;
+ (Class)archivedSelectionClass;
@property(readonly, nonatomic) _Bool validVisualRanges; // @synthesize validVisualRanges=_validVisualRanges;
@property(readonly, nonatomic) int caretAffinity; // @synthesize caretAffinity=_caretAffinity;
@property(readonly, nonatomic) int styleInsertionBehavior; // @synthesize styleInsertionBehavior=_styleInsertionBehavior;
@property(readonly, nonatomic) unsigned long long leadingCharIndex; // @synthesize leadingCharIndex=_leadingCharIndex;
@property(readonly, nonatomic) _Bool leadingEdge; // @synthesize leadingEdge=_leadingEdge;
@property(nonatomic) unsigned long long tailChar; // @synthesize tailChar=_tailChar;
@property(nonatomic) unsigned long long headChar; // @synthesize headChar=_headChar;
@property(readonly, nonatomic) struct _NSRange smartFieldRange; // @synthesize smartFieldRange=_smartFieldRange;
@property(readonly, nonatomic) struct _NSRange rawRange; // @synthesize rawRange=_range;
@property(readonly, nonatomic) int type; // @synthesize type=_type;
- (id).cxx_construct;
- (void).cxx_destruct;
@property(readonly, nonatomic) _Bool isAtEndOfLine;
- (_Bool)intersectsRange:(struct _NSRange)arg1;
- (_Bool)containsCharacterAtIndex:(unsigned long long)arg1 allowRightEdge:(_Bool)arg2;
- (_Bool)containsCharacterAtIndex:(unsigned long long)arg1;
- (unsigned long long)rightEdge;
- (unsigned long long)leftEdge;
- (unsigned long long)visualRangeCount;
- (void)setHeadChar:(unsigned long long)arg1 tailChar:(unsigned long long)arg2;
- (id)visualRangesArray;
- (struct TSWPRangeVector *)i_visualRanges;
- (const struct TSWPRangeVector *)visualRanges;
- (void)i_setVisualRanges:(const struct TSWPRangeVector *)arg1;
- (struct _NSRange)superRange;
- (unsigned long long)end;
- (unsigned long long)start;
- (id)copyWithVisualRanges:(const struct TSWPRangeVector *)arg1 startChar:(unsigned long long)arg2 endChar:(unsigned long long)arg3 rightToLeft:(_Bool)arg4 sameLine:(_Bool)arg5;
- (id)copyWithNewVisualRanges:(const struct TSWPRangeVector *)arg1;
- (id)copyWithNewRange:(struct _NSRange)arg1;
- (id)copyWithNewType:(int)arg1;
- (id)copyWithNewVisualTypeRange:(struct _NSRange)arg1 head:(unsigned long long)arg2 tail:(unsigned long long)arg3;
- (id)copyWithNewType:(int)arg1 range:(struct _NSRange)arg2;
- (id)copyWithNewType:(int)arg1 smartFieldRange:(struct _NSRange)arg2;
- (_Bool)isEquivalentForInsertionStyle:(id)arg1;
@property(readonly, nonatomic) _Bool isEmpty;
@property(readonly, nonatomic) _Bool isValid;
@property(readonly, nonatomic) _Bool isInsertionPoint;
@property(readonly, nonatomic) _Bool isRange;
@property(readonly, nonatomic) _Bool isVisual;
- (long long)compare:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithRange:(struct _NSRange)arg1;
- (id)initWithType:(int)arg1 range:(struct _NSRange)arg2 styleInsertionBehavior:(int)arg3 caretAffinity:(int)arg4;
- (id)initWithType:(int)arg1 range:(struct _NSRange)arg2 styleInsertionBehavior:(int)arg3 caretAffinity:(int)arg4 smartFieldRange:(struct _NSRange)arg5 leadingEdge:(_Bool)arg6 storage:(id)arg7;
- (id)initWithType:(int)arg1 range:(struct _NSRange)arg2 styleInsertionBehavior:(int)arg3 caretAffinity:(int)arg4 smartFieldRange:(struct _NSRange)arg5 leadingEdge:(_Bool)arg6 leadingCharIndex:(unsigned long long)arg7;
@property(readonly, nonatomic) struct _NSRange range;
- (unsigned long long)insertionChar;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSWPSelectionHighlightLayer : CAShapeLayer
{
}

- (void)renderInContext:(struct CGContext *)arg1;

@end

@interface TSWPShapeInfo : TSDShapeInfo <TSDContainerInfo, TSWPStorageParent, TSDSelectionStatisticsContributor>
{
    TSWPStorage *_containedStorage;
    _Bool _textUserEditable;
    TSWPLineHintCollection *mLineHints;
}

+ (void)setDefaultInstructionalText:(id)arg1;
@property(retain, nonatomic) TSWPLineHintCollection *lineHints; // @synthesize lineHints=mLineHints;
@property(retain, nonatomic) TSWPStorage *containedStorage; // @synthesize containedStorage=_containedStorage;
- (void)processSelectedStoragesWithStatisticsController:(id)arg1;
- (id)commandForTransformingByTransform:(struct CGAffineTransform)arg1 context:(id)arg2 transformedObjects:(id)arg3 inBounds:(struct CGRect)arg4;
- (unsigned long long)chunkCountForTextureDeliveryStyle:(unsigned long long)arg1 byGlyphStyle:(int)arg2 animationFilter:(id)arg3;
- (unsigned long long)p_chunkCountForByBulletGroup;
- (unsigned long long)p_chunkCountForByBullet;
- (_Bool)p_hasListLabelOrContentForParagraphIndex:(unsigned long long)arg1;
- (_Bool)p_hasContentForRange:(struct _NSRange)arg1;
- (_Bool)autoListTermination;
- (_Bool)autoListRecognition;
- (id)commandForPasteStyleWithContext:(id)arg1 pasteboardStyles:(id)arg2;
- (id)stylesForCopyStyle;
- (id)styleIdentifierTemplateForNewPreset;
- (id)propertyMapForNewPreset;
- (struct CGPoint)transformableObjectAnchorPoint;
- (id)textureDeliveryStylesLocalized:(_Bool)arg1 animationFilter:(id)arg2;
- (id)childInfos;
- (id)copyWithContext:(id)arg1;
- (Class)repClass;
- (Class)layoutClass;
- (void)acceptVisitor:(id)arg1;
- (id)childEnumerator;
- (void)wasRemovedFromDocumentRoot:(id)arg1;
- (void)willBeRemovedFromDocumentRoot:(id)arg1;
- (void)wasAddedToDocumentRoot:(id)arg1 context:(id)arg2;
- (void)willBeAddedToDocumentRoot:(id)arg1 context:(id)arg2;
- (void)fixPositionOfImportedAutosizedShape;
- (struct CGPoint)autosizePositionOffset;
- (struct CGAffineTransform)autosizedTransformForInfoGeometry:(id)arg1 size:(struct CGSize)arg2;
- (struct CGPoint)autosizePositionOffsetForGeometry:(id)arg1 size:(struct CGSize)arg2;
- (double)pOffsetForVerticalAlignment:(struct CGSize)arg1;
- (double)pOffsetForParagraphAlignment:(struct CGSize)arg1;
@property(readonly, nonatomic) NSString *instructionalText;
@property(readonly, nonatomic) _Bool displaysInstructionalText;
- (void)adoptStylesheet:(id)arg1 withMapper:(id)arg2;
- (id)presetKind;
- (id)initWithContext:(id)arg1 geometry:(id)arg2;
- (id)initWithContext:(id)arg1 geometry:(id)arg2 style:(id)arg3 pathSource:(id)arg4;
- (id)initWithContext:(id)arg1 geometry:(id)arg2 style:(id)arg3 wpStorage:(id)arg4;
- (id)initWithContext:(id)arg1 geometry:(id)arg2 style:(id)arg3 pathSource:(id)arg4 wpStorage:(id)arg5;
- (void)dealloc;
- (Class)styleClass;
- (Class)editorClass;
@property(nonatomic) long long contentWritingDirection;
@property(readonly, nonatomic) TSWPShapeStyle *tswpShapeStyle;
@property(retain, nonatomic) TSWPPadding *padding;
@property(retain, nonatomic) TSWPColumns *columns;
@property(nonatomic) unsigned int verticalAlignment;
@property(nonatomic) _Bool textIsVertical;
@property(nonatomic) _Bool shrinkTextToFit;
@property(nonatomic) unsigned int maxLineCount;
@property(nonatomic) _Bool allowsLastLineTruncation;
- (_Bool)supportsShrinkTextToFit;
- (_Bool)supportsTextInset;
@property(nonatomic, getter=isTextUserEditable) _Bool textUserEditable;

// Remaining properties
@property(readonly, nonatomic, getter=isAnchoredToText) _Bool anchoredToText; // @dynamic anchoredToText;
@property(readonly, nonatomic, getter=isAttachedToBodyText) _Bool attachedToBodyText;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic, getter=isFloatingAboveText) _Bool floatingAboveText; // @dynamic floatingAboveText;
@property(copy, nonatomic) TSDInfoGeometry *geometry; // @dynamic geometry;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic, getter=isInlineWithText) _Bool inlineWithText; // @dynamic inlineWithText;
@property(nonatomic) _Bool matchesObjectPlaceholderGeometry;
@property(nonatomic) TSPObject<TSDOwningAttachment> *owningAttachment; // @dynamic owningAttachment;
@property(readonly, nonatomic) TSPObject<TSDOwningAttachment> *owningAttachmentNoRecurse; // @dynamic owningAttachmentNoRecurse;
@property(nonatomic) NSObject<TSDContainerInfo> *parentInfo; // @dynamic parentInfo;
@property(readonly) Class superclass;

@end

@interface TSWPShapeLayout : TSDShapeLayout <TSWPLayoutParent, TSWPColumnMetrics, TSWPStorageObserver>
{
    TSWPLayout *_containedLayout;
    TSDWrapPolygon *_cachedInteriorWrapPolygon;
    id <TSWPShapeLayoutDelegate> _delegate;
    _Bool _observingStorage;
}

@property id <TSWPShapeLayoutDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) TSWPLayout *containedLayout; // @synthesize containedLayout=_containedLayout;
@property(readonly, nonatomic) _Bool columnsAreLeftToRight;
@property(readonly, nonatomic) _Bool shrinkTextToFit;
@property(readonly, nonatomic) _Bool alwaysStartsNewTarget;
- (double)positionForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2 outWidth:(double *)arg3 outGap:(double *)arg4;
- (double)gapForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2;
- (double)widthForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2;
@property(readonly, nonatomic) unsigned long long columnCount;
@property(readonly, nonatomic) TSWPPadding *layoutMargins;
@property(readonly, nonatomic) struct CGSize adjustedInsets;
- (void)setGeometry:(id)arg1;
- (void)processChangedProperty:(int)arg1;
- (id)pathSource;
- (struct CGPoint)autosizePositionOffsetForFixedWidth:(_Bool)arg1 height:(_Bool)arg2;
- (struct CGPoint)autosizePositionOffset;
- (struct CGAffineTransform)autosizedTransformForInfoGeometry:(id)arg1;
- (struct CGAffineTransform)autosizedTransform;
- (struct CGAffineTransform)computeLayoutTransform;
- (id)dependentLayouts;
- (_Bool)resizeMayChangeAspectRatio;
- (_Bool)canAspectRatioLockBeChangedByUser;
- (_Bool)supportsRotation;
- (unsigned int)maxLineCountForTextLayout:(id)arg1;
- (_Bool)allowsLastLineTruncation:(id)arg1;
- (_Bool)textLayoutShouldLayoutVertically:(id)arg1;
- (_Bool)textLayoutShouldWrapAroundExternalDrawables:(id)arg1;
- (Class)repClassForTextLayout:(id)arg1;
- (id)dependentsOfTextLayout:(id)arg1;
- (struct CGRect)autosizedFrameForTextLayout:(id)arg1 textSize:(struct CGSize)arg2;
- (struct CGRect)nonAutosizedFrameForTextLayout:(id)arg1;
- (void)invalidateForAutosizingTextLayout:(id)arg1;
- (unsigned int)verticalAlignmentForTextLayout:(id)arg1;
- (unsigned int)autosizeFlagsForTextLayout:(id)arg1;
@property(readonly, nonatomic) _Bool autosizes;
- (unsigned int)cropLine:(struct CGRect)arg1 lineSegmentRects:(struct CGRect [128])arg2;
- (id)interiorClippingPath;
- (id)textWrapper;
- (id)interiorWrapPath;
- (id)interiorWrapPolygon;
- (void)updateChildrenFromInfo;
- (void)createContainedLayoutForEditing;
- (void)storage:(id)arg1 didChangeRange:(struct _NSRange)arg2 delta:(long long)arg3 broadcastKind:(int)arg4;
- (id)childSearchTargets;
- (_Bool)isInvisibleAutosizingShape;
- (id)instructionalStorageForContainedStorage:(id)arg1 storageKind:(int)arg2;
- (void)createContainedLayoutForInstructionalText;
- (void)destroyContainedLayoutForInstructionalText;
- (void)invalidatePath;
- (void)invalidateSize;
- (void)replaceChild:(id)arg1 with:(id)arg2;
- (void)insertChild:(id)arg1 above:(id)arg2;
- (void)insertChild:(id)arg1 below:(id)arg2;
- (void)insertChild:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)addChild:(id)arg1;
- (void)setChildren:(id)arg1;
- (id)children;
- (void)willBeRemovedFromLayoutController:(id)arg1;
- (void)willBeAddedToLayoutController:(id)arg1;
- (void)dealloc;
- (id)initWithInfo:(id)arg1;

// Remaining properties
@property(readonly, nonatomic) double textScaleFactor;

@end

@interface TSWPShapeRep : TSDShapeRep <TSDContainerRep, TSWPShapeLayoutDelegate>
{
    _Bool _editingContainedRep;
    CALayer *_overflowGlyphLayer;
    TSWPRep *_containedRep;
}

@property(readonly, nonatomic) TSWPRep *containedRep; // @synthesize containedRep=_containedRep;
- (void)shapeLayoutDidChangeContainedStorage:(id)arg1;
- (_Bool)shapeLayoutShouldUpdateInstructionalText:(id)arg1;
- (_Bool)isEditingChildRep;
- (double)pParagraphAlignmentOffset;
- (unsigned long long)enabledKnobMask;
- (id)p_overflowKnobImage;
- (void)processChangedProperty:(int)arg1;
- (_Bool)isInvisible;
- (_Bool)isDraggable;
- (id)additionalLayersOverLayer;
- (id)overlayLayers;
- (void)p_resetOverflowGlyphLayerIfNecessary;
- (_Bool)canBeginEditingChildRepOnDoubleTap:(id)arg1;
- (void)selectChildRep:(id)arg1;
- (_Bool)canSelectChildRep:(id)arg1;
- (_Bool)mustDrawTilingLayerOnMainThread:(id)arg1;
- (id)actionForLayer:(id)arg1 forKey:(id)arg2;
- (void)addAdditionalChildLayersToArray:(id)arg1;
- (id)childReps;
@property(readonly, nonatomic) NSObject<TSDContainerInfo> *containerInfo;
- (_Bool)p_shouldShowTextOverflowGlyph;
- (_Bool)shouldShowKnobs;
- (_Bool)shouldShowSelectionHighlight;
- (id)hyperlinkRegions;
- (void)willBeRemoved;
- (_Bool)wantsToHandleTapsWhenLocked;
- (_Bool)wantsToHandleTapsOnContainingGroup;
- (_Bool)handleSingleTapAtPoint:(struct CGPoint)arg1;
- (_Bool)shouldIgnoreEditMenuTapAtPoint:(struct CGPoint)arg1 withRecognizer:(id)arg2;
- (int)dragTypeAtCanvasPoint:(struct CGPoint)arg1;
- (id)hitReps:(struct CGPoint)arg1 withSlop:(struct CGSize)arg2;
- (id)hitRep:(struct CGPoint)arg1;
- (void)willEndEditingContainedRep;
- (void)willBeginEditingContainedRep;
- (void)updateChildrenFromLayout;
- (void)dealloc;
- (id)initWithLayout:(id)arg1 canvas:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSWPShapeStyle : TSDShapeStyle <TSSPreset>
{
}

+ (id)defaultValueForProperty:(int)arg1;
+ (int)defaultIntValueForProperty:(int)arg1;
+ (id)propertiesAllowingNSNull;
+ (id)layoutProperties;
+ (id)properties;
+ (id)presetStyleDescriptor;
- (id)defaultParagraphStyle;
- (void)setDefaultParagraphStyle:(id)arg1;
- (id)boxedValueForProperty:(int)arg1 oldBoxedValue:(id)arg2 transformedByTransform:(struct CGAffineTransform)arg3;
- (SEL)mapThemePropertyMapSelector;
@property(readonly, nonatomic) NSString *presetKind;

@end

@interface TSWPStorage : TSPObject <TSDContainerInfo, TSKSearchable, TSSThemedObject, TSWPStorageParent, TSSStyleClient, TSWPTextSource>
{
    NSObject<TSDContainerInfo> *_parentInfo;
    TSPObject<TSDOwningAttachment> *_owningAttachment;
    NSMutableString *_string;
    struct TSWPAttributeArray *_attributesTable[19];
    TSWPStorageBroadcaster *_broadcaster;
    TSKDocumentRoot *_documentRoot;
    TSSStylesheet *_stylesheet;
    int _WPKind;
    unsigned int _disallowElementKinds;
    _Bool _dolcSuppressed;
    _Bool _delayBroadcast;
    struct _NSRange _rangeToBroadcast;
    int _writingDirectionCache;
    _Bool _isInInit;
    unsigned long long _changeCount;
    _Bool _ignoreContentsChangedNotifications;
}

+ (Class)pStringClassForWPKind:(int)arg1;
+ (id)filterMarkAttributes:(id)arg1;
+ (id)filterText:(id)arg1 removingAttachments:(_Bool)arg2;
+ (id)filterText:(id)arg1;
+ (_Bool)allowsElementKind:(int)arg1 forStorageKind:(int)arg2;
+ (void)resetDisallowedElementKinds;
+ (void)setDisallowedElementKinds:(unsigned int)arg1 forStorageKind:(int)arg2;
+ (void)initialize;
+ (id)plainTextPasteStringForStorages:(id)arg1 forcePlainText:(_Bool)arg2;
+ (struct TSWPAttributeArray *)createAttributeArrayForKind:(unsigned int)arg1 undoTransaction:(struct TSWPStorageTransaction *)arg2;
+ (struct TSWPAttributeArray *)createEmptyAttributeArrayForKind:(unsigned int)arg1;
@property(nonatomic) _Bool ignoreContentsChangedNotifications; // @synthesize ignoreContentsChangedNotifications=_ignoreContentsChangedNotifications;
@property(nonatomic) TSPObject<TSDOwningAttachment> *owningAttachment; // @synthesize owningAttachment=_owningAttachment;
@property(nonatomic) NSObject<TSDContainerInfo> *parentInfo; // @synthesize parentInfo=_parentInfo;
@property(readonly, nonatomic) unsigned long long changeCount; // @synthesize changeCount=_changeCount;
@property(readonly, nonatomic) _Bool isInInit; // @synthesize isInInit=_isInInit;
@property(readonly, copy) NSString *description;
@property(readonly, copy) NSString *debugDescription;
- (int)compareRange:(struct _NSRange)arg1 otherStorage:(id)arg2 otherRange:(struct _NSRange)arg3 options:(unsigned long long)arg4;
- (id)newSubstorageWithRange:(struct _NSRange)arg1 storageContext:(id)arg2 objectsContext:(id)arg3 flags:(unsigned int)arg4 kind:(int)arg5;
- (id)newSubstorageWithRange:(struct _NSRange)arg1 context:(id)arg2 flags:(unsigned int)arg3 kind:(int)arg4;
- (id)newSubstorageWithRange:(struct _NSRange)arg1 storageContext:(id)arg2 objectsContext:(id)arg3 flags:(unsigned int)arg4;
- (id)newSubstorageWithRange:(struct _NSRange)arg1 context:(id)arg2 flags:(unsigned int)arg3;
- (unsigned long long)selectionRangeMaxForCharIndex:(unsigned long long)arg1;
- (unsigned long long)selectionRangeMinForCharIndex:(unsigned long long)arg1;
- (struct _NSRange)selectionRangeForCharIndex:(unsigned long long)arg1;
- (_Bool)canPasteAsPlainTextWithUniformParagraphs;
- (_Bool)canPasteAsPlainText;
- (_Bool)p_hasGoodAttributesForPlainTextPaste;
- (_Bool)hasVisibleText;
- (void)replaceReferencedStylesUsingBlock:(CDUnknownBlockType)arg1;
- (id)referencedStyles;
- (id)referencedStylesOfClass:(Class)arg1;
- (id)childCommandForApplyThemeCommand:(id)arg1;
- (id)childInfos;
- (id)copyWithContext:(id)arg1;
- (_Bool)isThemeContent;
- (Class)repClass;
- (Class)layoutClass;
@property(readonly, nonatomic, getter=isAttachedToBodyText) _Bool attachedToBodyText;
@property(readonly, nonatomic, getter=isInlineWithText) _Bool inlineWithText;
@property(readonly, nonatomic, getter=isAnchoredToText) _Bool anchoredToText;
@property(readonly, nonatomic, getter=isFloatingAboveText) _Bool floatingAboveText;
@property(readonly, nonatomic) TSPObject<TSDOwningAttachment> *owningAttachmentNoRecurse;
- (void)clearBackPointerToParentInfoIfNeeded:(id)arg1;
@property(copy, nonatomic) TSDInfoGeometry *geometry;
@property(readonly, nonatomic) long long contentWritingDirection;
- (_Bool)textIsVertical;
- (_Bool)autoListTermination;
- (_Bool)autoListRecognition;
- (id)fontNameAtCharIndex:(unsigned long long)arg1 size:(double *)arg2 effectiveRange:(struct _NSRange *)arg3 styleProvider:(id)arg4;
- (void)fixGlyphVariantFontsForRange:(struct _NSRange)arg1;
- (id)glyphVariantDataAtCharIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;
- (void)removeGlyphVariantDataFromRange:(struct _NSRange)arg1;
- (void)addGlyphVariantData:(id)arg1 toRange:(struct _NSRange)arg2;
- (void)autoUpdateSmartFieldsWithDocumentRoot:(id)arg1;
- (void)autoUpdateField:(id)arg1 withRange:(struct _NSRange)arg2 documentRoot:(id)arg3 returningInsertedRange:(struct _NSRange *)arg4;
- (void)smartFieldDidChange:(id)arg1;
- (id)smartFieldsWithAttributeKind:(unsigned int)arg1 intersectingRange:(struct _NSRange)arg2;
- (id)smartFieldsWithAttributeKind:(unsigned int)arg1 intersectingRange:(struct _NSRange)arg2 passingTest:(CDUnknownBlockType)arg3;
- (void)enumerateSmartFieldsWithAttributeKind:(unsigned int)arg1 inRange:(struct _NSRange)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)enumerateWithAttributeKind:(unsigned int)arg1 inRange:(struct _NSRange)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (_Bool)hasSmartFieldsInRange:(struct _NSRange)arg1;
- (_Bool)hasSmartFields;
- (void)removeSmartField:(id)arg1 fromRange:(struct _NSRange)arg2 undoTransaction:(struct TSWPStorageTransaction *)arg3;
- (void)addSmartField:(id)arg1 toRange:(struct _NSRange)arg2 dolcContext:(id)arg3 undoTransaction:(struct TSWPStorageTransaction *)arg4;
- (id)editableSmartFieldAtCharIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;
- (id)smartFieldAtCharIndex:(unsigned long long)arg1 attributeKind:(unsigned int)arg2 effectiveRange:(struct _NSRange *)arg3;
- (id)extendSelectionToIncludeSmartFields:(id)arg1;
- (struct _NSRange)p_extendRangeToIncludeSmartFields:(struct _NSRange)arg1;
- (_Bool)anchoredDrawableAttachmentCharacterAtCharIndex:(unsigned long long)arg1;
- (struct _NSRange)attachmentRangeForCharIndex:(unsigned long long)arg1 forwards:(_Bool)arg2 attributeKind:(unsigned int)arg3;
- (struct _NSRange)attachmentRangeForCharIndex:(unsigned long long)arg1 forwards:(_Bool)arg2;
- (unsigned long long)findCharIndexForAttachment:(id)arg1;
- (struct _NSRange)attachmentIndexRangeForTextRange:(struct _NSRange)arg1;
- (void)enumerateAttachmentsInTextRange:(struct _NSRange)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)enumerateAttachmentsOfClass:(Class)arg1 inTextRange:(struct _NSRange)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (unsigned long long)attachmentIndexForInsertionAtCharIndex:(unsigned long long)arg1;
- (void)replaceWithAttachment:(id)arg1 forAttachmentIndex:(unsigned long long)arg2 dolcContext:(id)arg3 undoTransaction:(struct TSWPStorageTransaction *)arg4;
- (unsigned long long)attachmentIndexAtCharIndex:(unsigned long long)arg1;
- (id)attachmentAtCharIndex:(unsigned long long)arg1;
- (id)attachmentAtAttachmentIndex:(unsigned long long)arg1 outCharIndex:(unsigned long long *)arg2;
- (unsigned long long)attachmentCount;
- (unsigned long long)findCharacterIndexForContainedInfo:(id)arg1;
- (id)attachmentOrFootnoteAtCharIndex:(unsigned long long)arg1;
- (struct _NSRange)insertAttachmentOrFootnote:(id)arg1 range:(struct _NSRange)arg2 dolcContext:(id)arg3 undoTransaction:(struct TSWPStorageTransaction *)arg4 changeSession:(id)arg5;
- (struct _NSRange)insertAttachmentOrFootnote:(id)arg1 range:(struct _NSRange)arg2;
- (void)invalidateCharIndexForAttachment:(id)arg1;
- (void)invalidatePageCountAttachmentCharIndexes:(_Bool)arg1;
- (void)invalidateFootnoteAttachmentCharIndexes;
- (unsigned long long)findCharIndexForFootnoteAttachment:(id)arg1;
- (id)footnoteStorages;
- (unsigned long long)footnoteIndexForFootnoteStorage:(id)arg1;
- (unsigned long long)footnoteIndexForFootnote:(id)arg1;
- (unsigned long long)autoNumberFootnoteCountForRange:(struct _NSRange)arg1;
- (struct _NSRange)footnoteRangeForTextRange:(struct _NSRange)arg1;
- (id)footnoteAtFootnoteIndex:(unsigned long long)arg1 outCharIndex:(unsigned long long *)arg2;
- (id)footnoteReferenceAtCharIndex:(unsigned long long)arg1;
- (id)footnoteMarkAtCharIndex:(unsigned long long)arg1;
- (id)footnoteReferenceAttachmentOrFootnoteMarkAttachmentAtCharIndex:(unsigned long long)arg1;
- (unsigned long long)footnoteIndexForCharIndex:(unsigned long long)arg1;
- (unsigned long long)footnoteCount;
- (void)appendSection:(id)arg1 charIndex:(unsigned long long)arg2 undoTransaction:(struct TSWPStorageTransaction *)arg3;
- (struct _NSRange)insertSection:(id)arg1 atCharIndex:(unsigned long long)arg2 dolcContext:(id)arg3 undoTransaction:(struct TSWPStorageTransaction *)arg4 changeSession:(id)arg5;
- (id)sectionAtCharIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;
- (unsigned long long)sectionIndexForSection:(id)arg1;
- (unsigned long long)sectionIndexForCharIndex:(unsigned long long)arg1;
- (void)replaceSectionAtSectionIndex:(unsigned long long)arg1 withSection:(id)arg2 dolcContext:(id)arg3 undoTransaction:(struct TSWPStorageTransaction *)arg4;
- (id)sectionAtSectionIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;
- (_Bool)hasSectionForParagraphBreakAtCharIndex:(unsigned long long)arg1;
- (unsigned long long)sectionCount;
- (_Bool)supportsSectionCopying;
- (_Bool)supportsSections;
- (void)invalidateForStyle:(id)arg1;
- (void)styleDidChangeInRange:(struct _NSRange)arg1;
- (void)setColumnStyle:(id)arg1 forCharRange:(struct _NSRange)arg2 undoTransaction:(struct TSWPStorageTransaction *)arg3;
- (id)columnStyleAtColumnStyleIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;
- (id)columnStyleAtCharIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;
- (_Bool)hasColumnBreakAtCharIndex:(unsigned long long)arg1;
- (_Bool)hasColumnStyleForParagraphBreakAtCharIndex:(unsigned long long)arg1;
- (unsigned long long)columnStyleCount;
- (_Bool)supportsColumnStyles;
- (id)valueForProperty:(int)arg1 atCharIndex:(unsigned long long)arg2 effectiveRange:(struct _NSRange *)arg3;
- (void)setCharacterStyle:(id)arg1 range:(struct _NSRange)arg2 undoTransaction:(struct TSWPStorageTransaction *)arg3;
- (id)characterStyleAtCharIndex:(unsigned long long)arg1 left:(_Bool)arg2 effectiveRange:(struct _NSRange *)arg3;
- (id)characterStyleAtCharIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;
- (unsigned long long)characterStyleAttributeCount;
- (void)setParagraphFlags:(unsigned short)arg1 level:(unsigned long long)arg2 forCharRange:(struct _NSRange)arg3 undoTransaction:(struct TSWPStorageTransaction *)arg4;
- (void)setParagraphLevel:(unsigned long long)arg1 atParIndex:(unsigned long long)arg2 undoTransaction:(struct TSWPStorageTransaction *)arg3;
- (void)setParagraphLevel:(unsigned long long)arg1 forCharRange:(struct _NSRange)arg2 undoTransaction:(struct TSWPStorageTransaction *)arg3;
- (unsigned long long)paragraphLevelAtParIndex:(unsigned long long)arg1;
- (unsigned long long)paragraphLevelAtCharIndex:(unsigned long long)arg1;
- (void)setParagraphFlags:(unsigned short)arg1 forCharRange:(struct _NSRange)arg2 undoTransaction:(struct TSWPStorageTransaction *)arg3;
- (unsigned short)paragraphFlagsAtCharIndex:(unsigned long long)arg1;
- (void)paragraphFlags:(unsigned short *)arg1 andLevel:(unsigned long long *)arg2 atCharIndex:(unsigned long long)arg3;
- (unsigned long long)listStartAtCharIndex:(unsigned long long)arg1;
- (void)setListStart:(unsigned long long)arg1 forCharRange:(struct _NSRange)arg2 undoTransaction:(struct TSWPStorageTransaction *)arg3;
- (unsigned long long)listNumberForParagraphEnumerator:(const struct TSWPParagraphEnumerator *)arg1 numberingData:(CDStruct_b9fbe577 *)arg2;
- (unsigned long long)listNumberForParagraphIndex:(unsigned long long)arg1 numberingData:(CDStruct_b9fbe577 *)arg2;
- (void)setListStyle:(id)arg1 atParIndex:(unsigned long long)arg2 undoTransaction:(struct TSWPStorageTransaction *)arg3;
- (void)setListStyle:(id)arg1 forCharRange:(struct _NSRange)arg2 undoTransaction:(struct TSWPStorageTransaction *)arg3;
- (id)listStyleAtParIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;
- (id)listStyleAtCharIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;
- (unsigned long long)listStyleCount;
- (_Bool)supportsListStyles;
- (void)enumerateParagraphsIntersectingTextRange:(struct _NSRange)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (unsigned long long)findNextParagraphStyleChange:(unsigned long long)arg1 maxCharIndex:(unsigned long long)arg2;
- (void)setParagraphStyle:(id)arg1 forCharRange:(struct _NSRange)arg2 undoTransaction:(struct TSWPStorageTransaction *)arg3;
- (id)paragraphStyleAtCharIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;
- (void)setParagraphStyle:(id)arg1 atParIndex:(unsigned long long)arg2 undoTransaction:(struct TSWPStorageTransaction *)arg3;
- (id)paragraphStyleAtParIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;
- (void)setDictationAndAutocorrection:(id)arg1 forCharRange:(struct _NSRange)arg2 undoTransaction:(struct TSWPStorageTransaction *)arg3;
- (void)addAllDictationAndAutocorrectionKeyRangesInRange:(struct _NSRange)arg1 toRanges:(struct TSWPRangeVector *)arg2;
- (id)dictationAndAutocorrectionKeyAtCharIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;
- (id)languageAtParIndex:(unsigned long long)arg1 useStringTokenizer:(_Bool)arg2 useCreationLanguage:(_Bool)arg3;
- (id)languageForTextRange:(struct _NSRange)arg1 useStringTokenizer:(_Bool)arg2 useCreationLanguage:(_Bool)arg3;
- (id)bestCharacterLanguageForTextRange:(struct _NSRange)arg1;
- (void)setLanguage:(id)arg1 forCharRange:(struct _NSRange)arg2 undoTransaction:(struct TSWPStorageTransaction *)arg3;
- (void)setParagraphWritingDirection:(int)arg1 forCharRange:(struct _NSRange)arg2 undoTransaction:(struct TSWPStorageTransaction *)arg3;
- (int)writingDirectionForParagraphAtParIndex:(unsigned long long)arg1;
- (int)writingDirectionForParagraphAtCharIndex:(unsigned long long)arg1;
- (_Bool)isWritingDirectionRightToLeftForListAtParIndex:(unsigned long long)arg1;
- (_Bool)isWritingDirectionRightToLeftForParagraphAtParIndex:(unsigned long long)arg1;
- (_Bool)isWritingDirectionRightToLeftForParagraphAtCharIndex:(unsigned long long)arg1;
- (_Bool)paragraphHasListLabelAtCharIndex:(unsigned long long)arg1;
- (struct _NSRange)paragraphIndexRangeForCharRange:(struct _NSRange)arg1;
- (struct _NSRange)textRangeForParagraphsInCharRange:(struct _NSRange)arg1;
- (unsigned long long)paragraphEndAtCharIndex:(unsigned long long)arg1;
- (unsigned long long)paragraphStartAtCharIndex:(unsigned long long)arg1;
- (struct _NSRange)textRangeForParagraphAtCharIndex:(unsigned long long)arg1;
- (struct _NSRange)textRangeForParagraphsInRange:(struct _NSRange)arg1;
- (struct _NSRange)textRangeForParagraphAtIndex:(unsigned long long)arg1;
- (unsigned long long)paragraphIndexAtCharIndex:(unsigned long long)arg1;
- (unsigned long long)paragraphCount;
- (unsigned long long)firstParIndexInListAtParIndex:(unsigned long long)arg1;
- (struct _NSRange)textRangeForListAtCharIndex:(unsigned long long)arg1;
- (unsigned long long)listEndAtCharIndex:(unsigned long long)arg1;
- (struct _NSRange)textRangeForListsInCharRange:(struct _NSRange)arg1;
- (void)adoptStylesheet:(id)arg1 withMapper:(id)arg2;
- (_Bool)styleOverridesAppliedToRange:(struct _NSRange)arg1;
- (struct _NSRange)replaceAllOccurrencesOfStyle:(id)arg1 withStyle:(id)arg2 undoTransaction:(struct TSWPStorageTransaction *)arg3;
- (_Bool)canUserReplaceText;
- (void)continueSearch:(id)arg1;
- (id)searchForAnnotationsWithHitBlock:(CDUnknownBlockType)arg1;
- (id)searchInRange:(struct _NSRange)arg1 forString:(id)arg2 options:(unsigned long long)arg3 onHit:(CDUnknownBlockType)arg4;
- (id)searchForString:(id)arg1 options:(unsigned long long)arg2 onHit:(CDUnknownBlockType)arg3;
- (struct _NSRange)rangeForHighlight:(id)arg1;
- (void)findChangesInRange:(struct _NSRange)arg1 onHit:(CDUnknownBlockType)arg2;
- (void)p_findChangesInRange:(struct _NSRange)arg1 onHit:(CDUnknownBlockType)arg2 withAttributeKind:(unsigned int)arg3;
- (void)findCommentsInRange:(struct _NSRange)arg1 onHit:(CDUnknownBlockType)arg2;
- (struct _NSRange)rangeOfAnnotationWithOptions:(unsigned long long)arg1 range:(struct _NSRange)arg2;
- (void)acceptVisitor:(id)arg1;
- (id)childEnumerator;
- (struct _NSRange)rangeOfParagraphBreakingCharacter:(unsigned short)arg1 backwards:(_Bool)arg2 range:(struct _NSRange)arg3;
- (struct _NSRange)rangeOfString:(id)arg1 searchOptions:(unsigned long long)arg2 range:(struct _NSRange)arg3;
- (struct _NSRange)rangeOfString:(id)arg1 searchOptions:(unsigned long long)arg2 updatingSearchRange:(struct _NSRange *)arg3;
- (void)wasRemovedFromDocumentRoot:(id)arg1;
- (void)willBeRemovedFromDocumentRoot:(id)arg1;
- (void)wasAddedToDocumentRoot:(id)arg1 dolcContext:(id)arg2;
- (void)willBeAddedToDocumentRoot:(id)arg1 dolcContext:(id)arg2;
- (void)insertStorage:(id)arg1 atCharIndex:(unsigned long long)arg2 dolcContext:(id)arg3 undoTransaction:(struct TSWPStorageTransaction *)arg4;
- (void)deleteRange:(struct _NSRange)arg1 undoTransaction:(struct TSWPStorageTransaction *)arg2;
- (void)insertString:(id)arg1 atCharIndex:(unsigned long long)arg2 undoTransaction:(struct TSWPStorageTransaction *)arg3;
- (id)substringWithSelection:(id)arg1;
- (id)substringWithRange:(struct _NSRange)arg1;
- (struct _NSRange)p_replaceCharactersInLogicalSelection:(id)arg1 withString:(id)arg2 withFlags:(unsigned int)arg3 replaceTextData:(CDStruct_a70f6672 *)arg4 changeSession:(id)arg5 undoTransaction:(struct TSWPStorageTransaction *)arg6 outInsertedRange:(struct _NSRange *)arg7;
- (struct _NSRange)replaceCharactersInSelection:(id)arg1 withString:(id)arg2 withFlags:(unsigned int)arg3 replaceTextData:(CDStruct_a70f6672 *)arg4 changeSession:(id)arg5 undoTransaction:(struct TSWPStorageTransaction *)arg6 outInsertedRange:(struct _NSRange *)arg7;
- (struct _NSRange)replaceCharactersInRange:(struct _NSRange)arg1 withString:(id)arg2 notifyObservers:(_Bool)arg3 undoTransaction:(struct TSWPStorageTransaction *)arg4;
- (struct _NSRange)replaceCharactersInRange:(struct _NSRange)arg1 withString:(id)arg2 undoTransaction:(struct TSWPStorageTransaction *)arg3;
- (id)extendSelectionForTopicChildren:(id)arg1;
- (struct _NSRange)p_RelocateNonSelectedAnchorsInRange:(struct _NSRange)arg1 selectionInfos:(id)arg2 undoTransaction:(struct TSWPStorageTransaction *)arg3;
- (id)relocateNonSelectedAnchorsInSelection:(id)arg1 undoTransaction:(struct TSWPStorageTransaction *)arg2;
- (struct __CFDictionary *)createFilteredCoreTextAttributes:(struct __CFDictionary *)arg1 effectiveRange:(struct _NSRange *)arg2 filterDelegate:(id)arg3;
- (_Bool)adjustRangesByDelta:(long long)arg1;
- (unsigned long long)storageLength;
- (struct _NSRange)charRangeMappedFromStorage:(struct _NSRange)arg1;
- (struct _NSRange)charRangeMappedToStorage:(struct _NSRange)arg1;
- (unsigned long long)charIndexRemappedFromStorage:(unsigned long long)arg1;
- (unsigned long long)charIndexMappedFromStorage:(unsigned long long)arg1;
- (unsigned long long)charIndexMappedToStorage:(unsigned long long)arg1;
- (long long)hyphenationLocationBeforeIndex:(long long)arg1 inRange:(struct _NSRange)arg2 locale:(struct __CFLocale *)arg3 hyphenChar:(unsigned int *)arg4;
- (void)attributesAtCharIndex:(unsigned long long)arg1 attributesOfInterest:(_Bool [19])arg2 attributesTable:(id [19])arg3 effectiveRange:(struct _NSRange *)arg4;
- (id)objectAtLocationAtExactCharIndex:(unsigned long long)arg1 forAttributeKind:(unsigned int)arg2;
- (id)objectAtLocationPriorToMappedCharIndex:(unsigned long long)arg1 forAttributeKind:(unsigned int)arg2 effectiveRange:(struct _NSRange *)arg3;
- (struct _NSRange)rangeByTrimmingRange:(struct _NSRange)arg1 withBlock:(CDUnknownBlockType)arg2;
- (struct _NSRange)rangeByExpandingToIncludePartialWords:(struct _NSRange)arg1;
- (struct _NSRange)nextWordFromIndex:(unsigned long long)arg1 forward:(_Bool)arg2;
- (struct _NSRange)p_rangeForSelectionAtCharIndex:(unsigned long long)arg1 caretIndex:(unsigned long long)arg2 handleNextWordWhitespace:(_Bool)arg3;
- (struct _NSRange)rangeForSelectionAtCharIndex:(unsigned long long)arg1 caretIndex:(unsigned long long)arg2;
- (struct _NSRange)rangeForSelectionAtCharIndex:(unsigned long long)arg1 includePreviousWord:(_Bool)arg2;
- (struct _NSRange)wordAtCharIndex:(unsigned long long)arg1 includePreviousWord:(_Bool)arg2;
- (struct _NSRange)scanLeftForWordAtCharIndex:(unsigned long long)arg1;
- (struct _NSRange)rangeByExtendingRangeToLineBreak:(struct _NSRange)arg1;
- (struct _NSRange)rangeByExtendingRangeToWhitespace:(struct _NSRange)arg1 skipVisibleDeleted:(_Bool)arg2;
- (struct _NSRange)rangeByExtendingRangeToWhitespace:(struct _NSRange)arg1;
- (struct _NSRange)rangeForSelectionWithInsertionSelection:(id)arg1;
- (struct _NSRange)whiteSpaceRangeAtCharIndex:(unsigned long long)arg1 includingBreaks:(_Bool)arg2;
- (struct _NSRange)whiteSpaceRangeAtCharIndex:(unsigned long long)arg1;
- (_Bool)isAllWhitespaceInRange:(struct _NSRange)arg1;
- (_Bool)isEmptyParagraphSelection:(id)arg1 outRange:(struct _NSRange *)arg2;
- (_Bool)isWholeParagraphsForRange:(struct _NSRange)arg1 ignoreAttachmentCharacters:(_Bool)arg2 requireParagraphBreakSelected:(_Bool)arg3;
- (unsigned long long)emptyParagraphCount:(struct _NSRange)arg1;
- (unsigned long long)selectedParagraphBreakCount:(struct _NSRange)arg1;
- (unsigned long long)indexForCharacter:(unsigned short)arg1 startCharIndex:(unsigned long long)arg2;
- (unsigned long long)nextCharacterIndex:(unsigned long long)arg1;
- (unsigned long long)previousCharacterIndex:(unsigned long long)arg1 forDelete:(_Bool)arg2;
- (unsigned long long)previousCharacterIndex:(unsigned long long)arg1;
- (id)childEnumeratorForRange:(struct _NSRange)arg1;
- (unsigned long long)wordCount;
- (id)string;
- (id)stringValue;
- (void)getCharacters:(unsigned short *)arg1 range:(struct _NSRange)arg2;
- (unsigned short)characterAtIndex:(unsigned long long)arg1;
- (struct _NSRange)range;
- (unsigned long long)length;
- (unsigned long long)characterCount;
- (_Bool)setDOLCSuppressed:(_Bool)arg1;
- (_Bool)isDOLCSuppressed;
- (struct TSWPParagraphEnumerator)paragraphEnumeratorAtParIndex:(unsigned long long)arg1 styleProvider:(id)arg2;
- (struct TSWPParagraphEnumerator)paragraphEnumeratorForCharRange:(struct _NSRange)arg1 styleProvider:(id)arg2 requireHidden:(_Bool)arg3;
- (struct TSWPParagraphEnumerator)paragraphEnumeratorForCharRange:(struct _NSRange)arg1 styleProvider:(id)arg2;
- (struct TSWPParagraphEnumerator)paragraphEnumeratorAtCharIndex:(unsigned long long)arg1 styleProvider:(id)arg2;
- (id)textSourceForLayoutInRange:(struct _NSRange)arg1;
- (void)filterInvalidContentForStorage:(id)arg1 undoTransaction:(struct TSWPStorageTransaction *)arg2;
- (void)filterSectionBreaksFromStorage:(id)arg1 undoTransaction:(struct TSWPStorageTransaction *)arg2;
- (_Bool)allowsElementKind:(int)arg1;
- (unsigned int)disallowedElementKinds;
- (void)removeDisallowedElementKind:(int)arg1;
- (void)addDisallowedElementKind:(int)arg1;
- (void)setWPKind:(int)arg1 undoTransaction:(struct TSWPStorageTransaction *)arg2;
- (int)wpKind;
- (id)stylesheet;
- (void)setDocumentRoot:(id)arg1;
- (id)documentRoot;
- (void)removeObserver:(id)arg1;
- (void)addObserver:(id)arg1;
- (void)dealloc;
- (id)initWithContext:(id)arg1 string:(id)arg2 stylesheet:(id)arg3 kind:(int)arg4;
- (id)initWithContext:(id)arg1 string:(id)arg2 kind:(int)arg3 stylesheet:(id)arg4 paragraphStyle:(id)arg5 listStyle:(id)arg6 section:(id)arg7 columnStyle:(id)arg8 paragraphDirection:(int)arg9;
- (id)initWithContext:(id)arg1 string:(id)arg2 kind:(int)arg3 stylesheet:(id)arg4 paragraphStyle:(id)arg5 listStyle:(id)arg6 section:(id)arg7 columnStyle:(id)arg8;
- (id)stringEquivalentFromRange:(struct _NSRange)arg1;
- (id)stringEquivalentFromRange:(struct _NSRange)arg1 withLayoutParent:(id)arg2;
- (id)plainTextStringFromRange:(struct _NSRange)arg1 convertTextualAttachments:(_Bool)arg2 includeChildTextStorages:(_Bool)arg3 forExport:(_Bool)arg4 withLayoutParent:(id)arg5;
- (void)pApplyOverrideObjectAfterReplacingCharactersInRange:(struct _NSRange)arg1 withString:(id)arg2 overrideObject:(id)arg3 undoTransaction:(struct TSWPStorageTransaction *)arg4;
- (void)pApplyOverrideObjectAfterReplacingCharactersInSelection:(id)arg1 withString:(id)arg2 overrideObject:(id)arg3 undoTransaction:(struct TSWPStorageTransaction *)arg4;
- (id)pOverrideObjectBeforeReplacingCharactersInRange:(struct _NSRange)arg1 withString:(id)arg2 withInsertionBehavior:(int)arg3;
- (id)pOverrideObjectBeforeReplacingCharactersInSelection:(id)arg1 withString:(id)arg2;
- (id)pFindValidInsertionCharStyleFromCharIndex:(unsigned long long)arg1;
- (int)compareAttributeArray1:(struct TSWPAttributeArray *)arg1 array2:(struct TSWPAttributeArray *)arg2 range1:(struct _NSRange)arg3 range2:(struct _NSRange)arg4 attributeIndex1:(unsigned long long)arg5 attributeIndex2:(unsigned long long)arg6;
- (int)compareAttributeArray:(struct TSWPAttributeArray *)arg1 range:(struct _NSRange)arg2 otherStorage:(id)arg3 otherRange:(struct _NSRange)arg4;
- (void)transferAttributeArraySource:(struct TSWPAttributeArray *)arg1 forSourceRange:(struct _NSRange)arg2 toDestStorage:(id)arg3 objectContext:(id)arg4 dolcContext:(id)arg5 flags:(int)arg6;
- (struct _NSRange)replaceAllOccurrencesOfObject:(id)arg1 withObject:(id)arg2 forKind:(unsigned int)arg3 undoTransaction:(struct TSWPStorageTransaction *)arg4;
- (void)applyFlags:(unsigned short)arg1 level:(unsigned long long)arg2 toParagraphsInCharRange:(struct _NSRange)arg3 undoTransaction:(struct TSWPStorageTransaction *)arg4;
- (void)applyObject:(id)arg1 toParagraphsInCharRange:(struct _NSRange)arg2 forKind:(unsigned int)arg3 undoTransaction:(struct TSWPStorageTransaction *)arg4;
- (void)applyWritingDirection:(int)arg1 toParagraphIndexRange:(struct _NSRange)arg2 forKind:(unsigned int)arg3 undoTransaction:(struct TSWPStorageTransaction *)arg4;
- (void)applyDataValue:(unsigned int)arg1 toParagraphIndexRange:(struct _NSRange)arg2 forKind:(unsigned int)arg3 undoTransaction:(struct TSWPStorageTransaction *)arg4;
- (void)applyFlags:(unsigned short)arg1 level:(unsigned long long)arg2 toParagraphIndexRange:(struct _NSRange)arg3 forKind:(unsigned int)arg4 undoTransaction:(struct TSWPStorageTransaction *)arg5;
- (void)applyObject:(id)arg1 toParagraphIndexRange:(struct _NSRange)arg2 forKind:(unsigned int)arg3 undoTransaction:(struct TSWPStorageTransaction *)arg4;
- (void)lowLevelApplyObject:(id)arg1 toCharRange:(struct _NSRange)arg2 forKind:(int)arg3 dolcContext:(id)arg4 undoTransaction:(struct TSWPStorageTransaction *)arg5;
- (void)applyObject:(id)arg1 toCharRange:(struct _NSRange)arg2 forKind:(int)arg3 dolcContext:(id)arg4 undoTransaction:(struct TSWPStorageTransaction *)arg5;
- (void)insertParagraphData:(CDStruct_8a5ee6e3)arg1 charIndex:(unsigned long long)arg2 attributeArray:(struct TSWPAttributeArray *)arg3 attributeIndex:(unsigned long long)arg4 undoTransaction:(struct TSWPStorageTransaction *)arg5;
- (void)insertObject:(id)arg1 charIndex:(unsigned long long)arg2 attributeArray:(struct TSWPAttributeArray *)arg3 attributeIndex:(unsigned long long)arg4 dolcContext:(id)arg5 undoTransaction:(struct TSWPStorageTransaction *)arg6;
- (struct _NSRange)insertSpecialCharacter:(unsigned short)arg1 object:(id)arg2 kind:(unsigned int)arg3 range:(struct _NSRange)arg4 dolcContext:(id)arg5 undoTransaction:(struct TSWPStorageTransaction *)arg6 changeSession:(id)arg7;
- (void)p_attributesAtCharIndex:(unsigned long long)arg1 attributesOfInterest:(_Bool [19])arg2 attributesTable:(id [19])arg3 effectiveRange:(struct _NSRange *)arg4;
- (void)compress:(struct TSWPStorageTransaction *)arg1;
- (void)compressAttributeArrayKind:(unsigned int)arg1 undoTransaction:(struct TSWPStorageTransaction *)arg2;
- (struct TSWPAttributeArray *)attributeArrayForKind:(unsigned int)arg1;
- (struct TSWPParagraphAttributeArray *)paragraphAttributeArrayForKind:(unsigned int)arg1 withCreate:(_Bool)arg2;
- (struct TSWPAttributeArray *)attributeArrayForKind:(unsigned int)arg1 withCreate:(_Bool)arg2 fromUndo:(_Bool)arg3 undoTransaction:(struct TSWPStorageTransaction *)arg4;
- (struct TSWPAttributeArray *)attributeArrayForKind:(unsigned int)arg1 withCreate:(_Bool)arg2 undoTransaction:(struct TSWPStorageTransaction *)arg3;
- (struct _NSRange)replaceCharactersInSelection:(id)arg1 withStorage:(id)arg2 usePasteRules:(_Bool)arg3 dolcContext:(id)arg4 changeSession:(id)arg5 undoTransaction:(struct TSWPStorageTransaction *)arg6;
- (struct _NSRange)replaceCharactersInRange:(struct _NSRange)arg1 withStorage:(id)arg2 usePasteRules:(_Bool)arg3 dolcContext:(id)arg4 undoTransaction:(struct TSWPStorageTransaction *)arg5;
- (void)transferAttributeArraySource:(struct TSWPAttributeArray *)arg1 toAttributeArrayDest:(struct TSWPAttributeArray *)arg2 atCharIndex:(unsigned long long)arg3 dolcContext:(id)arg4 undoTransaction:(struct TSWPStorageTransaction *)arg5;
- (struct _NSRange)textRangeIgnoringTrailingLineBreaksForParagraphAtIndex:(unsigned long long)arg1;
- (void)p_fillMarkers:(vector_88016b54 *)arg1 startingAtCharIndex:(unsigned long long)arg2 forCount:(unsigned long long)arg3;
- (void)p_fillMarkers:(vector_a36e5995 *)arg1 string:(id)arg2 length:(unsigned long long)arg3 hasAttachments:(_Bool *)arg4 hasFootnotes:(_Bool *)arg5 hasBreaks:(_Bool *)arg6;
- (void)p_lowLevelReplaceCharactersInRange:(struct _NSRange)arg1 withString:(id)arg2 length:(unsigned long long)arg3 undoTransaction:(struct TSWPStorageTransaction *)arg4;
- (void)p_replaceCharactersInSelection:(id)arg1 withString:(id)arg2 length:(unsigned long long)arg3 undoTransaction:(struct TSWPStorageTransaction *)arg4;
- (void)p_didChangeRange:(struct _NSRange)arg1 delta:(long long)arg2 broadcastKind:(int)arg3;
- (id)pDefaultSectionForContext:(id)arg1;
- (id)valueForBIUProperties:(id)arg1 selection:(id)arg2 insertionStyle:(id)arg3;
- (void)replaceCharactersInRange:(struct _NSRange)arg1 withString:(id)arg2 options:(unsigned long long)arg3 changedRange:(struct _NSRange *)arg4 changeDelta:(long long *)arg5 undoTransaction:(struct TSWPStorageTransaction *)arg6 changeSession:(id)arg7;
- (struct __CTFont *)createFontAtCharIndex:(unsigned long long)arg1 scaleTextPercent:(unsigned long long)arg2 effectiveRange:(struct _NSRange *)arg3 styleProvider:(id)arg4;
- (void)splitSmartFieldAtCharIndex:(unsigned long long)arg1 lengthToInsert:(unsigned long long)arg2 dolcContext:(id)arg3 undoTransaction:(struct TSWPStorageTransaction *)arg4;
- (void)splitSmartFieldAtCharIndex:(unsigned long long)arg1 lengthToInsert:(unsigned long long)arg2 attributeKind:(unsigned int)arg3 dolcContext:(id)arg4 undoTransaction:(struct TSWPStorageTransaction *)arg5;
- (id)valueForBIUProperties:(id)arg1;
- (_Bool)canBeStoredInAStringValueCell;
- (_Bool)p_passesExtraTablesChecksForStoringInAStringValueCell;
- (_Bool)p_shouldInsertionSplitChange:(id)arg1 changeSession:(id)arg2;
- (void)p_handleChangeSplittingForInsertedRange:(struct _NSRange)arg1 changeSession:(id)arg2 undoTransaction:(struct TSWPStorageTransaction *)arg3;
- (id)p_replacementsForSelection:(id)arg1 withString:(id)arg2 changeSession:(id)arg3 shouldTrackDeletions:(_Bool)arg4;
- (id)editableAnnotationForInsertionPointSelection:(id)arg1 includeComments:(_Bool)arg2 withOutRange:(struct _NSRange *)arg3 selectionIsOnEdge:(_Bool *)arg4;
- (_Bool)highlightsAllowed;
- (id)firstHighlightForSelectionRange:(struct _NSRange)arg1 outRange:(struct _NSRange *)arg2 requireComment:(_Bool)arg3;
- (id)firstHighlightForSelectionRange:(struct _NSRange)arg1 outRange:(struct _NSRange *)arg2;
- (void)changeViewSettingsDidChange;
- (_Bool)selectionContainsVisibleTrackedChanges:(id)arg1;
- (struct _NSRange)rangeForTrackedChanges:(id)arg1;
- (id)changeDetailsForChange:(id)arg1 withRange:(struct _NSRange)arg2;
- (id)changeDetailsAtCharIndex:(unsigned long long)arg1 outRange:(struct _NSRange *)arg2;
- (id)previousChangeFromCharIndex:(unsigned long long)arg1 beforeChange:(id)arg2 changeRange:(struct _NSRange *)arg3;
- (id)nextChangeFromCharIndex:(unsigned long long)arg1 afterChange:(id)arg2 changeRange:(struct _NSRange *)arg3;
- (void)applyChanges:(_Bool)arg1 inRange:(struct _NSRange)arg2 inSelectionRange:(struct _NSRange)arg3 outChangedRange:(struct _NSRange *)arg4 outSelectionRange:(struct _NSRange *)arg5 undoTransaction:(struct TSWPStorageTransaction *)arg6 forceAll:(_Bool)arg7;
- (void)applyChange:(id)arg1 changeRange:(struct _NSRange)arg2 accept:(_Bool)arg3 undoTransaction:(struct TSWPStorageTransaction *)arg4;
- (_Bool)hasDeletionInRange:(struct _NSRange)arg1;
- (unsigned long long)indexAfterLastVisibleCharInRange:(struct _NSRange)arg1;
- (unsigned long long)indexOfFirstNonDeletedCharInRange:(struct _NSRange)arg1;
- (unsigned long long)indexOfFirstVisibleCharInRange:(struct _NSRange)arg1;
- (unsigned long long)p_indexOfFirstNonDeletedCharInRange:(struct _NSRange)arg1 requireVisible:(_Bool)arg2;
- (_Bool)hasVisibleTextAtCharIndex:(unsigned long long)arg1;
- (_Bool)hasDeletedTextAtCharIndex:(unsigned long long)arg1 range:(struct _NSRange *)arg2;
- (_Bool)hasHiddenTextAtCharIndex:(unsigned long long)arg1 range:(struct _NSRange *)arg2;
- (_Bool)hasHiddenTextAtCharIndex:(unsigned long long)arg1;
- (_Bool)p_hasDeletedTextAtCharIndex:(unsigned long long)arg1 requireHidden:(_Bool)arg2 range:(struct _NSRange *)arg3;
- (id)visibleRangesInRange:(struct _NSRange)arg1;
- (id)hiddenRangesInRange:(struct _NSRange)arg1;
- (id)deletedRangesInRange:(struct _NSRange)arg1;
- (struct TSWPRangeVector)deletedRangeVectorInRange:(struct _NSRange)arg1;
- (id)changeAtCharIndex:(unsigned long long)arg1 outRange:(struct _NSRange *)arg2;
- (id)changeAtCharIndex:(unsigned long long)arg1 attributeKind:(unsigned int)arg2 effectiveRange:(struct _NSRange *)arg3;
- (struct _NSRange)rangeForChange:(id)arg1;
@property(readonly, nonatomic) struct TSWPChangeAttributeArray *deletionChangesTable;
@property(readonly, nonatomic) struct TSWPChangeAttributeArray *insertionChangesTable;
@property(readonly, nonatomic) _Bool hasTrackedChanges;
- (_Bool)hasAttachmentsThatChangeWithPageNumberOrPageCount;
- (_Bool)changesWithPageCount;
@property(nonatomic) CDStruct_0441cfb5 hyperlinkCellID; // @dynamic hyperlinkCellID;
- (void)unstashBroadcaster;
- (void)stashBroadcaster;

// Remaining properties
@property(readonly) unsigned long long hash;
@property(nonatomic) _Bool matchesObjectPlaceholderGeometry;
@property(readonly) Class superclass;

@end

@interface TSWPStorageBroadcaster : NSObject
{
    struct set<id<TSWPStorageObserver>, std::__1::less<id<TSWPStorageObserver>>, std::__1::allocator<id<TSWPStorageObserver>>> _observers;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)broadcastStorage:(id)arg1 didChangeRange:(struct _NSRange)arg2 delta:(long long)arg3 broadcastKind:(int)arg4;
- (void)removeAllObservers;
- (void)removeObserver:(id)arg1;
- (void)addObserver:(id)arg1;
- (void)dealloc;

@end

@interface TSWPStorageChildEnumerator : NSEnumerator
{
    TSWPStorage *_storage;
    struct _NSRange _charRange;
    unsigned int _index;
    NSArray *_charOffsetArray;
}

- (id)nextObject;
- (void)dealloc;
- (id)initWithStorage:(id)arg1 range:(struct _NSRange)arg2;

@end

@interface TSWPStorageMeasurer : NSObject <TSWPLayoutTarget, TSWPLayoutOwner, TSWPColumnMetrics>
{
    TSWPStorage *_storage;
    NSObject<TSWPLayoutParent> *_layoutParent;
    id <TSWPStyleProvider> _styleProvider;
    NSMutableArray *_columns;
    struct CGSize _minSize;
    struct CGSize _maxSize;
    unsigned int _flags;
    struct CGPoint _anchor;
}

@property(readonly, retain, nonatomic) NSMutableArray *columns; // @synthesize columns=_columns;
@property(readonly, nonatomic) _Bool columnsAreLeftToRight;
@property(readonly, nonatomic) _Bool shrinkTextToFit;
@property(readonly, nonatomic) _Bool alwaysStartsNewTarget;
- (double)positionForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2 outWidth:(double *)arg3 outGap:(double *)arg4;
- (double)gapForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2;
- (double)widthForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2;
@property(readonly, nonatomic) unsigned long long columnCount;
@property(readonly, nonatomic) TSWPPadding *layoutMargins;
@property(readonly, nonatomic) struct CGSize adjustedInsets;
@property(readonly, nonatomic) unsigned int maxLineCount;
- (id)lineHintsForTarget:(id)arg1;
- (id)textWrapper;
- (void)layoutManager:(id)arg1 didClearDirtyRangeWithDelta:(long long)arg2 afterCharIndex:(unsigned long long)arg3;
- (void)layoutManagerNeedsLayout:(id)arg1;
- (_Bool)caresAboutStorageChanges;
- (id)styleProvider;
@property(readonly, nonatomic) _Bool layoutIsValid;
- (_Bool)isLayoutOffscreen;
@property(readonly, nonatomic) _Bool textIsVertical;
@property(readonly, nonatomic) unsigned long long pageCount;
@property(readonly, nonatomic) unsigned long long pageNumber;
@property(readonly, nonatomic) double maxAnchorY;
- (id)currentAnchoredDrawableLayouts;
- (void)addAttachmentLayout:(id)arg1;
- (unsigned long long)iterativeAttachmentPositioningMaxPassCount;
- (_Bool)shouldPositionAttachmentsIteratively;
- (id)currentInlineDrawableLayouts;
- (id)validatedLayoutForAnchoredDrawable:(id)arg1;
- (id)layoutForInlineDrawable:(id)arg1;
- (struct CGRect)targetRectForCanvasRect:(struct CGRect)arg1;
- (void)setNeedsDisplayInTargetRect:(struct CGRect)arg1;
@property(readonly, nonatomic) _Bool wantsLineFragments;
@property(readonly, nonatomic) int naturalDirection;
@property(readonly, nonatomic) unsigned int naturalAlignment;
@property(readonly, nonatomic) unsigned int verticalAlignment;
@property(readonly, nonatomic) unsigned int autosizeFlags;
@property(readonly, nonatomic) struct CGPoint anchorPoint;
@property(readonly, nonatomic) struct CGPoint position;
@property(readonly, nonatomic) struct CGSize currentSize;
@property(readonly, nonatomic) struct CGSize maxSize;
@property(readonly, nonatomic) struct CGSize minSize;
- (_Bool)isLastTarget;
@property(readonly, nonatomic) TSPObject<TSDHint> *nextTargetFirstChildHint;
@property(readonly, nonatomic) id <TSWPFootnoteMarkProvider> footnoteMarkProvider;
@property(readonly, nonatomic) id <TSWPFootnoteHeightMeasurer> footnoteHeightMeasurer;
@property(readonly, retain, nonatomic) id <TSWPOffscreenColumn> nextTargetFirstColumn;
@property(readonly, nonatomic) const struct TSWPTopicNumberHints *nextTargetTopicNumbers;
@property(readonly, nonatomic) const struct TSWPTopicNumberHints *previousTargetTopicNumbers;
@property(readonly, retain, nonatomic) id <TSWPOffscreenColumn> previousTargetLastColumn;
- (id)columnMetricsForCharIndex:(unsigned long long)arg1 outRange:(struct _NSRange *)arg2;
- (struct CGSize)measuredSizeWithFlags:(unsigned int)arg1 maxSize:(struct CGSize)arg2 layoutParent:(id)arg3 styleProvider:(id)arg4;
- (struct CGSize)measuredSizeWithFlags:(unsigned int)arg1;
- (id)pLayoutWithMinSize:(struct CGSize)arg1 maxSize:(struct CGSize)arg2 anchor:(struct CGPoint)arg3 flags:(unsigned int)arg4;
- (void)dealloc;
- (id)initWithStorage:(id)arg1;

// Remaining properties
@property(readonly, nonatomic) _Bool allowsDescendersToClip;
@property(readonly, nonatomic) _Bool allowsLastLineTruncation;
@property(readonly, nonatomic) _Bool alwaysAllowWordSplit;
@property(retain, nonatomic) NSMutableArray *anchoredDrawablesForRelayout;
@property(readonly, nonatomic) TSDCanvas *canvas;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) struct __CFLocale *hyphenationLocale;
@property(readonly, nonatomic) _Bool ignoresEquationAlignment;
@property(readonly, nonatomic) struct CGRect maskRect;
@property(readonly, nonatomic) TSDLayout *parentLayoutForInlineAttachments;
@property(readonly, nonatomic) _Bool pushAscendersIntoColumn;
@property(readonly, nonatomic) _Bool shouldHyphenate;
@property(readonly) Class superclass;
@property(readonly, nonatomic) double textScaleFactor;

@end

@interface TSWPStoragePasteRules : NSObject
{
    unsigned int _flags;
    unsigned int _actionFlags[4];
    unsigned int _lastFlag;
    struct _NSRange _srcLeadRange;
    struct _NSRange _srcTrailRange;
    _Bool _mapDestTrailCS;
    TSWPStorage *_destStorage;
    unsigned long long _sourceColumnStyleCount;
    unsigned long long _sourceSectionCount;
    struct {
        TSWPParagraphStyle *parStyle;
        TSPObject *section;
        TSWPColumnStyle *columnStyle;
        TSWPListStyle *listStyle;
        CDStruct_8a5ee6e3 parData;
        CDStruct_8a5ee6e3 parStartData;
        CDStruct_8a5ee6e3 parBidiData;
    } _paragraphs[4];
}

- (void)didPasteWithIOTransaction:(struct TSWPStorageTransaction *)arg1 atDestRange:(struct _NSRange)arg2;
- (void)willPasteStorage:(id)arg1 intoDestStorage:(id)arg2 atDestRange:(struct _NSRange)arg3;
- (void)setupFlagsForPastingSrcStorage:(id)arg1 intoDestStorage:(id)arg2 atDestRange:(struct _NSRange)arg3;
- (void)mapCharacterStyles:(int)arg1 toRange:(struct _NSRange)arg2 ioTransaction:(struct TSWPStorageTransaction *)arg3;
- (void)mapCharacterStyleProperties:(id)arg1 toRange:(struct _NSRange)arg2 ioTransaction:(struct TSWPStorageTransaction *)arg3;
- (void)applyParagraph:(int)arg1 toCharIndex:(unsigned long long)arg2 ioTransaction:(struct TSWPStorageTransaction *)arg3;
- (void)addActionFlag:(int)arg1;
- (void)dealloc;

@end

@interface TSWPStorageStyleProvider : NSObject <TSWPStyleProvider>
{
}

+ (id)styleProviderForStorage:(id)arg1;
- (id)paragraphStyleAtParIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(readonly, nonatomic) _Bool supportsBoldItalicUnderlineShortcuts;

@end

@interface TSWPSwipeGestureRecognizer : UIGestureRecognizer
{
    double mStartTime;
    unsigned long long mTouchCountAttained;
    TSUPointerKeyDictionary *mStartLocations;
    int mDirection;
    unsigned long long mNumberOfTouchesRequired;
}

@property(nonatomic) int direction; // @synthesize direction=mDirection;
@property(nonatomic) unsigned long long numberOfTouchesRequired; // @synthesize numberOfTouchesRequired=mNumberOfTouchesRequired;
- (void)dealloc;
- (void)reset;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (struct CGPoint)locationInView:(id)arg1;
- (_Bool)p_touchWasSwipe:(id)arg1 movedFarOut:(_Bool *)arg2;
- (void)p_recordTouches:(id)arg1;
- (_Bool)p_swipeDirectionValidForXDiff:(double)arg1 yDiff:(double)arg2;
- (_Bool)p_swipeDirectionValidForAngle:(double)arg1 direction:(int)arg2;
- (double)p_angleDifferenceForAngle1:(double)arg1 angle2:(double)arg2;

@end

@interface TSWPTab : NSObject <NSCopying>
{
    double _position;
    int _alignment;
    NSString *_leader;
}

+ (id)tab;
+ (id)displayStringFromTabLeader:(id)arg1;
+ (id)stringFromTabAlignment:(int)arg1 isRTL:(_Bool)arg2;
+ (int)tabAlignmentFromString:(id)arg1 isRTL:(_Bool)arg2;
+ (id)tabLeaderFromDisplayString:(id)arg1;
+ (id)kTabStopLeaderStringArrowRTL;
+ (id)kTabStopLeaderStringArrow;
+ (id)kTabStopLeaderStringUnderscore;
+ (id)kTabStopLeaderStringDash;
+ (id)kTabStopLeaderStringPoint;
+ (id)kTabStopDisplayStringArrow;
+ (id)kTabStopDisplayStringUnderscore;
+ (id)kTabStopDisplayStringDash;
+ (id)kTabStopDisplayStringPoint;
+ (id)kTabStopDisplayStringNone;
+ (id)kTabStopAlignmentStringDecimal;
+ (id)kTabStopAlignmentStringRight;
+ (id)kTabStopAlignmentStringCenter;
+ (id)kTabStopAlignmentStringLeft;
+ (void)initialize;
@property(copy, nonatomic) NSString *leader; // @synthesize leader=_leader;
@property(nonatomic) int alignment; // @synthesize alignment=_alignment;
@property(nonatomic) double position; // @synthesize position=_position;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (_Bool)isEqualToPosition:(double)arg1;
- (long long)compare:(id)arg1;
- (long long)compareToPosition:(double)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithPosition:(double)arg1 alignment:(int)arg2 leader:(id)arg3;
- (id)init;
- (void)dealloc;
- (void)setPositionInInches:(double)arg1;
- (double)positionInInches;

@end

@interface TSWPTabs : NSObject <NSCopying, NSFastEnumeration>
{
    NSMutableArray *_tabs;
}

+ (id)tabs;
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)indexForTabWithPosition:(double)arg1 alignment:(int)arg2 leader:(id)arg3;
- (void)setPosition:(double)arg1 forTab:(id)arg2;
- (void)removeTabAtIndex:(unsigned long long)arg1;
- (void)insertTab:(id)arg1;
- (id)tabAfterPosition:(double)arg1;
- (id)tabAtPosition:(double)arg1;
- (id)tabAtIndex:(unsigned long long)arg1;
- (unsigned long long)count;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithTabs:(id)arg1;
- (id)init;

@end

@interface TSWPTapAndTouchGestureRecognizer : UIGestureRecognizer <TSDTapGesture>
{
    unsigned long long _numberOfTapsRequired;
}

@property(nonatomic) unsigned long long numberOfTapsRequired; // @synthesize numberOfTapsRequired=_numberOfTapsRequired;
- (void)reset;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)p_failBecauseFingerStayedUpTooLongAfterTap;

// Remaining properties
@property(retain, nonatomic) id <TSDGestureTarget> cachedGestureTarget; // @dynamic cachedGestureTarget;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(nonatomic) id <TSDGestureDelegate> gestureDelegate; // @dynamic gestureDelegate;
@property(retain, nonatomic) NSString *gestureKind; // @dynamic gestureKind;
@property(readonly, nonatomic) int gestureState; // @dynamic gestureState;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(retain, nonatomic) TSDRep *targetRep; // @dynamic targetRep;

@end

@interface TSWPTapGestureRecognizer : UITapGestureRecognizer
{
}

- (void)reset;

@end

@interface TSWPTestChangeSessionManager : NSObject <TSWPChangeSessionManager>
{
    TSWPChangeSession *_currentSession;
}

@property(readonly, nonatomic) _Bool isTrackingChanges;
- (void)startNewChangeSessionIfNecessaryGettingInsertAuthorCommand:(id *)arg1;
- (id)changeSessionAuthorCreatedWithCommand:(id *)arg1;
- (void)dealloc;
- (id)initWithContext:(id)arg1;

@end

@interface TSWPTestObject : TSPObject
{
}

@end

@interface TSWPText : NSObject <TSWPLayoutTarget, TSWPLayoutOwner, TSWPColumnMetrics>
{
    TSWPParagraphStyle *_paragraphStyle;
    TSWPListStyle *_listStyle;
    TSWPColumnStyle *_columnStyle;
    TSUColor *_textColorOverride;
    TSWPStorage *_storage;
    NSMutableArray *_columns;
    struct CGSize _minSize;
    struct CGSize _maxSize;
    unsigned long long _pageNumber;
    unsigned long long _pageCount;
    int _flags;
    struct CGPoint _anchor;
    unsigned int _naturalAlignment;
    int _naturalDirection;
    NSObject<TSWPTextDelegate> *_delegate;
    id <TSWPStyleProvider> _styleProvider;
}

@property(retain, nonatomic) TSUColor *textColorOverride; // @synthesize textColorOverride=_textColorOverride;
@property(readonly, nonatomic) int naturalDirection; // @synthesize naturalDirection=_naturalDirection;
@property(readonly, nonatomic) unsigned int naturalAlignment; // @synthesize naturalAlignment=_naturalAlignment;
@property(retain, nonatomic) id <TSWPStyleProvider> styleProvider; // @synthesize styleProvider=_styleProvider;
@property(readonly, nonatomic) TSWPParagraphStyle *paragraphStyle; // @synthesize paragraphStyle=_paragraphStyle;
@property(readonly, retain, nonatomic) NSMutableArray *columns; // @synthesize columns=_columns;
@property(nonatomic) NSObject<TSWPTextDelegate> *delegate; // @synthesize delegate=_delegate;
- (_Bool)forceWesternLineBreaking;
- (id)lineHintsForTarget:(id)arg1;
- (id)textWrapper;
- (void)layoutManager:(id)arg1 didClearDirtyRangeWithDelta:(long long)arg2 afterCharIndex:(unsigned long long)arg3;
- (void)layoutManagerNeedsLayout:(id)arg1;
- (_Bool)caresAboutStorageChanges;
@property(readonly, nonatomic) _Bool layoutIsValid;
- (_Bool)adjustColumnOriginForAlignment;
- (_Bool)isLayoutOffscreen;
@property(readonly, nonatomic) _Bool textIsVertical;
@property(readonly, nonatomic) unsigned long long pageCount;
@property(readonly, nonatomic) unsigned long long pageNumber;
@property(readonly, nonatomic) double maxAnchorY;
- (id)currentAnchoredDrawableLayouts;
- (void)addAttachmentLayout:(id)arg1;
- (id)currentInlineDrawableLayouts;
- (unsigned long long)iterativeAttachmentPositioningMaxPassCount;
- (_Bool)shouldPositionAttachmentsIteratively;
- (id)validatedLayoutForAnchoredDrawable:(id)arg1;
- (id)layoutForInlineDrawable:(id)arg1;
- (struct CGRect)targetRectForCanvasRect:(struct CGRect)arg1;
- (void)setNeedsDisplayInTargetRect:(struct CGRect)arg1;
@property(readonly, nonatomic) _Bool wantsLineFragments;
@property(readonly, nonatomic) unsigned int verticalAlignment;
@property(readonly, nonatomic) unsigned int autosizeFlags;
@property(readonly, nonatomic) struct CGPoint anchorPoint;
@property(readonly, nonatomic) struct CGPoint position;
@property(readonly, nonatomic) struct CGSize currentSize;
@property(readonly, nonatomic) struct CGSize maxSize;
@property(readonly, nonatomic) struct CGSize minSize;
- (_Bool)isLastTarget;
@property(readonly, nonatomic) TSPObject<TSDHint> *nextTargetFirstChildHint;
@property(readonly, nonatomic) id <TSWPFootnoteMarkProvider> footnoteMarkProvider;
@property(readonly, nonatomic) id <TSWPFootnoteHeightMeasurer> footnoteHeightMeasurer;
@property(readonly, retain, nonatomic) id <TSWPOffscreenColumn> nextTargetFirstColumn;
@property(readonly, nonatomic) const struct TSWPTopicNumberHints *nextTargetTopicNumbers;
@property(readonly, nonatomic) const struct TSWPTopicNumberHints *previousTargetTopicNumbers;
@property(readonly, retain, nonatomic) id <TSWPOffscreenColumn> previousTargetLastColumn;
- (id)columnMetricsForCharIndex:(unsigned long long)arg1 outRange:(struct _NSRange *)arg2;
@property(readonly, nonatomic) _Bool columnsAreLeftToRight;
@property(readonly, nonatomic) _Bool shrinkTextToFit;
@property(readonly, nonatomic) _Bool alwaysStartsNewTarget;
- (double)positionForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2 outWidth:(double *)arg3 outGap:(double *)arg4;
- (double)gapForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2;
- (double)widthForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2;
@property(readonly, nonatomic) unsigned long long columnCount;
@property(readonly, nonatomic) TSWPPadding *layoutMargins;
@property(readonly, nonatomic) struct CGSize adjustedInsets;
- (void)drawText:(id)arg1 inContext:(struct CGContext *)arg2 minSize:(struct CGSize)arg3 maxSize:(struct CGSize)arg4 anchor:(struct CGPoint)arg5 flags:(int)arg6 viewScale:(double)arg7;
- (void)drawColumn:(id)arg1 inContext:(struct CGContext *)arg2 isFlipped:(_Bool)arg3 viewScale:(double)arg4;
- (void)drawColumn:(id)arg1 selection:(id)arg2 inContext:(struct CGContext *)arg3 isFlipped:(_Bool)arg4 viewScale:(double)arg5;
- (struct CGSize)measureStorage:(id)arg1;
- (struct CGSize)measureText:(id)arg1;
- (id)layoutText:(id)arg1 kind:(int)arg2 minSize:(struct CGSize)arg3 maxSize:(struct CGSize)arg4 anchor:(struct CGPoint)arg5 flags:(int)arg6;
- (id)layoutText:(id)arg1 minSize:(struct CGSize)arg2 maxSize:(struct CGSize)arg3 anchor:(struct CGPoint)arg4 flags:(int)arg5;
- (id)layoutTextStorage:(id)arg1 minSize:(struct CGSize)arg2 maxSize:(struct CGSize)arg3 anchor:(struct CGPoint)arg4 pageNumber:(unsigned long long)arg5 pageCount:(unsigned long long)arg6 flags:(int)arg7;
- (id)layoutTextStorage:(id)arg1 minSize:(struct CGSize)arg2 maxSize:(struct CGSize)arg3 anchor:(struct CGPoint)arg4 flags:(int)arg5;
- (void)dealloc;
- (id)initWithParagraphStyle:(id)arg1 listStyle:(id)arg2;
- (id)initWithParagraphStyle:(id)arg1;
- (id)initWithParagraphStyle:(id)arg1 columnStyle:(id)arg2;
- (id)initWithParagraphStyle:(id)arg1 listStyle:(id)arg2 columnStyle:(id)arg3;
- (id)initWithParagraphStyle:(id)arg1 columnStyle:(id)arg2 alignmentForNaturalAlignment:(unsigned int)arg3 naturalDirection:(int)arg4;
- (id)initWithParagraphStyle:(id)arg1 listStyle:(id)arg2 columnStyle:(id)arg3 alignmentForNaturalAlignment:(unsigned int)arg4 naturalDirection:(int)arg5;

// Remaining properties
@property(readonly, nonatomic) _Bool allowsDescendersToClip;
@property(readonly, nonatomic) _Bool allowsLastLineTruncation;
@property(readonly, nonatomic) _Bool alwaysAllowWordSplit;
@property(retain, nonatomic) NSMutableArray *anchoredDrawablesForRelayout;
@property(readonly, nonatomic) TSDCanvas *canvas;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) struct __CFLocale *hyphenationLocale;
@property(readonly, nonatomic) _Bool ignoresEquationAlignment;
@property(readonly, nonatomic) struct CGRect maskRect;
@property(readonly, nonatomic) unsigned int maxLineCount;
@property(readonly, nonatomic) TSDLayout *parentLayoutForInlineAttachments;
@property(readonly, nonatomic) _Bool pushAscendersIntoColumn;
@property(readonly, nonatomic) _Bool shouldHyphenate;
@property(readonly) Class superclass;
@property(readonly, nonatomic) double textScaleFactor;

@end

@interface TSWPTextFieldTableViewCell : UITableViewCell <UITextFieldDelegate>
{
    UITextField *_textField;
}

@property(readonly, retain, nonatomic) UITextField *textField; // @synthesize textField=_textField;
- (void)p_endEditingOnExit;
- (void)dealloc;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSWPTextKnob : TSDKnob
{
}

- (int)dragType;

@end

@interface TSWPTextKnobTracker : TSDKnobTracker
{
    TSWPEditingController *_editingController;
    struct _NSRange _rangeAtStart;
    int _selectionType;
    unsigned long long _headCharAtStart;
    unsigned long long _tailCharAtStart;
    _Bool _multiTap;
    NSTimer *_textMagnifierTimer;
    TSWPTextMagnifierRanged *_magnifier;
    _Bool _doneTracking;
    _Bool _knobMoved;
    _Bool _didShowMagnifier;
    _Bool _ignoreNextCall;
}

+ (const struct TSWPLineFragment *)p_lineFragmentForCharIndex:(unsigned long long)arg1 knobTag:(unsigned long long)arg2 selectionType:(int)arg3 rep:(id)arg4;
@property(nonatomic) _Bool ignoreNextCall; // @synthesize ignoreNextCall=_ignoreNextCall;
@property(readonly, nonatomic) _Bool didShowMagnifier; // @synthesize didShowMagnifier=_didShowMagnifier;
@property(retain, nonatomic) TSWPEditingController *editingController; // @synthesize editingController=_editingController;
- (double)unscaledStartAutoscrollThreshold;
- (void)autoscrollWillNotStart;
- (void)updateAfterAutoscroll:(id)arg1;
- (id)icc;
- (void)updateAfterAutoscroll:(id)arg1 atPoint:(struct CGPoint)arg2;
- (struct _NSRange)adjustSelectionRange:(struct _NSRange)arg1 forStorage:(id)arg2;
- (_Bool)fixupWordSelection;
- (_Bool)shouldHideOtherKnobs;
- (unsigned long long)p_charIndexForKnob:(unsigned long long)arg1 selection:(id)arg2;
- (void)p_fixUpWordSelection;
- (_Bool)p_newTailCharIndex:(unsigned long long)arg1 isPastHeadCharIndex:(unsigned long long)arg2 rep:(id)arg3;
- (_Bool)p_newHeadCharIndex:(unsigned long long)arg1 isPastTailCharIndex:(unsigned long long)arg2 rep:(id)arg3;
- (void)p_setSelectionFromPoint:(struct CGPoint)arg1;
- (void)p_stopMagnifyingWithAnimation:(_Bool)arg1;
- (void)p_magnifyWithTarget:(id)arg1 magnificationPoint:(struct CGPoint)arg2 offset:(struct CGPoint)arg3 animated:(_Bool)arg4 delayed:(_Bool)arg5;
- (void)p_startMagnifying;
- (id)p_rangedMagnifier;
- (_Bool)p_isMagnifyingVerticalText;
- (void)p_cleanupWhenDone;
- (void)endMovingKnob;
- (void)moveKnobToCanvasPosition:(struct CGPoint)arg1;
- (double)delay;
- (void)dealloc;
- (id)initWithRep:(id)arg1 knob:(id)arg2;

@end

@interface TSWPTextMagnifierCaret : UIView <TSWPTextMagnifier, TSWPTextMagnifierRendererDelegate>
{
    TSWPRep *_target;
    struct CGPoint _magnificationPoint;
    struct CGPoint _offset;
    TSWPTextMagnifierTimeWeightedPoint *_weightedPoint;
    double _yOffset;
    TSWPTextMagnifierRenderer *_magnifierRenderer;
}

+ (id)sharedCaretMagnifier;
@property(nonatomic) struct CGPoint animationPoint; // @synthesize animationPoint=_magnificationPoint;
@property(nonatomic) double yOffset; // @synthesize yOffset=_yOffset;
@property(nonatomic) struct CGPoint offset; // @synthesize offset=_offset;
@property(retain, nonatomic) TSWPRep *target; // @synthesize target=_target;
- (void)drawMagnifierClippedCanvasLayer:(id)arg1 inContext:(struct CGContext *)arg2;
- (_Bool)shouldHideCanvasLayer;
@property(readonly, nonatomic) NSString *maskImageName;
@property(readonly, nonatomic) NSString *overlayImageName;
@property(readonly, nonatomic) NSString *underlayImageName;
- (void)stopMagnifying:(_Bool)arg1;
- (void)beginMagnifyingTarget:(id)arg1 magnificationPoint:(struct CGPoint)arg2 offset:(struct CGPoint)arg3 animated:(_Bool)arg4;
- (void)updateFrameAndOffset;
- (void)remove;
- (void)zoomDownAnimation;
- (void)zoomUpAnimation;
- (void)autoscrollWillNotStart;
- (void)setAutoscrollDirections:(int)arg1;
- (void)postAutoscrollPoint:(struct CGPoint)arg1;
@property(readonly, nonatomic) _Bool terminalPointPlacedCarefully;
@property(readonly, nonatomic) struct CGPoint terminalPoint;
@property(nonatomic) struct CGPoint magnificationPoint;
- (void)setNeedsDisplay;
- (void)setFrame:(struct CGRect)arg1;
- (void)dealloc;
- (id)initWithDefaultFrame;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSWPTextMagnifierRanged : UIView <TSWPTextMagnifier, TSWPTextMagnifierRendererDelegate>
{
    TSWPRep *_target;
    struct CGPoint _magnificationPoint;
    struct CGPoint _offset;
    struct CGPoint _animationPoint;
    TSWPTextMagnifierTimeWeightedPoint *_weightedPoint;
    TSWPTextMagnifierRenderer *_magnifierRenderer;
    _Bool _inPlace;
}

@property(nonatomic) struct CGPoint offset; // @synthesize offset=_offset;
@property(nonatomic) struct CGPoint animationPoint; // @synthesize animationPoint=_animationPoint;
@property(retain, nonatomic) TSWPRep *target; // @synthesize target=_target;
- (void)canvasNeedsDisplay;
- (void)drawMagnifierClippedCanvasLayer:(id)arg1 inContext:(struct CGContext *)arg2;
- (_Bool)shouldHideCanvasLayer;
@property(readonly, nonatomic) NSString *maskImageName;
@property(readonly, nonatomic) NSString *overlayImageName;
@property(readonly, nonatomic) NSString *underlayImageName;
@property(nonatomic) struct CGPoint magnificationPoint;
@property(readonly, nonatomic) _Bool terminalPointPlacedCarefully;
@property(readonly, nonatomic) struct CGPoint terminalPoint;
- (void)autoscrollWillNotStart;
- (void)setAutoscrollDirections:(int)arg1;
- (void)postAutoscrollPoint:(struct CGPoint)arg1;
- (void)stopMagnifying:(_Bool)arg1;
- (void)beginMagnifyingTarget:(id)arg1 magnificationPoint:(struct CGPoint)arg2 offset:(struct CGPoint)arg3 animated:(_Bool)arg4;
- (void)updateFrame;
- (void)setNeedsDisplay;
- (void)setFrame:(struct CGRect)arg1;
- (double)currentOffset;
- (_Bool)wasPlacedCarefullyAtTime:(double)arg1;
- (double)horizontalMovementAtTime:(double)arg1;
- (double)horizontalMovement;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSWPTextMagnifierHorizontalRanged : TSWPTextMagnifierRanged
{
    _Bool _shouldIgnoreTextInputEditor;
}

+ (id)sharedRangedMagnifier;
@property(nonatomic) _Bool shouldIgnoreTextInputEditor; // @synthesize shouldIgnoreTextInputEditor=_shouldIgnoreTextInputEditor;
- (void)drawMagnifierClippedCanvasLayer:(id)arg1 inContext:(struct CGContext *)arg2;
- (_Bool)shouldHideCanvasLayer;
- (id)maskImageName;
- (id)overlayImageName;
- (id)underlayImageName;
- (void)stopMagnifying:(_Bool)arg1;
- (void)beginMagnifyingTarget:(id)arg1 magnificationPoint:(struct CGPoint)arg2 offset:(struct CGPoint)arg3 animated:(_Bool)arg4;
- (void)remove;
- (void)updateFrame;
- (double)currentOffset;
- (void)zoomDownAnimation;
- (void)zoomUpAnimation;
- (void)dealloc;
- (id)initWithDefaultFrame;

@end

@interface TSWPTextMagnifierRenderer : UIView
{
    id <TSWPTextMagnifierRendererDelegate> _delegate;
    CALayer *_underlayLayer;
    CALayer *_canvasLayer;
    CALayer *_overlayLayer;
    int _autoscrollDirections;
}

@property(nonatomic) int autoscrollDirections; // @synthesize autoscrollDirections=_autoscrollDirections;
@property(nonatomic) id <TSWPTextMagnifierRendererDelegate> delegate; // @synthesize delegate=_delegate;
- (void)drawLayer:(id)arg1 inContext:(struct CGContext *)arg2;
- (id)actionForLayer:(id)arg1 forKey:(id)arg2;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)layoutSubviews;
- (id)p_createChildLayer;
- (void)setNeedsDisplay;
- (void)canvasNeedsDisplay;
- (void)tearDown;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface TSWPTextMagnifierTimeWeightedPoint : NSObject
{
    long long m_index;
    struct {
        struct CGPoint point;
        double time;
    } m_points[16];
}

- (double)distanceCoveredInInterval:(double)arg1 priorTo:(double)arg2;
- (struct CGSize)displacementInInterval:(double)arg1 priorTo:(double)arg2;
- (struct CGSize)displacementInInterval:(double)arg1;
- (double)distanceCoveredInInterval:(double)arg1;
- (_Bool)historyCovers:(double)arg1;
@property(readonly, nonatomic) struct CGPoint weightedPoint;
- (void)addPoint:(struct CGPoint)arg1;
- (void)clearHistory;

@end

@interface TSWPTextMagnifierVerticalRanged : TSWPTextMagnifierRanged
{
}

+ (id)sharedRangedMagnifier;
- (void)drawMagnifierClippedCanvasLayer:(id)arg1 inContext:(struct CGContext *)arg2;
- (_Bool)shouldHideCanvasLayer;
- (id)maskImageName;
- (id)overlayImageName;
- (id)underlayImageName;
- (void)stopMagnifying:(_Bool)arg1;
- (void)beginMagnifyingTarget:(id)arg1 magnificationPoint:(struct CGPoint)arg2 offset:(struct CGPoint)arg3 animated:(_Bool)arg4;
- (void)remove;
- (void)updateFrame;
- (double)currentOffset;
- (void)zoomRightAnimation;
- (void)zoomLeftAnimation;
- (void)dealloc;
- (id)initWithDefaultFrame;

@end

@interface TSWPTextReplacement : NSObject <TSWPReplaceAction>
{
    TSWPSelection *_selection;
    NSString *_string;
}

- (struct _NSRange)insertedRange;
- (long long)delta;
- (unsigned long long)targetCharIndex;
- (void)performWithStorage:(id)arg1 delta:(long long)arg2 undoTransaction:(struct TSWPStorageTransaction *)arg3 replaceBlock:(CDUnknownBlockType)arg4;
- (void)dealloc;
- (id)initWithSelection:(id)arg1 string:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSWPTextStatistics : NSObject <NSCopying>
{
    unsigned long long _wordCount;
    unsigned long long _charactersNoWhiteSpace;
    unsigned long long _paragraphCount;
    _Bool _isAccurate;
}

@property(nonatomic) _Bool isAccurate; // @synthesize isAccurate=_isAccurate;
@property(nonatomic) unsigned long long paragraphCount; // @synthesize paragraphCount=_paragraphCount;
@property(nonatomic) unsigned long long charactersNoWhiteSpace; // @synthesize charactersNoWhiteSpace=_charactersNoWhiteSpace;
@property(nonatomic) unsigned long long wordCount; // @synthesize wordCount=_wordCount;
- (_Bool)isEqual:(id)arg1;
- (void)removeTextStatistics:(id)arg1;
- (void)addTextStatistics:(id)arg1;
- (void)setTextStatistics:(id)arg1;
- (void)resetStatistics;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface TSWPTextWrapper : NSObject
{
}

+ (unsigned int)p_wrappedSubrectsForRectOptimized:(struct CGRect)arg1 lineSegmentRects:(struct CGRect [128])arg2 polygon:(id)arg3 type:(int)arg4 skipHint:(double *)arg5;
+ (double)unobstructedSpanForPath:(id)arg1 startingSpan:(struct CGRect)arg2 columnBounds:(struct CGRect)arg3;
+ (unsigned int)p_wrappedSubrectsForRectGPC:(struct CGRect)arg1 lineSegmentRects:(struct CGRect [128])arg2 polygon:(id)arg3 type:(int)arg4 skipHint:(double *)arg5;
+ (unsigned int)splitLine:(struct CGRect)arg1 lineSegmentRects:(struct CGRect [128])arg2 polygon:(id)arg3 type:(int)arg4 skipHint:(double *)arg5;

@end

@interface TSWPTrackedDeletion : NSObject <TSWPReplaceAction>
{
    struct _NSRange _range;
    TSWPChangeSession *_changeSession;
}

- (struct _NSRange)insertedRange;
- (long long)delta;
- (unsigned long long)targetCharIndex;
- (void)performWithStorage:(id)arg1 delta:(long long)arg2 undoTransaction:(struct TSWPStorageTransaction *)arg3 replaceBlock:(CDUnknownBlockType)arg4;
- (void)dealloc;
- (id)initWithRange:(struct _NSRange)arg1 changeSession:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSWPTrackedInsertion : NSObject <TSWPReplaceAction>
{
    TSWPSelection *_selection;
    NSString *_string;
    TSWPChangeSession *_changeSession;
}

- (struct _NSRange)insertedRange;
- (long long)delta;
- (unsigned long long)targetCharIndex;
- (void)performWithStorage:(id)arg1 delta:(long long)arg2 undoTransaction:(struct TSWPStorageTransaction *)arg3 replaceBlock:(CDUnknownBlockType)arg4;
- (void)dealloc;
- (id)initWithSelection:(id)arg1 string:(id)arg2 changeSession:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSWPTranscriber : NSObject
{
    NSString *_displayName;
    NSString *_identifier;
    NSString *_transformIdentifier;
    NSLocale *_romanizationLocale;
}

+ (id)transcriberWithIdentifier:(id)arg1 displayName:(id)arg2 romanizationLocaleID:(id)arg3 transformIdentifier:(id)arg4;
@property(readonly) NSLocale *romanizationLocale; // @synthesize romanizationLocale=_romanizationLocale;
- (id)transcribeText:(id)arg1 withLocale:(id)arg2;
- (id)transcribeText:(id)arg1;
- (void)dealloc;
- (id)initWithIdentifier:(id)arg1 displayName:(id)arg2 romanizationLocaleID:(id)arg3 transformIdentifier:(id)arg4;

@end

@interface TSWPTypesetterAttachmentMap : NSObject
{
    TSWPAttachment *_attachment;
    TSDLayout *_layout;
    struct __CTLine *_lineRef;
}

+ (id)mapWithAttachment:(id)arg1 layout:(id)arg2 pageNumber:(unsigned long long)arg3 pageCount:(unsigned long long)arg4 footnoteMarkProvider:(id)arg5 styleProvider:(id)arg6 colorOverride:(id)arg7;
@property(readonly, nonatomic) struct __CTLine *lineRef; // @synthesize lineRef=_lineRef;
@property(retain, nonatomic) TSDLayout *layout; // @synthesize layout=_layout;
@property(nonatomic) TSWPAttachment *attachment; // @synthesize attachment=_attachment;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;

@end

@interface TSWPUIGraphicalAttachment : TSWPAttachment
{
}

- (_Bool)wantsSelectionAtPoint:(struct CGPoint)arg1;
@property(readonly, nonatomic) double baselineOffset;
@property(readonly, nonatomic) struct CGSize size;
- (void)invalidate;
- (id)rendererForAttachment;
- (int)elementKind;

@end

@interface TSWPURLDataDetector : NSObject <TSWPDataDetectorProtocol>
{
}

+ (id)newURLFromString:(id)arg1;
+ (id)newArrayByScanningString:(id)arg1 scanRange:(struct _NSRange)arg2;
+ (id)scanString:(id)arg1 scanRange:(struct _NSRange)arg2;
+ (struct _NSRange)calculateScanRangeForString:(id)arg1 changedRange:(struct _NSRange)arg2;
+ (struct _NSRange)expandValidRange:(struct _NSRange)arg1 inString:(id)arg2;
+ (void)initURLCharacterSets;
+ (void)setInvalidURLSchemes:(id)arg1;
+ (id)detectorIdentifier;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TSWPUserDefaults : NSObject
{
}

+ (void)registerUserDefaults:(_Bool)arg1;
+ (void)setSpellCheckingEnabled:(_Bool)arg1;
+ (void)setSuperscriptNumericalSuffixes:(_Bool)arg1;
+ (void)setAutomaticallyDetectLists:(_Bool)arg1;
+ (void)setAutomaticallyDetectLinks:(_Bool)arg1;
+ (void)setInvisiblesColor:(id)arg1;
+ (_Bool)spellCheckingEnabled;
+ (_Bool)superscriptNumericalSuffixes;
+ (_Bool)automaticallyDetectLists;
+ (_Bool)automaticallyDetectLinks;
+ (id)invisiblesColor;
+ (_Bool)p_UserDefaultSet:(id)arg1 force:(_Bool)arg2;

@end

@interface UIAlertView (KNAdditions)
- (void)showWithCompletionHandler:(CDUnknownBlockType)arg1;
- (id)initWithError:(id)arg1;
@end

@interface UIButton (TSDUIButton) <TSDPlatformButtonProtocol>
+ (id)tsdPlatformButtonWithFrame:(struct CGRect)arg1;
- (void)setAlternateImageNamed:(id)arg1 inBundle:(id)arg2;
- (void)setImageNamed:(id)arg1 inBundle:(id)arg2;
- (void)setTarget:(id)arg1 action:(SEL)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@end

@interface UIColor (TSDAdditions)
+ (id)randomColor;
+ (id)colorInDeviceRGBColorSpaceWithRed:(double)arg1 green:(double)arg2 blue:(double)arg3 alpha:(double)arg4;
- (id)blendedColorWithFraction:(double)arg1 ofColor:(id)arg2;
- (_Bool)isOpaque;
- (double)luminance;
- (id)invertedColor;
- (id)grayscaleColor;
- (void)paintRect:(struct CGRect)arg1 inContext:(struct CGContext *)arg2;
- (id)initInDeviceRGBColorSpaceWithRed:(double)arg1 green:(double)arg2 blue:(double)arg3 alpha:(double)arg4;
@end

@interface UIColor (TSDPathPainter) <TSDPathPainter>
- (void)paintPath:(struct CGPath *)arg1 inContext:(struct CGContext *)arg2;
- (void)drawSwatchInRect:(struct CGRect)arg1 inContext:(struct CGContext *)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@end

@interface UIColor (TSKAdditions)
+ (id)tsk_sheetBackgroundColor;
+ (id)tsk_segmentedControlTintColor;
@end

@interface UIGestureRecognizer (TSDGestureDispatcher) <TSDGesture>
- (_Bool)isDone;
@property(readonly, nonatomic) int gestureState;
@property(nonatomic) id <TSDGestureDelegate> gestureDelegate;
- (struct CGPoint)naturalLocationForRep:(id)arg1;
- (struct CGPoint)boundsLocationForICC:(id)arg1;
- (struct CGPoint)unscaledLocationForICC:(id)arg1;
@property(retain, nonatomic) TSDRep *targetRep;
@property(retain, nonatomic) id <TSDGestureTarget> cachedGestureTarget;
@property(retain, nonatomic) NSString *gestureKind;
- (id)initWithGestureDispatcher:(id)arg1 gestureKind:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@end

@interface UIMenuItem (Additions)
+ (id)menuItemWithTitle:(id)arg1 action:(SEL)arg2;
@end

@interface UIPanGestureRecognizer (TSDAdditions)
@property(readonly, nonatomic) struct CGPoint direction;
@end

@interface UIResponder (TSWPAdditions)
+ (id)tswp_currentFirstResponder;
- (void)tswp_findFirstResponder:(id)arg1;
@end

@interface UITextField (TSKAdditions)
- (void)resizeToFitAsAccessoryInCellWithLabelTextWidth:(double)arg1 tableView:(id)arg2;
- (void)resizeToFitAsAccessoryInCellWithLabelText:(id)arg1 tableView:(id)arg2;
- (void)resizeToFitAsAccessoryInCell:(id)arg1 tableView:(id)arg2;
@end

@interface UIView (TSAAdditions)
- (id)childAtPoint:(struct CGPoint)arg1;
- (void)translateToView:(id)arg1 belowSubview:(id)arg2;
- (void)translateToView:(id)arg1 aboveSubview:(id)arg2;
- (void)translateToView:(id)arg1;
- (void)translateAndScaleToView:(id)arg1 belowSubview:(id)arg2;
- (void)translateAndScaleToView:(id)arg1 aboveSubview:(id)arg2;
- (void)translateAndScaleToView:(id)arg1;
- (void)p_translateToView:(id)arg1 above:(_Bool)arg2 siblingView:(id)arg3 shouldScale:(_Bool)arg4;
@end

@interface UIView (TSDAdditions)
- (void)setAnimationFadeOut:(_Bool)arg1 animationDidStopSelector:(SEL)arg2 delegate:(id)arg3 duration:(double)arg4;
- (void)setAnimationFadeOut:(_Bool)arg1 animationDidStopSelector:(SEL)arg2 delegate:(id)arg3;
- (void)setAnimationFadeOut:(_Bool)arg1 animationDidStopSelector:(SEL)arg2;
- (void)setAnimationFadeOut:(_Bool)arg1 duration:(double)arg2;
- (void)setAnimationFadeOut:(_Bool)arg1;
@end

