//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct XRTimeRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct _XRIndexRange {
    unsigned long long location;
    unsigned long long length;
};

struct __hash_node<const void *, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *>;

struct __va_list_tag {
    unsigned int _field1;
    unsigned int _field2;
    void *_field3;
    void *_field4;
};

struct unique_ptr<std::__1::__hash_node<const void *, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<const void *, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<const void *, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<const void *, void *>*>>> {
        struct __hash_node<const void *, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<const void *, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<const void *, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unordered_map<unsigned long long, id, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, id>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, id>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, id>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, id>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, id>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, id>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, id>, std::__1::equal_to<unsigned long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_set<const void *, std::__1::hash<const void *>, std::__1::equal_to<const void *>, std::__1::allocator<const void *>> {
    struct __hash_table<const void *, std::__1::hash<const void *>, std::__1::equal_to<const void *>, std::__1::allocator<const void *>> {
        struct unique_ptr<std::__1::__hash_node<const void *, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<const void *, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<const void *, void *>*>, std::__1::allocator<std::__1::__hash_node<const void *, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<const void *, void *>*> {
                struct __hash_node<const void *, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::hash<const void *>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::equal_to<const void *>> {
            float __first_;
        } __p3_;
    } __table_;
};

#pragma mark -

//
// File: /Applications/Xcode-7GM.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/Developer/Library/PrivateFrameworks/DVTInstrumentsUtilities.framework/DVTInstrumentsUtilities
// UUID: 75D6BD7D-61CA-3718-A1FF-8523887FB7A7
//
//                           Arch: x86_64
//                Current version: 0.0.0
//          Compatibility version: 0.0.0
//                 Source version: 58112.1.0.0.0
//            Minimum iOS version: 9.0.0
//                    SDK version: 9.0.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSMutableCopying
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol XRErrorResponder <NSObject>
- (void)logAnamolousErrorMessageWithFormat:(NSString *)arg1 args:(struct __va_list_tag [1])arg2;
- (void)logAnamolousErrorMessageWithFormat:(NSString *)arg1;
- (unsigned long long)respondToFatalError:(NSError *)arg1 from:(id)arg2;
@end

@protocol XRIntKeyedDictionaryImmutable <NSObject>
- (unsigned long long)count;
- (void)enumerateObjectsAndIntegerKeys:(void (^)(id, unsigned long long, _Bool *))arg1;
- (NSArray *)allObjects;
- (id)objectForIntegerKey:(unsigned long long)arg1;
@end

@interface NSValue (XRTimeRange)
+ (id)valueWithTimeRange:(struct XRTimeRange)arg1;
- (struct XRTimeRange)timeRangeValue;
@end

@interface XRIndexSet : NSObject <NSCopying, NSMutableCopying>
{
    struct _XRIndexRange _range;
    struct _XRIndexRange *_rangeArray;
    unsigned long long _arraySize;
    unsigned long long _numRanges;
}

+ (id)indexSetWithIndexesInRange:(struct _XRIndexRange)arg1;
+ (id)indexSetWithIndex:(unsigned long long)arg1;
- (void)enumerateRangesUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateIndexesUsingBlock:(CDUnknownBlockType)arg1;
- (_Bool)intersectsIndexesInRange:(struct _XRIndexRange)arg1;
- (_Bool)containsIndex:(unsigned long long)arg1;
- (unsigned long long)lastIndex;
- (unsigned long long)firstIndex;
- (unsigned long long)count;
- (unsigned long long)_queryRange:(struct _XRIndexRange)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithIndexes:(struct _XRIndexRange)arg1;
- (id)initWithIndex:(unsigned long long)arg1;
- (id)init;

@end

@interface XRIntKeyedDictionary : NSObject <XRIntKeyedDictionaryImmutable, NSCoding, NSMutableCopying>
{
    struct unordered_map<unsigned long long, id, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, id>>> _hash_map;
    id <NSObject><NSMutableCopying> _prototype;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (unsigned long long)count;
- (void)enumerateObjectsAndIntegerKeys:(CDUnknownBlockType)arg1;
- (id)allObjects;
- (void)removeAllObjects;
- (void)removeObjectForIntegerKey:(unsigned long long)arg1;
- (void)setObject:(id)arg1 forIntegerKey:(unsigned long long)arg2;
- (void)setObject:(id)arg1 forIntergerKey:(unsigned long long)arg2;
- (void)setPrototypeObject:(id)arg1;
- (id)objectForIntegerKey:(unsigned long long)arg1 options:(unsigned long long)arg2;
- (id)objectForIntegerKey:(unsigned long long)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)init;
- (id)initWithIntKeyedDictionary:(id)arg1 copyObjects:(_Bool)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRLazyKVOAdapter : NSObject
{
    NSMapTable *_keyPathsByContextByClz;
    NSMapTable *_keyPathsByContextByObj;
    struct unordered_set<const void *, std::__1::hash<const void *>, std::__1::equal_to<const void *>, std::__1::allocator<const void *>> _updatedContexts;
    struct unordered_set<const void *, std::__1::hash<const void *>, std::__1::equal_to<const void *>, std::__1::allocator<const void *>> _presentedContexts;
    id <XRLazyKVOResponder> _responder;
    _Bool _suspended;
    NSArray *_runLoopModes;
}

@property(nonatomic, getter=isSuspended) _Bool suspended; // @synthesize suspended=_suspended;
@property(copy, nonatomic) NSArray *runLoopModes; // @synthesize runLoopModes=_runLoopModes;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)_callbackHandler;
- (_Bool)hasContextChanged:(const void *)arg1;
- (void)removeObservationsForObject:(id)arg1;
- (void)observeObject:(id)arg1;
- (void)fireCallbackContext:(const void *)arg1 whenKeypaths:(id)arg2 changeOnClass:(Class)arg3;
- (void)dealloc;
- (void)clear;
- (id)initWithLazyKVOResponder:(id)arg1;
- (id)init;

@end

@interface XRSpace : NSObject
{
    _Bool _supportsOpNames;
    _Bool _overridesQoS;
    NSOperationQueue *_queue;
    NSMutableString *_tag;
    unsigned long long _seqNum;
    NSMutableDictionary *_userDataByToken;
    NSMutableSet *_notificationShims;
    NSString *_opName;
}

- (void).cxx_destruct;
- (void)_removeNotificationShim:(id)arg1;
- (void)stopObservationsOfObject:(id)arg1 forObserver:(id)arg2;
- (void)requestLocalNotification:(id)arg1 object:(id)arg2 observer:(id)arg3 block:(CDUnknownBlockType)arg4;
- (_Bool)isBusy;
- (unsigned long long)operationCount;
- (_Bool)currentlyInThisSpace;
- (_Bool)isSerial;
- (id)spaceName;
- (_Bool)isOpValidForSpace:(id)arg1;
- (id)userDataForToken:(id)arg1;
- (void)removeUserDataForToken:(id)arg1;
- (void)replaceUserData:(id)arg1 forToken:(id)arg2;
- (id)storeUserData:(id)arg1;
- (id)afterOperationsRunBlock:(id)arg1;
- (id)afterOperation:(id)arg1 priority:(long long)arg2 spaceBlock:(CDUnknownBlockType)arg3;
- (id)afterOperations:(id)arg1 priority:(long long)arg2 spaceBlock:(CDUnknownBlockType)arg3;
- (id)afterOperation:(id)arg1 spaceBlock:(CDUnknownBlockType)arg2;
- (id)afterOperation:(id)arg1 block:(CDUnknownBlockType)arg2;
- (id)_scheduleOperationFromCurrentQueue:(id)arg1;
- (void)addOperation:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)_postQueueStateChanged;
- (void)dealloc;
- (id)init;
- (id)initWithQueue:(id)arg1;

@end

@interface XRMainThreadSpace : XRSpace
{
    NSMutableSet *_mainThreadOps;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)_scheduleOperationFromCurrentQueue:(id)arg1;
- (void)_queueOperationToRunOnMainThread:(id)arg1;
- (id)_activeRunLoopModes;
- (void)_executeOp:(id)arg1;
- (_Bool)isSerial;
- (id)spaceName;
- (id)initWithQueue:(id)arg1;
- (id)init;

@end

@interface XRMutableIndexSet : XRIndexSet
{
}

- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)addIndexesInRange:(struct _XRIndexRange)arg1;
- (void)addIndex:(unsigned long long)arg1;
- (void)_addRange:(struct _XRIndexRange)arg1;
- (void)_mergeRangesFromIndex:(unsigned long long)arg1;
- (void)_insertRange:(struct _XRIndexRange)arg1 atIndex:(unsigned long long)arg2;
- (void)growArray;

@end

@interface XRRecentArray : NSObject
{
    NSMutableArray *_entries;
    unsigned long long _maximumRecentCount;
    NSObject<OS_dispatch_semaphore> *_lock;
}

- (void).cxx_destruct;
- (_Bool)containsEntry:(id)arg1;
- (id)entryAtIndex:(unsigned long long)arg1;
- (id)entries;
- (void)removeEntryAtIndex:(unsigned long long)arg1;
- (void)removeEntry:(id)arg1;
- (void)addEntry:(id)arg1;
@property(nonatomic) unsigned long long maximumRecentCount;
- (id)initWithMaximumRecentCount:(unsigned long long)arg1;
- (id)init;

@end

@interface XRRecentArrayStoredPrefs : XRRecentArray
{
    NSString *_preferencePathArray;
    NSString *_preferencePathMaxCount;
}

+ (id)sharedInstanceForPreferencePath:(id)arg1;
- (void).cxx_destruct;
- (void)synchronize;
- (void)_readUserDefaults;
- (void)dealloc;
- (id)initWithMaximumRecentCount:(unsigned long long)arg1 preferencePath:(id)arg2;

@end

@interface XRSpaceBlockOp : NSOperation
{
    CDUnknownBlockType _block;
}

- (void).cxx_destruct;
- (void)main;
- (id)initWithSpaceBlock:(CDUnknownBlockType)arg1;

@end

@interface XRSpaceDataToken : NSObject <NSCopying>
{
    id _tag;
    unsigned long long _seq;
}

- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithSpaceTag:(id)arg1 sequenceID:(unsigned long long)arg2;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;

@end

@interface XRStandardErrorResponder : NSObject <XRErrorResponder>
{
}

+ (void)setDefaultResponder:(id)arg1;
+ (id)defaultResponder;
+ (void)initialize;
- (void)logAnamolousErrorMessageWithFormat:(id)arg1 args:(struct __va_list_tag [1])arg2;
- (void)logAnamolousErrorMessageWithFormat:(id)arg1;
- (unsigned long long)respondToFatalError:(id)arg1 from:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface _XRSpaceNotificationShim : NSObject
{
    _Bool _targetIsSet;
    id <NSObject> _observer;
    id <NSObject> _target;
    id <NSObject> _token;
    XRSpace *_space;
}

@property(nonatomic) __weak XRSpace *space; // @synthesize space=_space;
@property(retain, nonatomic) id <NSObject> token; // @synthesize token=_token;
@property(nonatomic) _Bool targetIsSet; // @synthesize targetIsSet=_targetIsSet;
@property(nonatomic) __weak id <NSObject> target; // @synthesize target=_target;
@property(nonatomic) __weak id <NSObject> observer; // @synthesize observer=_observer;
- (void).cxx_destruct;
- (void)dealloc;

@end

