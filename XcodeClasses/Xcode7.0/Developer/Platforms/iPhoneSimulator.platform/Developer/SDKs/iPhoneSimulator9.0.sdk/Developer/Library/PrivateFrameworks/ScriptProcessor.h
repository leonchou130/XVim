//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Named Structures

struct __sFILE {
    char *_field1;
    int _field2;
    int _field3;
    short _field4;
    short _field5;
    struct __sbuf _field6;
    int _field7;
    void *_field8;
    CDUnknownFunctionPointerType _field9;
    CDUnknownFunctionPointerType _field10;
    CDUnknownFunctionPointerType _field11;
    CDUnknownFunctionPointerType _field12;
    struct __sbuf _field13;
    struct __sFILEX *_field14;
    int _field15;
    unsigned char _field16[3];
    unsigned char _field17[1];
    struct __sbuf _field18;
    int _field19;
    long long _field20;
};

struct __sbuf {
    char *_field1;
    int _field2;
};

#pragma mark -

//
// File: /Applications/Xcode-7GM.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/Developer/Library/PrivateFrameworks/ScriptProcessor.framework/ScriptProcessor
// UUID: 9472CAC1-89EC-3F83-88A6-FE787B3F9670
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 336.0.0.0.0
//            Minimum iOS version: 9.0.0
//                    SDK version: 9.0.0
//
// Objective-C Garbage Collection: Unsupported
//
//                       Run path: /Developer/Library/Frameworks/
//                               = /Developer/Library/Frameworks/
//

@protocol DTXAllowedRPC <NSObject>
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol ScriptAgentAuthorizedAPI <DTXAllowedRPC>
- (void)processBundleWithInfo:(NSDictionary *)arg1;
- (void)_hostTaskDidFinishWithInfo:(NSDictionary *)arg1;
- (void)forceExit;
- (NSNumber *)bundleStatus;
- (NSNumber *)scriptStatus;
- (void)takeScreenshot;
- (void)stopCapture;
- (void)resumeCapture;
- (void)pauseCapture;
- (void)startCaptureWithInfo:(NSDictionary *)arg1;
- (void)stopScript;
- (void)resumeScript;
- (void)pauseScript;
- (void)startScriptWithInfo:(NSDictionary *)arg1;
@end

@protocol UIARecorderDelegate <NSObject>
- (void)recordExpression:(NSArray *)arg1;
@end

@interface Logger : NSObject
{
}

+ (id)stringForLogType:(int)arg1;
- (_Bool)logWithInfo:(id)arg1;
- (void)logJSException:(struct OpaqueJSValue *)arg1 withContext:(struct OpaqueJSContext *)arg2;
- (_Bool)logError:(id)arg1;
- (_Bool)logWarning:(id)arg1;
- (_Bool)logMessage:(id)arg1;
- (_Bool)logDebug:(id)arg1;
- (_Bool)logFail:(id)arg1;
- (_Bool)logIssue:(id)arg1;
- (_Bool)logPass:(id)arg1;
- (_Bool)logStart:(id)arg1;

@end

@interface ObjCBridgeClass : NSObject
{
    struct OpaqueJSClass *classRef;
    NSMutableDictionary *methodMapping;
    NSMutableDictionary *propertyMapping;
}

@property(retain, nonatomic) NSMutableDictionary *propertyMapping; // @synthesize propertyMapping;
@property(retain, nonatomic) NSMutableDictionary *methodMapping; // @synthesize methodMapping;
@property(nonatomic) struct OpaqueJSClass *classRef; // @synthesize classRef;
- (struct objc_method **)methodForJSFunction:(id)arg1;
- (void)setMethod:(struct objc_method **)arg1 forJSFunction:(id)arg2;
- (void)dealloc;
- (id)initWithClassRef:(struct OpaqueJSClass *)arg1;

@end

@interface Recorder : NSObject <UIARecorderDelegate>
{
    struct __sFILE *_outputFileHandle;
}

@property struct __sFILE *outputFileHandle; // @synthesize outputFileHandle=_outputFileHandle;
- (void)recordExpression:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ScriptAgent : NSObject <ScriptAgentAuthorizedAPI, UIARecorderDelegate>
{
    unsigned long long _startTime;
    unsigned long long _scriptStatus;
    unsigned long long _bundleStatus;
    _Bool _isAppForegroundRunning;
    _Bool _shouldIgnoreForegroundAppCheck;
    NSDictionary *_hostTaskResultInfo;
    _Bool _hostTaskIsComplete;
    _Bool _isConfiguredForXcode;
    DTXConnection *_connection;
    NSString *_targetBundleID;
    NSURL *_bundleDirectory;
    NSURL *_bundleResourcesDirectory;
    UIATestCase *_currentTestCase;
    ScriptAgentFileMapManager *_fileMapManager;
    struct OpaqueJSContext *_context;
    ScriptAgentDelegate *_agentDelegate;
    NSURL *_fallbackURL;
    NSNumber *_fallbackLineNumber;
    NSDictionary *_lastInstrumentIssue;
}

@property(retain) NSDictionary *lastInstrumentIssue; // @synthesize lastInstrumentIssue=_lastInstrumentIssue;
@property _Bool isConfiguredForXcode; // @synthesize isConfiguredForXcode=_isConfiguredForXcode;
@property(retain) NSNumber *fallbackLineNumber; // @synthesize fallbackLineNumber=_fallbackLineNumber;
@property(retain) NSURL *fallbackURL; // @synthesize fallbackURL=_fallbackURL;
@property(retain) ScriptAgentDelegate *agentDelegate; // @synthesize agentDelegate=_agentDelegate;
@property struct OpaqueJSContext *context; // @synthesize context=_context;
@property(retain) ScriptAgentFileMapManager *fileMapManager; // @synthesize fileMapManager=_fileMapManager;
@property(retain) UIATestCase *currentTestCase; // @synthesize currentTestCase=_currentTestCase;
@property(retain) NSURL *bundleResourcesDirectory; // @synthesize bundleResourcesDirectory=_bundleResourcesDirectory;
@property(retain) NSURL *bundleDirectory; // @synthesize bundleDirectory=_bundleDirectory;
@property(retain) NSString *targetBundleID; // @synthesize targetBundleID=_targetBundleID;
@property(retain) DTXConnection *connection; // @synthesize connection=_connection;
- (void)_configureForInstruments;
- (void)_configureForXcode;
- (id)resolveRelativePath:(id)arg1;
- (_Bool)processBundleOnMainThreadWithInfo:(id)arg1;
- (void)_initializeJSContextWithInfo:(id)arg1;
- (void)processBundleWithInfo:(id)arg1;
- (_Bool)handleAnnouncement:(id)arg1;
- (void)_hostTaskDidFinishWithInfo:(id)arg1;
- (id)performHostTaskWithPath:(id)arg1 arguments:(id)arg2 timeout:(id)arg3;
- (_Bool)handleAlert:(id)arg1;
- (void)_ignoreForegroundAppCheck:(id)arg1;
- (_Bool)delayForTimeInterval:(double)arg1;
- (_Bool)captureScreenWithName:(id)arg1;
- (_Bool)logWithInfo:(id)arg1;
- (id)_createIssueDictionaryWithMessage:(id)arg1;
- (id)_createFailureDictionaryWithMessage:(id)arg1;
- (_Bool)logWithInfo:(id)arg1 withType:(int)arg2;
- (_Bool)logWithInfo:(id)arg1 withType:(int)arg2 captureScreen:(_Bool)arg3;
- (_Bool)logMessage:(id)arg1 withType:(int)arg2 captureScreen:(_Bool)arg3;
- (void)takeScreenshot;
- (id)bundleStatus;
- (id)scriptStatus;
- (void)forceExit;
- (void)stopCapture;
- (void)_stopCapture;
- (void)resumeCapture;
- (void)pauseCapture;
- (void)startCaptureWithInfo:(id)arg1;
- (void)_startCapture;
- (void)recordExpression:(id)arg1;
- (void)stopScript;
- (void)resumeScript;
- (void)pauseScript;
- (void)startTestCase:(id)arg1;
- (void)startScriptWithInfo:(id)arg1;
- (_Bool)startScript:(id)arg1;
- (void)startTopScriptWithInfo:(id)arg1;
- (void)listenToAppStateChanges:(_Bool)arg1;
- (void)_appStateChanged:(id)arg1;
- (void)logJSException:(struct OpaqueJSValue *)arg1;
- (id)_exceptionWithMessage:(id)arg1;
- (id)_exceptionFromJSValue:(struct OpaqueJSValue *)arg1;
- (void)setBundleStatus:(unsigned long long)arg1;
- (void)setScriptStatus:(unsigned long long)arg1;
- (void)heartbeat;
- (void)dealloc;
- (id)initWithoutContext;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ScriptAgentDelegate : NSObject
{
    Logger *_logger;
    Recorder *_recorder;
}

@property(retain) Recorder *recorder; // @synthesize recorder=_recorder;
@property(retain) Logger *logger; // @synthesize logger=_logger;
- (void)_ignoreForegroundAppCheck:(id)arg1;
- (_Bool)handleAnnouncement:(id)arg1;
- (_Bool)handleAlert:(id)arg1;
- (id)performHostTaskWithPath:(id)arg1 arguments:(id)arg2 timeout:(id)arg3;
- (_Bool)delayForTimeInterval:(double)arg1;
- (void)recordExpression:(id)arg1;
- (_Bool)logWithInfo:(id)arg1;
- (void)dealloc;
- (id)initWithLogger:(id)arg1 andRecorder:(id)arg2;
- (id)init;

@end

@interface ScriptAgentFileMapManager : NSObject
{
    NSMutableDictionary *_runningFiles;
}

+ (_Bool)decomposeBacktraceLine:(id)arg1 intoFileURL:(id *)arg2 andLineNumber:(long long *)arg3;
+ (id)originalFilePathFromScript:(id)arg1;
+ (id)createRunDictionaryFromPath:(id)arg1;
@property(retain) NSMutableDictionary *runningFiles; // @synthesize runningFiles=_runningFiles;
- (id)_lineNumberOffsetWithFailureDictionary:(id)arg1 andRunDictionary:(id)arg2;
- (id)_correctedBacktraceStringForURLDescription:(id)arg1;
- (id)correctBacktraceString:(id)arg1;
- (id)correctExceptionDictionary:(id)arg1;
- (id)_runDictionaryForFile:(id)arg1;
- (void)clearRunningFileEntries;
- (void)clearRunningFile:(id)arg1;
- (void)addRunningFileEntryForRunDictionary:(id)arg1;
- (id)originalFilePathForFile:(id)arg1;
- (_Bool)isFileRunning:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface ScriptAgentUtility : NSObject
{
    NSCalendar *_defaultCalendar;
    ScriptAgent *_scriptAgent;
}

+ (id)sharedInstance;
@property(retain) ScriptAgent *scriptAgent; // @synthesize scriptAgent=_scriptAgent;
@property(retain) NSCalendar *defaultCalendar; // @synthesize defaultCalendar=_defaultCalendar;
- (id)generateScreenShotPath;
- (id)scriptAgentInstance;
- (void)createScriptAgentWithConfiguration:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface UIAElement (JSBridge)
- (id)parent;
@end

@interface UIAElementArray (JSBridge)
- (id)toArray;
@end

@interface UIAElementNil (JSBridge)
- (id)toArray;
- (id)parent;
@end

@interface UIATarget (JSBridge)
- (_Bool)delay:(double)arg1;
- (double)popTimeout;
- (void)pushTimeout:(double)arg1;
- (void)setTimeout:(double)arg1;
- (double)timeout;
@end

@interface UIATestCase : XCTestCase
{
    NSDictionary *_infoDict;
    NSDictionary *_failureDictionary;
    NSString *_fileName;
    NSString *_deviceFilePath;
}

+ (Class)_createSubClassOfName:(id)arg1;
+ (id)dynamicClassDictionary;
@property NSString *deviceFilePath; // @synthesize deviceFilePath=_deviceFilePath;
@property(retain) NSString *fileName; // @synthesize fileName=_fileName;
@property(retain) NSDictionary *failureDictionary; // @synthesize failureDictionary=_failureDictionary;
@property(retain) NSDictionary *infoDict; // @synthesize infoDict=_infoDict;
- (void)tearDown;
- (void)setUp;
- (id)run;
- (void)invokeTest;
- (Class)testRunClass;
- (id)name;
- (unsigned long long)testCaseCount;
- (_Bool)didThrowException;
- (void)setTestFunction:(id)arg1;
- (id)identifier;
- (void)dealloc;
- (id)initSubClassWithInfoDict:(id)arg1;
- (id)initWithInfoDict:(id)arg1;
- (id)init;

@end

@interface UIAutomationObjCBridge : NSObject
{
    struct OpaqueJSContext *_context;
    UIThreadSafeMutableDictionary *_classDictionary;
    id _delegate;
    id _logger;
    UIATarget *_localTarget;
}

+ (char *)createJavaScriptNameFromSelector:(SEL)arg1;
+ (id)sharedInstance;
@property UIATarget *localTarget; // @synthesize localTarget=_localTarget;
@property(retain) id logger; // @synthesize logger=_logger;
@property(retain) id delegate; // @synthesize delegate=_delegate;
@property(retain) UIThreadSafeMutableDictionary *classDictionary; // @synthesize classDictionary=_classDictionary;
@property struct OpaqueJSContext *context; // @synthesize context=_context;
- (struct OpaqueJSContext *)_initializeContext;
- (void)_addUIAutomationConstants;
- (void)_addUIAutomationConstantWithName:(const char *)arg1 value:(double)arg2 andGlobalObject:(struct OpaqueJSValue *)arg3;
- (struct OpaqueJSValue *)JSValueFromContext:(struct OpaqueJSContext *)arg1 withObjCObject:(id)arg2 exception:(const struct OpaqueJSValue **)arg3;
- (struct OpaqueJSValue *)globalObject;
- (void)reset;
- (struct OpaqueJSContext *)initializeContextWithDelegate:(id)arg1 andLogger:(id)arg2;
- (void)dealloc;
- (id)init;

@end

@interface UIThreadSafeMutableDictionary : NSObject
{
    NSMutableDictionary *_dictionary;
}

@property(retain) NSMutableDictionary *dictionary; // @synthesize dictionary=_dictionary;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (id)objectForKey:(id)arg1;
- (void)dealloc;
- (id)init;

@end

