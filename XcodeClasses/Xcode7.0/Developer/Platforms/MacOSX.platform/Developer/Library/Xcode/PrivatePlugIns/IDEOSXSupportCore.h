//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark -

//
// File: /Applications/Xcode-7GM.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Xcode/PrivatePlugIns/IDEOSXSupportCore.ideplugin/Contents/MacOS/IDEOSXSupportCore
// UUID: A9294BD6-65A6-3257-9A8C-179AAE2AB0F0
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 8022.0.0.0.0
//       Minimum Mac OS X version: 10.10.0
//                    SDK version: 10.11.0
//
// Objective-C Garbage Collection: Unsupported
//

@interface IDEDistributionMethodDevelopmentSignedMac : IDEDistributionMethodExport
{
}

- (id)exportStepName;
- (id)packagingStepIdentifier;
- (unsigned long long)provisioningProfileType;
- (id)provisioningProfilePlatform;
- (BOOL)wantsProvisioningProfiles;
- (id)installerCertificateKind;
- (id)certificateKind;
- (id)orderedDistributionStepClassNames;
- (id)subtitle;
- (id)shortTitle;
- (id)title;
- (id)commandLineName;
- (double)sortOrder;
- (_Bool)supportsDistributionOfArchive:(id)arg1;
- (id)supportedPlatform;

@end

@interface IDEDistributionMethodDirect : IDEDistributionMethodExport
{
}

- (id)packagingStepIdentifier;
- (BOOL)wantsProvisioningProfiles;
- (id)installerCertificateKind;
- (id)certificateKind;
- (id)shortTitle;
- (_Bool)supportsDistributionOfArchive:(id)arg1;

@end

@interface IDEDistributionMethodDirectDistribution : IDEDistributionMethodDirect
{
}

- (id)exportStepName;
- (id)orderedDistributionStepClassNames;
- (id)subtitle;
- (id)title;
- (double)sortOrder;
- (id)commandLineName;

@end

@interface IDEDistributionMethodDirectValidation : IDEDistributionMethodDirect
{
}

- (id)exportStepName;
- (id)orderedDistributionStepClassNames;
- (id)subtitle;
- (id)title;
- (int)supportedTask;
- (double)sortOrder;

@end

@interface IDEDistributionMethodMacAppStore : IDEDistributionMethodAppStore
{
}

- (id)packagingStepIdentifier;
- (id)provisioningProfilePlatform;
- (id)supportedPlatform;
- (BOOL)wantsProvisioningProfiles;
- (id)installerCertificateKind;
- (id)certificateKind;
- (id)shortTitle;
- (_Bool)supportsDistributionOfArchive:(id)arg1;

@end

@interface IDEDistributionMethodMacAppStoreDistribution : IDEDistributionMethodMacAppStore
{
}

- (id)subtitle;
- (id)title;
- (int)supportedTask;
- (double)sortOrder;

@end

@interface IDEDistributionMethodMacAppStoreExport : IDEDistributionMethodMacAppStore
{
}

- (BOOL)requiresDeveloperAccount;
- (id)exportStepName;
- (id)subtitle;
- (id)title;
- (int)supportedTask;
- (double)sortOrder;
- (id)commandLineName;

@end

@interface IDEDistributionMethodMacAppStoreValidation : IDEDistributionMethodMacAppStore
{
}

- (id)subtitle;
- (id)title;
- (int)supportedTask;
- (double)sortOrder;

@end

@interface IDEDistributionMethodMacApplication : IDEDistributionMethodExport
{
}

- (id)exportStepName;
- (id)provisioningProfilePlatform;
- (BOOL)wantsProvisioningProfiles;
- (id)installerCertificateKind;
- (id)certificateKind;
- (id)orderedDistributionStepClassNames;
- (id)subtitle;
- (id)shortTitle;
- (id)title;
- (_Bool)supportsDistributionOfArchive:(id)arg1;
- (double)sortOrder;

@end

@interface IDETestMac : DVTAbstractMacDevice
{
    DVTConfinementService *_confinementService;
    NSString *_controlPath;
    NSString *_testUserName;
    NSString *_testUserPath;
}

+ (void)initialize;
@property(copy) NSString *testUserPath; // @synthesize testUserPath=_testUserPath;
@property(copy) NSString *testUserName; // @synthesize testUserName=_testUserName;
@property(copy) NSString *controlPath; // @synthesize controlPath=_controlPath;
- (void).cxx_destruct;
- (void)modifyTestingEnvironmentVariables:(id)arg1 host:(id)arg2 testBundlePath:(id)arg3;
- (BOOL)stopDebugServerForLaunchSession:(id)arg1 error:(id *)arg2;
- (BOOL)startDebugServerForLaunchSession:(id)arg1 error:(id *)arg2;
- (BOOL)installUsingLaunchSession:(id)arg1 error:(id *)arg2;
- (void)startConfinementServiceIfNeeded;
- (id)_testUserPathForWorkspaceArena:(id)arg1;
- (BOOL)supportsXPCServiceDebugging;
- (BOOL)canRunMultipleInstancesPerApp;
- (BOOL)supportsArchiving;
- (BOOL)supportsDebugAsDifferentUser;
- (BOOL)supportsDebuggingDocumentVersioning;
- (BOOL)supportsResumeAndTurningItOnOrOff;
- (BOOL)supportsCustomWorkingDirectory;
- (id)processInformations;
- (id)processorDescription;
- (BOOL)isIgnored;
- (void)setIgnored:(BOOL)arg1;
- (BOOL)isAvailable;
- (void)setAvailable:(BOOL)arg1;
- (id)init;

@end

@interface IDETestMacRunService : IDERunDeviceService
{
}

+ (id)capability;
+ (id)serviceIdentifierKey;
- (id)operationWorkerWithLaunchSession:(id)arg1 error:(id *)arg2;
- (id)capabilitySequenceForLaunchSession:(id)arg1;

@end

@interface IDETestMacDebugService : IDETestMacRunService
{
}

+ (id)serviceIdentifierKey;

@end

@interface IDETestMacInstallService : IDERunDeviceService
{
}

+ (id)capability;
- (id)operationWorkerWithLaunchSession:(id)arg1 error:(id *)arg2;

@end

@interface IDETestMacLaunchService : IDETestMacRunService
{
}

+ (id)capability;
- (id)operationWorkerWithLaunchSession:(id)arg1 error:(id *)arg2;

@end

@interface IDETestMacLocator : DVTDeviceLocator
{
}

+ (id)testMac;
- (BOOL)matchDevice:(id)arg1 againstOptions:(id)arg2 genericOnly:(BOOL)arg3 allowAliases:(BOOL)arg4;
- (id)deviceType;
- (id)knownDeviceAtDeviceLocation:(id)arg1;
- (void)stopLocating;
- (void)startLocating;
- (id)platforms;
- (id)deviceLocationScheme;

@end

@interface _IDETestMacInstallWorker : IDERunOperationWorker
{
    IDETestMac *_device;
}

@property(retain) IDETestMac *device; // @synthesize device=_device;
- (void).cxx_destruct;
- (void)terminate;
- (void)start;
- (void)_transitionToFinishedRunning:(BOOL)arg1 withError:(id)arg2;

@end

@interface _IDETestMacLaunchWorker : IDERunOperationWorker
{
    IDETestMac *_device;
}

@property(retain) IDETestMac *device; // @synthesize device=_device;
- (void).cxx_destruct;
- (void)terminate;
- (void)start;
- (void)_transitionToFinishedRunning:(BOOL)arg1 withError:(id)arg2;

@end

@interface _IDETestMacRunOperationWorkerGroup : IDERunOperationWorkerGroup
{
    IDETestMac *_device;
}

@property(retain) IDETestMac *device; // @synthesize device=_device;
- (void).cxx_destruct;
- (void)allSubworkersDidFinishWithError:(id)arg1;

@end

