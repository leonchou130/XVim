//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct DTXSharedMemory {
    unsigned long long _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    int _field8;
    int _field9;
    unsigned int _field10;
    unsigned int _field11;
    unsigned int _field12;
    unsigned int _field13;
    unsigned int _field14;
    unsigned int _field15;
    unsigned int _field16;
    unsigned int _field17;
    char _field18[0];
};

struct TFPPidWatcher {
    unsigned int clientPort;
};

struct in6_addr {
    union {
        unsigned char _field1[16];
        unsigned short _field2[8];
        unsigned int _field3[4];
    } _field1;
};

struct in_addr {
    unsigned int _field1;
};

struct sockaddr_in {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    struct in_addr _field4;
    char _field5[8];
};

struct sockaddr_in6 {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    unsigned int _field4;
    struct in6_addr _field5;
    unsigned int _field6;
};

#pragma mark Typedef'd Structures

typedef struct {
    unsigned long long _field1;
    unsigned long long _field2;
    unsigned int _field3;
    unsigned int _field4;
} CDStruct_cbbc06c7;

typedef struct {
    unsigned int _field1;
    unsigned int _field2;
    struct *_field3;
} CDStruct_3b01f0aa;

#pragma mark -

//
// File: /Applications/Xcode-7GM.app/Contents/Developer/Platforms/WatchSimulator.platform/Developer/SDKs/WatchSimulator.sdk/Developer/Library/PrivateFrameworks/DVTInstrumentsFoundation.framework/DVTInstrumentsFoundation
// UUID: B411CFCA-A356-34C4-87C9-4C62D5521226
//
//                           Arch: i386
//                Current version: 58112.1.0
//          Compatibility version: 1.0.0
//                 Source version: 58112.1.0.0.0
//
// Objective-C Garbage Collection: Unsupported
//
//                       Run path: @loader_path/../../..
//                               = /Applications/Xcode-7GM.app/Contents/Developer/Platforms/WatchSimulator.platform/Developer/SDKs/WatchSimulator.sdk/Developer
//                       Run path: @executable_path/../../../../../../../SharedFrameworks
//                               = /Applications/Xcode-7GM.app/Contents/Developer/Platforms/WatchSimulator.platform/SharedFrameworks
//

@protocol DTActivityMonitoringServiceAuthorizedAPI <DTXAllowedRPC>
- (void)stopSampling;
- (void)startSamplingWithPid:(int)arg1;
- (void)setSamplingRate:(NSNumber *)arg1;
- (NSNumber *)killPid:(NSNumber *)arg1 withSignal:(NSNumber *)arg2;
- (NSMutableDictionary *)configureLaunchEnvironment:(NSMutableDictionary *)arg1;
@end

@protocol DTApplicationListingServiceRequests <DTXAllowedRPC>
- (void)unregisterUpdateToken:(NSString *)arg1;
- (NSArray *)installedApplicationsMatching:(NSDictionary *)arg1 registerUpdateToken:(NSString *)arg2;
@end

@protocol DTApplicationWorkspaceClient <NSObject>
- (void)applicationUninstalled:(NSDictionary *)arg1;
- (void)applicationInstalled:(NSDictionary *)arg1;
@end

@protocol DTAssetServiceProtocol <DTXAllowedRPC>
- (id)registerApplicationIdentifier:(NSString *)arg1 manifest:(NSData *)arg2;
- (NSNumber *)startServer;
- (NSNumber *)startServerForApplicationWithDevicePath:(NSString *)arg1;
@end

@protocol DTDeviceInfoServiceAuthorizedAPI <DTXAllowedRPC>
- (NSString *)cpDeviceName;
- (NSString *)cpDeviceInfoAsXML;
- (NSString *)cpKDebugEventsAsXML;
- (NSDictionary *)networkInformation;
- (NSDictionary *)systemInformation;
- (NSDictionary *)hardwareInformation;
- (NSDictionary *)iconDescriptionFileForAppPath:(NSString *)arg1;
- (NSArray *)directoryListingForPath:(NSString *)arg1;
- (NSDictionary *)symbolicatorSignaturesForExpiredPids;
- (void)unregisterSignatureTrackingForPid:(NSNumber *)arg1;
- (NSData *)symbolicatorSignatureForPid:(NSNumber *)arg1 trackingSelector:(NSString *)arg2;
- (NSString *)machKernelName;
- (NSNumber *)pidIs64Bit:(NSNumber *)arg1;
- (NSNumber *)isRunningPid:(NSNumber *)arg1;
- (NSString *)execnameForPid:(NSNumber *)arg1;
- (NSString *)nameForGID:(NSNumber *)arg1;
- (NSString *)nameForUID:(NSNumber *)arg1;
- (NSArray *)runningProcesses;
- (NSArray *)machTimeInfo;
@end

@protocol DTFSUsageActivityServiceAuthorizedAPI <DTXAllowedRPC>
- (NSMutableDictionary *)initialSwitches;
- (void)setValue:(NSNumber *)arg1 forSwitchName:(NSString *)arg2;
- (NSNumber *)valueForSwitch:(NSString *)arg1;
- (void)stopSampling;
- (void)startSamplingWithPid:(int)arg1;
- (NSMutableDictionary *)configureLaunchEnvironment:(NSMutableDictionary *)arg1;
@end

@protocol DTFileBrowserServiceAuthorizedAPI <DTXAllowedRPC>
- (NSMutableDictionary *)updateAttributesForItem:(NSMutableDictionary *)arg1;
- (NSArray *)contentsOfDirectoryAtPath:(NSString *)arg1;
- (NSData *)dataFromFileAtPath:(NSString *)arg1;
- (NSArray *)entriesInPathsArray:(NSArray *)arg1;
- (NSArray *)entriesAtPath:(NSString *)arg1;
@end

@protocol DTInstrumentServerAllowedRPC <DTXAllowedRPC>
- (void)setMaxConnectionEnqueue:(unsigned long long)arg1;
@end

@protocol DTInstrumentServerSimulatorPrivilege <DTXAllowedRPC>
- (void)_notifyOfTFPCommunicationsPort:(unsigned int)arg1;
@end

@protocol DTLeaksServiceAuthorizedRPC <DTXAllowedRPC>
- (NSDictionary *)requestGraph:(unsigned long long)arg1 options:(NSDictionary *)arg2;
@end

@protocol DTLeaksServiceLegacyRPC <DTXAllowedRPC>
- (void)cancelAllRequests;
- (void)requestLeaksForPid:(NSNumber *)arg1 context:(NSNumber *)arg2 provideBacktraces:(NSNumber *)arg3;
@end

@protocol DTObjectAllocServiceAuthorizedAPI <DTXAllowedRPC>
- (void)stopCollection;
- (void)startCollectionWithPid:(int)arg1;
- (NSNumber *)attachToPid:(NSNumber *)arg1 eventsMask:(NSNumber *)arg2;
- (NSDictionary *)preparedEnvironmentForLaunch:(NSDictionary *)arg1 eventsMask:(NSNumber *)arg2;
@end

@protocol DTProcessControlServiceAuthorizedMethods <DTXAllowedRPC>
- (void)sendProcessControlEvent:(NSData *)arg1 toPid:(NSNumber *)arg2;
- (void)killPid:(NSNumber *)arg1;
- (NSNumber *)launchSuspendedProcessWithDevicePath:(NSString *)arg1 bundleIdentifier:(NSString *)arg2 environment:(NSDictionary *)arg3 arguments:(NSArray *)arg4 options:(NSDictionary *)arg5;
- (void)resumePid:(NSNumber *)arg1;
- (void)suspendPid:(NSNumber *)arg1;
- (void)stopObservingPid:(NSNumber *)arg1;
- (void)startObservingPid:(NSNumber *)arg1;
@end

@protocol DTSamplingServiceAuthorizedAPI <DTXAllowedRPC>
- (void)stopSampling;
- (void)startSampling;
- (void)setTargetPid:(NSNumber *)arg1;
- (void)setOutputRate:(NSNumber *)arg1;
- (void)setSamplingRate:(NSNumber *)arg1;
@end

@protocol DTTapAuthorizedAPI <DTXAllowedRPC>
- (void)fetchDataNow;
- (void)setConfig:(NSDictionary *)arg1;
- (void)unpause;
- (void)pause;
- (void)stop;
- (void)start;
@end

@protocol DTXAllowedRPC <NSObject>
@end

@protocol DTXPCControlServiceRequests <DTXAllowedRPC>
- (void)stopObservationsForIdentifier:(NSString *)arg1 requestingProcess:(int)arg2;
- (void)observeServicesWithIdentifier:(NSString *)arg1 requestingProcess:(int)arg2 environment:(NSDictionary *)arg3 arguments:(NSArray *)arg4 options:(NSDictionary *)arg5;
@end

@protocol GCDAsyncSocketDelegate

@optional
- (void)socket:(_DT_GCDAsyncSocket *)arg1 didReceiveTrust:(struct __SecTrust *)arg2 completionHandler:(void (^)(_Bool))arg3;
- (void)socketDidSecure:(_DT_GCDAsyncSocket *)arg1;
- (void)socketDidDisconnect:(_DT_GCDAsyncSocket *)arg1 withError:(NSError *)arg2;
- (void)socketDidCloseReadStream:(_DT_GCDAsyncSocket *)arg1;
- (double)socket:(_DT_GCDAsyncSocket *)arg1 shouldTimeoutWriteWithTag:(long)arg2 elapsed:(double)arg3 bytesDone:(unsigned int)arg4;
- (double)socket:(_DT_GCDAsyncSocket *)arg1 shouldTimeoutReadWithTag:(long)arg2 elapsed:(double)arg3 bytesDone:(unsigned int)arg4;
- (void)socket:(_DT_GCDAsyncSocket *)arg1 didWritePartialDataOfLength:(unsigned int)arg2 tag:(long)arg3;
- (void)socket:(_DT_GCDAsyncSocket *)arg1 didWriteDataWithTag:(long)arg2;
- (void)socket:(_DT_GCDAsyncSocket *)arg1 didReadPartialDataOfLength:(unsigned int)arg2 tag:(long)arg3;
- (void)socket:(_DT_GCDAsyncSocket *)arg1 didReadData:(NSData *)arg2 withTag:(long)arg3;
- (void)socket:(_DT_GCDAsyncSocket *)arg1 didConnectToHost:(NSString *)arg2 port:(unsigned short)arg3;
- (void)socket:(_DT_GCDAsyncSocket *)arg1 didAcceptNewSocket:(_DT_GCDAsyncSocket *)arg2;
- (NSObject<OS_dispatch_queue> *)newSocketQueueForConnectionFromAddress:(NSData *)arg1 onSocket:(_DT_GCDAsyncSocket *)arg2;
@end

@protocol LSApplicationWorkspaceObserverProtocol <NSObject>

@optional
- (void)networkUsageChanged:(_Bool)arg1;
- (void)applicationInstallsDidPrioritize:(NSArray *)arg1;
- (void)applicationInstallsDidCancel:(NSArray *)arg1;
- (void)applicationInstallsDidResume:(NSArray *)arg1;
- (void)applicationInstallsDidPause:(NSArray *)arg1;
- (void)applicationInstallsArePrioritized:(NSArray *)arg1 arePaused:(NSArray *)arg2;
- (void)applicationsDidFailToUninstall:(NSArray *)arg1;
- (void)pluginsDidUninstall:(NSArray *)arg1;
- (void)applicationsDidUninstall:(NSArray *)arg1;
- (void)pluginsWillUninstall:(NSArray *)arg1;
- (void)applicationsWillUninstall:(NSArray *)arg1;
- (void)applicationsDidFailToInstall:(NSArray *)arg1;
- (void)pluginsDidInstall:(NSArray *)arg1;
- (void)applicationsDidInstall:(NSArray *)arg1;
- (void)applicationsWillInstall:(NSArray *)arg1;
- (void)applicationInstallsDidUpdateIcon:(NSArray *)arg1;
- (void)applicationInstallsDidChange:(NSArray *)arg1;
- (void)applicationInstallsDidStart:(NSArray *)arg1;
@end

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned int hash;
- (struct _NSZone *)zone;
- (unsigned int)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSSecureCoding <NSCoding>
+ (_Bool)supportsSecureCoding;
@end

@interface DTActivityMonitoringService : DTXService <DTActivityMonitoringServiceAuthorizedAPI>
{
    _Bool _doCollectData;
    int _samplingRate;
}

+ (void)registerCapabilities:(id)arg1;
- (void)collectData;
- (id)configureLaunchEnvironment:(id)arg1;
- (id)killPid:(id)arg1 withSignal:(id)arg2;
- (void)stopSampling;
- (void)startSamplingWithPid:(int)arg1;
- (void)setSamplingRate:(id)arg1;
- (id)initWithChannel:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

@interface DTAllocationsRecorder : NSObject
{
    struct DTXSharedMemory *_shmem;
    NSObject<OS_dispatch_queue> *_processingQueue;
    struct {
        double _field1;
        unsigned int _field2;
        unsigned int _field3;
        unsigned long long _field4;
        unsigned long long _field5;
        unsigned long long _field6;
        long long _field7;
        unsigned long long _field8[0];
        char _field9[0];
    } *_partialEvent;
    unsigned int _partialSize;
    unsigned int _partialFilled;
    int _eventTotal;
    unsigned int _targetTask;
    int _stopCollection;
    _Bool _readStackLogsUponAttach;
    CDUnknownBlockType _eventHandler;
    CDUnknownBlockType _bufferHandler;
    unsigned int _sharedMemorySize;
}

+ (_Bool)configureLocalLaunchEnvironment:(id)arg1 recordedEventsMask:(unsigned int)arg2;
+ (int)currentVersion;
+ (id)serviceIdentifier;
+ (unsigned int)cppClassNamesMask;
+ (unsigned int)zombieEventsMask;
+ (unsigned int)mallocReallocFreeEventsMask;
+ (unsigned int)retainReleaseAutoEventsMask;
+ (unsigned int)vmEventsMask;
+ (unsigned int)allEventsMask;
@property(nonatomic) unsigned int sharedMemorySize; // @synthesize sharedMemorySize=_sharedMemorySize;
@property(nonatomic) _Bool readStackLogsUponAttach; // @synthesize readStackLogsUponAttach=_readStackLogsUponAttach;
@property(copy, nonatomic) CDUnknownBlockType bufferHandler; // @synthesize bufferHandler=_bufferHandler;
@property(copy, nonatomic) CDUnknownBlockType eventHandler; // @synthesize eventHandler=_eventHandler;
- (void).cxx_destruct;
- (void)_processIncomingData;
@property(readonly) int eventCount;
- (void)_endAndTossResources:(_Bool)arg1;
- (void)cancel;
- (void)stop;
- (void)processBufferMessage:(id)arg1;
- (_Bool)_startWithError:(id *)arg1;
- (_Bool)startForProcessingBuffersWithError:(id *)arg1;
- (_Bool)startWithLaunchedTask:(unsigned int)arg1 error:(id *)arg2;
- (_Bool)startAttachingToRunningTask:(unsigned int)arg1 recordedEventsMask:(unsigned int)arg2 error:(id *)arg3;
- (unsigned long long)_setupSharedMemoryInTask:(unsigned int)arg1 error:(id *)arg2;
- (void)dealloc;
- (id)init;

@end

@interface DTApplicationListingService : DTXService <DTApplicationWorkspaceClient, DTApplicationListingServiceRequests>
{
}

+ (void)registerCapabilities:(id)arg1;
- (void)unregisterUpdateToken:(id)arg1;
- (id)installedApplicationsMatching:(id)arg1 registerUpdateToken:(id)arg2;
- (void)_sendNotification:(id)arg1 install:(_Bool)arg2;
- (void)applicationUninstalled:(id)arg1;
- (void)applicationInstalled:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

@interface DTApplicationWorkspaceObserver : NSObject <LSApplicationWorkspaceObserverProtocol>
{
    NSMutableDictionary *_registrationsByToken;
    NSMutableDictionary *_knownAppsByPath;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (void)pluginsDidUninstall:(id)arg1;
- (void)applicationsDidUninstall:(id)arg1;
- (void)pluginsDidInstall:(id)arg1;
- (void)applicationsDidInstall:(id)arg1;
- (void)unregisterNotificationToken:(id)arg1 observer:(id)arg2;
- (void)_unregisterNotificationTokenInternal:(id)arg1;
- (id)registerNotificationToken:(id)arg1 observer:(id)arg2 query:(id)arg3;
- (void)_notifyWithDictionaryRepresentation:(id)arg1 addition:(_Bool)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

@interface DTAssertionManager : NSObject
{
    NSArray *_assertionFactories;
    NSArray *_disableKeys;
    NSObject<OS_dispatch_queue> *_guard;
    NSMutableDictionary *_pidInfosByPid;
}

+ (id)sharedInstance;
+ (void)defaultAssertionFactories:(id *)arg1 andDisableKeys:(id *)arg2;
- (void).cxx_destruct;
- (void)removeClaimsHeldByClient:(id)arg1;
- (void)removeAssertionsForPid:(int)arg1 onBehalfOfClient:(id)arg2;
- (void)takeAssertionsForPid:(int)arg1 onBehalfOfClient:(id)arg2 withOptions:(id)arg3;
- (id)initWithAssertionFactories:(id)arg1 andDisableKeys:(id)arg2;
- (id)init;

@end

@interface DTAssertionPidInfo : NSObject
{
    int _pid;
    NSArray *_blocks;
    NSMutableSet *_clientsWithClaim;
}

@property(readonly) int pid; // @synthesize pid=_pid;
@property(readonly) NSArray *blocks; // @synthesize blocks=_blocks;
- (void).cxx_destruct;
- (_Bool)hasNoMoreClients;
- (_Bool)removeClaimFromClient:(id)arg1;
- (void)addClaimForClient:(id)arg1;
- (void)removeAssertions;
- (id)initForPid:(int)arg1 withRemoveBlocks:(id)arg2 onBehalfOfClient:(id)arg3;

@end

@interface DTAssetHTTPRequestHandler : NSObject <GCDAsyncSocketDelegate>
{
    struct __CFHTTPMessage *_httpMessage;
    _Bool _sentHeader;
    NSString *_identifier;
    DTXChannel *_channel;
    _DT_GCDAsyncSocket *_socket;
    CDUnknownBlockType _completion;
    unsigned int _dataSent;
}

@property unsigned int dataSent; // @synthesize dataSent=_dataSent;
@property _Bool sentHeader; // @synthesize sentHeader=_sentHeader;
@property(copy) CDUnknownBlockType completion; // @synthesize completion=_completion;
@property(retain) _DT_GCDAsyncSocket *socket; // @synthesize socket=_socket;
@property(retain) DTXChannel *channel; // @synthesize channel=_channel;
@property(readonly) NSString *identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
- (void)socketDidDisconnect:(id)arg1 withError:(id)arg2;
- (void)socket:(id)arg1 didReadData:(id)arg2 withTag:(long)arg3;
- (void)serveResponseAndDisconnect:(struct __CFHTTPMessage *)arg1;
- (void)serveErrorMessageForError:(id)arg1;
- (void)sendDataChunk:(id)arg1;
- (void)receivedMessage:(id)arg1;
- (void)requestAssetAtPath:(id)arg1;
- (void)startReading;
- (void)dealloc;
- (id)initWithSocket:(id)arg1 channel:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;

@end

@interface DTAssetHTTPServer : NSObject <GCDAsyncSocketDelegate>
{
    DTXChannel *_channel;
    _DT_GCDAsyncSocket *_socket;
    NSObject<OS_dispatch_queue> *_socketDelegateQueue;
    NSMutableDictionary *_activeHandlers;
    NSObject<OS_dispatch_queue> *_activeHandlersQueue;
}

@property(retain) NSObject<OS_dispatch_queue> *activeHandlersQueue; // @synthesize activeHandlersQueue=_activeHandlersQueue;
@property(retain) NSMutableDictionary *activeHandlers; // @synthesize activeHandlers=_activeHandlers;
@property(retain) NSObject<OS_dispatch_queue> *socketDelegateQueue; // @synthesize socketDelegateQueue=_socketDelegateQueue;
@property(retain) _DT_GCDAsyncSocket *socket; // @synthesize socket=_socket;
@property(retain) DTXChannel *channel; // @synthesize channel=_channel;
- (void).cxx_destruct;
@property(readonly) unsigned int port;
- (void)socket:(id)arg1 didAcceptNewSocket:(id)arg2;
- (void)receivedMessage:(id)arg1;
- (id)activeHandlerWithIdentifier:(id)arg1;
- (void)stopListening;
- (_Bool)startListeningWithError:(id *)arg1;
- (id)init;

@end

@interface DTAssetProviderService : DTXService
{
}

+ (void)beginProvidingAssetsForApplication:(id)arg1 onChannel:(id)arg2 completion:(CDUnknownBlockType)arg3;
+ (_Bool)shouldStartAssetServerForApplication:(id)arg1;
+ (id)assetManifestPathForApplication:(id)arg1;
+ (void)beginProvidingAssetsForRemoteApplication:(id)arg1 connection:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)registerManifestForApplicationAtPath:(id)arg1 onPort:(unsigned int)arg2;
- (void)startServerOnDeviceWithCompletion:(CDUnknownBlockType)arg1;
- (void)serveDataFromFileHandle:(id)arg1 forRequestIdentifier:(id)arg2;
- (void)serveDataFromFile:(id)arg1 forRequestIdentifier:(id)arg2;
- (void)serveDataFromZippedDirectory:(id)arg1 forRequestIdentifier:(id)arg2;
- (void)messageReceived:(id)arg1;
- (void)startServingAssetsForAppWithPath:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;

@end

@interface DTAssetRequest : NSObject <NSSecureCoding>
{
    NSString *_identifier;
    NSString *_assetPath;
}

+ (_Bool)supportsSecureCoding;
+ (id)requestWithIdentifier:(id)arg1 path:(id)arg2;
@property(readonly, nonatomic) NSString *assetPath; // @synthesize assetPath=_assetPath;
@property(readonly, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
@property(readonly, nonatomic) DTXMessage *message;
- (id)initWithIdentifier:(id)arg1 path:(id)arg2;

@end

@interface DTAssetResponse : NSObject <NSSecureCoding>
{
    _Bool _completed;
    NSString *_identifier;
    NSData *_data;
}

+ (_Bool)supportsSecureCoding;
+ (id)completedResponseWithIdentifier:(id)arg1;
+ (id)responseWithIdentifier:(id)arg1 data:(id)arg2;
@property(readonly, nonatomic, getter=isCompleted) _Bool completed; // @synthesize completed=_completed;
@property(readonly, nonatomic) NSData *data; // @synthesize data=_data;
@property(readonly, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
- (id)description;
@property(readonly, nonatomic) DTXMessage *message;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithIdentifier:(id)arg1 data:(id)arg2 completed:(_Bool)arg3;

@end

@interface DTAssetService : DTXService <DTAssetServiceProtocol>
{
    DTAssetHTTPServer *_server;
    NSXPCConnection *_ondemandConnection;
}

+ (id)translatedManifest:(id)arg1 withAssetServicePort:(unsigned int)arg2;
@property(retain) NSXPCConnection *ondemandConnection; // @synthesize ondemandConnection=_ondemandConnection;
@property(retain) DTAssetHTTPServer *server; // @synthesize server=_server;
- (void).cxx_destruct;
- (id)registerApplicationIdentifier:(id)arg1 manifest:(id)arg2;
- (void)connectToOnDemandDaemon;
- (id)startServer;
- (id)startServerForApplicationWithDevicePath:(id)arg1;
- (void)messageReceived:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

@interface DTBKSWatchdogAssertionFactory : NSObject
{
}

- (CDUnknownBlockType)_takeBKSWatchdogAssertionForPid:(int)arg1;
- (CDUnknownBlockType)assertionForPid:(int)arg1;

@end

@interface DTCPRemoteCache : NSObject
{
    id *_locks;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)kindToString:(int)arg1;
+ (id)sharedDTCPRemoteCache;
- (_Bool)accessFileKind:(int)arg1 device:(id)arg2 fileType:(id)arg3 block:(CDUnknownBlockType)arg4;
- (id)_filePathForKind:(int)arg1 fileType:(id)arg2 directoryURL:(id)arg3;
- (id)_directoryForDevice:(id)arg1;
- (void)dealloc;
- (id)init;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface DTDeviceInfoService : DTXService <DTDeviceInfoServiceAuthorizedAPI>
{
    struct __CFDictionary *_trackingSymbolicatorsByPid;
}

+ (_Bool)isApplication:(id)arg1;
+ (void)registerCapabilities:(id)arg1;
- (id)cpDeviceName;
- (id)cpDeviceInfoAsXML;
- (id)cpKDebugEventsAsXML;
- (id)networkInformation;
- (id)systemInformation;
- (id)productVersion;
- (id)uniqueID;
- (id)lookupSysctl:(const char *)arg1;
- (id)hardwareInformation;
- (int)hwCPU64BitCapable;
- (int)hwCPUtype;
- (int)hwCPUsubtype;
- (int)speedOfCpus;
- (int)numberOfCpus;
- (int)numberOfPhysicalCpus;
- (id)iconDescriptionForIconPath:(id)arg1;
- (id)iconDescriptionFileForAppPath:(id)arg1;
- (id)directoryListingForPath:(id)arg1;
- (id)symbolicatorSignaturesForExpiredPids;
- (void)unregisterSignatureTrackingForPid:(id)arg1;
- (id)symbolicatorSignatureForPid:(id)arg1 trackingSelector:(id)arg2;
- (id)machKernelName;
- (id)pidIs64Bit:(id)arg1;
- (id)isRunningPid:(id)arg1;
- (id)execnameForPid:(id)arg1;
- (id)nameForGID:(id)arg1;
- (id)nameForUID:(id)arg1;
- (id)runningProcesses;
- (id)machTimeInfo;
- (void)messageReceived:(id)arg1;
- (void)dealloc;
- (id)initWithChannel:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

@interface XRExpiredPidCacheServiceProtected : NSObject
{
    NSObject<OS_dispatch_queue> *_cacheQ;
    _XRExpiredPidCache *_cache;
}

- (void).cxx_destruct;
- (void)_performOnCache:(CDUnknownBlockType)arg1;
- (id)init;

@end

@interface DTExpiredPidCacheService : XRExpiredPidCacheServiceProtected
{
}

+ (id)defaultCache;
+ (void)disableExpiredPidCaching;
- (void)enableCaching:(_Bool)arg1;
- (id)allExpiredSignatures;
- (id)signatureForExpiredPid:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface DTFSUsageActivityService : DTXService <DTFSUsageActivityServiceAuthorizedAPI>
{
    DTXConnection *_targetConnection;
    NSMutableDictionary *_switches;
}

+ (void)registerCapabilities:(id)arg1;
- (void).cxx_destruct;
- (id)initialSwitches;
- (void)setValue:(id)arg1 forSwitchName:(id)arg2;
- (id)valueForSwitch:(id)arg1;
- (void)stopSampling;
- (void)startSamplingWithPid:(int)arg1;
- (id)configureLaunchEnvironment:(id)arg1;
- (void)messageReceived:(id)arg1;
- (id)initWithChannel:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

@interface DTFileBrowserService : DTXService <DTFileBrowserServiceAuthorizedAPI>
{
}

+ (void)registerCapabilities:(id)arg1;
- (id)updateAttributesForItem:(id)arg1;
- (id)contentsOfDirectoryAtPath:(id)arg1;
- (id)dataFromFileAtPath:(id)arg1;
- (id)entriesInPathsArray:(id)arg1;
- (id)entriesAtPath:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

@interface DTInstrumentServer : NSObject <DTInstrumentServerAllowedRPC, DTInstrumentServerSimulatorPrivilege>
{
    DTXConnection *_connection;
    CDUnknownBlockType _channelRestrictBlock;
}

+ (void)_tfpPortReceived:(unsigned int)arg1;
+ (void)_taskInvalid:(unsigned int)arg1 forPid:(int)arg2;
+ (unsigned int)taskForPid:(int)arg1;
+ (void *)sharedAuthorization;
+ (void)takeOwnershipOfSharedAuthorization:(void *)arg1;
+ (_Bool)isAppleInternal;
@property(copy) CDUnknownBlockType channelRestrictBlock; // @synthesize channelRestrictBlock=_channelRestrictBlock;
@property(readonly, nonatomic) DTXConnection *connection; // @synthesize connection=_connection;
- (void).cxx_destruct;
- (void)_notifyOfTFPCommunicationsPort:(unsigned int)arg1;
- (void)restrictChannelsWithBlock:(CDUnknownBlockType)arg1;
- (void)loadServicesAtPath:(id)arg1;
- (void)setMaxConnectionEnqueue:(unsigned long long)arg1;
- (void)cancel;
- (void)resume;
- (id)initWithTransport:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

@interface DTLeaksService : DTXService <DTLeaksServiceLegacyRPC, DTLeaksServiceAuthorizedRPC>
{
    NSObject<OS_dispatch_queue> *_coordinationQueue;
    NSObject<OS_dispatch_queue> *_preservationQueue;
    NSMutableDictionary *_helperConnectionByTargetPid;
    NSMutableDictionary *_helperPidByTargetPid;
    NSMutableDictionary *_fileByPid;
}

+ (void)registerCapabilities:(id)arg1;
- (void).cxx_destruct;
- (void)cancelAllRequests;
- (void)requestLeaksForPid:(id)arg1 context:(id)arg2 provideBacktraces:(id)arg3;
- (id)requestGraph:(unsigned long long)arg1 options:(id)arg2;
- (void)_lookupGraphByToken:(unsigned long long)arg1 response:(id)arg2;
- (id)_preserveDict:(id)arg1 forPid:(int)arg2;
- (void)_internalRequestForPid:(int)arg1 message:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)messageReceived:(id)arg1;
- (id)initWithChannel:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

@interface DTLeaksServicePreservedGraphFile : NSObject
{
    int _fd;
    unsigned int _size;
    NSDictionary *_metaDict;
    unsigned long long _token;
}

@property(copy, nonatomic) NSDictionary *metaDict; // @synthesize metaDict=_metaDict;
@property(nonatomic) unsigned long long token; // @synthesize token=_token;
@property(nonatomic) unsigned int size; // @synthesize size=_size;
@property(nonatomic) int fd; // @synthesize fd=_fd;
- (void).cxx_destruct;
- (void)dealloc;

@end

@interface DTMemlimitAssertionFactory : NSObject
{
}

- (CDUnknownBlockType)_removeMemoryLimitsForPid:(int)arg1;
- (CDUnknownBlockType)assertionForPid:(int)arg1;

@end

@interface DTObjectAllocService : DTXService <DTObjectAllocServiceAuthorizedAPI>
{
    unsigned int _task;
    DTAllocationsRecorder *_recorder;
}

+ (void)registerCapabilities:(id)arg1;
- (void).cxx_destruct;
- (void)stopCollection;
- (void)startCollectionWithPid:(int)arg1;
- (id)attachToPid:(id)arg1 eventsMask:(id)arg2;
- (id)preparedEnvironmentForLaunch:(id)arg1 eventsMask:(id)arg2;
- (void)messageReceived:(id)arg1;
- (id)initWithChannel:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

@interface DTProcessControlService : DTXService <DTProcessControlServiceAuthorizedMethods>
{
    NSMutableArray *_pids;
    NSMutableArray *_sources;
    NSMutableDictionary *_activeIODispatchSources;
    NSObject<OS_dispatch_queue> *_deathNoteQueue;
    NSObject<OS_dispatch_queue> *_synchronousRedirectionQueue;
}

- (void).cxx_destruct;
- (void)watchOutputFileName:(id)arg1 forPid:(int)arg2;
- (void)watchOutputFileDescriptor:(int)arg1 forPid:(int)arg2;
- (void)handleRedirectionIterationForFileDescriptor:(int)arg1 forPid:(int)arg2 withDispatchSource:(id)arg3;
- (int)maybeRedirectFromFileDescriptor:(int)arg1 fromPid:(int)arg2 withScratchBuffer:(char *)arg3 ofByteLength:(unsigned long)arg4;
- (int)cleanupPid:(int)arg1;
- (void)sendProcessControlEvent:(id)arg1 toPid:(id)arg2;
- (void)_performMemoryWarningForPid:(int)arg1;
- (void)killPid:(id)arg1;
- (id)launchSuspendedProcessWithDevicePath:(id)arg1 bundleIdentifier:(id)arg2 environment:(id)arg3 arguments:(id)arg4 options:(id)arg5;
- (id)launchSuspendedProcessWithDevicePath:(id)arg1 bundleIdentifier:(id)arg2 environment:(id)arg3 arguments:(id)arg4;
- (void)suspendPid:(id)arg1;
- (void)resumePid:(id)arg1;
- (void)stopObservingPid:(id)arg1;
- (void)startObservingPid:(id)arg1;
- (id)initWithChannel:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

@interface DTPosixSpawnProcessControlService : DTProcessControlService
{
}

+ (int)posixSpawnWithPath:(id)arg1 environment:(id)arg2 arguments:(id)arg3 options:(id)arg4 fileDescriptorHandler:(CDUnknownBlockType)arg5;
+ (void)registerCapabilities:(id)arg1;
- (int)cleanupPid:(int)arg1;
- (id)launchSuspendedProcessWithDevicePath:(id)arg1 bundleIdentifier:(id)arg2 environment:(id)arg3 arguments:(id)arg4 options:(id)arg5;

@end

@interface DTProcessControlEvent : NSObject <NSSecureCoding>
{
}

+ (_Bool)supportsSecureCoding;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface DTProcessControlApplicationMemoryWarning : DTProcessControlEvent
{
}

@end

@interface DTProcessControlBackgroundFetchEvent : DTProcessControlEvent
{
}

@end

@interface DTSamplingService : DTXService <DTSamplingServiceAuthorizedAPI>
{
    _Bool _doCollectData;
    unsigned long long _samplingRate;
    unsigned long long _outputRate;
    unsigned long long _outputRateDelta;
    unsigned long long *_backtraceBuffer;
    unsigned int _backtraceBufferSize;
    unsigned int _backtraceBufferUsedSize;
    unsigned int _task;
    _Bool _targetIs64Bit;
}

+ (void)registerCapabilities:(id)arg1;
- (void)addSampleWithTimeInfo:(struct __CFDictionary *)arg1 useZeroDelta:(_Bool)arg2;
- (void)collectData;
- (void)_allocateBuffer;
- (void)_outputData;
- (void)stopSampling;
- (void)startSampling;
- (void)setTargetPid:(id)arg1;
- (void)setOutputRate:(id)arg1;
- (void)setSamplingRate:(id)arg1;
- (void)dealloc;
- (id)initWithChannel:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

@interface DTTap : NSObject
{
    NSString *_archivingPath;
    NSObject<OS_dispatch_queue> *_guardQueue;
    NSObject<OS_dispatch_queue> *_sourceAndHandlerQueue;
    DTTapConfig *_nextConfig;
}

@property(retain, nonatomic) DTTapConfig *nextConfig; // @synthesize nextConfig=_nextConfig;
- (void).cxx_destruct;
- (void)_fetch:(id)arg1;
- (void)_reset:(id)arg1;
- (void)_stopWithSemaphore:(id)arg1 guard:(id)arg2;
- (void)_start:(id)arg1;
- (void)_unpause:(id)arg1;
- (void)_pause:(id)arg1;
- (void)fetchDataNow;
- (id)errorString;
@property(readonly) NSString *UUID;
@property(readonly) _Bool isRunning;
- (_Bool)_isArchiving:(id)arg1;
- (_Bool)isArchiving;
- (void)stop;
- (void)start;
- (void)unpause;
- (void)pause;
- (void)resume;
- (void)suspend;
- (void)_dispatchErrorValue:(unsigned int)arg1 timestamp:(unsigned long long)arg2 string:(id)arg3 guard:(id)arg4;
- (void)_runningMetadataChanged:(id)arg1 guard:(id)arg2;
- (void)_receivedData:(id)arg1;
- (void)_lock:(CDUnknownBlockType)arg1;
@property(readonly) id <DTTapDelegate> delegate;
- (void)dealloc;
- (id)initWithDelegate:(id)arg1 config:(id)arg2;

@end

@interface DTTapConfig : NSObject <NSCopying>
{
    NSMutableDictionary *_dict;
    NSString *_archivingPath;
    _Bool _createdArchivingPath;
    _Bool _filePreservation;
    NSString *_serviceName;
    int _serviceVersion;
    CDUnknownBlockType _runningMetadataChangedHandler;
    CDUnknownBlockType _errorHandler;
    unsigned long long _pollingInterval;
}

@property(copy, nonatomic) CDUnknownBlockType errorHandler; // @synthesize errorHandler=_errorHandler;
@property(copy, nonatomic) CDUnknownBlockType runningMetadataChangedHandler; // @synthesize runningMetadataChangedHandler=_runningMetadataChangedHandler;
@property(nonatomic) _Bool filePreservation; // @synthesize filePreservation=_filePreservation;
@property(readonly, nonatomic) int serviceVersion; // @synthesize serviceVersion=_serviceVersion;
@property(copy, nonatomic) NSString *serviceName; // @synthesize serviceName=_serviceName;
@property(nonatomic) unsigned long long pollingInterval; // @synthesize pollingInterval=_pollingInterval;
- (void).cxx_destruct;
- (_Bool)setArchivingPath:(id)arg1 error:(id *)arg2;
- (id)archivingPath;
- (void)_removeSerializableObjectForKey:(id)arg1;
- (id)_getSerializableObjectForKey:(id)arg1;
- (void)_setSerializableObject:(id)arg1 forKey:(id)arg2;
- (void)reset;
- (id)plist;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithPlist:(id)arg1;
- (id)init;

@end

@interface DTTapLocal : DTTap
{
    CDUnknownBlockType _taskForPid;
    NSObject<OS_dispatch_source> *_pollTimer;
}

- (void).cxx_destruct;
- (void)_stopWithSemaphore:(id)arg1 guard:(id)arg2;
- (void)_start:(id)arg1;
- (void)setTaskForPidBlock:(CDUnknownBlockType)arg1;
- (id)initWithDelegate:(id)arg1 config:(id)arg2;
- (id)init;

@end

@interface DTTapMessage : NSObject <NSCoding>
{
    NSMutableDictionary *_plist;
}

- (void).cxx_destruct;
- (id)plist;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)init;

@end

@interface DTTapRemote : DTTap
{
    DTXConnection *_connection;
    NSString *_serviceName;
    DTXChannel *_channel;
    int _version;
    NSObject<OS_dispatch_queue> *_unprocessedMessageQueue;
    NSObject<OS_dispatch_source> *_receivedMessage;
}

+ (_Bool)stopOnChannel:(id)arg1;
+ (_Bool)unpauseOnChannel:(id)arg1;
+ (_Bool)pauseOnChannel:(id)arg1;
+ (_Bool)startOnChannel:(id)arg1 withConfiguration:(id)arg2;
- (void).cxx_destruct;
- (void)_reset:(id)arg1;
- (void)_fetch:(id)arg1;
- (void)_unpause:(id)arg1;
- (void)_pause:(id)arg1;
- (void)_stopWithSemaphore:(id)arg1 guard:(id)arg2;
- (void)_start:(id)arg1;
- (void)messageReceived:(id)arg1;
- (void)_setConnection:(id)arg1 guarded:(id)arg2;
- (void)setConnection:(id)arg1;
- (void)dealloc;
- (id)initWithDelegate:(id)arg1 config:(id)arg2 connection:(id)arg3 serviceName:(id)arg4 version:(int)arg5;

@end

@interface DTTapService : DTXService <DTTapAuthorizedAPI>
{
    NSRecursiveLock *_lock;
    DTTapServiceGuarded *_lockedObj;
}

- (void).cxx_destruct;
- (id)_didStop:(id)arg1;
- (id)_willStart:(id)arg1;
- (_Bool)_validateConfig:(id)arg1;
- (void)fetchDataNow;
- (void)unpause;
- (void)pause;
- (void)stop;
- (void)start;
- (void)setConfig:(id)arg1;
- (id)_createConfigWithPlist:(id)arg1;
- (void)messageReceived:(id)arg1;
- (id)initWithChannel:(id)arg1;
- (Class)_guardedClass;
- (void)_Access:(CDUnknownBlockType)arg1;
- (void)_SendMsg:(id)arg1 toChannel:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

@interface DTTapServiceGuarded : NSObject
{
    DTXChannel *channel;
    DTTapLocal *tap;
    _Bool useExpiredPidCache;
    _Bool tapWasStopped;
}

- (void).cxx_destruct;
- (void)createTapWithConfig:(id)arg1;
- (id)initWithChannel:(id)arg1;

@end

@interface DTWatchBacklightAssertionFactory : NSObject
{
    NSObject<OS_dispatch_queue> *_backlightQueue;
    int _backlightAssertionLiveProcessCount;
    CSLSBacklightAssertion *_backlightAssertion;
}

- (void).cxx_destruct;
- (CDUnknownBlockType)_takeBacklightAssertionForPid:(int)arg1;
- (void)_kickBacklightAssertion;
- (CDUnknownBlockType)assertionForPid:(int)arg1;
- (id)init;

@end

@interface DTXPCControlService : DTProcessControlService <DTXPCControlServiceRequests>
{
}

+ (void)registerCapabilities:(id)arg1;
- (void)stopObservationsForIdentifier:(id)arg1 requestingProcess:(int)arg2;
- (void)observeServicesWithIdentifier:(id)arg1 requestingProcess:(int)arg2 environment:(id)arg3 arguments:(id)arg4 options:(id)arg5;
- (void)messageReceived:(id)arg1;
- (id)launchSuspendedProcessWithDevicePath:(id)arg1 bundleIdentifier:(id)arg2 environment:(id)arg3 arguments:(id)arg4 options:(id)arg5;
- (id)initWithChannel:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

@interface DTXPCRegistration : NSObject
{
    NSString *_serviceIdentifier;
    CDUnknownBlockType _oneshotHandler;
    id _client;
    id _pkHandle;
    NSObject<OS_xpc_object> *_xpcObject;
}

@property(retain, nonatomic) NSObject<OS_xpc_object> *xpcObject; // @synthesize xpcObject=_xpcObject;
@property(retain, nonatomic) id pkHandle; // @synthesize pkHandle=_pkHandle;
@property(retain, nonatomic) id client; // @synthesize client=_client;
@property(copy, nonatomic) CDUnknownBlockType oneshotHandler; // @synthesize oneshotHandler=_oneshotHandler;
@property(copy, nonatomic) NSString *serviceIdentifier; // @synthesize serviceIdentifier=_serviceIdentifier;
- (void).cxx_destruct;

@end

@interface DTXPCServiceController : NSObject
{
    NSMutableDictionary *_registrationDictsByPid;
    NSObject<OS_dispatch_queue> *_guard;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (void)unregisterClient:(id)arg1 withIdentifier:(id)arg2 parent:(int)arg3;
- (void)_matchRemove:(CDUnknownBlockType)arg1;
- (void)_registryModify:(_Bool)arg1 identifier:(id)arg2 parent:(int)arg3 client:(id)arg4 block:(CDUnknownBlockType)arg5;
- (void)registerClient:(id)arg1 forXPCService:(id)arg2 environment:(id)arg3 arguments:(id)arg4 options:(id)arg5 handler:(CDUnknownBlockType)arg6;
- (void)releaseAssertionsMadeByClient:(id)arg1;
- (id)init;

@end

@interface LeakAnalyzer : NSObject
{
    unsigned int _task;
}

+ (id)descriptionForLeakErrorCode:(int)arg1;
+ (id)serializedLeakDataWithCount:(unsigned int)arg1 leaks:(CDStruct_cbbc06c7 *)arg2 contents:(id *)arg3 references:(CDStruct_3b01f0aa)arg4 layouts:(id)arg5 timestamp:(unsigned long long)arg6;
+ (void)deserializeLeakData:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
+ (void)initialize;
- (id)findLeaksWithOptions:(unsigned int)arg1 block:(CDUnknownBlockType)arg2;
- (id)initWithTask:(unsigned int)arg1;

@end

@interface XRInternalizedSettingsStore : NSObject
{
}

+ (id)objectForKey:(id)arg1;
+ (id)internalizedSettings;
+ (void)configureWithURLs:(id)arg1;
+ (void)initialize;

@end

@interface _DT_GCDAsyncReadPacket : NSObject
{
    NSMutableData *buffer;
    unsigned int startOffset;
    unsigned int bytesDone;
    unsigned int maxLength;
    double timeout;
    unsigned int readLength;
    NSData *term;
    _Bool bufferOwner;
    unsigned int originalBufferLength;
    long tag;
}

- (void).cxx_destruct;
- (int)searchForTermAfterPreBuffering:(long)arg1;
- (unsigned int)readLengthForTermWithPreBuffer:(id)arg1 found:(_Bool *)arg2;
- (unsigned int)readLengthForTermWithHint:(unsigned int)arg1 shouldPreBuffer:(_Bool *)arg2;
- (unsigned int)readLengthForNonTermWithHint:(unsigned int)arg1;
- (unsigned int)optimalReadLengthWithDefault:(unsigned int)arg1 shouldPreBuffer:(_Bool *)arg2;
- (void)ensureCapacityForAdditionalDataOfLength:(unsigned int)arg1;
- (id)initWithData:(id)arg1 startOffset:(unsigned int)arg2 maxLength:(unsigned int)arg3 timeout:(double)arg4 readLength:(unsigned int)arg5 terminator:(id)arg6 tag:(long)arg7;

@end

@interface _DT_GCDAsyncSocket : NSObject
{
    unsigned int flags;
    unsigned short config;
    id delegate;
    NSObject<OS_dispatch_queue> *delegateQueue;
    int socket4FD;
    int socket6FD;
    int stateIndex;
    NSData *connectInterface4;
    NSData *connectInterface6;
    NSObject<OS_dispatch_queue> *socketQueue;
    NSObject<OS_dispatch_source> *accept4Source;
    NSObject<OS_dispatch_source> *accept6Source;
    NSObject<OS_dispatch_source> *connectTimer;
    NSObject<OS_dispatch_source> *readSource;
    NSObject<OS_dispatch_source> *writeSource;
    NSObject<OS_dispatch_source> *readTimer;
    NSObject<OS_dispatch_source> *writeTimer;
    NSMutableArray *readQueue;
    NSMutableArray *writeQueue;
    _DT_GCDAsyncReadPacket *currentRead;
    _DT_GCDAsyncWritePacket *currentWrite;
    unsigned long socketFDBytesAvailable;
    _DT_GCDAsyncSocketPreBuffer *preBuffer;
    struct {
        int version;
        void *info;
        CDUnknownFunctionPointerType retain;
        CDUnknownFunctionPointerType release;
        CDUnknownFunctionPointerType copyDescription;
    } streamContext;
    struct __CFReadStream *readStream;
    struct __CFWriteStream *writeStream;
    struct SSLContext *sslContext;
    _DT_GCDAsyncSocketPreBuffer *sslPreBuffer;
    unsigned long sslWriteCachedLength;
    long sslErrCode;
    void *IsOnSocketQueueOrTargetQueueKey;
    id userData;
}

+ (id)ZeroData;
+ (id)LFData;
+ (id)CRData;
+ (id)CRLFData;
+ (_Bool)getHost:(id *)arg1 port:(unsigned short *)arg2 family:(char *)arg3 fromAddress:(id)arg4;
+ (_Bool)getHost:(id *)arg1 port:(unsigned short *)arg2 fromAddress:(id)arg3;
+ (_Bool)isIPv6Address:(id)arg1;
+ (_Bool)isIPv4Address:(id)arg1;
+ (unsigned short)portFromAddress:(id)arg1;
+ (id)hostFromAddress:(id)arg1;
+ (unsigned short)portFromSockaddr6:(const struct sockaddr_in6 *)arg1;
+ (unsigned short)portFromSockaddr4:(const struct sockaddr_in *)arg1;
+ (id)hostFromSockaddr6:(const struct sockaddr_in6 *)arg1;
+ (id)hostFromSockaddr4:(const struct sockaddr_in *)arg1;
+ (id)lookupHost:(id)arg1 port:(unsigned short)arg2 error:(id *)arg3;
+ (void)unscheduleCFStreams:(id)arg1;
+ (void)scheduleCFStreams:(id)arg1;
+ (void)cfstreamThread;
+ (void)stopCFStreamThreadIfNeeded;
+ (void)startCFStreamThreadIfNeeded;
+ (void)ignore:(id)arg1;
+ (id)gaiError:(int)arg1;
- (void).cxx_destruct;
- (struct SSLContext *)sslContext;
- (_Bool)enableBackgroundingOnSocketWithCaveat;
- (_Bool)enableBackgroundingOnSocket;
- (_Bool)enableBackgroundingOnSocketWithCaveat:(_Bool)arg1;
- (struct __CFWriteStream *)writeStream;
- (struct __CFReadStream *)readStream;
- (int)socket6FD;
- (int)socket4FD;
- (int)socketFD;
- (void)performBlock:(CDUnknownBlockType)arg1;
- (void)unmarkSocketQueueTargetQueue:(id)arg1;
- (void)markSocketQueueTargetQueue:(id)arg1;
@property _Bool autoDisconnectOnClosedReadStream;
- (_Bool)openStreams;
- (void)removeStreamsFromRunLoop;
- (_Bool)addStreamsToRunLoop;
- (_Bool)registerForStreamCallbacksIncludingReadWrite:(_Bool)arg1;
- (_Bool)createReadAndWriteStream;
- (void)cf_startTLS;
- (void)cf_abortSSLHandshake:(id)arg1;
- (void)cf_finishSSLHandshake;
- (void)ssl_shouldTrustPeer:(_Bool)arg1 stateIndex:(int)arg2;
- (void)ssl_continueSSLHandshake;
- (void)ssl_startTLS;
- (long)sslWriteWithBuffer:(const void *)arg1 length:(unsigned int *)arg2;
- (long)sslReadWithBuffer:(void *)arg1 length:(unsigned int *)arg2;
- (void)maybeStartTLS;
- (void)startTLS:(id)arg1;
- (void)doWriteTimeoutWithExtension:(double)arg1;
- (void)doWriteTimeout;
- (void)setupWriteTimerWithTimeout:(double)arg1;
- (void)endCurrentWrite;
- (void)completeCurrentWrite;
- (void)doWriteData;
- (void)maybeDequeueWrite;
- (float)progressOfWriteReturningTag:(long *)arg1 bytesDone:(unsigned int *)arg2 total:(unsigned int *)arg3;
- (void)writeData:(id)arg1 withTimeout:(double)arg2 tag:(long)arg3;
- (void)doReadTimeoutWithExtension:(double)arg1;
- (void)doReadTimeout;
- (void)setupReadTimerWithTimeout:(double)arg1;
- (void)endCurrentRead;
- (void)completeCurrentRead;
- (void)doReadEOF;
- (void)doReadData;
- (void)flushSSLBuffers;
- (void)maybeDequeueRead;
- (float)progressOfReadReturningTag:(long *)arg1 bytesDone:(unsigned int *)arg2 total:(unsigned int *)arg3;
- (void)readDataToData:(id)arg1 withTimeout:(double)arg2 buffer:(id)arg3 bufferOffset:(unsigned int)arg4 maxLength:(unsigned int)arg5 tag:(long)arg6;
- (void)readDataToData:(id)arg1 withTimeout:(double)arg2 maxLength:(unsigned int)arg3 tag:(long)arg4;
- (void)readDataToData:(id)arg1 withTimeout:(double)arg2 buffer:(id)arg3 bufferOffset:(unsigned int)arg4 tag:(long)arg5;
- (void)readDataToData:(id)arg1 withTimeout:(double)arg2 tag:(long)arg3;
- (void)readDataToLength:(unsigned int)arg1 withTimeout:(double)arg2 buffer:(id)arg3 bufferOffset:(unsigned int)arg4 tag:(long)arg5;
- (void)readDataToLength:(unsigned int)arg1 withTimeout:(double)arg2 tag:(long)arg3;
- (void)readDataWithTimeout:(double)arg1 buffer:(id)arg2 bufferOffset:(unsigned int)arg3 maxLength:(unsigned int)arg4 tag:(long)arg5;
- (void)readDataWithTimeout:(double)arg1 buffer:(id)arg2 bufferOffset:(unsigned int)arg3 tag:(long)arg4;
- (void)readDataWithTimeout:(double)arg1 tag:(long)arg2;
- (void)resumeWriteSource;
- (void)suspendWriteSource;
- (void)resumeReadSource;
- (void)suspendReadSource;
- (_Bool)usingSecureTransportForTLS;
- (_Bool)usingCFStreamForTLS;
- (void)setupReadAndWriteSourcesForNewlyConnectedSocket:(int)arg1;
- (void)getInterfaceAddress4:(id *)arg1 address6:(id *)arg2 fromDescription:(id)arg3 port:(unsigned short)arg4;
@property(readonly) _Bool isSecure;
@property(readonly) _Bool isIPv6;
@property(readonly) _Bool isIPv4;
@property(readonly) NSData *localAddress;
@property(readonly) NSData *connectedAddress;
- (unsigned short)localPortFromSocket6:(int)arg1;
- (unsigned short)localPortFromSocket4:(int)arg1;
- (id)localHostFromSocket6:(int)arg1;
- (id)localHostFromSocket4:(int)arg1;
- (unsigned short)connectedPortFromSocket6:(int)arg1;
- (unsigned short)connectedPortFromSocket4:(int)arg1;
- (id)connectedHostFromSocket6:(int)arg1;
- (id)connectedHostFromSocket4:(int)arg1;
- (unsigned short)localPort6;
- (unsigned short)localPort4;
- (id)localHost6;
- (id)localHost4;
- (unsigned short)connectedPort6;
- (unsigned short)connectedPort4;
- (id)connectedHost6;
- (id)connectedHost4;
@property(readonly) unsigned short localPort;
@property(readonly) NSString *localHost;
@property(readonly) unsigned short connectedPort;
@property(readonly) NSString *connectedHost;
@property(readonly) _Bool isConnected;
@property(readonly) _Bool isDisconnected;
- (id)otherError:(id)arg1;
- (id)connectionClosedError;
- (id)writeTimeoutError;
- (id)readTimeoutError;
- (id)readMaxedOutError;
- (id)connectTimeoutError;
- (id)sslError:(long)arg1;
- (id)errnoError;
- (id)errnoErrorWithReason:(id)arg1;
- (id)badParamError:(id)arg1;
- (id)badConfigError:(id)arg1;
- (void)maybeClose;
- (void)disconnectAfterReadingAndWriting;
- (void)disconnectAfterWriting;
- (void)disconnectAfterReading;
- (void)disconnect;
- (void)closeWithError:(id)arg1;
- (void)doConnectTimeout;
- (void)endConnectTimeout;
- (void)startConnectTimeout:(double)arg1;
- (void)didNotConnect:(int)arg1 error:(id)arg2;
- (void)didConnect:(int)arg1;
- (_Bool)connectWithAddress4:(id)arg1 address6:(id)arg2 error:(id *)arg3;
- (void)lookup:(int)arg1 didFail:(id)arg2;
- (void)lookup:(int)arg1 didSucceedWithAddress4:(id)arg2 address6:(id)arg3;
- (_Bool)connectToAddress:(id)arg1 viaInterface:(id)arg2 withTimeout:(double)arg3 error:(id *)arg4;
- (_Bool)connectToAddress:(id)arg1 withTimeout:(double)arg2 error:(id *)arg3;
- (_Bool)connectToAddress:(id)arg1 error:(id *)arg2;
- (_Bool)connectToHost:(id)arg1 onPort:(unsigned short)arg2 viaInterface:(id)arg3 withTimeout:(double)arg4 error:(id *)arg5;
- (_Bool)connectToHost:(id)arg1 onPort:(unsigned short)arg2 withTimeout:(double)arg3 error:(id *)arg4;
- (_Bool)connectToHost:(id)arg1 onPort:(unsigned short)arg2 error:(id *)arg3;
- (_Bool)preConnectWithInterface:(id)arg1 error:(id *)arg2;
- (_Bool)doAccept:(int)arg1;
- (_Bool)acceptOnInterface:(id)arg1 port:(unsigned short)arg2 error:(id *)arg3;
- (_Bool)acceptOnPort:(unsigned short)arg1 error:(id *)arg2;
@property(retain) id userData;
@property(getter=isIPv4PreferredOverIPv6) _Bool IPv4PreferredOverIPv6;
@property(getter=isIPv6Enabled) _Bool IPv6Enabled;
@property(getter=isIPv4Enabled) _Bool IPv4Enabled;
- (void)synchronouslySetDelegate:(id)arg1 delegateQueue:(id)arg2;
- (void)setDelegate:(id)arg1 delegateQueue:(id)arg2;
- (void)setDelegate:(id)arg1 delegateQueue:(id)arg2 synchronously:(_Bool)arg3;
- (void)getDelegate:(id *)arg1 delegateQueue:(id *)arg2;
- (void)synchronouslySetDelegateQueue:(id)arg1;
@property(retain) NSObject<OS_dispatch_queue> *delegateQueue;
- (void)setDelegateQueue:(id)arg1 synchronously:(_Bool)arg2;
- (void)synchronouslySetDelegate:(id)arg1;
@property __weak id delegate;
- (void)setDelegate:(id)arg1 synchronously:(_Bool)arg2;
- (void)dealloc;
- (id)initWithDelegate:(id)arg1 delegateQueue:(id)arg2 socketQueue:(id)arg3;
- (id)initWithDelegate:(id)arg1 delegateQueue:(id)arg2;
- (id)initWithSocketQueue:(id)arg1;
- (id)init;

@end

@interface _DT_GCDAsyncSocketPreBuffer : NSObject
{
    char *preBuffer;
    unsigned long preBufferSize;
    char *readPointer;
    char *writePointer;
}

- (void)reset;
- (void)didWrite:(unsigned long)arg1;
- (void)getWriteBuffer:(char **)arg1 availableSpace:(unsigned int *)arg2;
- (char *)writeBuffer;
- (unsigned long)availableSpace;
- (void)didRead:(unsigned long)arg1;
- (void)getReadBuffer:(char **)arg1 availableBytes:(unsigned int *)arg2;
- (char *)readBuffer;
- (unsigned long)availableBytes;
- (void)ensureCapacityForWrite:(unsigned long)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long)arg1;

@end

@interface _DT_GCDAsyncSpecialPacket : NSObject
{
    NSDictionary *tlsSettings;
}

- (void).cxx_destruct;
- (id)initWithTLSSettings:(id)arg1;

@end

@interface _DT_GCDAsyncWritePacket : NSObject
{
    NSData *buffer;
    unsigned int bytesDone;
    long tag;
    double timeout;
}

- (void).cxx_destruct;
- (id)initWithData:(id)arg1 timeout:(double)arg2 tag:(long)arg3;

@end

@interface _GenericTapGuarded : NSObject
{
    _Bool _stoppedWhileSuspended;
    _Bool _removeArchivingPathWhenComplete;
    _Bool _running;
    _Bool _connectionEnabled;
    _Bool _paused;
    NSString *_UUID;
    id <DTTapDelegate> _delegate;
    CDUnknownBlockType _taskForPid;
    NSObject<OS_dispatch_source> *_internalSrc;
    int _suspendCount;
    DTTapConfig *_config;
    NSString *_errorString;
}

@property(retain, nonatomic) NSString *errorString; // @synthesize errorString=_errorString;
@property(nonatomic) _Bool paused; // @synthesize paused=_paused;
@property(nonatomic) _Bool connectionEnabled; // @synthesize connectionEnabled=_connectionEnabled;
@property(nonatomic) _Bool running; // @synthesize running=_running;
@property(nonatomic) _Bool removeArchivingPathWhenComplete; // @synthesize removeArchivingPathWhenComplete=_removeArchivingPathWhenComplete;
@property(retain, nonatomic) DTTapConfig *config; // @synthesize config=_config;
@property(nonatomic) _Bool stoppedWhileSuspended; // @synthesize stoppedWhileSuspended=_stoppedWhileSuspended;
@property(nonatomic) int suspendCount; // @synthesize suspendCount=_suspendCount;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *internalSrc; // @synthesize internalSrc=_internalSrc;
@property(copy, nonatomic) CDUnknownBlockType taskForPid; // @synthesize taskForPid=_taskForPid;
@property(retain, nonatomic) id <DTTapDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) NSString *UUID; // @synthesize UUID=_UUID;
- (void).cxx_destruct;
- (void)dealloc;
- (void)reset;

@end

@interface _XRExpiredPidCache : NSObject
{
    struct TFPPidWatcher pidWatcher;
    int enableCount;
    NSMutableDictionary *signatures;
}

- (void).cxx_destruct;

@end

