//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CGPoint {
    float _field1;
    float _field2;
};

struct CGRect {
    struct CGPoint _field1;
    struct CGSize _field2;
};

struct CGSize {
    float width;
    float height;
};

struct IBObjectIDHashEntry_tag {
    int _field1;
    id _field2;
};

struct _IBEdgeInsets {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
};

struct _NSRange {
    unsigned int _field1;
    unsigned int _field2;
};

#pragma mark Typedef'd Structures

typedef struct {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
} CDStruct_2a4d9400;

typedef struct {
    unsigned long _field1;
    id *_field2;
    unsigned long *_field3;
    unsigned long _field4[5];
} CDStruct_11f37819;

typedef struct {
    float minX;
    float minY;
    float maxX;
    float maxY;
} CDStruct_c64b4d12;

typedef struct {
    float _field1;
    float _field2;
    float _field3;
} CDStruct_869f9c67;

typedef struct {
    float _field1;
    float _field2;
} CDStruct_b2fbf00d;

typedef struct {
    int _field1;
    void *_field2[128];
    void **_field3;
    int _field4;
    int _field5;
} CDStruct_e249a1fc;

typedef struct {
    int _field1;
    int _field2;
} CDStruct_1ef3fb1f;

typedef struct {
    struct CGPoint _field1;
    struct CGPoint _field2;
} CDStruct_1678e38e;

#pragma mark Typedef'd Unions

typedef union {
    CDStruct_1ef3fb1f _field1;
    int _field2[2];
} CDUnion_2b5abd31;

#pragma mark -

//
// File: /Applications/Xcode-7GM.app/Contents/Developer/Platforms/WatchSimulator.platform/Developer/Library/PrivateFrameworks/IBFoundation.framework/IBFoundation
// UUID: 738F53E1-4754-3AC1-8E74-65A5F91C5709
//
//                           Arch: i386
//                Current version: 8191.0.0
//          Compatibility version: 1.0.0
//                 Source version: 8191.0.0.0.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol IBAbstractInterfaceBuilderTool <IBAbstractPlatformTool>
- (IBMarshallingResult *)renderImagesForRequests:(NSArray *)arg1;
- (IBMarshallingResult *)loadBuiltLiveViewBundleInstances:(NSArray *)arg1;
@end

@protocol IBAbstractPlatformTool <NSObject>
- (void)loadExtensions:(NSArray *)arg1;
@end

@protocol IBBinaryArchiving <NSObject>

@optional
+ (id)decodeWithBinaryUnarchiver:(IBBinaryUnarchiver *)arg1;
- (const char *)cStringClassNameForBinaryArchiver:(IBBinaryArchiver *)arg1;
- (void)didFinishDecodingWithBinaryUnarchiver:(IBBinaryUnarchiver *)arg1;
- (void)didFinishEncodingWithBinaryArchiver:(IBBinaryArchiver *)arg1;
- (void)encodeWithBinaryArchiver:(IBBinaryArchiver *)arg1;
- (id)initWithBinaryUnarchiver:(IBBinaryUnarchiver *)arg1;
@end

@protocol IBCollection <NSObject, NSCopying, NSFastEnumeration, NSMutableCopying>
+ (id)ib_collectionWithObject:(id)arg1;
+ (id)ib_emptyCollection;
+ (Class)ib_mutableClass;
- (void)ib_getObjects:(id *)arg1;
- (void)ib_removeObjectsInReceiverFromArray:(NSMutableArray *)arg1;
- (void)ib_removeObjectsInReceiverFromOrderedSet:(NSMutableOrderedSet *)arg1;
- (void)ib_removeObjectsInReceiverFromSet:(NSMutableSet *)arg1;
- (id)ib_maximumObjectUsingComparator:(int (^)(id, id))arg1;
- (id)ib_minimumObjectUsingComparator:(int (^)(id, id))arg1;
- (int)ib_numberOfObjectsPassingTest:(_Bool (^)(id))arg1;
- (NSArray *)ib_arrayByMappingBlock:(id (^)(id))arg1;
- (NSArray *)ib_arrayBySortingUsingComparator:(int (^)(id, id))arg1;
- (NSArray *)ib_arrayBySortingUsingSelector:(SEL)arg1 onKeyPath:(NSString *)arg2;
- (NSArray *)ib_arrayBySortingUsingSelector:(SEL)arg1;
- (void)ib_enumerateObjectsUsingMutatingBlock:(void (^)(id))arg1;
- (void)ib_enumerateCopyOfObjectsUsingBlock:(void (^)(id))arg1;
- (void)ib_enumerateObjectsUsingBlock:(void (^)(id))arg1;
- (id <IBCollection>)ib_collectionByMappingAndFilteringWithBlock:(id (^)(id))arg1;
- (id <IBCollection>)ib_collectionByRemovingObject:(id)arg1;
- (id <IBCollection>)ib_collectionByAddingObject:(id)arg1;
- (id <IBCollection>)ib_collectionByRemovingObjectsInSet:(NSSet *)arg1;
- (id <IBCollection>)ib_collectionByAddingObjectsFromCollection:(id <IBCollection>)arg1;
- (id <IBCollection>)ib_collectionByRemovingObjectsFromCollection:(id <IBCollection>)arg1;
- (id <IBCollection>)ib_collectionByMappingBlock:(id (^)(id))arg1;
- (id <IBCollection>)ib_collectionByFilteringUsingBlock:(_Bool (^)(id))arg1;
- (id <IBCollection>)ib_collectionByRemovingNulls;
- (id)ib_onlyObjectPassingTest:(_Bool (^)(id))arg1;
- (id)ib_firstObjectPassingTest:(_Bool (^)(id))arg1;
- (_Bool)ib_objectsAreStrictlyContainedBySet:(NSSet *)arg1;
- (_Bool)ib_objectsAreContainedBySet:(NSSet *)arg1;
- (_Bool)ib_anyObjectsPassTest:(_Bool (^)(id))arg1;
- (_Bool)ib_allObjectsPassTest:(_Bool (^)(id))arg1;
- (id)mutableCopy;
- (id)copy;
- (Class)ib_mutableClass;
- (NSEnumerator *)objectEnumerator;
- (NSSet *)ib_uniqueObjects;
- (NSArray *)allObjects;
- (id <IBCollection>)ib_objectsConformingToProtocol:(Protocol *)arg1;
- (id <IBCollection>)ib_objectsOfClass:(Class)arg1;
- (unsigned int)count;
- (_Bool)containsObject:(id)arg1;
- (id)ib_onlyObject;
- (id)anyObject;
@end

@protocol IBICCatalogFileManager <NSObject>
+ (id)ib_defaultManager;
- (void)ib_endBatchEdits;
- (void)ib_startBatchEdits;
- (_Bool)ib_moveItemsAtPaths:(NSArray *)arg1 toPaths:(NSArray *)arg2 error:(id *)arg3;
- (_Bool)ib_copyItemsAtPaths:(NSArray *)arg1 toPaths:(NSArray *)arg2 error:(id *)arg3;
- (_Bool)ib_addItemsAtPaths:(NSArray *)arg1 force:(_Bool)arg2 error:(id *)arg3;
- (_Bool)ib_removeItemsAtPaths:(NSArray *)arg1 moveToTrash:(_Bool)arg2 error:(id *)arg3;
- (_Bool)ib_createDirectoryAtPath:(NSString *)arg1 withIntermediateDirectories:(_Bool)arg2 attributes:(NSDictionary *)arg3 error:(id *)arg4;
@end

@protocol IBICDetailAreaKeyGroup <IBICDetailAreaKeyGroupIdentifier>
@end

@protocol IBICDetailAreaKeyGroupIdentifier <NSObject, NSCopying>
- (IBICSlotComponent *)ib_onlyComponent;
@end

@protocol IBICDetailAreaKeySection <IBICDetailAreaKeyGroupIdentifier>
@end

@protocol IBICDetailAreaKeySubgroup <IBICDetailAreaKeyGroupIdentifier>
@end

@protocol IBICSchemaProvider <NSObject>
- (void)registerSchemaComponents:(IBICSchema *)arg1;
- (float)precedence;

@optional
+ (void)setContextDataFromCallingHost:(id)arg1;
+ (id)contextDataForRemoteTool;
+ (_Bool)supportsRemoteToolsTargetingPlatformNamed:(NSString *)arg1;
@end

@protocol IBICSingularContentReferencingItem <NSObject>
- (Class)expectedReferenceType;
- (IBICCatalogContentReference *)contentReference;
- (void)setContentReference:(IBICCatalogContentReference *)arg1;
@end

@protocol IBICSlottedAssetIssueProvider <NSObject>
- (void)populateIssues:(NSMutableArray *)arg1 forSlottedAsset:(IBICSlottedAsset *)arg2 withContext:(IBICIssueGenerationContext *)arg3;
@end

@protocol IBInvalidation <NSObject>
- (void)invalidate;
@end

@protocol IBMessageReceiveChannelTarget <NSObject>
- (void)messageReceiveChannel:(IBMessageReceiveChannel *)arg1 didDeliverMesssage:(SEL)arg2;
- (void)messageReceiveChannel:(IBMessageReceiveChannel *)arg1 willDeliverMesssage:(SEL)arg2;
- (NSException *)messageReceiveChannel:(IBMessageReceiveChannel *)arg1 preprocessException:(NSException *)arg2;
- (void)messageReceiveChannel:(IBMessageReceiveChannel *)arg1 shutdownWithError:(NSError *)arg2;
- (void)messageReceiveChannelShutdown:(IBMessageReceiveChannel *)arg1;

@optional
- (NSObject<OS_dispatch_queue> *)messageReceiveChannelQueueForShutdownNotification:(IBMessageReceiveChannel *)arg1;
- (NSObject<OS_dispatch_queue> *)messageReceiveChannel:(IBMessageReceiveChannel *)arg1 queueForReceivingMessage:(SEL)arg2;
@end

@protocol IBMutableCollection <IBCollection>
- (void)ib_removeObjectsInCollection:(id <IBCollection>)arg1;
- (void)ib_addObjectsFromCollection:(id <IBCollection>)arg1;
- (void)ib_addObjectIfNonNil:(id)arg1;
- (void)ib_appendObjects:(id)arg1;
- (void)removeObject:(id)arg1;
- (void)addObject:(id)arg1;
@end

@protocol IBMutableOrderedCollection <IBOrderedCollection, IBMutableCollection>
- (void)sortUsingComparator:(int (^)(id, id))arg1;
- (void)ib_addObjectToSortedCollectionUsingBinarySearch:(id)arg1 comparisonSelector:(SEL)arg2;
- (void)ib_addObjectToSortedCollectionUsingBinarySearch:(id)arg1 comparator:(int (^)(id, id))arg2;
- (void)ib_insertObjects:(id <IBCollection>)arg1 atIndex:(int)arg2;
- (void)insertObject:(id)arg1 atIndex:(int)arg2;
@end

@protocol IBObjectRepresentationTranslator <NSObject>
- (NSObject *)objectForObjectRepresentation:(NSString *)arg1;
- (NSString *)objectRepresentationForObject:(NSObject *)arg1;
@end

@protocol IBOrderedCollection <IBCollection>
+ (id)ib_orderedCollectionWithOrderedCollection:(id <IBOrderedCollection>)arg1;
- (unsigned int)indexOfObject:(id)arg1 inSortedRange:(struct _NSRange)arg2 options:(unsigned int)arg3 usingComparator:(int (^)(id, id))arg4;
- (id)lastObject;
- (id)firstObject;
- (int)indexOfObject:(id)arg1;
- (id)objectAtIndex:(unsigned int)arg1;
- (_Bool)ib_binarySearchForObject:(id)arg1 usingComparator:(int (^)(id, id))arg2;
- (unsigned int)ib_indexOfFirstObjectPassingTest:(_Bool (^)(id))arg1;
- (id <IBOrderedCollection>)ib_collectionByReversingObjects;
- (id <IBOrderedCollection>)ib_collectionByRemovingObject:(id)arg1;
- (id <IBOrderedCollection>)ib_collectionByInsertingObjects:(id <IBCollection>)arg1 atIndex:(int)arg2;
- (id <IBOrderedCollection>)ib_collectionByInsertingObject:(id)arg1 atIndex:(int)arg2;
- (id <IBOrderedCollection>)ib_collectionByAddingObject:(id)arg1;
- (id <IBOrderedCollection>)ib_collectionByAddingObjectsFromCollection:(id <IBCollection>)arg1;
- (id)ib_collectionByKeepingObjectsInSet:(NSSet *)arg1;
- (id <IBOrderedCollection>)ib_collectionByMappingAndFilteringWithBlock:(id (^)(id))arg1;
- (id <IBOrderedCollection>)ib_collectionByRemovingObjectsInSet:(NSSet *)arg1;
- (id <IBOrderedCollection>)ib_collectionByRemovingObjectsFromCollection:(id <IBCollection>)arg1;
- (id <IBOrderedCollection>)ib_collectionByMappingBlock:(id (^)(id))arg1;
- (id <IBOrderedCollection>)ib_collectionByFilteringUsingBlock:(_Bool (^)(id))arg1;
- (id <IBOrderedCollection>)ib_collectionByRemovingNulls;
- (id <IBOrderedCollection>)ib_objectsConformingToProtocol:(Protocol *)arg1;
- (id <IBOrderedCollection>)ib_objectsOfClass:(Class)arg1;
- (id)initWithObjects:(const id *)arg1 count:(unsigned int)arg2;
@end

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSFastEnumeration
- (unsigned int)countByEnumeratingWithState:(CDStruct_11f37819 *)arg1 objects:(id *)arg2 count:(unsigned int)arg3;
@end

@protocol NSMutableCopying
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned int hash;
- (struct _NSZone *)zone;
- (unsigned int)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@interface IBAbstractPlatformTool : NSObject <IBAbstractPlatformTool, IBMessageReceiveChannelTarget>
{
    NSMutableArray *_messageContext;
    _Bool _canceled;
}

+ (void)main;
+ (id)sharedInstance;
@property(readonly, getter=isCanceled) _Bool canceled; // @synthesize canceled=_canceled;
- (void).cxx_destruct;
- (void)messageReceiveChannel:(id)arg1 didDeliverMesssage:(SEL)arg2;
- (void)messageReceiveChannel:(id)arg1 willDeliverMesssage:(SEL)arg2;
- (void)keepPersistentObjectInContext:(id)arg1;
- (void)loadExtensions:(id)arg1;
- (void)startServingWriteDescriptor:(int)arg1 readDescriptor:(int)arg2;
- (void)startServingSocket:(int)arg1;
- (void)startServingReceiveChannel:(id)arg1;
- (_Bool)shouldExitWhenStandardInputCloses;
- (_Bool)shouldStartEventProcessingRunloop;
- (id)messageReceiveChannel:(id)arg1 preprocessException:(id)arg2;
- (void)messageReceiveChannel:(id)arg1 shutdownWithError:(id)arg2;
- (void)messageReceiveChannelShutdown:(id)arg1;
- (id)messageReceiveChannel:(id)arg1 queueForReceivingMessage:(SEL)arg2;
- (id)messageReceiveChannelQueueForShutdownNotification:(id)arg1;
- (void)runMessageChannel:(id)arg1;
- (id)context;
- (void)standardInputClosed;
- (void)initializeWithArguments:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

@interface IBAbstractInterfaceBuilderTool : IBAbstractPlatformTool <IBAbstractInterfaceBuilderTool>
{
    NSMutableSet *_loadedLiveViewBundlePaths;
    NSMutableSet *_loadedLiveViewEnvironmentProjectPaths;
}

- (void).cxx_destruct;
- (id)renderImagesForRequests:(id)arg1;
- (id)loadBuiltLiveViewBundleInstances:(id)arg1;
- (id)_resultByLoadingUnloadedBundleInstance:(id)arg1;
- (id)_errorResultForFailingToLoadBundle:(id)arg1 viaNSBundleWithError:(id)arg2;
- (id)_errorResultForFailingToLoadBundle:(id)arg1 viaDLOpenWithError:(const char *)arg2;
- (void)_appendProjectSourcePathToEnvironment:(id)arg1 forTargetName:(id)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

@interface IBBinaryArchiver : NSObject
{
    IBBinaryArchiverObjectIDTable *objectToOIDMap;
    struct {
        unsigned int length;
        unsigned int capacity;
        char *bytes;
    } buffer;
    unsigned int nextOID;
    _Bool finished;
    NSData *archiveData;
    int archiveVersion;
    NSMutableArray *_objectTranslationDelegateStack;
    NSDictionary *_context;
}

+ (id)archivedDataWithRootObject:(id)arg1 version:(int)arg2 context:(id)arg3;
+ (id)archiveDataWithVersion:(int)arg1 context:(id)arg2 byRunningBlock:(CDUnknownBlockType)arg3;
@property(readonly, nonatomic) NSDictionary *context; // @synthesize context=_context;
@property(readonly, nonatomic) int archiveVersion; // @synthesize archiveVersion;
@property(readonly) NSData *archiveData; // @synthesize archiveData;
- (void).cxx_destruct;
- (void)encodeObjectReferenceIfPossible:(id)arg1;
- (void)encodeObject:(id)arg1;
- (void)encodeClass:(Class)arg1;
- (void)encodeCStringClassName:(const char *)arg1;
- (void)encodeObjectReference:(id)arg1;
- (void)encodeUTF8RepresentationOfString:(id)arg1;
- (void)encodeRange:(struct _NSRange)arg1;
- (void)encodeInset:(CDStruct_c64b4d12)arg1;
- (void)encodeCGRect:(struct CGRect)arg1;
- (void)encodeCGSize:(struct CGSize)arg1;
- (void)encodeCGPoint:(struct CGPoint)arg1;
- (void)encodeCGFloat:(float)arg1;
- (void)encodeDouble:(double)arg1;
- (void)encodeBool:(_Bool)arg1;
- (void)encodeUnsignedInteger:(unsigned int)arg1;
- (void)encodeUInt64:(unsigned long long)arg1;
- (void)encodeInteger:(int)arg1;
- (void)encodeInt64:(long long)arg1;
- (void)encodeBytes:(const char *)arg1 length:(unsigned int)arg2;
- (void)encodeHeader;
- (void)finishEncoding;
- (void)popObjectTranslationDelegate:(id)arg1;
- (void)pushObjectTranslationDelegate:(id)arg1;
@property(readonly, nonatomic) __weak NSObject<IBObjectRepresentationTranslator> *currentObjectTranslationDelegate;
- (void)dealloc;
- (id)initWithVersion:(int)arg1 context:(id)arg2;

@end

@interface IBBinaryArchiverObjectIDTable : NSObject
{
    struct IBObjectIDHashEntry_tag *table;
    int capacity;
    int count;
}

- (void)addObject:(id)arg1 withObjectID:(int)arg2;
- (int)objectIDForObject:(id)arg1;
- (void)rehash;
- (void)dealloc;
- (id)initWithCapacity:(int)arg1;

@end

@interface IBBinaryUnarchiver : NSObject
{
    NSMutableDictionary *overrideClassesByClassName;
    NSMutableArray *objectsIndexedByOID;
    unsigned int currentDataBufferIndex;
    int archiveVersion;
    NSData *data;
    struct {
        unsigned int length;
        union {
            char *bytes;
            char *characters;
        } ;
    } buffer;
    NSMutableArray *_objectTranslationDelegateStack;
    NSDictionary *_context;
}

+ (Class)classForClassName:(id)arg1;
+ (void)setClass:(Class)arg1 forClassName:(id)arg2;
+ (id)_globalClassByClassNameMap;
+ (id)unarchiveObjectWithData:(id)arg1 context:(id)arg2 minArchiveVersion:(int)arg3;
+ (id)unarchiveObjectWithData:(id)arg1 context:(id)arg2;
@property(readonly, nonatomic) NSDictionary *context; // @synthesize context=_context;
@property(readonly, nonatomic) int archiveVersion; // @synthesize archiveVersion;
- (void).cxx_destruct;
- (Class)classForClassName:(id)arg1;
- (void)setClass:(Class)arg1 forClassName:(id)arg2;
- (Class)decodeClass;
- (id)decodeUTF8String;
- (id)decodeObjectReferenceIfPossible;
- (id)decodeObject;
- (id)decodeObjectReference;
- (struct _NSRange)decodeRange;
- (CDStruct_c64b4d12)decodeInset;
- (struct CGRect)decodeCGRect;
- (struct CGSize)decodeCGSize;
- (struct CGPoint)decodeCGPoint;
- (float)decodeCGFloat;
- (unsigned int)decodeUnsignedInteger;
- (int)decodeInteger;
- (double)decodeDouble;
- (_Bool)decodeBool;
- (unsigned long long)decodeUInt64;
- (long long)decodeInt64;
- (void)decodeBytes:(CDUnknownBlockType)arg1;
- (const char *)internalOnlyDecodeBytesWithLength:(unsigned int *)arg1;
- (_Bool)nextStructureTypeIsObject;
- (void)popObjectTranslationDelegate:(id)arg1;
- (void)pushObjectTranslationDelegate:(id)arg1;
@property(readonly, nonatomic) __weak NSObject<IBObjectRepresentationTranslator> *currentObjectTranslationDelegate;
- (id)initForReadingWithData:(id)arg1 context:(id)arg2;

@end

@interface IBBuiltLiveViewsBundleInstance : NSObject <IBBinaryArchiving>
{
    NSString *_bundlePath;
    NSString *_projectSourceDirectory;
    NSString *_targetName;
}

@property(readonly, nonatomic) NSString *targetName; // @synthesize targetName=_targetName;
@property(readonly, nonatomic) NSString *projectSourceDirectory; // @synthesize projectSourceDirectory=_projectSourceDirectory;
@property(readonly, nonatomic) NSString *bundlePath; // @synthesize bundlePath=_bundlePath;
- (void).cxx_destruct;
- (void)encodeWithBinaryArchiver:(id)arg1;
- (id)initWithBinaryUnarchiver:(id)arg1;
- (id)initWithBuiltPath:(id)arg1 projectSourceDirectory:(id)arg2 targetName:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

@interface IBCFMutableDictionary : NSMutableDictionary
{
}

- (id)initWithCoder:(id)arg1;

@end

@interface IBCustomViewDrawingDescription : NSObject <IBBinaryArchiving>
{
    id <IBBinaryArchivableColor> _customViewDarkTexturedBorderColor;
    id <IBBinaryArchivableColor> _customViewDarkBorderColor;
    id <IBBinaryArchivableColor> _customViewLightBorderColor;
    id <IBBinaryArchivableColor> _containerCustomViewBackgroundColor;
    id <IBBinaryArchivableColor> _childlessCustomViewBackgroundColor;
    id <IBBinaryArchivableColor> _containerCustomViewTextColor;
    id <IBBinaryArchivableColor> _childlessCustomViewTextColor;
    float _borderThickness;
}

@property(nonatomic) float borderThickness; // @synthesize borderThickness=_borderThickness;
@property(retain, nonatomic) id <IBBinaryArchivableColor> childlessCustomViewTextColor; // @synthesize childlessCustomViewTextColor=_childlessCustomViewTextColor;
@property(retain, nonatomic) id <IBBinaryArchivableColor> containerCustomViewTextColor; // @synthesize containerCustomViewTextColor=_containerCustomViewTextColor;
@property(retain, nonatomic) id <IBBinaryArchivableColor> childlessCustomViewBackgroundColor; // @synthesize childlessCustomViewBackgroundColor=_childlessCustomViewBackgroundColor;
@property(retain, nonatomic) id <IBBinaryArchivableColor> containerCustomViewBackgroundColor; // @synthesize containerCustomViewBackgroundColor=_containerCustomViewBackgroundColor;
@property(retain, nonatomic) id <IBBinaryArchivableColor> customViewLightBorderColor; // @synthesize customViewLightBorderColor=_customViewLightBorderColor;
@property(retain, nonatomic) id <IBBinaryArchivableColor> customViewDarkBorderColor; // @synthesize customViewDarkBorderColor=_customViewDarkBorderColor;
@property(retain, nonatomic) id <IBBinaryArchivableColor> customViewDarkTexturedBorderColor; // @synthesize customViewDarkTexturedBorderColor=_customViewDarkTexturedBorderColor;
- (void).cxx_destruct;
- (void)encodeWithBinaryArchiver:(id)arg1;
- (id)initWithBinaryUnarchiver:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

@interface IBICAbstractCatalogItem : NSObject <NSCoding>
{
    NSDictionary *_cachedChildrenByIdentifier;
    NSArray *_cachedDisplayOrderedChildren;
    NSOrderedSet *_intrinsicallyOrderedChildren;
    NSArray *_itemObservers;
    IBICAbstractCatalogItem *_parent;
    NSMutableDictionary *_cachedDisplayValues;
    int _changeCount;
    int _descendantChangeCount;
    NSString *_fileName;
    NSString *_explicitContainingDirectory;
    NSURL *_absoluteFileURL;
    NSDate *_modificationDate;
    NSDate *_manifestModificationDate;
    NSSet *_children;
    NSSet *_explicitTags;
}

+ (id)fileUTIsToAllowInUnstructuredImport;
+ (id)fileExtensionsToAllowInUnstructuredImport;
+ (id)syntehsizeItemsFromLoosePaths:(id)arg1 claimingPaths:(id *)arg2;
+ (id)importPriority;
+ (id)contentReferenceTypeName;
+ (id)catalogItemFileExtension;
+ (id)defaultEmbeddedInstanceForIdioms:(id)arg1;
+ (_Bool)isAbstractCatalogItemClass;
+ (id)defaultInstanceForIdioms:(id)arg1;
+ (id)validSourceFileUTIs;
+ (id)validSourceFileNameExtensions;
+ (id)displayOrderOfItems:(id)arg1;
+ (void)populateDisplayOrder:(id)arg1 fromUnorderedItems:(id)arg2 whileRecursingTree:(id)arg3;
+ (_Bool)areItemsSiblings:(id)arg1;
+ (id)mostSeniorItemsOfItems:(id)arg1;
+ (id)allAncestorsOfItemsIncludingItems:(id)arg1;
+ (id)allDescendantsOfItemsIncludingItems:(id)arg1;
+ (_Bool)areItemsFromSameRoot:(id)arg1;
+ (id)pluralTypeNameForIssues;
+ (id)typeNameForIssues;
+ (id)classNameComponents;
+ (id)uniqueKeyForCatalogCompilationSelection;
+ (Class)requiredParentClass;
+ (Class)requiredChildrenClass;
+ (_Bool)canHostItems:(id)arg1;
+ (_Bool)canHostItemsOfClass:(Class)arg1;
+ (id)keysThatImpactDisplayOrder;
+ (id)keysThatImpactIdentifier;
+ (_Bool)displayNameIsItemName;
+ (_Bool)itemNameIsFileNameWithoutCatalogExtension;
+ (void)updateModificationDatesOfItem:(id)arg1 withMutationResult:(id)arg2;
+ (id)itemWithCopyOfContentAtPath:(id)arg1;
+ (id)itemWithContentsOfPath:(id)arg1;
+ (id)itemWithItemName:(id)arg1;
+ (id)itemWithContentsOfPath:(id)arg1 results:(id)arg2;
+ (id)allocWithZone:(struct _NSZone *)arg1;
@property(copy, nonatomic) NSSet *explicitTags; // @synthesize explicitTags=_explicitTags;
@property(readonly, nonatomic) NSOrderedSet *intrinsicallyOrderedChildren; // @synthesize intrinsicallyOrderedChildren=_intrinsicallyOrderedChildren;
@property(readonly, nonatomic) NSSet *children; // @synthesize children=_children;
@property(readonly, nonatomic) __weak IBICAbstractCatalogItem *parent; // @synthesize parent=_parent;
@property(readonly, nonatomic) NSDate *manifestModificationDate; // @synthesize manifestModificationDate=_manifestModificationDate;
@property(readonly, nonatomic) NSDate *modificationDate; // @synthesize modificationDate=_modificationDate;
@property(copy, nonatomic) NSURL *absoluteFileURL; // @synthesize absoluteFileURL=_absoluteFileURL;
@property(copy, nonatomic) NSString *explicitContainingDirectory; // @synthesize explicitContainingDirectory=_explicitContainingDirectory;
@property(copy, nonatomic) NSString *fileName; // @synthesize fileName=_fileName;
@property int descendantChangeCount; // @synthesize descendantChangeCount=_descendantChangeCount;
@property int changeCount; // @synthesize changeCount=_changeCount;
- (void).cxx_destruct;
- (id)flushCachedDisplayValuesAndRecursivelyNotifyAboutDisplayPropertiesChanged;
- (id)flushCachedDisplayValues;
- (id)cachedValueForDisplayProperty:(id)arg1;
- (void)setCachedValue:(id)arg1 forDisplayProperty:(id)arg2;
- (id)requiredSizeForChild:(id)arg1;
- (id)nameForContentReferenceMatchingWithStyle:(int)arg1;
- (void)replaceChildrenFromFileSystemSnapshot:(id)arg1 results:(id)arg2;
- (id)childOnPathToDescendant:(id)arg1;
- (id)itemsFromReceiverToAncestor:(id)arg1;
- (id)itemsFromParentToRoot;
- (id)itemsFromRootToReceiver;
- (void)enumerateItemsFromParentToRoot:(CDUnknownBlockType)arg1;
- (void)enumerateItemsFromRootToReceiverWithBlock:(CDUnknownBlockType)arg1;
- (_Bool)isItemOrDescendantOfItem:(id)arg1;
- (_Bool)isDescendantOfItem:(id)arg1;
- (_Bool)isItemOrAncestorOfItem:(id)arg1;
- (_Bool)isAncestorOfItem:(id)arg1;
- (id)allDescendantsExcludingReceiver;
- (id)allDescendantsIncludingReceiver;
- (id)catalog;
- (id)enclosingFolderExcludingReceiver;
- (id)enclosingFolderIncludingReceiver;
- (id)enclosingItemOfClass:(Class)arg1 includingReceiver:(_Bool)arg2;
- (id)enclosingItemThatCanHostItems:(id)arg1 includingReceiver:(_Bool)arg2;
- (id)firstEnclosingItemIncludingReceiver:(_Bool)arg1 passingTest:(CDUnknownBlockType)arg2;
- (id)rootItem;
- (void)recursivelyNotifyAboutDisplayPropertiesChanged;
- (void)recursivelyNotifyAboutDidChange:(CDUnknownBlockType)arg1;
- (void)recursivelyNotifyAboutChangeToObject:(id)arg1 forKey:(id)arg2 oldValue:(id)arg3 newValue:(id)arg4 itemWithDisplayOrderChange:(id)arg5;
- (void)recursivelyNotifyAboutPendingChangeToObject:(id)arg1 forKey:(id)arg2 oldValue:(id)arg3 newValue:(id)arg4 itemWithDisplayOrderChange:(id)arg5;
- (void)mutateAndNotifyObserversAboutChangesToKey:(id)arg1 oldValue:(id)arg2 newValue:(id)arg3 mutator:(CDUnknownBlockType)arg4;
- (void)updateDescendantChangeCount;
- (void)updateChangeCount;
- (id)descriptionShortClassName;
- (id)pluralTypeNameForIssues;
- (id)typeNameForIssues;
- (void)populateIssues:(id)arg1 context:(id)arg2;
- (_Bool)exportToURL:(id)arg1 error:(id *)arg2;
- (id)fileWrapperRepresentationWithOptions:(unsigned int)arg1;
- (id)addItemObserver:(id)arg1;
- (_Bool)anyChildExcept:(id)arg1 hasConflictingFileName:(id)arg2;
@property(readonly, nonatomic) NSSet *allTags;
@property(readonly) NSSet *implicitTags;
- (_Bool)supportsExplicitTagging;
- (_Bool)isolatesAndConsolidatesContainedContent;
- (_Bool)isIsolatedAndConsolidatedByAncestor;
- (void)enumeratePropagationTargetsGivenCandidates:(id)arg1 enumerator:(CDUnknownBlockType)arg2;
- (CDStruct_2a4d9400)taggingSupport;
- (int)displayIndexOfChildWithIdentifier:(id)arg1;
- (id)nextValidNameForSuggestedFileName:(id)arg1;
- (id)nextValidNameForSuggestedFileName:(id)arg1 forChild:(id)arg2;
- (id)descendantForRelativeIdentifierPath:(id)arg1;
- (id)descendantsForRelativeIdentifierPaths:(id)arg1;
- (id)childrenWithFileName:(id)arg1;
- (int)numberOfChildrenWithFileName:(id)arg1;
- (id)childForIdentifier:(id)arg1;
- (id)description;
- (id)debugDescription;
- (id)descriptionWithIndent:(int)arg1 includeChildren:(_Bool)arg2;
- (void)enumerateDescriptionAttributeComponents:(CDUnknownBlockType)arg1;
- (void)populateMutatorsToAddRequiredChildCounterparts:(id)arg1;
- (void)removeAllChildren;
- (void)removeFromParent;
- (void)addChildren:(id)arg1;
- (void)removeChildren:(id)arg1;
- (void)removeChild:(id)arg1;
- (void)addChild:(id)arg1 andUpdateIdentifierToBeUnique:(_Bool)arg2;
- (void)updateIdentifierOfIncommingChildToBeUnique:(id)arg1;
- (void)addChild:(id)arg1;
- (void)insertChild:(id)arg1 atIndex:(id)arg2;
@property(readonly, nonatomic) int childOrdering;
- (id)fullyQualifiedRuntimeNameProvidingItemForCARCompiler;
- (id)fullyQualifiedRuntimeName;
- (id)fullyQualifiedRuntimeNameWithSeparator:(id)arg1;
- (id)runtimeNamespaceQualifier;
- (id)effectiveUnqualifiedRuntimeName;
- (id)defaultUnqualifiedRuntimeName;
- (id)overridingUnqualifiedRuntimeNameForChild:(id)arg1;
- (_Bool)hasAncestorsQualifyingRuntimeName;
- (_Bool)requiresRootNamespace;
- (void)assertChildIsLegalToAdd:(id)arg1;
- (int)displayPositionForProposedChild:(id)arg1 temporarilyValidatingFileName:(_Bool)arg2;
@property(readonly, nonatomic) NSArray *displayOrderedChildren;
- (id)recomupteDisplayOrderedChildren;
- (int)compareDisplayOrder:(id)arg1;
@property(readonly) NSString *absoluteManifestFilePath;
@property(readonly) NSDictionary *manifestContent;
@property(readonly) NSData *manifestFileData;
@property(readonly) NSString *manifestFileName;
@property(readonly, nonatomic) NSString *relativeFilePathFromRoot;
@property(readonly, nonatomic) NSString *relativeIdentifierPath;
@property(copy, nonatomic) NSString *absoluteFilePath;
- (id)effectiveContainingDirectory;
@property(readonly, nonatomic) _Bool canBeEmbeddedInFolder;
@property(readonly, nonatomic) _Bool canHaveChildren;
@property(readonly, nonatomic) NSString *identifier;
@property(readonly, nonatomic) NSString *nameForIssues;
@property(copy, nonatomic) NSString *itemName;
@property(readonly, nonatomic) NSString *shortDisplayName;
@property(readonly, nonatomic) NSString *displayName;
- (id)validatedFileNameForProposedDisplayName:(id)arg1;
- (id)validatedFileNameForProposedItemName:(id)arg1;
- (id)itemNameForProposedFileName:(id)arg1;
- (id)fileNameForProposedItemName:(id)arg1;
- (id)validatedFileNameForProposedFileName:(id)arg1;
- (_Bool)updateModificationDatesWithMutationResult:(id)arg1;
- (void)setAssetDataFromPath:(id)arg1;
@property(copy, nonatomic) NSData *assetData;
@property(readonly, nonatomic) IBICAbstractCatalogItem *effectiveNodeForIssueGenerationForCARCompiler;
@property(readonly, nonatomic) NSDate *effectiveModificationDateForCARCompiler;
- (void)updateManifestModificationDate:(id)arg1;
- (_Bool)isSynchronizedWithSnapshot:(id)arg1;
- (_Bool)fileStructureSnapshotChildWouldMapToModelChild:(id)arg1;
@property(readonly) _Bool isBrokenFileReference;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)init;
- (_Bool)populateNamedAssetImportInfo:(id)arg1 allCompiledItems:(id)arg2 error:(id *)arg3;
- (Class)manifestArchivist:(id)arg1 childClassForChildEntry:(id)arg2 results:(id)arg3;
- (void)manifestArchivist:(id)arg1 finishCreatingChildren:(CDStruct_e249a1fc *)arg2;
- (int)manifestArchivist:(id)arg1 orderChildrenForSlotConflictResolutionByComparing:(id)arg2 to:(id)arg3;
- (void)manifestArchivist:(id)arg1 applyPropertiesToLooseFileSystemChild:(id)arg2 fromSnapshot:(id)arg3;
- (_Bool)manifestArchivist:(id)arg1 validateManifestChildEntry:(id)arg2 results:(id)arg3;
- (void)manifestArchivist:(id)arg1 applyPropertiesFromChildEntry:(id)arg2 toChild:(id)arg3 results:(id)arg4;
- (void)manifestArchivist:(id)arg1 populateManifestEntry:(id)arg2 forChild:(id)arg3;
- (_Bool)manifestArchivist:(id)arg1 childHasDataToRecordInManifest:(id)arg2;
- (void)manifestArchivist:(id)arg1 populateManifest:(id)arg2;
- (void)manifestArchivist:(id)arg1 populateInfoDictionary:(id)arg2;
- (void)manifestArchivist:(id)arg1 applyPropertiesFromManifest:(id)arg2;
- (_Bool)manifestArchivist:(id)arg1 validateManifest:(id)arg2 results:(id)arg3;
- (CDStruct_869f9c67)manifestArchivistCompatibilityVersionInfo:(id)arg1;
- (void)manifestArchivist:(id)arg1 setConflictState:(unsigned int)arg2 forChild:(id)arg3;
- (void)manifestArchivist:(id)arg1 setSlot:(id)arg2 forChild:(id)arg3;
- (unsigned int)manifestArchivist:(id)arg1 conflictStateForChild:(id)arg2;
- (id)manifestArchivist:(id)arg1 slotForChild:(id)arg2;
- (Class)manifestArchivistSlotClassForChildren:(id)arg1;
- (void)enumerateSizeProvidingItemsForValidatingBrandAssetCollection:(CDUnknownBlockType)arg1;

@end

@interface IBICCatalogMutator : NSObject
{
}

+ (void)applyMutatorsToModelOutsideOfDocumentContext:(id)arg1;
+ (id)fileManager;
+ (Class)fileManagerClass;
+ (void)setFileManagerClass:(Class)arg1;
+ (void)initialize;
- (id)updateDiskMutationResult:(id)arg1 byUpdatingManifestData:(id)arg2 atPath:(id)arg3 error:(id *)arg4;
- (_Bool)isNoOp;
@property(readonly) NSString *mutationDescription;
- (id)inverseMutator;
- (void)applyToDiskWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)applyToModel;
- (id)fileManager;

@end

@interface IBICAddMutator : IBICCatalogMutator
{
    IBICAbstractCatalogItem *_item;
    IBICAbstractCatalogItem *_parent;
    NSFileWrapper *_fileWrapper;
    NSURL *_fileURL;
    _Bool _isFirstReference;
    int _namingStrategy;
    NSString *_explicitFileName;
    NSString *_originalFileName;
    NSData *_pendingManifestData;
    NSString *_pendingManifestPath;
    NSNumber *_optionalIndex;
}

- (void).cxx_destruct;
- (id)inverseMutator;
- (id)mutationDescription;
- (void)applyToDiskWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)applyToModel;
- (id)initWithItem:(id)arg1 parent:(id)arg2 atOptionalIndex:(id)arg3 namingStrategy:(int)arg4 stategyOptions:(id)arg5;

@end

@interface IBICSlottedAsset : IBICAbstractCatalogItem
{
    IBICManifestArchivist *_manifestArchivist;
}

+ (id)fileUTIsToAllowInUnstructuredImport;
+ (id)fileExtensionsToAllowInUnstructuredImport;
+ (id)syntehsizeItemsFromLoosePaths:(id)arg1 claimingPaths:(id *)arg2;
+ (Class)repIdentifierClass;
+ (Class)slotClass;
+ (id)keysThatImpactIdentifier;
+ (Class)requiredChildrenClass;
+ (Class)assetRepClass;
+ (id)catalogItemFileExtension;
+ (id)defaultInstanceForIdioms:(id)arg1;
+ (id)defaultName;
+ (_Bool)isAbstractCatalogItemClass;
- (void).cxx_destruct;
- (id)requiredCounterpartsMask;
- (id)suggestionSetMaskForSuggestionSet:(id)arg1;
- (int)manifestArchivist:(id)arg1 orderChildrenForSlotConflictResolutionByComparing:(id)arg2 to:(id)arg3;
- (void)manifestArchivist:(id)arg1 setConflictState:(unsigned int)arg2 forChild:(id)arg3;
- (void)manifestArchivist:(id)arg1 setSlot:(id)arg2 forChild:(id)arg3;
- (unsigned int)manifestArchivist:(id)arg1 conflictStateForChild:(id)arg2;
- (id)manifestArchivist:(id)arg1 slotForChild:(id)arg2;
- (Class)manifestArchivistSlotClassForChildren:(id)arg1;
- (void)replaceChildrenFromFileSystemSnapshot:(id)arg1 results:(id)arg2;
- (void)populateMutatorsToAddRequiredChildCounterparts:(id)arg1;
- (void)populateIssues:(id)arg1 context:(id)arg2;
- (id)assetRepForSlot:(id)arg1;
- (id)assetRepForStructuredIdentifier:(id)arg1;
- (id)assetRepForIdentifier:(id)arg1;
- (id)childForIdentifier:(id)arg1;
- (id)identifier;
- (id)defaultUnqualifiedRuntimeName;
- (id)orderedSlotComponentClasses;
- (_Bool)fileStructureSnapshotChildWouldMapToModelChild:(id)arg1;
- (id)manifestContent;
- (id)manifestFileName;
- (id)initWithCoder:(id)arg1;
- (id)init;
- (id)initializeManifestArchivist;

@end

@interface IBICAppIconSet : IBICSlottedAsset
{
    _Bool _preRendered;
}

+ (id)importPriority;
+ (id)contentReferenceTypeName;
+ (id)classNameComponents;
+ (id)catalogItemFileExtension;
+ (id)defaultInstanceForIdioms:(id)arg1;
+ (id)defaultName;
+ (Class)assetRepClass;
@property(nonatomic, getter=isPreRendered) _Bool preRendered; // @synthesize preRendered=_preRendered;
- (_Bool)requiresRootNamespace;
- (void)manifestArchivist:(id)arg1 populateManifestEntry:(id)arg2 forChild:(id)arg3;
- (_Bool)manifestArchivist:(id)arg1 childHasDataToRecordInManifest:(id)arg2;
- (void)manifestArchivist:(id)arg1 applyPropertiesFromChildEntry:(id)arg2 toChild:(id)arg3 results:(id)arg4;
- (void)manifestArchivist:(id)arg1 populateManifest:(id)arg2;
- (void)manifestArchivist:(id)arg1 applyPropertiesFromManifest:(id)arg2;
- (_Bool)manifestArchivist:(id)arg1 validateManifestChildEntry:(id)arg2 results:(id)arg3;
- (_Bool)manifestArchivist:(id)arg1 validateManifest:(id)arg2 results:(id)arg3;
- (id)effectiveModificationDateForCARCompiler;
- (id)initializeManifestArchivist;
- (id)intrinsicallyOrderedChildren;
- (id)children;
- (id)assetRepForStructuredIdentifier:(id)arg1;
- (id)childForIdentifier:(id)arg1;
- (id)assetRepForIdentifier:(id)arg1;
- (id)assetRepForSlot:(id)arg1;

@end

@interface IBICSlottedAssetRep : IBICAbstractCatalogItem
{
    NSData *_assetData;
    IBICSlot *_slot;
    unsigned int _conflictState;
}

+ (id)keysThatImpactDisplayOrder;
+ (id)keysThatImpactIdentifier;
+ (id)classNameComponents;
+ (id)catalogItemFileExtension;
+ (id)validSourceFileUTIs;
+ (id)validSourceFileNameExtensions;
+ (Class)requiredParentClass;
+ (id)assetRepIdentifiersForAssetReps:(id)arg1;
+ (_Bool)displayNameIsItemName;
+ (_Bool)itemNameIsFileNameWithoutCatalogExtension;
+ (id)assetRepWithRepIdentifier:(id)arg1;
+ (id)assetRepWithSlot:(id)arg1 fileName:(id)arg2 explicitlyUnassigned:(_Bool)arg3;
+ (Class)slotClass;
+ (Class)slottedAssetClass;
+ (Class)repIdentifierClass;
+ (_Bool)isAbstractCatalogItemClass;
@property(nonatomic) unsigned int conflictState; // @synthesize conflictState=_conflictState;
@property(copy, nonatomic) IBICSlot *slot; // @synthesize slot=_slot;
- (void).cxx_destruct;
- (_Bool)matchesFileType:(id)arg1;
- (id)fileType;
@property(readonly) NSString *fullyQualifiedRelativePathForFileWriter;
- (void)populateIssues:(id)arg1 context:(id)arg2;
- (_Bool)updateModificationDatesWithMutationResult:(id)arg1;
- (int)compareDisplayOrder:(id)arg1;
- (void)replaceChildrenFromFileSystemSnapshot:(id)arg1 results:(id)arg2;
- (id)fileWrapperRepresentationWithOptions:(unsigned int)arg1;
- (id)parent;
- (void)enumerateDescriptionAttributeComponents:(CDUnknownBlockType)arg1;
- (_Bool)isBrokenFileReference;
- (id)identifier;
- (id)structuredIdentifier;
- (id)fullyQualifiedRuntimeNameProvidingItemForCARCompiler;
- (id)effectiveNodeForIssueGenerationForCARCompiler;
- (id)effectiveModificationDateForCARCompiler;
- (_Bool)isMinimallyFitForCompiling;
- (_Bool)requiresKnownFileTypeToBeMinimallyFitForCompiling;
- (id)shortDisplayName;
- (id)displayName;
- (id)nameForIssues;
- (void)setAssetData:(id)arg1;
- (void)assetDataWillChange;
- (id)assetData;
- (void)setConflictStateComponent:(unsigned int)arg1 toValue:(_Bool)arg2;
- (_Bool)hasUnknownSlot;
- (_Bool)isExplicitlyUnassigned;
- (_Bool)isInConflict;
- (_Bool)isConflictFree;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithSlot:(id)arg1;
- (id)init;

@end

@interface IBICSlottedAbstractImageRep : IBICSlottedAssetRep
{
    NSData *_assetData;
    NSValue *_imageDataPixelSize;
    _Bool _imageDataPixelSizeIsValid;
}

- (void).cxx_destruct;
- (void)populateIssues:(id)arg1 context:(id)arg2;
- (_Bool)hasPDFSibling;
- (_Bool)isPDF;
- (_Bool)isJPEG;
- (_Bool)isPNG;
@property(readonly) NSValue *imageDataPointSize;
@property(readonly) NSValue *imageDataPixelSize;
@property(readonly) NSValue *requiredPointSize;
@property(readonly) NSValue *requiredPixelSize;
- (id)slot;
- (void)assetDataWillChange;

@end

@interface IBICAppIconSetRep : IBICSlottedAbstractImageRep
{
    IBICCatalogContentReference *_contentReference;
}

+ (id)contentReferenceTypeName;
+ (Class)slottedAssetClass;
+ (Class)repIdentifierClass;
+ (id)assetRepWithSlot:(id)arg1 fileName:(id)arg2 explicitlyUnassigned:(_Bool)arg3;
+ (id)assetRepWithRepIdentifier:(id)arg1;
@property(copy, nonatomic) IBICCatalogContentReference *contentReference; // @synthesize contentReference=_contentReference;
- (void).cxx_destruct;
- (_Bool)isMinimallyFitForCompiling;
- (_Bool)isImageDataSizedProperly;
- (id)infoPlistReferenceName;
- (void)setSlot:(id)arg1;
- (id)slot;
- (id)parent;
- (id)initWithSlot:(id)arg1;
- (_Bool)populateNamedAssetImportInfo:(id)arg1 allCompiledItems:(id)arg2 error:(id *)arg3;

@end

@interface IBICSlottedAssetRepIdentifier : NSObject <NSCopying>
{
    IBICSlot *_slot;
    NSString *_fileName;
    unsigned int _conflictState;
}

+ (id)inferredRepIdentifiersGroupedByItemNameForPaths:(id)arg1;
+ (id)inferredRepIdentifiersForPaths:(id)arg1;
+ (CDUnknownBlockType)slotComponentTransformerForPaths:(id)arg1;
+ (id)orderImageRepPathsForDeterministicConflictResolution:(id)arg1;
+ (id)inferredRepIdentifierForPath:(id)arg1 slotComponentTransformer:(CDUnknownBlockType)arg2;
+ (id)inferredRepIdentifiersForImageReps:(id)arg1;
+ (Class)slotClass;
+ (id)defaultIdentifier;
+ (id)identifierWithSlot:(id)arg1 fileName:(id)arg2 explicitlyUnassigned:(_Bool)arg3;
+ (id)allocWithZone:(struct _NSZone *)arg1;
@property(readonly) unsigned int conflictState; // @synthesize conflictState=_conflictState;
@property(readonly) NSString *fileName; // @synthesize fileName=_fileName;
@property(readonly) IBICSlot *slot; // @synthesize slot=_slot;
- (void).cxx_destruct;
- (id)description;
@property(readonly) NSString *stringRepresentation;
- (int)compareInTieBreakingOrder:(id)arg1;
- (_Bool)isExplicitlyUnassigned;
- (_Bool)isConflictFree;
- (unsigned int)hash;
- (_Bool)isEqual:(id)arg1;
- (_Bool)isEqualToImageCatalogImageRepIdentifier:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)assetRepIdentifierBySettingConflictStateComponent:(unsigned int)arg1 toValue:(_Bool)arg2;
- (int)compareDisplayOrder:(id)arg1;
- (id)initWithSlot:(id)arg1 fileName:(id)arg2 conflictState:(unsigned int)arg3;

@end

@interface IBICAppIconSetRepIdentifier : IBICSlottedAssetRepIdentifier
{
}

+ (id)inferredRepIdentifiersForImageReps:(id)arg1;
+ (id)inferredRepIdentifiersGroupedByItemNameForPaths:(id)arg1;
+ (id)inferredRepIdentifierForPath:(id)arg1 slotComponentTransformer:(CDUnknownBlockType)arg2;
+ (Class)slotClass;
- (id)slot;

@end

@interface IBICSlot : NSObject <NSCopying, NSCoding>
{
    NSDictionary *_componentsByClass;
    NSDictionary *_placeholderIDsByClass;
}

+ (id)orderedComponentClasses;
+ (id)defaultSlot;
+ (id)emptySlot;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)slotWithComponents:(id)arg1;
+ (id)slotWithComponents:(id *)arg1 count:(unsigned int)arg2;
- (void).cxx_destruct;
- (int)numberOfPlaceholderValues;
- (int)numberOfActiveComponents;
@property(readonly) NSArray *components;
- (id)outputFileNameGivenBaseName:(id)arg1 andExtension:(id)arg2;
- (id)detailAreaKey;
- (_Bool)isValidFileNameForDragAndDrop:(id)arg1;
- (id)requiredFileName;
- (id)displayName;
- (id)description;
- (id)stringRepresentation;
- (id)shortDisplayName;
- (unsigned int)hash;
- (_Bool)isEqual:(id)arg1;
- (_Bool)isEqualSlot:(id)arg1;
- (int)compareDisplayOrder:(id)arg1;
- (_Bool)hasPlaceholderValues;
- (id)placeholderComponentIdentifierForClass:(Class)arg1;
- (id)slotComponentForClass:(Class)arg1;
- (void)enumerateOrderedSlotComponentsAndValues:(CDUnknownBlockType)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithComponents:(id)arg1 placeholderIDs:(id)arg2;
- (void)captureComponents;

@end

@interface IBICImageSlot : IBICSlot
{
}

- (id)requiredPointSize;
- (float)scaleMultiple;
- (id)requiredPixelSize;

@end

@interface IBICAppIconSetRepSlot : IBICImageSlot
{
    IBICIdiom *_idiom;
    IBICSize *_size;
    IBICScale *_scale;
    IBICLocus *_locus;
    IBICSubtype *_subtype;
}

+ (id)orderedComponentClasses;
+ (id)slotWithIdiom:(id)arg1 size:(id)arg2 locus:(id)arg3 subtype:(id)arg4 scale:(id)arg5;
+ (id)slotWithIdiom:(id)arg1 size:(id)arg2 scale:(id)arg3 locus:(id)arg4;
@property(readonly) IBICSubtype *subtype; // @synthesize subtype=_subtype;
@property(readonly) IBICLocus *locus; // @synthesize locus=_locus;
@property(readonly) IBICScale *scale; // @synthesize scale=_scale;
@property(readonly) IBICSize *size; // @synthesize size=_size;
@property(readonly) IBICIdiom *idiom; // @synthesize idiom=_idiom;
- (void).cxx_destruct;
- (id)requiredPixelSize;
- (id)outputFileNameGivenBaseName:(id)arg1 andExtension:(id)arg2;
- (id)detailAreaKey;
@property(readonly) NSValue *pixelSize;
- (int)compareDisplayOrder:(id)arg1;
- (id)shortDisplayName;
- (void)captureComponents;

@end

@interface IBICAssetPackOutputSpecification : NSObject <IBBinaryArchiving>
{
    NSSet *_tags;
    NSString *_bundleIdentifier;
    NSString *_outputPath;
}

+ (id)outputSpecificationsKeyedByTagSetsFromCommandlinePlist:(id)arg1 makePathsAbsolute:(_Bool)arg2 error:(id *)arg3;
+ (id)outputSpecificationFromCommandlinePlistRecord:(id)arg1 makePathAbsolute:(_Bool)arg2 error:(id *)arg3;
@property(readonly) NSString *outputPath; // @synthesize outputPath=_outputPath;
@property(readonly) NSString *bundleIdentifier; // @synthesize bundleIdentifier=_bundleIdentifier;
@property(readonly) NSSet *tags; // @synthesize tags=_tags;
- (void).cxx_destruct;
- (id)englishNameForTagSet;
@property(readonly) unsigned int hash;
- (_Bool)isEqualToAssetPackOutputSpecification:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (void)encodeWithBinaryArchiver:(id)arg1;
- (id)initWithBinaryUnarchiver:(id)arg1;
- (id)initWithTags:(id)arg1 bundleIdentifier:(id)arg2 outputPath:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;

@end

@interface IBICAssetTagSolver : NSObject
{
    IBMutableIdentityDictionary *_cachedCumulativePropigatedTags;
    IBMutableIdentityDictionary *_cachedAcceptedTags;
    NSDictionary *_adornersByAndornees;
    NSSet *_solutionSpace;
}

@property(readonly) NSSet *solutionSpace; // @synthesize solutionSpace=_solutionSpace;
- (void).cxx_destruct;
- (id)cumulativeTagsPropigatedToItem:(id)arg1;
- (id)cumulativeTagsPropigatedByItem:(id)arg1;
- (id)acceptedTagsForItem:(id)arg1;
- (id)setByUnioningTags:(id)arg1 withLocalTagsFromItem:(id)arg2;
- (id)adornersForAdornee:(id)arg1;
- (id)initWithSolutionSpace:(id)arg1 error:(id *)arg2;

@end

@interface IBICBaseSchemaProvider : NSObject <IBICSchemaProvider>
{
    IBICPlatform *_universalPlatform;
    IBICIdiom *_universalIdiom;
    IBICScale *_oneXScale;
    IBICScale *_twoXScale;
    IBICScale *_threeXScale;
    IBICFileType *_pngFileType;
    IBICFileType *_jpegFileType;
    IBICFileType *_pdfFileType;
    IBICWidthClass *_widthClassCompact;
    IBICWidthClass *_widthClassRegular;
    IBICHeightClass *_heightClassCompact;
    IBICHeightClass *_heightClassRegular;
    IBICSlotComponentClassCombinationAxis *_widthAxisAll;
    IBICSlotComponentClassCombinationAxis *_widthAxisCompact;
    IBICSlotComponentClassCombinationAxis *_widthAxisRegular;
    IBICSlotComponentClassCombinationAxis *_heightAxisAll;
    IBICSlotComponentClassCombinationAxis *_heightAxisCompact;
    IBICSlotComponentClassCombinationAxis *_heightAxisRegular;
}

- (void).cxx_destruct;
- (void)registerBaseDataSetSlots:(id)arg1;
- (void)registerBaseImageSetSlots:(id)arg1;
- (void)registerBaseSlotComponents:(id)arg1;
- (void)registerSchemaComponents:(id)arg1;
- (float)precedence;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

@interface IBICSlottedAssetCollection : IBICAbstractCatalogItem
{
    IBICManifestArchivist *_manifestArchivist;
    NSDictionary *_childrenIdentifiersToSlots;
    NSDictionary *_childrenIdentifiersToConflictStates;
}

+ (id)keysThatImpactIdentifier;
+ (Class)requiredChildrenClass;
@property(copy, nonatomic) NSDictionary *childrenIdentifiersToConflictStates; // @synthesize childrenIdentifiersToConflictStates=_childrenIdentifiersToConflictStates;
@property(copy, nonatomic) NSDictionary *childrenIdentifiersToSlots; // @synthesize childrenIdentifiersToSlots=_childrenIdentifiersToSlots;
- (void).cxx_destruct;
- (void)populateIssues:(id)arg1 context:(id)arg2;
- (Class)expectedClassForSlot:(id)arg1;
- (void)populateIssues:(id)arg1 forUnconflictedChild:(id)arg2 inSlot:(id)arg3 context:(id)arg4;
- (Class)manifestArchivist:(id)arg1 childClassForChildEntry:(id)arg2 results:(id)arg3;
- (int)manifestArchivist:(id)arg1 orderChildrenForSlotConflictResolutionByComparing:(id)arg2 to:(id)arg3;
- (void)manifestArchivist:(id)arg1 setConflictState:(unsigned int)arg2 forChild:(id)arg3;
- (void)manifestArchivist:(id)arg1 setSlot:(id)arg2 forChild:(id)arg3;
- (unsigned int)manifestArchivist:(id)arg1 conflictStateForChild:(id)arg2;
- (id)manifestArchivist:(id)arg1 slotForChild:(id)arg2;
- (Class)manifestArchivistSlotClassForChildren:(id)arg1;
- (void)replaceChildrenFromFileSystemSnapshot:(id)arg1 results:(id)arg2;
- (void)enumerateDescriptionAttributeComponents:(CDUnknownBlockType)arg1;
- (id)manifestContent;
- (id)manifestFileName;
- (id)identifier;
- (void)setConflictState:(unsigned int)arg1 forChild:(id)arg2;
- (unsigned int)conflictStateForChild:(id)arg1;
- (void)setConflictState:(unsigned int)arg1 forChildWithIdentifier:(id)arg2;
- (unsigned int)conflictStateForChildWithIdentifier:(id)arg1;
- (id)childrenForSlot:(id)arg1;
- (id)childIdentfiersForSlot:(id)arg1;
- (id)slotForChild:(id)arg1;
- (void)setSlot:(id)arg1 forChild:(id)arg2;
- (id)slotForChildIdentifier:(id)arg1;
- (void)setSlot:(id)arg1 forChildIdentifier:(id)arg2;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)init;

@end

@interface IBICBrandAssetCollection : IBICSlottedAssetCollection
{
}

+ (id)uniqueKeyForCatalogCompilationSelection;
+ (id)contentReferenceTypeName;
+ (id)defaultInstanceForIdioms:(id)arg1;
+ (id)classNameComponents;
+ (id)catalogItemFileExtension;
+ (Class)requiredChildrenClass;
- (id)requiredSizeForChild:(id)arg1;
- (void)populateIssues:(id)arg1 forUnconflictedChild:(id)arg2 inSlot:(id)arg3 context:(id)arg4;
- (Class)expectedClassForSlot:(id)arg1;
- (Class)manifestArchivistSlotClassForChildren:(id)arg1;
- (id)slotForChild:(id)arg1;

@end

@interface IBICBrandAssetCollectionSlot : IBICSlot
{
    IBICIdiom *_idiom;
    IBICLocus *_role;
    IBICSize *_size;
}

+ (id)slotWithIdiom:(id)arg1 role:(id)arg2 size:(id)arg3;
+ (id)orderedComponentClasses;
@property(readonly) IBICSize *size; // @synthesize size=_size;
@property(readonly) IBICLocus *role; // @synthesize role=_role;
@property(readonly) IBICIdiom *idiom; // @synthesize idiom=_idiom;
- (void).cxx_destruct;
- (id)detailAreaKey;
- (int)compareDisplayOrder:(id)arg1;
- (id)shortDisplayName;
- (void)captureComponents;

@end

@interface IBICFolder : IBICAbstractCatalogItem
{
    IBICManifestArchivist *_manifestArchivist;
    _Bool _providesNamespace;
}

+ (id)contentReferenceTypeName;
+ (id)catalogItemFileExtension;
+ (Class)requiredChildrenClass;
+ (id)keysThatImpactIdentifier;
+ (id)classNameComponents;
+ (id)defaultInstanceForIdioms:(id)arg1;
@property(nonatomic) _Bool providesNamespace; // @synthesize providesNamespace=_providesNamespace;
- (void).cxx_destruct;
- (CDStruct_2a4d9400)taggingSupport;
- (void)replaceChildrenFromFileSystemSnapshot:(id)arg1 results:(id)arg2;
- (id)imageSetWithName:(id)arg1;
- (id)imageSetWithFileName:(id)arg1;
- (id)folderForFileName:(id)arg1;
- (id)identifier;
- (void)manifestArchivist:(id)arg1 populateManifest:(id)arg2;
- (void)manifestArchivist:(id)arg1 applyPropertiesFromManifest:(id)arg2;
- (_Bool)manifestArchivist:(id)arg1 validateManifest:(id)arg2 results:(id)arg3;
- (id)runtimeNamespaceQualifier;
- (id)manifestContent;
- (id)manifestFileName;
- (_Bool)isolatesAndConsolidatesContainedContent;
- (void)enumerateDescriptionAttributeComponents:(CDUnknownBlockType)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)init;

@end

@interface IBICCatalog : IBICFolder
{
}

+ (id)fileExtensionsToAllowInUnstructuredImport;
+ (id)contentReferenceTypeName;
+ (Class)requiredParentClass;
+ (id)catalogItemFileExtension;
+ (id)classNameComponents;
+ (id)defaultInstanceForIdioms:(id)arg1;
- (CDStruct_2a4d9400)taggingSupport;
- (void)replaceChildrenWithDiskContent:(id)arg1;
- (id)allIconSets;
- (id)allImageSets;
- (id)catalog;

@end

@interface IBICCatalogCARCompiler : NSObject
{
}

- (void)compileCARContent:(id)arg1 tagSolutionSpace:(id)arg2 options:(id)arg3 queue:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;

@end

@interface IBICCatalogCollection : NSObject
{
    NSArray *_imageCatalogsOrderedByPath;
    NSSet *_imageCatalogs;
}

+ (id)collectionWithImageCatalogPaths:(id)arg1 results:(id)arg2;
+ (id)catalogsFromPaths:(id)arg1 results:(id)arg2;
@property(readonly) NSSet *imageCatalogs; // @synthesize imageCatalogs=_imageCatalogs;
@property(readonly) NSArray *imageCatalogsOrderedByPath; // @synthesize imageCatalogsOrderedByPath=_imageCatalogsOrderedByPath;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSSet *allTags;
- (id)itemsFromCatalogPathsToIdentifierPaths:(id)arg1;
- (id)catalogPathsToIdentifierPathsForItems:(id)arg1;
- (id)debugDescription;
- (id)description;
- (id)findEmptyPlaceholderForSlottedAssetOfClass:(Class)arg1 withName:(id)arg2 error:(id *)arg3;
- (id)allSlottedAssetsOfClass:(Class)arg1 withName:(id)arg2;
- (id)allCatalogItemsOfClass:(Class)arg1;
- (id)slottedAssetRepsForCompilingSlottedAssetsOfClass:(Class)arg1 options:(id)arg2 ignoringItems:(id)arg3 populatingIssues:(id)arg4 slottedAssetFilter:(CDUnknownBlockType)arg5;
- (id)catalogForAbsolutePath:(id)arg1;
- (id)initWithImageCatalogs:(id)arg1;
- (id)catalogCollectionByAddingCatalogsAtPaths:(id)arg1 results:(id)arg2;

@end

@interface IBICCatalogCompilationSources : NSObject
{
    NSMutableDictionary *_itemsByPhase;
    NSMutableSet *_pathsToDeleteAtEndOfCompilation;
    IBICCatalogCollection *_catalogCollection;
    NSSet *_ignoredItems;
    NSSet *_itemsForWriting;
    NSSet *_itemsForCARCompiler;
    NSSet *_itemsForSpriteAtlasCompiler;
    NSSet *_itemsForIconCompiler;
    NSSet *_itemsForBrandAssetCollectionsInfoPlistGeneration;
    IBICCatalogCompilerResult *_selectionResult;
}

@property(readonly) IBICCatalogCompilerResult *selectionResult; // @synthesize selectionResult=_selectionResult;
@property(retain) NSSet *itemsForBrandAssetCollectionsInfoPlistGeneration; // @synthesize itemsForBrandAssetCollectionsInfoPlistGeneration=_itemsForBrandAssetCollectionsInfoPlistGeneration;
@property(retain) NSSet *itemsForIconCompiler; // @synthesize itemsForIconCompiler=_itemsForIconCompiler;
@property(retain) NSSet *itemsForSpriteAtlasCompiler; // @synthesize itemsForSpriteAtlasCompiler=_itemsForSpriteAtlasCompiler;
@property(retain) NSSet *itemsForCARCompiler; // @synthesize itemsForCARCompiler=_itemsForCARCompiler;
@property(retain) NSSet *itemsForWriting; // @synthesize itemsForWriting=_itemsForWriting;
@property(retain) NSSet *ignoredItems; // @synthesize ignoredItems=_ignoredItems;
@property(readonly) NSSet *pathsToDeleteAtEndOfCompilation; // @synthesize pathsToDeleteAtEndOfCompilation=_pathsToDeleteAtEndOfCompilation;
@property(retain) IBICCatalogCollection *catalogCollection; // @synthesize catalogCollection=_catalogCollection;
- (void).cxx_destruct;
- (void)addPathToDeleteAtEndOfCompilation:(id)arg1;
- (id)allItems;
- (id)itemsForPhase:(id)arg1;
- (void)setItems:(id)arg1 forPhase:(id)arg2;
- (id)init;

@end

@interface IBICCatalogCompilerOptions : NSObject <IBBinaryArchiving, NSCopying>
{
    NSMutableSet *_impliedIdiomIdentifiers;
    _Bool _compressPNGs;
    _Bool _enableOnDemandResources;
    _Bool _enableIncrementalDistill;
    _Bool _workaroundRadar17523681;
    _Bool _thinArtwork;
    _Bool _dumpAssets;
    _Bool _supportsResizableImages;
    _Bool _supportsTemplateRenderingIntent;
    _Bool _targetingV1CARFormat;
    int _optimization;
    NSString *_issueTextForUnavailableOnDemandResourcesBuildSupport;
    NSString *_outputDirectory;
    NSString *_commonAssetRepositoryFileName;
    NSString *_brandAssetCollectionName;
    NSString *_appIconName;
    NSString *_launchImageName;
    NSString *_minimumDeploymentTarget;
    NSString *_targetPlatform;
    NSString *_targetName;
    NSSet *_targetDevices;
    NSDictionary *_assetPackOutputSpecifications;
    NSDictionary *_extendedParameters;
    NSString *_issueTextForResizableImage;
    NSString *_issueTextForTemplateRenderingIntent;
    IBICDeviceThinningTraits *_filterForDeviceTraits;
    NSMutableDictionary *_masksByName;
    NSMutableDictionary *_successIssuesByName;
    NSMutableDictionary *_failureIssuesByName;
}

@property(retain, nonatomic) NSMutableDictionary *failureIssuesByName; // @synthesize failureIssuesByName=_failureIssuesByName;
@property(retain, nonatomic) NSMutableDictionary *successIssuesByName; // @synthesize successIssuesByName=_successIssuesByName;
@property(retain, nonatomic) NSMutableDictionary *masksByName; // @synthesize masksByName=_masksByName;
@property(copy) IBICDeviceThinningTraits *filterForDeviceTraits; // @synthesize filterForDeviceTraits=_filterForDeviceTraits;
@property _Bool targetingV1CARFormat; // @synthesize targetingV1CARFormat=_targetingV1CARFormat;
@property(copy) NSString *issueTextForTemplateRenderingIntent; // @synthesize issueTextForTemplateRenderingIntent=_issueTextForTemplateRenderingIntent;
@property _Bool supportsTemplateRenderingIntent; // @synthesize supportsTemplateRenderingIntent=_supportsTemplateRenderingIntent;
@property(copy) NSString *issueTextForResizableImage; // @synthesize issueTextForResizableImage=_issueTextForResizableImage;
@property _Bool supportsResizableImages; // @synthesize supportsResizableImages=_supportsResizableImages;
@property(nonatomic) _Bool dumpAssets; // @synthesize dumpAssets=_dumpAssets;
@property(retain, nonatomic) NSDictionary *extendedParameters; // @synthesize extendedParameters=_extendedParameters;
@property(copy) NSDictionary *assetPackOutputSpecifications; // @synthesize assetPackOutputSpecifications=_assetPackOutputSpecifications;
@property _Bool thinArtwork; // @synthesize thinArtwork=_thinArtwork;
@property(readonly) NSSet *impliedIdiomIdentifiers; // @synthesize impliedIdiomIdentifiers=_impliedIdiomIdentifiers;
@property(copy) NSSet *targetDevices; // @synthesize targetDevices=_targetDevices;
@property(copy, nonatomic) NSString *targetName; // @synthesize targetName=_targetName;
@property(copy) NSString *targetPlatform; // @synthesize targetPlatform=_targetPlatform;
@property(copy) NSString *minimumDeploymentTarget; // @synthesize minimumDeploymentTarget=_minimumDeploymentTarget;
@property(copy) NSString *launchImageName; // @synthesize launchImageName=_launchImageName;
@property(copy) NSString *appIconName; // @synthesize appIconName=_appIconName;
@property(copy) NSString *brandAssetCollectionName; // @synthesize brandAssetCollectionName=_brandAssetCollectionName;
@property(copy) NSString *commonAssetRepositoryFileName; // @synthesize commonAssetRepositoryFileName=_commonAssetRepositoryFileName;
@property(copy) NSString *outputDirectory; // @synthesize outputDirectory=_outputDirectory;
@property _Bool workaroundRadar17523681; // @synthesize workaroundRadar17523681=_workaroundRadar17523681;
@property(copy) NSString *issueTextForUnavailableOnDemandResourcesBuildSupport; // @synthesize issueTextForUnavailableOnDemandResourcesBuildSupport=_issueTextForUnavailableOnDemandResourcesBuildSupport;
@property(nonatomic) int optimization; // @synthesize optimization=_optimization;
@property(nonatomic) _Bool enableIncrementalDistill; // @synthesize enableIncrementalDistill=_enableIncrementalDistill;
@property _Bool enableOnDemandResources; // @synthesize enableOnDemandResources=_enableOnDemandResources;
@property _Bool compressPNGs; // @synthesize compressPNGs=_compressPNGs;
- (void).cxx_destruct;
- (id)uuidForCoreThemeDocument;
- (_Bool)shouldThinSlot:(id)arg1;
- (_Bool)shouldThinCatalogItem:(id)arg1;
- (id)successIssueTextForName:(id)arg1;
- (void)setSuccessIssueText:(id)arg1 forName:(id)arg2;
- (id)failureIssueTextForName:(id)arg1;
- (void)setFailureIssueText:(id)arg1 forName:(id)arg2;
- (id)maskForName:(id)arg1;
- (void)setMask:(id)arg1 forName:(id)arg2;
@property(readonly) NSSet *targetIdioms;
- (void)addImpliedIdiom:(id)arg1;
- (_Bool)isDeployingToAtLeast:(id)arg1;
- (_Bool)isTargetingDeploymentTargetsPriorTo:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (_Bool)isEqualToCatalogCompilerOptions:(id)arg1;
@property(readonly) unsigned int hash;
@property(readonly, copy) NSString *description;
- (void)encodeWithBinaryArchiver:(id)arg1;
- (id)initWithBinaryUnarchiver:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

@interface IBICCatalogCompilerResult : NSObject <IBBinaryArchiving>
{
    NSMutableArray *_outputFiles;
    NSMutableArray *_hardErrors;
    NSMutableArray *_softErrors;
    NSMutableArray *_issues;
    _Bool _success;
    NSMutableDictionary *_partialInfoPlist;
}

+ (id)resultWithSingleError:(id)arg1;
@property(retain) NSMutableDictionary *partialInfoPlist; // @synthesize partialInfoPlist=_partialInfoPlist;
@property(copy, nonatomic) NSArray *issues; // @synthesize issues=_issues;
@property(copy, nonatomic) NSArray *softErrors; // @synthesize softErrors=_softErrors;
@property(copy, nonatomic) NSArray *hardErrors; // @synthesize hardErrors=_hardErrors;
@property(copy, nonatomic) NSArray *outputFiles; // @synthesize outputFiles=_outputFiles;
@property _Bool success; // @synthesize success=_success;
- (void).cxx_destruct;
- (void)mergeResults:(id)arg1;
@property(readonly, copy) NSString *description;
- (void)addOutputFiles:(id)arg1;
- (void)addOutputFile:(id)arg1;
- (void)addIssues:(id)arg1;
- (void)addIssue:(id)arg1;
- (void)addSoftErrors:(id)arg1;
- (void)addSoftError:(id)arg1 wrappedWithDescription:(id)arg2;
- (void)addSoftError:(id)arg1;
- (void)addHardErrors:(id)arg1;
- (void)addHardError:(id)arg1 wrappedWithDescription:(id)arg2;
- (void)addHardError:(id)arg1;
- (void)failWithHardError:(id)arg1;
- (void)encodeWithBinaryArchiver:(id)arg1;
- (id)initWithBinaryUnarchiver:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

@interface IBICCatalogContentReference : NSObject <NSCoding, NSCopying>
{
    NSString *_name;
    NSString *_type;
    int _matchingStyle;
}

+ (_Bool)validateJSONRepresentationForArchivist:(id)arg1 forKey:(id)arg2 results:(id)arg3 inDictionary:(id)arg4;
+ (id)catalogContentReferenceFromValidatedJSONRepresentation:(id)arg1;
@property(readonly) int matchingStyle; // @synthesize matchingStyle=_matchingStyle;
@property(readonly) NSString *type; // @synthesize type=_type;
@property(readonly) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (_Bool)isEqualToCatalogContentReference:(id)arg1;
- (unsigned int)hash;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)resolveReferenceRestrictedToType:(Class)arg1 usingGenerator:(CDUnknownBlockType)arg2;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)serializedJSONRepresentation;
- (id)initWithType:(id)arg1 name:(id)arg2 matchingStyle:(int)arg3;

@end

@interface IBICCatalogICNSCompiler : NSObject
{
}

- (void)compileImageReps:(id)arg1 options:(id)arg2 queue:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;

@end

@interface IBICCocoaSchemaAdditions : NSObject <IBICSchemaProvider>
{
    IBICPlatform *_universalPlatform;
    IBICPlatform *_OSXPlatform;
    IBICIdiom *_universalIdiom;
    IBICIdiom *_macIdiom;
    IBICScale *_oneXScale;
    IBICScale *_twoXScale;
    IBICSize *_size16;
    IBICSize *_size32;
    IBICSize *_size128;
    IBICSize *_size256;
    IBICSize *_size512;
    IBICFileType *_pngFileType;
    IBICFileType *_jpegFileType;
    IBICFileType *_pdfFileType;
}

- (void).cxx_destruct;
- (void)registerDataSetSlots:(id)arg1;
- (void)registerAppIconSetSlots:(id)arg1;
- (void)registerIconSetSlots:(id)arg1;
- (void)registerImageSetSlots:(id)arg1;
- (void)registerSlotComponents:(id)arg1;
- (void)captureExistingComponents:(id)arg1;
- (void)registerSchemaComponents:(id)arg1;
- (float)precedence;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

@interface IBICSlotMask : NSObject <NSCopying, IBBinaryArchiving>
{
}

+ (id)slotMaskMatchingEverything;
+ (id)slotMaskForComponents:(id)arg1 withValuesFromSlots:(id)arg2;
+ (id)slotMaskForComponent:(Class)arg1 withComponentIdentifiers:(id)arg2;
+ (id)slotMaskForComponents:(id)arg1 withValuesFromRepIdentifiers:(id)arg2;
+ (id)slotMaskForComponents:(id)arg1 withValuesFromRepIdentifiers:(id)arg2 withEmptySetReplacements:(id)arg3;
+ (id)slotMaskWithComponentIdentifiersByComponentClass:(id)arg1;
+ (id)nullWidthHeightAndGPUMask;
+ (id)nullGPUMask;
+ (id)allSizeClassesMask;
+ (id)nullWidthNullHeightMask;
@property(readonly) unsigned int hash;
- (_Bool)isEqual:(id)arg1;
- (_Bool)isEqualToSlotMask:(id)arg1;
- (_Bool)isEqualToSlotMaskWithIdenticalClass:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
@property(readonly, copy) NSString *description;
- (id)descriptionWithIndent:(int)arg1;
- (_Bool)matchesAssetRep:(id)arg1;
- (_Bool)matchesSlot:(id)arg1;
- (id)maskIntersectedWithMask:(id)arg1;
- (id)invertedMask;
- (void)encodeWithBinaryArchiver:(id)arg1;
- (id)initWithBinaryUnarchiver:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

@interface IBICCompositeSlotMask : IBICSlotMask
{
    NSArray *_masks;
}

- (void).cxx_destruct;
- (unsigned int)hash;
- (_Bool)isEqualToSlotMaskWithIdenticalClass:(id)arg1;
- (id)descriptionWithIndent:(int)arg1;
- (void)encodeWithBinaryArchiver:(id)arg1;
- (id)initWithBinaryUnarchiver:(id)arg1;
- (id)initWithMasks:(id)arg1;

@end

@interface IBICConcreteSlotMask : IBICSlotMask
{
    NSDictionary *_identifiersBySlotComponentClass;
}

- (void).cxx_destruct;
- (unsigned int)hash;
- (_Bool)isEqualToSlotMaskWithIdenticalClass:(id)arg1;
- (id)descriptionWithIndent:(int)arg1;
- (_Bool)matchesSlot:(id)arg1;
- (void)encodeWithBinaryArchiver:(id)arg1;
- (id)initWithBinaryUnarchiver:(id)arg1;
- (id)initWithComponentIdentifiersByComponentClass:(id)arg1;

@end

@interface IBICCoreThemeDocument : NSObject
{
    CoreThemeDocument *_document;
    NSString *_exclusiveScratchDirectory;
    _Bool _importedContent;
    NSDictionary *_coreUIAssetPacks;
    IBICCatalogCompilerOptions *_catalogCompilerOptions;
}

+ (id)makeTemporaryDocumentWithOptions:(id)arg1 returningError:(id *)arg2;
+ (void)applyMinimumDeploymentFromOptions:(id)arg1 toCoreThemeDocument:(id)arg2;
+ (_Bool)isMigrationError:(id)arg1;
+ (void)initialize;
@property(retain, nonatomic) IBICCatalogCompilerOptions *catalogCompilerOptions; // @synthesize catalogCompilerOptions=_catalogCompilerOptions;
- (void).cxx_destruct;
- (void)distillWithOptions:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)setContent:(id)arg1 tagSolutionSpace:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (_Bool)registerAssetPackIfNeeded:(id)arg1 forItem:(id)arg2 withTagSolver:(id)arg3 error:(id *)arg4;
- (id)_createSoftlinkToWorkaroundRadar17523681ForImageRep:(id)arg1 error:(id *)arg2;
- (void)logAssets;
- (void)logAsset:(id)arg1;
- (void)logAssetImport:(id)arg1;
- (id)stringFromResizingMode:(int)arg1;
- (id)stringFromRenditionType:(int)arg1;
- (id)stringFromIdiom:(int)arg1;
- (void)close;
- (id)initWithCoreThemeDocument:(id)arg1 exclusiveScratchDirectory:(id)arg2 catalogCompilerOptions:(id)arg3;

@end

@interface IBICCoreThemeDocumentImageIDGenerator : NSObject
{
}

+ (id)mapImageNamesToIDs:(id)arg1;
+ (id)mapImageNamesToIDs:(id)arg1 collisionCount:(int *)arg2;

@end

@interface IBICDataSet : IBICSlottedAsset
{
    IBICSlotSuggestionSet *_suggestionSet;
}

+ (id)contentReferenceTypeName;
+ (id)importPriority;
+ (id)classNameComponents;
+ (id)defaultName;
+ (Class)assetRepClass;
+ (id)catalogItemFileExtension;
+ (id)defaultInstanceForIdioms:(id)arg1;
@property(retain, nonatomic) IBICSlotSuggestionSet *suggestionSet; // @synthesize suggestionSet=_suggestionSet;
- (void).cxx_destruct;
- (id)suggestionSetMaskForSuggestionSet:(id)arg1;
- (id)existingIdiomMask;
- (id)existingMemoryClassAndCapabilityClassMask;
- (CDStruct_2a4d9400)taggingSupport;
- (void)manifestArchivist:(id)arg1 populateManifestEntry:(id)arg2 forChild:(id)arg3;
- (_Bool)manifestArchivist:(id)arg1 childHasDataToRecordInManifest:(id)arg2;
- (void)manifestArchivist:(id)arg1 applyPropertiesFromChildEntry:(id)arg2 toChild:(id)arg3 results:(id)arg4;
- (_Bool)manifestArchivist:(id)arg1 validateManifestChildEntry:(id)arg2 results:(id)arg3;
- (id)initializeManifestArchivist;

@end

@interface IBICDataSetRep : IBICSlottedAssetRep
{
    NSString *_universalTypeIdentifier;
}

+ (id)contentReferenceTypeName;
+ (Class)repIdentifierClass;
+ (Class)slottedAssetClass;
+ (id)validSourceFileNameExtensions;
+ (id)assetRepWithSlot:(id)arg1 fileName:(id)arg2 explicitlyUnassigned:(_Bool)arg3;
+ (id)assetRepWithRepIdentifier:(id)arg1;
@property(copy, nonatomic) NSString *universalTypeIdentifier; // @synthesize universalTypeIdentifier=_universalTypeIdentifier;
- (void).cxx_destruct;
- (id)fullyQualifiedRelativePathForFileWriter;
- (_Bool)requiresKnownFileTypeToBeMinimallyFitForCompiling;
- (id)displayName;
- (CDStruct_2a4d9400)taggingSupport;
- (void)enumerateDescriptionAttributeComponents:(CDUnknownBlockType)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)setSlot:(id)arg1;
- (id)slot;
- (id)parent;
- (id)initWithSlot:(id)arg1;
- (_Bool)populateNamedAssetImportInfo:(id)arg1 allCompiledItems:(id)arg2 error:(id *)arg3;

@end

@interface IBICDataSetRepIdentifier : IBICSlottedAssetRepIdentifier
{
}

+ (id)inferredRepIdentifiersGroupedByItemNameForPaths:(id)arg1;
+ (_Bool)isValidFilenameForImport:(id)arg1;
+ (Class)slotClass;
- (id)slot;

@end

@interface IBICDataSetRepSlot : IBICSlot
{
    IBICIdiom *_idiom;
    IBICMemoryClass *_memory;
    IBICGraphicsFeatureSet *_graphicsFeatureSet;
}

+ (id)slotWithIdiom:(id)arg1 memory:(id)arg2 graphicsFeatureSet:(id)arg3;
+ (id)orderedComponentClasses;
@property(readonly) IBICGraphicsFeatureSet *graphicsFeatureSet; // @synthesize graphicsFeatureSet=_graphicsFeatureSet;
@property(readonly) IBICMemoryClass *memory; // @synthesize memory=_memory;
@property(readonly) IBICIdiom *idiom; // @synthesize idiom=_idiom;
- (void).cxx_destruct;
- (id)outputFileNameGivenBaseName:(id)arg1 andExtension:(id)arg2;
- (id)detailAreaKey;
- (int)compareDisplayOrder:(id)arg1;
- (id)shortDisplayName;
- (void)captureComponents;

@end

@interface IBICSlotComponent : NSObject <NSCopying, NSCoding>
{
    NSString *_title;
    NSString *_identifier;
    NSString *_fileNameComponent;
    float _displayOrder;
}

+ (id)itemWithIdentifier:(id)arg1 fileNameComponent:(id)arg2 title:(id)arg3 displayOrder:(float)arg4;
+ (id)fallbackContentsJSONKeys;
+ (id)contentsJSONKey;
@property(readonly) float displayOrder; // @synthesize displayOrder=_displayOrder;
@property(readonly) NSString *fileNameComponent; // @synthesize fileNameComponent=_fileNameComponent;
@property(readonly) NSString *identifier; // @synthesize identifier=_identifier;
@property(readonly) NSString *title; // @synthesize title=_title;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (int)compareDisplayOrder:(id)arg1;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (_Bool)isEqualToSlotComponent:(id)arg1;
- (unsigned int)hash;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithIdentifier:(id)arg1 fileNameComponent:(id)arg2 title:(id)arg3 displayOrder:(float)arg4;

@end

@interface IBICDeviceOrientation : IBICSlotComponent
{
    int _orientationValue;
}

+ (id)itemWithIdentifier:(id)arg1 fileNameComponent:(id)arg2 title:(id)arg3 orientationValue:(int)arg4 displayOrder:(float)arg5;
+ (id)contentsJSONKey;
@property(readonly) int orientationValue; // @synthesize orientationValue=_orientationValue;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (_Bool)isEqualToSlotComponent:(id)arg1;
- (_Bool)isEqualToDeviceOrientation:(id)arg1;
- (id)initWithIdentifier:(id)arg1 fileNameComponent:(id)arg2 title:(id)arg3 orientationValue:(int)arg4 displayOrder:(float)arg5;

@end

@interface IBICDeviceThinningTraits : NSObject <IBBinaryArchiving, NSCopying>
{
    NSString *_productType;
    NSString *_artworkDeviceIdiom;
    int _artworkDeviceScaleFactor;
    int _artworkDeviceSubtype;
    int _devicePerformanceMemoryClass;
    NSString *_deviceGraphicsFeatureSetClass;
    NSArray *_deviceGraphicsFeatureSetFallbacks;
    NSArray *_artworkHostedIdioms;
}

@property(readonly) NSArray *artworkHostedIdioms; // @synthesize artworkHostedIdioms=_artworkHostedIdioms;
@property(readonly) NSArray *deviceGraphicsFeatureSetFallbacks; // @synthesize deviceGraphicsFeatureSetFallbacks=_deviceGraphicsFeatureSetFallbacks;
@property(readonly) NSString *deviceGraphicsFeatureSetClass; // @synthesize deviceGraphicsFeatureSetClass=_deviceGraphicsFeatureSetClass;
@property(readonly) int devicePerformanceMemoryClass; // @synthesize devicePerformanceMemoryClass=_devicePerformanceMemoryClass;
@property(readonly) int artworkDeviceSubtype; // @synthesize artworkDeviceSubtype=_artworkDeviceSubtype;
@property(readonly) int artworkDeviceScaleFactor; // @synthesize artworkDeviceScaleFactor=_artworkDeviceScaleFactor;
@property(readonly) NSString *artworkDeviceIdiom; // @synthesize artworkDeviceIdiom=_artworkDeviceIdiom;
@property(readonly) NSString *productType; // @synthesize productType=_productType;
- (void).cxx_destruct;
@property(readonly, copy) NSString *description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithBinaryArchiver:(id)arg1;
- (id)initWithBinaryUnarchiver:(id)arg1;
- (id)initWithProductType:(id)arg1 artworkDeviceIdiom:(id)arg2 artworkDeviceScaleFactor:(int)arg3 artworkDeviceSubtype:(int)arg4 devicePerformanceMemoryClass:(int)arg5 deviceGraphicsFeatureSetClass:(id)arg6 deviceGraphicsFeatureSetFallbacks:(id)arg7 artworkHostedIdioms:(id)arg8;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

@interface IBICDiskMutationResult : NSObject
{
    NSDictionary *_updatedFileTimestamps;
}

+ (id)combineDiskMutationResults:(id)arg1;
+ (id)mutationResultByUpdatingAndRecordingTimeStampsForContainingDirectoriesOfPaths:(id)arg1 upToBase:(id)arg2 error:(id *)arg3;
+ (id)emptyMutationResult;
+ (id)mutationResultWithTimeStampForParentDirectoryOfItemRemovedFromPath:(id)arg1 error:(id *)arg2;
+ (id)mutationResultWithTimeStampsForContentAtPath:(id)arg1 includeParentDirectory:(_Bool)arg2 error:(id *)arg3;
@property(readonly) NSDictionary *updatedFileTimestamps; // @synthesize updatedFileTimestamps=_updatedFileTimestamps;
- (void).cxx_destruct;
- (id)description;
- (id)initWithUpdatedFileTimestamps:(id)arg1;

@end

@interface IBICExtent : IBICSlotComponent
{
    int _extentValue;
}

+ (id)itemWithIdentifier:(id)arg1 fileNameComponent:(id)arg2 title:(id)arg3 extent:(int)arg4 displayOrder:(float)arg5;
+ (id)contentsJSONKey;
@property(readonly) int extentValue; // @synthesize extentValue=_extentValue;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (_Bool)isEqualToSlotComponent:(id)arg1;
- (_Bool)isEqualToExtent:(id)arg1;
- (id)initWithIdentifier:(id)arg1 fileNameComponent:(id)arg2 title:(id)arg3 extent:(int)arg4 displayOrder:(float)arg5;

@end

@interface IBICFileStructureSnapshot : NSObject
{
    NSDictionary *_childrenByFileName;
    _Bool _isDirectory;
    NSString *_path;
    NSString *_fileName;
    NSString *_fileExtension;
    NSDate *_modificationDate;
    NSArray *_children;
    IBICFileStructureSnapshot *_parent;
}

+ (id)snapshotOfPath:(id)arg1 error:(id *)arg2;
@property(readonly) __weak IBICFileStructureSnapshot *parent; // @synthesize parent=_parent;
@property(readonly) NSArray *children; // @synthesize children=_children;
@property(readonly) _Bool isDirectory; // @synthesize isDirectory=_isDirectory;
@property(readonly) NSDate *modificationDate; // @synthesize modificationDate=_modificationDate;
@property(readonly) NSString *fileExtension; // @synthesize fileExtension=_fileExtension;
@property(readonly) NSString *fileName; // @synthesize fileName=_fileName;
@property(readonly) NSString *path; // @synthesize path=_path;
- (void).cxx_destruct;
- (id)debugDescription;
- (id)descriptionWithIndent:(int)arg1 includeChildren:(_Bool)arg2;
- (id)childWithFileName:(id)arg1;
- (id)initWithPath:(id)arg1 modificationDate:(id)arg2 isDirectory:(_Bool)arg3 children:(id)arg4;

@end

@interface IBICFileType : NSObject
{
    _Bool _renderThumbnailWithImageIO;
    NSString *_title;
    NSString *_identifier;
    float _displayOrder;
    NSArray *_extensions;
}

+ (id)fileTypeWithIdentifier:(id)arg1 title:(id)arg2 extensions:(id)arg3 displayOrder:(float)arg4 renderThumbnailWithImageIO:(_Bool)arg5;
@property(readonly, nonatomic) _Bool renderThumbnailWithImageIO; // @synthesize renderThumbnailWithImageIO=_renderThumbnailWithImageIO;
@property(readonly, nonatomic) NSArray *extensions; // @synthesize extensions=_extensions;
@property(readonly, nonatomic) float displayOrder; // @synthesize displayOrder=_displayOrder;
@property(readonly, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
@property(readonly, nonatomic) NSString *title; // @synthesize title=_title;
- (void).cxx_destruct;
- (int)comparePrecedence:(id)arg1;
- (id)description;
- (id)preferredExtension;
- (_Bool)isValidFileExtension:(id)arg1;
- (id)initWithIdentifier:(id)arg1 title:(id)arg2 extensions:(id)arg3 displayOrder:(float)arg4 renderThumbnailWithImageIO:(_Bool)arg5;

@end

@interface IBICFileTypePDFIssueProvider : NSObject <IBICSlottedAssetIssueProvider>
{
}

- (void)populateIssues:(id)arg1 forSlottedAsset:(id)arg2 withContext:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

@interface IBICGenericSchemaPlatform : NSObject <IBICSchemaProvider>
{
    float _precedence;
    NSDictionary *_rawSchema;
    IBICPlatform *_platform;
    NSDictionary *_idioms;
    IBICFileType *_pngFileType;
    IBICFileType *_jpegFileType;
    IBICFileType *_pdfFileType;
}

- (void).cxx_destruct;
- (id)createOrFetchIdiomInSchema:(id)arg1;
- (id)createOrFetchPlatformInSchema:(id)arg1;
- (float)maxDisplayOrderForSlotSuggestionSetsInSchema:(id)arg1;
- (float)maxDisplayOrderForSlotComponentClass:(Class)arg1 schema:(id)arg2;
- (void)registerImageSet:(id)arg1 forIdiom:(id)arg2 inSchema:(id)arg3;
- (void)registerImageSetSlots:(id)arg1;
- (void)captureExistingComponents:(id)arg1;
- (void)registerSchemaComponents:(id)arg1;
- (float)precedence;
- (id)initWithGenericRawSchema:(id)arg1 precedence:(float)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

@interface IBICGenericSchemaProvider : NSObject <IBICSchemaProvider>
{
}

+ (void)setContextDataFromCallingHost:(id)arg1;
+ (id)contextDataForRemoteTool;
+ (void)setAdHocSchema:(id)arg1;
+ (id)adHocSchema;
- (void)registerSchemaComponents:(id)arg1;
- (float)precedence;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

@interface IBICGraphicsFeatureSet : IBICSlotComponent
{
    int _graphicsFeatureSetClass;
}

+ (id)itemWithIdentifier:(id)arg1 fileNameComponent:(id)arg2 title:(id)arg3 displayOrder:(float)arg4 graphicsFeatureSetClass:(int)arg5;
+ (id)fallbackContentsJSONKeys;
+ (id)contentsJSONKey;
@property(readonly) int graphicsFeatureSetClass; // @synthesize graphicsFeatureSetClass=_graphicsFeatureSetClass;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
@property(readonly) int graphicsClass;
- (id)initWithIdentifier:(id)arg1 fileNameComponent:(id)arg2 title:(id)arg3 displayOrder:(float)arg4 graphicsFeatureSetClass:(int)arg5;

@end

@interface IBICSizeClass : IBICSlotComponent
{
    int _coreUISizeClass;
}

+ (id)itemWithIdentifier:(id)arg1 fileNameComponent:(id)arg2 title:(id)arg3 coreUISizeClass:(int)arg4 displayOrder:(float)arg5;
@property(readonly, nonatomic) int coreUISizeClass; // @synthesize coreUISizeClass=_coreUISizeClass;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithIdentifier:(id)arg1 fileNameComponent:(id)arg2 title:(id)arg3 coreUISizeClass:(int)arg4 displayOrder:(float)arg5;

@end

@interface IBICHeightClass : IBICSizeClass
{
}

+ (id)fallbackContentsJSONKeys;
+ (id)contentsJSONKey;

@end

@interface IBICIconSet : IBICSlottedAsset
{
}

+ (id)importPriority;
+ (id)contentReferenceTypeName;
+ (id)classNameComponents;
+ (id)catalogItemFileExtension;
+ (id)defaultInstanceForIdioms:(id)arg1;
+ (id)defaultName;
+ (Class)assetRepClass;
- (void)replaceChildrenFromFileSystemSnapshot:(id)arg1 results:(id)arg2;
- (id)readIconRepIDsFromSnapshot:(id)arg1 results:(id)arg2;
- (id)outputFileName;
- (id)intrinsicallyOrderedChildren;
- (id)children;
- (id)assetRepForStructuredIdentifier:(id)arg1;
- (id)childForIdentifier:(id)arg1;
- (id)assetRepForIdentifier:(id)arg1;
- (id)assetRepForSlot:(id)arg1;

@end

@interface IBICIconSetRep : IBICSlottedAbstractImageRep
{
}

+ (id)contentReferenceTypeName;
+ (Class)slottedAssetClass;
+ (Class)repIdentifierClass;
+ (id)assetRepWithSlot:(id)arg1 fileName:(id)arg2 explicitlyUnassigned:(_Bool)arg3;
+ (id)assetRepWithRepIdentifier:(id)arg1;
- (_Bool)isMinimallyFitForCompiling;
- (_Bool)isImageDataSizedProperly;
- (void)setSlot:(id)arg1;
- (id)slot;
- (id)parent;
- (id)initWithSlot:(id)arg1;

@end

@interface IBICIconSetRepIdentifier : IBICSlottedAssetRepIdentifier
{
}

+ (id)inferredRepIdentifiersGroupedByItemNameForPaths:(id)arg1;
+ (id)inferredRepIdentifiersForImageReps:(id)arg1;
+ (id)inferredRepIdentifierForPath:(id)arg1 slotComponentTransformer:(CDUnknownBlockType)arg2;
+ (Class)slotClass;
- (id)slot;
- (id)scale;
- (id)size;

@end

@interface IBICIconSetRepSlot : IBICImageSlot
{
    IBICSize *_size;
    IBICScale *_scale;
}

+ (id)orderedComponentClasses;
+ (id)slotWithSize:(id)arg1 scale:(id)arg2;
+ (id)slotForFileName:(id)arg1;
+ (id)requiredFileNamesToSlots;
@property(readonly) IBICScale *scale; // @synthesize scale=_scale;
@property(readonly) IBICSize *size; // @synthesize size=_size;
- (void).cxx_destruct;
- (id)requiredPixelSize;
- (id)outputFileNameGivenBaseName:(id)arg1 andExtension:(id)arg2;
- (id)detailAreaKey;
- (id)requiredFileName;
- (int)compareDisplayOrder:(id)arg1;
- (id)shortDisplayName;
- (void)captureComponents;

@end

@interface IBICIdiom : IBICSlotComponent
{
    NSString *_platform;
    int _coreUIIdiom;
    NSString *_infoPlistSuffix;
}

+ (id)itemWithIdentifier:(id)arg1 fileNameComponent:(id)arg2 title:(id)arg3 platform:(id)arg4 coreUIIdiom:(int)arg5 infoPlistSuffix:(id)arg6 displayOrder:(float)arg7;
+ (id)itemWithIdentifier:(id)arg1 fileNameComponent:(id)arg2 title:(id)arg3 platform:(id)arg4 coreUIIdiom:(int)arg5 displayOrder:(float)arg6;
+ (id)contentsJSONKey;
@property(readonly) NSString *infoPlistSuffix; // @synthesize infoPlistSuffix=_infoPlistSuffix;
@property(readonly) int coreUIIdiom; // @synthesize coreUIIdiom=_coreUIIdiom;
@property(readonly) NSString *platform; // @synthesize platform=_platform;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (_Bool)isEqualToSlotComponent:(id)arg1;
- (_Bool)isEqualToIdiom:(id)arg1;
- (id)initWithIdentifier:(id)arg1 fileNameComponent:(id)arg2 title:(id)arg3 platform:(id)arg4 coreUIIdiom:(int)arg5 infoPlistSuffix:(id)arg6 displayOrder:(float)arg7;

@end

@interface IBICImageResizingBehavior : NSObject <NSCopying, NSCoding, IBBinaryArchiving>
{
    int _resizingMode;
    CDStruct_c64b4d12 _capInsets;
    int _centerFillMode;
    struct CGSize _centerSize;
}

+ (id)resizingBehaviorWithJSONRepresentation:(id)arg1;
+ (id)defaultResizingBehavior;
@property(readonly) CDStruct_c64b4d12 capInsets; // @synthesize capInsets=_capInsets;
@property(readonly) struct CGSize centerSize; // @synthesize centerSize=_centerSize;
@property(readonly) int centerFillMode; // @synthesize centerFillMode=_centerFillMode;
@property(readonly) int resizingMode; // @synthesize resizingMode=_resizingMode;
- (id)resizingBehaviorByApplyingScale:(float)arg1;
@property(readonly, copy) NSString *description;
- (_Bool)isResizable;
- (_Bool)isPartBasedVertical;
- (_Bool)isPartBasedHorizontal;
- (_Bool)getValidatedCapInsets:(CDStruct_c64b4d12 *)arg1 centerSize:(struct CGSize *)arg2 forSourceImageSize:(struct CGSize)arg3;
- (_Bool)isEqual:(id)arg1;
- (_Bool)isEqualToImageResizingBehavior:(id)arg1;
@property(readonly) unsigned int hash;
- (id)JSONRepresentation;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithBinaryArchiver:(id)arg1;
- (id)initWithBinaryUnarchiver:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithResizingMode:(int)arg1 capInsets:(CDStruct_c64b4d12)arg2 centerFillMode:(int)arg3 centerSize:(struct CGSize)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

@interface IBICImageSet : IBICSlottedAsset
{
    int _templateRenderingIntent;
}

+ (id)importPriority;
+ (id)contentReferenceTypeName;
+ (id)classNameComponents;
+ (id)catalogItemFileExtension;
+ (id)defaultInstanceForIdioms:(id)arg1;
+ (id)defaultName;
+ (Class)assetRepClass;
@property(nonatomic) int templateRenderingIntent; // @synthesize templateRenderingIntent=_templateRenderingIntent;
- (void)enumerateSizeProvidingItemsForValidatingBrandAssetCollection:(CDUnknownBlockType)arg1;
- (id)enclosingSpriteAtlas;
- (id)suggestionSetMaskForSuggestionSet:(id)arg1;
- (id)requiredCounterpartsMask;
- (id)existingScaleAndSizeClassMask;
- (id)existingSizeClassAndGPUMask;
- (CDStruct_2a4d9400)taggingSupport;
- (void)manifestArchivist:(id)arg1 populateManifest:(id)arg2;
- (void)manifestArchivist:(id)arg1 applyPropertiesFromManifest:(id)arg2;
- (_Bool)manifestArchivist:(id)arg1 validateManifest:(id)arg2 results:(id)arg3;
- (void)enumerateDescriptionAttributeComponents:(CDUnknownBlockType)arg1;
- (void)manifestArchivist:(id)arg1 populateManifestEntry:(id)arg2 forChild:(id)arg3;
- (_Bool)manifestArchivist:(id)arg1 childHasDataToRecordInManifest:(id)arg2;
- (void)manifestArchivist:(id)arg1 applyPropertiesFromChildEntry:(id)arg2 toChild:(id)arg3 results:(id)arg4;
- (id)intrinsicallyOrderedChildren;
- (id)children;
- (id)assetRepForStructuredIdentifier:(id)arg1;
- (id)childForIdentifier:(id)arg1;
- (id)assetRepForIdentifier:(id)arg1;
- (id)assetRepForSlot:(id)arg1;
- (id)initializeManifestArchivist;

@end

@interface IBICImageSetRep : IBICSlottedAbstractImageRep
{
    NSNumber *_cachedAssetDataIsFullyOpaqueBitmap;
    NSString *_cachedFirstNonOpaquePixelMessage;
    IBICImageResizingBehavior *_resizingBehavior;
    CDStruct_c64b4d12 _alignmentInsets;
}

+ (id)contentReferenceTypeName;
+ (Class)slottedAssetClass;
+ (Class)repIdentifierClass;
+ (id)assetRepWithSlot:(id)arg1 fileName:(id)arg2 explicitlyUnassigned:(_Bool)arg3;
+ (id)assetRepWithRepIdentifier:(id)arg1;
@property(nonatomic) CDStruct_c64b4d12 alignmentInsets; // @synthesize alignmentInsets=_alignmentInsets;
@property(copy, nonatomic) IBICImageResizingBehavior *resizingBehavior; // @synthesize resizingBehavior=_resizingBehavior;
- (void).cxx_destruct;
- (id)messageDescribingTransparency;
- (_Bool)assetDataIsFullyOpaqueBitmap;
- (void)cacheOpaquenessInfoIfNeeded;
- (void)assetDataWillChange;
- (CDStruct_2a4d9400)taggingSupport;
- (id)shortDisplayName;
- (_Bool)shouldAppendGPUToDisplayName;
- (_Bool)shouldAppendSizeClassToDisplayName;
- (void)enumerateDescriptionAttributeComponents:(CDUnknownBlockType)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithSlot:(id)arg1;
- (void)setSlot:(id)arg1;
- (id)slot;
- (id)parent;
- (_Bool)populateNamedAssetImportInfo:(id)arg1 allCompiledItems:(id)arg2 error:(id *)arg3;

@end

@interface IBICImageSetRepFileNameLinkingMutator : IBICCatalogMutator
{
    IBICImageSetRep *_imageRep;
    NSString *_newFileName;
    NSString *_resultAbsolutePath;
    NSData *_newImageData;
    NSString *_oldFileName;
    NSData *_oldImageData;
    NSString *_pendingManifestPath;
    NSData *_pendingManifestData;
}

- (void).cxx_destruct;
- (id)inverseMutator;
- (id)mutationDescription;
- (void)applyToDiskWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)applyToModel;
- (id)initWithImageRep:(id)arg1 fileName:(id)arg2 imageData:(id)arg3;
- (id)initWithImageRep:(id)arg1 andSibling:(id)arg2;

@end

@interface IBICImageSetRepIdentifier : IBICSlottedAssetRepIdentifier
{
}

+ (id)inferredRepIdentifiersForImageReps:(id)arg1;
+ (id)scalesForImages:(id)arg1;
+ (id)imagesOrderedFromNarrowestToWidest:(id)arg1;
+ (id)inferredRepIdentifiersGroupedByItemNameForPaths:(id)arg1;
+ (id)inferredRepIdentifierForPath:(id)arg1 slotComponentTransformer:(CDUnknownBlockType)arg2;
+ (CDUnknownBlockType)slotComponentTransformerForPaths:(id)arg1;
+ (Class)slotClass;
- (id)slot;
@property(readonly) IBICHeightClass *heightClass;
@property(readonly) IBICWidthClass *widthClass;
@property(readonly) IBICScale *scale;
@property(readonly) IBICSubtype *subtype;
@property(readonly) IBICIdiom *idiom;

@end

@interface IBICImageSetRepSlot : IBICImageSlot
{
    IBICIdiom *_idiom;
    IBICSubtype *_subtype;
    IBICScale *_scale;
    IBICScreenWidth *_screenWidth;
    IBICWidthClass *_widthClass;
    IBICHeightClass *_heightClass;
    IBICMemoryClass *_memory;
    IBICGraphicsFeatureSet *_graphicsFeatureSet;
}

+ (id)slotWithIdiom:(id)arg1 scale:(id)arg2;
+ (id)slotWithIdiom:(id)arg1 scale:(id)arg2 screenWidth:(id)arg3;
+ (id)slotWithIdiom:(id)arg1 subtype:(id)arg2 scale:(id)arg3 widthClass:(id)arg4 heightClass:(id)arg5;
+ (id)orderedComponentClasses;
@property(readonly) IBICGraphicsFeatureSet *graphicsFeatureSet; // @synthesize graphicsFeatureSet=_graphicsFeatureSet;
@property(readonly) IBICMemoryClass *memory; // @synthesize memory=_memory;
@property(readonly) IBICHeightClass *heightClass; // @synthesize heightClass=_heightClass;
@property(readonly) IBICWidthClass *widthClass; // @synthesize widthClass=_widthClass;
@property(readonly) IBICScreenWidth *screenWidth; // @synthesize screenWidth=_screenWidth;
@property(readonly) IBICScale *scale; // @synthesize scale=_scale;
@property(readonly) IBICSubtype *subtype; // @synthesize subtype=_subtype;
@property(readonly) IBICIdiom *idiom; // @synthesize idiom=_idiom;
- (void).cxx_destruct;
- (id)scaleKey;
- (id)outputFileNameGivenBaseName:(id)arg1 andExtension:(id)arg2;
- (id)detailAreaKey;
- (int)compareDisplayOrder:(id)arg1;
- (id)shortDisplayName;
- (void)captureComponents;

@end

@interface IBICIntersectedSlotMask : IBICCompositeSlotMask
{
}

- (_Bool)matchesSlot:(id)arg1;

@end

@interface IBICInvertedSlotMask : IBICSlotMask
{
    IBICSlotMask *_mask;
}

- (void).cxx_destruct;
- (unsigned int)hash;
- (_Bool)isEqualToSlotMaskWithIdenticalClass:(id)arg1;
- (id)descriptionWithIndent:(int)arg1;
- (_Bool)matchesSlot:(id)arg1;
- (void)encodeWithBinaryArchiver:(id)arg1;
- (id)initWithBinaryUnarchiver:(id)arg1;
- (id)initWithMask:(id)arg1;

@end

@interface IBICIssue : NSObject <IBBinaryArchiving>
{
    NSString *_message;
    NSString *_catalogPath;
    NSSet *_catalogItemIdentifiers;
    int _severity;
    int _classification;
}

+ (id)conflictIssueForItem:(id)arg1 onName:(id)arg2;
+ (id)descriptionForSeverity:(int)arg1;
+ (id)descriptionForClassification:(int)arg1;
+ (id)noticeWithCatalogItem:(id)arg1 classification:(int)arg2 message:(id)arg3;
+ (id)errorWithCatalogItem:(id)arg1 classification:(int)arg2 message:(id)arg3;
+ (id)warningWithCatalogItem:(id)arg1 classification:(int)arg2 message:(id)arg3;
+ (id)relativeIdentifierPathsForItems:(id)arg1;
@property(readonly) int classification; // @synthesize classification=_classification;
@property(readonly) int severity; // @synthesize severity=_severity;
@property(readonly) NSSet *catalogItemIdentifiers; // @synthesize catalogItemIdentifiers=_catalogItemIdentifiers;
@property(readonly) NSString *catalogPath; // @synthesize catalogPath=_catalogPath;
@property(readonly) NSString *message; // @synthesize message=_message;
- (void).cxx_destruct;
@property(readonly) NSString *classificationDescription;
@property(readonly) NSString *severityDescription;
@property(readonly, copy) NSString *description;
@property(readonly) NSArray *orderedCatalogItemIdentifiers;
- (id)copyWithReplacedCatalogItems:(id)arg1;
- (void)encodeWithBinaryArchiver:(id)arg1;
- (id)initWithBinaryUnarchiver:(id)arg1;
- (id)initWithAffectedCatalogItem:(id)arg1 classification:(int)arg2 severity:(int)arg3 message:(id)arg4;
- (id)initWithAffectedCatalogItems:(id)arg1 classification:(int)arg2 severity:(int)arg3 message:(id)arg4;
- (id)initWithAffectedCatalogItemIdentifiers:(id)arg1 catalogPath:(id)arg2 classification:(int)arg3 severity:(int)arg4 message:(id)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

@interface IBICIssueGenerationContext : NSObject
{
    NSMutableDictionary *_userInfo;
    int _phase;
}

+ (id)issueGenerationContextWithPhase:(int)arg1;
+ (id)issueGenerationContext;
@property(readonly) int phase; // @synthesize phase=_phase;
@property(readonly) NSMutableDictionary *userInfo; // @synthesize userInfo=_userInfo;
- (void).cxx_destruct;
- (id)initWithPhase:(int)arg1;
- (id)init;

@end

@interface IBICLaunchImageSet : IBICSlottedAsset
{
}

+ (id)importPriority;
+ (id)contentReferenceTypeName;
+ (id)classNameComponents;
+ (id)catalogItemFileExtension;
+ (id)defaultInstanceForIdioms:(id)arg1;
+ (id)defaultName;
+ (Class)assetRepClass;
- (_Bool)requiresRootNamespace;
- (id)intrinsicallyOrderedChildren;
- (id)children;
- (id)assetRepForStructuredIdentifier:(id)arg1;
- (id)childForIdentifier:(id)arg1;
- (id)assetRepForIdentifier:(id)arg1;
- (id)assetRepForSlot:(id)arg1;
- (id)initializeManifestArchivist;

@end

@interface IBICLaunchImageSetRep : IBICSlottedAbstractImageRep
{
}

+ (id)contentReferenceTypeName;
+ (Class)slottedAssetClass;
+ (Class)repIdentifierClass;
+ (id)assetRepWithSlot:(id)arg1 fileName:(id)arg2 explicitlyUnassigned:(_Bool)arg3;
+ (id)assetRepWithRepIdentifier:(id)arg1;
- (_Bool)isMinimallyFitForCompiling;
- (_Bool)isImageDataSizedProperly;
- (id)baseFileNameForVersionedInfoPlistEntry;
- (void)setSlot:(id)arg1;
- (id)slot;
- (id)parent;
- (id)initWithSlot:(id)arg1;
- (_Bool)populateNamedAssetImportInfo:(id)arg1 allCompiledItems:(id)arg2 error:(id *)arg3;

@end

@interface IBICLaunchImageSetRepIdentifier : IBICSlottedAssetRepIdentifier
{
}

+ (id)inferredRepIdentifiersForImageReps:(id)arg1;
+ (id)inferredRepIdentifiersGroupedByItemNameForPaths:(id)arg1;
+ (id)inferredRepIdentifierForPath:(id)arg1 slotComponentTransformer:(CDUnknownBlockType)arg2;
+ (Class)slotClass;
- (id)slot;

@end

@interface IBICLaunchImageSetRepSlot : IBICImageSlot
{
    IBICIdiom *_idiom;
    IBICDeviceOrientation *_deviceOrientation;
    IBICSubtype *_subtype;
    IBICScale *_scale;
    IBICSystemVersion *_minimumSystemVersion;
    IBICExtent *_extent;
}

+ (id)orderedComponentClasses;
+ (id)slotWithIdiom:(id)arg1 subtype:(id)arg2 scale:(id)arg3 deviceOrientation:(id)arg4 extent:(id)arg5 minimumSystemVersion:(id)arg6;
@property(readonly) IBICExtent *extent; // @synthesize extent=_extent;
@property(readonly) IBICSystemVersion *minimumSystemVersion; // @synthesize minimumSystemVersion=_minimumSystemVersion;
@property(readonly) IBICScale *scale; // @synthesize scale=_scale;
@property(readonly) IBICSubtype *subtype; // @synthesize subtype=_subtype;
@property(readonly) IBICDeviceOrientation *deviceOrientation; // @synthesize deviceOrientation=_deviceOrientation;
@property(readonly) IBICIdiom *idiom; // @synthesize idiom=_idiom;
- (void).cxx_destruct;
- (id)requiredPixelSize;
- (id)outputFileNameGivenBaseName:(id)arg1 andExtension:(id)arg2;
- (id)baseFileNameForVersionedInfoPlistEntryForSlottedAssetSetName:(id)arg1;
- (id)pixelSize;
- (id)detailAreaKey;
- (int)compareDisplayOrder:(id)arg1;
- (id)shortDisplayName;
- (void)captureComponents;

@end

@interface IBICLocus : IBICSlotComponent
{
    unsigned int _locusType;
}

+ (id)itemWithIdentifier:(id)arg1 fileNameComponent:(id)arg2 title:(id)arg3 type:(unsigned int)arg4 displayOrder:(float)arg5;
+ (id)contentsJSONKey;
@property(readonly, nonatomic) unsigned int locusType; // @synthesize locusType=_locusType;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (_Bool)isEqualToSlotComponent:(id)arg1;
- (_Bool)isEqualToLocus:(id)arg1;
- (id)initWithIdentifier:(id)arg1 fileNameComponent:(id)arg2 title:(id)arg3 type:(unsigned int)arg4 displayOrder:(float)arg5;

@end

@interface IBICManifestArchivist : NSObject
{
    NSString *_manifestFileName;
    NSString *_childrenManifestKey;
    IBICAbstractCatalogItem *_delegate;
}

+ (id)manifestArchivistForSlottedAsset:(id)arg1;
@property __weak IBICAbstractCatalogItem *delegate; // @synthesize delegate=_delegate;
@property(copy) NSString *childrenManifestKey; // @synthesize childrenManifestKey=_childrenManifestKey;
@property(readonly) NSString *manifestFileName; // @synthesize manifestFileName=_manifestFileName;
- (void).cxx_destruct;
- (id)manifestContent;
- (id)infoDictionary;
- (void)replaceChildrenFromFileSystemSnapshot:(id)arg1 results:(id)arg2;
- (id)childrenByMergingLooseFilesContentFromSnapshot:(id)arg1 withJSONReferencedContent:(id)arg2 results:(id)arg3;
- (Class)classForLooseFileSystemChildSnapshot:(id)arg1;
- (id)childrenFromContentsJSONChildrenEntries:(id)arg1 results:(id)arg2;
- (id)childFromChildEntry:(id)arg1 results:(id)arg2;
- (id)validateManifest:(id)arg1 results:(id)arg2;
- (_Bool)validateManifestChildEntries:(id)arg1 results:(id)arg2;
- (_Bool)validateManifestTags:(id)arg1 results:(id)arg2;
- (_Bool)validateManifestVersion:(id)arg1 results:(id)arg2;
- (id)parseManifestFromSnapshot:(id)arg1 results:(id)arg2;
- (id)initWithDelegate:(id)arg1;
- (id)jsonRepresentationOfSize:(struct CGSize)arg1;
- (id)jsonRepresentationOfPoint:(struct CGPoint)arg1;
- (_Bool)validateOptionalSizeKey:(id)arg1 result:(id)arg2 inDictionary:(id)arg3;
- (_Bool)validateOptionalPointKey:(id)arg1 result:(id)arg2 inDictionary:(id)arg3;
- (_Bool)validateOptionalKey:(id)arg1 withStrictType:(Class)arg2 strictTypeName:(id)arg3 result:(id)arg4 inDictionary:(id)arg5;

@end

@interface IBICManifestChildPropertyMutator : IBICCatalogMutator
{
    NSString *_keyPath;
    id <NSCopying> _value;
    id <NSCopying> _originalValue;
    IBICAbstractCatalogItem *_childItem;
    NSData *_pendingManifestData;
    NSString *_pendingManifestPath;
    NSData *_originalAssetData;
    NSData *_updatedAssetData;
    NSString *_assetDataPath;
}

- (void).cxx_destruct;
- (id)inverseMutator;
- (id)mutationDescription;
- (void)applyToDiskWithCompletionHandler:(CDUnknownBlockType)arg1;
- (id)modifyAssetDataReturningError:(id *)arg1;
- (id)removeAssetDataReturningError:(id *)arg1;
- (id)addAssetDataReturningError:(id *)arg1;
- (void)applyToModel;
- (id)initWithChildItem:(id)arg1 andValue:(id)arg2 forKeyPath:(id)arg3;

@end

@interface IBICManifestPropertyMutator : IBICCatalogMutator
{
    NSString *_keyPath;
    id <NSCopying> _value;
    id <NSCopying> _originalValue;
    IBICAbstractCatalogItem *_item;
    NSData *_pendingManifestData;
    NSString *_pendingManifestPath;
}

- (void).cxx_destruct;
- (id)inverseMutator;
- (id)mutationDescription;
- (void)applyToDiskWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)applyToModel;
- (id)initWithItem:(id)arg1 andValue:(id)arg2 forKeyPath:(id)arg3;

@end

@interface IBICMemoryClass : IBICSlotComponent
{
    int _memoryClass;
}

+ (id)itemWithIdentifier:(id)arg1 fileNameComponent:(id)arg2 title:(id)arg3 displayOrder:(float)arg4 memoryClass:(int)arg5;
+ (id)contentsJSONKey;
@property(readonly) int memoryClass; // @synthesize memoryClass=_memoryClass;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithIdentifier:(id)arg1 fileNameComponent:(id)arg2 title:(id)arg3 displayOrder:(float)arg4 memoryClass:(int)arg5;

@end

@interface IBICMoveMutator : IBICCatalogMutator
{
    IBICAbstractCatalogItem *_destinationParent;
    IBICAbstractCatalogItem *_sourceParent;
    IBICAbstractCatalogItem *_item;
    NSString *_destinationPath;
    NSString *_sourcePath;
    _Bool _makeNamesUnique;
    _Bool _wasOnlyReference;
    int _namingStrategy;
    NSString *_explicitDestinationFileName;
    NSString *_originalFileName;
    NSData *_sourcePendingManifestData;
    NSString *_sourcePendingManifestPath;
    NSData *_destinationPendingManifestData;
    NSString *_destinationPendingManifestPath;
}

+ (id)moveMutatorForChangingFileName:(id)arg1 fileName:(id)arg2;
- (void).cxx_destruct;
- (id)mutationDescription;
- (id)inverseMutator;
- (void)applyToDiskWithCompletionHandler:(CDUnknownBlockType)arg1;
- (_Bool)applyMoveOrCopyReturningError:(id *)arg1;
- (void)applyToModel;
- (_Bool)isNoOp;
- (id)initWithItem:(id)arg1 destinationParent:(id)arg2 namingStrategy:(int)arg3 stategyOptions:(id)arg4;

@end

@interface IBICMutableImageResizingBehavior : IBICImageResizingBehavior
{
}

- (void)setCapInsets:(CDStruct_c64b4d12)arg1;
- (void)setCenterSize:(struct CGSize)arg1;
- (void)setCenterFillMode:(int)arg1;
- (void)setResizingMode:(int)arg1;

@end

@interface IBICPlatform : IBICSlotComponent
{
}

+ (id)contentsJSONKey;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (_Bool)isEqualToSlotComponent:(id)arg1;
- (_Bool)isEqualToPlatform:(id)arg1;

@end

@interface IBICRemoveMutator : IBICCatalogMutator
{
    IBICAbstractCatalogItem *_item;
    IBICAbstractCatalogItem *_parent;
    NSString *_absoluteFilePath;
    NSString *_targetFileName;
    NSString *_originalFileName;
    _Bool _wasOnlyReference;
    _Bool _wasBrokenReference;
    NSData *_pendingManifestData;
    NSString *_pendingManifestPath;
    NSNumber *_originalIndex;
}

- (void).cxx_destruct;
- (id)inverseMutator;
- (id)mutationDescription;
- (void)applyToDiskWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)applyToModel;
- (id)initWithItem:(id)arg1;
- (id)initWithItem:(id)arg1 targetFileName:(id)arg2;

@end

@interface IBICReorderMutator : IBICCatalogMutator
{
    IBICAbstractCatalogItem *_item;
    NSFileWrapper *_fileWrapper;
    NSData *_pendingManifestData;
    NSString *_pendingManifestPath;
    int _targetIndex;
    int _originalIndex;
}

- (void).cxx_destruct;
- (id)inverseMutator;
- (id)mutationDescription;
- (void)applyToDiskWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)applyToModel;
- (id)initWithItem:(id)arg1 targetIndex:(int)arg2;

@end

@interface IBICScale : IBICSlotComponent
{
    float _multiple;
    int _coreUIScale;
}

+ (id)itemWithIdentifier:(id)arg1 fileNameComponent:(id)arg2 title:(id)arg3 multiple:(float)arg4 coreUIScale:(int)arg5 displayOrder:(float)arg6;
+ (id)contentsJSONKey;
@property(readonly) int coreUIScale; // @synthesize coreUIScale=_coreUIScale;
@property(readonly) float multiple; // @synthesize multiple=_multiple;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (_Bool)isEqualToSlotComponent:(id)arg1;
- (_Bool)isEqualToScale:(id)arg1;
- (id)initWithIdentifier:(id)arg1 fileNameComponent:(id)arg2 title:(id)arg3 multiple:(float)arg4 coreUIScale:(int)arg5 displayOrder:(float)arg6;

@end

@interface IBICSchema : NSObject
{
    NSMutableSet *_slotComponents;
    NSMutableDictionary *_slotsComponentsByClassThenIdentifier;
    NSMutableDictionary *_slotsComponentsByClass;
    NSMutableSet *_slots;
    NSMutableDictionary *_slotsBySlotClassByPlatformID;
    NSMutableDictionary *_slotsBySlotClass;
    NSMutableDictionary *_slotsToRequiredCounterparts;
    NSMutableDictionary *_slotsToLabels;
    NSMutableDictionary *_slotUpgradeForDeprecatedSlot;
    NSMutableDictionary *_suggestionSetsByIdentifierBySlotClass;
    NSMutableDictionary *_detailFooterTitles;
    NSMutableDictionary *_slotMaskSetsBySlotByPlatform;
    NSMutableDictionary *_initialDeviceSpecificImageSetRepSlotsPerPlatform;
    NSMutableDictionary *_shouldIncludeOrientationInLaunchImageNameBySlot;
    NSMutableDictionary *_pixelSizesByLaunchImageSlots;
    NSMutableDictionary *_issueProvidersPerSlottedAssetClass;
    NSMutableDictionary *_catalogItemClassesToReferenceTypeNames;
    NSMutableDictionary *_referenceTypeNamesToCatalogItemClasses;
    NSMutableDictionary *_brandAssetCollectionSlotChildClasses;
    NSMutableSet *_catalogItemClasses;
    NSMutableSet *_appIconSlotsRequiringIdiomSuffixesInFileName;
    NSMutableSet *_launchImageSlotsRequiringIdiomSuffixesInFileName;
    NSMutableDictionary *_validationRecordsBySlotClass;
    NSMutableDictionary *_slotValidationRecordsBySlot;
    NSMutableSet *_fileTypes;
    NSMutableDictionary *_fileTypesBySlot;
    NSMutableDictionary *_fileTypesBySlotClass;
    NSMutableDictionary *_sizeClassesBySlot;
    NSMutableDictionary *_combinationsBySlotComponentClassAndIdiom;
    NSMutableDictionary *_catalogItemClassesByDirectoryExtension;
    NSMutableSet *_slotsToThin;
    _Bool _isConstructing;
    IBICIdiom *_universalIdiom;
    IBICPlatform *_iOSPlatform;
    IBICPlatform *_OSXPlatform;
}

+ (id)sharedInstance;
+ (void)setSchemaProvidersPromise:(CDUnknownBlockType)arg1;
@property(readonly) IBICPlatform *OSXPlatform; // @synthesize OSXPlatform=_OSXPlatform;
@property(readonly) IBICPlatform *iOSPlatform; // @synthesize iOSPlatform=_iOSPlatform;
@property(readonly) IBICIdiom *universalIdiom; // @synthesize universalIdiom=_universalIdiom;
- (void).cxx_destruct;
- (id)fileTypeWithIdentifier:(id)arg1;
- (id)sizeWithPointSize:(struct CGSize)arg1;
- (id)scaleWithMultiple:(float)arg1;
- (id)sizeWithIdentifier:(id)arg1;
- (id)scaleWithIdentifier:(id)arg1;
- (id)idiomWithIdentifier:(id)arg1;
- (id)subtypeWithIdentifier:(id)arg1;
- (id)platformWithIdentifier:(id)arg1;
- (id)extentWithIdentifier:(id)arg1;
- (id)deviceOrientationWithIdentifier:(id)arg1;
- (id)validLaunchImageRepSlots;
- (id)validAppIconSetRepSlots;
- (id)validIconSetRepSlots;
- (id)validImageSetRepSlots;
- (id)sizes;
- (id)scales;
- (id)idioms;
- (id)subtypes;
- (id)platforms;
- (id)extents;
- (id)deviceOrientations;
- (id)allFileUTIsToAllowInUnstructuredImport;
- (id)allFileExtensionsToAllowInUnstructuredImport;
- (Class)catalogItemClassForDirectoryExtension:(id)arg1;
- (id)classesForImportingLooseFilesInImportOrder;
- (Class)itemClassForCatalogReferenceTypeName:(id)arg1;
- (id)catalogReferenceTypeNameForItemClass:(Class)arg1;
- (void)registerCatalogItemClass:(Class)arg1;
- (void)registerCatalogItemClasses:(id)arg1;
- (_Bool)isPossibleSlotToThin:(id)arg1;
- (void)addPossibleSlotToThin:(id)arg1 expander:(CDUnknownBlockType)arg2;
- (void)addPossibleSlotsToThin:(id)arg1 expander:(CDUnknownBlockType)arg2;
- (id)orderedSlotComponentClassCombinationsForClass:(Class)arg1 andIdiom:(id)arg2;
- (id)combinationAxisForIdentifier:(id)arg1 slotComponentClass:(Class)arg2 idiom:(id)arg3;
- (void)addCombinationAxisWithValues:(id)arg1 identifier:(id)arg2 title:(id)arg3 displayOrder:(float)arg4 forIdioms:(id)arg5 forSlotComponentClass:(Class)arg6;
- (id)addCombinationAxisWithValues:(id)arg1 identifier:(id)arg2 title:(id)arg3 displayOrder:(float)arg4 forIdiom:(id)arg5 forSlotComponentClass:(Class)arg6;
- (void)addSizeClasses:(id)arg1 toSlot:(id)arg2;
- (id)fileTypeForExtension:(id)arg1;
- (id)fileExtensionsForSlot:(id)arg1;
- (id)validFileUTIsForSlotClass:(Class)arg1;
- (id)validFileExtensionsForSlotClass:(Class)arg1;
- (id)preferredFileTypeForSlotClass:(Class)arg1;
- (id)preferredFileTypeForSlot:(id)arg1;
- (id)fileTypesForSlotClass:(Class)arg1;
- (id)fileTypesForSlotInPreferenceOrder:(id)arg1;
- (id)fileTypesForSlot:(id)arg1;
- (void)addFileTypes:(id)arg1 forSlots:(id)arg2 expander:(CDUnknownBlockType)arg3;
- (void)addFileTypes:(id)arg1 forSlot:(id)arg2 expander:(CDUnknownBlockType)arg3;
- (void)addFileType:(id)arg1 forSlot:(id)arg2 expander:(CDUnknownBlockType)arg3;
- (_Bool)isValidFileExtension:(id)arg1 forSlotClass:(Class)arg2;
- (_Bool)isValidFileExtension:(id)arg1 forSlot:(id)arg2;
- (id)fileTypes;
- (void)addFileTypes:(id)arg1;
- (void)addFileType:(id)arg1;
- (_Bool)launchImagesSupportedForPlatform:(id)arg1 andIdiom:(id)arg2;
- (id)launchImageSlotsRequiringPlaceholders;
- (void)addLaunchImageSlotsRequiringPlaceholder:(id)arg1;
- (void)addLaunchImageSlotsRequiringIdiomSuffixInFileName:(id)arg1;
- (_Bool)launchImageSlotShouldIncludeIdiomSuffixInFileName:(id)arg1;
- (void)setPixelSize:(id)arg1 forLaunchImageRepSlot:(id)arg2;
- (id)pixelSizeForLaunchImageRepSlot:(id)arg1;
- (void)setShouldIncludeOrientationInLaunchImageName:(_Bool)arg1 forSlot:(id)arg2;
- (_Bool)shouldIncludeOrientationInLaunchImageNameForSlot:(id)arg1;
- (void)addAppIconSlotsRequiringIdiomSuffixInFileName:(id)arg1;
- (_Bool)appIconSlotShouldIncludeIdiomSuffixInFileName:(id)arg1;
- (id)universalImageRepSlots;
- (id)universalImageRepSlotSuggestionSets;
- (id)deviceSpecificImageRepSlotSuggestionSets;
- (_Bool)isImageSetRepSuggestionSetDeviceSpecific:(id)arg1;
- (void)addInitialDeviceSpecificImageSetRepSlots:(id)arg1 forPlatform:(id)arg2 expander:(CDUnknownBlockType)arg3;
- (void)addInitialDeviceSpecificImageSetRepSlot:(id)arg1 forPlatform:(id)arg2 expander:(CDUnknownBlockType)arg3;
- (id)initialDeviceSpecificImageSetRepSlotsForPlatform:(id)arg1;
- (void)setChildClass:(Class)arg1 forBrandAssetCollectionSlot:(id)arg2;
- (Class)childClassForBrandAssetCollectionSlot:(id)arg1;
- (id)issueProvidersForSlottedAssetClass:(Class)arg1;
- (void)addIssueProvider:(id)arg1 forSlottedAssetClass:(Class)arg2;
- (id)labelForSlot:(id)arg1;
- (void)setLabel:(id)arg1 forSlot:(id)arg2;
- (id)detailFooterTitleForDetailAreaKey:(id)arg1;
- (void)setFooterTitle:(id)arg1 forDetailAreaKey:(id)arg2;
- (id)suggestionSetWithIdentifier:(id)arg1 forSlotClass:(Class)arg2;
- (id)orderedSuggestionSetsForSlotClass:(Class)arg1;
- (id)suggestionSetsForSlotClass:(Class)arg1;
- (void)addSlotSuggestionSets:(id)arg1 compositingAsCounterpartsWithMode:(int)arg2;
- (void)addSlotSuggestionSets:(id)arg1;
- (void)addSlotSuggestionSet:(id)arg1;
- (id)upgradeSlotForDeprecatedSlot:(id)arg1;
- (void)addSlotUpgrade:(id)arg1 forDeprecatedSlot:(id)arg2;
- (id)validSlotsForSlotClass:(Class)arg1 andIdiom:(id)arg2;
- (id)validationRecordForSlot:(id)arg1;
- (id)validationRecordsForSlotClass:(Class)arg1;
- (void)addSlotValidationRecord:(id)arg1;
- (_Bool)isValidSlot:(id)arg1;
- (id)requiredCounterpartsForSlot:(id)arg1;
- (void)unionRequiredSlotEqualCounterpartSets:(id)arg1 expander:(CDUnknownBlockType)arg2;
- (void)unionRequiredSlotEqualCounterparts:(id)arg1 expander:(CDUnknownBlockType)arg2;
- (void)unionRequiredSlotCounterparts:(id)arg1 expander:(CDUnknownBlockType)arg2;
- (void)addRequiredCounterpart:(id)arg1 forSlot:(id)arg2 expander:(CDUnknownBlockType)arg3;
- (id)applicableSlotsOfClass:(Class)arg1 forPlatform:(id)arg2 targetIdioms:(id)arg3;
- (id)applicableSlotsOfClass:(Class)arg1 forPlatform:(id)arg2;
- (id)defaultSlotForClass:(Class)arg1;
- (id)validSlotsForSlotClass:(Class)arg1;
- (id)maskableSlotMasksOfClass:(Class)arg1 forPlatform:(id)arg2;
- (void)markSlot:(id)arg1 asMaskedBySlots:(id)arg2 forPlatform:(id)arg3;
- (void)addSlots:(id)arg1 withApplicablePlatforms:(id)arg2 expander:(CDUnknownBlockType)arg3;
- (void)addSlot:(id)arg1 withApplicablePlatforms:(id)arg2 expander:(CDUnknownBlockType)arg3;
- (void)addAlternateIdentifier:(id)arg1 forSlotComponent:(id)arg2;
- (id)slotComponentIdentifiersForSlotClass:(Class)arg1;
- (id)orderedSlotComponentsForSlotClass:(Class)arg1;
- (id)slotComponentsForSlotComponentClass:(Class)arg1;
- (id)slotComponentOfClass:(Class)arg1 withIdentifier:(id)arg2;
- (void)addSlotComponents:(id)arg1;
- (void)addSlotComponent:(id)arg1;
- (void)assertSchemaValidity;
- (void)importDataFromProviders:(id)arg1;
- (id)init;

@end

@interface IBICScreenWidth : IBICSlotComponent
{
    float _minimumWidth;
    float _maximumWidth;
    int _coreUISubtype;
}

+ (id)itemWithIdentifier:(id)arg1 fileNameComponent:(id)arg2 title:(id)arg3 minimumWidth:(float)arg4 maximumWidth:(float)arg5 coreUISubtype:(int)arg6 displayOrder:(float)arg7;
+ (id)fallbackContentsJSONKeys;
+ (id)contentsJSONKey;
@property(readonly) int coreUISubtype; // @synthesize coreUISubtype=_coreUISubtype;
@property(readonly) float maximumWidth; // @synthesize maximumWidth=_maximumWidth;
@property(readonly) float minimumWidth; // @synthesize minimumWidth=_minimumWidth;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (_Bool)isEqualToScreenWidth:(id)arg1;
- (id)initWithIdentifier:(id)arg1 fileNameComponent:(id)arg2 title:(id)arg3 minimumWidth:(float)arg4 maximumWidth:(float)arg5 coreUISubtype:(int)arg6 displayOrder:(float)arg7;

@end

@interface IBICSize : IBICSlotComponent <NSCopying>
{
    struct CGSize _pointSize;
}

+ (id)itemWithIdentifier:(id)arg1 fileNameComponent:(id)arg2 title:(id)arg3 pointSize:(struct CGSize)arg4 displayOrder:(float)arg5;
+ (id)contentsJSONKey;
@property(readonly) struct CGSize pointSize; // @synthesize pointSize=_pointSize;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (_Bool)isEqualToSlotComponent:(id)arg1;
- (_Bool)isEqualToSize:(id)arg1;
- (id)initWithIdentifier:(id)arg1 fileNameComponent:(id)arg2 title:(id)arg3 pointSize:(struct CGSize)arg4 displayOrder:(float)arg5;

@end

@interface IBICSizeValueTransformer : NSValueTransformer
{
}

- (id)transformedValue:(id)arg1;

@end

@interface IBICSlotComponentClassCombinationAxis : NSObject <NSCopying>
{
    NSString *_identifier;
    Class _slotComponentClass;
    NSArray *_combination;
    NSString *_title;
    float _displayOrder;
}

+ (id)slotComponentClassCombination:(id)arg1 identifier:(id)arg2 title:(id)arg3 displayOrder:(float)arg4 slotComponentClass:(Class)arg5;
@property(readonly, nonatomic) float displayOrder; // @synthesize displayOrder=_displayOrder;
@property(readonly, nonatomic) NSString *title; // @synthesize title=_title;
@property(readonly, nonatomic) NSArray *combination; // @synthesize combination=_combination;
@property(readonly, nonatomic) Class slotComponentClass; // @synthesize slotComponentClass=_slotComponentClass;
@property(readonly, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (unsigned int)hash;
- (_Bool)isEqualToSlotClassCombination:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (id)initWithSlotComponentClassCombinationCombination:(id)arg1 identifier:(id)arg2 title:(id)arg3 displayOrder:(float)arg4 slotComponentClass:(Class)arg5;

@end

@interface IBICSlotSuggestionSet : NSObject
{
    NSMutableDictionary *_userInfo;
    Class _slotClass;
    NSString *_section;
    NSString *_group;
    NSString *_title;
    NSString *_identifier;
    NSSet *_assetRepSlots;
    float _displayOrder;
    NSSet *_counterpartSuggestionSets;
    int _counterpartCompositingMode;
}

+ (id)suggestionSetWithIdentifier:(id)arg1 slots:(id)arg2 section:(id)arg3 group:(id)arg4 title:(id)arg5 displayOrder:(float)arg6 expander:(CDUnknownBlockType)arg7;
+ (id)suggestionSetWithIdentifier:(id)arg1 slots:(id)arg2 title:(id)arg3 displayOrder:(float)arg4 expander:(CDUnknownBlockType)arg5;
@property(readonly) int counterpartCompositingMode; // @synthesize counterpartCompositingMode=_counterpartCompositingMode;
@property(readonly, copy) NSSet *counterpartSuggestionSets; // @synthesize counterpartSuggestionSets=_counterpartSuggestionSets;
@property(readonly) float displayOrder; // @synthesize displayOrder=_displayOrder;
@property(readonly) NSSet *assetRepSlots; // @synthesize assetRepSlots=_assetRepSlots;
@property(readonly) NSString *identifier; // @synthesize identifier=_identifier;
@property(readonly) NSString *title; // @synthesize title=_title;
@property(readonly) NSString *group; // @synthesize group=_group;
@property(readonly) NSString *section; // @synthesize section=_section;
@property(readonly) Class slotClass; // @synthesize slotClass=_slotClass;
- (void).cxx_destruct;
- (_Bool)canRepresentSlots:(id)arg1;
- (int)compareDisplayOrder:(id)arg1;
- (id)description;
- (void)setCounterpartSuggestionSets:(id)arg1;
- (void)setCounterpartCompositingMode:(int)arg1;
@property(readonly) NSMutableDictionary *userInfo;
- (id)initWithIdentifier:(id)arg1 slots:(id)arg2 section:(id)arg3 group:(id)arg4 title:(id)arg5 displayOrder:(float)arg6 expander:(CDUnknownBlockType)arg7;

@end

@interface IBICSlotValidationRecord : NSObject
{
    _Bool _required;
    IBICSlot *_slot;
    NSString *_versionOfIntroduction;
    NSString *_versionOfObsolescence;
    NSString *_missingRequiredMessage;
    NSString *_obsoleteMessage;
}

@property(readonly, copy) NSString *obsoleteMessage; // @synthesize obsoleteMessage=_obsoleteMessage;
@property(readonly, copy) NSString *missingRequiredMessage; // @synthesize missingRequiredMessage=_missingRequiredMessage;
@property(readonly, copy) NSString *versionOfObsolescence; // @synthesize versionOfObsolescence=_versionOfObsolescence;
@property(readonly, copy) NSString *versionOfIntroduction; // @synthesize versionOfIntroduction=_versionOfIntroduction;
@property(readonly, getter=isRequired) _Bool required; // @synthesize required=_required;
@property(readonly) IBICSlot *slot; // @synthesize slot=_slot;
- (void).cxx_destruct;
- (_Bool)appliesToMinimumDeploymentTarget:(id)arg1;
- (id)initWithSlot:(id)arg1 isRequired:(_Bool)arg2 versionOfIntroduction:(id)arg3 versionOfObsolescence:(id)arg4 missingRequiredMessage:(id)arg5 obsoleteMessage:(id)arg6;

@end

@interface IBICSlottedAssetRepSlotDetailAreaKey : NSObject <NSCopying>
{
    Class _slotClass;
    id <IBICDetailAreaKeySection> _section;
    id <IBICDetailAreaKeyGroup> _group;
    id <IBICDetailAreaKeySubgroup> _subgroup;
}

+ (id)keyWithSlotClass:(Class)arg1 section:(id)arg2 group:(id)arg3 subgroup:(id)arg4;
+ (id)keyWithSlotClass:(Class)arg1 sectionComponents:(id)arg2 groupComponents:(id)arg3 subgroupComponents:(id)arg4;
@property(readonly) id <IBICDetailAreaKeySubgroup> subgroup; // @synthesize subgroup=_subgroup;
@property(readonly) id <IBICDetailAreaKeyGroup> group; // @synthesize group=_group;
@property(readonly) id <IBICDetailAreaKeySection> section; // @synthesize section=_section;
@property(readonly) Class slotClass; // @synthesize slotClass=_slotClass;
- (void).cxx_destruct;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (_Bool)isEqualToDetailAreaKey:(id)arg1;
- (unsigned int)hash;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithSlotClass:(Class)arg1 section:(id)arg2 group:(id)arg3 subgroup:(id)arg4;

@end

@interface IBICSpriteAtlas : IBICFolder
{
}

+ (Class)requiredChildrenClass;
+ (id)contentReferenceTypeName;
+ (id)catalogItemFileExtension;
+ (id)classNameComponents;
+ (id)defaultInstanceForIdioms:(id)arg1;
- (_Bool)isolatesAndConsolidatesContainedContent;
- (id)effectiveModificationDateForCARCompiler;
- (id)displayName;
- (id)defaultUnqualifiedRuntimeName;
- (_Bool)populateNamedAssetImportInfo:(id)arg1 allCompiledItems:(id)arg2 error:(id *)arg3;

@end

@interface IBICSubtype : IBICSlotComponent
{
    int _coreUISubtype;
}

+ (id)itemWithIdentifier:(id)arg1 fileNameComponent:(id)arg2 title:(id)arg3 coreUISubtype:(int)arg4 displayOrder:(float)arg5;
+ (id)contentsJSONKey;
@property(readonly) int coreUISubtype; // @synthesize coreUISubtype=_coreUISubtype;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (_Bool)isEqualToSlotComponent:(id)arg1;
- (_Bool)isEqualToSubtype:(id)arg1;
- (id)initWithIdentifier:(id)arg1 fileNameComponent:(id)arg2 title:(id)arg3 coreUISubtype:(int)arg4 displayOrder:(float)arg5;

@end

@interface IBICSyncResult : NSObject
{
    NSMutableArray *_errors;
    NSMutableArray *_issues;
}

@property(readonly) NSArray *issues; // @synthesize issues=_issues;
@property(readonly) NSArray *errors; // @synthesize errors=_errors;
- (void).cxx_destruct;
- (id)description;
- (void)addIssues:(id)arg1;
- (void)addIssue:(id)arg1;
- (void)addErrors:(id)arg1;
- (void)addError:(id)arg1;
- (id)init;

@end

@interface IBICSystemVersion : IBICSlotComponent <NSCoding>
{
    NSString *_platform;
    NSString *_marketingVersion;
}

+ (id)itemWithIdentifier:(id)arg1 fileNameComponent:(id)arg2 title:(id)arg3 platform:(id)arg4 marketingVersion:(id)arg5 displayOrder:(float)arg6;
+ (id)contentsJSONKey;
@property(readonly) NSString *marketingVersion; // @synthesize marketingVersion=_marketingVersion;
@property(readonly) NSString *platform; // @synthesize platform=_platform;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (_Bool)isEqualToSlotComponent:(id)arg1;
- (_Bool)isEqualToSystemVersion:(id)arg1;
- (id)initWithIdentifier:(id)arg1 fileNameComponent:(id)arg2 title:(id)arg3 platform:(id)arg4 marketingVersion:(id)arg5 displayOrder:(float)arg6;

@end

@interface IBICWidthClass : IBICSizeClass
{
}

+ (id)fallbackContentsJSONKeys;
+ (id)contentsJSONKey;

@end

@interface IBInvalidationToken : NSObject <IBInvalidation>
{
    CDUnknownBlockType _callback;
}

+ (id)tokenWithInvalidateTokens:(id)arg1;
+ (id)tokenWithCallback:(CDUnknownBlockType)arg1;
- (void).cxx_destruct;
- (void)invalidate;
- (id)initWithCallback:(CDUnknownBlockType)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

@interface IBLogAspect : NSObject
{
    unsigned int _logLevel;
    NSString *_name;
}

+ (id)logAspectWithName:(id)arg1;
@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (id)initWithName:(id)arg1;

@end

@interface IBMarketingVersion : NSObject
{
}

+ (_Bool)isVersion:(id)arg1 greaterThanOrEqualToVersion:(id)arg2;
+ (_Bool)isVersion:(id)arg1 greaterThanVersion:(id)arg2;
+ (_Bool)isVersion:(id)arg1 lessThanOrEqualToVersion:(id)arg2;
+ (_Bool)isVersion:(id)arg1 lessThanVersion:(id)arg2;

@end

@interface IBMarshallableObjectPackage : NSObject <IBBinaryArchiving, IBObjectRepresentationTranslator>
{
    NSDictionary *_objectsToObjectIDs;
    NSDictionary *_objectIDsToObjects;
    NSDictionary *_marshallingDescription;
    NSSet *_unorderedObjects;
}

@property(readonly, nonatomic) NSSet *unorderedObjects; // @synthesize unorderedObjects=_unorderedObjects;
@property(readonly, nonatomic) NSDictionary *marshallingDescription; // @synthesize marshallingDescription=_marshallingDescription;
- (void).cxx_destruct;
- (id)objectForObjectRepresentation:(id)arg1;
- (id)objectRepresentationForObject:(id)arg1;
@property(readonly, copy) NSString *description;
- (id)objectIDForObject:(id)arg1;
- (id)objectForObjectID:(id)arg1;
- (void)encodeWithBinaryArchiver:(id)arg1;
- (id)initWithBinaryUnarchiver:(id)arg1;
- (id)initWithMarshallingDescription:(id)arg1 objectsToObjectIDs:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

@interface IBMarshallingResult : NSObject <IBBinaryArchiving>
{
    id _value;
    NSArray *_warningMessages;
    NSError *_error;
}

+ (id)resultWithError:(id)arg1 warningMessages:(id)arg2;
+ (id)resultWithValue:(id)arg1 warningMessages:(id)arg2;
+ (id)resultWithValue:(id)arg1;
@property(readonly, nonatomic) NSError *error; // @synthesize error=_error;
@property(readonly, nonatomic) NSArray *warningMessages; // @synthesize warningMessages=_warningMessages;
@property(readonly, nonatomic) id value; // @synthesize value=_value;
- (void).cxx_destruct;
@property(readonly, copy) NSString *description;
- (void)encodeWithBinaryArchiver:(id)arg1;
- (id)initWithBinaryUnarchiver:(id)arg1;
- (id)initWithValue:(id)arg1 orError:(id)arg2 warningMessages:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

@interface IBMessageChannel : NSObject
{
    int _writeFD;
    int _readFD;
    _Bool _shutdown;
    NSDictionary *_remoteCapabilities;
    NSNumber *_protocolVersion;
}

+ (id)negotiateProtocolVersionFromLocalCapabilities:(id)arg1 remoteCapabilities:(id)arg2 error:(id *)arg3;
- (void).cxx_destruct;
- (int)binaryArchiveVersion;
- (void)shutdown;
- (_Bool)startupReturningError:(id *)arg1;
- (id)initWithSocket:(int)arg1 error:(id *)arg2;
- (id)initWithWriteDescriptor:(int)arg1 readDescriptor:(int)arg2 error:(id *)arg3;

@end

@interface IBMessageReceiveChannel : IBMessageChannel
{
}

- (void)deliverMessage:(SEL)arg1 toTarget:(id)arg2 withArguments:(id)arg3 context:(id)arg4 result:(id *)arg5;
- (void)runBlockingReceiveLoopNotifyingQueue:(id)arg1 notifyingTarget:(id)arg2 context:(id)arg3;
- (void)notifyTarget:(id)arg1 onQueue:(id)arg2 ofShutdownWithError:(id)arg3;
- (_Bool)startupReturningError:(id *)arg1;

@end

@interface IBMessageSendChannel : IBMessageChannel
{
    int _concurrentWriters;
}

- (_Bool)sendMessage:(SEL)arg1 returnValue:(id *)arg2 context:(id)arg3 error:(id *)arg4 arguments:(int)arg5;
- (void)shutdown;
- (_Bool)startupReturningError:(id *)arg1;

@end

@interface IBMutableIdentityDictionary : NSMutableDictionary
{
    NSMapTable *table;
    NSSortDescriptor *codingSortDescriptor;
}

+ (id)dictionaryWithObject:(id)arg1 forKey:(id)arg2;
@property(copy) NSSortDescriptor *codingSortDescriptor; // @synthesize codingSortDescriptor;
- (void).cxx_destruct;
- (void)removeObjectForKey:(id)arg1;
- (void)setObject:(id)arg1 forKeyedSubscript:(id)arg2;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (unsigned int)countByEnumeratingWithState:(CDStruct_11f37819 *)arg1 objects:(id *)arg2 count:(unsigned int)arg3;
- (id)keyEnumerator;
- (id)allKeys;
- (id)objectForKey:(id)arg1;
- (unsigned int)count;
- (Class)classForCoder;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)init;
- (id)initWithCapacity:(unsigned int)arg1;
- (id)initWithObjects:(const id *)arg1 forKeys:(const id *)arg2 count:(unsigned int)arg3;
- (id)initWithObjects:(id)arg1 forKeys:(id)arg2;
- (id)initWithObjects:(const id *)arg1 forKeys:(const id *)arg2 count:(unsigned int)arg3 codingSortDescriptor:(id)arg4;
- (id)initWithObjects:(id)arg1 forKeys:(id)arg2 codingSortDescriptor:(id)arg3;

@end

@interface IBMutableOrderedDictionary : NSMutableDictionary
{
    NSMutableOrderedSet *set;
    NSMapTable *backingMapTable;
}

- (void).cxx_destruct;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)allKeys;
- (id)lastValue;
- (id)lastKey;
- (id)firstValue;
- (id)firstKey;
- (void)removeObjectForKey:(id)arg1;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (unsigned int)countByEnumeratingWithState:(CDStruct_11f37819 *)arg1 objects:(id *)arg2 count:(unsigned int)arg3;
- (id)keyEnumerator;
- (id)objectForKey:(id)arg1;
- (id)keyAtIndex:(unsigned int)arg1;
- (unsigned int)indexOfKey:(id)arg1;
- (unsigned int)count;
- (Class)classForCoder;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithObjects:(id)arg1 forKeys:(id)arg2;
- (id)initWithCapacity:(unsigned int)arg1;
- (id)init;

@end

@interface IBObjectBasedMarshallingRequest : NSObject <IBBinaryArchiving, IBObjectRepresentationTranslator>
{
    NSString *_identifier;
    IBMarshallableObjectPackage *_objectPackage;
}

+ (id)requestWithMarshallableObjectPackage:(id)arg1;
@property(readonly, nonatomic) IBMarshallableObjectPackage *objectPackage; // @synthesize objectPackage=_objectPackage;
@property(readonly, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
- (id)objectForObjectRepresentation:(id)arg1;
- (id)objectRepresentationForObject:(id)arg1;
- (void)didFinishEncodingWithBinaryArchiver:(id)arg1;
- (void)encodeWithBinaryArchiver:(id)arg1;
- (void)didFinishDecodingWithBinaryUnarchiver:(id)arg1;
- (id)initWithBinaryUnarchiver:(id)arg1;
- (id)initWithIdentifier:(id)arg1 marshallableObjectPackage:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

@interface IBObjectBasedMarshallingResult : NSObject <IBBinaryArchiving>
{
    NSString *_identifier;
    id <IBObjectRepresentationTranslator> _archivingTranslationContext;
}

@property(readonly, nonatomic) id <IBObjectRepresentationTranslator> archivingTranslationContext; // @synthesize archivingTranslationContext=_archivingTranslationContext;
@property(readonly, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
- (void)didFinishEncodingWithBinaryArchiver:(id)arg1;
- (void)encodeWithBinaryArchiver:(id)arg1;
- (void)didFinishDecodingWithBinaryUnarchiver:(id)arg1;
- (id)initWithBinaryUnarchiver:(id)arg1;
- (id)_originalInitiatingRequestFromContextOfUnarchiver:(id)arg1;
- (id)initWithIdentifier:(id)arg1 archivingTranslationContext:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

@interface IBPlatformToolExtension : NSObject <IBBinaryArchiving>
{
    NSString *_initializerClassName;
    NSString *_bundlePath;
    NSString *_platformName;
}

@property(readonly, copy, nonatomic) NSString *platformName; // @synthesize platformName=_platformName;
@property(readonly, copy, nonatomic) NSString *bundlePath; // @synthesize bundlePath=_bundlePath;
@property(readonly, copy, nonatomic) NSString *initializerClassName; // @synthesize initializerClassName=_initializerClassName;
- (void).cxx_destruct;
@property(readonly, copy) NSString *description;
- (void)encodeWithBinaryArchiver:(id)arg1;
- (id)initWithBinaryUnarchiver:(id)arg1;
- (id)initWithInitializerClassName:(id)arg1 bundlePath:(id)arg2 platformName:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

@interface IBSemaphore : NSObject
{
    NSConditionLock *lock;
    int count;
}

- (void).cxx_destruct;
- (void)increment;
- (_Bool)decrementWithTimeout:(id)arg1;
- (void)decrementWithoutBlocking;
- (void)decrement;
- (id)initWithCount:(int)arg1;

@end

@interface IBStackBacktrace : NSObject
{
    NSArray *_addresses;
    NSString *_stringRepresentation;
}

+ (id)stackBacktraceWithCallStackReturnAddresses:(id)arg1;
+ (id)currentStackBacktraceWithMaximumNumberOfFrames:(unsigned int)arg1;
+ (id)currentStackBacktrace;
- (void).cxx_destruct;
@property(readonly) NSString *stringRepresentation; // @synthesize stringRepresentation=_stringRepresentation;
- (id)initWithMaximumNumberOfFrames:(unsigned int)arg1 ignoringFrames:(unsigned int)arg2;
- (id)initWithAddresses:(id)arg1;
- (id)init;

@end

@interface IBUserDefinedRuntimeAttribute : NSObject <NSCoding, NSCopying, IBBinaryArchiving>
{
    _Bool _localized;
    NSString *_typeIdentifier;
    NSString *_keyPath;
    id _value;
}

+ (id)decodeWithBinaryUnarchiver:(id)arg1;
+ (id)customAttributeWithKeyPath:(id)arg1 value:(id)arg2 isLocalized:(_Bool)arg3 andTypeIdentifier:(id)arg4;
@property(readonly, nonatomic) id value; // @synthesize value=_value;
@property(readonly, nonatomic, getter=isLocalized) _Bool localized; // @synthesize localized=_localized;
@property(readonly, nonatomic) NSString *keyPath; // @synthesize keyPath=_keyPath;
@property(readonly, nonatomic) NSString *typeIdentifier; // @synthesize typeIdentifier=_typeIdentifier;
- (void).cxx_destruct;
@property(readonly, nonatomic) int type;
@property(readonly) unsigned int hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithBinaryArchiver:(id)arg1;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithKeyPath:(id)arg1 value:(id)arg2 isLocalized:(_Bool)arg3 andTypeIdentifier:(id)arg4;

// Remaining properties
@property(readonly) Class superclass;

@end

@interface NSArray (IBArrayAdditions) <IBOrderedCollection>
+ (id)ib_arrayWithIndicesInRange:(struct _NSRange)arg1;
+ (id)ib_arrayWithCollection:(id)arg1;
+ (id)ib_arrayWithObjects:(id *)arg1 count:(int)arg2 ignoringNil:(_Bool)arg3;
+ (id)ib_arrayWithOptionalObjects:(int)arg1;
+ (id)ib_arrayWithOptionalObject:(id)arg1;
+ (id)ib_collectionWithObject:(id)arg1;
+ (id)ib_emptyCollection;
+ (Class)ib_mutableClass;
+ (id)ib_orderedCollectionWithOrderedCollection:(id)arg1;
- (void)ib_getObjects:(id *)arg1;
- (void)ib_removeObjectsInReceiverFromArray:(id)arg1;
- (void)ib_removeObjectsInReceiverFromOrderedSet:(id)arg1;
- (void)ib_removeObjectsInReceiverFromSet:(id)arg1;
- (id)ib_subarrayFromIndex:(int)arg1;
- (_Bool)ib_isEntirelyComposedOfInstancesOfClass:(Class)arg1;
- (id)ib_objectAtIndexIfInBounds:(int)arg1;
- (void)ib_invokeWithAccessToObjects:(CDUnknownBlockType)arg1;
- (id)ib_maximumObjectUsingComparator:(CDUnknownBlockType)arg1;
- (id)ib_minimumObjectUsingComparator:(CDUnknownBlockType)arg1;
- (id)ib_objectAtIndexFromEnd:(int)arg1;
- (int)ib_numberOfObjectsPassingTest:(CDUnknownBlockType)arg1;
- (id)ib_arrayBySortingUsingComparator:(CDUnknownBlockType)arg1;
- (_Bool)ib_isSortedWithComparator:(CDUnknownBlockType)arg1;
- (void)ib_enumerateCopyOfObjectsUsingBlock:(CDUnknownBlockType)arg1;
- (void)ib_enumerateObjectsUsingMutatingBlock:(CDUnknownBlockType)arg1;
- (void)ib_enumerateObjectsUsingBlock:(CDUnknownBlockType)arg1;
- (id)ib_collectionByRemovingNulls;
- (id)ib_indexesOfObjects:(id)arg1;
- (_Bool)ib_objectsAreStrictlyContainedBySet:(id)arg1;
- (_Bool)ib_objectsAreContainedBySet:(id)arg1;
- (id)ib_onlyObjectPassingTest:(CDUnknownBlockType)arg1;
- (id)ib_firstObjectPassingTest:(CDUnknownBlockType)arg1;
- (_Bool)ib_anyObjectsPassTest:(CDUnknownBlockType)arg1;
- (_Bool)ib_allObjectsPassTest:(CDUnknownBlockType)arg1;
- (int)ib_commonPrefixLengthWithArray:(id)arg1;
- (_Bool)ib_isLastIndex:(unsigned int)arg1;
- (id)allObjects;
- (Class)ib_mutableClass;
- (id)ib_objectBeforeObject:(id)arg1 wrap:(_Bool)arg2;
- (id)ib_objectAfterObject:(id)arg1 wrap:(_Bool)arg2;
- (_Bool)ib_isIndexInBounds:(unsigned int)arg1;
- (id)ib_objectsOfClasses:(id)arg1;
- (id)ib_objectsConformingToProtocol:(id)arg1;
- (id)ib_objectsOfClass:(Class)arg1;
- (id)anyObject;
- (id)ib_uniqueObjects;
- (id)ib_arrayBySortingUsingSelector:(SEL)arg1 onKeyPath:(id)arg2;
- (id)ib_arrayBySortingUsingSelector:(SEL)arg1;
- (id)ib_keepIf:(SEL)arg1 withObject:(id)arg2;
- (id)ib_keepIf:(SEL)arg1;
- (id)ib_arrayByRemovingDuplicates;
- (id)ib_arrayByReversingObjects;
- (id)ib_setByMappingBlock:(CDUnknownBlockType)arg1;
- (id)ib_arrayByApplyingBlock:(CDUnknownBlockType)arg1;
- (id)ib_collectionByMappingAndFilteringWithBlock:(CDUnknownBlockType)arg1;
- (id)ib_arrayByMappingAndFilteringWithBlock:(CDUnknownBlockType)arg1;
- (id)ib_arrayByMappingBlockAndAssertingOnNilMappedValue:(CDUnknownBlockType)arg1;
- (id)ib_arrayByMappingBlock:(CDUnknownBlockType)arg1;
- (id)ib_arrayByMappingWithBehavior:(int)arg1 andBlock:(CDUnknownBlockType)arg2;
- (_Bool)ib_binarySearchForObject:(id)arg1 usingComparator:(CDUnknownBlockType)arg2;
- (unsigned int)ib_indexOfFirstObjectPassingTest:(CDUnknownBlockType)arg1;
- (id)ib_collectionByRemovingObject:(id)arg1;
- (id)ib_collectionByAddingObject:(id)arg1;
- (id)ib_collectionByReversingObjects;
- (id)ib_collectionByKeepingObjectsInSet:(id)arg1;
- (id)ib_collectionByRemovingObjectsInSet:(id)arg1;
- (id)ib_collectionByRemovingObjectsFromCollection:(id)arg1;
- (id)ib_collectionByAddingObjectsFromCollection:(id)arg1;
- (id)ib_collectionByInsertingObjects:(id)arg1 atIndex:(int)arg2;
- (id)ib_collectionByInsertingObject:(id)arg1 atIndex:(int)arg2;
- (id)ib_collectionByMappingBlock:(CDUnknownBlockType)arg1;
- (id)ib_collectionByFilteringUsingBlock:(CDUnknownBlockType)arg1;
- (id)ib_setByFilteringUsingBlock:(CDUnknownBlockType)arg1;
- (id)ib_arrayByFilteringUsingBlock:(CDUnknownBlockType)arg1;
- (id)ib_arrayByRemovingObjectsInArray:(id)arg1;
- (id)ib_arrayByKeepingObjectsInSet:(id)arg1;
- (id)ib_arrayByRemovingObjectsInSet:(id)arg1;
- (id)ib_arrayByRemovingNulls;
- (id)ib_arrayByUniquifyingOnKey:(id)arg1;
- (id)ib_arrayByAppendingObjectsFromArrays:(id)arg1;
- (id)ib_arrayByRemovingObjectAtIndex:(unsigned int)arg1;
- (id)ib_arrayByRemovingObject:(id)arg1;
- (id)ib_arrayByReplacingObjectAtIndex:(unsigned int)arg1 withObject:(id)arg2;
- (id)ib_arrayByAppendingObjects:(id)arg1;
- (id)ib_onlyObject;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;
@end

@interface NSArray (IBBinaryArchivingAdditions) <IBBinaryArchiving>
- (void)encodeWithBinaryArchiver:(id)arg1;
- (id)initWithBinaryUnarchiver:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;
@end

@interface NSArray (IBICCombinations)
- (id)ib_collectionByCombiningAxes:(id)arg1 and:(id)arg2;
@end

@interface NSArray (IBICDetailAreaKeyConformance) <IBICDetailAreaKeySection, IBICDetailAreaKeyGroup, IBICDetailAreaKeySubgroup>
- (id)ib_onlyComponent;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;
@end

@interface NSArray (IBObjectBufferAdditions)
+ (id)ib_arrayFromContentsOfObjectBufferPopulatedBy:(CDUnknownBlockType)arg1;
@end

@interface NSArray (InfoPlistOverlay)
- (id)ib_overlayPlist:(id)arg1;
- (id)ib_initialPlistOverlayInstance;
- (Class)ib_immutableClassForPlistOverlay;
@end

@interface NSAttributedString (IBAttributedStringAdditions)
+ (id)ib_attributedStringWithStringAndAttributes:(id)arg1;
+ (id)ib_attributedStringWithString:(id)arg1 andAttributes:(id)arg2;
+ (id)ib_attributedStringWithString:(id)arg1;
+ (id)ib_attributedString;
- (id)ib_attributedStringByMappingAttributes:(CDUnknownBlockType)arg1;
@end

@interface NSBundle (IBFoundationBundleAdditions)
- (id)ib_shortBundleVersion;
- (id)ib_bundleVersion;
@end

@interface NSCharacterSet (IBCharacterSetAdditions)
+ (id)ib_cExtendedIdentifierInitialCharacterSet;
+ (id)ib_cExtendedIdentifierCharacterSet;
@end

@interface NSCoder (IBCodingAdditions)
- (struct CGPoint)ib_decodePointForKey:(id)arg1;
- (void)ib_encodePoint:(struct CGPoint)arg1 forKey:(id)arg2;
- (struct CGSize)ib_decodeSizeForKey:(id)arg1;
- (void)ib_encodeSize:(struct CGSize)arg1 forKey:(id)arg2;
- (CDStruct_c64b4d12)ib_decodeInsetForKey:(id)arg1;
- (void)ib_encodeInset:(CDStruct_c64b4d12)arg1 forKey:(id)arg2;
@end

@interface NSCountedSet (IBOrderedCountedAdditions)
- (id)ib_highestCountObjects;
@end

@interface NSData (IBBinaryArchivingAdditions) <IBBinaryArchiving>
- (void)encodeWithBinaryArchiver:(id)arg1;
- (id)initWithBinaryUnarchiver:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;
@end

@interface NSData (IBDataAdditions)
- (id)ib_initWithPrettyBase64String:(id)arg1;
- (id)ib_prettyBase64String;
- (id)ib_prettyBase64StringWithLineLength:(int)arg1 wrappedWithNewlines:(_Bool)arg2;
- (id)ib_base64DecodedData;
- (id)ib_base64EncodedData;
@end

@interface NSData (InfoPlistOverlay)
- (Class)ib_immutableClassForPlistOverlay;
@end

@interface NSDate (IBBinaryArchivingAdditions) <IBBinaryArchiving>
- (void)encodeWithBinaryArchiver:(id)arg1;
- (id)initWithBinaryUnarchiver:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;
@end

@interface NSDate (IBDateAdditions)
+ (double)ib_secondsSinceDate:(id)arg1;
- (_Bool)ib_isInThePast;
- (_Bool)ib_isBeforeDate:(id)arg1;
- (double)ib_secondsTillDate;
@end

@interface NSDate (InfoPlistOverlay)
- (Class)ib_immutableClassForPlistOverlay;
@end

@interface NSDictionary (IBBinaryArchivingAdditions) <IBBinaryArchiving>
- (void)encodeWithBinaryArchiver:(id)arg1;
- (id)initWithBinaryUnarchiver:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;
@end

@interface NSDictionary (IBDictionaryAdditions)
+ (id)ib_dictionaryWithIntrinsicallyKeyedValues:(id)arg1 nilKeyBehavior:(int)arg2 intrinsicKeyAccessor:(CDUnknownBlockType)arg3;
+ (id)ib_strictDictionaryWithKeysAndObjects:(id)arg1;
+ (id)ib_dictionaryOfObjects:(id)arg1 groupedIntoSetsByKeyPath:(id)arg2;
+ (id)ib_dictionaryOfObjects:(id)arg1 keyedByKeyPath:(id)arg2;
+ (id)ib_dictionaryWithKeys:(id)arg1 mappedToObjectsWithBlock:(CDUnknownBlockType)arg2;
+ (Class)ib_mutableClass;
- (id)ib_uniqueValues;
- (id)ib_uniqueKeys;
- (id)ib_anyKey;
- (id)ib_onlyObject;
- (id)ib_onlyKey;
- (id)ib_keysSortedUsingComparator:(CDUnknownBlockType)arg1;
- (id)ib_objectForClassKey:(Class)arg1;
- (int)ib_integerForKey:(id)arg1;
- (float)ib_doubleForKey:(id)arg1 defaultValue:(float)arg2;
- (int)ib_integerForKey:(id)arg1 defaultValue:(int)arg2;
- (id)ib_objectArrayForKeyArray:(id)arg1;
- (id)ib_allElementsOfValueCollections;
- (void)ib_enumerateKeysOrderedBySelector:(SEL)arg1 withBlock:(CDUnknownBlockType)arg2;
- (id)ib_sortedKeysByComparingValuesWithSelector:(SEL)arg1;
- (id)ib_sortedKeysUsingComparator:(CDUnknownBlockType)arg1;
- (id)ib_invertedDictionaryOfKeysGroupedByValueUsingMutableDictionaryClass:(Class)arg1;
- (id)ib_invertedDictionaryOfKeysGroupedByValue;
- (id)ib_invertedDictionaryUsingMutableDictionaryClass:(Class)arg1;
- (id)ib_invertedDictionary;
- (id)ib_dictionaryBySettingObject:(id)arg1 forKey:(id)arg2;
- (id)ib_objectForKey:(id)arg1 inDictionaryForPossibleKeys:(id)arg2;
- (id)ib_objectForKey:(id)arg1 inDictionaryForKey:(id)arg2;
- (id)ib_dictionaryByAddingEntriesFromDictionary:(id)arg1;
- (id)ib_dictionaryByRemovingObjectsForKeys:(id)arg1;
- (id)ib_dictionaryByApplyingFilterToKeys:(CDUnknownBlockType)arg1;
- (id)ib_dictionaryByMappingValuesWithKeyValueBlock:(CDUnknownBlockType)arg1;
- (id)ib_dictionaryByMappingValuesWithBlock:(CDUnknownBlockType)arg1;
- (id)ib_dictionaryByMappingKeysWithBlock:(CDUnknownBlockType)arg1;
- (Class)ib_mutableClass;
@end

@interface NSDictionary (InfoPlistOverlay)
- (id)ib_overlayPlist:(id)arg1;
- (id)ib_initialPlistOverlayInstance;
- (Class)ib_immutableClassForPlistOverlay;
@end

@interface NSError (IBBinaryArchiving)
- (void)encodeWithBinaryArchiver:(id)arg1;
- (id)initWithBinaryUnarchiver:(id)arg1;
@end

@interface NSError (IBErrorAdditions)
+ (id)ib_errorWithUnderlyingError:(id)arg1 recoverySuggestion:(id)arg2 localizedDescriptionFormat:(id)arg3;
+ (id)ib_errorWithLocalizedDescription:(id)arg1 domain:(id)arg2 andCode:(int)arg3;
+ (id)ib_errorWithLocalizedDescriptionFormat:(id)arg1;
+ (id)ib_errorWithLocalizedDescription:(id)arg1;
+ (id)ib_errorWithLocalizedDescription:(id)arg1 andFailureReason:(id)arg2;
+ (id)ib_errorWithLocalizedDescription:(id)arg1 andRecoverySuggestion:(id)arg2;
+ (id)ib_errorWithLocalizedDescription:(id)arg1 failureReason:(id)arg2 andRecoverySuggestion:(id)arg3;
+ (id)ib_errorWithLocalizedDescription:(id)arg1 failureReason:(id)arg2 recoverySuggestion:(id)arg3 domain:(id)arg4 andCode:(int)arg5;
+ (id)ib_errorWithLocalizedDescription:(id)arg1 failureReason:(id)arg2 recoverySuggestion:(id)arg3 domain:(id)arg4 code:(int)arg5 andRecoveryAttempter:(id)arg6;
- (id)ib_firstObjectInSelfAndUnderlyingErrorsForUserInfoKey:(id)arg1;
- (id)ib_errorForPresentingToUserAfterLoggingToConsole;
- (id)ib_aggregatedDescriptionAndFailureReasons;
- (void)ib_enumerateSelfAndUnderlyingErrors:(CDUnknownBlockType)arg1;
- (id)ib_underlyingErrors;
- (id)ib_errorByInjectingUnderlyingError:(id)arg1;
- (id)ib_errorByInjectingUserInfoObject:(id)arg1 forKey:(id)arg2;
- (_Bool)ib_isErrorWithDomain:(id)arg1 andCode:(int)arg2;
@end

@interface NSException (IBNSExceptionAdditions)
- (id)ib_exceptionByModifyingUserInfo:(CDUnknownBlockType)arg1;
@end

@interface NSFileManager (IBFileManagerAdditions)
- (id)ib_directoriesAtPath:(id)arg1 error:(id *)arg2;
- (id)ib_filesAtPath:(id)arg1 error:(id *)arg2;
- (_Bool)ib_overwriteFileAtPath:(id)arg1 withLinkToFileAtPath:(id)arg2 error:(id *)arg3;
- (_Bool)ib_overwriteFileAtPath:(id)arg1 withFileAtPath:(id)arg2 error:(id *)arg3;
- (_Bool)ib_removeFileAtPathIfExists:(id)arg1 error:(id *)arg2;
- (_Bool)pathIsFile:(id)arg1;
- (_Bool)ib_pathIsDirectory:(id)arg1;
@end

@interface NSFileManager (IBICCatalogFileManager) <IBICCatalogFileManager>
+ (id)ib_defaultManager;
- (void)ib_endBatchEdits;
- (void)ib_startBatchEdits;
- (_Bool)ib_moveItemsAtPaths:(id)arg1 toPaths:(id)arg2 error:(id *)arg3;
- (_Bool)ib_copyItemsAtPaths:(id)arg1 toPaths:(id)arg2 error:(id *)arg3;
- (_Bool)ib_addItemsAtPaths:(id)arg1 force:(_Bool)arg2 error:(id *)arg3;
- (_Bool)ib_removeItemsAtPaths:(id)arg1 moveToTrash:(_Bool)arg2 error:(id *)arg3;
- (_Bool)ib_createDirectoryAtPath:(id)arg1 withIntermediateDirectories:(_Bool)arg2 attributes:(id)arg3 error:(id *)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;
@end

@interface NSFileManager (IBNSFileManagerAdditions)
- (_Bool)ib_directoryExistsAtPath:(id)arg1;
@end

@interface NSKeyedArchiver (IBKeyedArchiverAdditions)
+ (id)ib_archiveDataFromRunningBlock:(CDUnknownBlockType)arg1;
+ (id)ib_cloneObjectByArchiving:(id)arg1;
@end

@interface NSKeyedUnarchiver (IBKeyedArchiverAdditions)
+ (void)ib_unarchiveData:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
@end

@interface NSLocale (IBBinaryArchivingAdditions) <IBBinaryArchiving>
- (void)encodeWithBinaryArchiver:(id)arg1;
- (id)initWithBinaryUnarchiver:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;
@end

@interface NSMapTable (IBMapTableAdditions)
+ (id)ib_strongToStrongObjectsMapTable;
- (id)ib_objectForKey:(id)arg1 creatingIfNecessaryWithBlock:(CDUnknownBlockType)arg2;
- (void)ib_addObject:(id)arg1 toSetForKey:(id)arg2;
- (void)ib_addObject:(id)arg1 toArrayForKey:(id)arg2;
- (id)ib_collectionOfClass:(Class)arg1 forKey:(id)arg2;
@end

@interface NSMutableArray (IBMutableArrayAdditions) <IBMutableOrderedCollection>
- (void)ib_reverseObjects;
- (void)ib_removeObjectsInCollection:(id)arg1;
- (void)ib_moveObjects:(id)arg1 toIndex:(int)arg2;
- (void)ib_addObjectsFromCollection:(id)arg1;
- (void)ib_addObjectToSortedCollectionUsingBinarySearch:(id)arg1 comparisonSelector:(SEL)arg2;
- (void)ib_addObjectToSortedCollectionUsingBinarySearch:(id)arg1 comparator:(CDUnknownBlockType)arg2;
- (void)ib_insertObjects:(id)arg1 atIndex:(int)arg2;
- (void)ib_removeObjects:(id)arg1;
- (void)ib_filterUsingBlock:(CDUnknownBlockType)arg1;
- (void)ib_removeObjectsPassingTest:(CDUnknownBlockType)arg1;
- (void)ib_removeObjectsInSet:(id)arg1;
- (void)ib_push:(id)arg1;
- (id)ib_pop;
- (id)ib_dequeueObjectsWithMaxCount:(int)arg1;
- (void)ib_insertObjectsAtFront:(id)arg1;
- (void)ib_appendObjects:(id)arg1;
- (void)ib_addObjectIfNonNil:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;
@end

@interface NSMutableAttributedString (IBMutableAttributedStringAdditions)
- (void)ib_appendAttributedStringIfNonNil:(id)arg1;
- (void)ib_appendString:(id)arg1 withAttributes:(id)arg2;
- (void)ib_addAttribute:(id)arg1 withValue:(id)arg2;
@end

@interface NSMutableData (IBMutableDataAdditions)
- (void)ib_appendByte:(unsigned char)arg1;
@end

@interface NSMutableDictionary (IBMutableDictionaryAdditions)
+ (Class)ib_mutableClass;
- (void)ib_mapValues:(CDUnknownBlockType)arg1;
- (void)ib_overrideObject:(id)arg1 forKey:(id)arg2 during:(CDUnknownBlockType)arg3;
- (void)ib_setObject:(id)arg1 forClassKey:(Class)arg2;
- (void)ib_setObject:(id)arg1 forKeys:(id)arg2;
- (void)ib_setObjectIfNonNil:(id)arg1 forKey:(id)arg2;
- (void)ib_decrementIntegerForKey:(id)arg1;
- (void)ib_incrementIntegerForKey:(id)arg1;
- (void)ib_setDouble:(float)arg1 forKey:(id)arg2;
- (void)ib_setInteger:(int)arg1 forKey:(id)arg2;
- (void)ib_setObject:(id)arg1 forKey:(id)arg2 inDictionaryForKey:(id)arg3 inDictionaryForKey:(id)arg4 subDictionaryClass:(Class)arg5;
- (void)ib_setObject:(id)arg1 forKey:(id)arg2 inDictionaryForKey:(id)arg3 inDictionaryForKey:(id)arg4;
- (void)ib_setObject:(id)arg1 forKey:(id)arg2 inDictionaryForKey:(id)arg3 subDictionaryClass:(Class)arg4;
- (void)ib_setObject:(id)arg1 forKey:(id)arg2 inDictionaryForKey:(id)arg3;
- (void)ib_setObjectIfNonNil:(id)arg1 forKey:(id)arg2 inDictionaryForKey:(id)arg3;
- (void)ib_removeLastObjectFromArrayForKey:(id)arg1;
- (void)ib_setObject:(id)arg1 forKey:(id)arg2 inDictionaryForKey:(id)arg3 inDictionaryForKey:(id)arg4 outerDictionaryClass:(Class)arg5;
- (void)ib_removeObjectsForKeys:(id)arg1;
- (void)ib_removeObject:(id)arg1 fromSetForKey:(id)arg2;
- (void)ib_removeObject:(id)arg1 fromSetForKey:(id)arg2 inDictionaryForKey:(id)arg3;
- (void)ib_removeObjectForKey:(id)arg1 inDictionaryForKey:(id)arg2 inDictionaryForKey:(id)arg3;
- (void)ib_removeObjectForKey:(id)arg1 inDictionaryForKey:(id)arg2;
- (id)ib_objectForKey:(id)arg1 inDictionaryForKey:(id)arg2 inDictionaryForKey:(id)arg3 creatingIfNecessaryWithBlock:(CDUnknownBlockType)arg4;
- (id)ib_objectForKey:(id)arg1 inDictionaryForKey:(id)arg2 creatingIfNecessaryWithBlock:(CDUnknownBlockType)arg3;
- (id)ib_objectForKey:(id)arg1 creatingIfNecessaryWithBlock:(CDUnknownBlockType)arg2;
- (void)ib_insertObject:(id)arg1 intoArrayForKey:(id)arg2 atIndex:(int)arg3;
- (void)ib_addObject:(id)arg1 toCountedSetForKey:(id)arg2 inDictionaryForKey:(id)arg3;
- (void)ib_addObject:(id)arg1 toCountedSetForKey:(id)arg2;
- (void)ib_addObject:(id)arg1 toSetForKey:(id)arg2 inDictionaryForKey:(id)arg3 subDictionaryClass:(Class)arg4;
- (void)ib_addObject:(id)arg1 toSetForKey:(id)arg2 inDictionaryForKey:(id)arg3;
- (void)ib_addObject:(id)arg1 toSetForKey:(id)arg2;
- (void)ib_addObject:(id)arg1 toArrayForKey:(id)arg2 inDictionaryForKey:(id)arg3 inDictionaryForKey:(id)arg4 subDictionaryClass:(Class)arg5;
- (void)ib_addObject:(id)arg1 toArrayForKey:(id)arg2 inDictionaryForKey:(id)arg3 subDictionaryClass:(Class)arg4;
- (void)ib_addObject:(id)arg1 toSetForKey:(id)arg2 inDictionaryForKey:(id)arg3 inDictionaryForKey:(id)arg4;
- (void)ib_addObject:(id)arg1 toArrayForKey:(id)arg2 inDictionaryForKey:(id)arg3 inDictionaryForKey:(id)arg4;
- (void)ib_addObject:(id)arg1 toArrayForKey:(id)arg2 inDictionaryForKey:(id)arg3;
- (void)ib_addObject:(id)arg1 toArrayForKey:(id)arg2;
- (void)ib_addObjects:(id)arg1 toSetForKey:(id)arg2;
- (void)ib_addObjects:(id)arg1 toArrayForKey:(id)arg2;
- (id)ib_collectionOfClass:(Class)arg1 forKey:(id)arg2;
@end

@interface NSMutableDictionary (IBMutableIdentityDictionaryAdditions)
- (void)ib_setObject:(id)arg1 forKey:(id)arg2 inIdentityDictionaryForKey:(id)arg3;
@end

@interface NSMutableOrderedSet (IBMutableOrderedSetAdditions) <IBMutableOrderedCollection>
- (void)ib_reverseObjects;
- (void)ib_removeObjectsInCollection:(id)arg1;
- (void)ib_mergeAdditionsAndOrderingHintsFromOrderedSet:(id)arg1;
- (void)ib_addObjectToSortedCollectionUsingBinarySearch:(id)arg1 comparisonSelector:(SEL)arg2;
- (void)ib_addObjectToSortedCollectionUsingBinarySearch:(id)arg1 comparator:(CDUnknownBlockType)arg2;
- (void)ib_insertObjects:(id)arg1 atIndex:(int)arg2;
- (void)ib_addObjectIfNonNil:(id)arg1;
- (void)ib_appendObjects:(id)arg1;
- (void)ib_addObjectsFromCollection:(id)arg1;
- (id)ib_dequeue;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;
@end

@interface NSMutableSet (IBMutableSetAdditions) <IBMutableCollection>
+ (id)ib_setWithCollection:(id)arg1;
- (void)ib_removeObjectsInCollection:(id)arg1;
- (void)ib_addObjectIfNonNil:(id)arg1;
- (void)ib_appendObjects:(id)arg1;
- (id)ib_popAnyObject;
- (id)ib_objectsOfClass:(Class)arg1;
- (void)ib_addObjectsFromCollection:(id)arg1;
- (void)ib_removeObjectsPassingTest:(CDUnknownBlockType)arg1;
- (void)ib_removeObjectsFromCollection:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;
@end

@interface NSMutableString (IBMutableStringAdditions)
- (void)ib_indent:(int)arg1 andAppendFormat:(id)arg2;
- (void)ib_indent:(int)arg1 andAppendString:(id)arg2;
@end

@interface NSNull (IBBinaryArchivingAdditions) <IBBinaryArchiving>
- (void)encodeWithBinaryArchiver:(id)arg1;
- (id)initWithBinaryUnarchiver:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;
@end

@interface NSNumber (IBBinaryArchivingAdditions) <IBBinaryArchiving>
+ (id)decodeWithBinaryUnarchiver:(id)arg1;
- (void)encodeWithBinaryArchiver:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;
@end

@interface NSNumber (IBNSValueAdditions)
- (int)ib_valueType;
@end

@interface NSNumber (InfoPlistOverlay)
- (Class)ib_immutableClassForPlistOverlay;
@end

@interface NSObject (IBBinaryArchivingAdditions)
+ (id)decodeWithBinaryUnarchiver:(id)arg1;
- (void)didFinishEncodingWithBinaryArchiver:(id)arg1;
- (void)encodeWithBinaryArchiver:(id)arg1;
- (const char *)cStringClassNameForBinaryArchiver:(id)arg1;
- (void)didFinishDecodingWithBinaryUnarchiver:(id)arg1;
- (id)initWithBinaryUnarchiver:(id)arg1;
@end

@interface NSObject (IBObjectAdditions)
+ (_Bool)ib_overridesClassMethod:(SEL)arg1;
+ (_Bool)ib_overridesInstanceMethod:(SEL)arg1;
- (void)ib_cloneProperties:(id)arg1 toObject:(id)arg2;
- (void)ib_didChangeValueForKeys:(id)arg1;
- (void)ib_willChangeValueForKeys:(id)arg1;
@end

@interface NSObject (InfoPlistOverlay)
- (id)ib_overlayPlist:(id)arg1;
- (id)ib_initialPlistOverlayInstance;
- (id)ib_deepCloneForPlistOverlay;
- (Class)ib_immutableClassForPlistOverlay;
@end

@interface NSOperationQueue (IBOperationQueueAdditions)
- (void)ib_addOperationWithBlock:(CDUnknownBlockType)arg1 waitUntilFinished:(_Bool)arg2;
@end

@interface NSOrderedSet (IBBinaryArchivingAdditions) <IBBinaryArchiving>
- (void)encodeWithBinaryArchiver:(id)arg1;
- (id)initWithBinaryUnarchiver:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;
@end

@interface NSOrderedSet (IBObjectBufferAdditions)
+ (id)ib_orderedSetFromContentsOfObjectBufferPopulatedBy:(CDUnknownBlockType)arg1;
@end

@interface NSOrderedSet (IBOrderedSetAdditions) <IBOrderedCollection>
+ (id)ib_orderedCollectionWithOrderedCollection:(id)arg1;
+ (id)ib_collectionWithObject:(id)arg1;
+ (id)ib_emptyCollection;
+ (Class)ib_mutableClass;
- (void)ib_getObjects:(id *)arg1;
- (void)ib_removeObjectsInReceiverFromArray:(id)arg1;
- (void)ib_removeObjectsInReceiverFromOrderedSet:(id)arg1;
- (void)ib_removeObjectsInReceiverFromSet:(id)arg1;
- (id)ib_maximumObjectUsingComparator:(CDUnknownBlockType)arg1;
- (id)ib_minimumObjectUsingComparator:(CDUnknownBlockType)arg1;
- (id)ib_arrayBySortingUsingComparator:(CDUnknownBlockType)arg1;
- (int)ib_numberOfObjectsPassingTest:(CDUnknownBlockType)arg1;
- (id)ib_arrayBySortingUsingSelector:(SEL)arg1 onKeyPath:(id)arg2;
- (id)ib_arrayBySortingUsingSelector:(SEL)arg1;
- (void)ib_enumerateCopyOfObjectsUsingBlock:(CDUnknownBlockType)arg1;
- (void)ib_enumerateObjectsUsingMutatingBlock:(CDUnknownBlockType)arg1;
- (void)ib_enumerateObjectsUsingBlock:(CDUnknownBlockType)arg1;
- (_Bool)ib_binarySearchForObject:(id)arg1 usingComparator:(CDUnknownBlockType)arg2;
- (unsigned int)ib_indexOfFirstObjectPassingTest:(CDUnknownBlockType)arg1;
- (id)ib_collectionByKeepingObjectsInSet:(id)arg1;
- (id)ib_collectionByRemovingObjectsInSet:(id)arg1;
- (id)ib_collectionByRemovingObjectsFromCollection:(id)arg1;
- (id)ib_collectionByAddingObjectsFromCollection:(id)arg1;
- (id)ib_collectionByReversingObjects;
- (id)ib_collectionByRemovingObject:(id)arg1;
- (id)ib_collectionByInsertingObjects:(id)arg1 atIndex:(int)arg2;
- (id)ib_collectionByInsertingObject:(id)arg1 atIndex:(int)arg2;
- (id)ib_collectionByAddingObject:(id)arg1;
- (id)ib_collectionByMappingBlock:(CDUnknownBlockType)arg1;
- (id)ib_collectionByMappingAndFilteringWithBlock:(CDUnknownBlockType)arg1;
- (id)ib_orderedSetByMappingAndFilteringWithBlock:(CDUnknownBlockType)arg1;
- (id)ib_orderedSetByMappingBlock:(CDUnknownBlockType)arg1;
- (id)ib_collectionByFilteringUsingBlock:(CDUnknownBlockType)arg1;
- (id)ib_collectionByRemovingNulls;
- (id)ib_onlyObjectPassingTest:(CDUnknownBlockType)arg1;
- (id)ib_firstObjectPassingTest:(CDUnknownBlockType)arg1;
- (_Bool)ib_objectsAreStrictlyContainedBySet:(id)arg1;
- (_Bool)ib_objectsAreContainedBySet:(id)arg1;
- (_Bool)ib_anyObjectsPassTest:(CDUnknownBlockType)arg1;
- (_Bool)ib_allObjectsPassTest:(CDUnknownBlockType)arg1;
- (id)ib_arrayByMappingBlock:(CDUnknownBlockType)arg1;
- (Class)ib_mutableClass;
- (id)ib_uniqueObjects;
- (id)allObjects;
- (id)ib_setByFilteringUsingBlock:(CDUnknownBlockType)arg1;
- (id)ib_prefixOrderedSetUpToObject:(id)arg1;
- (id)ib_objectsConformingToProtocol:(id)arg1;
- (id)ib_objectsOfClass:(Class)arg1;
- (id)ib_orderedSetByFilteringUsingBlock:(CDUnknownBlockType)arg1;
- (id)ib_orderedSetByMoveObjectsAtIndexes:(id)arg1 toIndex:(int)arg2;
- (id)ib_orderedSetByInsertingObject:(id)arg1 atIndex:(int)arg2;
- (id)ib_orderedSetByAddingObject:(id)arg1;
- (id)ib_orderedSetByRemovingObjects:(id)arg1;
- (id)ib_orderedSetByRemovingObject:(id)arg1;
- (id)ib_onlyObject;
- (id)anyObject;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;
@end

@interface NSRunLoop (IBNSRunLoopAdditions)
- (void)ib_keepObjectAlive:(id)arg1 untilNextSpinInMode:(id)arg2;
@end

@interface NSSet (IBBinaryArchivingAdditions) <IBBinaryArchiving>
- (void)encodeWithBinaryArchiver:(id)arg1;
- (id)initWithBinaryUnarchiver:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;
@end

@interface NSSet (IBICCombinations)
- (id)ib_collectionByCombiningAxes:(id)arg1 and:(id)arg2;
@end

@interface NSSet (IBObjectBufferAdditions)
+ (id)ib_setFromContentsOfObjectBufferPopulatedBy:(CDUnknownBlockType)arg1;
@end

@interface NSSet (IBSetAdditions) <IBCollection>
+ (id)ib_setByUnioningCollections:(id)arg1;
+ (id)ib_setByUnioningCollection:(id)arg1 withCollection:(id)arg2;
+ (id)ib_collectionWithObject:(id)arg1;
+ (id)ib_emptyCollection;
+ (Class)ib_mutableClass;
- (void)ib_getObjects:(id *)arg1;
- (void)ib_removeObjectsInReceiverFromArray:(id)arg1;
- (void)ib_removeObjectsInReceiverFromOrderedSet:(id)arg1;
- (void)ib_removeObjectsInReceiverFromSet:(id)arg1;
- (int)ib_numberOfObjectsIntersectingEnumerable:(id)arg1;
- (_Bool)ib_isSupersetOfEnumerable:(id)arg1;
- (_Bool)ib_intersectsEnumerable:(id)arg1;
- (_Bool)ib_isSupersetOfCollection:(id)arg1;
- (_Bool)ib_intersectsCollection:(id)arg1;
- (id)ib_maximumObjectUsingComparator:(CDUnknownBlockType)arg1;
- (id)ib_minimumObjectUsingComparator:(CDUnknownBlockType)arg1;
- (int)ib_numberOfObjectsPassingTest:(CDUnknownBlockType)arg1;
- (id)ib_arrayBySortingUsingSelector:(SEL)arg1 onKeyPath:(id)arg2;
- (id)ib_arrayBySortingUsingSelector:(SEL)arg1;
- (id)ib_arrayBySortingUsingComparator:(CDUnknownBlockType)arg1;
- (id)ib_setByIntersectingArray:(id)arg1;
- (id)ib_setByIntersectingSet:(id)arg1;
- (id)ib_setBySubtractingSet:(id)arg1;
- (void)ib_enumerateCopyOfObjectsUsingBlock:(CDUnknownBlockType)arg1;
- (void)ib_enumerateObjectsUsingMutatingBlock:(CDUnknownBlockType)arg1;
- (void)ib_enumerateObjectsUsingBlock:(CDUnknownBlockType)arg1;
- (id)ib_collectionByRemovingNulls;
- (id)ib_setByRemovingNulls;
- (id)ib_firstObjectPassingTest:(CDUnknownBlockType)arg1;
- (id)ib_onlyObjectPassingTest:(CDUnknownBlockType)arg1;
- (_Bool)ib_anyObjectsPassTest:(CDUnknownBlockType)arg1;
- (_Bool)ib_allObjectsPassTest:(CDUnknownBlockType)arg1;
- (id)ib_onlyObject;
- (Class)ib_mutableClass;
- (_Bool)ib_objectsAreStrictlyContainedBySet:(id)arg1;
- (_Bool)ib_objectsAreContainedBySet:(id)arg1;
- (id)ib_setByAddingObjectsFromCollection:(id)arg1;
- (id)ib_setByRemovingObjectsFromCollection:(id)arg1;
- (id)ib_setByRemovingObject:(id)arg1;
- (id)ib_setByRemovingObjects:(id)arg1;
- (id)ib_setByAddingObjects:(id)arg1;
- (id)ib_setByApplyingBlock:(CDUnknownBlockType)arg1;
- (id)ib_collectionByMappingAndFilteringWithBlock:(CDUnknownBlockType)arg1;
- (id)ib_setByMappingAndFilteringWithBlock:(CDUnknownBlockType)arg1;
- (id)ib_setByMappingBlockAndAssertingOnNilMappedValue:(CDUnknownBlockType)arg1;
- (id)ib_setByMappingBlock:(CDUnknownBlockType)arg1;
- (id)ib_arrayByMappingBlock:(CDUnknownBlockType)arg1;
- (id)ib_setByMappingWithBehavior:(int)arg1 andBlock:(CDUnknownBlockType)arg2;
- (id)ib_objectsOfClasses:(id)arg1;
- (id)ib_objectsConformingToProtocol:(id)arg1;
- (id)ib_objectsOfClass:(Class)arg1;
- (id)ib_collectionByRemovingObject:(id)arg1;
- (id)ib_collectionByAddingObject:(id)arg1;
- (id)ib_collectionByKeepingObjectsInSet:(id)arg1;
- (id)ib_collectionByRemovingObjectsInSet:(id)arg1;
- (id)ib_collectionByRemovingObjectsFromCollection:(id)arg1;
- (id)ib_collectionByAddingObjectsFromCollection:(id)arg1;
- (id)ib_collectionByMappingBlock:(CDUnknownBlockType)arg1;
- (id)ib_collectionByFilteringUsingBlock:(CDUnknownBlockType)arg1;
- (id)ib_setByFilteringUsingBlock:(CDUnknownBlockType)arg1;
- (id)ib_uniqueObjects;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;
@end

@interface NSString (IBBinaryArchivingAdditions) <IBBinaryArchiving>
- (void)encodeWithBinaryArchiver:(id)arg1;
- (id)initWithBinaryUnarchiver:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;
@end

@interface NSString (IBStringAdditions)
+ (id)ib_stringWithListComponentsJoinedByCommasAndAnd:(id)arg1;
+ (id)ib_UUIDString;
- (id)ib_capitalizedString;
- (struct _NSRange)ib_rangeForSuffixOfLength:(int)arg1;
- (struct _NSRange)ib_range;
- (id)ib_stringWithEachLinePrefixedByString:(id)arg1;
- (id)ib_substringAfterLastOccurrenceOfString:(id)arg1;
- (id)ib_substringBeforeLastOccurrenceOfString:(id)arg1;
- (id)ib_substringAfterFirstOccurrenceOfString:(id)arg1;
- (id)ib_substringBeforeFirstOccurrenceOfString:(id)arg1;
- (id)ib_stringByStrippingCommonWordPrefixWithString:(id)arg1;
- (void)ib_invokeWithAccessToFileSystemRepresentation:(CDUnknownBlockType)arg1;
- (id)ib_onlyPathComponent;
- (id)ib_firstPathComponent;
- (_Bool)ib_isNonEmpty;
- (int)ib_numberOfOccurrencesOfString:(id)arg1;
- (id)ib_stringOfUniqueCharactersFromSet:(id)arg1;
- (_Bool)ib_containsStringCaseInsensatively:(id)arg1;
- (_Bool)ib_containsString:(id)arg1;
- (_Bool)ib_containsCharactersFromSet:(id)arg1;
- (_Bool)ib_isComposedEntirelyOfCharactersFromSet:(id)arg1;
- (_Bool)ib_isRange:(struct _NSRange)arg1 composedEntirelyOfCharactersFromSet:(id)arg2;
- (id)ib_UTF8Representation;
- (id)ib_stringByLowercasingFirstCharacter;
- (id)ib_stringByDeletingSuffix:(id)arg1;
- (id)ib_stringByDeletingPrefix:(id)arg1;
- (id)ib_stringByPrependingString:(id)arg1;
- (id)ib_stringByAppendingPathComponents:(id)arg1;
- (id)ib_stringByRemovingCharactersFromSet:(id)arg1;
- (id)ib_stringByInsertingString:(id)arg1 atIndex:(unsigned int)arg2;
- (int)ib_caseInsensitiveNumericCompare:(id)arg1;
- (void)ib_invokeWithAccessToUTF8Bytes:(CDUnknownBlockType)arg1;
- (void)ib_invokeWithAccessToCharacters:(CDUnknownBlockType)arg1;
@end

@interface NSString (InfoPlistOverlay)
- (Class)ib_immutableClassForPlistOverlay;
@end

@interface NSUndoManager (IBNSUndoManagerAdditions)
+ (void)ib_applyUndoBlock:(CDUnknownBlockType)arg1;
- (void)ib_groupUndoActionsDuring:(CDUnknownBlockType)arg1;
- (void)ib_disableGroupingByEventDuring:(CDUnknownBlockType)arg1;
- (void)ib_registerUndoBlock:(CDUnknownBlockType)arg1;
@end

@interface NSUserDefaults (IBUserDefaultAdditions)
- (_Bool)ib_hasPreferenceForKey:(id)arg1;
@end

@interface NSValue (IBBinaryArchiving)
+ (id)decodeWithBinaryUnarchiver:(id)arg1;
- (void)encodeWithBinaryArchiver:(id)arg1;
@end

@interface NSValue (IBGeometryAdditions)
+ (id)ib_valueWithKnobPosition:(CDUnion_2b5abd31)arg1;
+ (id)ib_valueWithIBEdgeInsets:(struct _IBEdgeInsets)arg1;
+ (id)ib_valueWithOffset:(CDStruct_b2fbf00d)arg1;
+ (id)ib_valueWithInset:(CDStruct_c64b4d12)arg1;
- (CDUnion_2b5abd31)ib_knobPosition;
- (struct _IBEdgeInsets)ib_ibEdgeInsetsValue;
- (CDStruct_1678e38e)ib_lineValue;
- (struct CGRect)ib_rectValue;
- (_Bool)ib_isOffset;
- (CDStruct_b2fbf00d)ib_offsetValue;
- (_Bool)ib_isInset;
- (CDStruct_c64b4d12)ib_insetValue;
@end

@interface NSValue (IBICSlicingAdditions)
+ (id)valueWithSlicedImageDivider:(CDStruct_1ef3fb1f)arg1;
+ (id)valueWithSlicedImagePart:(CDStruct_1ef3fb1f)arg1;
- (CDStruct_1ef3fb1f)slicedImageDividerValue;
- (CDStruct_1ef3fb1f)slicedImagePartValue;
@end

@interface NSValue (IBNSValueAdditions)
+ (id)ib_valueWithSize:(struct CGSize)arg1;
+ (id)ib_valueWithRect:(struct CGRect)arg1;
+ (id)ib_valueWithPoint:(struct CGPoint)arg1;
@property(readonly) struct CGSize ib_sizeValue;
@property(readonly) struct CGRect ib_rectValue;
@property(readonly) struct CGPoint ib_pointValue;
- (int)ib_valueType;
@end

@interface TDThemeBitSource (IBPrivate)
- (id)swizzledFileURLWithDocument:(id)arg1;
@end

