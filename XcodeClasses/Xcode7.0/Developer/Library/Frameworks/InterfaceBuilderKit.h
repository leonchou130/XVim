//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct IBByteStream {
    char *_field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct IBDocumentStorage {
    id _field1;
    id _field2;
    id _field3;
    id _field4;
    id _field5;
    id _field6;
    id _field7;
    id _field8;
    id _field9;
    id _field10;
    id _field11;
    id _field12;
    id _field13;
    id _field14;
    id _field15;
    id _field16;
    id _field17;
    id _field18;
    id _field19;
    id _field20;
    id _field21;
    id _field22;
    id _field23;
    id _field24;
    id _field25;
    id _field26;
    long long _field27;
    char _field28;
    id _field29;
    char _field30;
    id _field31;
    char _field32;
    id _field33;
    id _field34;
    char _field35;
    char _field36;
    id _field37;
    id _field38;
    id _field39;
    long long _field40;
    id _field41;
    id _field42;
    id _field43;
    id _field44;
    char _field45;
    id _field46;
    id _field47;
    id _field48;
    id _field49;
    id _field50;
    id _field51;
    char _field52;
    id _field53;
    id _field54;
    id _field55;
    id _field56;
    id _field57;
    id _field58;
    char _field59;
    struct CGPoint _field60;
    id _field61;
    id _field62;
    id _field63;
    long long _field64;
    char _field65;
    id _field66;
    id _field67;
    id _field68;
    id _field69;
};

struct IBEditorExtraStorage {
    char _field1;
};

struct IBInsetTag {
    double left;
    double top;
    double right;
    double bottom;
};

struct IBViewSizeInspectorExtraIvars {
    id _field1;
    long long _field2;
    long long _field3;
    id _field4;
    char _field5;
    char _field6;
    struct CGRect _field7;
};

struct Token {
    char *_field1;
    unsigned long long _field2;
    unsigned long long _field3;
    long long _field4;
    long long _field5;
    long long _field6;
};

struct _IBLibraryClassLineageViewFlags {
    unsigned int delegateImplementsAlphaForRow:1;
    unsigned int delegateImplementsCanClickRow:1;
    unsigned int delegateImplementsDidClickRow:1;
    unsigned int delegateImplementsBorderedForRow:1;
    unsigned int delegateImplementsBadgeForRow:1;
    unsigned int delegateImplementsDidClickBadge:1;
    unsigned int delegateImplementsSetLabelForRow:1;
    unsigned int delegateImplementsNumberOfCompletions:1;
    unsigned int delegateImplementsCompletionAtIndex:1;
    unsigned int delegateImplementsEditedValueIsValid:1;
    unsigned int _reserved:22;
};

struct _NSRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct __va_list_tag {
    unsigned int _field1;
    unsigned int _field2;
    void *_field3;
    void *_field4;
};

#pragma mark Typedef'd Structures

typedef struct {
    id _field1;
    id _field2;
    char _field3;
    char _field4;
    char _field5;
} CDStruct_7610d3a3;

typedef struct {
    char *_field1;
    char _field2;
} CDStruct_39587f32;

typedef struct {
    long long version;
    CDUnknownFunctionPointerType retain;
    CDUnknownFunctionPointerType release;
    CDUnknownFunctionPointerType copyDescription;
    CDUnknownFunctionPointerType equal;
    CDUnknownFunctionPointerType hash;
} CDStruct_f2932e27;

typedef struct {
    long long version;
    CDUnknownFunctionPointerType retain;
    CDUnknownFunctionPointerType release;
    CDUnknownFunctionPointerType copyDescription;
    CDUnknownFunctionPointerType equal;
} CDStruct_b3b3fc87;

typedef struct {
    struct IBByteStream _field1;
    id _field2;
    long long _field3;
    long long _field4;
    struct Token _field5;
    long long _field6;
} CDStruct_d32eee15;

typedef struct {
    struct CGRect _field1;
    struct CGRect _field2;
    id _field3;
    id _field4;
} CDStruct_f89e1bf6;

typedef struct {
    struct CGRect _field1;
    struct CGRect _field2;
    CDStruct_f89e1bf6 _field3;
    CDStruct_f89e1bf6 _field4;
} CDStruct_6a48b817;

#pragma mark -

//
// File: /Applications/Xcode-7GM.app/Contents/Developer/Library/Frameworks/InterfaceBuilderKit.framework/Versions/A/InterfaceBuilderKit
// UUID: 76994448-7D0C-39E8-AE7F-41F063ED63E4
//
//                           Arch: x86_64
//                Current version: 945.0.0
//          Compatibility version: 1.0.0
//                 Source version: 945.0.0.0.0
//       Minimum Mac OS X version: 10.10.0
//                    SDK version: 10.11.0
//
// Objective-C Garbage Collection: Unsupported
//
//                       Run path: @loader_path/../../../
//                               = /Applications/Xcode-7GM.app/Contents/Developer/Library/Frameworks
//

@protocol DTDraggingInfo <NSDraggingInfo>
- (struct CGPoint)draggingLocationOnScreen;
- (NSDictionary *)draggingSourceContext;
- (void)setDraggedImageStateNeedsUpdate:(BOOL)arg1;
- (struct CGSize)draggingStickiness;
- (void)setDraggingStickiness:(struct CGSize)arg1;
- (DTDraggedImageState *)draggedImageState;
@end

@protocol IBConstrainedContainer
- (void)setContentSize:(struct CGSize)arg1;
- (struct CGSize)contentSize;
@end

@protocol IBDocumentInfoController
- (NSArray *)objectsAtPoint:(struct CGPoint)arg1;
- (NSArray *)selectedObjects;
- (void)deselectObjects:(id)arg1;
@end

@protocol IBFieldEditorTextViewDelegate <NSTextViewDelegate>
- (void)textViewDidChangeFont:(IBFieldEditorTextView *)arg1;
- (void)textViewWillChangeFont:(IBFieldEditorTextView *)arg1;
- (void)textViewDidChangeAttributes:(IBFieldEditorTextView *)arg1;
@end

@protocol IBInspectorPanelDelegate <NSWindowDelegate>
- (void)inspectorPanel:(IBInspectorPanel *)arg1 willSelectKeyViewPrecedingView:(NSView *)arg2;
- (void)inspectorPanel:(IBInspectorPanel *)arg1 willSelectKeyViewFollowingView:(NSView *)arg2;
@end

@protocol IBMeasurementLineDelegate <NSObject>

@optional
- (long long)measurementLine:(IBMeasurementLine *)arg1 measuredValue:(long long)arg2 forEdge:(unsigned long long)arg3;
@end

@protocol IBPulseAnimationDelegate <NSAnimationDelegate>
- (void)animation:(NSAnimation *)arg1 didProgress:(float)arg2;
@end

@protocol IBStringsTableViewDelegate <NSTableViewDelegate>
- (NSArray *)boundingRectsOfCurrentFindResults;
@end

@protocol IBStringsTableWindowDelegate <NSWindowDelegate>
- (void)findNextForward:(BOOL)arg1 sender:(id)arg2;
- (void)performFindPanelAction:(id)arg1;
- (void)checkSpelling:(id)arg1;
@end

@protocol IBTextChangePostingTableViewDataSource <NSTableViewDataSource>
- (BOOL)tableView:(NSTableView *)arg1 canWriteRowsWithIndexesToPasteboard:(NSIndexSet *)arg2;
- (BOOL)tableView:(NSTableView *)arg1 canRemoveRowsWithIndexes:(NSIndexSet *)arg2;
- (BOOL)tableView:(NSTableView *)arg1 removeRowsWithIndexes:(NSIndexSet *)arg2;
@end

@protocol IBTextChangePostingTableViewDelegate <NSTableViewDelegate>
- (void)control:(NSControl *)arg1 textDidEndEditing:(NSText *)arg2;
- (NSArray *)tableView:(NSTableView *)arg1 textView:(NSTextView *)arg2 completions:(NSArray *)arg3 forPartialWordRange:(struct _NSRange)arg4 indexOfSelectedItem:(long long *)arg5;
- (struct _NSRange)tableView:(NSTableView *)arg1 textView:(NSTextView *)arg2 willChangeSelectionFromCharacterRange:(struct _NSRange)arg3 toCharacterRange:(struct _NSRange)arg4;
- (BOOL)tableView:(NSTableView *)arg1 textView:(NSTextView *)arg2 shouldChangeTextInRange:(struct _NSRange)arg3 replacementString:(NSString *)arg4;
- (void)control:(NSControl *)arg1 textDidChange:(NSText *)arg2;
@end

@protocol NSAnimationDelegate <NSObject>

@optional
- (void)animation:(NSAnimation *)arg1 didReachProgressMark:(float)arg2;
- (float)animation:(NSAnimation *)arg1 valueForProgress:(float)arg2;
- (void)animationDidEnd:(NSAnimation *)arg1;
- (void)animationDidStop:(NSAnimation *)arg1;
- (BOOL)animationShouldStart:(NSAnimation *)arg1;
@end

@protocol NSBrowserDelegate <NSObject>

@optional
- (NSIndexSet *)browser:(NSBrowser *)arg1 selectionIndexesForProposedSelection:(NSIndexSet *)arg2 inColumn:(long long)arg3;
- (void)browser:(NSBrowser *)arg1 didChangeLastColumn:(long long)arg2 toColumn:(long long)arg3;
- (NSViewController *)browser:(NSBrowser *)arg1 headerViewControllerForItem:(id)arg2;
- (NSViewController *)browser:(NSBrowser *)arg1 previewViewControllerForLeafItem:(id)arg2;
- (long long)browser:(NSBrowser *)arg1 nextTypeSelectMatchFromRow:(long long)arg2 toRow:(long long)arg3 inColumn:(long long)arg4 forString:(NSString *)arg5;
- (BOOL)browser:(NSBrowser *)arg1 shouldTypeSelectForEvent:(NSEvent *)arg2 withCurrentSearchString:(NSString *)arg3;
- (NSString *)browser:(NSBrowser *)arg1 typeSelectStringForRow:(long long)arg2 inColumn:(long long)arg3;
- (BOOL)browser:(NSBrowser *)arg1 acceptDrop:(id <NSDraggingInfo>)arg2 atRow:(long long)arg3 column:(long long)arg4 dropOperation:(unsigned long long)arg5;
- (unsigned long long)browser:(NSBrowser *)arg1 validateDrop:(id <NSDraggingInfo>)arg2 proposedRow:(long long *)arg3 column:(long long *)arg4 dropOperation:(unsigned long long *)arg5;
- (NSImage *)browser:(NSBrowser *)arg1 draggingImageForRowsWithIndexes:(NSIndexSet *)arg2 inColumn:(long long)arg3 withEvent:(NSEvent *)arg4 offset:(struct CGPoint *)arg5;
- (BOOL)browser:(NSBrowser *)arg1 canDragRowsWithIndexes:(NSIndexSet *)arg2 inColumn:(long long)arg3 withEvent:(NSEvent *)arg4;
- (NSArray *)browser:(NSBrowser *)arg1 namesOfPromisedFilesDroppedAtDestination:(NSURL *)arg2 forDraggedRowsWithIndexes:(NSIndexSet *)arg3 inColumn:(long long)arg4;
- (BOOL)browser:(NSBrowser *)arg1 writeRowsWithIndexes:(NSIndexSet *)arg2 inColumn:(long long)arg3 toPasteboard:(NSPasteboard *)arg4;
- (BOOL)browser:(NSBrowser *)arg1 shouldShowCellExpansionForRow:(long long)arg2 column:(long long)arg3;
- (void)browserColumnConfigurationDidChange:(NSNotification *)arg1;
- (double)browser:(NSBrowser *)arg1 sizeToFitWidthOfColumn:(long long)arg2;
- (double)browser:(NSBrowser *)arg1 shouldSizeColumn:(long long)arg2 forUserResize:(BOOL)arg3 toWidth:(double)arg4;
- (void)browserDidScroll:(NSBrowser *)arg1;
- (void)browserWillScroll:(NSBrowser *)arg1;
- (BOOL)browser:(NSBrowser *)arg1 isColumnValid:(long long)arg2;
- (BOOL)browser:(NSBrowser *)arg1 selectRow:(long long)arg2 inColumn:(long long)arg3;
- (BOOL)browser:(NSBrowser *)arg1 selectCellWithString:(NSString *)arg2 inColumn:(long long)arg3;
- (NSString *)browser:(NSBrowser *)arg1 titleOfColumn:(long long)arg2;
- (void)browser:(NSBrowser *)arg1 willDisplayCell:(id)arg2 atRow:(long long)arg3 column:(long long)arg4;
- (BOOL)browser:(NSBrowser *)arg1 shouldEditItem:(id)arg2;
- (void)browser:(NSBrowser *)arg1 setObjectValue:(id)arg2 forItem:(id)arg3;
- (id)rootItemForBrowser:(NSBrowser *)arg1;
- (double)browser:(NSBrowser *)arg1 heightOfRow:(long long)arg2 inColumn:(long long)arg3;
- (id)browser:(NSBrowser *)arg1 objectValueForItem:(id)arg2;
- (BOOL)browser:(NSBrowser *)arg1 isLeafItem:(id)arg2;
- (id)browser:(NSBrowser *)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (long long)browser:(NSBrowser *)arg1 numberOfChildrenOfItem:(id)arg2;
- (void)browser:(NSBrowser *)arg1 createRowsForColumn:(long long)arg2 inMatrix:(NSMatrix *)arg3;
- (long long)browser:(NSBrowser *)arg1 numberOfRowsInColumn:(long long)arg2;
@end

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSComboBoxCellDataSource <NSObject>

@optional
- (NSString *)comboBoxCell:(NSComboBoxCell *)arg1 completedString:(NSString *)arg2;
- (unsigned long long)comboBoxCell:(NSComboBoxCell *)arg1 indexOfItemWithStringValue:(NSString *)arg2;
- (id)comboBoxCell:(NSComboBoxCell *)arg1 objectValueForItemAtIndex:(long long)arg2;
- (long long)numberOfItemsInComboBoxCell:(NSComboBoxCell *)arg1;
@end

@protocol NSComboBoxDataSource <NSObject>

@optional
- (NSString *)comboBox:(NSComboBox *)arg1 completedString:(NSString *)arg2;
- (unsigned long long)comboBox:(NSComboBox *)arg1 indexOfItemWithStringValue:(NSString *)arg2;
- (id)comboBox:(NSComboBox *)arg1 objectValueForItemAtIndex:(long long)arg2;
- (long long)numberOfItemsInComboBox:(NSComboBox *)arg1;
@end

@protocol NSControlTextEditingDelegate <NSObject>

@optional
- (NSArray *)control:(NSControl *)arg1 textView:(NSTextView *)arg2 completions:(NSArray *)arg3 forPartialWordRange:(struct _NSRange)arg4 indexOfSelectedItem:(long long *)arg5;
- (BOOL)control:(NSControl *)arg1 textView:(NSTextView *)arg2 doCommandBySelector:(SEL)arg3;
- (BOOL)control:(NSControl *)arg1 isValidObject:(id)arg2;
- (void)control:(NSControl *)arg1 didFailToValidatePartialString:(NSString *)arg2 errorDescription:(NSString *)arg3;
- (BOOL)control:(NSControl *)arg1 didFailToFormatString:(NSString *)arg2 errorDescription:(NSString *)arg3;
- (BOOL)control:(NSControl *)arg1 textShouldEndEditing:(NSText *)arg2;
- (BOOL)control:(NSControl *)arg1 textShouldBeginEditing:(NSText *)arg2;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSDraggingInfo <NSObject>
@property(readonly) long long springLoadingHighlight;
@property long long numberOfValidItemsForDrop;
@property BOOL animatesToDestination;
@property long long draggingFormation;
- (void)resetSpringLoading;
- (void)enumerateDraggingItemsWithOptions:(unsigned long long)arg1 forView:(NSView *)arg2 classes:(NSArray *)arg3 searchOptions:(NSDictionary *)arg4 usingBlock:(void (^)(NSDraggingItem *, long long, char *))arg5;
- (NSArray *)namesOfPromisedFilesDroppedAtDestination:(NSURL *)arg1;
- (void)slideDraggedImageTo:(struct CGPoint)arg1;
- (long long)draggingSequenceNumber;
- (id)draggingSource;
- (NSPasteboard *)draggingPasteboard;
- (NSImage *)draggedImage;
- (struct CGPoint)draggedImageLocation;
- (struct CGPoint)draggingLocation;
- (unsigned long long)draggingSourceOperationMask;
- (NSWindow *)draggingDestinationWindow;
@end

@protocol NSMenuDelegate <NSObject>

@optional
- (struct CGRect)confinementRectForMenu:(NSMenu *)arg1 onScreen:(NSScreen *)arg2;
- (void)menu:(NSMenu *)arg1 willHighlightItem:(NSMenuItem *)arg2;
- (void)menuDidClose:(NSMenu *)arg1;
- (void)menuWillOpen:(NSMenu *)arg1;
- (BOOL)menuHasKeyEquivalent:(NSMenu *)arg1 forEvent:(NSEvent *)arg2 target:(id *)arg3 action:(SEL *)arg4;
- (BOOL)menu:(NSMenu *)arg1 updateItem:(NSMenuItem *)arg2 atIndex:(long long)arg3 shouldCancel:(BOOL)arg4;
- (long long)numberOfItemsInMenu:(NSMenu *)arg1;
- (void)menuNeedsUpdate:(NSMenu *)arg1;
@end

@protocol NSMutableCopying
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (BOOL)respondsToSelector:(SEL)arg1;
- (BOOL)conformsToProtocol:(Protocol *)arg1;
- (BOOL)isMemberOfClass:(Class)arg1;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (BOOL)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSOpenSavePanelDelegate <NSObject>

@optional
- (void)panelSelectionDidChange:(id)arg1;
- (void)panel:(id)arg1 willExpand:(BOOL)arg2;
- (NSString *)panel:(id)arg1 userEnteredFilename:(NSString *)arg2 confirmed:(BOOL)arg3;
- (void)panel:(id)arg1 didChangeToDirectoryURL:(NSURL *)arg2;
- (BOOL)panel:(id)arg1 validateURL:(NSURL *)arg2 error:(id *)arg3;
- (BOOL)panel:(id)arg1 shouldEnableURL:(NSURL *)arg2;
@end

@protocol NSOutlineViewDataSource <NSObject>

@optional
- (NSArray *)outlineView:(NSOutlineView *)arg1 namesOfPromisedFilesDroppedAtDestination:(NSURL *)arg2 forDraggedItems:(NSArray *)arg3;
- (BOOL)outlineView:(NSOutlineView *)arg1 acceptDrop:(id <NSDraggingInfo>)arg2 item:(id)arg3 childIndex:(long long)arg4;
- (unsigned long long)outlineView:(NSOutlineView *)arg1 validateDrop:(id <NSDraggingInfo>)arg2 proposedItem:(id)arg3 proposedChildIndex:(long long)arg4;
- (void)outlineView:(NSOutlineView *)arg1 updateDraggingItemsForDrag:(id <NSDraggingInfo>)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 writeItems:(NSArray *)arg2 toPasteboard:(NSPasteboard *)arg3;
- (void)outlineView:(NSOutlineView *)arg1 draggingSession:(NSDraggingSession *)arg2 endedAtPoint:(struct CGPoint)arg3 operation:(unsigned long long)arg4;
- (void)outlineView:(NSOutlineView *)arg1 draggingSession:(NSDraggingSession *)arg2 willBeginAtPoint:(struct CGPoint)arg3 forItems:(NSArray *)arg4;
- (id <NSPasteboardWriting>)outlineView:(NSOutlineView *)arg1 pasteboardWriterForItem:(id)arg2;
- (void)outlineView:(NSOutlineView *)arg1 sortDescriptorsDidChange:(NSArray *)arg2;
- (id)outlineView:(NSOutlineView *)arg1 persistentObjectForItem:(id)arg2;
- (id)outlineView:(NSOutlineView *)arg1 itemForPersistentObject:(id)arg2;
- (void)outlineView:(NSOutlineView *)arg1 setObjectValue:(id)arg2 forTableColumn:(NSTableColumn *)arg3 byItem:(id)arg4;
- (id)outlineView:(NSOutlineView *)arg1 objectValueForTableColumn:(NSTableColumn *)arg2 byItem:(id)arg3;
- (BOOL)outlineView:(NSOutlineView *)arg1 isItemExpandable:(id)arg2;
- (id)outlineView:(NSOutlineView *)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (long long)outlineView:(NSOutlineView *)arg1 numberOfChildrenOfItem:(id)arg2;
@end

@protocol NSOutlineViewDelegate <NSControlTextEditingDelegate>

@optional
- (void)outlineViewItemDidCollapse:(NSNotification *)arg1;
- (void)outlineViewItemWillCollapse:(NSNotification *)arg1;
- (void)outlineViewItemDidExpand:(NSNotification *)arg1;
- (void)outlineViewItemWillExpand:(NSNotification *)arg1;
- (void)outlineViewSelectionIsChanging:(NSNotification *)arg1;
- (void)outlineViewColumnDidResize:(NSNotification *)arg1;
- (void)outlineViewColumnDidMove:(NSNotification *)arg1;
- (void)outlineViewSelectionDidChange:(NSNotification *)arg1;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldShowOutlineCellForItem:(id)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldReorderColumn:(long long)arg2 toColumn:(long long)arg3;
- (double)outlineView:(NSOutlineView *)arg1 sizeToFitWidthOfColumn:(long long)arg2;
- (void)outlineView:(NSOutlineView *)arg1 willDisplayOutlineCell:(id)arg2 forTableColumn:(NSTableColumn *)arg3 item:(id)arg4;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldCollapseItem:(id)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldExpandItem:(id)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 isGroupItem:(id)arg2;
- (NSCell *)outlineView:(NSOutlineView *)arg1 dataCellForTableColumn:(NSTableColumn *)arg2 item:(id)arg3;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldTrackCell:(NSCell *)arg2 forTableColumn:(NSTableColumn *)arg3 item:(id)arg4;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldShowCellExpansionForTableColumn:(NSTableColumn *)arg2 item:(id)arg3;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldTypeSelectForEvent:(NSEvent *)arg2 withCurrentSearchString:(NSString *)arg3;
- (id)outlineView:(NSOutlineView *)arg1 nextTypeSelectMatchFromItem:(id)arg2 toItem:(id)arg3 forString:(NSString *)arg4;
- (NSString *)outlineView:(NSOutlineView *)arg1 typeSelectStringForTableColumn:(NSTableColumn *)arg2 item:(id)arg3;
- (double)outlineView:(NSOutlineView *)arg1 heightOfRowByItem:(id)arg2;
- (NSString *)outlineView:(NSOutlineView *)arg1 toolTipForCell:(NSCell *)arg2 rect:(struct CGRect *)arg3 tableColumn:(NSTableColumn *)arg4 item:(id)arg5 mouseLocation:(struct CGPoint)arg6;
- (void)outlineView:(NSOutlineView *)arg1 didDragTableColumn:(NSTableColumn *)arg2;
- (void)outlineView:(NSOutlineView *)arg1 didClickTableColumn:(NSTableColumn *)arg2;
- (void)outlineView:(NSOutlineView *)arg1 mouseDownInHeaderOfTableColumn:(NSTableColumn *)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldSelectTableColumn:(NSTableColumn *)arg2;
- (NSIndexSet *)outlineView:(NSOutlineView *)arg1 selectionIndexesForProposedSelection:(NSIndexSet *)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldSelectItem:(id)arg2;
- (BOOL)selectionShouldChangeInOutlineView:(NSOutlineView *)arg1;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldEditTableColumn:(NSTableColumn *)arg2 item:(id)arg3;
- (void)outlineView:(NSOutlineView *)arg1 willDisplayCell:(id)arg2 forTableColumn:(NSTableColumn *)arg3 item:(id)arg4;
- (void)outlineView:(NSOutlineView *)arg1 didRemoveRowView:(NSTableRowView *)arg2 forRow:(long long)arg3;
- (void)outlineView:(NSOutlineView *)arg1 didAddRowView:(NSTableRowView *)arg2 forRow:(long long)arg3;
- (NSTableRowView *)outlineView:(NSOutlineView *)arg1 rowViewForItem:(id)arg2;
- (NSView *)outlineView:(NSOutlineView *)arg1 viewForTableColumn:(NSTableColumn *)arg2 item:(id)arg3;
@end

@protocol NSTableViewDataSource <NSObject>

@optional
- (NSArray *)tableView:(NSTableView *)arg1 namesOfPromisedFilesDroppedAtDestination:(NSURL *)arg2 forDraggedRowsWithIndexes:(NSIndexSet *)arg3;
- (BOOL)tableView:(NSTableView *)arg1 acceptDrop:(id <NSDraggingInfo>)arg2 row:(long long)arg3 dropOperation:(unsigned long long)arg4;
- (unsigned long long)tableView:(NSTableView *)arg1 validateDrop:(id <NSDraggingInfo>)arg2 proposedRow:(long long)arg3 proposedDropOperation:(unsigned long long)arg4;
- (BOOL)tableView:(NSTableView *)arg1 writeRowsWithIndexes:(NSIndexSet *)arg2 toPasteboard:(NSPasteboard *)arg3;
- (void)tableView:(NSTableView *)arg1 updateDraggingItemsForDrag:(id <NSDraggingInfo>)arg2;
- (void)tableView:(NSTableView *)arg1 draggingSession:(NSDraggingSession *)arg2 endedAtPoint:(struct CGPoint)arg3 operation:(unsigned long long)arg4;
- (void)tableView:(NSTableView *)arg1 draggingSession:(NSDraggingSession *)arg2 willBeginAtPoint:(struct CGPoint)arg3 forRowIndexes:(NSIndexSet *)arg4;
- (id <NSPasteboardWriting>)tableView:(NSTableView *)arg1 pasteboardWriterForRow:(long long)arg2;
- (void)tableView:(NSTableView *)arg1 sortDescriptorsDidChange:(NSArray *)arg2;
- (void)tableView:(NSTableView *)arg1 setObjectValue:(id)arg2 forTableColumn:(NSTableColumn *)arg3 row:(long long)arg4;
- (id)tableView:(NSTableView *)arg1 objectValueForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(NSTableView *)arg1;
@end

@protocol NSTableViewDelegate <NSControlTextEditingDelegate>

@optional
- (void)tableViewSelectionIsChanging:(NSNotification *)arg1;
- (void)tableViewColumnDidResize:(NSNotification *)arg1;
- (void)tableViewColumnDidMove:(NSNotification *)arg1;
- (void)tableViewSelectionDidChange:(NSNotification *)arg1;
- (NSArray *)tableView:(NSTableView *)arg1 rowActionsForRow:(long long)arg2 edge:(long long)arg3;
- (BOOL)tableView:(NSTableView *)arg1 shouldReorderColumn:(long long)arg2 toColumn:(long long)arg3;
- (double)tableView:(NSTableView *)arg1 sizeToFitWidthOfColumn:(long long)arg2;
- (BOOL)tableView:(NSTableView *)arg1 isGroupRow:(long long)arg2;
- (BOOL)tableView:(NSTableView *)arg1 shouldTypeSelectForEvent:(NSEvent *)arg2 withCurrentSearchString:(NSString *)arg3;
- (long long)tableView:(NSTableView *)arg1 nextTypeSelectMatchFromRow:(long long)arg2 toRow:(long long)arg3 forString:(NSString *)arg4;
- (NSString *)tableView:(NSTableView *)arg1 typeSelectStringForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (double)tableView:(NSTableView *)arg1 heightOfRow:(long long)arg2;
- (void)tableView:(NSTableView *)arg1 didDragTableColumn:(NSTableColumn *)arg2;
- (void)tableView:(NSTableView *)arg1 didClickTableColumn:(NSTableColumn *)arg2;
- (void)tableView:(NSTableView *)arg1 mouseDownInHeaderOfTableColumn:(NSTableColumn *)arg2;
- (BOOL)tableView:(NSTableView *)arg1 shouldSelectTableColumn:(NSTableColumn *)arg2;
- (NSIndexSet *)tableView:(NSTableView *)arg1 selectionIndexesForProposedSelection:(NSIndexSet *)arg2;
- (BOOL)tableView:(NSTableView *)arg1 shouldSelectRow:(long long)arg2;
- (BOOL)selectionShouldChangeInTableView:(NSTableView *)arg1;
- (NSCell *)tableView:(NSTableView *)arg1 dataCellForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (BOOL)tableView:(NSTableView *)arg1 shouldTrackCell:(NSCell *)arg2 forTableColumn:(NSTableColumn *)arg3 row:(long long)arg4;
- (BOOL)tableView:(NSTableView *)arg1 shouldShowCellExpansionForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (NSString *)tableView:(NSTableView *)arg1 toolTipForCell:(NSCell *)arg2 rect:(struct CGRect *)arg3 tableColumn:(NSTableColumn *)arg4 row:(long long)arg5 mouseLocation:(struct CGPoint)arg6;
- (BOOL)tableView:(NSTableView *)arg1 shouldEditTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (void)tableView:(NSTableView *)arg1 willDisplayCell:(id)arg2 forTableColumn:(NSTableColumn *)arg3 row:(long long)arg4;
- (void)tableView:(NSTableView *)arg1 didRemoveRowView:(NSTableRowView *)arg2 forRow:(long long)arg3;
- (void)tableView:(NSTableView *)arg1 didAddRowView:(NSTableRowView *)arg2 forRow:(long long)arg3;
- (NSTableRowView *)tableView:(NSTableView *)arg1 rowViewForRow:(long long)arg2;
- (NSView *)tableView:(NSTableView *)arg1 viewForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
@end

@protocol NSTextDelegate <NSObject>

@optional
- (void)textDidChange:(NSNotification *)arg1;
- (void)textDidEndEditing:(NSNotification *)arg1;
- (void)textDidBeginEditing:(NSNotification *)arg1;
- (BOOL)textShouldEndEditing:(NSText *)arg1;
- (BOOL)textShouldBeginEditing:(NSText *)arg1;
@end

@protocol NSTextFieldDelegate <NSControlTextEditingDelegate>
@end

@protocol NSTextViewDelegate <NSTextDelegate>

@optional
- (void)textView:(NSTextView *)arg1 draggedCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3 event:(NSEvent *)arg4;
- (void)textView:(NSTextView *)arg1 doubleClickedOnCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3;
- (void)textView:(NSTextView *)arg1 clickedOnCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3;
- (BOOL)textView:(NSTextView *)arg1 clickedOnLink:(id)arg2;
- (NSUndoManager *)undoManagerForTextView:(NSTextView *)arg1;
- (NSSharingServicePicker *)textView:(NSTextView *)arg1 willShowSharingServicePicker:(NSSharingServicePicker *)arg2 forItems:(NSArray *)arg3;
- (NSURL *)textView:(NSTextView *)arg1 URLForContentsOfTextAttachment:(NSTextAttachment *)arg2 atIndex:(unsigned long long)arg3;
- (NSArray *)textView:(NSTextView *)arg1 didCheckTextInRange:(struct _NSRange)arg2 types:(unsigned long long)arg3 options:(NSDictionary *)arg4 results:(NSArray *)arg5 orthography:(NSOrthography *)arg6 wordCount:(long long)arg7;
- (NSDictionary *)textView:(NSTextView *)arg1 willCheckTextInRange:(struct _NSRange)arg2 options:(NSDictionary *)arg3 types:(unsigned long long *)arg4;
- (NSMenu *)textView:(NSTextView *)arg1 menu:(NSMenu *)arg2 forEvent:(NSEvent *)arg3 atIndex:(unsigned long long)arg4;
- (long long)textView:(NSTextView *)arg1 shouldSetSpellingState:(long long)arg2 range:(struct _NSRange)arg3;
- (BOOL)textView:(NSTextView *)arg1 doCommandBySelector:(SEL)arg2;
- (BOOL)textView:(NSTextView *)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementString:(NSString *)arg3;
- (NSArray *)textView:(NSTextView *)arg1 completions:(NSArray *)arg2 forPartialWordRange:(struct _NSRange)arg3 indexOfSelectedItem:(long long *)arg4;
- (NSString *)textView:(NSTextView *)arg1 willDisplayToolTip:(NSString *)arg2 forCharacterAtIndex:(unsigned long long)arg3;
- (void)textViewDidChangeTypingAttributes:(NSNotification *)arg1;
- (void)textViewDidChangeSelection:(NSNotification *)arg1;
- (NSDictionary *)textView:(NSTextView *)arg1 shouldChangeTypingAttributes:(NSDictionary *)arg2 toAttributes:(NSDictionary *)arg3;
- (BOOL)textView:(NSTextView *)arg1 shouldChangeTextInRanges:(NSArray *)arg2 replacementStrings:(NSArray *)arg3;
- (NSArray *)textView:(NSTextView *)arg1 willChangeSelectionFromCharacterRanges:(NSArray *)arg2 toCharacterRanges:(NSArray *)arg3;
- (struct _NSRange)textView:(NSTextView *)arg1 willChangeSelectionFromCharacterRange:(struct _NSRange)arg2 toCharacterRange:(struct _NSRange)arg3;
- (BOOL)textView:(NSTextView *)arg1 writeCell:(id <NSTextAttachmentCell>)arg2 atIndex:(unsigned long long)arg3 toPasteboard:(NSPasteboard *)arg4 type:(NSString *)arg5;
- (NSArray *)textView:(NSTextView *)arg1 writablePasteboardTypesForCell:(id <NSTextAttachmentCell>)arg2 atIndex:(unsigned long long)arg3;
- (void)textView:(NSTextView *)arg1 draggedCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3 event:(NSEvent *)arg4 atIndex:(unsigned long long)arg5;
- (void)textView:(NSTextView *)arg1 doubleClickedOnCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3 atIndex:(unsigned long long)arg4;
- (void)textView:(NSTextView *)arg1 clickedOnCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3 atIndex:(unsigned long long)arg4;
- (BOOL)textView:(NSTextView *)arg1 clickedOnLink:(id)arg2 atIndex:(unsigned long long)arg3;
@end

@protocol NSToolbarDelegate <NSObject>

@optional
- (void)toolbarDidRemoveItem:(NSNotification *)arg1;
- (void)toolbarWillAddItem:(NSNotification *)arg1;
- (NSArray *)toolbarSelectableItemIdentifiers:(NSToolbar *)arg1;
- (NSArray *)toolbarAllowedItemIdentifiers:(NSToolbar *)arg1;
- (NSArray *)toolbarDefaultItemIdentifiers:(NSToolbar *)arg1;
- (NSToolbarItem *)toolbar:(NSToolbar *)arg1 itemForItemIdentifier:(NSString *)arg2 willBeInsertedIntoToolbar:(BOOL)arg3;
@end

@protocol NSUserInterfaceValidations
- (BOOL)validateUserInterfaceItem:(id <NSValidatedUserInterfaceItem>)arg1;
@end

@protocol NSValidatedUserInterfaceItem
- (long long)tag;
- (SEL)action;
@end

@protocol NSWindowDelegate <NSObject>

@optional
- (void)windowDidChangeOcclusionState:(NSNotification *)arg1;
- (void)windowDidExitVersionBrowser:(NSNotification *)arg1;
- (void)windowWillExitVersionBrowser:(NSNotification *)arg1;
- (void)windowDidEnterVersionBrowser:(NSNotification *)arg1;
- (void)windowWillEnterVersionBrowser:(NSNotification *)arg1;
- (void)windowDidExitFullScreen:(NSNotification *)arg1;
- (void)windowWillExitFullScreen:(NSNotification *)arg1;
- (void)windowDidEnterFullScreen:(NSNotification *)arg1;
- (void)windowWillEnterFullScreen:(NSNotification *)arg1;
- (void)windowDidEndLiveResize:(NSNotification *)arg1;
- (void)windowWillStartLiveResize:(NSNotification *)arg1;
- (void)windowDidEndSheet:(NSNotification *)arg1;
- (void)windowWillBeginSheet:(NSNotification *)arg1;
- (void)windowDidChangeBackingProperties:(NSNotification *)arg1;
- (void)windowDidChangeScreenProfile:(NSNotification *)arg1;
- (void)windowDidChangeScreen:(NSNotification *)arg1;
- (void)windowDidUpdate:(NSNotification *)arg1;
- (void)windowDidDeminiaturize:(NSNotification *)arg1;
- (void)windowDidMiniaturize:(NSNotification *)arg1;
- (void)windowWillMiniaturize:(NSNotification *)arg1;
- (void)windowWillClose:(NSNotification *)arg1;
- (void)windowDidResignMain:(NSNotification *)arg1;
- (void)windowDidBecomeMain:(NSNotification *)arg1;
- (void)windowDidResignKey:(NSNotification *)arg1;
- (void)windowDidBecomeKey:(NSNotification *)arg1;
- (void)windowDidMove:(NSNotification *)arg1;
- (void)windowWillMove:(NSNotification *)arg1;
- (void)windowDidExpose:(NSNotification *)arg1;
- (void)windowDidResize:(NSNotification *)arg1;
- (void)window:(NSWindow *)arg1 didDecodeRestorableState:(NSCoder *)arg2;
- (void)window:(NSWindow *)arg1 willEncodeRestorableState:(NSCoder *)arg2;
- (struct CGSize)window:(NSWindow *)arg1 willResizeForVersionBrowserWithMaxPreferredSize:(struct CGSize)arg2 maxAllowedSize:(struct CGSize)arg3;
- (void)windowDidFailToExitFullScreen:(NSWindow *)arg1;
- (void)window:(NSWindow *)arg1 startCustomAnimationToEnterFullScreenOnScreen:(NSScreen *)arg2 withDuration:(double)arg3;
- (NSArray *)customWindowsToEnterFullScreenForWindow:(NSWindow *)arg1 onScreen:(NSScreen *)arg2;
- (void)window:(NSWindow *)arg1 startCustomAnimationToExitFullScreenWithDuration:(double)arg2;
- (NSArray *)customWindowsToExitFullScreenForWindow:(NSWindow *)arg1;
- (void)windowDidFailToEnterFullScreen:(NSWindow *)arg1;
- (void)window:(NSWindow *)arg1 startCustomAnimationToEnterFullScreenWithDuration:(double)arg2;
- (NSArray *)customWindowsToEnterFullScreenForWindow:(NSWindow *)arg1;
- (unsigned long long)window:(NSWindow *)arg1 willUseFullScreenPresentationOptions:(unsigned long long)arg2;
- (struct CGSize)window:(NSWindow *)arg1 willUseFullScreenContentSize:(struct CGSize)arg2;
- (BOOL)window:(NSWindow *)arg1 shouldDragDocumentWithEvent:(NSEvent *)arg2 from:(struct CGPoint)arg3 withPasteboard:(NSPasteboard *)arg4;
- (BOOL)window:(NSWindow *)arg1 shouldPopUpDocumentPathMenu:(NSMenu *)arg2;
- (struct CGRect)window:(NSWindow *)arg1 willPositionSheet:(NSWindow *)arg2 usingRect:(struct CGRect)arg3;
- (NSUndoManager *)windowWillReturnUndoManager:(NSWindow *)arg1;
- (BOOL)windowShouldZoom:(NSWindow *)arg1 toFrame:(struct CGRect)arg2;
- (struct CGRect)windowWillUseStandardFrame:(NSWindow *)arg1 defaultFrame:(struct CGRect)arg2;
- (struct CGSize)windowWillResize:(NSWindow *)arg1 toSize:(struct CGSize)arg2;
- (id)windowWillReturnFieldEditor:(NSWindow *)arg1 toObject:(id)arg2;
- (BOOL)windowShouldClose:(id)arg1;
@end

@protocol NSXMLParserDelegate <NSObject>

@optional
- (void)parser:(NSXMLParser *)arg1 validationErrorOccurred:(NSError *)arg2;
- (void)parser:(NSXMLParser *)arg1 parseErrorOccurred:(NSError *)arg2;
- (NSData *)parser:(NSXMLParser *)arg1 resolveExternalEntityName:(NSString *)arg2 systemID:(NSString *)arg3;
- (void)parser:(NSXMLParser *)arg1 foundCDATA:(NSData *)arg2;
- (void)parser:(NSXMLParser *)arg1 foundComment:(NSString *)arg2;
- (void)parser:(NSXMLParser *)arg1 foundProcessingInstructionWithTarget:(NSString *)arg2 data:(NSString *)arg3;
- (void)parser:(NSXMLParser *)arg1 foundIgnorableWhitespace:(NSString *)arg2;
- (void)parser:(NSXMLParser *)arg1 foundCharacters:(NSString *)arg2;
- (void)parser:(NSXMLParser *)arg1 didEndMappingPrefix:(NSString *)arg2;
- (void)parser:(NSXMLParser *)arg1 didStartMappingPrefix:(NSString *)arg2 toURI:(NSString *)arg3;
- (void)parser:(NSXMLParser *)arg1 didEndElement:(NSString *)arg2 namespaceURI:(NSString *)arg3 qualifiedName:(NSString *)arg4;
- (void)parser:(NSXMLParser *)arg1 didStartElement:(NSString *)arg2 namespaceURI:(NSString *)arg3 qualifiedName:(NSString *)arg4 attributes:(NSDictionary *)arg5;
- (void)parser:(NSXMLParser *)arg1 foundExternalEntityDeclarationWithName:(NSString *)arg2 publicID:(NSString *)arg3 systemID:(NSString *)arg4;
- (void)parser:(NSXMLParser *)arg1 foundInternalEntityDeclarationWithName:(NSString *)arg2 value:(NSString *)arg3;
- (void)parser:(NSXMLParser *)arg1 foundElementDeclarationWithName:(NSString *)arg2 model:(NSString *)arg3;
- (void)parser:(NSXMLParser *)arg1 foundAttributeDeclarationWithName:(NSString *)arg2 forElement:(NSString *)arg3 type:(NSString *)arg4 defaultValue:(NSString *)arg5;
- (void)parser:(NSXMLParser *)arg1 foundUnparsedEntityDeclarationWithName:(NSString *)arg2 publicID:(NSString *)arg3 systemID:(NSString *)arg4 notationName:(NSString *)arg5;
- (void)parser:(NSXMLParser *)arg1 foundNotationDeclarationWithName:(NSString *)arg2 publicID:(NSString *)arg3 systemID:(NSString *)arg4;
- (void)parserDidEndDocument:(NSXMLParser *)arg1;
- (void)parserDidStartDocument:(NSXMLParser *)arg1;
@end

@interface CIImage (IBResourceNaming)
- (id)resourceName;
@end

@interface CIVector (IBMutability)
+ (id)vectorByChangingValue:(double)arg1 atIndex:(long long)arg2 usingFormerValues:(id)arg3;
@end

@interface IBConnection : NSObject <NSCoding, NSCopying>
{
    id source;
    id destination;
    NSString *label;
}

+ (id)insertConnectionsFromExternalConnectionRepresentation:(id)arg1 fromContainer:(id)arg2 forContainer:(id)arg3 context:(id)arg4;
+ (id)determineBestInitialSelectionForObjects:(id)arg1 sourceObject:(id)arg2;
+ (id)prototypeConnectionsForObject:(id)arg1;
+ (id)prototypeConnectionsFromObject:(id)arg1 toObject:(id)arg2;
- (void)populateExternalConnectionRepresentation:(id)arg1 forContainer:(id)arg2 fromContainer:(id)arg3 otherExternalConnections:(id)arg4 context:(id)arg5;
- (BOOL)shouldFollowDestinationToPasteboardAsExternalConnection;
- (BOOL)shouldFollowSourceToPasteboardAsExternalConnection;
- (void)objectContainer:(id)arg1 willRemoveConnectionWithContext:(id)arg2;
- (void)objectContainer:(id)arg1 willRemoveObject:(id)arg2 context:(id)arg3;
- (id)endPointForEstimatingUnlabeledConnection;
- (id)ibSmartConnectionComparisonString;
- (long long)compareLabels:(id)arg1;
- (long long)previousConnectionStateIndicatorForDragFromObject:(id)arg1 toObject:(id)arg2 inDocument:(id)arg3;
- (BOOL)isPrototypeFor:(id)arg1;
- (BOOL)isEquivalentToPrototypeFor:(id)arg1 inDocument:(id)arg2;
- (BOOL)isExclusiveTo:(id)arg1 inObjectContainer:(id)arg2;
- (id)displayGroupNameFromReferenceEndPoint:(id)arg1;
- (id)displayGroupNameForDragFromObject:(id)arg1 toObject:(id)arg2;
- (BOOL)isCatchAllPrototypeForDisplayGroup;
- (id)printablePListForIBToolInDocument:(id)arg1;
- (id)description;
- (id)displayDescriptionInDocument:(id)arg1;
- (BOOL)validateDestination:(id)arg1;
- (BOOL)validateSource:(id)arg1;
- (BOOL)validateEndPoint:(id)arg1;
- (BOOL)canCoexistsWithOtherConnectionsHavingSameEndPoint;
- (id)equivalentPrototypeWithRespectToEquivalentEndPoint:(id)arg1 inDocument:(id)arg2;
- (id)prototypeWithRespectTo:(id)arg1;
- (BOOL)allowsEstablishingNewConnections;
- (id)label;
- (id)supersedingEndPoints;
- (id)parentsWhosChildrenCouldIntroduceSupersessionOnAddition;
- (id)supersedingDisplayValues;
- (id)displayValuesWithRespectToPrototype:(id)arg1 inDocument:(id)arg2;
- (id)displayNameWithRespectToPedecessors:(id)arg1;
- (id)errorMessageForExistenceWithoutPrototypeInDocument:(id)arg1;
- (id)destination;
- (void)setLabel:(id)arg1;
- (void)setDestination:(id)arg1;
- (void)setSource:(id)arg1;
- (void)setEndPoint:(id)arg1;
- (id)endPoint;
- (id)equivalentSourceInDocument:(id)arg1;
- (id)equivalentDestinationInDocument:(id)arg1;
- (id)endPointForEquivalentEndPoint:(id)arg1 inDocument:(id)arg2;
- (void)completeWithComponentChoice:(id)arg1;
- (id)missingComponentChoices;
- (id)source;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithSource:(id)arg1 andLabel:(id)arg2;
- (id)initWithDestination:(id)arg1;
- (id)initWithDestination:(id)arg1 andLabel:(id)arg2;
- (id)interfaceBuilderConnectionIdentifier;
- (id)XLIFFClassName:(id)arg1;
- (long long)XLIFFMemberID:(id)arg1;

@end

@interface IBAbstractActionConnection : IBConnection
{
}

+ (id)insertConnectionsFromExternalConnectionRepresentation:(id)arg1 fromContainer:(id)arg2 forContainer:(id)arg3 context:(id)arg4;
+ (id)prototypeConnectionsFromObject:(id)arg1 toObject:(id)arg2;
+ (id)prototypeConnectionsForObject:(id)arg1;
+ (BOOL)objectAggregatesAllActions:(id)arg1;
+ (id)normalizeDestination:(id)arg1 withParent:(id)arg2;
+ (BOOL)canObjectFireActions:(id)arg1 inDocument:(id)arg2;
- (void)populateExternalConnectionRepresentation:(id)arg1 forContainer:(id)arg2 fromContainer:(id)arg3 otherExternalConnections:(id)arg4 context:(id)arg5;
- (BOOL)shouldFollowDestinationToPasteboardAsExternalConnection;
- (id)endPointForEstimatingUnlabeledConnection;
- (void)ibWarnings:(id)arg1 forDocument:(id)arg2 withComputationContext:(id)arg3;
- (id)displayDescriptionInDocument:(id)arg1;
- (void)refactorWithActionChangeTypeRefactoringOperation:(id)arg1 inDocument:(id)arg2 error:(id *)arg3;
- (void)refactorWithActionMoveRefactoringOperation:(id)arg1 inDocument:(id)arg2 error:(id *)arg3;
- (void)refactorWithActionRenameRefactoringOperation:(id)arg1 inDocument:(id)arg2 error:(id *)arg3;
- (id)displayGroupNameFromReferenceEndPoint:(id)arg1;
- (id)displayGroupNameForDragFromObject:(id)arg1 toObject:(id)arg2;
- (id)errorMessageForExistenceWithoutPrototypeInDocument:(id)arg1;
- (BOOL)canCoexistsWithOtherConnectionsHavingSameEndPoint;
- (BOOL)isExclusiveTo:(id)arg1 inObjectContainer:(id)arg2;
- (id)equivalentPrototypeWithRespectToEquivalentEndPoint:(id)arg1 inDocument:(id)arg2;
- (id)prototypeWithRespectTo:(id)arg1;
- (BOOL)validateSource:(id)arg1;
- (void)completeWithComponentChoice:(id)arg1;
- (id)missingComponentChoices;
- (BOOL)validateDestination:(id)arg1;
- (BOOL)isPrototypeFor:(id)arg1;
- (BOOL)isEquivalentToPrototypeFor:(id)arg1 inDocument:(id)arg2;
- (long long)previousConnectionStateIndicatorForDragFromObject:(id)arg1 toObject:(id)arg2 inDocument:(id)arg3;
- (id)displayNameWithRespectToPedecessors:(id)arg1;

@end

@interface IBAbstractRelationshipInfo : NSObject <NSCopying, NSCoding>
{
    NSString *name;
    NSString *candidateClassName;
}

+ (id)relationshipInfoWithName:(id)arg1;
+ (id)relationshipInfoWithName:(id)arg1 andCandidateClassName:(id)arg2;
- (id)description;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)relationshipInfoWithCandidateClassName:(id)arg1;
- (id)relationshipInfoWithName:(id)arg1;
@property(readonly) long long relationshipType;
@property(readonly) NSString *candidateClassName;
@property(readonly) NSString *name;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithName:(id)arg1 andCandidateClassName:(id)arg2;

@end

@interface IBAbstractToManyOutletConnection : IBConnection
{
}

+ (id)supportedCollectionClassNames;
+ (id)prototypeConnectionsFromObject:(id)arg1 toObject:(id)arg2;
+ (id)prototypeConnectionsForObject:(id)arg1;
- (id)endPointForEstimatingUnlabeledConnection;
- (id)displayDescriptionInDocument:(id)arg1;
- (void)refactorWithOutletChangeTypeRefactoringOperation:(id)arg1 inDocument:(id)arg2 error:(id *)arg3;
- (void)refactorWithOutletMoveRefactoringOperation:(id)arg1 inDocument:(id)arg2 error:(id *)arg3;
- (void)refactorWithOutletRenameRefactoringOperation:(id)arg1 inDocument:(id)arg2 error:(id *)arg3;
- (void)ibWarnings:(id)arg1 forDocument:(id)arg2 withComputationContext:(id)arg3;
- (id)errorMessageForExistenceWithoutPrototypeInDocument:(id)arg1;
- (id)displayGroupNameFromReferenceEndPoint:(id)arg1;
- (id)descriptionNameFromReferenceEndPoint:(id)arg1;
- (BOOL)isExclusiveTo:(id)arg1 inObjectContainer:(id)arg2;
- (BOOL)validateDestination:(id)arg1;
- (id)equivalentPrototypeWithRespectToEquivalentEndPoint:(id)arg1 inDocument:(id)arg2;
- (long long)previousConnectionStateIndicatorForDragFromObject:(id)arg1 toObject:(id)arg2 inDocument:(id)arg3;
- (id)prototypeWithRespectTo:(id)arg1;

@end

@interface IBAbstractToOneOutletConnection : IBConnection
{
}

+ (id)insertConnectionsFromExternalConnectionRepresentation:(id)arg1 fromContainer:(id)arg2 forContainer:(id)arg3 context:(id)arg4;
+ (id)prototypeConnectionsFromObject:(id)arg1 toObject:(id)arg2;
+ (id)prototypeConnectionsForObject:(id)arg1;
+ (BOOL)isObjectValidOutletDestination:(id)arg1;
+ (BOOL)isObjectValidOutletSource:(id)arg1;
- (void)populateExternalConnectionRepresentation:(id)arg1 forContainer:(id)arg2 fromContainer:(id)arg3 otherExternalConnections:(id)arg4 context:(id)arg5;
- (BOOL)shouldFollowSourceToPasteboardAsExternalConnection;
- (id)endPointForEstimatingUnlabeledConnection;
- (id)displayDescriptionInDocument:(id)arg1;
- (void)refactorWithOutletChangeTypeRefactoringOperation:(id)arg1 inDocument:(id)arg2 error:(id *)arg3;
- (void)refactorWithOutletMoveRefactoringOperation:(id)arg1 inDocument:(id)arg2 error:(id *)arg3;
- (void)refactorWithOutletRenameRefactoringOperation:(id)arg1 inDocument:(id)arg2 error:(id *)arg3;
- (void)ibWarnings:(id)arg1 forDocument:(id)arg2 withComputationContext:(id)arg3;
- (id)errorMessageForExistenceWithoutPrototypeInDocument:(id)arg1;
- (id)displayGroupNameFromReferenceEndPoint:(id)arg1;
- (id)displayNameWithRespectToPedecessors:(id)arg1;
- (id)supersedingEndPoints;
- (id)supersedingDisplayValues;
- (BOOL)isCatchAllPrototypeForDisplayGroup;
- (BOOL)isExclusiveTo:(id)arg1 inObjectContainer:(id)arg2;
- (BOOL)isActuallyAnOutlet;
- (BOOL)canCoexistsWithOtherConnectionsHavingSameEndPoint;
- (BOOL)validateSource:(id)arg1;
- (void)completeWithComponentChoice:(id)arg1;
- (id)missingComponentChoices;
- (BOOL)validateDestination:(id)arg1;
- (id)equivalentPrototypeWithRespectToEquivalentEndPoint:(id)arg1 inDocument:(id)arg2;
- (id)equivalentSourceInDocument:(id)arg1;
- (long long)previousConnectionStateIndicatorForDragFromObject:(id)arg1 toObject:(id)arg2 inDocument:(id)arg3;
- (id)prototypeWithRespectTo:(id)arg1;
- (BOOL)isPrototypeFor:(id)arg1;

@end

@interface IBRefactoringOperation : NSObject
{
}

- (void)refactorObject:(id)arg1 inDocument:(id)arg2 error:(id *)arg3;

@end

@interface IBActionChangeTypeRefactoringOperation : IBRefactoringOperation
{
    NSString *actionName;
    NSString *className;
    NSString *oldType;
    NSString *newType;
}

- (void)refactorObject:(id)arg1 inDocument:(id)arg2 error:(id *)arg3;
- (id)newType;
- (id)oldType;
- (id)className;
- (id)actionName;
- (void)dealloc;
- (id)initWithClassName:(id)arg1 actionName:(id)arg2 oldType:(id)arg3 andNewType:(id)arg4;

@end

@interface IBActionInfo : IBAbstractRelationshipInfo
{
}

- (long long)relationshipType;

@end

@interface IBActionMoveRefactoringOperation : IBRefactoringOperation
{
    NSString *actionName;
    NSString *oldClassName;
    NSString *newClassName;
}

- (void)refactorObject:(id)arg1 inDocument:(id)arg2 error:(id *)arg3;
- (id)newClassName;
- (id)oldClassName;
- (id)actionName;
- (void)dealloc;
- (id)initWithActionName:(id)arg1 oldClassName:(id)arg2 andNewClassName:(id)arg3;

@end

@interface IBLibraryClassDetailController : NSObject
{
    NSString *currentClassName;
    IBDocument *document;
    NSView *view;
}

+ (id)classDetailControllerWithDocument:(id)arg1;
@property(copy, nonatomic) NSString *currentClassName; // @synthesize currentClassName;
@property(retain, nonatomic) NSView *view; // @synthesize view;
@property(nonatomic) IBDocument *document; // @synthesize document;
- (void)didChangeSuperclassOfCurrentClass;
- (void)viewDidLoad;
- (void)refreshWithClassName:(id)arg1;
@property(readonly, nonatomic) BOOL requiresResizeAfterRefresh;
@property(readonly, nonatomic) double preferredHeight;
@property(readonly, nonatomic) double minimumHeight;
@property(readonly, nonatomic) NSString *viewNibName;
@property(readonly, nonatomic) NSString *label;
- (void)dealloc;
- (id)initWithDocument:(id)arg1;

@end

@interface IBLibraryClassRelationController : IBLibraryClassDetailController <IBTextChangePostingTableViewDelegate, IBTextChangePostingTableViewDataSource>
{
    IBTextChangePostingTableView *relationTableView;
    NSButton *addRelationButton;
    NSButton *removeRelationButton;
    NSTextField *statusTextField;
    NSComboBoxCell *comboBoxDataCell;
    NSTextFieldCell *textFieldDataCell;
    IBIconAndTextCell *iconAndTextCell;
    NSString *inspectedClassName;
    NSString *relationNameToSelectAfterRefresh;
    NSString *columnIDToEditAfterRefresh;
    NSSet *previousSelection;
    NSString *previousClassName;
    NSMutableArray *classRelationships;
    BOOL refreshingRelations;
    IBAutoCompletingComboBoxDataSource *typeComboBoxDataSource;
    NSTimer *completionTimer;
    long long nextInsertionIndex;
}

@property(retain, nonatomic) IBIconAndTextCell *iconAndTextCell; // @synthesize iconAndTextCell;
@property(retain, nonatomic) NSTextFieldCell *textFieldDataCell; // @synthesize textFieldDataCell;
@property(retain, nonatomic) NSComboBoxCell *comboBoxDataCell; // @synthesize comboBoxDataCell;
@property(retain, nonatomic) NSTextField *statusTextField; // @synthesize statusTextField;
@property(retain, nonatomic) NSButton *removeRelationButton; // @synthesize removeRelationButton;
@property(retain, nonatomic) NSButton *addRelationButton; // @synthesize addRelationButton;
@property(retain, nonatomic) IBTextChangePostingTableView *relationTableView; // @synthesize relationTableView;
- (id)viewNibName;
- (void)control:(id)arg1 textDidEndEditing:(id)arg2;
- (void)control:(id)arg1 textDidChange:(id)arg2;
- (struct _NSRange)tableView:(id)arg1 textView:(id)arg2 willChangeSelectionFromCharacterRange:(struct _NSRange)arg3 toCharacterRange:(struct _NSRange)arg4;
- (BOOL)tableView:(id)arg1 textView:(id)arg2 shouldChangeTextInRange:(struct _NSRange)arg3 replacementString:(id)arg4;
- (void)doCompletion:(id)arg1;
- (void)startCompletionTimer:(id)arg1;
- (void)stopCompletionTimer;
- (id)tableView:(id)arg1 textView:(id)arg2 completions:(id)arg3 forPartialWordRange:(struct _NSRange)arg4 indexOfSelectedItem:(long long *)arg5;
- (long long)relationshipType;
- (id)generateUnusedRelationshipName;
- (void)removeSelectedRelations:(id)arg1;
- (void)addRelation:(id)arg1;
- (void)removeReferenceToSource:(id)arg1;
- (void)openSourceFileForSource:(id)arg1;
- (BOOL)tableView:(id)arg1 writeRowsWithIndexes:(id)arg2 toPasteboard:(id)arg3;
- (BOOL)tableView:(id)arg1 canWriteRowsWithIndexesToPasteboard:(id)arg2;
- (BOOL)tableView:(id)arg1 canRemoveRowsWithIndexes:(id)arg2;
- (BOOL)tableView:(id)arg1 removeRowsWithIndexes:(id)arg2;
- (BOOL)removeRelationsAtIndexes:(id)arg1;
- (BOOL)control:(id)arg1 textShouldEndEditing:(id)arg2;
- (BOOL)validateTableColumnEditing:(id)arg1 proposedValue:(id)arg2 error:(id *)arg3;
- (void)tableViewSelectionDidChange:(id)arg1;
- (double)tableView:(id)arg1 heightOfRow:(long long)arg2;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (BOOL)tableView:(id)arg1 shouldTrackCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (id)tableView:(id)arg1 dataCellForTableColumn:(id)arg2 row:(long long)arg3;
- (void)tableView:(id)arg1 sortDescriptorsDidChange:(id)arg2;
- (void)tableView:(id)arg1 setObjectValue:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (id)objectValueByCorrectingCommonMistakes:(id)arg1;
- (BOOL)validateRelationName:(id)arg1 oldRelationName:(id)arg2 compositeDescription:(id)arg3 error:(id *)arg4;
- (BOOL)validateRelationType:(id)arg1 compositeDescription:(id)arg2 error:(id *)arg3;
- (BOOL)tableView:(id)arg1 isGroupRow:(long long)arg2;
- (BOOL)tableView:(id)arg1 shouldSelectRow:(long long)arg2;
- (BOOL)tableView:(id)arg1 shouldEditTableColumn:(id)arg2 row:(long long)arg3;
- (id)tableView:(id)arg1 selectionIndexesForProposedSelection:(id)arg2;
- (id)selectionIndexesForProposedSelection:(id)arg1;
- (id)tableView:(id)arg1 toolTipForCell:(id)arg2 rect:(struct CGRect *)arg3 tableColumn:(id)arg4 row:(long long)arg5 mouseLocation:(struct CGPoint)arg6;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)applyNewUserDescription:(id)arg1 andSelectNamedRelation:(id)arg2 editColumnWithIdentifier:(id)arg3;
- (id)documentLocalDescriptionForMutating;
- (id)compositeDescription;
- (void)refresh;
- (void)refreshWithClassName:(id)arg1;
- (void)restoreEditingAndSelection;
- (void)setInspectedClassName:(id)arg1;
- (id)inspectedClassName;
- (void)setColumnIDToEditAfterRefresh:(id)arg1;
- (id)columnIDToEditAfterRefresh;
- (void)setRelationNameToSelectAfterRefresh:(id)arg1;
- (id)relationNameToSelectAfterRefresh;
- (void)setPreviousClassName:(id)arg1;
- (id)previousClassName;
- (void)setPreviousSelection:(id)arg1;
- (id)previousSelection;
- (void)refreshTableViewButtons;
- (id)defaultType;
- (long long)indexOfRelationWithName:(id)arg1;
- (id)selectedUserRelations;
- (id)selectedRelationshipNames;
- (id)selectedRelationships;
- (id)sourceForRelationItem:(id)arg1;
- (id)typeForRelation:(id)arg1;
- (id)nameForRelation:(id)arg1;
- (BOOL)isUserRelationItem:(id)arg1;
- (BOOL)isHeaderItem:(id)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IBActionRelationController : IBLibraryClassRelationController
{
}

- (id)objectValueByCorrectingCommonMistakes:(id)arg1;
- (id)label;
- (long long)relationshipType;
- (id)generateUnusedRelationshipName;
- (void)viewDidLoad;

@end

@interface IBInspector : NSObject
{
    NSArrayController *inspectedObjectsController;
    struct CGSize minimumViewBoundSize;
    NSView *inspectorView;
    BOOL active;
    void *reserved[8];
}

+ (BOOL)supportsMultipleObjectInspection;
+ (id)sharedInstance;
- (id)toolTipManager:(id)arg1 toolTipForView:(id)arg2 location:(struct CGPoint)arg3 tipSourceRect:(struct CGRect *)arg4 maximumWidth:(double *)arg5;
- (id)toolTipDisplayingViewForPoint:(struct CGPoint)arg1;
- (id)documentationTokenForDocumentationInfo:(id)arg1 finalAttributeName:(id *)arg2;
- (id)documentationInfoForView:(id)arg1;
- (id)affectedKeyPathsOfInspectedObjectsForView:(id)arg1;
- (struct CGSize)minimumViewBoundSize;
- (void)deactivate;
- (void)activate;
- (id)viewNibName;
- (id)view;
- (id)document;
- (id)inspectedObject;
- (id)inspectedObjects;
- (id)inspectedObjectsController;
- (void)refresh;
- (void)applyLockStateReflection;
- (void)clearLockStateReflection;
- (void)reflectLockedStateForView:(id)arg1;
- (void)clearLockedStateForView:(id)arg1;
- (void)debugPossiblyUnknownKeyPath:(id)arg1 forObject:(id)arg2;
- (void)refreshInspectedObjectsController;
- (id)label;
- (id)title;
- (void)dealloc;
- (id)init;

@end

@interface IBClassRelationInspector : IBInspector <IBTextChangePostingTableViewDataSource, IBTextChangePostingTableViewDelegate>
{
    IBTextChangePostingTableView *relationTableView;
    NSButton *addRelationButton;
    NSButton *removeRelationButton;
    NSTextField *statusTextField;
    NSComboBoxCell *comboBoxDataCell;
    NSTextFieldCell *textFieldDataCell;
    IBIconAndTextCell *iconAndTextCell;
    NSString *inspectedClassName;
    NSString *relationNameToSelectAfterRefresh;
    NSString *columnIDToEditAfterRefresh;
    NSSet *previousSelection;
    NSString *previousClassName;
    NSMutableArray *classRelationships;
    BOOL refreshingRelations;
    IBAutoCompletingComboBoxDataSource *typeComboBoxDataSource;
    NSTimer *completionTimer;
    long long nextInsertionIndex;
}

- (void)control:(id)arg1 textDidEndEditing:(id)arg2;
- (void)control:(id)arg1 textDidChange:(id)arg2;
- (struct _NSRange)tableView:(id)arg1 textView:(id)arg2 willChangeSelectionFromCharacterRange:(struct _NSRange)arg3 toCharacterRange:(struct _NSRange)arg4;
- (BOOL)tableView:(id)arg1 textView:(id)arg2 shouldChangeTextInRange:(struct _NSRange)arg3 replacementString:(id)arg4;
- (void)doCompletion:(id)arg1;
- (void)startCompletionTimer:(id)arg1;
- (void)stopCompletionTimer;
- (id)tableView:(id)arg1 textView:(id)arg2 completions:(id)arg3 forPartialWordRange:(struct _NSRange)arg4 indexOfSelectedItem:(long long *)arg5;
- (long long)relationshipType;
- (id)generateUnusedRelationshipName;
- (void)removeSelectedRelations:(id)arg1;
- (void)addRelation:(id)arg1;
- (void)removeReferenceToSource:(id)arg1;
- (void)openSourceFileForSource:(id)arg1;
- (BOOL)tableView:(id)arg1 writeRowsWithIndexes:(id)arg2 toPasteboard:(id)arg3;
- (BOOL)tableView:(id)arg1 canWriteRowsWithIndexesToPasteboard:(id)arg2;
- (BOOL)tableView:(id)arg1 canRemoveRowsWithIndexes:(id)arg2;
- (BOOL)tableView:(id)arg1 removeRowsWithIndexes:(id)arg2;
- (BOOL)removeRelationsAtIndexes:(id)arg1;
- (BOOL)control:(id)arg1 textShouldEndEditing:(id)arg2;
- (BOOL)validateTableColumnEditing:(id)arg1 proposedValue:(id)arg2 error:(id *)arg3;
- (void)tableViewSelectionDidChange:(id)arg1;
- (double)tableView:(id)arg1 heightOfRow:(long long)arg2;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (BOOL)tableView:(id)arg1 shouldTrackCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (id)tableView:(id)arg1 dataCellForTableColumn:(id)arg2 row:(long long)arg3;
- (void)tableView:(id)arg1 sortDescriptorsDidChange:(id)arg2;
- (void)tableView:(id)arg1 setObjectValue:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (id)objectValueByCorrectingCommonMistakes:(id)arg1;
- (BOOL)validateRelationName:(id)arg1 oldRelationName:(id)arg2 compositeDescription:(id)arg3 error:(id *)arg4;
- (BOOL)validateRelationType:(id)arg1 compositeDescription:(id)arg2 error:(id *)arg3;
- (BOOL)tableView:(id)arg1 isGroupRow:(long long)arg2;
- (BOOL)tableView:(id)arg1 shouldSelectRow:(long long)arg2;
- (BOOL)tableView:(id)arg1 shouldEditTableColumn:(id)arg2 row:(long long)arg3;
- (id)tableView:(id)arg1 selectionIndexesForProposedSelection:(id)arg2;
- (id)selectionIndexesForProposedSelection:(id)arg1;
- (id)tableView:(id)arg1 toolTipForCell:(id)arg2 rect:(struct CGRect *)arg3 tableColumn:(id)arg4 row:(long long)arg5 mouseLocation:(struct CGPoint)arg6;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (id)defaultType;
- (void)applyNewUserDescription:(id)arg1 andSelectNamedRelation:(id)arg2 editColumnWithIdentifier:(id)arg3;
- (id)documentLocalDescriptionForMutating;
- (id)compositeDescription;
- (void)refresh;
- (void)restoreEditingAndSelection;
- (void)setInspectedClassName:(id)arg1;
- (id)inspectedClassName;
- (void)setColumnIDToEditAfterRefresh:(id)arg1;
- (id)columnIDToEditAfterRefresh;
- (void)setRelationNameToSelectAfterRefresh:(id)arg1;
- (id)relationNameToSelectAfterRefresh;
- (void)setPreviousClassName:(id)arg1;
- (id)previousClassName;
- (void)setPreviousSelection:(id)arg1;
- (id)previousSelection;
- (void)dealloc;
- (void)refreshTableViewButtons;
- (long long)indexOfRelationWithName:(id)arg1;
- (id)selectedUserRelations;
- (id)selectedRelationshipNames;
- (id)selectedRelationships;
- (id)sourceForRelationItem:(id)arg1;
- (id)typeForRelation:(id)arg1;
- (id)nameForRelation:(id)arg1;
- (BOOL)isUserRelationItem:(id)arg1;
- (BOOL)isHeaderItem:(id)arg1;
- (void)awakeFromNib;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IBActionRelationInspector : IBClassRelationInspector
{
}

- (id)objectValueByCorrectingCommonMistakes:(id)arg1;
- (id)label;
- (id)viewNibName;
- (long long)relationshipType;
- (id)generateUnusedRelationshipName;
- (void)awakeFromNib;

@end

@interface IBActionRenameRefactoringOperation : IBRefactoringOperation
{
    NSString *oldActionName;
    NSString *newActionName;
    NSString *className;
}

- (void)refactorObject:(id)arg1 inDocument:(id)arg2 error:(id *)arg3;
- (id)className;
- (id)newActionName;
- (id)oldActionName;
- (void)dealloc;
- (id)initWithClassName:(id)arg1 oldActionName:(id)arg2 newActionName:(id)arg3;

@end

@interface IBSourceCodeGenerator : NSObject
{
}

+ (id)interfaceFileExtension;
+ (id)primaryFileExtension;
+ (id)languageDisplayName;
+ (id)languageIdentifier;
- (id)commentPrefixString;
- (id)generateFileInformationHeaderForFileNamed:(id)arg1;
- (id)generateSourceFilesForPartialClassDescription:(id)arg1 baseFileName:(id)arg2 directory:(id)arg3;
- (id)generatePreferredSourceCodeForNamedRelations:(id)arg1 ofRelationshipType:(long long)arg2 inClassDescription:(id)arg3;
- (id)generatePreferredSourceCodeForNamedRelation:(id)arg1 ofRelationshipType:(long long)arg2 inClassDescription:(id)arg3;

@end

@interface IBAppleScriptGenerator : IBSourceCodeGenerator
{
}

+ (id)interfaceFileExtension;
+ (id)primaryFileExtension;
+ (id)languageDisplayName;
+ (id)languageIdentifier;
- (id)commentPrefixString;
- (id)generateSourceFilesForPartialClassDescription:(id)arg1 baseFileName:(id)arg2 directory:(id)arg3;
- (id)generatePreferredSourceCodeForNamedRelation:(id)arg1 ofRelationshipType:(long long)arg2 inClassDescription:(id)arg3;

@end

@interface IBSourceCodeParser : NSObject
{
    BOOL usesStrictParsing;
}

+ (id)supportedFileExtensions;
- (id)orderedRelationsOfRelationshipType:(long long)arg1 inClassDescription:(id)arg2;
- (id)parseData:(id)arg1 fromFile:(id)arg2 errors:(id *)arg3;
- (id)parseFile:(id)arg1 errors:(id *)arg2;
- (void)setUsesStrictParsing:(BOOL)arg1;
- (BOOL)usesStrictParsing;
- (id)init;

@end

@interface IBTaskBasedParser : IBSourceCodeParser
{
}

- (id)parseData:(id)arg1 fromFile:(id)arg2 errors:(id *)arg3;
- (id)taskForParsingData:(id)arg1 fromFile:(id)arg2 input:(id *)arg3 output:(id *)arg4;
- (id)processParserOutput:(id)arg1 fromFile:(id)arg2 errors:(id *)arg3;
- (id)parserLaunchArgumentsForFile:(id)arg1;
- (id)parserLaunchPathForFile:(id)arg1;

@end

@interface IBNibExtractorParser : IBTaskBasedParser
{
    IBCFMutableDictionary *descriptionsToRelationshipTypesToOrderedRelations;
}

- (id)orderedRelationsOfRelationshipType:(long long)arg1 inClassDescription:(id)arg2;
- (id)processParserOutput:(id)arg1 fromFile:(id)arg2 errors:(id *)arg3;
- (id)parserLaunchPathForFile:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface IBAppleScriptParser : IBNibExtractorParser
{
}

+ (id)supportedFileExtensions;
+ (void)initialize;
- (id)parserLaunchArgumentsForFile:(id)arg1;

@end

@interface IBConnectionInterfaceStyle : NSObject
{
}

+ (id)aquaStyle;
+ (id)HUDStyle;
- (id)pathControlFont;
- (id)pathControlFontColor;
- (struct CGColor *)pathControlPathColorNotKey;
- (struct CGColor *)pathControlPathColorPressed;
- (struct CGColor *)pathControlPathColorNormal;
- (id)pathControlGradientNotKeyHighlighted;
- (id)pathControlGradientHighlighted;
- (id)pathControlGradientNotKeyPressed;
- (struct CGGradient *)pathControlGradientNotKey;
- (struct CGGradient *)pathControlGradientPressed;
- (struct CGGradient *)pathControlGradientNormal;
- (id)pathControlColorNotKeyHighlighted;
- (id)pathControlColorsHighlighted;
- (id)pathControlColorsNotKeyPressed;
- (id)pathControlColorsNotKey;
- (id)pathControlColorsPressed;
- (id)pathControlColorsNormal;
- (id)predecessorViewConnectionButtonDisabledFillColor;
- (id)predecessorViewCollapseButtonFillColor;
- (id)predecessorPopUpHighlightedBackground;
- (id)predecessorPopUpBackground;
- (id)predecessorPopUpHighlightedTextColor;
- (id)predecessorPopUpTextColor;
- (id)predecessorConnectButtonFillColor;
- (id)predecessorConnectButtonRolloverOrPreceededFillColor;
- (id)predecessorWarnedTitleColor;
- (id)predecessorDisabledTitleColor;
- (id)predecessorTitleColor;
- (id)predecessorDisconnectButtonRolledOverFillColor;
- (id)predecessorDisconnectButtonPressedFillColor;
- (id)predecessorDisconnectButtonFillColor;
- (id)predecessorViewConnectionButtonBorderColor;
- (id)predecessorDisconnectButtonDisabledIconColor;
- (id)predecessorDisconnectButtonPressedIconColor;
- (id)predecessorDisconnectButtonIconColor;
- (id)predecessorDisconnectButtonRolledOverIconColor;
- (id)predecessorWarningBangColor;
- (id)predecessorWarningTriangleColor;
- (id)predecessorWarningPressedColor;
- (id)predecessorPressedConnectButtonIconColor;
- (id)predecessorConnectButtonIconColor;
- (id)predecessorViewConnectionButtonDisabledBorderColor;
- (id)predecessorPressedCollapseButtonIconColor;
- (id)predecessorCollapseButtonIconColor;
- (id)predecessorSelectedBackgroundColor;
- (id)connectionViewBottomBorderColor;
- (id)connectionViewBackgroundMultipleSelectedColor;
- (id)connectionViewBackgroundSingleSelectedColor;
- (id)connectionViewBackgroundPressedColor;
- (id)connectionViewBackgroundHighlightedColor;
- (id)connectionViewBackgroundColor;
- (id)connectionConnectionViewTitleBubleStrokeColor;
- (id)connectionConnectionViewTitleBubleColor;
- (id)connectionConnectionViewRolledOverTitleBubleStrokeColor;
- (id)connectionConnectionViewRolledOverTitleBubleColor;
- (id)connectionConnectionViewWarnedTitleColor;
- (id)connectionConnectionViewTitleColor;
- (id)connectionViewTitleFont;
- (Class)collapseViewClass;
- (BOOL)hasRefocusButton;
- (BOOL)fadesOutDragWindow;
- (double)predecessorWidth;

@end

@interface IBHUDConnectionInterfaceStyle : IBConnectionInterfaceStyle
{
}

- (id)pathControlFont;
- (id)pathControlFontColor;
- (struct CGColor *)pathControlPathColorNotKey;
- (struct CGColor *)pathControlPathColorPressed;
- (struct CGColor *)pathControlPathColorNormal;
- (struct CGGradient *)pathControlGradientNotKey;
- (struct CGGradient *)pathControlGradientPressed;
- (struct CGGradient *)pathControlGradientNormal;
- (id)pathControlColorsNotKey;
- (id)pathControlColorsPressed;
- (id)pathControlColorsNormal;
- (id)predecessorViewCollapseButtonFillColor;
- (id)predecessorPopUpHighlightedBackground;
- (id)predecessorPopUpBackground;
- (id)predecessorPopUpHighlightedTextColor;
- (id)predecessorPopUpTextColor;
- (id)predecessorConnectButtonFillColor;
- (id)predecessorConnectButtonRolloverOrPreceededFillColor;
- (id)predecessorWarnedTitleColor;
- (id)predecessorDisabledTitleColor;
- (id)predecessorTitleColor;
- (id)predecessorDisconnectButtonRolledOverFillColor;
- (id)predecessorDisconnectButtonPressedFillColor;
- (id)predecessorDisconnectButtonFillColor;
- (id)predecessorViewConnectionButtonBorderColor;
- (id)predecessorViewConnectionButtonDisabledBorderColor;
- (id)predecessorDisconnectButtonPressedIconColor;
- (id)predecessorDisconnectButtonIconColor;
- (id)predecessorDisconnectButtonRolledOverIconColor;
- (id)predecessorWarningBangColor;
- (id)predecessorWarningTriangleColor;
- (id)predecessorWarningPressedColor;
- (id)predecessorPressedConnectButtonIconColor;
- (id)predecessorConnectButtonIconColor;
- (id)predecessorPressedCollapseButtonIconColor;
- (id)predecessorCollapseButtonIconColor;
- (id)connectionViewBottomBorderColor;
- (id)connectionViewBackgroundMultipleSelectedColor;
- (id)connectionViewBackgroundSingleSelectedColor;
- (id)connectionViewBackgroundPressedColor;
- (id)connectionViewBackgroundHighlightedColor;
- (id)predecessorSelectedBackgroundColor;
- (id)connectionViewBackgroundColor;
- (id)connectionConnectionViewTitleBubleStrokeColor;
- (id)connectionConnectionViewTitleBubleColor;
- (id)connectionConnectionViewRolledOverTitleBubleStrokeColor;
- (id)connectionConnectionViewRolledOverTitleBubleColor;
- (id)connectionConnectionViewWarnedTitleColor;
- (id)connectionConnectionViewTitleColor;
- (id)connectionViewTitleFont;
- (Class)collapseViewClass;
- (BOOL)hasRefocusButton;
- (BOOL)fadesOutDragWindow;
- (double)predecessorWidth;

@end

@interface IBAquaConnectionInterfaceStyle : IBHUDConnectionInterfaceStyle
{
}

- (id)pathControlFont;
- (id)pathControlFontColor;
- (struct CGColor *)pathControlPathColorNotKey;
- (struct CGColor *)pathControlPathColorPressed;
- (struct CGColor *)pathControlPathColorNormal;
- (struct CGGradient *)pathControlGradientNotKey;
- (struct CGGradient *)pathControlGradientPressed;
- (struct CGGradient *)pathControlGradientNormal;
- (id)pathControlColorsNotKey;
- (id)pathControlColorsPressed;
- (id)pathControlColorsNormal;
- (id)connectionConnectionViewTitleColor;
- (id)connectionConnectionViewWarnedTitleColor;
- (id)connectionConnectionViewRolledOverTitleBubleColor;
- (id)connectionConnectionViewRolledOverTitleBubleStrokeColor;
- (id)connectionConnectionViewTitleBubleColor;
- (id)connectionConnectionViewTitleBubleStrokeColor;
- (id)connectionViewBackgroundMultipleSelectedColor;
- (id)connectionViewBackgroundSingleSelectedColor;
- (id)connectionViewBackgroundColor;
- (id)connectionViewBackgroundHighlightedColor;
- (id)connectionViewBackgroundPressedColor;
- (id)connectionViewBottomBorderColor;
- (id)predecessorWarningPressedColor;
- (id)predecessorWarningTriangleColor;
- (id)predecessorWarningBangColor;
- (id)predecessorDisconnectButtonFillColor;
- (id)predecessorDisconnectButtonPressedFillColor;
- (id)predecessorDisconnectButtonRolledOverFillColor;
- (id)predecessorDisconnectButtonRolledOverIconColor;
- (id)predecessorDisconnectButtonIconColor;
- (id)predecessorDisconnectButtonPressedIconColor;
- (id)predecessorDisabledTitleColor;
- (id)predecessorTitleColor;
- (id)predecessorWarnedTitleColor;
- (id)predecessorPopUpTextColor;
- (id)predecessorPopUpHighlightedTextColor;
- (id)predecessorPopUpBackground;
- (id)predecessorPopUpHighlightedBackground;
- (id)predecessorViewCollapseButtonFillColor;
- (id)predecessorCollapseButtonIconColor;
- (id)predecessorPressedCollapseButtonIconColor;
- (id)predecessorConnectButtonIconColor;
- (id)predecessorPressedConnectButtonIconColor;
- (id)predecessorConnectButtonRolloverOrPreceededFillColor;
- (id)predecessorConnectButtonFillColor;
- (id)predecessorViewConnectionButtonBorderColor;
- (id)predecessorSelectedBackgroundColor;
- (id)connectionViewTitleFont;
- (Class)collapseViewClass;
- (BOOL)hasRefocusButton;
- (BOOL)fadesOutDragWindow;
- (double)predecessorWidth;

@end

@interface IBArchivableValue : NSObject <NSCoding>
{
    NSValue *value;
}

+ (id)archivableValueWithValue:(id)arg1;
- (id)value;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithValue:(id)arg1;

@end

@interface IBArrayController : NSArrayController
{
}

- (void)_setSingleValue:(id)arg1 forKeyPath:(id)arg2;
- (void)_setSingleValue:(id)arg1 forKey:(id)arg2;

@end

@interface IBAsyncXMLDecoderWrapper : NSObject
{
    IBXMLDecoder *decoder;
    NSURL *fileURL;
    NSObject<OS_dispatch_semaphore> *loadingSemaphore;
}

- (id)url;
- (id)initializedDecoder;
- (void)initializeDecoderForFileURL:(id)arg1;
- (void)setDecoder:(id)arg1;
- (id)decoder;
- (void)dealloc;
- (id)initWithURL:(id)arg1;

@end

@interface IBAttributePlaceholder : NSObject <NSCoding>
{
    NSString *name;
    id object;
}

- (void)documentDidSave:(id)arg1;
- (void)documentWillSave:(id)arg1;
- (void)archiveConnectionIntoObjectData:(id)arg1 previousIDs:(id)arg2;
- (id)name;
- (id)object;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithObject:(id)arg1 andName:(id)arg2;

@end

@interface IBBinder : NSObject
{
    NSString *keyPath;
    NSSet *aliasedKeyPaths;
    id widget;
    BOOL ignoringInput;
    NSMutableDictionary *bindingOptions;
}

+ (id)defaultAliasedKeyPathsForKeyPath:(id)arg1;
- (void)comboBoxSelectionDidChange:(id)arg1;
- (void)controlTextDidChange:(id)arg1;
- (void)controlTextDidEndEditing:(id)arg1;
- (void)controlTextDidBeginEditing:(id)arg1;
- (void)textDidEndEditing:(id)arg1;
- (void)textDidChange:(id)arg1;
- (id)description;
- (void)projectValue:(id)arg1 onSelection:(id)arg2;
- (void)actOnSelection:(id)arg1;
- (void)reflectValue:(id)arg1;
- (void)reflectSelection:(id)arg1;
- (BOOL)isKeyPathMixedForSelection:(id)arg1;
- (void)putWidgetInMixedState;
- (id)placeholderStringForTextField:(id)arg1;
- (id)valueForBindingOption:(id)arg1;
- (void)setValue:(id)arg1 forBindingOption:(id)arg2;
- (id)aliasedKeyPaths;
- (id)keyPath;
- (id)widget;
- (id)widgetValue;
- (void)setValue:(id)arg1 forObject:(id)arg2;
- (id)valueForObject:(id)arg1;
- (id)defaultValue;
- (void)dealloc;
- (id)initWithPath:(id)arg1 aliasedKeyPaths:(id)arg2 andWidget:(id)arg3;

@end

@interface IBAttributedStringBinder : IBBinder
{
}

- (void)reflectValue:(id)arg1;
- (id)widgetValue;
- (id)defaultValue;

@end

@interface IBAutoCompletingComboBoxDataSource : NSObject <NSComboBoxDataSource, NSComboBoxCellDataSource>
{
    NSDictionary *namesToIndexes;
    NSDictionary *valuesToNames;
    NSArray *orderedValues;
}

- (id)comboBoxCell:(id)arg1 completedString:(id)arg2;
- (id)completeString:(id)arg1 alternates:(id *)arg2;
- (unsigned long long)comboBoxCell:(id)arg1 indexOfItemWithStringValue:(id)arg2;
- (id)comboBoxCell:(id)arg1 objectValueForItemAtIndex:(long long)arg2;
- (id)displayValueAtIndex:(long long)arg1;
- (long long)numberOfItemsInComboBoxCell:(id)arg1;
- (void)takeContentFromArrayOfStrings:(id)arg1;
- (void)takeContent:(id)arg1 withDisplayNameKeyPath:(id)arg2;
- (void)setContent:(id)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IBAutoLayoutView : NSView
{
    long long blocks;
}

- (void)layout;
- (void)triggerLayout;
- (BOOL)isLayoutEnabled;
- (void)disableLayout;
- (void)enableLayout;

@end

@interface IBBisectionView : NSView
{
    BOOL vertical;
}

- (void)setVertical:(BOOL)arg1;
- (BOOL)isVertical;
- (void)layout;
- (double)dividerThickness;
- (void)resizeSubviewsWithOldSize:(struct CGSize)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface IBBitFieldBinder : IBBinder
{
}

- (void)putWidgetInMixedState;
- (void)reflectValue:(id)arg1;
- (void)projectValue:(id)arg1 onSelection:(id)arg2;
- (id)defaultValue;
- (BOOL)isKeyPathMixedForSelection:(id)arg1;
- (id)widgetValue;
- (long long)widgetBits;
- (long long)widgetMask;

@end

@interface IBBoolBinder : IBBinder
{
}

- (void)reflectValue:(id)arg1;
- (id)widgetValue;
- (id)defaultValue;

@end

@interface IBBoundInspector : IBInspector
{
    IBCFMutableDictionary *bindings;
}

- (void)textDidEndEditing:(id)arg1;
- (void)textDidChange:(id)arg1;
- (id)documentationInfoForView:(id)arg1;
- (id)affectedKeyPathsOfInspectedObjectsForView:(id)arg1;
- (void)putWidgetInMixedState:(id)arg1;
- (void)refresh;
- (id)boundWidgets;
- (void)okAndConstrainBoundsToNearestLegalSize:(id)arg1;
- (void)ok:(id)arg1;
- (void)unbindWidget:(id)arg1;
- (void)bindWidget:(id)arg1 toKeyPath:(id)arg2 ofType:(long long)arg3;
- (void)bindWidget:(id)arg1 toKeyPath:(id)arg2 ofType:(long long)arg3 aliasedKeyPath:(id)arg4;
- (void)setValue:(id)arg1 forBindingOption:(id)arg2 onWidget:(id)arg3;
- (void)bindWidget:(id)arg1 toKeyPath:(id)arg2 ofType:(long long)arg3 aliasedKeyPaths:(id)arg4;
- (void)dealloc;

@end

@interface IBButtonComboBox : NSComboBox
{
    IBSlateBezierButton *button;
}

+ (Class)cellClass;
- (void)setEnabled:(BOOL)arg1;
- (id)button;
- (void)initializeButton;
- (struct CGRect)buttonRect;
- (double)comboBoxButtonOffset;
- (double)buttonSize;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface IBButtonComboBoxCell : NSComboBoxCell
{
}

- (void)selectWithFrame:(struct CGRect)arg1 inView:(id)arg2 editor:(id)arg3 delegate:(id)arg4 start:(long long)arg5 length:(long long)arg6;
- (void)editWithFrame:(struct CGRect)arg1 inView:(id)arg2 editor:(id)arg3 delegate:(id)arg4 event:(id)arg5;
- (struct CGRect)scaleRect:(struct CGRect)arg1 forControlView:(id)arg2;

@end

@interface IBCFMutableArray : NSMutableArray
{
    struct __CFArray *storage;
}

+ (CDStruct_b3b3fc87)pointerCallbacks;
- (void)replaceObjectAtIndex:(unsigned long long)arg1 withObject:(id)arg2;
- (void)removeObjectAtIndex:(unsigned long long)arg1;
- (void)removeLastObject;
- (void)insertObject:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)addObject:(id)arg1;
- (id)objectAtIndex:(unsigned long long)arg1;
- (unsigned long long)count;
- (void)dealloc;
- (id)init;

@end

@interface IBCFMutableDictionary : NSMutableDictionary <NSCoding>
{
    struct __CFDictionary *store;
    NSSortDescriptor *sortDescriptor;
    NSSortDescriptor *codingSortDescriptor;
}

+ (id)sortedCocoaDictionaryWithKeyComparator:(SEL)arg1;
+ (CDStruct_b3b3fc87)cocoaValueCallBacks;
+ (CDStruct_f2932e27)cocoaKeyCallBacks;
+ (CDStruct_b3b3fc87)pointerValueCallBacks;
+ (CDStruct_f2932e27)pointerKeyCallBacks;
- (void)removeObjectForKey:(id)arg1;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (id)keyEnumerator;
- (id)allKeys;
- (id)objectForKey:(id)arg1;
- (unsigned long long)count;
- (void)setCodingSortDescriptor:(id)arg1;
- (void)setSortDescriptor:(id)arg1;
- (id)sortDescriptor;
- (id)codingSortDescriptor;
- (void)setKeyComparator:(SEL)arg1;
- (void)dealloc;
- (Class)classForCoder;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)init;
- (id)initWithKeyCallbacks:(CDStruct_f2932e27)arg1 andValueCallBacks:(CDStruct_b3b3fc87)arg2;

@end

@interface IBCFTypeReleaser : NSObject
{
    void *value;
}

- (void)dealloc;
- (id)initWithValue:(void *)arg1;

@end

@interface IBCIImage : CIImage
{
    NSString *resourceName;
}

- (id)replacementObjectForCoder:(id)arg1;
- (void)dealloc;
- (void)setResourceName:(id)arg1;
- (id)resourceName;

@end

@interface IBCachedImageRep : NSCachedImageRep
{
}

- (id)initWithCoder:(id)arg1;
- (id)superSuperInit;
- (id)superSuperInitWithCoder:(id)arg1;

@end

@interface IBClassCreationController : NSWindowController
{
    NSString *superclassName;
    NSString *newClassName;
    NSString *errorMessage;
    id delegate;
}

+ (id)controllerWithDocument:(id)arg1;
@property(nonatomic) id delegate; // @synthesize delegate;
@property(copy, nonatomic) NSString *errorMessage; // @synthesize errorMessage;
@property(copy, nonatomic) NSString *newClassName; // @synthesize newClassName;
@property(copy, nonatomic) NSString *superclassName; // @synthesize superclassName;
- (void)cancelDialog:(id)arg1;
- (void)confirmDialog:(id)arg1;
- (void)runModalToCreateSubclassOf:(id)arg1;
- (void)modalDidFinish:(id)arg1 returnCode:(long long)arg2;
- (BOOL)validateNewClassName:(id)arg1 error:(id *)arg2;
- (BOOL)classWithNameAlreadyExists:(id)arg1;
- (id)document;
- (void)generateClassDescription;
- (id)windowTitleForDocumentDisplayName:(id)arg1;
- (void)dealloc;
- (id)initWithDocument:(id)arg1;

@end

@interface IBClassDescriber : NSObject <NSCoding>
{
    NSMutableDictionary *compositeDescriptions;
    NSMutableDictionary *classNamesToSubclasseNames;
    IBDocument *document;
}

+ (id)partialClassDescriptionsFromFile:(id)arg1 sourceIdentifier:(id)arg2 forTargetRuntime:(id)arg3 error:(id *)arg4;
+ (id)partialClassDescriptionsFromData:(id)arg1 fromFile:(id)arg2 sourceIdentifier:(id)arg3 forTargetRuntime:(id)arg4 error:(id *)arg5;
+ (id)systemClassDescriptionsForTargetRuntime:(id)arg1 withSourceIdentifier:(id)arg2;
+ (id)systemClassDescriptionsForTargetRuntime:(id)arg1;
+ (void)purgeSystemClassDescriptionsFromPlugin:(id)arg1;
+ (void)loadSystemClassDescriptionsAtPath:(id)arg1 fromPlugin:(id)arg2 forTargetRuntime:(id)arg3;
+ (void)loadSystemClassDescriptionAtPath:(id)arg1 fromPlugin:(id)arg2 forTargetRuntime:(id)arg3;
+ (void)removeSystemClassDescription:(id)arg1 fromTargetRuntime:(id)arg2;
+ (void)addSystemClassDescription:(id)arg1 forTargetRuntime:(id)arg2 fromPluginWithBundleIdentifier:(id)arg3;
- (id)differencesBetweenOldClassDescriptionStateToken:(id)arg1 andNewToken:(id)arg2;
- (id)classDescriptionStateToken;
- (void)extractClassDescriptionsFromPasteboard:(id)arg1;
- (void)putClassDescriptionsOnPasteboard:(id)arg1 forObjects:(id)arg2;
- (id)relationshipInfoForToManyOutlet:(id)arg1 forObject:(id)arg2;
- (id)typeForToManyOutlet:(id)arg1 forObject:(id)arg2;
- (id)typeForToOneOutlet:(id)arg1 forObject:(id)arg2;
- (id)typeForAction:(id)arg1 forObject:(id)arg2;
- (id)toManyOutletInfosForObject:(id)arg1;
- (id)toManyOutletsForObject:(id)arg1;
- (id)toOneOutletsForObject:(id)arg1;
- (id)actionsForObject:(id)arg1;
- (id)relationshipInfosOfRelationshipType:(long long)arg1 forObject:(id)arg2;
- (id)namedRelationsOfRelationshipType:(long long)arg1 forObject:(id)arg2;
- (id)typeForNamedRelation:(id)arg1 ofRelationshipType:(long long)arg2 forObject:(id)arg3;
- (id)toManyOutletsForClassNamed:(id)arg1;
- (id)toOneOutletsForClassNamed:(id)arg1;
- (id)actionsForClassNamed:(id)arg1;
- (id)typeForToManyOutlet:(id)arg1 forClassNamed:(id)arg2;
- (id)typeForToOneOutlet:(id)arg1 forClassNamed:(id)arg2;
- (id)typeForAction:(id)arg1 forClassNamed:(id)arg2;
- (id)relationshipInfosOfRelationshipType:(long long)arg1 forClassNamed:(id)arg2;
- (id)namedRelationsOfRelationshipType:(long long)arg1 forClassNamed:(id)arg2;
- (id)typeForNamedRelation:(id)arg1 ofRelationshipType:(long long)arg2 forClassNamed:(id)arg3;
- (id)namedRelationsOfRelationshipType:(long long)arg1 forObject:(id)arg2 matchingObject:(id)arg3;
- (id)namedRelationsOfRelationshipType:(long long)arg1 forClassNamed:(id)arg2 matchingClassNamed:(id)arg3;
- (id)namedRelationsOfRelationshipType:(long long)arg1;
- (id)suggestedSuperclassOfClass:(id)arg1;
- (id)descendantsOfClasses:(id)arg1;
- (id)descendantsOfClass:(id)arg1;
- (id)lineageOfClass:(id)arg1;
- (id)describedLineageOfClass:(id)arg1;
- (id)superclassOfClass:(id)arg1;
- (id)describedSuperclassOfClass:(id)arg1;
- (BOOL)is:(id)arg1 aKindOf:(id)arg2;
- (BOOL)isClassNameCompletelyDescribed:(id)arg1;
- (id)classNamesReferencedByDocument;
- (id)describedClassNames;
- (id)classNames;
- (BOOL)hasDescriptionOfClass:(id)arg1;
- (BOOL)removeSuperclassOfClass:(id)arg1;
- (BOOL)canRemoveSuperclassOfClass:(id)arg1;
- (BOOL)isCompositeClassDescriptionPurgable:(id)arg1;
- (BOOL)isPartialClassDescriptionPurgable:(id)arg1;
- (void)removeSystemClassDescriptionsIntegratedByPlugin:(id)arg1;
- (BOOL)integrateSystemClassDescriptionsIntegratedByPlugin:(id)arg1 error:(id *)arg2;
- (void)integrateSystemClassDescriptions;
- (BOOL)integratePartialDescriptionsFromFrameworkFiles:(id)arg1 error:(id *)arg2;
- (BOOL)integrateDocumentLocalClassDescriptions:(id)arg1 error:(id *)arg2;
- (BOOL)integrateManuallyAddedClassDescriptionsFromFiles:(id)arg1 project:(id)arg2 changes:(id *)arg3 error:(id *)arg4;
- (BOOL)integrateManuallyAddedClassDescriptionsFromFiles:(id)arg1 project:(id)arg2 error:(id *)arg3;
- (id)partialClassDescriptionsFromFiles:(id)arg1 project:(id)arg2 error:(id *)arg3;
- (void)integratePartialDescriptionsFromFiles:(id)arg1 inXcodeProject:(id)arg2 errorsPerFile:(id)arg3;
- (void)pruneFrameworkClassDescriptionsToFrameworksWithNames:(id)arg1;
- (void)pruneProjectClassDescriptionsToFiles:(id)arg1 fromBaseDirectory:(id)arg2;
- (void)pruneDocumentRelativeFilesFromXcodeProject:(id)arg1;
- (void)removePartialDescriptionsFromProjectFiles:(id)arg1 inXcodeProject:(id)arg2;
- (void)removePartialDescriptionsFromFrameworksNamed:(id)arg1;
- (BOOL)integratePartialClassDescription:(id)arg1 error:(id *)arg2;
- (BOOL)integratePartialClassDescriptions:(id)arg1 error:(id *)arg2;
- (void)removePartialDescriptionsWithSourceIdentifier:(id)arg1;
- (void)removePartialDescriptionsWithSourceIdentifier:(id)arg1 forClassNamed:(id)arg2;
- (void)removePartialDescriptionsWithSourceIdentifiers:(id)arg1;
- (void)documentURLChangedFrom:(id)arg1 to:(id)arg2;
- (id)conflictingSourceIdentifierPreventingIntegrationOfClassDescriptionBecauseOfConflictingSuperClasses:(id)arg1;
- (BOOL)wouldAddingClassNamed:(id)arg1 withSuperClassNamedIntroduceACycle:(id)arg2;
- (void)undeclareClassNamed:(id)arg1;
- (void)setCompositeDescription:(id)arg1 forClassNamed:(id)arg2;
- (id)compositeDescriptionOfClassNamed:(id)arg1;
- (id)classDescriptionSources;
- (id)compositeClassDescriptions;
- (void)removeKnownSubclass:(id)arg1 fromClass:(id)arg2;
- (void)addKnownSubclass:(id)arg1 toClass:(id)arg2;
- (id)subclassesOfClass:(id)arg1;
- (id)description;
- (void)setDocument:(id)arg1;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithDocument:(id)arg1;
- (void)refactorWithActionChangeTypeRefactoringOperation:(id)arg1 inDocument:(id)arg2 error:(id *)arg3;
- (void)refactorWithActionMoveRefactoringOperation:(id)arg1 inDocument:(id)arg2 error:(id *)arg3;
- (void)refactorWithActionRenameRefactoringOperation:(id)arg1 inDocument:(id)arg2 error:(id *)arg3;
- (void)refactorWithOutletChangeTypeRefactoringOperation:(id)arg1 inDocument:(id)arg2 error:(id *)arg3;
- (void)refactorWithOutletMoveRefactoringOperation:(id)arg1 inDocument:(id)arg2 error:(id *)arg3;
- (void)refactorWithOutletRenameRefactoringOperation:(id)arg1 inDocument:(id)arg2 error:(id *)arg3;
- (void)renameClassNamed:(id)arg1 to:(id)arg2;

@end

@interface IBClassDescription : NSObject <NSCoding>
{
    NSString *className;
    NSString *superclassName;
    NSMutableDictionary *actions;
    NSMutableDictionary *outlets;
}

- (id)className;
- (id)superclassName;
- (id)typeForToOneOutlet:(id)arg1;
- (id)typeForAction:(id)arg1;
- (id)toOneOutletNames;
- (id)actionNames;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface IBClassDescriptionSource : NSObject <NSCoding, NSCopying>
{
    NSString *majorKey;
    NSString *minorKey;
}

+ (id)frameworkSourceIdentifierForInterfaceFile:(id)arg1 inFramework:(id)arg2;
+ (id)documentRelativeSourceIdentifierFromFile:(id)arg1 relativeTo:(id)arg2;
+ (id)documentLocalSourceIdentifier;
+ (id)systemSourceIdentifierForPluginWithBundleIdentifier:(id)arg1;
+ (id)projectSourceIdentifierForInterfaceFile:(id)arg1 inXcodeProject:(id)arg2;
+ (id)projectSourceIdentifierForProjectRelativeInterfaceFile:(id)arg1;
- (long long)compareForDefinitionContention:(id)arg1;
- (long long)compare:(id)arg1;
- (long long)compareByTypeThenFile:(id)arg1;
- (long long)majorKeyOrder;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isEqualToClassDescriptionSource:(id)arg1;
- (id)absolutePathInTermsOfProject:(id)arg1;
- (id)absolutePathInTermsOfDocumentPath:(id)arg1;
- (id)description;
- (id)displayLabelInDocument:(id)arg1;
- (id)displayImageInDocument:(id)arg1;
- (id)frameworkName;
- (id)pluginBundleIdentifier;
- (id)frameworkRelativeInterfaceFile;
- (id)projectRelativeInterfaceFile;
- (id)documentRelativeInterfaceFile;
- (id)relativeInterfaceFile;
- (BOOL)isSourcedFromFramework;
- (BOOL)isSourcedFromRelativeInterfaceFile;
- (BOOL)isSourcedFromProject;
- (BOOL)isSourcedFromPlugin;
- (BOOL)isSourcedFromDocumentRelativeFile;
- (BOOL)isSourcedFromLocalDocument;
- (id)minorKey;
- (id)majorKey;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithMajorKey:(id)arg1 andMinorKey:(id)arg2;

@end

@interface IBClassRenameRefactoringOperation : IBRefactoringOperation
{
    NSString *oldClassName;
    NSString *newClassName;
}

- (void)refactorObject:(id)arg1 inDocument:(id)arg2 error:(id *)arg3;
- (id)newClassName;
- (id)oldClassName;
- (void)dealloc;
- (id)initWithOldClassName:(id)arg1 andNewClassName:(id)arg2;

@end

@interface IBClassResource : NSObject
{
    IBCompositeClassDescription *classDescription;
    IBLibraryObjectTemplate *objectTemplate;
    NSMutableDictionary *subclasses;
    NSMutableArray *subclassArray;
    IBClassResource *superclass;
    NSString *name;
    DTAsset *asset;
}

+ (id)classResourceWithName:(id)arg1;
@property(retain) IBCompositeClassDescription *classDescription; // @synthesize classDescription;
@property DTAsset *asset; // @synthesize asset;
@property(retain) IBLibraryObjectTemplate *objectTemplate; // @synthesize objectTemplate;
@property(readonly, copy) NSString *name; // @synthesize name;
- (id)fullDescription;
- (void)appendNameToString:(id)arg1 indentLevel:(unsigned long long)arg2;
- (id)description;
- (id)subclassWithName:(id)arg1;
- (void)removeSubclass:(id)arg1;
- (void)addSubclass:(id)arg1;
- (id)descendantWithLineage:(id)arg1;
@property(readonly) NSSet *descendants; // @dynamic descendants;
@property(readonly) NSArray *assetLineage;
@property(readonly) NSArray *lineage; // @dynamic lineage;
@property(readonly) NSArray *subclasses; // @dynamic subclasses;
@property IBClassResource *superclass; // @dynamic superclass;
- (void)dealloc;
- (id)initWithName:(id)arg1;

@end

@interface IBClippedContentIndicator : NSObject
{
    id object;
    struct CGRect frame;
}

+ (id)clippedContentIndicatorWithObject:(id)arg1 andFrame:(struct CGRect)arg2;
@property(readonly) struct CGRect frame; // @synthesize frame;
@property(readonly) id object; // @synthesize object;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isEqualToClippedContentIndicator:(id)arg1;
- (void)dealloc;
- (id)initWithObject:(id)arg1 andFrame:(struct CGRect)arg2;

@end

@interface IBDrawingDecorator : NSObject
{
    IBDecoratedView *realView;
}

- (void)decoratedViewWillMoveToWindow:(id)arg1;
- (void)removeFromView;
- (id)window;
- (struct CGRect)frame;
- (struct CGRect)bounds;
- (BOOL)isFlipped;
- (BOOL)needsToDrawRect:(struct CGRect)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)drawRect:(struct CGRect)arg1 inDecoratedView:(id)arg2;
- (void)decoratedViewWillDraw:(id)arg1;
- (void)displayIfNeeded;
- (void)display;
- (void)setNeedsDisplayInRect:(struct CGRect)arg1;
- (void)setNeedsDisplay:(BOOL)arg1;
- (id)view;
- (void)setView:(id)arg1;
- (void)dealloc;
- (id)initWithDelegatedView:(id)arg1;
- (id)init;

@end

@interface IBClippedContentIndicatorsDecorator : IBDrawingDecorator
{
    IBClippedContentIndicator *pressedClippedContentIndicator;
    long long showingClippedContentIndicatorsBlocks;
    NSArray *orderedClippedContentIndicators;
    NSDictionary *clippedContentIndicators;
    NSSet *objectsWithClippedContent;
    NSMutableSet *changedObjects;
    BOOL warningsChanged;
    IBDocument *document;
}

- (void)trackWithLeftMouseDown:(id)arg1;
- (void)resetClippedContentActionRects;
- (id)toolTipManager:(id)arg1 toolTipForView:(id)arg2 location:(struct CGPoint)arg3 tipSourceRect:(struct CGRect *)arg4;
- (BOOL)isShowingClippedContentIndicatorAtPoint:(struct CGPoint)arg1;
- (id)clippedContentIndicatorAtPoint:(struct CGPoint)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (id)effectiveFrameColorForIndicator:(id)arg1;
- (id)effectiveFillColorForIndicator:(id)arg1;
- (struct CGRect)drawingBoundingRectForClippingIndicatorRect:(struct CGRect)arg1;
- (struct CGRect)clippingRectForObject:(id)arg1;
- (id)viewToClipToForObject:(id)arg1;
- (void)windowDidResize:(id)arg1;
- (void)windowDidChangeMainStatus:(id)arg1;
- (void)decoratedViewWillMoveToWindow:(id)arg1;
- (void)decoratedViewWillDraw:(id)arg1;
- (void)validateClippedContentIndicators;
- (void)didAddObject:(id)arg1;
- (void)didRemoveObject:(id)arg1;
- (void)warningsChanged:(id)arg1;
- (void)showingClippingIndicatorsChanged:(id)arg1;
- (void)noteObjectChanged:(id)arg1;
- (void)invalidateClippedContentIndicators;
- (id)calculateClippedContentIndicatorsForObjects:(id)arg1;
- (id)calculateObjectsWithClippedContent;
- (void)setClippedContentIndicators:(id)arg1;
- (void)enableShowingClippedContentIndicators;
- (void)disableShowingClippedContentIndicators;
- (void)setPressedClippedContentIndicator:(id)arg1;
- (id)pressedClippedContentIndicator;
- (void)setObjectsWithClippedContent:(id)arg1;
- (id)windowController;
- (id)document;
- (void)setDocument:(id)arg1;
- (void)resetTrackingStructures;
- (void)dealloc;
- (id)init;

@end

@interface IBCollapsableView : IBAutoLayoutView <IBConstrainedContainer>
{
    NSView *contentView;
    NSView *titleView;
    NSString *defaultsName;
    BOOL expanded;
    BOOL tracksContentViewSize;
}

- (void)makeRectVisible:(struct CGRect)arg1 ofView:(id)arg2;
- (void)setTracksContentViewSize:(BOOL)arg1;
- (BOOL)tracksContentViewSize;
- (void)contentViewFrameChanged:(id)arg1;
- (void)layout;
- (BOOL)isFlipped;
- (struct CGSize)contentSize;
- (void)setContentSize:(struct CGSize)arg1;
- (BOOL)isExpanded;
- (void)setExpanded:(BOOL)arg1;
- (id)defaultsName;
- (void)setDefaultsName:(id)arg1;
- (id)titleView;
- (void)setTitleView:(id)arg1;
- (id)contentView;
- (void)setContentView:(id)arg1;
- (void)dealloc;
- (id)initWithContentView:(id)arg1 andTitleView:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface IBColor : NSColor
{
}

+ (id)darkSlateWarningColor;
+ (id)slateWarningColor;
+ (id)lightSlateHUDBackgroundColor;
+ (id)slateHUDBackgroundColor;
+ (id)darkSlateHUDBackgroundColor;
+ (id)darkerSlateHUDBackgroundColor;
+ (id)darkestSlateHUDBackgroundColor;
+ (id)darkestSlateColor;
+ (id)darkerSlateColor;
+ (id)darkSlateColor;
+ (id)slateColor;
+ (id)lightSlateColor;
+ (id)lighterSlateColor;
+ (id)lightestSlateColor;
+ (id)spotlightTextColor;
+ (id)darkPurpleSpotlightColor;
+ (id)lightPurpleSpotlightColor;
+ (id)spotlightBorderColor;
+ (id)darkSpotlightColor;
+ (id)lightSpotlightColor;
+ (id)toolbarItemContainerFillColor;
+ (id)customViewLightBorderColor;
+ (id)customViewDarkBorderColor;
+ (id)customViewDarkTexturedBorderColor;
+ (id)containerCustomViewTextColor;
+ (id)childlessCustomViewTextColor;
+ (id)childlessCustomViewBackgroundColor;
+ (id)containerCustomViewBackgroundColor;
+ (id)paletteChooserHighlightColor;
+ (id)paletteChooserPressedColor;
+ (id)paletteChooserOutlineColor;
+ (id)slateLabelHighlightColor;
+ (id)slateElementViewTextColor;
+ (id)slateElementViewSelectedColor;
+ (id)slateElementViewPressedColor;
+ (id)slateElementViewHighlightColor;
+ (id)slateElementViewBackgroundColor;
+ (id)slatePaletteButtonPressedColor;
+ (id)menuLightDropTargetIndicatorColor;
+ (id)menuDarkDropTargetIndicatorColor;
+ (id)menuDropTargetIndicatorColor;
+ (id)connectionSliceTitleFillColor;
+ (id)slateScrollerButtonPressedFillColor;
+ (id)slateScrollerButtonDisabledFillColor;
+ (id)slateScrollerButtonDisabledIconColor;
+ (id)slateScrollerButtonPressedIconColor;
+ (id)slateScrollerButtonIconColor;
+ (id)slateScrollerButtonFillColor;
+ (id)slateScrollerTrackColor;
+ (id)slateScrollerTrackedKnobColor;
+ (id)slateScrollerKnobColor;
+ (id)slateScrollerBackgroundColor;
+ (id)inspectorModeSeparatorColor;
+ (id)inspectorModePressedToneColor;
+ (id)inspectorModeSelectionToneColor;
+ (id)inspectorSliceToneColor;
+ (id)inspectorSliceBorderColor;
+ (id)inspectorSliceDarkGradientColor;
+ (id)inspectorSliceLightGradientColor;
+ (id)inspectorModeDarkGradientColor;
+ (id)inspectorModeLightGradientColor;
+ (id)inspectorGearBackgroundColor;
+ (id)paletteTextColor;
+ (id)paletteTitleColor;
+ (id)paletteTitleFillColor;
+ (id)paletteBackgroundColor;
+ (id)notesBackgroundColor;
+ (id)inactiveLayoutGuideLabelFrameColor;
+ (id)inactiveLayoutGuideLabelFillColor;
+ (id)layoutGuideLabelFrameColor;
+ (id)layoutGuideLabelFillColor;
+ (id)liveLayoutGuideColor;
+ (id)measurementLineColor;
+ (id)userGuideColor;
+ (id)baselineColor;
+ (id)layoutRectColor;
+ (id)boundsRectColor;
+ (id)targetIdentifierColor;
+ (id)connectionLineShadowColor;
+ (id)connectionLineFillColor;
+ (id)connectionLineStrokeColor;
+ (id)missingImageColor;
+ (id)customViewColor;
+ (id)dragInsertionIndicatorFillColor;
+ (id)dragInsertionIndicatorColor;
+ (id)bandSelectionBorderColor;
+ (id)viewSelectionColor;
+ (id)bandSelectionBodyColor;
+ (id)preferredColorForName:(id)arg1;
+ (void)setPreferredColor:(id)arg1 forName:(id)arg2;

@end

@interface IBColorBinder : IBBinder
{
}

- (void)putWidgetInMixedState;
- (void)reflectValue:(id)arg1;
- (id)widgetValue;
- (id)defaultValue;

@end

@interface IBColorPickerBinder : IBBinder
{
}

- (void)putWidgetInMixedState;
- (void)reflectValue:(id)arg1;
- (id)widgetValue;
- (id)defaultValue;

@end

@interface IBColorPickerChooserContentView : NSView
{
    NSArray *swatchViews;
    NSColor *clickedColor;
    id target;
    SEL action;
}

- (BOOL)isFlipped;
- (id)clickedColor;
- (void)setAction:(SEL)arg1;
- (void)setTarget:(id)arg1;
- (void)userChooseSwatch:(id)arg1;
- (void)dealloc;
- (id)initWithColors:(id)arg1 andFrame:(struct CGRect)arg2;

@end

@interface IBColorPickerChooserView : NSView
{
    NSMutableArray *colorsArray;
    IBColorPickerChooserContentView *contentView;
    NSColor *clickedColor;
    id target;
    SEL action;
}

+ (id)defaultLabel;
- (void)setAction:(SEL)arg1;
- (void)setTarget:(id)arg1;
- (void)userChooseSwatch:(id)arg1;
- (id)clickedColor;
- (BOOL)isFlipped;
- (void)dealloc;
- (id)initWithTitle:(id)arg1 andColors:(id)arg2;
- (id)attributedTitleForTitle:(id)arg1;
- (id)titleAttributes;
- (id)titleFont;

@end

@interface IBColorPickerChooserViewColorSwatch : NSView
{
    NSColor *color;
    BOOL highlighted;
    id target;
    SEL action;
}

@property(retain) NSColor *color; // @synthesize color;
- (id)description;
- (void)drawRect:(struct CGRect)arg1;
@property BOOL highlighted;
- (void)mouseUp:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)setAction:(SEL)arg1;
- (void)setTarget:(id)arg1;
- (void)dealloc;
- (id)initWithColor:(id)arg1 andFrame:(struct CGRect)arg2;
- (void)setupTrackingArea;
- (BOOL)isFlipped;

@end

@interface IBColorPickerPopUpButton : NSView <NSCoding, NSMenuDelegate>
{
    id target;
    SEL action;
    NSMenu *colorsMenu;
    struct CGRect popUpButtonArrowsRect;
    struct CGRect colorWellViewRect;
    struct CGRect colorLabelRect;
    struct CGRect swatchRect;
    struct CGRect colorLabelTitleRect;
    unsigned long long controlSize;
    int defaultColorMode;
    BOOL contentViewHighlighted;
    BOOL contentViewSelected;
    BOOL drawFocusRing;
    NSColor *color;
    NSDictionary *imageStateDictionary;
    IBMutableOrderedDictionary *suggestedColors;
    NSColor *defaultColor;
    id mouseEventMonitor;
}

+ (id)imageStateDictionaryForControlSize:(unsigned long long)arg1;
@property(retain) IBMutableOrderedDictionary *suggestedColors; // @synthesize suggestedColors;
@property SEL action; // @synthesize action;
@property(retain) id target; // @synthesize target;
- (void)displayColorPanel:(id)arg1;
- (void)takeDrawnColorFrom:(id)arg1;
- (void)takeDrawnColorFromPopUpMenu:(id)arg1;
- (void)beginColorDragForEvent:(id)arg1;
- (id)imageForDraggedColor:(id)arg1;
- (id)colorForDragging;
- (BOOL)performDragOperation:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (void)colorPanelColorChanged:(id)arg1;
- (void)colorPanelWillClose:(id)arg1;
- (void)windowBecameKeyOrMain:(id)arg1;
- (void)windowResignKeyOrMain:(id)arg1;
- (void)colorPickerDidBecomeActive:(id)arg1;
- (void)colorChosenFromColorChooser:(id)arg1;
- (void)moveUp:(id)arg1;
- (void)moveDown:(id)arg1;
- (void)performClick:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)displayColorPanel;
- (BOOL)canBecomeKeyView;
- (BOOL)becomeFirstResponder;
- (BOOL)resignFirstResponder;
- (BOOL)acceptsFirstResponder;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)showColorsMenu;
- (void)drawRect:(struct CGRect)arg1;
- (void)drawColorLabel;
- (void)drawColorWell;
- (void)drawPopUpButtonArrows;
- (void)drawDebuggingRects;
- (void)drawFocusRing;
- (id)effectiveAttributedTitle;
- (id)attributedTitleForTitle:(id)arg1;
- (id)titleAttributes;
- (id)effectiveImageForControlPart:(int)arg1;
- (id)effectivePopUpButtonArrowsRightCapImage;
- (id)effectiveSwatchFillColor;
- (void)putControlInMixedState;
- (id)multipleValueColor;
- (void)populateColorsMenu;
- (id)menuItemImageForColor:(id)arg1 withSize:(struct CGSize)arg2;
- (double)horizontalMenuOffset;
- (double)verticalMenuOffset;
- (void)sizeRectsForDrawing;
- (double)verticalTitleOffset;
- (double)baseline;
- (double)heightThatFits;
- (double)widthForPopUpButton;
- (struct IBInsetTag)shadowInset;
- (BOOL)isShowingTitle;
- (BOOL)isShowingDefaultColor;
- (BOOL)isShowingMixedColor;
- (BOOL)isShowingNamedColor;
- (BOOL)supportsDefaultColor;
- (struct CGRect)insetRectForSwatchRect:(struct CGRect)arg1;
- (struct CGRect)swatchRectForColorWellRect:(struct CGRect)arg1;
- (double)noColorStrokeWidth;
- (BOOL)isActive;
- (id)titleFont;
- (void)setSuggestedColorsUsingColorList:(id)arg1;
@property(retain) NSColor *color; // @dynamic color;
- (BOOL)onActiveWindow;
@property(retain) NSColor *defaultColor; // @synthesize defaultColor;
@property int defaultColorMode; // @dynamic defaultColorMode;
@property unsigned long long controlSize; // @synthesize controlSize;
- (void)setContentViewHighlighted:(BOOL)arg1;
- (void)setContentViewSelected:(BOOL)arg1;
- (id)imageStateDictionary;
- (void)invalidateImageStateDictionary;
- (id)nameForColor:(id)arg1;
- (BOOL)containsColor:(id)arg1;
- (void)removeColorWithName:(id)arg1;
- (id)allColorNames;
- (id)colorWithName:(id)arg1;
- (void)addColor:(id)arg1 withName:(id)arg2;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1 colorList:(id)arg2 defaultColor:(id)arg3 defaultColorMode:(int)arg4;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)commonInit;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IBCompositeClassDescription : NSObject <NSCopying, NSMutableCopying>
{
    NSDictionary *descriptions;
    NSString *className;
}

+ (id)compositeDescriptionOfClassNamed:(id)arg1;
- (long long)numberOfPartialClassDescriptions;
- (id)partialDescriptionDescribingToOneOutlet:(id)arg1;
- (id)partialDescriptionDescribingAction:(id)arg1;
- (BOOL)describesAction:(id)arg1;
- (BOOL)describesToOneOutlet:(id)arg1;
- (id)typeForAction:(id)arg1;
- (id)typeForToOneOutlet:(id)arg1;
- (id)toOneOutletNames;
- (id)actionNames;
- (id)relationshipInfosOfRelationshipType:(long long)arg1;
- (id)namedRelationsOfRelationshipType:(long long)arg1;
- (BOOL)describesNamedRelation:(id)arg1 ofRelationshipType:(long long)arg2;
- (id)typeForNamedRelation:(id)arg1 ofRelationshipType:(long long)arg2;
- (long long)minimumUserVisibilityLevel;
- (id)description;
- (id)superclassName;
- (id)className;
- (id)partialClassDescriptionsEnumeratorOrderedForDefinitionContention;
- (id)partialClassDescriptions;
- (id)documentLocalDescription;
- (id)partialClassDescriptionWithSource:(id)arg1;
- (id)partialDescriptionDescribingNamedRelation:(id)arg1 ofRelationshipType:(long long)arg2;
- (id)compositedPartialDescription;
- (void)dealloc;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithClassName:(id)arg1;
- (id)initWithClassName:(id)arg1 andDescriptions:(id)arg2;

@end

@interface IBConnectionHUD : NSObject
{
    IBDocument *document;
}

+ (id)windowForTracking;
+ (id)mixedConnnectionStateImage;
+ (id)onConnnectionStateImage;
- (void)beginConnecting:(id)arg1;
- (void)showHUDForObjects:(id)arg1 initialSelection:(id)arg2 atLocation:(struct CGPoint)arg3;
- (id)HUDForObjects:(id)arg1 initialSelection:(id)arg2 atLocation:(struct CGPoint)arg3;
- (id)initialEndPointForPossibleEndPoints:(id)arg1 givenSelection:(id)arg2;
- (id)HUDWithEndPoints:(id)arg1 andInitialEndPoint:(id)arg2;
- (id)contentViewsForEndPoints:(id)arg1 withInterfaceStyle:(id)arg2;
- (id)emptyContentView;
- (id)contentViewForEndPoint:(id)arg1 withInterfaceStyle:(id)arg2;
- (id)collapseViewForConnections:(id)arg1 equivalents:(id)arg2 prototypes:(id)arg3 andEndPoint:(id)arg4 withDisplayName:(id)arg5 andInterfaceStyle:(id)arg6;
- (id)viewForConnections:(id)arg1 equivalents:(id)arg2 andPrototypes:(id)arg3 withEndPoint:(id)arg4 andInterfaceStyle:(id)arg5;
- (id)connectionViewForUnprototypedConnections:(id)arg1 withFakePrototype:(id)arg2 andInterfaceStyle:(id)arg3;
- (id)connectionViewForPrototype:(id)arg1 andInterfaceStyle:(id)arg2 populatingClaimedPredecessors:(id)arg3;
- (id)document;
- (id)predecessorsForPrototype:(id)arg1 excludingPredecessors:(id)arg2;
- (id)connectionsWithEndPointOrEquivalentEndPoint:(id)arg1;
- (id)connectionsWithEndPointOrEquivalentEndPoint:(id)arg1 equivalentConnections:(id)arg2;
- (id)initWithDocument:(id)arg1;
- (void)beginOldSchoolConnecting:(id)arg1;
- (void)beginOldSchoolConnecting:(id)arg1 fromObject:(id)arg2 inWindow:(id)arg3;

@end

@interface IBConnectionRecord : NSObject <NSCoding>
{
    IBConnection *connection;
    long long connectionID;
}

+ (id)connectionRecordWithConnection:(id)arg1 andConnectionID:(long long)arg2;
- (long long)connectionID;
- (id)connection;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithConnection:(id)arg1 andConnectionID:(long long)arg2;

@end

@interface IBConnectionsInspector : IBInspector
{
    IBMutableOrderedDictionary *interfaceHistory;
    IBStackView *typeStack;
    id lastInspectedObject;
    NSScrollView *scrollView;
}

+ (BOOL)supportsMultipleObjectInspection;
- (void)refresh;
- (void)rebuildTypeStack;
- (id)captureInterfaceState;
- (void)applyInterfaceState:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface IBConstrainedView : NSView <IBConstrainedContainer>
{
    struct CGSize minSize;
    struct CGSize maxSize;
}

- (void)setMaxSize:(struct CGSize)arg1;
- (struct CGSize)maxSize;
- (void)setMinSize:(struct CGSize)arg1;
- (struct CGSize)minSize;
- (struct CGSize)contentSize;
- (void)setContentSize:(struct CGSize)arg1;

@end

@interface IBContentViewLiveResizingStrategy : NSObject
{
    NSWindow *window;
    NSView *editedView;
    NSDictionary *storedAutoresizingState;
    IBLayoutManager *layoutManager;
    IBDocument *document;
    BOOL inLiveResize;
    struct CGSize liveResizeLockingReference;
    long long axisLock;
    struct __CFRunLoopObserver *runloopObserver;
    BOOL optionWasDown;
    struct CGSize minFrameSize;
    struct CGSize maxFrameSize;
}

- (void)observeRunloopActivity:(unsigned long long)arg1;
- (struct CGSize)preferredSizeForLiveResizeSize:(struct CGSize)arg1;
- (void)windowFinishedLiveResizing;
- (void)windowStartedLiveResizing;
- (void)windowDidResize:(id)arg1;
- (void)updateMeasurementsWithEvent:(id)arg1;
- (BOOL)isAutoResizingSubviews;
- (BOOL)isInLiveResize;
- (void)setInLiveResize:(BOOL)arg1;
- (void)setMaxFrameSize:(struct CGSize)arg1;
- (void)setMinFrameSize:(struct CGSize)arg1;
- (struct CGSize)maxFrameSize;
- (struct CGSize)minFrameSize;
- (void)setAutoresizingState:(id)arg1;
- (id)storedAutoresizingState;
- (id)editedView;
- (id)window;
- (id)editorWindowController;
- (id)layoutManager;
- (id)document;
- (void)dealloc;
- (id)initWithWindow:(id)arg1 editedView:(id)arg2 andLayoutManager:(id)arg3 inDocument:(id)arg4;

@end

@interface IBViewRenderer : NSObject
{
    NSView *view;
    NSAffineTransform *transformToWindowSpace;
}

+ (id)rendererWithView:(id)arg1;
+ (id)rendererWithView:(id)arg1 andTransformToWindowSpace:(id)arg2;
@property(readonly, nonatomic) NSView *view; // @synthesize view;
- (void)renderRectIgnoringOpacity:(struct CGRect)arg1 intoCoreGraphicsContext:(id)arg2;
- (id)renderViewImage;
- (struct CGSize)suggestedRenderSize;
- (id)renderContentWithSize:(struct CGSize)arg1;
- (void)dealloc;
- (id)initWithView:(id)arg1 andTransformToWindowSpace:(id)arg2;

@end

@interface IBCoreGraphicsRenderer : IBViewRenderer
{
}

- (void)renderRectIgnoringOpacity:(struct CGRect)arg1 intoCoreGraphicsContext:(id)arg2;
- (id)renderContentWithSize:(struct CGSize)arg1;
- (void)renderViewRect:(struct CGRect)arg1 intoCoreGraphicsContext:(id)arg2;

@end

@interface IBCrazyBoundsView : NSCustomView
{
}

- (BOOL)isFlipped;
- (id)ibDesignableContentView;
- (void)setFrameSize:(struct CGSize)arg1;

@end

@interface IBCustomClassInspector : IBBoundInspector
{
    IBButtonComboBox *customClassComboBox;
    IBAutoCompletingComboBoxDataSource *customClassComboBoxDataSource;
}

- (void)selectCustomClassInClassesTab:(id)arg1;
- (id)label;
- (void)changeCustomClass:(id)arg1;
- (BOOL)isCompleteType:(id)arg1;
- (void)refresh;
- (void)refreshCustomClassComboBox;
- (BOOL)anyCustomClasses;
- (id)commonClassName;
- (id)mostDerivedCommonClassName;
- (id)mostDerivedClassName;
- (void)awakeFromNib;
- (id)customClassButtonContent;
- (void)dealloc;

@end

@interface IBDateBinder : IBBinder
{
}

- (void)reflectValue:(id)arg1;
- (id)widgetValue;
- (id)defaultValue;

@end

@interface IBDecodedPasteboardContext : NSObject
{
    NSArray *topLevelObjects;
    IBDocument *document;
}

+ (id)contextWithDocument:(id)arg1 andTopLevelObjects:(id)arg2;
- (id)orderedIdentifiedObjects;
- (id)document;
- (id)topLevelObjects;
- (void)dealloc;
- (id)initWithDocument:(id)arg1 andTopLevelObjects:(id)arg2;

@end

@interface IBDecoratedView : NSView
{
    NSMutableArray *delegates;
    struct CGLayer *cachedLayer;
    NSLock *cachedLayerLock;
    BOOL isUsingThreadedDrawing;
    BOOL cancelationPending;
}

- (void)viewWillMoveToWindow:(id)arg1;
- (id)description;
- (id)drawingDecorators;
- (void)order:(long long)arg1 drawingDecorator:(id)arg2 relativeTo:(id)arg3;
- (void)removeDrawingDecorator:(id)arg1;
- (void)addDrawingDecorator:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)viewWillDraw;
- (void)didDrawOnSecondThread;
- (void)stopThreadedDrawing;
- (void)startThreadedDrawing;
- (void)delegateDrawingIntoRect:(struct CGRect)arg1;
- (BOOL)isOpaque;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface IBDelegatedDrawingDecorator : IBDrawingDecorator
{
}

- (void)drawRect:(struct CGRect)arg1;
- (void)decoratedViewWillDraw:(id)arg1;

@end

@interface IBDetailedAlert : NSObject
{
    NSTextField *informativeTextTextField;
    NSTextField *messageTextTextField;
    NSButton *showDetailsButton;
    NSButton *alternateButton;
    NSButton *defaultButton;
    NSImageView *imageWell;
    NSPanel *panel;
    NSScrollView *detailsView;
    NSTextView *detailsTextView;
    IBCFMutableDictionary *originalMetrics;
    NSWindow *sheetParent;
    id sheetDelegate;
    SEL sheetDidEndSelector;
    BOOL runningAsSheet;
}

+ (id)detailedAlertWithMessageText:(id)arg1 defaultButton:(id)arg2 alternateButton:(id)arg3 informativeText:(id)arg4 detailedMessage:(id)arg5;
- (long long)runModal;
- (void)beginSheetModalForWindow:(id)arg1 modalDelegate:(id)arg2 didEndSelector:(SEL)arg3 contextInfo:(void *)arg4;
- (void)didEndAlert:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)defaultButtonAction:(id)arg1;
- (void)alternateButtonAction:(id)arg1;
- (void)finishWithCode:(long long)arg1;
- (void)toggleDetails:(id)arg1;
- (void)layout;
- (void)layoutByAnimating:(BOOL)arg1;
- (struct CGRect)originalFrame:(id)arg1;
- (struct CGRect)originalBounds:(id)arg1;
- (void)captureMetrics;
- (id)panel;
- (void)setDetailedMessage:(id)arg1;
- (void)setAlternateButtonTitle:(id)arg1;
- (void)setDefaultButtonTitle:(id)arg1;
- (void)setInformativeText:(id)arg1;
- (void)setMessageText:(id)arg1;
- (void)setHasDefaultButton:(BOOL)arg1;
- (BOOL)showingDetails;
- (void)setShowingDetails:(BOOL)arg1;
- (id)contentView;
- (void)dealloc;
- (id)initWithMessageText:(id)arg1 defaultButton:(id)arg2 alternateButton:(id)arg3 informativeText:(id)arg4 detailedMessage:(id)arg5;

@end

@interface IBSlateElementView : IBAutoLayoutView
{
    NSMutableArray *elements;
    NSMutableDictionary *trackedElement;
    struct CGPoint focalPoint;
    id target;
    SEL action;
    BOOL visible;
}

- (SEL)action:(SEL)arg1;
- (void)setAction:(SEL)arg1;
- (id)target;
- (void)setTarget:(id)arg1;
- (BOOL)acceptsFirstResponder;
- (void)globalMouseMoved:(id)arg1;
- (void)mouseMoved:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (id)selectedColor;
- (id)pressedColor;
- (id)highlightedColor;
- (id)backgroundColor;
- (void)layout;
- (struct CGRect)calculateLayout;
- (id)elementAtPoint:(struct CGPoint)arg1;
- (long long)indexOfElementAtPoint:(struct CGPoint)arg1;
- (id)bezierPathForElementAtIndex:(long long)arg1;
- (struct CGRect)labelRect;
- (struct CGRect)frameForElementAtIndex:(long long)arg1;
- (double)borderWidth;
- (double)capWidth;
- (struct CGSize)labelSize;
- (struct CGSize)elementSize;
- (struct CGSize)imageSize;
- (void)setFocalPoint:(struct CGPoint)arg1;
- (struct CGPoint)focalPoint;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)windowResignedMain:(id)arg1;
- (void)windowBecameMain:(id)arg1;
- (id)indexesOfSelectedElements;
- (void)clearSelection;
- (id)attributedLabel;
- (id)label;
- (id)font;
- (id)imageForElementAtIndex:(long long)arg1;
- (id)labelForElementAtIndex:(long long)arg1;
- (void)setLabel:(id)arg1 forElementAtIndex:(long long)arg2;
- (void)setImage:(id)arg1 forElementAtIndex:(long long)arg2;
- (long long)numberOfElements;
- (void)setNumberOfElements:(long long)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface IBDirectableElementView : IBSlateElementView
{
    BOOL draws;
    id delegate;
    NSView *targetView;
}

- (BOOL)acceptsFirstMouse:(id)arg1;
- (void)setFocalPoint:(struct CGPoint)arg1;
- (void)setTargetView:(id)arg1;
- (id)targetView;
- (void)setNeedsDisplayInRect:(struct CGRect)arg1;
- (void)setNeedsDisplay:(BOOL)arg1;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)setDraws:(BOOL)arg1;
- (BOOL)draws;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface IBDocument : NSDocument
{
    struct IBDocumentStorage *storage;
}

+ (id)defaultTargetRuntime;
+ (void)registerConnectorClass:(Class)arg1;
+ (id)documentForObject:(id)arg1;
+ (id)documentForConnection:(id)arg1;
+ (void)setPreserveBundleContents:(BOOL)arg1;
+ (BOOL)preserveBundleContents;
+ (id)strippedFileWrapperForContentsOfURL:(id)arg1 error:(id *)arg2;
+ (id)displayNameForType:(id)arg1;
+ (id)shortDisplayNameForType:(id)arg1;
+ (void)setShouldUpdateSourceFileRelativePaths:(BOOL)arg1;
+ (BOOL)shouldUpdateSourceFileRelativePaths;
+ (void)setLogUndoActions:(BOOL)arg1;
+ (BOOL)logUndoActions;
+ (id)additionalInstantiationInformationForNextDocument;
+ (void)setAdditionalInstantiationInformationForNextDocument:(id)arg1;
+ (id)currentHIToolboxVersion;
+ (id)currentAppKitVersion;
+ (id)currentIBFrameworkVersion;
+ (id)currentSystemVersion;
+ (id)objectPasteboardType;
+ (id)plugin;
+ (id)typeForContentsOfURL:(id)arg1 error:(id *)arg2;
+ (BOOL)isNativeType:(id)arg1;
+ (id)readableTypes;
+ (id)writableTypes;
+ (BOOL)restoresEditors;
+ (void)setRestoresEditors:(BOOL)arg1;
+ (struct __CFArray *)documents;
+ (void)initialize;
+ (long long)allSystemsTarget;
- (id)projectSynchronizationStatus;
- (void)setProjectSynchronizationStatus:(id)arg1;
- (id)xcodeProject;
- (void)performRefactoringOperations:(id)arg1 error:(id *)arg2;
- (void)decompose;
- (id)requiredRootsForDecomposition;
- (id)duplicatableRootsForDecomposition;
- (void)refactorWithClassRenameRefactoringOperation:(id)arg1 inDocument:(id)arg2 error:(id *)arg3;
- (long long)nextTransientIDForChildOfObject:(id)arg1 startingPoint:(long long)arg2;
- (long long)initialIDForVerifiedTransientObjects;
- (long long)effectivePropertyAccessControlForObject:(id)arg1;
- (long long)propertyAccessControlForObject:(id)arg1;
- (void)setPropertyAccessControl:(long long)arg1 forObject:(id)arg2;
- (void)clearEffectivePropertyAccessControlCache;
- (void)validateLocalizableProperty:(id)arg1 onObject:(id)arg2 forLocalization:(id)arg3;
- (void)invalidateLocalizableProperty:(id)arg1 onObject:(id)arg2 forLocalization:(id)arg3;
- (void)invalidateLocalizableProperty:(id)arg1 onObject:(id)arg2;
- (id)localizedProperty:(id)arg1 forObject:(id)arg2 inLocalization:(id)arg3;
- (void)takeLocalizedValues:(SEL)arg1 fromLocalization:(id)arg2 forObjects:(id)arg3;
- (void)removeLocalizationNamed:(id)arg1;
- (void)addLocalizationNamed:(id)arg1;
- (id)invalidLocalizablePropertiesForLocalization:(id)arg1;
- (long long)numberOfInvalidLocalizablePropertiesForLocalization:(id)arg1;
- (void)setLocalizationMode:(long long)arg1;
- (long long)localizationMode;
- (void)setActiveLocalization:(id)arg1;
- (id)activeLocalization;
- (id)localizations;
- (id)fileURLsForExternalLocalizations;
- (long long)identifyObjects:(id)arg1 untilDate:(id)arg2;
- (void)noteObject:(id)arg1 didChangeProperty:(id)arg2 fromValue:(id)arg3;
- (id)openEditorForObject:(id)arg1 makeKeyAndOrderFront:(BOOL)arg2;
- (id)openEditorForObject:(id)arg1 closingSubEditors:(BOOL)arg2 makeKeyAndOrderFront:(BOOL)arg3;
- (id)selectObjectInEditor:(id)arg1;
- (id)selectObjectInEditor:(id)arg1 makeKeyAndOrderFront:(BOOL)arg2;
- (BOOL)shouldAvoidEditingObject:(id)arg1;
- (void)selectObjectsInNibWindowByPossiblySwitchingModes:(id)arg1 makeMain:(BOOL)arg2 makeKey:(BOOL)arg3 orderFront:(BOOL)arg4;
- (id)openEditorForObject:(id)arg1;
- (id)windowControllerForIdentifyingCurrentlyVisibleObject:(id)arg1;
- (id)editedObjectIDs;
- (void)setLastSelectedClassNameForClassesTab:(id)arg1;
- (id)lastSelectedClassNameForClassesTab;
- (id)classDetailItemsForClassName:(id)arg1;
- (id)liberateObject:(id)arg1 fromFrameworksOtherThan:(id)arg2;
- (id)replaceObject:(id)arg1 duringArchivingWithParentClassObjectNotRequiringFrameworksOtherThan:(id)arg2;
- (id)objectClassesForIBEncoding;
- (BOOL)shouldConnectionDisplayUpdateForObject:(id)arg1 inReactionChangeInClassesNamed:(id)arg2;
- (id)classNamesForForcingPersistenceOfClassDescriptions;
- (id)primaryInterfaceFilesForObjects:(id)arg1;
- (id)primaryInterfaceFileForClassNamed:(id)arg1;
- (BOOL)isObject:(id)arg1 aDescendantOfObject:(id)arg2;
- (id)classes;
- (BOOL)isClassNameCompletelyDescribed:(id)arg1;
- (id)descendantsOfClass:(id)arg1;
- (id)lineageOfClass:(id)arg1;
- (id)superclassOfClass:(id)arg1;
- (id)subclassesOfClass:(id)arg1;
- (BOOL)is:(id)arg1 aKindOf:(id)arg2;
- (void)renameClassNamed:(id)arg1 to:(id)arg2;
- (Class)mostDerivedImplementedClassForObject:(id)arg1;
- (id)classNameForObject:(id)arg1;
- (id)baseClassNameForObject:(id)arg1;
- (void)setCustomClassName:(id)arg1 forObject:(id)arg2;
- (id)customClassNameForObject:(id)arg1;
- (id)commonCustomClassNameOfObjects:(id)arg1;
- (void)didManuallyIntegrateHeaderFiles:(id)arg1 withChanges:(id)arg2;
- (void)classDescriber:(id)arg1 didModifyClassesNamed:(id)arg2;
- (void)classDescriber:(id)arg1 willModifyClassesNamed:(id)arg2;
- (id)sourceCodeController;
- (BOOL)acceptsPasteboardContentsForTargetRuntime:(id)arg1;
- (void)setTargetRuntime:(id)arg1;
- (void)didChangeTargetRuntimeWithContext:(id)arg1;
- (void)willChangeTargetRuntimeWithContext:(id)arg1;
- (void)changeDocumentTargetRuntimeTo:(id)arg1 withContext:(id)arg2 andContextForUndo:(id)arg3;
- (void)changeDocumentTargetRuntimeTo:(id)arg1;
- (void)rebuildEditorForTopLevelObject:(id)arg1;
- (id)targetRuntime;
- (BOOL)integrateManuallyAddedClassDescriptionsFromFiles:(id)arg1 changes:(id *)arg2 error:(id *)arg3;
- (BOOL)integrateManuallyAddedClassDescriptionsFromFiles:(id)arg1 error:(id *)arg2;
- (BOOL)refreshAllDocumentRelativeDescriptions:(id *)arg1;
- (id)prototypeConnectionsFromObject:(id)arg1 toObject:(id)arg2;
- (id)prototypeConnectionsForObject:(id)arg1;
- (id)connectionForConnectionID:(long long)arg1;
- (long long)connectionIDForConnection:(id)arg1;
- (id)connections;
- (void)removeConnections:(id)arg1 context:(id)arg2;
- (void)removeConnections:(id)arg1;
- (void)removeConnection:(id)arg1;
- (void)replaceConnection:(id)arg1 withConnection:(id)arg2;
- (void)addConnection:(id)arg1;
- (void)addConnection:(id)arg1 withConnectionID:(long long)arg2;
- (BOOL)containsConnection:(id)arg1;
- (id)connectionsToObject:(id)arg1;
- (id)connectionsFromObject:(id)arg1;
- (id)connectionsForObject:(id)arg1;
- (void)connectBinding:(id)arg1 ofSourceObject:(id)arg2 toDestinationObject:(id)arg3 keyPath:(id)arg4 options:(id)arg5;
- (void)connectAction:(id)arg1 ofSourceObject:(id)arg2 toDestinationObject:(id)arg3;
- (void)connectOutlet:(id)arg1 ofSourceObject:(id)arg2 toDestinationObject:(id)arg3;
- (id)attributePlaceholderForObject:(id)arg1 withName:(id)arg2;
- (void)removeAttributePlaceholder:(id)arg1;
- (void)addAttributePlaceholder:(id)arg1;
- (id)propertyForKey:(id)arg1 onObject:(id)arg2;
- (void)setProperty:(id)arg1 forKey:(id)arg2 onObject:(id)arg3;
- (id)metadataForKey:(id)arg1 ofObject:(id)arg2;
- (void)setMetadata:(id)arg1 forKey:(id)arg2 ofObject:(id)arg3;
- (id)labelForObject:(id)arg1;
- (id)nameForObject:(id)arg1;
- (void)setName:(id)arg1 forObject:(id)arg2;
- (id)frameworkPathForObject:(id)arg1;
- (id)pluginDependencyForObject:(id)arg1;
- (id)mostSeniorObjectsOfObjects:(id)arg1;
- (id)topLevelObjectsForObjects:(id)arg1;
- (id)topLevelObjectForObject:(id)arg1;
- (id)descendantsOfObjects:(id)arg1;
- (id)descendantsOfObject:(id)arg1;
- (void)addObjectAndDefaultChildren:(id)arg1 toParent:(id)arg2;
- (void)addObject:(id)arg1 toParent:(id)arg2;
- (void)addObject:(id)arg1;
- (void)addObject:(id)arg1 toParent:(id)arg2 withName:(id)arg3 andOID:(long long)arg4;
- (void)synchronizeChildrenOfObject:(id)arg1 withToOneKeyPaths:(id)arg2 andToManyKeyPaths:(id)arg3;
- (void)moveObject:(id)arg1 toParent:(id)arg2 atIndex:(long long)arg3;
- (void)moveObject:(id)arg1 toParent:(id)arg2;
- (id)rootObject;
- (void)removeObject:(id)arg1;
- (void)deleteObjects:(id)arg1 fromObjectModel:(BOOL)arg2 andDocumentMode:(BOOL)arg3;
- (BOOL)canRemoveObjectsFromObjectModel:(id)arg1;
- (void)removeObjects:(id)arg1;
- (void)bounceDeselectOffUndoStack:(id)arg1;
- (void)tellWindowControllersToUnselectBeforeRemove:(id)arg1;
- (id)objects;
- (id)topLevelObjects;
- (id)lineageOfObject:(id)arg1;
- (BOOL)areObjectsSiblings:(id)arg1;
- (id)ancestorsOfObject:(id)arg1;
- (long long)objectIDForObject:(id)arg1;
- (id)objectForObjectID:(long long)arg1;
- (id)firstAncestorOfObject:(id)arg1 ofClass:(Class)arg2;
- (id)parentOfObject:(id)arg1;
- (id)orderedChildrenOfObject:(id)arg1;
- (id)childrenOfObject:(id)arg1;
- (long long)numberOfChildrenOfObject:(id)arg1;
- (BOOL)containsObject:(id)arg1;
- (id)topLevelConcreteObjects;
- (BOOL)isObjectAnAbstractConcept:(id)arg1;
- (id)extractObjects:(id)arg1;
- (unsigned long long)secondChanceAcceptLibraryDragPasteboard:(id)arg1 imageOrigin:(struct CGPoint)arg2 withDragImage:(id)arg3;
- (id)tryToInsertContentsOfPasteboardIntoMainWindow:(id)arg1;
- (id)makeObject:(id)arg1 acceptContentsOfPasteboardFromDragInfo:(id)arg2 insertionContext:(id)arg3;
- (id)parentsOfObjects:(id)arg1;
- (id)attributesConfigurationFromPasteboard:(id)arg1 forObject:(id)arg2;
- (void)putObjects:(id)arg1 onPasteboard:(id)arg2 forOwner:(id)arg3;
- (void)putObjects:(id)arg1 onPasteboard:(id)arg2 forOwner:(id)arg3 context:(id)arg4;
- (void)populateArchivingContext:(id)arg1 forInsertingObjects:(id)arg2 intoPasteboard:(id)arg3;
- (id)addChildrenFromDraggingInfo:(id)arg1 ofType:(id)arg2 toObject:(id)arg3 context:(id)arg4;
- (id)addChildrenFromPasteboard:(id)arg1 ofType:(id)arg2 toObject:(id)arg3 context:(id)arg4;
- (id)insertChildrenFromPasteboard:(id)arg1 ofType:(id)arg2 asChildrenOfObject:(id)arg3 atIndex:(long long)arg4 context:(id)arg5;
- (id)insertChildrenFromDraggingInfo:(id)arg1 ofType:(id)arg2 asChildrenOfObject:(id)arg3 atIndex:(long long)arg4 context:(id)arg5;
- (unsigned long long)dragOperationForObjectsRepresentedByDraggingInfo:(id)arg1 targetingObject:(id)arg2;
- (unsigned long long)dragOperationForObjectsRepresentedByDraggingInfo:(id)arg1 targettingObject:(id)arg2;
- (BOOL)canObjectsFromPasteboard:(id)arg1 ofType:(id)arg2 beMovedToParent:(id)arg3;
- (BOOL)canObjects:(id)arg1 beMovedToParent:(id)arg2;
- (id)insertChildrenFromPasteboard:(id)arg1 ofType:(id)arg2 asChildrenOfObject:(id)arg3 atIndex:(long long)arg4 useOIDs:(BOOL)arg5 context:(id)arg6;
- (id)decodeNonLazyIdentifiedObjectsFromPasteboard:(id)arg1 ofType:(id)arg2 forInsertionInto:(id)arg3 context:(id)arg4;
- (id)decodeImmediatelyAvailableObjectsFromPasteboard:(id)arg1 ofType:(id)arg2 forInsertionInto:(id)arg3 context:(id)arg4;
- (BOOL)shouldCustomizeObjects:(id)arg1 ofTargetRuntime:(id)arg2 fromPasteboard:(id)arg3 forInsertionIntoObject:(id)arg4 context:(id)arg5;
- (id)moveChildrenFromPasteboard:(id)arg1 ofType:(id)arg2 toParent:(id)arg3 atIndex:(long long)arg4;
- (id)localPasteboardObjects:(id)arg1 ofType:(id)arg2;
- (id)extractResourceValuesFromPasteboard:(id)arg1 ofType:(id)arg2;
- (id)extractResourcesFromPasteboard:(id)arg1 ofType:(id)arg2;
- (BOOL)doesPasteboard:(id)arg1 containResourcesOfType:(id)arg2;
- (id)currentlyInADragThatAllowsMovePBoardType;
- (id)documentLocalPasteboardType;
- (void)simulateInterface:(id)arg1;
- (BOOL)prepareAndLaunchSimulationWithContext:(id)arg1 error:(id *)arg2;
- (void)launchSimulatorForCompiledDocumentAtPath:(id)arg1 withEnvironment:(id)arg2 context:(id)arg3;
- (BOOL)compilePackageToPath:(id)arg1 options:(unsigned long long)arg2 originalContentsPath:(id)arg3 context:(id)arg4 error:(id *)arg5;
- (void)didStartSimulatorWithContext:(id)arg1;
- (void)willStartSimulatorWithContext:(id)arg1;
- (id)environmentForSimulatingAtPath:(id)arg1 context:(id)arg2;
- (void)cleanSimulatorDefaults;
- (void)showDocumentInfoWindow:(id)arg1;
- (void)showDocumentWindow:(id)arg1;
- (void)takeDefaultDeploymentTargetFromSDKPath:(id)arg1;
- (id)incompatibilitiesInfoController;
- (id)fileInfoController;
- (id)warnings;
- (void)buildWarningsIfNeeded;
- (void)rebuildWarnings;
- (void)validateWarnings:(id)arg1;
- (void)updateWarningsForObjects:(id)arg1;
- (void)notifyWarningChanged;
- (void)invalidateWarningsForConnection:(id)arg1;
- (void)invalidateWarningsForClassNamed:(id)arg1;
- (void)invalidateWarningsForChildrenOfObject:(id)arg1;
- (void)invalidateWarningsForObject:(id)arg1;
- (void)invalidateAllWarnings;
- (void)warningSeveritiesDidChange:(id)arg1;
- (void)validateWarningsIfNeeded;
- (void)scheduleWarningValidation;
- (void)unscheduleWarningValidation;
- (id)documentCompatibilityController;
- (void)didMoveObject:(id)arg1;
- (void)willMoveObject:(id)arg1;
- (void)didRemoveConnection:(id)arg1;
- (void)willRemoveConnection:(id)arg1;
- (void)didAddConnection:(id)arg1;
- (void)willAddConnection:(id)arg1;
- (void)didAddObject:(id)arg1;
- (void)willAddObject:(id)arg1;
- (void)didChangePropertyFromValue:(id)arg1 toValue:(id)arg2 forKey:(id)arg3 onObject:(id)arg4;
- (void)didRemoveObject:(id)arg1;
- (void)willRemoveObject:(id)arg1;
- (void)undoManagerWasReset:(id)arg1;
- (void)undoManagerWillCloseUndoGroup:(id)arg1;
- (void)undoManagerDidOpenUndoGroup:(id)arg1;
- (void)didFinishEditing;
- (void)didStartEditing;
- (void)didStartUndoing;
- (void)didFinishUndoing;
- (void)didStartRedoing;
- (void)didFinishRedoing;
- (void)finishPushingSelection;
- (void)beginPushingSelection;
- (void)restoreEditingContextFromSnapshot:(id)arg1;
- (id)editingContextRestorationInfoWithAdds:(id)arg1 removes:(id)arg2 moves:(id)arg3 modifies:(id)arg4 andSelectionHints:(id)arg5;
- (void)stopUndoObservationsOf:(id)arg1;
- (void)startUndoObservationsOf:(id)arg1;
- (BOOL)isUndoObservationOfObjectEnabled:(id)arg1;
- (void)enableUndoObservationsOf:(id)arg1;
- (void)disableUndoObservationsOf:(id)arg1;
- (void)setNonUndoableValue:(id)arg1 forKeyPath:(id)arg2 ofObject:(id)arg3;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)observeDidAutomaticallyUndoChangeGroup:(id)arg1;
- (void)registerChangeFromValue:(id)arg1 forKeyPath:(id)arg2 onObject:(id)arg3;
- (void)undoWithKVCUndoRecord:(id)arg1;
- (void)setValue:(id)arg1 forKeyPath:(id)arg2 onObject:(id)arg3;
- (void)undoableProperty:(id)arg1 ofObject:(id)arg2 changedFromValue:(id)arg3 toValue:(id)arg4;
- (void)automaticallyRevertUndoGroupAndWarnObject:(id)arg1;
- (void)displayLockedObjectAlert:(id)arg1;
- (void)displayLockedPropertyAlertForObjects:(id)arg1 inWindowController:(id)arg2;
- (BOOL)isPropertyLocked:(id)arg1 forAnyObject:(id)arg2;
- (BOOL)isPropertyLocked:(id)arg1 forObject:(id)arg2;
- (BOOL)shouldAllowObjectInsertion:(BOOL)arg1;
- (BOOL)shouldAllowConnectionInsertion:(BOOL)arg1;
- (BOOL)shouldAllowConnectionRemoval:(BOOL)arg1;
- (void)setVersion:(id)arg1 forPluginDeclaredDependency:(id)arg2 forCategory:(long long)arg3;
- (void)setDefaultVersion:(id)arg1 forPluginDeclaredDependency:(id)arg2 forCategory:(long long)arg3;
- (id)effectiveVersionForPluginDeclaredDependency:(id)arg1 forCategory:(long long)arg2;
- (id)effectiveDefaultVersionForPluginDeclaredDependency:(id)arg1 forCategory:(long long)arg2;
- (id)defaultVersionForPluginDeclaredDependency:(id)arg1 forCategory:(long long)arg2;
- (id)versionForPluginDeclaredDependency:(id)arg1 forCategory:(long long)arg2;
- (id)prunePluginDeclaredDependencies:(id)arg1 forCategory:(long long)arg2;
- (void)setPluginDeclaredDependencyDefaults:(id)arg1 forCategory:(long long)arg2;
- (id)pluginDeclaredDependencyDefaultsForCategory:(long long)arg1;
- (void)setPluginDeclaredDependencies:(id)arg1 forCategory:(long long)arg2;
- (id)pluginDeclaredDependenciesForCategory:(long long)arg1;
- (id)validPluginDeclaredDependencyIDsForCategory:(long long)arg1;
- (id)pluginIdentifiersWithApplicablePluginDeclaredDependenciesForCategory:(long long)arg1;
- (void)setFallbackContainerWidgetTypeForLayoutGuides:(id)arg1;
- (id)fallbackContainerWidgetTypeForLayoutGuides;
- (void)setFallbackWidgetTypeForLayoutGuides:(id)arg1;
- (id)fallbackWidgetTypeForLayoutGuides;
- (id)labelDefinitions;
- (id)labelDefinitionForIdentifier:(id)arg1;
- (void)setDocumentMetadata:(id)arg1 forKey:(id)arg2;
- (id)documentMetadataForKey:(id)arg1;
- (id)documentMetadata;
- (void)setDocumentMetadata:(id)arg1;
- (void)setDocumentWindowStaticOrigin:(struct CGPoint)arg1;
- (struct CGPoint)documentWindowStaticOrigin;
- (BOOL)documentWindowUsesStaticOrigin;
- (long long)defaultPropertyAccessControl;
- (void)setDefaultPropertyAccessControl:(long long)arg1;
- (id)probableProjectPath;
- (id)lastKnownRelativeProjectPath;
- (void)setLastKnownRelativeProjectPath:(id)arg1;
- (void)setVerificationMessagesSourceURL:(id)arg1;
- (id)verificationMessagesSourceURL;
- (void)appendVerificationMessages:(id)arg1;
- (void)setVerificationMessages:(id)arg1;
- (id)verificationMessages;
- (BOOL)presentsInterface;
- (id)frameworkDependencies;
- (id)classNameThatPreventedDecode;
- (void)setClassNameThatPreventedDecode:(id)arg1;
- (id)lastSavedPluginVersionForPluginWithIdentifier:(id)arg1;
- (void)setLastSavedPluginVersionsForDependedPlugins:(id)arg1;
- (id)lastSavedPluginVersionsForDependedPlugins;
- (void)setLastSavedHIToolboxVersion:(id)arg1;
- (id)lastSavedHIToolboxVersion;
- (void)setLastSavedAppKitVersion:(id)arg1;
- (id)lastSavedAppKitVersion;
- (void)setLastSavedInterfaceBuilderVersion:(id)arg1;
- (id)lastSavedInterfaceBuilderVersion;
- (void)setLastSavedSystemVersion:(id)arg1;
- (id)lastSavedSystemVersion;
- (BOOL)isBundleBasedFileType:(id)arg1;
- (long long)developmentTarget;
- (long long)systemTarget;
- (void)setObjectContainer:(id)arg1;
- (id)resourceManager;
- (id)classDescriber;
- (void)setClassDescriber:(id)arg1;
- (id)selection;
- (id)undoManager;
- (id)objectContainer;
- (id)connectionHUD;
- (id)uniqueInMemoryIDForObject:(id)arg1;
- (id)uniqueID;
- (id)displayNameIncludingLocalization;
- (id)lprojFolderName;
- (id)localizedDisplayNameForLocalization:(id)arg1;
- (id)displayNameForLocalization:(id)arg1;
- (id)displayNameForLocalization:(id)arg1 localized:(BOOL)arg2;
- (void)setObjectIDsToOpen:(id)arg1;
- (id)objectIDsToOpen;
- (id)additionalInstantiationInformation;
- (id)windows;
- (void)setDocumentWindowController:(id)arg1;
- (id)documentWindowController;
- (void)setIsClosing:(BOOL)arg1;
- (BOOL)isClosing;
- (void)setFileLastModifiedDate:(id)arg1;
- (id)fileLastModifiedDate;
- (void)setRelatedDocumentPaths:(id)arg1;
- (id)relatedDocumentPaths;
- (void)setPerFileSynchronizationState:(id)arg1;
- (id)perFileSynchronizationState;
- (void)setProjectBackgroundReader:(id)arg1;
- (id)projectBackgroundReader;
- (void)setCachedXcodeProject:(id)arg1;
- (id)cachedXcodeProject;
- (void)setXcodeProjectNeedsSynchronization:(BOOL)arg1;
- (BOOL)xcodeProjectNeedsSynchronization;
- (void)setFontAndColorSelectionIsPendingValidation:(BOOL)arg1;
- (BOOL)fontAndColorSelectionIsPendingValidation;
- (void)setUpdatingColorPanel:(BOOL)arg1;
- (BOOL)isUpdatingColorPanel;
- (void)setPreviousXmlDecoderHints:(id)arg1;
- (id)previousXmlDecoderHints;
- (void)setShouldRecalculatePluginDependencies:(BOOL)arg1;
- (BOOL)shouldRecalculatePluginDependencies;
- (id)editorManager;
- (id)localizationInfoController;
- (id)effectivePropertyAccessControlCache;
- (void)setSwitchingLocalizations:(BOOL)arg1;
- (BOOL)isSwitchingLocalizations;
- (void)setObjectWarnedForLockedPropertyChange:(id)arg1;
- (id)objectWarnedForLockedPropertyChange;
- (id)undoBlocks;
- (id)objectsWithPendingWarningCalculations;
- (id)parentsWithPendingChildWarningCalculations;
- (id)classNamesWithPendingWarningCalculations;
- (void)setWarningsArePendingValidation:(BOOL)arg1;
- (BOOL)warningsArePendingValidation;
- (void)setObjectsToWarnings:(id)arg1;
- (id)objectsToWarnings;
- (void)setNameForCurrentEditingAction:(id)arg1;
- (void)suggestDerivedNameForCurrentEditingAction:(id)arg1;
- (void)setSimulationTask:(id)arg1;
- (id)simulationTask;
- (void)setNameForCurrentEditingAction:(id)arg1 onObjects:(id)arg2;
- (void)suggestDerivedNameForCurrentEditingAction:(id)arg1 onObjects:(id)arg2;
- (void)ensureUndoNamingSetIsOpen;
- (void)closeUndoNamingSet;
- (id)undoNameForAction:(id)arg1 onObjects:(id)arg2;
- (void)hintSelectionForUndo:(id)arg1;
- (void)clearUndoableChangeTable;
- (id)undoableChangeTable;
- (void)updateUndoableChangeTableInfoForObject:(id)arg1 withChangeType:(int)arg2;
- (void)setFileTypePopUpButton:(id)arg1;
- (id)fileTypePopUpButton;
- (void)setSavePanelAccessoryView:(id)arg1;
- (id)savePanelAccessoryView;
- (id)currentPluginVersionsForDependedPlugins;
- (id)resourceClasses;
- (id)synchronizedResourceFileExtensions;
- (id)nameForDocumentImage:(id)arg1;
- (id)nameForResourceValue:(id)arg1;
- (id)documentSoundNamed:(id)arg1;
- (id)documentImageNamed:(id)arg1;
- (id)documentImageNamed:(id)arg1 usingSizeValueForPlaceholderImageIfNeeded:(id)arg2;
- (Class)soundResourceClass;
- (Class)imageResourceClass;
- (id)documentCIImageNamed:(id)arg1;
- (id)documentNameForCIImage:(id)arg1;
- (void)addSystemResources;
- (Class)resourceManagerClass;
- (id)performVerification;
- (id)verify;
- (id)verifyRootObjectRootsAllObjects;
- (void)recalculatePluginDependenciesOverwritingExistingDependencies:(int)arg1;
- (BOOL)hasOldPluginDependencyRecalculationVersion;
- (BOOL)hasCommonlyMisattributedPluginDependencies;
- (id)verifyExclusiveConnections;
- (BOOL)shouldStablizeCoding;
- (BOOL)readFromFileWrapper:(id)arg1 ofType:(id)arg2 error:(id *)arg3;
- (BOOL)readFromIB2InfoWrapper:(id)arg1 error:(id *)arg2;
- (BOOL)prepareForReadingWithIB2DependencyNibWrapper:(id)arg1 error:(id *)arg2;
- (id)infoNibDictionary;
- (id)classesNibData;
- (id)infoNibData;
- (void)willDecodeWithKeyedDecoder:(id)arg1;
- (BOOL)objectContainer:(id)arg1 shouldPersistMetadataForKey:(id)arg2 onObject:(id)arg3;
- (void)didCreateObjectContainerWithCoder:(id)arg1;
- (void)willCreateObjectContainerWithCoder:(id)arg1;
- (void)objectContainer:(id)arg1 didCreateDataRepresentationWithCoder:(id)arg2 context:(id)arg3;
- (void)objectContainer:(id)arg1 willCreateDataRepresentationWithCoder:(id)arg2 context:(id)arg3;
- (id)dataOfType:(id)arg1 error:(id *)arg2;
- (id)decodeDocumentOfType:(id)arg1 withCoder:(id)arg2;
- (id)targetRuntimeWithIdentifier:(id)arg1 fromDocumentOfType:(id)arg2 error:(id *)arg3;
- (id)errorForUnarchiveException:(id)arg1;
- (void)encodeDesignableNibWithCoder:(id)arg1;
- (Class)unarchiver:(id)arg1 cannotDecodeObjectOfClassName:(id)arg2 originalClasses:(id)arg3;
- (BOOL)resolvePluginDependencies:(id)arg1 error:(id *)arg2;
- (id)errorForMissingPluginIdentifiersMap:(id)arg1;
- (BOOL)dependsOnPlugin:(id)arg1;
- (id)pluginDependencies;
- (void)didArchiveWithContext:(id)arg1;
- (void)willArchiveWithContext:(id)arg1;
- (id)hybridPackage;
- (id)hybridPackageType;
- (id)compiledPackage;
- (BOOL)readFromURL:(id)arg1 ofType:(id)arg2 error:(id *)arg3;
- (void)readLRELockingRules:(id)arg1;
- (void)readLREHighlightIDs:(id)arg1;
- (BOOL)writeToURL:(id)arg1 ofType:(id)arg2 forSaveOperation:(unsigned long long)arg3 originalContentsURL:(id)arg4 error:(id *)arg5;
- (BOOL)shouldCopyFileNamed:(id)arg1 whenPreservingWrapperContentsWhenWritingToURL:(id)arg2 ofType:(id)arg3 forSaveOperation:(unsigned long long)arg4 originalContentsURL:(id)arg5;
- (BOOL)shouldPreserveWrapperContentsWhenWritingToURL:(id)arg1 ofType:(id)arg2 forSaveOperation:(unsigned long long)arg3 originalContentsURL:(id)arg4;
- (void)setArchivingReplacementClassName:(id)arg1 forClassName:(id)arg2;
- (id)xmlCoder:(id)arg1 classNameForClass:(Class)arg2;
- (id)coderForType:(id)arg1 withData:(id)arg2;
- (BOOL)xmlCoder:(id)arg1 object:(id)arg2 shouldEncodeObject:(id *)arg3 forKey:(id)arg4 conditional:(BOOL)arg5;
- (id)xmlCoder:(id)arg1 sortDescriptorForCollection:(id)arg2;
- (BOOL)prepareSavePanel:(id)arg1;
- (void)accessoryViewChangedFileType:(id)arg1;
- (void)setCurrentSavePanel:(id)arg1;
- (id)currentSavePanel;
- (void)setFileTypeFromLastRunSavePanel:(id)arg1;
- (id)fileTypeFromLastRunSavePanel;
- (void)selectionDidInvalidateInWindowController:(id)arg1;
- (void)selectionDidChangeInWindowController:(id)arg1;
- (void)controlledWindowDidBecomeMain:(id)arg1;
- (void)takeSelectionFromMainWindow:(id)arg1;
- (void)setSelection:(id)arg1;
- (void)invalidateFontAndColorSelection;
- (void)unscheduleFontAndColorSelectionValidation;
- (void)validateFontAndColorSelection:(id)arg1;
- (void)refreshFontsAndColors;
- (void)projectResourceReaderFinishedReading:(id)arg1;
- (void)projectResourceReader:(id)arg1 readFiles:(id)arg2;
- (void)beginSyncingWithXcodeIfNeeded;
- (void)cancelSyncingWithXcode;
- (id)synchronizedFilesForProject:(id)arg1;
- (id)filePathsSubstitutingFrameworksForBuiltProductsCounterparts:(id)arg1 inProject:(id)arg2;
- (id)synchronizedFileExtensions;
- (id)synchronizedImageFileExtensions;
- (BOOL)synchronizeWithModifiedProjectFiles:(id)arg1 project:(id)arg2 status:(id)arg3;
- (void)didSynchronizeWithProjectFiles:(id)arg1 project:(id)arg2;
- (void)willSynchronizeWithProjectFiles:(id)arg1 project:(id)arg2;
- (id)synchronizedDocumentFileExtensions;
- (void)noteSynchronizationOfFileFailed:(id)arg1;
- (BOOL)synchronizeLoadedPluginsWithModifiedProjectFiles:(id)arg1 project:(id)arg2 status:(id)arg3;
- (BOOL)synchronizeClassDescriptionsWithModifiedProjectFiles:(id)arg1 project:(id)arg2 status:(id)arg3;
- (BOOL)synchronizeFrameworkClassDescriptionsWithModifiedProjectFiles:(id)arg1 project:(id)arg2 status:(id)arg3;
- (id)resourceReaderCacheReference;
- (void)invalidateXcodeProjectSynchronization;
- (void)prepareForRefreshSyncWithXcodeProject;
- (BOOL)isProjectSynchronizationInProgress;
- (void)updateFileLastModifiedDate;
- (long long)diskState;
- (id)fileLastModifiedDateForFile:(id)arg1 error:(id *)arg2;
- (void)setFileType:(id)arg1;
- (void)close;
- (void)makeWindowControllers;
- (id)windowGroup;
- (id)windowForSheet;
- (void)setFileURL:(id)arg1;
- (void)alertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)fileLossAlertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)saveToURL:(id)arg1 ofType:(id)arg2 forSaveOperation:(unsigned long long)arg3 delegate:(id)arg4 didSaveSelector:(SEL)arg5 contextInfo:(void *)arg6;
- (void)projectInsertionPanel:(id)arg1 finishedInsertFiles:(id)arg2 intoTargets:(id)arg3 success:(BOOL)arg4;
- (void)ibDocument:(id)arg1 didSave:(BOOL)arg2 contextInfo:(void *)arg3;
- (void)runModalSavePanelForSaveOperation:(unsigned long long)arg1 delegate:(id)arg2 didSaveSelector:(SEL)arg3 contextInfo:(void *)arg4;
- (void)saveDocumentWithDelegate:(id)arg1 didSaveSelector:(SEL)arg2 contextInfo:(void *)arg3;
- (void)presaveAlertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (id)presaveAlertWithContinueLabel:(id)arg1;
- (void)attemptRecoveryFromError:(id)arg1 optionIndex:(unsigned long long)arg2 delegate:(id)arg3 didRecoverSelector:(SEL)arg4 contextInfo:(void *)arg5;
- (BOOL)attemptRecoveryFromError:(id)arg1 optionIndex:(unsigned long long)arg2;
- (void)dealloc;
- (id)initWithType:(id)arg1 targetRuntime:(id)arg2 fromPasteboard:(id)arg3 error:(id *)arg4;
- (id)initWithType:(id)arg1 error:(id *)arg2;
- (id)init;
- (id)windowPasteboardType;
- (id)menuItemPasteboardType;
- (id)menuPasteboardType;
- (id)viewPasteboardType;
- (id)objectPasteboardType;
- (id)pathExtensionForCompiledPackage;
- (id)preferredFileType;
- (unsigned long long)dragOperationForObjectsRepresentedByDraggingInfo:(id)arg1 targettingObject:(id)arg2;
- (void)setSystemTarget:(long long)arg1;
- (void)didCompile;
- (void)willCompile;
- (void)setDefaultVersion:(id)arg1 forPluginDeclaredDependency:(id)arg2;
- (id)effectiveVersionForPluginDeclaredDependency:(id)arg1;

@end

@interface IBDocumentCompatibilityController : NSObject <NSTableViewDelegate>
{
    NSArrayController *errorController;
    NSTableColumn *iconAndNameColumn;
    NSTableColumn *reasonColumn;
    NSTableView *errorTableView;
    NSPanel *compatibilityPanel;
    NSArray *allUnderlyingErrors;
    NSCell *measurementCell;
    IBDocument *document;
    NSError *rootError;
}

- (void)tableViewColumnDidResize:(id)arg1;
- (double)tableView:(id)arg1 heightOfRow:(long long)arg2;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (void)editSelectedRow:(id)arg1;
- (void)setRootError:(id)arg1;
- (id)rootError;
- (id)allUnderlyingErrors;
- (void)setAllUnderlyingErrors:(id)arg1;
- (id)document;
- (void)showCompatibilityPanel:(id)arg1;
- (void)ensureUIIsLoaded;
- (void)awakeFromNib;
- (void)willClose;
- (void)dealloc;
- (id)initWithDocument:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IBDocumentController : NSDocumentController
{
    NSMutableDictionary *typesToDocuments;
    NSMutableDictionary *typesToExtentions;
    NSMutableDictionary *extentionsToTypes;
    NSMutableArray *documentClassNames;
    NSString *defaultType;
    IBDocument *lastActiveDocument;
    BOOL alwaysDelegateErrorPresentationToApplication;
    IBInvalidationPolicy *classDescriptionSynchronizationPolicy;
}

+ (BOOL)isAutomaticProjectSynchronizationEnabled;
- (void)handleAppleEventKAHLMod:(id)arg1 withReplyEvent:(id)arg2;
- (void)setPresaveAlertThreshold:(id)arg1;
- (id)presaveAlertThreshold;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (void)showActiveDocumentInfoWindow:(id)arg1;
- (void)showActiveDocumentWindow:(id)arg1;
- (void)documentDidAddOrRemoveObject:(id)arg1;
- (void)documentDidChangeCustomClasses:(id)arg1;
- (void)documentClassDescriptionsDidChange:(id)arg1;
- (void)documentDidChangeAvailableClasses:(id)arg1;
- (void)synchronizeClassesForActiveDocument:(id)arg1;
- (void)refreshClassInformationForActiveDocument:(id)arg1;
- (void)readFilesIntoActiveDocument:(id)arg1;
- (void)readFilesSheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)validateXcodeProjectSynchronizationForActiveDocument;
- (void)documentMediaSynchronizationStatudDidChange:(id)arg1;
- (void)automaticallyInvalidateXcodeProjectSynchronization;
- (void)checkLastModifiedDateForDocuments;
- (void)documentDisappearedOnDiskAlertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)documentChangedOnDiskAlertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)revertActiveDocument:(id)arg1;
- (void)revertDocument:(id)arg1;
- (id)documentClasses;
- (Class)lastActiveDocumentClass;
- (void)updateWindowShadingForActiveDocument:(id)arg1;
- (void)windowDidBecomeMain:(id)arg1;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)removeDocument:(id)arg1;
- (void)setActiveDocument:(id)arg1;
- (id)activeDocument;
- (id)defaultType;
- (id)typeForContentsOfURL:(id)arg1 error:(id *)arg2;
- (id)openDocumentWithContentsOfURL:(id)arg1 display:(BOOL)arg2 error:(id *)arg3;
- (id)makeDocumentWithContentsOfURL:(id)arg1 ofType:(id)arg2 error:(id *)arg3;
- (id)displayNameForType:(id)arg1;
- (id)fileExtensionsFromType:(id)arg1;
- (Class)documentClassForType:(id)arg1;
- (id)documentClassNames;
- (void)registerDocumentClass:(Class)arg1 forType:(id)arg2 andExtension:(id)arg3;
- (BOOL)presentError:(id)arg1;
- (id)willPresentError:(id)arg1;
- (void)setAlwaysDelegateErrorPresentationToApplication:(BOOL)arg1;
- (BOOL)alwaysDelegateErrorPresentationToApplication;
- (void)dealloc;
- (id)init;

@end

@interface IBWindowController : NSWindowController <NSUserInterfaceValidations, NSWindowDelegate>
{
    NSWindow *localizeFromSheet;
    NSPopUpButton *localizeFromLanguagePopUp;
    NSPopUpButton *localizeFromValuesPopUp;
    struct CGPoint lastDragPoint;
    id lastDragTarget;
    NSDate *lastDragMouseMovedTime;
    BOOL blockDragTillMove;
    BOOL blockDragTillHold;
    long long lastDragSequenceNumber;
}

+ (id)windowControllerAtPoint:(struct CGPoint)arg1;
+ (id)windowControllerAtPoint:(struct CGPoint)arg1 inDocument:(id)arg2;
+ (id)windowControllerAtPoint:(struct CGPoint)arg1 inDocument:(id)arg2 ignoringWindowControllers:(id)arg3;
- (void)selectNextClippedObject:(id)arg1;
- (void)selectPreviousClippedObject:(id)arg1;
- (void)doSelectNextClippedObjectInReverse:(BOOL)arg1;
- (unsigned long long)dragObjects:(id)arg1 withImage:(id)arg2 inMouseDownEvent:(id)arg3 mouseDraggedEvent:(id)arg4 imageLocation:(struct CGPoint)arg5 allowedOperations:(unsigned long long)arg6 source:(id)arg7 draggingSourceContext:(id)arg8;
- (void)orderFrontAfterDrag:(id)arg1;
- (void)concludeDragOperation:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (void)dragTarget:(id)arg1 didAcceptDraggedObjects:(id)arg2 fromDragInfo:(id)arg3;
- (BOOL)prepareForDragOperation:(id)arg1;
- (void)draggingEnded:(id)arg1;
- (void)draggingExited:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (BOOL)shouldBlockDragsUntilHoldFromDragginEntered;
- (id)draggedImageState:(id)arg1;
- (id)springLoadedObjectAtPoint:(struct CGPoint)arg1;
- (BOOL)prepareToAcceptDragInfo:(id)arg1;
- (id)dropTargetForDragInfo:(id)arg1 allowedDraggingOperations:(unsigned long long *)arg2;
- (id)connectionEndPointsForEvent:(id)arg1;
- (void)localizationModeChanged;
- (void)localizeFrom:(id)arg1;
- (void)middleContainerAlignViews:(id)arg1;
- (void)centerContainerAlignViews:(id)arg1;
- (void)baselineAlignViews:(id)arg1;
- (void)bottomAlignViews:(id)arg1;
- (void)middleAlignViews:(id)arg1;
- (void)topAlignViews:(id)arg1;
- (void)leftAlignViews:(id)arg1;
- (void)rightAlignViews:(id)arg1;
- (void)centerAlignViews:(id)arg1;
- (BOOL)canContainerAlignInspectedViews;
- (BOOL)canAlignInspectedViews;
- (void)selectParent:(id)arg1;
- (void)selectPreviousSibling:(id)arg1;
- (void)selectNextSibling:(id)arg1;
- (void)selectChild:(id)arg1;
- (BOOL)canSelectSibling;
- (BOOL)canSelectChild;
- (BOOL)canSelectParent;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (void)showDocumentationForSelection:(id)arg1;
- (void)showInterfaceForSelection:(id)arg1;
- (void)showDocumentationForObjects:(id)arg1;
- (void)showInterfaceForObjects:(id)arg1;
- (id)documentationTokensForObjects:(id)arg1;
- (void)cancelLocalizeFromSheet:(id)arg1;
- (void)okLocalizeFromSheet:(id)arg1;
- (void)didEndSheet:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (id)objectAtPoint:(struct CGPoint)arg1;
- (id)objectsAtPoint:(struct CGPoint)arg1;
- (void)indicateDropSuccessForTarget:(id)arg1;
- (void)indicateSpringLoadedPopForTarget:(id)arg1;
- (void)flashTarget:(id)arg1 withRepetitions:(long long)arg2 andOnInterval:(double)arg3 andOffInterval:(double)arg4;
- (void)flashTarget:(id)arg1 withRepetitions:(long long)arg2 andOnInterval:(double)arg3 andOffInterval:(double)arg4 fadeOffInterval:(double)arg5;
- (long long)identify:(id)arg1;
- (long long)identify:(id)arg1 untilDate:(id)arg2;
- (id)captionForIdentifiedObject:(id)arg1;
- (void)selectionDidChange;
- (void)invalidateSelection;
- (void)registerDragTypes;
- (id)windowsToPopInFrontOf;
- (void)revealObjectInClassesTab:(id)arg1;
- (void)revealInClassesTab:(id)arg1;
- (void)revealInWorkspace:(id)arg1;
- (void)revealInDocumentWindow:(id)arg1;
- (void)keyDown:(id)arg1;
- (void)delete:(id)arg1;
- (void)deselectObjects:(id)arg1;
- (id)selection;
- (BOOL)shouldUpdateColorPanel;
- (id)selectedColorsForColorPanel;
- (id)selectedFontsForFontPanel;
- (id)acceptedDragTypes;
- (struct CGRect)visibleScreenRectForObject:(id)arg1;
- (struct CGRect)screenRectForObject:(id)arg1;
- (id)lastDragTarget;
- (void)setLastDragTarget:(id)arg1 fromDraggingInfo:(id)arg2;
- (id)lastDragMouseMovedTime;
- (void)setLastDragMouseMovedTime:(id)arg1;
- (id)contentView;
- (void)setWindow:(id)arg1;
- (void)setDocument:(id)arg1;
- (void)documentOrWindowChanged;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IBDocumentInfoWindowController : IBWindowController
{
    IBCFMutableDictionary *infoViewsToInfoControllers;
}

- (id)objectsAtPoint:(struct CGPoint)arg1;
- (id)selection;
- (void)deselectObjects:(id)arg1;
- (id)activeController;
- (id)windowTitleForDocumentDisplayName:(id)arg1;
- (void)setWindow:(id)arg1;
- (void)setDocument:(id)arg1;
- (void)setDocumentEdited:(BOOL)arg1;
- (void)documentOrWindowChanged;
- (BOOL)windowShouldClose:(id)arg1;
- (void)dealloc;

@end

@interface IBDocumentStatusContainer : NSView
{
}

- (void)resizeSubviewsWithOldSize:(struct CGSize)arg1;
- (void)tile;

@end

@interface IBDocumentUndoManager : NSUndoManager
{
    BOOL automaticallyUndoNextChangeGroup;
}

- (void)endUndoGrouping;
- (void)removeAllActions;
- (void)redo;
- (void)undo;
- (BOOL)willAutomaticallyUndoNextChangeGroup;
- (void)automaticallyUndoNextChangeGroup;

@end

@interface IBDocumentWindow : NSWindow
{
}

- (void)sendEvent:(id)arg1;
- (id)nibWindowController;

@end

@interface IBDocumentWindowController : IBWindowController <NSOutlineViewDataSource, NSOutlineViewDelegate, NSBrowserDelegate>
{
    IBInvalidationPolicy *dataViewInvalidationPolicy;
    NSSegmentedControl *tabSwitchControl;
    NSSearchField *searchField;
    NSTabView *tabView;
    NSScrollView *rootObjectsScrollView;
    IBIconView *rootObjectsIconView;
    NSScrollView *objectOutlineScrollView;
    NSOutlineView *objectOutlineView;
    NSOutlineView *classOutlineView;
    NSBrowser *objectBrowserView;
    IBDocumentStatusContainer *statusAreaView;
    IBPulsingButton *synchronizationButton;
    IBStackView *statusStackView;
    IBDocumentInfoWindowController *nibInfoWindowController;
    IBCFMutableDictionary *filteredChildren;
    NSMutableDictionary *filteredClasses;
    NSString *filterString;
    NSString *lastNonOutlineMode;
    BOOL userChoseOutline;
    BOOL isCascading;
    BOOL appliedOutlineViewConfiguration;
    BOOL allowDirectDropInOutlineView;
    NSSet *previousSelection;
    NSTimer *statusMessageTimer;
    BOOL currentlyDisplayingCustomStatusMessage;
    BOOL shouldRespondToDataViews;
    BOOL ignoreBrowsersFieldEditorCommit;
}

+ (void)setMostRecentPreferredObjectViewMode:(id)arg1;
+ (id)preferedObjectViewModes;
+ (id)objectViewIdentifiers;
+ (id)unresponsiveSyncImage;
+ (id)disabledSyncImage;
+ (id)unavailableSyncImage;
+ (id)failedSyncImage;
+ (id)successfulSyncImage;
- (void)selectPreviousSibling:(id)arg1;
- (void)selectNextSibling:(id)arg1;
- (void)selectChild:(id)arg1;
- (void)selectParent:(id)arg1;
- (BOOL)canSelectSibling;
- (BOOL)canSelectChild;
- (BOOL)canSelectParent;
- (void)deselectObjects:(id)arg1;
- (id)selection;
- (void)selectObjectsByPossiblySwitchingModes:(id)arg1;
- (id)preferedObjectViewModeForSelectingObjects:(id)arg1;
- (BOOL)canSelectObjects:(id)arg1 inMode:(id)arg2;
- (void)selectObjectsIfPossible:(id)arg1 scrollToVisible:(BOOL)arg2 makeFirstResponder:(BOOL)arg3;
- (BOOL)outlineView:(id)arg1 acceptDrop:(id)arg2 item:(id)arg3 childIndex:(long long)arg4;
- (unsigned long long)outlineView:(id)arg1 validateDrop:(id)arg2 proposedItem:(id)arg3 proposedChildIndex:(long long)arg4;
- (BOOL)outlineView:(id)arg1 writeItems:(id)arg2 toPasteboard:(id)arg3;
- (BOOL)control:(id)arg1 textShouldEndEditing:(id)arg2;
- (id)outlineView:(id)arg1 labelDefinitionForItem:(id)arg2;
- (void)outlineViewSelectionDidChange:(id)arg1;
- (void)outlineViewColumnDidMove:(id)arg1;
- (void)outlineViewColumnDidResize:(id)arg1;
- (void)outlineView:(id)arg1 setObjectValue:(id)arg2 forTableColumn:(id)arg3 byItem:(id)arg4;
- (void)outlineView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 item:(id)arg4;
- (BOOL)outlineView:(id)arg1 shouldEditTableColumn:(id)arg2 item:(id)arg3;
- (id)outlineView:(id)arg1 objectValueForTableColumn:(id)arg2 byItem:(id)arg3;
- (double)outlineView:(id)arg1 heightOfRowByItem:(id)arg2;
- (long long)outlineView:(id)arg1 numberOfChildrenOfItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 isItemExpandable:(id)arg2;
- (id)outlineView:(id)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (void)outlineViewWillDraw:(id)arg1;
- (BOOL)classOutlineView:(id)arg1 textShouldEndEditing:(id)arg2;
- (void)classOutlineViewSelectionDidChange:(id)arg1;
- (void)classOutlineViewColumnDidMove:(id)arg1;
- (void)classOutlineViewColumnDidResize:(id)arg1;
- (void)classOutlineView:(id)arg1 setObjectValue:(id)arg2 forTableColumn:(id)arg3 byItem:(id)arg4;
- (BOOL)classOutlineView:(id)arg1 shouldEditTableColumn:(id)arg2 item:(id)arg3;
- (id)classOutlineView:(id)arg1 objectValueForTableColumn:(id)arg2 byItem:(id)arg3;
- (void)classOutlineView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 item:(id)arg4;
- (double)classOutlineView:(id)arg1 heightOfRowByItem:(id)arg2;
- (long long)classOutlineView:(id)arg1 numberOfChildrenOfItem:(id)arg2;
- (id)classOutlineView:(id)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (BOOL)browser:(id)arg1 shouldEditItem:(id)arg2;
- (void)browser:(id)arg1 setObjectValue:(id)arg2 forItem:(id)arg3;
- (void)browserViewSelectionDidChange:(id)arg1;
- (void)browserColumnConfigurationDidChange:(id)arg1;
- (void)browser:(id)arg1 willDisplayCell:(id)arg2 atRow:(long long)arg3 column:(long long)arg4;
- (BOOL)browser:(id)arg1 isLeafItem:(id)arg2;
- (id)browser:(id)arg1 objectValueForItem:(id)arg2;
- (id)browser:(id)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (long long)browser:(id)arg1 numberOfChildrenOfItem:(id)arg2;
- (void)browserWillDraw:(id)arg1;
- (BOOL)objectOutlineView:(id)arg1 acceptDrop:(id)arg2 item:(id)arg3 childIndex:(long long)arg4;
- (unsigned long long)objectOutlineView:(id)arg1 validateDrop:(id)arg2 proposedItem:(id)arg3 proposedChildIndex:(long long)arg4;
- (id)childGroupsOfObject:(id)arg1 atIndex:(long long)arg2;
- (struct _NSRange)rangeOfChildGroup:(id)arg1 ofObject:(id)arg2;
- (id)rangesForChildGroupsOfObject:(id)arg1;
- (BOOL)objectOutlineView:(id)arg1 writeItems:(id)arg2 toPasteboard:(id)arg3;
- (BOOL)objectOutlineView:(id)arg1 textShouldEndEditing:(id)arg2;
- (id)objectOutlineViewLabelDefinitionForItem:(id)arg1;
- (void)objectOutlineViewSelectionDidChange:(id)arg1;
- (void)objectOutlineViewColumnDidMove:(id)arg1;
- (void)objectOutlineViewColumnDidResize:(id)arg1;
- (void)objectOutlineView:(id)arg1 setObjectValue:(id)arg2 forTableColumn:(id)arg3 byItem:(id)arg4;
- (BOOL)objectOutlineView:(id)arg1 shouldEditTableColumn:(id)arg2 item:(id)arg3;
- (id)objectOutlineView:(id)arg1 objectValueForTableColumn:(id)arg2 byItem:(id)arg3;
- (void)objectOutlineView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 item:(id)arg4;
- (double)objectOutlineView:(id)arg1 heightOfRowByItem:(id)arg2;
- (long long)objectOutlineView:(id)arg1 numberOfChildrenOfItem:(id)arg2;
- (id)objectOutlineView:(id)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (void)iconViewSelectionDidChange:(id)arg1;
- (BOOL)iconView:(id)arg1 shouldEditTitleForIconAtIndex:(long long)arg2;
- (BOOL)dragSelectionFromIconView:(id)arg1 inMouseDownEvent:(id)arg2 withMouseDraggedEvent:(id)arg3;
- (long long)numberOfObjectsInIconView:(id)arg1;
- (id)labelDefintionForObjectAtIndex:(long long)arg1 inIconView:(id)arg2;
- (id)imageForObjectAtIndex:(long long)arg1 inIconView:(id)arg2;
- (id)titleForObjectAtIndex:(long long)arg1 inIconView:(id)arg2;
- (void)setTitle:(id)arg1 forIconAtIndex:(long long)arg2 inIconView:(id)arg3;
- (id)toolTipForObjectAtIndex:(long long)arg1 inIconView:(id)arg2;
- (id)labelDefinitionForObject:(id)arg1;
- (id)filteredSubclassesOfClass:(id)arg1;
- (BOOL)filterClass:(id)arg1 intoDictionary:(id)arg2;
- (BOOL)objectPassesFilter:(id)arg1;
- (id)filteredChildrenOfObject:(id)arg1;
- (BOOL)filterChildren:(id)arg1 intoDictionary:(id)arg2;
- (BOOL)objectMatchesFilterString:(id)arg1;
- (BOOL)filterMatchesObject:(id)arg1 forTableColumn:(id)arg2;
- (BOOL)stringPassesFilter:(id)arg1;
- (void)reloadObjectsInBrowserView;
- (BOOL)shouldRespondToDataViews;
- (void)reloadObjects;
- (void)reloadClasses;
- (void)validateDataViews:(id)arg1;
- (void)invalidateDataViews;
- (void)updateUserDefaultsForObjectOutlineView;
- (void)toggleOutlineViewColumnVisibilityAction:(id)arg1;
- (id)availableTableColumnsForObjectOutlineView;
- (void)objectContainerDidChange;
- (void)noteObject:(id)arg1 didChangeProperty:(id)arg2 fromValue:(id)arg3;
- (void)openAssociatedProject:(id)arg1;
- (void)setLastNonOutlineMode:(id)arg1;
- (id)lastNonOutlineMode;
- (void)simulate:(id)arg1;
- (void)showNibInfo:(id)arg1;
- (void)doubleClickedObject:(id)arg1;
- (void)filter:(id)arg1;
- (void)cancelFilter:(id)arg1;
- (void)cancelFilterAndFlipBackToObjectMode:(id)arg1;
- (void)clearSearchAndSwitchModeTo:(id)arg1;
- (void)selectColumnViewMode:(id)arg1;
- (void)selectListViewMode:(id)arg1;
- (void)selectIconViewMode:(id)arg1;
- (void)selectTabFromSegmentedControl:(id)arg1;
- (void)switchToUserSelectedViewMode:(id)arg1;
- (void)selectTabWithIdentifier:(id)arg1;
- (void)applyFilter;
- (BOOL)isOutlineFilterInEffect;
- (void)setFilterString:(id)arg1;
- (id)acceptedDragTypes;
- (void)documentOrWindowChanged;
- (BOOL)prepareForDragOperation:(id)arg1;
- (void)draggingEnded:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (void)dragTarget:(id)arg1 didAcceptDraggedObjects:(id)arg2 fromDragInfo:(id)arg3;
- (id)insertedChildrenFromDropOfDragInfo:(id)arg1 onTarget:(id)arg2;
- (long long)indexForDropFromDragInfo:(id)arg1;
- (void)draggingExited:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (id)initialDragImageState:(id)arg1;
- (id)draggedImageState:(id)arg1;
- (id)draggedImageStateForIdentifiedObjects:(id)arg1;
- (void)updateDragTargetIndicatorForObjectIconView:(id)arg1 operation:(unsigned long long)arg2;
- (long long)iconView:(id)arg1 validateDropTargetIndex:(long long)arg2 insertAfter:(char *)arg3;
- (long long)firstLegalTopLevelInsertionIndex;
- (id)springLoadedObjectAtPoint:(struct CGPoint)arg1;
- (BOOL)anyHeaderFiles:(id)arg1;
- (id)dropTargetForDragInfo:(id)arg1 allowedDraggingOperations:(unsigned long long *)arg2;
- (BOOL)dragInfo:(id)arg1 isInsideView:(id)arg2;
- (void)cut:(id)arg1;
- (void)deleteObjectsInIconView:(id)arg1;
- (void)delete:(id)arg1;
- (void)duplicate:(id)arg1;
- (void)pasteExcludingConnections:(id)arg1;
- (void)paste:(id)arg1;
- (void)performPasteExcludingConnections:(BOOL)arg1;
- (id)tellObject:(id)arg1 toAcceptPasteboard:(id)arg2 withContext:(id)arg3 excludingConnections:(BOOL)arg4 selectNewChildren:(BOOL)arg5;
- (void)copy:(id)arg1;
- (id)objectsToCopy;
- (id)objectsAtPoint:(struct CGPoint)arg1;
- (struct CGRect)visibleScreenRectForObject:(id)arg1;
- (struct CGRect)screenRectForObject:(id)arg1;
- (id)currentDocumentView;
- (void)documentWillClose:(id)arg1;
- (void)documentWillSave:(id)arg1;
- (void)setDocument:(id)arg1;
- (id)observedDocumentNotificationInfo;
- (void)stopObservingNotificationInfo:(id)arg1 forDocument:(id)arg2;
- (void)beginObservingNotificationInfo:(id)arg1 forDocument:(id)arg2;
- (id)concreteSelection;
- (BOOL)isObjectAnAbstractConcept:(id)arg1;
- (id)objectPasteboardType;
- (id)unsynchronizedObjectBrowserView;
- (id)synchronizedObjectBrowserView;
- (id)unsynchronizedRootObjectsIconView;
- (id)synchronizedRootObjectsIconView;
- (id)unsynchronizedObjectOutlineView;
- (id)synchronizedObjectOutlineView;
- (BOOL)viewingObjectBrowser;
- (BOOL)viewingObjectOutline;
- (BOOL)viewingObjectIcons;
- (id)objectViewMode;
- (id)tabViewItemForViewIdentifier:(id)arg1;
- (id)objectViewForViewIdentifier:(id)arg1;
- (void)selectionDidChange;
- (void)showWindow:(id)arg1;
- (void)verificationAlertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)presentVerificationWarningIfNeeded;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (id)captionForIdentifiedObject:(id)arg1;
- (BOOL)windowShouldClose:(id)arg1;
- (void)document:(id)arg1 shouldClose:(BOOL)arg2 context:(void *)arg3;
- (void)setWindow:(id)arg1;
- (struct CGRect)windowWillUseStandardFrame:(id)arg1 defaultFrame:(struct CGRect)arg2;
- (struct CGRect)windowFrameForTabViewSize:(struct CGSize)arg1;
- (void)resizeOutlineColumnsViewToBestSize;
- (struct CGSize)bestSizeForOutlineView;
- (struct CGSize)bestSizeForBrowserView;
- (struct CGSize)bestSizeForIconView;
- (void)takePreferredFrame;
- (void)windowDidResize:(id)arg1;
- (void)windowDidMove:(id)arg1;
- (void)projectSynchronizationStatusChanged;
- (id)imageForProjectSyncStatus:(long long)arg1;
- (void)synchronizeWindowTitleWithDocumentName;
- (id)windowTitleForDocumentDisplayName:(id)arg1;
- (void)awakeFromNib;
- (void)windowWillLoad;
- (void)warningsChanged;
- (void)flashProjectStatusMessage:(id)arg1 withImage:(id)arg2 tooltip:(id)arg3 forDuration:(double)arg4;
- (void)layoutProjectStatusSyncMessage;
- (void)projectStatusMessageTimeIsOver:(id)arg1;
- (void)documentManuallyIntegratedHeaderFiles:(id)arg1 withChanges:(id)arg2;
- (id)statusStringForAction:(id)arg1 classes:(id)arg2;
- (id)importFailedImage;
- (id)importSucceededImage;
- (void)configureBrowserView;
- (void)configureOutlineView;
- (void)configureIconView;
- (void)dealloc;
- (void)tearDownDataViews;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IBDocumentWindowOutlineView : NSOutlineView
{
}

- (void)drawRow:(long long)arg1 clipRect:(struct CGRect)arg2;
- (void)viewWillDraw;
- (id)delegate;
- (void)setDelegate:(id)arg1;

@end

@interface IBDocumentationController : NSObject
{
    NSDictionary *docSetBundles;
    IBCFMutableDictionary *docSets;
}

+ (id)sharedInstance;
- (BOOL)runDocumentationAppleScriptWithArguments:(id)arg1;
- (id)openDocumentationScriptPath;
- (BOOL)hasOsascript;
- (void)openPathInXcode:(id)arg1;
- (void)openAppleRefInXcode:(id)arg1;
- (void)openUUIDInXcode:(id)arg1;
- (id)documentationTokenForClassName:(id)arg1 methodOrPropertyName:(id)arg2 withTokenType:(id)arg3 inTargetRuntime:(id)arg4 includeInheritance:(BOOL)arg5;
- (id)documentationTokenForClassName:(id)arg1 methodOrPropertyName:(id)arg2 inTargetRuntime:(id)arg3 includeInheritance:(BOOL)arg4;
- (id)documentationTokenForClassName:(id)arg1 bindingName:(id)arg2 inTargetRuntime:(id)arg3 includeInheritance:(BOOL)arg4;
- (id)documentationTokenForClassName:(id)arg1 inTargetRuntime:(id)arg2 includeInheritance:(BOOL)arg3;
- (id)superClassNameForClassName:(id)arg1;
- (id)docTokensForScope:(id)arg1 token:(id)arg2 tokenType:(id)arg3 language:(id)arg4 matchType:(long long)arg5 inTargetRuntime:(id)arg6;
- (id)docTokensForQuery:(id)arg1 inTargetRuntime:(id)arg2;
- (id)docSets;
- (void)dealloc;
- (id)init;
- (void)registerDocSetsForPlugin:(id)arg1;
- (id)docSetBundles;
- (id)platformDocumentDirectories;
- (id)defaultDocumentationDirectory;

@end

@interface IBDoubleBinder : IBBinder
{
}

- (void)reflectValue:(id)arg1;
- (id)widgetValue;
- (id)defaultValue;

@end

@interface IBDumbIconViewDataSource : NSObject
{
    NSArray *images;
    NSArray *titles;
    NSArray *labelDefinitions;
}

- (id)labelDefintionForObjectAtIndex:(long long)arg1 inIconView:(id)arg2;
- (long long)numberOfObjectsInIconView:(id)arg1;
- (id)imageForObjectAtIndex:(long long)arg1 inIconView:(id)arg2;
- (id)titleForObjectAtIndex:(long long)arg1 inIconView:(id)arg2;
- (id)toolTipForObjectAtIndex:(long long)arg1 inIconView:(id)arg2;
- (void)setTitle:(id)arg1 forIconAtIndex:(long long)arg2 inIconView:(id)arg3;
- (void)dealloc;
- (id)initWithTitles:(id)arg1 images:(id)arg2 andLabelDefinitions:(id)arg3;

@end

@interface IBEditableMenuView : NSView
{
    NSMenu *menu;
    IBSelectionOwner *selectionOwner;
    id previousSelectionOwnerDelegate;
    BOOL managesSelection;
    id drawingDelegate;
}

- (void)sizeToFit;
- (id)cellAtIndex:(long long)arg1;
- (void)setDrawsKeyEquivalentRectForItemAtIndex:(long long)arg1;
- (long long)indexOfItemAtPoint:(struct CGPoint)arg1;
- (struct CGRect)stateImageRectForMenuItemAtIndex:(long long)arg1;
- (struct CGRect)titleRectForMenuItemAtIndex:(long long)arg1;
- (struct CGRect)keyEquivalentRectForMenuItemAtIndex:(long long)arg1;
- (struct CGRect)frameForMenuItemAtIndex:(long long)arg1;
- (BOOL)isHorizontal;
- (void)setMinimumSize:(struct CGSize)arg1;
- (struct CGSize)minimumSize;
- (void)viewWillDraw;
- (void)menuViewDidDraw;
- (void)cycleStateForItemAtIndex:(long long)arg1;
- (void)didSelect:(id)arg1 andDeselect:(id)arg2;
- (void)willSelect:(id)arg1 andDeselect:(id)arg2;
- (id)selectionOwner;
- (void)setSelectionOwner:(id)arg1;
- (void)rebuild;
- (void)setMenuItemAtIndexNeedsDisplay:(long long)arg1;
- (id)menuItemAtIndex:(long long)arg1;
- (void)setManagesSelection:(BOOL)arg1;
- (BOOL)managesSelection;
- (void)setDrawingDelegate:(id)arg1;
- (id)drawingDelegate;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)dealloc;
- (id)copyForDisplayingMenu:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1 andMenu:(id)arg2;

@end

@interface IBEditableWindow : NSWindow
{
}

+ (void)makeWindowEditable:(id)arg1;
- (BOOL)_isIBEditableWindow;
- (BOOL)_containedMenusAreEligibleForKeyEquivalents;
- (BOOL)performKeyEquivalent:(id)arg1;
- (void)_enableEnablingKeyEquivalentForDefaultButtonCell;
- (void)_disableEnablingKeyEquivalentForDefaultButtonCell;
- (BOOL)_addCursorRect:(struct CGRect)arg1 cursor:(id)arg2 forView:(id)arg3;
- (void)reallyResetCursorRects;
- (void)resetCursorRects;
- (void)_setCursorForMouseLocation:(struct CGPoint)arg1;
- (void)sendEvent:(id)arg1;
- (void)reallySendEvent:(id)arg1;
- (void)_endLiveResize;
- (void)_startLiveResize;
- (BOOL)canBecomeMainWindow;
- (BOOL)canBecomeKeyWindow;

@end

@interface IBEditor : NSObject <NSUserInterfaceValidations>
{
    id subElementWindowController;
    id selection;
    id windowController;
    IBDocument *document;
    IBEditor *parentEditor;
    IBEditor *childEditor;
    NSMutableDictionary *selectionMasks;
    id editedObject;
    BOOL showingSelection;
    NSBezierPath *activationHighlightPath;
    BOOL recalculateHighlightPath;
    BOOL draggedObjectsAreInObjectModel;
    NSDictionary *dragSourceContext;
    unsigned long long allowedDragSourceOperations;
    BOOL drawsActivationDarkening;
    IBDecodedPasteboardContext *decodedPasteboardContextCache;
    NSString *decodedPasteboardContextCacheID;
    id orderedSelectionAnchor;
    struct IBEditorExtraStorage *extraStorage;
    id editorReserved5;
    id editorReserved6;
    id editorReserved7;
    id editorReserved8;
}

+ (void)resetCursorRectsForObject:(id)arg1 inWindowController:(id)arg2;
- (id)windowTitleForDocumentDisplayName:(id)arg1;
- (void)editorWindowDidBecomeMain:(id)arg1;
- (void)editorWindowDidResignMain:(id)arg1;
- (void)windowFinishedLiveResizing;
- (void)windowStartedLiveResizing;
- (struct CGSize)preferredSizeForLiveResizeSize:(struct CGSize)arg1;
- (void)setSelectedObjects:(id)arg1;
- (id)selectedObjects;
- (void)setActivationHighlightPath:(id)arg1;
- (id)activationHighlightPath;
- (id)calculateActivationHighlightPath;
- (void)setShowingSelection:(BOOL)arg1;
- (BOOL)isShowingSelection;
- (void)refreshSubElementExposer;
- (id)subElementsForObject:(id)arg1;
- (void)closeSubElementExposer;
- (void)resetCursorRects;
- (id)cachedDecodedPasteboardContextForDraggingInfo:(id)arg1 targetingObject:(id)arg2 pasteboardType:(id)arg3 insertionContext:(id)arg4;
- (void)failToAcceptDragInfo:(id)arg1;
- (id)acceptDragInfo:(id)arg1;
- (BOOL)prepareToAcceptDragInfo:(id)arg1;
- (id)selectDragDestination:(id)arg1;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (BOOL)canSizeSelectionToFit;
- (void)sizeSelectionToFit:(id)arg1;
- (BOOL)canSizeObjectToFit:(id)arg1;
- (void)unembedObjects:(id)arg1;
- (void)embedObjects:(id)arg1;
- (BOOL)selectsNextObjectAfterDeletionFromRelationship:(id)arg1;
- (id)tellObjectToAcceptContentsOfPasteboard:(id)arg1 excludeConnections:(BOOL)arg2 selectNewObjects:(BOOL)arg3;
- (void)customizePasteboardInsertionContext:(id)arg1 fromPasteboard:(id)arg2 andDraggingInfo:(id)arg3;
- (id)calculatePasteboardInsertionContextFromPasteboard:(id)arg1;
- (id)calculatePasteboardInsertionContextFromDraggingInfo:(id)arg1;
- (id)calculatePasteboardInsertionContextFromDraggingInfo:(id)arg1 orPasteboard:(id)arg2;
- (BOOL)wantsDefaultDragInsertionIndicatorForDragInfo:(id)arg1;
- (void)selectNone:(id)arg1;
- (void)selectAll:(id)arg1;
- (void)pasteAttributes:(id)arg1;
- (void)performDuplicate:(id)arg1;
- (void)performDelete:(id)arg1;
- (void)performPasteExcludingConnections:(id)arg1;
- (void)performPaste:(id)arg1;
- (void)performCopy:(id)arg1;
- (void)performCut:(id)arg1;
- (void)removeSelectedObjectsAndGuessNextSelection:(BOOL)arg1;
- (id)objectToSelectAfterDeletingObjects:(id)arg1;
- (BOOL)acceptAttributesFromPasteboard:(id)arg1;
- (BOOL)canAcceptAttributesFromPasteboard:(id)arg1;
- (id)pasteAttributesTargets;
- (id)parentEditor;
- (void)documentDidSave;
- (void)documentWillSave;
- (unsigned long long)dragObjects:(id)arg1 withImage:(id)arg2 inMouseDownEvent:(id)arg3 mouseDraggedEvent:(id)arg4 imageLocation:(struct CGPoint)arg5 allowedOperations:(unsigned long long)arg6 dragContext:(id)arg7;
- (void)customizeDraggingPasteboard:(id)arg1 draggingContext:(id)arg2;
- (void)draggedImage:(id)arg1 endedAt:(struct CGPoint)arg2 operation:(unsigned long long)arg3;
- (void)draggedImage:(id)arg1 movedTo:(struct CGPoint)arg2 operation:(unsigned long long)arg3 previousOperation:(unsigned long long)arg4;
- (void)updateAttachmentStateForDragOperation:(unsigned long long)arg1 final:(BOOL)arg2;
- (void)detachDraggedObjects:(id)arg1 dragContext:(id)arg2;
- (void)reattachDraggedObjects:(id)arg1 dragContext:(id)arg2;
- (unsigned long long)draggingSourceOperationMaskForLocal:(BOOL)arg1;
- (id)editorWindowController;
- (id)windowController;
- (struct CGRect)titleRectForEditingContext:(void *)arg1 userInfo:(id)arg2;
- (BOOL)stringEditingContextForEvent:(id)arg1 context:(void **)arg2 userInfo:(id *)arg3;
- (void)growToFitAfterStringEditing:(void *)arg1 userInfo:(id)arg2;
- (void)configureFieldEditor:(id)arg1 userInfo:(id)arg2;
- (void)configureFieldEditor:(id)arg1 context:(void *)arg2 userInfo:(id)arg3;
- (void)stringDidEndEditing:(id)arg1 withTextMovement:(long long)arg2 userInfo:(id)arg3 andContext:(void *)arg4;
- (void)stringEditorView:(id)arg1 didEndEditingWithTextMovement:(long long)arg2 userInfo:(id)arg3;
- (void)editStringValue:(id)arg1 context:(void *)arg2 userInfo:(id)arg3 configureLikeCell:(id)arg4;
- (void)restoreEditorState:(id)arg1;
- (id)captureEditorState;
- (void)noteDescendant:(id)arg1 didChangeProperty:(id)arg2 fromValue:(id)arg3;
- (void)noteAncestor:(id)arg1 didChangeProperty:(id)arg2 fromValue:(id)arg3;
- (void)synchronizeFieldEditorPlacement;
- (id)editorView;
- (id)window;
- (BOOL)shouldCloseWithEvent:(id)arg1;
- (BOOL)interceptEvent:(id)arg1;
- (id)validatedOrderedSelectionAnchor;
- (void)setOrderedSelectionAnchor:(id)arg1;
- (id)orderedSelectionAnchor;
- (id)orderedSelectionCandiateLists;
- (id)children;
- (id)view;
- (id)selectedColorsForColorPanel;
- (id)selectedFontsForFontPanel;
- (long long)numberOfSelectedObjects;
- (void)changeColor:(id)arg1;
- (void)changeFont:(id)arg1;
- (id)targetsForFloatingPanels;
- (BOOL)isClosing;
- (void)didClose;
- (void)willClose;
- (void)didOpen;
- (void)didDeactivate;
- (void)didActivate;
- (void)deactivate;
- (void)activate;
- (void)willEditChild:(id)arg1 inWindowController:(id)arg2;
- (BOOL)isSimulatingSheet;
- (id)document;
- (id)object;
- (id)editedObject;
- (id)childEditor;
- (void)close;
- (void)setChildEditor:(id)arg1;
- (void)dealloc;
- (id)initWithEditedObject:(id)arg1 parentEditor:(id)arg2 windowController:(id)arg3;
- (void)didSelect:(id)arg1 andDeselect:(id)arg2;
- (void)willSelect:(id)arg1 andDeselect:(id)arg2;
- (id)selectionOwner;
- (BOOL)selectionContainsObject:(id)arg1;
- (long long)numberOfSelectedObjects;
- (void)clearSelection;
- (void)deselectObjects:(id)arg1;
- (void)deselectObject:(id)arg1;
- (void)selectObjects:(id)arg1 withEvent:(id)arg2;
- (void)selectObject:(id)arg1 withEvent:(id)arg2;
- (void)selectObject:(id)arg1 byExtending:(BOOL)arg2 andToggling:(BOOL)arg3;
- (void)selectObjects:(id)arg1 byExtending:(BOOL)arg2 andToggling:(BOOL)arg3;
- (void)selectObjects:(id)arg1;
- (void)selectObject:(id)arg1;
- (id)selectedObjectsInRelationship:(id)arg1;
- (id)orderedSelectedObjects;
- (id)selection;
- (void)drawDragAndDropInsertionHints;
- (void)drawOverlay;
- (void)willDrawOverlay;
- (void)drawActivationDarkening;
- (void)editorWindowScrollViewDidScroll:(id)arg1;
- (void)drawSelection;
- (void)drawSubelements;
- (void)drawHighlightForObject:(id)arg1;
- (struct CGRect)windowClippingRectForHighlightingObject:(id)arg1;
- (id)buildHighlightMaskForObject:(id)arg1;
- (id)highlightColorForObject:(id)arg1;
- (void)clipToView:(id)arg1 inset:(struct CGSize)arg2;
- (id)overlayView;
- (void)invalidateAllSelectionMasks;
- (void)invalidateSelectionMaskForObject:(id)arg1;
- (void)invalidateHighlightPath;
- (void)setSelectionMask:(id)arg1 forObject:(id)arg2;
- (id)selectionMaskForObject:(id)arg1;
- (void)setDecorationsNeedDisplayForObject:(id)arg1;
- (void)setOverlayNeedsDisplayInRect:(struct CGRect)arg1;
- (void)setOverlayNeedsDisplay:(BOOL)arg1;
- (void)setDrawsActivationDarkening:(BOOL)arg1;
- (BOOL)drawsActivationDarkening;
- (struct CGSize)decorationOutsetForChild:(id)arg1;
- (struct CGRect)insertionPolicyConfinementRect:(id)arg1;
- (struct CGRect)insertionPolicy:(id)arg1 dragAlignmentRectForObject:(id)arg2;

@end

@interface IBEditorClipView : NSClipView
{
    BOOL sizesDocumentViewToFill;
}

+ (id)clipViewForWrappingEditor;
@property BOOL sizesDocumentViewToFill; // @synthesize sizesDocumentViewToFill;
- (void)resizeSubviewsWithOldSize:(struct CGSize)arg1;
- (void)setFrameSize:(struct CGSize)arg1;
- (struct CGPoint)constrainScrollPoint:(struct CGPoint)arg1;
- (struct CGRect)boundsForCenteringDocumentView;

@end

@interface IBEditorManager : NSObject
{
    IBCFMutableDictionary *editorStacks;
    IBDocument *document;
    NSMutableSet *stacksBeingModified;
}

- (id)description;
- (void)noteObject:(id)arg1 didChangeProperty:(id)arg2 fromValue:(id)arg3;
- (void)rebuildEditorStackForRootEditor:(id)arg1;
- (void)editorWindowWillClose:(id)arg1;
- (void)noteWillRemoveObject:(id)arg1;
- (id)editorForObject:(id)arg1;
- (void)closeEditorStackForRootObject:(id)arg1;
- (id)openEditorForObject:(id)arg1 closingSubEditors:(BOOL)arg2 makeKey:(BOOL)arg3;
- (void)crashBecauseExceptionWasRaised:(id)arg1;
- (void)notifyWindowControllersOfPendingStackChange:(id)arg1;
- (id)activeEditors;
- (id)createWindowControllerForObject:(id)arg1;
- (void)closeEditorInStack:(id)arg1;
- (id)editorStackForObject:(id)arg1;
- (void)dealloc;
- (id)initWithDocument:(id)arg1;

@end

@interface IBEditorScrollView : NSScrollView
{
}

+ (id)scrollViewForWrappingEditor;
- (id)contentView;

@end

@interface IBEditorWindowController : IBWindowController
{
    id editedObject;
    IBFieldEditor *fieldEditor;
    IBEditor *activeEditor;
    NSEvent *lastMouseDown;
    NSEvent *lastMouseUp;
    IBHitDetectionMap *cursorMap;
    IBHitDetectionMap *decoratorActionMap;
    IBMenuValidationProxy *validationProxy;
    IBNavigationMenuController *navigationMenuController;
    id lastObjectSelectedWithModifedClick;
    BOOL blockMouseEventsTillMouseUp;
    BOOL trackingWindowGeometry;
    BOOL actuallyTrackedWindowGeometry;
    BOOL isLiveResizing;
    BOOL cursorRectsArePendingValidation;
    BOOL shouldSelectDeepestObjectOnNextMouseUp;
    BOOL shouldPruneToSingleSelectionOnNextMouseUp;
    NSWindow *mainWindowBeforeLastMouseDown;
    BOOL wasMainWindowBeforeProcessingEvent;
    BOOL wasMainWindowBeforeLastMouseDown;
    BOOL inDragOperation;
    BOOL editorDidAcceptDragInfo;
    BOOL didOpen;
    IBEditorScrollView *editorViewManagingScrollView;
}

- (void)showSelectionMenuForEvent:(id)arg1;
- (id)navigationMenuController;
- (void)invalidateCursorRects;
- (void)unscheduleCursorRectValidation;
- (void)validateCursorRects:(id)arg1;
- (void)addDecoratorActionRect:(struct CGRect)arg1 forEditor:(id)arg2;
- (void)addDecoratorActionRect:(struct CGRect)arg1 withOrderingKey:(id)arg2;
- (void)addCursorRect:(struct CGRect)arg1 cursor:(id)arg2 forObject:(id)arg3;
- (void)userAddCursorRect:(struct CGRect)arg1 cursor:(id)arg2 forView:(id)arg3;
- (void)resetCursorRects;
- (void)rebuildCursorRects;
- (void)flagsChanged:(id)arg1;
- (void)forwardEvent:(id)arg1;
- (BOOL)interceptEvent:(id)arg1;
- (BOOL)isWindowAnAncestorOfOrItselfTheMainWindow;
- (id)mainWindowBeforeLastMouseDown;
- (void)setMainWindowBeforeLastMouseDown:(id)arg1;
- (BOOL)actionAreaInterceptedEvent:(id)arg1;
- (BOOL)interceptDecoratorActionEvent:(id)arg1;
- (void)cursorUpdate:(id)arg1;
- (void)cursorUpdateWithPoint:(struct CGPoint)arg1;
- (BOOL)shouldInterceptEvent:(id)arg1 eventWasForWindow:(char *)arg2;
- (void)openEditorWithMouseEvent:(id)arg1;
- (void)selectNextObjectWithEvent:(id)arg1;
- (BOOL)wouldObjectSelect:(id)arg1 onLeftMouseDownWithModifierFlags:(unsigned long long)arg2;
- (void)openEditorWithSingleMouseDown:(id)arg1;
- (CDStruct_7610d3a3)activationActionForClickObject:(id)arg1 withModifierFlags:(unsigned long long)arg2 isRightMouse:(BOOL)arg3;
- (id)intendedTargetInCurrentContextStartingFromObject:(id)arg1;
- (void)openEditorWithDoubleLeftMouseDown:(id)arg1;
- (id)firstInitiallySelectableObjectAtOrAbove:(id)arg1;
- (id)openedEditorForObject:(id)arg1;
- (id)windowTitleForDocumentDisplayName:(id)arg1;
- (BOOL)openEditorWithKeyEvent:(id)arg1;
- (id)nextTabTargetRelativeToObject:(id)arg1 forEvent:(id)arg2;
- (id)tabOrderedChidren;
- (BOOL)isEventForFieldEditor:(id)arg1;
- (BOOL)isEventForWindow:(id)arg1;
- (BOOL)isPointInScrollArea:(struct CGPoint)arg1;
- (BOOL)isPointInEditableArea:(struct CGPoint)arg1;
- (BOOL)isPointInToolbar:(struct CGPoint)arg1;
- (BOOL)isPointInContentArea:(struct CGPoint)arg1;
- (id)themeView;
- (void)windowWillClose:(id)arg1;
- (void)windowFinishedLiveResizing;
- (void)windowStartedLiveResizing;
- (BOOL)windowShouldZoom:(id)arg1 toFrame:(struct CGRect)arg2;
- (id)transformToWindowSpaceFromTransformToUserSpace:(id)arg1;
- (id)transformToUserSpaceFromTransformToWindowSpace:(id)arg1;
- (void)draggingEnded:(id)arg1;
- (void)concludeDragOperation:(id)arg1;
- (void)dragTarget:(id)arg1 didAcceptDraggedObjects:(id)arg2 fromDragInfo:(id)arg3;
- (id)dropTargetForDragInfo:(id)arg1 allowedDraggingOperations:(unsigned long long *)arg2;
- (BOOL)shouldBlockDragsUntilHoldFromDragginEntered;
- (BOOL)performDragOperation:(id)arg1;
- (void)draggingExited:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (void)setLastDragTarget:(id)arg1 fromDraggingInfo:(id)arg2;
- (void)setInDragOperation:(BOOL)arg1;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (void)duplicate:(id)arg1;
- (void)pasteExcludingConnections:(id)arg1;
- (void)paste:(id)arg1;
- (void)copy:(id)arg1;
- (void)cut:(id)arg1;
- (void)delete:(id)arg1;
- (BOOL)isObjectRemovalValid;
- (id)pasteTarget;
- (id)cutCopyDeleteDuplicateTarget;
- (void)selectNone:(id)arg1;
- (void)changeColor:(id)arg1;
- (void)changeFont:(id)arg1;
- (void)tellEditorsViewWillDraw;
- (void)drawEditorStack;
- (void)tellEditorViewWillDraw:(id)arg1;
- (void)drawEditorStack:(id)arg1;
- (void)trackMeasurementsWithEvent:(id)arg1 atPoint:(struct CGPoint)arg2;
- (void)toggleMeasurementLinesFromObjects:(id)arg1 toObject:(id)arg2 withEvent:(id)arg3;
- (void)makeSureOverlayIsOnTop;
- (void)stringEditorView:(id)arg1 didEndEditing:(id)arg2;
- (void)editStringValue:(id)arg1 forEditor:(id)arg2 inView:(id)arg3 withCell:(id)arg4 inRect:(struct CGRect)arg5 userInfo:(id)arg6;
- (void)configureFieldEditor:(id)arg1 forEditingStringValue:(id)arg2 forEditor:(id)arg3 inView:(id)arg4 withCell:(id)arg5 inRect:(struct CGRect)arg6 userInfo:(id)arg7;
- (id)currentlyOpenFieldEditorForEditor:(id)arg1 userInfo:(id *)arg2;
- (void)noteDescendant:(id)arg1 didChangeProperty:(id)arg2 fromValue:(id)arg3;
- (void)closeFieldEditor;
- (void)cascade;
- (void)windowDidMove:(id)arg1;
- (void)windowDidResize:(id)arg1;
- (void)windowDidBecomeMain:(id)arg1;
- (void)windowDidResignMain:(id)arg1;
- (void)willClose;
- (void)didOpen;
- (void)deactivate;
- (void)activate;
- (void)willChangeEditorStack;
- (void)selectPreviousSibling:(id)arg1;
- (void)selectNextSibling:(id)arg1;
- (void)selectChild:(id)arg1;
- (void)selectParent:(id)arg1;
- (BOOL)canSelectSibling;
- (BOOL)canSelectChild;
- (BOOL)canSelectParent;
- (void)selectionDidChange;
- (id)connectionEndPointsForEvent:(id)arg1;
- (id)springLoadedObjectAtPoint:(struct CGPoint)arg1;
- (void)setDocumentEdited:(BOOL)arg1;
- (void)deselectObjects:(id)arg1;
- (id)editors;
- (id)editedObjects;
- (id)selection;
- (void)setWindow:(id)arg1;
- (void)setDocument:(id)arg1;
- (id)overlayView;
- (BOOL)shouldUpdateColorPanel;
- (id)selectedColorsForColorPanel;
- (id)selectedFontsForFontPanel;
- (id)lastMouseUp;
- (void)setLastMouseUp:(id)arg1;
- (id)lastMouseDown;
- (void)setLastMouseDown:(id)arg1;
- (id)editorView;
- (void)setActiveEditor:(id)arg1;
- (id)baseEditor;
- (id)activeEditor;
- (id)objects;
- (BOOL)wouldEditObject:(id)arg1;
- (id)editedObject;
- (BOOL)isLiveResizing;
@property(retain) IBEditorScrollView *editorViewManagingScrollView; // @dynamic editorViewManagingScrollView;
- (void)setLastObjectSelectedWithModifedClick:(id)arg1;
- (id)lastObjectSelectedWithModifedClick;
- (void)dealloc;
- (id)initWithWindow:(id)arg1 andObject:(id)arg2;

@end

@interface IBEmbeddingPolicy : NSObject
{
    long long tag;
}

+ (id)embeddingPolicyForTag:(long long)arg1;
+ (id)embeddingPolicies;
+ (void)registerEmbeddingPolicy:(id)arg1;
+ (void)initialize;
- (id)presentationGroupingKey;
- (BOOL)canEmbedObjects:(id)arg1 fromDocument:(id)arg2;
- (id)embedObjects:(id)arg1 fromDocument:(id)arg2;
- (long long)tag;
- (id)containerName;
- (id)targetRuntime;

@end

@interface IBFieldEditor : NSView <IBFieldEditorTextViewDelegate, NSTextViewDelegate>
{
    NSAttributedString *initialValue;
    IBFieldEditorTextView *textEditor;
    NSView *editedView;
    struct CGRect originalTitleRect;
    struct CGRect textFrame;
    struct CGSize minSize;
    struct CGSize maxSize;
    struct CGSize previousSize;
    struct CGPoint anchorPoint;
    id delegate;
    id editCell;
    id userInfo;
    struct _sevFlags {
        unsigned int bordered:1;
        unsigned int growsToFitBounds:1;
        unsigned int constrainedToOneLine:1;
        unsigned int usesRuler:1;
        unsigned int usesFontPanel:1;
        unsigned int isRichText:1;
        unsigned int wasCancelled:1;
        unsigned int attributesDidChange:1;
        unsigned int reserved:24;
    } sevFlags;
}

- (void)textViewDidChangeFont:(id)arg1;
- (void)textViewWillChangeFont:(id)arg1;
- (void)textViewDidChangeAttributes:(id)arg1;
- (void)textDidEndEditing:(id)arg1;
- (void)textDidChange:(id)arg1;
- (void)textFrameDidChange:(id)arg1;
- (void)resizeToFitText;
- (void)adaptToMovedTitleRectangle:(struct CGRect)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)viewWillDraw;
- (struct CGRect)clipFrameWithFrame:(struct CGRect)arg1;
- (struct CGSize)maxSizeForRect:(struct CGRect)arg1 inBounds:(struct CGRect)arg2;
- (void)editInRect:(struct CGRect)arg1 ofView:(id)arg2 contextView:(id)arg3;
- (void)edit:(BOOL)arg1;
- (struct CGRect)alignedRectWithSize:(struct CGSize)arg1;
- (void)endEditing;
- (void)cancelOperation:(id)arg1;
- (void)cancelEditing;
- (void)editInRect:(struct CGRect)arg1 ofView:(id)arg2;
- (void)mouseDown:(id)arg1;
- (BOOL)attributesDidChange;
- (BOOL)editingWasCancelled;
- (struct CGRect)textFrame;
- (void)setWraps:(BOOL)arg1;
- (BOOL)wraps;
- (void)setLineFragmentPadding:(double)arg1;
- (double)lineFragmentPadding;
- (void)setMaximumSize:(struct CGSize)arg1;
- (struct CGSize)maximumSize;
- (void)setMinimumSize:(struct CGSize)arg1;
- (struct CGSize)minimumSize;
- (void)setEditor:(id)arg1;
- (id)editor;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)setUsesFontPanel:(BOOL)arg1;
- (BOOL)usesFontPanel;
- (id)initialValue;
- (void)setInitialValue:(id)arg1;
- (void)setUsesRuler:(BOOL)arg1;
- (BOOL)usesRuler;
- (void)setConstrainedToOneLine:(BOOL)arg1;
- (BOOL)isConstrainedToOneLine;
- (void)setGrowsToFitBounds:(BOOL)arg1;
- (BOOL)growsToFitBounds;
- (void)setImportsGraphics:(BOOL)arg1;
- (BOOL)importsGraphics;
- (void)setRichText:(BOOL)arg1;
- (BOOL)isRichText;
- (void)setAllowsEditingTextAttributes:(BOOL)arg1;
- (BOOL)allowsEditingTextAttributes;
- (void)setAttributedStringValue:(id)arg1;
- (id)attributedStringValue;
- (void)setStringValue:(id)arg1;
- (id)stringValue;
- (void)setBordered:(BOOL)arg1;
- (BOOL)isBordered;
- (void)setAlignment:(unsigned long long)arg1;
- (unsigned long long)alignment;
- (void)setFont:(id)arg1;
- (id)font;
- (BOOL)isFlipped;
- (void)setUserInfo:(id)arg1;
- (id)userInfo;
- (void)finalize;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IBFieldEditorTextView : NSTextView
{
}

- (void)changeFont:(id)arg1;
- (void)changeAttributes:(id)arg1;
- (id)delegate;
- (void)setDelegate:(id)arg1;

@end

@interface IBFileInfoController : NSObject <IBDocumentInfoController>
{
    IBDocument *document;
    NSView *infoView;
    NSTextField *fileTypeTextField;
    NSTextField *projectNameTextField;
    NSTextField *projectFolderTextField;
    NSPopUpButton *accessControlPopUp;
    BOOL alreadyStoppedObserving;
}

- (void)resetDefaultPropertyAccessControl:(id)arg1;
- (void)selectNewDefaultPropertyAccessControl:(id)arg1;
- (id)objectsAtPoint:(struct CGPoint)arg1;
- (void)deselectObjects:(id)arg1;
- (id)selectedObjects;
- (id)infoView;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)refresh;
- (void)dealloc;
- (void)willClose;
- (id)initWithDocument:(id)arg1;

@end

@interface IBFillView : NSView
{
    NSColor *fillColor;
    NSColor *borderColor;
    double cornerRadius;
    long long enabledEdgesMask;
    BOOL cachedOpaque;
}

- (void)setEnabledEdgesMask:(long long)arg1;
- (long long)enabledEdgesMask;
- (void)setCornerRadius:(double)arg1;
- (double)cornerRadius;
- (id)borderColor;
- (void)setBorderColor:(id)arg1;
- (id)fillColor;
- (void)setFillColor:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (BOOL)isOpaque;
- (void)recacheOpaque;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface IBFirstResponderActionRelationController : IBLibraryClassRelationController
{
}

- (id)label;
- (void)setInspectedClassName:(id)arg1;
- (id)inspectedClassName;

@end

@interface IBFirstResponderActionRelationInspector : IBActionRelationInspector
{
}

- (id)label;
- (void)setInspectedClassName:(id)arg1;
- (id)inspectedClassName;

@end

@interface IBFirstResponderDrawingStrategy : NSObject
{
    NSView *view;
    BOOL viewIsFirstResponder;
    BOOL windowIsKey;
}

- (void)viewWillMoveToWindow:(id)arg1;
- (void)windowDidChangeKeyStatus:(id)arg1;
- (void)resignedFirstResponder;
- (void)becameFirstResponder;
- (BOOL)viewSouldDrawLikeFirstResponder;
- (void)setWindowIsKey:(BOOL)arg1;
- (void)setViewIsFirstResponder:(BOOL)arg1;
- (void)dispose;
- (void)finishObservingWindow:(id)arg1;
- (void)beginObservingWindow:(id)arg1;
- (void)dealloc;
- (id)initWithView:(id)arg1;

@end

@interface IBFlippedCustomView : NSCustomView
{
}

- (BOOL)isFlipped;
- (id)ibDesignableContentView;

@end

@interface IBFlippedView : NSView
{
}

- (BOOL)isFlipped;

@end

@interface IBHUDCollapsableView : IBCollapsableView
{
}

+ (id)collapsableViewWithTitle:(id)arg1 andContentView:(id)arg2;
+ (id)disclosureButtonIconContent:(BOOL)arg1;
+ (struct CGRect)iconBounds;
+ (struct CGRect)buttonBounds;
+ (struct CGSize)buttonSize;
- (void)applyInterfaceState:(id)arg1;
- (id)captureInterfaceState;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)setExpanded:(BOOL)arg1;
- (void)refreshButtons;
- (id)titleView;
- (id)initWithContentView:(id)arg1 andTitleView:(id)arg2;

@end

@interface IBHUDConnectionPredecessorsView : IBAutoLayoutView
{
    NSArray *predecessorDisplayValues;
    NSMutableArray *predecessors;
    NSSet *objectsThatTriggerRebuild;
    BOOL cachedPredecessorRects;
    BOOL cachedPredecessorSubrowRects;
    BOOL cachedPredecessorAttributedDisplayValues;
    BOOL expanded;
    BOOL allowsEstablishingNewConnections;
    NSString *warningMessage;
    double expandedWidth;
    IBSlateBezierButton *collapseButton;
    IBSlateBezierButton *connectionButton;
    IBSlateBezierButton *refocusButton;
    NSMutableArray *disconnectButtons;
    IBConnection *prototype;
    IBDocument *document;
    NSString *reasonForDisallowingNewConnections;
    id delegate;
    IBConnectionInterfaceStyle *connectionInterfaceStyle;
    IBPredecessorDisplayValue *selectedDisplayValue;
}

- (void)beginConnecting:(id)arg1;
- (void)connectRolledOver:(id)arg1;
- (id)setupLineView;
- (void)drawRect:(struct CGRect)arg1;
- (void)refocusHUDOnSelection:(id)arg1;
- (void)toggleExpansion:(id)arg1;
- (void)diconnectPredecessor:(id)arg1;
- (void)predecessorsChanged;
- (void)diconnectRolledOver:(id)arg1;
- (void)mouseDown:(id)arg1;
- (id)toolTipForPoint:(struct CGPoint)arg1 clipRect:(struct CGRect *)arg2;
- (void)refreshDisconnectButtons;
- (id)makeDisconnectButtonForPredecessorDisplayValue:(id)arg1;
- (void)refreshRefocusButton;
- (void)refocusButtonRolledOver:(id)arg1;
- (void)refreshDisconnectButton:(id)arg1 withRollOverState:(BOOL)arg2;
- (void)removeDisconnectButtons;
- (void)refreshCollapseButton;
- (void)refreshConnectionButton;
- (BOOL)showsPlusConnectPath;
- (void)layout;
- (id)predecessorDisplayValueAtPoint:(struct CGPoint)arg1;
- (id)predecessorDisplayValueForPredecessor:(id)arg1;
- (struct CGRect)refocusButtonRect;
- (struct CGRect)collapseButtonRect;
- (struct CGRect)connectionButtonRect;
- (struct CGSize)desiredSize;
- (struct CGSize)collapsedSize;
- (struct CGSize)expandedSize;
- (struct CGRect)frameForDisconnectButtonInPredecessorDisplayValue:(id)arg1;
- (struct CGRect)frameForDisconnectButtonInPredecessorRect:(struct CGRect)arg1;
- (struct CGRect)titleRectForPredecessorDisplayValue:(id)arg1 subValueIndex:(long long)arg2;
- (struct CGRect)highlightRectForSelectedPredecessorDisplayValue;
- (struct CGRect)highlightRectForPredecessorDisplayValue:(id)arg1;
- (struct CGRect)wholeRectForPredecessorDisplayValue:(id)arg1;
- (struct CGRect)rectForPredecessorDisplayValue:(id)arg1 subValueIndex:(long long)arg2;
- (struct CGRect)firstDisplayRectOfFirstPredecessorRect;
- (struct CGRect)utilityButtonIconBounds;
- (struct CGRect)collapseIconBounds;
- (struct CGRect)disconnectIconBounds;
- (struct CGRect)connectWarningIconBounds;
- (struct CGRect)connectIconBounds;
- (struct CGRect)utilityButtonBounds;
- (struct CGRect)collapseButtonBounds;
- (struct CGRect)disconnectButtonBounds;
- (struct CGRect)connectButtonBounds;
- (id)attributedTitleForPredecessorDisplayValue:(id)arg1 subValueIndex:(long long)arg2;
- (id)displayedWarningsForPredecessor:(id)arg1;
- (BOOL)isSelected;
- (void)setSelectedPredecessor:(id)arg1 withEndPoint:(id)arg2;
- (id)selectedPredecessor;
- (id)mapPredecessor:(id)arg1 toDisplayValueWithEndPoint:(id)arg2;
- (id)headerView;
- (BOOL)isHUDStyle;
- (id)connectionInterfaceStyle;
- (void)applyInterfaceState:(id)arg1;
- (id)captureInterfaceState;
- (id)predecessors;
- (id)prototype;
- (void)setDelegate:(id)arg1;
- (void)setExpanded:(BOOL)arg1;
- (BOOL)isExpanded;
- (id)document;
- (BOOL)isFlipped;
- (void)setFrameSize:(struct CGSize)arg1;
- (BOOL)hasAnyPredecessorDisplayValues;
- (BOOL)hasSinglePredecessorDisplayValue;
- (BOOL)hasMultiplePredecessorDisplayValues;
- (long long)numberOfPredecessorDisplayValues;
- (id)predecessorDisplayValuesForDisplayValue:(id)arg1;
- (BOOL)canHaveMultiplePredecessors;
- (id)reasonForDisallowingNewConnections;
- (void)setReasonForDisallowingNewConnections:(id)arg1;
- (void)setAllowsEstablishingNewConnections:(BOOL)arg1;
- (BOOL)allowsEstablishingNewConnections;
- (void)setWarningMessage:(id)arg1;
- (id)warningMessage;
- (id)predecessorDisplayValues;
- (void)documentDidRemoveObject:(id)arg1;
- (void)documentDidAddObject:(id)arg1;
- (BOOL)needsRevalidation;
- (void)documentDidRemoveConnection:(id)arg1;
- (void)documentDidAddConnection:(id)arg1;
- (void)documentWillClose:(id)arg1;
- (void)clearDocumentReference;
- (void)dealloc;
- (id)initWithPredecessors:(id)arg1 andPrototype:(id)arg2 forDocument:(id)arg3 connectionInterfaceStyle:(id)arg4;
- (id)refocusButtonContentRolledOver;
- (id)refocusButtonContentNormal;
- (id)disconnectButtonIconContentRolledOver:(BOOL)arg1;
- (id)warningConnectionButtonIconContent;
- (id)warningConnectionButtonIconContent:(struct CGRect)arg1;
- (id)normalConnectionButtonIconContentWithPath:(id)arg1;
- (id)disabledConnectionButtonIconContentWithPath:(id)arg1;
- (id)collapseIconContentExpanded:(BOOL)arg1;

@end

@interface IBHUDConnectionView : IBAutoLayoutView
{
    IBConnectionInterfaceStyle *connectionInterfaceStyle;
    long long cancelationToken;
    IBHUDConnectionPredecessorsView *predecessorView;
    IBConnection *prototype;
    double titleWidth;
    BOOL mouseOverTitle;
    IBDocument *document;
    IBPredecessorDisplayValue *mouseOverPredecessorDisplayValue;
    IBPredecessorDisplayValue *pressedPredecessorDisplayValue;
    NSString *matchedString;
}

- (void)applyInterfaceState:(id)arg1;
- (id)captureInterfaceState;
- (id)captureInterfaceStateIdentifer;
- (double)actualTitleWidth;
- (double)titleWidth;
- (void)setTitleWidth:(double)arg1;
- (id)connectionInterfaceStyle;
- (void)predecessorsViewDidChangeConnections:(id)arg1;
- (void)predecessorsViewDidToggleExpansion:(id)arg1;
- (id)toolTipManager:(id)arg1 toolTipForView:(id)arg2 location:(struct CGPoint)arg3 tipSourceRect:(struct CGRect *)arg4;
- (BOOL)truncationWillBeNeededForTitle;
- (id)tooltipAttributes;
- (void)globalMouseMoved:(id)arg1;
- (void)mouseUp:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)setPressedPredecessorDisplayValue:(id)arg1;
- (id)pressedPredecessorDisplayValue;
- (void)cancelIdentifiers;
- (void)setMouseOverTitle:(BOOL)arg1;
- (void)setMouseOverPredecessorDisplayValue:(id)arg1;
- (id)endPointForPredecessor:(id)arg1;
- (id)document;
- (void)drawRect:(struct CGRect)arg1;
- (id)linkPath;
- (id)effectiveStrokeColorForTitleBubble;
- (id)effectiveFillColorForTitleBubble;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)layout;
- (struct CGSize)minSize;
- (struct CGRect)predecessorRect;
- (struct CGRect)predecessorRectForBoundsSize:(struct CGSize)arg1;
- (struct CGRect)textRect;
- (void)setMatchedStringInTitle:(id)arg1;
- (id)matchedStringInTitle;
- (struct CGRect)titleRect;
- (id)attributedTitle;
- (id)matchAttributes;
- (id)titleAttributes;
- (id)title;
- (id)reasonForDisallowingNewConnections;
- (void)setReasonForDisallowingNewConnections:(id)arg1;
- (void)setAllowsEstablishingNewConnections:(BOOL)arg1;
- (BOOL)allowsEstablishingNewConnections;
- (void)setWarningMessage:(id)arg1;
- (id)warningMessage;
- (id)predecessors;
- (id)prototype;
- (id)headerView;
- (BOOL)isHUDStyle;
- (void)documentWillClose:(id)arg1;
- (void)clearDocumentReference;
- (void)dealloc;
- (id)initWithPrototype:(id)arg1 andPredecessors:(id)arg2 forDocument:(id)arg3 connectionInterfaceStyle:(id)arg4;

@end

@interface IBHUDHeaderView : IBAutoLayoutView
{
    IBSlateBezierButton *forwardButton;
    IBSlateBezierButton *closeButton;
    IBSlateBezierButton *backButton;
    IBSlatePopUpButton *sourcePopUp;
    IBSlateScrollView *scrollView;
    IBPathControl *pathControl;
    NSView *documentView;
    NSArray *contentViews;
    NSArray *contentTitles;
    NSArray *contentSources;
    double contentWidth;
    double maxContentHeight;
    NSEvent *lastMouseDown;
    IBDocument *document;
    NSMutableSet *invalidClasses;
    IBInvalidationPolicy *contentViewInvalidationPolicy;
    IBConnection *connectionToRefocusOnAfterValidating;
    BOOL predecessorsRequestedInvalidation;
    BOOL predecessorsRequestedConditionalInvalidation;
    id delegate;
    NSMutableArray *historyBack;
    NSMutableArray *historyForward;
    id historyCurrent;
    id highlightedObject;
    IBHUDConnectionPredecessorsView *selectedPredecessorView;
    id selectedObject;
    DTTypeCompletionHandler *typeCompletionHandler;
    IBHUDConnectionPredecessorsView *lastCompletionMatch;
}

+ (void)setDefaultMaxContentHeight:(double)arg1;
+ (double)defaultMaxContentHeight;
+ (double)minimumContentHeight;
- (void)deselectAll;
- (id)objectsAtPoint:(struct CGPoint)arg1;
- (id)objectAtPoint:(struct CGPoint)arg1;
- (id)selectedPredecessorEndPoint;
- (id)selectedPredecessorView;
- (void)unselectSelectedPredecessor;
- (void)predecessorView:(id)arg1 wantsToSelectPredecessor:(id)arg2 withEndPoint:(id)arg3;
- (void)connectionView:(id)arg1 connectionWasUnhighlighted:(id)arg2 withEndPoint:(id)arg3;
- (void)connectionView:(id)arg1 connectionWasHighlighted:(id)arg2 withEndPoint:(id)arg3;
- (void)pathControlSegmentWasPressed:(id)arg1;
- (void)updatePathControlForHighlightedObject;
- (void)setHistoryForward:(id)arg1;
- (id)historyForward;
- (void)setHistoryBack:(id)arg1;
- (id)historyBack;
- (void)moveForwardInHistory:(id)arg1;
- (void)moveBackInHistory:(id)arg1;
- (BOOL)saveStateAndMoveToSource:(id)arg1;
- (BOOL)saveStateAndMoveToSource:(id)arg1 selectPredecessor:(id)arg2;
- (BOOL)canMoveForwardInHistory;
- (BOOL)canMoveBackInHistory;
- (id)historyItemForCurrentState;
- (void)keyDown:(id)arg1;
- (void)cancelOperation:(id)arg1;
- (void)insertText:(id)arg1;
- (void)typeCompletionHandlerCompletionDisplayShouldExpire:(id)arg1;
- (id)typeCompletionHandler:(id)arg1 typeCompletionStringForObject:(id)arg2;
- (BOOL)acceptsFirstResponder;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)mouseUp:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)layout;
- (struct CGRect)resizerRect;
- (struct CGRect)titleRect;
- (struct CGRect)forwardButtonRect;
- (struct CGRect)backButtonRect;
- (BOOL)shouldShowNavigationButtons;
- (struct CGRect)sourcePopUpRect;
- (struct CGRect)closeButtonRect;
- (struct CGRect)footerRect;
- (struct CGRect)pathControlRect;
- (struct CGRect)contentRect;
- (struct CGRect)headerRect;
- (BOOL)isShowingResizeIndicator;
- (BOOL)isShowingScroller;
- (BOOL)isFlipped;
- (struct CGRect)iconBounds;
- (struct CGRect)buttonBounds;
- (id)windowController;
- (id)attributedTitle;
- (id)title;
- (id)titleAttributes;
- (id)contentView;
- (void)setContentView:(id)arg1;
- (void)contentViewFrameChanged:(id)arg1;
- (void)switchSource:(id)arg1;
- (void)close:(id)arg1;
- (id)contentSources;
- (id)contentSource;
- (id)selection;
- (void)setContentSource:(id)arg1;
- (id)contentViewForContentSource:(id)arg1;
- (void)setLastMouseDown:(id)arg1;
- (id)lastMouseDown;
- (id)document;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (BOOL)isPinned;
- (void)setPinned:(BOOL)arg1;
- (void)windowKeyOrMainStateChanged:(id)arg1;
- (void)documentDidChangeClasses:(id)arg1;
- (void)invalidatePredecessorViews;
- (void)invalidatePredecessorViewsConditionally;
- (void)invalidatePredecessorViewsRefocusingOnConnection:(id)arg1;
- (void)validateContentViews:(id)arg1;
- (void)rebuildWithSources:(id)arg1 initialSelection:(id)arg2 selectPredecessor:(id)arg3 interfaceState:(id)arg4;
- (void)rebuildWithSources:(id)arg1 initialSelection:(id)arg2 selectPredecessor:(id)arg3;
- (void)rebuildWithSources:(id)arg1 initialSelection:(id)arg2;
- (void)rebuildWithHistoryItem:(id)arg1;
- (BOOL)makePrototypeVisible:(id)arg1;
- (BOOL)makeConnectionVisible:(id)arg1;
- (id)predecessorViews;
- (void)applyInterfaceState:(id)arg1;
- (id)captureInterfaceState;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)initializeForwardButton;
- (void)initializeBackButton;
- (void)initializeSourcePopUpWithViews:(id)arg1 andTitles:(id)arg2;
- (void)initializeCloseButton;
- (id)forwardButtonIconContent;
- (id)backButtonIconContent;
- (id)closeButtonIconContent;
- (id)sourcePopUpButtonContent;
- (void)documentWillClose:(id)arg1;
- (void)clearDocumentReference;
- (void)dealloc;
- (void)willClose;
- (id)initWithSources:(id)arg1 andContentViews:(id)arg2 forDocument:(id)arg3;

@end

@interface IBHUDHistoryItem : NSObject
{
    NSDictionary *interfaceState;
    id source;
}

+ (id)historyItemWithSource:(id)arg1 interfaceState:(id)arg2;
- (void)setSource:(id)arg1;
- (id)source;
- (void)setInterfaceState:(id)arg1;
- (id)interfaceState;
- (void)dealloc;
- (id)initWithSource:(id)arg1 interfaceState:(id)arg2;

@end

@interface IBHUDSliceTitleView : NSView
{
    IBSlateBezierButton *disclosureButton;
    NSTextField *titleView;
}

+ (double)titleHeight;
- (void)mouseDown:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (struct CGRect)titleRect;
- (void)setTitle:(id)arg1;
- (void)disclosureClicked:(id)arg1;
- (id)paletteSlice;
- (id)disclosureButton;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface IBHUDWindow : NSWindow
{
}

- (void)performClose:(id)arg1;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (BOOL)canBecomeMainWindow;
- (BOOL)canBecomeKeyWindow;

@end

@interface IBHUDWindowController : IBWindowController
{
}

- (id)objectsAtPoint:(struct CGPoint)arg1;
- (id)objectAtPoint:(struct CGPoint)arg1;
- (void)contentSourceChangedForHeaderView:(id)arg1;
- (id)selection;
- (id)springLoadedObjectAtPoint:(struct CGPoint)arg1;
- (void)deselectObjects:(id)arg1;
- (id)headerView;
- (id)initWithWindow:(id)arg1;

@end

@interface IBHitDetectionMap : NSObject
{
    IBCFMutableDictionary *representedObjectRects;
    IBMutableOrderedSet *representedObjects;
    NSArray *indexedRepresentedObjects;
    long long width;
    long long height;
    IBNBitIntegerArray *map;
    NSArray *indexedRepresentedObjectRects;
    long long count;
}

+ (id)alwaysOnTopKey;
+ (id)alwaysOnBottomKey;
+ (id)notARepresentedObjectKey;
- (id)representedObjectAtPoint:(struct CGPoint)arg1;
- (void)indexObjects:(id)arg1 inWindow:(id)arg2;
- (void)overlayRepresentedObjectIndex:(long long)arg1 inRect:(struct CGRect)arg2;
- (void)addRepresentedObjectRect:(struct CGRect)arg1 representedObject:(id)arg2 forOrderingKey:(id)arg3;
- (void)dealloc;
- (id)init;

@end

@interface IBIconAndTextBrowserCell : NSBrowserCell
{
    NSImage *icon;
    BOOL shouldDrawActive;
}

- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (struct CGRect)titleRectForBounds:(struct CGRect)arg1;
- (struct CGRect)iconRectForBounds:(struct CGRect)arg1;
- (struct CGSize)titleSize;
- (id)attributedTitle;
- (id)textAttributes;
- (id)paragraphStyle;
- (id)foregroundColor;
- (id)displayFont;
- (id)icon;
- (void)setIcon:(id)arg1;
- (double)textInset;
- (double)iconInset;
- (struct CGSize)iconSize;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;
- (id)initTextCell:(id)arg1;

@end

@interface IBIconAndTextCell : NSTextFieldCell
{
    NSImage *icon;
    BOOL mouseOverLink;
    struct CGSize preferredIconSize;
    SEL linkAction;
    SEL buttonAction;
    BOOL hasButton;
    BOOL hasLinkText;
    long long trackingStatus;
    IBLabelDefinition *labelDefinition;
    NSBezierPath *buttonContentPath;
    NSColor *buttonColor;
}

+ (BOOL)prefersTrackingUntilMouseUp;
- (void)setLabelDefinition:(id)arg1;
- (id)labelDefinition;
- (void)setControlView:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)setMouseOverLink:(BOOL)arg1;
- (BOOL)isMouseOverLink;
- (void)aWindowDidResignKey:(id)arg1;
- (void)addTrackingAreasForView:(id)arg1 inRect:(struct CGRect)arg2 withUserInfo:(id)arg3 mouseLocation:(struct CGPoint)arg4;
- (void)addCursorRectsForView:(id)arg1 inRect:(struct CGRect)arg2;
- (BOOL)trackMouse:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3 untilMouseUp:(BOOL)arg4;
- (void)setTrackingStatus:(long long)arg1;
- (BOOL)isTrackingButton;
- (BOOL)isTrackingLink;
- (SEL)buttonAction;
- (void)setButtonAction:(SEL)arg1;
- (SEL)linkAction;
- (void)setLinkAction:(SEL)arg1;
- (void)setHasButton:(BOOL)arg1;
- (BOOL)hasButton;
- (void)setHasLinkText:(BOOL)arg1;
- (BOOL)hasLinkText;
- (id)buttonPathForBounds:(struct CGRect)arg1;
- (unsigned long long)hitTestForEvent:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3;
- (void)selectWithFrame:(struct CGRect)arg1 inView:(id)arg2 editor:(id)arg3 delegate:(id)arg4 start:(long long)arg5 length:(long long)arg6;
- (void)editWithFrame:(struct CGRect)arg1 inView:(id)arg2 editor:(id)arg3 delegate:(id)arg4 event:(id)arg5;
- (struct CGRect)titleEditingRectForBounds:(struct CGRect)arg1;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (struct CGRect)labelBackgroundRectForBounds:(struct CGRect)arg1;
- (id)effectiveButtonColor;
- (void)drawWithExpansionFrame:(struct CGRect)arg1 inView:(id)arg2;
- (BOOL)isOpaque;
- (struct CGRect)trackingRectForTrackingStatus:(long long)arg1 inBounds:(struct CGRect)arg2;
- (long long)trackingStatusForPoint:(struct CGPoint)arg1 inBounds:(struct CGRect)arg2;
- (BOOL)tracksLinkAndButtonSimultaniously;
- (struct CGSize)cellSizeForBounds:(struct CGRect)arg1;
- (struct CGRect)expansionFrameWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (struct CGRect)buttonRectForBounds:(struct CGRect)arg1;
- (struct CGRect)titleRectForBounds:(struct CGRect)arg1;
- (struct CGRect)iconRectForBounds:(struct CGRect)arg1;
- (struct CGRect)titleAndIconRectForBounds:(struct CGRect)arg1;
- (double)titleBoundingWidthForBounds:(struct CGRect)arg1;
- (struct CGSize)labelSizeForBounds:(struct CGRect)arg1;
- (struct CGSize)titleSizeForBoundingSize:(struct CGSize)arg1;
- (id)attributedTitle;
- (double)linkInsetForBounds:(struct CGRect)arg1;
- (double)textInsetForBounds:(struct CGRect)arg1;
- (double)iconInsetForBounds:(struct CGRect)arg1;
- (struct CGSize)iconSizeForBounds:(struct CGRect)arg1;
- (void)setPreferredIconSize:(struct CGSize)arg1;
- (struct CGSize)preferredIconSize;
- (struct CGSize)linkButtonSize;
- (void)setButtonColor:(id)arg1;
- (id)buttonColor;
- (void)setButtonContentPath:(id)arg1;
- (id)icon;
- (void)setIcon:(id)arg1;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;
- (id)initTextCell:(id)arg1;

@end

@interface IBIconAndTextControl : NSTextField
{
}

- (void)mouseDown:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)updateTrackingAreas;
- (void)resetCursorRects;

@end

@interface IBIconView : NSView
{
    id delegate;
    id dataSource;
    IBSelectionOwner *selection;
    NSMutableArray *icons;
    NSEvent *lastMouseDown;
    struct CGRect bandSelectionRect;
    struct CGSize iconSize;
    id target;
    SEL doubleAction;
    BOOL onlyDrawSelectedViews;
    long long dragTargetIndex;
    BOOL insertAfterDragTargetIndex;
    BOOL wasClickedObjectSelectedBeforeLastMouseDown;
    BOOL showsFirstResponder;
    IBFirstResponderDrawingStrategy *firstResponderDrawingStrategy;
    long long indexOfIconScheduledForTitleEditing;
    IBFieldEditor *fieldEditor;
}

- (void)setAllowsMultipleSelection:(BOOL)arg1;
- (BOOL)allowsMultipleSelection;
- (void)setIconSize:(struct CGSize)arg1;
- (struct CGSize)iconSize;
- (struct CGSize)objectSize;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (void)setNeedsDisplayForItemAtIndex:(long long)arg1;
- (void)setDragInsertionPoint:(struct CGPoint)arg1;
- (void)clearDragInsertionPoint;
- (long long)dragInsertionIndex;
- (void)setDragInsertionTarget:(long long)arg1 after:(BOOL)arg2;
- (struct CGRect)dragInsertionIndicatorRect;
- (id)dragInsertionIndicatorPath;
- (id)toolTipManager:(id)arg1 toolTipForView:(id)arg2 location:(struct CGPoint)arg3 tipSourceRect:(struct CGRect *)arg4;
- (void)mouseUp:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)moveRightAndModifySelection:(id)arg1;
- (void)moveRight:(id)arg1;
- (void)moveLeftAndModifySelection:(id)arg1;
- (void)moveLeft:(id)arg1;
- (void)moveUpAndModifySelection:(id)arg1;
- (void)moveUp:(id)arg1;
- (void)moveDownAndModifySelection:(id)arg1;
- (void)moveDown:(id)arg1;
- (void)scheduleTitleEditingForIcon:(id)arg1;
- (void)cancelScheduledTitleEditing;
- (void)cancelCurrentTitleEditing;
- (void)endTitleEditing;
- (void)stringEditorView:(id)arg1 didEndEditing:(id)arg2;
- (void)initiateDelayedTitleEditing:(id)arg1;
- (void)editTitleOfIconAtIndex:(long long)arg1;
- (id)editedIcon;
- (void)disassociateWithFieldEditor;
- (void)attemptToSelectIconAtIndex:(long long)arg1 withKeyEvent:(id)arg2;
- (void)keyDown:(id)arg1;
- (void)insertBacktab:(id)arg1;
- (void)insertTab:(id)arg1;
- (void)deleteForward:(id)arg1;
- (BOOL)showsFirstResponder;
- (void)setShowsFirstResponder:(BOOL)arg1;
- (void)deleteBackward:(id)arg1;
- (void)insertNewline:(id)arg1;
- (void)setBandSelectionRect:(struct CGRect)arg1;
- (id)iconHitTest:(struct CGPoint)arg1;
- (id)iconsInRect:(struct CGRect)arg1;
- (id)selectionImage;
- (id)draggedObjectsImageStateRepresentingTitles:(id)arg1 images:(id)arg2 andLabelDefinitions:(id)arg3 withIdentifiers:(id)arg4 andName:(id)arg5;
- (long long)objectIndexAtPoint:(struct CGPoint)arg1;
- (long long)indexForPoint:(struct CGPoint)arg1;
- (BOOL)isFlipped;
- (BOOL)canBecomeKeyView;
- (BOOL)resignFirstResponder;
- (BOOL)becomeFirstResponder;
- (BOOL)acceptsFirstResponder;
- (void)reloadData;
- (void)setFrameOrigin:(struct CGPoint)arg1;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)viewWillMoveToSuperview:(id)arg1;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)sizeToFit;
- (struct CGSize)idealSizeForSize:(struct CGSize)arg1;
- (BOOL)selectionContainsIcon:(id)arg1;
- (id)selectionIndexes;
- (void)makeObjectAtIndexesVisible:(id)arg1;
- (void)deselectObjectAtIndex:(long long)arg1;
- (void)setSelectionIndexes:(id)arg1;
- (void)clearSelection;
- (id)selectedIcons;
- (void)drawRect:(struct CGRect)arg1;
- (void)accumulateObjects:(id)arg1 inRect:(struct CGRect)arg2;
- (struct CGRect)iconFrameForObjectAtIndex:(long long)arg1;
- (struct CGRect)frameForObjectAtIndex:(long long)arg1;
- (long long)rowForObject:(long long)arg1;
- (long long)colForObject:(long long)arg1;
- (long long)rows;
- (long long)cols;
- (void)setDoubleAction:(SEL)arg1;
- (void)setTarget:(id)arg1;
- (void)setDataSource:(id)arg1;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (void)didSelect:(id)arg1 andDeselect:(id)arg2;
- (void)willSelect:(id)arg1 andDeselect:(id)arg2;
- (void)selectNone:(id)arg1;
- (void)selectAll:(id)arg1;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface IBIconViewIcon : NSObject
{
    IBIconView *controlView;
    NSImage *icon;
    NSString *title;
    NSString *toolTip;
    id source;
    long long index;
}

- (id)description;
- (void)drawInView:(id)arg1;
- (BOOL)isHitByRect:(struct CGRect)arg1;
- (BOOL)isHitByPoint:(struct CGPoint)arg1;
- (struct CGRect)textSelectionFrame;
- (BOOL)isTitleClipped;
- (struct CGRect)labelColorFrame;
- (struct CGRect)textFrame;
- (struct CGRect)imageFrame;
- (struct CGRect)imageSelectionFrame;
- (struct CGPoint)imageCenter;
- (struct CGRect)frame;
- (id)attributedTitle;
- (id)font;
- (id)textColor;
- (BOOL)showsFirstResponder;
- (BOOL)isSelected;
- (id)toolTip;
- (id)title;
- (id)icon;
- (id)labelDefinition;
- (long long)index;
- (void)dealloc;
- (id)initWithSource:(id)arg1 andIndex:(long long)arg2 inView:(id)arg3;

@end

@interface IBImageNameBinder : IBBinder
{
}

+ (id)unnamedImagePlaceholder;
- (id)valueForObject:(id)arg1;
- (void)setValue:(id)arg1 forObject:(id)arg2;
- (void)reflectValue:(id)arg1;
- (id)widgetValue;
- (id)defaultValue;

@end

@interface IBResource : NSObject
{
    NSString *name;
    NSString *identifier;
    NSString *briefDescription;
    NSAttributedString *fullDescription;
    NSArray *displayPaths;
    long long source;
}

+ (id)type;
+ (id)placeholderIdentifierForResourceWithProjectRelativePath:(id)arg1;
+ (id)resourceIdentifierForResourceWithProjectRelativePath:(id)arg1;
+ (id)resourceForProjectResourceReaderOutput:(id)arg1;
+ (id)resourcePlaceholderIdentifierBase;
+ (id)resourceIdentifierBase;
+ (id)synchronizedResourceFilesForFiles:(id)arg1;
+ (id)synchronizedResourceExtensions;
+ (id)missingResource;
+ (id)systemResource:(id)arg1 name:(id)arg2;
+ (id)placeholderResourceNamed:(id)arg1 forResourceManager:(id)arg2;
+ (id)resourceNameForFilePath:(id)arg1;
+ (id)placeholderResourceIdentifier:(id)arg1 resourceName:(id)arg2;
+ (id)projectResourceIdentifier:(id)arg1 relativePath:(id)arg2;
- (BOOL)isPlaceholderResource;
- (id)projectRelativePath;
- (id)resource;
- (id)pasteboardTypes;
- (void)setFullDescription:(id)arg1;
- (id)fullDescription;
- (void)setBriefDescription:(id)arg1;
- (id)briefDescription;
- (id)displayType;
- (id)displayIcon;
- (id)displayName;
- (id)identifier;
- (id)displayPaths;
- (id)name;
- (id)type;
- (long long)source;
- (void)dealloc;
- (id)initWithResource:(id)arg1 name:(id)arg2 identifier:(id)arg3 source:(long long)arg4 andDisplayPaths:(id)arg5;
- (id)initWithResources:(id)arg1 name:(id)arg2 identifier:(id)arg3 source:(long long)arg4 andDisplayPaths:(id)arg5;
- (id)initWithName:(id)arg1 identifier:(id)arg2 source:(long long)arg3 andDisplayPaths:(id)arg4;

@end

@interface IBImageResource : IBResource
{
    NSImage *image;
}

+ (id)resourceForProjectResourceReaderOutput:(id)arg1;
+ (id)resourcePlaceholderIdentifierBase;
+ (id)resourceIdentifierBase;
+ (id)synchronizedResourceFilesForFiles:(id)arg1;
+ (id)synchronizedResourceExtensions;
+ (id)systemResource:(id)arg1 name:(id)arg2;
- (id)resource;
- (id)pasteboardTypes;
- (id)displayIcon;
- (id)image;
- (void)dealloc;
- (id)initWithResource:(id)arg1 name:(id)arg2 identifier:(id)arg3 source:(long long)arg4 andDisplayPaths:(id)arg5;

@end

@interface IBImageSwitchingSegmentedCell : NSSegmentedCell
{
}

- (void)setControlSize:(unsigned long long)arg1;

@end

@interface IBImageView : NSView
{
    NSImage *image;
    unsigned long long interpolation;
    unsigned long long operation;
}

- (void)drawRect:(struct CGRect)arg1;
- (void)setImage:(id)arg1;
- (id)image;
- (void)setInterpolation:(unsigned long long)arg1;
- (unsigned long long)interpolation;
- (unsigned long long)operation;
- (void)setOperation:(unsigned long long)arg1;
- (void)dealloc;
- (id)initWithImage:(id)arg1;

@end

@interface IBInspectorController : NSObject <IBInspectorPanelDelegate>
{
    NSPanel *inspectorPanel;
    IBStackView *stackView;
    IBConstrainedView *emptySelectionView;
    NSTextField *emptySelectionTextField;
    IBInspectorModeView *modeSelector;
    NSView *contentView;
    NSScrollView *stackScrollView;
    NSView *stackFooterView;
    NSView *lockWarningView;
    IBIconAndTextCell *lockWarningCell;
    NSMutableSet *lockedInspectedObjects;
    NSMutableArray *activeInspectors;
    IBCFMutableDictionary *inspectorSlices;
    IBCFMutableDictionary *modes;
    IBInspectorMode *inspectionMode;
    BOOL valid;
    BOOL interuptedRefresh;
    long long blocks;
    BOOL validating;
    IBDocument *inspectedDocument;
    NSSet *documentSelection;
}

+ (BOOL)objects:(id)arg1 haveInspectorsForMode:(id)arg2;
+ (id)sharedInstance;
- (void)noteLockedInspectedObjects:(id)arg1;
- (void)clearLockedInspectedObjects;
- (id)lockedInspectedObjects;
- (id)stackScrollView;
- (id)lockWarningView;
- (id)lockWarningCell;
- (id)contentView;
- (id)modeSelector;
- (id)emptySelectionTextField;
- (id)emptySelectionView;
- (id)stackView;
- (id)inspectorPanel;
- (id)stackFooterView;
- (BOOL)isInterfaceLoaded;
- (void)windowWillClose:(id)arg1;
- (id)windowWillReturnUndoManager:(id)arg1;
- (void)inspectorPanel:(id)arg1 willSelectKeyViewPrecedingView:(id)arg2;
- (void)inspectorPanel:(id)arg1 willSelectKeyViewFollowingView:(id)arg2;
- (void)rebuildInspectorStack;
- (void)layoutContentView;
- (void)installViewsForInspectors:(id)arg1 reasonForNoInspectors:(id)arg2;
- (void)rebuildInspectorModes;
- (id)displayedInspectorModes;
- (id)inspectorModes;
- (id)builtinModes;
- (void)validate:(id)arg1;
- (void)invalidateInteruptingInspection:(BOOL)arg1;
- (void)scheduleValidation;
- (void)unblockUpdates;
- (void)blockUpdates;
- (id)inspectedObject;
- (id)inspectedObjects;
- (id)selection;
- (id)inspectedDocument;
- (id)document;
- (id)inspectorModesForObjects:(id)arg1;
- (void)takeSelectionFromDocument:(id)arg1;
- (id)sliceForInspector:(id)arg1;
- (void)commitEditing;
- (void)changeMode:(id)arg1;
- (void)syncDisplayMode;
- (id)inspectedTargetRuntime;
- (void)addInspectorMode:(id)arg1 forTargetRuntime:(id)arg2;
- (void)removeInspectorMode:(id)arg1 forTargetRuntime:(id)arg2;
- (id)inspectionMode;
- (void)setInspectionMode:(id)arg1;
- (void)showLockingSource:(id)arg1;
- (void)refresh;
- (id)computeTitle;
- (void)showInspector:(id)arg1;
- (void)dealloc;
- (id)init;
- (void)ensureInterfaceIsLoaded;
- (void)restoreDefaults;
- (void)updateDefaults;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IBInspectorMode : NSObject
{
    NSString *name;
    NSImage *image;
    NSMutableSet *enabledClasses;
    BOOL alwaysVisible;
    BOOL sliced;
    SEL enabledSelector;
}

+ (id)appleScriptInspectorMode;
+ (id)identityInspectorMode;
+ (id)connectionInspectorMode;
+ (id)bindingsInspectorMode;
+ (id)sizeInspectorMode;
+ (id)effectsInspectorMode;
+ (id)attributesInspectorMode;
- (BOOL)isSliced;
- (void)setSliced:(BOOL)arg1;
- (BOOL)alwaysVisible;
- (void)setAlwaysVisible:(BOOL)arg1;
- (id)inspectedObjects;
- (BOOL)isEnabledForObject:(id)arg1 inDocument:(id)arg2;
- (id)image;
- (id)name;
- (id)singularFormOfName;
- (id)displayName;
- (void)dealloc;
- (id)initWithName:(id)arg1 andImage:(id)arg2;

@end

@interface IBInspectorModeView : NSView
{
    NSArray *inspectorModes;
    IBCFMutableDictionary *modeProperties;
    IBInspectorMode *selectedInspectorMode;
    IBInspectorMode *trackedInspectorMode;
    IBInspectorMode *keyFocusedMode;
    SEL action;
    id target;
}

- (id)toolTipManager:(id)arg1 toolTipForView:(id)arg2 location:(struct CGPoint)arg3 tipSourceRect:(struct CGRect *)arg4;
- (void)drawRect:(struct CGRect)arg1;
- (BOOL)resignFirstResponder;
- (BOOL)becomeFirstResponder;
- (BOOL)canBecomeKeyView;
- (void)invalidateKeybaordFocusRing;
- (void)keyDown:(id)arg1;
- (void)mouseDown:(id)arg1;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (id)inspectorModeForPoint:(struct CGPoint)arg1;
- (struct CGRect)modeRectForIndex:(long long)arg1;
- (struct CGRect)imageRectForModeRect:(struct CGRect)arg1 andImage:(id)arg2;
- (id)calculateModeRects;
- (id)inspectorModes;
- (BOOL)isInspectorModeEnabled:(id)arg1;
- (void)setInspectorMode:(id)arg1 isEnabled:(BOOL)arg2;
- (void)setKeyFocusedMode:(id)arg1;
- (id)keyFocusedMode;
- (void)setSelectedInspectorMode:(id)arg1;
- (id)selectedInspectorMode;
- (void)setTrackedInspectorMode:(id)arg1;
- (id)trackedInspectorMode;
- (void)setTarget:(id)arg1;
- (id)target;
- (void)setAction:(SEL)arg1;
- (SEL)action;
- (void)setInspectorModes:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface IBInspectorPanel : NSPanel
{
    long long makingFirstResponder;
}

- (BOOL)isCommittingEditing;
- (BOOL)makeFirstResponder:(id)arg1;
- (void)selectKeyViewPrecedingView:(id)arg1;
- (void)selectKeyViewFollowingView:(id)arg1;
- (void)setDelegate:(id)arg1;
- (id)delegate;

@end

@interface IBInspectorSliceTitleView : NSView
{
    NSFont *font;
    NSString *title;
    NSColor *textColor;
    BOOL bold;
    BOOL expanded;
    BOOL _enabled;
    BOOL tracking;
    BOOL drawsBackground;
    id delegate;
    double maximumTitleWidth;
}

- (void)drawRect:(struct CGRect)arg1;
- (void)drawDisclosureWithColor:(id)arg1;
- (id)disclosurePath;
- (BOOL)isExpanded;
- (void)setExpanded:(BOOL)arg1;
- (struct CGRect)titleRect;
- (struct CGRect)disclosureRect;
- (struct CGRect)bodyRect;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (BOOL)isFlipped;
- (id)attributedTitle;
- (id)attributes;
- (BOOL)resignFirstResponder;
- (BOOL)becomeFirstResponder;
- (BOOL)canBecomeKeyView;
- (void)keyDown:(id)arg1;
- (void)mouseDown:(id)arg1;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (void)setTextColor:(id)arg1;
- (id)textColor;
- (void)setBold:(BOOL)arg1;
- (void)setTitle:(id)arg1;
- (id)title;
- (void)setEnabled:(BOOL)arg1;
- (BOOL)enabled;
- (id)font;
- (void)setFont:(id)arg1;
- (void)setDrawsBackground:(BOOL)arg1;
- (void)setMaximumTitleWidth:(double)arg1;
- (id)sliceView;
- (double)preferredHeight;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface IBInspectorSliceView : IBCollapsableView
{
    BOOL drawsTrailingLine;
}

+ (id)collapsableViewWithTitle:(id)arg1 andContentView:(id)arg2;
- (void)drawRect:(struct CGRect)arg1;
- (void)inspectorSliceTitleViewExpansionStateChanged:(id)arg1;
- (void)setExpanded:(BOOL)arg1;
- (void)setTitleFont:(id)arg1;
- (void)setTitleTextColor:(id)arg1;
- (void)setMaximumTitleWidth:(double)arg1;
- (void)setTitleDrawsBackground:(BOOL)arg1;
- (void)setBold:(BOOL)arg1;
- (id)title;
- (void)setTitle:(id)arg1;
- (void)setEnabled:(BOOL)arg1;
- (BOOL)enabled;
- (id)sliceTitleView;
- (void)setDrawsTrailingLine:(BOOL)arg1;
- (void)dealloc;

@end

@interface IBIntBinder : IBBinder
{
}

- (void)reflectValue:(id)arg1;
- (id)widgetValue;
- (id)defaultValue;

@end

@interface IBInvalidationPolicy : DTInvalidationPolicy
{
}

@end

@interface IBKVCUndoRecord : NSObject
{
    NSString *keyPath;
    id object;
    id value;
}

- (id)keyPath;
- (id)value;
- (id)object;
- (void)dealloc;
- (id)initWithObject:(id)arg1 andValue:(id)arg2 forKeyPath:(id)arg3;

@end

@interface IBKeyEquivalentEntryField : IBFillView
{
    NSString *keyEquivalent;
    long long allowableModifiers;
    long long keyEquivalentModifierMask;
    id target;
    SEL action;
    IBFirstResponderDrawingStrategy *firstResponderDrawingStrategy;
    unsigned int savedHotKeyOperatingMode;
    BOOL showsFirstResponder;
    IBSlatePopUpButton *alternatesPopUp;
}

+ (id)trackKeyboardForKeyEquivalent:(id)arg1 allowableModifiers:(unsigned long long)arg2 delegate:(id)arg3 context:(void *)arg4;
+ (id)charactersByIgnoringShift:(id)arg1 keyCode:(long long)arg2 modifiers:(unsigned long long)arg3;
+ (id)interpretationsOfKeyCode:(unsigned long long)arg1 andModifiers:(unsigned long long)arg2 defaultKeyEquivalent:(id)arg3 preferredForDefaultKeyEquivalentModifiers:(unsigned long long *)arg4;
+ (id)translateKeyCode:(long long)arg1 withModifiers:(unsigned long long)arg2;
- (void)setAction:(SEL)arg1;
- (void)setTarget:(id)arg1;
- (id)keyEquivalent;
- (void)setKeyEquivalent:(id)arg1;
- (void)setKeyEquivalentModifierMask:(unsigned long long)arg1;
- (unsigned long long)keyEquivalentModifierMask;
- (void)drawRect:(struct CGRect)arg1;
- (void)resizeSubviewsWithOldSize:(struct CGSize)arg1;
- (struct CGRect)alternatesPopUpFrameForBounds:(struct CGRect)arg1;
- (id)attributes;
- (BOOL)canBecomeKeyView;
- (BOOL)acceptsFirstResponder;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (void)chooseAlternate:(id)arg1;
- (void)keyDown:(id)arg1;
- (void)flagsChanged:(id)arg1;
- (void)startTrackingWithKeyEvent:(id)arg1;
- (void)reflectKeyEquivalentTracking:(id)arg1 defaultKeyEquivalent:(id)arg2 defaultKeyEquivalentModifiers:(unsigned long long)arg3 context:(void *)arg4;
- (struct CGRect)keyEquivalentRect;
- (long long)keyEquivalentLength;
- (BOOL)resignFirstResponder;
- (BOOL)becomeFirstResponder;
- (void)viewWillMoveToWindow:(id)arg1;
- (long long)modifierWidth;
- (id)font;
- (void)setAllowableModifiers:(unsigned long long)arg1;
- (void)setShowsFirstResponder:(BOOL)arg1;
- (BOOL)showsFirstResponder;
- (id)firstResponderDrawingStrategy;
- (void)invalidate;
- (void)attachAlternatePopUpButtonIfNeeded;
- (id)alternatePopUpContent;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)selectFollowingKeyView;
- (void)projectOnInspectedObjects:(id)arg1;
- (void)reflectInspectedObjects:(id)arg1;

@end

@interface IBSlateLabelView : NSView
{
    NSColor *textColor;
    NSColor *backgroundColor;
    NSColor *highlightedTextColor;
    NSColor *highlightedBackgroundColor;
    NSString *label;
    NSFont *font;
    NSImage *image;
    struct CGSize imageSize;
    BOOL highlighted;
    BOOL drawsRoundedBackground;
    long long indent;
    unsigned long long lineBreakingMode;
    unsigned long long textAlignment;
}

- (void)setHighlightedBackgroundColor:(id)arg1;
- (id)highlightedBackgroundColor;
- (void)setHighlightedTextColor:(id)arg1;
- (id)highlightedTextColor;
- (void)setBackgroundColor:(id)arg1;
- (id)backgroundColor;
- (void)setTextColor:(id)arg1;
- (id)textColor;
- (void)drawRect:(struct CGRect)arg1;
- (void)drawTitle:(struct CGRect)arg1;
- (struct CGRect)imageRect;
- (struct CGRect)titleRect;
- (struct CGSize)idealSize;
- (struct CGSize)titleSize;
- (id)attributedTitle;
- (id)currentBackgroundColor;
- (id)currentTextColor;
- (void)setFont:(id)arg1;
- (id)font;
- (void)setImageSize:(struct CGSize)arg1;
- (struct CGSize)imageSize;
- (void)setImage:(id)arg1;
- (id)image;
- (BOOL)isHighlighted;
- (void)setHighlighted:(BOOL)arg1;
- (void)setIndent:(long long)arg1;
- (long long)indent;
- (void)setDrawsRoundedBackground:(BOOL)arg1;
- (BOOL)drawsRoundedBackground;
- (unsigned long long)lineBreakingMode;
- (void)setLineBreakingMode:(unsigned long long)arg1;
- (unsigned long long)textAlignment;
- (void)setTextAlignment:(unsigned long long)arg1;
- (id)label;
- (void)setLabel:(id)arg1;
- (void)dealloc;
- (id)initWithLabel:(id)arg1;

@end

@interface IBKeyEquivalentLabelView : IBSlateLabelView
{
}

- (void)drawTitle:(struct CGRect)arg1;
- (struct CGSize)titleSize;
- (struct CGSize)idealSize;

@end

@interface IBLabelChooser : NSView
{
    NSArray *labelDefinitions;
    NSDictionary *labelDefinitionIndexes;
    NSDictionary *trackingTags;
    IBLabelDefinition *selectedLabelDefinition;
    IBLabelDefinition *trackedLabelDefinition;
    IBLabelDefinition *rolledOverLabelDefinition;
    long long displayedLabel;
    id target;
    SEL action;
    BOOL enabled;
    BOOL showsLabelNames;
}

+ (id)noLabelDefinition;
- (void)viewDidMoveToSuperview;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)viewDidMoveToWindow;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)setupTrackingRects;
- (void)removeTrackingRects;
- (void)drawRect:(struct CGRect)arg1;
- (void)drawXSwatchInRect:(struct CGRect)arg1;
- (id)attributedRolledOverLabel;
- (id)labelAttributes;
- (void)drawLabelDefinition:(id)arg1 inRect:(struct CGRect)arg2;
- (void)invalidateLabelDefinition:(id)arg1;
- (void)layout;
- (struct CGRect)frameForTextualLabel;
- (id)labelDefinitionAtPoint:(struct CGPoint)arg1;
- (struct CGRect)boundingFrameForLabelDefinition:(id)arg1;
- (struct CGRect)borderFrameForLabelDefinition:(id)arg1;
- (struct CGRect)borderRectForRect:(struct CGRect)arg1;
- (struct CGRect)frameForLabelDefinition:(id)arg1;
- (void)setLabelDefinitions:(id)arg1;
- (id)selectedLabelDefinition;
- (BOOL)isFlipped;
- (id)font;
- (void)setEnabled:(BOOL)arg1;
- (void)setShowsLabelNames:(BOOL)arg1;
- (long long)numberOfLabels;
- (void)setFrame:(struct CGRect)arg1;
- (void)setAction:(SEL)arg1;
- (void)setTarget:(id)arg1;
- (void)setSelectedLabelDefinition:(id)arg1;
- (void)setTrackedLabelDefinition:(id)arg1;
- (void)setRolledOverLabelDefinition:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface IBLabelDefinition : NSObject
{
    NSColor *color;
    NSString *identifier;
    NSString *name;
    NSGradient *gradient;
}

+ (id)labelDefinitionWithIdentifier:(id)arg1 name:(id)arg2 color:(id)arg3 andGradient:(id)arg4;
+ (id)standardLabelDefinitionForIdentifier:(id)arg1;
+ (id)standardLabelDefinitions;
@property(readonly) NSGradient *gradient; // @synthesize gradient;
@property(readonly) NSString *name; // @synthesize name;
@property(readonly) NSString *identifier; // @synthesize identifier;
@property(readonly) NSColor *color; // @synthesize color;
- (void)dealloc;
- (id)initWithIdentifier:(id)arg1 name:(id)arg2 color:(id)arg3 andGradient:(id)arg4;

@end

@interface IBLayoutDecorator : IBDrawingDecorator
{
}

- (void)drawRect:(struct CGRect)arg1;
- (void)drawGuidesForManager:(id)arg1;
- (void)drawLiveGuides:(id)arg1;
- (void)drawLayoutFrameForView:(id)arg1 inDocument:(id)arg2;
- (void)clipToView:(id)arg1;
- (id)windowController;

@end

@interface IBLayoutGuide : NSObject
{
}

- (void)setLocation:(double)arg1;
- (struct CGPoint)end;
- (struct CGPoint)start;
- (double)location;
- (BOOL)isHorizontal;
- (BOOL)isVertical;

@end

@interface IBLayoutManager : NSObject
{
    IBViewEditorWindowController *editorWindowController;
    NSMutableArray *liveGuides;
    unsigned long long currentDisplayToken;
    NSString *fallbackWidgetType;
    NSString *fallbackContainerWidgetType;
    BOOL clearPending;
    NSMutableDictionary *cachedLayoutRules;
}

+ (void)setGuidesAreEnabled:(BOOL)arg1;
+ (BOOL)guidesAreEnabled;
+ (void)removeLayoutRules:(id)arg1;
+ (void)addLayoutRules:(id)arg1;
+ (void)declareFallbackWidgetType:(id)arg1;
- (struct IBInsetTag)insetFromContainer:(id)arg1 toViews:(id)arg2;
- (id)liveGuides;
- (id)userGuides;
- (void)addGuideFromPoint:(struct CGPoint)arg1 toPoint:(struct CGPoint)arg2;
- (void)clearLiveGuides;
- (void)clearLiveGuides:(id)arg1;
- (void)clearLiveGuidesAfterDelay:(double)arg1;
- (void)cancelPendingClear;
- (void)setGuideNeedsDisplay:(id)arg1;
- (const CDStruct_39587f32 *)zeroRule;
- (const CDStruct_39587f32 *)ruleForView:(long long)arg1 comparedToView:(long long)arg2 withEdge:(id)arg3 viewFallbackKey:(long long)arg4;
- (const CDStruct_39587f32 *)ruleForView:(long long)arg1 comparedToContainer:(long long)arg2 withEdge:(id)arg3 viewFallbackKey:(long long)arg4 containerFallbackKey:(long long)arg5;
- (long long)displayGuidesForViews:(id)arg1 usingContainerResizingRules:(BOOL)arg2 draggedKnob:(long long)arg3;
- (long long)suggestGuidesForViews:(id)arg1 withSuggestedFrame:(struct CGRect)arg2 returningX:(double *)arg3 andReturningY:(double *)arg4 fromKnobPosition:(long long)arg5 usingContainerResizingRules:(BOOL)arg6 snaps:(BOOL)arg7;
- (long long)applyGuidesForViews:(id)arg1 withSuggestedFrame:(struct CGRect)arg2 andSiblings:(id)arg3 returningX:(double *)arg4 andReturningY:(double *)arg5 fromKnobPosition:(long long)arg6 usingContainerResizingRules:(BOOL)arg7 displayOnly:(BOOL)arg8 maxSnapDistance:(double)arg9;
- (id)windowSpaceBaselinesForViews:(id)arg1 withSuggestedFrame:(struct CGRect)arg2 andKnobPosition:(long long)arg3;
- (long long)applyGuidesForViews:(id)arg1 withSuggestedFrame:(struct CGRect)arg2 targetSuperview:(id)arg3 andSiblings:(id)arg4 returningX:(double *)arg5 andReturningY:(double *)arg6 fromKnobPosition:(long long)arg7 usingContainerResizingRules:(BOOL)arg8 displayOnly:(BOOL)arg9 maxSnapDistance:(double)arg10 unalignedWindowSpaceBaselines:(id)arg11;
- (id)legalViewsForUserGuidesInView:(id)arg1;
- (void)applySizingGuideForRect:(struct CGRect)arg1 vertical:(BOOL)arg2 toCoordinate:(double *)arg3 originalCoordinate:(double)arg4 displayOnly:(BOOL)arg5 withTarget:(double)arg6 suggestionState:(long long *)arg7 exclusive:(BOOL)arg8;
- (void)applyContainmentGuideForContainerEdge:(unsigned long long)arg1 ofContainerRect:(struct CGRect)arg2 toSubviewRect:(struct CGRect)arg3 toCoordinate:(double *)arg4 originalCoordinate:(double)arg5 displayOnly:(BOOL)arg6 withTarget:(double)arg7 suggestionState:(long long *)arg8 exclusive:(BOOL)arg9;
- (void)applyUserGuide:(id)arg1 toCoordinate:(double *)arg2 originalCoordinate:(double)arg3 displayOnly:(BOOL)arg4 withTarget:(double)arg5 suggestionState:(long long *)arg6 exclusive:(BOOL)arg7;
- (void)applyBaselineGuideForBaseline:(double)arg1 selectionRect:(struct CGRect)arg2 siblingRect:(struct CGRect)arg3 toCoordinate:(double *)arg4 originalCoordinate:(double)arg5 displayOnly:(BOOL)arg6 withTarget:(double)arg7 suggestionState:(long long *)arg8 exclusive:(BOOL)arg9;
- (void)applyCenteringGuide:(BOOL)arg1 selectionRect:(struct CGRect)arg2 siblingRect:(struct CGRect)arg3 toCoordinate:(double *)arg4 originalCoordinate:(double)arg5 displayOnly:(BOOL)arg6 withTarget:(double)arg7 suggestionState:(long long *)arg8 exclusive:(BOOL)arg9;
- (void)applyIndentationGuideFromEdge:(unsigned long long)arg1 ofSelectionRect:(struct CGRect)arg2 toEdge:(unsigned long long)arg3 ofSiblingRect:(struct CGRect)arg4 toCoordinate:(double *)arg5 originalCoordinate:(double)arg6 displayOnly:(BOOL)arg7 withTarget:(double)arg8 suggestionState:(long long *)arg9 exclusive:(BOOL)arg10;
- (void)applyEdgeToEdgeGuideFromEdge:(unsigned long long)arg1 ofSelectionRect:(struct CGRect)arg2 toEdge:(unsigned long long)arg3 ofSiblingRect:(struct CGRect)arg4 toCoordinate:(double *)arg5 originalCoordinate:(double)arg6 displayOnly:(BOOL)arg7 withTarget:(double)arg8 suggestionState:(long long *)arg9 exclusive:(BOOL)arg10;
- (void)applyGuideFromPoint:(struct CGPoint)arg1 toPoint:(struct CGPoint)arg2 toCoordinate:(double *)arg3 originalCoordinate:(double)arg4 displayOnly:(BOOL)arg5 withTarget:(double)arg6 suggestionState:(long long *)arg7 exclusive:(BOOL)arg8;
- (BOOL)guideWouldBeSuggestion:(double)arg1 forCoordinate:(double *)arg2 originalCoordinate:(double)arg3 suggestionState:(long long *)arg4;
- (id)widgetTypeForView:(id)arg1;
- (void)setFallbackContainerWidgetType:(id)arg1;
- (id)fallbackContainerWidgetType;
- (void)setFallbackWidgetType:(id)arg1;
- (id)fallbackWidgetType;
- (id)ancestorViewOfView:(id)arg1 inDocument:(id)arg2;
- (id)siblingsOfView:(id)arg1 excludingViews:(id)arg2 inDocument:(id)arg3;
- (id)childrenOfView:(id)arg1 inDocument:(id)arg2;
- (BOOL)isCurrentDisplayToken:(unsigned long long)arg1;
- (unsigned long long)currentDisplayToken;
- (void)invalidateCurrentDisplayToken;
- (id)document;
- (id)viewEditorWindowController;
- (void)layoutRulesDidChange:(id)arg1;
- (struct __CFDictionary *)layoutRules;
- (void)dealloc;
- (id)initWithViewEditorWindowController:(id)arg1;

@end

@interface IBLibraryClassLineageView : NSView <NSComboBoxDataSource>
{
    NSMutableIndexSet *rowsWithBadges;
    NSString *tentativeEditedValue;
    long long selectedBadgeRow;
    NSComboBox *editingView;
    long long selectedRow;
    long long editingRow;
    NSString *message;
    NSArray *labels;
    id delegate;
    struct _IBLibraryClassLineageViewFlags flags;
}

@property(retain, nonatomic) NSString *tentativeEditedValue; // @synthesize tentativeEditedValue;
@property(copy, nonatomic) NSString *message; // @synthesize message;
@property(nonatomic) id delegate; // @synthesize delegate;
- (void)cancelOperation:(id)arg1;
- (void)mouseUp:(id)arg1;
- (void)mouseDown:(id)arg1;
- (BOOL)didClickBadge:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)drawRowInRect:(struct CGRect)arg1 label:(id)arg2 hasArrow:(BOOL)arg3 context:(struct CGContext *)arg4 selected:(BOOL)arg5 bordered:(BOOL)arg6 badge:(id)arg7 badgeIsSelected:(BOOL)arg8;
- (BOOL)rowCanBeSelected:(unsigned long long)arg1;
- (long long)rowIndexForPoint:(struct CGPoint)arg1;
- (BOOL)rowShouldBeBordered:(unsigned long long)arg1;
- (id)badgeColorIfBadgeIsSelected:(BOOL)arg1 rowSelected:(BOOL)arg2;
- (id)badgeForRow:(unsigned long long)arg1;
- (struct CGRect)badgeContentRectForRow:(unsigned long long)arg1;
- (struct CGRect)badgeRectForRow:(unsigned long long)arg1;
- (id)attributedLabel:(id)arg1 selected:(BOOL)arg2 bordered:(BOOL)arg3;
- (id)labelAttributes:(BOOL)arg1 bordered:(BOOL)arg2;
- (id)labelColorIfSelected:(BOOL)arg1 bordered:(BOOL)arg2;
- (id)shadowForRowIfSelected:(BOOL)arg1;
- (double)alphaForRow:(unsigned long long)arg1;
- (struct CGRect)rectForRow:(unsigned long long)arg1;
- (double)yOriginForRowAtIndex:(unsigned long long)arg1;
- (double)neededHeight;
- (double)effectiveMessageHeight;
- (struct CGRect)messageRect;
- (id)messageAttributes;
- (BOOL)validateTentativeEditedValue:(id *)arg1 error:(id *)arg2;
- (id)comboBox:(id)arg1 objectValueForItemAtIndex:(long long)arg2;
- (long long)numberOfItemsInComboBox:(id)arg1;
- (void)confirmEditing;
- (void)cancelEditing;
- (void)editRow:(unsigned long long)arg1;
- (BOOL)isEditing;
- (void)reloadData;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IBLibraryController : NSObject
{
    IBLibraryObjectTemplate *draggedLazyTemplate;
    IBCFMutableDictionary *assetCategoriesByTargetRuntime;
    NSString *currentDragMarker;
    NSArray *assetsPendingInsertion;
    NSImageView *detailImageView;
    NSMutableSet *skippedUserTemplateDocuments;
    BOOL skippedPluginDependencyResultionForCustomObjects;
    NSMapTable *objectTemplateImageCache;
    IBCFMutableDictionary *directClassNameToObjectTemplateTable;
    IBCFMutableDictionary *topLevelClassesByTargetRuntime;
    NSMutableDictionary *classResources;
    IBLibraryTabbedAssetDetailView *classAssetDetailView;
    NSArray *savedMenuItems;
    IBClassCreationController *currentNewClassController;
    NSString *classNameToSelectAfterSync;
    BOOL shouldSwitchCategoriesAfterSync;
}

+ (id)sharedInstance;
- (id)assetLibrary:(id)arg1 userDefaultsKeyForUIStatePersistenceOfAssetCategory:(id)arg2;
- (void)loadUserAssets;
- (void)saveUserAssets;
- (void)clearOutUserAssetDocuments;
- (BOOL)attemptRecoveryFromError:(id)arg1 optionIndex:(unsigned long long)arg2;
- (BOOL)isSourceOfDragInfo:(id)arg1;
- (id)assetLibrary:(id)arg1 smartGroupRuleDefinitionsPropertyListForCategory:(id)arg2;
- (id)assetLibrary:(id)arg1 createViewForSmartRuleViewID:(id)arg2;
- (BOOL)assetLibrary:(id)arg1 depositAssets:(id)arg2;
- (void)assetLibrary:(id)arg1 sizeAssetDetailView:(id)arg2 toFitSuggestedSize:(struct CGSize)arg3 forAsset:(id)arg4;
- (void)assetLibrary:(id)arg1 willDisplayAsset:(id)arg2 inAssetDetailView:(id)arg3;
- (id)assetLibrary:(id)arg1 assetDetailViewForAsset:(id)arg2;
- (CDUnknownBlockType)assetLibrary:(id)arg1 willActivateAssetCategory:(id)arg2;
- (void)findFirstAssetGroupPairInObjectsTabWithObjectTemplate:(id)arg1 asset:(id *)arg2 group:(id *)arg3;
- (BOOL)traverseAssetGroupPairsInGroup:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (id)selectedClassName;
- (void)writeUpdatedClassFiles:(id)arg1;
- (void)newClassController:(id)arg1 didFinishGeneratingFilesForClassNamed:(id)arg2;
- (void)subclassSelectedAsset:(id)arg1;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (BOOL)canWriteUpdatedClassFiles;
- (BOOL)canSubclassSelectedAsset;
- (void)assetLibrary:(id)arg1 actionMenuNeedsUpdate:(id)arg2;
- (id)writeClassFilesMenuItemTitle;
- (id)targetClassNameForActionMenu;
- (void)rebuildClassAssetDetailViewWithDocument:(id)arg1 forClassName:(id)arg2;
- (void)rebuildClassAssetDetailViewWithDocument:(id)arg1;
- (double)tabbedAssetDetailView:(id)arg1 minimumHeightForRepresentedObject:(id)arg2;
- (double)tabbedAssetDetailView:(id)arg1 preferredHeightForRepresentedObject:(id)arg2;
- (void)tabbedAssetDetailView:(id)arg1 selectedRepresentedObjectDidChange:(id)arg2;
- (id)tabbedAssetDetailView:(id)arg1 viewForRepresentedObject:(id)arg2;
- (id)tabbedAssetDetailView:(id)arg1 labelForRepresentedObject:(id)arg2;
- (id)selectedAsset;
- (void)setClassAssetDetailView:(id)arg1;
- (id)classAssetDetailView;
- (id)assetLibrary:(id)arg1 orderedAssetsForDisplayedAssets:(id)arg2 category:(id)arg3;
- (void)synchronizeClassesWithActiveDocument:(id)arg1;
- (void)setTopLevelClasses:(id)arg1 forTargetRuntime:(id)arg2;
- (id)topLevelClassesForTargetRuntime:(id)arg1;
- (void)selectClassNameAfterSync:(id)arg1 bySwitchingCategories:(BOOL)arg2;
- (void)revealSelectionInClassesTab;
- (BOOL)canRevealSelectionInClassesTab;
- (BOOL)selectClassNamed:(id)arg1 bySwitchingCategories:(BOOL)arg2 document:(id)arg3;
- (BOOL)canSelectClassNamed:(id)arg1 document:(id)arg2;
- (id)classTreesIncludingDocumentLocalClassesInDocument:(id)arg1;
- (id)buildClassResourceForClassNamed:(id)arg1 inDocument:(id)arg2;
- (void)trimChildrenInResource:(id)arg1 withoutMinimumUserVisibilityLevel:(long long)arg2;
- (id)primaryAssetGroupForClassResource:(id)arg1 document:(id)arg2;
- (id)primaryAssetGroupWithAssetLineage:(id)arg1 startingFromGroup:(id)arg2;
- (void)trimEmtpyClassGroupsFromCategory:(id)arg1;
- (void)actuallyRemoveClassGroups:(id)arg1 fromGroup:(id)arg2;
- (void)populateGroupsToDelete:(id)arg1 forGroup:(id)arg2;
- (void)syncExistingClassResource:(id)arg1 toNewClassResource:(id)arg2 deletedResources:(id)arg3 addedResources:(id)arg4;
- (void)removeClassResourcesFromClassesTab:(id)arg1 category:(id)arg2;
- (void)removeClassResourceFromClassesTab:(id)arg1 category:(id)arg2;
- (void)addIncompleteClassResourcesToClassesTab:(id)arg1 category:(id)arg2;
- (void)addIncompleteClassResourceToClassesTab:(id)arg1 category:(id)arg2;
- (long long)currentClassUserVisibilityLevel;
- (void)createAssetGroupsForPath:(id)arg1 inAssetSource:(id)arg2 assetCategory:(id)arg3;
- (void)addSubgroups:(id)arg1 inGroup:(id)arg2 forCategory:(id)arg3;
- (id)assetForClassResource:(id)arg1;
- (id)shortDescriptionForClassResource:(id)arg1;
- (id)objectTemplateForClassResource:(id)arg1 inTargetRuntime:(id)arg2;
- (id)defaultObjectTemplateForClassNameIgnoringAncestors:(id)arg1 inTargetRuntime:(id)arg2;
- (id)directClassNameToObjectTemplateTableForTargetRuntime:(id)arg1;
- (void)dropDirectClassNameToObjectTemplateTableForTargetRuntime:(id)arg1;
- (BOOL)documentSupportsClassesTab:(id)arg1;
- (BOOL)isClassesCategoryActive;
- (void)synchronizeMediaWithActiveDocument:(id)arg1;
- (id)assetSourceDisplayNameForResourceSource:(long long)arg1;
- (id)activeDocument;
- (id)assetSourceImageForResourceSource:(long long)arg1;
- (void)assetLibrary:(id)arg1 didLoadLibraryWindow:(id)arg2;
- (void)assetLibrary:(id)arg1 userDidEditAsset:(id)arg2;
- (BOOL)assetLibrary:(id)arg1 isAssetUserEditable:(id)arg2;
- (BOOL)assetLibrary:(id)arg1 canRemoveAsset:(id)arg2;
- (void)assetLibrary:(id)arg1 removeAssets:(id)arg2;
- (BOOL)assetLibrary:(id)arg1 shouldShowGridLinesForAssetViewStyle:(long long)arg2;
- (void)assetLibrary:(id)arg1 didFinishDraggingAssets:(id)arg2 info:(id)arg3 shouldSlideBack:(char *)arg4;
- (void)assetLibrary:(id)arg1 willBeginDraggingAssets:(id)arg2;
- (void)document:(id)arg1 didAddDraggedObjects:(id)arg2 fromPasteboard:(id)arg3;
- (BOOL)assetLibrary:(id)arg1 canCreateAssetsFromPasteboard:(id)arg2 forAssetCategory:(id)arg3 targettingAssetSourceIdentifier:(id *)arg4;
- (void)assetLibrary:(id)arg1 populatePasteboard:(id)arg2 withAssets:(id)arg3 defaultDraggedImageState:(id *)arg4 identifierMapTable:(id *)arg5;
- (void)populatePasteboard:(id)arg1 withAsset:(id)arg2 draggedObjectsImageState:(id *)arg3;
- (id)objectImageStateForAsset:(id)arg1 identifier:(id)arg2;
- (id)bitmapDragImageOfAsset:(id)arg1;
- (void)pasteboard:(id)arg1 provideDataForType:(id)arg2;
- (void)putObjectContainer:(id)arg1 onPasteboard:(id)arg2 forTypes:(id)arg3;
- (id)draggedLazyTemplate;
- (void)setDraggedLazyTemplate:(id)arg1;
- (id)assetLibrary:(id)arg1 pasteboardTypesForAssetCategory:(id)arg2;
- (BOOL)assetLibrary:(id)arg1 createAsset:(id *)arg2 andImage:(id *)arg3 forAssetSourceWithIdentifier:(id *)arg4 fromPasteboard:(id)arg5 forInsertingIntoAssetCategory:(id)arg6;
- (id)objectPasteboardTypeForCategory:(id)arg1;
- (id)constructTemplateImageForDraggedObjects:(id)arg1;
- (id)temporaryDocumentOfClass:(Class)arg1 forTargetRuntime:(id)arg2;
- (id)assetLibrary:(id)arg1 searchTermsForAsset:(id)arg2;
- (void)restoreUserPreferences;
- (void)applicationWillTerminate:(id)arg1;
- (BOOL)isLibraryKey;
- (void)orderLibraryFront;
- (void)orderLibraryFrontAndMakeSearchFieldFirstResponder;
- (void)unloadLibraryObjectsForPlugin:(id)arg1;
- (void)loadLibraryObjectsForPlugin:(id)arg1;
- (void)resortLibraryPluginOrderForCategory:(id)arg1;
- (void)selectCategoryForPlugin:(id)arg1 inTargetRuntime:(id)arg2;
- (id)createAssetsFromTemplatesInNibNamed:(id)arg1 forPlugin:(id)arg2 topLevelObjects:(id *)arg3;
- (id)createAssetForTemplate:(id)arg1 inNamespace:(id)arg2;
- (id)createImageFromObjectTemplate:(id)arg1;
- (void)invalidateCachedImageForTemplate:(id)arg1;
- (id)cachedImageForTemplate:(id)arg1;
- (void)cacheImage:(id)arg1 forTemplate:(id)arg2;
- (id)createDetailedDescriptionFromTemplate:(id)arg1;
- (id)typeSummaryForObjectTemplate:(id)arg1;
- (id)defaultLabelForObjectTemplate:(id)arg1;
- (id)objectTemplateForAsset:(id)arg1;
- (void)activeRuntimeChanged;
- (void)refreshLibraryCategories;
- (id)assetCategoriesForTargetRuntime:(id)arg1;
- (id)assetCategoryNames;
- (id)mediaAssetCategoryForTargetRuntime:(id)arg1;
- (id)classesAssetCategoryForTargetRuntime:(id)arg1;
- (id)objectAssetCategoryForRuntimeNamed:(id)arg1;
- (id)objectAssetCategoryForTargetRuntime:(id)arg1;
- (id)assetCategoryNamed:(id)arg1 forTargetRuntime:(id)arg2;
- (id)assetCategoryIdentifierForCategoryName:(id)arg1 andTargetRuntime:(id)arg2;
- (id)baseAssetCategoryIdentifierForCategoryName:(id)arg1;
- (BOOL)isClassesCategory:(id)arg1;
- (BOOL)isObjectsCategory:(id)arg1;
- (BOOL)isClassAsset:(id)arg1;
- (BOOL)isMediaAsset:(id)arg1;
- (BOOL)isObjectAsset:(id)arg1;
- (BOOL)isAsset:(id)arg1 fromCategoryNamed:(id)arg2;
- (id)targetRuntimeForAssetCategory:(id)arg1;
- (id)assetCategoryNameForAssetCategory:(id)arg1;
- (id)assetSourceIDForMediaSource:(long long)arg1 andTargetRuntime:(id)arg2;
- (id)userObjectAssetSourceIDForTargetRuntime:(id)arg1;
- (void)setCurrentDragMarker:(id)arg1;
- (id)currentDragMarker;
- (void)setDraggedAssets:(id)arg1;
- (id)assetsPendingInsertion;
- (void)dealloc;
- (id)init;
- (id)userObjectsStoragePath;
- (id)libraryStoragePath;
- (id)applicationSupportSubpath;

@end

@interface IBLibraryObjectTemplate : NSView <NSCoding>
{
    NSView *scalerView;
    NSString *label;
    NSString *identifier;
    NSView *draggedView;
    NSView *draggableView;
    id representedObject;
    NSString *initialCategoryPath;
    IBPlugin *plugin;
    NSArray *filterableNames;
    NSString *briefDescription;
    NSString *subtitle;
    NSAttributedString *fullDescription;
    long long animationScalingMode;
    BOOL representativeTemplateForClass;
    NSArray *cachedPasteboardObjects;
}

@property(nonatomic) long long animationScalingMode; // @synthesize animationScalingMode;
@property(nonatomic, getter=isRepresentativeTemplateForClass) BOOL representativeTemplateForClass; // @synthesize representativeTemplateForClass;
@property(copy, nonatomic) NSAttributedString *fullDescription; // @synthesize fullDescription;
@property(copy, nonatomic) NSString *briefDescription; // @synthesize briefDescription;
@property(copy, nonatomic) NSString *identifier; // @synthesize identifier;
@property(copy, nonatomic) NSArray *filterableNames; // @synthesize filterableNames;
@property(retain, nonatomic) NSView *draggedView; // @synthesize draggedView;
@property(nonatomic) id representedObject; // @synthesize representedObject;
@property(copy, nonatomic) NSString *initialCategoryPath; // @synthesize initialCategoryPath;
@property(copy, nonatomic) NSString *subtitle; // @synthesize subtitle;
@property(copy, nonatomic) NSString *label; // @synthesize label;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (BOOL)isOpaque;
- (void)drawRect:(struct CGRect)arg1;
- (void)setFrameSize:(struct CGSize)arg1;
- (id)representedClassNames;
- (id)classesOfPasteboardObjects;
- (id)objectContainer;
- (id)computedFilterableNames;
- (id)pasteboardObjects;
- (double)viewScale;
- (id)pluginDependencies;
- (id)effectiveRepresentedClassName;
- (BOOL)isIntegratedByPlugin;
@property(retain, nonatomic) NSView *draggableView; // @dynamic draggableView;
- (void)layoutDraggableView;
@property(nonatomic) IBPlugin *plugin; // @dynamic plugin;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)ibDefaultLabel;
- (void)ibDidAddToDesignableDocument:(id)arg1;
- (id)ibDesignableContentView;
- (void)ibPopulateAttributeInspectorClasses:(id)arg1;
- (void)ibPopulateKeyPaths:(id)arg1;

@end

@interface IBLibraryCustomObjectTemplate : IBLibraryObjectTemplate
{
    IBObjectContainer *objectContainer;
}

- (BOOL)isIntegratedByPlugin;
- (id)pluginDependencies;
- (id)pasteboardObjects;
- (id)objectContainer;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1 andObjectContainer:(id)arg2;

@end

@interface IBLibraryFilesClassDetailController : IBLibraryClassDetailController
{
    IBIconAndTextCell *sourceCell;
    NSTableView *filesTableView;
    NSMapTable *classDescriptionSourceToPartialDescriptionTable;
    NSMutableDictionary *sourceCategories;
    NSArray *rowToSourceCategoryKeyTable;
    unsigned long long numberOfRowsInTableView;
    NSMutableIndexSet *groupRows;
}

@property(retain, nonatomic) NSMapTable *classDescriptionSourceToPartialDescriptionTable; // @synthesize classDescriptionSourceToPartialDescriptionTable;
@property(retain, nonatomic) NSArray *rowToSourceCategoryKeyTable; // @synthesize rowToSourceCategoryKeyTable;
@property(retain, nonatomic) IBIconAndTextCell *sourceCell; // @synthesize sourceCell;
@property(retain, nonatomic) NSMutableDictionary *sourceCategories; // @synthesize sourceCategories;
@property(retain, nonatomic) NSMutableIndexSet *groupRows; // @synthesize groupRows;
@property(retain, nonatomic) NSTableView *filesTableView; // @synthesize filesTableView;
- (void)removeSelectedClassDescriptionSource:(id)arg1;
- (void)openSourceFileForSource:(id)arg1;
- (id)classDescriptionSourceForClickedRow;
- (BOOL)tableView:(id)arg1 shouldShowCellExpansionForTableColumn:(id)arg2 row:(long long)arg3;
- (double)tableView:(id)arg1 heightOfRow:(long long)arg2;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (id)tableView:(id)arg1 toolTipForCell:(id)arg2 rect:(struct CGRect *)arg3 tableColumn:(id)arg4 row:(long long)arg5 mouseLocation:(struct CGPoint)arg6;
- (id)tableView:(id)arg1 dataCellForTableColumn:(id)arg2 row:(long long)arg3;
- (BOOL)tableView:(id)arg1 isGroupRow:(long long)arg2;
- (BOOL)tableView:(id)arg1 shouldTrackCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (BOOL)tableView:(id)arg1 shouldSelectRow:(long long)arg2;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (id)sourceForIndex:(long long)arg1;
- (id)sourceCategoryKeyForIndex:(long long)arg1;
- (BOOL)isGroupRow:(long long)arg1;
- (BOOL)sourceCategoryWithKeyIsVisible:(id)arg1;
- (id)sourceCategoryListOrder;
- (id)lineContentForSource:(id)arg1 constrainedToWidth:(double)arg2;
- (id)linkTitleAttributes;
- (id)thirdLineTitleAttributes;
- (id)secondLineTitleAttributes;
- (id)firstLineTitleAttributes;
- (id)briefHumanReadableContentsForPartialClassDescription:(id)arg1;
- (id)verboseHumanReadableContentsForPartialClassDescription:(id)arg1;
- (BOOL)classDescriptionSourceIsRemovable:(id)arg1;
- (id)bannerTitleForClassDescriptionSourceKey:(id)arg1;
- (id)classDescriptionSourceKey:(id)arg1;
- (BOOL)sourceHasFileToOpen:(id)arg1;
- (id)absolutePathForSource:(id)arg1;
- (void)refreshWithClassName:(id)arg1;
- (id)viewNibName;
- (id)label;
- (void)dealloc;

@end

@interface IBLibraryImageView : NSImageView
{
    IBFirstResponderDrawingStrategy *firstResponderDrawingStrategy;
    BOOL showsFirstResponder;
}

- (void)viewWillMoveToWindow:(id)arg1;
- (BOOL)resignFirstResponder;
- (BOOL)becomeFirstResponder;
- (BOOL)showsFirstResponder;
- (void)setShowsFirstResponder:(BOOL)arg1;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface IBLibraryLineageClassDetailController : IBLibraryClassDetailController
{
    NSMutableIndexSet *rowsWithRemovableSuperclasses;
    BOOL canSetSuperclassForFirstTime;
    NSString *classWithoutSuperclass;
    NSArray *currentClassLineage;
    NSString *unknownClassName;
    NSArray *sortedClassList;
}

@property(copy, nonatomic) NSString *classWithoutSuperclass; // @synthesize classWithoutSuperclass;
@property(retain, nonatomic) NSArray *currentClassLineage; // @synthesize currentClassLineage;
@property(copy, nonatomic) NSString *unknownClassName; // @synthesize unknownClassName;
- (BOOL)classLineageView:(id)arg1 editedValueIsValid:(id)arg2 error:(id *)arg3;
- (id)classLineageView:(id)arg1 completionAtIndex:(unsigned long long)arg2;
- (unsigned long long)numberOfCompletionsForClassLineageView:(id)arg1;
- (void)classLineageView:(id)arg1 didClickBadgeForRow:(unsigned long long)arg2;
- (id)classLineageView:(id)arg1 badgeForRow:(unsigned long long)arg2 inRect:(struct CGRect)arg3;
- (BOOL)classLineageView:(id)arg1 rowShouldBeBordered:(unsigned long long)arg2;
- (void)classLineageView:(id)arg1 setLabel:(id)arg2 forRow:(unsigned long long)arg3;
- (void)classLineageView:(id)arg1 didClickRow:(unsigned long long)arg2;
- (BOOL)classLineageView:(id)arg1 canClickRow:(unsigned long long)arg2;
- (double)classLineageView:(id)arg1 alphaForRowWithLabel:(id)arg2 row:(unsigned long long)arg3;
- (id)classLineageView:(id)arg1 labelForRow:(unsigned long long)arg2;
- (unsigned long long)numberOfRowsInClassLineageView:(id)arg1;
- (BOOL)canRemoveSuperClassForRow:(unsigned long long)arg1;
- (BOOL)rowIsSetSuperClassRow:(unsigned long long)arg1;
- (BOOL)requiresResizeAfterRefresh;
- (double)preferredHeight;
- (id)viewNibName;
- (id)label;
- (void)refreshWithClassName:(id)arg1;
- (BOOL)canSetSuperclassOfClassNamed:(id)arg1;
- (id)lineageView;
- (void)dealloc;

@end

@interface IBLibraryObjectTemplateInspector : IBBoundInspector
{
    NSTextField *labelTextField;
    NSTextField *categoryPathTextField;
    NSTextField *briefDescriptionTextField;
    NSTextView *fullDescriptionTextView;
    NSPopUpButton *animationScalingModePopUp;
    NSButton *classTemplateCheckBox;
}

- (void)awakeFromNib;

@end

@interface IBLibraryTabbedAssetDetailView : NSView
{
    NSPopUpButton *detailItemSwitcher;
    IBFillView *fillView;
    NSView *currentDetailItemView;
    id selectedRepresentedObject;
    NSArray *representedObjects;
    id delegate;
    double switcherGap;
}

@property(retain, nonatomic) id selectedRepresentedObject; // @synthesize selectedRepresentedObject;
@property(retain, nonatomic) NSArray *representedObjects; // @synthesize representedObjects;
@property(nonatomic) id delegate; // @synthesize delegate;
@property(retain, nonatomic) IBFillView *fillView; // @synthesize fillView;
@property(retain, nonatomic) NSPopUpButton *detailItemSwitcher; // @synthesize detailItemSwitcher;
@property(retain, nonatomic) NSView *currentDetailItemView; // @synthesize currentDetailItemView;
- (void)takeSelectionFromSwitcher:(id)arg1;
- (void)sizeToFit;
- (void)resizeSubviewsWithOldSize:(struct CGSize)arg1;
- (void)relayoutSubviews;
- (double)contentHeight;
- (double)switcherAreaHeight;
- (void)switcherSetSelectedRepresentedObject:(id)arg1;
- (id)switcherSelectedRepresentedObject;
- (void)switcherSetRepresentedObjects:(id)arg1;
- (void)switcherLayout;
- (BOOL)showsFirstResponder;
- (void)awakeFromNib;
- (void)dealloc;

@end

@interface IBLineView : IBAutoLayoutView
{
    struct CGPoint start;
    struct CGPoint end;
    double lineWidth;
    double ballRadius;
    double strokeWidth;
}

- (void)drawRect:(struct CGRect)arg1;
- (id)linePath;
- (void)layout;
- (void)setBallRadius:(double)arg1;
- (double)ballRadius;
- (void)setLineWidth:(double)arg1;
- (double)lineWidth;
- (void)setStrokeWidth:(double)arg1;
- (double)strokeWidth;
- (double)shadowBlurRaidus;
- (void)setStartPoint:(struct CGPoint)arg1 andEndPoint:(struct CGPoint)arg2;

@end

@interface IBLiveGuide : IBLayoutGuide
{
    struct CGPoint start;
    struct CGPoint end;
}

- (void)setLocation:(double)arg1;
- (id)description;
- (double)location;
- (BOOL)isVertical;
- (struct CGPoint)end;
- (struct CGPoint)start;
- (id)initWithStart:(struct CGPoint)arg1 andEnd:(struct CGPoint)arg2;

@end

@interface IBLocalizationInfoController : NSObject <IBDocumentInfoController>
{
    NSTableView *languagesView;
    NSButton *removeButton;
    NSPopUpButton *modePopUp;
    NSButton *sheetOkButton;
    NSButton *sheetCancelButton;
    NSTextField *sheetLaguageTextField;
    NSWindow *languageSheet;
    IBConstrainedView *infoView;
    NSWindow *reportSheet;
    IBSourceOutlineView *reportView;
    NSButton *showReportButton;
    NSButton *validateButton;
    NSMutableArray *invalidObjects;
    NSMutableDictionary *invalidProperties;
    NSArray *languages;
    IBDocument *document;
    NSString *reportedLanguage;
    BOOL validating;
}

- (id)objectsAtPoint:(struct CGPoint)arg1;
- (id)selectedObjects;
- (void)deselectObjects:(id)arg1;
- (void)outlineView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 item:(id)arg4;
- (void)outlineViewSelectionDidChange:(id)arg1;
- (BOOL)outlineView:(id)arg1 shouldSelectItem:(id)arg2;
- (id)outlineView:(id)arg1 objectValueForTableColumn:(id)arg2 byItem:(id)arg3;
- (BOOL)outlineView:(id)arg1 isItemExpandable:(id)arg2;
- (long long)outlineView:(id)arg1 numberOfChildrenOfItem:(id)arg2;
- (id)outlineView:(id)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (void)buildLocChangeTableForLangauge:(id)arg1;
- (void)tableView:(id)arg1 setObjectValue:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (void)debug:(id)arg1;
- (id)languages;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)doubleClickedReportItem:(id)arg1;
- (id)selectedReportPropertyForItem:(id)arg1;
- (id)selectedReportObjectForItem:(id)arg1;
- (id)infoView;
- (void)tableViewSelectionDidChange:(id)arg1;
- (void)refreshEnabledStates;
- (void)removeLanguage:(id)arg1;
- (id)selectedLanguage;
- (void)localizationsChanged;
- (void)addLanguage:(id)arg1;
- (void)controlTextDidChange:(id)arg1;
- (void)showLanguageReport:(id)arg1;
- (void)cancelReportSheet:(id)arg1;
- (void)okReportSheet:(id)arg1;
- (void)cancelLanguageSheet:(id)arg1;
- (void)okLanguageSheet:(id)arg1;
- (void)takeLocalizationMode:(id)arg1;
- (void)validateLocalizedValue:(id)arg1;
- (void)didEndLanguageSheet:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)didEndReportSheet:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (BOOL)validateLanguage:(id)arg1;
- (void)reloadData;
- (void)dealloc;
- (id)initWithDocument:(id)arg1;

@end

@interface IBMeasurementDecorator : IBDrawingDecorator <IBMeasurementLineDelegate>
{
    IBMeasurementLineDecorator *measurementLineDecorator;
    id measurementDestination;
    NSSet *measurementSources;
    NSArray *measurementLines;
    struct CGRect sourceFrame;
    struct CGRect destinationFrame;
    struct CGRect displayFrame;
    BOOL measurementLinesAreInvalid;
    BOOL visible;
}

- (void)drawRect:(struct CGRect)arg1;
- (void)drawPart:(long long)arg1;
- (void)decoratedViewWillDraw:(id)arg1;
- (id)calculateMeasurementLines;
- (struct CGRect)calculateDestinationRect;
- (struct CGRect)calculateSourceRect;
- (struct CGRect)calculateDisplayFrame;
- (struct CGRect)calculateScreenStartRect;
- (long long)measurementLine:(id)arg1 measuredValue:(long long)arg2 forEdge:(unsigned long long)arg3;
- (id)calculateMeasurementWithStartRect:(struct CGRect)arg1 andEndRect:(struct CGRect)arg2;
- (void)setMeasurementLines:(id)arg1;
- (id)measurementLines;
- (void)trackedObjectsDidChange;
- (BOOL)sourcesOrDestnationContainsObject:(id)arg1;
- (void)setDisplayFrame:(struct CGRect)arg1;
- (struct CGRect)displayFrame;
- (void)setDestinationFrame:(struct CGRect)arg1;
- (struct CGRect)destinationFrame;
- (void)setSourceFrame:(struct CGRect)arg1;
- (struct CGRect)sourceFrame;
- (BOOL)isVisible;
- (void)setVisible:(BOOL)arg1;
- (void)invalidateEverythingIfVisible;
- (void)invalidateMeasurementLinesIfVisible:(id)arg1;
- (void)invalidateDisplayFrameIfVisible;
- (void)invalidateDestinationFrameIfVisible;
- (void)invalidateSourceFrameIfVisible;
- (void)setMeasurementDestination:(id)arg1;
- (void)setMeasurementSources:(id)arg1;
- (id)measurementDestination;
- (id)measurementSources;
- (BOOL)isDisplaying;
- (void)setView:(id)arg1;
- (id)windowController;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IBMeasurementLine : NSObject
{
    id <IBMeasurementLineDelegate> delegate;
    NSAttributedString *measurementText;
    struct CGPoint startPoint;
    struct CGPoint endPoint;
    struct CGPoint auxiliarlyStartPoint;
    struct CGPoint auxiliarlyEndPoint;
    struct CGPoint arrowPoint1;
    struct CGPoint arrowPoint2;
    struct CGRect measurementRect;
}

+ (id)lineFromRect:(struct CGRect)arg1 withStartEdge:(unsigned long long)arg2 toEndRect:(struct CGRect)arg3 withEndEdge:(unsigned long long)arg4 delegate:(id)arg5;
- (id)boundingRectsForDrawingInRect:(struct CGRect)arg1;
- (void)drawTextInFrame:(struct CGRect)arg1;
- (void)drawLineInFrame:(struct CGRect)arg1;
- (struct CGRect)measurementRectForDrawingInFrame:(struct CGRect)arg1;
- (void)calculateLineFromStartRect:(struct CGRect)arg1 withStartEdge:(unsigned long long)arg2 andEndRect:(struct CGRect)arg3 withEndEdge:(unsigned long long)arg4;
- (void)setMeasurementText:(id)arg1;
- (void)calculateAuxiliarlyLineFromStartRect:(struct CGRect)arg1 withStartEdge:(unsigned long long)arg2 andEndRect:(struct CGRect)arg3 withEndEdge:(unsigned long long)arg4;
- (void)calculateStartAndEndPointsFromStartRect:(struct CGRect)arg1 withStartEdge:(unsigned long long)arg2 andEndRect:(struct CGRect)arg3 withEndEdge:(unsigned long long)arg4;
- (long long)measuredValue:(long long)arg1 forEdge:(unsigned long long)arg2;
- (id)attributes;
- (void)dealloc;
- (id)initLineFromRect:(struct CGRect)arg1 withStartEdge:(unsigned long long)arg2 toEndRect:(struct CGRect)arg3 withEndEdge:(unsigned long long)arg4 delegate:(id)arg5;

@end

@interface IBMeasurementLineDecorator : IBDrawingDecorator
{
    IBMeasurementDecorator *measurementDecorator;
}

- (void)drawRect:(struct CGRect)arg1;
- (void)setMeasurementDecorator:(id)arg1;

@end

@interface IBMenuBarView : IBEditableMenuView
{
    BOOL onlyDrawSelected;
}

- (BOOL)isHorizontal;
- (void)mouseDown:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (id)menuBarGradient;
- (id)menuBarGradientColors;
- (void)sizeToFit;
- (id)itemAtPoint:(struct CGPoint)arg1;
- (struct CGRect)titleFrameForItem:(id)arg1;
- (struct CGRect)frameForItem:(id)arg1;
- (id)attributesForItem:(id)arg1;
- (BOOL)isOpaque;
- (BOOL)isFlipped;
- (id)initWithFrame:(struct CGRect)arg1 andMenu:(id)arg2;
- (id)cellAtIndex:(long long)arg1;
- (void)cycleStateForItemAtIndex:(long long)arg1;
- (void)setDrawsKeyEquivalentRectForItemAtIndex:(long long)arg1;
- (long long)indexOfItemAtPoint:(struct CGPoint)arg1;
- (struct CGRect)stateImageRectForMenuItemAtIndex:(long long)arg1;
- (struct CGRect)titleRectForMenuItemAtIndex:(long long)arg1;
- (struct CGRect)keyEquivalentRectForMenuItemAtIndex:(long long)arg1;
- (struct CGRect)frameForMenuItemAtIndex:(long long)arg1;

@end

@interface IBMenuEditor : IBEditor
{
    IBOrderedRelationshipDragAndDropPolicy *insertionPolicy;
}

- (void)failToAcceptDragInfo:(id)arg1;
- (id)acceptDragInfo:(id)arg1;
- (BOOL)prepareToAcceptDragInfo:(id)arg1;
- (BOOL)wantsDefaultDragInsertionIndicatorForDragInfo:(id)arg1;
- (void)customizePasteboardInsertionContext:(id)arg1 fromPasteboard:(id)arg2 andDraggingInfo:(id)arg3;
- (void)drawDragAndDropInsertionHints;
- (void)drawActivationDarkening;
- (void)drawHighlightForObject:(id)arg1;
- (void)dragSelectionWithMouseDown:(id)arg1 andMouseDragged:(id)arg2;
- (void)detachDraggedObjects:(id)arg1 dragContext:(id)arg2;
- (void)reattachDraggedObjects:(id)arg1 dragContext:(id)arg2;
- (id)initialDragImageState:(id)arg1;
- (id)draggedImageState:(id)arg1;
- (id)draggedImageStateForMenuItems:(id)arg1;
- (id)draggedImageStateForIdentifiedItems:(id)arg1;
- (id)menuItemPasteboardType;
- (void)didSelect:(id)arg1 andDeselect:(id)arg2;
- (BOOL)interceptEvent:(id)arg1;
- (BOOL)windowOrAncestorMenuEditorWindowWasMainWindowBeforeLastMouseDown;
- (BOOL)interceptKeyEvent:(id)arg1;
- (void)editKeyEquivalentForItemAtIndex:(long long)arg1 withEvent:(id)arg2;
- (void)noteDescendant:(id)arg1 didChangeProperty:(id)arg2 fromValue:(id)arg3;
- (long long)lastSelectedIndex;
- (id)lastMouseDown;
- (void)willClose;
- (void)didClose;
- (void)didOpen;
- (id)menuView;
- (id)menu;

@end

@interface IBMenuEditorWindowController : IBEditorWindowController
{
}

- (void)editableMenuViewDidDraw:(id)arg1;
- (void)editableMenuViewWillDraw:(id)arg1;
- (id)overlayView;
- (BOOL)openEditorWithKeyEvent:(id)arg1;
- (struct CGRect)screenRectForObject:(id)arg1;
- (id)objectsAtPoint:(struct CGPoint)arg1;
- (id)menuEditor;
- (void)windowWillClose:(id)arg1;
- (id)initWithWindow:(id)arg1 andObject:(id)arg2;

@end

@interface IBMenuItemCell : NSCell
{
    IBMenuView *menuView;
    NSMenuItem *menuItem;
    NSString *lastTitle;
    NSAttributedString *attributedTitle;
    struct CGSize cachedSize;
    BOOL highlighted;
}

- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawKeyEquivalentWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawTitleWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawMenuItemImageWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawStateImageWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawSubmenuIndicatorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawSeparatorItemWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawBorderAndBackgroundWithFrame:(struct CGRect)arg1 clip:(struct CGRect)arg2 inView:(id)arg3;
- (struct CGRect)keyEquivalentRectForBounds:(struct CGRect)arg1;
- (struct CGRect)submenuIndicatorRectForBounds:(struct CGRect)arg1;
- (struct CGRect)titleRectForBounds:(struct CGRect)arg1;
- (struct CGRect)menuItemImageRectForBounds:(struct CGRect)arg1;
- (struct CGRect)stateImageRectForBounds:(struct CGRect)arg1;
- (struct CGSize)submenuIndicatorSize;
- (struct CGSize)stateImageSize;
- (struct CGSize)titleSize;
- (struct CGSize)keyEquivalentSize;
- (struct CGSize)cellSize;
- (id)menuItemImage;
- (void)setFont:(id)arg1;
- (id)attributedTitle;
- (long long)modifierWidth;
- (long long)targetHeight;
- (id)attributes;
- (id)effectiveColor;
- (void)setNeedsSizing:(BOOL)arg1;
- (void)setLastTitle:(id)arg1;
- (BOOL)isHighlighted;
- (void)setHighlighted:(BOOL)arg1;
- (void)setMenuView:(id)arg1;
- (void)setMenuItem:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface IBMenuItemEditor : IBEditor
{
}

- (void)drawActivationDarkening;
- (void)drawHighlightForObject:(id)arg1;
- (void)stringDidEndEditing:(id)arg1 withTextMovement:(long long)arg2 userInfo:(id)arg3 andContext:(void *)arg4;
- (BOOL)interceptEvent:(id)arg1;
- (BOOL)shouldCloseWithEvent:(id)arg1;
- (BOOL)isEditingSubmenu;
- (struct CGRect)titleRectForEditingContext:(void *)arg1 userInfo:(id)arg2;
- (void)beginEditingTitle;
- (void)willEditChild:(id)arg1 inWindowController:(id)arg2;
- (long long)index;
- (id)menuView;

@end

@interface IBMenuItemView : NSView
{
    NSMenuItem *menuItem;
}

- (void)setMenuItem:(id)arg1;
- (id)menuItem;
- (void)drawRect:(struct CGRect)arg1;
- (struct CGRect)titleRect;
- (struct CGRect)submenuIndicatorRect;
- (struct CGSize)submenuIndicatorSize;
- (struct CGRect)bodyRect;
- (BOOL)isSeparatorItem;
- (id)attributedTitle;
- (id)title;
- (BOOL)isOpaque;
- (BOOL)isFlipped;
- (id)attributes;
- (void)applyShadow;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface IBMenuValidationProxy : NSResponder <NSUserInterfaceValidations>
{
    NSMutableArray *validators;
}

- (BOOL)validateUserInterfaceItem:(id)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (BOOL)respondsToSelector:(SEL)arg1;
- (void)forwardInvocation:(id)arg1;
- (id)validatedTargetForUserIterfaceItem:(id)arg1;
- (id)targetForSelector:(SEL)arg1;
- (void)removeValidator:(id)arg1;
- (void)addValidator:(id)arg1;
- (void)insertValidator:(id)arg1 atIndex:(long long)arg2;
- (void)setValidators:(id)arg1;
- (long long)numberOfValidators;
- (id)validators;
- (void)dealloc;
- (id)init;

@end

@interface IBMenuView : IBEditableMenuView
{
    NSMutableArray *cells;
    NSMutableArray *rects;
    BOOL onlyDrawSelected;
    BOOL mainMenuDescendent;
    double cachedKeyWidth;
    double cachedKeyOffset;
    long long drawsKeyEquivalentRectForItemAtIndex;
    struct CGSize minimumSize;
    NSFont *font;
}

+ (long long)numberOfActiveModifiersForKeyEquivalent:(id)arg1 modifierMask:(unsigned long long)arg2;
+ (long long)numberOfActiveModifiersForMenuItem:(id)arg1;
+ (void)drawKeyEquivalent:(id)arg1 withMask:(unsigned long long)arg2 inFrame:(struct CGRect)arg3 withAttributes:(id)arg4 andModifierWidth:(double)arg5;
+ (id)displayStringForKeyEquivalent:(id)arg1;
+ (Class)cellClass;
- (id)cellAtIndex:(long long)arg1;
- (struct CGRect)stateImageRectForMenuItemAtIndex:(long long)arg1;
- (struct CGRect)keyEquivalentRectForMenuItemAtIndex:(long long)arg1;
- (struct CGRect)titleRectForMenuItemAtIndex:(long long)arg1;
- (struct CGRect)frameForMenuItemAtIndex:(long long)arg1;
- (void)invalidateRects;
- (long long)indexOfItemAtPoint:(struct CGPoint)arg1;
- (void)sizeToFit;
- (void)drawRect:(struct CGRect)arg1;
- (BOOL)isFlipped;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)setBoundsSize:(struct CGSize)arg1;
- (BOOL)isHorizontal;
- (void)setDrawsKeyEquivalentRectForItemAtIndex:(long long)arg1;
- (void)setMinimumSize:(struct CGSize)arg1;
- (struct CGSize)minimumSize;
- (void)setOnlyDrawSelectedItems:(BOOL)arg1;
- (void)setFont:(id)arg1;
- (id)font;
- (long long)targetHeight;
- (long long)modifierWidth;
- (id)copyForDisplayingMenu:(id)arg1;
- (BOOL)isMainMenuDescendent;
- (void)setMainMenuDescendent:(BOOL)arg1;
- (double)keyEquivalentOffset;
- (double)keyEquivalentWidth;
- (double)keyEquivalentToEdge;
- (long long)maxKeyEquivalentWidth;
- (id)keyEquivalentAttributes;
- (long long)maxKeyEquivalentModifiers;
- (void)rebuild;
- (void)mouseDown:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 andMenu:(id)arg2;

@end

@interface IBMissingImage : NSObject
{
}

+ (id)missingImage;

@end

@interface IBMissingImageRep : NSImageRep
{
}

- (id)replacementObjectForCoder:(id)arg1;
- (BOOL)_drawFromRect:(struct CGRect)arg1 toRect:(struct CGRect)arg2 operation:(unsigned long long)arg3 alpha:(double)arg4 compositing:(BOOL)arg5 flipped:(BOOL)arg6 ignoreContext:(BOOL)arg7;
- (BOOL)drawInRect:(struct CGRect)arg1;
- (BOOL)draw;

@end

@interface IBMouseMovedObserver : NSObject
{
    id eventMonitor;
}

+ (id)sharedInstance;
- (void)finishObserving;
- (void)beginObserving;
- (void)notifyFromWithinRunloop:(id)arg1;

@end

@interface IBMultiPartImageView : NSView
{
    double imageAlpha;
    double slicePoint;
    NSImage *image;
    long long orientation;
}

- (void)drawRect:(struct CGRect)arg1;
- (void)setOrientation:(long long)arg1;
- (long long)orientation;
- (void)setImage:(id)arg1;
- (id)image;
- (void)setSlicePoint:(double)arg1;
- (double)slicePoint;
- (void)setImageAlpha:(double)arg1;
- (double)imageAlpha;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface IBMutableCompositeClassDescription : IBCompositeClassDescription
{
}

- (void)removePartialClassDescriptionWithSource:(id)arg1;
- (void)integratePartialClassDescription:(id)arg1;

@end

@interface IBMutableOrderedDictionary : NSMutableDictionary
{
    IBMutableOrderedSet *set;
    CDStruct_f2932e27 keyCallbacks;
    CDStruct_b3b3fc87 objCallbacks;
}

- (void)removeObjectForKey:(id)arg1;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (id)keyEnumerator;
- (id)firstObject;
- (id)firstKey;
- (id)objectForKey:(id)arg1;
- (unsigned long long)count;
- (Class)classForCoder;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithObjects:(id)arg1 forKeys:(id)arg2;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)init;
- (void)dealloc;
- (id)initWithKeyCallbacks:(CDStruct_f2932e27)arg1 andValueCallbacks:(CDStruct_b3b3fc87)arg2;

@end

@interface IBMutableOrderedSet : DTMutableOrderedSet
{
}

@end

@interface IBPartialClassDescription : NSObject <NSCopying, NSMutableCopying, NSCoding>
{
    NSString *className;
    NSString *superclassName;
    NSMutableDictionary *actionInfosByName;
    NSMutableDictionary *toOneOutletInfosByName;
    NSMutableDictionary *toManyOutletInfosByName;
    IBClassDescriptionSource *sourceIdentifier;
    long long userVisibilityLevel;
}

+ (id)descriptionWithClassName:(id)arg1;
+ (id)userDescriptionWithClassName:(id)arg1;
- (id)relationshipInfoForNamedRelation:(id)arg1 ofRelationshipType:(long long)arg2;
- (id)typeForToManyOutlet:(id)arg1;
- (id)typeForToOneOutlet:(id)arg1;
- (id)typeForAction:(id)arg1;
- (id)toManyOutletNames;
- (id)toOneOutletNames;
- (id)actionNames;
- (BOOL)describesToManyOutlet:(id)arg1;
- (BOOL)describesToOneOutlet:(id)arg1;
- (BOOL)describesAction:(id)arg1;
- (long long)numberOfRelationsOfRelationshipType:(long long)arg1;
- (id)relationshipInfosOfRelationshipType:(long long)arg1;
- (id)namedRelationsOfRelationshipType:(long long)arg1;
- (id)typeForNamedRelation:(id)arg1 ofRelationshipType:(long long)arg2;
- (BOOL)describesNamedRelation:(id)arg1 ofRelationshipType:(long long)arg2;
- (id)dictionaryForRelationInformationOfType:(long long)arg1;
- (long long)userVisibilityLevel;
- (id)projectRelativeInterfaceFile;
- (id)description;
- (BOOL)isCategory;
- (id)sourceIdentifier;
- (id)className;
- (id)superclassName;
- (void)dealloc;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithStaticDescription:(id)arg1 andSourceIdentifier:(id)arg2;
- (id)initWithName:(id)arg1 andSourceIdentifier:(id)arg2;
- (id)initWithName:(id)arg1 superclass:(id)arg2 actions:(id)arg3 toOneOutlets:(id)arg4 toManyOutlets:(id)arg5 userVisibilityLevel:(long long)arg6 andSourceIdentifier:(id)arg7;
- (id)partialClassDescriptionBySettingSourceIdentifier:(id)arg1;

@end

@interface IBMutablePartialClassDescription : IBPartialClassDescription
{
}

- (void)mergeWithPartialDescription:(id)arg1;
- (void)addRelationshipInfo:(id)arg1;
- (void)setActionNames:(id)arg1;
- (void)setSourceIdentifier:(id)arg1;
- (void)removeActionNamed:(id)arg1;
- (void)removeToOneOutletNamed:(id)arg1;
- (void)setType:(id)arg1 forAction:(id)arg2;
- (void)setType:(id)arg1 forToOneOutlet:(id)arg2;
- (void)removeNamedRelation:(id)arg1 ofRelationshipType:(long long)arg2;
- (void)setType:(id)arg1 forNamedRelation:(id)arg2 ofRelationshipType:(long long)arg3;
- (id)storageForRelationInformationOfType:(long long)arg1;
- (void)setUserVisibilityLevel:(long long)arg1;
- (void)setClassName:(id)arg1;
- (void)setSuperclassName:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface IBNBitIntegerArray : NSObject
{
    long long bitsPerValue;
    long long count;
    char *bits;
}

- (unsigned int)intValueAtIndex:(long long)arg1;
- (void)setIntValue:(unsigned int)arg1 atIndex:(long long)arg2;
- (void)dealloc;
- (id)initWithMaxValue:(unsigned int)arg1 andCount:(long long)arg2;
- (id)initWithBitsPerValue:(long long)arg1 andCount:(long long)arg2;

@end

@interface IBNSImageResource : IBImageResource
{
    CIImage *cachedCIImage;
}

+ (BOOL)isPlaceholderResourceIdentifier:(id)arg1;
+ (id)placeholderResourceNamed:(id)arg1 forResourceManager:(id)arg2;
+ (id)placeholderIdentifierForResourceWithProjectRelativePath:(id)arg1;
+ (id)placeholderIdentifierForResourceWithName:(id)arg1;
+ (id)missingResource;
- (id)ciImage;
- (BOOL)isPlaceholderResource;
- (id)displayType;
- (id)initWithResource:(id)arg1 name:(id)arg2 identifier:(id)arg3 source:(long long)arg4 andDisplayPaths:(id)arg5;
- (void)dealloc;

@end

@interface IBSoundResource : IBResource
{
    NSSound *sound;
}

+ (id)resourceForProjectResourceReaderOutput:(id)arg1;
+ (id)resourcePlaceholderIdentifierBase;
+ (id)resourceIdentifierBase;
+ (id)synchronizedResourceFilesForFiles:(id)arg1;
+ (id)synchronizedResourceExtensions;
+ (id)systemResource:(id)arg1 name:(id)arg2;
- (id)resource;
- (id)pasteboardTypes;
- (id)displayIcon;
- (id)sound;
- (void)dealloc;
- (id)initWithResource:(id)arg1 name:(id)arg2 identifier:(id)arg3 source:(long long)arg4 andDisplayPaths:(id)arg5;

@end

@interface IBNSSoundResource : IBSoundResource
{
}

+ (id)placeholderResourceNamed:(id)arg1 forResourceManager:(id)arg2;
+ (id)missingResource;
- (BOOL)isPlaceholderResource;
- (id)sound;
- (id)displayType;
- (id)initWithResource:(id)arg1 name:(id)arg2 identifier:(id)arg3 source:(long long)arg4 andDisplayPaths:(id)arg5;

@end

@interface IBNavigationMenuController : NSObject <NSMenuDelegate>
{
    IBDocument *document;
    struct __CFDictionary *highlightedItemsTable;
}

- (void)selectionMenuItemWasClicked:(id)arg1;
- (id)menuForObjects:(id)arg1;
- (void)updateMenuItem:(id)arg1 forObject:(id)arg2;
- (id)menuItemAttributedTitleForObject:(id)arg1 highlighted:(BOOL)arg2;
- (BOOL)menu:(id)arg1 updateItem:(id)arg2 atIndex:(long long)arg3 shouldCancel:(BOOL)arg4;
- (long long)numberOfItemsInMenu:(id)arg1;
- (id)representedObjectOfSuperMenuItemForMenu:(id)arg1;
- (void)menu:(id)arg1 willHighlightItem:(id)arg2;
- (void)menuDidClose:(id)arg1;
- (id)document;
- (void)dealloc;
- (id)initWithDocument:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IBNumberUniquingDefeatingNumber : NSNumber
{
    char *objCType;
    char *bytes;
    long long length;
}

+ (id)numberWithNumber:(id)arg1;
- (unsigned long long)unsignedLongLongValue;
- (long long)longLongValue;
- (float)floatValue;
- (double)doubleValue;
- (unsigned long long)unsignedLongValue;
- (long long)longValue;
- (unsigned int)unsignedIntValue;
- (int)intValue;
- (unsigned short)unsignedShortValue;
- (short)shortValue;
- (unsigned char)unsignedCharValue;
- (BOOL)charValue;
- (const char *)objCType;
- (void)getValue:(void *)arg1;
- (void)dealloc;
- (id)initWithNumber:(id)arg1;

@end

@interface IBObjcGenerator : IBSourceCodeGenerator
{
}

+ (id)generateInterfaceForPartialClassDescription:(id)arg1;
+ (id)interfaceFileExtension;
+ (id)primaryFileExtension;
+ (id)languageDisplayName;
+ (id)languageIdentifier;
+ (id)frameworkImports;
- (id)commentPrefixString;
- (id)generateSourceFilesForPartialClassDescription:(id)arg1 baseFileName:(id)arg2 directory:(id)arg3;
- (id)generateImplementationForPartialClassDescription:(id)arg1 fileName:(id)arg2 withPreviousActionOrder:(id)arg3 previousToOneOutletOrder:(id)arg4 andPreviousToManyOutletOrder:(id)arg5 interfaceFileName:(id)arg6;
- (id)generateInterfaceForPartialClassDescription:(id)arg1 fileName:(id)arg2 withPreviousActionOrder:(id)arg3 previousToOneOutletOrder:(id)arg4 andPreviousToManyOutletOrder:(id)arg5;
- (id)generateSourceCodeDeclarationForNamedRelations:(id)arg1 ofRelationshipType:(long long)arg2 inClassDescription:(id)arg3;
- (id)generatePreferredSourceCodeForNamedRelation:(id)arg1 ofRelationshipType:(long long)arg2 inClassDescription:(id)arg3;
- (id)generateSourceCodeDeclarationForNamedRelation:(id)arg1 ofRelationshipType:(long long)arg2 inClassDescription:(id)arg3;
- (id)generateSourceCodePrototypeForNamedRelation:(id)arg1 ofRelationshipType:(long long)arg2 inClassDescription:(id)arg3;
- (id)generateActionMethodForRelationName:(id)arg1 andObjCType:(id)arg2;

@end

@interface IBObjcParser : IBSourceCodeParser
{
    long long errorLine;
    NSString *errorFile;
    NSMutableArray *descriptions;
    IBCFMutableDictionary *descriptionsToRelationshipTypesToOrderedRelations;
}

+ (BOOL)useClassicMethodParsing;
+ (id)supportedFileExtensions;
+ (void)initialize;
- (id)orderedRelationsOfRelationshipType:(long long)arg1 inClassDescription:(id)arg2;
- (void)dealloc;
- (id)parseData:(id)arg1 fromFile:(id)arg2 errors:(id *)arg3;
- (void)resetParseState;
- (BOOL)parseClass:(CDStruct_d32eee15 *)arg1;
- (BOOL)addMethodsUsingState:(CDStruct_d32eee15 *)arg1 intoActions:(id)arg2 andOutlets:(id)arg3;
- (BOOL)addMethodsUsingState:(CDStruct_d32eee15 *)arg1 intoActions:(id)arg2 outlets:(id)arg3 andToManyOutlets:(id)arg4;

@end

@interface IBObjectContainer : NSObject <NSCoding>
{
    IBMutableOrderedSet *objectRecords;
    NSMutableDictionary *properties;
    IBCFMutableDictionary *connections;
    IBCFMutableDictionary *objectsToObjectRecords;
    IBCFMutableDictionary *connectionsToIdentifiers;
    NSMutableDictionary *identifiersToConnections;
    NSMutableDictionary *objectIDsToObjectRecords;
    NSMutableDictionary *unlocalizedProperties;
    NSMutableDictionary *localizations;
    NSSet *cachedLocalizationKeys;
    NSString *activeLocalization;
    NSString *sourceID;
    NSString *uniqueID;
    long long maxID;
    id delegate;
}

+ (id)objectContainerFromData:(id)arg1 withArchivingDelegate:(id)arg2;
+ (id)objectContainerWithInitilallyDesignableChildrenOfObjects:(id)arg1;
- (id)decomposeIgnoringRoots:(id)arg1;
- (id)rootsReachableFromRoot:(id)arg1 ignoring:(id)arg2;
- (void)removeObject:(id)arg1;
- (void)setSourceID:(id)arg1;
- (id)uniqueID;
- (id)sourceID;
- (id)invalidLocalizablePropertiesForLocalization:(id)arg1;
- (long long)numberOfInvalidLocalizablePropertiesForLocalization:(id)arg1;
- (void)validateLocalizableProperty:(id)arg1 onObject:(id)arg2 forLocalization:(id)arg3;
- (void)invalidateLocalizableProperty:(id)arg1 onObject:(id)arg2 forLocalization:(id)arg3;
- (BOOL)isProperty:(id)arg1 ofObject:(id)arg2 localizedForLocalization:(id)arg3;
- (void)invalidateLocalizableProperty:(id)arg1 onObject:(id)arg2;
- (void)setLocalizedProperty:(id)arg1 toValue:(id)arg2 forObject:(id)arg3 inLocalization:(id)arg4;
- (id)localizedProperty:(id)arg1 forObject:(id)arg2 inLocalization:(id)arg3;
- (void)removeLocalizationNamed:(id)arg1;
- (void)addLocalizationNamed:(id)arg1;
- (void)setActiveLocalization:(id)arg1;
- (id)activeLocalization;
- (id)localizations;
- (long long)numberOfLocalizations;
- (id)unwrapLocalizationValue:(id)arg1;
- (id)wrapLocalizationValue:(id)arg1;
- (void)addProperties:(id)arg1 onObject:(id)arg2;
- (void)setProperties:(id)arg1 onObject:(id)arg2;
- (id)propertiesForObject:(id)arg1;
- (id)propertyForKey:(id)arg1 onObject:(id)arg2;
- (void)setProperty:(id)arg1 forKey:(id)arg2 onObject:(id)arg3;
- (id)metadataForKey:(id)arg1 ofObject:(id)arg2;
- (void)setMetadata:(id)arg1 forKey:(id)arg2 ofObject:(id)arg3;
- (void)removePropertyForKey:(id)arg1 onObject:(id)arg2;
- (id)attributePlaceholders;
- (id)attributePlaceholderForObject:(id)arg1 withName:(id)arg2;
- (void)removeAttributePlaceholder:(id)arg1;
- (void)addAttributePlaceholder:(id)arg1;
- (void)removeConnection:(id)arg1;
- (void)removeConnections:(id)arg1;
- (void)removeConnections:(id)arg1 context:(id)arg2;
- (void)removeConnection:(id)arg1 context:(id)arg2;
- (id)connectionForConnectionID:(long long)arg1;
- (long long)connectionIDForConnection:(id)arg1;
- (void)addConnection:(id)arg1 withConnectionID:(long long)arg2;
- (id)connectionsToObject:(id)arg1;
- (id)connectionsFromObject:(id)arg1;
- (id)connectionsForObject:(id)arg1;
- (id)connections;
- (void)setCustomClassName:(id)arg1 forObject:(id)arg2;
- (id)customClassNameForObject:(id)arg1;
- (void)setName:(id)arg1 forObject:(id)arg2;
- (id)nameForObject:(id)arg1;
- (id)objectForObjectID:(long long)arg1;
- (long long)objectIDForObject:(id)arg1;
- (BOOL)areObjectsSiblings:(id)arg1;
- (id)lineageOfObject:(id)arg1;
- (id)ancestorsOfObject:(id)arg1;
- (id)childrenOfObject:(id)arg1;
- (long long)numberOfChildrenOfObject:(id)arg1;
- (id)parentOfObject:(id)arg1;
- (BOOL)containsConnection:(id)arg1;
- (BOOL)containsObject:(id)arg1;
- (void)addObject:(id)arg1;
- (void)addObject:(id)arg1 toParent:(id)arg2;
- (void)addObject:(id)arg1 toParent:(id)arg2 withName:(id)arg3 andOID:(long long)arg4;
- (void)moveObject:(id)arg1 toParent:(id)arg2 atIndex:(long long)arg3;
- (BOOL)isObject:(id)arg1 aChildOfObject:(id)arg2;
- (void)insertObject:(id)arg1 asChildOfParent:(id)arg2 atIndex:(long long)arg3 withName:(id)arg4 andOID:(long long)arg5;
- (id)validatedIdentifier:(long long)arg1;
- (void)setMaxID:(long long)arg1;
- (long long)maxID;
- (id)nextFreeNameForObject:(id)arg1;
- (id)topLevelObjects;
- (long long)numberOfObjects;
- (id)objects;
- (id)recordForObject:(id)arg1;
- (id)rootObject;
- (id)rootRecord;
- (void)didAddObject:(id)arg1;
- (void)willAddObject:(id)arg1;
- (void)didChangePropertyFromValue:(id)arg1 toValue:(id)arg2 forKey:(id)arg3 onObject:(id)arg4;
- (void)didRemoveObject:(id)arg1;
- (void)willRemoveObject:(id)arg1;
- (void)didRemoveConnection:(id)arg1;
- (void)willRemoveConnection:(id)arg1;
- (void)didAddConnection:(id)arg1;
- (void)willAddConnection:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)decodePropertiesWithCoder:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)encodeConnectionsWithCoder:(id)arg1;
- (void)decodeConnectionsWithCoder:(id)arg1;
- (void)encodeObjectsWithCoder:(id)arg1;
- (void)decodeObjectsWithCoder:(id)arg1;
- (id)init;
- (void)verify;
- (void)verifyConnectionEndPoints;
- (void)verifyConnectionKeys;
- (BOOL)hasLocalizableContent;
- (id)pluginDependencyForObject:(id)arg1;
- (void)moveObject:(id)arg1 toParent:(id)arg2;
- (BOOL)isObject:(id)arg1 aDescendantOfObject:(id)arg2;
- (id)pluginDependencies;
- (id)mostSeniorObjectsOfObjects:(id)arg1;
- (id)topLevelObjectsForObjects:(id)arg1;
- (id)topLevelObjectForObject:(id)arg1;
- (id)descendantsOfObjects:(id)arg1;
- (id)descendantsOfObject:(id)arg1;
- (void)addObjectAndItsInitilallyDesignableChildren:(id)arg1 toParent:(id)arg2;
- (id)pasteboardTypes;
- (void)putObjects:(id)arg1 onPasteboard:(id)arg2 forOwner:(id)arg3 withArchivingDelegate:(id)arg4 context:(id)arg5;
- (id)localPasteboardTypeForGlobalType:(id)arg1;
- (id)extractObjects:(id)arg1;
- (void)insertExternalConnectionsFromPasteboard:(id)arg1 originalContainer:(id)arg2;
- (void)insertObjectsFromContainer:(id)arg1 asChildrenOfObject:(id)arg2 atIndex:(long long)arg3 includeConnections:(BOOL)arg4 useOIDs:(BOOL)arg5;
- (BOOL)areObjectsDivergent:(id)arg1;
- (id)moveChildrenFromPasteboard:(id)arg1 ofType:(id)arg2 toParent:(id)arg3 atIndex:(long long)arg4;
- (id)localPasteboardObjects:(id)arg1 ofType:(id)arg2;
- (id)dataRepresentationWithArchivingDelegate:(id)arg1 context:(id)arg2;

@end

@interface IBObjectIdentityInspector : IBBoundInspector
{
    NSTextField *nameTextField;
    NSTextField *objectIDTextField;
    NSTextView *notesTextView;
    NSButton *showNotesCheckBox;
    NSPopUpButton *propertyAccessControlPopUp;
    IBLabelChooser *labelChooser;
}

- (id)label;
- (void)changeSnowNotes:(id)arg1;
- (void)changeLabel:(id)arg1;
- (void)changeName:(id)arg1;
- (id)affectedKeyPathsOfInspectedObjectsForView:(id)arg1;
- (void)reflectLockedStateForView:(id)arg1;
- (void)clearLockedStateForView:(id)arg1;
- (void)refresh;
- (long long)inheritedPropertyAccessControlForObject:(id)arg1;
- (void)awakeFromNib;

@end

@interface IBObjectRecord : NSObject <NSCoding>
{
    long long objectID;
    NSString *objectName;
    id parent;
    id object;
    NSMutableArray *children;
}

- (id)children;
- (void)removeChild:(id)arg1;
- (void)addChild:(id)arg1;
- (void)insertChild:(id)arg1 atIndex:(long long)arg2;
- (void)moveChild:(id)arg1 toIndex:(long long)arg2;
- (id)object;
- (void)setParent:(id)arg1;
- (id)parent;
- (void)setObjectName:(id)arg1;
- (id)objectName;
- (void)setObjectID:(long long)arg1;
- (long long)objectID;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithObject:(id)arg1;

@end

@interface IBObjectiveCValidator : NSObject
{
}

+ (id)validateKeyPath:(id)arg1;
+ (BOOL)isValidDecimalInteger:(id)arg1 error:(id *)arg2;
+ (BOOL)isValidOutletName:(id)arg1 error:(id *)arg2;
+ (id)actionSelectorByCorrectingCommonMistakes:(id)arg1;
+ (BOOL)isValidActionSelector:(id)arg1 error:(id *)arg2;
+ (BOOL)isValidSelectorName:(id)arg1 error:(id *)arg2;
+ (BOOL)isValidKeyPath:(id)arg1 error:(id *)arg2;
+ (BOOL)isValidClassName:(id)arg1 error:(id *)arg2;
+ (BOOL)isValidObjcIdentifier:(id)arg1 error:(id *)arg2;
+ (id)invalidKeyPathCharactersSet;
+ (id)invalidSelectorCharactersSet;
+ (id)invalidOutletNameCharactersSet;
+ (id)objcInvalidIdentifierCharacterSet;
+ (void)setObjectiveCValidatorClass:(Class)arg1 forTargetRuntime:(id)arg2;
+ (Class)objectiveCValidatorClassForTargetRuntime:(id)arg1;

@end

@interface IBOpenGLRenderer : IBViewRenderer
{
}

- (id)renderContentWithSize:(struct CGSize)arg1;
- (id)openGLView;

@end

@interface IBOrderedDictionaryKeyEnumerator : NSEnumerator
{
    NSEnumerator *setEnumerator;
}

- (id)nextObject;
- (void)dealloc;
- (id)initWithSetEnumerator:(id)arg1;

@end

@interface IBOrderedRelationshipDragAndDropPolicy : NSObject
{
    IBEditor *editor;
    NSString *relationKeyPath;
    NSSet *pasteboardTypes;
    long long dragInsertionIndex;
    long long growthDirection;
}

- (void)failToAcceptDragInfo:(id)arg1;
- (void)finishAcceptingDragInfo:(id)arg1;
- (BOOL)prepareToAcceptDragInfo:(id)arg1;
- (BOOL)customizesDragInsertionIndicatorForDragInfo:(id)arg1;
- (void)customizePasteboardInsertionContext:(id)arg1 fromPasteboard:(id)arg2 andDraggingInfo:(id)arg3;
- (BOOL)isDraggingInfoForUs:(id)arg1;
- (void)drawDragAndDropInsertionHints;
- (struct CGRect)dragInsertionIndicatorRect;
- (id)dragInsertionIndicatorPath;
- (long long)insertionIndexForPoint:(struct CGPoint)arg1;
- (unsigned long long)insertionEdge;
- (struct CGRect)confinementRect;
- (struct CGRect)rectForRelatedObject:(id)arg1;
- (struct CGRect)rectForEditedObject;
- (long long)growthDirection;
- (long long)dragInsertionIndex;
- (void)setDragInsertionIndex:(long long)arg1;
- (void)setGrowthDirection:(long long)arg1;
- (id)pasteboardTypes;
- (id)relation;
- (id)editedObject;
- (id)editor;
- (void)dealloc;
- (id)initWithEditor:(id)arg1 toManyRelation:(id)arg2 pasteboardType:(id)arg3 andGrowthDirection:(long long)arg4;
- (id)initWithEditor:(id)arg1 toManyRelation:(id)arg2 pasteboardTypes:(id)arg3 andGrowthDirection:(long long)arg4;

@end

@interface IBOutletChangeTypeRefactoringOperation : IBRefactoringOperation
{
    NSString *outletName;
    NSString *className;
    NSString *oldType;
    NSString *newType;
}

- (void)refactorObject:(id)arg1 inDocument:(id)arg2 error:(id *)arg3;
- (id)newType;
- (id)oldType;
- (id)className;
- (id)outletName;
- (void)dealloc;
- (id)initWithClassName:(id)arg1 outletName:(id)arg2 oldType:(id)arg3 andNewType:(id)arg4;

@end

@interface IBOutletMoveRefactoringOperation : IBRefactoringOperation
{
    NSString *outletName;
    NSString *oldClassName;
    NSString *newClassName;
}

- (void)refactorObject:(id)arg1 inDocument:(id)arg2 error:(id *)arg3;
- (id)newClassName;
- (id)oldClassName;
- (id)outletName;
- (void)dealloc;
- (id)initWithOutletName:(id)arg1 oldClassName:(id)arg2 andNewClassName:(id)arg3;

@end

@interface IBOutletRenameRefactoringOperation : IBRefactoringOperation
{
    NSString *oldOutletName;
    NSString *newOutletName;
    NSString *className;
}

- (void)refactorObject:(id)arg1 inDocument:(id)arg2 error:(id *)arg3;
- (id)className;
- (id)newOutletName;
- (id)oldOutletName;
- (void)dealloc;
- (id)initWithClassName:(id)arg1 oldOutletName:(id)arg2 newOutletName:(id)arg3;

@end

@interface IBPaddingView : IBAutoLayoutView
{
    struct IBInsetTag padding;
    NSView *paddedView;
}

- (void)layout;
- (BOOL)isFlipped;
- (void)subviewFrameDidChange:(id)arg1;
- (void)willRemoveSubview:(id)arg1;
- (id)initWithPaddedView:(id)arg1 inset:(struct IBInsetTag)arg2;

@end

@interface IBPasteboardAwareTableView : NSTableView
{
}

- (BOOL)validateUserInterfaceItem:(id)arg1;
- (void)keyDown:(id)arg1;
- (void)duplicate:(id)arg1;
- (void)delete:(id)arg1;
- (void)paste:(id)arg1;
- (void)cut:(id)arg1;
- (void)copy:(id)arg1;
- (void)setDataSource:(id)arg1;
- (id)dataSource;

@end

@interface IBPathComponentCell : NSPathComponentCell
{
}

+ (id)cellWithLabel:(id)arg1 image:(id)arg2 representedObject:(id)arg3;
- (void)drawBackgroundInFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)setImage:(id)arg1;
- (id)initWithLabel:(id)arg1 image:(id)arg2 representedObject:(id)arg3;

@end

@interface IBPathControl : NSPathControl
{
    IBConnectionInterfaceStyle *interfaceStyle;
    NSColor *backgroundColor;
    BOOL canSelectLastComponent;
    BOOL isSelectable;
}

+ (Class)cellClass;
- (void)setLabels:(id)arg1 images:(id)arg2 representedObjects:(id)arg3;
- (void)windowDidResignKey:(id)arg1;
- (void)viewDidMoveToWindow;
- (void)drawRect:(struct CGRect)arg1;
- (void)setBackgroundColor:(id)arg1;
- (id)backgroundColor;
- (void)setInterfaceStyle:(id)arg1;
- (id)interfaceStyle;
- (void)setCanSelectLastComponent:(BOOL)arg1;
- (BOOL)canSelectLastComponent;
- (void)setSelectable:(BOOL)arg1;
- (BOOL)isSelectable;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface IBPathControlCell : NSPathCell
{
}

+ (Class)pathComponentCellClass;
- (id)backgroundColor;

@end

@interface IBPlugin : NSObject
{
    NSView *preferencesView;
    void *reserved[8];
}

+ (id)versionInfoForBundle:(id)arg1;
+ (id)fileAttributesForBundleExecutable:(id)arg1;
+ (id)fileAttributesForBundle:(id)arg1;
+ (id)minorVersionForBundle:(id)arg1;
+ (id)majorVersionForBundle:(id)arg1;
+ (id)sharedInstance;
- (id)primaryDeclaredDependencyIdentifierForCategory:(long long)arg1;
- (id)declaredDependencyDefinitions;
- (id)declaredDependencyDefinitionsForCategory:(long long)arg1;
- (id)interfaceBuilderDeclaredDevelopmentDependencyDefinitions;
- (id)versionInfo;
- (id)minorVersion;
- (id)majorVersion;
- (id)orderedDocSetBundleIdentifiersForTargetRuntime:(id)arg1;
- (id)docSetBundleIdentifiersForTargetRuntime:(id)arg1;
- (void)document:(id)arg1 takeDefaultDeploymentTargetFromSDKPath:(id)arg2;
- (void)document:(id)arg1 willSynchronizeWithXcodeProject:(id)arg2;
- (void)addSystemResourcesToDocument:(id)arg1;
- (id)requiredFrameworks;
- (void)document:(id)arg1 didAddDraggedObjects:(id)arg2 fromDraggedLibraryView:(id)arg3;
- (void)document:(id)arg1 didStartSimulatorWithContext:(id)arg2;
- (void)document:(id)arg1 willStartSimulatorWithContext:(id)arg2;
- (id)documentDidVerifyContents:(id)arg1;
- (id)documentWillVerifyContents:(id)arg1;
- (id)pluginDependencies;
- (id)frameworkDisplayName;
- (id)userPresentableIdentifierForTargetRuntimeIdentifier:(id)arg1;
- (id)supportedTargetRuntimes;
- (id)runtimeName;
- (id)integratedTargetRuntimeClasses;
- (Class)documentClassForArchivingObjects:(id)arg1;
- (Class)documentClassForObjectsOnPasteboard:(id)arg1;
- (id)typeSummaryForLibraryDisplayOfPasteboardObject:(id)arg1;
- (id)pasteboardObjectsForLibraryTemplateView:(id)arg1;
- (id)pasteboardObjectsForDraggedLibraryView:(id)arg1;
- (id)lazyPasteboardTypesForDraggedLibraryView:(id)arg1;
- (BOOL)lazilyProvidesDataForDraggedLibraryView:(id)arg1;
- (id)acceptDragInfo:(id)arg1;
- (BOOL)prepareToAcceptDragInfo:(id)arg1;
- (void)registerDragTypesForWindow:(id)arg1;
- (id)dropTargetForDragInfo:(id)arg1 inWindowController:(id)arg2 allowedDraggingOperations:(unsigned long long *)arg3;
- (id)templatePaths;
- (id)documentTemplateGroupIdentifiers;
- (id)imageForTemplateGroupWithIdentifier:(id)arg1;
- (id)documentTemplateDisplayGroupForTemplateGroupWithIdentifier:(id)arg1;
- (id)documentTemplateDisplayGroup;
- (double)documentTemplateDisplayGroupSortOrderForTemplateGroupWithIdentifier:(id)arg1;
- (double)documentTemplateDisplayGroupSortOrder;
- (id)identifier;
- (id)preferencesView;
- (id)path;
- (id)label;
- (id)name;
- (id)libraryNibNamesForTargetRuntime:(id)arg1;
- (id)libraryNibNames;
- (id)bundle;
- (void)willUnload;
- (void)didLoad;
- (id)pathsForSystemClassDescriptionsOfType:(id)arg1 forTargetRuntime:(id)arg2;
- (id)loadedLayoutRules;
- (void)setLoadedLayoutRules:(id)arg1;
- (void)didLoadLibraryNibNamed:(id)arg1 forTargetRuntime:(id)arg2 topLevelObjects:(id)arg3;
- (void)didLoadLibraryNibNamed:(id)arg1 topLevelObjects:(id)arg2;
- (BOOL)canUnload:(id *)arg1;
- (BOOL)isBuiltIn;
- (void)dealloc;

@end

@interface IBPluginController : NSObject
{
    NSMutableSet *loadedPlugins;
    NSMutableDictionary *unloadedPlugins;
    NSMutableArray *plugins;
    NSMutableArray *pluginsNotLoadedDueToArchitecture;
    NSMutableDictionary *pluginsByDeclaredDeploymentDependencies;
    NSMutableDictionary *pluginsByDeclaredDevelopmentDependencies;
    BOOL pluginsShouldLoadLibraryNibs;
    BOOL pluginsShouldLoadDocSets;
    BOOL pluginsShouldLoadInspectorModes;
}

+ (id)platformSupportPluginIdentifiersAndPaths;
+ (id)platformSupportPluginPaths;
+ (id)sharedInstance;
+ (id)frameworkExtension;
+ (id)pluginType;
+ (id)pluginExtension;
+ (id)knownPluginPathsDefaultsKey;
+ (id)loadedPluginIdentifiersDefaultsKey;
- (void)registerDragTypesForWindow:(id)arg1;
- (id)pluginForDragInfo:(id)arg1 inWindowController:(id)arg2 allowedDraggingOperations:(unsigned long long *)arg3;
- (BOOL)runOpenPanelToLoadPluginsWithError:(id *)arg1 userCancelled:(char *)arg2;
- (id)unloadedPluginInfoWithIndentifier:(id)arg1;
- (id)pluginWithPath:(id)arg1;
- (id)pluginWithIdentifier:(id)arg1;
- (id)pluginDefiningDeclaredDependency:(id)arg1 forCategory:(long long)arg2;
- (id)pluginsWithTargetRuntime:(id)arg1;
- (id)pluginsSortedForDisplay;
- (id)plugins;
- (BOOL)loadPluginsFromFrameworkPath:(id)arg1 error:(id *)arg2;
- (id)loadPluginAtPath:(id)arg1 error:(id *)arg2;
- (id)loadPluginWithIdentifier:(id)arg1 error:(id *)arg2;
- (void)unloadPlugin:(id)arg1;
- (void)writePluginPreferences;
- (id)overridingPluginsForPluginLoading;
- (id)integratedTargetRuntimes;
- (id)activeDocument;
- (void)restorePreviouslyLoadedPluginsFromIdentifiers:(id)arg1;
- (void)updatePluginPreferences;
- (void)migratePluginPreferences;
- (void)pickupRecentlyInstalledPlugins;
- (id)persistedKnownPluginsByPath;
- (id)previouslyLoadedPluginIdentifiers;
- (void)setValue:(id)arg1 forPluginPreference:(id)arg2;
- (id)valueForPluginPreference:(id)arg1;
- (id)valuesInPluginPreferencesDomain;
- (BOOL)pluginsShouldLoadInspectorModes;
- (void)setPluginsShouldLoadInspectorModes:(BOOL)arg1;
- (BOOL)pluginsShouldLoadDocSets;
- (void)setPluginsShouldLoadDocSets:(BOOL)arg1;
- (BOOL)pluginsShouldLoadLibraryNibs;
- (void)setPluginsShouldLoadLibraryNibs:(BOOL)arg1;
- (void)dealloc;
- (id)init;
- (id)overridingPluginPathForPath:(id)arg1;

@end

@interface IBPluginPreferencePaneController : NSObject <NSOutlineViewDelegate>
{
    NSMutableDictionary *viewGroups;
    IBCFMutableDictionary *viewTitles;
    NSOutlineView *preferencesOutlineView;
    NSButton *removePluginButton;
    NSButton *addPluginButton;
    NSBox *preferenceContainer;
    NSView *preferencePane;
}

+ (id)sharedInstance;
- (void)validateSelection;
- (void)addPlugin:(id)arg1;
- (void)addPluginSheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)removePlugin:(id)arg1;
- (BOOL)outlineView:(id)arg1 acceptDrop:(id)arg2 item:(id)arg3 childIndex:(long long)arg4;
- (unsigned long long)outlineView:(id)arg1 validateDrop:(id)arg2 proposedItem:(id)arg3 proposedChildIndex:(long long)arg4;
- (BOOL)shouldAcceptPluginAtURL:(id)arg1;
- (double)outlineView:(id)arg1 heightOfRowByItem:(id)arg2;
- (id)outlineView:(id)arg1 objectValueForTableColumn:(id)arg2 byItem:(id)arg3;
- (long long)outlineView:(id)arg1 numberOfChildrenOfItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 isItemExpandable:(id)arg2;
- (id)outlineView:(id)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (BOOL)outlineView:(id)arg1 shouldExpandItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 shouldCollapseItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 shouldSelectItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 isGroupItem:(id)arg2;
- (void)outlineViewSelectionDidChange:(id)arg1;
- (id)orderedGroups;
- (void)refreshPreferenceView;
- (void)removePreferenceView:(id)arg1 fromGroup:(id)arg2;
- (void)addPreferenceView:(id)arg1 toGroup:(id)arg2 withTitle:(id)arg3;
- (void)addPreferenceView:(id)arg1 toGroup:(id)arg2 withTitle:(id)arg3 andUpdate:(BOOL)arg4;
- (void)loadedPluginsChanged:(id)arg1;
- (void)reloadPluginPreferences;
- (id)selectedPlugin;
- (id)selectedPreferenceView;
- (void)refreshOutlineView;
- (id)preferencesView;
- (void)dealloc;
- (void)awakeFromNib;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IBPointerMutableSet : NSMutableSet
{
    struct __CFSet *store;
}

- (id)objectEnumerator;
- (id)member:(id)arg1;
- (unsigned long long)count;
- (void)removeObject:(id)arg1;
- (void)addObject:(id)arg1;
- (void)dealloc;
- (id)init;
- (id)initWithCapacity:(unsigned long long)arg1;

@end

@interface IBPopUpButton : NSButton
{
}

- (void)mouseDown:(id)arg1;

@end

@interface IBPredecessorDisplayValue : NSObject
{
    IBConnection *predecessor;
    NSArray *values;
    BOOL multipleValueMarker;
    NSArray *subFrames;
    NSArray *attributedDisplayValues;
    struct CGRect frame;
    id endPoint;
}

+ (id)displayValueMultipleValueMarker;
+ (id)displayValueWithValues:(id)arg1 andEndPoint:(id)arg2;
+ (id)displayValueWithPredecessor:(id)arg1 representedByPrototype:(id)arg2 inDocument:(id)arg3;
@property(copy) NSArray *attributedDisplayValues; // @synthesize attributedDisplayValues;
@property(copy) NSArray *subFrames; // @synthesize subFrames;
@property struct CGRect frame; // @synthesize frame;
@property(readonly) id endPoint; // @synthesize endPoint;
- (id)description;
@property(readonly) IBConnection *predecessor; // @synthesize predecessor;
@property(readonly) NSArray *displayValues;
- (BOOL)isMultipleValueMarker;
- (BOOL)isSuperscensionValue;
- (void)dealloc;
- (id)initWithPredecessor:(id)arg1 representedByPrototype:(id)arg2 inDocument:(id)arg3;
- (id)initWithValues:(id)arg1 andEndPoint:(id)arg2;
- (id)initAsMultipleValueMarker;

@end

@interface IBPreferencesController : NSObject <NSToolbarDelegate>
{
    NSWindow *preferencesWindow;
    IBMutableOrderedSet *preferenceIdentifiers;
    IBMutableOrderedDictionary *labels;
    IBMutableOrderedDictionary *images;
    IBMutableOrderedDictionary *panes;
}

+ (id)sharedInstance;
- (id)toolbarSelectableItemIdentifiers:(id)arg1;
- (id)toolbarAllowedItemIdentifiers:(id)arg1;
- (id)toolbarDefaultItemIdentifiers:(id)arg1;
- (id)toolbar:(id)arg1 itemForItemIdentifier:(id)arg2 willBeInsertedIntoToolbar:(BOOL)arg3;
- (void)toolbarItemClicked:(id)arg1;
- (void)show;
- (void)removePreferencesViewWithIdentifier:(id)arg1;
- (void)addPreferencesView:(id)arg1 withIdentifier:(id)arg2 image:(id)arg3 andLabel:(id)arg4;
- (void)selectViewWithIdentifier:(id)arg1 animate:(BOOL)arg2;
- (id)contentView;
- (id)currentPreferenceView;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IBProjectInsertionPanelController : NSObject
{
    NSTextField *headingLabel;
    NSTextField *subHeadingLabel;
    NSWindow *insertionPanel;
    NSScrollView *projectScrollView;
    NSOutlineView *projectOutlineView;
    NSButton *okButton;
    NSButton *cancelButton;
    NSView *contentView;
    IBIconAndTextCell *projectDataCell;
    NSMutableSet *selectedTargets;
    IBMutableOrderedSet *projects;
    NSArray *files;
    id delegate;
    BOOL runningAsSheet;
    double headingXInset;
    double headingYInset;
    double subHeadingXInset;
    double headingToSubHeadingSpacing;
    double subHeadingToScrollViewSpacing;
    double scrollViewToButtonSpacing;
    double scrollViewXInset;
    double buttonToButtonSpacing;
    double buttonXInset;
    double buttonYInset;
}

- (void)outlineView:(id)arg1 willDisplayOutlineCell:(id)arg2 forTableColumn:(id)arg3 item:(id)arg4;
- (BOOL)outlineView:(id)arg1 shouldTrackCell:(id)arg2 forTableColumn:(id)arg3 item:(id)arg4;
- (BOOL)outlineView:(id)arg1 shouldCollapseItem:(id)arg2;
- (id)outlineView:(id)arg1 dataCellForTableColumn:(id)arg2 item:(id)arg3;
- (BOOL)outlineView:(id)arg1 shouldSelectItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 shouldEditTableColumn:(id)arg2 item:(id)arg3;
- (void)outlineView:(id)arg1 setObjectValue:(id)arg2 forTableColumn:(id)arg3 byItem:(id)arg4;
- (void)outlineView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 item:(id)arg4;
- (id)outlineView:(id)arg1 objectValueForTableColumn:(id)arg2 byItem:(id)arg3;
- (BOOL)outlineView:(id)arg1 isGroupItem:(id)arg2;
- (long long)outlineView:(id)arg1 numberOfChildrenOfItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 isItemExpandable:(id)arg2;
- (id)outlineView:(id)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (BOOL)isItemATarget:(id)arg1;
- (BOOL)isItemAProject:(id)arg1;
- (void)refreshAddButtonState;
- (void)runModal;
- (void)beginSheetForWindow:(id)arg1;
- (void)cancel:(id)arg1;
- (void)ok:(id)arg1;
- (void)didEndSheet:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)finish:(BOOL)arg1;
- (void)begin;
- (id)projectDataCell;
- (void)deselectTarget:(id)arg1;
- (void)selectTarget:(id)arg1;
- (id)selectedTargets;
- (id)projects;
- (id)files;
- (id)delegate;
- (void)contentViewFrameDidChange:(id)arg1;
- (void)layout;
- (void)captureMetrics;
- (void)dealloc;
- (id)initWithFilePaths:(id)arg1 xcodeProjects:(id)arg2 delegate:(id)arg3;

@end

@interface IBProjectResourceReader : NSObject
{
    id delegate;
    NSArray *pendingPaths;
    NSThread *processingThread;
    NSMutableDictionary *updatedSyncStatus;
    NSSet *pendingImageExtensions;
    id userInfo;
    IBTargetRuntime *targetRuntime;
    IBResourceReaderCacheReferencer *cacheReference;
}

- (void)readFilesAndNotify:(id)arg1;
- (void)postCompletion;
- (void)postResults:(id)arg1 andCacheUpdate:(id)arg2;
- (id)updatedSyncStatus;
- (void)forceFileToSynchronizeNextTime:(id)arg1;
- (void)notifyCompletion:(id)arg1;
- (void)notifyProgress:(id)arg1;
- (void)cancelReading;
- (void)startReadingAndNotify:(id)arg1;
- (void)setImageExtensions:(id)arg1;
- (id)userInfo;
- (void)dealloc;
- (id)initWithPaths:(id)arg1 andPreviousSyncStatus:(id)arg2 targetRuntime:(id)arg3 userInfo:(id)arg4 resourceReaderCacheReferenceObject:(id)arg5;

@end

@interface IBPropertyLockedAlertView : NSView
{
}

+ (void)showAlertOverWindow:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface IBPulseAnimation : NSAnimation
{
}

- (id)delegate;
- (void)setDelegate:(id)arg1;
- (void)setCurrentProgress:(float)arg1;

@end

@interface IBPulsingButton : NSView <IBPulseAnimationDelegate, NSAnimationDelegate>
{
    NSString *title;
    NSImage *image;
    NSImage *lightenMask;
    NSImage *pressedMask;
    NSImage *fadeFromImage;
    NSAnimation *animation;
    NSTrackingArea *trackingArea;
    double animationProgress;
    BOOL pressed;
    BOOL showsUnderline;
    BOOL enabled;
    BOOL pulsing;
    BOOL fading;
    SEL action;
    id target;
    long long cyclesToPulse;
}

- (void)setTarget:(id)arg1;
- (id)target;
- (void)setAction:(SEL)arg1;
- (SEL)action;
- (BOOL)mouseDownCanMoveWindow;
- (void)mouseDown:(id)arg1;
- (void)windowKeyStateDidChange:(id)arg1;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)setShowsUnderline:(BOOL)arg1;
- (BOOL)showsUnderline;
- (struct CGRect)titleRect;
- (struct CGRect)imageRect;
- (void)calculateImageRect:(struct CGRect *)arg1 andTitleRect:(struct CGRect *)arg2;
- (struct CGSize)idealSize;
- (struct CGSize)imageSize;
- (struct CGSize)titleSize;
- (id)attributedTitle;
- (id)titleAttributes;
- (void)updateTrackingAreas;
- (void)resetCursorRects;
- (void)setPressed:(BOOL)arg1;
- (BOOL)isPressed;
- (void)animationDidEnd:(id)arg1;
- (void)animation:(id)arg1 didProgress:(float)arg2;
- (void)pulse:(long long)arg1;
- (void)animationTriggersChanged;
- (void)startAnimating;
- (void)stopAnimating;
- (BOOL)isAnimating;
- (double)animationProgress;
- (void)setAnimationProgress:(double)arg1;
- (id)pressedMask;
- (id)lightenMask;
- (id)image;
- (void)setImage:(id)arg1;
- (void)setImage:(id)arg1 smoothly:(BOOL)arg2;
- (void)setEnabled:(BOOL)arg1;
- (BOOL)isEnabled;
- (void)setTitle:(id)arg1;
- (id)title;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IBPythonGenerator : IBSourceCodeGenerator
{
}

+ (id)interfaceFileExtension;
+ (id)primaryFileExtension;
+ (id)languageDisplayName;
+ (id)languageIdentifier;
- (id)commentPrefixString;
- (id)generateSourceFilesForPartialClassDescription:(id)arg1 baseFileName:(id)arg2 directory:(id)arg3;
- (id)generatePreferredSourceCodeForNamedRelations:(id)arg1 ofRelationshipType:(long long)arg2 inClassDescription:(id)arg3;
- (id)generatePreferredSourceCodeForNamedRelation:(id)arg1 ofRelationshipType:(long long)arg2 inClassDescription:(id)arg3;

@end

@interface IBPythonParser : IBNibExtractorParser
{
}

+ (id)supportedFileExtensions;
+ (void)initialize;
- (id)parserLaunchArgumentsForFile:(id)arg1;

@end

@interface IBRepresentedObjectRect : NSObject
{
    struct CGRect rect;
    id representedObject;
}

- (id)representedObject;
- (struct CGRect)rect;
- (void)dealloc;
- (id)initWithRect:(struct CGRect)arg1 andRepresentedObject:(id)arg2;

@end

@interface IBResizerView : NSView
{
    NSView *targetView;
    struct CGSize maxTargetSize;
    struct CGSize minTargetSize;
    NSString *defaultsName;
    NSColor *borderColor;
    NSColor *lightFillColor;
    NSColor *darkFillColor;
    NSColor *lineColor;
    NSColor *disabledLineColor;
    NSColor *disabledBorderColor;
    NSColor *disabledDarkFillColor;
    NSColor *disabledLightFillColor;
    BOOL enabled;
    BOOL pressed;
}

- (void)drawRect:(struct CGRect)arg1;
- (void)resetCursorRects;
- (void)mouseDown:(id)arg1;
- (void)applySize:(struct CGSize)arg1;
- (id)preferredCursor;
- (BOOL)shouldDrag;
- (BOOL)isTargetHorizontallyResizable;
- (BOOL)isTargetVerticallyResizable;
- (long long)userSpaceGrowableDirections;
- (long long)targetSpaceGrowableDirections;
- (BOOL)isEnabled;
- (void)setEnabled:(BOOL)arg1;
- (void)setDisabledDarkFillColor:(id)arg1;
- (void)setDisabledLightFillColor:(id)arg1;
- (void)setDisabledBorderColor:(id)arg1;
- (void)setDisabledLineColor:(id)arg1;
- (id)currentDarkFillColor;
- (id)currentLightFillColor;
- (id)currentBorderColor;
- (id)currentLineColor;
- (id)disabledLightFillColor;
- (id)disabledDarkFillColor;
- (id)disabledBorderColor;
- (id)disabledLineColor;
- (void)setLineColor:(id)arg1;
- (void)setDarkFillColor:(id)arg1;
- (void)setLightFillColor:(id)arg1;
- (void)setBorderColor:(id)arg1;
- (id)lineColor;
- (id)darkFillColor;
- (id)lightFillColor;
- (id)borderColor;
- (BOOL)targetViewSuperViewIsFlipped;
- (void)setMinTargetSize:(struct CGSize)arg1;
- (void)setMaxTargetSize:(struct CGSize)arg1;
- (struct CGSize)minTargetSize;
- (struct CGSize)maxTargetSize;
- (void)setTargetView:(id)arg1;
- (id)targetView;
- (void)setPressed:(BOOL)arg1;
- (BOOL)isPressed;
- (id)defaultsName;
- (void)setDefaultsName:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface IBResourceCacheEntry : NSObject
{
    NSDate *date;
    NSNumber *size;
    NSString *kind;
    id resource;
    id errors;
    int refCount;
}

@property(readonly, copy) id errors; // @synthesize errors;
@property(readonly, copy) id resource; // @synthesize resource;
- (BOOL)decrementReference;
- (void)incrementReference;
- (BOOL)isCurrentWithSize:(id)arg1 date:(id)arg2 kind:(id)arg3;
- (void)dealloc;
- (id)initWithResource:(id)arg1 date:(id)arg2 size:(id)arg3 kind:(id)arg4 errors:(id)arg5;

@end

@interface IBResourceManager : NSObject
{
    IBDocument *document;
    NSMutableDictionary *resourcesByValue;
    NSMutableDictionary *resourcesByName;
    NSMutableDictionary *resourcesByIdentifier;
    NSSet *resourceClasses;
    NSMutableDictionary *rawResourcesByRelativePathByIdentifier;
    NSMutableDictionary *absolutePathsByRelativePath;
    id delegate;
}

- (BOOL)synchronizeResourcesOfDocument:(id)arg1 withModifiedProjectFiles:(id)arg2 project:(id)arg3;
- (void)finishUpdatingResourcesOfDocument:(id)arg1 withModifiedProjectFiles:(id)arg2 project:(id)arg3 replacedResources:(id)arg4;
- (void)document:(id)arg1 willSynchronizeWithProjectFiles:(id)arg2 project:(id)arg3;
- (id)filesFromLastSync;
- (id)relativePathsForIdentifier:(id)arg1;
- (id)fileExtensionsToResourceClasses;
- (id)synchronizedResourceFilesForFiles:(id)arg1;
- (id)placeholderResourceNamed:(id)arg1 ofClass:(Class)arg2;
- (void)setResourceClasses:(id)arg1;
- (id)resourceClasses;
- (id)objectsToKeyPathsToResources;
- (id)document;
- (void)addResources:(id)arg1 toPasteboard:(id)arg2;
- (id)extractResourcesForType:(id)arg1 fromPasteboard:(id)arg2;
- (id)pasteBoardTypeForResourceType:(id)arg1;
- (void)setDelegate:(id)arg1;
- (id)allResources;
- (id)resourcesOfType:(id)arg1;
- (id)firstResourceOfType:(id)arg1 named:(id)arg2;
- (void)removeAllResources;
- (void)removeResource:(id)arg1;
- (void)addResource:(id)arg1;
- (id)resourceWithResourceValue:(id)arg1;
- (id)resourceWithIdentifier:(id)arg1;
- (void)dealloc;
- (id)initWithDocument:(id)arg1;

@end

@interface IBResourceReaderCacheReferencer : NSObject
{
    NSDictionary *referencedCacheEntries;
}

@property(copy) NSDictionary *referencedCacheEntries; // @synthesize referencedCacheEntries;
- (void)dealloc;
- (id)init;

@end

@interface IBRespresentedObjectBinder : IBBinder
{
}

- (void)reflectValue:(id)arg1;
- (id)widgetValue;
- (id)defaultValue;

@end

@interface IBRubyGenerator : IBSourceCodeGenerator
{
}

+ (id)interfaceFileExtension;
+ (id)primaryFileExtension;
+ (id)languageDisplayName;
+ (id)languageIdentifier;
- (id)commentPrefixString;
- (id)generateSourceFilesForPartialClassDescription:(id)arg1 baseFileName:(id)arg2 directory:(id)arg3;
- (id)generatePreferredSourceCodeForNamedRelations:(id)arg1 ofRelationshipType:(long long)arg2 inClassDescription:(id)arg3;
- (id)generatePreferredSourceCodeForNamedRelation:(id)arg1 ofRelationshipType:(long long)arg2 inClassDescription:(id)arg3;

@end

@interface IBRubyParser : IBTaskBasedParser
{
    IBCFMutableDictionary *descriptionsToRelationshipTypesToOrderedRelations;
}

+ (id)supportedFileExtensions;
+ (void)initialize;
- (id)orderedRelationsOfRelationshipType:(long long)arg1 inClassDescription:(id)arg2;
- (id)processParserOutput:(id)arg1 fromFile:(id)arg2 errors:(id *)arg3;
- (id)parserLaunchPathForFile:(id)arg1;
- (id)parserLaunchArgumentsForFile:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface IBStackView : IBAutoLayoutView
{
    BOOL horizontal;
}

+ (id)stackView;
- (void)willRemoveSubview:(id)arg1;
- (void)didAddSubview:(id)arg1;
- (void)viewDidMoveToWindow;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)subviewFrameChanged:(id)arg1;
- (void)superviewFrameChanged:(id)arg1;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)layout;
- (BOOL)isFlipped;
- (BOOL)isVertical;
- (BOOL)isHorizontal;
- (void)setHorizontal:(BOOL)arg1;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;

@end

@interface IBScrollingStackView : IBStackView
{
    NSArray *views;
    NSView *firstVisible;
    long long maxVisibleViews;
    IBSlateScroller *scroller;
}

- (void)scrollWheel:(id)arg1;
- (void)scrollToMatchScroller:(id)arg1;
- (void)setScroller:(id)arg1;
- (void)pushScrollStateToScroller;
- (void)pullScrollStateFromScroller;
- (void)layout;
- (BOOL)canScrollDown;
- (BOOL)canScrollUp;
- (void)scrollTo:(long long)arg1;
- (long long)indexOfFirstVisibleView;
- (struct _NSRange)visibleRange;
- (long long)numberOfViews;
- (long long)maxVisibleViews;
- (void)setMaxVisibleViews:(long long)arg1;
- (void)dealloc;

@end

@interface IBSelectionOwner : NSObject
{
    IBMutableOrderedSet *selection;
    BOOL allowsMultipleSelection;
    id delegate;
}

+ (BOOL)eventWouldToggleSelection:(id)arg1;
+ (BOOL)eventWouldExtendSelection:(id)arg1;
- (void)didSelect:(id)arg1 andDeselect:(id)arg2;
- (void)willSelect:(id)arg1 andDeselect:(id)arg2;
- (id)firstSelectedObject;
- (id)lastSelectedObject;
- (id)selection;
- (long long)numberOfSelectedObjects;
- (void)clearSelection;
- (void)deselectObject:(id)arg1;
- (void)deselectObjects:(id)arg1;
- (void)selectObject:(id)arg1 withEvent:(id)arg2;
- (void)selectObjects:(id)arg1;
- (void)selectObject:(id)arg1;
- (void)selectObject:(id)arg1 byExtending:(BOOL)arg2 andToggling:(BOOL)arg3;
- (void)selectObjects:(id)arg1 withEvent:(id)arg2;
- (void)updateSelectionWithArrowMovement:(id)arg1 canidateLists:(id)arg2 andAnchor:(id *)arg3;
- (void)selectObjects:(id)arg1 byExtending:(BOOL)arg2 andToggling:(BOOL)arg3;
- (BOOL)selectionContainsObject:(id)arg1;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)setAllowsMultipleSelection:(BOOL)arg1;
- (BOOL)allowsMultipleSelection;
- (void)dealloc;
- (id)init;
- (id)initWithDelegate:(id)arg1;

@end

@interface IBSelfCompressingDataWrapper : NSObject
{
    NSData *originalData;
    NSData *compressedData;
}

@property(retain) NSData *compressedData; // @synthesize compressedData;
@property(retain) NSData *originalData; // @synthesize originalData;
- (id)data;
- (void)dealloc;
- (id)initWithData:(id)arg1 shouldCompress:(BOOL)arg2;

@end

@interface IBSizeBinder : IBIntBinder
{
}

+ (id)defaultAliasedKeyPathsForKeyPath:(id)arg1;
+ (id)sizeKeyPathForKeyPath:(id)arg1;
- (void)setValue:(id)arg1 forObject:(id)arg2;
- (id)valueForObject:(id)arg1;
- (id)sizeKeyPath;
- (BOOL)isWidth;

@end

@interface IBSlateBezierButton : NSView
{
    id target;
    SEL action;
    SEL dragAction;
    SEL rolledOverAction;
    BOOL rolledOver;
    BOOL drawsBackground;
    BOOL pressed;
    BOOL continuous;
    BOOL enabled;
    double repeatRate;
    double strokeWidth;
    double strokePad;
    NSColor *fillColor;
    NSColor *pressedFillColor;
    NSColor *disabledFillColor;
    NSMutableArray *iconContent;
    NSColor *strokeColor;
    NSColor *pressedStrokeColor;
    NSColor *disabledStrokeColor;
    id representedObject;
}

- (BOOL)acceptsFirstMouse:(id)arg1;
- (BOOL)isRolledOver;
- (void)setRolledOverAction:(SEL)arg1;
- (SEL)rolledOverAction;
- (void)setStrokePad:(double)arg1;
- (double)strokePad;
- (void)setStrokeWidth:(double)arg1;
- (double)strokeWidth;
- (void)setDragAction:(SEL)arg1;
- (SEL)dragAction;
- (void)setRepresentedObject:(id)arg1;
- (id)representedObject;
- (BOOL)isPressed;
- (BOOL)isEnabled;
- (id)target;
- (SEL)action;
- (void)globalMouseMoved:(id)arg1;
- (void)setRolledOver:(BOOL)arg1;
- (void)mouseUp:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)beginTrackingClickWithMouseDown:(id)arg1 validMouseUpArea:(struct CGRect)arg2;
- (void)fireDragActionWithEvent:(id)arg1;
- (void)fireActionWithEvent:(id)arg1;
- (void)fireRolledOverActionWithEvent:(id)arg1;
- (void)setPressed:(BOOL)arg1;
- (void)setDrawsBackground:(BOOL)arg1;
- (void)setAction:(SEL)arg1;
- (void)setTarget:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (id)currentFillColor;
- (id)currentStrokeColor;
- (id)disabledStrokeColor;
- (id)pressedStrokeColor;
- (id)strokeColor;
- (id)disabledFillColor;
- (id)pressedFillColor;
- (id)fillColor;
- (void)setPressedFillColor:(id)arg1;
- (void)setFillColor:(id)arg1;
- (void)setDisabledFillColor:(id)arg1;
- (void)setPressedStrokeColor:(id)arg1;
- (void)setDisabledStrokeColor:(id)arg1;
- (void)setStrokeColor:(id)arg1;
- (void)setContinuous:(BOOL)arg1;
- (double)repeatRate;
- (void)setRepeatRate:(float)arg1;
- (void)setEnabled:(BOOL)arg1;
- (id)iconContent;
- (void)removeIconContent:(id)arg1;
- (void)addIconContent:(id)arg1;
- (void)setIconContent:(id)arg1;
- (void)removeIconContentAtIndex:(long long)arg1;
- (void)insertIconContent:(id)arg1 atIndex:(long long)arg2;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface IBSlateBezierButtonIconContent : NSObject
{
    NSBezierPath *iconPath;
    NSColor *iconColor;
    NSColor *pressedIconColor;
    NSColor *disabledIconColor;
    BOOL strokes;
    IBSlateBezierButton *button;
}

- (void)drawRect:(struct CGRect)arg1;
- (void)setSlateBezierButton:(id)arg1;
- (id)slateBezierButton;
- (void)setStrokes:(BOOL)arg1;
- (BOOL)strokes;
- (id)disabledIconColor;
- (id)pressedIconColor;
- (id)iconColor;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithPath:(id)arg1 iconColor:(id)arg2 pressedIconColor:(id)arg3 andDisabledIconColor:(id)arg4;

@end

@interface IBSlatePopUpButton : IBSlateBezierButton
{
    NSMenu *menu;
    long long lastSelectedIndex;
    BOOL pullsDown;
    NSColor *menuTextColor;
    NSColor *menuBackgroundColor;
    NSColor *highlightedMenuTextColor;
    NSColor *highlightedMenuBackgroundColor;
    BOOL menuExtendsToLeft;
    BOOL showsStateImages;
    double maximumMenuWidth;
    Class labelViewClass;
}

- (void)setMaximumMenuWidth:(double)arg1;
- (double)maximumMenuWidth;
- (void)setMenuExtendsToLeft:(BOOL)arg1;
- (BOOL)menuExtendsToLeft;
- (void)setShowsStateImages:(BOOL)arg1;
- (BOOL)showsStateImages;
- (void)setHighlightedMenuBackgroundColor:(id)arg1;
- (id)highlightedMenuBackgroundColor;
- (void)setHighlightedMenuTextColor:(id)arg1;
- (id)highlightedMenuTextColor;
- (void)setMenuBackgroundColor:(id)arg1;
- (id)menuBackgroundColor;
- (void)setMenuTextColor:(id)arg1;
- (id)menuTextColor;
- (BOOL)pullsDown;
- (void)setPullsDown:(BOOL)arg1;
- (void)mouseDown:(id)arg1;
- (void)mouseUp:(id)arg1;
- (void)fireActionWithEvent:(id)arg1;
- (void)popUpMenuWithEvent:(id)arg1;
- (long long)selectedIndex;
- (void)setSelectedIndex:(long long)arg1;
- (id)selectedItem;
- (id)menu;
- (void)setLabelViewClass:(Class)arg1;
- (Class)labelViewClass;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface IBSlatePopUpMenuSeperatorItemView : IBSlateLabelView
{
}

- (void)drawRect:(struct CGRect)arg1;

@end

@interface IBSlatePopUpMenuView : IBStackView
{
    IBScrollingStackView *itemView;
    IBSlateBezierButton *scrollUpButton;
    IBSlateBezierButton *scrollDownButton;
    NSColor *backgroundColor;
    NSMutableArray *labelViews;
    NSArray *menuItems;
    DTTypeCompletionHandler *typeCompletionHandler;
}

- (void)drawRect:(struct CGRect)arg1;
- (void)ensureItemAtIndexIsVisible:(long long)arg1;
- (id)itemViewAtIndex:(long long)arg1;
- (void)layout;
- (BOOL)scrollDown;
- (BOOL)scrollUp;
- (void)refreshScrollers;
- (id)trackValueWithEvent:(id)arg1;
- (id)typeCompletionHandler:(id)arg1 typeCompletionStringForObject:(id)arg2;
- (void)setHighlightedBackgroundColor:(id)arg1;
- (void)setHighlightedTextColor:(id)arg1;
- (id)currentBackgroundColor;
- (void)setBackgroundColor:(id)arg1;
- (id)backgroundColor;
- (void)setTextColor:(id)arg1;
- (void)dealloc;
- (id)initWithMenuItems:(id)arg1 labelViewClass:(Class)arg2 showsStateImagesForItems:(id)arg3 andMaxWidth:(double)arg4;
- (id)scrollButtonIconContentBounds:(struct CGRect)arg1 upButton:(BOOL)arg2;

@end

@interface IBSlateScrollView : IBAutoLayoutView
{
    IBSlateScroller *vertScroller;
    IBSlateScroller *horzScroller;
    NSView *clipView;
    BOOL autohidesScrollers;
    BOOL allowRoomForGrowBox;
    BOOL hasVerticalScroller;
    BOOL hasHorizontalScroller;
    double scrollerSize;
}

- (void)scrollWheel:(id)arg1;
- (void)setHasHorizontalScroller:(BOOL)arg1;
- (BOOL)hasHorizontalScroller;
- (void)setHasVerticalScroller:(BOOL)arg1;
- (BOOL)hasVerticalScroller;
- (void)setAllowRoomForGrowBox:(BOOL)arg1;
- (BOOL)allowRoomForGrowBox;
- (void)setAutohidesScrollers:(BOOL)arg1;
- (BOOL)autohidesScrollers;
- (void)drawRect:(struct CGRect)arg1;
- (id)contentView;
- (id)verticalScroller;
- (id)horizontalScroller;
- (void)setDocumentView:(id)arg1;
- (id)documentView;
- (void)setScrollerSize:(double)arg1;
- (double)scrollerSize;
- (void)setScrollPosition:(struct CGSize)arg1;
- (struct CGSize)scrollPosition;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)scrollVertically:(id)arg1;
- (void)scrollHorizontally:(id)arg1;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)layout;
- (void)adjustKnobs;
- (struct CGSize)frameSizeForContentSize:(struct CGSize)arg1;
- (struct CGRect)growBoxRect;
- (struct CGRect)vertScrollerRect;
- (struct CGRect)horzScrollerRect;
- (struct CGRect)contentRect;
- (double)borderSize;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface IBSlateScroller : NSView
{
    IBSlateBezierButton *maxScrollButton;
    IBSlateBezierButton *minScrollButton;
    NSColor *trackColor;
    NSColor *knobColor;
    NSColor *trackedKnobColor;
    NSColor *backgroundColor;
    NSColor *buttonDisabledIconColor;
    NSColor *buttonPressedIconColor;
    NSColor *buttonIconColor;
    double knobPortion;
    double knobPosition;
    double lineScroll;
    double pageScroll;
    id target;
    SEL action;
    BOOL trackingKnob;
    BOOL enabled;
    BOOL showsArrows;
}

- (BOOL)isEnabled;
- (void)setEnabled:(BOOL)arg1;
- (BOOL)showsArrows;
- (void)setShowsArrows:(BOOL)arg1;
- (void)scrollWheel:(id)arg1;
- (void)scrollWithScrollWheelEvent:(id)arg1;
- (void)setBackgroundColor:(id)arg1;
- (id)backgroundColor;
- (void)setTrackedKnobColor:(id)arg1;
- (id)trackedKnobColor;
- (void)setKnobColor:(id)arg1;
- (id)knobColor;
- (void)setTrackColor:(id)arg1;
- (id)trackColor;
- (void)setButtonDisabledFillColor:(id)arg1;
- (void)setButtonDisabledIconColor:(id)arg1;
- (void)setButtonPressedIconColor:(id)arg1;
- (void)setButtonIconColor:(id)arg1;
- (void)setButtonPressedFillColor:(id)arg1;
- (void)setButtonFillColor:(id)arg1;
- (void)setTrackingKnob:(BOOL)arg1;
- (BOOL)isTrackingKnob;
- (void)setPageScroll:(double)arg1;
- (double)pageScroll;
- (void)setLineScroll:(double)arg1;
- (double)lineScroll;
- (void)setAction:(SEL)arg1;
- (SEL)action;
- (void)setTarget:(id)arg1;
- (id)target;
- (void)setKnobPosition:(double)arg1;
- (double)knobPosition;
- (float)floatValue;
- (double)doubleValue;
- (void)setKnobPortion:(double)arg1;
- (double)knobPortion;
- (void)setFloatValue:(float)arg1 knobProportion:(double)arg2;
- (void)mouseDown:(id)arg1;
- (void)trackKnobWithEvent:(id)arg1;
- (void)scrollMin:(id)arg1;
- (void)scrollMax:(id)arg1;
- (void)scrollLineDown:(id)arg1;
- (void)scrollLineUp:(id)arg1;
- (void)scrollPageDown:(id)arg1;
- (void)scrollPageUp:(id)arg1;
- (void)fire;
- (void)drawRect:(struct CGRect)arg1;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)refreshButtons;
- (void)refreshButtonStates;
- (struct CGRect)knobRect;
- (struct CGRect)trackRect;
- (struct CGRect)maxScrollButtonRect;
- (struct CGRect)minScrollButtonRect;
- (BOOL)showsKnob;
- (BOOL)showsButtons;
- (double)length;
- (double)scrollerSize;
- (BOOL)isVertical;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (struct CGRect)iconBounds;

@end

@interface IBSlateScrollerClipView : NSView
{
}

- (void)makeRectVisible:(struct CGRect)arg1 ofView:(id)arg2;
- (id)documentView;
- (id)scrollView;
- (BOOL)isFlipped;

@end

@interface IBSourceCodeController : NSObject <NSCopying>
{
    IBTargetRuntime *targetRuntime;
    NSMutableSet *parserClasses;
    NSMutableSet *generatorClasses;
    NSMutableDictionary *languageIdentifierToDisplayNameMap;
    NSMutableDictionary *languageIdentifierToGeneratorClassMap;
    NSMutableDictionary *extensionToParserClassMap;
}

+ (id)sourceCodeControllerForTargetRuntime:(id)arg1;
- (id)defaultSourceCodeGenerator;
- (void)setDefaultGeneratorClass:(Class)arg1;
- (Class)defaultSourceCodeGeneratorClass;
- (id)defaultSourceCodeGeneratorDefaultsKey;
- (id)languageIdentifiers;
- (id)generatorForLanguageIdentifier:(id)arg1;
- (Class)generatorClassForLanguageIdentifier:(id)arg1;
- (id)parserForFileExtension:(id)arg1 error:(id *)arg2;
- (Class)parserClassForExtension:(id)arg1;
- (id)supportedFileExtensions;
- (id)languageIdentifierToDisplayNameMap;
- (id)targetRuntime;
- (void)dealloc;
- (id)initWithTargetRuntime:(id)arg1;
- (void)addGeneratorClass:(Class)arg1;
- (void)addParserClass:(Class)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface IBSourceCodeGeneratorDialogController : NSObject <NSOpenSavePanelDelegate>
{
    NSView *accessoryView;
    NSPopUpButton *languagePopUp;
    NSButton *alsoGenerateCheckbox;
    NSSavePanel *savePanel;
    NSString *selectedBaseFileName;
    NSString *selectedDirectory;
    NSString *selectedLanguageIdentifier;
    IBPartialClassDescription *description;
    IBSourceCodeController *sourceController;
}

+ (id)sourceCodeGeneratorDialogControllerForTargetRuntime:(id)arg1;
- (void)runDialogToGenerateSourceCodeForClassName:(id)arg1 fromDocument:(id)arg2;
- (id)panel:(id)arg1 userEnteredFilename:(id)arg2 confirmed:(BOOL)arg3;
- (void)runDialogToGenerateSourceCodeForPartialClassDescription:(id)arg1 fromDocument:(id)arg2;
- (void)projectInsertionPanel:(id)arg1 finishedInsertFiles:(id)arg2 intoTargets:(id)arg3 success:(BOOL)arg4;
- (void)generateSourceFilesWithBaseName:(id)arg1 inDirectory:(id)arg2 forLanguage:(id)arg3;
- (BOOL)mergeSource:(id)arg1 prototypeSource:(id)arg2 intoDirectory:(id)arg3 error:(id *)arg4;
- (void)languagePopUpDidChange:(id)arg1;
- (void)setSelectedGeneratorClass:(Class)arg1;
- (void)ensureInterfaceIsLoaded;
- (void)dealloc;
- (id)initWithTargetRuntime:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IBSourceCodeGeneratorSavePanel : NSSavePanel
{
}

- (void)ok:(id)arg1;

@end

@interface IBSourceOutlineView : NSOutlineView
{
    NSTableColumn *headerColumn;
}

- (id)headerColumn;
- (void)setHeaderColumn:(id)arg1;
- (void)setNeedsDisplayInRect:(struct CGRect)arg1;
- (void)drawRow:(long long)arg1 clipRect:(struct CGRect)arg2;

@end

@interface IBStaticlyDeclaredIntegrationKeyPathsManager : NSObject
{
    NSArray *flattenedKeyPathsByClass;
    NSArray *keyPathsByClass;
}

+ (id)sharedInstnace;
- (id)flattenedKeyPathsForSetWithID:(long long)arg1 andClass:(Class)arg2;
- (void)removeKeyPaths:(id)arg1 fromKeyPathSetWithID:(long long)arg2 forClass:(Class)arg3;
- (void)addKeyPaths:(id)arg1 toKeyPathSetWithID:(long long)arg2 forClass:(Class)arg3;
- (void)dropKeyPathIndexes;
- (void)dealloc;
- (id)init;

@end

@interface IBStringArrayController : NSArrayController
{
    id _inspectorContent;
    NSTableView *_editingView;
}

- (id)content;
- (void)setContent:(id)arg1;
- (void)removeObjectsAtArrangedObjectIndexes:(id)arg1;
- (void)addObject:(id)arg1;
- (id)arrangeObjects:(id)arg1;
- (void)dealloc;
- (id)init;
- (id)newObject;

@end

@interface IBStringBinder : IBBinder
{
}

- (void)reflectValue:(id)arg1;
- (id)widgetValue;
- (id)defaultValue;

@end

@interface IBStringEditorCell : NSCell
{
    double lineFragmentPadding;
}

- (id)setUpFieldEditorAttributes:(id)arg1;
- (void)setLineFragmentPadding:(double)arg1;
- (double)lineFragmentPadding;

@end

@interface IBStringROMDefeatingString : NSString
{
    unsigned short *characters;
    long long length;
}

+ (id)stringWithString:(id)arg1;
- (void)getCharacters:(unsigned short *)arg1 range:(struct _NSRange)arg2;
- (unsigned short)characterAtIndex:(unsigned long long)arg1;
- (unsigned long long)length;
- (void)dealloc;
- (id)initWithString:(id)arg1;

@end

@interface IBStringsTableRecord : NSObject
{
    id representedMember;
    long long valueArrayBasedIndex;
    NSString *valueKeyPath;
    long long valueSet;
    NSString *valuePropertyName;
    IBTextViewCell *cell;
}

+ (id)recordWithMember:(id)arg1 andData:(id)arg2;
+ (id)sortDescriptors;
+ (id)sortDescriptorForCategory:(id)arg1;
+ (id)supportedCategories;
- (id)selectionIdentifier;
- (id)document;
- (BOOL)selectRepresentedMemberInEditor;
- (void)replaceAllOccurrencesOfString:(id)arg1 withString:(id)arg2 withOptions:(unsigned long long)arg3;
- (void)replaceValueStringWithString:(id)arg1 forRange:(struct _NSRange)arg2;
- (BOOL)containsSearchString:(id)arg1 inCategory:(id)arg2 withOptions:(unsigned long long)arg3;
- (struct _NSRange)rangeOfSearchString:(id)arg1 inCategory:(id)arg2 withOptions:(unsigned long long)arg3;
- (id)rangesOfSearchString:(id)arg1 inCategory:(id)arg2 withOptions:(unsigned long long)arg3;
- (BOOL)isRepresentedMemberInDocument:(id)arg1;
- (BOOL)isValueNotEmptyString;
- (void)setCell:(id)arg1;
- (id)cell;
- (id)valuePropertyName;
- (long long)valueArrayBasedIndex;
- (long long)valueSetType;
- (id)valueSet;
- (id)valueKeyPath;
- (void)setValue:(id)arg1;
- (id)value;
- (id)memberName;
- (id)memberClassName;
- (id)memberID;
- (id)member;
- (void)dealloc;
- (id)initWithMember:(id)arg1 andData:(id)arg2;

@end

@interface IBStringsTableConnectionRecord : IBStringsTableRecord
{
}

- (id)memberName;
- (id)memberClassName;
- (id)memberID;
- (id)document;

@end

@interface IBStringsTableController : NSObject <IBStringsTableWindowDelegate, IBStringsTableViewDelegate, NSTableViewDataSource>
{
    IBStringsTableWindow *stringsTableWindow;
    NSScrollView *stringsTableScrollView;
    IBStringsTableView *stringsTableView;
    NSPopUpButton *documentScopePopUpButton;
    NSSearchField *filterSearchField;
    NSToolbarItem *searchFieldToolbarItem;
    NSToolbarItem *emptyStringsToolbarItem;
    IBStringsTableVerticalGradientView *categoryButtonsView;
    NSButton *allCategoryButton;
    NSButton *objectIDCategoryButton;
    NSButton *objectClassCategoryButton;
    NSButton *objectNameCategoryButton;
    NSButton *valueCategoryButton;
    NSButton *propertyCategoryButton;
    NSBox *categoryButtonsLine;
    NSView *findView;
    NSPopUpButton *findReplacePopUpButton;
    NSSearchField *findSearchField;
    NSView *replaceView;
    NSSearchField *replaceTextField;
    NSView *findReplaceButtonsView;
    NSSegmentedControl *findNavigationSegmentedControl;
    NSTextField *findResultsLabel;
    NSButton *replaceButton;
    NSButton *replaceAndFindButton;
    NSButton *replaceAllButton;
    NSBox *findReplaceLine;
    NSButton *doneButton;
    NSView *fillerView;
    IBIconAndTextCell *iconAndTextCell;
    IBStringsTableFieldEditor *fieldEditor;
    NSArray *records;
    NSMutableDictionary *selectionIDsToRecords;
    NSArray *recordsCache;
    NSArray *previouslySelectedRecords;
    NSMapTable *documentsToMembersToRecords;
    BOOL isCacheInvalid;
    BOOL observingChanges;
    NSMapTable *addedMembers;
    NSMutableSet *addedDocuments;
    NSMapTable *removedMembers;
    NSMutableSet *removedDocuments;
    NSMapTable *invalidatedMembers;
    IBInvalidationPolicy *invalidationPolicy;
    long long documentScope;
    NSString *currentCategory;
    NSString *previousCategory;
    NSString *filterString;
    NSArray *recordsFilteredByDocumentScope;
    NSMenuItem *allDocumentsMenuItem;
    NSString *findString;
    NSArray *findResults;
    long long foundInstancesCount;
    BOOL shouldClipFindRects;
    NSViewAnimation *categoryButtonsViewAnimation;
    NSViewAnimation *findViewAnimation;
    NSViewAnimation *replaceViewAnimation;
    NSUndoManager *defaultUndoManager;
}

+ (void)setIgnoreCase:(BOOL)arg1;
+ (BOOL)ignoreCase;
+ (void)setExcludeEmptyStrings:(BOOL)arg1;
+ (BOOL)excludeEmptyStrings;
+ (id)sharedInstance;
- (void)replaceAllButtonAction:(id)arg1;
- (void)replaceAndFindButtonAction:(id)arg1;
- (void)replaceButtonAction:(id)arg1;
- (void)replaceFindButtonAction:(id)arg1;
- (void)findNavigationSegmentedControlAction:(id)arg1;
- (void)toggleIgnoreCase:(id)arg1;
- (void)toggleEmptyStrings:(id)arg1;
- (void)findSearchFieldAction:(id)arg1;
- (void)findReplacePopUpButtonAction:(id)arg1;
- (void)doneButtonClicked:(id)arg1;
- (void)toggleColumnVisibility:(id)arg1;
- (void)categoryFilterButtonClicked:(id)arg1;
- (void)documentFilterSelected:(id)arg1;
- (void)searchFieldAction:(id)arg1;
- (void)doubleClickedObject:(id)arg1;
- (BOOL)tableView:(id)arg1 writeRowsWithIndexes:(id)arg2 toPasteboard:(id)arg3;
- (id)tableView:(id)arg1 dataCellForTableColumn:(id)arg2 row:(long long)arg3;
- (void)tableView:(id)arg1 sortDescriptorsDidChange:(id)arg2;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)tableView:(id)arg1 setObjectValue:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (id)windowWillReturnUndoManager:(id)arg1;
- (void)windowDidResignKey:(id)arg1;
- (void)performFindPanelAction:(id)arg1;
- (void)checkSpelling:(id)arg1;
- (id)windowWillReturnFieldEditor:(id)arg1 toObject:(id)arg2;
- (void)fieldEditorDidEndEditing:(id)arg1;
- (void)applicationWillTerminate:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (void)documentDidChangeName:(id)arg1;
- (void)documentWillClose:(id)arg1;
- (void)documentDidOpen:(id)arg1;
- (void)document:(id)arg1 didRemoveMember:(id)arg2;
- (void)document:(id)arg1 didAddMember:(id)arg2;
- (void)noteMember:(id)arg1 didChangeProperty:(id)arg2 fromValue:(id)arg3 inDocument:(id)arg4;
- (void)queueValidationOfMember:(id)arg1 ofDocument:(id)arg2;
- (void)queueRemovalOfDocument:(id)arg1;
- (void)queueRemovalOfMember:(id)arg1 fromDocument:(id)arg2;
- (void)queueAdditionOfDocument:(id)arg1;
- (void)queueAdditionOfMember:(id)arg1 toDocument:(id)arg2;
- (void)rebuildFindSearchFieldMenu;
- (void)rebuildFilterSearchFieldMenu;
- (id)fieldEditor;
- (void)pushDocumentScopeToUI;
- (void)rebuildDocumentScopePopUpButtonMenu;
- (void)animateReplaceView:(BOOL)arg1;
- (void)animateFindView:(BOOL)arg1;
- (void)animateCategoryButtonsView:(BOOL)arg1;
- (void)hideReplaceButtons:(BOOL)arg1;
- (void)turnOffCategoryButtonsOtherThanButton:(id)arg1;
- (BOOL)isReplaceViewVisible;
- (BOOL)isFindViewVisible;
- (BOOL)isCategoryButtonsViewVisible;
- (id)documentDomain;
- (long long)findSearchOptions;
- (void)invalidateCache;
- (BOOL)isCacheInvalid;
- (void)configureReplaceView;
- (void)configureTableView;
- (id)recordsCache;
- (void)setIsObservingChanges:(BOOL)arg1;
- (BOOL)isObservingChanges;
- (void)validateStringsTable:(id)arg1;
- (void)forceValidateStringsTableAndTryToMaintainSelection:(BOOL)arg1;
- (void)invalidateStringsTableAndTryToMaintainSelection:(BOOL)arg1;
- (void)invalidateSelectedRecordsAndSaveSelection:(BOOL)arg1;
- (BOOL)validateMembersInQueue;
- (BOOL)removeDocumentsInQueue;
- (BOOL)removeMembersInQueue;
- (BOOL)addDocumentsInQueue;
- (BOOL)addMembersInQueue;
- (void)repopulateRecords;
- (id)window;
- (id)tableView;
- (void)show;
- (id)recordForSelectionID:(id)arg1;
- (id)selectionIDsMap;
- (void)rebuildSelectionIDsMap;
- (void)setRecords:(id)arg1;
- (id)records;
- (void)invalidateSelectionIDsMap;
- (void)removeRecordsForMember:(id)arg1 ofDocument:(id)arg2;
- (void)removeRecordsForMembersOfDocument:(id)arg1;
- (void)addRecordsForMembersOfDocument:(id)arg1;
- (void)addRecordsForMember:(id)arg1 ofDocument:(id)arg2;
- (BOOL)hasRecordsForMember:(id)arg1 ofDocument:(id)arg2;
- (void)filter;
- (id)filterRecords:(id)arg1 bySearchString:(id)arg2 inCategory:(id)arg3 excludeEmptyStrings:(BOOL)arg4;
- (id)filterRecords:(id)arg1 toScope:(long long)arg2;
- (void)setPreviousCategory:(id)arg1;
- (id)previousCategory;
- (void)setCurrentCategory:(id)arg1;
- (id)currentCategory;
- (void)setDocumentScope:(long long)arg1;
- (long long)documentScope;
- (void)setFilterString:(id)arg1;
- (id)filterString;
- (void)replaceAll;
- (void)replaceSelectedRecordWithDialog:(BOOL)arg1;
- (void)alertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)replaceDialogForOccurrences:(long long)arg1 ofValue:(id)arg2 outOfTotal:(long long)arg3 withNewValue:(id)arg4 andContextInfo:(void *)arg5;
- (void)findNextForward:(BOOL)arg1 sender:(id)arg2;
- (void)findForward:(BOOL)arg1 andShowIndicator:(BOOL)arg2;
- (id)recordsContainingSearchString:(id)arg1 beginningWithRow:(long long)arg2;
- (void)showFindResultsLabel:(BOOL)arg1;
- (id)boundingRectsOfCurrentFindResults;
- (void)setShouldClipFindRects:(BOOL)arg1;
- (BOOL)shouldClipFindRects;
- (void)setFindResults:(id)arg1;
- (id)findResults;
- (long long)countOfFoundInstances;
- (id)boundingRectsOfSearchString:(id)arg1 inRecords:(id)arg2;
- (void)setFindString:(id)arg1;
- (id)findString;
- (void)awakeFromNib;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IBStringsTableFieldEditor : NSTextView
{
    IBStringsTableController *controller;
    NSString *searchTerm;
    BOOL hasPendingChanges;
}

- (void)performFindPanelAction:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)occurrenceOfSearchString:(id)arg1 forward:(BOOL)arg2 showIndicator:(BOOL)arg3;
- (void)checkSpelling:(id)arg1;
- (BOOL)rangeIsMarkedAsMisspelled:(struct _NSRange)arg1;
- (BOOL)resignFirstResponder;
- (void)didChangeText;
- (void)dealloc;
- (id)initWithController:(id)arg1;

@end

@interface IBStringsTableObjectRecord : IBStringsTableRecord
{
}

- (BOOL)selectRepresentedMemberInEditor;
- (id)memberName;
- (id)memberClassName;
- (id)memberID;
- (id)document;

@end

@interface IBStringsTableVerticalGradientView : NSView
{
    NSArray *colors;
    NSArray *stops;
}

- (void)setStops:(id)arg1;
- (void)setColors:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)dealloc;
- (id)initWithColors:(id)arg1 andStops:(id)arg2;

@end

@interface IBStringsTableView : NSTableView
{
    long long lastTextMovement;
}

- (void)copy:(id)arg1;
- (void)viewWillDraw;
- (void)drawRect:(struct CGRect)arg1;
- (long long)lastTextMovement;
- (void)textDidEndEditing:(id)arg1;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (void)dealloc;

@end

@interface IBStringsTableWindow : NSPanel
{
}

- (void)findNextForward:(BOOL)arg1 sender:(id)arg2;
- (void)performFindPanelAction:(id)arg1;
- (void)checkSpelling:(id)arg1;
- (id)delegate;
- (void)setDelegate:(id)arg1;

@end

@interface IBSubElementWindow : NSWindow
{
}

- (BOOL)canBecomeKeyWindow;
- (BOOL)canBecomeMainWindow;

@end

@interface IBSubElementWindowController : IBWindowController
{
    NSDictionary *elements;
    NSMutableArray *orderedObjects;
    IBEditor *editor;
    long long blocks;
    BOOL valid;
    BOOL validating;
}

+ (id)elementsWindow;
- (void)elementViewDidDraw:(id)arg1;
- (void)elementViewWillDraw:(id)arg1;
- (void)deselectObjects:(id)arg1;
- (void)close;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (void)delete:(id)arg1;
- (void)elementViewSelectionChanged:(id)arg1;
- (id)acceptedDragTypes;
- (id)objectsAtPoint:(struct CGPoint)arg1;
- (id)connectionEndPointForPrototype:(id)arg1 atPoint:(struct CGPoint)arg2;
- (struct CGRect)screenRectForObject:(id)arg1;
- (id)selection;
- (void)layoutWithParentFrame:(struct CGRect)arg1 inParentWindowController:(id)arg2;
- (void)enableUpdates;
- (void)blockUpdates;
- (void)validate:(id)arg1;
- (void)invalidate;
- (id)elements;
- (id)elementView;
- (void)dealloc;
- (id)initWithSubElements:(id)arg1 andEditor:(id)arg2;

@end

@interface IBSubviewEmbeddingPolicy : IBEmbeddingPolicy
{
    NSView *templateContainer;
    IBTargetRuntime *targetRuntime;
}

- (id)presentationGroupingKey;
- (BOOL)canEmbedObjects:(id)arg1 fromDocument:(id)arg2;
- (id)embedObjects:(id)arg1 fromDocument:(id)arg2;
- (void)moveViews:(id)arg1 intoContentView:(id)arg2 ofContainer:(id)arg3 withParent:(id)arg4 forDocument:(id)arg5;
- (id)targetRuntime;
- (id)containerName;
- (id)instantiateTemplateContainer;
- (id)templateContainer;
- (void)dealloc;
- (id)initWithTemplateContainer:(id)arg1 andRuntimeName:(id)arg2;
- (id)initWithTemplateContainer:(id)arg1 andTargetRuntime:(id)arg2;

@end

@interface IBTabViewEmbeddingPolicy : IBSubviewEmbeddingPolicy
{
}

- (id)embedObjects:(id)arg1 fromDocument:(id)arg2;

@end

@interface IBTableColumn : NSTableColumn
{
}

- (BOOL)_canUseReorderResizeImageCache;

@end

@interface IBTargetIdentifier : NSObject
{
    NSWindow *frame;
    NSTimer *timer;
    NSString *groupName;
    BOOL releasesOnOrderOut;
    long long cancelationToken;
}

+ (long long)displayTarget:(struct CGRect)arg1 withCaption:(id)arg2 inWindow:(id)arg3 untilDate:(id)arg4 forIdentificationGroup:(id)arg5;
+ (long long)displayTargets:(id)arg1 withCaptions:(id)arg2 inWindows:(id)arg3 untilDate:(id)arg4 forIdentificationGroup:(id)arg5;
+ (void)orderOutIdentifersWithGroupName:(id)arg1;
+ (void)orderOutIdentifersWithCancelationToken:(long long)arg1;
+ (id)windowForTarget:(struct CGRect)arg1 withCaption:(id)arg2;
+ (id)windowForTargetFraming;
+ (long long)nextCancelationToken;
- (long long)displayTarget:(struct CGRect)arg1 withCaption:(id)arg2 inWindow:(id)arg3;
- (long long)displayTarget:(struct CGRect)arg1 withCaption:(id)arg2 inWindow:(id)arg3 untilDate:(id)arg4;
- (void)setReleasesOnOrderOut:(BOOL)arg1;
- (void)setCancelationToken:(long long)arg1;
- (long long)cancelationToken;
- (void)setGroupName:(id)arg1;
- (id)groupName;
- (void)cancelIdentifier:(id)arg1;
- (void)orderInFrontOf:(id)arg1;
- (void)orderOut;
- (void)setColor:(id)arg1;
- (id)color;
- (void)dealloc;
- (id)init;

@end

@interface IBTargetIdentifierInfoView : NSView
{
    struct CGRect textRect;
    struct CGRect targetRect;
    struct CGRect localTargetRect;
    NSString *caption;
    NSColor *baseColor;
    BOOL usesAlternateColor;
}

- (void)layout;
- (void)drawRect:(struct CGRect)arg1;
- (void)drawFrame:(struct CGRect)arg1;
- (void)drawText:(struct CGRect)arg1;
- (void)drawBackground:(struct CGRect)arg1;
- (id)attributedTitle;
- (id)textFrameColor;
- (id)fillColor;
- (id)textFillColor;
- (id)baseColor;
- (void)setBaseColor:(id)arg1;
- (void)setTargetRect:(struct CGRect)arg1 andCaption:(id)arg2;
- (BOOL)isOpaque;
- (void)dealloc;

@end

@interface IBTargetRuntime : NSObject
{
    NSString *integratingPluginIdentifier;
}

+ (id)fallbackTargetRuntime;
+ (void)setLastActiveTargetRuntime:(id)arg1;
+ (id)lastActiveTargetRuntime;
+ (id)targetRuntimeWithIdentifier:(id)arg1;
+ (id)sharedTargetRuntime;
+ (void)registerSharedInstanceWithIntegratingPluginIdentifier:(id)arg1;
- (long long)preferredSystemTarget;
- (id)includedLibraryCategories;
- (id)windowPasteboardType;
- (id)menuItemPasteboardType;
- (id)menuPasteboardType;
- (id)viewPasteboardType;
- (id)objectPasteboardType;
- (id)integratingPluginIdentifier;
- (id)identifier;
- (void)dealloc;
- (id)initWithIntegratingPluginIdentifier:(id)arg1;

@end

@interface IBTargetVersionDependencySet : NSObject
{
    IBDocument *document;
    NSMutableDictionary *pluginDeclaredDependencies;
    NSMutableDictionary *pluginDeclaredDependencyDefaults;
    long long category;
}

- (void)setVersion:(id)arg1 forPluginDeclaredDependency:(id)arg2;
- (void)setDefaultVersion:(id)arg1 forPluginDeclaredDependency:(id)arg2;
- (id)effectiveVersionForPluginDeclaredDependency:(id)arg1;
- (id)effectiveDefaultVersionForPluginDeclaredDependency:(id)arg1;
- (id)defaultVersionForPluginDeclaredDependency:(id)arg1;
- (id)versionForPluginDeclaredDependency:(id)arg1;
@property(copy) NSDictionary *pluginDeclaredDependencyDefaults;
@property(copy) NSDictionary *pluginDeclaredDependencies;
- (id)prunePluginDeclaredDependencies:(id)arg1;
- (id)validPluginDeclaredDependencyIDs;
- (id)pluginIdentifiersWithApplicablePluginDeclaredDependencies;
- (void)dealloc;
- (id)initWithDocument:(id)arg1 forCategory:(long long)arg2;

@end

@interface IBTextChangePostingTableView : NSTableView
{
    long long _mouseRow;
    long long _mouseCol;
    NSCell *_mouseCell;
    long long lastTextMovement;
}

- (long long)lastTextMovement;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (BOOL)askDataSourceCanRemoveRowsWithIndexes:(id)arg1;
- (BOOL)askDataSourceCanWriteRowsWithIndexesToPasteboard:(id)arg1;
- (void)cut:(id)arg1;
- (void)copy:(id)arg1;
- (BOOL)textView:(id)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementString:(id)arg3;
- (struct _NSRange)textView:(id)arg1 willChangeSelectionFromCharacterRange:(struct _NSRange)arg2 toCharacterRange:(struct _NSRange)arg3;
- (id)textView:(id)arg1 completions:(id)arg2 forPartialWordRange:(struct _NSRange)arg3 indexOfSelectedItem:(long long *)arg4;
- (void)textDidEndEditing:(id)arg1;
- (void)textDidChange:(id)arg1;
- (void)updateCell:(id)arg1;
- (id)preparedCellAtColumn:(long long)arg1 row:(long long)arg2;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)updateTrackingAreas;
- (void)resetCursorRects;
- (void)setMouseCell:(id)arg1 row:(long long)arg2 col:(long long)arg3;
- (id)mouseCell;
- (id)dataSource;
- (void)setDataSource:(id)arg1;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (id)init;

@end

@interface IBTextViewCell : NSTextFieldCell
{
    NSTextStorage *textStorage;
    NSArray *misspelledRanges;
}

- (void)editWithFrame:(struct CGRect)arg1 inView:(id)arg2 editor:(id)arg3 delegate:(id)arg4 event:(id)arg5;
- (void)selectWithFrame:(struct CGRect)arg1 inView:(id)arg2 editor:(id)arg3 delegate:(id)arg4 start:(long long)arg5 length:(long long)arg6;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (struct CGRect)boundsOfRange:(struct _NSRange)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)configureTextSystem;
- (void)setObjectValue:(id)arg1;
- (BOOL)containsMisspelling;
- (id)misspelledRanges;
- (void)invalidateMisspelledRanges;
- (void)setTextStorage:(id)arg1;
- (id)textStorage;
- (void)dealloc;
- (void)awakeFromNib;
- (id)init;

@end

@interface IBToManyOutletInfo : IBAbstractRelationshipInfo
{
    NSString *collectionClassName;
}

+ (id)relationshipInfoWithName:(id)arg1 andCandidateClassName:(id)arg2;
+ (id)relationshipInfoWithName:(id)arg1 candidateClassName:(id)arg2 andCollectionClassName:(id)arg3;
- (id)description;
- (BOOL)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)relationshipInfoWithCandidateClassName:(id)arg1;
- (id)relationshipInfoWithName:(id)arg1;
@property(readonly) NSString *collectionClassName;
- (long long)relationshipType;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithName:(id)arg1 candidateClassName:(id)arg2 andCollectionClassName:(id)arg3;

@end

@interface IBToManyOutletRelationController : IBLibraryClassRelationController
{
}

- (id)label;
- (long long)relationshipType;
- (id)generateUnusedRelationshipName;
- (void)viewDidLoad;

@end

@interface IBToOneOutletInfo : IBAbstractRelationshipInfo
{
}

- (long long)relationshipType;

@end

@interface IBToOneOutletRelationController : IBLibraryClassRelationController
{
}

- (id)label;
- (long long)relationshipType;
- (id)generateUnusedRelationshipName;
- (void)viewDidLoad;

@end

@interface IBUIMetrics : NSObject
{
    struct __CFDictionary *maxSizes;
    struct __CFDictionary *minSizes;
    struct __CFDictionary *insets;
    struct IBInsetTag *insetValues;
    struct CGSize *maxSizeValues;
    struct CGSize *minSizeValues;
    struct CGSize defaultMinSize;
    struct CGSize defaultMaxSize;
    struct IBInsetTag defaultInset;
}

- (struct IBInsetTag)shadowForWidget:(id)arg1;
- (struct CGSize)maximumLayoutSizeForWidget:(id)arg1;
- (struct CGSize)minimumLayoutSizeForWidget:(id)arg1;
- (void)dealloc;
- (id)initWithConstraints:(id)arg1 andShadowInsets:(id)arg2;

@end

@interface IBUndoView : NSView
{
    NSUndoManager *undoManager;
}

- (BOOL)validateUserInterfaceItem:(id)arg1;
- (void)redo:(id)arg1;
- (void)undo:(id)arg1;
- (void)setUndoManager:(id)arg1;
- (BOOL)acceptsFirstResponder;

@end

@interface IBUserGuide : IBLayoutGuide <NSCoding>
{
    NSView *view;
    unsigned long long affinity;
    double location;
    BOOL dragging;
}

- (void)drawInView:(id)arg1;
- (void)trackWithLeftMouseDownEvent:(id)arg1;
- (id)view;
- (struct CGRect)maxTipRect;
- (struct CGRect)minTipRect;
- (struct CGRect)placementTipRect;
- (struct CGSize)tipSize;
- (id)maxTip;
- (id)minTip;
- (id)attributedTip:(id)arg1;
- (double)distanceFromMaxEdge;
- (double)distanceFromMinEdge;
- (BOOL)isVisible;
- (unsigned long long)affinity;
- (void)setAffinity:(unsigned long long)arg1;
- (struct CGRect)rect;
- (struct CGPoint)end;
- (struct CGPoint)start;
- (void)setLocation:(double)arg1;
- (double)location;
- (id)document;
- (BOOL)isVertical;
- (struct CGRect)windowFrame;
- (void)invalidate;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithView:(id)arg1 location:(double)arg2 andAffinity:(unsigned long long)arg3;

@end

@interface IBVerticalScrollView : NSScrollView
{
}

- (void)tile;

@end

@interface IBViewBackedImageRep : NSImageRep
{
    NSView *view;
    BOOL transformsWhenScaled;
    double opacity;
}

+ (id)imageOfView:(id)arg1 transformsWhenScaled:(BOOL)arg2 opacity:(double)arg3;
- (void)viewBoundsChanged:(id)arg1;
- (void)setView:(id)arg1;
- (id)view;
- (void)setTransformsWhenScaled:(BOOL)arg1;
- (BOOL)transformsWhenScaled;
- (BOOL)_drawFromRect:(struct CGRect)arg1 toRect:(struct CGRect)arg2 operation:(unsigned long long)arg3 alpha:(double)arg4 compositing:(BOOL)arg5 flipped:(BOOL)arg6 ignoreContext:(BOOL)arg7;
- (BOOL)drawInRect:(struct CGRect)arg1;
- (BOOL)draw;
- (double)opacity;
- (void)setOpacity:(double)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithView:(id)arg1;

@end

@interface IBViewEditor : IBEditor
{
    struct __CFRunLoopObserver *observer;
    id extraspace2;
    BOOL inFrameChanged;
    BOOL translatingViews;
    struct CGRect bandSelectionRect;
    BOOL reguardSiblingsIngoredForDragGuides;
    NSSet *siblingsIngoredForDragGuides;
    id activeTracker;
    id extraspace;
    BOOL unused;
    long long pasteOffsetType;
    struct CGPoint nextPasteTarget;
    NSSet *previousSelection;
    unsigned long long dragAndDropGuideDisplayToken;
    id autoresizer;
    id reserved1;
    id reserved2;
    id reserved3;
    id reserved4;
    id reserved5;
    id reserved6;
    id reserved7;
    id reserved8;
}

+ (void)resetCursorRectsForObject:(id)arg1 inWindowController:(id)arg2;
+ (struct CGRect)rectForDefaultCursorForChildView:(id)arg1 ofEditedObject:(id)arg2 inWindowController:(id)arg3;
+ (id)lockedKnobImage;
+ (id)disabledKnobImage;
+ (id)knobImage;
- (id)acceptDragInfo:(id)arg1;
- (BOOL)prepareToAcceptDragInfo:(id)arg1;
- (void)failToAcceptDragInfo:(id)arg1;
- (struct CGSize)guidedOffsetForDraggingInfo:(id)arg1;
- (id)calculateFramesForViews:(id)arg1 withDraggingInfo:(id)arg2;
- (id)transformToWindowSpaceForViewsFromPasteboard:(id)arg1;
- (id)transformToUserSpaceForViewsFromPasteboard:(id)arg1;
- (id)draggedObjectStateToUseForGuidingFromDragInfo:(id)arg1;
- (void)resetCursorRects;
- (void)updatePasteInsertionPointFromMouseDown:(id)arg1;
- (void)updatePasteInsertionPointFromSelection;
- (id)objectsInRect:(struct CGRect)arg1;
- (void)activeKnobRects:(struct CGRect *)arg1 forObject:(id)arg2 inView:(id)arg3;
- (BOOL)isFrameLockedForView:(id)arg1;
- (void)noteDescendant:(id)arg1 didChangeProperty:(id)arg2 fromValue:(id)arg3;
- (BOOL)isUndoingOrRedoing;
- (id)trackerForChild:(id)arg1 withView:(id)arg2 fromKnob:(long long)arg3;
- (void)setBandSelectionRect:(struct CGRect)arg1;
- (struct CGRect)bandSelectionRect;
- (id)selectedViewsInDesignableContainer;
- (BOOL)isViewInDesignableContainer:(id)arg1;
- (id)orderedSelectedViews;
- (id)selectedViews;
- (id)childViews;
- (id)layoutManager;
- (id)viewEditorWindowController;
- (id)lastMouseDown;
- (BOOL)canSizeSelectionToFit;
- (void)sizeSelectionToFit:(id)arg1;
- (BOOL)selectsNextObjectAfterDeletionFromRelationship:(id)arg1;
- (struct CGSize)preferredSizeForLiveResizeSize:(struct CGSize)arg1;
- (void)windowFinishedLiveResizing;
- (void)windowStartedLiveResizing;
- (void)customizePasteboardInsertionContext:(id)arg1 fromPasteboard:(id)arg2 andDraggingInfo:(id)arg3;
- (void)performCut:(id)arg1;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (id)viewPasteboardType;
- (id)ibDesignableContentView;
- (id)editedView;
- (id)editorView;
- (void)didSelect:(id)arg1 andDeselect:(id)arg2;
- (void)didDeactivate;
- (void)didActivate;
- (void)willClose;
- (void)didOpen;
- (void)addVerticalGuide:(id)arg1;
- (void)addHorizontalGuide:(id)arg1;
- (struct CGRect)rectForGuide;
- (void)sendForward:(id)arg1;
- (void)sendToFront:(id)arg1;
- (void)sendBackward:(id)arg1;
- (void)sendToBack:(id)arg1;
- (void)moveViews:(id)arg1 toContainer:(id)arg2 withContentView:(id)arg3 andParent:(id)arg4;
- (void)didClose;
- (void)dealloc;
- (BOOL)interceptEvent:(id)arg1;
- (BOOL)stealMouseDragged:(id)arg1;
- (BOOL)stealMouseDown:(id)arg1;
- (void)moveSelectedViewsWithKeyEvent:(id)arg1;
- (struct CGSize)directionForKeyEvent:(id)arg1;
- (void)dragSelectedViewsWithMouseDown:(id)arg1 andMouseDragged:(id)arg2;
- (void)reattachDraggedObjects:(id)arg1 dragContext:(id)arg2;
- (void)detachDraggedObjects:(id)arg1 dragContext:(id)arg2;
- (id)initialDragImageState:(id)arg1;
- (id)draggedImageState:(id)arg1;
- (id)draggedImageStateForDraggingInfo:(id)arg1 forOrderedIdentifiedViews:(id)arg2 withName:(id)arg3;
- (void)bandSelect;
- (void)resizeChild:(id)arg1 fromKnob:(long long)arg2 withEvent:(id)arg3;
- (id)viewForTrackingObject:(id)arg1;
- (BOOL)shouldResizeChild:(id *)arg1 fromKnob:(long long *)arg2 inEvent:(id)arg3;
- (BOOL)shouldChildHaveResizeKnobs:(id)arg1;
- (BOOL)areKnobsLockedForObject:(id)arg1;
- (BOOL)wasChildSelectedBeforeClick:(id)arg1;
- (void)drawOverlay;
- (void)drawActivationDarkening;
- (void)drawTrackingKnobs;
- (id)viewForClippingToWhenDrawingSelectionKnobsForObject:(id)arg1;
- (void)drawBandSelection;
- (struct CGSize)decorationOutsetForChild:(id)arg1;
- (void)drawKnobsForView:(id)arg1;
- (void)observeRunloopActivity:(unsigned long long)arg1;
- (void)finishObservingRunLoop;
- (void)beginObservingRunLoop;

@end

@interface IBViewEditorWindowController : IBEditorWindowController
{
    IBClippedContentIndicatorsDecorator *clippedContentDecorator;
    IBViewEditorWindowOverlayView *overlayView;
    IBDelegatedDrawingDecorator *delegatedDecorator;
    IBLayoutDecorator *layoutDecorator;
    IBLayoutManager *layoutManager;
    IBMeasurementDecorator *measurementDecorator;
    NSMutableArray *cachedUserGuides;
    struct CGRect frameAtBeginingOfLiveResize;
    struct CGRect pendingContentRect;
    BOOL registeredForUndoNotifications;
    BOOL isPendingContentRect;
}

+ (void)setShowingClippedContentIndicators:(BOOL)arg1;
+ (BOOL)isShowingClippedContentIndicators;
- (id)toolTipManager:(id)arg1 toolTipForView:(id)arg2 location:(struct CGPoint)arg3 tipSourceRect:(struct CGRect *)arg4;
- (void)overlayDidDrawInView:(id)arg1;
- (void)overlayWillDrawInView:(id)arg1;
- (void)drawHiddenViews;
- (void)windowFinishedLiveResizing;
- (void)windowStartedLiveResizing;
- (void)windowFrameDidResize:(id)arg1;
- (struct CGSize)windowWillResize:(id)arg1 toSize:(struct CGSize)arg2;
- (BOOL)isUndoingOrRedoing;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (BOOL)interceptEvent:(id)arg1;
- (BOOL)interceptDecoratorActionEvent:(id)arg1;
- (BOOL)clippedContentIndicatorsInterceptedEvent:(id)arg1;
- (BOOL)guidesStoleEvent:(id)arg1;
- (id)userGuideAtPoint:(struct CGPoint)arg1;
- (void)toggleShowingBoundsRectangles:(id)arg1;
- (void)toggleShowingLayoutRectangles:(id)arg1;
- (void)windowDidResignKey:(id)arg1;
- (void)windowDidBecomeKey:(id)arg1;
- (void)invalidateCachedUserGuides;
- (void)trackMeasurementsWithEvent:(id)arg1 atPoint:(struct CGPoint)arg2;
- (void)toggleMeasurementLinesFromObjects:(id)arg1 toObject:(id)arg2 withEvent:(id)arg3;
- (void)addDrawingDecorator:(id)arg1;
- (id)objectAtPoint:(struct CGPoint)arg1;
- (id)objectsAtPoint:(struct CGPoint)arg1;
- (struct CGRect)visibleScreenRectForObject:(id)arg1;
- (struct CGRect)screenRectForObject:(id)arg1;
- (unsigned long long)dragObjects:(id)arg1 withImage:(id)arg2 inMouseDownEvent:(id)arg3 mouseDraggedEvent:(id)arg4 imageLocation:(struct CGPoint)arg5 allowedOperations:(unsigned long long)arg6 source:(id)arg7 draggingSourceContext:(id)arg8;
- (id)editorManagedDocumentView;
- (id)overlayView;
- (id)decoratedView;
- (id)userGuides;
- (id)deepestViewForObject:(id)arg1;
- (void)setShowingBoundsRectangles:(BOOL)arg1;
- (BOOL)isShowingBoundsRectangles;
- (void)setShowingLayoutRectangles:(BOOL)arg1;
- (BOOL)isShowingLayoutRectangles;
- (id)layoutManager;
- (id)clippedContentDecorator;
- (id)layoutDecorator;
- (void)noteDescendant:(id)arg1 didChangeProperty:(id)arg2 fromValue:(id)arg3;
- (void)fixWindowFrameAfterNoticingLastResizeActionChange:(id)arg1;
- (void)finishingUndoingOrRedoing:(id)arg1;
- (void)resizeWindowAndAdjustContentViewAutoresizingMaskForFrame:(struct CGRect)arg1;
- (struct CGRect)constrainedFrameRectForContentRectOnCurrentScreen:(struct CGRect)arg1;
- (BOOL)isEditorViewManagingScrollViewShowingScrollers;
- (void)resetCursorRects;
- (void)selectionDidChange;
- (void)cascade;
- (void)setWindow:(id)arg1;
- (void)makeSureOverlayIsOnTop;
- (void)setDocument:(id)arg1;
- (void)deactivate;
- (void)editorWindowScrollViewDidScroll:(id)arg1;
- (void)willClose;
- (void)didOpen;
- (void)dealloc;

@end

@interface IBViewEditorWindowOverlayView : IBDecoratedView
{
}

- (id)hitTest:(struct CGPoint)arg1;

@end

@interface IBViewRasterizer : NSObject
{
    NSView *cachedView;
    NSAffineTransform *transformToWindowSpace;
}

+ (id)maskOfCell:(id)arg1 withSize:(struct CGSize)arg2 andColor:(id)arg3;
+ (id)imageOfCell:(id)arg1 withSize:(struct CGSize)arg2;
+ (id)viewOfCell:(id)arg1 withSize:(struct CGSize)arg2;
+ (id)maskOfView:(id)arg1 withColor:(id)arg2;
+ (id)dragImageOfViews:(id)arg1;
+ (id)dragImageOfViews:(id)arg1 withTransformToWindowSpace:(id)arg2;
+ (double)dragImageOpacity;
+ (id)imageOfViews:(id)arg1 withOpacity:(double)arg2;
+ (id)imageOfViews:(id)arg1 withTransformToWindowSpace:(id)arg2 andOpacity:(double)arg3;
+ (id)imageOfView:(id)arg1;
+ (id)imageOfView:(id)arg1 withTransformToWindowSpace:(id)arg2;
- (id)image;
- (void)dealloc;
- (id)initWithView:(id)arg1 andTransformToWindowSpace:(id)arg2;

@end

@interface IBViewSizeInspector : IBBoundInspector <NSTextFieldDelegate>
{
    NSButton *alignTopButton;
    NSButton *alignMiddleButton;
    NSButton *alignBaselineButton;
    NSButton *alignBottomButton;
    NSButton *alignLeftButton;
    NSButton *alignCenterButton;
    NSButton *alignRightButton;
    NSButton *alignCenterInContainerButton;
    NSButton *alignMiddleInContainerButton;
    NSMatrix *verticalAlignmentMatrix;
    NSMatrix *horizontalAlignmentMatrix;
    NSMatrix *containmentAlignmentMatrix;
    NSMatrix *pinningMatrix;
    NSTextField *widthTextField;
    NSTextField *heightTextField;
    NSTextField *xTextField;
    NSTextField *yTextField;
    NSSlider *rotationSlider;
    NSTextField *rotationTextField;
    NSStepper *rotationStepper;
    NSPopUpButton *layoutOrFramePopUpButton;
    NSView *animatedViewContainer;
    NSView *animatedView;
    NSImageView *desktopBackgroundImageView;
    NSSet *alignmentButtons;
    struct IBViewSizeInspectorExtraIvars *extraIvars;
    BOOL ignoringTextInput;
    BOOL growAnimation;
    BOOL inspectorIsActive;
    BOOL applicationIsActive;
    BOOL shouldAnimate;
    double animationProgress;
    NSAnimation *frameAnimation;
    struct CGRect initialAnimationViewFrame;
    struct CGRect initialAnimationViewContainerFrame;
}

+ (void)middleContainerAlignViews:(id)arg1 inDocument:(id)arg2;
+ (void)centerContainerAlignViews:(id)arg1 inDocument:(id)arg2;
+ (void)baselineAlignViews:(id)arg1 inDocument:(id)arg2;
+ (void)bottomAlignViews:(id)arg1 inDocument:(id)arg2;
+ (void)middleAlignViews:(id)arg1 inDocument:(id)arg2;
+ (void)topAlignViews:(id)arg1 inDocument:(id)arg2;
+ (void)leftAlignViews:(id)arg1 inDocument:(id)arg2;
+ (void)centerAlignViews:(id)arg1 inDocument:(id)arg2;
+ (void)rightAlignViews:(id)arg1 inDocument:(id)arg2;
+ (void)alignViews:(id)arg1 inContainerVertically:(BOOL)arg2 horizontally:(BOOL)arg3;
+ (void)alignViews:(id)arg1 withXFunction:(CDUnknownFunctionPointerType)arg2 yFunction:(CDUnknownFunctionPointerType)arg3 xAccumulator:(CDUnknownFunctionPointerType)arg4 andYAccumulator:(CDUnknownFunctionPointerType)arg5;
+ (BOOL)canContainerAlignViews:(id)arg1;
+ (BOOL)canAlignViews:(id)arg1;
+ (BOOL)viewsHaveSameSuperview:(id)arg1;
+ (id)commonAncestorOfViews:(id)arg1;
+ (BOOL)areUserMovableViews:(id)arg1;
- (void)alignViewsMiddleContainer:(id)arg1;
- (void)alignViewsCenterContainer:(id)arg1;
- (void)alignViewsBaseline:(id)arg1;
- (void)alignViewsBottom:(id)arg1;
- (void)alignViewsMiddle:(id)arg1;
- (void)alignViewsTop:(id)arg1;
- (void)alignViewsLeft:(id)arg1;
- (void)alignViewsCenter:(id)arg1;
- (void)alignViewsRight:(id)arg1;
- (void)revert:(id)arg1;
- (void)refresh;
- (void)resetAnimation;
- (id)viewsToTriggerSizingAnimation;
- (BOOL)readyToAnimateWithObjects:(id)arg1;
- (void)setupTextField:(id)arg1 isMixed:(BOOL)arg2 value:(double)arg3;
- (void)heightChanged:(id)arg1;
- (void)widthChanged:(id)arg1;
- (void)yChanged:(id)arg1;
- (void)xChanged:(id)arg1;
- (void)controlTextDidChange:(id)arg1;
- (void)controlTextDidEndEditing:(id)arg1;
- (void)sendContentViewFrameChangeNotifications:(id)arg1;
- (id)captureContentViewFrames;
- (long long)pinningKnob;
- (void)appDidDeactivate:(id)arg1;
- (void)appDidActivate:(id)arg1;
- (void)awakeFromNib;
- (void)initializeAnimation;
- (void)setRect:(struct CGRect)arg1 forView:(id)arg2;
- (struct CGRect)rectForView:(id)arg1;
- (void)animate:(id)arg1;
- (void)animateDoSizing;
- (double)animationPointsPerSecond;
- (struct CGRect)layedoutRectangleWithInitialChildRect:(struct CGRect)arg1 initialParentRect:(struct CGRect)arg2 finalParentRect:(struct CGRect)arg3;
- (void)okAndPrepareAutoresizingDemonstrationAnimation:(id)arg1;
- (id)affectedKeyPathsOfInspectedObjectsForView:(id)arg1;
- (id)alignmentButtons;
- (void)deactivate;
- (void)activate;
- (void)setApplicationIsActive:(BOOL)arg1;
- (void)setInspectorIsActive:(BOOL)arg1;
- (void)startOrStopAnimating;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)resetCompletedAnimationCycles;
- (void)incrementCompletedAnimationCycles;
- (void)dealloc;
- (id)init;
- (void)installTimer;
- (void)uninstallTimer;
- (void)setFinalAnimationViewContainerFrame:(struct CGRect)arg1;
- (struct CGRect)finalAnimationViewContainerFrame;
- (void)setMouseIsInTrackingArea:(BOOL)arg1;
- (BOOL)mouseIsInTrackingArea;
- (void)setGrowingPastHalf:(BOOL)arg1;
- (BOOL)growingPastHalf;
- (void)setCompletedAnimationCycleThreshold:(long long)arg1;
- (long long)completedAnimationCycleThreshold;
- (void)setAnimationCompletedCycles:(long long)arg1;
- (long long)animationCompletedCycles;
- (void)setMouseTrackingArea:(id)arg1;
- (id)mouseTrackingArea;
- (void)setAnimationTimer:(id)arg1;
- (id)animationTimer;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IBViewTracker : NSObject
{
    long long trackingKnob;
    IBEditor *editor;
    NSView *view;
    BOOL snaps;
    BOOL showsGuides;
    BOOL trackingIsHorzFlipped;
    BOOL trackingIsVertFlipped;
    BOOL growsFromCenter;
    BOOL tracking;
}

+ (BOOL)shouldAutoResizeSubviewsGivenEvent:(id)arg1;
+ (void)setAppliesAutoResizingRulesWhileResizing:(BOOL)arg1;
+ (BOOL)appliesAutoResizingRulesWhileResizing;
- (id)editor;
- (long long)effectiveKnob;
- (long long)initialKnob;
- (void)drawTrackingHintsInView:(id)arg1;
- (id)view;
- (void)trackWithEvent:(id)arg1;
- (struct CGRect)snapToGuidedLayoutFrame:(struct CGRect)arg1 originalLayoutFrame:(struct CGRect)arg2;
- (void)resumeAutoResizingSubviews:(id)arg1;
- (id)stopAutoResizingSubviews;
- (void)setTracking:(BOOL)arg1;
- (BOOL)isTracking;
- (void)invalidateTrackingHintRect;
- (CDStruct_6a48b817)trackingMeasurementLayoutInfo;
- (void)setGrowsFromCenter:(BOOL)arg1;
- (BOOL)growsFromCenter;
- (void)setSnapsToGuides:(BOOL)arg1;
- (BOOL)snapsToGuides;
- (void)setShowsGuides:(BOOL)arg1;
- (BOOL)showsGuides;
- (void)placeSubviewInFrame:(struct CGRect)arg1;
- (id)layoutManager;
- (id)document;
- (id)initWithView:(id)arg1 andKnob:(long long)arg2 inEditor:(id)arg3;

@end

@interface IBViewWillDrawNotifyingBrowser : NSBrowser
{
}

- (void)viewWillDraw;

@end

@interface IBWarning : NSObject
{
    NSSet *affectedObjects;
    NSString *message;
    long long warningType;
    id source;
}

+ (long long)severityForWarningType:(long long)arg1;
+ (id)severityMap;
+ (void)setSeverityMap:(id)arg1;
+ (id)warningWithSource:(id)arg1 warningType:(long long)arg2 message:(id)arg3 affectedObjects:(id)arg4;
+ (id)displayNameForMinMacOSXVersion:(long long)arg1;
+ (id)imageForWarningSeverity:(long long)arg1;
+ (id)displayNameForWarningSeverity:(long long)arg1;
+ (id)pluralDisplayNameForWarningSeverity:(long long)arg1 count:(long long)arg2;
+ (id)categoryList;
+ (id)displayNameForWarningType:(long long)arg1;
+ (id)machineParseableNameForWarningType:(long long)arg1;
+ (id)warningWithSource:(id)arg1 warningType:(long long)arg2 message:(id)arg3 code:(long long)arg4 affectedObjects:(id)arg5;
- (unsigned long long)hash;
- (BOOL)isEqualToWarning:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (id)source;
- (id)affectedObjects;
- (long long)warningType;
- (long long)warningSeverity;
- (id)message;
- (void)dealloc;
- (id)initWithSource:(id)arg1 warningType:(long long)arg2 message:(id)arg3 affectedObjects:(id)arg4;
- (long long)warningCode;
- (id)initWithSource:(id)arg1 warningType:(long long)arg2 message:(id)arg3 code:(long long)arg4 affectedObjects:(id)arg5;
- (id)sourceLabel;
- (long long)sourceID;

@end

@interface IBWarningsInfoController : NSObject <IBDocumentInfoController>
{
    IBDocument *document;
    IBConstrainedView *infoView;
    NSTextField *deploymentTargetLabel;
    NSTextField *developmentTargetLabel;
    NSTableView *warningView;
    NSPopUpButton *deploymentTargetPopUp;
    NSPopUpButton *developmentTargetPopUp;
    NSObjectController *objectController;
    IBInvalidationPolicy *invalidationPolicy;
    NSArray *warnings;
    NSCell *measurementCell;
    BOOL valid;
}

- (id)objectsAtPoint:(struct CGPoint)arg1;
- (id)selectedObjects;
- (void)deselectObjects:(id)arg1;
- (void)tableViewSelectionDidChange:(id)arg1;
- (void)doubleClickedWarning:(id)arg1;
- (void)warningsChanged;
- (id)computeCurrentDocumentWarnings;
- (BOOL)tableView:(id)arg1 canRemoveRowsWithIndexes:(id)arg2;
- (BOOL)tableView:(id)arg1 canAcceptContentsOfPasteboard:(id)arg2;
- (BOOL)tableView:(id)arg1 writeRowsWithIndexes:(id)arg2 toPasteboard:(id)arg3;
- (BOOL)tableView:(id)arg1 canWriteRowsWithIndexesToPasteboard:(id)arg2;
- (void)tableView:(id)arg1 sortDescriptorsDidChange:(id)arg2;
- (void)tableViewColumnDidResize:(id)arg1;
- (double)tableView:(id)arg1 heightOfRow:(long long)arg2;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)validateDeclaredDependencyPopUps:(id)arg1;
- (void)refreshTargetMenus;
- (void)updatePluginDeclaredDependencyVersion:(id)arg1;
- (id)versionItemWithTitle:(id)arg1 version:(id)arg2 andDependencyID:(id)arg3 forCategory:(long long)arg4;
- (id)categoryHeaderItemWithTitle:(id)arg1;
- (id)infoView;
- (id)measurementCell;
- (void)documentVersioningDidChange;
- (void)documentDidRemoveObject:(id)arg1;
- (void)documentDidAddObject:(id)arg1;
- (id)document;
- (void)dealloc;
- (void)willClose;
- (id)initWithDocument:(id)arg1;

@end

@interface IBWidthChangePostingTableColumn : NSTableColumn
{
}

- (BOOL)_canUseReorderResizeImageCache;
- (void)setWidth:(double)arg1;

@end

@interface IBWindowContentSeparatorView : NSView
{
}

- (void)drawRect:(struct CGRect)arg1;

@end

@interface IBWindowGroup : NSObject
{
    NSMutableSet *windows;
    BOOL reordering;
    NSString *scopeName;
}

+ (void)removeWindowGroup:(id)arg1 fromScope:(id)arg2;
+ (void)addWindowGroup:(id)arg1 toScope:(id)arg2;
+ (id)orderedWindowsInScope:(id)arg1;
+ (id)windowsInScope:(id)arg1;
+ (id)windowGroupsInScope:(id)arg1;
+ (id)scopedGroups;
- (void)windowWillClose:(id)arg1;
- (void)windowDidBecomeKey:(id)arg1;
- (void)windowDidBecomeMain:(id)arg1;
- (void)removeWindow:(id)arg1;
- (void)addWindow:(id)arg1;
- (void)reorderWindows:(id)arg1 makeMain:(BOOL)arg2 makeKey:(BOOL)arg3;
- (BOOL)windowsAreInOrderAndOnTop;
- (id)orderedWindows;
- (id)windows;
- (id)scopeName;
- (void)dispose;
- (void)dealloc;
- (id)initWithGroupScope:(id)arg1;

@end

@interface IBWindowLayoutView : NSView
{
    struct CGRect screenFrame;
    struct CGRect contentFrame;
    long long struts;
    NSEvent *mouseDown;
    struct CGRect preDragContentFrame;
    long long strutForMouseDown;
    double strutProgress[4];
    BOOL enabled;
    id target;
    SEL action;
}

- (void)drawRect:(struct CGRect)arg1;
- (void)drawWindow:(struct CGRect)arg1;
- (void)drawDesktop:(struct CGRect)arg1;
- (void)drawFrame:(struct CGRect)arg1;
- (id)colorForStrut:(long long)arg1;
- (id)buttonPathForStrut:(long long)arg1;
- (struct CGPoint)centerPointForStrutButton:(long long)arg1 progress:(double)arg2;
- (struct CGSize)buttonSize;
- (struct CGRect)windowDisplayFrame;
- (struct CGRect)screenDisplayFrame;
- (double)scale;
- (struct CGRect)designableBounds;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)mouseUp:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)setMouseDown:(id)arg1;
- (id)backgroundImage;
- (void)setStruts:(long long)arg1;
- (long long)struts;
- (void)setContentFrame:(struct CGRect)arg1;
- (void)setScreenFrame:(struct CGRect)arg1;
- (struct CGRect)contentFrame;
- (struct CGRect)screenFrame;
- (void)setAction:(SEL)arg1;
- (SEL)action;
- (void)setTarget:(id)arg1;
- (id)target;
- (void)setEnabled:(BOOL)arg1;
- (BOOL)isEnabled;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface IBWindowObserver : NSObject
{
}

+ (void)windowWillClose:(id)arg1;
+ (void)windowDidResignMain:(id)arg1;

@end

@interface IBWindowSizeInspector : IBBoundInspector
{
    IBWindowLayoutView *layoutView;
    NSButton *currentContentFrameButton;
    NSButton *currentMinSizeButton;
    NSButton *currentMaxSizeButton;
    NSButton *hasMaxSize;
    NSButton *hasMinSize;
    NSTextField *minWidth;
    NSStepper *minWidthStepper;
    NSTextField *maxWidth;
    NSStepper *maxWidthStepper;
    NSTextField *minHeight;
    NSStepper *minHeightStepper;
    NSTextField *maxHeight;
    NSStepper *maxHeightStepper;
    NSTextField *contentHeight;
    NSStepper *contentHeightStepper;
    NSTextField *contentWidth;
    NSStepper *contentWidthStepper;
    NSTextField *contentX;
    NSStepper *contentXStepper;
    NSTextField *contentY;
    NSStepper *contentYStepper;
}

+ (void)assertConformationWithInformalProtocol:(id)arg1;
+ (void)blessWindowTemplateClass:(Class)arg1;
- (void)useCurrentMaximumSize:(id)arg1;
- (void)useCurrentMinimumSize:(id)arg1;
- (void)previewPosition:(id)arg1;
- (void)useCurrentContentFrame:(id)arg1;
- (void)layedOut:(id)arg1;
- (void)refresh;
- (void)ok:(id)arg1;
- (void)awakeFromNib;

@end

@interface IBWindowTemplateMethodBucket : NSObject
{
}

- (double)gMaxHeight;
- (double)gMaxWidth;
- (void)setGMaxHeight:(double)arg1;
- (void)setGMaxWidth:(double)arg1;
- (double)gMinHeight;
- (double)gMinWidth;
- (void)setGMinHeight:(double)arg1;
- (void)setGMinWidth:(double)arg1;
- (void)syncMaxHeightToMinHeight;
- (void)syncMinHeightToMaxHeight;
- (void)syncMaxWidthToMinWidth;
- (void)syncMinWidthToMaxWidth;

@end

@interface IBWindowView : NSView
{
    NSWindow *windowToMimic;
}

- (void)drawRect:(struct CGRect)arg1;
- (id)windowShadow;
- (void)sizeToFit;
- (double)shadowOutset;
- (id)windowToMimic;
- (void)setWindowToMimic:(id)arg1;
- (void)dealloc;

@end

@interface IBXMLCoder : NSCoder
{
    NSMutableSet *encodedObjects;
    struct __CFSet *encodedPointers;
    struct __CFDictionary *pointersToOids;
    struct __CFDictionary *oidsToPointers;
    IBCFMutableDictionary *replacements;
    IBCFMutableDictionary *objectsToXMLElements;
    IBCFMutableDictionary *classNamesForClasses;
    NSMutableSet *referenceNodes;
    NSMutableSet *encodedClasses;
    NSMutableData *data;
    IBSelfCompressingDataWrapper *previousXML;
    NSXMLElement *rootXMLNode;
    NSXMLElement *archiveXMLNode;
    IBMutableOrderedSet *overflowObjects;
    struct {
        char classNameForClass;
    } delegateRespondsTo;
    BOOL finished;
    id delegate;
    long long depth;
    struct {
        NSXMLElement *currentXMLNode;
        long long nextGenericKey;
        id encodedParent;
        NSDictionary *encodingSpecialCaseContext;
        char processingDelayedEncoding;
        IBMutableOrderedDictionary *delayedObjects;
    } objectState;
    double minimumReadableVersion;
}

+ (id)archivedDataWithRootObject:(id)arg1;
+ (void)initialize;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (void)encodeBytes:(const char *)arg1 length:(unsigned long long)arg2 forKey:(id)arg3;
- (void)encodeRect:(struct CGRect)arg1 forKey:(id)arg2;
- (void)encodeDouble:(double)arg1 forKey:(id)arg2;
- (void)encodeFloat:(float)arg1 forKey:(id)arg2;
- (void)encodeInt64:(long long)arg1 forKey:(id)arg2;
- (void)encodeInt32:(int)arg1 forKey:(id)arg2;
- (void)encodeInt:(int)arg1 forKey:(id)arg2;
- (void)encodeBool:(BOOL)arg1 forKey:(id)arg2;
- (void)encodeConditionalObject:(id)arg1 forKey:(id)arg2;
- (void)encodeObject:(id)arg1 forKey:(id)arg2;
- (void)encodeReferenceToObject:(id)arg1 forKey:(id)arg2;
- (id)xmlAttributesWithKey:(id)arg1;
- (void)serializeObject:(id)arg1;
- (BOOL)objectShouldUseCustomCoding:(id)arg1 sortDescriptorForUnorderedCollection:(id *)arg2;
- (id)serializeString:(id)arg1;
- (id)serializeNumber:(id)arg1;
- (void)encodeDictionary:(id)arg1 withSortDescriptor:(id)arg2;
- (BOOL)shouldUseCompressedEncodingForDictionary:(id)arg1;
- (void)encodeSet:(id)arg1 withSortDescriptor:(id)arg2;
- (void)encodeArray:(id)arg1;
- (BOOL)shouldEncodeCollectionsWithSpecialElements;
- (BOOL)object:(id)arg1 encodesAsMemberAndWithCoderOfClass:(Class)arg2;
- (BOOL)object:(id)arg1 encodesWithCoderFromClass:(Class)arg2;
- (BOOL)doElementsOfCollection:(id)arg1 allConformToType:(Class)arg2;
- (id)classNameForObject:(id)arg1;
- (id)classNameForClass:(Class)arg1;
- (Class)classForObject:(id)arg1;
- (void)takeHintsFromPreviousXMLCoder:(id)arg1;
- (void)hintIDsForVeryCommonObjects;
- (id)objectIDForPointer:(void *)arg1;
- (id)objectIDForPointer:(void *)arg1 preferredID:(id)arg2;
- (id)replacementForObject:(id)arg1;
- (void)finishEncoding;
- (id)prettyXMLFromXMLData:(id)arg1;
- (BOOL)allowsKeyedCoding;
- (id)encodedObjectForObjectID:(id)arg1;
- (void)dealloc;
- (id)initForWritingWithMutableData:(id)arg1 forType:(id)arg2 minimumReadableVersion:(double)arg3;
- (long long)versionForClassName:(id)arg1;
- (unsigned int)systemVersion;
- (void)replaceObject:(id)arg1 withObject:(id)arg2;
- (void)encodeBytes:(const void *)arg1 length:(unsigned long long)arg2;
- (void)encodeArrayOfObjCType:(const char *)arg1 count:(unsigned long long)arg2 at:(const void *)arg3;
- (void)encodeValuesOfObjCTypes:(const char *)arg1;
- (void)encodeConditionalObject:(id)arg1;
- (void)encodeByrefObject:(id)arg1;
- (void)encodeBycopyObject:(id)arg1;
- (void)encodeRootObject:(id)arg1;
- (void)encodePropertyList:(id)arg1;
- (void)encodeObject:(id)arg1;
- (void)encodeDataObject:(id)arg1;
- (void)encodeValueOfObjCType:(const char *)arg1 at:(const void *)arg2;
- (void)encodeNXObject:(id)arg1;
- (id)nextGenericKey;

@end

@interface IBXMLDecoder : NSCoder
{
    NSXMLElement *currentElement;
    NSMutableArray *successfullyDecodedObjects;
    IBCFMutableDictionary *objectNodesToObjectIDs;
    NSMutableDictionary *objectsToObjectIDs;
    NSMutableDictionary *objectIDsToObjectNodes;
    NSMutableDictionary *objectIDsToObjects;
    IBCFMutableDictionary *childMap;
    NSMutableDictionary *classFallbacks;
    NSMutableSet *uniquedIDs;
    NSMutableSet *uniquedValueObjects;
    NSXMLDocument *document;
    IBSelfCompressingDataWrapper *originalDocumentData;
    long long nextGenericKey;
    id delegate;
    NSSet *objectElementNamesWithPotentialObjectChildren;
    NSSet *objectTypeElementNames;
    NSSet *specialCaseCollectionElementNames;
    NSArray *elementNamesToRebuildIDsFromTable;
    NSDictionary *specialTypesToClasses;
}

+ (void)setDecodersShouldCompressPreviousXMLForHints:(BOOL)arg1;
+ (id)unarchiveObjectWithData:(id)arg1;
+ (id)archiveTypeForContentsOfURL:(id)arg1;
- (void)replaceObject:(id)arg1 withObject:(id)arg2;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (const char *)decodeBytesForKey:(id)arg1 returnedLength:(unsigned long long *)arg2;
- (double)decodeDoubleForKey:(id)arg1;
- (float)decodeFloatForKey:(id)arg1;
- (long long)decodeInt64ForKey:(id)arg1;
- (int)decodeInt32ForKey:(id)arg1;
- (int)decodeIntForKey:(id)arg1;
- (BOOL)decodeBoolForKey:(id)arg1;
- (id)decodeObjectForKey:(id)arg1;
- (id)objectForXMLElement:(id)arg1;
- (id)allocateObjectForObjectElement:(id)arg1;
- (Class)classForClassName:(id)arg1;
- (id)hintsForFutureXMLCoder;
- (id)objectIDForObjectNode:(id)arg1;
- (id)nodeForObjectID:(id)arg1;
- (void)setOID:(id)arg1 forObject:(id)arg2;
- (id)objectForOID:(id)arg1;
- (id)oidForObject:(id)arg1;
- (id)deserializeObject:(id)arg1 fromXMLElement:(id)arg2;
- (id)deserializeSet:(id)arg1 fromXMLElement:(id)arg2;
- (id)deserializeDictionary:(id)arg1 fromXMLElement:(id)arg2;
- (id)deserializeArray:(id)arg1 fromXMLElement:(id)arg2;
- (BOOL)containsValueForKey:(id)arg1;
- (BOOL)allowsKeyedCoding;
- (void)mapChildren:(id)arg1;
- (void)finishDecoding;
- (void)dealloc;
- (id)initForReadingWithData:(id)arg1 error:(id *)arg2;
- (id)initForReadingWithData:(id)arg1;
- (long long)versionForClassName:(id)arg1;
- (unsigned int)systemVersion;
- (void *)decodeBytesWithReturnedLength:(unsigned long long *)arg1;
- (void)decodeArrayOfObjCType:(const char *)arg1 count:(unsigned long long)arg2 at:(void *)arg3;
- (void)decodeValuesOfObjCTypes:(const char *)arg1;
- (id)decodePropertyList;
- (id)decodeObject;
- (id)decodeDataObject;
- (void)decodeValueOfObjCType:(const char *)arg1 at:(void *)arg2;
- (id)decodeNXObject;
- (id)nextGenericKey;

@end

@interface IBXMLDecoderTypeChecker : NSObject <NSXMLParserDelegate>
{
    NSXMLParser *parser;
    NSString *type;
}

- (void)parser:(id)arg1 didStartElement:(id)arg2 namespaceURI:(id)arg3 qualifiedName:(id)arg4 attributes:(id)arg5;
- (id)determineTypeOfArchive;
- (void)dealloc;
- (id)initWithURL:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IBXcodeProject : NSObject
{
    id projectIdentifier;
    NSString *cachedProjectName;
    NSString *cachedProjectPath;
    NSArray *cachedTargets;
    NSArray *cachedFiles;
    NSSet *cachedFilesSet;
}

+ (id)projectWithProjectIdentifier:(id)arg1;
+ (id)projectsAppropriateForFile:(id)arg1;
+ (id)firstProjectContainingFile:(id)arg1;
+ (id)projectsContainingFile:(id)arg1;
- (void)addFilesWithPaths:(id)arg1 toTargets:(id)arg2 createGroups:(BOOL)arg3 copyToGroup:(BOOL)arg4;
- (id)targets;
- (id)targetsContainingPath:(id)arg1;
- (id)targetsContainingPath:(id)arg1 attemptToResolveAmbiguousPaths:(BOOL)arg2;
- (BOOL)containsFileWithPath:(id)arg1;
- (id)filesWithExtensions:(id)arg1;
- (id)cachedFilesSet;
- (id)files;
- (id)cachedFiles;
- (id)projectFileName;
- (id)projectName;
- (id)projectPath;
- (id)projectDirectory;
- (id)projectIdentifier;
- (void)dealloc;
- (BOOL)snapshotState;
- (id)initWithProjectIdentifier:(id)arg1;

@end

@interface IBXcodeTarget : NSObject
{
    id projectIdentifier;
    id targetIdentifier;
    NSString *cachedBuildProductsLocation;
    NSString *cachedFullProductName;
    NSString *cachedSDKName;
    NSString *cachedTargetName;
    NSImage *cachedTargetImage;
    NSArray *cachedFiles;
    NSSet *cachedFilesSet;
    NSDictionary *cachedProductInfoPlist;
}

+ (id)targetWithXcodeProject:(id)arg1 andTargetIdentifier:(id)arg2;
- (id)targetImage;
- (id)filesWithExtensions:(id)arg1;
- (BOOL)containsFileWithPath:(id)arg1;
- (BOOL)isFrameworkTarget;
- (id)sdkName;
- (id)buildProductsLocation;
- (id)fullProductName;
- (id)infoPlistBundleIdentifier;
- (id)infoPlistIconFile;
- (id)infoPlistPackageType;
- (id)infoPlistExecutable;
- (id)productInfoPlist;
- (id)cachedFilesSet;
- (id)files;
- (id)cachedFiles;
- (id)targetName;
- (id)targetIdentifier;
- (BOOL)snapshotState;
- (void)dealloc;
- (id)initWithXcodeProject:(id)arg1 andTargetIdentifier:(id)arg2;

@end

@interface NSActionCell (IBActionCellIntegration)
- (void)ibPopulateKeyPaths:(id)arg1;
@end

@interface NSAffineTransform (IBAffineTransformAdditions)
+ (id)transformWithScale:(double)arg1;
@end

@interface NSApplication (IBApplicationAdditions)
- (void)postEvents:(id)arg1 atStart:(BOOL)arg2;
- (BOOL)isUserDragging;
- (id)orderedDocumentWindows;
- (id)visibleWindows;
@end

@interface NSApplication (IBDocumentCallbacks)
- (id)decomposeInterfaceMenuItem;
- (BOOL)honorsPropertyLocking;
- (BOOL)presentsInterface;
@end

@interface NSApplication (IBPluginManagement)
- (id)overridingPluginIdentifierPathsForPluginController:(id)arg1;
- (id)defaultPluginsForPluginController:(id)arg1;
- (BOOL)shouldPersistPluginsForPluginController:(id)arg1;
- (id)persistentDomainNameForPluginController:(id)arg1;
@end

@interface NSArray (IBArrayAdditions)
+ (id)sortMatrix:(id)arg1 usingFunction:(CDUnknownFunctionPointerType)arg2 andContext:(void *)arg3 onColumn:(long long)arg4;
+ (id)transposeMatrix:(id)arg1;
+ (id)arrayWithObjectOrEmpty:(id)arg1;
+ (id)emptyArray;
+ (id)arrayByFlatteningTree:(id)arg1 withSelector:(SEL)arg2;
+ (id)arrayByFlatteningTree:(id)arg1 withKeyPath:(id)arg2;
+ (id)arrayByFlatteningTree:(id)arg1 withSelector:(SEL)arg2 onReciever:(id)arg3;
- (long long)indexOfObject:(id)arg1 usingSelector:(SEL)arg2;
- (void)makeObjectsPerformMutatingSelector:(SEL)arg1;
- (void)makeObjectsPerformMutatingSelector:(SEL)arg1 withObject:(id)arg2;
- (id)allObjects;
- (id)arrayByRemovingNulls;
- (id)arrayByKeepingObjectsInSet:(id)arg1;
- (id)arrayByRemovingObjectsInSet:(id)arg1;
- (id)subarrayFromIndex:(long long)arg1;
- (id)objectsAfterIndex:(long long)arg1;
- (id)stablySortedArrayUsingSelector:(SEL)arg1 onKeyPath:(id)arg2;
- (id)stablySortedArrayUsingFunction:(CDUnknownFunctionPointerType)arg1 context:(void *)arg2;
- (id)stablySortedArrayWithSortDescriptor:(id)arg1;
- (id)sortedArrayUsingSelector:(SEL)arg1 onKeyPath:(id)arg2;
- (BOOL)isIndexInBounds:(long long)arg1;
- (id)arrayByReversingObjects;
- (id)arrayByRemovingObjectsBefore:(id)arg1;
- (id)arrayByMapping:(SEL)arg1 onReciever:(id)arg2 withFirstArgument:(id)arg3;
- (id)arrayByMapping:(SEL)arg1 onReciever:(id)arg2 withSecondArgument:(id)arg3;
- (id)arrayByMapping:(SEL)arg1 onReciever:(id)arg2;
- (id)arrayByMapping:(SEL)arg1 withObject:(id)arg2;
- (id)arrayByMapping:(SEL)arg1;
- (id)arrayByMappingBlock:(CDUnknownBlockType)arg1;
- (id)arrayByMappingFunction:(CDUnknownFunctionPointerType)arg1;
- (id)keepIf:(SEL)arg1 withObject:(id)arg2;
- (id)keepIf:(SEL)arg1;
- (id)arrayByKeepingIf:(CDUnknownBlockType)arg1;
- (long long)countOf:(SEL)arg1 onObject:(id)arg2;
- (long long)countOf:(SEL)arg1 withObject:(id)arg2;
- (long long)countOf:(SEL)arg1;
- (id)objectsOfClasses:(id)arg1;
- (id)objectsOfClass:(Class)arg1;
- (id)firstObject;
- (id)onlyObject;
- (id)anyObject;
- (id)objectBeforeObject:(id)arg1 wrap:(BOOL)arg2;
- (id)objectAfterObject:(id)arg1 wrap:(BOOL)arg2;
- (id)arrayByAppendingObjects:(id)arg1;
- (id)objectsAfter:(id)arg1;
- (id)objectsIncludingAndAfter:(id)arg1;
- (id)objectsIncludingAndAfter:(id)arg1 wrap:(BOOL)arg2;
- (id)arrayByAddingObjects:(id)arg1;
- (void)makeReceiver:(id)arg1 performSelector:(SEL)arg2;
- (id)uniqueObjects;
- (id)indexesOfObjects:(id)arg1;
- (id)arrayByShiftingIndexes:(id)arg1 byOffset:(long long)arg2;
- (BOOL)isAnyObject:(id)arg1;
- (BOOL)isEveryObject:(id)arg1;
@end

@interface NSAttributedString (IBAttributedStringAdditions)
+ (id)attributedStringForHTMLString:(id)arg1;
+ (id)attributedStringForString:(id)arg1 withFont:(id)arg2;
+ (id)attributedStringWithLeftAlignedImage:(id)arg1 andVerticallyCenteredText:(id)arg2 usingFont:(id)arg3;
+ (id)attributedStringWithUnichar:(unsigned short)arg1 andAttributes:(id)arg2;
+ (id)attributedStringWithString:(id)arg1 andAttributes:(id)arg2;
+ (id)attributedStringWithString:(id)arg1;
+ (id)attributedString;
- (id)imageOfSize:(struct CGSize)arg1;
- (void)drawVerticallyCenteredInRect:(struct CGRect)arg1;
@end

@interface NSBezierPath (IBBezierPathAdditions)
+ (id)bezierPathWithDashedRoundedRect:(struct CGRect)arg1 andRadius:(double)arg2;
+ (id)bezierPathWithRoundedRect:(struct CGRect)arg1 andRadius:(double)arg2;
+ (id)bezierPathForDragInsertionIndicatorFromPoint:(struct CGPoint)arg1 toPoint:(struct CGPoint)arg2;
+ (id)bezierPathWithLineFromPoint:(struct CGPoint)arg1 toPoint:(struct CGPoint)arg2 capRadius:(double)arg3;
+ (id)bezierPathWithLineFromPoint:(struct CGPoint)arg1 toPoint:(struct CGPoint)arg2;
+ (id)magnifyingGlassPathInRect:(struct CGRect)arg1;
+ (id)magnifyingGlassPath;
+ (id)strutPathWithDotSize:(struct CGSize)arg1 andSpacing:(double)arg2 centeredInRect:(struct CGRect)arg3;
+ (id)growArrowsPathWithDotSize:(struct CGSize)arg1 andSpacing:(double)arg2 centeredInRect:(struct CGRect)arg3;
+ (id)dottedLineWithDotSize:(struct CGSize)arg1 andSpacing:(double)arg2 centeredInRect:(struct CGRect)arg3;
+ (id)arrowPathWithArmHeight:(double)arg1 inRect:(struct CGRect)arg2;
+ (id)arrowPathInRect:(struct CGRect)arg1;
+ (id)arrowPathWithArmHeight:(double)arg1;
+ (id)pinPathInRect:(struct CGRect)arg1;
+ (id)pinPath;
+ (id)littleArrowPathInRect:(struct CGRect)arg1;
+ (id)littleArrowPath;
+ (id)minusPathInRect:(struct CGRect)arg1;
+ (id)xPathInRect:(struct CGRect)arg1;
+ (id)plusPathInRect:(struct CGRect)arg1;
+ (id)plusPath;
+ (id)exclamationPointPathInRect:(struct CGRect)arg1;
+ (id)exclamationPointPath;
+ (id)popUpArrowsPathInRect:(struct CGRect)arg1;
+ (id)popUpArrowsPathWithSpacing:(double)arg1;
+ (id)littleArrowsPathInRect:(struct CGRect)arg1;
+ (id)littleArrowsPath;
+ (id)warningIconPathInRect:(struct CGRect)arg1;
+ (id)roundedEquilateralTriangleInscribedInCircleWithRadius:(double)arg1 andCornerRadius:(double)arg2;
+ (id)trianglePathInRect:(struct CGRect)arg1;
+ (id)trianglePath;
+ (id)pagesPathInRect:(struct CGRect)arg1;
+ (id)pagesPath;
+ (id)unlockedPathInRect:(struct CGRect)arg1;
+ (id)lockedPathInRect:(struct CGRect)arg1;
+ (id)padLockPath:(BOOL)arg1;
- (void)fillWithLinearGradientFromPoint:(struct CGPoint)arg1 withColor:(id)arg2 toPoint:(struct CGPoint)arg3 withColor:(id)arg4;
- (void)fillWithLinearGradientFromPoint:(struct CGPoint)arg1 toPoint:(struct CGPoint)arg2 withColors:(id)arg3 atStops:(id)arg4;
- (id)pathByTranslatingToPoint:(struct CGPoint)arg1;
- (id)pathByRotating:(double)arg1 aboutPoint:(struct CGPoint)arg2;
- (id)pathByScalingToSize:(struct CGSize)arg1;
- (id)pathByTransformingRect:(struct CGRect)arg1 toRect:(struct CGRect)arg2;
@end

@interface NSBrowser (IBNSBrowserAdditions)
- (id)clickedItem;
- (id)selectedItems;
- (void)reloadData;
- (struct CGRect)frameOfCellWithRepresentedObject:(id)arg1;
- (long long)numberOfRowsInColumn:(long long)arg1;
- (id)representedObjectAtPoint:(struct CGPoint)arg1;
- (BOOL)isItemBased;
@end

@interface NSBundle (IBAppKitBundleAdditions)
+ (id)topLevelObjectsInNibNamed:(id)arg1 owner:(id)arg2;
+ (id)topLevelObjectsInNibNamed:(id)arg1;
- (id)imageWithFileName:(id)arg1;
- (void)loadNibNamed:(id)arg1 owner:(id)arg2;
- (id)topLevelObjectsInNibNamed:(id)arg1 owner:(id)arg2;
- (id)topLevelObjectsInNibNamed:(id)arg1;
@end

@interface NSBundle (IBBundleAdditions)
- (id)shortBundleVersion;
- (id)bundleVersion;
@end

@interface NSButtonCell (NeededMethods)
- (void)setImageWithMinimalSideEffects:(id)arg1;
- (id)imageWithMinimalSideEffects;
- (void)setAlternateImageWithMinimalSideEffects:(id)arg1;
- (id)alternateImageWithMinimalSideEffects;
@end

@interface NSCell (CellAdditions)
- (BOOL)containsMisspelling;
@end

@interface NSCell (IBCellAdditions)
- (void)setUnsignedIntValue:(unsigned int)arg1;
- (unsigned int)unsignedIntValue;
@end

@interface NSCell (IBObjectIntegration)
- (void)customizeForInsertionIntoNSTableColumn:(id)arg1 withObjects:(id)arg2 andInsertionContext:(id)arg3;
- (id)ibAcceptContentsOfPasteboard:(id)arg1 inDocument:(id)arg2 insertionContext:(id)arg3;
- (BOOL)ibCanAcceptContentsOfPasteboard:(id)arg1 inDocument:(id)arg2 targetChildRelation:(id *)arg3;
- (unsigned long long)ibPreferredMatrixMode;
- (Class)ibPreferredControlClass;
- (struct CGSize)ibPreferredSizeForSize:(struct CGSize)arg1 suggestedWidth:(char *)arg2 suggestedHeight:(char *)arg3 scaleAxesIndependently:(char *)arg4;
- (BOOL)ibWantsBoundsIndicatorDuringTracking;
- (id)ibDefaultLabel;
- (void)setGControlSize:(unsigned long long)arg1;
- (unsigned long long)gControlSize;
- (id)designableSubElementKeyPaths;
- (id)defaultDesignValueForTableView:(id)arg1;
- (long long)ibPreferredResizeDirection;
- (BOOL)ibWouldClipContentWithCellSize:(struct CGSize)arg1;
- (struct CGSize)ibPreferredDesignSizeForSize:(struct CGSize)arg1;
- (void)ibRemoveChildren:(id)arg1;
- (void)ibPopulateChildRelationOrder:(id)arg1;
- (id)displayNameForDesignableKeyPath:(id)arg1;
- (id)ibDocumentationKeyPathForKeyPath:(id)arg1;
- (void)takeSnapshotValues:(id)arg1;
- (void)ibPopulateKeyPaths:(id)arg1;
- (id)defaultFontForCurrentConfiguration;
- (BOOL)isAwareOfFlippedness;
- (BOOL)titleEditsSelf;
- (BOOL)isBaselineAtIndex:(long long)arg1 inMotionWithKnob:(long long)arg2;
- (double)baselineForFrame:(struct CGRect)arg1 atIndex:(long long)arg2;
- (long long)ibBaselineCount;
- (id)widgetType;
- (id)ibDefaultImage;
- (id)ibDefaultChildren;
- (id)ibPasteboardTypes;
@end

@interface NSCell (WorkaroundValidationRecursion)
- (void)_validateEditingAndDontRecurse:(id)arg1;
@end

@interface NSClipView (IBClipViewAdditions)
- (void)makeRectVisible:(struct CGRect)arg1 ofView:(id)arg2;
@end

@interface NSCoder (IBCoderAdditions)
- (void)encodeConditionalObjects:(id)arg1 forKey:(id)arg2;
- (id)decodeConditionalObjectsForKey:(id)arg1;
@end

@interface NSCoder (IBCustomCoding)
- (BOOL)ibIsDecodingDesignTimeContent;
@end

@interface NSColor (IBColorAdditions)
+ (id)mulitpleValuesPlaceholderColorWithSize:(struct CGSize)arg1;
+ (id)colorWithData:(id)arg1;
+ (id)colorWithCalibratedHTMLHexString:(id)arg1;
+ (id)colorWithCalibratedHTMLHexString:(id)arg1 alpha:(double)arg2;
- (double)contrastFromColor:(id)arg1;
- (id)colorByInvertingColor;
- (id)colorByShiftingHue:(double)arg1 saturation:(double)arg2 brightness:(double)arg3 andAlpha:(double)arg4;
- (id)colorWithBrightnessMultipliedBy:(double)arg1;
- (id)colorWithAlphaMultipliedBy:(double)arg1;
- (id)dataValue;
@end

@interface NSColorList (IBColorListAdditions)
+ (id)defaultSystemColorList;
@end

@interface NSCursor (IBCursorAdditions)
+ (id)resizeCursorForDirections:(long long)arg1;
+ (id)resizeTopLeftCursor;
+ (id)resizeTopRightCursor;
+ (id)resizeBottomLeftCursor;
+ (id)resizeBottomRightCursor;
+ (id)resizeTopLeftBottomRightCursor;
+ (id)resizeTopRightBottomLeftCursor;
@end

@interface NSCursor (IBKnobAdditions)
+ (id)resizeCursorForKnobPosition:(long long)arg1;
@end

@interface NSCustomResource (IBCustomResourceAdditions)
- (id)designableAwakeAfterUsingCoder:(id)arg1;
@end

@interface NSData (IBDataAdditions)
- (id)md5Hash;
- (BOOL)isBZip2Compressed;
- (id)bzip2DecompressedData;
- (id)bzip2CompressedData;
- (id)initWithPrettyBase64String:(id)arg1;
- (id)prettyBase64String;
- (id)base64DecodedData;
- (id)base64EncodedData;
@end

@interface NSDate (IBDataAdditions)
- (BOOL)isBeforeDate:(id)arg1;
- (double)secondsTillDate;
- (double)secondsSinceDate;
@end

@interface NSDictionary (IBDictionaryAdditions)
+ (id)dictionaryWithContentsOfXMLPlist:(id)arg1;
+ (id)dictionaryFromXMLPlistData:(id)arg1;
+ (id)strictDictionaryWithKeysAndObjects:(id)arg1;
+ (id)emptyDictionary;
- (id)anyKey;
- (id)anyObject;
- (long long)integerForKey:(id)arg1;
- (long long)integerForKey:(id)arg1 defaultValue:(long long)arg2;
- (id)objectForKey:(id)arg1 inDictionaryForKey:(id)arg2;
- (id)invertedDictionary;
- (id)dictionaryBySettingObject:(id)arg1 forKey:(id)arg2;
- (id)dictionaryByRemovingObjectsForKeys:(id)arg1;
- (id)objectArrayForKeyArray:(id)arg1;
- (id)objectsForKeys:(id)arg1;
@end

@interface NSDocument (IBDocumentAdditions)
+ (id)documentWithContentsOfURL:(id)arg1 error:(id *)arg2;
@end

@interface NSDocumentController (IBDocumentControllerAdditions)
- (void)performOpenForFileAtPath:(id)arg1;
- (id)makeDocumentFromTemplateAtURL:(id)arg1 display:(BOOL)arg2 error:(id *)arg3;
@end

@interface NSError (IBDocumentCompatibilityControllerBindingsAdditions)
- (id)ib2CompatibilityErrorDescription;
@end

@interface NSError (IBErrorAdditions)
+ (id)errorWithLocalizedDescription:(id)arg1 domain:(id)arg2 andCode:(long long)arg3;
+ (id)errorWithLocalizedDescription:(id)arg1;
+ (id)errorWithLocalizedDescription:(id)arg1 andFailureReason:(id)arg2;
+ (id)errorWithLocalizedDescription:(id)arg1 andRecoverySuggestion:(id)arg2;
+ (id)errorWithLocalizedDescription:(id)arg1 failureReason:(id)arg2 andRecoverySuggestion:(id)arg3;
+ (id)errorWithLocalizedDescription:(id)arg1 failureReason:(id)arg2 recoverySuggestion:(id)arg3 domain:(id)arg4 andCode:(long long)arg5;
+ (id)errorWithLocalizedDescription:(id)arg1 failureReason:(id)arg2 recoverySuggestion:(id)arg3 domain:(id)arg4 code:(long long)arg5 andRecoveryAttempter:(id)arg6;
- (id)errorByInjectingUserInfoObject:(id)arg1 forKey:(id)arg2;
- (BOOL)isErrorWithDomain:(id)arg1 andCode:(long long)arg2;
@end

@interface NSError (IBUserInfoExtras)
- (id)consoleDescription;
- (void)buildConsoleErrorDescription:(id)arg1 level:(long long)arg2;
- (id)underlyingErrors;
@end

@interface NSEvent (IBEventAdditions)
+ (double)doubleClickTimeInterval;
- (BOOL)isIntentionalRightDragWithRespectTo:(id)arg1;
- (BOOL)isIntentionalLeftDragWithRespectTo:(id)arg1;
- (BOOL)isDeleteOrDeleteFunctionKeyDown;
- (BOOL)isLinearMaxArrowKeyDownInDirection:(long long)arg1;
- (BOOL)isLeftArrowKeyUp;
- (BOOL)isRightArrowKeyUp;
- (BOOL)isDownArrowKeyUp;
- (BOOL)isUpArrowKeyUp;
- (BOOL)isLeftArrowKeyDown;
- (BOOL)isRightArrowKeyDown;
- (BOOL)isDownArrowKeyDown;
- (BOOL)isUpArrowKeyDown;
- (BOOL)isArrowKeyDown;
- (BOOL)isBackTabKeyDown;
- (BOOL)isTabKeyDown;
- (BOOL)isSpaceKeyUp;
- (BOOL)isSpaceKeyDown;
- (BOOL)isNewlineTypeKeyDown;
- (BOOL)isEscapeKeyDown;
- (BOOL)isPeriodicEvent;
- (BOOL)isRightMouseDragged;
- (BOOL)isLeftMouseDragged;
- (BOOL)isSingleRightClick;
- (BOOL)isSingleLeftClick;
- (BOOL)isSingleRightDown;
- (BOOL)isSingleLeftDown;
- (BOOL)isSingleLeftUp;
- (BOOL)isDoubleLeftClick;
- (BOOL)isDoubleLeftDown;
- (BOOL)isApplicationActivateEvent;
- (BOOL)isApplicationDeactivateEvent;
- (BOOL)isMouseEvent;
- (BOOL)isKeyEvent;
- (BOOL)isKeyDown;
- (BOOL)isKeyUp;
- (struct CGPoint)locationOnScreen;
- (struct CGPoint)locationInWindow:(id)arg1;
- (struct CGPoint)locationInView:(id)arg1;
- (id)screen;
@end

@interface NSException (IBExceptionAdditions)
- (id)prettyBacktrace;
@end

@interface NSFileManager (IBFileManagerAdditions)
- (id)directoriesAtPath:(id)arg1 withExtension:(id)arg2 error:(id *)arg3;
- (id)filesAtPath:(id)arg1 withExtension:(id)arg2 error:(id *)arg3;
- (id)directoriesAtPath:(id)arg1 error:(id *)arg2;
- (id)filesAtPath:(id)arg1 error:(id *)arg2;
- (BOOL)pathIsFile:(id)arg1;
- (BOOL)pathIsDirectory:(id)arg1;
@end

@interface NSFileWrapper (IBFileWrapperAdditions)
+ (id)wrapperByCopyingContentsAtPath:(id)arg1 error:(id *)arg2;
@end

@interface NSFont (IBFontAdditions)
+ (id)boldSystemFontWithControlSize:(unsigned long long)arg1;
+ (id)systemFontWithControlSize:(unsigned long long)arg1;
+ (id)menuFontWithControlSize:(unsigned long long)arg1;
+ (id)boldSystemToolTipFont;
+ (id)systemToolTipFont;
@end

@interface NSFormCell (IBNSFormCellPrivate)
- (id)titleCell;
@end

@interface NSGradient (IBGradientAdditions)
- (struct CGGradient *)CGGradient;
@end

@interface NSImage (IBImageAdditions)
+ (BOOL)isTemplateName:(id)arg1;
+ (id)imageWithRep:(id)arg1;
- (id)PNGRepresentation;
- (id)bitmapImageRep;
- (void)addBitmapRepresentationOfSize:(struct CGSize)arg1 convertToBitmapFirst:(BOOL)arg2;
- (BOOL)hasRepresentationOfSize:(struct CGSize)arg1;
- (struct CGImage *)cgImageRepresentation;
- (id)imageFocusedOnRect:(struct CGRect)arg1 horizontalBlur:(double)arg2 verticalBlur:(double)arg3;
- (id)imageByHueShifting:(double)arg1;
- (id)maskOfColor:(id)arg1;
- (void)maskWithColor:(id)arg1;
- (id)imageFromRect:(struct CGRect)arg1;
- (id)imageForDragging;
- (id)imageWithOpacity:(double)arg1;
- (id)flippedImage;
- (id)thumbnailOfSize:(struct CGSize)arg1;
- (id)imageByScalingToSize:(struct CGSize)arg1;
- (void)drawInRect:(struct CGRect)arg1 operation:(unsigned long long)arg2 fraction:(double)arg3;
- (void)drawAtPoint:(struct CGPoint)arg1 operation:(unsigned long long)arg2 fraction:(double)arg3 unflip:(BOOL)arg4;
- (void)drawInRect:(struct CGRect)arg1 operation:(unsigned long long)arg2 fraction:(double)arg3 unflip:(BOOL)arg4;
@end

@interface NSImage (NSIBImage)
- (id)replacementObjectForCoder:(id)arg1;
@end

@interface NSIndexPath (IBIndexPathAdditions)
- (id)indexPathByRemovingFirstIndex;
@end

@interface NSIndexSet (IBIndexSetAdditions)
- (id)indexes;
@end

@interface NSKeyedArchiver (IBKeyedArchiverAdditions)
+ (id)cloneObjectByArchiving:(id)arg1;
@end

@interface NSLayoutManager (IBLayoutManagerAdditions)
+ (id)layoutManagerForUILayout;
@end

@interface NSMatrix (NeededMethods)
- (void)setPrototypeNoCopy:(id)arg1;
- (id)prototypeNoCopy;
@end

@interface NSMenu (IBMenuAdditions)
- (void)insertItemsWithTitles:(id)arg1 andRepresentedObjects:(id)arg2 atIndex:(long long)arg3;
- (void)removeAllMenuItems;
@end

@interface NSMutableArray (IBMutableArrayAdditions)
- (void)addObjectsFromArrays:(id)arg1;
- (void)appendObjects:(id)arg1;
- (void)sortUsingSelector:(SEL)arg1 onKeyPath:(id)arg2;
- (void)removeObjects:(id)arg1;
- (void)removeObjectsInSet:(id)arg1;
- (void)removeObjectsAfterIndex:(long long)arg1;
- (void)pushAll:(id)arg1;
- (void)push:(id)arg1;
- (id)pop;
@end

@interface NSMutableAttributedString (IBMutableAttributedStringAdditions)
- (void)setAlignment:(unsigned long long)arg1 andLineBreakingMode:(unsigned long long)arg2;
- (void)setAlignment:(unsigned long long)arg1;
- (void)setFont:(id)arg1;
- (void)setLineBreakingMode:(unsigned long long)arg1;
- (void)addAttribute:(id)arg1 withValue:(id)arg2;
- (void)appendString:(id)arg1 withAttributes:(id)arg2;
@end

@interface NSMutableData (IBMutableDataAdditions)
- (void)appendByte:(unsigned char)arg1;
@end

@interface NSMutableDictionary (IBMutableDictionaryAdditions)
- (void)addError:(id)arg1;
- (void)addWarning:(id)arg1;
- (void)addInfo:(id)arg1;
- (void)addMessageWithKey:(id)arg1 format:(id)arg2 args:(struct __va_list_tag [1])arg3;
- (void)decrementIntegerForKey:(id)arg1;
- (void)incrementIntegerForKey:(id)arg1;
- (void)setInteger:(long long)arg1 forKey:(id)arg2;
- (void)setObject:(id)arg1 forKey:(id)arg2 inDictionaryForKey:(id)arg3;
- (void)setObject:(id)arg1 forKey:(id)arg2 inDictionaryForKey:(id)arg3 subDictionaryClass:(Class)arg4;
- (void)setObject:(id)arg1 forKey:(id)arg2 inDictionaryForKey:(id)arg3 inDictionaryForKey:(id)arg4;
- (void)setObject:(id)arg1 forKey:(id)arg2 inDictionaryForKey:(id)arg3 inDictionaryForKey:(id)arg4 subDictionaryClass:(Class)arg5;
- (void)removeObjectForKey:(id)arg1 inDictionaryForKey:(id)arg2 inDictionaryForKey:(id)arg3;
- (void)removeObjectForKey:(id)arg1 inDictionaryForKey:(id)arg2;
- (void)removeObject:(id)arg1 fromSetForKey:(id)arg2;
- (void)removeObject:(id)arg1 fromArrayForKey:(id)arg2;
- (void)removeObject:(id)arg1 fromCollectionForKey:(id)arg2;
- (void)addObject:(id)arg1 toSetForKey:(id)arg2;
- (void)addObject:(id)arg1 toArrayForKey:(id)arg2;
- (void)addObject:(id)arg1 toArrayForKey:(id)arg2 inDictionaryForKey:(id)arg3;
- (void)addObjects:(id)arg1 toSetForKey:(id)arg2;
- (void)addObjects:(id)arg1 toArrayForKey:(id)arg2;
- (id)collectionOfClass:(Class)arg1 forKey:(id)arg2;
@end

@interface NSMutableSet (HackFor9581725)
- (void)swizzledUnionSetThatAcceptsArrays:(id)arg1;
@end

@interface NSMutableSet (IBMutableSetAdditions)
- (void)appendObjects:(id)arg1;
- (id)pop;
@end

@interface NSObject (IBFrameworkObjectIntegration)
- (id)ibDesignedClassName;
- (id)ibRepresentedObjectForLibrary;
- (id)ibRepresentedClassNameForLibrary;
- (id)ibEquivalentSourceForToOneOutlet:(id)arg1;
- (id)ibSmartConnectionComparisonString;
- (id)ibUnembedChildrenInDocument:(id)arg1;
- (BOOL)ibCanUnembedChildrenInDocument:(id)arg1;
- (BOOL)ibIsInDesignMode;
- (id)ibContainerWidgetTypeForChildView:(id)arg1;
- (struct IBInsetTag)ibInsetToDesignableContentAreaForChildView:(id)arg1;
- (BOOL)ibCalculatesInsetToDesignableContentAreaForChildView:(id)arg1;
- (void)setIbLabelIdentifier:(id)arg1;
- (id)ibLabelIdentifier;
- (id)typeSummaryForLibraryDisplay;
- (void)customizeAfterDropFromLibraryIntoDocument:(id)arg1;
- (BOOL)childEditsWithSingleClick:(id)arg1;
- (BOOL)ibIsChildInitiallySelectable:(id)arg1;
- (BOOL)ibIsChildTypicalConnectionTarget:(id)arg1;
- (BOOL)ibShouldHiddenChildViewBeVisible:(id)arg1;
- (BOOL)isChildViewSizable:(id)arg1;
- (BOOL)isChildViewMovable:(id)arg1;
- (BOOL)ibIsChildViewUserSizable:(id)arg1;
- (BOOL)ibIsChildViewUserMovable:(id)arg1;
- (struct CGRect)ibInspectedChildView:(id)arg1 rectBySettingSize:(struct CGSize)arg2 fromKnob:(long long)arg3 ofRect:(struct CGRect)arg4;
- (struct CGRect)ibInspectedChildView:(id)arg1 rectBySettingPoint:(struct CGPoint)arg2 forKnob:(long long)arg3 ofRect:(struct CGRect)arg4;
- (struct CGPoint)ibInspectedChildView:(id)arg1 pointForKnob:(long long)arg2 onRect:(struct CGRect)arg3;
- (id)ibToManyRelationshipsKeyPathsNotInAncestor:(Class)arg1;
- (id)ibToOneRelationshipsKeyPathsNotInAncestor:(Class)arg1;
- (id)ibAttributeKeyPathsNotInAncestor:(Class)arg1;
- (id)ibToManyRelationshipsKeyPaths;
- (id)ibToOneRelationshipsKeyPaths;
- (id)ibAttributeKeyPaths;
- (id)ibLocalizableKeyPaths;
- (id)ibLocalizableToManyRelationshipKeyPaths;
- (id)ibLocalizableGeometryKeyPaths;
- (id)ibLocalizableStringsKeyPaths;
- (id)ibArrayBasedResourceKeyPaths;
- (id)ibLocalizableArrayBasedStringsKeyPaths;
- (id)ibAdditionalLocalizableKeyPaths;
- (id)ibDefaultChildren;
- (id)ibPasteboardTypes;
- (id)ibObjectAtLocation:(struct CGPoint)arg1 inWindowController:(id)arg2;
- (struct CGRect)visibleWindowFrameForChild:(id)arg1 inWindowController:(id)arg2;
- (struct CGRect)ibRectForChild:(id)arg1 inWindowController:(id)arg2;
- (Class)ibEditorClass;
- (id)ibDefaultImage;
- (id)ibLabelQualifierForChild:(id)arg1;
- (id)ibDefaultLabel;
- (void)ibPopulateConnectionInspectorClasses:(id)arg1;
- (void)ibPopulateSizeInspectorClasses:(id)arg1;
@end

@interface NSObject (IBInspectorControllerModeSupport)
- (BOOL)ibIsSizeInspectorModeEnabled;
- (BOOL)ibIsIdentityInspectorModeEnabled;
- (BOOL)ibIsAppleScriptInspectorModeEnabled;
- (BOOL)ibIsConnectionInspectorModeEnabled;
- (BOOL)ibIsAttributeInspectorModeEnabled;
@end

@interface NSObject (IBObjectAdditions)
- (void)didChangeValueForKeys:(id)arg1;
- (void)willChangeValueForKeys:(id)arg1;
@end

@interface NSObject (IBObjectIdentityInspectorObjectIntegration)
- (void)setObjectInspector_accessControl:(long long)arg1;
- (long long)objectInspector_accessControl;
- (void)setObjectInspector_showNotes:(BOOL)arg1;
- (BOOL)objectInspector_showNotes;
- (void)setObjectInspector_notes:(id)arg1;
- (id)objectInspector_notes;
- (long long)objectInspector_oid;
- (id)objectInspector_name;
- (void)setObjectInspector_name:(id)arg1;
@end

@interface NSObject (IBObjectIntegrationInternal)
+ (void)ibRemoveStaticlyPopulatedKeyPaths:(id)arg1 toKeyPathSet:(id)arg2;
+ (void)ibAddStaticlyPopulatedKeyPaths:(id)arg1 toKeyPathSet:(id)arg2;
+ (void)didPutObjects:(id)arg1 onPasteboard:(id)arg2;
- (void)customizeForInsertionIntoDocument:(id)arg1 withObjects:(id)arg2 andInsertionContext:(id)arg3;
- (void)ibPopulatePreferredInspectorModes:(id)arg1;
- (id)ibPreferredInspectorModes;
- (void)ibWillAcceptedPastedObjects:(id)arg1 atIndexes:(id)arg2 intoToManyRelation:(id)arg3 inDocument:(id)arg4 insertionContext:(id)arg5;
- (void)ibWillAcceptedPastedObject:(id)arg1 intoToOneRelation:(id)arg2 inDocument:(id)arg3 insertionContext:(id)arg4;
- (void)ibDocument:(id)arg1 didStartSimulatorWithContext:(id)arg2;
- (void)ibDocument:(id)arg1 willStartSimulatorWithContext:(id)arg2;
- (id)ibAcceptContentsOfPasteboard:(id)arg1 inDocument:(id)arg2 insertionContext:(id)arg3;
- (BOOL)ibCanAcceptContentsOfPasteboard:(id)arg1 inDocument:(id)arg2 targetChildRelation:(id *)arg3;
- (void)ibRemoveChildren:(id)arg1;
- (BOOL)ibCanRemoveChildren:(id)arg1;
- (id)ibEditorSelectionOrderRelationLists;
- (void)ibPopulateEditorSelectionOrderRelationLists:(id)arg1;
- (id)ibChildRelationOrder;
- (void)ibPopulateChildRelationOrder:(id)arg1;
- (BOOL)ibToManyRelationSupportsReplacement:(id)arg1;
- (BOOL)ibToManyRelationSupportsInsertion:(id)arg1;
- (BOOL)ibShouldIncludeKeyPathInIbtoolPrintingOutput:(id)arg1;
- (BOOL)ibIsKeyPathExemptFromLockingRules:(id)arg1;
- (BOOL)ibIsCustomObject;
- (id)ibDesignableColorKeyPath;
- (id)ibDesignableFontKeyPath;
- (id)designableTypeAliases;
- (void)noteDesignableDescendant:(id)arg1 didChangeProperty:(id)arg2 inDocument:(id)arg3 fromValue:(id)arg4;
- (id)designableSubElementKeyPaths;
- (BOOL)ibDocument:(id)arg1 shouldPersistMetadataWithKey:(id)arg2;
- (void)ibFinishArchivingDocument:(id)arg1 withContext:(id)arg2;
- (void)ibBeginArchivingDocument:(id)arg1 withContext:(id)arg2;
- (void)customizeAfterRemovalFromDesignableDocument:(id)arg1;
- (void)ibDidRemoveFromDesignableDocument:(id)arg1;
- (void)customizeAfterAdditionToDesignableDocument:(id)arg1;
- (void)ibDidAddToDesignableDocument:(id)arg1;
- (void)awakeInDesignableDocument:(id)arg1;
- (void)ibAwakeInDesignableDocument:(id)arg1;
- (id)springLoadedObjectAtPoint:(struct CGPoint)arg1 inWindowController:(id)arg2;
- (BOOL)canEditInPersonalWindow;
- (BOOL)mustEditInPersonalWindow;
- (id)ibEditorWindowSizeVerificationKeyPath;
- (BOOL)ibShouldRebuildEditorAfterChangingProperty:(id)arg1;
- (void)takePastedAttributes:(id)arg1;
- (void)takeSnapshotValues:(id)arg1;
- (id)designableAttributesConfiguration;
- (id)configurationPasteboardType;
- (id)displayNameForDesignableKeyPath:(id)arg1;
- (id)ibDocumentationKeyPathForKeyPath:(id)arg1;
- (id)editorWindowControllerForDocument:(id)arg1;
- (void)didExtractObjects:(id)arg1 fromPasteboard:(id)arg2 intoDocument:(id)arg3 context:(id)arg4;
- (void)didPutObjects:(id)arg1 onPasteboard:(id)arg2 fromDocument:(id)arg3 context:(id)arg4;
- (id)orderedDesignableAttributesKeyPaths;
@end

@interface NSObject (IBObjectStableStorage)
- (id)interfaceBuilderObjectIdentifier;
@end

@interface NSObject (IBUserInterfaceItemValidation)
- (BOOL)validateUserInterfaceItem:(id)arg1;
@end

@interface NSObject (IBXLIFFIntegration)
- (id)XLIFFClassName:(id)arg1;
- (long long)XLIFFMemberID:(id)arg1;
@end

@interface NSObject (IBXMLCodingSpecialCases)
- (BOOL)xmlCoder:(id)arg1 shouldDelayEncodingObject:(id)arg2 forKey:(id)arg3 context:(id)arg4;
- (BOOL)xmlCoder:(id)arg1 shouldEncodeRect:(struct CGRect *)arg2 forKey:(id)arg3 context:(id)arg4;
- (BOOL)xmlCoder:(id)arg1 shouldEncodeObject:(id *)arg2 forKey:(id)arg3 context:(id)arg4;
- (id)xmlCoderEncodingCallbackContext:(id)arg1;
@end

@interface NSObject (KeyValueBindingPrivateSupport)
- (id)ibBindingInformationWithExistingNibConnectors:(id)arg1 availableControllerChoices:(id)arg2;
@end

@interface NSOpenGLView (IBViewRendererAdditions)
- (Class)viewRendererClass;
@end

@interface NSOutlineView (IBOutlineViewAdditions)
- (double)widthToFitContentsOfColumn:(long long)arg1 row:(long long)arg2;
- (id)parentOfItem:(id)arg1;
- (void)expandAll;
- (id)selectedItem;
- (id)selectedItems;
- (id)clickedItem;
- (id)itemAtPoint:(struct CGPoint)arg1;
@end

@interface NSParagraphStyle (IBParagraphStyleAdditions)
+ (id)paragraphStyleWithAlignment:(unsigned long long)arg1;
+ (id)paragraphStyleWithLineBreakMode:(unsigned long long)arg1;
@end

@interface NSPasteboard (IBPasteboardAdditions)
- (void)encodeObject:(id)arg1 forType:(id)arg2;
- (id)decodedObjectForType:(id)arg1;
- (id)fileNames;
- (BOOL)hasFileNames;
@end

@interface NSPopUpButton (IBPopUpButtonAdditions)
- (id)itemWithTag:(long long)arg1;
- (long long)tagOfSelectedItem;
- (void)selectItemWithRepresentedObject:(id)arg1;
@end

@interface NSRunLoop (IBRunLoopAdditions)
- (void)removeObserver:(struct __CFRunLoopObserver **)arg1;
- (void)addObserver:(id)arg1 forActivity:(unsigned long long)arg2 inMode:(id)arg3 withStorage:(struct __CFRunLoopObserver **)arg4;
@end

@interface NSScreen (IBScreenAdditions)
+ (struct CGPoint)convertWindowServerPointToPoint:(struct CGPoint)arg1;
+ (struct CGPoint)convertPointToWindowServerPoint:(struct CGPoint)arg1;
+ (struct CGRect)convertWindowServerRectToRect:(struct CGRect)arg1;
+ (struct CGRect)convertRectToWindowServerRect:(struct CGRect)arg1;
- (struct CGRect)layoutFrame;
@end

@interface NSScreen (SwizzledMethods)
+ (id)screensWithoutHosingAppKitLock;
@end

@interface NSScrollView (IBScrollViewAdditions)
- (struct CGSize)frameSizeForContentSize:(struct CGSize)arg1;
- (struct CGSize)boundsSizeForContentSize:(struct CGSize)arg1;
- (struct CGSize)contentSizeForBoundsSize:(struct CGSize)arg1;
- (struct CGSize)minimalContentInset;
@end

@interface NSScrollView (NeededMethods)
- (id)headerClipView;
@end

@interface NSSegmentedCell (IBSegmentedCellAdditions)
- (void)sizeSegmentsToFitWidth:(double)arg1;
@end

@interface NSSegmentedCell (NeededMethods)
- (struct CGRect)titleRectForSegment:(long long)arg1 inFrame:(struct CGRect)arg2;
@end

@interface NSSet (IBSetAdditions)
+ (id)setByFlatteningGraph:(id)arg1 withSelector:(SEL)arg2;
+ (id)emptySet;
- (id)setByMapping:(SEL)arg1 onObject:(id)arg2;
- (id)setByMapping:(SEL)arg1 withObject:(id)arg2;
- (id)setByMapping:(SEL)arg1;
- (id)setByMappingBlock:(CDUnknownBlockType)arg1;
- (id)setByRemovingObject:(id)arg1;
- (id)setByAddingObject:(id)arg1;
- (id)setByAddingObjects:(id)arg1;
- (id)setByRemovingObjects:(id)arg1;
- (id)objectsOfClasses:(id)arg1;
- (id)objectsOfClass:(Class)arg1;
- (id)keepIf:(SEL)arg1 withObject:(id)arg2;
- (id)keepIf:(SEL)arg1;
- (id)setByKeepingIf:(CDUnknownBlockType)arg1;
- (long long)countOf:(SEL)arg1 onObject:(id)arg2;
- (long long)countOf:(SEL)arg1 withObject:(id)arg2;
- (long long)countOf:(SEL)arg1;
- (id)setByUnioningSets:(id)arg1;
- (id)setByUnioningSet:(id)arg1;
- (id)setByIntersectingSet:(id)arg1;
- (id)setBySubtractingSet:(id)arg1;
- (void)makeReceiver:(id)arg1 performSelector:(SEL)arg2;
- (void)makeObjectsPerformMutatingSelector:(SEL)arg1 withObject:(id)arg2;
- (void)makeObjectsPerformMutatingSelector:(SEL)arg1;
- (id)uniqueObjects;
- (BOOL)isAnyObject:(id)arg1;
- (BOOL)isEveryObject:(id)arg1;
- (id)onlyObject;
@end

@interface NSShadow (IBShadowAdditions)
- (struct CGRect)shadowBoundsForRect:(struct CGRect)arg1;
@end

@interface NSSound (NSIBSound)
- (id)replacementObjectForCoder:(id)arg1;
@end

@interface NSString (IBStringAdditions)
+ (id)stringWithByte:(unsigned char)arg1 encoding:(unsigned long long)arg2;
+ (id)uniqueID;
+ (id)stringWithFormat:(id)arg1 andArrayOfArguments:(id)arg2;
+ (id)stringWithListComponentsJoinedByCommasAndAnd:(id)arg1;
+ (id)stringByJoiningComponents:(id)arg1 withSeparator:(id)arg2;
- (id)rangeOfNumericalSuffix;
- (id)positiveNumericalSuffix;
- (id)ibSmartConnectionComparisonString;
- (id)wordsFromString;
- (long long)numberOfOccurrencesOfString:(id)arg1;
- (id)stringOfUniqueCharactersFromSet:(id)arg1;
- (id)stringByTrimmingWhiteSpace;
- (id)stringByPrependingString:(id)arg1;
- (id)stringByAppendingPathComponents:(id)arg1;
- (long long)caseInsensitiveNumericCompare:(id)arg1;
- (BOOL)hasPathExtension:(id)arg1;
- (id)UTF8Representation;
@end

@interface NSString (IBStringsTableRecordAdditions)
- (long long)localizedCaseInsensitiveAndNumericCompare:(id)arg1;
@end

@interface NSTabView (IBTabViewAdditions)
- (void)addView:(id)arg1 withIdentifier:(id)arg2;
@end

@interface NSTableColumn (IBTableColumnAdditions)
- (struct CGRect)bounds;
@end

@interface NSTableView (IBTableViewAdditions)
- (double)widthToFitContentsOfColumn:(long long)arg1;
- (double)widthToFitContentsOfColumn:(long long)arg1 row:(long long)arg2;
- (void)scrollRowsToVisible:(id)arg1;
- (id)selectedRows;
@end

@interface NSTask (IBTaskAdditions)
- (id)launchAndSynchronouslyReadOutput;
@end

@interface NSTextView (IBTextViewAdditions)
- (id)stringValue;
- (void)setStringValue:(id)arg1;
- (void)setAttributedString:(id)arg1;
- (id)attributedString;
@end

@interface NSToolbar (IBToolbarAdditions)
- (id)visibleItemForItemIdentifier:(id)arg1;
- (id)itemForItemIdentifier:(id)arg1;
@end

@interface NSToolbarItem (IBToolbarItemAdditions)
+ (id)standardIdentifiers;
- (BOOL)isStandardItem;
@end

@interface NSToolbarItem (SwizzledMethods)
- (id)_ibtoolSafeImageForMenu;
@end

@interface NSUserDefaults (IBUserDefaultAdditions)
- (BOOL)hasPreferenceForKey:(id)arg1;
- (id)keyArchivedObjectForKey:(id)arg1;
- (void)setKeyArchivedObject:(id)arg1 forKey:(id)arg2;
@end

@interface NSValue (IBGeometryAdditions)
+ (id)valueWithInset:(struct IBInsetTag)arg1;
- (BOOL)isInset;
- (struct IBInsetTag)insetValue;
@end

@interface NSValue (IBValueAdditions)
- (id)stringRepresentation;
- (BOOL)isQDRect;
- (BOOL)isRange;
- (BOOL)isPoint;
- (BOOL)isRect;
- (BOOL)isSize;
@end

@interface NSView (IBInspectorControllerModeSupport)
- (BOOL)ibIsCoreAnimationInspectorModeEnabled;
@end

@interface NSView (IBUndoKVC)
- (BOOL)ibWantsBoundsIndicatorDuringTracking;
- (BOOL)ibWantsSolidEditorSelectionHighlight;
- (id)designableTypeAliases;
- (struct CGSize)frameSize;
- (struct CGPoint)frameOrigin;
- (void)setSubviewsArray:(id)arg1;
- (id)subviewsArray;
@end

@interface NSView (IBViewAdditions)
- (unsigned long long)convertEdgeToWindow:(unsigned long long)arg1;
- (unsigned long long)convertEdgeFromWindow:(unsigned long long)arg1;
- (void)makeRectVisible:(struct CGRect)arg1 ofView:(id)arg2;
- (void)makeRectVisible:(struct CGRect)arg1;
- (void)setNeedsDisplayOnRectEdges:(struct CGRect)arg1;
- (struct IBInsetTag)convertInsetFromWindowUserSpace:(struct IBInsetTag)arg1;
- (struct IBInsetTag)convertInsetToWindowUserSpace:(struct IBInsetTag)arg1;
- (struct IBInsetTag)convertInsetFromWindow:(struct IBInsetTag)arg1;
- (struct IBInsetTag)convertInsetToWindow:(struct IBInsetTag)arg1;
- (struct IBInsetTag)convertInset:(struct IBInsetTag)arg1 fromView:(id)arg2;
- (struct IBInsetTag)convertInset:(struct IBInsetTag)arg1 toView:(id)arg2;
- (id)transformForConvertingPointsFromView:(id)arg1;
- (id)transformForConvertingPointsToView:(id)arg1;
- (id)transformForConvertingToAncestor:(id)arg1;
- (struct CGRect)clipRect;
- (struct CGSize)convertOffsetFromWindow:(struct CGSize)arg1;
- (struct CGSize)convertOffsetToWindow:(struct CGSize)arg1;
- (struct CGPoint)convertPointFromWindowUserSpace:(struct CGPoint)arg1;
- (struct CGPoint)convertPointToWindowUserSpace:(struct CGPoint)arg1;
- (struct CGRect)convertRectFromWindowUserSpace:(struct CGRect)arg1;
- (struct CGRect)convertRectToWindowUserSpace:(struct CGRect)arg1;
- (struct CGSize)convertSizeFromWindow:(struct CGSize)arg1;
- (struct CGSize)convertSizeToWindow:(struct CGSize)arg1;
- (struct CGPoint)convertPointFromWindow:(struct CGPoint)arg1;
- (struct CGPoint)convertPointToWindow:(struct CGPoint)arg1;
- (struct CGRect)convertRectFromWindow:(struct CGRect)arg1;
- (struct CGRect)convertRectToWindow:(struct CGRect)arg1;
- (struct CGPoint)convertPointFromScreen:(struct CGPoint)arg1;
- (struct CGPoint)convertPointToScreen:(struct CGPoint)arg1;
- (struct CGSize)convertSizeToScreen:(struct CGSize)arg1;
- (struct CGSize)convertSizeFromScreen:(struct CGSize)arg1;
- (struct CGRect)convertRectFromScreen:(struct CGRect)arg1;
- (struct CGRect)convertRectToScreen:(struct CGRect)arg1;
- (void)insertSubview:(id)arg1 atIndex:(long long)arg2;
- (BOOL)isVisible;
- (struct CGRect)boundsClippedToAncestors;
@end

@interface NSView (IBViewIntegration)
+ (id)affineTransformToUserspaceForViews:(id)arg1;
- (void)didPutObjects:(id)arg1 onPasteboard:(id)arg2 fromDocument:(id)arg3 context:(id)arg4;
- (void)ibDidAddToDesignableDocument:(id)arg1;
- (void)ibAwakeInDesignableDocument:(id)arg1;
- (void)captureInitialResizeActionIfNecessary;
- (BOOL)ibShouldIncludeKeyPathInIbtoolPrintingOutput:(id)arg1;
- (BOOL)ibDocument:(id)arg1 shouldPersistMetadataWithKey:(id)arg2;
- (void)setLastResizeAction:(id)arg1;
- (id)lastResizeAction;
- (void)ibRemoveChildren:(id)arg1;
- (id)ibViewFromPasteboardImageResource:(id)arg1;
- (BOOL)ibAcceptsPasteboardImageResourcesAsViews;
- (id)ibAcceptContentsOfPasteboard:(id)arg1 inDocument:(id)arg2 insertionContext:(id)arg3;
- (BOOL)shouldTranslateFrameOfView:(id)arg1 toTargetSuperview:(id)arg2 usingPreviousParentsToViewMap:(id)arg3 outFrame:(struct CGRect *)arg4;
- (BOOL)ibCanAcceptContentsOfPasteboard:(id)arg1 inDocument:(id)arg2 targetChildRelation:(id *)arg3;
- (void)ibPopulateChildRelationOrder:(id)arg1;
- (void)ibTakeTrackedFrame:(struct CGRect)arg1;
- (BOOL)ibIsDistanceFromEdge:(unsigned long long)arg1 ofSubview:(id)arg2 toSameEdgeOfSuperviewChangingOneToOneWithKnob:(long long)arg3;
- (BOOL)ibIsEdge:(unsigned long long)arg1 ofSubview:(id)arg2 fixedInPositionOnWindowDuringResizeFromKnob:(long long)arg3;
- (void)resumeAutoResizingSubviews:(id)arg1;
- (id)stopAutoResizingSubviewsWhileGrowingFromKnob:(long long)arg1 inDocument:(id)arg2;
- (id)ibUnembedChildrenInDocument:(id)arg1;
- (BOOL)ibCanUnembedChildrenInDocument:(id)arg1;
- (id)ibObjectAtLocation:(struct CGPoint)arg1 inWindowController:(id)arg2;
- (void)removeUserGuide:(id)arg1;
- (void)addUserGuide:(id)arg1;
- (void)setUserGuides:(id)arg1;
- (id)userGuides;
- (long long)ibPreferredResizeDirection;
- (struct CGSize)ibPreferredSizeRespectingNearestLegalBoundsSize;
- (struct CGSize)ibNearestLegalBoundsSize;
- (struct CGPoint)ibPreferredDesignOriginForSize:(struct CGSize)arg1;
- (struct CGSize)ibPreferredSizeForSize:(struct CGSize)arg1 suggestedWidth:(char *)arg2 suggestedHeight:(char *)arg3 scaleAxesIndependently:(char *)arg4;
- (struct CGSize)ibPreferredDesignSize;
- (void)ibConstrainBoundsToNearestLegalSize;
- (void)ibSuggestLayout;
- (void)ibSuggestLayoutWithBoundsSize:(struct CGSize)arg1;
- (void)ibSuggestLayoutWithBoundsSize:(struct CGSize)arg1 andOrigin:(struct CGPoint)arg2;
- (void)ibDidSuggestLayout:(id)arg1;
- (id)ibWillSuggestLayout:(struct CGRect)arg1;
- (id)ibEditorWindowSizeVerificationKeyPath;
- (void)ibWarnings:(id)arg1 forDocument:(id)arg2 withComputationContext:(id)arg3;
- (void)ibIssueOverlappingViewWarning:(id)arg1 forSibling:(id)arg2 withParentView:(id)arg3 inDocument:(id)arg4 withComputationContext:(id)arg5;
- (void)noteDesignableDescendant:(id)arg1 didChangeProperty:(id)arg2 inDocument:(id)arg3 fromValue:(id)arg4;
- (BOOL)isClippingDesignableContent;
- (BOOL)canEditInPersonalWindow;
- (id)editorWindowControllerForDocument:(id)arg1;
- (BOOL)isVerticallyResizable;
- (BOOL)isHorizontallyResizable;
- (struct CGRect)frameForLayoutFrame:(struct CGRect)arg1;
- (struct CGRect)boundsForLayoutBounds:(struct CGRect)arg1;
- (struct CGRect)layoutFrameForFrame:(struct CGRect)arg1;
- (void)setLayoutFrame:(struct CGRect)arg1;
- (struct CGRect)layoutBoundsForBounds:(struct CGRect)arg1;
- (struct CGRect)layoutFrame;
- (struct CGRect)layoutBounds;
- (BOOL)isBaselineAtIndex:(long long)arg1 inMotionWithKnob:(long long)arg2;
- (double)ibBaselineAtIndex:(long long)arg1;
- (long long)ibBaselineCount;
- (struct CGSize)ibMaximumSize;
- (struct CGSize)ibMinimumSize;
- (struct CGSize)ibExtremumSizeForWidgetType:(id)arg1 maximum:(BOOL)arg2;
- (struct IBInsetTag)ibLayoutInset;
- (struct IBInsetTag)ibLayoutInsetForWidgetType:(id)arg1;
- (id)layoutInsetString;
- (id)designableAttributesConfiguration;
- (void)takePastedAttributes:(id)arg1;
- (id)containerWidgetType;
- (id)widgetType;
- (id)ibPasteboardTypes;
- (struct CGRect)ibInspectedRectBySettingSize:(struct CGSize)arg1 fromKnob:(long long)arg2 ofRect:(struct CGRect)arg3;
- (struct CGRect)ibInspectedRectBySettingPoint:(struct CGPoint)arg1 forKnob:(long long)arg2 ofRect:(struct CGRect)arg3;
- (struct CGPoint)ibInspectedPointForKnob:(long long)arg1 onRect:(struct CGRect)arg2;
- (BOOL)isMovable;
- (BOOL)isSizable;
- (BOOL)isUserSizable;
- (BOOL)isUserMovable;
- (BOOL)ibIsChildViewUserMovable:(id)arg1;
- (BOOL)ibIsChildViewUserSizable:(id)arg1;
- (struct IBInsetTag)ibInsetToDesignableContentArea;
- (id)ibDesignableContentView;
- (id)container;
- (id)ibDefaultLabel;
- (id)ibDefaultImage;
- (Class)ibEditorClass;
- (Class)trackerClass;
@end

@interface NSView (IBViewRendererAdditions)
- (Class)viewRendererClass;
@end

@interface NSView (ResizingAdditions)
- (struct CGRect)rectBySettingOrigin:(struct CGPoint)arg1 fromKnob:(long long)arg2 forRect:(struct CGRect)arg3;
- (void)knobRects:(struct CGRect *)arg1 withKnobSize:(struct CGSize)arg2 inCoordinateSpace:(id)arg3;
- (struct CGPoint)pointForKnob:(long long)arg1 onFrame:(struct CGRect)arg2;
- (struct CGRect)rectByMovingKnob:(long long)arg1 forRect:(struct CGRect)arg2 toPoint:(struct CGPoint)arg3;
- (struct CGRect)rectBySettingSize:(struct CGSize)arg1 forRect:(struct CGRect)arg2 fromKnob:(long long)arg3;
@end

@interface NSWindow (IBEditableWindow)
- (BOOL)_isIBEditableWindow;
@end

@interface NSWindow (IBWindowAdditions)
+ (id)windowForOverlaying;
+ (id)windowAtScreenPoint:(struct CGPoint)arg1;
- (struct CGRect)maxFrameRectForCurrentScreen;
- (struct CGRect)maxContentRectForCurrentScreen;
- (id)obscuringBorderedWindows;
- (void)commitFieldEditingAndTryToMaintainFirstResponder;
- (BOOL)isFullKeyboardAccessEnabled;
- (id)screenImage;
- (BOOL)isObscuredBy:(id)arg1;
- (id)windowsInOrderingPlain;
- (BOOL)springForward;
- (BOOL)flashOverWindow:(id)arg1 withRepetitions:(long long)arg2 onTime:(double)arg3 offTime:(double)arg4;
- (BOOL)isKeyAndOrderedFront;
- (void)buildKeyViewLoop;
- (struct CGPoint)contentRectTopLeftPoint;
- (struct CGPoint)frameTopLeftPoint;
- (void)setContentRect:(struct CGRect)arg1;
- (struct CGRect)contentRect;
- (void)setFrame:(struct CGRect)arg1;
- (void)ensureVisibilityOfPortion:(struct CGSize)arg1 ofRect:(struct CGRect)arg2 withBuffer:(long long)arg3 inPresenceOfWindows:(id)arg4;
- (id)bestFrameWithVisibilityOfPortion:(struct CGSize)arg1 ofRect:(struct CGRect)arg2 withBuffer:(long long)arg3 inPresenceOfWindows:(id)arg4;
- (id)bestScreenAndSetFrameIfNecessary;
- (void)ensureVisibilityOfPortion:(struct CGSize)arg1 ofRect:(struct CGRect)arg2;
- (void)setCenterPoint:(struct CGPoint)arg1;
- (id)activeColorPicker;
- (id)activeColorWell;
- (id)toolbarView;
- (id)themeView;
- (void)fadeOff:(double)arg1;
- (void)fadeOn:(double)arg1 block:(BOOL)arg2;
- (void)dragWithMouseDown:(id)arg1 andMouseDragged:(id)arg2;
- (BOOL)closesOnDeactivate;
- (void)setClosesWhenLosesMain:(BOOL)arg1;
- (struct CGPoint)convertPointToUserSpace:(struct CGPoint)arg1;
- (struct CGPoint)convertPointFromUserSpace:(struct CGPoint)arg1;
- (struct CGRect)convertRectFromUserSpace:(struct CGRect)arg1;
- (struct CGRect)convertRectToUserSpace:(struct CGRect)arg1;
- (struct CGRect)convertRectFromScreen:(struct CGRect)arg1;
- (struct CGRect)convertRectToScreen:(struct CGRect)arg1;
@end

@interface NSWindow (ResetHitViews)
- (void)resetLastHitView;
@end

@interface NSWindow (ResizingAdditions)
- (void)setContentViewSizePinningTopLeft:(struct CGSize)arg1;
- (void)setContentViewSizePinningTopLeft:(struct CGSize)arg1 display:(BOOL)arg2;
- (void)setContentViewSizePinningTopLeft:(struct CGSize)arg1 display:(BOOL)arg2 animate:(BOOL)arg3;
- (struct CGRect)contentRectForContentSizePinningToTopLeft:(struct CGSize)arg1;
@end

@interface NSWorkspace (IBWorkspaceAdditions)
- (BOOL)setLaunchArchitecturePreference:(long long)arg1 ofBundle:(id)arg2 error:(id *)arg3;
@end

@interface NSXMLElement (IBXMLElementAddition)
- (void)addAttributeWithName:(id)arg1 andStringValue:(id)arg2;
- (id)elements;
@end

@interface NSXMLNode (IBXMLNodeAdditions)
+ (id)elementWithName:(id)arg1 attributes:(id)arg2;
+ (id)elementWithName:(id)arg1 namespaces:(id)arg2 attributes:(id)arg3;
+ (id)elementWithName:(id)arg1 stringValue:(id)arg2 attributes:(id)arg3;
@end

