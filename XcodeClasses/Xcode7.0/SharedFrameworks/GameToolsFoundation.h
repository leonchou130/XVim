//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Named Structures

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct FSEventStreamContext {
    long long version;
    void *info;
    CDUnknownFunctionPointerType retain;
    CDUnknownFunctionPointerType release;
    CDUnknownFunctionPointerType copyDescription;
};

struct MappingPair {
    id from;
    id to;
};

struct SCNVector4 {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
};

struct _NSRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct deque<NSMutableArray *, std::__1::allocator<NSMutableArray *>> {
    struct __split_buffer<NSMutableArray *__strong *, std::__1::allocator<NSMutableArray *__strong *>> {
        id **__first_;
        id **__begin_;
        id **__end_;
        struct __compressed_pair<NSMutableArray *__strong **, std::__1::allocator<NSMutableArray *__strong *>> {
            id **__first_;
        } __end_cap_;
    } __map_;
    unsigned long long __start_;
    struct __compressed_pair<unsigned long, std::__1::allocator<NSMutableArray *>> {
        unsigned long long __first_;
    } __size_;
};

struct map<int, NSMutableArray *, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, NSMutableArray *>>> {
    struct __tree<std::__1::__value_type<int, NSMutableArray *>, std::__1::__map_value_compare<int, std::__1::__value_type<int, NSMutableArray *>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, NSMutableArray *>>> {
        struct __tree_node<std::__1::__value_type<int, NSMutableArray *>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, NSMutableArray *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
                struct __tree_node_base<void *> *__left_;
            } __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, NSMutableArray *>, std::__1::less<int>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct stack<NSMutableArray *, std::__1::deque<NSMutableArray *, std::__1::allocator<NSMutableArray *>>> {
    struct deque<NSMutableArray *, std::__1::allocator<NSMutableArray *>> c;
};

#pragma mark -

//
// File: /Applications/Xcode-7GM.app/Contents/SharedFrameworks/GameToolsFoundation.framework/Versions/A/GameToolsFoundation
// UUID: 48F49A00-58C1-360E-80EE-3E83C58052EA
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 8062.0.0.0.0
//       Minimum Mac OS X version: 10.10.0
//                    SDK version: 10.11.0
//
// Objective-C Garbage Collection: Unsupported
//
//                       Run path: @executable_path/../Frameworks
//                               = /Applications/Xcode-7GM.app/Contents/SharedFrameworks/GameToolsFoundation.framework/Versions/Frameworks
//                       Run path: @loader_path/Frameworks
//                               = /Applications/Xcode-7GM.app/Contents/SharedFrameworks/GameToolsFoundation.framework/Versions/A/Frameworks
//

@protocol GTFActionCreateDelegate <NSObject>
- (void)actionCreatePopoverDidClose;
- (void)actionCreatePopoverCreateActionForSelectedTarget;
- (void)actionCreatePopoverCreateActionNamed:(NSString *)arg1 forFile:(NSURL *)arg2 createNewFile:(BOOL)arg3;
@end

@protocol GTFActionEditorClientDocument
@property(readonly, nonatomic) long long actionEditorClientDocumentType;
@end

@protocol GTFActionLibraryDelegate <NSObject>
- (void)actionsDidChangeInTimeline:(GTFActionTimelineModel *)arg1;
- (void)didReplaceTimeline:(GTFActionTimelineModel *)arg1 withTimeline:(GTFActionTimelineModel *)arg2;
- (void)didRemoveTimeline:(GTFActionTimelineModel *)arg1;
- (void)didAddTimeline:(GTFActionTimelineModel *)arg1;
@end

@protocol GTFActionLibraryReferenceLookupSourceDelegate <NSObject>
- (void)actionLibraryForceLookupUpdate:(GTFActionLibrary *)arg1;
- (GTFActionTimelineModel *)timelineModelForActionLibrary:(GTFActionLibrary *)arg1 forActionNamed:(NSString *)arg2;
@end

@protocol GTFActionLibraryTarget <NSObject>
@property(readonly, nonatomic) NSString *gtf_name;
@property(readonly, nonatomic) GTFActionLibraryTargetThumbnail *gtf_thumbnailImage;
@property(readonly, nonatomic) id <NSCopying> gtf_uid;
@end

@protocol GTFActionLoopPopoverDelegate <NSObject>

@optional
- (void)loopPopover:(GTFActionLoopPopoverController *)arg1 didRemoveLoop:(GTFActionModelGroupLoop *)arg2 fromTimelineModel:(GTFActionTimelineModel *)arg3;
- (void)loopPopover:(GTFActionLoopPopoverController *)arg1 willRemoveLoop:(GTFActionModelGroupLoop *)arg2 fromTimelineModel:(GTFActionTimelineModel *)arg3;
- (void)loopPopover:(GTFActionLoopPopoverController *)arg1 didModifyLoop:(GTFActionModelGroupLoop *)arg2 inTimelineModel:(GTFActionTimelineModel *)arg3;
@end

@protocol GTFActionNodeOverviewDelegate <NSObject>

@optional
- (BOOL)isActionFileEditor;
- (void)nodeOverview:(GTFActionNodeOverviewView *)arg1 duplicateNodeTrack:(GTFActionNodeTrackView *)arg2;
- (void)nodeOverview:(GTFActionNodeOverviewView *)arg1 removeNodeTrack:(GTFActionNodeTrackView *)arg2;
@end

@protocol GTFActionNodeTrackViewDelegate <NSObject>
- (void)nodeTrackView:(GTFActionNodeTrackView *)arg1 reverseActions:(NSArray *)arg2;
- (void)nodeTrackView:(GTFActionNodeTrackView *)arg1 duplicateActions:(NSArray *)arg2;
- (void)pasteActionsIntoNodeTrackView:(GTFActionNodeTrackView *)arg1;
- (BOOL)pasteActionsAvailableForNodeTrackView:(GTFActionNodeTrackView *)arg1;
- (void)nodeTrackView:(GTFActionNodeTrackView *)arg1 copyActions:(NSArray *)arg2;
- (void)endCommandForNodeTrackView:(GTFActionNodeTrackView *)arg1;
- (void)beginCommandForNodeTrackView:(GTFActionNodeTrackView *)arg1;
- (void)nodeTrackView:(GTFActionNodeTrackView *)arg1 convertToReference:(NSArray *)arg2;
- (BOOL)shouldCreateReferenceActionWithActions:(NSArray *)arg1;
- (GTFActionModel *)unarchiveActionModel:(NSData *)arg1;
- (void)incrementPreviewStartTime:(double)arg1 startPreview:(BOOL)arg2;
- (void)resetCursorRectsInTrackOverviewForNodeTrackView:(GTFActionNodeTrackView *)arg1;
- (void)redrawTrackOverviewForNodeTrackView:(GTFActionNodeTrackView *)arg1 resetCursorRects:(BOOL)arg2;
- (struct CGRect)getVisibleRect;
- (void)nodeTrackViewUpdateEditorEndTime:(GTFActionNodeTrackView *)arg1;
- (double)nodeTrackViewGetTimelineEndTime:(GTFActionNodeTrackView *)arg1;
- (double)nodeTrackView:(GTFActionNodeTrackView *)arg1 getTrackEndTime:(int)arg2;
- (int)nodeTrackView:(GTFActionNodeTrackView *)arg1 getClosestTrackWithoutInfiniteLoops:(int)arg2;
- (BOOL)nodeTrackView:(GTFActionNodeTrackView *)arg1 isActionInGroup:(GTFActionView *)arg2;
- (int)nodeTrackView:(GTFActionNodeTrackView *)arg1 getBottomTrackForGroup:(int)arg2;
- (int)nodeTrackView:(GTFActionNodeTrackView *)arg1 getTopTrackForGroup:(int)arg2;
- (int)nodeTrackView:(GTFActionNodeTrackView *)arg1 getGroupIndexThatContainsActions:(NSArray *)arg2;
- (BOOL)nodeTrackView:(GTFActionNodeTrackView *)arg1 doesAnyGroupContainAtLeastOneAction:(NSArray *)arg2;
- (int)nodeTrackView:(GTFActionNodeTrackView *)arg1 getGroupIndexForTrack:(int)arg2;
- (NSArray *)nodeTrackView:(GTFActionNodeTrackView *)arg1 getActionsForGroup:(int)arg2 inTrack:(int)arg3;
- (NSArray *)nodeTrackView:(GTFActionNodeTrackView *)arg1 getActionsForGroup:(int)arg2;
- (int)nodeTrackView:(GTFActionNodeTrackView *)arg1 getActionCountForGroup:(int)arg2;
- (NSArray *)nodeTrackView:(GTFActionNodeTrackView *)arg1 getTracksForGroup:(int)arg2;
- (void)nodeTrackView:(GTFActionNodeTrackView *)arg1 setIterationTime:(double)arg2 forLoop:(int)arg3;
- (void)nodeTrackView:(GTFActionNodeTrackView *)arg1 setDuration:(double)arg2 forGroup:(int)arg3;
- (void)nodeTrackView:(GTFActionNodeTrackView *)arg1 offsetStartTime:(double)arg2 forGroup:(int)arg3;
- (void)nodeTrackView:(GTFActionNodeTrackView *)arg1 setStartTime:(double)arg2 forGroup:(int)arg3;
- (double)nodeTrackView:(GTFActionNodeTrackView *)arg1 getDurationForGroup:(int)arg2;
- (double)nodeTrackView:(GTFActionNodeTrackView *)arg1 getStartTimeForGroup:(int)arg2;
- (double)nodeTrackView:(GTFActionNodeTrackView *)arg1 getIterationTimeForLoop:(int)arg2;
- (void)nodeTrackView:(GTFActionNodeTrackView *)arg1 setLoopCount:(int)arg2 forLoop:(int)arg3;
- (int)nodeTrackView:(GTFActionNodeTrackView *)arg1 getLoopCountForGroup:(int)arg2;
- (int)nodeTrackViewGetNumGroups:(GTFActionNodeTrackView *)arg1;
- (void)nodeTrackView:(GTFActionNodeTrackView *)arg1 didDoubleClickAction:(GTFActionView *)arg2;
- (void)nodeTrackView:(GTFActionNodeTrackView *)arg1 performedIdleSelectOnAction:(GTFActionView *)arg2;
- (BOOL)nodeTrackView:(GTFActionNodeTrackView *)arg1 verifyCanMoveActions:(NSArray *)arg2 byTrackOffset:(int)arg3 ignoreEachOther:(BOOL)arg4;
- (void)nodeTrackView:(GTFActionNodeTrackView *)arg1 destroyGroup:(int)arg2;
- (BOOL)nodeTrackView:(GTFActionNodeTrackView *)arg1 createGroupReferenceForActions:(NSArray *)arg2;
- (void)nodeTrackView:(GTFActionNodeTrackView *)arg1 showPopoverForLoop:(int)arg2 relativeToRect:(struct CGRect)arg3;
- (int)nodeTrackView:(GTFActionNodeTrackView *)arg1 createLoopForActions:(NSArray *)arg2 withLoopCount:(int)arg3;
- (void)nodeTrackView:(GTFActionNodeTrackView *)arg1 setSelectedActionsFromViews:(NSArray *)arg2;
- (void)nodeTrackView:(GTFActionNodeTrackView *)arg1 getSmallestTimeMarginForGroup:(int)arg2 outLeftMargin:(double *)arg3 outRightMargin:(double *)arg4;
- (void)nodeTrackView:(GTFActionNodeTrackView *)arg1 getSmallestTimeMarginForActions:(NSArray *)arg2 ignoreEachOther:(BOOL)arg3 outLeftMargin:(double *)arg4 outRightMargin:(double *)arg5;
- (void)nodeTrackView:(GTFActionNodeTrackView *)arg1 updateActionWidth:(GTFActionView *)arg2 enableSnapping:(BOOL)arg3;
- (void)nodeTrackView:(GTFActionNodeTrackView *)arg1 updateActionWidth:(GTFActionView *)arg2;
- (void)nodeTrackView:(GTFActionNodeTrackView *)arg1 noteActionStartTimesAndDurationsForTrack:(int)arg2;
- (void)nodeTrackView:(GTFActionNodeTrackView *)arg1 offsetTrack:(int)arg2 forActions:(NSArray *)arg3;
- (void)nodeTrackView:(GTFActionNodeTrackView *)arg1 offsetTime:(double)arg2 forActions:(NSArray *)arg3;
- (void)nodeTrackView:(GTFActionNodeTrackView *)arg1 updateActionPosition:(GTFActionView *)arg2 enableSnapping:(BOOL)arg3;
- (void)nodeTrackView:(GTFActionNodeTrackView *)arg1 updateActionPosition:(GTFActionView *)arg2;
- (BOOL)nodeTrackViewIsLastInOverview:(GTFActionNodeTrackView *)arg1;
- (BOOL)nodeTrackViewIsPreviousTrackExpanded:(GTFActionNodeTrackView *)arg1;
- (void)nodeTrackViewDidChangeTrackCount:(GTFActionNodeTrackView *)arg1;
- (void)nodeTrackView:(GTFActionNodeTrackView *)arg1 finishedMovingActionView:(GTFActionView *)arg2;
- (void)nodeTrackView:(GTFActionNodeTrackView *)arg1 actionViewRemoved:(GTFActionView *)arg2;
- (void)nodeTrackView:(GTFActionNodeTrackView *)arg1 actionViewAdded:(GTFActionView *)arg2 withModel:(GTFActionModel *)arg3;
@end

@protocol GTFActionOverviewViewControllerDelegate <NSObject>

@optional
- (void)overviewController:(GTFActionOverviewViewController *)arg1 didSelectFilterCategoryName:(NSString *)arg2;
- (void)overviewController:(GTFActionOverviewViewController *)arg1 didUpdateFilterString:(NSString *)arg2;
@end

@protocol GTFActionRefPopoverDelegate <NSObject>
- (void)actionRefPopover:(GTFActionRefPreviewPopoverController *)arg1 didPressGotoSourceForTimeline:(GTFActionTimelineModel *)arg2;
@end

@protocol GTFActionTimelineGroupInfoDelegate <NSObject>
- (double)getTimelineOffset;
- (double)getTimeScale;
- (struct CGRect)calcGroupRect:(int)arg1;
- (struct CGRect)getTrackFrame:(int)arg1;
- (NSArray *)getTrackActionViews:(int)arg1;
- (double)getTrackEndTime:(int)arg1;
- (int)getNumTracks;
- (BOOL)shouldShowGroupTopForTrack:(int)arg1;
- (int)getGroupIndexForTrack:(int)arg1;
- (NSArray *)getActionsForGroup:(int)arg1 inTrack:(int)arg2;
- (NSArray *)getTracksForGroup:(int)arg1;
- (double)getStartTimeForGroup:(int)arg1;
- (double)getIterationTimeForLoop:(int)arg1;
- (int)getLoopCountForGroup:(int)arg1;
- (int)getNumGroups;
@end

@protocol GTFActionTimelineInfoDelegate <NSObject>
- (BOOL)isTrackLastInOverview:(int)arg1;
- (BOOL)shouldShowGroupControl;
- (void)trackHeightChanged:(int)arg1;
- (int)getNumTracks;
- (double)getActionYCoordinateForTrack:(int)arg1;
- (int)getTrackFromPoint:(struct CGPoint)arg1;
- (double)getTimeForXCoord:(double)arg1;
- (double)getTrackEndTime:(int)arg1;
- (double)getMinXCoordForAction;
- (double)getTimelineOffset;
- (double)getTimeScale;
@end

@protocol GTFActionTimelineModelDelegate <NSObject>
- (void)endChangeInTimelineModel:(GTFActionTimelineModel *)arg1;
- (void)beginChangeInTimelineModel:(GTFActionTimelineModel *)arg1;
- (void)actionTimelineUpdateView:(GTFActionTimelineModel *)arg1;
- (void)actionTimelineUpdateEditorWithEndTime:(GTFActionTimelineModel *)arg1;
- (double)actionTimeLineGetEditorEndTime:(GTFActionTimelineModel *)arg1;
- (NSString *)actionTimeline:(GTFActionTimelineModel *)arg1 lookupImageAssetPath:(NSString *)arg2;
- (void)actionTimeline:(GTFActionTimelineModel *)arg1 didRemoveAction:(GTFActionModel *)arg2;
- (void)actionTimeline:(GTFActionTimelineModel *)arg1 didAddAction:(GTFActionModel *)arg2;
@end

@protocol GTFActionTimelineViewDelegate <NSObject>
- (void)incrementPreviewStartTime:(double)arg1 startPreview:(BOOL)arg2;
- (void)setActionPreviewStartTime:(double)arg1 startPreview:(BOOL)arg2;
@end

@protocol GTFActionTrackOverviewDelegate <NSObject>
- (struct CGRect)getVisibleRect;
- (void)trackOverviewView:(GTFActionTrackOverviewView *)arg1 moveSelectedActionsFromNodeTrackView:(GTFActionNodeTrackView *)arg2 toNodeTrackView:(GTFActionNodeTrackView *)arg3 movingDown:(BOOL)arg4 selectActionsAfterMove:(BOOL)arg5;
@end

@protocol GTFFileSystemEventStreamDelegate <NSObject>
- (void)fileSystemEventStream:(GTFFileSystemEventStream *)arg1 notedChangeAtPath:(NSString *)arg2 scanRecursively:(BOOL)arg3;

@optional
- (void)historyWrappedForFileSystemEventStream:(GTFFileSystemEventStream *)arg1;
- (void)historyCompleteForFileSystemEventStream:(GTFFileSystemEventStream *)arg1;
- (void)fileSystemEventStream:(GTFFileSystemEventStream *)arg1 notedVolumeUnmount:(NSString *)arg2;
- (void)fileSystemEventStream:(GTFFileSystemEventStream *)arg1 notedVolumeMount:(NSString *)arg2;
- (void)fileSystemEventStream:(GTFFileSystemEventStream *)arg1 notedChangeOfRootPath:(NSString *)arg2;
@end

@protocol IDEKeyDrivenNavigableItemRepresentedObject <NSObject>
@property(readonly) NSString *navigableItem_name;

@optional
@property(readonly) NSString *navigableItem_groupIdentifier;
@property(readonly) DVTDocumentLocation *navigableItem_contentDocumentLocation;
@property(readonly) DVTFileDataType *navigableItem_documentType;
@property(readonly) IDEFileReference *navigableItem_fileReference;
@property(readonly) BOOL navigableItem_isLeaf;
@property(readonly) BOOL navigableItem_isMajorGroup;
@property(readonly) NSString *navigableItem_toolTip;
@property(readonly) NSImage *navigableItem_image;
- (DVTDocumentLocation *)navigableItem_contentDocumentLocationInDocumentURL:(NSURL *)arg1;
@end

@protocol IDETemplateSupportingNavigator <NSObject>
- (IDEGroup *)defaultDestinationGroupForTemplateInstantiationWithDestinationIndex:(long long *)arg1;
- (void)addTemplateInstantiatedItems:(NSArray *)arg1 primaryItem:(IDEContainerItem *)arg2 shouldEdit:(BOOL)arg3;
- (void)setupTemplateContext:(IDETemplateAssistantContext *)arg1;
@end

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSControlTextEditingDelegate <NSObject>

@optional
- (NSArray *)control:(NSControl *)arg1 textView:(NSTextView *)arg2 completions:(NSArray *)arg3 forPartialWordRange:(struct _NSRange)arg4 indexOfSelectedItem:(long long *)arg5;
- (BOOL)control:(NSControl *)arg1 textView:(NSTextView *)arg2 doCommandBySelector:(SEL)arg3;
- (BOOL)control:(NSControl *)arg1 isValidObject:(id)arg2;
- (void)control:(NSControl *)arg1 didFailToValidatePartialString:(NSString *)arg2 errorDescription:(NSString *)arg3;
- (BOOL)control:(NSControl *)arg1 didFailToFormatString:(NSString *)arg2 errorDescription:(NSString *)arg3;
- (BOOL)control:(NSControl *)arg1 textShouldEndEditing:(NSText *)arg2;
- (BOOL)control:(NSControl *)arg1 textShouldBeginEditing:(NSText *)arg2;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSDraggingDestination <NSObject>

@optional
- (void)updateDraggingItemsForDrag:(id <NSDraggingInfo>)arg1;
- (BOOL)wantsPeriodicDraggingUpdates;
- (void)draggingEnded:(id <NSDraggingInfo>)arg1;
- (void)concludeDragOperation:(id <NSDraggingInfo>)arg1;
- (BOOL)performDragOperation:(id <NSDraggingInfo>)arg1;
- (BOOL)prepareForDragOperation:(id <NSDraggingInfo>)arg1;
- (void)draggingExited:(id <NSDraggingInfo>)arg1;
- (unsigned long long)draggingUpdated:(id <NSDraggingInfo>)arg1;
- (unsigned long long)draggingEntered:(id <NSDraggingInfo>)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (BOOL)respondsToSelector:(SEL)arg1;
- (BOOL)conformsToProtocol:(Protocol *)arg1;
- (BOOL)isMemberOfClass:(Class)arg1;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (BOOL)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSPasteboardReading <NSObject>
+ (NSArray *)readableTypesForPasteboard:(NSPasteboard *)arg1;

@optional
+ (unsigned long long)readingOptionsForType:(NSString *)arg1 pasteboard:(NSPasteboard *)arg2;
- (id)initWithPasteboardPropertyList:(id)arg1 ofType:(NSString *)arg2;
@end

@protocol NSPasteboardWriting <NSObject>
- (id)pasteboardPropertyListForType:(NSString *)arg1;
- (NSArray *)writableTypesForPasteboard:(NSPasteboard *)arg1;

@optional
- (unsigned long long)writingOptionsForType:(NSString *)arg1 pasteboard:(NSPasteboard *)arg2;
@end

@protocol NSPopoverDelegate <NSObject>

@optional
- (void)popoverDidClose:(NSNotification *)arg1;
- (void)popoverWillClose:(NSNotification *)arg1;
- (void)popoverDidShow:(NSNotification *)arg1;
- (void)popoverWillShow:(NSNotification *)arg1;
- (NSWindow *)detachableWindowForPopover:(NSPopover *)arg1;
- (void)popoverDidDetach:(NSPopover *)arg1;
- (BOOL)popoverShouldDetach:(NSPopover *)arg1;
- (BOOL)popoverShouldClose:(NSPopover *)arg1;
@end

@protocol NSSplitViewDelegate <NSObject>

@optional
- (void)splitViewDidResizeSubviews:(NSNotification *)arg1;
- (void)splitViewWillResizeSubviews:(NSNotification *)arg1;
- (struct CGRect)splitView:(NSSplitView *)arg1 additionalEffectiveRectOfDividerAtIndex:(long long)arg2;
- (struct CGRect)splitView:(NSSplitView *)arg1 effectiveRect:(struct CGRect)arg2 forDrawnRect:(struct CGRect)arg3 ofDividerAtIndex:(long long)arg4;
- (BOOL)splitView:(NSSplitView *)arg1 shouldHideDividerAtIndex:(long long)arg2;
- (BOOL)splitView:(NSSplitView *)arg1 shouldAdjustSizeOfSubview:(NSView *)arg2;
- (void)splitView:(NSSplitView *)arg1 resizeSubviewsWithOldSize:(struct CGSize)arg2;
- (double)splitView:(NSSplitView *)arg1 constrainSplitPosition:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(NSSplitView *)arg1 constrainMaxCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(NSSplitView *)arg1 constrainMinCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (BOOL)splitView:(NSSplitView *)arg1 shouldCollapseSubview:(NSView *)arg2 forDoubleClickOnDividerAtIndex:(long long)arg3;
- (BOOL)splitView:(NSSplitView *)arg1 canCollapseSubview:(NSView *)arg2;
@end

@protocol NSTextFieldDelegate <NSControlTextEditingDelegate>
@end

@interface ActionKeyValuePair : NSObject
{
    NSString *_key;
    id _value;
}

@property(retain, nonatomic) id value; // @synthesize value=_value;
@property(retain, nonatomic) NSString *key; // @synthesize key=_key;
- (void).cxx_destruct;
- (id)initWithKey:(id)arg1 forValue:(id)arg2;

@end

@interface GTFActionBorderedView : DVTBorderedView
{
}

- (void)scrollWheel:(id)arg1;

@end

@interface GTFActionCachedDataStore : NSObject
{
}

+ (id)sharedDataStore;
@property(nonatomic) double timeScaleSliderPosition;
@property(retain, nonatomic) NSString *filterTypeName;
@property(nonatomic) double widthOfNodeOverviewArea;
@property(nonatomic) double heightOfActionEditorArea;
@property(nonatomic) BOOL isActionEditorShown;
- (id)init;

@end

@interface GTFActionControllerContentView : DVTControllerContentView
{
}

- (void)scrollWheel:(id)arg1;

@end

@interface GTFActionCopyData : NSObject <NSCoding, NSPasteboardWriting, NSPasteboardReading>
{
    NSMutableArray *_allActions;
    NSMutableArray *_independentActions;
    NSArray *_groups;
}

+ (unsigned long long)readingOptionsForType:(id)arg1 pasteboard:(id)arg2;
+ (id)readableTypesForPasteboard:(id)arg1;
+ (id)actionCopyDataForTimeline:(id)arg1 withActionsSubset:(id)arg2;
@property(readonly, nonatomic) NSArray *groups; // @synthesize groups=_groups;
@property(readonly, nonatomic) NSArray *allActions; // @synthesize allActions=_allActions;
@property(readonly, nonatomic) NSArray *independentActions; // @synthesize independentActions=_independentActions;
- (void).cxx_destruct;
- (id)pasteboardPropertyListForType:(id)arg1;
- (id)writableTypesForPasteboard:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initForTimeline:(id)arg1 withActionsSubset:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GTFActionCopyDataGroup : NSObject <NSCoding>
{
    int _loopCountMutable;
    NSMutableArray *_actionsMutable;
}

@property(nonatomic) int loopCountMutable; // @synthesize loopCountMutable=_loopCountMutable;
@property(retain, nonatomic) NSMutableArray *actionsMutable; // @synthesize actionsMutable=_actionsMutable;
- (void).cxx_destruct;
@property(readonly, nonatomic) int loopCount;
@property(readonly, nonatomic) NSArray *actions;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;

@end

@interface GTFActionCreatePopoverController : DVTViewController <NSPopoverDelegate>
{
    NSMutableDictionary *_filenameToURL;
    BOOL _invalidateAfterClose;
    BOOL _hasInstalled;
    NSColor *_enabledFontColor;
    NSColor *_disabledFontColor;
    BOOL _showFileChooser;
    BOOL _isTargetAvailable;
    BOOL _notifyOnClose;
    id <GTFActionCreateDelegate> _delegate;
    NSPopover *_popover;
    DVTStackView_AppKitAutolayout *_stackView;
    NSView *_actionTargetView;
    NSView *_actionNameView;
    NSView *_actionFileView;
    NSView *_actionCreateView;
    NSPopUpButton *_actionFilenameField;
    NSTextField *_actionNameField;
    NSSegmentedControl *_actionTargetControl;
    NSTextField *_actionNameLabel;
    NSTextField *_actionFileLabel;
}

+ (id)scannedSKSActionFileNames;
+ (BOOL)isSKSActionFile:(id)arg1;
+ (id)supportedFileTypes;
@property __weak NSTextField *actionFileLabel; // @synthesize actionFileLabel=_actionFileLabel;
@property __weak NSTextField *actionNameLabel; // @synthesize actionNameLabel=_actionNameLabel;
@property __weak NSSegmentedControl *actionTargetControl; // @synthesize actionTargetControl=_actionTargetControl;
@property __weak NSTextField *actionNameField; // @synthesize actionNameField=_actionNameField;
@property __weak NSPopUpButton *actionFilenameField; // @synthesize actionFilenameField=_actionFilenameField;
@property __weak NSView *actionCreateView; // @synthesize actionCreateView=_actionCreateView;
@property __weak NSView *actionFileView; // @synthesize actionFileView=_actionFileView;
@property __weak NSView *actionNameView; // @synthesize actionNameView=_actionNameView;
@property __weak NSView *actionTargetView; // @synthesize actionTargetView=_actionTargetView;
@property __weak DVTStackView_AppKitAutolayout *stackView; // @synthesize stackView=_stackView;
@property __weak NSPopover *popover; // @synthesize popover=_popover;
@property(nonatomic) BOOL notifyOnClose; // @synthesize notifyOnClose=_notifyOnClose;
@property(nonatomic) BOOL isTargetAvailable; // @synthesize isTargetAvailable=_isTargetAvailable;
@property(nonatomic) BOOL showFileChooser; // @synthesize showFileChooser=_showFileChooser;
@property(nonatomic) __weak id <GTFActionCreateDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)popoverDidClose:(id)arg1;
- (void)_removeFromSuperviewAndInvalidate;
- (void)closePopoverAndInvalidate;
- (void)controlTextDidEndEditing:(id)arg1;
- (void)handlePressCreate:(id)arg1;
- (void)handleTargetChanged:(id)arg1;
- (void)refreshFilenameField;
- (void)viewDidAppear;
- (void)setShowFileViewAvailability:(BOOL)arg1;
- (void)setTargetViewAvailability:(BOOL)arg1;
- (void)viewDidInstall;
- (void)commonInit;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)initWithCoder:(id)arg1;
- (id)initUsingDefaultNib;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GTFActionDocument : IDEEditorDocument <GTFActionEditorClientDocument>
{
    GTFActionLibrary *_actionLibrary;
}

@property(retain, nonatomic) GTFActionLibrary *actionLibrary; // @synthesize actionLibrary=_actionLibrary;
- (void).cxx_destruct;
- (id)addActionTimeline:(id)arg1 withName:(id)arg2;
- (id)nextAvailableActionName:(id)arg1;
@property(readonly, nonatomic) long long actionEditorClientDocumentType;

@end

@interface GTFActionEditor : IDEViewController <GTFActionNodeTrackViewDelegate, GTFActionTimelineViewDelegate, GTFActionLibraryDelegate, GTFActionCreateDelegate, GTFActionLoopPopoverDelegate, GTFActionRefPopoverDelegate, GTFActionOverviewViewControllerDelegate, GTFActionNodeOverviewDelegate, GTFActionTrackOverviewDelegate, GTFActionTimelineModelDelegate, GTFFileSystemEventStreamDelegate, GTFActionLibraryReferenceLookupSourceDelegate>
{
    DVTObservingToken *_filteredTargetsKVOToken;
    NSArray *_filteredTargetsObservers;
    NSArray *_currentFilteredTargets;
    NSMutableArray *_nodeTrackViews;
    NSMutableArray *_observedActions;
    NSMutableArray *_filteredNodeTrackViews;
    NSMutableArray *_referencedDocuments;
    NSMutableDictionary *_nameToDocumentPath;
    NSMapTable *_nameToRefActionLibrary;
    GTFFileSystemEventStream *_eventStream;
    id <DVTInvalidation> _variantContextObservation;
    IDEMediaResourceVariantContext *_variantContext;
    GTFActionTimelineModel *_conversionTimelineModel;
    SKActionReference *_conversionRefAction;
    NSArray *_convertToReferenceActions;
    NSArray *_convertToReferenceActionsForNewFile;
    int _convertToReferenceLoops;
    double _previewStartTime;
    double _lastUpdateTime;
    double _timeSinceSceneLoaded;
    double _timeScale;
    double _timelineEndTime;
    BOOL _ignorePreviewUpdates;
    BOOL _isPlaying;
    BOOL _supressSelectionUpdate;
    BOOL _isPreviewPaused;
    id <GTFActionEditorDelegate> _delegate;
    NSArray *_selectedActions;
    NSDictionary *_filteredTargets;
    NSString *_filterString;
    double _playbackSpeed;
    NSScrollView *_trackOverviewScroll;
    GTFActionLoopPopoverController *_loopActionViewController;
    GTFActionCreatePopoverController *_addActionViewController;
    GTFActionRefPreviewPopoverController *_refActionViewController;
    NSView *_actionNodeSelectorTimelineTabSubview;
    GTFActionTimelineControlView *_actionNodeSelectorTimelineControlView;
    DVTSplitView *_sideSplitView;
    NSScrollView *_actionTimelinePanel;
    GTFActionNodeOverviewView *_nodeOverview;
    GTFActionTrackOverviewView *_trackOverviewView;
    GTFActionTimelineView *_timelineView;
    NSPopUpButton *_filterCategoriesField;
    NSSlider *_timeScaleSlider;
    GTFActionMapper *_mapper;
    NSDictionary *_imageAssetLookup;
    NSString *_filterCategoryName;
}

+ (id)createShowActionButton;
+ (void)setLastEditorHeight:(double)arg1;
+ (double)lastEditorHeight;
+ (void)setLastEditorVisibility:(BOOL)arg1;
+ (BOOL)lastEditorVisibility;
+ (id)dataCache;
@property(retain, nonatomic) NSString *filterCategoryName; // @synthesize filterCategoryName=_filterCategoryName;
@property(retain, nonatomic) NSDictionary *imageAssetLookup; // @synthesize imageAssetLookup=_imageAssetLookup;
@property(retain, nonatomic) GTFActionMapper *mapper; // @synthesize mapper=_mapper;
@property(retain) NSSlider *timeScaleSlider; // @synthesize timeScaleSlider=_timeScaleSlider;
@property(retain) NSPopUpButton *filterCategoriesField; // @synthesize filterCategoriesField=_filterCategoriesField;
@property(retain) GTFActionTimelineView *timelineView; // @synthesize timelineView=_timelineView;
@property(retain) GTFActionTrackOverviewView *trackOverviewView; // @synthesize trackOverviewView=_trackOverviewView;
@property(retain) GTFActionNodeOverviewView *nodeOverview; // @synthesize nodeOverview=_nodeOverview;
@property(retain) NSScrollView *actionTimelinePanel; // @synthesize actionTimelinePanel=_actionTimelinePanel;
@property __weak DVTSplitView *sideSplitView; // @synthesize sideSplitView=_sideSplitView;
@property __weak GTFActionTimelineControlView *actionNodeSelectorTimelineControlView; // @synthesize actionNodeSelectorTimelineControlView=_actionNodeSelectorTimelineControlView;
@property __weak NSView *actionNodeSelectorTimelineTabSubview; // @synthesize actionNodeSelectorTimelineTabSubview=_actionNodeSelectorTimelineTabSubview;
@property __weak GTFActionRefPreviewPopoverController *refActionViewController; // @synthesize refActionViewController=_refActionViewController;
@property __weak GTFActionCreatePopoverController *addActionViewController; // @synthesize addActionViewController=_addActionViewController;
@property __weak GTFActionLoopPopoverController *loopActionViewController; // @synthesize loopActionViewController=_loopActionViewController;
@property(retain) NSScrollView *trackOverviewScroll; // @synthesize trackOverviewScroll=_trackOverviewScroll;
@property(nonatomic) double playbackSpeed; // @synthesize playbackSpeed=_playbackSpeed;
@property(nonatomic) BOOL isPreviewPaused; // @synthesize isPreviewPaused=_isPreviewPaused;
@property(readonly, nonatomic) NSString *filterString; // @synthesize filterString=_filterString;
@property(copy, nonatomic) NSDictionary *filteredTargets; // @synthesize filteredTargets=_filteredTargets;
@property(copy, nonatomic) NSArray *selectedActions; // @synthesize selectedActions=_selectedActions;
@property(nonatomic) __weak id <GTFActionEditorDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)nodeTrackView:(id)arg1 reverseActions:(id)arg2;
- (void)nodeTrackView:(id)arg1 duplicateActions:(id)arg2;
- (void)pasteActionsIntoNodeTrackView:(id)arg1;
- (BOOL)pasteActionsAvailableForNodeTrackView:(id)arg1;
- (void)nodeTrackView:(id)arg1 copyActions:(id)arg2;
- (void)trackOverviewView:(id)arg1 moveSelectedActionsFromNodeTrackView:(id)arg2 toNodeTrackView:(id)arg3 movingDown:(BOOL)arg4 selectActionsAfterMove:(BOOL)arg5;
- (void)actionLibraryForceLookupUpdate:(id)arg1;
- (id)timelineModelForActionLibrary:(id)arg1 forActionNamed:(id)arg2;
- (void)endChangeInTimelineModel:(id)arg1;
- (void)beginChangeInTimelineModel:(id)arg1;
- (void)checkTimelineModelsForUpdatedEndTimeWithAllowDownsize:(BOOL)arg1;
- (void)actionTimelineUpdateView:(id)arg1;
- (void)actionTimelineUpdateEditorWithEndTime:(id)arg1;
- (double)actionTimeLineGetEditorEndTime:(id)arg1;
- (id)actionTimeline:(id)arg1 lookupImageAssetPath:(id)arg2;
- (void)actionTimeline:(id)arg1 didRemoveAction:(id)arg2;
- (void)actionTimeline:(id)arg1 didAddAction:(id)arg2;
- (void)endCommandForNodeTrackView:(id)arg1;
- (void)beginCommandForNodeTrackView:(id)arg1;
- (void)createUndoEventForTimelines:(id)arg1;
- (int)nodeTrackView:(id)arg1 getClosestTrackWithoutInfiniteLoops:(int)arg2;
- (int)nodeTrackView:(id)arg1 getBottomTrackForGroup:(int)arg2;
- (int)nodeTrackView:(id)arg1 getTopTrackForGroup:(int)arg2;
- (int)nodeTrackView:(id)arg1 getGroupIndexThatContainsActions:(id)arg2;
- (BOOL)nodeTrackView:(id)arg1 doesAnyGroupContainAtLeastOneAction:(id)arg2;
- (int)nodeTrackView:(id)arg1 getGroupIndexForTrack:(int)arg2;
- (id)nodeTrackView:(id)arg1 getActionsForGroup:(int)arg2 inTrack:(int)arg3;
- (BOOL)nodeTrackView:(id)arg1 isActionInGroup:(id)arg2;
- (id)nodeTrackView:(id)arg1 getActionsForGroup:(int)arg2;
- (id)nodeTrackView:(id)arg1 getTracksForGroup:(int)arg2;
- (void)nodeTrackView:(id)arg1 setIterationTime:(double)arg2 forLoop:(int)arg3;
- (int)nodeTrackView:(id)arg1 getActionCountForGroup:(int)arg2;
- (void)nodeTrackView:(id)arg1 setDuration:(double)arg2 forGroup:(int)arg3;
- (void)nodeTrackView:(id)arg1 offsetStartTime:(double)arg2 forGroup:(int)arg3;
- (void)nodeTrackView:(id)arg1 setStartTime:(double)arg2 forGroup:(int)arg3;
- (double)nodeTrackView:(id)arg1 getDurationForGroup:(int)arg2;
- (double)nodeTrackView:(id)arg1 getStartTimeForGroup:(int)arg2;
- (double)nodeTrackView:(id)arg1 getIterationTimeForLoop:(int)arg2;
- (void)nodeTrackView:(id)arg1 setLoopCount:(int)arg2 forLoop:(int)arg3;
- (int)nodeTrackView:(id)arg1 getLoopCountForGroup:(int)arg2;
- (id)nodeTrackView:(id)arg1 getGroup:(int)arg2;
- (int)nodeTrackViewGetNumGroups:(id)arg1;
- (void)nodeTrackView:(id)arg1 destroyGroup:(int)arg2;
- (BOOL)nodeTrackView:(id)arg1 createGroupReferenceForActions:(id)arg2;
- (void)loopPopover:(id)arg1 didRemoveLoop:(id)arg2 fromTimelineModel:(id)arg3;
- (void)loopPopover:(id)arg1 willRemoveLoop:(id)arg2 fromTimelineModel:(id)arg3;
- (void)loopPopover:(id)arg1 didModifyLoop:(id)arg2 inTimelineModel:(id)arg3;
- (void)nodeTrackView:(id)arg1 showPopoverForLoop:(int)arg2 relativeToRect:(struct CGRect)arg3;
- (int)nodeTrackView:(id)arg1 createLoopForActions:(id)arg2 withLoopCount:(int)arg3;
- (void)incrementPreviewStartTime:(double)arg1 startPreview:(BOOL)arg2;
- (void)setNodeSelectorTimelineControlViewPositionForPreviewTime;
- (void)setActionPreviewStartTime:(double)arg1 startPreview:(BOOL)arg2;
- (void)didUpdatePreviewScene:(double)arg1;
- (BOOL)canLiveReloadScene;
- (void)didEndPlayingPreviewScene;
- (void)startPlayForTimelineControl;
- (void)willBeginPlayingPreviewScene;
- (void)actionRefPopover:(id)arg1 didPressGotoSourceForTimeline:(id)arg2;
- (void)nodeTrackView:(id)arg1 didDoubleClickAction:(id)arg2;
- (void)closeRefPopover;
- (void)nodeTrackView:(id)arg1 performedIdleSelectOnAction:(id)arg2;
- (void)resolveConversionTimelineModelWithName:(id)arg1 inFile:(id)arg2;
- (void)nodeTrackView:(id)arg1 convertToReference:(id)arg2;
- (BOOL)shouldCreateReferenceActionWithActions:(id)arg1;
- (void)actionModelDataDidChange:(id)arg1;
- (void)observeAllActions;
- (void)unobserveAllActions;
- (void)unobserveAllTimelineActions:(id)arg1;
- (void)observeAllTimelineActions:(id)arg1;
- (void)unobserveAction:(id)arg1;
- (void)observeAction:(id)arg1;
- (void)nodeTrackViewUpdateEditorEndTime:(id)arg1;
- (double)nodeTrackViewGetTimelineEndTime:(id)arg1;
- (double)nodeTrackView:(id)arg1 getTrackEndTime:(int)arg2;
- (void)nodeTrackView:(id)arg1 noteActionStartTimesAndDurationsForTrack:(int)arg2;
- (BOOL)nodeTrackView:(id)arg1 verifyCanMoveActions:(id)arg2 byTrackOffset:(int)arg3 ignoreEachOther:(BOOL)arg4;
- (void)nodeTrackView:(id)arg1 getSmallestTimeMarginForGroup:(int)arg2 outLeftMargin:(double *)arg3 outRightMargin:(double *)arg4;
- (void)nodeTrackView:(id)arg1 getSmallestTimeMarginForActions:(id)arg2 ignoreEachOther:(BOOL)arg3 outLeftMargin:(double *)arg4 outRightMargin:(double *)arg5;
- (void)nodeTrackView:(id)arg1 offsetTrack:(int)arg2 forActions:(id)arg3;
- (void)nodeTrackView:(id)arg1 offsetTime:(double)arg2 forActions:(id)arg3;
- (void)nodeTrackView:(id)arg1 updateActionPosition:(id)arg2 enableSnapping:(BOOL)arg3;
- (void)nodeTrackView:(id)arg1 updateActionPosition:(id)arg2;
- (void)nodeTrackView:(id)arg1 updateActionWidth:(id)arg2 enableSnapping:(BOOL)arg3;
- (void)nodeTrackView:(id)arg1 updateActionWidth:(id)arg2;
- (void)updateActionView:(id)arg1 fromModel:(id)arg2;
- (void)updateNodeTrackView:(id)arg1;
- (void)updateAllNodeTrackViews;
- (void)nodeTrackView:(id)arg1 setSelectedActionsFromViews:(id)arg2;
- (void)setupActionSelectionHandling;
- (void)actionCreatePopoverDidClose;
- (void)actionCreatePopoverCreateActionNamed:(id)arg1 forFile:(id)arg2;
- (void)actionCreatePopoverCreateActionNamed:(id)arg1 forFile:(id)arg2 createNewFile:(BOOL)arg3;
- (void)actionCreatePopoverCreateActionForSelectedTarget;
- (void)showAddActionPanel:(id)arg1;
- (void)showAddActionPanel:(id)arg1 withRect:(struct CGRect)arg2;
- (id)unarchiveActionModel:(id)arg1;
- (BOOL)nodeTrackViewIsLastInOverview:(id)arg1;
- (BOOL)nodeTrackViewIsPreviousTrackExpanded:(id)arg1;
- (void)nodeTrackViewDidChangeTrackCount:(id)arg1;
- (void)nodeTrackView:(id)arg1 finishedMovingActionView:(id)arg2;
- (void)nodeTrackView:(id)arg1 actionViewRemoved:(id)arg2;
- (void)nodeTrackView:(id)arg1 actionViewAdded:(id)arg2 withModel:(id)arg3;
- (void)resetCursorRectsInTrackOverviewForNodeTrackView:(id)arg1;
- (void)redrawTrackOverviewForNodeTrackView:(id)arg1 resetCursorRects:(BOOL)arg2;
- (struct CGRect)getVisibleRect;
- (void)refreshOverviewViewsToFilteredNodes;
- (id)getSCNActionForTarget:(id)arg1;
- (void)refreshFilteredNodeTrackViewsFromTargets:(id)arg1;
- (void)overviewController:(id)arg1 didUpdateFilterString:(id)arg2;
- (void)overviewController:(id)arg1 didSelectFilterCategoryName:(id)arg2;
- (void)updateFilterView;
- (void)updateFilteredTargetsObservers:(id)arg1;
- (void)updateFilteredTargets;
- (void)nodeOverview:(id)arg1 duplicateNodeTrack:(id)arg2;
- (void)nodeOverview:(id)arg1 removeNodeTrack:(id)arg2;
- (void)updatePreviewTimeForAllTimelines;
- (void)updateTargetTrack:(id)arg1;
- (void)createInitialActionsForNodeTrackView:(id)arg1 fromModel:(id)arg2;
- (id)createNodeTrackViewForTimelineModel:(id)arg1;
- (void)updateTimelineEndTime:(double)arg1;
- (void)actionsDidChangeInTimeline:(id)arg1;
- (void)didReplaceTimeline:(id)arg1 withTimeline:(id)arg2;
- (void)didRemoveTimeline:(id)arg1;
- (void)didAddTimeline:(id)arg1;
- (void)setupInitialNodeTrackViews;
- (void)openDocumentForReferenceName:(id)arg1;
- (void)releaseReferencedDocuments;
- (void)releaseReferencedDocument:(id)arg1;
- (id)loadAndRetainActionDocumentAtURL:(id)arg1;
- (void)fileSystemEventStream:(id)arg1 notedChangeAtPath:(id)arg2 scanRecursively:(BOOL)arg3;
- (void)registerFSEvents;
- (void)invalidateFSEvents;
- (void)addActionPressed:(id)arg1;
- (void)updateTimeScale:(id)arg1;
- (void)clearFilteredTargetsObservers;
- (void)primitiveInvalidate;
- (void)viewWillUninstall;
- (id)timelineModelForActionNamed:(id)arg1;
- (void)cacheReferencedActionsInDocument:(id)arg1;
- (void)reloadLookupForActionDocument:(id)arg1;
- (void)cacheNamedActionsInURL:(id)arg1;
- (void)setupReferenceActionLookup;
- (void)setupViewsAfterInstall;
- (void)setupModelsAfterInstall;
- (void)setupViewsBeforeInstall;
- (void)setupModelsBeforeInstall;
- (void)setupActionEditorViews;
- (void)viewDidInstall;
- (void)viewDidLoad;
@property(readonly, nonatomic) double timeScale;
@property(readonly, nonatomic) double previewStartTime;
@property(readonly, nonatomic) GTFActionLibrary *actionLibrary;
@property(readonly, nonatomic) GTFActionDocument *actionEditorDocument;
@property(readonly, nonatomic) BOOL isActionFileEditor;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GTFActionLibrary : NSObject
{
    NSMutableDictionary *_timelines;
    NSMutableDictionary *_fileTargets;
    id <GTFActionLibraryDelegate> _delegate;
    id <GTFActionLibraryUndoDelegate> _undoDelegate;
    id <GTFActionLibraryReferenceLookupSourceDelegate> _referenceLookupSource;
}

+ (id)libraryFromActionTable:(id)arg1;
+ (id)libraryFromFile:(id)arg1;
+ (id)libraryFromSCNScene:(id)arg1;
+ (id)libraryFromSKScene:(id)arg1;
+ (id)library;
+ (id)timelineModelForActionNamed:(id)arg1;
+ (id)URLForActionNamed:(id)arg1;
+ (id)allReferenceableActionNamesInFile:(id)arg1;
+ (id)allProjectReferenceableActionNames;
+ (id)allProjectActionFileURLs;
+ (BOOL)isURLForActionFile:(id)arg1;
@property(nonatomic) __weak id <GTFActionLibraryReferenceLookupSourceDelegate> referenceLookupSource; // @synthesize referenceLookupSource=_referenceLookupSource;
@property(nonatomic) __weak id <GTFActionLibraryUndoDelegate> undoDelegate; // @synthesize undoDelegate=_undoDelegate;
@property(nonatomic) __weak id <GTFActionLibraryDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (id)searchReferenceActionLibariesForActionNamed:(id)arg1;
- (BOOL)writeToFile:(id)arg1;
- (BOOL)writeToSKScene:(id)arg1;
- (id)generateActionTable;
- (id)fileTargetWithName:(id)arg1;
- (id)fileTargetForTargetID:(id)arg1;
@property(readonly, nonatomic) NSArray *fileTargets;
- (id)fileBasedTimelines;
- (void)undoEvent:(id)arg1;
- (void)createUndoEventForTimelines:(id)arg1;
- (BOOL)containsTimeline:(id)arg1;
- (BOOL)containsAction:(id)arg1;
- (void)removeFileTarget:(id)arg1;
- (void)addFileTarget:(id)arg1;
- (id)timelineForTargetID:(id)arg1;
- (id)timelineForTarget:(id)arg1;
- (void)replaceTimelineForTargetID:(id)arg1 withNewTimeline:(id)arg2;
- (void)removeTimelineForName:(id)arg1;
- (void)removeTimelineForTarget:(id)arg1;
- (void)addTimeline:(id)arg1 withName:(id)arg2;
- (void)addTimeline:(id)arg1 forTarget:(id)arg2;
@property(readonly, nonatomic) NSArray *timelines;
- (void)loadFromFile:(id)arg1;
- (void)loadFromSCNScene:(id)arg1;
- (void)loadFromNode:(id)arg1;
- (void)loadFromSKScene:(id)arg1;
- (id)initFromFile:(id)arg1;
- (id)initFromSCNScene:(id)arg1;
- (id)initFromSKScene:(id)arg1;
- (id)init;
- (id)initFromActionTable:(id)arg1;

@end

@interface GTFActionLibraryAsset : DVTLibraryAsset <NSCoding>
{
}

+ (id)assetWithAction:(id)arg1 title:(id)arg2 subtitle:(id)arg3 summary:(id)arg4 imageName:(id)arg5 bundleClass:(Class)arg6;
+ (id)assetWithAction:(id)arg1 title:(id)arg2 subTitle:(id)arg3 summary:(id)arg4 image:(id)arg5;
+ (id)assetWithAction:(id)arg1 title:(id)arg2 subTitle:(id)arg3 summary:(id)arg4 image:(id)arg5 withUDID:(id)arg6;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithAction:(id)arg1 title:(id)arg2 subTitle:(id)arg3 summary:(id)arg4 image:(id)arg5;
- (id)initWithAction:(id)arg1 title:(id)arg2 subTitle:(id)arg3 summary:(id)arg4 image:(id)arg5 withUDID:(id)arg6;

@end

@interface GTFActionLibraryController : IDELibraryController
{
    NSString *_currentCustomGroupIdentifier;
    NSString *_currentSKLibraryTitle;
    NSMutableArray *_cachedSKLibraryAssets;
    NSMutableArray *_cachedSKELibraryAssets;
    NSArray *_currentObjectsForActionLibrary;
}

+ (id)activeController;
- (void).cxx_destruct;
- (id)sceneKitActionAssets;
- (id)spriteKitNamedActionAssets;
- (id)spriteKitActionAssets;
- (BOOL)canRemoveAsset:(id)arg1;
- (BOOL)canEditAsset:(id)arg1;
- (void)populatePasteboard:(id)arg1 withAssets:(id)arg2;
- (BOOL)canCreateAssetsFromPasteboard:(id)arg1 targetingLibrarySourceIdentifier:(id *)arg2;
- (id)readableAssetPasteboardTypes;
@property(readonly, nonatomic) BOOL allowObjectLibrary;
- (void)libraryDidLoad;
- (void)refreshAssetsFromDocument:(id)arg1;
- (void)activeEditorDocumentDidChange:(id)arg1;
- (void)clearCurrentCustomGroupIdentifier;
- (void)populateObjectLibrary;
- (void)updateObjectsLibraryArrayForSKDocument:(id)arg1 forceUpdate:(BOOL)arg2;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

@end

@interface GTFActionLibraryFileTarget : NSObject <GTFActionLibraryTarget>
{
    GTFActionLibraryTargetThumbnail *_gtf_thumbnailImage;
    NSString *_name;
}

+ (id)fileTargetWithName:(id)arg1;
@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
@property(readonly, nonatomic) GTFActionLibraryTargetThumbnail *gtf_thumbnailImage; // @synthesize gtf_thumbnailImage=_gtf_thumbnailImage;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSString *gtf_name;
@property(readonly, nonatomic) id <NSCopying> gtf_uid;
- (id)initWithName:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GTFActionLibraryTargetThumbnail : NSObject <NSCoding>
{
    BOOL _isIcon;
    NSImage *_image;
}

+ (id)targetThumbnailWithImage:(id)arg1;
@property(nonatomic) BOOL isIcon; // @synthesize isIcon=_isIcon;
@property(retain, nonatomic) NSImage *image; // @synthesize image=_image;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithImage:(id)arg1;

@end

@interface GTFActionLoopPopoverController : DVTViewController <NSPopoverDelegate>
{
    BOOL _invalidateAfterClose;
    BOOL _hasInstalled;
    int _lastLoopCount;
    id <GTFActionLoopPopoverDelegate> _delegate;
    GTFActionModelGroupLoop *_loop;
    GTFActionTimelineModel *_timelineModel;
    NSPopover *_popover;
    NSButton *_infinityButton;
    NSButton *_minusButton;
    NSButton *_addButton;
    NSButton *_removeButton;
}

@property __weak NSButton *removeButton; // @synthesize removeButton=_removeButton;
@property __weak NSButton *addButton; // @synthesize addButton=_addButton;
@property __weak NSButton *minusButton; // @synthesize minusButton=_minusButton;
@property __weak NSButton *infinityButton; // @synthesize infinityButton=_infinityButton;
@property __weak NSPopover *popover; // @synthesize popover=_popover;
@property(retain, nonatomic) GTFActionTimelineModel *timelineModel; // @synthesize timelineModel=_timelineModel;
@property(retain, nonatomic) GTFActionModelGroupLoop *loop; // @synthesize loop=_loop;
@property(nonatomic) __weak id <GTFActionLoopPopoverDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)popoverDidClose:(id)arg1;
- (void)_removeFromSuperviewAndInvalidate;
- (void)closePopoverAndInvalidate;
- (void)buttonPressed:(id)arg1;
- (void)refreshButtonStates;
- (void)closePopover;
- (void)showPopoverRelativeToRect:(struct CGRect)arg1 ofView:(id)arg2 forLoop:(id)arg3 inTimelineModel:(id)arg4;
- (void)viewWillAppear;
- (void)viewDidInstall;
- (void)commonInit;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)initWithCoder:(id)arg1;
- (id)initUsingDefaultNib;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GTFActionMapper : NSObject
{
    NSMutableDictionary *_actionViewToActionModel;
    NSMutableDictionary *_actionModelToActionView;
    NSMutableSet *_actionViews;
    NSMutableDictionary *_nodeTrackViewToTimelineModel;
    struct MappingPair _cachedNodeTrackViewToTimelineModel;
    NSMutableDictionary *_timelineModelToNodeTrackView;
    struct MappingPair _cachedTimelineModelToNodeTrackView;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)clearCache;
- (id)nodeTrackViewFromTimelineModel:(id)arg1;
- (id)timelineModelFromNodeTrackView:(id)arg1;
- (void)removeAllMappings;
- (id)actionViewsFromActionModels:(id)arg1;
- (id)nodeTrackViewFromActionView:(id)arg1;
- (id)actionViewFromActionModel:(id)arg1;
- (id)actionModelsFromActionViews:(id)arg1;
- (id)actionModelFromActionView:(id)arg1;
- (void)removeTimelineModel:(id)arg1;
- (void)removeActionViewMappings:(id)arg1;
- (void)addMappingBetweenNodeTrackView:(id)arg1 andTimelineModel:(id)arg2;
- (void)addMappingFromActionView:(id)arg1 toNodeTrackView:(id)arg2;
- (void)addMappingBetweenActionView:(id)arg1 andActionModel:(id)arg2;
- (id)init;

@end

@interface GTFActionModel : NSObject <NSCoding, NSCopying, IDEKeyDrivenNavigableItemRepresentedObject>
{
    GTFActionModelGroup *_ownerGroup;
    int _track;
    int _groupId;
    double _startTime;
    double _duration;
    GTFActionTimelineModel *_ownerTimeline;
    double _notedStartTime;
    long long _timingMode;
    double _customData1;
    double _customData2;
    double _customData3;
    double _customData4;
    NSArray *_customStringArray1;
}

+ (id)actionWithSCNAction:(id)arg1;
+ (id)actionReferenceWithName:(id)arg1;
+ (id)actionAnimateWithTextures:(id)arg1 resize:(BOOL)arg2 restore:(BOOL)arg3;
+ (id)actionUnhide;
+ (id)actionHide;
+ (id)actionPlaySoundFileNamed:(id)arg1;
+ (id)actionFadeAlphaTo:(double)arg1;
+ (id)actionFadeIn;
+ (id)actionFadeOut;
+ (id)actionRotateToAngle:(double)arg1;
+ (id)actionRotateByAngle:(double)arg1;
+ (id)actionResizeByWidth:(double)arg1 height:(double)arg2;
+ (id)actionResizeToHeight:(double)arg1;
+ (id)actionResizeToWidth:(double)arg1;
+ (id)actionResizeToWidth:(double)arg1 height:(double)arg2;
+ (id)actionScaleTo:(double)arg1;
+ (id)actionScaleBy:(double)arg1;
+ (id)actionMoveToX:(double)arg1 y:(double)arg2;
+ (id)actionMoveByX:(double)arg1 y:(double)arg2;
+ (id)keyPathsForValuesAffectingInspectorCustomStringArray1;
+ (id)keyPathsForValuesAffectingInspectorCustomData4;
+ (id)keyPathsForValuesAffectingInspectorCustomData3;
+ (id)keyPathsForValuesAffectingInspectorCustomData2;
+ (id)keyPathsForValuesAffectingInspectorCustomData1;
+ (id)keyPathsForValuesAffectingInspectorTimingMode;
+ (id)keyPathsForValuesAffectingInspectorDuration;
+ (id)keyPathsForValuesAffectingInspectorStartTime;
@property(retain, nonatomic) NSArray *customStringArray1; // @synthesize customStringArray1=_customStringArray1;
@property(nonatomic) double customData4; // @synthesize customData4=_customData4;
@property(nonatomic) double customData3; // @synthesize customData3=_customData3;
@property(nonatomic) double customData2; // @synthesize customData2=_customData2;
@property(nonatomic) double customData1; // @synthesize customData1=_customData1;
@property(nonatomic) int groupId; // @synthesize groupId=_groupId;
@property(nonatomic) long long timingMode; // @synthesize timingMode=_timingMode;
@property(nonatomic) double notedStartTime; // @synthesize notedStartTime=_notedStartTime;
@property(nonatomic) __weak GTFActionTimelineModel *ownerTimeline; // @synthesize ownerTimeline=_ownerTimeline;
- (void).cxx_destruct;
- (void)reverse;
- (id)getSCNAction;
- (id)getSKAction;
@property(readonly, nonatomic) NSString *actionInfoString;
@property(readonly, nonatomic) NSColor *actionColor;
@property(readonly, nonatomic) NSString *actionName;
@property(readonly, nonatomic) long long actionType;
@property(readonly, nonatomic) NSArray *nav_children;
- (id)ideModelObjectTypeIdentifier;
@property(readonly) NSString *navigableItem_name;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
@property(readonly, nonatomic) BOOL canMove;
@property(readonly, nonatomic) BOOL isInGroup;
- (void)undoGroupRelativity;
- (void)adjustRelativity:(double)arg1;
- (void)makeRelativeForGroup;
- (void)setDuration:(double)arg1 verifyWithTimeline:(BOOL)arg2 enableSnapping:(BOOL)arg3;
- (void)setStartTime:(double)arg1 verifyWithTimeline:(BOOL)arg2 enableAllignment:(BOOL)arg3;
- (void)setTrack:(int)arg1 verifyWithTimeline:(BOOL)arg2;
- (void)removeFromGroup;
@property(nonatomic) __weak GTFActionModelGroup *ownerGroup;
@property(readonly, nonatomic) double relativeEndTime;
@property(readonly, nonatomic) double relativeStartTime;
@property(readonly, nonatomic) double endTime;
@property(nonatomic) double duration; // @synthesize duration=_duration;
@property(nonatomic) double startTime; // @synthesize startTime=_startTime;
@property(nonatomic) int track; // @synthesize track=_track;
- (id)init;
- (id)copyWithZone:(struct _NSZone *)arg1;
@property(retain, nonatomic) NSArray *inspectorCustomStringArray1;
@property(nonatomic) double inspectorCustomData4;
@property(nonatomic) double inspectorCustomData3;
@property(nonatomic) double inspectorCustomData2;
@property(nonatomic) double inspectorCustomData1;
@property(nonatomic) long long inspectorTimingMode;
@property(nonatomic) double inspectorDuration;
@property(nonatomic) double inspectorStartTime;
@property(nonatomic) double angleZ;
@property(nonatomic) double angleY;
@property(nonatomic) double angleX;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTDocumentLocation *navigableItem_contentDocumentLocation;
@property(readonly) DVTFileDataType *navigableItem_documentType;
@property(readonly) IDEFileReference *navigableItem_fileReference;
@property(readonly) NSString *navigableItem_groupIdentifier;
@property(readonly) NSImage *navigableItem_image;
@property(readonly) BOOL navigableItem_isLeaf;
@property(readonly) BOOL navigableItem_isMajorGroup;
@property(readonly) NSString *navigableItem_toolTip;
@property(readonly) Class superclass;

@end

@interface GTFActionModelGroup : NSObject <NSCoding>
{
    NSMutableArray *_tracks;
    struct map<int, NSMutableArray *, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, NSMutableArray *>>> _trackActions;
    double _startTime;
    double _duration;
    int _topTrack;
    int _bottomTrack;
    int _numActions;
    BOOL _actionsLocked;
    int _groupId;
    GTFActionTimelineModel *_ownerTimeline;
}

@property(nonatomic) BOOL actionsLocked; // @synthesize actionsLocked=_actionsLocked;
@property(nonatomic) int groupId; // @synthesize groupId=_groupId;
@property(nonatomic) __weak GTFActionTimelineModel *ownerTimeline; // @synthesize ownerTimeline=_ownerTimeline;
@property(readonly, nonatomic) NSArray *tracks; // @synthesize tracks=_tracks;
- (id).cxx_construct;
- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)_getSKActionForPreview:(BOOL)arg1 withStartTime:(double)arg2 activeAnimationFound:(char *)arg3 ignoreScrubSensitiveActions:(BOOL)arg4;
- (id)getPreviewSKActionWithStartTime:(double)arg1 activeAnimationFound:(char *)arg2 ignoreScrubSensitiveActions:(BOOL)arg3;
- (id)getSKAction;
- (id)getSCNAction;
- (id)getActions;
- (id)getActionsForTrack:(int)arg1;
- (BOOL)anyActionsInTrack:(int)arg1;
- (void)updateTrackIndexes;
- (void)update;
- (void)adjustStartTime:(double)arg1;
- (void)removeAllActions;
- (void)removeActions:(id)arg1;
- (void)removeAction:(id)arg1;
- (void)addActions:(id)arg1;
- (void)addAction:(id)arg1;
- (void)addActionToActionTrackMap:(id)arg1;
- (BOOL)isInTrack:(int)arg1;
- (BOOL)containsAction:(id)arg1;
- (void)offsetStartTime:(double)arg1;
- (void)setupGroup;
- (id)init;
- (void)findBottomTrack;
- (void)findTopTrack;
@property(readonly, nonatomic) int numActions;
@property(readonly, nonatomic) int bottomTrackIndex;
@property(readonly, nonatomic) int topTrackIndex;
@property(nonatomic) double endTime;
@property(nonatomic) double duration;
@property(nonatomic) double startTime;

@end

@interface GTFActionModelGroupLoop : GTFActionModelGroup
{
    double _finalIterationEndTime;
    int _loopCount;
}

+ (int)kLoopCountInfinite;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)_getSKActionForPreview:(BOOL)arg1 withStartTime:(double)arg2 activeAnimationFound:(char *)arg3 ignoreScrubSensitiveActions:(BOOL)arg4;
- (id)getPreviewSKActionWithStartTime:(double)arg1 activeAnimationFound:(char *)arg2 ignoreScrubSensitiveActions:(BOOL)arg3;
- (id)getSKAction;
- (id)getSCNAction;
- (void)update;
- (void)setupLoop;
- (id)init;
@property(nonatomic) int loopCount; // @synthesize loopCount=_loopCount;
@property(readonly, nonatomic) double finalIterationEndTime;
@property(readonly, nonatomic) double firstIterationEndTime;
@property(readonly, nonatomic) double firstIterationStartTime;
@property(readonly, nonatomic) double iterationTime;

@end

@interface GTFActionModelGroupReference : GTFActionModelGroup
{
}

@end

@interface GTFActionStackView : NSView
{
    BOOL _framesDirty;
    double _trackEndY;
    BOOL _isSuperviewOfNodeTrackViews;
    NSMutableArray *_nodeTrackViews;
    struct CGSize _size;
}

@property(nonatomic) struct CGSize size; // @synthesize size=_size;
@property(nonatomic) BOOL isSuperviewOfNodeTrackViews; // @synthesize isSuperviewOfNodeTrackViews=_isSuperviewOfNodeTrackViews;
@property(readonly, nonatomic) NSMutableArray *nodeTrackViews; // @synthesize nodeTrackViews=_nodeTrackViews;
- (void).cxx_destruct;
- (void)redrawAllTrackViewsWithDirtyRect:(struct CGRect)arg1;
- (void)redrawAllTrackViews;
- (void)adjustHeight;
- (void)readjustNodeTrackFrames;
- (BOOL)isFlipped;
- (void)viewWillDraw;
- (void)markDirty;
- (void)removeAllNodeTracks;
- (void)removeNodeTrackFromStack:(id)arg1;
- (void)addNodeTrackToEndOfStack:(id)arg1;
- (struct CGSize)intrinsicContentSize;
- (id)initWithCoder:(id)arg1;

@end

@interface GTFActionNodeOverviewView : GTFActionStackView
{
    struct CGRect _currentDisclosureRect;
    GTFActionNodeTrackView *_currentTrackView;
    NSMenu *_rightClickContextMenu;
    GTFActionNodeTrackView *_currentDeleteTrackView;
    NSMutableArray *_disclosureButtons;
    NSImage *_firstImage;
    NSImage *_secondImage;
    id <GTFActionNodeOverviewDelegate> _delegate;
}

@property(nonatomic) __weak id <GTFActionNodeOverviewDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)userToggledDisclosureState:(id)arg1;
- (void)duplicateNodeTrack:(id)arg1;
- (void)findAndDeleteNodeTrack:(id)arg1;
- (void)rightMouseDown:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (void)mouseUp:(id)arg1;
- (void)mouseDown:(id)arg1;
- (BOOL)isPreviousTrackExpanded:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (BOOL)isOpaque;
- (void)readjustNodeTrackFrames;
- (void)removeAllDisclosureButtons;
- (id)addDisclosureButton;
- (void)adjustWidth;
- (void)awakeFromNib;
- (id)initWithCoder:(id)arg1;

@end

@interface GTFActionNodeTrackView : NSView <NSDraggingDestination, NSTextFieldDelegate, GTFActionTimelineInfoDelegate, GTFActionTimelineGroupInfoDelegate>
{
    NSMutableArray *_actions;
    NSMutableArray *_tracks;
    NSTrackingArea *_trackingArea;
    GTFActionTrackView *_selectedTrack;
    NSMutableArray *_selectedActions;
    GTFActionView *_clickedAction;
    GTFActionView *_dragAction;
    GTFActionModel *_dragActionModel;
    GTFActionView *_startShiftSelectAction;
    GTFActionView *_lastMouseOverAction;
    double _lastMouseX;
    double _lastMouseY;
    double _selectX;
    double _selectY;
    double _dragOffsetX;
    double _dragOffsetY;
    double _resizeDistFromEnd;
    double _totalDuration;
    double _trackEndTime;
    NSColor *_trackLightColor;
    NSColor *_trackDarkColor;
    NSColor *_trackSelectedLightColor;
    NSColor *_trackSelectedDarkColor;
    struct CGPoint _groupControlPosition;
    struct CGRect _currentGroupControlRect;
    int _currentGroup;
    int _mouseOverGroup;
    int _editLoop;
    int _numTracks;
    int _mouseAction;
    int _groupControlType;
    NSMenu *_rightClickContextMenu;
    GTFActionView *_idleSelectAction;
    BOOL _showGroupControl;
    BOOL _isExpanded;
    BOOL _shiftSelected;
    BOOL _needCursorReset;
    BOOL _wasExpandedWhenDragEntered;
    BOOL _isOverviewTimeline;
    BOOL _isThumbnailIcon;
    double _timeScale;
    double _playbackSpeed;
    NSTextField *_timeLabel;
    NSImage *_thumbnailImage;
    NSString *_targetName;
    id <NSCopying> _targetID;
    id <GTFActionNodeTrackViewDelegate> _timelineViewDelegate;
}

+ (BOOL)enableNodeOverviewOverdraw;
+ (double)defaultHorizontalPixelOffset;
+ (double)actionTrackHeight;
+ (double)actionBoxHeight;
+ (double)loopTabHeight;
+ (double)durationBarHeight;
+ (double)actionTimelineHeight;
+ (double)actionNodeOverviewWidth;
+ (double)defaultTimelineWidth;
+ (double)defaultTimelineWidthInSeconds;
+ (double)defaultPixelsPerSecond;
@property(readonly, nonatomic) NSArray *actions; // @synthesize actions=_actions;
@property(nonatomic) __weak id <GTFActionNodeTrackViewDelegate> timelineViewDelegate; // @synthesize timelineViewDelegate=_timelineViewDelegate;
@property(retain, nonatomic) id <NSCopying> targetID; // @synthesize targetID=_targetID;
@property(retain, nonatomic) NSString *targetName; // @synthesize targetName=_targetName;
@property(nonatomic) BOOL isThumbnailIcon; // @synthesize isThumbnailIcon=_isThumbnailIcon;
@property(retain, nonatomic) NSImage *thumbnailImage; // @synthesize thumbnailImage=_thumbnailImage;
@property(nonatomic) BOOL isOverviewTimeline; // @synthesize isOverviewTimeline=_isOverviewTimeline;
@property(retain, nonatomic) NSTextField *timeLabel; // @synthesize timeLabel=_timeLabel;
@property(readonly, nonatomic) NSArray *selectedActions; // @synthesize selectedActions=_selectedActions;
- (void).cxx_destruct;
- (void)startDragForSelectedActions:(id)arg1 atPosition:(struct CGPoint)arg2;
- (void)endDrag;
- (BOOL)isDraggingNonGroupActions;
- (void)showLoopPopoverForSelectedActions:(id)arg1;
- (void)createLoopFromSelectedActions:(id)arg1;
- (void)convertToReference:(id)arg1;
- (void)reverse:(id)arg1;
- (void)duplicate:(id)arg1;
- (void)paste:(id)arg1;
- (void)copy:(id)arg1;
- (void)cut:(id)arg1;
- (void)delete:(id)arg1;
- (void)setEditLoop:(int)arg1;
- (BOOL)shouldCreateReferenceActionWithSelectedActions;
- (BOOL)pasteActionsAvailable;
- (struct CGRect)calcLoopIterationRect:(int)arg1;
- (struct CGRect)calcLoopControlRect:(int)arg1;
- (struct CGRect)calcGroupRect:(int)arg1;
- (void)calculateGroupControlPosition;
- (int)getLoopIndexAtPoint:(struct CGPoint)arg1;
- (int)getLoopIndexForSelectedActions;
- (BOOL)isTrackLastInOverview:(int)arg1;
- (BOOL)shouldShowGroupControl;
- (BOOL)checkTrackAdjacencyForActions:(id)arg1;
- (BOOL)isTrackSelected:(int)arg1;
- (void)deselectTrack:(int)arg1;
- (void)deleteSelectedActionViews;
- (void)deleteActionView:(id)arg1;
- (void)clearActionViews;
- (id)createActionView;
- (void)updateTrackingAreas;
- (void)calcCursorRectsForView:(id)arg1 withVisibleRect:(struct CGRect)arg2;
- (void)trackHeightChanged:(int)arg1;
- (BOOL)shouldShowGroupTopForTrack:(int)arg1;
- (int)getGroupIndexForTrack:(int)arg1;
- (id)getActionsForGroup:(int)arg1 inTrack:(int)arg2;
- (id)getActionsForGroup:(int)arg1;
- (id)getTracksForGroup:(int)arg1;
- (double)getStartTimeForGroup:(int)arg1;
- (double)getIterationTimeForLoop:(int)arg1;
- (int)getLoopCountForGroup:(int)arg1;
- (int)getNumGroups;
- (id)getTrackActionViews:(int)arg1;
- (int)getNumTracks;
- (double)getTimeForXCoord:(double)arg1;
- (double)getTrackEndTime:(int)arg1;
- (double)getTimelineOffset;
- (double)getTimeScale;
- (double)getMinXCoordForAction;
- (double)getActionYCoordinateForTrack:(int)arg1;
- (int)getTrackFromYCoordinate:(double)arg1;
- (int)getTrackFromPoint:(struct CGPoint)arg1;
- (int)getClosestTrackFromPoint:(struct CGPoint)arg1;
- (BOOL)dragFinished:(id)arg1;
- (void)dragExited:(id)arg1;
- (unsigned long long)dragUpdated:(id)arg1 atPosition:(struct CGPoint)arg2;
- (unsigned long long)dragEntered:(id)arg1 atPosition:(struct CGPoint)arg2;
- (void)syncSelectedViewsWithDocumentViewController;
- (void)clearSelectedActionsWithSupressedSync:(BOOL)arg1;
- (void)clearSelectedActions;
- (void)selectActions:(id)arg1 supressSync:(BOOL)arg2;
- (void)selectAction:(id)arg1 supressSync:(BOOL)arg2;
- (void)selectAction:(id)arg1;
- (void)deselectAction:(id)arg1;
- (BOOL)selectedActionsInTrack:(int)arg1;
- (id)getSelectedActionViewAtPoint:(struct CGPoint)arg1;
- (id)getSelectedActionView;
- (void)moveRight:(id)arg1;
- (void)moveLeft:(id)arg1;
- (void)keyUp:(id)arg1;
- (void)keyDown:(id)arg1;
- (void)handleMouseUp:(id)arg1 mousePosition:(struct CGPoint)arg2;
- (void)handleMouseDragged:(id)arg1 mousePosition:(struct CGPoint)arg2;
- (void)handleMouseDown:(id)arg1 mousePosition:(struct CGPoint)arg2;
- (void)handleMouseMoved:(id)arg1 mousePosition:(struct CGPoint)arg2;
- (BOOL)acceptsFirstResponder;
- (void)updateFromModel:(id)arg1;
- (void)updateViewSize:(BOOL)arg1;
- (void)calcViewFrame;
- (struct CGRect)getTrackFrame:(int)arg1;
- (void)expandView;
- (void)drawRect:(struct CGRect)arg1;
- (void)drawAtPoint:(struct CGPoint)arg1 dirtyRect:(struct CGRect)arg2;
- (BOOL)isFlipped;
- (id)initFromModel:(id)arg1 nodeTrackViewDelegate:(id)arg2 isOverviewTimeline:(BOOL)arg3 trackEndTime:(double)arg4;
@property(nonatomic) double playbackSpeed; // @synthesize playbackSpeed=_playbackSpeed;
@property(nonatomic) double trackEndTime;
@property(nonatomic) double timeScale; // @synthesize timeScale=_timeScale;
- (void)redrawWithDirtyRect:(struct CGRect)arg1;
- (void)redrawWithDirtyRect:(struct CGRect)arg1 resetCursorRects:(BOOL)arg2;
- (void)redraw;
- (void)redrawInRect:(struct CGRect)arg1;
@property(nonatomic) BOOL isExpanded;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GTFActionOverviewViewController : NSViewController <NSSplitViewDelegate>
{
    DVTObservingToken *_contentSizeObserver;
    struct CGRect _lastTrackOverviewVisibleRect;
    NSDate *_lastFilterDate;
    NSString *_filterString;
    BOOL _filterCallbackIsPending;
    BOOL _inFilterMethod;
    id <GTFActionOverviewViewControllerDelegate> _delegate;
    GTFActionSplitView *_actionSplitView;
    GTFActionScrollView *_actionTimelineScrollView;
    GTFActionBorderedView *_actionNodeSelectorView;
    GTFActionTimelineView *_actionTimelineView;
    NSView *_actionNodeSelectorTimelineTabSubview;
    GTFActionTimelineControlView *_actionNodeSelectorTimelineControlView;
    NSPopUpButton *_actionNodeSelector;
    GTFActionScrollView *_actionNodeOverviewScrollView;
    GTFActionNodeOverviewView *_actionNodeOverviewView;
    GTFActionScrollView *_actionTrackOverviewScrollView;
    GTFActionTrackOverviewView *_actionTrackOverviewView;
    GTFActionBorderedView *_actionControlBarBorderView;
    GTFActionBorderedView *_actionNodeOverviewBottomBar;
    DVTSearchField *_actionNodesFilterField;
    NSSlider *_actionTimeScaleSlider;
    DVTGradientImageButton *_addActionButton;
}

@property __weak DVTGradientImageButton *addActionButton; // @synthesize addActionButton=_addActionButton;
@property __weak NSSlider *actionTimeScaleSlider; // @synthesize actionTimeScaleSlider=_actionTimeScaleSlider;
@property __weak DVTSearchField *actionNodesFilterField; // @synthesize actionNodesFilterField=_actionNodesFilterField;
@property __weak GTFActionBorderedView *actionNodeOverviewBottomBar; // @synthesize actionNodeOverviewBottomBar=_actionNodeOverviewBottomBar;
@property __weak GTFActionBorderedView *actionControlBarBorderView; // @synthesize actionControlBarBorderView=_actionControlBarBorderView;
@property(retain) GTFActionTrackOverviewView *actionTrackOverviewView; // @synthesize actionTrackOverviewView=_actionTrackOverviewView;
@property __weak GTFActionScrollView *actionTrackOverviewScrollView; // @synthesize actionTrackOverviewScrollView=_actionTrackOverviewScrollView;
@property __weak GTFActionNodeOverviewView *actionNodeOverviewView; // @synthesize actionNodeOverviewView=_actionNodeOverviewView;
@property __weak GTFActionScrollView *actionNodeOverviewScrollView; // @synthesize actionNodeOverviewScrollView=_actionNodeOverviewScrollView;
@property __weak NSPopUpButton *actionNodeSelector; // @synthesize actionNodeSelector=_actionNodeSelector;
@property __weak GTFActionTimelineControlView *actionNodeSelectorTimelineControlView; // @synthesize actionNodeSelectorTimelineControlView=_actionNodeSelectorTimelineControlView;
@property __weak NSView *actionNodeSelectorTimelineTabSubview; // @synthesize actionNodeSelectorTimelineTabSubview=_actionNodeSelectorTimelineTabSubview;
@property __weak GTFActionTimelineView *actionTimelineView; // @synthesize actionTimelineView=_actionTimelineView;
@property __weak GTFActionBorderedView *actionNodeSelectorView; // @synthesize actionNodeSelectorView=_actionNodeSelectorView;
@property __weak GTFActionScrollView *actionTimelineScrollView; // @synthesize actionTimelineScrollView=_actionTimelineScrollView;
@property __weak GTFActionSplitView *actionSplitView; // @synthesize actionSplitView=_actionSplitView;
@property(nonatomic) __weak id <GTFActionOverviewViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (BOOL)splitView:(id)arg1 canCollapseSubview:(id)arg2;
- (double)splitView:(id)arg1 constrainSplitPosition:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(id)arg1 constrainMinCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(id)arg1 constrainMaxCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (void)synchronizeScrollView:(id)arg1 fromScrollView:(id)arg2 syncHoriz:(BOOL)arg3 syncVert:(BOOL)arg4;
- (void)handleScrollSynchronization:(id)arg1;
- (void)removeScrollSynchronization;
- (void)setupScrollSynchronization;
- (void)filterNodesFromFilterField:(id)arg1;
- (void)cancelFiltering;
- (void)reallyFilter:(id)arg1;
- (void)clearFilterString;
- (void)beginFilteringWithString:(id)arg1;
- (void)setFilterString:(id)arg1;
- (void)didChangeFilterCategory:(id)arg1;
- (id)filterCategoryName;
- (void)handleActionNodeOverviewPaneResize:(id)arg1;
- (void)handleActionEditorResize:(id)arg1;
- (void)viewWillDisappear;
- (void)viewWillAppear;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GTFActionRefPopoverView : NSView
{
    NSMutableParagraphStyle *_paragraphStyle;
    NSImage *_infiniteImage;
    GTFActionTimelineModel *_referenceAction;
    struct CGSize _size;
}

@property(nonatomic) struct CGSize size; // @synthesize size=_size;
@property(nonatomic) __weak GTFActionTimelineModel *referenceAction; // @synthesize referenceAction=_referenceAction;
- (void).cxx_destruct;
- (struct CGSize)intrinsicContentSize;
- (void)createCGRoundedRect:(struct CGRect)arg1 radius:(double)arg2 context:(struct CGContext *)arg3;
- (void)drawRect:(struct CGRect)arg1;
- (BOOL)isFlipped;
- (void)awakeFromNib;

@end

@interface GTFActionRefPreviewPopoverController : DVTViewController <NSPopoverDelegate>
{
    GTFActionTimelineModel *_referenceAction;
    BOOL _invalidateAfterClose;
    BOOL _hasInstalled;
    id <GTFActionRefPopoverDelegate> _delegate;
    NSPopover *_popover;
    DVTStackView_AppKitAutolayout *_stackView;
    GTFActionRefPopoverView *_actionPreviewView;
    NSView *_actionSourceView;
}

@property(retain) NSView *actionSourceView; // @synthesize actionSourceView=_actionSourceView;
@property(retain) GTFActionRefPopoverView *actionPreviewView; // @synthesize actionPreviewView=_actionPreviewView;
@property(retain) DVTStackView_AppKitAutolayout *stackView; // @synthesize stackView=_stackView;
@property __weak NSPopover *popover; // @synthesize popover=_popover;
@property(nonatomic) __weak id <GTFActionRefPopoverDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)popoverDidClose:(id)arg1;
- (void)_removeFromSuperviewAndInvalidate;
- (void)closePopoverAndInvalidate;
- (void)handlePressSource:(id)arg1;
- (void)showPopoverRelativeToRect:(struct CGRect)arg1 ofView:(id)arg2 forReferenceModel:(id)arg3;
- (void)viewDidInstall;
- (void)commonInit;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)initWithCoder:(id)arg1;
- (id)initUsingDefaultNib;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GTFActionScrollView : NSScrollView
{
}

- (void)scrollWheel:(id)arg1;

@end

@interface GTFActionSplitView : DVTSplitView
{
}

- (void)scrollWheel:(id)arg1;

@end

@interface GTFActionTimelineControlView : NSView
{
    BOOL _showTab;
    BOOL _showNeedle;
    int _track;
    NSColor *_needleColor;
    double _tabHeight;
    double _tabOffsetFromTop;
    double _currentX;
}

@property(nonatomic) double currentX; // @synthesize currentX=_currentX;
@property(nonatomic) int track; // @synthesize track=_track;
@property(nonatomic) BOOL showNeedle; // @synthesize showNeedle=_showNeedle;
@property(nonatomic) BOOL showTab; // @synthesize showTab=_showTab;
@property(nonatomic) double tabOffsetFromTop; // @synthesize tabOffsetFromTop=_tabOffsetFromTop;
@property(nonatomic) double tabHeight; // @synthesize tabHeight=_tabHeight;
@property(retain, nonatomic) NSColor *needleColor; // @synthesize needleColor=_needleColor;
- (void).cxx_destruct;
- (BOOL)isAnimating;
- (void)startAnimation:(double)arg1 playbackSpeed:(double)arg2;
- (void)drawRect:(struct CGRect)arg1;
- (void)awakeFromNib;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface GTFActionTimelineModel : NSObject <NSCoding, NSCopying, IDEKeyDrivenNavigableItemRepresentedObject>
{
    NSMutableArray *_actions;
    NSMutableArray *_tracks;
    NSMutableArray *_groups;
    int _nextGroupId;
    BOOL _allowActionDisplacement;
    BOOL _allowStickyDurationChanges;
    BOOL _allowReturnToNotedStartTime;
    double _totalDuration;
    double _durationScale;
    double _startTime;
    id <NSCopying> _targetID;
    GTFActionLibraryTargetThumbnail *_targetThumbnail;
    id <GTFActionTimelineModelDelegate> _delegate;
    GTFActionLibrary *_ownerLibrary;
    long long _numTracks;
    double _previewTime;
    NSString *_keyName;
    NSString *_targetName;
}

+ (id)keyPathsForValuesAffectingNav_children;
@property(readonly, nonatomic) NSString *targetName; // @synthesize targetName=_targetName;
@property(retain, nonatomic) NSString *keyName; // @synthesize keyName=_keyName;
@property(nonatomic) BOOL allowReturnToNotedStartTime; // @synthesize allowReturnToNotedStartTime=_allowReturnToNotedStartTime;
@property(nonatomic) BOOL allowStickyDurationChanges; // @synthesize allowStickyDurationChanges=_allowStickyDurationChanges;
@property(nonatomic) BOOL allowActionDisplacement; // @synthesize allowActionDisplacement=_allowActionDisplacement;
@property(nonatomic) double previewTime; // @synthesize previewTime=_previewTime;
@property(nonatomic) long long numTracks; // @synthesize numTracks=_numTracks;
@property(nonatomic) __weak GTFActionLibrary *ownerLibrary; // @synthesize ownerLibrary=_ownerLibrary;
@property(nonatomic) __weak id <GTFActionTimelineModelDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) GTFActionLibraryTargetThumbnail *targetThumbnail; // @synthesize targetThumbnail=_targetThumbnail;
@property(readonly, nonatomic) id <NSCopying> targetID; // @synthesize targetID=_targetID;
- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
@property(readonly, nonatomic) NSArray *nav_children;
- (id)ideModelObjectTypeIdentifier;
@property(readonly) NSString *navigableItem_name;
- (id)lookupImageAssetPathForAssetName:(id)arg1;
- (BOOL)isInfiniteLoopInTrack:(int)arg1;
- (void)removeGroup:(id)arg1;
- (id)getGroupForTrack:(int)arg1;
- (int)getGroupIndex:(id)arg1;
- (id)getGroupWithId:(int)arg1;
- (id)getGroupWithIndex:(int)arg1;
- (id)getGroupThatContainsAction:(id)arg1;
- (id)createGroupReferenceFromActions:(id)arg1;
- (id)createLoopFromActions:(id)arg1 withLoopCount:(int)arg2;
- (id)createLoopWithLoopCount:(int)arg1;
- (void)updateEditorWithEndTime;
- (void)calculateStartTime;
- (double)getDurationExcludingInfiniteLoops;
- (void)calculateTotalDuration;
- (double)calculateTotalDurationIncludingInfiniteLoops:(BOOL)arg1;
- (void)calculateTotalDurationAndStartTime;
- (void)scaleTimelineDuration:(double)arg1;
- (long long)getFirstEmptyTrackIndex;
- (double)getTrackEndTime:(int)arg1;
- (void)requestViewUpdate;
- (void)endChange;
- (void)beginChange;
- (id)getSKActionForPreview:(BOOL)arg1 withPreviewStartTime:(double)arg2 activeAnimationFound:(char *)arg3 effectiveDuration:(double)arg4 ignoreScrubSensitiveActions:(BOOL)arg5;
- (id)getPreviewSKActionWithStartTime:(double)arg1;
- (id)getSKAction;
- (id)getSCNAction;
- (BOOL)setDurationForAction:(id)arg1 newDuration:(double)arg2 enableSnapping:(BOOL)arg3;
- (void)setDurationForActionWithoutDisplacement:(id)arg1 newDuration:(double)arg2;
- (double)getClosestStartOrEndTimeInTrack:(int)arg1 forTime:(double)arg2 withDuration:(double)arg3;
- (void)noteCurrentStartTimesInTrack:(int)arg1;
- (BOOL)verifyCanMoveActions:(id)arg1 byTrackOffset:(int)arg2 ignoreEachOther:(BOOL)arg3;
- (void)getSmallestTimeMarginForGroup:(int)arg1 outLeftMargin:(double *)arg2 outRightMargin:(double *)arg3;
- (void)getSmallestTimeMarginForActions:(id)arg1 ignoreEachOther:(BOOL)arg2 outLeftMargin:(double *)arg3 outRightMargin:(double *)arg4;
- (double)moveGroup:(id)arg1 withTimeOffset:(double)arg2;
- (void)offsetTrack:(int)arg1 forActions:(id)arg2;
- (void)offsetTime:(double)arg1 forActions:(id)arg2;
- (void)checkForOverlapWithLoop:(id)arg1;
- (void)insertNewTrackAt:(long long)arg1;
- (BOOL)adjustNumberOfTracks;
- (BOOL)canMoveAction:(id)arg1 toTrack:(int)arg2 atTime:(double)arg3;
- (void)addActionToClosestOpenSlot:(id)arg1 inTrack:(int)arg2 atTime:(double)arg3 enableAllignment:(BOOL)arg4 canMoveBeforeStartTime:(BOOL)arg5;
- (void)setActionStartTime:(id)arg1 inTrack:(int)arg2 atTime:(double)arg3 enableSnap:(BOOL)arg4;
- (void)forceMoveAction:(id)arg1 toTrack:(int)arg2;
- (BOOL)moveAction:(id)arg1 toTrack:(int)arg2 atTime:(double)arg3 enableAllignment:(BOOL)arg4;
- (void)removeActionFromTrack:(id)arg1;
- (BOOL)removeAction:(id)arg1;
- (void)pasteActions:(id)arg1 insertRequiredTracks:(BOOL)arg2 adjustTracksAfterPaste:(BOOL)arg3;
- (void)pasteActions:(id)arg1 insertRequiredTracks:(BOOL)arg2;
- (void)pasteActions:(id)arg1;
- (void)pasteAction:(id)arg1 adjustTracksAfterPaste:(BOOL)arg2;
- (void)pasteAction:(id)arg1;
- (void)addAction:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;
- (void)setTarget:(id)arg1;
@property(nonatomic) double startTime; // @synthesize startTime=_startTime;
@property(nonatomic) double durationScale; // @synthesize durationScale=_durationScale;
@property(nonatomic) double totalDuration; // @synthesize totalDuration=_totalDuration;
@property(readonly, nonatomic) BOOL hasActions;
@property(readonly, nonatomic) NSArray *groups;
@property(readonly, nonatomic) NSArray *tracks;
@property(readonly, nonatomic) NSArray *actions;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTDocumentLocation *navigableItem_contentDocumentLocation;
@property(readonly) DVTFileDataType *navigableItem_documentType;
@property(readonly) IDEFileReference *navigableItem_fileReference;
@property(readonly) NSString *navigableItem_groupIdentifier;
@property(readonly) NSImage *navigableItem_image;
@property(readonly) BOOL navigableItem_isLeaf;
@property(readonly) BOOL navigableItem_isMajorGroup;
@property(readonly) NSString *navigableItem_toolTip;
@property(readonly) Class superclass;

@end

@interface GTFActionTimelineView : DVTBorderedView
{
    NSColor *_separatorColor;
    NSColor *_tickerColor;
    NSColor *_textColor;
    NSDictionary *_textAttributes;
    NSFont *_textFont;
    GTFActionTimelineControlView *_timelineControl;
    float _timeScale;
    id <GTFActionTimelineViewDelegate> _delegate;
    struct CGSize _size;
}

@property(nonatomic) __weak id <GTFActionTimelineViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) struct CGSize size; // @synthesize size=_size;
- (void).cxx_destruct;
- (void)setPlayForTimelineControl:(double)arg1;
- (void)updatePreviewTime:(double)arg1;
- (void)moveRight:(id)arg1;
- (void)moveLeft:(id)arg1;
- (void)keyDown:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)calculatePreviewTime:(double)arg1;
- (BOOL)acceptsFirstResponder;
- (void)drawRect:(struct CGRect)arg1;
- (BOOL)isOpaque;
- (struct CGSize)intrinsicContentSize;
- (void)updateTimeScaleTo:(float)arg1;
- (void)awakeFromNib;

@end

@interface GTFActionTrackOverviewView : GTFActionStackView
{
    GTFActionTimelineControlView *_timelineControl;
    GTFActionNodeTrackView *_mouseInteractionView;
    NSMenu *_rightClickContextMenu;
    float _timeScale;
    double _trackEndTime;
    double _previewTime;
    BOOL _mouseDown;
    BOOL _lastViewWasCollapsed;
    BOOL _needCursorReset;
    id <GTFActionTrackOverviewDelegate> _delegate;
}

@property(nonatomic) __weak id <GTFActionTrackOverviewDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)resetCursorRects;
- (void)setResetCursorRects;
- (void)redrawAllTrackViews;
- (void)rightMouseDown:(id)arg1;
- (void)showLoopPopoverForSelectedActions:(id)arg1;
- (void)createLoopFromSelectedActions:(id)arg1;
- (void)convertToReference:(id)arg1;
- (void)reverse:(id)arg1;
- (void)duplicate:(id)arg1;
- (void)paste:(id)arg1;
- (void)copy:(id)arg1;
- (void)cut:(id)arg1;
- (void)delete:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (void)keyUp:(id)arg1;
- (void)keyDown:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (void)draggingExited:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (id)draggedImageState:(id)arg1;
- (void)mouseUp:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)mouseMoved:(id)arg1;
- (BOOL)acceptsFirstResponder;
- (void)removeAllNodeTracks;
- (void)removeNodeTrackFromStack:(id)arg1;
- (void)redrawNodeTrackView:(id)arg1 resetCursorRects:(BOOL)arg2;
- (BOOL)nodeTrackViewFinalInOverview:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)viewWillDraw;
- (BOOL)isOpaque;
- (void)setPlayForTimelineControl:(double)arg1;
- (void)updatePreviewTime:(double)arg1;
- (void)updateTimeScaleTo:(float)arg1;
- (void)updateSize;
- (void)addNodeTrackToEndOfStack:(id)arg1;
- (void)awakeFromNib;
- (id)initWithCoder:(id)arg1;
@property(nonatomic) double trackEndTime;

@end

@interface GTFActionTrackView : NSView
{
    NSColor *_tickMarkColor;
    BOOL _isTopOfLoop;
    BOOL _selected;
    int _trackNumber;
    id <GTFActionTimelineInfoDelegate> _timelineInfoDelegate;
    id <GTFActionTimelineGroupInfoDelegate> _timelineGroupInfoDelegate;
    struct CGRect _loopControlRect;
}

@property(readonly, nonatomic) struct CGRect loopControlRect; // @synthesize loopControlRect=_loopControlRect;
@property(nonatomic) BOOL selected; // @synthesize selected=_selected;
@property(nonatomic) int trackNumber; // @synthesize trackNumber=_trackNumber;
@property(nonatomic) __weak id <GTFActionTimelineGroupInfoDelegate> timelineGroupInfoDelegate; // @synthesize timelineGroupInfoDelegate=_timelineGroupInfoDelegate;
@property(nonatomic) __weak id <GTFActionTimelineInfoDelegate> timelineInfoDelegate; // @synthesize timelineInfoDelegate=_timelineInfoDelegate;
- (void).cxx_destruct;
- (void)drawRect:(struct CGRect)arg1;
- (BOOL)isOpaque;
- (void)drawAtPoint:(struct CGPoint)arg1 withDirtyRect:(struct CGRect)arg2;
- (void)draw:(struct CGRect)arg1;
- (double)calculateHeight;
- (id)initWithTrackNumber:(int)arg1 defaultWidth:(double)arg2 defaultHeight:(double)arg3 timelineInfoDelegate:(id)arg4 timelineGroupInfoDelegate:(id)arg5;
@property(readonly, nonatomic) double actionPositionY;

@end

@interface GTFActionUnarchiver : NSKeyedUnarchiver
{
    struct stack<NSMutableArray *, std::__1::deque<NSMutableArray *, std::__1::allocator<NSMutableArray *>>> _actionDataGrouping;
    NSMutableArray *_actionData;
    BOOL _lastGroupWasArray;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (id)createTimelineModelFromData;
- (double)processActionRepeat:(id)arg1 startTime:(double)arg2 timelineModel:(id)arg3 track:(long long)arg4 loop:(id)arg5;
- (double)processActionGroup:(id)arg1 startTime:(double)arg2 timelineModel:(id)arg3 track:(long long)arg4 loop:(id)arg5;
- (double)processActionSequence:(id)arg1 startTime:(double)arg2 timelineModel:(id)arg3 track:(long long)arg4 loop:(id)arg5;
- (double)processAction:(id)arg1 actionType:(id)arg2 startTime:(double)arg3 timelineModel:(id)arg4 track:(long long)arg5 loop:(id)arg6;
- (double)processSCNAction:(id)arg1 actionType:(id)arg2 startTime:(double)arg3 timelineModel:(id)arg4 track:(long long)arg5 loop:(id)arg6;
- (BOOL)getActionBool:(id)arg1 forKey:(id)arg2;
- (struct SCNVector4)getVector4:(id)arg1 forKey:(id)arg2;
- (double)getActionFloat:(id)arg1 forKey:(id)arg2;
- (id)getActionNumber:(id)arg1 forKey:(id)arg2;
- (double)getActionDuration:(id)arg1;
- (id)getFirstValueFromArray:(id)arg1 withKey:(id)arg2;
- (const char *)decodeBytesForKey:(id)arg1 returnedLength:(unsigned long long *)arg2;
- (double)decodeDoubleForKey:(id)arg1;
- (float)decodeFloatForKey:(id)arg1;
- (long long)decodeInt64ForKey:(id)arg1;
- (int)decodeInt32ForKey:(id)arg1;
- (int)decodeIntForKey:(id)arg1;
- (BOOL)decodeBoolForKey:(id)arg1;
- (id)decodeObjectForKey:(id)arg1;
- (Class)classForClassName:(id)arg1;
- (id)initForReadingWithData:(id)arg1;

@end

@interface GTFActionView : NSView
{
    NSColor *_boxColor;
    NSColor *_interiorColor;
    NSColor *_textColor;
    NSColor *_trackBackgroundColor;
    NSColor *_boxGhostColor;
    NSColor *_interiorGhostColor;
    NSColor *_selectedColor;
    NSColor *_selectedGhostColor;
    NSColor *_selectedTextColor;
    NSString *_title;
    NSString *_infoText;
    int _track;
    BOOL _detailedView;
    BOOL _validPlacement;
    BOOL _ghost;
    BOOL _positionLocked;
    BOOL _selected;
    BOOL _mouseOver;
    BOOL _showDeleteCircle;
    BOOL _showResizeCursor;
    id <GTFActionTimelineInfoDelegate> _timelineInfoDelegate;
    struct CGRect _deleteRect;
}

@property(readonly, nonatomic) struct CGRect deleteRect; // @synthesize deleteRect=_deleteRect;
@property(nonatomic) BOOL showResizeCursor; // @synthesize showResizeCursor=_showResizeCursor;
@property(nonatomic) BOOL showDeleteCircle; // @synthesize showDeleteCircle=_showDeleteCircle;
@property(nonatomic) BOOL mouseOver; // @synthesize mouseOver=_mouseOver;
@property(nonatomic) BOOL selected; // @synthesize selected=_selected;
@property(nonatomic) BOOL positionLocked; // @synthesize positionLocked=_positionLocked;
@property(nonatomic) BOOL ghost; // @synthesize ghost=_ghost;
@property(nonatomic) BOOL validPlacement; // @synthesize validPlacement=_validPlacement;
@property(nonatomic) __weak id <GTFActionTimelineInfoDelegate> timelineInfoDelegate; // @synthesize timelineInfoDelegate=_timelineInfoDelegate;
- (void).cxx_destruct;
- (void)drawRect:(struct CGRect)arg1;
- (void)drawAtPoint:(struct CGPoint)arg1 ghosted:(BOOL)arg2 disableSelect:(BOOL)arg3 dirtyRect:(struct CGRect)arg4;
- (void)drawWithDirtyRect:(struct CGRect)arg1;
- (BOOL)isFlipped;
- (void)setColor:(id)arg1;
- (void)updateColors;
- (void)updateForNewTimeScale:(double)arg1;
- (void)updateWithStartTime:(double)arg1 duration:(double)arg2 track:(int)arg3 title:(id)arg4 infoText:(id)arg5 color:(id)arg6 showResizeCursor:(BOOL)arg7;
- (void)updateYPosition;
- (id)initWithFrame:(struct CGRect)arg1 timelineInfoDelegate:(id)arg2;
- (struct CGRect)calcRenderRect:(struct CGPoint)arg1;
@property(readonly, nonatomic) struct CGRect renderRect;
@property(readonly, nonatomic) struct CGRect loopIconRect;
@property(readonly, nonatomic) struct CGRect loopRect;
@property(readonly, nonatomic) struct CGRect resizeRect;
@property(readonly, nonatomic) struct CGRect dragRect;
@property(retain, nonatomic) NSColor *trackBackgroundColor;
@property(nonatomic) double width;
@property(nonatomic) double x;
@property(nonatomic) int track;
@property(nonatomic) double duration;
@property(nonatomic) double startTime;
- (double)calculateXPositionForStartTime:(double)arg1 withTimeScale:(double)arg2;

@end

@interface GTFButtonNoInput : NSButton
{
}

- (void)mouseUp:(id)arg1;
- (void)mouseDown:(id)arg1;

@end

@interface GTFFileSystemEventStream : NSObject
{
    struct __FSEventStream *_eventStream;
    struct FSEventStreamContext _context;
    id <GTFFileSystemEventStreamDelegate> _delegate;
    unsigned long long _lastEventProcessed;
    struct {
        unsigned int _notedChangeAtPath:1;
        unsigned int _notedChangeOfRootPath:1;
        unsigned int _notedVolumeMount:1;
        unsigned int _notedVolumeUnmount:1;
        unsigned int _historyComplete:1;
        unsigned int _historyWrapped:1;
        unsigned int _reserved:26;
    } _delegateFlags;
}

- (void).cxx_destruct;
- (unsigned long long)lastEventProcessed;
@property(retain) id <GTFFileSystemEventStreamDelegate> delegate; // @synthesize delegate=_delegate;
- (void)flushSync;
- (void)flush;
- (void)stop;
- (void)start;
- (void)removeFromRunLoop:(id)arg1 forMode:(id)arg2;
- (void)scheduleInRunLoop:(id)arg1 forMode:(id)arg2;
- (void)invalidate;
- (id)initWithPaths:(id)arg1 watchRoot:(BOOL)arg2;
- (id)initWithPaths:(id)arg1 startingWithEvent:(unsigned long long)arg2 latency:(double)arg3 defer:(BOOL)arg4 watchRoot:(BOOL)arg5;
- (void)_processEvent:(unsigned long long)arg1 withFlags:(unsigned int)arg2 forPath:(id)arg3;
- (void)_processEvents:(const unsigned long long *)arg1 count:(unsigned long long)arg2 withFlags:(const unsigned int *)arg3 forPaths:(id)arg4;
- (struct __CFString *)_createCFRunLoopModeFromNSRunLoopMode:(id)arg1;
- (struct __CFRunLoop *)_getCFRunLoopFromNSRunLoop:(id)arg1;

@end

@interface SCNActionModel : GTFActionModel
{
    SCNAction *_action;
    long long _type;
}

- (void).cxx_destruct;
@property(retain, nonatomic) NSString *fileName;
- (id)getSCNAction;
- (id)_getSCNAction;
- (id)getSKAction;
- (id)ideModelObjectTypeIdentifier;
- (id)actionInfoString;
- (id)actionColor;
- (id)actionName;
- (long long)actionType;
- (id)initWithSCNAction:(id)arg1;
- (void)setup;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;

@end

@interface SKActionAnimateWithTextures : GTFActionModel
{
    BOOL _resize;
    BOOL _restore;
}

+ (id)keyPathsForValuesAffectingInspectorTextureFileNames;
+ (id)keyPathsForValuesAffectingInspectorRestore;
+ (id)keyPathsForValuesAffectingInspectorResize;
@property BOOL restore; // @synthesize restore=_restore;
@property BOOL resize; // @synthesize resize=_resize;
- (id)_recursivePathsForResourcesNamed:(id)arg1 inDirectory:(id)arg2;
- (id)findAbsolutePathForResourceNamed:(id)arg1;
- (id)_textureForFilename:(id)arg1;
- (void)reverse;
- (id)getSKAction;
- (id)actionInfoString;
- (id)actionColor;
- (id)actionName;
- (long long)actionType;
@property(retain) NSArray *textureFileNames;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithTextures:(id)arg1 resize:(BOOL)arg2 restore:(BOOL)arg3;
@property(retain, nonatomic) NSArray *inspectorTextureFileNames;
@property(nonatomic) BOOL inspectorRestore;
@property(nonatomic) BOOL inspectorResize;

@end

@interface SKActionFadeAlphaTo : GTFActionModel
{
}

- (id)getSKAction;
- (id)actionInfoString;
- (id)actionColor;
- (id)actionName;
- (long long)actionType;
- (id)initWithAlpha:(double)arg1;

@end

@interface SKActionFadeIn : GTFActionModel
{
}

- (id)getSKAction;
- (id)actionInfoString;
- (id)actionColor;
- (id)actionName;
- (long long)actionType;

@end

@interface SKActionFadeOut : GTFActionModel
{
}

- (id)getSKAction;
- (id)actionInfoString;
- (id)actionColor;
- (id)actionName;
- (long long)actionType;

@end

@interface SKActionHide : GTFActionModel
{
}

- (id)getSKAction;
- (id)actionInfoString;
- (id)actionColor;
- (id)actionName;
- (long long)actionType;

@end

@interface SKActionMoveBy : GTFActionModel
{
}

- (void)reverse;
- (id)getSKAction;
- (id)actionInfoString;
- (id)actionColor;
- (id)actionName;
- (long long)actionType;
- (id)initWithX:(double)arg1 y:(double)arg2;

@end

@interface SKActionMoveTo : GTFActionModel
{
}

- (void)reverse;
- (id)getSKAction;
- (id)actionInfoString;
- (id)actionColor;
- (id)actionName;
- (long long)actionType;
- (id)initWithX:(double)arg1 y:(double)arg2;

@end

@interface SKActionPlaySoundFileNamed : GTFActionModel
{
}

+ (id)keyPathsForValuesAffectingInspectorFileName;
- (void)setDurationOverride:(double)arg1;
@property(retain) NSString *fileName;
- (id)getSKAction;
- (id)actionInfoString;
- (id)actionColor;
- (id)actionName;
- (long long)actionType;
- (id)initWithFileNamed:(id)arg1;
@property(retain, nonatomic) NSString *inspectorFileName;

@end

@interface SKActionReference : GTFActionModel
{
    NSString *_referenceName;
}

@property(copy, nonatomic) NSString *referenceName; // @synthesize referenceName=_referenceName;
- (void).cxx_destruct;
- (id)getSKAction;
@property(readonly, nonatomic) NSString *referenceFilename;
- (id)actionInfoString;
- (id)actionColor;
- (id)actionName;
- (long long)actionType;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithReferenceName:(id)arg1;

@end

@interface SKActionResizeBy : GTFActionModel
{
}

- (void)reverse;
- (id)getSKAction;
- (id)actionInfoString;
- (id)actionColor;
- (id)actionName;
- (long long)actionType;
- (id)initWithWidth:(double)arg1 height:(double)arg2;

@end

@interface SKActionResizeTo : GTFActionModel
{
}

- (void)reverse;
- (id)getSKAction;
- (id)actionInfoString;
- (id)actionColor;
- (id)actionName;
- (long long)actionType;
- (id)initWithWidth:(double)arg1 height:(double)arg2;

@end

@interface SKActionResizeToHeight : GTFActionModel
{
}

- (void)reverse;
- (id)getSKAction;
- (id)actionInfoString;
- (id)actionColor;
- (id)actionName;
- (long long)actionType;
- (id)initWithHeight:(double)arg1;

@end

@interface SKActionResizeToWidth : GTFActionModel
{
}

- (void)reverse;
- (id)getSKAction;
- (id)actionInfoString;
- (id)actionColor;
- (id)actionName;
- (long long)actionType;
- (id)initWithWidth:(double)arg1;

@end

@interface SKActionRotateBy : GTFActionModel
{
}

- (void)reverse;
- (id)getSKAction;
- (id)actionInfoString;
- (id)actionColor;
- (id)actionName;
- (long long)actionType;
- (id)initWithAngle:(double)arg1;

@end

@interface SKActionRotateToAngle : GTFActionModel
{
}

- (void)reverse;
- (id)getSKAction;
- (id)actionInfoString;
- (id)actionColor;
- (id)actionName;
- (long long)actionType;
- (id)initWithAngle:(double)arg1;

@end

@interface SKActionScaleBy : GTFActionModel
{
}

- (void)reverse;
- (id)getSKAction;
- (id)actionInfoString;
- (id)actionColor;
- (id)actionName;
- (long long)actionType;
- (id)initWithScale:(double)arg1;

@end

@interface SKActionScaleTo : GTFActionModel
{
}

- (void)reverse;
- (id)getSKAction;
- (id)actionInfoString;
- (id)actionColor;
- (id)actionName;
- (long long)actionType;
- (id)initWithScale:(double)arg1;

@end

@interface SKActionUnhide : GTFActionModel
{
}

- (id)getSKAction;
- (id)actionInfoString;
- (id)actionColor;
- (id)actionName;
- (long long)actionType;

@end

