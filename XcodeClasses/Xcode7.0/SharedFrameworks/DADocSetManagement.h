//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Typedef'd Structures

typedef struct {
    unsigned int :24;
    unsigned int :20;
    unsigned int :20;
} CDStruct_aac1954a;

#pragma mark -

//
// File: /Applications/Xcode-7GM.app/Contents/SharedFrameworks/DADocSetManagement.framework/Versions/A/DADocSetManagement
// UUID: BC245F95-3E97-3DBF-B67A-898A1D4147D0
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 8016.0.0.0.0
//       Minimum Mac OS X version: 10.10.0
//                    SDK version: 10.11.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol DSMDocSetLoaderListener

@optional
- (void)docSetWillBeUnloadedOrUpdated:(DSMDocSetRecord *)arg1;
- (void)docSetDidUnload:(DSMDocSetRecord *)arg1;
- (void)docSetDidLoad:(DSMDocSetRecord *)arg1;
@end

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@interface DSMBookmark : NSObject <NSCoding>
{
    NSString *_relativeURLString;
    NSString *_platform;
    NSString *_docSetIdentifier;
    NSString *_anchor;
    NSString *_name;
}

+ (id)bookmarkFromDictionary:(id)arg1;
+ (id)bookmarkWithName:(id)arg1 relativeURLString:(id)arg2 anchor:(id)arg3 platform:(id)arg4;
@property(copy) NSString *name; // @synthesize name=_name;
@property(copy) NSString *anchor; // @synthesize anchor=_anchor;
@property(copy) NSString *docSetIdentifier; // @synthesize docSetIdentifier=_docSetIdentifier;
@property(copy) NSString *platform; // @synthesize platform=_platform;
@property(copy) NSString *relativeURLString; // @synthesize relativeURLString=_relativeURLString;
- (void).cxx_destruct;
- (id)description;
- (id)dictionaryRepresentation;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;

@end

@interface DSMBookmarkManager : NSObject
{
    NSArray *m_bookmarksAsObjects;
}

+ (id)sharedBookmarkManager;
+ (void)initialize;
@property(copy, nonatomic) NSArray *bookmarksAsObjects; // @synthesize bookmarksAsObjects=m_bookmarksAsObjects;
- (void).cxx_destruct;
- (id)bookmarkForNode:(id)arg1;
- (void)persistBookmarkDictionaries:(id)arg1;
- (void)persistBookmarks:(id)arg1;
- (id)allBookmarksAsDictionaries;
- (id)allBookmarksAsObjects;
- (void)setAllBookmarksAsObjectsArray:(id)arg1;
- (void)replaceObjectInAllBookmarksAsObjectsAtIndex:(unsigned int)arg1 withObject:(id)arg2;
- (void)removeObjectFromAllBookmarksAsObjectsAtIndex:(unsigned int)arg1;
- (void)insertObject:(id)arg1 inAllBookmarksAsObjectsAtIndex:(unsigned int)arg2;
- (id)objectInAllBookmarksAsObjectsAtIndex:(unsigned int)arg1;
- (unsigned int)countOfAllBookmarksAsObjectsArray;
- (void)deleteAllBookmarks;
- (void)deleteBookmark:(id)arg1;
- (void)addBookmark:(id)arg1;

@end

@interface DSMDocSetLoader : NSObject
{
    NSMutableArray *_loadedDocSets;
    NSMutableDictionary *_docSetGroups;
    NSMutableArray *_docSetRecords;
    NSMutableDictionary *m_sdkAndPlatformAdvertisedDocSets;
    NSMutableArray *_watchedDirectories;
    BOOL m_testingMode;
    NSMutableArray *_nonstandardDocSetPaths;
    CDUnknownBlockType _findAndLoadDocSetsInPathsBlock;
    NSMutableArray *_docSetIdentifiersInUpdateInstallationPhase;
    BOOL _hasPerformedInitialDocSetLoad;
    unsigned long long _docSetLoadingProgress;
    DVTPerformanceMetric *_docSetLoadingPerformanceMetric;
    DVTObservingToken *_checkAndInstallWatcher;
    BOOL _isLoadingDocSets;
    NSMutableArray *_mutableDocSetLoaderListeners;
    NSMutableArray *_mutableDocSetLocations;
    CDUnknownBlockType _docSetLoadingCompletionBlock;
    NSMutableArray *_mutableDocSetSubscriptionListeners;
    NSDictionary *_docSetRecordsByFamily;
}

+ (id)nodeForBookmark:(id)arg1 URL:(id *)arg2;
+ (id)dvtFilePathsFromPathStrings:(id)arg1;
+ (id)docSetPaths;
+ (id)docSetFilePathLocations;
+ (id)otherDocSetLocations;
+ (id)libraryDocSetLocations;
+ (id)sharedDocSetLoader;
@property unsigned long long docSetLoadingProgress; // @synthesize docSetLoadingProgress=_docSetLoadingProgress;
@property(copy) NSArray *docSetRecords; // @synthesize docSetRecords=_docSetRecords;
@property(copy) NSMutableArray *nonstandardDocSetPaths; // @synthesize nonstandardDocSetPaths=_nonstandardDocSetPaths;
@property BOOL testingMode; // @synthesize testingMode=m_testingMode;
- (void).cxx_destruct;
- (void)docSetUpdateEnteredInstallationPhase:(id)arg1;
- (void)docSetDidLoad:(id)arg1;
- (void)docSetDidUnload:(id)arg1;
- (void)docSetWillBeUnloadedOrUpdated:(id)arg1;
@property(readonly, copy) NSArray *recordsForEnabledDocSets;
- (void)loadDocSetsWithCompletionBlock:(CDUnknownBlockType)arg1;
@property(readonly, copy) NSArray *docSetLocations;
- (void)addDocSetLocation:(id)arg1;
- (id)docSetLoaderListeners;
- (void)removeDocSetLoaderListener:(id)arg1;
- (void)addDocSetLoaderListener:(id)arg1;
- (void)downloadableStatusChanged:(id)arg1;
- (void)docSetDownloadbleDidBeginInstall:(id)arg1;
- (void)docSetDownloadbleWillBeginInstall:(id)arg1;
- (id)xcodeHomePageURL;
- (id)xcodeContinuousIntegrationGuideNode;
- (id)xcodeSourceControlManagementNode;
- (id)gdbToLLDBTransitionGuideNode;
- (id)xcodeHomePageNode;
- (id)whatsNewInXcodeNode;
- (id)xcodeReleaseNotesNode;
- (id)xcodeUserGuideNode;
- (id)xcodeGuidesLandingPageNode;
- (BOOL)fileExistsAtPath:(id)arg1;
- (id)docSetWithXcodeReference;
- (id)docSetWithAppleCoreReference;
- (id)docSetWithPackageID:(id)arg1;
- (id)_appleDocSetWithPackageID:(id)arg1;
- (id)nodeForURL:(id)arg1 outDocSet:(id *)arg2;
- (void)resolveURL:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (id)newestDocSetRecordsByPlatformFamily:(id)arg1;
- (id)loadedDocSetMatchingBundleIdentifier:(id)arg1;
- (id)createDocSetRecordForDocSet:(id)arg1;
- (id)fileModificationDateForPath:(id)arg1;
- (id)docSetRecordForDocSet:(id)arg1;
- (id)docSetRecordForDocSetIdentifier:(id)arg1;
- (id)docSetRecordForDocSetAtPath:(id)arg1;
- (void)addDocSetRecord:(id)arg1;
- (void)removeDocSetRecordForDocSet:(id)arg1;
- (id)pathsOfDocSetsInFilePaths:(id)arg1;
- (BOOL)docSetIsValidForThisVersionOfXcode:(id)arg1;
- (CDStruct_aac1954a)runningXcodeVersion;
- (void)unloadAllDocSets;
- (void)removeDocSet:(id)arg1;
- (void)_registerAndConfigureFSEventStreamForDocSet:(id)arg1;
- (id)docSetsMatchingIdentifier:(id)arg1;
- (void)removeDocSets:(id)arg1;
- (void)tellManagerDocSetWasRemoved:(id)arg1;
- (void)tellManagerDocSetWillBeRemoved:(id)arg1;
- (void)tellManagerDocSetDidLoad:(id)arg1;
- (void)findAndLoadDocSetsInPaths:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)pruneOlderDocSets;
- (void)resetHasPerformedInitialDocSetLoad;
- (void)_loadDocSetsInFilePaths:(id)arg1;
- (id)watchFilePath:(id)arg1;
- (void)_pathChanged:(id)arg1;
- (void)_configureFSEventStreamForDocSet:(id)arg1;
- (void)processFileSystemEventStreamChangeAtPath:(id)arg1;
- (BOOL)_docSetModificationDateChanged:(id)arg1;
- (id)_docSetsRemovedFromPath:(id)arg1;
- (id)_docSetPathsInPath:(id)arg1;
- (BOOL)_pathIsADocSetBundle:(id)arg1;
- (id)loadDocSetAtPath:(id)arg1;
- (id)existingDocSetRecordForDocSetAtPath:(id)arg1;
- (BOOL)isDSAVersion:(CDStruct_aac1954a)arg1 newerThanDSAVersion:(CDStruct_aac1954a)arg2;
- (BOOL)isDSAVersionParseable:(CDStruct_aac1954a)arg1;
- (void)_registerDocSet:(id)arg1;
- (id)feedIdentifierForDocSet:(id)arg1;
@property(readonly, copy) NSArray *enabledDocSetRecords;
- (BOOL)_isDocSetWithIdentifierInUpdateInstallationPhase:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface DSMDocSetRecord : NSObject <NSCopying>
{
    BOOL _isEnabled;
    NSDate *_modificationDate;
    DSADocSet *_docSet;
    NSString *_docSetPath;
}

@property(copy) NSString *docSetPath; // @synthesize docSetPath=_docSetPath;
@property(retain) DSADocSet *docSet; // @synthesize docSet=_docSet;
@property(copy) NSDate *modificationDate; // @synthesize modificationDate=_modificationDate;
@property BOOL isEnabled; // @synthesize isEnabled=_isEnabled;
- (void).cxx_destruct;
@property(readonly, copy) NSString *copyright;
@property(readonly, copy) NSString *shortVersionString;
@property(readonly, copy) NSString *webRootURL;
@property(readonly, copy) NSString *feedURL;
@property(readonly, copy) NSString *feedName;
@property(readonly, copy) NSString *docSetID;
@property(readonly, copy) NSString *name;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithDocSet:(id)arg1;
- (long long)dsmMetaQueries_compareDocSetRecordNames:(id)arg1;
- (long long)dsmMetaQueries_comparePlatformNames:(id)arg1;

@end

@interface DSMFullTextResultsUtilities : NSObject
{
}

+ (id)_trimToTopHits:(id)arg1 givenMaxRelevance:(float)arg2;
+ (id)filteredAndSortedFullTextResults:(id)arg1 maxRelevance:(double)arg2;

@end

@interface DSMLogging : NSObject
{
}

+ (id)documentationGeneralLogAspect;
+ (id)documentationURLHandlingLogAspect;
+ (id)documentationSearchLogAspect;
+ (id)docSetLoadingLogAspect;
+ (id)docSetUpdatesLogAspect;

@end

@interface DSMMetaQueries : NSObject
{
}

+ (id)_appleRefFromUSR:(id)arg1;
+ (id)nodeForUUID:(id)arg1 inDocSet:(id)arg2;
- (id)tokenForUSR:(id)arg1 language:(id)arg2;
- (id)tokenForUSR:(id)arg1 language:(id)arg2 platform:(id)arg3 sdkVersion:(id)arg4;
- (id)tokenForAppleRef:(id)arg1;
- (id)tokenForAppleRef:(id)arg1 platform:(id)arg2 sdkVersion:(id)arg3;
- (id)reverseArray:(id)arg1;
- (id)_normalizedFamilyIdentifier:(id)arg1;
- (id)bestDocSetRecordsForPlatformName:(id)arg1 sdkVersion:(id)arg2 searchDocSetRecords:(id)arg3 includeMismatchedFamilyNames:(BOOL)arg4 includeMismatchedVersions:(BOOL)arg5;
- (id)urlForUUID:(id)arg1 inDocSet:(id)arg2;
- (id)tokensForSymbol:(id)arg1 platform:(id)arg2 sdkVersion:(id)arg3 useFallbackNameSearch:(BOOL)arg4;

@end

@interface DSMQuery : NSObject
{
    NSString *_searchString;
    unsigned long long _matchType;
    NSString *_tokenTypeKey;
    NSArray *_languages;
    NSString *_tokenScope;
    NSArray *_docSets;
    NSArray *_sortDescriptors;
    NSArray *_frameworks;
}

+ (id)queryForString:(id)arg1 matchType:(unsigned long long)arg2 tokenType:(id)arg3 languages:(id)arg4 tokenScope:(id)arg5 inDocSets:(id)arg6 sortDescriptors:(id)arg7 frameworks:(id)arg8;
@property(copy) NSArray *frameworks; // @synthesize frameworks=_frameworks;
@property(copy) NSArray *sortDescriptors; // @synthesize sortDescriptors=_sortDescriptors;
@property(copy) NSArray *docSets; // @synthesize docSets=_docSets;
@property(copy) NSString *tokenScope; // @synthesize tokenScope=_tokenScope;
@property(copy) NSArray *languages; // @synthesize languages=_languages;
@property(copy) NSString *tokenTypeKey; // @synthesize tokenTypeKey=_tokenTypeKey;
@property unsigned long long matchType; // @synthesize matchType=_matchType;
@property(copy) NSString *searchString; // @synthesize searchString=_searchString;
- (void).cxx_destruct;
- (id)docSetIdentifiers;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)description;
- (id)_debugDSAMatchTypeStringRepresentation:(unsigned long long)arg1;

@end

@interface DSMQueryController : NSObject
{
}

+ (id)tokenQueryDictionaryFromQuery:(id)arg1;
+ (id)sharedQueryController;
- (void)cancelQuery:(id)arg1 delegate:(id)arg2 contextInfo:(void *)arg3;
- (id)runSynchronousTitleQuery:(id)arg1;
- (id)managedObjectContextForDocSet:(id)arg1;
- (void)runAsynchronousFullTextQuery:(id)arg1 delegate:(id)arg2 contextInfo:(void *)arg3;
- (id)runSynchronousFullTextQuery:(id)arg1 maximumRelevance:(double *)arg2;
- (void)runAsynchronousAPIQuery:(id)arg1 delegate:(id)arg2 contextInfo:(void *)arg3;
- (id)runSynchronousAPIQuery:(id)arg1 returnManagedObjects:(BOOL)arg2;

@end

@interface DSMQueryRunner : NSObject
{
    CDUnknownBlockType _completionBlock;
    NSArray *_textResults;
    NSMutableArray *_APIResults;
    BOOL _textQueryCompleted;
    BOOL _APIQueryCompleted;
    NSMutableArray *_temporaryFullTextSearchResults;
    DSMQuery *_query;
    BOOL _isCancelling;
    DVTPerformanceMetric *_docSetQueriesPerformanceMetric;
}

@property(retain) DSMQuery *query; // @synthesize query=_query;
@property(retain) NSMutableArray *temporaryFullTextSearchResults; // @synthesize temporaryFullTextSearchResults=_temporaryFullTextSearchResults;
- (void).cxx_destruct;
- (void)cancel;
- (void)runTokenQuery;
- (void)runFullTextQuery;
- (void)docSets:(id)arg1 didFindTextSearchResults:(id)arg2 isFinished:(BOOL)arg3 contextInfo:(void *)arg4;
- (void)docSets:(id)arg1 didFindTokenSearchResults:(id)arg2 isFinished:(BOOL)arg3 contextInfo:(void *)arg4;
- (void)updateResults;
- (void)executeQuery:(CDUnknownBlockType)arg1;
- (id)initWithQuery:(id)arg1;

@end

@interface DSMSearchOperation : NSOperation
{
    DSMQuery *_query;
}

+ (id)completedNotificationName;
@property(retain) DSMQuery *query; // @synthesize query=_query;
- (void).cxx_destruct;
- (void)postCompletedNotification:(id)arg1;
- (id)operationsForAllQueryTypes;

@end

@interface DSMTextSearchOperation : DSMSearchOperation
{
}

+ (id)completedNotificationName;
- (void)main;

@end

@interface DSMTokenSearchOperation : DSMSearchOperation
{
}

+ (id)completedNotificationName;
- (void)main;

@end

@interface DVURLUtilities : NSObject
{
}

+ (id)docSetWithAbsolutePath:(id)arg1;
+ (id)docSetForDocumentInWebView:(id)arg1;
+ (BOOL)_fileExistsAtLocalURL:(id)arg1;
+ (BOOL)_fileExistsAtPath:(id)arg1;
+ (id)URLOfDisplayedDocumentInWebView:(id)arg1;
+ (id)factoredURLFromRequest:(id)arg1 docSet:(id)arg2;
+ (id)anchorOfURLString:(id)arg1;
+ (id)URLStringWithoutAnchor:(id)arg1;

@end

@interface NSURL (dsm_NSURL)
- (id)dsm_absoluteStringByDeletingScheme;
- (id)dsm_anchor;
- (id)dsm_URLByTrimmingAnchor;
@end

