//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CGSize {
    double _field1;
    double _field2;
};

struct NSArray {
    Class _field1;
};

struct _NSRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct __va_list_tag {
    unsigned int _field1;
    unsigned int _field2;
    void *_field3;
    void *_field4;
};

struct in6_addr {
    union {
        unsigned char _field1[16];
        unsigned short _field2[8];
        unsigned int _field3[4];
    } _field1;
};

struct in_addr {
    unsigned int _field1;
};

struct sockaddr_in {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    struct in_addr _field4;
    char _field5[8];
};

struct sockaddr_in6 {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    unsigned int _field4;
    struct in6_addr _field5;
    unsigned int _field6;
};

#pragma mark -

//
// File: /Applications/Xcode-7GM.app/Contents/SharedFrameworks/XCSCore.framework/Versions/A/XCSCore
// UUID: 3EB03B4C-6E52-3F87-A01C-91CD46B51D2C
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 8174.0.0.0.0
//       Minimum Mac OS X version: 10.10.0
//                    SDK version: 10.11.0
//
// Objective-C Garbage Collection: Unsupported
//
//                       Run path: @executable_path/
//                               = /Applications/Xcode-7GM.app/Contents/SharedFrameworks/XCSCore.framework/Versions/A
//                       Run path: @executable_path/../../../Frameworks
//                               = /Applications/Xcode-7GM.app/Contents/SharedFrameworks/Frameworks
//                       Run path: @executable_path/../../../SharedFrameworks
//                               = /Applications/Xcode-7GM.app/Contents/SharedFrameworks/SharedFrameworks
//                       Run path: @executable_path/../../../PlugIns
//                               = /Applications/Xcode-7GM.app/Contents/SharedFrameworks/PlugIns
//

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSNetServiceDelegate <NSObject>

@optional
- (void)netService:(NSNetService *)arg1 didAcceptConnectionWithInputStream:(NSInputStream *)arg2 outputStream:(NSOutputStream *)arg3;
- (void)netService:(NSNetService *)arg1 didUpdateTXTRecordData:(NSData *)arg2;
- (void)netServiceDidStop:(NSNetService *)arg1;
- (void)netService:(NSNetService *)arg1 didNotResolve:(NSDictionary *)arg2;
- (void)netServiceDidResolveAddress:(NSNetService *)arg1;
- (void)netServiceWillResolve:(NSNetService *)arg1;
- (void)netService:(NSNetService *)arg1 didNotPublish:(NSDictionary *)arg2;
- (void)netServiceDidPublish:(NSNetService *)arg1;
- (void)netServiceWillPublish:(NSNetService *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (BOOL)respondsToSelector:(SEL)arg1;
- (BOOL)conformsToProtocol:(Protocol *)arg1;
- (BOOL)isMemberOfClass:(Class)arg1;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (BOOL)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSURLSessionDelegate <NSObject>

@optional
- (void)URLSessionDidFinishEventsForBackgroundURLSession:(NSURLSession *)arg1;
- (void)URLSession:(NSURLSession *)arg1 didReceiveChallenge:(NSURLAuthenticationChallenge *)arg2 completionHandler:(void (^)(long long, NSURLCredential *))arg3;
- (void)URLSession:(NSURLSession *)arg1 didBecomeInvalidWithError:(NSError *)arg2;
@end

@protocol XCSDocumentProtocol
- (NSDictionary *)saveRepresentation;
- (NSDictionary *)dictionaryRepresentation;
- (id)initWithContents:(NSDictionary *)arg1 service:(XCSService *)arg2 validationErrors:(id *)arg3;
@end

@protocol XCSEventStreamDelegate <NSObject>

@optional
- (void)eventStream:(XCSEventStream *)arg1 didUpdatePrivilegesWithUsername:(NSString *)arg2;
- (void)eventStreamDidRejectClientCertificate:(XCSEventStream *)arg1;
- (void)eventStream:(XCSEventStream *)arg1 didDisconnectWithError:(NSError *)arg2;
@end

@protocol XCSIssueAssociationType <NSObject>
+ (NSString *)associationKey;
- (NSDictionary *)dictionaryRepresentation;
@end

@protocol XCSMessageChannelDelegate <NSObject>
- (void)messageChannel:(XCSMessageChannel *)arg1 didReceiveMessage:(NSData *)arg2 withTag:(unsigned char)arg3;

@optional
- (void)messageChannel:(XCSMessageChannel *)arg1 didFailToSendMessage:(NSData *)arg2 withTag:(unsigned char)arg3 error:(NSError *)arg4;
- (void)messageChannel:(XCSMessageChannel *)arg1 didSendMessage:(NSData *)arg2 withTag:(unsigned char)arg3;
- (void)messageChannel:(XCSMessageChannel *)arg1 didQueueMessage:(NSData *)arg2 withTag:(unsigned char)arg3;
- (void)messageChannel:(XCSMessageChannel *)arg1 didUpdatePrivilegesWithUsername:(NSString *)arg2;
- (void)messageChannelDidRejectClientCertificate:(XCSMessageChannel *)arg1;
- (void)messageChannelDidAcceptClientCertificate:(XCSMessageChannel *)arg1;
- (void)messageChannel:(XCSMessageChannel *)arg1 didDisconnectWithError:(NSError *)arg2 andWillRetry:(BOOL)arg3;
- (void)messageChannelDidConnect:(XCSMessageChannel *)arg1;
@end

@protocol XCSPlaceholderProtocol
- (id)initWithIntegration:(XCSIntegration *)arg1 name:(NSString *)arg2 keyPath:(NSString *)arg3 validationErrors:(id *)arg4;
@end

@protocol __ARCLiteIndexedSubscripting__
- (void)setObject:(id)arg1 atIndexedSubscript:(unsigned long long)arg2;
- (id)objectAtIndexedSubscript:(unsigned long long)arg1;
@end

@protocol __ARCLiteKeyedSubscripting__
- (void)setObject:(id)arg1 forKeyedSubscript:(id)arg2;
- (id)objectForKeyedSubscript:(id)arg1;
@end

@interface GCDAsyncReadPacket : NSObject
{
    NSMutableData *buffer;
    unsigned long long startOffset;
    unsigned long long bytesDone;
    unsigned long long maxLength;
    double timeout;
    unsigned long long readLength;
    NSData *term;
    BOOL bufferOwner;
    unsigned long long originalBufferLength;
    long long tag;
}

- (void).cxx_destruct;
- (long long)searchForTermAfterPreBuffering:(long long)arg1;
- (unsigned long long)readLengthForTermWithPreBuffer:(id)arg1 found:(char *)arg2;
- (unsigned long long)readLengthForTermWithHint:(unsigned long long)arg1 shouldPreBuffer:(char *)arg2;
- (unsigned long long)readLengthForNonTermWithHint:(unsigned long long)arg1;
- (unsigned long long)optimalReadLengthWithDefault:(unsigned long long)arg1 shouldPreBuffer:(char *)arg2;
- (void)ensureCapacityForAdditionalDataOfLength:(unsigned long long)arg1;
- (id)initWithData:(id)arg1 startOffset:(unsigned long long)arg2 maxLength:(unsigned long long)arg3 timeout:(double)arg4 readLength:(unsigned long long)arg5 terminator:(id)arg6 tag:(long long)arg7;

@end

@interface GCDAsyncSocket : NSObject
{
    unsigned int flags;
    unsigned short config;
    id delegate;
    NSObject<OS_dispatch_queue> *delegateQueue;
    int socket4FD;
    int socket6FD;
    int connectIndex;
    NSData *connectInterface4;
    NSData *connectInterface6;
    NSObject<OS_dispatch_queue> *socketQueue;
    NSObject<OS_dispatch_source> *accept4Source;
    NSObject<OS_dispatch_source> *accept6Source;
    NSObject<OS_dispatch_source> *connectTimer;
    NSObject<OS_dispatch_source> *readSource;
    NSObject<OS_dispatch_source> *writeSource;
    NSObject<OS_dispatch_source> *readTimer;
    NSObject<OS_dispatch_source> *writeTimer;
    NSMutableArray *readQueue;
    NSMutableArray *writeQueue;
    GCDAsyncReadPacket *currentRead;
    GCDAsyncWritePacket *currentWrite;
    unsigned long long socketFDBytesAvailable;
    GCDAsyncSocketPreBuffer *preBuffer;
    struct SSLContext *sslContext;
    GCDAsyncSocketPreBuffer *sslPreBuffer;
    unsigned long long sslWriteCachedLength;
    int sslErrCode;
    void *IsOnSocketQueueOrTargetQueueKey;
    id userData;
}

+ (id)ZeroData;
+ (id)LFData;
+ (id)CRData;
+ (id)CRLFData;
+ (BOOL)getHost:(id *)arg1 port:(unsigned short *)arg2 fromAddress:(id)arg3;
+ (unsigned short)portFromAddress:(id)arg1;
+ (id)hostFromAddress:(id)arg1;
+ (unsigned short)portFromSockaddr6:(const struct sockaddr_in6 *)arg1;
+ (unsigned short)portFromSockaddr4:(const struct sockaddr_in *)arg1;
+ (id)hostFromSockaddr6:(const struct sockaddr_in6 *)arg1;
+ (id)hostFromSockaddr4:(const struct sockaddr_in *)arg1;
- (void).cxx_destruct;
- (struct SSLContext *)sslContext;
- (int)socket6FD;
- (int)socket4FD;
- (int)socketFD;
- (void)performBlock:(CDUnknownBlockType)arg1;
- (void)unmarkSocketQueueTargetQueue:(id)arg1;
- (void)markSocketQueueTargetQueue:(id)arg1;
- (void)setAutoDisconnectOnClosedReadStream:(BOOL)arg1;
- (BOOL)autoDisconnectOnClosedReadStream;
- (void)ssl_continueSSLHandshake;
- (void)ssl_startTLS;
- (int)sslWriteWithBuffer:(const void *)arg1 length:(unsigned long long *)arg2;
- (int)sslReadWithBuffer:(void *)arg1 length:(unsigned long long *)arg2;
- (void)maybeStartTLS;
- (void)startTLS:(id)arg1;
- (void)doWriteTimeoutWithExtension:(double)arg1;
- (void)doWriteTimeout;
- (void)setupWriteTimerWithTimeout:(double)arg1;
- (void)endCurrentWrite;
- (void)completeCurrentWrite;
- (void)doWriteData;
- (void)maybeDequeueWrite;
- (float)progressOfWriteReturningTag:(long long *)arg1 bytesDone:(unsigned long long *)arg2 total:(unsigned long long *)arg3;
- (void)writeData:(id)arg1 withTimeout:(double)arg2 tag:(long long)arg3;
- (void)doReadTimeoutWithExtension:(double)arg1;
- (void)doReadTimeout;
- (void)setupReadTimerWithTimeout:(double)arg1;
- (void)endCurrentRead;
- (void)completeCurrentRead;
- (void)doReadEOF;
- (void)doReadData;
- (void)flushSSLBuffers;
- (void)maybeDequeueRead;
- (float)progressOfReadReturningTag:(long long *)arg1 bytesDone:(unsigned long long *)arg2 total:(unsigned long long *)arg3;
- (void)readDataToData:(id)arg1 withTimeout:(double)arg2 buffer:(id)arg3 bufferOffset:(unsigned long long)arg4 maxLength:(unsigned long long)arg5 tag:(long long)arg6;
- (void)readDataToData:(id)arg1 withTimeout:(double)arg2 maxLength:(unsigned long long)arg3 tag:(long long)arg4;
- (void)readDataToData:(id)arg1 withTimeout:(double)arg2 buffer:(id)arg3 bufferOffset:(unsigned long long)arg4 tag:(long long)arg5;
- (void)readDataToData:(id)arg1 withTimeout:(double)arg2 tag:(long long)arg3;
- (void)readDataToLength:(unsigned long long)arg1 withTimeout:(double)arg2 buffer:(id)arg3 bufferOffset:(unsigned long long)arg4 tag:(long long)arg5;
- (void)readDataToLength:(unsigned long long)arg1 withTimeout:(double)arg2 tag:(long long)arg3;
- (void)readDataWithTimeout:(double)arg1 buffer:(id)arg2 bufferOffset:(unsigned long long)arg3 maxLength:(unsigned long long)arg4 tag:(long long)arg5;
- (void)readDataWithTimeout:(double)arg1 buffer:(id)arg2 bufferOffset:(unsigned long long)arg3 tag:(long long)arg4;
- (void)readDataWithTimeout:(double)arg1 tag:(long long)arg2;
- (void)resumeWriteSource;
- (void)suspendWriteSource;
- (void)resumeReadSource;
- (void)suspendReadSource;
- (BOOL)usingSecureTransportForTLS;
- (BOOL)usingCFStreamForTLS;
- (void)setupReadAndWriteSourcesForNewlyConnectedSocket:(int)arg1;
- (void)getInterfaceAddress4:(id *)arg1 address6:(id *)arg2 fromDescription:(id)arg3 port:(unsigned short)arg4;
- (BOOL)isSecure;
- (BOOL)isIPv6;
- (BOOL)isIPv4;
- (id)localAddress;
- (id)connectedAddress;
- (unsigned short)localPortFromSocket6:(int)arg1;
- (unsigned short)localPortFromSocket4:(int)arg1;
- (id)localHostFromSocket6:(int)arg1;
- (id)localHostFromSocket4:(int)arg1;
- (unsigned short)connectedPortFromSocket6:(int)arg1;
- (unsigned short)connectedPortFromSocket4:(int)arg1;
- (id)connectedHostFromSocket6:(int)arg1;
- (id)connectedHostFromSocket4:(int)arg1;
- (unsigned short)localPort6;
- (unsigned short)localPort4;
- (id)localHost6;
- (id)localHost4;
- (unsigned short)connectedPort6;
- (unsigned short)connectedPort4;
- (id)connectedHost6;
- (id)connectedHost4;
- (unsigned short)localPort;
- (id)localHost;
- (unsigned short)connectedPort;
- (id)connectedHost;
- (BOOL)isConnected;
- (BOOL)isDisconnected;
- (id)otherError:(id)arg1;
- (id)connectionClosedError;
- (id)writeTimeoutError;
- (id)readTimeoutError;
- (id)readMaxedOutError;
- (id)connectTimeoutError;
- (id)sslError:(int)arg1;
- (id)errnoError;
- (id)errnoErrorWithReason:(id)arg1;
- (id)gaiError:(int)arg1;
- (id)badParamError:(id)arg1;
- (id)badConfigError:(id)arg1;
- (void)maybeClose;
- (void)disconnectAfterReadingAndWriting;
- (void)disconnectAfterWriting;
- (void)disconnectAfterReading;
- (void)disconnect;
- (void)closeWithError:(id)arg1;
- (void)doConnectTimeout;
- (void)endConnectTimeout;
- (void)startConnectTimeout:(double)arg1;
- (void)didNotConnect:(int)arg1 error:(id)arg2;
- (void)didConnect:(int)arg1;
- (BOOL)connectWithAddress4:(id)arg1 address6:(id)arg2 error:(id *)arg3;
- (void)lookup:(int)arg1 didFail:(id)arg2;
- (void)lookup:(int)arg1 didSucceedWithAddress4:(id)arg2 address6:(id)arg3;
- (void)lookup:(int)arg1 host:(id)arg2 port:(unsigned short)arg3;
- (BOOL)connectToAddress:(id)arg1 viaInterface:(id)arg2 withTimeout:(double)arg3 error:(id *)arg4;
- (BOOL)connectToAddress:(id)arg1 withTimeout:(double)arg2 error:(id *)arg3;
- (BOOL)connectToAddress:(id)arg1 error:(id *)arg2;
- (BOOL)connectToHost:(id)arg1 onPort:(unsigned short)arg2 viaInterface:(id)arg3 withTimeout:(double)arg4 error:(id *)arg5;
- (BOOL)connectToHost:(id)arg1 onPort:(unsigned short)arg2 withTimeout:(double)arg3 error:(id *)arg4;
- (BOOL)connectToHost:(id)arg1 onPort:(unsigned short)arg2 error:(id *)arg3;
- (BOOL)preConnectWithInterface:(id)arg1 error:(id *)arg2;
- (BOOL)doAccept:(int)arg1;
- (BOOL)acceptOnInterface:(id)arg1 port:(unsigned short)arg2 error:(id *)arg3;
- (BOOL)acceptOnPort:(unsigned short)arg1 error:(id *)arg2;
- (void)setUserData:(id)arg1;
- (id)userData;
- (void)setPreferIPv4OverIPv6:(BOOL)arg1;
- (BOOL)isIPv4PreferredOverIPv6;
- (void)setIPv6Enabled:(BOOL)arg1;
- (BOOL)isIPv6Enabled;
- (void)setIPv4Enabled:(BOOL)arg1;
- (BOOL)isIPv4Enabled;
- (void)synchronouslySetDelegate:(id)arg1 delegateQueue:(id)arg2;
- (void)setDelegate:(id)arg1 delegateQueue:(id)arg2;
- (void)setDelegate:(id)arg1 delegateQueue:(id)arg2 synchronously:(BOOL)arg3;
- (void)getDelegate:(id *)arg1 delegateQueue:(id *)arg2;
- (void)synchronouslySetDelegateQueue:(id)arg1;
- (void)setDelegateQueue:(id)arg1;
- (void)setDelegateQueue:(id)arg1 synchronously:(BOOL)arg2;
- (id)delegateQueue;
- (void)synchronouslySetDelegate:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDelegate:(id)arg1 synchronously:(BOOL)arg2;
- (id)delegate;
- (void)dealloc;
- (id)initWithDelegate:(id)arg1 delegateQueue:(id)arg2 socketQueue:(id)arg3;
- (id)initWithDelegate:(id)arg1 delegateQueue:(id)arg2;
- (id)initWithSocketQueue:(id)arg1;
- (id)init;

@end

@interface GCDAsyncSocketPreBuffer : NSObject
{
    char *preBuffer;
    unsigned long long preBufferSize;
    char *readPointer;
    char *writePointer;
}

- (void)reset;
- (void)didWrite:(unsigned long long)arg1;
- (void)getWriteBuffer:(char **)arg1 availableSpace:(unsigned long long *)arg2;
- (char *)writeBuffer;
- (unsigned long long)availableSpace;
- (void)didRead:(unsigned long long)arg1;
- (void)getReadBuffer:(char **)arg1 availableBytes:(unsigned long long *)arg2;
- (char *)readBuffer;
- (unsigned long long)availableBytes;
- (void)ensureCapacityForWrite:(unsigned long long)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;

@end

@interface GCDAsyncSpecialPacket : NSObject
{
    NSDictionary *tlsSettings;
}

- (void).cxx_destruct;
- (id)initWithTLSSettings:(id)arg1;

@end

@interface GCDAsyncWritePacket : NSObject
{
    NSData *buffer;
    unsigned long long bytesDone;
    long long tag;
    double timeout;
}

- (void).cxx_destruct;
- (id)initWithData:(id)arg1 timeout:(double)arg2 tag:(long long)arg3;

@end

@interface NSArray (XCSUtilities)
- (id)toJSONCompactWithError:(id *)arg1;
- (id)toJSONCompact;
- (id)toJSONWithError:(id *)arg1;
- (id)toJSON;
@end

@interface NSData (CRC32)
- (unsigned int)crc32;
@end

@interface NSData (WithBase64)
+ (id)dataWithBase64EncodedString:(id)arg1;
- (id)base64EncodedString;
@end

@interface NSDate (XCSDateTime)
- (id)dictionaryXCSDateTimeRepresentation;
- (id)ISO8601String;
- (id)initWithDictionaryRepresentation:(id)arg1;
@end

@interface NSDate (XCSUtilities)
+ (id)ISO8061FormattedCurrentTimestamp;
+ (id)dateWithRFC822Format:(id)arg1;
+ (id)dateWithISO8601Format:(id)arg1;
+ (id)dateWithISO8061Format:(id)arg1;
- (id)UTCYearMonthDayHourMinuteSecondsComponents;
- (id)yearMonthDayHourMinuteSecondsComponents;
- (id)dateTime;
- (id)dateStamp;
- (id)stringWithRFC822Format;
- (id)stringWithISO8601Format;
- (id)stringWithISO8061Format;
@end

@interface NSDictionary (XCSUtilities)
- (id)pavePath:(id)arg1 components:(id)arg2 object:(id)arg3;
- (void)setDictionary:(id)arg1 forKeyPath:(id)arg2 createIntermediateDictionaries:(BOOL)arg3 replaceIntermediateObjects:(BOOL)arg4;
- (void)processObject:(id)arg1 key:(id)arg2 path:(id *)arg3;
- (id)keyPaths;
- (id)toJSONCompactWithError:(id *)arg1;
- (id)toJSONCompact;
- (id)toJSONWithError:(id *)arg1;
- (id)toJSON;
@end

@interface NSError (XCSAdditions)
- (id)errorWithRepositoryID:(id)arg1;
@property(readonly) NSString *repositoryID;
- (id)fingerprint;
- (id)underlyingError;
@property(readonly) NSDictionary *dictionaryRepresentation;
- (BOOL)_validateDomain:(id)arg1 code:(id)arg2 message:(id)arg3 repository:(id)arg4 underlyingError:(id)arg5 fingerprint:(id)arg6 validationErrors:(id *)arg7;
- (id)initWithContents:(id)arg1 service:(id)arg2 validationErrors:(id *)arg3;
@end

@interface NSHTTPURLResponse (XCSUtilities)
- (BOOL)isWithin200Range;
@end

@interface NSImage (NSImage)
+ (id)PNGRepresentation:(id)arg1 size:(struct CGSize)arg2;
@end

@interface NSString (XCSUtilities)
+ (id)stringWithUUID;
- (id)JSONParseWithError:(id *)arg1;
- (id)JSONParse;
- (id)stringWithURLEncoding;
- (id)stringByNormalizingPathComponent;
@end

@interface NSURLRequest (XCSUtilities)
- (id)toJSONWithError:(id *)arg1;
- (id)toJSON;
- (id)description;
@end

@interface XCSObject : NSObject <XCSDocumentProtocol>
{
    XCSService *_service;
    NSString *_classString;
    NSDictionary *_infoSaved;
    NSMutableDictionary *_infoModified;
    NSMutableDictionary *_infoRemoved;
}

+ (BOOL)_verifyInfoParameter:(id)arg1 allowEmptyDictionary:(BOOL)arg2 validationErrors:(id *)arg3;
+ (id)objectsFromDictionaries:(id)arg1 service:(id)arg2 validationErrors:(id *)arg3;
+ (void)_setupObservablePropertiesForClass:(Class)arg1;
+ (void)_setupAccessorsForClass:(Class)arg1;
+ (void)initialize;
@property(retain, nonatomic) NSMutableDictionary *infoRemoved; // @synthesize infoRemoved=_infoRemoved;
@property(retain, nonatomic) NSMutableDictionary *infoModified; // @synthesize infoModified=_infoModified;
@property(retain, nonatomic) NSDictionary *infoSaved; // @synthesize infoSaved=_infoSaved;
@property(retain, nonatomic) NSString *classString; // @synthesize classString=_classString;
@property(retain, nonatomic) XCSService *service; // @synthesize service=_service;
- (void).cxx_destruct;
- (void)setValue:(id)arg1 forUndefinedKey:(id)arg2;
- (id)valueForUndefinedKey:(id)arg1;
- (BOOL)_validateID:(id)arg1 rev:(id)arg2 tinyID:(id)arg3 docType:(id)arg4;
- (void)_resetContainersToSavedState;
- (id)_iterate:(id)arg1 withSelector:(SEL)arg2;
- (id)_dateFromProperty:(id)arg1;
- (void)_setObjectInfoSavedWithDictionary:(id)arg1;
- (void)commonInit;
- (id)init;
- (id)initWithID:(id)arg1 rev:(id)arg2 tinyID:(id)arg3 docType:(id)arg4 service:(id)arg5;
- (void)revert;
- (void)setObject:(id)arg1 forKeyedSubscript:(id)arg2;
- (id)objectForKeyedSubscript:(id)arg1;
- (void)removeObjectForKey:(id)arg1;
- (id)objectForKey:(id)arg1;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (id)patchRepresentation;
- (id)saveRepresentation;
- (id)internalProperties;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) NSDictionary *contents;
- (id)json;
@property(nonatomic) NSString *docType; // @dynamic docType;
@property(nonatomic) NSString *tinyID; // @dynamic tinyID;
@property(nonatomic) NSString *revision; // @dynamic revision;
@property(nonatomic) NSString *ID; // @dynamic ID;
- (id)initWithContents:(id)arg1 service:(id)arg2 validationErrors:(id *)arg3;
- (id)_invocationValueForPropertyName:(id)arg1 type:(id)arg2 invocation:(id)arg3;
- (void)_objectValueForPropertyName:(id)arg1 type:(id)arg2 invocation:(id)arg3;
- (void)forwardInvocation:(id)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;

@end

@interface XCSACL : XCSObject
{
}

- (BOOL)_validateWithAccounts:(id)arg1 identifier:(id)arg2 validationErrors:(id *)arg3;
- (BOOL)_validateWithID:(id)arg1 revision:(id)arg2 service:(id)arg3 botCreators:(id)arg4 botViewers:(id)arg5 hostedRepositoryCreators:(id)arg6 validationErrors:(id *)arg7;
- (id)saveRepresentationHumanReadable:(BOOL)arg1;
- (id)saveRepresentation;
- (id)patchRepresentation;
- (id)dictionaryRepresentation;
- (id)description;
- (id)initWithContents:(id)arg1 service:(id)arg2 validationErrors:(id *)arg3;
- (id)_initWithID:(id)arg1 revision:(id)arg2 service:(id)arg3 botCreators:(id)arg4 botViewers:(id)arg5 hostedRepositoryCreators:(id)arg6 validationErrors:(id *)arg7;
- (id)initWithBotCreators:(id)arg1 botViewers:(id)arg2 hostedRepositoryCreators:(id)arg3 validationErrors:(id *)arg4;
- (void)setDefaultHostedRepositoryCreators;
- (BOOL)removeHostedRepositoryCreators:(id)arg1 validationErrors:(id *)arg2;
- (BOOL)addHostedRepositoryCreators:(id)arg1 validationErrors:(id *)arg2;
@property(readonly, nonatomic) NSArray *hostedRepositoryCreators;
- (void)setDefaultBotViewers;
- (BOOL)removeBotViewers:(id)arg1 validationErrors:(id *)arg2;
- (BOOL)addBotViewers:(id)arg1 validationErrors:(id *)arg2;
@property(readonly, nonatomic) NSArray *botViewers;
- (void)setDefaultBotCreators;
- (BOOL)removeBotCreators:(id)arg1 validationErrors:(id *)arg2;
- (BOOL)addBotCreators:(id)arg1 validationErrors:(id *)arg2;
@property(readonly, nonatomic) NSArray *botCreators;
- (void)clearHostedRepositoryCreators;
- (void)clearBotViewers;
- (void)clearBotCreators;
- (void)clearACL;
- (void)setDefaultACL;

// Remaining properties
@property(retain, nonatomic) NSMutableSet *internalBotCreators; // @dynamic internalBotCreators;
@property(retain, nonatomic) NSMutableSet *internalBotViewers; // @dynamic internalBotViewers;
@property(retain, nonatomic) NSMutableSet *internalHostedRepositoryCreators; // @dynamic internalHostedRepositoryCreators;

@end

@interface XCSLogDestination : NSObject
{
    NSArray *_tagsToInclude;
    NSArray *_tagsToExclude;
}

+ (id)destinationWithDictionary:(id)arg1;
@property(retain) NSArray *tagsToExclude; // @synthesize tagsToExclude=_tagsToExclude;
@property(retain) NSArray *tagsToInclude; // @synthesize tagsToInclude=_tagsToInclude;
- (void).cxx_destruct;
- (void)logMessageFromFile:(id)arg1 lineNumber:(long long)arg2 className:(id)arg3 methodName:(id)arg4 tags:(id)arg5 userInfo:(id)arg6 message:(id)arg7;
- (BOOL)shouldLogMessageWithTags:(id)arg1;
- (id)initWithTagsToInclude:(id)arg1 tagsToExclude:(id)arg2;
- (id)initWithDictionary:(id)arg1;

@end

@interface XCSASLLogDestination : XCSLogDestination
{
}

+ (void)initialize;
- (void)logMessageFromFile:(id)arg1 lineNumber:(long long)arg2 className:(id)arg3 methodName:(id)arg4 tags:(id)arg5 userInfo:(id)arg6 message:(id)arg7;
- (BOOL)shouldLogMessageWithTags:(id)arg1;

@end

@interface XCSAssigneeIssueAssociation : XCSObject <XCSIssueAssociationType>
{
    NSString *_username;
}

+ (id)assigneeIssueAssociationWithUsername:(id)arg1 validationErrors:(id *)arg2;
+ (id)associationKey;
@property(readonly, nonatomic) NSString *username; // @synthesize username=_username;
- (void).cxx_destruct;
- (id)saveRepresentation;
- (id)dictionaryRepresentation;
- (BOOL)_validateUsername:(id)arg1 validationErrors:(id *)arg2;
- (id)initWithContents:(id)arg1 service:(id)arg2 validationErrors:(id *)arg3;
- (id)initWithUsername:(id)arg1 validationErrors:(id *)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XCSBlockParallelBlocks : NSObject
{
    NSMutableDictionary *_tasks;
}

@property(retain, nonatomic) NSMutableDictionary *tasks; // @synthesize tasks=_tasks;
- (void).cxx_destruct;
- (unsigned long long)count;
- (id)identifiers;
- (BOOL)stopOnFailureForIdentifier:(id)arg1;
- (CDUnknownBlockType)blockForIdentifier:(id)arg1;
- (void)addBlock:(CDUnknownBlockType)arg1 withIdentifier:(id)arg2 stopOnFailure:(BOOL)arg3;
- (void)addBlock:(CDUnknownBlockType)arg1 withIdentifier:(id)arg2;
- (id)init;

@end

@interface XCSBlockParallelResults : NSObject
{
    BOOL _hasTimedOut;
    NSDictionary *_errors;
    NSDictionary *_results;
}

+ (id)resultsWithDictionary:(id)arg1;
@property(retain, nonatomic) NSDictionary *results; // @synthesize results=_results;
@property(nonatomic) BOOL hasTimedOut; // @synthesize hasTimedOut=_hasTimedOut;
@property(retain, nonatomic) NSDictionary *errors; // @synthesize errors=_errors;
- (void).cxx_destruct;
- (id)resultForIdentifier:(id)arg1;
- (id)identifiers;
- (id)initWithResults:(id)arg1;

@end

@interface XCSBlockStep : NSObject
{
}

+ (void)parallelBlocks:(id)arg1 timeout:(double)arg2 completionHandler:(CDUnknownBlockType)arg3;
+ (void)stepWithBlocks:(id)arg1 timeout:(double)arg2 completionHandler:(CDUnknownBlockType)arg3;

@end

@interface XCSBlueprintOperationResult : XCSObject
{
    NSError *_globalError;
    NSMutableDictionary *_repositoryErrorsDictionary;
}

@property(retain, nonatomic) NSMutableDictionary *repositoryErrorsDictionary; // @synthesize repositoryErrorsDictionary=_repositoryErrorsDictionary;
@property(retain) NSError *globalError; // @synthesize globalError=_globalError;
- (void).cxx_destruct;
- (void)addRepositoryErrors:(id)arg1;
- (void)addError:(id)arg1 forRepositoryID:(id)arg2;
- (void)addRepositoryError:(id)arg1;
- (id)mutableRepositoryErrorsForRepositoryID:(id)arg1;
- (id)repositoryErrorsExcludingRepositoryIDs:(id)arg1;
- (id)repositoryErrorsForRepositoryID:(id)arg1;
@property(readonly) NSArray *repositoryErrors;
- (id)dictionaryRepresentation;
- (BOOL)_validateGlobalError:(id)arg1 repositoryErrors:(id)arg2 validationErrors:(id *)arg3;
- (id)initWithContents:(id)arg1 service:(id)arg2 validationErrors:(id *)arg3;
- (id)initWithGlobalError:(id)arg1 repositoryErrors:(id)arg2 validationErrors:(id *)arg3;
- (id)init;

@end

@interface XCSBot : XCSObject
{
    BOOL _requiresUpgrade;
    struct NSArray *_groups;
    XCSBotSCMBlueprint *_lastRevisionBlueprint;
    XCSValidator *_validator;
}

+ (id)botWithName:(id)arg1 group:(id)arg2 type:(unsigned long long)arg3 configuration:(id)arg4 lastRevisionBlueprint:(id)arg5 validationErrors:(id *)arg6;
@property(retain, nonatomic) XCSValidator *validator; // @synthesize validator=_validator;
@property(nonatomic) BOOL requiresUpgrade; // @synthesize requiresUpgrade=_requiresUpgrade;
@property(retain, nonatomic) XCSBotSCMBlueprint *lastRevisionBlueprint; // @synthesize lastRevisionBlueprint=_lastRevisionBlueprint;
@property(retain, nonatomic) NSArray *groups; // @synthesize groups=_groups;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSDictionary *botSCMBlueprintAsDictionary;
- (void)newestNonFatalIntegrationWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)newestIntegrationWithCompletionBlock:(CDUnknownBlockType)arg1;
- (BOOL)_validateID:(id)arg1 name:(id)arg2 group:(id)arg3 type:(unsigned long long)arg4 configuration:(id)arg5 lastRevisionBlueprint:(id)arg6;
- (id)_initWithID:(id)arg1 rev:(id)arg2 tinyID:(id)arg3 docType:(id)arg4 name:(id)arg5 group:(id)arg6 type:(unsigned long long)arg7 configuration:(id)arg8 lastRevisionBlueprint:(id)arg9 service:(id)arg10 requiresUpgrade:(BOOL)arg11 validationErrors:(id *)arg12;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)patchRepresentation;
- (id)saveRepresentationHumanReadable:(BOOL)arg1;
- (id)saveRepresentation;
- (id)dictionaryRepresentation;
- (id)description;
- (id)initWithContents:(id)arg1 service:(id)arg2 validationErrors:(id *)arg3;

// Remaining properties
@property(nonatomic) XCSBotConfiguration *configuration; // @dynamic configuration;
@property(retain, nonatomic) XCSBotGroup *group; // @dynamic group;
@property(copy, nonatomic) NSString *name; // @dynamic name;
@property(nonatomic) unsigned long long type; // @dynamic type;

@end

@interface XCSBotConfiguration : XCSObject
{
    XCSBotSCMBlueprint *sourceControlBlueprint;
    NSString *_userDescription;
}

+ (id)botConfigurationWithSchemeName:(id)arg1 buildConfiguration:(id)arg2 builtFromClean:(unsigned long long)arg3 performsAnalyzeAction:(BOOL)arg4 performsTestAction:(BOOL)arg5 performsArchiveAction:(BOOL)arg6 codeCoveragePreference:(unsigned long long)arg7 exportsProductFromArchive:(BOOL)arg8 triggers:(struct NSArray *)arg9 sourceControlBlueprint:(id)arg10 testingDestinationType:(unsigned long long)arg11 testingDeviceIDs:(id)arg12 deviceSpecification:(id)arg13 scheduleType:(unsigned long long)arg14 periodicScheduleInterval:(unsigned long long)arg15 weeklyScheduleDay:(long long)arg16 hourOfIntegration:(unsigned long long)arg17 minutesAfterHourToIntegrate:(unsigned long long)arg18 validationErrors:(id *)arg19;
@property(readonly, copy) NSString *userDescription; // @synthesize userDescription=_userDescription;
@property(retain) XCSBotSCMBlueprint *sourceControlBlueprint; // @synthesize sourceControlBlueprint;
- (void).cxx_destruct;
- (BOOL)_validateSchemeName:(id)arg1 buildConfiguration:(id)arg2 builtFromClean:(unsigned long long)arg3 performsAnalyzeAction:(BOOL)arg4 performsTestAction:(BOOL)arg5 performsArchiveAction:(BOOL)arg6 codeCoveragePreference:(unsigned long long)arg7 exportsProductFromArchive:(BOOL)arg8 triggers:(struct NSArray *)arg9 sourceControlBlueprint:(id)arg10 testingDestinationType:(unsigned long long)arg11 testingDeviceIDs:(id)arg12 deviceSpecification:(id)arg13 scheduleType:(unsigned long long)arg14 periodicScheduleInterval:(unsigned long long)arg15 weeklyScheduleDay:(long long)arg16 hourOfIntegration:(unsigned long long)arg17 minutesAfterHourToIntegrate:(unsigned long long)arg18 validationErrors:(id *)arg19;
- (id)initWithContents:(id)arg1 service:(id)arg2 validationErrors:(id *)arg3;
- (id)initWithSchemeName:(id)arg1 buildConfiguration:(id)arg2 builtFromClean:(unsigned long long)arg3 performsAnalyzeAction:(BOOL)arg4 performsTestAction:(BOOL)arg5 performsArchiveAction:(BOOL)arg6 codeCoveragePreference:(unsigned long long)arg7 exportsProductFromArchive:(BOOL)arg8 triggers:(struct NSArray *)arg9 sourceControlBlueprint:(id)arg10 testingDestinationType:(unsigned long long)arg11 testingDeviceIDs:(id)arg12 deviceSpecification:(id)arg13 scheduleType:(unsigned long long)arg14 periodicScheduleInterval:(unsigned long long)arg15 weeklyScheduleDay:(long long)arg16 hourOfIntegration:(unsigned long long)arg17 minutesAfterHourToIntegrate:(unsigned long long)arg18 validationErrors:(id *)arg19;
- (id)saveRepresentationHumanReadable:(BOOL)arg1;
- (id)saveRepresentation;
- (id)dictionaryRepresentation;
- (id)description;

// Remaining properties
@property NSString *buildConfiguration; // @dynamic buildConfiguration;
@property unsigned long long builtFromClean; // @dynamic builtFromClean;
@property unsigned long long codeCoveragePreference; // @dynamic codeCoveragePreference;
@property XCSDeviceSpecification *deviceSpecification; // @dynamic deviceSpecification;
@property BOOL exportsProductFromArchive; // @dynamic exportsProductFromArchive;
@property unsigned long long hourOfIntegration; // @dynamic hourOfIntegration;
@property unsigned long long minutesAfterHourToIntegrate; // @dynamic minutesAfterHourToIntegrate;
@property BOOL performsAnalyzeAction; // @dynamic performsAnalyzeAction;
@property BOOL performsArchiveAction; // @dynamic performsArchiveAction;
@property BOOL performsTestAction; // @dynamic performsTestAction;
@property unsigned long long periodicScheduleInterval; // @dynamic periodicScheduleInterval;
@property unsigned long long scheduleType; // @dynamic scheduleType;
@property(copy) NSString *schemeName; // @dynamic schemeName;
@property unsigned long long testingDestinationType; // @dynamic testingDestinationType;
@property NSArray *testingDeviceIDs; // @dynamic testingDeviceIDs;
@property NSArray *triggers; // @dynamic triggers;
@property long long weeklyScheduleDay; // @dynamic weeklyScheduleDay;

@end

@interface XCSBotGroup : XCSObject
{
}

+ (id)botGroupWithName:(id)arg1;
- (BOOL)_validateID:(id)arg1 name:(id)arg2;
- (id)saveRepresentationHumanReadable:(BOOL)arg1;
- (id)saveRepresentation;
- (id)dictionaryRepresentation;
- (id)description;
- (id)initWithContents:(id)arg1 service:(id)arg2 validationErrors:(id *)arg3;
- (id)_initWithID:(id)arg1 name:(id)arg2;
- (id)initWithName:(id)arg1;

// Remaining properties
@property(copy) NSString *name; // @dynamic name;

@end

@interface XCSBotIssue : XCSObject
{
    NSString *_botID;
    unsigned long long _type;
    NSString *_issueType;
    NSString *_message;
    NSString *_target;
    NSString *_testCase;
    NSString *_documentFilePath;
    NSString *_fixItType;
    NSArray *_streaks;
}

+ (id)botIssueWithBotID:(id)arg1 type:(unsigned long long)arg2 issueType:(id)arg3 message:(id)arg4 target:(id)arg5 testCase:(id)arg6 documentFilePath:(id)arg7 fixItType:(id)arg8 streaks:(id)arg9 validationErrors:(id *)arg10;
@property(readonly, nonatomic) NSArray *streaks; // @synthesize streaks=_streaks;
@property(readonly, nonatomic) NSString *fixItType; // @synthesize fixItType=_fixItType;
@property(readonly, nonatomic) NSString *documentFilePath; // @synthesize documentFilePath=_documentFilePath;
@property(readonly, nonatomic) NSString *testCase; // @synthesize testCase=_testCase;
@property(readonly, nonatomic) NSString *target; // @synthesize target=_target;
@property(readonly, nonatomic) NSString *message; // @synthesize message=_message;
@property(readonly, nonatomic) NSString *issueType; // @synthesize issueType=_issueType;
@property(readonly, nonatomic) unsigned long long type; // @synthesize type=_type;
@property(readonly, nonatomic) NSString *botID; // @synthesize botID=_botID;
- (void).cxx_destruct;
- (BOOL)_validateBotID:(id)arg1 type:(unsigned long long)arg2 issueType:(id)arg3 message:(id)arg4 target:(id)arg5 testCase:(id)arg6 documentFilePath:(id)arg7 fixItType:(id)arg8 streaks:(id)arg9 validationErrors:(id *)arg10;
- (id)saveRepresentation;
- (id)dictionaryRepresentation;
- (id)initWithContents:(id)arg1 service:(id)arg2 validationErrors:(id *)arg3;
- (id)initWithBotID:(id)arg1 type:(unsigned long long)arg2 issueType:(id)arg3 message:(id)arg4 target:(id)arg5 testCase:(id)arg6 documentFilePath:(id)arg7 fixItType:(id)arg8 streaks:(id)arg9 validationErrors:(id *)arg10;

@end

@interface XCSBotIssueStreak : XCSObject
{
    BOOL _open;
    NSArray *_records;
}

+ (id)issueStreakWithRecords:(id)arg1 open:(BOOL)arg2 validationErrors:(id *)arg3;
@property(readonly, nonatomic) NSArray *records; // @synthesize records=_records;
@property(readonly, nonatomic, getter=isOpen) BOOL open; // @synthesize open=_open;
- (void).cxx_destruct;
- (BOOL)_validateRecords:(id)arg1 validationErrors:(id *)arg2;
- (id)initWithContents:(id)arg1 service:(id)arg2 validationErrors:(id *)arg3;
- (id)initWithRecords:(id)arg1 open:(BOOL)arg2 validationErrors:(id *)arg3;

@end

@interface XCSBotIssueStreakRecord : XCSObject
{
    NSString *_integrationID;
    unsigned long long _integrationNumber;
    NSString *_message;
    NSArray *_commits;
}

+ (id)issueStreakRecordWithIntegrationID:(id)arg1 integrationNumber:(unsigned long long)arg2 message:(id)arg3 commits:(id)arg4 validationErrors:(id *)arg5;
@property(readonly, nonatomic) NSArray *commits; // @synthesize commits=_commits;
@property(readonly, nonatomic) NSString *message; // @synthesize message=_message;
@property(readonly, nonatomic) unsigned long long integrationNumber; // @synthesize integrationNumber=_integrationNumber;
@property(readonly, nonatomic) NSString *integrationID; // @synthesize integrationID=_integrationID;
- (void).cxx_destruct;
- (BOOL)_validateIntegrationID:(id)arg1 integrationNumber:(unsigned long long)arg2 message:(id)arg3 commits:(id)arg4 validationErrors:(id *)arg5;
- (id)initWithContents:(id)arg1 service:(id)arg2 validationErrors:(id *)arg3;
- (id)initWithIntegrationID:(id)arg1 integrationNumber:(unsigned long long)arg2 message:(id)arg3 commits:(id)arg4 validationErrors:(id *)arg5;

@end

@interface XCSBotSCMBlueprint : XCSObject
{
    NSDictionary *sourceControlBlueprint;
}

+ (id)blueprintWithContents:(id)arg1 validationErrors:(id *)arg2;
@property(retain, nonatomic) NSDictionary *sourceControlBlueprint; // @synthesize sourceControlBlueprint;
- (void).cxx_destruct;
- (BOOL)_validateWithContents:(id)arg1 validationErrors:(id *)arg2;
- (id)saveRepresentationHumanReadable:(BOOL)arg1;
- (id)saveRepresentation;
- (id)dictionaryRepresentation;
- (id)description;
- (id)initWithContents:(id)arg1 service:(id)arg2 validationErrors:(id *)arg3;

@end

@interface XCSBotStats : XCSObject
{
    NSDate *_requestedDate;
    unsigned long long _requestedDateType;
    NSString *_lastCleanIntegrationID;
    NSDate *_lastCleanIntegrationDate;
    NSString *_bestSuccessStreakIntegrationID;
    NSNumber *_bestSuccessStreakCounter;
    NSDate *_bestSuccessStreakIntegrationDate;
    NSNumber *_numberOfIntegrations;
    NSNumber *_numberOfCommits;
    NSNumber *_integrationTimeAverage;
    NSNumber *_integrationTimeCount;
    NSNumber *_integrationTimeMaximum;
    NSNumber *_integrationTimeMinimum;
    NSNumber *_integrationTimeStdDev;
    NSNumber *_testAdditionRate;
    NSNumber *_analysisWarningAverage;
    NSNumber *_analysisWarningCount;
    NSNumber *_analysisWarningMaximum;
    NSNumber *_analysisWarningMinimum;
    NSNumber *_analysisWarningStdDev;
    NSNumber *_testFailureAverage;
    NSNumber *_testFailureCount;
    NSNumber *_testFailureMaximum;
    NSNumber *_testFailureMinimum;
    NSNumber *_testFailureStdDev;
    NSNumber *_errorAverage;
    NSNumber *_errorCount;
    NSNumber *_errorMaximum;
    NSNumber *_errorMinimum;
    NSNumber *_errorStdDev;
    NSNumber *_regressedPerfTestAverage;
    NSNumber *_regressedPerfTestCount;
    NSNumber *_regressedPerfTestMaximum;
    NSNumber *_regressedPerfTestMinimum;
    NSNumber *_regressedPerfTestStdDev;
    NSNumber *_warningAverage;
    NSNumber *_warningCount;
    NSNumber *_warningMaximum;
    NSNumber *_warningMinimum;
    NSNumber *_warningStdDev;
    NSNumber *_improvedPerfTestAverage;
    NSNumber *_improvedPerfTestCount;
    NSNumber *_improvedPerfTestMaximum;
    NSNumber *_improvedPerfTestMinimum;
    NSNumber *_improvedPerfTestStdDev;
    NSNumber *_testsAverage;
    NSNumber *_testsCount;
    NSNumber *_testsMaximum;
    NSNumber *_testsMinimum;
    NSNumber *_testsStdDev;
    NSNumber *_codeCoveragePercentageDelta;
}

@property(retain, nonatomic) NSNumber *codeCoveragePercentageDelta; // @synthesize codeCoveragePercentageDelta=_codeCoveragePercentageDelta;
@property(retain, nonatomic) NSNumber *testsStdDev; // @synthesize testsStdDev=_testsStdDev;
@property(retain, nonatomic) NSNumber *testsMinimum; // @synthesize testsMinimum=_testsMinimum;
@property(retain, nonatomic) NSNumber *testsMaximum; // @synthesize testsMaximum=_testsMaximum;
@property(retain, nonatomic) NSNumber *testsCount; // @synthesize testsCount=_testsCount;
@property(retain, nonatomic) NSNumber *testsAverage; // @synthesize testsAverage=_testsAverage;
@property(retain, nonatomic) NSNumber *improvedPerfTestStdDev; // @synthesize improvedPerfTestStdDev=_improvedPerfTestStdDev;
@property(retain, nonatomic) NSNumber *improvedPerfTestMinimum; // @synthesize improvedPerfTestMinimum=_improvedPerfTestMinimum;
@property(retain, nonatomic) NSNumber *improvedPerfTestMaximum; // @synthesize improvedPerfTestMaximum=_improvedPerfTestMaximum;
@property(retain, nonatomic) NSNumber *improvedPerfTestCount; // @synthesize improvedPerfTestCount=_improvedPerfTestCount;
@property(retain, nonatomic) NSNumber *improvedPerfTestAverage; // @synthesize improvedPerfTestAverage=_improvedPerfTestAverage;
@property(retain, nonatomic) NSNumber *warningStdDev; // @synthesize warningStdDev=_warningStdDev;
@property(retain, nonatomic) NSNumber *warningMinimum; // @synthesize warningMinimum=_warningMinimum;
@property(retain, nonatomic) NSNumber *warningMaximum; // @synthesize warningMaximum=_warningMaximum;
@property(retain, nonatomic) NSNumber *warningCount; // @synthesize warningCount=_warningCount;
@property(retain, nonatomic) NSNumber *warningAverage; // @synthesize warningAverage=_warningAverage;
@property(retain, nonatomic) NSNumber *regressedPerfTestStdDev; // @synthesize regressedPerfTestStdDev=_regressedPerfTestStdDev;
@property(retain, nonatomic) NSNumber *regressedPerfTestMinimum; // @synthesize regressedPerfTestMinimum=_regressedPerfTestMinimum;
@property(retain, nonatomic) NSNumber *regressedPerfTestMaximum; // @synthesize regressedPerfTestMaximum=_regressedPerfTestMaximum;
@property(retain, nonatomic) NSNumber *regressedPerfTestCount; // @synthesize regressedPerfTestCount=_regressedPerfTestCount;
@property(retain, nonatomic) NSNumber *regressedPerfTestAverage; // @synthesize regressedPerfTestAverage=_regressedPerfTestAverage;
@property(retain, nonatomic) NSNumber *errorStdDev; // @synthesize errorStdDev=_errorStdDev;
@property(retain, nonatomic) NSNumber *errorMinimum; // @synthesize errorMinimum=_errorMinimum;
@property(retain, nonatomic) NSNumber *errorMaximum; // @synthesize errorMaximum=_errorMaximum;
@property(retain, nonatomic) NSNumber *errorCount; // @synthesize errorCount=_errorCount;
@property(retain, nonatomic) NSNumber *errorAverage; // @synthesize errorAverage=_errorAverage;
@property(retain, nonatomic) NSNumber *testFailureStdDev; // @synthesize testFailureStdDev=_testFailureStdDev;
@property(retain, nonatomic) NSNumber *testFailureMinimum; // @synthesize testFailureMinimum=_testFailureMinimum;
@property(retain, nonatomic) NSNumber *testFailureMaximum; // @synthesize testFailureMaximum=_testFailureMaximum;
@property(retain, nonatomic) NSNumber *testFailureCount; // @synthesize testFailureCount=_testFailureCount;
@property(retain, nonatomic) NSNumber *testFailureAverage; // @synthesize testFailureAverage=_testFailureAverage;
@property(retain, nonatomic) NSNumber *analysisWarningStdDev; // @synthesize analysisWarningStdDev=_analysisWarningStdDev;
@property(retain, nonatomic) NSNumber *analysisWarningMinimum; // @synthesize analysisWarningMinimum=_analysisWarningMinimum;
@property(retain, nonatomic) NSNumber *analysisWarningMaximum; // @synthesize analysisWarningMaximum=_analysisWarningMaximum;
@property(retain, nonatomic) NSNumber *analysisWarningCount; // @synthesize analysisWarningCount=_analysisWarningCount;
@property(retain, nonatomic) NSNumber *analysisWarningAverage; // @synthesize analysisWarningAverage=_analysisWarningAverage;
@property(retain, nonatomic) NSNumber *testAdditionRate; // @synthesize testAdditionRate=_testAdditionRate;
@property(retain, nonatomic) NSNumber *integrationTimeStdDev; // @synthesize integrationTimeStdDev=_integrationTimeStdDev;
@property(retain, nonatomic) NSNumber *integrationTimeMinimum; // @synthesize integrationTimeMinimum=_integrationTimeMinimum;
@property(retain, nonatomic) NSNumber *integrationTimeMaximum; // @synthesize integrationTimeMaximum=_integrationTimeMaximum;
@property(retain, nonatomic) NSNumber *integrationTimeCount; // @synthesize integrationTimeCount=_integrationTimeCount;
@property(retain, nonatomic) NSNumber *integrationTimeAverage; // @synthesize integrationTimeAverage=_integrationTimeAverage;
@property(retain, nonatomic) NSNumber *numberOfCommits; // @synthesize numberOfCommits=_numberOfCommits;
@property(retain, nonatomic) NSNumber *numberOfIntegrations; // @synthesize numberOfIntegrations=_numberOfIntegrations;
@property(retain, nonatomic) NSDate *bestSuccessStreakIntegrationDate; // @synthesize bestSuccessStreakIntegrationDate=_bestSuccessStreakIntegrationDate;
@property(retain, nonatomic) NSNumber *bestSuccessStreakCounter; // @synthesize bestSuccessStreakCounter=_bestSuccessStreakCounter;
@property(retain, nonatomic) NSString *bestSuccessStreakIntegrationID; // @synthesize bestSuccessStreakIntegrationID=_bestSuccessStreakIntegrationID;
@property(retain, nonatomic) NSDate *lastCleanIntegrationDate; // @synthesize lastCleanIntegrationDate=_lastCleanIntegrationDate;
@property(retain, nonatomic) NSString *lastCleanIntegrationID; // @synthesize lastCleanIntegrationID=_lastCleanIntegrationID;
@property(nonatomic) unsigned long long requestedDateType; // @synthesize requestedDateType=_requestedDateType;
@property(retain, nonatomic) NSDate *requestedDate; // @synthesize requestedDate=_requestedDate;
- (void).cxx_destruct;
- (BOOL)_validateWithContents:(id)arg1 validationErrors:(id *)arg2;
- (id)description;
- (id)initWithContents:(id)arg1 service:(id)arg2 validationErrors:(id *)arg3;

@end

@interface XCSBranch : XCSObject
{
    BOOL _primary;
    NSString *_name;
}

@property(readonly, getter=isPrimary) BOOL primary; // @synthesize primary=_primary;
@property(readonly, copy) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (id)dictionaryRepresentation;
- (BOOL)_validateName:(id)arg1 validationErrors:(id *)arg2;
- (id)initWithContents:(id)arg1 service:(id)arg2 validationErrors:(id *)arg3;
- (id)initWithName:(id)arg1 isPrimary:(BOOL)arg2 validationErrors:(id *)arg3;

@end

@interface XCSBuildResultSummary : XCSObject
{
    long long _analyzerWarningCount;
    long long _analyzerWarningChange;
    long long _warningCount;
    long long _warningChange;
    long long _errorCount;
    long long _errorChange;
    long long _testsCount;
    long long _testsChange;
    long long _testFailureCount;
    long long _testFailureChange;
    long long _improvedPerfTestCount;
    long long _regressedPerfTestCount;
    long long _codeCoveragePercentage;
    long long _codeCoveragePercentageDelta;
}

+ (id)summaryWithAnalyzerWarningCount:(long long)arg1 warningCount:(long long)arg2 errorCount:(long long)arg3 testsCount:(long long)arg4 testFailureCount:(long long)arg5 codeCoveragePercentage:(long long)arg6 previousResults:(id)arg7 validationErrors:(id *)arg8;
@property(nonatomic) long long codeCoveragePercentageDelta; // @synthesize codeCoveragePercentageDelta=_codeCoveragePercentageDelta;
@property(nonatomic) long long codeCoveragePercentage; // @synthesize codeCoveragePercentage=_codeCoveragePercentage;
@property(nonatomic) long long regressedPerfTestCount; // @synthesize regressedPerfTestCount=_regressedPerfTestCount;
@property(nonatomic) long long improvedPerfTestCount; // @synthesize improvedPerfTestCount=_improvedPerfTestCount;
@property(nonatomic) long long testFailureChange; // @synthesize testFailureChange=_testFailureChange;
@property(nonatomic) long long testFailureCount; // @synthesize testFailureCount=_testFailureCount;
@property(nonatomic) long long testsChange; // @synthesize testsChange=_testsChange;
@property(nonatomic) long long testsCount; // @synthesize testsCount=_testsCount;
@property(nonatomic) long long errorChange; // @synthesize errorChange=_errorChange;
@property(nonatomic) long long errorCount; // @synthesize errorCount=_errorCount;
@property(nonatomic) long long warningChange; // @synthesize warningChange=_warningChange;
@property(nonatomic) long long warningCount; // @synthesize warningCount=_warningCount;
@property(nonatomic) long long analyzerWarningChange; // @synthesize analyzerWarningChange=_analyzerWarningChange;
@property(nonatomic) long long analyzerWarningCount; // @synthesize analyzerWarningCount=_analyzerWarningCount;
- (long long)calculateIntegrationResult;
- (id)description;
- (id)saveRepresentation;
- (id)dictionaryRepresentation;
- (id)initWithContents:(id)arg1 service:(id)arg2 validationErrors:(id *)arg3;
- (id)initWithAnalyzerWarningCount:(long long)arg1 analyzerWarningChange:(long long)arg2 warningCount:(long long)arg3 warningChange:(long long)arg4 errorCount:(long long)arg5 errorChange:(long long)arg6 testsCount:(long long)arg7 testsChange:(long long)arg8 testFailureCount:(long long)arg9 testFailureChange:(long long)arg10 improvedPerfTestCount:(long long)arg11 regressedPerfTestCount:(long long)arg12 codeCoveragePercentage:(long long)arg13 codeCoveragePercentageDelta:(long long)arg14 validationErrors:(id *)arg15;

@end

@interface XCSCodeCoverageObject : XCSObject
{
    NSMutableArray *codeCoverageDevices;
    NSString *_title;
    NSNumber *_lineCoveragePercentageAggregate;
    NSNumber *_lineCoveragePercentageDeltaAggregate;
    id _parent;
}

@property(nonatomic) __weak id parent; // @synthesize parent=_parent;
@property(retain, nonatomic) NSNumber *lineCoveragePercentageDeltaAggregate; // @synthesize lineCoveragePercentageDeltaAggregate=_lineCoveragePercentageDeltaAggregate;
@property(retain, nonatomic) NSNumber *lineCoveragePercentageAggregate; // @synthesize lineCoveragePercentageAggregate=_lineCoveragePercentageAggregate;
@property(copy, nonatomic) NSString *title; // @synthesize title=_title;
- (void).cxx_destruct;
- (id)_deviceTinyIDs;
- (void)_bindHierarchyWithIntegration:(id)arg1 parentObject:(id)arg2;
- (BOOL)_validateWithDevice:(id)arg1 lineCoveragePercentage:(id)arg2 lineCoveragePercentageDelta:(id)arg3 validationErrors:(id *)arg4;
- (BOOL)_validateWithTitle:(id)arg1 lineCoveragePercentage:(id)arg2 lineCoveragePercentageDelta:(id)arg3 devices:(id)arg4 validationErrors:(id *)arg5;
- (id)description;
- (id)saveRepresentationHumanReadable:(BOOL)arg1 discardDeviceData:(BOOL)arg2;
- (id)saveRepresentationHumanReadable:(BOOL)arg1;
- (id)saveRepresentation;
- (id)dictionaryRepresentation;
- (BOOL)setDeviceCoverage:(id)arg1 lineCoveragePercentage:(id)arg2 lineCoveragePercentageDelta:(id)arg3 validationErrors:(id *)arg4;
@property(readonly, nonatomic) NSArray *codeCoverageDevices;
@property(readonly, nonatomic) unsigned long long count;
@property(readonly, nonatomic) XCSCodeCoverageKeyPath *keyPath;
- (id)_initWithTitle:(id)arg1 lineCoveragePercentage:(id)arg2 lineCoveragePercentageDelta:(id)arg3 devices:(id)arg4 validationErrors:(id *)arg5;
- (id)initWithContents:(id)arg1 service:(id)arg2 validationErrors:(id *)arg3;

@end

@interface XCSCodeCoverageDevice : XCSCodeCoverageObject
{
    XCSDevice *_device;
    XCSCodeCoverageIntegration *_integration;
    NSString *_deviceTinyID;
}

@property(copy, nonatomic) NSString *deviceTinyID; // @synthesize deviceTinyID=_deviceTinyID;
@property(retain, nonatomic) XCSCodeCoverageIntegration *integration; // @synthesize integration=_integration;
@property(retain, nonatomic) XCSDevice *device; // @synthesize device=_device;
- (void).cxx_destruct;
- (void)_bindHierarchyWithIntegration:(id)arg1 parentObject:(id)arg2;
- (BOOL)_validateWithDeviceTinyID:(id)arg1 validationErrors:(id *)arg2;
- (id)saveRepresentationHumanReadable:(BOOL)arg1;
- (id)saveRepresentation;
- (id)ccifRepresentation;
- (id)ccimRepresentation;
- (id)dictionaryRepresentation;
@property(readonly, nonatomic) NSNumber *lineCoveragePercentage;
- (id)keyPath;
- (id)_initWithDeviceTinyID:(id)arg1 validationErrors:(id *)arg2;
- (id)initWithContents:(id)arg1 service:(id)arg2 validationErrors:(id *)arg3;

@end

@interface XCSCodeCoverageFile : XCSCodeCoverageObject
{
    BOOL _hasBeenResolved;
    NSArray *_methods;
    NSString *_documentLocation;
}

@property(nonatomic) BOOL hasBeenResolved; // @synthesize hasBeenResolved=_hasBeenResolved;
@property(copy, nonatomic) NSString *documentLocation; // @synthesize documentLocation=_documentLocation;
@property(retain, nonatomic) NSArray *methods; // @synthesize methods=_methods;
- (void).cxx_destruct;
- (id)_deviceTinyIDs;
- (void)_bindHierarchyWithIntegration:(id)arg1 parentObject:(id)arg2;
- (BOOL)_validateWithMethods:(id)arg1 documentLocation:(id)arg2 validationErrors:(id *)arg3;
- (id)ccifRepresentation;
- (id)saveRepresentationHumanReadable:(BOOL)arg1;
- (id)saveRepresentation;
- (id)ccimRepresentation;
- (id)dictionaryRepresentation;
- (unsigned long long)count;
- (id)keyPath;
- (id)_initWithMethods:(id)arg1 documentLocation:(id)arg2 validationErrors:(id *)arg3;
- (id)initWithContents:(id)arg1 service:(id)arg2 validationErrors:(id *)arg3;
- (id)initWithTitle:(id)arg1 methods:(id)arg2 documentLocation:(id)arg3;
- (id)init;

@end

@interface XCSCodeCoverageIntegration : XCSCodeCoverageObject
{
    NSString *_integrationID;
    unsigned long long _integrationNumber;
    NSArray *_targets;
    NSDictionary *_deviceMap;
}

@property(retain, nonatomic) NSDictionary *deviceMap; // @synthesize deviceMap=_deviceMap;
@property(retain, nonatomic) NSArray *targets; // @synthesize targets=_targets;
@property(nonatomic) unsigned long long integrationNumber; // @synthesize integrationNumber=_integrationNumber;
@property(copy, nonatomic) NSString *integrationID; // @synthesize integrationID=_integrationID;
- (void).cxx_destruct;
- (id)_targetWithTitle:(id)arg1;
- (id)_deviceTinyIDs;
- (void)_bindHierarchy;
- (unsigned long long)_deviceCount;
- (id)_deviceWithTinyID:(id)arg1;
- (void)_setDevices:(id)arg1;
- (BOOL)_validateWithIntegrationID:(id)arg1 integrationNumber:(unsigned long long)arg2 targets:(id)arg3 devices:(id)arg4 validationErrors:(id *)arg5;
- (BOOL)_validateWithIntegrationID:(id)arg1 validationErrors:(id *)arg2;
- (void)importUsingService:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)splitIntegrationForImportWithError:(id *)arg1;
- (id)saveRepresentationHumanReadable:(BOOL)arg1;
- (id)saveRepresentation;
- (id)ccifRepresentation;
- (id)ccimRepresentation;
- (id)dictionaryRepresentation;
- (BOOL)setDeviceCoverage:(id)arg1 lineCoveragePercentage:(id)arg2 lineCoveragePercentageDelta:(id)arg3 validationErrors:(id *)arg4;
- (unsigned long long)count;
- (id)keyPath;
@property(readonly, nonatomic) NSArray *devices;
- (id)_initWithIntegrationID:(id)arg1 integrationNumber:(unsigned long long)arg2 targets:(id)arg3 devices:(id)arg4 validationErrors:(id *)arg5;
- (id)initWithContents:(id)arg1 service:(id)arg2 validationErrors:(id *)arg3;
- (id)initWithIntegrationID:(id)arg1 integrationNumber:(unsigned long long)arg2 targets:(id)arg3 devices:(id)arg4 validationErrors:(id *)arg5;

@end

@interface XCSCodeCoverageKeyPath : NSObject
{
    NSString *_integrationID;
    NSString *_targetTitle;
    NSString *_fileTitle;
    NSString *_methodTitle;
    NSString *_deviceTitle;
}

@property(copy, nonatomic) NSString *deviceTitle; // @synthesize deviceTitle=_deviceTitle;
@property(copy, nonatomic) NSString *methodTitle; // @synthesize methodTitle=_methodTitle;
@property(copy, nonatomic) NSString *fileTitle; // @synthesize fileTitle=_fileTitle;
@property(copy, nonatomic) NSString *targetTitle; // @synthesize targetTitle=_targetTitle;
@property(copy, nonatomic) NSString *integrationID; // @synthesize integrationID=_integrationID;
- (void).cxx_destruct;
- (BOOL)_validateWithIntegrationID:(id)arg1 targetTitle:(id)arg2 fileTitle:(id)arg3 methodTitle:(id)arg4 deviceTitle:(id)arg5 validationErrors:(id *)arg6;
- (id)description;
@property(readonly, copy, nonatomic) NSArray *keyPathComponents;
- (id)initWithIntegrationID:(id)arg1 targetTitle:(id)arg2 fileTitle:(id)arg3 methodTitle:(id)arg4 deviceTitle:(id)arg5 validationErrors:(id *)arg6;
- (id)initWithCodeCoverageKeyPath:(id)arg1 validationErrors:(id *)arg2;

@end

@interface XCSCodeCoverageMethod : XCSCodeCoverageObject
{
    unsigned long long _symbolValue;
}

+ (id)_enumRepresentationToSourceCodeSymbolKindIdentifier:(id)arg1;
+ (id)_sourceCodeSymbolKindIdentifierToEnumRepresentation:(id)arg1;
+ (id)_sourceCodeSymbolKindPrefix;
+ (void)initialize;
@property(nonatomic) unsigned long long symbolValue; // @synthesize symbolValue=_symbolValue;
- (void)_bindHierarchyWithIntegration:(id)arg1 parentObject:(id)arg2;
- (BOOL)_validateWithSourceCodeSymbolKindIdentifier:(id)arg1 validationErrors:(id *)arg2;
- (id)ccifRepresentation;
- (id)saveRepresentationHumanReadable:(BOOL)arg1;
- (id)saveRepresentation;
- (id)ccimRepresentation;
- (id)dictionaryRepresentation;
- (unsigned long long)count;
- (id)keyPath;
@property(readonly, copy, nonatomic) NSString *sourceCodeSymbolKindIdentifier;
- (id)_initWithSourceCodeSymbolKindIdentifier:(id)arg1 validationErrors:(id *)arg2;
- (id)initWithContents:(id)arg1 service:(id)arg2 validationErrors:(id *)arg3;
- (id)initWithTitle:(id)arg1 sourceCodeSymbolKindIdentifier:(id)arg2;
- (id)init;

@end

@interface XCSCodeCoverageTarget : XCSCodeCoverageObject
{
    NSArray *_files;
}

@property(retain, nonatomic) NSArray *files; // @synthesize files=_files;
- (void).cxx_destruct;
- (id)_deviceTinyIDs;
- (void)_bindHierarchyWithIntegration:(id)arg1 parentObject:(id)arg2;
- (BOOL)_validateWithFiles:(id)arg1 validationErrors:(id *)arg2;
- (id)saveRepresentationHumanReadable:(BOOL)arg1;
- (id)saveRepresentation;
- (id)ccifRepresentation;
- (id)ccimRepresentation;
- (id)dictionaryRepresentation;
- (unsigned long long)count;
- (id)keyPath;
- (id)_initWithFiles:(id)arg1 validationErrors:(id *)arg2;
- (id)initWithContents:(id)arg1 service:(id)arg2 validationErrors:(id *)arg3;
- (id)initWithTitle:(id)arg1 files:(id)arg2;
- (id)init;

@end

@interface XCSCommit : XCSObject
{
    XCSCommitHistory *_commitHistory;
    XCSContributor *_contributor;
    NSString *_message;
    NSDate *_timestamp;
    NSString *_scmRevision;
    NSString *_blueprintRepositoryID;
    struct NSArray *_commitChangeFilePaths;
}

+ (id)commitWithContributor:(id)arg1 message:(id)arg2 timestamp:(id)arg3 scmRevision:(id)arg4 blueprintRepositoryID:(id)arg5 commitChangeFilePaths:(struct NSArray *)arg6 validationErrors:(id *)arg7;
@property(retain, nonatomic) NSArray *commitChangeFilePaths; // @synthesize commitChangeFilePaths=_commitChangeFilePaths;
@property(copy, nonatomic) NSString *blueprintRepositoryID; // @synthesize blueprintRepositoryID=_blueprintRepositoryID;
@property(copy, nonatomic) NSString *scmRevision; // @synthesize scmRevision=_scmRevision;
@property(copy, nonatomic) NSDate *timestamp; // @synthesize timestamp=_timestamp;
@property(copy, nonatomic) NSString *message; // @synthesize message=_message;
@property(retain, nonatomic) XCSContributor *contributor; // @synthesize contributor=_contributor;
@property(retain, nonatomic) XCSCommitHistory *commitHistory; // @synthesize commitHistory=_commitHistory;
- (void).cxx_destruct;
- (BOOL)_validateWithContributor:(id)arg1 message:(id)arg2 timestamp:(id)arg3 scmRevision:(id)arg4 blueprintRepositoryID:(id)arg5 commitChangeFilePaths:(struct NSArray *)arg6 validationErrors:(id *)arg7;
- (id)saveRepresentationHumanReadable:(BOOL)arg1;
- (id)saveRepresentation;
- (id)dictionaryRepresentation;
- (id)description;
- (id)initWithContents:(id)arg1 service:(id)arg2 validationErrors:(id *)arg3;
- (id)_initWithID:(id)arg1 contributor:(id)arg2 message:(id)arg3 timestamp:(id)arg4 scmRevision:(id)arg5 blueprintRepositoryID:(id)arg6 commitChangeFilePaths:(struct NSArray *)arg7 validationErrors:(id *)arg8;
- (id)initWithContributor:(id)arg1 message:(id)arg2 timestamp:(id)arg3 scmRevision:(id)arg4 blueprintRepositoryID:(id)arg5 commitChangeFilePaths:(struct NSArray *)arg6 validationErrors:(id *)arg7;

@end

@interface XCSCommitChangeFilePath : XCSObject
{
    NSString *_filePath;
    unsigned long long _status;
}

+ (id)commitChangeWithFilePath:(id)arg1 status:(unsigned long long)arg2 validationErrors:(id *)arg3;
@property(nonatomic) unsigned long long status; // @synthesize status=_status;
@property(copy, nonatomic) NSString *filePath; // @synthesize filePath=_filePath;
- (void).cxx_destruct;
- (id)saveRepresentationHumanReadable:(BOOL)arg1;
- (id)saveRepresentation;
- (id)dictionaryRepresentation;
- (id)description;
- (id)initWithContents:(id)arg1 validationErrors:(id *)arg2;
- (id)initWithFilePath:(id)arg1 status:(unsigned long long)arg2 validationErrors:(id *)arg3;

@end

@interface XCSCommitHistory : XCSObject
{
    NSArray *_committers;
    XCSContributor *_topCommitter;
    NSArray *_commits;
    XCSCommit *_commitHistory;
    NSArray *_sortedContributors;
}

@property(retain, nonatomic) NSArray *sortedContributors; // @synthesize sortedContributors=_sortedContributors;
@property(retain, nonatomic) XCSCommit *commitHistory; // @synthesize commitHistory=_commitHistory;
@property(retain, nonatomic) NSArray *commits; // @synthesize commits=_commits;
@property(retain, nonatomic) XCSContributor *topCommitter; // @synthesize topCommitter=_topCommitter;
@property(retain, nonatomic) NSArray *committers; // @synthesize committers=_committers;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSArray *committersOrderedByFilesChanged;
- (BOOL)_validateWithCommits:(struct NSArray *)arg1 validationErrors:(id *)arg2;
- (id)saveRepresentationHumanReadable:(BOOL)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)initWithCommits:(struct NSArray *)arg1 validationErrors:(id *)arg2;
- (id)initWithContents:(id)arg1 service:(id)arg2 validationErrors:(id *)arg3;

@end

@interface XCSCompressedArchive : NSObject
{
    NSString *_archivePath;
    NSArray *_archiveListing;
}

+ (BOOL)isValidArchive:(id)arg1;
+ (id)typeOfArchive:(id)arg1;
- (void).cxx_destruct;
- (id)taskArgsForExtractionOfFile:(id)arg1;
- (id)taskArgsForArchiveExtraction;
- (id)taskArgsForArchiveListing;
- (void)extractFile:(id)arg1 toFolder:(id)arg2;
- (void)extractAllToFolder:(id)arg1;
@property(readonly) NSArray *filenames;
@property(readonly) unsigned long long count;
- (void)generateListingIfNeeded;
@property(readonly) BOOL isValidArchive;
@property(readonly) NSString *typeOfArchive;
- (id)initWithPath:(id)arg1;

@end

@interface XCSContributor : XCSObject
{
    XCSCommit *_commit;
    NSString *_name;
    NSString *_displayName;
    NSArray *_emails;
}

+ (id)contributorWithName:(id)arg1 displayName:(id)arg2 emails:(id)arg3 validationErrors:(id *)arg4;
@property(retain, nonatomic) NSArray *emails; // @synthesize emails=_emails;
@property(copy, nonatomic) NSString *displayName; // @synthesize displayName=_displayName;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(retain, nonatomic) XCSCommit *commit; // @synthesize commit=_commit;
- (void).cxx_destruct;
- (BOOL)_validateWithName:(id)arg1 displayName:(id)arg2 emails:(id)arg3 validationErrors:(id *)arg4;
- (id)saveRepresentationHumanReadable:(BOOL)arg1;
- (id)saveRepresentation;
- (id)dictionaryRepresentation;
- (id)description;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)initWithContents:(id)arg1 service:(id)arg2 validationErrors:(id *)arg3;
- (id)initWithName:(id)arg1 displayName:(id)arg2 emails:(id)arg3 validationErrors:(id *)arg4;

@end

@interface XCSCore : NSObject
{
}

@end

@interface XCSDevice : XCSObject
{
}

+ (id)deviceWithName:(id)arg1 identifier:(id)arg2 deviceUDID:(id)arg3 deviceECID:(id)arg4 serialNumber:(id)arg5 deviceType:(id)arg6 modelName:(id)arg7 modelCode:(id)arg8 architecture:(id)arg9 osVersion:(id)arg10 processor:(id)arg11 modelUTI:(id)arg12 platformIdentifier:(id)arg13 isSimulator:(BOOL)arg14 displaySize:(id)arg15 isRetina:(BOOL)arg16 isConnected:(BOOL)arg17 isSupported:(BOOL)arg18 isTrusted:(BOOL)arg19 enabledForDevelopment:(BOOL)arg20 activeProxiedDevice:(id)arg21 validationErrors:(id *)arg22;
- (BOOL)_validateName:(id)arg1 identifier:(id)arg2 deviceUDID:(id)arg3 deviceECID:(id)arg4 serialNumber:(id)arg5 deviceType:(id)arg6 modelName:(id)arg7 modelCode:(id)arg8 architecture:(id)arg9 osVersion:(id)arg10 processor:(id)arg11 modelUTI:(id)arg12 platformIdentifier:(id)arg13 isSimulator:(BOOL)arg14 displaySize:(id)arg15 isRetina:(BOOL)arg16 isConnected:(BOOL)arg17 isSupported:(BOOL)arg18 enabledForDevelopment:(BOOL)arg19 activeProxiedDevice:(id)arg20 validationErrors:(id *)arg21;
- (long long)architectureType;
- (id)saveRepresentationHumanReadable:(BOOL)arg1;
- (id)saveRepresentation;
- (id)dictionaryRepresentation;
- (id)description;
- (id)initWithContents:(id)arg1 service:(id)arg2 validationErrors:(id *)arg3;
- (id)initWithName:(id)arg1 identifier:(id)arg2 deviceUDID:(id)arg3 deviceECID:(id)arg4 serialNumber:(id)arg5 deviceType:(id)arg6 modelName:(id)arg7 modelCode:(id)arg8 architecture:(id)arg9 osVersion:(id)arg10 processor:(id)arg11 modelUTI:(id)arg12 platformIdentifier:(id)arg13 isSimulator:(BOOL)arg14 displaySize:(id)arg15 isRetina:(BOOL)arg16 isConnected:(BOOL)arg17 isSupported:(BOOL)arg18 isTrusted:(BOOL)arg19 enabledForDevelopment:(BOOL)arg20 activeProxiedDevice:(id)arg21 validationErrors:(id *)arg22;

// Remaining properties
@property(copy, nonatomic) XCSDevice *activeProxiedDevice; // @dynamic activeProxiedDevice;
@property(copy, nonatomic) NSString *architecture; // @dynamic architecture;
@property(nonatomic, getter=isConnected) BOOL connected; // @dynamic connected;
@property(copy, nonatomic) NSString *deviceECID; // @dynamic deviceECID;
@property(copy, nonatomic) NSString *deviceType; // @dynamic deviceType;
@property(copy, nonatomic) NSString *deviceUDID; // @dynamic deviceUDID;
@property(copy, nonatomic) NSString *displaySize; // @dynamic displaySize;
@property(nonatomic) BOOL enabledForDevelopment; // @dynamic enabledForDevelopment;
@property(copy, nonatomic) NSString *identifier; // @dynamic identifier;
@property(nonatomic) BOOL isServer; // @dynamic isServer;
@property(copy, nonatomic) NSString *modelCode; // @dynamic modelCode;
@property(copy, nonatomic) NSString *modelName; // @dynamic modelName;
@property(copy, nonatomic) NSString *modelUTI; // @dynamic modelUTI;
@property(copy, nonatomic) NSString *name; // @dynamic name;
@property(copy, nonatomic) NSString *osVersion; // @dynamic osVersion;
@property(copy, nonatomic) NSString *platformIdentifier; // @dynamic platformIdentifier;
@property(copy, nonatomic) NSString *processor; // @dynamic processor;
@property(nonatomic, getter=isRetina) BOOL retina; // @dynamic retina;
@property(copy, nonatomic) NSString *serialNumber; // @dynamic serialNumber;
@property(nonatomic, getter=isSimulator) BOOL simulator; // @dynamic simulator;
@property(nonatomic, getter=isSupported) BOOL supported; // @dynamic supported;
@property(nonatomic, getter=isTrusted) BOOL trusted; // @dynamic trusted;

@end

@interface XCSDeviceFilter : XCSObject <NSCopying>
{
}

@property(readonly) NSPredicate *predicate;
- (id)dictionaryRepresentation;
- (id)initWithContents:(id)arg1 service:(id)arg2 validationErrors:(id *)arg3;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (BOOL)_validatePlatform:(id)arg1 filterType:(unsigned long long)arg2 architectureType:(unsigned long long)arg3 validationErrors:(id *)arg4;
- (id)initWithPlatform:(id)arg1 filterType:(unsigned long long)arg2 architectureType:(unsigned long long)arg3 validationErrors:(id *)arg4;

// Remaining properties
@property unsigned long long architectureType; // @dynamic architectureType;
@property unsigned long long filterType; // @dynamic filterType;
@property XCSPlatform *platform; // @dynamic platform;

@end

@interface XCSDeviceSpecification : XCSObject <NSCopying>
{
}

@property(readonly) NSPredicate *predicate;
- (id)saveRepresentation;
- (id)dictionaryRepresentation;
- (id)initWithContents:(id)arg1 service:(id)arg2 validationErrors:(id *)arg3;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (BOOL)_validateFilters:(id)arg1 deviceIdentifiers:(id)arg2 validationErrors:(id *)arg3;
- (id)initWithFilters:(id)arg1 deviceIdentifiers:(id)arg2 validationErrors:(id *)arg3;

// Remaining properties
@property NSArray *deviceIdentifiers; // @dynamic deviceIdentifiers;
@property NSArray *filters; // @dynamic filters;

@end

@interface XCSEventStream : NSObject <XCSMessageChannelDelegate>
{
    NSMutableDictionary *_eventResponseCallbacks;
    NSMutableDictionary *_eventObservers;
    XCSMessageChannel *_messageChannel;
    id <XCSEventStreamDelegate> _delegate;
}

@property __weak id <XCSEventStreamDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly) XCSMessageChannel *messageChannel; // @synthesize messageChannel=_messageChannel;
- (void).cxx_destruct;
- (void)messageChannel:(id)arg1 didUpdatePrivilegesWithUsername:(id)arg2;
- (void)messageChannelDidRejectClientCertificate:(id)arg1;
- (void)messageChannel:(id)arg1 didDisconnectWithError:(id)arg2 andWillRetry:(BOOL)arg3;
- (void)messageChannel:(id)arg1 didReceiveMessage:(id)arg2 withTag:(unsigned char)arg3;
- (void)handleCallbackForUUID:(id)arg1 withData:(id)arg2;
- (void)handleEventWithName:(id)arg1 data:(id)arg2 callbackUUID:(id)arg3;
- (void)removeAllObserversForEvent:(id)arg1;
- (void)removeObserverForEvent:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)addObserverForEvent:(id)arg1 withHandler:(CDUnknownBlockType)arg2 owner:(id)arg3;
- (void)addObserverForEvent:(id)arg1 withHandler:(CDUnknownBlockType)arg2;
- (void)sendResponseWithCallback:(id)arg1 data:(id)arg2;
- (void)emitEvent:(id)arg1 withData:(id)arg2 callback:(CDUnknownBlockType)arg3;
- (void)emitEvent:(id)arg1 withData:(id)arg2;
- (id)initWithHostname:(id)arg1 port:(unsigned short)arg2;
- (id)initWithMessageChannel:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XCSEventStreamListener : NSObject
{
    BOOL _watchOwner;
    CDUnknownBlockType _handler;
    id _owner;
}

@property BOOL watchOwner; // @synthesize watchOwner=_watchOwner;
@property __weak id owner; // @synthesize owner=_owner;
@property(copy, nonatomic) CDUnknownBlockType handler; // @synthesize handler=_handler;
- (void).cxx_destruct;

@end

@interface XCSFailureSummary : XCSObject
{
    BOOL _isPerformanceFailure;
    NSString *_message;
    NSNumber *_lineNumber;
    NSString *_fileName;
}

+ (id)failureSummaryWithXCSTestResultDictionaryRepresentation:(id)arg1 validationErrors:(id *)arg2;
+ (id)failureSummaryWithMessage:(id)arg1 lineNumber:(id)arg2 fileName:(id)arg3 isPerformanceFailure:(BOOL)arg4 validationErrors:(id *)arg5;
@property(nonatomic) BOOL isPerformanceFailure; // @synthesize isPerformanceFailure=_isPerformanceFailure;
@property(copy, nonatomic) NSString *fileName; // @synthesize fileName=_fileName;
@property(retain, nonatomic) NSNumber *lineNumber; // @synthesize lineNumber=_lineNumber;
@property(copy, nonatomic) NSString *message; // @synthesize message=_message;
- (void).cxx_destruct;
- (BOOL)_validateWithMessage:(id)arg1 lineNumber:(id)arg2 fileName:(id)arg3 isPerformanceFailure:(BOOL)arg4 validationErrors:(id *)arg5;
- (id)dictionaryRepresentation;
- (id)description;
- (id)initWithMessage:(id)arg1 lineNumber:(id)arg2 fileName:(id)arg3 isPerformanceFailure:(BOOL)arg4 validationErrors:(id *)arg5;

@end

@interface XCSFakeObjects : NSObject
{
}

+ (id)generateFailureSummary;
+ (id)generateFakeVersionInfo;
+ (id)generateFakeSettings;
+ (id)generateFakePerfMetricTestResult;
+ (id)generateFakeNotificationRequest;
+ (id)generateFakeHostedRepository;
+ (id)generateFakeHTTPRequest;
+ (id)generateFakePortalTeam;
+ (id)generateFakeArchive;
+ (id)generateFakeProduct;
+ (id)generateFakeTriggerLog;
+ (id)generateFakeXcodebuildLog;
+ (id)generateFakeBuildServiceLog;
+ (id)generateFakeSCMLog;
+ (id)generateFakeIntegrationTestResult;
+ (id)generateFakeIntegrationWithBot:(id)arg1 integrationNumber:(unsigned long long)arg2;
+ (id)generateFakeIntegrationWithBot:(id)arg1;
+ (id)generateFakeIntegration;
+ (id)generateFakeCommit;
+ (id)generateFakeCommitWithContributor:(id)arg1;
+ (id)generateFakeContributorWithName:(id)arg1 displayName:(id)arg2 emails:(id)arg3;
+ (id)generateFakeContributor;
+ (id)generateFakeCommitHistory;
+ (id)generateFakeCommitChangeFilePath;
+ (id)generateFakeCodeCoverageIntegrationWithID:(id)arg1 number:(unsigned long long)arg2 targetCount:(unsigned long long)arg3 fileCount:(unsigned long long)arg4 methodCount:(unsigned long long)arg5 deviceCount:(unsigned long long)arg6;
+ (id)generateFakeCodeCoverageIntegrationWithTargetUpToCount:(unsigned long long)arg1 fileUpToCount:(unsigned long long)arg2 methodUpToCount:(unsigned long long)arg3 deviceUpToCount:(unsigned long long)arg4;
+ (id)generateFakeCodeCoverageIntegration;
+ (id)generateFakeCodeCoverageTarget;
+ (id)generateFakeCodeCoverageFile;
+ (id)generateFakeCodeCoverageMethod;
+ (id)generateFakeCodeCoverageDevice;
+ (id)generateFakeIntegrationIssues;
+ (id)generateFakeIntegrationIssueDiff;
+ (id)generateFakeIntegrationIssue;
+ (id)generateFakeBuildResultSummary;
+ (id)generateFakeTestResult;
+ (id)generateFakeTestPerfMetric;
+ (id)generateFakeTest;
+ (id)generateFakeTestPlaceholder;
+ (id)generateFakeProxiedDevice;
+ (id)generateFakeTestDeviceWithID:(id)arg1;
+ (id)generateFakeTestDevice;
+ (id)generateFakeDevice;
+ (id)generateFakeProxiedDeviceWithID:(id)arg1 activeProxiedDeviceID:(id)arg2;
+ (id)generateFakeDeviceWithID:(id)arg1;
+ (id)fakeDeviceUDIDWithLength:(long long)arg1;
+ (id)fakeMacDeviceUDID;
+ (id)fakeiOSDeviceUDID;
+ (id)generateFakeBotWithBlueprint:(id)arg1;
+ (id)generateFakeBot;
+ (id)generateFakeBotConfigurationWithBlueprint:(id)arg1;
+ (id)generateFakeBotConfiguration;
+ (id)generateAuthenticatedSCMTestSourceControlBlueprint;
+ (id)generateFakeUnauthenticatedGitLabSourceControlBlueprint;
+ (id)generateFakeUnauthenticatedSourceControlBlueprint;
+ (id)generateFakeSourceControlBlueprint;
+ (id)generateAuthenticatedRSASCMTestSourceControlBlueprintContents;
+ (id)generateAuthenticatedSCMTestSourceControlBlueprintContents;
+ (id)generateFakeUnauthenticatedGitLabSourceControlBlueprintContents;
+ (id)generateFakeUnauthenticatedSourceControlBlueprintContents;
+ (id)generateFakeSourceControlBlueprintContents;
+ (id)generateFakeBotIssue;
+ (id)generateFakeFailingTrigger;
+ (id)generateFakeTrigger;
+ (id)generateFakeTriggerEmailConfiguration;
+ (id)generateFakeTriggerConditions;
+ (id)generateFakeBotGroup;
+ (id)generateFakeACL;
+ (id)stringWithGenerationCount;
+ (void)setGenerationCountForDevice:(unsigned long long)arg1 target:(unsigned long long)arg2 class:(unsigned long long)arg3 test:(unsigned long long)arg4 perfMetric:(unsigned long long)arg5;

@end

@interface XCSFileLogDestination : XCSLogDestination
{
    NSURL *_fileURL;
    NSDateFormatter *_dateFormatter;
}

@property(retain) NSDateFormatter *dateFormatter; // @synthesize dateFormatter=_dateFormatter;
@property(retain) NSURL *fileURL; // @synthesize fileURL=_fileURL;
- (void).cxx_destruct;
- (void)logMessageFromFile:(id)arg1 lineNumber:(long long)arg2 className:(id)arg3 methodName:(id)arg4 tags:(id)arg5 userInfo:(id)arg6 message:(id)arg7;
- (id)initWithPath:(id)arg1 tagsToInclude:(id)arg2 tagsToExclude:(id)arg3;
- (id)initWithDictionary:(id)arg1;

@end

@interface XCSFormData : NSObject
{
    NSMutableArray *_fieldOrder;
    NSMutableDictionary *_fieldValues;
}

+ (id)multipartDataWithFileAtPath:(id)arg1 contentType:(id)arg2 boundary:(id *)arg3;
- (void).cxx_destruct;
- (id)renderMultipartData:(id *)arg1;
- (void)addFileWithFieldName:(id)arg1 path:(id)arg2 contentType:(id)arg3;
- (void)addFormFieldWithName:(id)arg1 value:(id)arg2;
- (id)init;

@end

@interface XCSHTTPCredential : NSURLCredential
{
    unsigned long long _numberOfChallengeAttempts;
}

+ (id)credentialWithUser:(id)arg1 password:(id)arg2 persistence:(unsigned long long)arg3;
@property(nonatomic) unsigned long long numberOfChallengeAttempts; // @synthesize numberOfChallengeAttempts=_numberOfChallengeAttempts;
- (id)increaseNumberOfChallengeAttemptsWithError:(id *)arg1;
- (id)initWithUser:(id)arg1 password:(id)arg2 persistence:(unsigned long long)arg3;

@end

@interface XCSHTTPOperation : NSOperation
{
    NSOperationQueue *_queue;
    XCSHTTPRequest *_request;
    NSURLConnection *_connection;
    NSMutableData *_receivedData;
    unsigned long long _httpStatusCode;
    NSDictionary *_headers;
    CDUnknownBlockType _completionHandler;
}

@property(copy, nonatomic) CDUnknownBlockType completionHandler; // @synthesize completionHandler=_completionHandler;
@property(retain, nonatomic) NSDictionary *headers; // @synthesize headers=_headers;
@property(nonatomic) unsigned long long httpStatusCode; // @synthesize httpStatusCode=_httpStatusCode;
@property(retain, nonatomic) NSMutableData *receivedData; // @synthesize receivedData=_receivedData;
@property(retain, nonatomic) NSURLConnection *connection; // @synthesize connection=_connection;
@property(retain, nonatomic) XCSHTTPRequest *request; // @synthesize request=_request;
@property(nonatomic) __weak NSOperationQueue *queue; // @synthesize queue=_queue;
- (void).cxx_destruct;
- (void)markOperationFinished;
- (void)markOperationStarted;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connection:(id)arg1 willSendRequestForAuthenticationChallenge:(id)arg2;
- (void)main;
- (id)initWithRequest:(id)arg1 queue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;

@end

@interface XCSHTTPRequest : NSObject <NSURLSessionDelegate>
{
    BOOL _URLNeedsUpdate;
    NSString *_UUID;
    NSMutableURLRequest *_request;
    XCSService *_service;
    XCSUser *_user;
    unsigned long long _verb;
    NSString *_base;
    NSDictionary *_body;
    XCSHTTPCredential *_httpCredential;
    unsigned long long _retryCount;
}

+ (BOOL)_validateService:(id)arg1 user:(id)arg2 verb:(unsigned long long)arg3 base:(id)arg4 bodyData:(id)arg5 validationErrors:(id *)arg6;
+ (BOOL)_validateService:(id)arg1 user:(id)arg2 verb:(unsigned long long)arg3 base:(id)arg4 body:(id)arg5 validationErrors:(id *)arg6;
+ (BOOL)_validateUser:(id)arg1 request:(id)arg2 validationErrors:(id *)arg3;
+ (id)stringWithHTTPVerb:(unsigned long long)arg1;
+ (id)requestWithService:(id)arg1 user:(id)arg2 verb:(unsigned long long)arg3 base:(id)arg4 bodyData:(id)arg5 credential:(id)arg6 error:(id *)arg7;
+ (id)requestWithService:(id)arg1 user:(id)arg2 verb:(unsigned long long)arg3 base:(id)arg4 body:(id)arg5 credential:(id)arg6 error:(id *)arg7;
+ (id)requestWithService:(id)arg1 user:(id)arg2 verb:(unsigned long long)arg3 base:(id)arg4 bodyData:(id)arg5 error:(id *)arg6;
+ (id)requestWithService:(id)arg1 user:(id)arg2 verb:(unsigned long long)arg3 base:(id)arg4 body:(id)arg5 error:(id *)arg6;
+ (void)initialize;
@property BOOL URLNeedsUpdate; // @synthesize URLNeedsUpdate=_URLNeedsUpdate;
@property(nonatomic) unsigned long long retryCount; // @synthesize retryCount=_retryCount;
@property(retain, nonatomic) XCSHTTPCredential *httpCredential; // @synthesize httpCredential=_httpCredential;
@property(readonly, nonatomic) NSDictionary *body; // @synthesize body=_body;
@property(retain, nonatomic) NSString *base; // @synthesize base=_base;
@property(nonatomic) unsigned long long verb; // @synthesize verb=_verb;
@property(retain, nonatomic) XCSUser *user; // @synthesize user=_user;
@property(retain, nonatomic) XCSService *service; // @synthesize service=_service;
@property(retain, nonatomic) NSMutableURLRequest *request; // @synthesize request=_request;
@property(retain, nonatomic) NSString *UUID; // @synthesize UUID=_UUID;
- (void).cxx_destruct;
- (id)identityRefUsingKeychainPath:(id)arg1 password:(id)arg2 error:(id *)arg3;
- (id)httpCredentialWithError:(id *)arg1;
- (void)URLSession:(id)arg1 task:(id)arg2 didReceiveChallenge:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)performRequestWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)addHeader:(id)arg1 value:(id)arg2;
@property(readonly, copy) NSString *description;
- (id)initWithUser:(id)arg1 request:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XCSHTTPResponse : NSObject
{
    NSURLRequest *_originalRequest;
    long long _httpStatusCode;
    NSDictionary *_headers;
    NSString *_rawText;
    NSData *_rawData;
    NSDictionary *_body;
    NSError *_error;
    NSError *_unpackingError;
    XCSUser *_user;
    NSURL *_location;
}

@property(retain, nonatomic) NSURL *location; // @synthesize location=_location;
@property(retain, nonatomic) XCSUser *user; // @synthesize user=_user;
@property(retain, nonatomic) NSError *unpackingError; // @synthesize unpackingError=_unpackingError;
@property(retain, nonatomic) NSError *error; // @synthesize error=_error;
@property(retain, nonatomic) NSDictionary *body; // @synthesize body=_body;
@property(retain, nonatomic) NSData *rawData; // @synthesize rawData=_rawData;
@property(retain, nonatomic) NSString *rawText; // @synthesize rawText=_rawText;
@property(retain, nonatomic) NSDictionary *headers; // @synthesize headers=_headers;
@property(nonatomic) long long httpStatusCode; // @synthesize httpStatusCode=_httpStatusCode;
@property(retain, nonatomic) NSURLRequest *originalRequest; // @synthesize originalRequest=_originalRequest;
- (void).cxx_destruct;
- (id)_cleanedUpErrorCode:(long long)arg1 headers:(id)arg2 body:(id)arg3 request:(id)arg4;
- (BOOL)_unpackResponseData:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)initWithHTTPRequest:(id)arg1 statusCode:(long long)arg2 headers:(id)arg3 data:(id)arg4 user:(id)arg5 error:(id)arg6;

@end

@interface XCSHostedRepository : XCSObject
{
    NSString *_name;
    NSArray *_readAccessExternalIDs;
    NSArray *_writeAccessExternalIDs;
    long long _posixPermissions;
    long long _httpAccessType;
}

+ (id)hostedRepositoryWithName:(id)arg1 readAccessExternalIDs:(id)arg2 writeAccessExternalIDs:(id)arg3 posixPermissions:(long long)arg4 httpAccessType:(long long)arg5 validationErrors:(id *)arg6;
@property(nonatomic) long long httpAccessType; // @synthesize httpAccessType=_httpAccessType;
@property(nonatomic) long long posixPermissions; // @synthesize posixPermissions=_posixPermissions;
@property(retain, nonatomic) NSArray *writeAccessExternalIDs; // @synthesize writeAccessExternalIDs=_writeAccessExternalIDs;
@property(retain, nonatomic) NSArray *readAccessExternalIDs; // @synthesize readAccessExternalIDs=_readAccessExternalIDs;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSString *relativePath;
- (id)saveRepresentation;
- (id)dictionaryRepresentation;
- (id)initWithContents:(id)arg1 service:(id)arg2 validationErrors:(id *)arg3;
- (id)initWithName:(id)arg1 readAccessExternalIDs:(id)arg2 writeAccessExternalIDs:(id)arg3 posixPermissions:(long long)arg4 httpAccessType:(long long)arg5 validationErrors:(id *)arg6;

@end

@interface XCSIntegration : XCSObject
{
    BOOL _running;
    struct NSArray *_devices;
    NSArray *_perfMetricNames;
    NSDictionary *_testHierarchy;
    NSArray *_perfMetricKeyPaths;
    NSMutableArray *_internalTargets;
}

+ (id)sortIntegrations:(id)arg1 newestFirst:(BOOL)arg2;
+ (id)integrationWithBot:(id)arg1 shouldClean:(BOOL)arg2 devices:(struct NSArray *)arg3 error:(id *)arg4;
+ (id)integrationWithBot:(id)arg1 shouldClean:(BOOL)arg2 error:(id *)arg3;
+ (id)integrationWithBot:(id)arg1 error:(id *)arg2;
@property(retain, nonatomic) NSMutableArray *internalTargets; // @synthesize internalTargets=_internalTargets;
@property(retain, nonatomic) NSArray *perfMetricKeyPaths; // @synthesize perfMetricKeyPaths=_perfMetricKeyPaths;
@property(retain, nonatomic) NSDictionary *testHierarchy; // @synthesize testHierarchy=_testHierarchy;
@property(retain, nonatomic) NSArray *perfMetricNames; // @synthesize perfMetricNames=_perfMetricNames;
@property(retain, nonatomic) NSArray *devices; // @synthesize devices=_devices;
@property(readonly, nonatomic, getter=isRunning) BOOL running; // @synthesize running=_running;
- (void).cxx_destruct;
- (id)triggersToExecuteForPhase:(unsigned long long)arg1;
- (BOOL)_hasTestWithKeyPathPerfMetrics:(id)arg1;
- (id)_testedDeviceWithIdentifier:(id)arg1;
- (void)_instantiateTestClassFamily;
- (BOOL)_validateWithValue:(id)arg1 forProperty:(id)arg2 withDevice:(id)arg3 atKeyPath:(id)arg4 error:(id *)arg5;
- (BOOL)_validateIntegrationWithBot:(id)arg1 testedDevices:(struct NSArray *)arg2 number:(id)arg3 queuedDate:(id)arg4 startedTime:(id)arg5 endedTime:(id)arg6 currentStep:(long long)arg7 result:(long long)arg8 revisionBlueprint:(id)arg9 tags:(id)arg10 testHierarchy:(id)arg11 perfMetricNames:(id)arg12 perfMetricKeyPaths:(id)arg13 anID:(id)arg14 aTinyID:(id)arg15 docType:(id)arg16 error:(id *)arg17;
- (id)patchRepresentation;
- (id)saveRepresentationHumanReadable:(BOOL)arg1;
- (id)saveRepresentation;
- (id)dictionaryRepresentation;
- (id)description;
- (id)initWithContents:(id)arg1 service:(id)arg2 validationErrors:(id *)arg3;
- (id)initIntegrationWithBot:(id)arg1 shouldClean:(BOOL)arg2 devices:(struct NSArray *)arg3 number:(id)arg4 queuedDate:(id)arg5 startedTime:(id)arg6 endedTime:(id)arg7 currentStep:(long long)arg8 result:(long long)arg9 successStreak:(unsigned long long)arg10 buildResultSummary:(id)arg11 revisionBlueprint:(id)arg12 assets:(id)arg13 assetsPruned:(BOOL)arg14 tags:(id)arg15 testHierarchy:(id)arg16 perfMetricNames:(id)arg17 perfMetricKeyPaths:(id)arg18 anID:(id)arg19 aRev:(id)arg20 aTinyID:(id)arg21 docType:(id)arg22 error:(id *)arg23;
@property(readonly, nonatomic) NSURL *productInstallationURL;
- (BOOL)isFlagged;
@property(nonatomic) NSSet *tags; // @dynamic tags;
- (long long)statusForDeviceIdentifier:(id)arg1;
- (void)setDeviceFilter:(id)arg1;
@property(readonly, nonatomic) NSArray *targets;

// Remaining properties
@property(nonatomic) XCSIntegrationAssets *assets; // @dynamic assets;
@property(nonatomic) BOOL assetsPruned; // @dynamic assetsPruned;
@property(nonatomic) XCSBot *bot; // @dynamic bot;
@property(nonatomic) XCSBuildResultSummary *buildResultSummary; // @dynamic buildResultSummary;
@property(nonatomic) long long currentStep; // @dynamic currentStep;
@property(nonatomic) NSDate *endedTime; // @dynamic endedTime;
@property(nonatomic) unsigned long long number; // @dynamic number;
@property(nonatomic) NSDate *queuedDate; // @dynamic queuedDate;
@property(nonatomic) long long result; // @dynamic result;
@property(nonatomic) XCSBotSCMBlueprint *revisionBlueprint; // @dynamic revisionBlueprint;
@property(nonatomic) BOOL shouldClean; // @dynamic shouldClean;
@property(nonatomic) NSDate *startedTime; // @dynamic startedTime;
@property(nonatomic) unsigned long long successStreak; // @dynamic successStreak;

@end

@interface XCSIntegrationAsset : XCSObject
{
    BOOL _allowAnonymousAccess;
    NSString *_integrationID;
    NSString *_fileName;
    NSString *_relativePath;
    unsigned long long _size;
    NSDictionary *_infoDictionary;
    NSArray *_variantIds;
    NSString *_productID;
}

+ (id)assetWithFileName:(id)arg1 relativePath:(id)arg2 infoDictionary:(id)arg3 allowAnonymousAccess:(BOOL)arg4 variantIds:(id)arg5 validationErrors:(id *)arg6;
+ (id)assetWithFileName:(id)arg1 relativePath:(id)arg2 allowAnonymousAccess:(BOOL)arg3 variantIds:(id)arg4 productID:(id)arg5 validationErrors:(id *)arg6;
+ (id)assetWithFileName:(id)arg1 relativePath:(id)arg2 allowAnonymousAccess:(BOOL)arg3 validationErrors:(id *)arg4;
+ (id)assetWithFileName:(id)arg1 validationErrors:(id *)arg2;
@property(retain) NSString *productID; // @synthesize productID=_productID;
@property(retain) NSArray *variantIds; // @synthesize variantIds=_variantIds;
@property BOOL allowAnonymousAccess; // @synthesize allowAnonymousAccess=_allowAnonymousAccess;
@property(retain) NSDictionary *infoDictionary; // @synthesize infoDictionary=_infoDictionary;
@property unsigned long long size; // @synthesize size=_size;
@property(retain) NSString *relativePath; // @synthesize relativePath=_relativePath;
@property(retain) NSString *fileName; // @synthesize fileName=_fileName;
@property(readonly) NSString *integrationID; // @synthesize integrationID=_integrationID;
- (void).cxx_destruct;
- (id)downloadURLForService:(id)arg1 friendly:(BOOL)arg2;
@property(readonly) NSURL *downloadURL;
- (id)saveRepresentation;
- (id)dictionaryRepresentation;
- (id)initWithContents:(id)arg1 service:(id)arg2 validationErrors:(id *)arg3;
- (BOOL)_validateFileName:(id)arg1 relativePath:(id)arg2 size:(unsigned long long)arg3 infoDictionary:(id)arg4 variantIds:(id)arg5 productID:(id)arg6 validationErrors:(id *)arg7;
- (id)_initWithID:(id)arg1 revision:(id)arg2 fileName:(id)arg3 relativePath:(id)arg4 size:(unsigned long long)arg5 infoDictionary:(id)arg6 allowAnonymousAccess:(BOOL)arg7 variantIds:(id)arg8 productID:(id)arg9 validationErrors:(id *)arg10;

@end

@interface XCSIntegrationAssets : NSObject
{
    XCSIntegrationAsset *_sourceControlLog;
    XCSIntegrationAsset *_buildServiceLog;
    XCSIntegrationAsset *_product;
    XCSIntegrationAsset *_archive;
    XCSIntegrationAsset *_xcodebuildOutput;
    XCSIntegrationAsset *_xcodebuildLog;
    NSArray *_triggerAssets;
    NSArray *_additionalAssets;
}

+ (id)emptyAssets;
@property(retain) NSArray *additionalAssets; // @synthesize additionalAssets=_additionalAssets;
@property(retain) NSArray *triggerAssets; // @synthesize triggerAssets=_triggerAssets;
@property(retain) XCSIntegrationAsset *xcodebuildLog; // @synthesize xcodebuildLog=_xcodebuildLog;
@property(retain) XCSIntegrationAsset *xcodebuildOutput; // @synthesize xcodebuildOutput=_xcodebuildOutput;
@property(retain) XCSIntegrationAsset *archive; // @synthesize archive=_archive;
@property(retain) XCSIntegrationAsset *product; // @synthesize product=_product;
@property(retain) XCSIntegrationAsset *buildServiceLog; // @synthesize buildServiceLog=_buildServiceLog;
@property(retain) XCSIntegrationAsset *sourceControlLog; // @synthesize sourceControlLog=_sourceControlLog;
- (void).cxx_destruct;
- (id)dictionaryRepresentation;
- (id)initWithContents:(id)arg1 service:(id)arg2 validationErrors:(id *)arg3;
- (id)initWithSourceControlLog:(id)arg1 buildServiceLog:(id)arg2 product:(id)arg3 archive:(id)arg4 xcodebuildOutput:(id)arg5 xcodebuildLog:(id)arg6 triggerAssets:(id)arg7 additionalAssets:(id)arg8;
- (id)init;

@end

@interface XCSIntegrationIssue : XCSObject
{
    BOOL _silenced;
    unsigned long long _type;
    unsigned long long _status;
    NSString *_issueType;
    NSString *_message;
    NSString *_target;
    NSString *_testCase;
    NSData *_documentLocationData;
    NSString *_documentFilePath;
    NSNumber *_lineNumber;
    NSNumber *_exitCode;
    struct NSArray *_commits;
    NSString *_integrationID;
    unsigned long long _age;
    NSString *_fixItType;
    NSString *_assignee;
    XCSIssueAssociations *_associations;
    NSString *_sanitizedMessage;
}

+ (id)integrationIssueWithType:(unsigned long long)arg1 status:(unsigned long long)arg2 issueType:(id)arg3 message:(id)arg4 target:(id)arg5 testCase:(id)arg6 documentLocationData:(id)arg7 documentFilePath:(id)arg8 lineNumber:(id)arg9 exitCode:(id)arg10 commits:(struct NSArray *)arg11 integrationID:(id)arg12 age:(unsigned long long)arg13 fixItType:(id)arg14 validationErrors:(id *)arg15;
@property(readonly, nonatomic) NSString *sanitizedMessage; // @synthesize sanitizedMessage=_sanitizedMessage;
@property(readonly, nonatomic) XCSIssueAssociations *associations; // @synthesize associations=_associations;
@property(readonly, nonatomic) BOOL silenced; // @synthesize silenced=_silenced;
@property(readonly, nonatomic) NSString *assignee; // @synthesize assignee=_assignee;
@property(readonly, nonatomic) NSString *fixItType; // @synthesize fixItType=_fixItType;
@property(readonly, nonatomic) unsigned long long age; // @synthesize age=_age;
@property(readonly, nonatomic) NSString *integrationID; // @synthesize integrationID=_integrationID;
@property(readonly, nonatomic) NSArray *commits; // @synthesize commits=_commits;
@property(readonly, nonatomic) NSNumber *exitCode; // @synthesize exitCode=_exitCode;
@property(readonly, nonatomic) NSNumber *lineNumber; // @synthesize lineNumber=_lineNumber;
@property(readonly, nonatomic) NSString *documentFilePath; // @synthesize documentFilePath=_documentFilePath;
@property(readonly, nonatomic) NSData *documentLocationData; // @synthesize documentLocationData=_documentLocationData;
@property(readonly, nonatomic) NSString *testCase; // @synthesize testCase=_testCase;
@property(readonly, nonatomic) NSString *target; // @synthesize target=_target;
@property(readonly, nonatomic) NSString *message; // @synthesize message=_message;
@property(readonly, nonatomic) NSString *issueType; // @synthesize issueType=_issueType;
@property(readonly, nonatomic) unsigned long long status; // @synthesize status=_status;
@property(readonly, nonatomic) unsigned long long type; // @synthesize type=_type;
- (void).cxx_destruct;
- (BOOL)_validateType:(unsigned long long)arg1 status:(unsigned long long)arg2 issueType:(id)arg3 message:(id)arg4 target:(id)arg5 testCase:(id)arg6 documentLocationData:(id)arg7 documentFilePath:(id)arg8 lineNumber:(id)arg9 exitCode:(id)arg10 commits:(struct NSArray *)arg11 integrationID:(id)arg12 age:(unsigned long long)arg13 fixItType:(id)arg14 associations:(id)arg15 validationErrors:(id *)arg16;
- (unsigned long long)hash;
- (BOOL)isEqualToIntegrationIssue:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (id)saveRepresentation;
- (id)dictionaryRepresentation;
- (id)initWithContents:(id)arg1 service:(id)arg2 validationErrors:(id *)arg3;
- (id)initWithID:(id)arg1 type:(unsigned long long)arg2 status:(unsigned long long)arg3 issueType:(id)arg4 message:(id)arg5 target:(id)arg6 testCase:(id)arg7 documentLocationData:(id)arg8 documentFilePath:(id)arg9 lineNumber:(id)arg10 exitCode:(id)arg11 commits:(struct NSArray *)arg12 integrationID:(id)arg13 age:(unsigned long long)arg14 fixItType:(id)arg15 silenced:(BOOL)arg16 associations:(id)arg17 validationErrors:(id *)arg18;

@end

@interface XCSIntegrationIssueDiff : XCSObject
{
    NSArray *_freshIssues;
    NSArray *_unresolvedIssues;
    NSArray *_resolvedIssues;
    NSArray *_silencedIssues;
}

+ (id)integrationIssueDiffWithFreshIssues:(id)arg1 unresolvedIssues:(id)arg2 resolvedIssues:(id)arg3 validationErrors:(id *)arg4;
+ (id)emptyIntegrationIssueDiff;
@property(readonly, nonatomic) NSArray *silencedIssues; // @synthesize silencedIssues=_silencedIssues;
@property(readonly, nonatomic) NSArray *resolvedIssues; // @synthesize resolvedIssues=_resolvedIssues;
@property(readonly, nonatomic) NSArray *unresolvedIssues; // @synthesize unresolvedIssues=_unresolvedIssues;
@property(readonly, nonatomic) NSArray *freshIssues; // @synthesize freshIssues=_freshIssues;
- (void).cxx_destruct;
- (BOOL)_validateFreshIssues:(id)arg1 unresolvedIssues:(id)arg2 resolvedIssues:(id)arg3 silencedIssues:(id)arg4 validationErrors:(id *)arg5;
- (id)integrationIssues;
- (id)saveRepresentation;
- (id)dictionaryRepresentation;
- (id)initWithContents:(id)arg1 service:(id)arg2 validationErrors:(id *)arg3;
- (id)initWithFreshIssues:(id)arg1 unresolvedIssues:(id)arg2 resolvedIssues:(id)arg3 silencedIssues:(id)arg4 validationErrors:(id *)arg5;

@end

@interface XCSIntegrationIssues : XCSObject
{
    XCSIntegrationIssueDiff *_errors;
    XCSIntegrationIssueDiff *_warnings;
    XCSIntegrationIssueDiff *_analyzerWarnings;
    XCSIntegrationIssueDiff *_testFailures;
    NSArray *_triggerErrors;
    NSArray *_buildServiceErrors;
    NSArray *_buildServiceWarnings;
}

+ (id)integrationIssuesWithErrors:(id)arg1 warnings:(id)arg2 analyzerWarnings:(id)arg3 testFailures:(id)arg4 triggerErrors:(id)arg5 buildServiceErrors:(id)arg6 buildServiceWarnings:(id)arg7 validationErrors:(id *)arg8;
@property(readonly, nonatomic) NSArray *buildServiceWarnings; // @synthesize buildServiceWarnings=_buildServiceWarnings;
@property(readonly, nonatomic) NSArray *buildServiceErrors; // @synthesize buildServiceErrors=_buildServiceErrors;
@property(readonly, nonatomic) NSArray *triggerErrors; // @synthesize triggerErrors=_triggerErrors;
@property(readonly, nonatomic) XCSIntegrationIssueDiff *testFailures; // @synthesize testFailures=_testFailures;
@property(readonly, nonatomic) XCSIntegrationIssueDiff *analyzerWarnings; // @synthesize analyzerWarnings=_analyzerWarnings;
@property(readonly, nonatomic) XCSIntegrationIssueDiff *warnings; // @synthesize warnings=_warnings;
@property(readonly, nonatomic) XCSIntegrationIssueDiff *errors; // @synthesize errors=_errors;
- (void).cxx_destruct;
- (id)issuesForContributorNames:(id)arg1;
- (BOOL)_validateErrors:(id)arg1 warnings:(id)arg2 analyzerWarnings:(id)arg3 testFailures:(id)arg4 triggerErrors:(id)arg5 buildServiceErrors:(id)arg6 buildServiceWarnings:(id)arg7 validationErrors:(id *)arg8;
- (id)saveRepresentation;
- (id)dictionaryRepresentation;
- (id)initWithContents:(id)arg1 service:(id)arg2 validationErrors:(id *)arg3;
- (id)initWithErrors:(id)arg1 warnings:(id)arg2 analyzerWarnings:(id)arg3 testFailures:(id)arg4 triggerErrors:(id)arg5 buildServiceErrors:(id)arg6 buildServiceWarnings:(id)arg7 validationErrors:(id *)arg8;

@end

@interface XCSIntegrationTestResult : XCSObject
{
    XCSService *service;
    NSString *integrationID;
    NSString *revisionID;
    NSDate *date;
    struct NSArray *testedDevices;
    XCSCodeCoverageIntegration *coverage;
    NSArray *_testedDevicesIDs;
    NSMutableArray *_testResults;
    NSMutableDictionary *_testHierarchy;
    NSMutableSet *_perfMetricNames;
    NSMutableArray *_perfMetricKeyPaths;
}

+ (id)integrationResultWithID:(id)arg1 revisionID:(id)arg2 date:(id)arg3 testedDevices:(struct NSArray *)arg4 coverage:(id)arg5 service:(id)arg6 validationErrors:(id *)arg7;
@property(retain, nonatomic) NSMutableArray *perfMetricKeyPaths; // @synthesize perfMetricKeyPaths=_perfMetricKeyPaths;
@property(retain, nonatomic) NSMutableSet *perfMetricNames; // @synthesize perfMetricNames=_perfMetricNames;
@property(retain, nonatomic) NSMutableDictionary *testHierarchy; // @synthesize testHierarchy=_testHierarchy;
@property(retain, nonatomic) NSMutableArray *testResults; // @synthesize testResults=_testResults;
@property(retain, nonatomic) NSArray *testedDevicesIDs; // @synthesize testedDevicesIDs=_testedDevicesIDs;
@property(retain, nonatomic) XCSCodeCoverageIntegration *coverage; // @synthesize coverage;
@property(retain, nonatomic) NSArray *testedDevices; // @synthesize testedDevices;
@property(copy, nonatomic) NSDate *date; // @synthesize date;
@property(copy, nonatomic) NSString *revisionID; // @synthesize revisionID;
@property(copy, nonatomic) NSString *integrationID; // @synthesize integrationID;
@property(nonatomic) __weak XCSService *service; // @synthesize service;
- (void).cxx_destruct;
- (BOOL)_validateWithUUID:(id)arg1 revisionID:(id)arg2 date:(id)arg3 testedDevices:(struct NSArray *)arg4 coverage:(id)arg5 service:(id)arg6 validationErrors:(id *)arg7;
- (id)saveRepresentationHumanReadable:(BOOL)arg1;
- (id)saveRepresentation;
- (id)dictionaryRepresentation;
- (id)description;
- (long long)testedDeviceCount;
- (BOOL)isTestedDeviceValid:(id)arg1;
- (id)initWithID:(id)arg1 revisionID:(id)arg2 date:(id)arg3 testedDevices:(struct NSArray *)arg4 coverage:(id)arg5 service:(id)arg6 validationErrors:(id *)arg7;
- (id)initWithContents:(id)arg1 service:(id)arg2 validationErrors:(id *)arg3;
- (void)importTestResultsCompleteIntegrationWithID:(id)arg1 testedDevices:(struct NSArray *)arg2 testHierarchy:(id)arg3 perfMetricNames:(id)arg4 perfMetricKeyPaths:(id)arg5 completionHandler:(CDUnknownBlockType)arg6;
- (void)finalizeWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)addTestResult:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)testResultWithDevice:(id)arg1 keyPath:(id)arg2 date:(id)arg3 startTime:(double)arg4 endTime:(double)arg5 passed:(BOOL)arg6 failureSummaries:(id)arg7 testableBlueprintPath:(id)arg8 testableBlueprintName:(id)arg9 validationErrors:(id *)arg10;

@end

@interface XCSIssueAssociations : XCSObject
{
    XCSRadarIssueAssociation *_radar;
    XCSAssigneeIssueAssociation *_assignee;
}

@property(readonly, nonatomic) XCSAssigneeIssueAssociation *assignee; // @synthesize assignee=_assignee;
@property(readonly, nonatomic) XCSRadarIssueAssociation *radar; // @synthesize radar=_radar;
- (void).cxx_destruct;
- (id)dictionaryRepresentation;
- (id)extractAssociationWithClass:(Class)arg1 fromInfo:(id)arg2 validationErrors:(id *)arg3;
- (id)initWithContents:(id)arg1 service:(id)arg2 validationErrors:(id *)arg3;

@end

@interface XCSListBranchesResult : XCSBlueprintOperationResult
{
    NSMutableDictionary *_branchesByRepository;
}

@property(retain, nonatomic) NSMutableDictionary *branchesByRepository; // @synthesize branchesByRepository=_branchesByRepository;
- (void).cxx_destruct;
- (void)addBranch:(id)arg1 forRepositoryID:(id)arg2;
- (id)mutableBranchesForRepositoryID:(id)arg1;
- (id)branchesForRepositoryID:(id)arg1;
- (id)dictionaryRepresentation;
- (BOOL)_validateBranches:(id)arg1 validationErrors:(id *)arg2;
- (id)initWithContents:(id)arg1 service:(id)arg2 validationErrors:(id *)arg3;
- (id)init;

@end

@interface XCSLogger : NSObject
{
    NSMutableArray *_destinations;
    NSMutableArray *_tags;
    NSObject<OS_dispatch_queue> *_queue;
}

+ (id)sharedLogger;
+ (void)initialize;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(retain, nonatomic) NSMutableArray *tags; // @synthesize tags=_tags;
@property(retain) NSArray *destinations; // @synthesize destinations=_destinations;
- (void).cxx_destruct;
- (void)logMessageFromFile:(id)arg1 lineNumber:(long long)arg2 className:(id)arg3 methodName:(id)arg4 tags:(id)arg5 userInfo:(id)arg6 format:(id)arg7 arguments:(struct __va_list_tag [1])arg8;
- (void)logMessageFromFile:(const char *)arg1 lineNumber:(long long)arg2 class:(Class)arg3 method:(SEL)arg4 arguments:(id)arg5;
- (void)loadDestinationsFromConfiguration:(id)arg1;
- (void)reloadConfigurationFromDefaults;
- (void)removeTag:(id)arg1;
- (void)addTag:(id)arg1;
- (void)removeDestination:(id)arg1;
- (void)addDestination:(id)arg1;
- (id)initWithDestinationConfiguration:(id)arg1;
- (id)init;

@end

@interface XCSMaintenanceTask : XCSObject
{
    NSString *_title;
    NSNumber *_percentageCompleted;
}

@property(copy, nonatomic) NSNumber *percentageCompleted; // @synthesize percentageCompleted=_percentageCompleted;
@property(copy, nonatomic) NSString *title; // @synthesize title=_title;
- (void).cxx_destruct;
- (BOOL)_validateWithTitle:(id)arg1 percentageCompleted:(id)arg2 validationErrors:(id *)arg3;
- (id)saveRepresentationHumanReadable:(BOOL)arg1;
- (id)saveRepresentation;
- (id)dictionaryRepresentation;
- (id)description;
- (id)initWithContents:(id)arg1 service:(id)arg2 validationErrors:(id *)arg3;
- (id)initWithTitle:(id)arg1 percentageCompleted:(id)arg2 validationErrors:(id *)arg3;

@end

@interface XCSMessageChannel : NSObject
{
    id <XCSMessageChannelDelegate> _delegate;
    NSObject<OS_dispatch_queue> *_delegateQueue;
    GCDAsyncSocket *_socket;
    BOOL _socketIsReady;
    BOOL _disableAutomaticReconnection;
    BOOL _connectedWithCert;
    struct OpaqueSecIdentityRef *_identity;
    unsigned long long _connectionAttemptCount;
    double _nextAttemptBackoffValue;
    unsigned char _currentMessageTag;
    unsigned int _currentControlMessageType;
    BOOL _readingUsernameLength;
    NSMutableArray *_handshakeMessages;
    NSMutableArray *_messageQueue;
    unsigned long long _messageQueueCursor;
    NSObject<OS_dispatch_queue> *_messageQueueQueue;
    NSString *_identifier;
    BOOL _turboHeartbeats;
    CDUnknownBlockType _cancelHeartbeatTimer;
    NSObject<OS_dispatch_queue> *_heartbeatQueue;
    BOOL _connected;
    unsigned short _port;
    NSString *_hostname;
    NSString *_identityKeychainPath;
    NSData *_identityKeychainPassword;
    NSString *_username;
}

@property(getter=isConnected) BOOL connected; // @synthesize connected=_connected;
@property(readonly, nonatomic) NSString *username; // @synthesize username=_username;
@property(retain, nonatomic) NSData *identityKeychainPassword; // @synthesize identityKeychainPassword=_identityKeychainPassword;
@property(retain, nonatomic) NSString *identityKeychainPath; // @synthesize identityKeychainPath=_identityKeychainPath;
@property unsigned short port; // @synthesize port=_port;
@property(retain) NSString *hostname; // @synthesize hostname=_hostname;
- (void).cxx_destruct;
- (void)socketDidSecure:(id)arg1;
- (void)socketDidDisconnect:(id)arg1 withError:(id)arg2;
- (void)socket:(id)arg1 didWriteDataWithTag:(long long)arg2;
- (void)socket:(id)arg1 didReadData:(id)arg2 withTag:(long long)arg3;
- (void)socket:(id)arg1 didConnectToHost:(id)arg2 port:(unsigned short)arg3;
- (void)handleUnrecognizedMessageCategory:(unsigned char)arg1;
- (void)receiveDatagramMessage:(id)arg1;
- (unsigned long long)receiveControlMessageWithType:(unsigned int)arg1 payload:(id)arg2;
- (void)receiveNextMessage;
- (void)sendRandomControlMessageWithLength:(unsigned int)arg1;
- (void)sendKickControlMessage;
- (void)sendAuthControlMessageWithUsername:(id)arg1 andPassword:(id)arg2;
- (void)sendLoopbackControlMessage;
- (void)sendControlMessageWithType:(unsigned int)arg1 payload:(id)arg2 immediately:(BOOL)arg3;
- (void)writeMessageToSocket:(id)arg1;
- (void)drainMessageQueue;
- (void)sendMessage:(id)arg1 withTag:(unsigned char)arg2;
- (void)sendMessage:(id)arg1;
- (void)resetHeartbeatCheck;
- (void)attemptToEstablishConnection:(BOOL)arg1;
- (void)disconnect;
- (void)reconnect;
@property(nonatomic) struct OpaqueSecIdentityRef *identity;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *delegateQueue;
@property __weak id <XCSMessageChannelDelegate> delegate;
- (void)dealloc;
- (id)initWithHostname:(id)arg1 port:(unsigned short)arg2;
- (id)init;

@end

@interface XCSMessageChannelMessage : NSObject
{
    unsigned char _category;
    unsigned char _tag;
    unsigned int _type;
    NSData *_data;
}

@property(retain) NSData *data; // @synthesize data=_data;
@property unsigned int type; // @synthesize type=_type;
@property unsigned char tag; // @synthesize tag=_tag;
@property unsigned char category; // @synthesize category=_category;
- (void).cxx_destruct;

@end

@interface XCSNotificationRequest : XCSObject
{
    BOOL _allClear;
    XCSTrigger *_trigger;
    NSArray *_recipients;
}

+ (id)notificationRequestWithTrigger:(id)arg1 recipients:(id)arg2 allClear:(BOOL)arg3;
@property(readonly, nonatomic) BOOL allClear; // @synthesize allClear=_allClear;
@property(readonly, nonatomic) NSArray *recipients; // @synthesize recipients=_recipients;
@property(readonly, nonatomic) XCSTrigger *trigger; // @synthesize trigger=_trigger;
- (void).cxx_destruct;
- (id)saveRepresentation;
- (id)dictionaryRepresentation;
- (id)initWithTrigger:(id)arg1 recipients:(id)arg2 allClear:(BOOL)arg3;

@end

@interface XCSOrderedDictionary : NSMutableDictionary
{
    NSMutableDictionary *_dictionary;
    NSMutableArray *_array;
}

@property(retain, nonatomic) NSMutableArray *array; // @synthesize array=_array;
@property(retain, nonatomic) NSMutableDictionary *dictionary; // @synthesize dictionary=_dictionary;
- (void).cxx_destruct;
- (id)descriptionWithLocale:(id)arg1 indent:(unsigned long long)arg2;
- (id)keyAtIndex:(unsigned long long)arg1;
- (void)insertObject:(id)arg1 forKey:(id)arg2 atIndex:(unsigned long long)arg3;
- (id)reverseKeyEnumerator;
- (id)keyEnumerator;
- (id)objectForKey:(id)arg1;
- (unsigned long long)count;
- (void)removeObjectForKey:(id)arg1;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (id)copy;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)init;

@end

@interface XCSPendingIntegration : XCSObject
{
}

- (id)initWithContents:(id)arg1;

@end

@interface XCSPerfMetricTestResult : XCSObject
{
    BOOL _passed;
    NSString *name;
    unsigned long long type;
    NSString *unit;
    NSString *_identifier;
    double _avg;
    double _min;
    double _max;
    double _rsd;
    NSNumber *_baseline;
    double _maxPercentRegression;
    double _maxPercentRelativeStandardDeviation;
    struct NSArray *_iterations;
    XCSTestResult *_testResult;
    unsigned long long _deviceCount;
}

+ (id)perfMetricResultWithTestResult:(id)arg1 name:(id)arg2 identifier:(id)arg3 type:(unsigned long long)arg4 unit:(id)arg5 iterations:(id)arg6 baseline:(id)arg7 maxPercentRegression:(double)arg8 maxPercentRelativeStandardDeviation:(double)arg9 hasPassed:(BOOL)arg10 validationErrors:(id *)arg11;
@property(nonatomic) unsigned long long deviceCount; // @synthesize deviceCount=_deviceCount;
@property(nonatomic) __weak XCSTestResult *testResult; // @synthesize testResult=_testResult;
@property(retain, nonatomic) NSArray *iterations; // @synthesize iterations=_iterations;
@property(nonatomic) double maxPercentRelativeStandardDeviation; // @synthesize maxPercentRelativeStandardDeviation=_maxPercentRelativeStandardDeviation;
@property(nonatomic) double maxPercentRegression; // @synthesize maxPercentRegression=_maxPercentRegression;
@property(retain, nonatomic) NSNumber *baseline; // @synthesize baseline=_baseline;
@property(nonatomic) double rsd; // @synthesize rsd=_rsd;
@property(nonatomic) double max; // @synthesize max=_max;
@property(nonatomic) double min; // @synthesize min=_min;
@property(nonatomic) double avg; // @synthesize avg=_avg;
@property(nonatomic) BOOL passed; // @synthesize passed=_passed;
@property(copy, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
@property(copy, nonatomic) NSString *unit; // @synthesize unit;
@property(nonatomic) unsigned long long type; // @synthesize type;
@property(copy, nonatomic) NSString *name; // @synthesize name;
- (void).cxx_destruct;
- (void)_setRelativeStandardDeviationWithIterations:(struct NSArray *)arg1;
- (void)_setAverageMinMaxForPerfMetricWithIterations:(struct NSArray *)arg1;
- (BOOL)_validateWithTestResult:(id)arg1 name:(id)arg2 identifier:(id)arg3 type:(unsigned long long)arg4 unit:(id)arg5 iterations:(id)arg6 baseline:(id)arg7 hasPassed:(BOOL)arg8 validationErrors:(id *)arg9;
- (id)saveRepresentationHumanReadable:(BOOL)arg1;
- (id)saveRepresentation;
- (id)dictionaryRepresentation;
- (id)description;
- (id)initWithTestResult:(id)arg1 name:(id)arg2 identifier:(id)arg3 type:(unsigned long long)arg4 unit:(id)arg5 iterations:(id)arg6 baseline:(id)arg7 maxPercentRegression:(double)arg8 maxRelativeStandardDeviation:(double)arg9 hasPassed:(BOOL)arg10 validationErrors:(id *)arg11;

@end

@interface XCSPlatform : XCSObject
{
}

+ (id)platformWithIdentifier:(id)arg1 displayName:(id)arg2 version:(id)arg3 buildNumber:(id)arg4 simulatorIdentifier:(id)arg5 validationErrors:(id *)arg6;
@property(readonly) BOOL supportsArchitectureTypes;
@property(readonly) BOOL supportsFilterTypes;
- (BOOL)_validateIdentifier:(id)arg1 displayName:(id)arg2 version:(id)arg3 buildNumber:(id)arg4 simulatorIdentifier:(id)arg5 validationErrors:(id *)arg6;
- (id)_initWithID:(id)arg1 revision:(id)arg2 identifier:(id)arg3 displayName:(id)arg4 version:(id)arg5 buildNumber:(id)arg6 simulatorIdentifier:(id)arg7 validationErrors:(id *)arg8;
- (id)initWithContents:(id)arg1 service:(id)arg2 validationErrors:(id *)arg3;

// Remaining properties
@property NSString *buildNumber; // @dynamic buildNumber;
@property NSString *displayName; // @dynamic displayName;
@property NSString *identifier; // @dynamic identifier;
@property NSString *simulatorIdentifier; // @dynamic simulatorIdentifier;
@property NSString *version; // @dynamic version;

@end

@interface XCSPortalTeam : XCSObject
{
}

+ (id)portalTeamWithTeamID:(id)arg1 teamName:(id)arg2 identityCertificateID:(id)arg3 macProgramEnabled:(BOOL)arg4 iOSProgramEnabled:(BOOL)arg5 enabledDeviceIDs:(id)arg6 validationErrors:(id *)arg7;
- (BOOL)_validateTeamID:(id)arg1 teamName:(id)arg2 identityCertificateID:(id)arg3 macProgramEnabled:(BOOL)arg4 iOSProgramEnabled:(BOOL)arg5 enabledDeviceIDs:(id)arg6 validationErrors:(id *)arg7;
- (id)_initWithTeamID:(id)arg1 teamName:(id)arg2 identityCertificateID:(id)arg3 macProgramEnabled:(BOOL)arg4 iOSProgramEnabled:(BOOL)arg5 enabledDeviceIDs:(id)arg6 validationErrors:(id *)arg7;
- (id)dictionaryRepresentation;
- (id)initWithContents:(id)arg1 validationErrors:(id *)arg2;

// Remaining properties
@property(copy, nonatomic) NSArray *enabledDeviceIDs; // @dynamic enabledDeviceIDs;
@property(nonatomic) BOOL iOSProgramEnabled; // @dynamic iOSProgramEnabled;
@property(copy, nonatomic) NSString *identityCertificateID; // @dynamic identityCertificateID;
@property(nonatomic) BOOL macProgramEnabled; // @dynamic macProgramEnabled;
@property(copy, nonatomic) NSString *teamID; // @dynamic teamID;
@property(copy, nonatomic) NSString *teamName; // @dynamic teamName;

@end

@interface XCSRadarIssueAssociation : XCSObject <XCSIssueAssociationType>
{
    unsigned long long _problemID;
}

+ (id)radarIssueAssociationWithProblemID:(unsigned long long)arg1;
+ (id)associationKey;
@property(readonly, nonatomic) unsigned long long problemID; // @synthesize problemID=_problemID;
- (id)saveRepresentation;
- (id)dictionaryRepresentation;
- (id)initWithContents:(id)arg1 service:(id)arg2 validationErrors:(id *)arg3;
- (id)initWithProblemID:(unsigned long long)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XCSService : NSObject <XCSEventStreamDelegate>
{
    BOOL _enabled;
    BOOL _enableMessageChannel;
    struct OpaqueSecIdentityRef *_identity;
    NSString *_identityKeychainPath;
    NSData *_identityKeychainPassword;
    id <XCSServiceErrorDelegate> _errorDelegate;
    NSObject<OS_dispatch_queue> *_errorDelegateQueue;
    id <XCSServiceBuildDelegate> _buildDelegate;
    NSObject<OS_dispatch_queue> *_buildDelegateQueue;
    NSURL *_url;
    long long _version;
    NSString *_unitTestID;
    NSString *_connectionAddress;
    NSString *_clientUUID;
    NSError *_resolutionError;
    NSString *_netServiceDomain;
    NSString *_netServiceType;
    NSString *_netServiceName;
    NSString *_sessionUUID;
    long long _clientVersion;
    NSString *_unitTestName;
    NSString *_name;
    NSDictionary *_dictionaryRepresentation;
    XCSEventStream *_eventStream;
    NSString *_canonicalHostname;
    NSHTTPCookieStorage *_httpCookieStorage;
}

+ (id)resultsFromResponse:(id)arg1;
+ (id)serviceFromDictionaryRepresentation:(id)arg1;
+ (id)serviceWithConnectionAddress:(id)arg1 portNumber:(unsigned long long)arg2 enabled:(BOOL)arg3;
+ (id)serviceWithConnectionAddress:(id)arg1 portNumber:(unsigned long long)arg2;
+ (id)serviceWithNetServiceDomain:(id)arg1 type:(id)arg2 name:(id)arg3 enabled:(BOOL)arg4;
+ (id)serviceWithNetServiceDomain:(id)arg1 type:(id)arg2 name:(id)arg3;
+ (id)defaultCouchEndpoint;
+ (id)clientSSLEndpointWithHost:(id)arg1;
+ (id)defaultClientSSLEndpoint;
+ (id)defaultEndpoint;
@property(retain, nonatomic) NSHTTPCookieStorage *httpCookieStorage; // @synthesize httpCookieStorage=_httpCookieStorage;
@property(retain, nonatomic) NSString *canonicalHostname; // @synthesize canonicalHostname=_canonicalHostname;
@property(retain, nonatomic) XCSEventStream *eventStream; // @synthesize eventStream=_eventStream;
@property(copy, nonatomic) NSDictionary *dictionaryRepresentation; // @synthesize dictionaryRepresentation=_dictionaryRepresentation;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(copy, nonatomic) NSString *unitTestName; // @synthesize unitTestName=_unitTestName;
@property(nonatomic) long long clientVersion; // @synthesize clientVersion=_clientVersion;
@property(copy, nonatomic) NSString *sessionUUID; // @synthesize sessionUUID=_sessionUUID;
@property(readonly, nonatomic) NSString *netServiceName; // @synthesize netServiceName=_netServiceName;
@property(readonly, nonatomic) NSString *netServiceType; // @synthesize netServiceType=_netServiceType;
@property(readonly, nonatomic) NSString *netServiceDomain; // @synthesize netServiceDomain=_netServiceDomain;
@property(readonly, nonatomic) NSError *resolutionError; // @synthesize resolutionError=_resolutionError;
@property(readonly, nonatomic) NSString *clientUUID; // @synthesize clientUUID=_clientUUID;
@property(copy, nonatomic) NSString *connectionAddress; // @synthesize connectionAddress=_connectionAddress;
@property(copy, nonatomic) NSString *unitTestID; // @synthesize unitTestID=_unitTestID;
@property(nonatomic) long long version; // @synthesize version=_version;
@property(retain, nonatomic) NSURL *url; // @synthesize url=_url;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *buildDelegateQueue; // @synthesize buildDelegateQueue=_buildDelegateQueue;
@property(nonatomic) __weak id <XCSServiceBuildDelegate> buildDelegate; // @synthesize buildDelegate=_buildDelegate;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *errorDelegateQueue; // @synthesize errorDelegateQueue=_errorDelegateQueue;
@property(nonatomic) __weak id <XCSServiceErrorDelegate> errorDelegate; // @synthesize errorDelegate=_errorDelegate;
- (void).cxx_destruct;
- (void)_checkEndpointRedisCacheWithBase:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (long long)apiStatusForServiceVersionGreaterOrEqualTo:(unsigned long long)arg1;
- (void)removeAllObjectsAtBase:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)_uploadFileAtPath:(id)arg1 base:(id)arg2 verb:(unsigned long long)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)_uploadFileAtPath:(id)arg1 base:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)_deleteObject:(id)arg1 base:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)_deleteEndpointWithBase:(id)arg1 body:(id)arg2 usingCredential:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)_postToEndpointWithBase:(id)arg1 body:(id)arg2 usingCredential:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)_hitEndpointWithBase:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)_refreshObject:(id)arg1 base:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)_saveObject:(id)arg1 base:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)_patchObject:(id)arg1 base:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)_findObjectsOfClass:(Class)arg1 base:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)_createObjectWithDictionary:(id)arg1 base:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)_createObject:(id)arg1 base:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)logTasksList:(id)arg1;
- (void)removeAllUnitTestDocsWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)importTestResults:(id)arg1 completeIntegrationWithID:(id)arg2 testedDevices:(struct NSArray *)arg3 testedDevicesIDs:(id)arg4 hierarchy:(id)arg5 perfMetricNames:(id)arg6 perfMetricKeyPaths:(id)arg7 completionHandler:(CDUnknownBlockType)arg8;
- (void)isDatabaseBeingCompactedWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)databaseFragmentationIndexWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)databaseCompactWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)notifyAfterBonjourResolution:(CDUnknownBlockType)arg1;
@property(readonly) BOOL isResolving;
@property(readonly) BOOL isResolved;
@property(readonly) BOOL isBonjour;
- (void)canonicalHostnameWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)maintenanceTasksWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)verifyConnectionWithCompletionHandler:(CDUnknownBlockType)arg1;
@property(retain, nonatomic) NSData *identityKeychainPassword;
@property(retain, nonatomic) NSString *identityKeychainPath;
@property(nonatomic) struct OpaqueSecIdentityRef *identity;
@property(readonly, nonatomic) NSURL *friendlyURL;
@property(nonatomic) BOOL enabled;
@property(readonly) unsigned long long hash;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isEqualToService:(id)arg1;
- (void)dealloc;
- (void)evaluateAndReestablishMessageChannelConnections;
- (void)configureWithURL:(id)arg1 enableMessageChannel:(BOOL)arg2;
- (id)initWithUnitTestID:(id)arg1 name:(id)arg2 xcsCoreEndPoint:(id)arg3 enableMessageChannel:(BOOL)arg4;
- (id)initWithUnitTestID:(id)arg1 name:(id)arg2 xcsCoreEndPoint:(id)arg3;
- (id)initWithUnitTestID:(id)arg1 xcsCoreEndPoint:(id)arg2;
- (id)initBarebonesStartingEnabled:(BOOL)arg1;
- (id)initBarebones;
- (id)initWithURL:(id)arg1 enableMessageChannel:(BOOL)arg2 serviceEnabled:(BOOL)arg3;
- (id)initWithURL:(id)arg1 enableMessageChannel:(BOOL)arg2;
- (id)initWithURL:(id)arg1 enabled:(BOOL)arg2;
- (id)initWithURL:(id)arg1;
- (id)initForClientSSL;
- (id)init;
- (void)requestPortalSyncWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)listenForRequestPortalSync:(CDUnknownBlockType)arg1;
- (void)updateSettings:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)allSettingsWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)fetchSettingsWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)listenForAllDeviceChanges:(CDUnknownBlockType)arg1 owner:(id)arg2;
- (void)listenForDeviceDeletion:(CDUnknownBlockType)arg1;
- (void)listenForDeviceUpdates:(CDUnknownBlockType)arg1;
- (void)listenForDeviceCreation:(CDUnknownBlockType)arg1;
- (void)devicesForTeamIDs:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)allDevicesWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)fetchServerDeviceInfoWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)fetchDeviceWithID:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)removeDevice:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)updateDevice:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)createDevice:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (long long)isPlatformsAPIAvailable;
- (void)allPlatformsWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)savePlatform:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)fetchServiceHealthWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)createHostedRepository:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)allHostedRepositoriesWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)listenForCreateRepositoryRequest:(CDUnknownBlockType)arg1;
- (void)listenForListRepositoriesRequest:(CDUnknownBlockType)arg1;
- (void)uploadContentsOfFile:(id)arg1 toAsset:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)createAsset:(id)arg1 forIntegration:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)fetchAssetsForIntegration:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)latestIntegrationForBot:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)dataForSummaryGraphsUsingTimeseriesDataForBot:(id)arg1 andRange:(struct _NSRange)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)dataForTestResultsTableUsingTimeseriesDataForBot:(id)arg1 andRange:(struct _NSRange)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)timeseriesDataForBot:(id)arg1 andCategory:(id)arg2 inRange:(struct _NSRange)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)cleanAndStartBotRunForBotGUID:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)listenForBotDeletion:(CDUnknownBlockType)arg1 withOwner:(id)arg2;
- (void)listenForBotDeletion:(CDUnknownBlockType)arg1;
- (void)stopListeningForBotDeletionWithOwner:(id)arg1;
- (void)listenForBotUpdates:(CDUnknownBlockType)arg1 withOwner:(id)arg2;
- (void)listenForBotUpdates:(CDUnknownBlockType)arg1;
- (void)stopListeningForBotUpdatesWithOwner:(id)arg1;
- (void)listenForBotCreation:(CDUnknownBlockType)arg1 withOwner:(id)arg2;
- (void)listenForBotCreation:(CDUnknownBlockType)arg1;
- (void)stopListeningForBotCreationWithOwner:(id)arg1;
- (void)statsForBot:(id)arg1 sinceDate:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)statsForBot:(id)arg1 onDate:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)integrateBot:(id)arg1 shouldClean:(BOOL)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)integrateBot:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)removeBot:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)updateBot:(id)arg1 overwritingBlueprint:(BOOL)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)updateBot:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)allIntegrationsForBotWithID:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)allBotsWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)fetchBotWithID:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)duplicateBot:(id)arg1 values:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)createBot:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)fetchBlueprintForBot:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (long long)isFetchBlueprintAPIAvailable;
- (void)_performBlueprintOperationRequest:(id)arg1 withResultClass:(Class)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)reflightBranchesForBot:(id)arg1 updatedBlueprint:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (long long)isBatchTestRunFetchingAPIAvailable;
- (long long)isReflightBranchesForBotUpdatedBlueprintAPIAvailable;
- (void)reflightCredentialsForBot:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)listBranchesInBlueprint:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (long long)isListBranchesInBlueprintAPIAvailable;
- (void)preflightCredentialsInBlueprint:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (long long)isFingerprintEnforcementAvailable;
- (void)stopListeningForACLUpdateWithOwner:(id)arg1;
- (void)listenForACLUpdate:(CDUnknownBlockType)arg1 withOwner:(id)arg2;
- (void)updateACL:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)allACLsWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)fetchExpandedACLWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)fetchACLWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)isServiceLoggedIn:(CDUnknownBlockType)arg1;
- (void)isBotCreatorWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)logoutWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)loginWithUserName:(id)arg1 password:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)obtainIdentityTokenWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)sendNotificationRequest:(id)arg1 forIntegrationID:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)allOrphanedIntegrationsWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)requestToBuildIntegration:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)allPendingIntegrationsWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)registerBuildServiceWithCapabilities:(id)arg1;
- (id)allAssetsURLForIntegration:(id)arg1;
- (id)webAppURLForBigScreen;
- (id)webAppURLForIntegration:(id)arg1;
- (id)webAppURLForBot:(id)arg1;
- (id)webAppBaseURL;
- (void)handleError:(id)arg1 forRequest:(id)arg2 withFallThroughHandler:(CDUnknownBlockType)arg3 retryHandler:(CDUnknownBlockType)arg4;
- (id)objectWithTitle:(id)arg1 inList:(id)arg2;
- (BOOL)_updateFileWithKeyPathComponents:(id)arg1 usingMethods:(id)arg2 inIntegration:(id)arg3 error:(id *)arg4;
- (void)_updateFiles:(id)arg1 inIntegration:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)_bulkImportDocuments:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)_bulkImportDeviceDataFilesUsingIntegration:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)_convertFilesToJSON:(id)arg1 integration:(id)arg2 error:(id *)arg3;
- (id)_splitFileListInBatches:(id)arg1 integration:(id)arg2 error:(id *)arg3;
- (void)importCodeCoverageIntegration:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)updateIntegration:(id)arg1 withFileKeyPaths:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)codeCoverageIntegrationWithIntegrationID:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (long long)isCodeCoverageAPIAvailable;
- (void)deviceDataForTestResultsTableUsingTimeseriesDataForIntegration:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)scmCommitsForIntegration:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)timeseriesDataForIntegration:(id)arg1 category:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)pruneArchiveAndProductForIntegration:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)resume:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)pause:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)cancel:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)integrationWithGUID:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)_integrationRangeOfClass:(Class)arg1 base:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)listenForIntegrationDeletion:(CDUnknownBlockType)arg1 withOwner:(id)arg2;
- (void)listenForIntegrationDeletion:(CDUnknownBlockType)arg1;
- (void)stopListeningForIntegrationDeletionWithOwner:(id)arg1;
- (void)listenForAdvisoryIntegrationStatusUpdates:(CDUnknownBlockType)arg1 withOwner:(id)arg2;
- (void)listenForAdvisoryIntegrationStatusUpdates:(CDUnknownBlockType)arg1;
- (void)listenForIntegrationStatusUpdates:(CDUnknownBlockType)arg1 withOwner:(id)arg2;
- (void)listenForIntegrationStatusUpdates:(CDUnknownBlockType)arg1;
- (void)stopListeningForIntegrationStatusUpdatesWithOwner:(id)arg1;
- (void)listenForIntegrationCreation:(CDUnknownBlockType)arg1 withOwner:(id)arg2;
- (void)listenForIntegrationCreation:(CDUnknownBlockType)arg1;
- (void)stopListeningForIntegrationCreationWithOwner:(id)arg1;
- (void)emitAdvisoryStatusForIntegration:(id)arg1 message:(id)arg2 percentage:(double)arg3;
- (long long)isTestsWithKeyPathsForIntegrationDeviceAPIAvailable;
- (void)testsWithKeyPaths:(id)arg1 forIntegration:(id)arg2 device:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)testWithKeyPath:(id)arg1 forIntegration:(id)arg2 device:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)testsForIntegration:(id)arg1 device:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)removeTags:(id)arg1 integration:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)addTags:(id)arg1 integration:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)integrationsSummariesBeforeIntegrationNumber:(unsigned long long)arg1 howMany:(unsigned long long)arg2 forBot:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)integrationsSummariesAfterIntegrationNumber:(unsigned long long)arg1 howMany:(unsigned long long)arg2 forBot:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)integrationSummaryForIntegrationNumber:(unsigned long long)arg1 forBot:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)lastIntegrationSummaries:(unsigned long long)arg1 forBot:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)allIntegrationSummariesForBot:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)nonFatalIntegrationsBeforeIntegrationNumber:(unsigned long long)arg1 howMany:(unsigned long long)arg2 forBot:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)lastIntegrationWithBuildResultForBotIdentifier:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)nonFatalIntegrationsAfterIntegrationNumber:(unsigned long long)arg1 howMany:(unsigned long long)arg2 forBot:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)lastNonFatalIntegrations:(unsigned long long)arg1 forBotIdentifier:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)lastNonFatalIntegrations:(unsigned long long)arg1 forBot:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)allNonFatalIntegrationsForBot:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)integrationsBeforeIntegrationNumber:(unsigned long long)arg1 howMany:(unsigned long long)arg2 forBot:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)integrationsAfterIntegrationNumber:(unsigned long long)arg1 howMany:(unsigned long long)arg2 forBot:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)lastIntegrations:(unsigned long long)arg1 forBotIdentifier:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)lastIntegrations:(unsigned long long)arg1 forBot:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)integrationCountForBot:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)allIntegrationsForBot:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)allRunningIntegrationsWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)readIssuesForIntegration:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)removeAssociation:(id)arg1 fromIssue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)addAssociation:(id)arg1 toIssue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)assignIssue:(id)arg1 toUser:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)unsilenceIssue:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)silenceIssue:(id)arg1 silenceMode:(long long)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)createIssues:(id)arg1 forIntegration:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)createIssue:(id)arg1 forIntegration:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)readCommitHistoryForIntegration:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)saveCommitHistory:(struct NSArray *)arg1 forIntegration:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)cancelIntegration:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)removeIntegration:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)updateIntegration:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)fetchIntegrationWithNumber:(unsigned long long)arg1 bot:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)fetchBlueprintForIntegration:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)fetchIntegrationWithID:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)createIntegration:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)_isUserOperationAllowedWithInfo:(id)arg1 completionHandler:(CDUnknownBlockType)arg2 error:(id)arg3;
- (void)currentLoggedUserCompletionHandler:(CDUnknownBlockType)arg1;
- (void)canUserCreateBots:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)canUserViewBots:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)canUserCreateRepositories:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)updateVersionInfo:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)fetchVersionInfoWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)createVersionInfo:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;

@end

@interface XCSWorkerServiceHealth : XCSObject
{
    unsigned long long _persistentTurboSocketConnections;
    unsigned long long _persistentSocketIOConnections;
    unsigned long long _physicalMemoryUsed;
    unsigned long long _v8HeapAllocatedBytes;
    unsigned long long _v8HeapUsedBytes;
}

@property(nonatomic) unsigned long long v8HeapUsedBytes; // @synthesize v8HeapUsedBytes=_v8HeapUsedBytes;
@property(nonatomic) unsigned long long v8HeapAllocatedBytes; // @synthesize v8HeapAllocatedBytes=_v8HeapAllocatedBytes;
@property(nonatomic) unsigned long long physicalMemoryUsed; // @synthesize physicalMemoryUsed=_physicalMemoryUsed;
@property(nonatomic) unsigned long long persistentSocketIOConnections; // @synthesize persistentSocketIOConnections=_persistentSocketIOConnections;
@property(nonatomic) unsigned long long persistentTurboSocketConnections; // @synthesize persistentTurboSocketConnections=_persistentTurboSocketConnections;
- (id)initWithContents:(id)arg1 service:(id)arg2 validationErrors:(id *)arg3;

// Remaining properties
@property(nonatomic) unsigned long long openDBConnections; // @dynamic openDBConnections;
@property(nonatomic) unsigned long long openHTTPConnections; // @dynamic openHTTPConnections;
@property(nonatomic) unsigned long long requestsPerSecond; // @dynamic requestsPerSecond;
@property(nonatomic) unsigned long long totalRequests; // @dynamic totalRequests;
@property(nonatomic) unsigned long long uptime; // @dynamic uptime;

@end

@interface XCSServiceHealth : XCSWorkerServiceHealth
{
    NSDictionary *_workers;
}

@property(retain, nonatomic) NSDictionary *workers; // @synthesize workers=_workers;
- (void).cxx_destruct;
- (id)initWithContents:(id)arg1 service:(id)arg2 validationErrors:(id *)arg3;

@end

@interface XCSServiceManager : NSObject
{
    NSArray *_services;
}

+ (id)sharedServiceManager;
@property(readonly, copy, nonatomic) NSArray *services; // @synthesize services=_services;
- (void).cxx_destruct;
- (void)writeServicesToLocalCacheWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)readServicesFromLocalCacheWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)removeAllServicesWithCompletionBlock:(CDUnknownBlockType)arg1;
- (id)_localCachePath:(id *)arg1;
- (id)serviceMatchingClientUUID:(id)arg1;
- (void)removeService:(id)arg1 withCompletionBlock:(CDUnknownBlockType)arg2;
- (void)addNewService:(id)arg1 withCompletionBlock:(CDUnknownBlockType)arg2;

@end

@interface XCSService_BonjourConnection : XCSService <NSNetServiceDelegate>
{
    NSMutableArray *_resolveListeners;
    NSObject<OS_dispatch_queue> *_resolveListenerQueue;
    BOOL isResolved;
    BOOL isResolving;
    NSString *netServiceDomain;
    NSString *netServiceType;
    NSString *netServiceName;
    NSError *resolutionError;
    NSNetService *_netService;
}

@property(retain) NSNetService *netService; // @synthesize netService=_netService;
@property(retain, nonatomic) NSError *resolutionError; // @synthesize resolutionError;
@property BOOL isResolving; // @synthesize isResolving;
@property BOOL isResolved; // @synthesize isResolved;
@property(retain, nonatomic) NSString *netServiceName; // @synthesize netServiceName;
@property(retain, nonatomic) NSString *netServiceType; // @synthesize netServiceType;
@property(retain, nonatomic) NSString *netServiceDomain; // @synthesize netServiceDomain;
- (void).cxx_destruct;
- (void)netService:(id)arg1 didNotResolve:(id)arg2;
- (void)netServiceDidResolveAddress:(id)arg1;
- (void)notifyAfterBonjourResolution:(CDUnknownBlockType)arg1;
- (void)resolveService;
- (BOOL)isBonjour;
- (id)initWithNetServiceDomain:(id)arg1 type:(id)arg2 name:(id)arg3 enabled:(BOOL)arg4;
- (id)initWithNetServiceDomain:(id)arg1 type:(id)arg2 name:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XCSSettings : XCSObject
{
    NSString *_fromName;
    NSString *_fromAddress;
}

+ (id)smtpSettingsWithHost:(id)arg1;
+ (id)sendmailSettings;
@property(retain, nonatomic) NSString *fromAddress; // @synthesize fromAddress=_fromAddress;
@property(retain, nonatomic) NSString *fromName; // @synthesize fromName=_fromName;
- (void).cxx_destruct;
- (id)saveRepresentation;
- (id)patchRepresentation;
- (id)dictionaryRepresentation;
- (id)description;
- (id)initWithID:(id)arg1 revision:(id)arg2 docType:(id)arg3 service:(id)arg4 transportType:(long long)arg5 smtpHost:(id)arg6 fromName:(id)arg7 fromAddress:(id)arg8 replyToName:(id)arg9 replyToAddress:(id)arg10 serviceEnabled:(BOOL)arg11;
- (id)initWithContents:(id)arg1 service:(id)arg2 validationErrors:(id *)arg3;

// Remaining properties
@property(nonatomic) NSString *replyToAddress; // @dynamic replyToAddress;
@property(nonatomic) NSString *replyToName; // @dynamic replyToName;
@property(nonatomic) BOOL serviceEnabled; // @dynamic serviceEnabled;
@property(nonatomic) NSString *smtpHost; // @dynamic smtpHost;
@property(nonatomic) long long transportType; // @dynamic transportType;

@end

@interface XCSTest : XCSObject
{
    BOOL _passed;
    XCSIntegration *_integration;
    XCSDevice *_testedDevice;
    NSString *_keyPath;
    NSDate *_date;
    double _startTime;
    double _endTime;
    NSArray *_failureSummaries;
    NSArray *_activities;
    NSString *_testableBlueprintPath;
    NSString *_testableBlueprintName;
    NSString *_deviceIdentifier;
    NSMutableArray *_somePerfMetrics;
}

+ (id)gregorianCalendar;
@property(retain, nonatomic) NSMutableArray *somePerfMetrics; // @synthesize somePerfMetrics=_somePerfMetrics;
@property(retain, nonatomic) NSString *deviceIdentifier; // @synthesize deviceIdentifier=_deviceIdentifier;
@property(copy, nonatomic) NSString *testableBlueprintName; // @synthesize testableBlueprintName=_testableBlueprintName;
@property(copy, nonatomic) NSString *testableBlueprintPath; // @synthesize testableBlueprintPath=_testableBlueprintPath;
@property(retain, nonatomic) NSArray *activities; // @synthesize activities=_activities;
@property(retain, nonatomic) NSArray *failureSummaries; // @synthesize failureSummaries=_failureSummaries;
@property(nonatomic) BOOL passed; // @synthesize passed=_passed;
@property(nonatomic) double endTime; // @synthesize endTime=_endTime;
@property(nonatomic) double startTime; // @synthesize startTime=_startTime;
@property(retain, nonatomic) NSDate *date; // @synthesize date=_date;
@property(copy, nonatomic) NSString *keyPath; // @synthesize keyPath=_keyPath;
@property(retain, nonatomic) XCSDevice *testedDevice; // @synthesize testedDevice=_testedDevice;
@property(retain, nonatomic) XCSIntegration *integration; // @synthesize integration=_integration;
- (void).cxx_destruct;
- (BOOL)_validateWithPerfMetrics:(struct NSArray *)arg1 errors:(id *)arg2;
- (BOOL)_validateWithIntegration:(id)arg1 device:(id)arg2 keyPath:(id)arg3 date:(id)arg4 startTime:(double)arg5 endTime:(double)arg6 passed:(BOOL)arg7 failureSummaries:(id)arg8 activities:(id)arg9 testableBlueprintName:(id)arg10 testableBlueprintPath:(id)arg11;
- (id)saveRepresentationHumanReadable:(BOOL)arg1;
- (id)saveRepresentation;
- (id)dictionaryRepresentation;
- (id)description;
- (id)initWithContents:(id)arg1 service:(id)arg2 validationErrors:(id *)arg3;
- (id)initWithIntegration:(id)arg1 device:(id)arg2 keyPath:(id)arg3 date:(id)arg4 startTime:(double)arg5 endTime:(double)arg6 passed:(BOOL)arg7 failureSummaries:(id)arg8 activities:(id)arg9 testableBlueprintName:(id)arg10 testableBlueprintPath:(id)arg11 validationErrors:(id *)arg12;
- (BOOL)setTestPerfMetrics:(struct NSArray *)arg1 errors:(id *)arg2;
@property(readonly, copy, nonatomic) NSString *name;
@property(readonly, nonatomic) NSArray *perfMetrics;

@end

@interface XCSTestActivity : XCSObject
{
    NSString *_title;
    NSString *_UUID;
    NSDate *_start;
    NSDate *_finish;
    XCSIntegrationAsset *_screenshot;
    XCSIntegrationAsset *_snapshot;
    NSArray *_subactivities;
}

@property(retain, nonatomic) NSArray *subactivities; // @synthesize subactivities=_subactivities;
@property(retain, nonatomic) XCSIntegrationAsset *snapshot; // @synthesize snapshot=_snapshot;
@property(retain, nonatomic) XCSIntegrationAsset *screenshot; // @synthesize screenshot=_screenshot;
@property(retain, nonatomic) NSDate *finish; // @synthesize finish=_finish;
@property(retain, nonatomic) NSDate *start; // @synthesize start=_start;
@property(copy, nonatomic) NSString *UUID; // @synthesize UUID=_UUID;
@property(copy, nonatomic) NSString *title; // @synthesize title=_title;
- (void).cxx_destruct;
- (BOOL)_validateTitle:(id)arg1 UUID:(id)arg2 start:(id)arg3 finish:(id)arg4 screenshot:(id)arg5 snapshot:(id)arg6 subactivities:(id)arg7 validationErrors:(id *)arg8;
- (id)_initWithTitle:(id)arg1 UUID:(id)arg2 start:(id)arg3 finish:(id)arg4 screenshot:(id)arg5 snapshot:(id)arg6 subactivities:(id)arg7 validationErrors:(id *)arg8;
- (id)initWithContents:(id)arg1 service:(id)arg2 validationErrors:(id *)arg3;

@end

@interface XCSTestActivityResult : XCSObject
{
    NSMutableArray *_subactivityResults;
    NSString *_title;
    NSString *_UUID;
    NSDate *_start;
    NSDate *_finish;
    NSString *_screenshotFilePath;
    NSString *_snapshotFilePath;
    XCSIntegrationAsset *_screenshot;
    XCSIntegrationAsset *_snapshot;
}

@property(retain, nonatomic) XCSIntegrationAsset *snapshot; // @synthesize snapshot=_snapshot;
@property(retain, nonatomic) XCSIntegrationAsset *screenshot; // @synthesize screenshot=_screenshot;
@property(readonly, nonatomic) NSArray *subactivityResults; // @synthesize subactivityResults=_subactivityResults;
@property(readonly, nonatomic) NSString *snapshotFilePath; // @synthesize snapshotFilePath=_snapshotFilePath;
@property(readonly, nonatomic) NSString *screenshotFilePath; // @synthesize screenshotFilePath=_screenshotFilePath;
@property(readonly, nonatomic) NSDate *finish; // @synthesize finish=_finish;
@property(readonly, nonatomic) NSDate *start; // @synthesize start=_start;
@property(readonly, nonatomic) NSString *UUID; // @synthesize UUID=_UUID;
@property(readonly, nonatomic) NSString *title; // @synthesize title=_title;
- (void).cxx_destruct;
- (id)dictionaryRepresentation;
- (void)uploadAttachmentsToIntegration:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)activityResultWithTitle:(id)arg1 UUID:(id)arg2 start:(id)arg3 finish:(id)arg4 screenshotFilePath:(id)arg5 snapshotFilePath:(id)arg6 validationErrors:(id *)arg7;
- (id)initWithTitle:(id)arg1 UUID:(id)arg2 start:(id)arg3 finish:(id)arg4 screenshotFilePath:(id)arg5 snapshotFilePath:(id)arg6 validationErrors:(id *)arg7;

@end

@interface XCSTestObjectPlaceholder : NSObject <XCSPlaceholderProtocol>
{
    XCSIntegration *_integration;
    XCSTestObjectPlaceholder *_parent;
    NSString *_name;
    NSArray *_children;
    long long _status;
    NSString *_keyPath;
    XCSDevice *_deviceFilter;
    NSNumber *_hasPerfMetricsCachedValue;
}

@property(retain, nonatomic) NSNumber *hasPerfMetricsCachedValue; // @synthesize hasPerfMetricsCachedValue=_hasPerfMetricsCachedValue;
@property(retain, nonatomic) XCSDevice *deviceFilter; // @synthesize deviceFilter=_deviceFilter;
@property(retain, nonatomic) NSString *keyPath; // @synthesize keyPath=_keyPath;
@property(nonatomic) long long status; // @synthesize status=_status;
@property(retain, nonatomic) NSArray *children; // @synthesize children=_children;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(nonatomic) __weak XCSTestObjectPlaceholder *parent; // @synthesize parent=_parent;
@property(retain, nonatomic) XCSIntegration *integration; // @synthesize integration=_integration;
- (void).cxx_destruct;
- (BOOL)_validateWithIntegration:(id)arg1 name:(id)arg2 keyPath:(id)arg3 validationErrors:(id *)arg4;
- (id)_statusInfoForKeyPath:(id)arg1;
- (id)saveRepresentationHumanReadable:(BOOL)arg1;
- (id)description;
@property(readonly, nonatomic) BOOL hasPerfTests;
@property(readonly, nonatomic) long long aggregatedStatus;
- (double)statusValueForDeviceIdentifier:(id)arg1;
- (long long)statusForDeviceIdentifier:(id)arg1;
- (id)initWithIntegration:(id)arg1 name:(id)arg2 keyPath:(id)arg3 validationErrors:(id *)arg4;

@end

@interface XCSTestClassPlaceholder : XCSTestObjectPlaceholder
{
}

- (id)_testWithKeyPath:(id)arg1;
- (id)saveRepresentationHumanReadable:(BOOL)arg1;
- (id)description;
- (BOOL)hasPerfTests;
@property(readonly, nonatomic) NSArray *tests;
- (void)setTestTests:(id)arg1;
@property(readonly, nonatomic) XCSTestTargetPlaceholder *testTarget;

@end

@interface XCSTestDevice : XCSDevice
{
    XCSIntegration *integration;
}

@property(nonatomic) __weak XCSIntegration *integration; // @synthesize integration;
- (void).cxx_destruct;
- (id)description;

@end

@interface XCSTestPerfMetric : XCSObject
{
    BOOL passed;
    XCSTest *test;
    NSString *name;
    NSString *identifier;
    unsigned long long type;
    NSString *unit;
    double avg;
    double min;
    double max;
    double rsd;
    NSNumber *baseline;
    NSNumber *maxPercentRegression;
    NSNumber *maxPercentRelativeStandardDeviation;
    struct NSArray *iterations;
}

@property(readonly, nonatomic) NSArray *iterations; // @synthesize iterations;
@property(readonly, nonatomic) NSNumber *maxPercentRelativeStandardDeviation; // @synthesize maxPercentRelativeStandardDeviation;
@property(readonly, nonatomic) NSNumber *maxPercentRegression; // @synthesize maxPercentRegression;
@property(readonly, nonatomic) NSNumber *baseline; // @synthesize baseline;
@property(readonly, nonatomic) double rsd; // @synthesize rsd;
@property(readonly, nonatomic) double max; // @synthesize max;
@property(readonly, nonatomic) double min; // @synthesize min;
@property(readonly, nonatomic) double avg; // @synthesize avg;
@property(readonly, nonatomic) BOOL passed; // @synthesize passed;
@property(readonly, copy, nonatomic) NSString *unit; // @synthesize unit;
@property(readonly, nonatomic) unsigned long long type; // @synthesize type;
@property(readonly, copy, nonatomic) NSString *identifier; // @synthesize identifier;
@property(readonly, copy, nonatomic) NSString *name; // @synthesize name;
@property(nonatomic) __weak XCSTest *test; // @synthesize test;
- (void).cxx_destruct;
- (BOOL)_validateWithName:(id)arg1 identifier:(id)arg2 type:(unsigned long long)arg3 unit:(id)arg4 passed:(BOOL)arg5 avg:(double)arg6 min:(double)arg7 max:(double)arg8 rsd:(double)arg9 baseline:(id)arg10 maxPercentRegression:(id)arg11 maxPercentRelativeStandardDeviation:(id)arg12 iterations:(struct NSArray *)arg13 errors:(id *)arg14;
- (id)saveRepresentationHumanReadable:(BOOL)arg1;
- (id)saveRepresentation;
- (id)description;
- (BOOL)setTest:(id)arg1 error:(id *)arg2;
- (id)initWithName:(id)arg1 contents:(id)arg2 validationErrors:(id *)arg3;
- (id)initWithName:(id)arg1 identifier:(id)arg2 type:(unsigned long long)arg3 unit:(id)arg4 passed:(BOOL)arg5 avg:(double)arg6 min:(double)arg7 max:(double)arg8 rsd:(double)arg9 baseline:(id)arg10 maxPercentRegression:(id)arg11 maxPercentRelativeStandardDeviation:(id)arg12 iterations:(id)arg13 validationErrors:(id *)arg14;

@end

@interface XCSTestPlaceholder : XCSTestObjectPlaceholder
{
}

- (id)saveRepresentationHumanReadable:(BOOL)arg1;
- (id)description;
- (BOOL)hasPerfTests;
- (long long)aggregatedStatus;
- (long long)statusForDeviceIdentifier:(id)arg1;
@property(readonly, nonatomic) XCSTestClassPlaceholder *testClass;

@end

@interface XCSTestResult : XCSObject
{
    BOOL passed;
    NSString *keyPath;
    NSDate *date;
    double startTime;
    double endTime;
    NSArray *failureSummaries;
    NSString *testableBlueprintName;
    NSString *testableBlueprintPath;
    XCSDevice *_testedDevice;
    XCSIntegrationTestResult *_integrationResult;
    NSMutableArray *_perfMetrics;
    NSMutableArray *_activityResults;
}

+ (BOOL)_validateWithIntegrationTestResult:(id)arg1 validationErrors:(id *)arg2;
+ (id)testResultWithIntegrationTestResult:(id)arg1 device:(id)arg2 keyPath:(id)arg3 date:(id)arg4 startTime:(double)arg5 endTime:(double)arg6 passed:(BOOL)arg7 failureSummaries:(id)arg8 testableBlueprintPath:(id)arg9 testableBlueprintName:(id)arg10 validationErrors:(id *)arg11;
@property(retain, nonatomic) NSMutableArray *activityResults; // @synthesize activityResults=_activityResults;
@property(retain, nonatomic) NSMutableArray *perfMetrics; // @synthesize perfMetrics=_perfMetrics;
@property(nonatomic) __weak XCSIntegrationTestResult *integrationResult; // @synthesize integrationResult=_integrationResult;
@property(retain, nonatomic) XCSDevice *testedDevice; // @synthesize testedDevice=_testedDevice;
@property(copy, nonatomic) NSString *testableBlueprintPath; // @synthesize testableBlueprintPath;
@property(copy, nonatomic) NSString *testableBlueprintName; // @synthesize testableBlueprintName;
@property(retain, nonatomic) NSArray *failureSummaries; // @synthesize failureSummaries;
@property(nonatomic) BOOL passed; // @synthesize passed;
@property(nonatomic) double endTime; // @synthesize endTime;
@property(nonatomic) double startTime; // @synthesize startTime;
@property(retain, nonatomic) NSDate *date; // @synthesize date;
@property(copy, nonatomic) NSString *keyPath; // @synthesize keyPath;
- (void).cxx_destruct;
- (BOOL)_validateWithName:(id)arg1 type:(unsigned long long)arg2 unit:(id)arg3 validationErrors:(id *)arg4;
- (BOOL)_validateWithDevice:(id)arg1 keyPath:(id)arg2 date:(id)arg3 startTime:(double)arg4 endTime:(double)arg5 passed:(BOOL)arg6 failureSummaries:(id)arg7 testableBlueprintPath:(id)arg8 testableBlueprintName:(id)arg9 validationErrors:(id *)arg10;
- (id)saveRepresentationHumanReadable:(BOOL)arg1;
- (id)saveRepresentation;
- (id)dictionaryRepresentation;
- (id)description;
- (id)initWithDevice:(id)arg1 keyPath:(id)arg2 date:(id)arg3 startTime:(double)arg4 endTime:(double)arg5 passed:(BOOL)arg6 failureSummaries:(id)arg7 testableBlueprintPath:(id)arg8 testableBlueprintName:(id)arg9 validationErrors:(id *)arg10;
- (id)initWithContents:(id)arg1 service:(id)arg2 validationErrors:(id *)arg3;
- (id)activityResultWithTitle:(id)arg1 UUID:(id)arg2 start:(id)arg3 finish:(id)arg4 screenshotFilePath:(id)arg5 snapshotFilePath:(id)arg6 validationErrors:(id *)arg7;
- (id)perfMetricResultWithName:(id)arg1 identifier:(id)arg2 type:(unsigned long long)arg3 unit:(id)arg4 iterations:(id)arg5 baseline:(id)arg6 maxPercentRegression:(double)arg7 maxPercentRelativeStandardDeviation:(double)arg8 hasPassed:(BOOL)arg9 validationErrors:(id *)arg10;

@end

@interface XCSTestTargetPlaceholder : XCSTestObjectPlaceholder
{
}

- (id)saveRepresentationHumanReadable:(BOOL)arg1;
- (id)description;
- (BOOL)hasPerfTests;
@property(readonly, nonatomic) NSArray *testClasses;
- (void)setTestClasses:(struct NSArray *)arg1;

@end

@interface XCSTrigger : XCSObject
{
}

+ (id)triggerWithType:(unsigned long long)arg1 name:(id)arg2 phase:(unsigned long long)arg3 conditions:(id)arg4 scriptBody:(id)arg5 emailConfiguration:(id)arg6 validationErrors:(id *)arg7;
- (BOOL)_validateType:(unsigned long long)arg1 name:(id)arg2 phase:(unsigned long long)arg3 conditions:(id)arg4 scriptBody:(id)arg5 emailConfiguration:(id)arg6 validationErrors:(id *)arg7;
- (BOOL)shouldExecuteForIntegration:(id)arg1;
- (unsigned long long)executionReasonForIntegration:(id)arg1;
- (id)initWithType:(unsigned long long)arg1 name:(id)arg2 phase:(unsigned long long)arg3 conditions:(id)arg4 scriptBody:(id)arg5 emailConfiguration:(id)arg6 service:(id)arg7 validationErrors:(id *)arg8;
- (id)initWithContents:(id)arg1 service:(id)arg2 validationErrors:(id *)arg3;

// Remaining properties
@property XCSTriggerConditions *conditions; // @dynamic conditions;
@property XCSTriggerEmailConfiguration *emailConfiguration; // @dynamic emailConfiguration;
@property NSString *name; // @dynamic name;
@property unsigned long long phase; // @dynamic phase;
@property NSString *scriptBody; // @dynamic scriptBody;
@property unsigned long long type; // @dynamic type;

@end

@interface XCSTriggerConditions : XCSObject
{
}

+ (id)triggerConditionsWithStatus:(long long)arg1 onSuccess:(BOOL)arg2 onWarnings:(BOOL)arg3 onAnalyzerWarnings:(BOOL)arg4 onFailingTests:(BOOL)arg5 onBuildErrors:(BOOL)arg6 onInternalErrors:(BOOL)arg7 validationErrors:(id *)arg8;
- (BOOL)shouldExecuteForIntegration:(id)arg1;
- (BOOL)shouldSendAllClearEmailForIntegration:(id)arg1;
- (id)matchingIntegrationSubStatuses;
- (BOOL)_validateStatus:(long long)arg1 onSuccess:(BOOL)arg2 onWarnings:(BOOL)arg3 onAnalyzerWarnings:(BOOL)arg4 onFailingTests:(BOOL)arg5 onBuildErrors:(BOOL)arg6 onInternalErrors:(BOOL)arg7 validationErrors:(id *)arg8;
- (id)initWithStatus:(long long)arg1 onSuccess:(BOOL)arg2 onWarnings:(BOOL)arg3 onAnalyzerWarnings:(BOOL)arg4 onFailingTests:(BOOL)arg5 onBuildErrors:(BOOL)arg6 onInternalErrors:(BOOL)arg7 service:(id)arg8 validationErrors:(id *)arg9;
- (id)initWithContents:(id)arg1 service:(id)arg2 validationErrors:(id *)arg3;

// Remaining properties
@property BOOL onAnalyzerWarnings; // @dynamic onAnalyzerWarnings;
@property BOOL onBuildErrors; // @dynamic onBuildErrors;
@property BOOL onFailingTests; // @dynamic onFailingTests;
@property BOOL onInternalErrors; // @dynamic onInternalErrors;
@property BOOL onSuccess; // @dynamic onSuccess;
@property BOOL onWarnings; // @dynamic onWarnings;
@property long long status; // @dynamic status;

@end

@interface XCSTriggerEmailConfiguration : XCSObject
{
    BOOL _emailCommitters;
    BOOL _includeIssueDetails;
    BOOL _includeCommitMessages;
    XCSTriggerSCMOptions *_scmOptions;
    NSArray *_additionalRecipients;
}

+ (id)emailConfigurationWithAdditionalRecipients:(id)arg1 scmOptions:(id)arg2 emailCommitters:(BOOL)arg3 includeIssueDetails:(BOOL)arg4 includeCommitMessages:(BOOL)arg5 validationErrors:(id *)arg6;
@property(nonatomic) BOOL includeCommitMessages; // @synthesize includeCommitMessages=_includeCommitMessages;
@property(nonatomic) BOOL includeIssueDetails; // @synthesize includeIssueDetails=_includeIssueDetails;
@property(retain, nonatomic) NSArray *additionalRecipients; // @synthesize additionalRecipients=_additionalRecipients;
@property(retain, nonatomic) XCSTriggerSCMOptions *scmOptions; // @synthesize scmOptions=_scmOptions;
@property(nonatomic) BOOL emailCommitters; // @synthesize emailCommitters=_emailCommitters;
- (void).cxx_destruct;
- (id)saveRepresentation;
- (id)dictionaryRepresentation;
- (BOOL)_validateAdditionalRecipients:(id)arg1 scmOptions:(id)arg2 emailCommitters:(BOOL)arg3 includeIssueDetails:(BOOL)arg4 includeCommitMessages:(BOOL)arg5 validationErrors:(id *)arg6;
- (id)initWithContents:(id)arg1 service:(id)arg2 validationErrors:(id *)arg3;
- (id)initWithAdditionalRecipients:(id)arg1 scmOptions:(id)arg2 emailCommitters:(BOOL)arg3 includeIssueDetails:(BOOL)arg4 includeCommitMessages:(BOOL)arg5 validationErrors:(id *)arg6;

@end

@interface XCSTriggerSCMOptions : XCSObject
{
    NSDictionary *_repositories;
}

+ (id)triggerSCMOptionsWithRepositories:(id)arg1 validationErrors:(id *)arg2;
+ (id)emptyTriggerSCMOptions;
@property(retain, nonatomic) NSDictionary *repositories; // @synthesize repositories=_repositories;
- (void).cxx_destruct;
- (id)dictionaryRepresentation;
- (id)description;
- (BOOL)shouldSendEmailForRepositoryWithID:(id)arg1;
- (id)initWithContents:(id)arg1 service:(id)arg2 validationErrors:(id *)arg3;

@end

@interface XCSUser : NSObject
{
    NSString *_ID;
    NSString *_login;
    NSString *_externalID;
    NSString *_shortName;
    NSString *_longName;
}

@property(readonly, copy) NSString *longName; // @synthesize longName=_longName;
@property(readonly, copy) NSString *shortName; // @synthesize shortName=_shortName;
@property(readonly, copy) NSString *externalID; // @synthesize externalID=_externalID;
@property(readonly, copy) NSString *login; // @synthesize login=_login;
@property(readonly, copy) NSString *ID; // @synthesize ID=_ID;
- (void).cxx_destruct;
- (id)initWithID:(id)arg1 login:(id)arg2 externalID:(id)arg3 shortName:(id)arg4 longName:(id)arg5;

@end

@interface XCSUserSession : NSObject
{
    NSString *_guid;
    XCSUser *_user;
    NSDate *_createTime;
    NSDate *_updateTime;
    NSDate *_expireTime;
}

@property(readonly, copy) NSDate *expireTime; // @synthesize expireTime=_expireTime;
@property(readonly, copy) NSDate *updateTime; // @synthesize updateTime=_updateTime;
@property(readonly, copy) NSDate *createTime; // @synthesize createTime=_createTime;
@property(readonly, copy) XCSUser *user; // @synthesize user=_user;
@property(readonly, copy) NSString *guid; // @synthesize guid=_guid;
- (void).cxx_destruct;
- (id)initWithGUID:(id)arg1 user:(id)arg2 createTime:(id)arg3 updateTime:(id)arg4 expireTime:(id)arg5;

@end

@interface XCSUtilities : NSObject
{
}

+ (void)removeValueForKeyPath:(id)arg1 rootObject:(id)arg2;
+ (unsigned long long)sanitizeOperationFromObject:(id)arg1;
+ (void)sanitizeRootObject:(id)arg1 traversingObject:(id)arg2 usingKey:(id)arg3 index:(unsigned long long)arg4;
+ (id)sanitizeDictionary:(id)arg1;
+ (id)object:(id)arg1 JSONParseWithError:(id *)arg2;
+ (id)object:(id)arg1 toJSONDataWithOptions:(unsigned long long)arg2 error:(id *)arg3;
+ (id)object:(id)arg1 toJSONDataWithError:(id *)arg2;
+ (id)object:(id)arg1 toJSONWithOptions:(unsigned long long)arg2 error:(id *)arg3;
+ (id)object:(id)arg1 toJSONWithError:(id *)arg2;
+ (id)errorFromException:(id)arg1 domain:(id)arg2 code:(long long)arg3;
+ (id)userInfoWithDescription:(id)arg1 method:(SEL)arg2;
+ (id)timestampUSLocale;
+ (id)localizedStringForHTTPStatus:(long long)arg1;
+ (BOOL)isCodeXcodeServerHTTPStatus:(long long)arg1;
+ (BOOL)isCodeStandardHTTPStatus:(long long)arg1;
+ (id)urlEncode:(id)arg1;
+ (id)MIMETypeForExtension:(id)arg1;
+ (id)convertMillisecondsToHumanReadable:(unsigned long long)arg1;
+ (id)convertDateToString:(id)arg1 usingFormat:(id)arg2;
+ (id)convertStringToDate:(id)arg1 usingFormat:(id)arg2;
+ (id)convertStringToDate:(id)arg1;
+ (id)convertStringToNumber:(id)arg1;

@end

@interface XCSValidator : NSObject
{
    NSArray *_errors;
    NSMutableArray *_privateErrors;
}

+ (void)validate:(id)arg1 usingSchema:(id)arg2 identifier:(id)arg3 class:(Class)arg4 selector:(SEL)arg5 completionHandler:(CDUnknownBlockType)arg6;
@property(retain, nonatomic) NSMutableArray *privateErrors; // @synthesize privateErrors=_privateErrors;
@property(copy, nonatomic) NSArray *errors; // @synthesize errors=_errors;
- (void).cxx_destruct;
- (void)_addError:(id)arg1 identifier:(id)arg2 class:(Class)arg3 selector:(SEL)arg4;
- (id)errorWithCode:(long long)arg1 message:(id)arg2 selector:(SEL)arg3 identifier:(id)arg4 class:(Class)arg5 selector:(SEL)arg6;
- (BOOL)_evaluateCandidate:(id)arg1 usingTest:(id)arg2 messageIfFails:(id)arg3 identifier:(id)arg4 class:(Class)arg5 selector:(SEL)arg6;
- (BOOL)_validateStructure:(id)arg1 usingSchema:(id)arg2 identifier:(id)arg3 class:(Class)arg4 selector:(SEL)arg5;
- (BOOL)isArray:(id)arg1 holdingElementsOfSet:(id)arg2 identifier:(id)arg3 class:(Class)arg4 selector:(SEL)arg5;
- (BOOL)isArrayUnique:(id)arg1 identifier:(id)arg2 class:(Class)arg3 selector:(SEL)arg4;
- (BOOL)isArray:(id)arg1 holdingExactNumberOfElements:(unsigned long long)arg2 identifier:(id)arg3 class:(Class)arg4 selector:(SEL)arg5;
- (BOOL)isArray:(id)arg1 holdingMaximumNumberOfElements:(unsigned long long)arg2 identifier:(id)arg3 class:(Class)arg4 selector:(SEL)arg5;
- (BOOL)isArray:(id)arg1 holdingMinimumNumberOfElements:(unsigned long long)arg2 identifier:(id)arg3 class:(Class)arg4 selector:(SEL)arg5;
- (BOOL)isArray:(id)arg1 containingObjectsOfValidatorType:(unsigned long long)arg2 identifier:(id)arg3 class:(Class)arg4 selector:(SEL)arg5;
- (BOOL)isArray:(id)arg1 containingObjectsOfClass:(Class)arg2 identifier:(id)arg3 class:(Class)arg4 selector:(SEL)arg5;
- (BOOL)isObject:(id)arg1 subclassOfClass:(Class)arg2 identifier:(id)arg3 class:(Class)arg4 selector:(SEL)arg5;
- (BOOL)isNumber:(id)arg1 greaterThanOrEqualTo:(id)arg2 identifier:(id)arg3 class:(Class)arg4 selector:(SEL)arg5;
- (BOOL)isNumber:(id)arg1 greaterThan:(id)arg2 identifier:(id)arg3 class:(Class)arg4 selector:(SEL)arg5;
- (BOOL)isNumber:(id)arg1 between:(id)arg2 and:(id)arg3 identifier:(id)arg4 class:(Class)arg5 selector:(SEL)arg6;
- (BOOL)isNumber:(id)arg1 notEqualToNumber:(id)arg2 identifier:(id)arg3 class:(Class)arg4 selector:(SEL)arg5;
- (BOOL)isNumber:(id)arg1 equalToNumber:(id)arg2 identifier:(id)arg3 class:(Class)arg4 selector:(SEL)arg5;
- (BOOL)isNumber:(id)arg1 lessThanOrEqualTo:(id)arg2 identifier:(id)arg3 class:(Class)arg4 selector:(SEL)arg5;
- (BOOL)isNumber:(id)arg1 lessThan:(id)arg2 identifier:(id)arg3 class:(Class)arg4 selector:(SEL)arg5;
- (BOOL)isDate:(id)arg1 between:(id)arg2 andDate:(id)arg3 identifier:(id)arg4 class:(Class)arg5 selector:(SEL)arg6;
- (BOOL)isDate:(id)arg1 equalToDate:(id)arg2 identifier:(id)arg3 class:(Class)arg4 selector:(SEL)arg5;
- (BOOL)isDate:(id)arg1 after:(id)arg2 identifier:(id)arg3 class:(Class)arg4 selector:(SEL)arg5;
- (BOOL)isDate:(id)arg1 before:(id)arg2 identifier:(id)arg3 class:(Class)arg4 selector:(SEL)arg5;
- (BOOL)isNotEmpty:(id)arg1 identifier:(id)arg2 class:(Class)arg3 selector:(SEL)arg4;
- (BOOL)isEmpty:(id)arg1 identifier:(id)arg2 class:(Class)arg3 selector:(SEL)arg4;
- (BOOL)isString:(id)arg1 MatchingRegex:(id)arg2 identifier:(id)arg3 class:(Class)arg4 selector:(SEL)arg5;
- (BOOL)isNotNil:(id)arg1 identifier:(id)arg2 class:(Class)arg3 selector:(SEL)arg4;
- (BOOL)isNil:(id)arg1 identifier:(id)arg2 class:(Class)arg3 selector:(SEL)arg4;
- (BOOL)isAlphanumeric:(id)arg1 identifier:(id)arg2 class:(Class)arg3 selector:(SEL)arg4;
- (BOOL)isIPv6:(id)arg1 identifier:(id)arg2 class:(Class)arg3 selector:(SEL)arg4;
- (BOOL)isIPv4:(id)arg1 identifier:(id)arg2 class:(Class)arg3 selector:(SEL)arg4;
- (BOOL)isURL:(id)arg1 identifier:(id)arg2 class:(Class)arg3 selector:(SEL)arg4;
- (BOOL)isEmail:(id)arg1 identifier:(id)arg2 class:(Class)arg3 selector:(SEL)arg4;
- (BOOL)isID:(id)arg1 identifier:(id)arg2 class:(Class)arg3 selector:(SEL)arg4;
- (BOOL)isUDID:(id)arg1 identifier:(id)arg2 class:(Class)arg3 selector:(SEL)arg4;
- (BOOL)isFormatValid:(unsigned long long)arg1 value:(id)arg2 identifier:(id)arg3 class:(Class)arg4 selector:(SEL)arg5;
- (BOOL)validateCustomObject:(id)arg1 info:(id)arg2 structure:(id)arg3 keyPath:(id)arg4 identifier:(id)arg5 class:(Class)arg6 selector:(SEL)arg7;
- (BOOL)validateNSString:(id)arg1 info:(id)arg2 structure:(id)arg3 keyPath:(id)arg4 identifier:(id)arg5 class:(Class)arg6 selector:(SEL)arg7;
- (BOOL)_validateProperty:(id)arg1 info:(id)arg2 structure:(id)arg3 keyPath:(id)arg4 identifier:(id)arg5 class:(Class)arg6 selector:(SEL)arg7;
- (BOOL)validate:(id)arg1 usingSchema:(id)arg2 keyPath:(id)arg3 identifier:(id)arg4 class:(Class)arg5 selector:(SEL)arg6;
- (void)explainWithClass:(Class)arg1 selector:(SEL)arg2;
- (id)description;
- (id)json;
- (BOOL)isValidWithErrors:(id *)arg1;
@property(readonly, copy, nonatomic) NSError *lastError;
- (void)addErrorMessage:(id)arg1 selector:(SEL)arg2 identifier:(id)arg3 class:(Class)arg4 selector:(SEL)arg5;
- (id)init;

@end

@interface XCSVersionInfo : XCSObject
{
}

+ (id)versionInfoWithServer:(id)arg1 xcode:(id)arg2 os:(id)arg3 couchDB:(id)arg4 node:(id)arg5 xcodeServer:(id)arg6 validationErrors:(id *)arg7;
- (BOOL)validateVersionInfoWithServer:(id)arg1 xcode:(id)arg2 os:(id)arg3 couchDB:(id)arg4 node:(id)arg5 xcodeServer:(id)arg6 validationErrors:(id *)arg7;
- (id)saveRepresentationHumanReadable:(BOOL)arg1;
- (id)saveRepresentation;
- (id)dictionaryRepresentation;
- (id)initWithContents:(id)arg1 service:(id)arg2 validationErrors:(id *)arg3;
- (id)initVersionInfoWithID:(id)arg1 rev:(id)arg2 tinyID:(id)arg3 docType:(id)arg4 service:(id)arg5 server:(id)arg6 xcode:(id)arg7 os:(id)arg8 couchDB:(id)arg9 node:(id)arg10 xcodeServer:(id)arg11 validationErrors:(id *)arg12;

// Remaining properties
@property(copy, nonatomic) NSString *couchDB; // @dynamic couchDB;
@property(copy, nonatomic) NSString *node; // @dynamic node;
@property(copy, nonatomic) NSString *os; // @dynamic os;
@property(copy, nonatomic) NSString *server; // @dynamic server;
@property(copy, nonatomic) NSString *xcode; // @dynamic xcode;
@property(copy, nonatomic) NSString *xcodeServer; // @dynamic xcodeServer;

@end

