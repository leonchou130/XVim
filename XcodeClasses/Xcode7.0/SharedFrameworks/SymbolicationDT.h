//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct VMULabelUniquingDataForStringType {
    id _field1;
    id _field2;
};

struct _CSTypeRef {
    unsigned long long _opaque_1;
    unsigned long long _opaque_2;
};

struct _VMUBlockNode {
    unsigned long long _field1;
    unsigned int :3;
    unsigned int :2;
    unsigned int :36;
    unsigned int :23;
};

struct _VMUDirectedGraphEdge {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
};

struct _VMUObjectGraphEdge {
    union {
        struct {
            unsigned int :24;
            unsigned int :2;
            unsigned int :5;
            unsigned int :1;
        } _field1;
        struct {
            unsigned int :31;
            unsigned int :1;
        } _field2;
    } _field1;
};

struct _VMUObjectGraphEdgeLarge {
    unsigned int :56;
    unsigned int :8;
    unsigned int :56;
    unsigned int :8;
};

struct _VMURange {
    unsigned long long location;
    unsigned long long length;
};

struct _VMURegionMap {
    void *_field1;
    struct _VMURegionNode *_field2;
    unsigned int _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned int _field6[0];
};

struct _VMURegionNode {
    id _field1;
    void *_field2;
    unsigned long long _field3;
    struct _VMURegionNode *_field4;
    struct *_field5;
    unsigned int _field6;
    unsigned long long _field7;
    unsigned long long _field8;
};

struct _VMUThreadNode {
    unsigned long long _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned long long *_field4;
};

struct _VMUVMRegionData {
    unsigned long long _field1;
    unsigned long long _field2;
    unsigned int _field3;
    int _field4;
    int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned int _field10;
    int _field11;
    unsigned int _field12;
    unsigned char _field13;
    unsigned char _field14;
    unsigned char _field15;
    unsigned int _field16;
    unsigned int _field17;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :28;
    unsigned long long _field18;
    unsigned long long _field19;
    unsigned long long _field20;
    unsigned long long _field21;
    unsigned long long _field22;
    unsigned long long _field23;
    unsigned long long _field24;
};

struct _VMUZoneNode {
    unsigned long long _field1;
    id _field2;
    struct malloc_introspection_t *_field3;
};

struct __CFRuntimeBase {
    unsigned long long _field1;
    unsigned char _field2[4];
    unsigned int _field3;
};

struct malloc_introspection_t;

struct timeval {
    long long tv_sec;
    int tv_usec;
};

#pragma mark Typedef'd Structures

typedef struct {
    unsigned long long _field1;
    unsigned int :60;
    unsigned int :4;
    id _field2;
} CDStruct_599faf0f;

typedef struct {
    unsigned long long _field1;
    int _field2;
    unsigned long long _field3;
} CDStruct_df82e459;

#pragma mark -

//
// File: /Applications/Xcode-7GM.app/Contents/SharedFrameworks/SymbolicationDT.framework/Versions/A/SymbolicationDT
// UUID: CF2E7BD4-8751-3A67-A8FA-BD7FC1095FF5
//
//                           Arch: x86_64
//                Current version: 58044.0.0
//          Compatibility version: 1.0.0
//                 Source version: 58044.0.0.0.0
//       Minimum Mac OS X version: 10.9.0
//                    SDK version: 10.11.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol DVT_VMULibraryLoadDelegate <NSObject>
- (void)_libraryLoaded:(struct _CSTypeRef)arg1;
@end

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (BOOL)respondsToSelector:(SEL)arg1;
- (BOOL)conformsToProtocol:(Protocol *)arg1;
- (BOOL)isMemberOfClass:(Class)arg1;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (BOOL)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSSecureCoding <NSCoding>
+ (BOOL)supportsSecureCoding;
@end

@protocol VMUCommonGraphInterface <NSObject>
@property(readonly, nonatomic) unsigned int regionCount;
@property(readonly, nonatomic) unsigned int nodeNamespaceSize;
@property(readonly, nonatomic) unsigned int nodeCount;
@property(readonly, nonatomic) unsigned int zoneCount;
@property(readonly, nonatomic) DVT_VMUClassInfoMap *realizedClasses;
@property(readonly, nonatomic) unsigned int vmPageSize;
@property(readonly, nonatomic) int pid;
- (unsigned int)enumerateReferencesWithBlock:(void (^)(unsigned int, unsigned int, unsigned int, struct, char *))arg1;
- (unsigned int)enumerateRegionsWithBlock:(void (^)(DVT_VMUVMRegion *, char *))arg1;
- (NSString *)labelForNode:(unsigned int)arg1;
- (unsigned int)enumerateObjectsWithBlock:(void (^)(unsigned int, struct, char *))arg1;
- (CDStruct_599faf0f)nodeDetails:(unsigned int)arg1;
- (NSString *)zoneNameForIndex:(unsigned int)arg1;
@end

__attribute__((visibility("hidden")))
@interface DVT_VMUAbstractSerializer : NSObject
{
    char *_intRegion;
    char *_stringRegion;
    unsigned int _stringRegCapacity;
    unsigned int _intRegCapacity;
    unsigned int _cursor;
}

@end

@interface DVT_VMUArchitecture : NSObject <NSCoding, NSCopying>
{
    int _cpuType;
    int _cpuSubtype;
}

+ (id)architectureWithCpuType:(int)arg1 cpuSubtype:(int)arg2;
+ (id)armArchitecture;
+ (id)x86_64Architecture;
+ (id)x86_32Architecture;
+ (id)i386Architecture;
+ (id)ppc64Architecture;
+ (id)ppc32Architecture;
+ (id)ppcArchitecture;
+ (id)anyArchitecture;
+ (id)currentArchitecture;
+ (void)initialize;
- (id)description;
- (int)cpuSubtype;
- (int)cpuType;
- (BOOL)matchesArchitecture:(id)arg1;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isEqualToArchitecture:(id)arg1;
- (BOOL)is64Bit;
- (BOOL)is32Bit;
- (BOOL)isLittleEndian;
- (BOOL)isBigEndian;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithCpuType:(int)arg1 cpuSubtype:(int)arg2;

@end

@interface DVT_VMUBacktrace : NSObject <NSCopying>
{
    int _flavor;
    struct {
        struct {
            double t_begin;
            double t_end;
            int pid;
            unsigned int thread;
            int run_state;
            unsigned long long dispatch_queue_serial_num;
        } context;
        unsigned long long *frames;
        char *frame_types;
        unsigned int length;
    } _callstack;
}

- (unsigned long long)dispatchQueueSerialNumber;
- (int)threadState;
- (void)setThreadState:(int)arg1;
- (unsigned int)thread;
- (unsigned int)backtraceLength;
- (unsigned long long *)backtrace;
- (void)setLengthTime:(double)arg1;
- (void)setEndTime:(double)arg1;
- (void)setStartTime:(double)arg1;
- (void)removeTopmostFrame;
- (unsigned long long)topmostFrame;
- (BOOL)hasSameCallstack:(id)arg1;
- (void)fixupStackWithSamplingContext:(struct sampling_context_t *)arg1 symbolicator:(struct _CSTypeRef)arg2;
- (void)fixupStackWithTask:(unsigned int)arg1 symbolicator:(struct _CSTypeRef)arg2 taskMemoryCache:(id)arg3;
- (id)description;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithTask:(unsigned int)arg1 thread:(unsigned int)arg2 is64Bit:(BOOL)arg3 taskMemoryCache:(id)arg4;
- (id)initWithTask:(unsigned int)arg1 thread:(unsigned int)arg2 is64Bit:(BOOL)arg3;
- (id)initWithSamplingContext:(struct sampling_context_t *)arg1 thread:(unsigned int)arg2;
- (struct _CSTypeRef)_symbolicator;

@end

@interface DVT_VMUCallTreeNode : NSObject
{
    DVT_VMUCallTreeNode *_parent;
    NSString *_name;
    unsigned long long _address;
    unsigned int _count;
    unsigned long long _numBytes;
    unsigned int _numChildren;
    union {
        void *theChild;
        void **theChildren;
    } _un;
}

+ (id)makeFakeRootForNode:(id)arg1;
+ (id)nodeWithName:(id)arg1 address:(unsigned long long)arg2 count:(unsigned int)arg3 numBytes:(unsigned long long)arg4;
+ (id)rootForSamples:(id)arg1 symbolicator:(struct _CSTypeRef)arg2;
+ (id)rootForSamples:(id)arg1 symbolicator:(struct _CSTypeRef)arg2 sampler:(id)arg3 options:(unsigned long long)arg4;
- (id)pruneMallocSize:(unsigned long long)arg1;
- (id)pruneCount:(unsigned int)arg1;
- (id)chargeSystemLibrariesToCallersAndKeepBoundaries:(BOOL)arg1;
- (id)chargeLibrariesToCallers:(id)arg1 keepBoundaries:(BOOL)arg2;
- (id)chargeLibrariesInSet:(id)arg1 toCaller:(id)arg2 parentLibrary:(id)arg3;
- (id)filterOutSymbols:(id)arg1;
- (id)filterOutSymbols:(id)arg1 required:(id)arg2;
- (id)invertedNode;
- (id)stringFromCallTreeIndentIfNoBranches:(BOOL)arg1;
- (id)stringFromCallTreeIndentIfNoBranches:(BOOL)arg1 showPseudoNodes:(BOOL)arg2;
- (BOOL)callTreeHasBranches;
- (id)fullOutputWithThreshold:(unsigned int)arg1;
- (id)fullOutputWithThreshold:(unsigned int)arg1 showPseudoNodes:(BOOL)arg2;
- (void)countFunctionOccurrencesInTree:(id)arg1;
- (id)largestTopOfStackPath;
- (id)sortedChildrenWithPseudoNode;
- (id)sortedChildrenWithPseudoNode:(id)arg1 withCompare:(SEL)arg2;
- (id)pseudoNodeTopOfStackChild;
- (long long)comparePuttingMainThreadFirst:(id)arg1;
- (long long)compare:(id)arg1;
- (long long)compareSizeAndCount:(id)arg1;
- (id)findOrAddChildWithName:(id)arg1 address:(unsigned long long)arg2;
- (id)findOrAddChildWithName:(id)arg1 address:(unsigned long long)arg2 nodeSearchType:(int)arg3 isLeafNode:(BOOL)arg4;
- (void)parseNameIntoSymbol:(id *)arg1 library:(id *)arg2 loadAddress:(unsigned long long *)arg3 offset:(unsigned long long *)arg4 address:(unsigned long long *)arg5 suffix:(id *)arg6;
- (id)nameWithStringsForSymbol:(id)arg1 library:(id)arg2 loadAddress:(id)arg3 offset:(id)arg4 address:(id)arg5 suffix:(id)arg6;
- (id)nameWithoutOffset;
- (BOOL)isMallocBlockContentNode;
- (BOOL)symbolNameIsUnknown;
- (id)pseudoName;
- (BOOL)isPseudo;
- (id)browserName;
- (void)getBrowserName:(id)arg1;
- (id)name;
- (unsigned long long)numBytes;
- (unsigned int)count;
- (unsigned long long)address;
- (id)parent;
- (void)dealloc;
- (void)addChild:(id)arg1;
- (void)setChildren:(id)arg1;
- (id)allChildren;
- (id)childAtIndex:(unsigned int)arg1;
- (void)setNumChildren:(unsigned int)arg1;
- (unsigned int)numChildren;
- (id)initWithName:(id)arg1 address:(unsigned long long)arg2 count:(unsigned int)arg3 numBytes:(unsigned long long)arg4;

@end

__attribute__((visibility("hidden")))
@interface DVT_VMUCallTreeLeafNode : DVT_VMUCallTreeNode
{
    NSCountedSet *_addresses;
    NSString *_combinedName;
}

- (void)getBrowserName:(id)arg1;
- (void)addAddress:(unsigned long long)arg1;
- (void)dealloc;
- (id)init;
- (id)initWithName:(id)arg1 address:(unsigned long long)arg2 count:(unsigned int)arg3 numBytes:(unsigned long long)arg4;

@end

__attribute__((visibility("hidden")))
@interface DVT_VMUCallTreePseudoNode : DVT_VMUCallTreeNode
{
}

- (id)largestTopOfStackPath;
- (id)sortedChildrenWithPseudoNode;
- (id)pseudoNodeTopOfStackChild;
- (BOOL)isPseudo;

@end

@interface DVT_VMUCallTreeRoot : DVT_VMUCallTreeNode
{
    struct _CSTypeRef _symbolicator;
    DVT_VMUSampler *_sampler;
    unsigned long long _options;
    NSHashTable *_uniqueNodeNames;
    NSMapTable *_addressToSymbolNameMap;
    NSMapTable *_addressToLeafSymbolNameMap;
    NSMapTable *_threadPortToNameMap;
    NSMapTable *_dispatchQueueSerialNumToNameMap;
    NSString *_binaryImagesDescription;
    NSArray *_binaryImages;
}

- (id)chargeSystemLibrariesToCallersAndKeepBoundaries:(BOOL)arg1;
- (id)initWithCallGraphFile:(id)arg1 fileHeader:(id *)arg2 topFunctionsList:(id *)arg3 binaryImagesList:(id *)arg4;
- (void)addChildWithName:(id)arg1 address:(unsigned long long)arg2 count:(unsigned int)arg3 numBytes:(unsigned long long)arg4 toNode:(id)arg5;
- (id)addBacktrace:(id)arg1;
- (id)addBacktrace:(id)arg1 count:(unsigned int)arg2 numBytes:(unsigned long long)arg3;
- (id)descriptionStringForAddress:(unsigned long long)arg1 atTime:(unsigned long long)arg2 leafFrame:(BOOL)arg3 startOfRecursion:(BOOL)arg4;
- (id)threadDescriptionStringForBacktrace:(id)arg1 returnedAddress:(unsigned long long *)arg2;
- (void)dealloc;
- (void)allBacktracesHaveBeenAdded;
- (id)initWithSymbolicator:(struct _CSTypeRef)arg1 sampler:(id)arg2 options:(unsigned long long)arg3;

@end

@interface DVT_VMUClassInfo : NSObject <NSCoding>
{
    CDUnknownBlockType _reader;
    unsigned long long _remoteIsa;
    unsigned int _remotePointerSize;
    unsigned int _ivarCount;
    unsigned int _superclassOffset;
    unsigned int _instanceSize;
    unsigned int _ro_flags;
    unsigned int _rw_flags;
    struct objc_ivar **_localIvarList;
    int *_ivarScanSizes;
    unsigned int _remoteType;
    NSString *_remoteClassName;
    NSString *_remoteBinaryPath;
    DVT_VMUClassInfo *_superclassLayout;
    DVT_VMUClassInfo *_genericLayout;
    const char *_weakLayout;
    const char *_strongLayout;
    const char *_extendedLayout;
    char *_scanMap;
    BOOL _hasSpecificLayout;
}

+ (id)classInfoWithClassName:(id)arg1 binaryName:(id)arg2 type:(int)arg3;
+ (id)descriptionForTypeEncoding:(const char *)arg1 ivarName:(const char *)arg2;
+ (id)classInfoWithClassName:(id)arg1 binaryPath:(id)arg2 type:(int)arg3;
+ (void)initialize;
@property(readonly) DVT_VMUClassInfo *superclassInfo; // @synthesize superclassInfo=_superclassLayout;
@property(readonly) NSString *className; // @synthesize className=_remoteClassName;
@property(readonly) NSString *binaryPath; // @synthesize binaryPath=_remoteBinaryPath;
@property(readonly) unsigned long long remoteIsa; // @synthesize remoteIsa=_remoteIsa;
@property(readonly) unsigned int instanceSize; // @synthesize instanceSize=_instanceSize;
@property(readonly) unsigned long long specificInstance;
- (void)enumerateKnownSublayoutsForObject:(unsigned long long)arg1 withBlock:(CDUnknownBlockType)arg2;
- (id)instanceSpecificInfoForObject:(unsigned long long)arg1;
- (id)initWithIsaPointer:(unsigned long long)arg1 symbolicator:(struct _CSTypeRef)arg2;
- (id)initWithClassName:(id)arg1 binaryName:(id)arg2 type:(int)arg3;
@property(readonly) BOOL hasCppConstructorOrDestructor;
@property(readonly) BOOL isRootClass;
@property(readonly) BOOL isMetaClass;
@property(readonly) BOOL isRealized;
@property(readonly) BOOL isARR;
- (id)description;
- (id)debugDescription;
- (id)scanDescriptionWithSize:(unsigned int)arg1;
@property(readonly) NSString *shortIvarDescription;
@property(readonly) NSString *fullIvarDescription;
@property(readonly) int infoType;
@property(readonly) NSString *typeName;
- (id)type;
@property(readonly) NSString *binaryName;
- (void)_setIsa:(unsigned long long)arg1;
- (struct objc_ivar *)ivarWithOffset:(unsigned long long)arg1;
- (void)enumerateScanLocationsToSize:(unsigned int)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)enumerateIvarsWithBlock:(CDUnknownBlockType)arg1;
@property(readonly) DVT_VMUClassInfo *genericInfo;
- (id)instanceSpecificInfoForObject:(unsigned long long)arg1 ofSize:(unsigned int)arg2;
- (id)_instanceSpecificInfoForObject:(unsigned long long)arg1 ofSize:(unsigned int)arg2 withReader:(CDUnknownBlockType)arg3;
- (void)_setExtendedLayout:(const char *)arg1;
- (id)_specificCopy:(unsigned long long)arg1 instanceSize:(unsigned int)arg2 superclassOffset:(unsigned int)arg3;
- (void)enumerateKnownSublayoutsForObject:(unsigned long long)arg1 ofSize:(unsigned int)arg2 withBlock:(CDUnknownBlockType)arg3;
- (void)scanObject:(unsigned long long)arg1 ofSize:(unsigned int)arg2 withBlock:(CDUnknownBlockType)arg3;
- (void)setMemoryReader:(CDUnknownBlockType)arg1;
- (void)_logDescriptionWithSuperclasses:(BOOL)arg1 indentation:(int)arg2 toLogger:(CDUnknownBlockType)arg3;
- (id)_ivarDescription:(unsigned int)arg1 withSpacing:(unsigned int)arg2;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithSerializer:(id)arg1 classMap:(id)arg2 version:(long long)arg3;
- (void)serializeWithClassMap:(id)arg1 simpleSerializer:(id)arg2;
- (void)dealloc;
- (id)initWithRealizedClass:(unsigned long long)arg1 infoMap:(id)arg2 symbolicator:(struct _CSTypeRef)arg3 type:(int)arg4 memoryReader:(CDUnknownBlockType)arg5;
- (id)initWithClass:(unsigned long long)arg1 infoMap:(id)arg2 symbolicator:(struct _CSTypeRef)arg3 type:(int)arg4 memoryReader:(CDUnknownBlockType)arg5;
- (id)_initWithClass:(unsigned long long)arg1 realizedOnly:(BOOL)arg2 infoMap:(id)arg3 symbolicator:(struct _CSTypeRef)arg4 type:(int)arg5 memoryReader:(CDUnknownBlockType)arg6;
- (id)initWithClassName:(id)arg1 binaryPath:(id)arg2 type:(int)arg3;
@property(readonly, nonatomic) BOOL hasSpecificLayout;
- (void)_setClassNameWithAddress:(unsigned long long)arg1;
- (void)_demangleClassName;
- (void)_parseIvarsAndLayouts;
- (void)_processExtendedLayout:(const char *)arg1;
- (void)_processARRLayout:(const char *)arg1 scanType:(int)arg2;
- (void)_faultScanMap;
- (const char *)_copyRemoteLayout:(unsigned long long)arg1;
- (struct objc_ivar *)_copyRemoteIvarAt:(unsigned long long)arg1;
- (const char *)_copyRemoteTypeAt:(unsigned long long)arg1;
- (const char *)_copyRemoteNameAt:(unsigned long long)arg1;
- (unsigned long long)_readRemotePointerAt:(unsigned long long)arg1;
- (int)_readRemoteIntAt:(unsigned long long)arg1;

@end

@interface DVT_VMUClassInfoMap : NSObject <NSSecureCoding>
{
    void *_map1;
    void *_map2;
    NSMutableArray *_linearClassInfos;
}

+ (void)_destroyRetainedLinearArray:(id *)arg1 withCount:(unsigned int)arg2;
+ (BOOL)supportsSecureCoding;
+ (void)initialize;
+ (void)_claimUnarchivingOfClass:(id)arg1;
- (id *)_retainedLinearArrayWithReturnedCount:(unsigned int *)arg1;
- (void)enumerateWithBlock:(CDUnknownBlockType)arg1;
- (void)enumerateInfosWithBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned int count;
- (id)classInfoForIndex:(unsigned int)arg1;
- (id)classInfoForAddress:(unsigned long long)arg1;
- (unsigned int)indexForClassInfo:(id)arg1;
- (unsigned int)addClassInfo:(id)arg1 forAddress:(unsigned long long)arg2;
- (void)addClassInfosFromMap:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface DVT_VMUDebugTimer : NSObject
{
    NSDate *_programStartTime;
    NSDate *_eventStartTime;
    NSString *_eventMessage;
}

- (void)stop;
- (void)startWithMessage:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface DVT_VMUDirectedGraph : NSObject <NSCopying>
{
    unsigned int _nodeCount;
    unsigned int _edgeCount;
    unsigned int _edgeCapacity;
    unsigned int _externalEdges;
    void *_deadNodes;
    unsigned int _nextNodeName;
    unsigned int _nextEdgeName;
    unsigned int *_nodeAdjIndex;
    struct _VMUDirectedGraphEdge *_edges;
    NSDictionary *_additionalProperties;
    unsigned int _indexedNodeSpace;
    unsigned int _indexedEdges;
    int _insideSearch;
    BOOL _inverted;
}

+ (id)_unarchivedObject:(id)arg1 options:(unsigned long long)arg2;
+ (id)_archivedObject:(id)arg1 options:(unsigned long long)arg2;
+ (void *)_copyUnarchived:(id)arg1 length:(unsigned long long *)arg2 options:(unsigned long long)arg3;
+ (id)_archivedBytes:(const void *)arg1 length:(unsigned long long)arg2 options:(unsigned long long)arg3;
@property(copy, nonatomic) NSDictionary *additionalProperties; // @synthesize additionalProperties=_additionalProperties;
@property(readonly, nonatomic) unsigned int edgeNamespaceSize; // @synthesize edgeNamespaceSize=_nextEdgeName;
@property(readonly, nonatomic) unsigned int nodeNamespaceSize; // @synthesize nodeNamespaceSize=_nextNodeName;
@property(readonly, nonatomic) unsigned int nodeCount; // @synthesize nodeCount=_nodeCount;
- (id)invertedGraph;
- (id)renormalizedGraph;
- (id)subgraphWithMarkedNodes:(void *)arg1;
- (void)invertEdges;
- (void)_dumpAdjacencyList;
- (void)breadthFirstSearch:(unsigned int)arg1 nodeVisitBlock:(CDUnknownBlockType)arg2 edgeVisitBlock:(CDUnknownBlockType)arg3;
- (void)depthFirstSearch:(unsigned int)arg1 nodeVisitBlock:(CDUnknownBlockType)arg2 edgeVisitBlock:(CDUnknownBlockType)arg3;
- (void)_searchMainLoop:(unsigned int)arg1 action:(CDUnknownBlockType)arg2;
- (void)withEdgeMarkingMap:(CDUnknownBlockType)arg1;
- (void)withNodeMarkingMap:(CDUnknownBlockType)arg1;
- (unsigned int)enumerateEdgesOfNode:(unsigned int)arg1 withBlock:(CDUnknownBlockType)arg2;
- (unsigned int)_internalEnumerateEdgesOfNode:(unsigned int)arg1 withBlock:(CDUnknownBlockType)arg2;
- (unsigned int)enumerateEdgesWithBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned int edgeCount;
- (unsigned int)parentGroupForNode:(unsigned int)arg1;
- (unsigned int)enumerateMembersOfGroupNode:(unsigned int)arg1 withBlock:(CDUnknownBlockType)arg2;
- (unsigned int)enumerateNodesWithBlock:(CDUnknownBlockType)arg1;
- (void)_renameWithNodeMap:(unsigned int *)arg1 nodeNamespace:(unsigned int)arg2 edgeMap:(unsigned int *)arg3 edgeNamespace:(unsigned int)arg4;
- (void)_renormalize;
- (void)_adjustAdjacencyMap;
@property(nonatomic) BOOL inverted;
- (void)ungroupNode:(unsigned int)arg1;
- (unsigned int)addGroupNodeForNodes:(const unsigned int *)arg1 count:(unsigned int)arg2;
- (void)removeMarkedEdges:(void *)arg1;
- (void)removeMarkedNodes:(void *)arg1;
- (void *)_deadNodeMap;
- (void)_faultDeadNodeMap;
- (void)_removeEdges:(CDUnknownBlockType)arg1;
- (unsigned int)addEdgeFromNode:(unsigned int)arg1 toNode:(unsigned int)arg2;
- (void)_internalAddEdgeFromNode:(unsigned int)arg1 toNode:(unsigned int)arg2 withName:(unsigned int)arg3;
- (unsigned int)addNode;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)plistRepresentationWithOptions:(unsigned long long)arg1;
- (void)archiveDictionaryRepresentation:(id)arg1 options:(unsigned long long)arg2;
- (id)initWithArchived:(id)arg1 options:(unsigned long long)arg2;
- (id)initWithPlistRepresentation:(id)arg1;
- (id)initWithNodes:(unsigned int)arg1;
- (id)subgraphWithShortestPathsFromNode:(unsigned int)arg1 toNodes:(void *)arg2;
- (void)markReachableNodesFromRoots:(void *)arg1 inMap:(void *)arg2;
- (void)stronglyConnectedComponentSearch:(unsigned int)arg1 withRecorder:(CDUnknownBlockType)arg2;

@end

@interface DVT_VMURangeArray : NSObject <NSCopying>
{
    unsigned int _count;
    struct _VMURange *_ranges;
    unsigned int _max;
    BOOL _sorted;
}

- (id)description;
- (unsigned int)count;
- (struct _VMURange *)ranges;
- (unsigned long long)sumLengths;
- (struct _VMURange)largestRange;
- (struct _VMURange)range;
- (struct _VMURange)subrangeNotExcludedBySelfForRange:(struct _VMURange)arg1;
- (BOOL)intersectsRange:(struct _VMURange)arg1;
- (BOOL)intersectsLocation:(unsigned long long)arg1;
- (void)removeAllRanges;
- (void)removeRangeAtIndex:(unsigned int)arg1;
- (void)insertRange:(struct _VMURange)arg1 atIndex:(unsigned int)arg2;
- (struct _VMURange)rangeForLocation:(unsigned long long)arg1;
- (unsigned long long)indexForLocation:(unsigned long long)arg1;
- (struct _VMURange)rangeAtIndex:(unsigned int)arg1;
- (void)addRanges:(id)arg1;
- (void)addRange:(struct _VMURange)arg1;
- (void)sort;
- (void)setCapacity:(unsigned int)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithRanges:(const struct _VMURange *)arg1 count:(unsigned int)arg2;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface DVT_VMUNonOverlappingRangeArray : DVT_VMURangeArray
{
}

- (id)subtract:(id)arg1 mergeRanges:(BOOL)arg2;
- (void)_mergeAllBitsOfRange:(struct _VMURange)arg1 excludingRanges:(id)arg2 mergeRanges:(BOOL)arg3;
- (void)mergeRanges:(id)arg1 excludingRanges:(id)arg2;
- (void)mergeRange:(struct _VMURange)arg1 excludingRanges:(id)arg2;
- (void)mergeRanges:(id)arg1;
- (void)mergeRange:(struct _VMURange)arg1;
- (void)sortAndMergeRanges;
- (void)addOrExtendRange:(struct _VMURange)arg1;

@end

@interface DVT_VMUObjectGraph : DVT_VMUDirectedGraph
{
    struct _VMUObjectGraphEdge *_referenceTable;
    unsigned int _referenceTableCapacity;
    struct _VMUObjectGraphEdgeLarge *_referenceTableLarge;
    unsigned int _referenceTableLargeCount;
    unsigned int _referenceTableLargeCapacity;
    struct _VMUBlockNode *_internalizedNodes;
    unsigned int _internalizedCount;
    id *_classInfos;
    DVT_VMUClassInfoMap *_knownClassInfos;
    unsigned int _classInfosCount;
    CDUnknownBlockType _nodeProvider;
    DVT_VMUObjectGraph *_referenceGraph;
    unsigned int _referenceGraphNodeNamespaceSize;
    unsigned int _referenceGraphEdgeNamespaceSize;
    int _referencingCount;
}

+ (void)initialize;
@property(readonly, nonatomic) DVT_VMUClassInfoMap *indexedClassInfos; // @synthesize indexedClassInfos=_knownClassInfos;
- (void)_modifyDerivativeGraphCount:(int)arg1;
- (CDStruct_df82e459)referenceInfoWithName:(unsigned int)arg1;
- (CDStruct_599faf0f)nodeDetails:(unsigned int)arg1;
- (unsigned int)enumerateReferencesOfNode:(unsigned int)arg1 withBlock:(CDUnknownBlockType)arg2;
- (unsigned int)enumerateReferencesWithBlock:(CDUnknownBlockType)arg1;
- (unsigned int)enumerateMarkedObjects:(void *)arg1 withBlock:(CDUnknownBlockType)arg2;
- (unsigned int)enumerateObjectsOfGroupNode:(unsigned int)arg1 withBlock:(CDUnknownBlockType)arg2;
- (unsigned int)enumerateObjectsWithBlock:(CDUnknownBlockType)arg1;
- (void)_renameWithNodeMap:(unsigned int *)arg1 nodeNamespace:(unsigned int)arg2 edgeMap:(unsigned int *)arg3 edgeNamespace:(unsigned int)arg4;
- (unsigned int)addEdgeFromNode:(unsigned int)arg1 toNode:(unsigned int)arg2;
- (unsigned int)addEdgeFromNode:(unsigned int)arg1 sourceOffset:(unsigned long long)arg2 withScanType:(int)arg3 toNode:(unsigned int)arg4 destinationOffset:(unsigned long long)arg5;
- (void)internalizeNodes;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)archiveDictionaryRepresentation:(id)arg1 options:(unsigned long long)arg2;
- (id)initWithArchived:(id)arg1 options:(unsigned long long)arg2;
- (void)dealloc;
- (id)initWithNodes:(unsigned int)arg1 nodeProvider:(CDUnknownBlockType)arg2;
- (void)withRootNodeMarkingMap:(CDUnknownBlockType)arg1;

@end

@interface DVT_VMUObjectIdentifier : NSObject
{
    unsigned int _task;
    struct _CSTypeRef _symbolicator;
    CDUnknownBlockType _memoryReader;
    DVT_VMUClassInfoMap *_realizedIsaToClassInfo;
    DVT_VMUClassInfoMap *_unrealizedClassInfos;
    NSMutableDictionary *_nonobjectClassInfosDict;
    unsigned long long _coreFoundationCFTypeIsa;
    unsigned long long _foundationCFTypeIsa;
    unsigned long long _swiftClassCount;
    unsigned long long _cfClassCount;
    CDUnknownBlockType _isaTranslator;
    unsigned long long *_nonPointerIndexMapping;
    void *_remoteObjectBuffer;
    unsigned long long _remoteObjectBufferSize;
    NSMapTable *_isaToObjectLabelHandlerMap;
    NSMapTable *_itemCountToLabelStringUniquingMap;
    struct VMULabelUniquingDataForStringType *_stringToLabelStringUniquingData;
    NSMutableSet *_stringUniquingSet;
    NSHashTable *_objcRuntimeMallocBlocksHash;
    DVT_VMUNonOverlappingRangeArray *_targetProcessVMranges;
}

@property(readonly, nonatomic) DVT_VMUClassInfoMap *realizedClasses; // @synthesize realizedClasses=_realizedIsaToClassInfo;
- (id)classInfoForCFType:(struct __CFRuntimeBase *)arg1;
- (id)classInfoForIsaPointer:(unsigned long long)arg1;
- (id)classInfoForObject:(unsigned long long)arg1;
- (id)initWithTask:(unsigned int)arg1;
- (id)labelForMemory:(void *)arg1 length:(unsigned long long)arg2;
- (id)labelForMemory:(void *)arg1 length:(unsigned long long)arg2 usingHandlerBlock:(CDUnknownBlockType)arg3;
- (id)labelForMallocBlock:(struct _VMURange)arg1 usingHandlerBlock:(CDUnknownBlockType)arg2;
- (id)labelForMallocBlock:(struct _VMURange)arg1;
- (id)labelForOSTransaction:(id)arg1;
- (id)labelForNSInlineData:(id)arg1;
- (id)labelForNSConcreteMutableData:(id)arg1;
- (id)labelForNSConcreteData:(id)arg1;
- (id)labelForNSData:(id)arg1;
- (id)labelForNSCFSet:(id)arg1;
- (id)labelForNSSet:(id)arg1;
- (id)labelForNSConcreteHashTable:(id)arg1;
- (id)labelForNSCFDictionary:(id)arg1;
- (id)labelForNSDictionary:(id)arg1;
- (id)labelForNSArray:(id)arg1;
- (id)labelForItemCount:(long long)arg1;
- (id)labelForNSDate:(id)arg1;
- (id)labelForNSNumber:(id)arg1;
- (id)labelForNSPathStore2:(id)arg1;
- (id)labelForNSURL:(id)arg1;
- (id)labelForNSConcreteAttributedString:(id)arg1;
- (id)labelForNSCFStringAtRemoteAddress:(unsigned long long)arg1 printDetail:(BOOL)arg2;
- (id)labelForNSString:(id)arg1 mappedSize:(unsigned long long)arg2 remoteAddress:(unsigned long long)arg3 printDetail:(BOOL)arg4;
- (id)labelForNSString:(id)arg1;
- (id)uniquifyStringLabel:(id)arg1 stringType:(int)arg2 printDetail:(BOOL)arg3;
- (id)objectLabelHandlerForRemoteIsa:(unsigned long long)arg1;
- (void)buildIsaToObjectLabelHandlerMap;
- (id)osMajorMinorVersionString;
- (struct _VMURange)vmRegionRangeForAddress:(unsigned long long)arg1;
- (void)findObjCclasses;
- (void)findCFTypes;
- (id)_faultClass:(unsigned long long)arg1 ofType:(int)arg2;
- (id)classInfoForMemory:(void *)arg1 length:(unsigned long long)arg2;
- (id)classInfoForNonobjectMemory:(void *)arg1 length:(unsigned long long)arg2;
- (id)_classInfoWithNonobjectType:(id)arg1 binaryPath:(id)arg2;
- (id)classInfoForObjectWithRange:(struct _VMURange)arg1;
- (id)nullClassInfo;
- (void)enumerateAllClassInfosWithBlock:(CDUnknownBlockType)arg1;
- (void)enumerateRealizedClassInfosWithBlock:(CDUnknownBlockType)arg1;
- (id)objcRuntimeMallocBlocksHash;
- (unsigned long long)SwiftClassCount;
- (unsigned long long)ObjCclassCount;
- (unsigned long long)CFTypeCount;
- (void)dealloc;
- (id)initWithTask:(unsigned int)arg1 symbolicator:(struct _CSTypeRef)arg2;

@end

__attribute__((visibility("hidden")))
@interface DVT_VMUObjectLabelHandlerInfo : NSObject
{
    NSString *_className;
    Class _localClass;
    SEL _handlerSelector;
}

- (void)dealloc;

@end

@interface DVT_VMUProcInfo : NSObject
{
    unsigned int _task;
    BOOL _needTaskPortDealloc;
    NSString *_name;
    NSArray *_arguments;
    NSArray *_envVars;
    NSString *_procTableName;
    NSString *_realAppName;
    NSString *_requestedAppName;
    NSString *_firstArg;
    int _pid;
    int _ppid;
    struct timeval _startTime;
}

+ (int)processParentId:(int)arg1;
+ (BOOL)isProcessRunning:(int)arg1;
+ (id)getProcessIds;
- (unsigned long long)hash;
- (long long)compareByUserAppName:(id)arg1;
- (long long)compareByName:(id)arg1;
- (long long)compare:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (BOOL)signal:(int)arg1;
- (BOOL)terminate;
- (BOOL)isRunning;
- (BOOL)isNative;
- (int)cpuType;
- (BOOL)isCFM;
- (BOOL)isMachO;
- (BOOL)isApp;
- (void)update;
- (unsigned int)task;
- (int)ppid;
- (int)pid;
- (id)description;
- (id)name;
- (id)userAppName;
- (id)valueForEnvVar:(id)arg1;
- (id)envVars;
- (id)arguments;
- (id)firstArgument;
- (id)requestedAppName;
- (id)realAppName;
- (id)_infoFromCommandLine:(int)arg1;
- (id)procTableName;
- (struct timeval)startTime;
- (void)finalize;
- (void)dealloc;
- (id)initWithTask:(unsigned int)arg1;
- (id)initWithPid:(int)arg1;
- (id)init;

@end

@interface DVT_VMUProcList : NSObject
{
    NSLock *procLock;
    NSMapTable *allProcs;
    NSMapTable *filteredProcs;
    BOOL appsOnly;
    BOOL ownedOnly;
}

- (id)procInfoWithPID:(int)arg1;
- (id)newestProcInfoSatisfyingCondition:(SEL)arg1 forTarget:(id)arg2;
- (id)newestProcInfoSatisfyingCondition:(SEL)arg1 forTarget:(id)arg2 withContext:(void *)arg3;
- (id)newestProcInfoWithName:(id)arg1;
- (id)newestProcInfo;
- (id)allPathNames;
- (id)allNames;
- (id)allPIDs;
- (id)allProcInfos;
- (unsigned long long)count;
- (BOOL)appsOnly;
- (void)setAppsOnly:(BOOL)arg1;
- (BOOL)ownedOnly:(BOOL)arg1;
- (void)setOwnedOnly:(BOOL)arg1;
- (BOOL)updateFromSystem;
- (void)_populateFromSystem;
- (BOOL)update;
- (void)removeProcInfo:(id)arg1;
- (void)addProcInfo:(id)arg1;
- (void)setProcInfos:(id)arg1;
- (void)finalize;
- (void)dealloc;
- (id)init;

@end

@interface DVT_VMUProcessDescription : NSObject <DVT_VMULibraryLoadDelegate>
{
    unsigned int _task;
    int _pid;
    NSString *_hardwareModel;
    NSString *_processName;
    BOOL _processNameNeedsCorrection;
    NSString *_executablePath;
    DVT__VMULibraryLoadObserver *_loadUnloadObserver;
    BOOL _executablePathNeedsCorrection;
    unsigned long long _executableLoadAddress;
    int _cpuType;
    BOOL _is64Bit;
    struct timeval _proc_starttime;
    NSDictionary *_lsApplicationInformation;
    NSMutableArray *_binaryImages;
    NSArray *_sortedBinaryImages;
    NSDictionary *_binaryImageHints;
    NSArray *_unreadableBinaryImagePaths;
    BOOL _binaryImagePostProcessingComplete;
    NSDictionary *_buildVersionDictionary;
    NSDictionary *_osVersionDictionary;
    struct mapped_memory_t *_mappedMemory;
    NSString *_parentProcessName;
    NSString *_parentExecutablePath;
    int _ppid;
    NSDate *_date;
}

+ (id)parseBinaryImagesDescription:(id)arg1;
- (void)dealloc;
@property(readonly, copy) NSString *description;
- (id)analysisToolDescription;
- (id)dateAndVersionDescription;
- (id)processDescriptionHeader;
- (id)_systemVersionDescription;
- (id)_osVersionDictionary;
- (id)_buildInfoDescription;
- (id)_buildVersionDictionary;
- (id)binaryImagesDescription;
- (id)binaryImagesDescriptionForBacktraces:(id)arg1;
- (id)_rangesOfBinaryImages:(id)arg1 forBacktraces:(id)arg2;
- (id)_binaryImagesDescriptionForRanges:(id)arg1;
- (id)_cpuTypeDescription;
- (id)binaryImageDictionaryForAddress:(unsigned long long)arg1;
- (id)binaryImages;
- (id)_bundleLock;
- (BOOL)isAppleApplication;
- (id)bundleIdentifier;
- (id)executablePath;
- (id)processVersion;
- (id)_sanitizeVersion:(id)arg1;
- (id)processVersionDictionary;
- (id)parentProcessName;
- (id)displayName;
- (id)processIdentifier;
- (id)processName;
- (int)cpuType;
- (int)pid;
- (unsigned int)task;
- (id)date;
- (void)_libraryLoaded:(struct _CSTypeRef)arg1;
- (void)_extractCrashReporterBinaryImageHintsFromSymbolOwner:(struct _CSTypeRef)arg1 withMemory:(struct mapped_memory_t *)arg2;
- (id)_extractInfoPlistFromSymbolOwner:(struct _CSTypeRef)arg1 withMemory:(struct mapped_memory_t *)arg2;
- (id)_readDataFromMemory:(struct mapped_memory_t *)arg1 atAddress:(unsigned long long)arg2 size:(unsigned long long)arg3;
- (id)_readStringFromMemory:(struct mapped_memory_t *)arg1 atAddress:(unsigned long long)arg2;
- (double)_extractDyldInfoFromSymbolOwner:(struct _CSTypeRef)arg1 withMemory:(struct mapped_memory_t *)arg2;
- (id)initWithPid:(int)arg1 orTask:(unsigned int)arg2;
- (id)initWithPid:(int)arg1 orTask:(unsigned int)arg2 getBinariesList:(BOOL)arg3;
- (void)clearCrashReporterInfo;
- (void)setCrashReporterInfo;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DVT_VMUProcessObjectGraph : DVT_VMUObjectGraph <VMUCommonGraphInterface>
{
    int _pid;
    unsigned int _kernPageSize;
    unsigned long long _machAbsolute;
    CDUnknownBlockType _regionProvider;
    NSMutableArray *_regions;
    unsigned int _regionCount;
    NSArray *_zoneNames;
    NSString *_procDescription;
    NSString *_procName;
}

@property(nonatomic) unsigned long long snapshotMachTime; // @synthesize snapshotMachTime=_machAbsolute;
@property(readonly, nonatomic) unsigned int regionCount; // @synthesize regionCount=_regionCount;
@property(readonly, nonatomic) unsigned int vmPageSize; // @synthesize vmPageSize=_kernPageSize;
@property(readonly, nonatomic) int pid; // @synthesize pid=_pid;
- (unsigned int)activeRegionCount;
@property(readonly, nonatomic) BOOL is64bit;
@property(copy, nonatomic) NSString *processName;
@property(copy, nonatomic) NSString *toolHeaderDescription;
- (id)labelForNode:(unsigned int)arg1;
- (unsigned int)enumerateRegionsWithBlock:(CDUnknownBlockType)arg1;
- (id)zoneNameForIndex:(unsigned int)arg1;
@property(readonly, nonatomic) unsigned int zoneCount;
@property(readonly, nonatomic) DVT_VMUClassInfoMap *realizedClasses;
- (void)archiveDictionaryRepresentation:(id)arg1 options:(unsigned long long)arg2;
- (id)initWithArchived:(id)arg1 options:(unsigned long long)arg2;
- (void)internalizeNodes;
- (void)dealloc;
- (id)initWithNodes:(unsigned int)arg1 pid:(int)arg2 zoneNames:(id)arg3 classInfoMap:(id)arg4 regionCount:(unsigned int)arg5 nodeProvider:(CDUnknownBlockType)arg6 regionProvider:(CDUnknownBlockType)arg7;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) unsigned int nodeCount;
@property(readonly, nonatomic) unsigned int nodeNamespaceSize;
@property(readonly) Class superclass;

@end

@interface DVT_VMUSampler : NSObject
{
    unsigned long long _options;
    int _pid;
    unsigned int _task;
    BOOL _needTaskPortDealloc;
    BOOL _recordThreadStates;
    BOOL _taskIs64Bit;
    NSString *_processName;
    DVT_VMUProcessDescription *_processDescription;
    struct _CSTypeRef _symbolicator;
    DVT_VMUTaskMemoryCache *_memCache;
    struct sampling_context_t *_samplingContext;
    unsigned int _mainThread;
    NSMapTable *_lastThreadBacktraceMap;
    unsigned int _numberOfCopiedBacktraces;
    unsigned int *_previousThreadList;
    unsigned int _previousThreadCount;
    unsigned int _maxPreviousThreadCount;
    double _tbRate;
    double _tbInterval;
    NSConditionLock *_stateLock;
    double _interval;
    double _timeLimit;
    unsigned int _sampleLimit;
    BOOL _sampling;
    unsigned int _samplingThreadPort;
    unsigned int _numberOfSamples;
    NSMutableArray *_samples;
    BOOL _stacksFixed;
    id _delegate;
    double _timeSpentSamplingWithoutCFI;
    double _timeSpentSamplingWithCFI;
    unsigned int _dispatchThreadSoftLimit;
    unsigned int _dispatchThreadSoftLimitCount;
    unsigned int _dispatchThreadHardLimit;
    unsigned int _dispatchThreadHardLimitCount;
}

+ (id)sampleAllThreadsOfTask:(unsigned int)arg1 symbolicate:(BOOL)arg2;
+ (id)sampleAllThreadsOfTask:(unsigned int)arg1;
+ (id)sampleAllThreadsOfPID:(int)arg1;
+ (void)initialize;
- (void)writeOutput:(id)arg1 append:(BOOL)arg2;
- (id)createOutput;
- (id)outputString;
- (id)stopSamplingAndReturnCallNode;
- (void)forceStop;
- (void)stopSampling;
- (void)sampleForDuration:(unsigned int)arg1 interval:(unsigned int)arg2;
- (void)preloadSymbols;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (id)dispatchQueueNameForSerialNumber:(unsigned long long)arg1;
- (id)dispatchQueueNameForSerialNumber:(unsigned long long)arg1 returnedConcurrentFlag:(char *)arg2 returnedThreadId:(unsigned long long *)arg3;
- (id)threadNameForThread:(unsigned int)arg1;
- (id)threadNameForThread:(unsigned int)arg1 returnedThreadId:(unsigned long long *)arg2 returnedDispatchQueueSerialNum:(unsigned long long *)arg3;
- (unsigned int)mainThread;
- (void)flushData;
- (unsigned int)sampleCount;
- (id)samples;
- (int)pid;
- (struct _CSTypeRef)symbolicator;
- (BOOL)shouldOutputSignature;
- (void)setShouldOutputSignature:(BOOL)arg1;
- (void)setRecordThreadStates:(BOOL)arg1;
- (unsigned int)sampleLimit;
- (void)setSampleLimit:(unsigned int)arg1;
- (double)timeLimit;
- (void)setTimeLimit:(double)arg1;
- (double)samplingInterval;
- (void)setSamplingInterval:(double)arg1;
- (BOOL)waitUntilDone;
- (BOOL)stop;
- (BOOL)start;
- (id)sampleThread:(unsigned int)arg1;
- (id)sampleAllThreadsOnce;
- (void)_runSamplingThread;
- (void)_fixupStacks:(id)arg1;
- (unsigned long long)recordSampleTo:(id)arg1 beginTime:(double)arg2 endTime:(double)arg3 thread:(unsigned int)arg4;
- (void)_checkDispatchThreadLimits;
- (void)initializeSamplingContext:(BOOL)arg1;
- (void)_makeTimeshare;
- (void)_makeHighPriority;
- (void)finalize;
- (void)dealloc;
- (id)initWithTask:(unsigned int)arg1 options:(unsigned long long)arg2;
- (id)initWithPID:(int)arg1 options:(unsigned long long)arg2;
- (id)initWithTask:(unsigned int)arg1;
- (id)initWithPID:(int)arg1;
- (id)initWithPID:(int)arg1 orTask:(unsigned int)arg2 options:(unsigned long long)arg3;
- (id)initWithPID:(int)arg1 task:(unsigned int)arg2 processName:(id)arg3 is64Bit:(BOOL)arg4 options:(unsigned long long)arg5;

@end

__attribute__((visibility("hidden")))
@interface DVT_VMUSimpleDeserializer : DVT_VMUAbstractSerializer
{
    void *_cache;
    CDUnknownBlockType _destructor;
}

- (unsigned int *)_deserializeValues:(unsigned int)arg1;
- (const char *)copyDeserializedNullTerminatedBytes;
- (id)copyDeserializedString;
- (id)copyDeserializedStringWithID:(unsigned int)arg1;
- (void)skipFields:(unsigned int)arg1;
- (unsigned long long)deserialize64;
- (unsigned int)deserialize32;
- (void)dealloc;
- (id)initWithBuffer:(const void *)arg1 length:(unsigned int)arg2 destructor:(CDUnknownBlockType)arg3;

@end

__attribute__((visibility("hidden")))
@interface DVT_VMUSimpleSerializer : DVT_VMUAbstractSerializer
{
    void *_map;
    unsigned int _internCursor;
}

- (id)copyContiguousData;
- (void)_serializeValues:(unsigned int *)arg1 count:(unsigned int)arg2;
- (unsigned int)serializeNullTerminatedBytes:(const char *)arg1;
- (unsigned int)serializeString:(id)arg1;
- (void)serialize64:(unsigned long long)arg1;
- (void)serialize32:(unsigned int)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface DVT_VMUTaskMemoryCache : NSObject
{
    struct mapped_memory_t *_memoryRegions;
    unsigned int _task;
    BOOL _taskIs64Bit;
    BOOL _stopped;
    BOOL _shouldTouchPages;
}

+ (id)taskMemoryCacheForTask:(unsigned int)arg1;
+ (BOOL)taskIs64Bit:(unsigned int)arg1;
- (BOOL)copyRange:(struct _VMURange)arg1 to:(void *)arg2;
- (int)readPointerAt:(unsigned long long)arg1 value:(unsigned long long *)arg2;
- (int)peekAtAddress:(unsigned long long)arg1 size:(unsigned long long)arg2 returnsBuf:(void **)arg3;
- (int)stopPeeking;
- (int)startPeeking;
- (void)finalize;
- (void)dealloc;
- (void)flushMemoryCache;
- (id)initWithTask:(unsigned int)arg1;

@end

@interface DVT_VMUTaskMemoryScanner : NSObject <VMUCommonGraphInterface>
{
    unsigned int _task;
    int _pid;
    unsigned long long _suspendTime;
    unsigned int _suspensionToken;
    DVT_VMUObjectIdentifier *_objectIdentifier;
    DVT_VMUVMRegionIdentifier *_regionIdentifier;
    struct _VMUBlockNode *_blocks;
    unsigned int _blocksCount;
    unsigned int _blocksSize;
    struct _VMURegionNode *_regions;
    unsigned int _regionsCount;
    struct _VMURegionMap *_regionMap;
    struct _VMUZoneNode *_zones;
    unsigned int _zonesCount;
    unsigned int _zonesSize;
    struct _VMUThreadNode *_threads;
    unsigned int _threadsCount;
    id *_classInfos;
    unsigned int _classInfosCount;
    DVT_VMUClassInfoMap *_classInfoIndexer;
    BOOL _exactScanningEnabled;
    unsigned long long _maxInteriorOffset;
    int _scanningMask;
    CDUnknownBlockType _referenceLogger;
    CDUnknownBlockType _nodeLogger;
}

+ (void)initialize;
@property(nonatomic) int scanningMask; // @synthesize scanningMask=_scanningMask;
@property(readonly, nonatomic) unsigned int regionCount; // @synthesize regionCount=_regionsCount;
@property(readonly, nonatomic) unsigned int zoneCount; // @synthesize zoneCount=_zonesCount;
@property(readonly, nonatomic) unsigned int nodeCount; // @synthesize nodeCount=_blocksCount;
@property(nonatomic) BOOL exactScanningEnabled; // @synthesize exactScanningEnabled=_exactScanningEnabled;
@property(nonatomic) unsigned long long maxInteriorOffset; // @synthesize maxInteriorOffset=_maxInteriorOffset;
@property(readonly, nonatomic) int pid; // @synthesize pid=_pid;
- (id)referenceDescription:(CDStruct_df82e459)arg1 withSourceNode:(unsigned int)arg2 destinationNode:(unsigned int)arg3 symbolicator:(struct _CSTypeRef)arg4 alignmentSpacing:(unsigned int)arg5;
- (id)nodeDescription:(unsigned int)arg1 withOffset:(unsigned long long)arg2;
- (id)nodeDescription:(unsigned int)arg1;
- (void)setReferenceScanningLogger:(CDUnknownBlockType)arg1;
- (void)setNodeScanningLogger:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned int nodeNamespaceSize;
@property(readonly, nonatomic) unsigned int vmPageSize;
- (unsigned int)enumerateReferencesWithBlock:(CDUnknownBlockType)arg1;
- (unsigned int)enumerateRegionsWithBlock:(CDUnknownBlockType)arg1;
- (unsigned int)enumerateObjectsWithBlock:(CDUnknownBlockType)arg1;
- (unsigned int)enumerateNodesWithBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned int mallocNodeCount;
- (void *)contentForNode:(unsigned int)arg1;
- (id)labelForNode:(unsigned int)arg1;
- (id)zoneNameForIndex:(unsigned int)arg1;
- (id)zoneNameForNode:(unsigned int)arg1;
- (CDStruct_599faf0f)nodeDetails:(unsigned int)arg1;
@property(readonly, nonatomic) DVT_VMUClassInfoMap *realizedClasses;
- (id)processSnapshotGraph;
- (id)scanNodesIntoGraph;
- (void)_scanIntoGraph:(id)arg1;
- (void)scanNodesForReferences:(CDUnknownBlockType)arg1;
- (void)removeRootReachableNodes;
- (void)_orderedScanWithScanner:(CDUnknownBlockType)arg1 recorder:(CDUnknownBlockType)arg2 keepMapped:(_Bool)arg3 actions:(CDUnknownBlockType)arg4;
- (void)orderedNodeTraversal:(int)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)_withOrderedNodeMapper:(CDUnknownBlockType)arg1;
- (void)_withScanningContext:(CDUnknownBlockType)arg1;
- (void)_fixupBlockIsas;
- (void)addMallocNodes:(id)arg1;
- (void)addMallocNodesFromTask;
- (void)_sortBlocks;
- (void)addRootNodesFromTask;
- (void)_callRemoteMallocEnumerators:(unsigned int)arg1 block:(CDUnknownBlockType)arg2;
- (void)_withMemoryReaderBlock:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (void)detachFromTask;
- (BOOL)_suspend;
- (id)initWithTask:(unsigned int)arg1;
- (id)initWithTask:(unsigned int)arg1 options:(unsigned long long)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DVT_VMUVMRegion : NSObject
{
    struct _VMURange range;
    unsigned int prot;
    unsigned int maxProt;
    NSString *type;
    NSString *path;
    BOOL summarized;
    unsigned char external_pager;
    unsigned char share_mode;
    int purgeable;
    unsigned long long virtual_pages;
    unsigned long long pages_resident;
    unsigned long long pages_shared_now_private;
    unsigned long long pages_swapped_out;
    unsigned long long pages_dirtied;
    unsigned long long ref_count;
    unsigned int user_tag;
    unsigned long long object_id;
    unsigned int nesting_depth;
    unsigned int is_submap:1;
    unsigned int is_macho_region:1;
    unsigned int is_unused_data_region:1;
    unsigned int is_unused_data_page_shared_with_active_content:1;
    unsigned int reserved_flags:28;
    unsigned long long mallocBlockCount;
    unsigned int mallocTypeFlag;
    unsigned int zone_index;
    unsigned int coalesced_region_count;
    unsigned long long resident_size;
    unsigned long long shared_now_private_size;
    unsigned long long swapped_out_size;
    unsigned long long dirty_size;
    unsigned long long purgable_vol_size;
    unsigned long long purgable_non_vol_size;
    unsigned long long purgable_empty_size;
}

+ (id)columnHeadersWithOptions:(unsigned long long)arg1 maximumLength:(unsigned long long)arg2 memorySizeDivisor:(unsigned int)arg3 hasFractionalPageSizes:(BOOL)arg4;
+ (id)columnHeadersWithOptions:(unsigned long long)arg1 maximumLength:(unsigned long long)arg2;
+ (void)initialize;
- (id)breakAtLength:(unsigned long long)arg1;
- (void)addInfoFromRegion:(id)arg1;
- (BOOL)hasSameInfoAsRegion:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isSubmap;
- (unsigned int)maxProtection;
- (unsigned int)protection;
- (id)path;
- (id)type;
- (unsigned long long)length;
- (unsigned long long)address;
- (struct _VMURange)range;
- (id)description;
- (id)descriptionWithOptions:(unsigned long long)arg1 maximumLength:(unsigned long long)arg2 memorySizeDivisor:(unsigned int)arg3 hasFractionalPageSizes:(BOOL)arg4;
- (id)descriptionWithOptions:(unsigned long long)arg1 maximumLength:(unsigned long long)arg2;
- (void)getVMRegionData:(struct _VMUVMRegionData *)arg1 withSimpleSerializer:(id)arg2;
- (void)dealloc;
- (id)initWithVMRegionData:(struct _VMUVMRegionData *)arg1 encodedVersion:(long long)arg2 simpleSerializer:(id)arg3;
- (id)init;

@end

@interface DVT_VMUVMRegionIdentifier : NSObject
{
    NSMutableArray *_regions;
    NSMapTable *_mallocZoneStatisticsMap;
    BOOL _hasFractionalPageSizes;
}

- (id)descriptionForRegionTotalsWithOptions:(unsigned long long)arg1 memorySizeDivisor:(unsigned int)arg2;
- (id)descriptionForRegionTotalsWithOptions:(unsigned long long)arg1;
- (id)descriptionForMallocZoneTotalsWithOptions:(unsigned long long)arg1 memorySizeDivisor:(unsigned int)arg2;
- (id)descriptionForRange:(struct _VMURange)arg1 options:(unsigned long long)arg2;
- (id)descriptionForRange:(struct _VMURange)arg1;
- (BOOL)hasFractionalPageSizes;
- (id)regions;
- (void)dealloc;
- (id)initWithGraph:(id)arg1 options:(unsigned long long)arg2;
- (id)initWithTask:(unsigned int)arg1;
- (id)initWithTask:(unsigned int)arg1 options:(unsigned long long)arg2;
- (id)initWithTask:(unsigned int)arg1 pid:(int)arg2 options:(unsigned long long)arg3;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface DVT__VMULibraryLoadObserver : NSObject
{
    id <DVT_VMULibraryLoadDelegate> _delegate;
    NSObject<OS_dispatch_queue> *_serialNotificationsQueue;
    struct _CSTypeRef _symbolicator;
}

- (void)stopObserving;
- (void)dealloc;
- (id)initWithTask:(unsigned int)arg1 delegate:(id)arg2;

@end

