//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct DTKPDataStreamMemoryRecord;

struct DTKPerfTapContainerRec;

struct DTNStatSourceMap {
    struct __CFDictionary *_container;
    long long _nextSerialNumber;
};

struct DTXSharedMemory {
    unsigned long long _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    int _field8;
    int _field9;
    unsigned int _field10;
    unsigned int _field11;
    unsigned int _field12;
    unsigned int _field13;
    unsigned int _field14;
    unsigned int _field15;
    unsigned int _field16;
    unsigned int _field17;
    char _field18[0];
};

struct SessionCallbackState {
    struct _opaque_pthread_t *thread;
    struct _opaque_pthread_mutex_t {
        long long __sig;
        char __opaque[56];
    } lock;
    struct _opaque_pthread_cond_t {
        long long __sig;
        char __opaque[40];
    } conditionVariable;
    int status;
    _Bool buffer_drained;
};

struct TFPPidWatcher {
    unsigned int clientPort;
};

struct _CSRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct _ContainerArray {
    struct DTKPerfTapContainerRec *recs;
    long long count;
};

struct __sFILE {
    char *_field1;
    int _field2;
    int _field3;
    short _field4;
    short _field5;
    struct __sbuf _field6;
    int _field7;
    void *_field8;
    CDUnknownFunctionPointerType _field9;
    CDUnknownFunctionPointerType _field10;
    CDUnknownFunctionPointerType _field11;
    CDUnknownFunctionPointerType _field12;
    struct __sbuf _field13;
    struct __sFILEX *_field14;
    int _field15;
    unsigned char _field16[3];
    unsigned char _field17[1];
    struct __sbuf _field18;
    int _field19;
    long long _field20;
};

struct __sbuf {
    char *_field1;
    int _field2;
};

struct in6_addr {
    union {
        unsigned char _field1[16];
        unsigned short _field2[8];
        unsigned int _field3[4];
    } _field1;
};

struct in_addr {
    unsigned int _field1;
};

struct kpdecode_callstack {
    unsigned int _field1;
    unsigned int _field2;
    unsigned long long _field3[128];
};

struct kpdecode_pmc {
    int _field1;
    unsigned long long _field2[32];
};

struct kpdecode_record {
    unsigned long long _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    int _field4;
    struct {
        char _field1[20];
    } _field5;
    struct {
        unsigned int _field1;
        unsigned long long _field2[4];
    } _field6;
    struct {
        int _field1;
        int _field2;
        unsigned long long _field3;
    } _field7;
    struct kpdecode_callstack _field8;
    struct kpdecode_callstack _field9;
    struct kpdecode_pmc _field10;
    struct {
        unsigned int _field1;
        unsigned int _field2;
        unsigned int _field3;
        unsigned int _field4;
    } _field11;
    struct {
        unsigned int _field1;
        unsigned long long _field2;
        unsigned long long _field3;
        unsigned long long _field4;
        unsigned long long _field5;
    } _field12;
    struct {
        unsigned int _field1;
        unsigned int _field2;
    } _field13;
    struct {
        unsigned long long _field1;
        int _field2;
    } _field14;
    struct {
        int _field1;
        unsigned long long *_field2;
    } _field15;
    struct {
        unsigned long long _field1;
    } _field16;
    CDStruct_1e94be47 _field17;
    struct {
        char _field1[256];
        unsigned long long _field2;
        unsigned long long _field3;
        unsigned int _field4;
    } _field18;
};

struct map<unsigned long long, int, std::__1::less<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, int>>> {
    struct __tree<std::__1::__value_type<unsigned long long, int>, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, int>, std::__1::less<unsigned long long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long long, int>>> {
        struct __tree_node<std::__1::__value_type<unsigned long long, int>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long long, int>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
                struct __tree_node_base<void *> *__left_;
            } __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, int>, std::__1::less<unsigned long long>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct sockaddr_in {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    struct in_addr _field4;
    char _field5[8];
};

struct sockaddr_in6 {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    unsigned int _field4;
    struct in6_addr _field5;
    unsigned int _field6;
};

struct vector<DTKPDataStreamMemoryRecord *, std::__1::allocator<DTKPDataStreamMemoryRecord *>> {
    struct DTKPDataStreamMemoryRecord **__begin_;
    struct DTKPDataStreamMemoryRecord **__end_;
    struct __compressed_pair<DTKPDataStreamMemoryRecord **, std::__1::allocator<DTKPDataStreamMemoryRecord *>> {
        struct DTKPDataStreamMemoryRecord **__first_;
    } __end_cap_;
};

struct vm_region_submap_info_64 {
    int _field1;
    int _field2;
    unsigned int _field3;
    unsigned long long _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned int _field10;
    unsigned short _field11;
    unsigned char _field12;
    unsigned char _field13;
    unsigned int _field14;
    int _field15;
    unsigned int _field16;
    unsigned short _field17;
    unsigned int _field18;
};

#pragma mark Typedef'd Structures

typedef struct {
    unsigned char byte0;
    unsigned char byte1;
    unsigned char byte2;
    unsigned char byte3;
    unsigned char byte4;
    unsigned char byte5;
    unsigned char byte6;
    unsigned char byte7;
    unsigned char byte8;
    unsigned char byte9;
    unsigned char byte10;
    unsigned char byte11;
    unsigned char byte12;
    unsigned char byte13;
    unsigned char byte14;
    unsigned char byte15;
} CDStruct_e6eac3cb;

typedef struct {
    unsigned int _field1;
    int _field2;
} CDStruct_1e94be47;

typedef struct {
    unsigned long long _field1;
    unsigned long long _field2;
    unsigned int _field3;
    unsigned int _field4;
} CDStruct_cbbc06c7;

typedef struct {
    unsigned int _field1;
    unsigned int _field2;
    struct *_field3;
} CDStruct_3b01f0aa;

#pragma mark Typedef'd Unions

typedef union {
    unsigned int value;
    struct {
        unsigned int qualifier:2;
        unsigned int code:14;
        unsigned int subclass:8;
        unsigned int classID:8;
    } field;
} CDUnion_1678db3a;

#pragma mark -

//
// File: /Applications/Xcode-7GM.app/Contents/SharedFrameworks/DVTInstrumentsFoundation.framework/Versions/A/DVTInstrumentsFoundation
// UUID: 130D8DC3-A9E0-3BE5-870B-B7CA18BA82AE
//
//                           Arch: x86_64
//                Current version: 58118.0.0
//          Compatibility version: 1.0.0
//                 Source version: 58118.0.0.0.0
//       Minimum Mac OS X version: 10.10.0
//                    SDK version: 10.11.0
//
// Objective-C Garbage Collection: Unsupported
//
//                       Run path: @loader_path/../../..
//                               = /Applications/Xcode-7GM.app/Contents/SharedFrameworks
//                       Run path: @executable_path/../../../../../../../SharedFrameworks
//                               = /SharedFrameworks
//

@protocol DTActivityMonitoringServiceAuthorizedAPI <DTXAllowedRPC>
- (void)stopSampling;
- (void)startSamplingWithPid:(int)arg1;
- (void)setSamplingRate:(NSNumber *)arg1;
- (NSNumber *)killPid:(NSNumber *)arg1 withSignal:(NSNumber *)arg2;
- (NSMutableDictionary *)configureLaunchEnvironment:(NSMutableDictionary *)arg1;
@end

@protocol DTApplicationListingServiceRequests <DTXAllowedRPC>
- (void)unregisterUpdateToken:(NSString *)arg1;
- (NSArray *)installedApplicationsMatching:(NSDictionary *)arg1 registerUpdateToken:(NSString *)arg2;
@end

@protocol DTApplicationWorkspaceClient <NSObject>
- (void)applicationUninstalled:(NSDictionary *)arg1;
- (void)applicationInstalled:(NSDictionary *)arg1;
@end

@protocol DTAssetServiceProtocol <DTXAllowedRPC>
- (id)registerApplicationIdentifier:(NSString *)arg1 manifest:(NSData *)arg2;
- (NSNumber *)startServer;
- (NSNumber *)startServerForApplicationWithDevicePath:(NSString *)arg1;
@end

@protocol DTDeviceInfoServiceAuthorizedAPI <DTXAllowedRPC>
- (NSString *)cpDeviceName;
- (NSString *)cpDeviceInfoAsXML;
- (NSString *)cpKDebugEventsAsXML;
- (NSDictionary *)networkInformation;
- (NSDictionary *)systemInformation;
- (NSDictionary *)hardwareInformation;
- (NSDictionary *)iconDescriptionFileForAppPath:(NSString *)arg1;
- (NSArray *)directoryListingForPath:(NSString *)arg1;
- (NSDictionary *)symbolicatorSignaturesForExpiredPids;
- (void)unregisterSignatureTrackingForPid:(NSNumber *)arg1;
- (NSData *)symbolicatorSignatureForPid:(NSNumber *)arg1 trackingSelector:(NSString *)arg2;
- (NSString *)machKernelName;
- (NSNumber *)pidIs64Bit:(NSNumber *)arg1;
- (NSNumber *)isRunningPid:(NSNumber *)arg1;
- (NSString *)execnameForPid:(NSNumber *)arg1;
- (NSString *)nameForGID:(NSNumber *)arg1;
- (NSString *)nameForUID:(NSNumber *)arg1;
- (NSArray *)runningProcesses;
- (NSArray *)machTimeInfo;
@end

@protocol DTFSUsageActivityServiceAuthorizedAPI <DTXAllowedRPC>
- (NSMutableDictionary *)initialSwitches;
- (void)setValue:(NSNumber *)arg1 forSwitchName:(NSString *)arg2;
- (NSNumber *)valueForSwitch:(NSString *)arg1;
- (void)stopSampling;
- (void)startSamplingWithPid:(int)arg1;
- (NSMutableDictionary *)configureLaunchEnvironment:(NSMutableDictionary *)arg1;
@end

@protocol DTFileBrowserServiceAuthorizedAPI <DTXAllowedRPC>
- (NSMutableDictionary *)updateAttributesForItem:(NSMutableDictionary *)arg1;
- (NSArray *)contentsOfDirectoryAtPath:(NSString *)arg1;
- (NSData *)dataFromFileAtPath:(NSString *)arg1;
- (NSArray *)entriesInPathsArray:(NSArray *)arg1;
- (NSArray *)entriesAtPath:(NSString *)arg1;
@end

@protocol DTInstrumentServerAllowedRPC <DTXAllowedRPC>
- (void)setMaxConnectionEnqueue:(unsigned long long)arg1;
@end

@protocol DTInstrumentServerSimulatorPrivilege <DTXAllowedRPC>
- (void)_notifyOfTFPCommunicationsPort:(unsigned int)arg1;
@end

@protocol DTKPDatastream <NSObject>
- (int)exportRawDataWithError:(id *)arg1 block:(void (^)(void *, unsigned long long, BOOL))arg2;
- (int)importRawData:(void *)arg1 bufferSize:(unsigned long long)arg2 error:(id *)arg3;
- (int)setWritingCompletedWithError:(id *)arg1;
- (BOOL)hasData;
- (id)createNextStream:(id *)arg1;
@end

@protocol DTKPSessionEnumerable <NSObject>
- (int)exportData:(char *)arg1 error:(id *)arg2 block:(void (^)(void *, unsigned long long, unsigned char))arg3;
- (int)enumerateRecords:(char *)arg1 error:(id *)arg2 block:(void (^)(DTKPRecord *, char *))arg3;
@end

@protocol DTKPSessionRecordable <NSObject>
- (BOOL)isPaused;
- (BOOL)isActive;
- (int)stop:(id *)arg1;
- (int)resume:(id *)arg1;
- (int)pause:(id *)arg1;
- (int)start:(id *)arg1;
- (id)initAsFileBackedWithDirectory:(NSURL *)arg1 retainFiles:(BOOL)arg2 error:(id *)arg3;
- (id)initAsMemoryBackedWithError:(id *)arg1;
@end

@protocol DTLeaksServiceAuthorizedRPC <DTXAllowedRPC>
- (NSDictionary *)requestGraph:(unsigned long long)arg1 options:(NSDictionary *)arg2;
@end

@protocol DTLeaksServiceLegacyRPC <DTXAllowedRPC>
- (void)cancelAllRequests;
- (void)requestLeaksForPid:(NSNumber *)arg1 context:(NSNumber *)arg2 provideBacktraces:(NSNumber *)arg3;
@end

@protocol DTNetworkingServiceAuthorizedAPI <DTXAllowedRPC>
- (void)replayLastRecordedSession;
- (void)setTargetPID:(NSNumber *)arg1;
- (void)stopMonitoring;
- (void)startMonitoring;
@end

@protocol DTObjectAllocServiceAuthorizedAPI <DTXAllowedRPC>
- (void)stopCollection;
- (void)startCollectionWithPid:(int)arg1;
- (NSNumber *)attachToPid:(NSNumber *)arg1 eventsMask:(NSNumber *)arg2;
- (NSDictionary *)preparedEnvironmentForLaunch:(NSDictionary *)arg1 eventsMask:(NSNumber *)arg2;
@end

@protocol DTProcessControlServiceAuthorizedMethods <DTXAllowedRPC>
- (void)sendProcessControlEvent:(NSData *)arg1 toPid:(NSNumber *)arg2;
- (void)killPid:(NSNumber *)arg1;
- (NSNumber *)launchSuspendedProcessWithDevicePath:(NSString *)arg1 bundleIdentifier:(NSString *)arg2 environment:(NSDictionary *)arg3 arguments:(NSArray *)arg4 options:(NSDictionary *)arg5;
- (void)resumePid:(NSNumber *)arg1;
- (void)suspendPid:(NSNumber *)arg1;
- (void)stopObservingPid:(NSNumber *)arg1;
- (void)startObservingPid:(NSNumber *)arg1;
@end

@protocol DTSamplingServiceAuthorizedAPI <DTXAllowedRPC>
- (void)stopSampling;
- (void)startSampling;
- (void)setTargetPid:(NSNumber *)arg1;
- (void)setOutputRate:(NSNumber *)arg1;
- (void)setSamplingRate:(NSNumber *)arg1;
@end

@protocol DTTapAuthorizedAPI <DTXAllowedRPC>
- (void)fetchDataNow;
- (void)setConfig:(NSDictionary *)arg1;
- (void)unpause;
- (void)pause;
- (void)stop;
- (void)start;
@end

@protocol DTTapDelegate <NSObject>
- (void)fetchFromTap:(id)arg1 guard:(_GenericTapGuarded *)arg2;
- (void)unpauseTap:(id)arg1 guard:(_GenericTapGuarded *)arg2;
- (void)pauseTap:(id)arg1 guard:(_GenericTapGuarded *)arg2;
- (void)stopTap:(id)arg1 semaphore:(NSObject<OS_dispatch_semaphore> *)arg2 guard:(_GenericTapGuarded *)arg3;
- (void)startTap:(id)arg1 guard:(_GenericTapGuarded *)arg2;
- (void)invokeClientHandlers:(id)arg1;
- (id)willInvokeClientHandlers:(_GenericTapGuarded *)arg1;
- (void)reset:(_GenericTapGuarded *)arg1;
- (void)populateGuarded:(_GenericTapGuarded *)arg1;
- (_GenericTapGuarded *)createGuarded;
- (DTTapConfig *)createNewTapConfig;

@optional
- (BOOL)handleMessage:(DTXMessage *)arg1 fromTap:(id)arg2 guard:(_GenericTapGuarded *)arg3;
@end

@protocol DTVMTrackingServiceAuthorizedAPI <DTXAllowedRPC>
- (void)stopTracking;
- (void)startTracking;
- (XRVMState *)requestVMSnapshot;
- (void)setTargetPid:(NSNumber *)arg1 referenceDate:(NSDate *)arg2;
- (NSMutableDictionary *)configureLaunchEnvironment:(NSMutableDictionary *)arg1;
@end

@protocol DTXAllowedRPC <NSObject>
@end

@protocol DTXPCControlServiceRequests <DTXAllowedRPC>
- (void)stopObservationsForIdentifier:(NSString *)arg1 requestingProcess:(int)arg2;
- (void)observeServicesWithIdentifier:(NSString *)arg1 requestingProcess:(int)arg2 environment:(NSDictionary *)arg3 arguments:(NSArray *)arg4 options:(NSDictionary *)arg5;
@end

@protocol GCDAsyncSocketDelegate

@optional
- (void)socket:(_DT_GCDAsyncSocket *)arg1 didReceiveTrust:(struct __SecTrust *)arg2 completionHandler:(void (^)(BOOL))arg3;
- (void)socketDidSecure:(_DT_GCDAsyncSocket *)arg1;
- (void)socketDidDisconnect:(_DT_GCDAsyncSocket *)arg1 withError:(NSError *)arg2;
- (void)socketDidCloseReadStream:(_DT_GCDAsyncSocket *)arg1;
- (double)socket:(_DT_GCDAsyncSocket *)arg1 shouldTimeoutWriteWithTag:(long long)arg2 elapsed:(double)arg3 bytesDone:(unsigned long long)arg4;
- (double)socket:(_DT_GCDAsyncSocket *)arg1 shouldTimeoutReadWithTag:(long long)arg2 elapsed:(double)arg3 bytesDone:(unsigned long long)arg4;
- (void)socket:(_DT_GCDAsyncSocket *)arg1 didWritePartialDataOfLength:(unsigned long long)arg2 tag:(long long)arg3;
- (void)socket:(_DT_GCDAsyncSocket *)arg1 didWriteDataWithTag:(long long)arg2;
- (void)socket:(_DT_GCDAsyncSocket *)arg1 didReadPartialDataOfLength:(unsigned long long)arg2 tag:(long long)arg3;
- (void)socket:(_DT_GCDAsyncSocket *)arg1 didReadData:(NSData *)arg2 withTag:(long long)arg3;
- (void)socket:(_DT_GCDAsyncSocket *)arg1 didConnectToHost:(NSString *)arg2 port:(unsigned short)arg3;
- (void)socket:(_DT_GCDAsyncSocket *)arg1 didAcceptNewSocket:(_DT_GCDAsyncSocket *)arg2;
- (NSObject<OS_dispatch_queue> *)newSocketQueueForConnectionFromAddress:(NSData *)arg1 onSocket:(_DT_GCDAsyncSocket *)arg2;
@end

@protocol LSApplicationWorkspaceObserverProtocol <NSObject>

@optional
- (void)networkUsageChanged:(BOOL)arg1;
- (void)applicationInstallsDidPrioritize:(NSArray *)arg1;
- (void)applicationInstallsDidCancel:(NSArray *)arg1;
- (void)applicationInstallsDidResume:(NSArray *)arg1;
- (void)applicationInstallsDidPause:(NSArray *)arg1;
- (void)applicationInstallsArePrioritized:(NSArray *)arg1 arePaused:(NSArray *)arg2;
- (void)applicationsDidFailToUninstall:(NSArray *)arg1;
- (void)pluginsDidUninstall:(NSArray *)arg1;
- (void)applicationsDidUninstall:(NSArray *)arg1;
- (void)pluginsWillUninstall:(NSArray *)arg1;
- (void)applicationsWillUninstall:(NSArray *)arg1;
- (void)applicationsDidFailToInstall:(NSArray *)arg1;
- (void)pluginsDidInstall:(NSArray *)arg1;
- (void)applicationsDidInstall:(NSArray *)arg1;
- (void)applicationsWillInstall:(NSArray *)arg1;
- (void)applicationInstallsDidUpdateIcon:(NSArray *)arg1;
- (void)applicationInstallsDidChange:(NSArray *)arg1;
- (void)applicationInstallsDidStart:(NSArray *)arg1;
@end

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (BOOL)respondsToSelector:(SEL)arg1;
- (BOOL)conformsToProtocol:(Protocol *)arg1;
- (BOOL)isMemberOfClass:(Class)arg1;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (BOOL)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSSecureCoding <NSCoding>
+ (BOOL)supportsSecureCoding;
@end

@interface DTActivityMonitoringService : DTXService <DTActivityMonitoringServiceAuthorizedAPI>
{
    BOOL _doCollectData;
    long long _samplingRate;
}

+ (void)registerCapabilities:(id)arg1;
- (void)collectData;
- (id)configureLaunchEnvironment:(id)arg1;
- (id)killPid:(id)arg1 withSignal:(id)arg2;
- (void)stopSampling;
- (void)startSamplingWithPid:(int)arg1;
- (void)setSamplingRate:(id)arg1;
- (id)initWithChannel:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DTAllocationsRecorder : NSObject
{
    struct DTXSharedMemory *_shmem;
    NSObject<OS_dispatch_queue> *_processingQueue;
    struct {
        double _field1;
        unsigned int _field2;
        unsigned int _field3;
        unsigned long long _field4;
        unsigned long long _field5;
        unsigned long long _field6;
        long long _field7;
        unsigned long long _field8[0];
        char _field9[0];
    } *_partialEvent;
    unsigned int _partialSize;
    unsigned int _partialFilled;
    int _eventTotal;
    unsigned int _targetTask;
    int _stopCollection;
    BOOL _readStackLogsUponAttach;
    unsigned int _sharedMemorySize;
    CDUnknownBlockType _eventHandler;
    CDUnknownBlockType _bufferHandler;
}

+ (BOOL)configureLocalLaunchEnvironment:(id)arg1 recordedEventsMask:(unsigned int)arg2;
+ (long long)currentVersion;
+ (id)serviceIdentifier;
+ (unsigned int)cppClassNamesMask;
+ (unsigned int)zombieEventsMask;
+ (unsigned int)mallocReallocFreeEventsMask;
+ (unsigned int)retainReleaseAutoEventsMask;
+ (unsigned int)vmEventsMask;
+ (unsigned int)allEventsMask;
@property(nonatomic) unsigned int sharedMemorySize; // @synthesize sharedMemorySize=_sharedMemorySize;
@property(nonatomic) BOOL readStackLogsUponAttach; // @synthesize readStackLogsUponAttach=_readStackLogsUponAttach;
@property(copy, nonatomic) CDUnknownBlockType bufferHandler; // @synthesize bufferHandler=_bufferHandler;
@property(copy, nonatomic) CDUnknownBlockType eventHandler; // @synthesize eventHandler=_eventHandler;
- (void).cxx_destruct;
- (void)_processIncomingData;
@property(readonly) int eventCount;
- (void)_endAndTossResources:(BOOL)arg1;
- (void)cancel;
- (void)stop;
- (void)processBufferMessage:(id)arg1;
- (BOOL)_startWithError:(id *)arg1;
- (BOOL)startForProcessingBuffersWithError:(id *)arg1;
- (BOOL)startWithLaunchedTask:(unsigned int)arg1 error:(id *)arg2;
- (BOOL)startAttachingToRunningTask:(unsigned int)arg1 recordedEventsMask:(unsigned int)arg2 error:(id *)arg3;
- (unsigned long long)_setupSharedMemoryInTask:(unsigned int)arg1 error:(id *)arg2;
- (void)dealloc;
- (id)init;

@end

@interface DTApplicationListingService : DTXService <DTApplicationWorkspaceClient, DTApplicationListingServiceRequests>
{
}

+ (void)registerCapabilities:(id)arg1;
- (void)unregisterUpdateToken:(id)arg1;
- (id)installedApplicationsMatching:(id)arg1 registerUpdateToken:(id)arg2;
- (void)_sendNotification:(id)arg1 install:(BOOL)arg2;
- (void)applicationUninstalled:(id)arg1;
- (void)applicationInstalled:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DTApplicationWorkspaceObserver : NSObject <LSApplicationWorkspaceObserverProtocol>
{
    NSMutableDictionary *_registrationsByToken;
    NSMutableDictionary *_knownAppsByPath;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (void)pluginsDidUninstall:(id)arg1;
- (void)applicationsDidUninstall:(id)arg1;
- (void)pluginsDidInstall:(id)arg1;
- (void)applicationsDidInstall:(id)arg1;
- (void)unregisterNotificationToken:(id)arg1 observer:(id)arg2;
- (void)_unregisterNotificationTokenInternal:(id)arg1;
- (id)registerNotificationToken:(id)arg1 observer:(id)arg2 query:(id)arg3;
- (void)_notifyWithDictionaryRepresentation:(id)arg1 addition:(BOOL)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DTAssertionManager : NSObject
{
    NSArray *_assertionFactories;
    NSArray *_disableKeys;
    NSObject<OS_dispatch_queue> *_guard;
    NSMutableDictionary *_pidInfosByPid;
}

+ (id)sharedInstance;
+ (void)defaultAssertionFactories:(id *)arg1 andDisableKeys:(id *)arg2;
- (void).cxx_destruct;
- (void)removeClaimsHeldByClient:(id)arg1;
- (void)removeAssertionsForPid:(int)arg1 onBehalfOfClient:(id)arg2;
- (void)takeAssertionsForPid:(int)arg1 onBehalfOfClient:(id)arg2 withOptions:(id)arg3;
- (id)initWithAssertionFactories:(id)arg1 andDisableKeys:(id)arg2;
- (id)init;

@end

@interface DTAssertionPidInfo : NSObject
{
    int _pid;
    NSArray *_blocks;
    NSMutableSet *_clientsWithClaim;
}

@property(readonly) int pid; // @synthesize pid=_pid;
@property(readonly) NSArray *blocks; // @synthesize blocks=_blocks;
- (void).cxx_destruct;
- (BOOL)hasNoMoreClients;
- (BOOL)removeClaimFromClient:(id)arg1;
- (void)addClaimForClient:(id)arg1;
- (void)removeAssertions;
- (id)initForPid:(int)arg1 withRemoveBlocks:(id)arg2 onBehalfOfClient:(id)arg3;

@end

@interface DTAssetHTTPRequestHandler : NSObject <GCDAsyncSocketDelegate>
{
    struct __CFHTTPMessage *_httpMessage;
    BOOL _sentHeader;
    NSString *_identifier;
    DTXChannel *_channel;
    _DT_GCDAsyncSocket *_socket;
    CDUnknownBlockType _completion;
    unsigned long long _dataSent;
}

@property unsigned long long dataSent; // @synthesize dataSent=_dataSent;
@property BOOL sentHeader; // @synthesize sentHeader=_sentHeader;
@property(copy) CDUnknownBlockType completion; // @synthesize completion=_completion;
@property(retain) _DT_GCDAsyncSocket *socket; // @synthesize socket=_socket;
@property(retain) DTXChannel *channel; // @synthesize channel=_channel;
@property(readonly) NSString *identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
- (void)socketDidDisconnect:(id)arg1 withError:(id)arg2;
- (void)socket:(id)arg1 didReadData:(id)arg2 withTag:(long long)arg3;
- (void)serveResponseAndDisconnect:(struct __CFHTTPMessage *)arg1;
- (void)serveErrorMessageForError:(id)arg1;
- (void)sendDataChunk:(id)arg1;
- (void)receivedMessage:(id)arg1;
- (void)requestAssetAtPath:(id)arg1;
- (void)startReading;
- (void)dealloc;
- (id)initWithSocket:(id)arg1 channel:(id)arg2;

@end

@interface DTAssetHTTPServer : NSObject <GCDAsyncSocketDelegate>
{
    DTXChannel *_channel;
    _DT_GCDAsyncSocket *_socket;
    NSObject<OS_dispatch_queue> *_socketDelegateQueue;
}

@property(retain) NSObject<OS_dispatch_queue> *socketDelegateQueue; // @synthesize socketDelegateQueue=_socketDelegateQueue;
@property(retain) _DT_GCDAsyncSocket *socket; // @synthesize socket=_socket;
@property(retain) DTXChannel *channel; // @synthesize channel=_channel;
- (void).cxx_destruct;
@property(readonly) unsigned long long port;
- (void)socket:(id)arg1 didAcceptNewSocket:(id)arg2;
- (void)stopListening;
- (BOOL)startListeningWithError:(id *)arg1;

@end

@interface DTAssetProviderService : DTXService
{
    DTXConnection *_connection;
    NSObject<OS_dispatch_queue> *_concurrentRequestQueue;
}

+ (void)beginProvidingAssetsForApplication:(id)arg1 onChannel:(id)arg2 completion:(CDUnknownBlockType)arg3;
+ (BOOL)shouldStartAssetServerForApplication:(id)arg1;
+ (id)assetManifestPathForApplication:(id)arg1;
+ (void)assetProviderWithConnection:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (void)beginProvidingAssetsForLocalApplication:(id)arg1 connection:(id)arg2 completion:(CDUnknownBlockType)arg3;
+ (void)beginProvidingAssetsForRemoteApplication:(id)arg1 connection:(id)arg2 completion:(CDUnknownBlockType)arg3;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *concurrentRequestQueue; // @synthesize concurrentRequestQueue=_concurrentRequestQueue;
@property(nonatomic) __weak DTXConnection *connection; // @synthesize connection=_connection;
- (void).cxx_destruct;
- (void)registerManifestForApplicationAtPath:(id)arg1 onPort:(unsigned long long)arg2;
- (void)startServerOnDeviceWithCompletion:(CDUnknownBlockType)arg1;
- (void)serveDataFromFileHandle:(id)arg1 forRequestIdentifier:(id)arg2;
- (void)serveDataFromFile:(id)arg1 forRequestIdentifier:(id)arg2;
- (void)serveDataFromZippedDirectory:(id)arg1 forRequestIdentifier:(id)arg2;
- (void)messageReceived:(id)arg1;
- (void)startServingAssetsForAppWithPath:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (id)initWithChannel:(id)arg1;

@end

@interface DTAssetRequest : NSObject <NSSecureCoding>
{
    NSString *_identifier;
    NSString *_assetPath;
}

+ (BOOL)supportsSecureCoding;
+ (id)requestWithIdentifier:(id)arg1 path:(id)arg2;
@property(readonly, nonatomic) NSString *assetPath; // @synthesize assetPath=_assetPath;
@property(readonly, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
@property(readonly, nonatomic) DTXMessage *message;
- (id)initWithIdentifier:(id)arg1 path:(id)arg2;

@end

@interface DTAssetResponse : NSObject <NSSecureCoding>
{
    BOOL _completed;
    NSString *_identifier;
    NSData *_data;
}

+ (BOOL)supportsSecureCoding;
+ (id)completedResponseWithIdentifier:(id)arg1;
+ (id)responseWithIdentifier:(id)arg1 data:(id)arg2;
@property(readonly, nonatomic, getter=isCompleted) BOOL completed; // @synthesize completed=_completed;
@property(readonly, nonatomic) NSData *data; // @synthesize data=_data;
@property(readonly, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
- (id)description;
@property(readonly, nonatomic) DTXMessage *message;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithIdentifier:(id)arg1 data:(id)arg2 completed:(BOOL)arg3;

@end

@interface DTAssetResponseBroker : NSObject
{
    NSMutableDictionary *_activeHandlers;
    NSObject<OS_dispatch_queue> *_activeHandlersQueue;
}

+ (id)sharedBroker;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *activeHandlersQueue; // @synthesize activeHandlersQueue=_activeHandlersQueue;
@property(retain, nonatomic) NSMutableDictionary *activeHandlers; // @synthesize activeHandlers=_activeHandlers;
- (void).cxx_destruct;
- (void)unregisterHandler:(id)arg1;
- (void)registerHandler:(id)arg1;
- (void)forwardMessage:(id)arg1;
- (id)activeHandlerWithIdentifier:(id)arg1;
- (id)init;

@end

@interface DTAssetResponseService : DTXService
{
}

+ (void)registerCapabilities:(id)arg1;
- (void)messageReceived:(id)arg1;

@end

@interface DTAssetService : DTXService <DTAssetServiceProtocol>
{
    DTAssetHTTPServer *_server;
    NSXPCConnection *_ondemandConnection;
}

+ (id)translatedManifest:(id)arg1 withAssetServicePort:(unsigned int)arg2;
@property(retain) NSXPCConnection *ondemandConnection; // @synthesize ondemandConnection=_ondemandConnection;
@property(retain) DTAssetHTTPServer *server; // @synthesize server=_server;
- (void).cxx_destruct;
- (id)registerApplicationIdentifier:(id)arg1 manifest:(id)arg2;
- (void)connectToOnDemandDaemon;
- (id)startServer;
- (id)startServerForApplicationWithDevicePath:(id)arg1;
- (void)messageReceived:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DTCPRemoteCache : NSObject
{
    id *_locks;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)kindToString:(int)arg1;
+ (id)sharedDTCPRemoteCache;
- (BOOL)accessFileKind:(int)arg1 device:(id)arg2 fileType:(id)arg3 block:(CDUnknownBlockType)arg4;
- (id)_filePathForKind:(int)arg1 fileType:(id)arg2 directoryURL:(id)arg3;
- (id)_directoryForDevice:(id)arg1;
- (void)dealloc;
- (id)init;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface DTTapMessage : NSObject <NSCoding>
{
    NSMutableDictionary *_plist;
}

- (void).cxx_destruct;
- (id)plist;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)init;

@end

@interface DTCoreProfileTapMessage : DTTapMessage <NSCoding>
{
}

@property(copy, nonatomic) NSDictionary *sessionMetadata;
@property(copy, nonatomic) NSDictionary *triggerMetadata;
@property(nonatomic) unsigned long long recordCount;
@property(nonatomic) unsigned long long logicalProcessorCore;
@property(nonatomic) unsigned long long triggerIndex;
@property(nonatomic) unsigned long long triggerCount;
@property(nonatomic) unsigned long long coreCount;
@property(nonatomic) int kind;

@end

@interface DTCoreProfileTapPlaybackService : DTXService <DTTapAuthorizedAPI>
{
    NSOperation *_op;
}

+ (void)registerCapabilities:(id)arg1;
- (void).cxx_destruct;
- (void)fetchDataNow;
- (void)setConfig:(id)arg1;
- (void)pause;
- (void)unpause;
- (void)stop;
- (void)start;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DTTapService : DTXService <DTTapAuthorizedAPI>
{
    NSRecursiveLock *_lock;
    DTTapServiceGuarded *_lockedObj;
}

- (void).cxx_destruct;
- (id)_didStop:(id)arg1;
- (id)_willStart:(id)arg1;
- (BOOL)_validateConfig:(id)arg1;
- (void)fetchDataNow;
- (void)unpause;
- (void)pause;
- (void)stop;
- (void)start;
- (void)setConfig:(id)arg1;
- (id)_createConfigWithPlist:(id)arg1;
- (void)messageReceived:(id)arg1;
- (id)initWithChannel:(id)arg1;
- (Class)_guardedClass;
- (void)_Access:(CDUnknownBlockType)arg1;
- (void)_SendMsg:(id)arg1 toChannel:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DTCoreProfileTapService : DTTapService
{
}

+ (void)registerCapabilities:(id)arg1;
- (id)_didStop:(id)arg1;
- (id)_willStart:(id)arg1;
- (id)_createConfigWithPlist:(id)arg1;
- (BOOL)_validateConfig:(id)arg1;
- (id)initWithChannel:(id)arg1;
- (Class)_guardedClass;

@end

@interface DTTapServiceGuarded : NSObject
{
    DTXChannel *channel;
    DTTapLocal *tap;
    BOOL useExpiredPidCache;
    BOOL tapWasStopped;
}

- (void).cxx_destruct;
- (void)createTapWithConfig:(id)arg1;
- (id)initWithChannel:(id)arg1;

@end

@interface DTCoreProfileTapServiceGuarded : DTTapServiceGuarded
{
    unsigned long long triggerCount;
    unsigned long long coreCount;
}

@end

@interface DTDeviceInfoService : DTXService <DTDeviceInfoServiceAuthorizedAPI>
{
    struct __CFDictionary *_trackingSymbolicatorsByPid;
}

+ (BOOL)isApplication:(id)arg1;
+ (void)registerCapabilities:(id)arg1;
- (id)networkInformation;
- (id)cpDeviceName;
- (id)cpDeviceInfoAsXML;
- (id)cpKDebugEventsAsXML;
- (id)systemInformation;
- (id)productVersion;
- (id)uniqueID;
- (id)lookupSysctl:(const char *)arg1;
- (id)hardwareInformation;
- (int)hwCPU64BitCapable;
- (int)hwCPUtype;
- (int)hwCPUsubtype;
- (int)speedOfCpus;
- (int)numberOfCpus;
- (int)numberOfPhysicalCpus;
- (id)iconDescriptionForIconPath:(id)arg1;
- (id)iconDescriptionFileForAppPath:(id)arg1;
- (id)directoryListingForPath:(id)arg1;
- (id)symbolicatorSignaturesForExpiredPids;
- (void)unregisterSignatureTrackingForPid:(id)arg1;
- (id)symbolicatorSignatureForPid:(id)arg1 trackingSelector:(id)arg2;
- (id)machKernelName;
- (id)pidIs64Bit:(id)arg1;
- (id)isRunningPid:(id)arg1;
- (id)execnameForPid:(id)arg1;
- (id)nameForGID:(id)arg1;
- (id)nameForUID:(id)arg1;
- (id)runningProcesses;
- (id)machTimeInfo;
- (void)messageReceived:(id)arg1;
- (void)dealloc;
- (id)initWithChannel:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRExpiredPidCacheServiceProtected : NSObject
{
    NSObject<OS_dispatch_queue> *_cacheQ;
    _XRExpiredPidCache *_cache;
}

- (void).cxx_destruct;
- (void)_performOnCache:(CDUnknownBlockType)arg1;
- (id)init;

@end

@interface DTExpiredPidCacheService : XRExpiredPidCacheServiceProtected
{
}

+ (id)defaultCache;
+ (void)disableExpiredPidCaching;
- (void)enableCaching:(BOOL)arg1;
- (id)allExpiredSignatures;
- (id)signatureForExpiredPid:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface DTFSUsageActivityService : DTXService <DTFSUsageActivityServiceAuthorizedAPI>
{
    DTXConnection *_targetConnection;
    NSMutableDictionary *_switches;
}

+ (void)registerCapabilities:(id)arg1;
- (void).cxx_destruct;
- (id)initialSwitches;
- (void)setValue:(id)arg1 forSwitchName:(id)arg2;
- (id)valueForSwitch:(id)arg1;
- (void)stopSampling;
- (void)startSamplingWithPid:(int)arg1;
- (id)configureLaunchEnvironment:(id)arg1;
- (void)messageReceived:(id)arg1;
- (id)initWithChannel:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DTFileBrowserService : DTXService <DTFileBrowserServiceAuthorizedAPI>
{
}

+ (void)registerCapabilities:(id)arg1;
- (id)updateAttributesForItem:(id)arg1;
- (id)contentsOfDirectoryAtPath:(id)arg1;
- (id)dataFromFileAtPath:(id)arg1;
- (id)entriesInPathsArray:(id)arg1;
- (id)entriesAtPath:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DTInstrumentServer : NSObject <DTInstrumentServerAllowedRPC, DTInstrumentServerSimulatorPrivilege>
{
    DTXConnection *_connection;
    CDUnknownBlockType _channelRestrictBlock;
}

+ (void)_tfpPortReceived:(unsigned int)arg1;
+ (void)_taskInvalid:(unsigned int)arg1 forPid:(int)arg2;
+ (unsigned int)taskForPid:(int)arg1;
+ (struct AuthorizationOpaqueRef *)sharedAuthorization;
+ (void)takeOwnershipOfSharedAuthorization:(struct AuthorizationOpaqueRef *)arg1;
+ (BOOL)isAppleInternal;
@property(copy) CDUnknownBlockType channelRestrictBlock; // @synthesize channelRestrictBlock=_channelRestrictBlock;
@property(readonly, nonatomic) DTXConnection *connection; // @synthesize connection=_connection;
- (void).cxx_destruct;
- (void)_notifyOfTFPCommunicationsPort:(unsigned int)arg1;
- (void)restrictChannelsWithBlock:(CDUnknownBlockType)arg1;
- (void)loadServicesAtPath:(id)arg1;
- (void)setMaxConnectionEnqueue:(unsigned long long)arg1;
- (void)cancel;
- (void)resume;
- (id)initWithTransport:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DTKPCPU : NSObject
{
    struct kpep_db *_kpepDB;
    NSMutableArray *_events;
    NSString *_name;
}

+ (id)cpuNamed:(id)arg1 fromSerializedData:(id)arg2 error:(id *)arg3;
+ (id)cpuNamed:(id)arg1 error:(id *)arg2;
+ (id)localCPU:(id *)arg1;
+ (void)initialize;
@property(readonly, retain, nonatomic) NSArray *events; // @synthesize events=_events;
@property(readonly, retain, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (id)serializationData:(id *)arg1;
- (struct kpep_db *)kpepDB;
- (void)dealloc;
- (id)initWithName:(id)arg1 database:(struct kpep_db *)arg2;

@end

@interface DTKPCPUCounterAllocator : NSObject
{
    struct kpep_config *_kpepConfig;
    NSMutableArray *_eventRecords;
    NSString *_pmiEventName;
    unsigned long long _pmiThreshold;
    DTKPCPU *_cpu;
}

@property(readonly, retain, nonatomic) DTKPCPU *cpu; // @synthesize cpu=_cpu;
- (void).cxx_destruct;
- (int)stopHardwareCounters:(id *)arg1;
- (int)startHardwareCounters:(id *)arg1;
- (int)configurePMIActionID:(unsigned int)arg1;
- (int)configureHardwarePMIPeriods:(id *)arg1;
- (int)configureHardwareCounters:(id *)arg1;
- (unsigned long long)recordConfigWordsIntoBuffer:(unsigned long long *)arg1;
- (int)unforceCounters:(id *)arg1;
- (int)forceCounters:(id *)arg1;
- (unsigned long long)kpcConfigWordCount;
- (unsigned long long)pmiThreshold;
- (BOOL)pmiEnabled;
- (unsigned long long)eventCount;
- (unsigned long long)pmcEventCount;
- (unsigned int)kpcClasses;
- (void)removeAllEvents;
- (int)removePMIEvent;
- (int)removePMCEvent:(id)arg1;
- (int)setPMIEventName:(id)arg1 pmiThreshold:(unsigned long long)arg2 error:(id *)arg3;
- (int)addPMCEventName:(id)arg1 error:(id *)arg2;
- (void)dealloc;
- (id)initWithCPU:(id)arg1;

@end

@interface DTKPCPUCounterAllocatorRecord : NSObject
{
    BOOL _isPMI;
    NSString *_eventName;
    struct kpep_event *_kpepEvent;
}

@property(nonatomic) struct kpep_event *kpepEvent; // @synthesize kpepEvent=_kpepEvent;
@property(nonatomic) BOOL isPMI; // @synthesize isPMI=_isPMI;
@property(retain, nonatomic) NSString *eventName; // @synthesize eventName=_eventName;
- (void).cxx_destruct;
- (id)initWithName:(id)arg1 kpepEvent:(struct kpep_event *)arg2 isPMI:(BOOL)arg3;

@end

@interface DTKPCPUEvent : NSObject
{
    struct kpep_event *_kpepEvent;
    NSString *_name;
    NSString *_alias;
}

@property(readonly, retain, nonatomic) NSString *alias; // @synthesize alias=_alias;
@property(readonly, retain, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (void)setAlias:(id)arg1;
- (struct kpep_event *)kpepEvent;
@property(readonly, retain, nonatomic) NSString *displayName;
@property(readonly, retain, nonatomic) NSString *aliasOrName;
- (id)initWithName:(id)arg1 alias:(id)arg2 kpepEvent:(struct kpep_event *)arg3;

@end

@interface DTKPDatastreamFile : NSObject <DTKPDatastream>
{
    unsigned int _state;
    int _error;
    NSURL *_backingDirectory;
    NSURL *_fileName;
    unsigned int _fileIndex;
    int _wrFD;
    int _fileOwnership;
    BOOL _checkIfNeedCreateDirectory;
}

+ (BOOL)existsInDirectory:(id)arg1;
- (void).cxx_destruct;
- (int)exportRawDataWithError:(id *)arg1 block:(CDUnknownBlockType)arg2;
- (int)importRawData:(void *)arg1 bufferSize:(unsigned long long)arg2 error:(id *)arg3;
- (int)setWritingCompletedWithError:(id *)arg1;
- (BOOL)hasData;
- (void)dealloc;
- (id)createNextStream:(id *)arg1;
- (id)initFromDatastream:(id)arg1 backingDirectory:(id)arg2 retainFiles:(BOOL)arg3 error:(id *)arg4;
- (id)initFromDirectory:(id)arg1 error:(id *)arg2;
- (id)initWithBackingDirectory:(id)arg1 fileOwnership:(int)arg2 fileIndex:(unsigned int)arg3 error:(id *)arg4;
- (id)initWithBackingDirectory:(id)arg1 retainFiles:(BOOL)arg2 error:(id *)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DTKPDatastreamMemory : NSObject <DTKPDatastream>
{
    unsigned int _state;
    int _error;
    struct vector<DTKPDataStreamMemoryRecord *, std::__1::allocator<DTKPDataStreamMemoryRecord *>> _buffers;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)_releaseRecords;
- (int)exportRawDataWithError:(id *)arg1 block:(CDUnknownBlockType)arg2;
- (int)importRawData:(void *)arg1 bufferSize:(unsigned long long)arg2 error:(id *)arg3;
- (int)setWritingCompletedWithError:(id *)arg1;
- (BOOL)hasData;
- (void)dealloc;
- (id)createNextStream:(id *)arg1;
- (id)initFromDatastream:(id)arg1 error:(id *)arg2;
- (id)initWithError:(id *)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DTKPKDebugCodeWithName : NSObject
{
    CDUnion_1678db3a _kdebugCode;
    NSString *_name;
}

@property(readonly, retain, nonatomic) NSString *name; // @synthesize name=_name;
@property(readonly, nonatomic) CDUnion_1678db3a kdebugCode; // @synthesize kdebugCode=_kdebugCode;
- (void).cxx_destruct;
- (id)initWithValue:(unsigned int)arg1 name:(id)arg2;

@end

@interface DTKPKDebugCodes : NSObject
{
    NSSet *_kdebugCodes;
    XRIntKeyedDictionary *_codeMap;
    NSSet *_allKDebugCodes;
}

+ (id)remoteKDebugCodesFromURL:(id)arg1 error:(id *)arg2;
+ (id)localKDebugCodes:(id *)arg1;
+ (void)initialize;
@property(readonly, retain, nonatomic) NSSet *allKDebugCodes; // @synthesize allKDebugCodes=_allKDebugCodes;
- (void).cxx_destruct;
- (id)kdebugCodeByValue:(unsigned int)arg1;
- (id)initWithCodes:(id)arg1;

@end

@interface DTKPRecord : NSObject
{
    unsigned long long _counterValuesArray[16];
    unsigned long long _kdebugArgumentsArray[5];
    BOOL _loadEvent;
    unsigned int _recordType;
    unsigned int _triggerID;
    unsigned int _cpuNumber;
    int _pid;
    unsigned int _threadState;
    unsigned int _supervisorFrameCount;
    unsigned int _supervisorExtraDataCount;
    unsigned int _userFrameCount;
    unsigned int _userExtraDataCount;
    CDUnion_1678db3a _kdebugEvent;
    unsigned int _kdebugArgumentCount;
    unsigned int _counterEventCount;
    unsigned int _threadStatus;
    unsigned long long _timestamp;
    unsigned long long _tid;
    unsigned long long _dispatchQueue;
    unsigned long long *_supervisorFramesAndExtraData;
    unsigned long long *_userFramesAndExtraData;
    unsigned long long *_kdebugArguments;
    unsigned long long *_counterEventValues;
    unsigned long long _loadAddress;
    CDStruct_e6eac3cb _uuidBytes;
}

@property(nonatomic) CDStruct_e6eac3cb uuidBytes; // @synthesize uuidBytes=_uuidBytes;
@property(nonatomic) unsigned long long loadAddress; // @synthesize loadAddress=_loadAddress;
@property(nonatomic) BOOL loadEvent; // @synthesize loadEvent=_loadEvent;
@property(nonatomic) unsigned int threadStatus; // @synthesize threadStatus=_threadStatus;
@property(nonatomic) unsigned long long *counterEventValues; // @synthesize counterEventValues=_counterEventValues;
@property(nonatomic) unsigned int counterEventCount; // @synthesize counterEventCount=_counterEventCount;
@property(nonatomic) unsigned long long *kdebugArguments; // @synthesize kdebugArguments=_kdebugArguments;
@property(nonatomic) unsigned int kdebugArgumentCount; // @synthesize kdebugArgumentCount=_kdebugArgumentCount;
@property(nonatomic) CDUnion_1678db3a kdebugEvent; // @synthesize kdebugEvent=_kdebugEvent;
@property(nonatomic) unsigned long long *userFramesAndExtraData; // @synthesize userFramesAndExtraData=_userFramesAndExtraData;
@property(nonatomic) unsigned int userExtraDataCount; // @synthesize userExtraDataCount=_userExtraDataCount;
@property(nonatomic) unsigned int userFrameCount; // @synthesize userFrameCount=_userFrameCount;
@property(nonatomic) unsigned long long *supervisorFramesAndExtraData; // @synthesize supervisorFramesAndExtraData=_supervisorFramesAndExtraData;
@property(nonatomic) unsigned int supervisorExtraDataCount; // @synthesize supervisorExtraDataCount=_supervisorExtraDataCount;
@property(nonatomic) unsigned int supervisorFrameCount; // @synthesize supervisorFrameCount=_supervisorFrameCount;
@property(nonatomic) unsigned long long dispatchQueue; // @synthesize dispatchQueue=_dispatchQueue;
@property(nonatomic) unsigned int threadState; // @synthesize threadState=_threadState;
@property(nonatomic) unsigned long long tid; // @synthesize tid=_tid;
@property(nonatomic) int pid; // @synthesize pid=_pid;
@property(nonatomic) unsigned int cpuNumber; // @synthesize cpuNumber=_cpuNumber;
@property(nonatomic) unsigned long long timestamp; // @synthesize timestamp=_timestamp;
@property(nonatomic) unsigned int triggerID; // @synthesize triggerID=_triggerID;
@property(nonatomic) unsigned int recordType; // @synthesize recordType=_recordType;
- (void)clear;
- (void)setKDebugArgumentValue:(unsigned long long)arg1 forIndex:(unsigned int)arg2;
- (void)setKDebugEventValue:(unsigned int)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface DTKPRecordDecoder : NSObject
{
    struct map<unsigned long long, int, std::__1::less<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, int>>> _tidToPidMap;
    BOOL _mergeCallstacks;
    unsigned int _numberOfPendingRecs;
    struct kpdecode_cursor *_kpcursor;
    _Bool _stopped;
    int _pmcCount;
    unsigned long long *_pmcIndices;
    BOOL _config_seen;
    BOOL _configInvalid;
    unsigned char _config_mode;
    int _config_hasPET;
    int _config_systrace;
    struct pmc_lastval *_pmcLastValues[32];
    id *_pendlist;
    int _pending_count;
    int _pending_head;
    int _pending_tail;
    unsigned long long buffersProcessed;
    unsigned long long bufferBytes;
    unsigned long long kprecsDecoded;
    unsigned long long kprecsInternal;
    unsigned long long kprecsTimeFilteredOut;
    unsigned long long kprecsProcessed;
    unsigned long long _enumerateStartTime;
    unsigned long long _enumerateStopTime;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)logKPRecsFromBuffer:(void *)arg1 bufferSize:(unsigned long long)arg2 finalBuffer:(BOOL)arg3 includingCallstacks:(BOOL)arg4 toFile:(struct __sFILE *)arg5;
- (void)_logKPRec:(struct kpdecode_record *)arg1 includingCallstacks:(BOOL)arg2 toFile:(struct __sFILE *)arg3;
- (int)enumerateRecordsFromBuffer:(void *)arg1 bufferSize:(unsigned long long)arg2 finalBuffer:(BOOL)arg3 block:(CDUnknownBlockType)arg4;
- (void)setEnumerateTimeRangeStart:(unsigned long long)arg1 stop:(unsigned long long)arg2;
- (int)_apply_ustack:(struct kpdecode_record *)arg1;
- (BOOL)_kprec2pending:(id)arg1 kprec:(struct kpdecode_record *)arg2;
- (void)_decodeConfig:(struct kpdecode_record *)arg1;
- (void)_setPMCConfigWordCount:(unsigned long long)arg1 wordArray:(unsigned long long *)arg2;
- (void)dealloc;
- (id)initAndMergeCallstacks:(BOOL)arg1 pendingBufferEntries:(unsigned int)arg2;
- (id)init;
- (BOOL)_commonInit;

@end

@interface DTKPSession : NSObject <DTKPSessionEnumerable>
{
    DTKPRecordDecoder *_recordDecoder;
    BOOL _canRecord;
    unsigned int _sessionID;
    unsigned int _state;
    NSObject<OS_dispatch_semaphore> *_lock;
    id <DTKPDatastream> _currentDatastream;
    id <DTKPDatastream> _onDeckDatastream;
}

+ (BOOL)existsInDirectory:(id)arg1;
@property(retain, nonatomic) id <DTKPDatastream> onDeckDatastream; // @synthesize onDeckDatastream=_onDeckDatastream;
@property(retain, nonatomic) id <DTKPDatastream> currentDatastream; // @synthesize currentDatastream=_currentDatastream;
@property(nonatomic) unsigned int state; // @synthesize state=_state;
@property(readonly, retain, nonatomic) NSObject<OS_dispatch_semaphore> *lock; // @synthesize lock=_lock;
@property(readonly, nonatomic) unsigned int sessionID; // @synthesize sessionID=_sessionID;
- (void).cxx_destruct;
- (id)_swapOutCurrentDatastreamLocked:(id *)arg1;
- (void)logKPRecsIncludingCallstacks:(BOOL)arg1 toFile:(struct __sFILE *)arg2;
- (void)setEnumerateTimeRangeStart:(unsigned long long)arg1 stop:(unsigned long long)arg2;
- (int)_flushRecordsFromSource;
- (int)exportData:(char *)arg1 error:(id *)arg2 block:(CDUnknownBlockType)arg3;
- (int)enumerateRecords:(char *)arg1 error:(id *)arg2 block:(CDUnknownBlockType)arg3;
- (id)initFromDirectory:(id)arg1 error:(id *)arg2;
- (id)initAndCanRecord:(BOOL)arg1;
- (BOOL)_commonInitAndCanRecord:(BOOL)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DTKPSessionKernelRecording : DTKPSession <DTKPSessionRecordable>
{
    NSObject<OS_dispatch_semaphore> *_stopSemaphore;
    DTKPTriggerKDebug *_triggerKDebug;
    DTKPTriggerPMI *_triggerPMI;
    DTKPTriggerTime *_triggerTime;
    struct SessionCallbackState _callback;
    struct kperf_buf *kperfBuffer;
    BOOL _hasPMI;
    BOOL _hasPMCs;
    BOOL _hasTimer;
    unsigned char _collectionMode;
    unsigned char _recordingPriority;
    unsigned long long _bufferSize;
}

+ (int)blessPid:(int)arg1;
+ (void)initialize;
@property(nonatomic) unsigned long long bufferSize; // @synthesize bufferSize=_bufferSize;
@property(nonatomic) unsigned char recordingPriority; // @synthesize recordingPriority=_recordingPriority;
@property(nonatomic) unsigned char collectionMode; // @synthesize collectionMode=_collectionMode;
- (void).cxx_destruct;
- (int)setReasons:(unsigned int)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (CDUnknownBlockType)callbackForReason:(unsigned int)arg1 error:(id *)arg2;
- (int)_flushRecordsFromSourceLocked;
- (int)_returnKernelBuffer:(void *)arg1;
- (int)_getKernelBuffer:(void **)arg1 bufferSize:(unsigned long long *)arg2 more:(_Bool *)arg3;
- (BOOL)isPaused;
- (BOOL)isActive;
- (int)_finishedRecordingLocked:(id *)arg1;
- (int)stop:(id *)arg1;
- (int)resume:(id *)arg1;
- (int)pause:(id *)arg1;
- (int)start:(id *)arg1;
- (int)_configureSettingsForKDebug:(_Bool)arg1 callstacks:(_Bool)arg2 contextSwitch:(_Bool)arg3;
- (int)_setSessionConfigLocked:(BOOL)arg1;
- (id)triggerTime;
- (id)triggerPMI;
- (id)triggerKDebug;
- (int)setTriggerTime:(id)arg1 error:(id *)arg2;
- (int)setTriggerPMI:(id)arg1 error:(id *)arg2;
- (int)setTriggerKDebug:(id)arg1 error:(id *)arg2;
- (int)_clearActiveSession;
- (int)_setActiveSession;
- (void)dealloc;
- (id)initAsFileBackedWithDirectory:(id)arg1 retainFiles:(BOOL)arg2 error:(id *)arg3;
- (id)initAsMemoryBackedWithError:(id *)arg1;
- (BOOL)_commonInit;
- (int)_callbackThreadInit;
- (int)_startCallbackThread;
- (void)_callbackShutdown;
- (void)_callbackStop;
- (void *)callbackThread;
- (void)_callbackThreadActive;
- (void)callbackThreadAlertForReason:(unsigned int)arg1;
- (void)callbackThreadNotify:(int)arg1;
- (void)callbackThreadNotifyLocked:(int)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DTKPSessionLogging : DTKPSession <DTKPSessionRecordable>
{
}

- (int)importDataBuffer:(void *)arg1 bufferSize:(unsigned long long)arg2 error:(id *)arg3;
- (BOOL)isPaused;
- (BOOL)isActive;
- (int)stop:(id *)arg1;
- (int)resume:(id *)arg1;
- (int)pause:(id *)arg1;
- (int)start:(id *)arg1;
- (id)initAsFileBackedWithDirectory:(id)arg1 retainFiles:(BOOL)arg2 error:(id *)arg3;
- (id)initAsMemoryBackedWithError:(id *)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DTKPTrigger : NSObject
{
    BOOL _collectUserStacks;
    BOOL _collectKernelStacks;
    unsigned int _triggerID;
    unsigned int _actionID;
    unsigned int _targetTask;
    unsigned int _samplers;
    NSObject<OS_dispatch_semaphore> *_lock;
}

+ (void)initialize;
@property(nonatomic) unsigned int samplers; // @synthesize samplers=_samplers;
@property(nonatomic) unsigned int targetTask; // @synthesize targetTask=_targetTask;
@property(nonatomic) unsigned int actionID; // @synthesize actionID=_actionID;
@property(readonly, retain, nonatomic) NSObject<OS_dispatch_semaphore> *lock; // @synthesize lock=_lock;
@property(nonatomic) BOOL collectKernelStacks; // @synthesize collectKernelStacks=_collectKernelStacks;
@property(nonatomic) BOOL collectUserStacks; // @synthesize collectUserStacks=_collectUserStacks;
@property(readonly, nonatomic) unsigned int triggerID; // @synthesize triggerID=_triggerID;
- (void).cxx_destruct;
- (int)_setFilterByTask:(unsigned int)arg1 forAction:(unsigned int)arg2;
- (int)_setSamplers:(unsigned int)arg1 forAction:(unsigned int)arg2;
- (void)_actionDealloc:(unsigned int)arg1;
- (unsigned int)_actionAlloc;
- (int)stop:(id *)arg1;
- (int)start:(id *)arg1;
- (id)init;

@end

@interface DTKPTriggerKDebug : DTKPTrigger
{
    unsigned char _filterBitSet[8192];
    int _filterMode;
}

@property(nonatomic) int filterMode; // @synthesize filterMode=_filterMode;
- (int)stop:(id *)arg1;
- (int)start:(id *)arg1;
- (void)enableClass:(unsigned char)arg1 subclass:(unsigned char)arg2;
- (void)enableClass:(unsigned char)arg1;
- (void)clearFilter;
- (id)init;

@end

@interface DTKPTriggerPMI : DTKPTrigger
{
    DTKPCPU *_cpu;
    DTKPCPUCounterAllocator *_counterAllocator;
    _Bool _mustUnforceCounters;
    NSString *_pmiEvent;
    NSString *_pmiCounter;
    unsigned long long _thresholdCount;
}

@property(nonatomic) unsigned long long thresholdCount; // @synthesize thresholdCount=_thresholdCount;
@property(retain, nonatomic) NSString *pmiCounter; // @synthesize pmiCounter=_pmiCounter;
@property(retain, nonatomic) NSString *pmiEvent; // @synthesize pmiEvent=_pmiEvent;
- (void).cxx_destruct;
- (int)stop:(id *)arg1;
- (int)start:(id *)arg1;
- (int)stopHardwareCounters:(id *)arg1;
- (int)startHardwareCounters:(id *)arg1;
- (unsigned long long)pmcEventCount;
- (int)addPMCEventNamed:(id)arg1 error:(id *)arg2;
- (unsigned long long)_recordConfigWordsIntoBuffer:(unsigned long long *)arg1;
- (id)init;

@end

@interface DTKPTriggerTime : DTKPTrigger
{
    int _timerID;
    DTKPCPU *_cpu;
    DTKPCPUCounterAllocator *_counterAllocator;
    _Bool _mustUnforceCounters;
    BOOL _profileEveryThread;
    int _pid;
    unsigned long long _sampleRate;
}

+ (void)initialize;
@property(nonatomic) BOOL profileEveryThread; // @synthesize profileEveryThread=_profileEveryThread;
@property(nonatomic) int pid; // @synthesize pid=_pid;
@property(nonatomic) unsigned long long sampleRate; // @synthesize sampleRate=_sampleRate;
- (void).cxx_destruct;
- (int)stop:(id *)arg1;
- (int)start:(id *)arg1;
- (int)_configureTimer:(unsigned int)arg1 actionID:(unsigned int)arg2 period:(unsigned long long)arg3 userData:(unsigned int)arg4;
- (void)_timerIDDdealloc:(int)arg1;
- (int)_timerIDAlloc;
- (int)stopHardwareCounters:(id *)arg1;
- (int)startHardwareCounters:(id *)arg1;
- (unsigned long long)pmcEventCount;
- (int)addPMCEventNamed:(id)arg1 error:(id *)arg2;
- (unsigned long long)_recordConfigWordsIntoBuffer:(unsigned long long *)arg1;
- (id)init;

@end

@interface DTKPerfTapDelegate : NSObject <DTTapDelegate>
{
    unsigned long long _coreCount;
    BOOL _isSessionBased;
}

@property(readonly) BOOL isSessionBased; // @synthesize isSessionBased=_isSessionBased;
- (void)fetchFromTap:(id)arg1 guard:(id)arg2;
- (void)unpauseTap:(id)arg1 guard:(id)arg2;
- (void)pauseTap:(id)arg1 guard:(id)arg2;
- (void)stopTap:(id)arg1 semaphore:(id)arg2 guard:(id)arg3;
- (void)startTap:(id)arg1 guard:(id)arg2;
- (void)invokeClientHandlers:(id)arg1;
- (id)willInvokeClientHandlers:(id)arg1;
- (void)reset:(id)arg1;
- (void)populateGuarded:(id)arg1;
- (id)createGuarded;
- (id)createNewTapConfig;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DTKPerfLocalTapDelegate : DTKPerfTapDelegate
{
}

- (void)fetchFromTap:(id)arg1 guard:(id)arg2;
- (void)unpauseTap:(id)arg1 guard:(id)arg2;
- (void)pauseTap:(id)arg1 guard:(id)arg2;
- (void)stopTap:(id)arg1 semaphore:(id)arg2 guard:(id)arg3;
- (void)startTap:(id)arg1 guard:(id)arg2;
- (unsigned long long)bufferSizeForConfiguration:(id)arg1;
- (id)createGuarded;
- (id)initWithCoreCount:(int)arg1 requiresCPSession:(BOOL)arg2;

@end

@interface DTKPerfRemoteTapDelegate : DTKPerfTapDelegate
{
}

- (BOOL)handleMessage:(id)arg1 fromTap:(id)arg2 guard:(id)arg3;
- (void)stopTap:(id)arg1 semaphore:(id)arg2 guard:(id)arg3;
- (void)startTap:(id)arg1 guard:(id)arg2;
- (id)createGuarded;
- (id)initWithRequiresCPSession:(BOOL)arg1;

@end

@interface DTTapConfig : NSObject <NSCopying>
{
    NSMutableDictionary *_dict;
    NSString *_archivingPath;
    _Bool _createdArchivingPath;
    BOOL _filePreservation;
    unsigned long long _pollingInterval;
    NSString *_serviceName;
    long long _serviceVersion;
    CDUnknownBlockType _runningMetadataChangedHandler;
    CDUnknownBlockType _errorHandler;
}

@property(copy, nonatomic) CDUnknownBlockType errorHandler; // @synthesize errorHandler=_errorHandler;
@property(copy, nonatomic) CDUnknownBlockType runningMetadataChangedHandler; // @synthesize runningMetadataChangedHandler=_runningMetadataChangedHandler;
@property(nonatomic) BOOL filePreservation; // @synthesize filePreservation=_filePreservation;
@property(readonly, nonatomic) long long serviceVersion; // @synthesize serviceVersion=_serviceVersion;
@property(copy, nonatomic) NSString *serviceName; // @synthesize serviceName=_serviceName;
@property(nonatomic) unsigned long long pollingInterval; // @synthesize pollingInterval=_pollingInterval;
- (void).cxx_destruct;
- (BOOL)setArchivingPath:(id)arg1 error:(id *)arg2;
- (id)archivingPath;
- (void)_removeSerializableObjectForKey:(id)arg1;
- (id)_getSerializableObjectForKey:(id)arg1;
- (void)_setSerializableObject:(id)arg1 forKey:(id)arg2;
- (void)reset;
- (id)plist;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithPlist:(id)arg1;
- (id)init;

@end

@interface DTKPerfTapConfig : DTTapConfig
{
    BOOL _hasAtLeastOneRecordHandler;
    CDUnknownBlockType _sessionHandler;
    CDUnknownBlockType _recordContainerHandler;
    NSMutableArray *_recordHandlers;
}

@property(retain, nonatomic) NSMutableArray *recordHandlers; // @synthesize recordHandlers=_recordHandlers;
@property(nonatomic) BOOL hasAtLeastOneRecordHandler; // @synthesize hasAtLeastOneRecordHandler=_hasAtLeastOneRecordHandler;
@property(copy, nonatomic) CDUnknownBlockType recordContainerHandler; // @synthesize recordContainerHandler=_recordContainerHandler;
@property(copy, nonatomic) CDUnknownBlockType sessionHandler; // @synthesize sessionHandler=_sessionHandler;
- (void).cxx_destruct;
- (void)reset;
- (void)setRecordHandler:(CDUnknownBlockType)arg1 forTriggerIndex:(long long)arg2;
- (int)addTriggerConfig:(id)arg1 withRecordHandler:(CDUnknownBlockType)arg2;
- (int)addTriggerConfig:(id)arg1;
- (int)_addTriggerConfig:(id)arg1 withRecordHandler:(id)arg2;
- (unsigned long long)triggerConfigCount;
- (void)enumerateTriggerConfigs:(CDUnknownBlockType)arg1;
@property(nonatomic) CDStruct_1e94be47 windowSize;
@property(nonatomic) int recordingPriority;
@property(nonatomic) int bufferMode;
- (unsigned long long)pollingInterval;
- (void)setPollingInterval:(unsigned long long)arg1;
@property(nonatomic) BOOL spoolToDiskWhenPossible;
- (void)setIsDeferredDisplay:(BOOL)arg1;
@property(readonly, nonatomic) BOOL isDeferredDisplay;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;

@end

@interface DTKPerfTriggerConfig : NSObject
{
    NSMutableDictionary *_dict;
    struct _CPEventSet *_kdebugFilterSet;
}

+ (id)deviceSignPostConfig;
- (void).cxx_destruct;
- (id)plist;
@property(nonatomic) unsigned long long callstackFrameDepth;
@property(retain, nonatomic) struct _CPEventSet *kdebugFilter;
- (void)setUuid:(id)arg1;
@property(readonly, retain, nonatomic) NSString *uuid;
@property(retain, nonatomic) NSArray *pmiDeviceIndices;
@property(nonatomic) unsigned long long pmiEventThreshold;
@property(retain, nonatomic) NSString *pmiEventMnemonic;
@property(retain, nonatomic) NSString *pmiCounterName;
- (void)enumerateActions:(CDUnknownBlockType)arg1;
- (void)addAction:(int)arg1;
- (void)enumeratePIDsInFilter:(CDUnknownBlockType)arg1;
- (void)includePID:(int)arg1;
@property(nonatomic) BOOL isAllProcesses;
- (void)enumerateThreadStatesToInclude:(CDUnknownBlockType)arg1;
- (void)includeThreadState:(int)arg1;
@property(nonatomic) BOOL hasThreadStateFilter;
@property(nonatomic) unsigned long long eventLimitHint;
@property(nonatomic) CDStruct_1e94be47 sampleInterval;
@property(nonatomic) int kind;
- (void)dealloc;
- (id)initWithUUIDString:(id)arg1;
- (id)initWithPlist:(id)arg1;
- (id)init;
- (void)_SetTriggerDict:(id)arg1;
- (id)_GetTriggerDict;

@end

@interface DTLeaksService : DTXService <DTLeaksServiceLegacyRPC, DTLeaksServiceAuthorizedRPC>
{
    NSObject<OS_dispatch_queue> *_coordinationQueue;
    NSObject<OS_dispatch_queue> *_preservationQueue;
    NSMutableDictionary *_helperConnectionByTargetPid;
    NSMutableDictionary *_helperPidByTargetPid;
    NSMutableDictionary *_fileByPid;
}

+ (void)registerCapabilities:(id)arg1;
- (void).cxx_destruct;
- (void)cancelAllRequests;
- (void)requestLeaksForPid:(id)arg1 context:(id)arg2 provideBacktraces:(id)arg3;
- (id)requestGraph:(unsigned long long)arg1 options:(id)arg2;
- (void)_lookupGraphByToken:(unsigned long long)arg1 response:(id)arg2;
- (id)_preserveDict:(id)arg1 forPid:(int)arg2;
- (void)_internalRequestForPid:(int)arg1 message:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)messageReceived:(id)arg1;
- (id)initWithChannel:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DTLeaksServicePreservedGraphFile : NSObject
{
    int _fd;
    unsigned long long _size;
    unsigned long long _token;
    NSDictionary *_metaDict;
}

@property(copy, nonatomic) NSDictionary *metaDict; // @synthesize metaDict=_metaDict;
@property(nonatomic) unsigned long long token; // @synthesize token=_token;
@property(nonatomic) unsigned long long size; // @synthesize size=_size;
@property(nonatomic) int fd; // @synthesize fd=_fd;
- (void).cxx_destruct;
- (void)dealloc;

@end

@interface DTNStatSourceMapEntry : NSObject
{
    long long _serialNumber;
    int _pid;
    XRNetworkingServiceObservationTuple *_lastStats;
}

@property(retain, nonatomic) XRNetworkingServiceObservationTuple *lastStats; // @synthesize lastStats=_lastStats;
@property(nonatomic) int pid; // @synthesize pid=_pid;
@property(readonly, nonatomic) long long serialNumber; // @synthesize serialNumber=_serialNumber;
- (void).cxx_destruct;

@end

@interface DTNetworkInterfaceInfo : NSObject
{
}

+ (id)interfaceNameMappings;
+ (void)addInterface:(struct __SCNetworkInterface *)arg1 toNameMapping:(id)arg2;

@end

@interface DTNetworkingService : DTXService <DTNetworkingServiceAuthorizedAPI>
{
    NSObject<OS_dispatch_queue> *_workQueue;
    struct __NStatManager *_netstatMan;
    struct DTNStatSourceMap _sources;
    unsigned long long _seenInterfaces;
    unsigned long long _hiddenInterfaces;
    NSObject<OS_dispatch_source> *_dispatchTimer;
    long long _interval;
    int _filteredToPid;
    BOOL _isAppleInternal;
    BOOL _isDisconnected;
}

+ (id)serviceName;
+ (void)registerCapabilities:(id)arg1;
- (void).cxx_destruct;
- (void)replayLastRecordedSession;
- (void)setTargetPID:(id)arg1;
- (void)stopMonitoring;
- (void)startMonitoring;
- (void)messageReceived:(id)arg1;
- (id)initWithChannel:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DTObjectAllocService : DTXService <DTObjectAllocServiceAuthorizedAPI>
{
    unsigned int _task;
    DTAllocationsRecorder *_recorder;
}

+ (void)registerCapabilities:(id)arg1;
- (void).cxx_destruct;
- (void)stopCollection;
- (void)startCollectionWithPid:(int)arg1;
- (id)attachToPid:(id)arg1 eventsMask:(id)arg2;
- (id)preparedEnvironmentForLaunch:(id)arg1 eventsMask:(id)arg2;
- (void)messageReceived:(id)arg1;
- (id)initWithChannel:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DTPerfMonDevice : NSObject
{
    NSString *_name;
    NSMutableDictionary *_countersDict;
    NSArray *_counterNames;
    NSMutableDictionary *_eventMnemonicsByCounter;
    NSArray *_sortedEventMnemonics;
    NSMutableDictionary *_counterNameToMask;
    NSMutableDictionary *_counterMaskToName;
    NSMutableDictionary *_eventMnemonicToMask;
    unsigned long long _countersInUseMask;
    struct __CFArray *_deviceInstances;
}

- (void).cxx_destruct;
- (BOOL)deallocateCounters:(id)arg1;
- (BOOL)allocateCounters:(id)arg1;
- (BOOL)canAllocateCounters:(id)arg1;
- (BOOL)_allocateCounters:(id)arg1 doAllocation:(BOOL)arg2;
- (int)_numFreeCounters;
- (id)newCounterArrayForMnemonic:(id)arg1;
- (id)eventMaskForMnemonic:(id)arg1;
- (id)eventByMnemonic:(id)arg1 forCounter:(id)arg2;
- (id)eventMnemonicsForCounter:(id)arg1;
- (id)eventMnemonics;
- (id)counterNames;
- (id)name;
- (void)setDeviceInstances:(struct __CFArray *)arg1;
- (struct __CFArray *)deviceInstances;
- (void)dealloc;
- (BOOL)isRealDevice;
- (id)initWithName:(id)arg1 fromDevice:(struct _CPDevice *)arg2;

@end

@interface DTPerfMonEvent : NSObject
{
    NSString *_mnemonic;
    NSString *_alias;
    NSString *_explanation;
    struct _CPCounterEvent *_counterEvent;
    NSString *_displayName;
}

- (void).cxx_destruct;
- (struct _CPCounter *)allocCounterForDeviceInstance:(struct _CPDevice *)arg1;
- (struct _CPCounterEvent *)counterEvent;
- (id)displayName;
- (id)explanation;
- (id)aliasOrMnemonic;
- (id)alias;
- (id)mnemonic;
- (void)dealloc;
- (id)initWithMnemonic:(id)arg1 alias:(id)arg2;
- (id)initWithCPCounterEvent:(struct _CPCounterEvent *)arg1;

@end

@interface DTPerfMonEventAllocation : NSObject
{
    NSString *_mnemonic;
    NSString *_groupName;
    NSString *_allocatedCounterName;
    NSString *_warningString;
}

@property(retain, nonatomic) NSString *warningString; // @synthesize warningString=_warningString;
@property(readonly, retain, nonatomic) NSString *allocatedCounterName; // @synthesize allocatedCounterName=_allocatedCounterName;
@property(readonly, retain, nonatomic) NSString *groupName; // @synthesize groupName=_groupName;
@property(readonly, retain, nonatomic) NSString *mnemonic; // @synthesize mnemonic=_mnemonic;
- (void).cxx_destruct;
- (void)_setAllocatedCounterName:(id)arg1;
- (id)initWithMnemonic:(id)arg1 groupName:(id)arg2;

@end

@interface DTPerfMonManager : NSObject
{
    NSMutableDictionary *_devicesDict;
    NSArray *_deviceNames;
    DTPerfMonDevice *_localDevice;
    NSMutableArray *_processorNames;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)sharedDTPerfMonManager;
- (void).cxx_destruct;
- (id)counterNames;
- (id)processorNames;
- (id)deviceForName:(id)arg1;
- (id)localDevice;
- (id)deviceNames;
- (id)_addKnownDevice:(struct _CPDevice *)arg1;
- (void)_addKnownDevices;
- (void)_addLocalDevice;
- (void)refreshDevices;
- (id)loadDeviceAtURL:(id)arg1 forName:(id)arg2;
- (id)init;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface DTProcessControlService : DTXService <DTProcessControlServiceAuthorizedMethods>
{
    NSMutableArray *_pids;
    NSMutableArray *_sources;
    NSMutableDictionary *_activeIODispatchSources;
    NSObject<OS_dispatch_queue> *_deathNoteQueue;
    NSObject<OS_dispatch_queue> *_synchronousRedirectionQueue;
}

- (void).cxx_destruct;
- (void)watchOutputFileName:(id)arg1 forPid:(int)arg2;
- (void)watchOutputFileDescriptor:(int)arg1 forPid:(int)arg2;
- (void)handleRedirectionIterationForFileDescriptor:(int)arg1 forPid:(int)arg2 withDispatchSource:(id)arg3;
- (int)maybeRedirectFromFileDescriptor:(int)arg1 fromPid:(int)arg2 withScratchBuffer:(char *)arg3 ofByteLength:(unsigned long long)arg4;
- (int)cleanupPid:(int)arg1;
- (void)sendProcessControlEvent:(id)arg1 toPid:(id)arg2;
- (void)_performMemoryWarningForPid:(int)arg1;
- (void)killPid:(id)arg1;
- (id)launchSuspendedProcessWithDevicePath:(id)arg1 bundleIdentifier:(id)arg2 environment:(id)arg3 arguments:(id)arg4 options:(id)arg5;
- (id)launchSuspendedProcessWithDevicePath:(id)arg1 bundleIdentifier:(id)arg2 environment:(id)arg3 arguments:(id)arg4;
- (void)suspendPid:(id)arg1;
- (void)resumePid:(id)arg1;
- (void)stopObservingPid:(id)arg1;
- (void)startObservingPid:(id)arg1;
- (id)initWithChannel:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DTPosixSpawnProcessControlService : DTProcessControlService
{
}

+ (int)posixSpawnWithPath:(id)arg1 environment:(id)arg2 arguments:(id)arg3 options:(id)arg4 fileDescriptorHandler:(CDUnknownBlockType)arg5;
+ (void)registerCapabilities:(id)arg1;
- (int)cleanupPid:(int)arg1;
- (id)launchSuspendedProcessWithDevicePath:(id)arg1 bundleIdentifier:(id)arg2 environment:(id)arg3 arguments:(id)arg4 options:(id)arg5;

@end

@interface DTProcessControlEvent : NSObject <NSSecureCoding>
{
}

+ (BOOL)supportsSecureCoding;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface DTProcessControlApplicationMemoryWarning : DTProcessControlEvent
{
}

@end

@interface DTProcessControlBackgroundFetchEvent : DTProcessControlEvent
{
}

@end

@interface DTSamplingService : DTXService <DTSamplingServiceAuthorizedAPI>
{
    BOOL _doCollectData;
    unsigned long long _samplingRate;
    unsigned long long _outputRate;
    unsigned long long _outputRateDelta;
    unsigned long long *_backtraceBuffer;
    unsigned long long _backtraceBufferSize;
    unsigned long long _backtraceBufferUsedSize;
    unsigned int _task;
    BOOL _targetIs64Bit;
}

+ (void)registerCapabilities:(id)arg1;
- (void)addSampleWithTimeInfo:(struct __CFDictionary *)arg1 useZeroDelta:(BOOL)arg2;
- (void)collectData;
- (void)_allocateBuffer;
- (void)_outputData;
- (void)stopSampling;
- (void)startSampling;
- (void)setTargetPid:(id)arg1;
- (void)setOutputRate:(id)arg1;
- (void)setSamplingRate:(id)arg1;
- (void)dealloc;
- (id)initWithChannel:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DTServiceHubClient : NSObject
{
}

+ (id)localConnectionWithAuthorization:(struct AuthorizationOpaqueRef *)arg1 returningServerPid:(int *)arg2;
+ (id)localConnectionWithAuthorization:(struct AuthorizationOpaqueRef *)arg1;
+ (id)getServerBinaryPath;

@end

@interface DTTap : NSObject
{
    NSString *_archivingPath;
    NSObject<OS_dispatch_queue> *_guardQueue;
    NSObject<OS_dispatch_queue> *_sourceAndHandlerQueue;
    DTTapConfig *_nextConfig;
}

@property(retain, nonatomic) DTTapConfig *nextConfig; // @synthesize nextConfig=_nextConfig;
- (void).cxx_destruct;
- (void)_fetch:(id)arg1;
- (void)_reset:(id)arg1;
- (void)_stopWithSemaphore:(id)arg1 guard:(id)arg2;
- (void)_start:(id)arg1;
- (void)_unpause:(id)arg1;
- (void)_pause:(id)arg1;
- (void)fetchDataNow;
- (id)errorString;
@property(readonly) NSString *UUID;
@property(readonly) BOOL isRunning;
- (BOOL)_isArchiving:(id)arg1;
- (BOOL)isArchiving;
- (void)stop;
- (void)start;
- (void)unpause;
- (void)pause;
- (void)resume;
- (void)suspend;
- (void)_dispatchErrorValue:(unsigned int)arg1 timestamp:(unsigned long long)arg2 string:(id)arg3 guard:(id)arg4;
- (void)_runningMetadataChanged:(id)arg1 guard:(id)arg2;
- (void)_receivedData:(id)arg1;
- (void)_lock:(CDUnknownBlockType)arg1;
@property(readonly) id <DTTapDelegate> delegate;
- (void)dealloc;
- (id)initWithDelegate:(id)arg1 config:(id)arg2;

@end

@interface DTTapLocal : DTTap
{
    CDUnknownBlockType _taskForPid;
    NSObject<OS_dispatch_source> *_pollTimer;
}

- (void).cxx_destruct;
- (void)_stopWithSemaphore:(id)arg1 guard:(id)arg2;
- (void)_start:(id)arg1;
- (void)setTaskForPidBlock:(CDUnknownBlockType)arg1;
- (id)initWithDelegate:(id)arg1 config:(id)arg2;
- (id)init;

@end

@interface DTTapRemote : DTTap
{
    DTXConnection *_connection;
    NSString *_serviceName;
    DTXChannel *_channel;
    long long _version;
    NSObject<OS_dispatch_queue> *_unprocessedMessageQueue;
    NSObject<OS_dispatch_source> *_receivedMessage;
}

+ (BOOL)stopOnChannel:(id)arg1;
+ (BOOL)unpauseOnChannel:(id)arg1;
+ (BOOL)pauseOnChannel:(id)arg1;
+ (BOOL)startOnChannel:(id)arg1 withConfiguration:(id)arg2;
- (void).cxx_destruct;
- (void)_reset:(id)arg1;
- (void)_fetch:(id)arg1;
- (void)_unpause:(id)arg1;
- (void)_pause:(id)arg1;
- (void)_stopWithSemaphore:(id)arg1 guard:(id)arg2;
- (void)_start:(id)arg1;
- (void)messageReceived:(id)arg1;
- (void)_setConnection:(id)arg1 guarded:(id)arg2;
- (void)setConnection:(id)arg1;
- (void)dealloc;
- (id)initWithDelegate:(id)arg1 config:(id)arg2 connection:(id)arg3 serviceName:(id)arg4 version:(long long)arg5;

@end

@interface DTVMTrackingService : DTXService <DTVMTrackingServiceAuthorizedAPI>
{
    int _targetPid;
    unsigned int _targetTask;
    XRVMState *_currentState;
}

+ (void)registerCapabilities:(id)arg1;
- (void).cxx_destruct;
- (void)stopTracking;
- (void)startTracking;
- (id)requestVMSnapshot;
- (void)setTargetPid:(id)arg1 referenceDate:(id)arg2;
- (id)configureLaunchEnvironment:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DTXPCControlService : DTProcessControlService <DTXPCControlServiceRequests>
{
}

+ (void)registerCapabilities:(id)arg1;
- (void)stopObservationsForIdentifier:(id)arg1 requestingProcess:(int)arg2;
- (void)observeServicesWithIdentifier:(id)arg1 requestingProcess:(int)arg2 environment:(id)arg3 arguments:(id)arg4 options:(id)arg5;
- (void)messageReceived:(id)arg1;
- (id)launchSuspendedProcessWithDevicePath:(id)arg1 bundleIdentifier:(id)arg2 environment:(id)arg3 arguments:(id)arg4 options:(id)arg5;
- (id)initWithChannel:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DTXPCRegistration : NSObject
{
    NSString *_serviceIdentifier;
    CDUnknownBlockType _oneshotHandler;
    id _client;
    id _pkHandle;
    NSObject<OS_xpc_object> *_xpcObject;
}

@property(retain, nonatomic) NSObject<OS_xpc_object> *xpcObject; // @synthesize xpcObject=_xpcObject;
@property(retain, nonatomic) id pkHandle; // @synthesize pkHandle=_pkHandle;
@property(retain, nonatomic) id client; // @synthesize client=_client;
@property(copy, nonatomic) CDUnknownBlockType oneshotHandler; // @synthesize oneshotHandler=_oneshotHandler;
@property(copy, nonatomic) NSString *serviceIdentifier; // @synthesize serviceIdentifier=_serviceIdentifier;
- (void).cxx_destruct;

@end

@interface DTXPCServiceController : NSObject
{
    NSMutableDictionary *_registrationDictsByPid;
    NSObject<OS_dispatch_queue> *_guard;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (void)unregisterClient:(id)arg1 withIdentifier:(id)arg2 parent:(int)arg3;
- (void)_matchRemove:(CDUnknownBlockType)arg1;
- (void)_registryModify:(BOOL)arg1 identifier:(id)arg2 parent:(int)arg3 client:(id)arg4 block:(CDUnknownBlockType)arg5;
- (void)registerClient:(id)arg1 forXPCService:(id)arg2 environment:(id)arg3 arguments:(id)arg4 options:(id)arg5 handler:(CDUnknownBlockType)arg6;
- (void)releaseAssertionsMadeByClient:(id)arg1;
- (id)init;

@end

@interface LeakAnalyzer : NSObject
{
    unsigned int _task;
}

+ (id)descriptionForLeakErrorCode:(int)arg1;
+ (id)serializedLeakDataWithCount:(unsigned int)arg1 leaks:(CDStruct_cbbc06c7 *)arg2 contents:(id *)arg3 references:(CDStruct_3b01f0aa)arg4 layouts:(id)arg5 timestamp:(unsigned long long)arg6;
+ (void)deserializeLeakData:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
+ (void)initialize;
- (id)findLeaksWithOptions:(unsigned int)arg1 block:(CDUnknownBlockType)arg2;
- (id)initWithTask:(unsigned int)arg1;

@end

@interface NSFileHandle (DVTInstrumentsFoundationAdditions)
- (void)enumerateDTKDebugEventsWithBlock:(CDUnknownBlockType)arg1 progressTracker:(id)arg2;
- (BOOL)writeCPRecordArraysByCore:(id)arg1 startingAtAbsoluteTime:(long long)arg2 error:(id *)arg3;
@end

@interface XRInternalizedSettingsStore : NSObject
{
}

+ (id)objectForKey:(id)arg1;
+ (id)internalizedSettings;
+ (void)configureWithURLs:(id)arg1;
+ (void)initialize;

@end

@interface XRNetworkingServiceObservationTuple : NSObject
{
    id *data;
    unsigned char _count;
    int _kind;
}

@property(nonatomic) unsigned char count; // @synthesize count=_count;
@property(nonatomic) int kind; // @synthesize kind=_kind;
- (void)dealloc;
- (id)initWithKind:(int)arg1 count:(unsigned char)arg2 source:(struct __CFDictionary *)arg3 indexToKeyMap:(const struct __CFString ***)arg4;
- (id)initWithKind:(int)arg1 count:(unsigned char)arg2;

@end

@interface XRVMRegion : NSObject <NSCoding, NSCopying>
{
    unsigned long long start;
    unsigned long long length;
    int current_prot;
    int max_prot;
    unsigned char external_pager;
    unsigned char share_mode;
    unsigned char user_tag;
    BOOL is_submap;
    NSString *path;
    NSString *type;
    unsigned int pages_resident;
    unsigned int pages_shared_now_private;
    unsigned int pages_swapped_out;
    unsigned int pages_dirtied;
    unsigned int ref_count;
    unsigned int region_page_shift;
}

+ (void)initialize;
+ (unsigned long long)regionIndexInArray:(id)arg1 forAddress:(unsigned long long)arg2;
- (void).cxx_destruct;
- (id)displayPath;
- (id)displayType;
- (int)maxProtection;
- (int)currentProtection;
- (id)path;
- (id)type;
- (unsigned char)tag;
- (unsigned long long)pageSize;
- (unsigned long long)swappedSize;
- (unsigned long long)dirtySize;
- (unsigned long long)residentSize;
- (unsigned int)virtualPages;
- (unsigned long long)virtualSize;
- (unsigned long long)location;
- (BOOL)isSubmapRegion;
- (void)_setResident:(unsigned int)arg1 dirty:(unsigned int)arg2 swapped:(unsigned int)arg3 speculative:(unsigned int)arg4;
- (void)setAddress:(unsigned long long)arg1 size:(unsigned long long)arg2;
- (void)setPath:(id)arg1 type:(id)arg2;
- (BOOL)isAdjacentTo:(id)arg1;
- (BOOL)typeMatches:(id)arg1;
- (BOOL)regionMatch:(id)arg1;
- (BOOL)matchesAddr:(unsigned long long)arg1 size:(unsigned long long)arg2 regionInfo:(struct vm_region_submap_info_64 *)arg3;
- (BOOL)isEqual:(id)arg1;
- (id)description;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithAddress:(unsigned long long)arg1 size:(unsigned long long)arg2 regionInfo:(struct vm_region_submap_info_64 *)arg3;

@end

@interface XRVMCoalescedRegion : XRVMRegion
{
    NSMutableArray *_subRegions;
    NSString *_groupName;
    unsigned long long _virtualSize;
    unsigned int _multiplicityFlags;
}

- (void).cxx_destruct;
- (id)displayPath;
- (id)displayType;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)sortSubregionsWithComparator:(CDUnknownBlockType)arg1;
- (BOOL)isFakeAggregate;
- (id)subRegions;
- (unsigned long long)virtualSize;
- (void)addRegion:(id)arg1;
- (id)initWithRegions:(id)arg1 groupName:(id)arg2;

@end

@interface XRVMRegionAnnotation : NSObject <NSCoding>
{
    unsigned long long _baseAddress;
    int *_pageMap;
    unsigned int _vpages;
}

- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (int)dispositionForPage:(unsigned long long)arg1;
- (id)initSamplingRegion:(id)arg1 inTask:(unsigned int)arg2 updateRegionStatistics:(BOOL)arg3;

@end

@interface XRVMState : NSObject <NSCoding>
{
    unsigned long long _machAbsolute;
    unsigned long long _traceRelative;
    NSMutableArray *_regions;
    unsigned long long _residentSize;
    unsigned long long _swapSize;
    unsigned long long _dirtySize;
    unsigned long long _totalSize;
    unsigned long long _sharedRegionStart;
    unsigned long long _sharedRegionLength;
    struct __CFDictionary *_pageAnnotationsByRegion;
    unsigned int _task;
}

+ (id)currentStateForTask:(unsigned int)arg1 pid:(int)arg2 previousState:(id)arg3 dehydratedDiffVersion:(BOOL)arg4;
+ (void)initialize;
- (void).cxx_destruct;
- (id)summaryRegionsWithOptions:(int)arg1;
- (id)regionsWithOptions:(int)arg1;
- (void)_annotateRange:(struct _CSRange)arg1 withPath:(id)arg2 type:(id)arg3;
- (id)_annotationForRegion:(id)arg1;
- (void)_addRegion:(id)arg1 annotation:(id)arg2 new:(BOOL)arg3;
- (unsigned long long)traceRelativeTimestamp;
- (unsigned long long)machAbsoluteTimestamp;
- (id)regions;
- (unsigned long long)swappedSize;
- (unsigned long long)dirtySize;
- (unsigned long long)residentSize;
- (unsigned long long)virtualSize;
- (id)regionForAddress:(unsigned long long)arg1;
- (void)hydrateWithPreviousState:(id)arg1;
- (id)detailsForRegion:(id)arg1;
- (void)_recalculateSizes;
- (id)description;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface _DTKPPendingRecord : NSObject
{
    BOOL _userCallstackSeen;
    DTKPRecord *_record;
}

@property(retain, nonatomic) DTKPRecord *record; // @synthesize record=_record;
@property(nonatomic) BOOL userCallstackSeen; // @synthesize userCallstackSeen=_userCallstackSeen;
- (void).cxx_destruct;
- (id)init;

@end

@interface _DT_GCDAsyncReadPacket : NSObject
{
    NSMutableData *buffer;
    unsigned long long startOffset;
    unsigned long long bytesDone;
    unsigned long long maxLength;
    double timeout;
    unsigned long long readLength;
    NSData *term;
    BOOL bufferOwner;
    unsigned long long originalBufferLength;
    long long tag;
}

- (void).cxx_destruct;
- (long long)searchForTermAfterPreBuffering:(long long)arg1;
- (unsigned long long)readLengthForTermWithPreBuffer:(id)arg1 found:(char *)arg2;
- (unsigned long long)readLengthForTermWithHint:(unsigned long long)arg1 shouldPreBuffer:(char *)arg2;
- (unsigned long long)readLengthForNonTermWithHint:(unsigned long long)arg1;
- (unsigned long long)optimalReadLengthWithDefault:(unsigned long long)arg1 shouldPreBuffer:(char *)arg2;
- (void)ensureCapacityForAdditionalDataOfLength:(unsigned long long)arg1;
- (id)initWithData:(id)arg1 startOffset:(unsigned long long)arg2 maxLength:(unsigned long long)arg3 timeout:(double)arg4 readLength:(unsigned long long)arg5 terminator:(id)arg6 tag:(long long)arg7;

@end

@interface _DT_GCDAsyncSocket : NSObject
{
    unsigned int flags;
    unsigned short config;
    id delegate;
    NSObject<OS_dispatch_queue> *delegateQueue;
    int socket4FD;
    int socket6FD;
    int stateIndex;
    NSData *connectInterface4;
    NSData *connectInterface6;
    NSObject<OS_dispatch_queue> *socketQueue;
    NSObject<OS_dispatch_source> *accept4Source;
    NSObject<OS_dispatch_source> *accept6Source;
    NSObject<OS_dispatch_source> *connectTimer;
    NSObject<OS_dispatch_source> *readSource;
    NSObject<OS_dispatch_source> *writeSource;
    NSObject<OS_dispatch_source> *readTimer;
    NSObject<OS_dispatch_source> *writeTimer;
    NSMutableArray *readQueue;
    NSMutableArray *writeQueue;
    _DT_GCDAsyncReadPacket *currentRead;
    _DT_GCDAsyncWritePacket *currentWrite;
    unsigned long long socketFDBytesAvailable;
    _DT_GCDAsyncSocketPreBuffer *preBuffer;
    struct SSLContext *sslContext;
    _DT_GCDAsyncSocketPreBuffer *sslPreBuffer;
    unsigned long long sslWriteCachedLength;
    int sslErrCode;
    void *IsOnSocketQueueOrTargetQueueKey;
    id userData;
}

+ (id)ZeroData;
+ (id)LFData;
+ (id)CRData;
+ (id)CRLFData;
+ (BOOL)getHost:(id *)arg1 port:(unsigned short *)arg2 family:(char *)arg3 fromAddress:(id)arg4;
+ (BOOL)getHost:(id *)arg1 port:(unsigned short *)arg2 fromAddress:(id)arg3;
+ (BOOL)isIPv6Address:(id)arg1;
+ (BOOL)isIPv4Address:(id)arg1;
+ (unsigned short)portFromAddress:(id)arg1;
+ (id)hostFromAddress:(id)arg1;
+ (unsigned short)portFromSockaddr6:(const struct sockaddr_in6 *)arg1;
+ (unsigned short)portFromSockaddr4:(const struct sockaddr_in *)arg1;
+ (id)hostFromSockaddr6:(const struct sockaddr_in6 *)arg1;
+ (id)hostFromSockaddr4:(const struct sockaddr_in *)arg1;
+ (id)lookupHost:(id)arg1 port:(unsigned short)arg2 error:(id *)arg3;
+ (id)gaiError:(int)arg1;
- (void).cxx_destruct;
- (struct SSLContext *)sslContext;
- (int)socket6FD;
- (int)socket4FD;
- (int)socketFD;
- (void)performBlock:(CDUnknownBlockType)arg1;
- (void)unmarkSocketQueueTargetQueue:(id)arg1;
- (void)markSocketQueueTargetQueue:(id)arg1;
@property BOOL autoDisconnectOnClosedReadStream;
- (void)ssl_shouldTrustPeer:(BOOL)arg1 stateIndex:(int)arg2;
- (void)ssl_continueSSLHandshake;
- (void)ssl_startTLS;
- (int)sslWriteWithBuffer:(const void *)arg1 length:(unsigned long long *)arg2;
- (int)sslReadWithBuffer:(void *)arg1 length:(unsigned long long *)arg2;
- (void)maybeStartTLS;
- (void)startTLS:(id)arg1;
- (void)doWriteTimeoutWithExtension:(double)arg1;
- (void)doWriteTimeout;
- (void)setupWriteTimerWithTimeout:(double)arg1;
- (void)endCurrentWrite;
- (void)completeCurrentWrite;
- (void)doWriteData;
- (void)maybeDequeueWrite;
- (float)progressOfWriteReturningTag:(long long *)arg1 bytesDone:(unsigned long long *)arg2 total:(unsigned long long *)arg3;
- (void)writeData:(id)arg1 withTimeout:(double)arg2 tag:(long long)arg3;
- (void)doReadTimeoutWithExtension:(double)arg1;
- (void)doReadTimeout;
- (void)setupReadTimerWithTimeout:(double)arg1;
- (void)endCurrentRead;
- (void)completeCurrentRead;
- (void)doReadEOF;
- (void)doReadData;
- (void)flushSSLBuffers;
- (void)maybeDequeueRead;
- (float)progressOfReadReturningTag:(long long *)arg1 bytesDone:(unsigned long long *)arg2 total:(unsigned long long *)arg3;
- (void)readDataToData:(id)arg1 withTimeout:(double)arg2 buffer:(id)arg3 bufferOffset:(unsigned long long)arg4 maxLength:(unsigned long long)arg5 tag:(long long)arg6;
- (void)readDataToData:(id)arg1 withTimeout:(double)arg2 maxLength:(unsigned long long)arg3 tag:(long long)arg4;
- (void)readDataToData:(id)arg1 withTimeout:(double)arg2 buffer:(id)arg3 bufferOffset:(unsigned long long)arg4 tag:(long long)arg5;
- (void)readDataToData:(id)arg1 withTimeout:(double)arg2 tag:(long long)arg3;
- (void)readDataToLength:(unsigned long long)arg1 withTimeout:(double)arg2 buffer:(id)arg3 bufferOffset:(unsigned long long)arg4 tag:(long long)arg5;
- (void)readDataToLength:(unsigned long long)arg1 withTimeout:(double)arg2 tag:(long long)arg3;
- (void)readDataWithTimeout:(double)arg1 buffer:(id)arg2 bufferOffset:(unsigned long long)arg3 maxLength:(unsigned long long)arg4 tag:(long long)arg5;
- (void)readDataWithTimeout:(double)arg1 buffer:(id)arg2 bufferOffset:(unsigned long long)arg3 tag:(long long)arg4;
- (void)readDataWithTimeout:(double)arg1 tag:(long long)arg2;
- (void)resumeWriteSource;
- (void)suspendWriteSource;
- (void)resumeReadSource;
- (void)suspendReadSource;
- (BOOL)usingSecureTransportForTLS;
- (BOOL)usingCFStreamForTLS;
- (void)setupReadAndWriteSourcesForNewlyConnectedSocket:(int)arg1;
- (void)getInterfaceAddress4:(id *)arg1 address6:(id *)arg2 fromDescription:(id)arg3 port:(unsigned short)arg4;
@property(readonly) BOOL isSecure;
@property(readonly) BOOL isIPv6;
@property(readonly) BOOL isIPv4;
@property(readonly) NSData *localAddress;
@property(readonly) NSData *connectedAddress;
- (unsigned short)localPortFromSocket6:(int)arg1;
- (unsigned short)localPortFromSocket4:(int)arg1;
- (id)localHostFromSocket6:(int)arg1;
- (id)localHostFromSocket4:(int)arg1;
- (unsigned short)connectedPortFromSocket6:(int)arg1;
- (unsigned short)connectedPortFromSocket4:(int)arg1;
- (id)connectedHostFromSocket6:(int)arg1;
- (id)connectedHostFromSocket4:(int)arg1;
- (unsigned short)localPort6;
- (unsigned short)localPort4;
- (id)localHost6;
- (id)localHost4;
- (unsigned short)connectedPort6;
- (unsigned short)connectedPort4;
- (id)connectedHost6;
- (id)connectedHost4;
@property(readonly) unsigned short localPort;
@property(readonly) NSString *localHost;
@property(readonly) unsigned short connectedPort;
@property(readonly) NSString *connectedHost;
@property(readonly) BOOL isConnected;
@property(readonly) BOOL isDisconnected;
- (id)otherError:(id)arg1;
- (id)connectionClosedError;
- (id)writeTimeoutError;
- (id)readTimeoutError;
- (id)readMaxedOutError;
- (id)connectTimeoutError;
- (id)sslError:(int)arg1;
- (id)errnoError;
- (id)errnoErrorWithReason:(id)arg1;
- (id)badParamError:(id)arg1;
- (id)badConfigError:(id)arg1;
- (void)maybeClose;
- (void)disconnectAfterReadingAndWriting;
- (void)disconnectAfterWriting;
- (void)disconnectAfterReading;
- (void)disconnect;
- (void)closeWithError:(id)arg1;
- (void)doConnectTimeout;
- (void)endConnectTimeout;
- (void)startConnectTimeout:(double)arg1;
- (void)didNotConnect:(int)arg1 error:(id)arg2;
- (void)didConnect:(int)arg1;
- (BOOL)connectWithAddress4:(id)arg1 address6:(id)arg2 error:(id *)arg3;
- (void)lookup:(int)arg1 didFail:(id)arg2;
- (void)lookup:(int)arg1 didSucceedWithAddress4:(id)arg2 address6:(id)arg3;
- (BOOL)connectToAddress:(id)arg1 viaInterface:(id)arg2 withTimeout:(double)arg3 error:(id *)arg4;
- (BOOL)connectToAddress:(id)arg1 withTimeout:(double)arg2 error:(id *)arg3;
- (BOOL)connectToAddress:(id)arg1 error:(id *)arg2;
- (BOOL)connectToHost:(id)arg1 onPort:(unsigned short)arg2 viaInterface:(id)arg3 withTimeout:(double)arg4 error:(id *)arg5;
- (BOOL)connectToHost:(id)arg1 onPort:(unsigned short)arg2 withTimeout:(double)arg3 error:(id *)arg4;
- (BOOL)connectToHost:(id)arg1 onPort:(unsigned short)arg2 error:(id *)arg3;
- (BOOL)preConnectWithInterface:(id)arg1 error:(id *)arg2;
- (BOOL)doAccept:(int)arg1;
- (BOOL)acceptOnInterface:(id)arg1 port:(unsigned short)arg2 error:(id *)arg3;
- (BOOL)acceptOnPort:(unsigned short)arg1 error:(id *)arg2;
@property(retain) id userData;
@property(getter=isIPv4PreferredOverIPv6) BOOL IPv4PreferredOverIPv6;
@property(getter=isIPv6Enabled) BOOL IPv6Enabled;
@property(getter=isIPv4Enabled) BOOL IPv4Enabled;
- (void)synchronouslySetDelegate:(id)arg1 delegateQueue:(id)arg2;
- (void)setDelegate:(id)arg1 delegateQueue:(id)arg2;
- (void)setDelegate:(id)arg1 delegateQueue:(id)arg2 synchronously:(BOOL)arg3;
- (void)getDelegate:(id *)arg1 delegateQueue:(id *)arg2;
- (void)synchronouslySetDelegateQueue:(id)arg1;
@property(retain) NSObject<OS_dispatch_queue> *delegateQueue;
- (void)setDelegateQueue:(id)arg1 synchronously:(BOOL)arg2;
- (void)synchronouslySetDelegate:(id)arg1;
@property __weak id delegate;
- (void)setDelegate:(id)arg1 synchronously:(BOOL)arg2;
- (void)dealloc;
- (id)initWithDelegate:(id)arg1 delegateQueue:(id)arg2 socketQueue:(id)arg3;
- (id)initWithDelegate:(id)arg1 delegateQueue:(id)arg2;
- (id)initWithSocketQueue:(id)arg1;
- (id)init;

@end

@interface _DT_GCDAsyncSocketPreBuffer : NSObject
{
    char *preBuffer;
    unsigned long long preBufferSize;
    char *readPointer;
    char *writePointer;
}

- (void)reset;
- (void)didWrite:(unsigned long long)arg1;
- (void)getWriteBuffer:(char **)arg1 availableSpace:(unsigned long long *)arg2;
- (char *)writeBuffer;
- (unsigned long long)availableSpace;
- (void)didRead:(unsigned long long)arg1;
- (void)getReadBuffer:(char **)arg1 availableBytes:(unsigned long long *)arg2;
- (char *)readBuffer;
- (unsigned long long)availableBytes;
- (void)ensureCapacityForWrite:(unsigned long long)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;

@end

@interface _DT_GCDAsyncSpecialPacket : NSObject
{
    NSDictionary *tlsSettings;
}

- (void).cxx_destruct;
- (id)initWithTLSSettings:(id)arg1;

@end

@interface _DT_GCDAsyncWritePacket : NSObject
{
    NSData *buffer;
    unsigned long long bytesDone;
    long long tag;
    double timeout;
}

- (void).cxx_destruct;
- (id)initWithData:(id)arg1 timeout:(double)arg2 tag:(long long)arg3;

@end

@interface _GenericTapGuarded : NSObject
{
    BOOL _stoppedWhileSuspended;
    BOOL _removeArchivingPathWhenComplete;
    BOOL _running;
    BOOL _connectionEnabled;
    BOOL _paused;
    int _suspendCount;
    NSString *_UUID;
    id <DTTapDelegate> _delegate;
    CDUnknownBlockType _taskForPid;
    NSObject<OS_dispatch_source> *_internalSrc;
    DTTapConfig *_config;
    NSString *_errorString;
}

@property(retain, nonatomic) NSString *errorString; // @synthesize errorString=_errorString;
@property(nonatomic) BOOL paused; // @synthesize paused=_paused;
@property(nonatomic) BOOL connectionEnabled; // @synthesize connectionEnabled=_connectionEnabled;
@property(nonatomic) BOOL running; // @synthesize running=_running;
@property(nonatomic) BOOL removeArchivingPathWhenComplete; // @synthesize removeArchivingPathWhenComplete=_removeArchivingPathWhenComplete;
@property(retain, nonatomic) DTTapConfig *config; // @synthesize config=_config;
@property(nonatomic) BOOL stoppedWhileSuspended; // @synthesize stoppedWhileSuspended=_stoppedWhileSuspended;
@property(nonatomic) int suspendCount; // @synthesize suspendCount=_suspendCount;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *internalSrc; // @synthesize internalSrc=_internalSrc;
@property(copy, nonatomic) CDUnknownBlockType taskForPid; // @synthesize taskForPid=_taskForPid;
@property(retain, nonatomic) id <DTTapDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) NSString *UUID; // @synthesize UUID=_UUID;
- (void).cxx_destruct;
- (void)dealloc;
- (void)reset;

@end

@interface _KPerfTapGuarded : _GenericTapGuarded
{
    struct _ContainerArray _containers;
    unsigned long long _actionTypesByKind[5];
    struct __CFArray *_containersByTrigger;
    BOOL _isSessionBased;
    int _containersCreated;
    unsigned int _coreCount;
    struct _CPSession *_unprocessedSession;
    struct _CPSession *_session;
    long long _triggerCount;
    NSMutableArray *_metadataByTriggerIndex;
    NSDictionary *_sessionMetadata;
    unsigned int *_triggerIDs;
    NSMutableArray *_rawBufferAccumulator;
}

@property(retain, nonatomic) NSMutableArray *rawBufferAccumulator; // @synthesize rawBufferAccumulator=_rawBufferAccumulator;
@property(nonatomic) unsigned int *triggerIDs; // @synthesize triggerIDs=_triggerIDs;
@property(retain, nonatomic) NSDictionary *sessionMetadata; // @synthesize sessionMetadata=_sessionMetadata;
@property(retain, nonatomic) NSMutableArray *metadataByTriggerIndex; // @synthesize metadataByTriggerIndex=_metadataByTriggerIndex;
@property(nonatomic) long long triggerCount; // @synthesize triggerCount=_triggerCount;
@property(nonatomic) unsigned int coreCount; // @synthesize coreCount=_coreCount;
@property(nonatomic) int containersCreated; // @synthesize containersCreated=_containersCreated;
@property(nonatomic) BOOL isSessionBased; // @synthesize isSessionBased=_isSessionBased;
- (void).cxx_destruct;
@property(nonatomic) struct _CPSession *unprocessedSession; // @synthesize unprocessedSession=_unprocessedSession;
@property(nonatomic) struct _CPSession *session; // @synthesize session=_session;
- (struct __CFArray *)containersByTrigger;
- (void)setContainersByTrigger:(struct __CFArray *)arg1;
- (void)dealloc;

@end

@interface _XRExpiredPidCache : NSObject
{
    struct TFPPidWatcher pidWatcher;
    int enableCount;
    NSMutableDictionary *signatures;
}

- (void).cxx_destruct;

@end

