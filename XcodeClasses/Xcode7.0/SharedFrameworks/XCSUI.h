//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct _NSRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

#pragma mark -

//
// File: /Applications/Xcode-7GM.app/Contents/SharedFrameworks/XCSUI.framework/Versions/A/XCSUI
// UUID: F61023E1-8068-3C31-B2BC-AE1C9DCB97F6
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 8174.0.0.0.0
//       Minimum Mac OS X version: 10.10.0
//                    SDK version: 10.11.0
//
// Objective-C Garbage Collection: Unsupported
//
//                       Run path: @executable_path/
//                               = /Applications/Xcode-7GM.app/Contents/SharedFrameworks/XCSUI.framework/Versions/A
//                       Run path: @executable_path/../../../Frameworks
//                               = /Applications/Xcode-7GM.app/Contents/SharedFrameworks/Frameworks
//                       Run path: @executable_path/../../../SharedFrameworks
//                               = /Applications/Xcode-7GM.app/Contents/SharedFrameworks/SharedFrameworks
//                       Run path: @executable_path/../../../PlugIns
//                               = /Applications/Xcode-7GM.app/Contents/SharedFrameworks/PlugIns
//                       Run path: @executable_path/../../../PlugIns
//                               = /Applications/Xcode-7GM.app/Contents/SharedFrameworks/PlugIns
//                       Run path: @executable_path/../../../PlugIns/IDEiOSSupportCore.ideplugin/Contents/Frameworks
//                               = /Applications/Xcode-7GM.app/Contents/SharedFrameworks/PlugIns/IDEiOSSupportCore.ideplugin/Contents/Frameworks
//                       Run path: @executable_path/../../../PlugIns/Xcode3Core.ideplugin/Contents/Frameworks
//                               = /Applications/Xcode-7GM.app/Contents/SharedFrameworks/PlugIns/Xcode3Core.ideplugin/Contents/Frameworks
//                       Run path: @executable_path/../../../OtherFrameworks
//                               = /Applications/Xcode-7GM.app/Contents/SharedFrameworks/OtherFrameworks
//                       Run path: @executable_path/../../../Developer/Library/PrivateFrameworks
//                               = /Applications/Xcode-7GM.app/Contents/SharedFrameworks/Developer/Library/PrivateFrameworks
//                       Run path: @executable_path/../../../Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib
//                               = /Applications/Xcode-7GM.app/Contents/SharedFrameworks/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib
//                       Run path: @loader_path/../Frameworks
//                               = /Applications/Xcode-7GM.app/Contents/SharedFrameworks/XCSUI.framework/Versions/Frameworks
//

@protocol DVTInvalidation <NSObject>
- (void)primitiveInvalidate;

@optional
+ (BOOL)supportsInvalidationPrevention;
+ (unsigned long long)assertionBehaviorForKeyValueObservationsAtEndOfEvent;
+ (unsigned long long)assertionBehaviorAfterEndOfEventForSelector:(SEL)arg1;
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly, nonatomic, getter=isValid) BOOL valid;
- (void)invalidate;
@end

@protocol DVTRadarSupport <NSObject>
+ (id)sharedClient;
@property(retain) id <DVTRadar_AttachmentDownloadDelegate> attachmentDownloadDelegate;
- (id)attachmentFromFile:(NSString *)arg1;
- (void)associateProblem:(id <DVTRadar_Problem>)arg1 withAssociate:(id <DVTRadar_Associate>)arg2;
- (void)problemsForProblemIDs:(NSArray *)arg1 completionBlock:(void (^)(NSError *, NSArray *))arg2;
- (void)showRadarNumberPromptForIssues:(NSArray *)arg1 attachedToWindow:(NSWindow *)arg2 completionBlock:(void (^)(NSError *, unsigned long long))arg3;
- (void)showRadarNumberPromptForIssue:(id <DVTRadarSupport_Issue>)arg1 attachedToWindow:(NSWindow *)arg2 completionBlock:(void (^)(NSError *, unsigned long long))arg3;
- (void)showRadarUIForIssues:(NSArray *)arg1 bugTitle:(NSString *)arg2 attachmentDownloadDelegate:(id <DVTRadar_AttachmentDownloadDelegate>)arg3 attachedToWindow:(NSWindow *)arg4 completionBlock:(void (^)(NSError *, unsigned long long))arg5;
- (void)showRadarUIForIssue:(id <DVTRadarSupport_Issue>)arg1 attachmentDownloadDelegate:(id <DVTRadar_AttachmentDownloadDelegate>)arg2 attachedToWindow:(NSWindow *)arg3 completionBlock:(void (^)(NSError *, unsigned long long))arg4;
@end

@protocol DVTRadarSupport_Issue <NSObject>
@property(readonly, nonatomic) id underlyingIssue;
@property(readonly, nonatomic) unsigned long long associatedRadarID;
@property(readonly, copy, nonatomic) NSString *briefStringRepresentation;
@property(readonly, copy, nonatomic) NSString *stringRepresentation;
@end

@protocol DVTRadar_Associate <NSObject>
@property(readonly, copy, nonatomic) NSString *radarSummary;
@property(nonatomic) unsigned long long duplicateOfProblemID;
@property(nonatomic) unsigned long long priority;
@property(copy, nonatomic) NSString *resolution;
@property(copy, nonatomic) NSString *assignee;
@property(copy, nonatomic) NSString *substate;
@property(copy, nonatomic) NSString *state;
@end

@protocol DVTRadar_AttachmentDownloadDelegate <NSObject>
- (void)fetchAttachmentsCompletionBlock:(void (^)(NSError *, double, BOOL, NSArray *))arg1;
@end

@protocol DVTReplacementViewDelegate <NSObject>

@optional
- (void)replacementView:(DVTReplacementView *)arg1 willDisplayInRect:(struct CGRect)arg2;
- (void)replacementView:(DVTReplacementView *)arg1 willCloseViewController:(NSViewController *)arg2;
- (void)replacementView:(DVTReplacementView *)arg1 didInstallViewController:(NSViewController *)arg2;
- (void)replacementView:(DVTReplacementView *)arg1 willInstallViewController:(NSViewController *)arg2;
@end

@protocol DVTScopeBarContentController <NSObject>
@property(readonly) double preferredViewHeight;

@optional
- (BOOL)shouldCloseOnEscape;
- (void)didPressDismissOnScopeBar:(DVTScopeBarController *)arg1;
- (void)wasAssociatedWithScopeBarController:(DVTScopeBarController *)arg1;
@end

@protocol DVTSplitViewDelegate <NSSplitViewDelegate>

@optional
- (NSArray *)splitView:(NSSplitView *)arg1 additionalEffectiveRectsOfDividerAtIndex:(long long)arg2;
- (void)splitViewDidEndLiveResize:(DVTSplitView *)arg1;
- (void)splitViewWillStartLiveResize:(DVTSplitView *)arg1;
- (NSArray *)splitView:(DVTSplitView *)arg1 needsRectanglesForViewsWithState:(NSArray *)arg2 forSize:(struct CGSize)arg3;
- (void)splitViewItemDidExpandOrCollapseBecauseUserDraggedDivider:(DVTSplitViewItem *)arg1;
@end

@protocol DVTTabChooserViewDelegate <NSObject>
- (void)tabChooserView:(DVTTabChooserView *)arg1 userDidChooseChoice:(DVTChoice *)arg2;
@end

@protocol IDECapsuleViewController <NSObject>
@property(readonly, copy) NSString *titleForDisplay;

@optional
@property(readonly) BOOL disclosedByDefault;
@property(readonly, copy) NSString *footerLabel;
@property(readonly) BOOL canDrag;
@property(readonly) BOOL canUndisclose;
@property BOOL canRemoveItems;
@property BOOL canAddItems;
@property(readonly) BOOL canRename;
@property(readonly) BOOL canRemove;
@property(readonly) BOOL canSelect;
@property(readonly) NSImage *icon;
- (void)removeItems:(id)arg1;
- (void)addItems:(id)arg1;
- (void)setTitle:(NSString *)arg1;
- (void)remove:(id)arg1;
@end

@protocol IDECapsuleViewDelegate <NSObject>

@optional
- (void)capsuleView:(IDECapsuleView *)arg1 wasDisclosed:(BOOL)arg2;
- (double)contentOriginXOffsetForCapsuleView:(IDECapsuleView *)arg1;
- (double)capsuleView:(IDECapsuleView *)arg1 preferredContentViewWidthForCapsuleWidth:(double)arg2;
- (NSView *)headerContentViewForCapsuleView:(IDECapsuleView *)arg1;
- (void)capsuleViewDidClickRemoveButton:(IDECapsuleView *)arg1;
- (BOOL)capsuleViewCanBeRemoved:(IDECapsuleView *)arg1;
- (BOOL)allowCustomContentHeaderViewToDriveHeaderHeight:(IDECapsuleView *)arg1;
- (double)capsuleViewSidePadding:(IDECapsuleView *)arg1;
- (NSColor *)capsuleViewBorderColor:(IDECapsuleView *)arg1;
- (NSColor *)capsuleViewBackgroundColor:(IDECapsuleView *)arg1;
- (void)capsuleView:(IDECapsuleView *)arg1 setTitle:(NSString *)arg2;
- (NSString *)capsuleViewTitleForEditing:(IDECapsuleView *)arg1;
- (BOOL)capsuleViewCanBeRenamed:(IDECapsuleView *)arg1;
- (BOOL)suppressBottomSeparator:(IDECapsuleView *)arg1;
- (BOOL)shouldDrawBorderBelowHeaderForCapsuleView:(IDECapsuleView *)arg1;
- (BOOL)capsuleView:(IDECapsuleView *)arg1 acceptDrop:(id <NSDraggingInfo>)arg2;
- (unsigned long long)capsuleView:(IDECapsuleView *)arg1 validateDrop:(id <NSDraggingInfo>)arg2;
- (NSArray *)supportedDragTypes;
@end

@protocol IDEContinuousIntegrationActionManager <NSObject>
- (void)hostedRepositoriesOnService:(id)arg1 completionHandler:(void (^)(NSArray *, NSError *))arg2;
- (void)canCreateHostedRepositoriesOnService:(id)arg1 completionHandler:(void (^)(BOOL))arg2;
- (void)createHostedRepositoryWithName:(NSString *)arg1 onService:(id)arg2 completionHandler:(void (^)(BOOL, NSError *, DVTSourceControlRemoteRepository *))arg3;
- (NSURL *)webURLForIntegration:(id)arg1;
- (NSURL *)webURLForBot:(id)arg1;
- (BOOL)canUserCreateAndDeleteBotsOnServiceForBotOrIntegration:(id)arg1;
- (BOOL)canUserCreateBotsOnAnyService;
- (NSString *)projectNameInBlueprintForBot:(id)arg1;
- (void)serviceMatchingHostName:(NSString *)arg1 withTimeout:(double)arg2 completionBlock:(void (^)(BOOL, NSError *, id))arg3;
- (void)fetchIntegrationForId:(NSString *)arg1 onService:(id)arg2 withCompletionBlock:(void (^)(BOOL, NSError *, id))arg3;
- (void)fetchBotForBotId:(NSString *)arg1 onService:(id)arg2 withCompletionBlock:(void (^)(BOOL, NSError *, id))arg3;
- (void)deleteIntegration:(id)arg1 withCompletionBlock:(void (^)(BOOL, NSError *, NSString *, NSString *))arg2;
- (void)cancelIntegration:(id)arg1 withCompletionBlock:(void (^)(BOOL, NSError *, NSString *, NSString *))arg2;
- (void)deleteBot:(id)arg1 workspace:(IDEWorkspace *)arg2 withCompletionBlock:(void (^)(BOOL, NSError *, NSString *, NSString *))arg3;
- (void)integrationsForBot:(id)arg1 max:(unsigned long long)arg2 sortNewestFirst:(BOOL)arg3 completionHandler:(void (^)(NSArray *, NSError *))arg4;
- (void)integrateBot:(id)arg1 cleanFirst:(BOOL)arg2 completionHandler:(void (^)(BOOL, NSError *, NSString *, NSString *))arg3;
- (void)showBotEditorForWorkspaceTabController:(IDEWorkspaceTabController *)arg1 bot:(id)arg2 editingMode:(long long)arg3 completionBlock:(void (^)(BOOL, NSError *, NSArray *))arg4;
@end

@protocol IDEContinuousIntegrationBotMonitor <NSObject, DVTInvalidation>
@property(readonly, copy, nonatomic) NSArray *serversWithMaintenanceTasks;
@property(readonly, copy, nonatomic) NSArray *bots;
- (void)updateBotClientsInService:(id)arg1;
- (void)filterBotsToWorkspace:(BOOL)arg1;
@end

@protocol IDEContinuousIntegrationCreateEditBotWindowController <NSObject>
- (void)beginSessionModalForWorkspaceTabController:(IDEWorkspaceTabController *)arg1 redefineBot:(id)arg2 hostWindow:(NSWindow *)arg3 withCompletionBlock:(void (^)(int, id, NSError *))arg4;
- (void)beginSessionModalForWorkspaceTabController:(IDEWorkspaceTabController *)arg1 hostWindow:(NSWindow *)arg2 withCompletionBlock:(void (^)(int, id, NSError *))arg3;
@end

@protocol IDEContinuousIntegrationLogNavigatorActions

@optional
- (void)menuCmd_viewIntegrationInBrowser:(IDELogNavigator *)arg1;
- (void)menuCmd_viewBotInBrowser:(IDELogNavigator *)arg1;
- (void)menuCmd_deleteIntegration:(IDELogNavigator *)arg1;
- (void)menuCmd_cancelIntegration:(IDELogNavigator *)arg1;
- (void)menuCmd_cleanAndIntegrate:(IDELogNavigator *)arg1;
- (void)menuCmd_integrate:(IDELogNavigator *)arg1;
- (void)menuCmd_deleteBot:(IDELogNavigator *)arg1;
- (void)menuCmd_editBot:(IDELogNavigator *)arg1;
- (void)menuCmd_createBot:(IDELogNavigator *)arg1;
@end

@protocol IDEContinuousIntegrationLogNavigatorHelper <NSObject>
- (NSString *)botObservableStatusChangedPropertyName;
- (NSString *)integrationObservableStatusChangedPropertyName;
- (int)statusOfIntegration:(id)arg1;
- (BOOL)isIntegrationFinished:(id)arg1;
- (id)documentLocationForLoadMoreItemWithNavigable:(id)arg1;
- (void)additionalIntegrationsOnServerForBotNavigable:(id)arg1 completionBlock:(void (^)(unsigned long long, NSError *))arg2;
- (void)loadMoreBotsInBotNavigable:(id)arg1 completionBlock:(void (^)(void))arg2;
- (void)performAction:(SEL)arg1 forNavigableItemSelection:(NSArray *)arg2 withNavigator:(IDELogNavigator *)arg3;
- (NSString *)titleForNavigableItemSelection:(NSArray *)arg1 action:(SEL)arg2;
- (BOOL)navigableItemSelection:(NSArray *)arg1 allowsAction:(SEL)arg2;
- (id <IDEKeyDrivenNavigableItemRepresentedObject>)navigableItemForIntegration:(id)arg1;
- (id <IDEKeyDrivenNavigableItemRepresentedObject>)navigableItemForBotForGroupByTime:(id)arg1;
- (id <IDEKeyDrivenNavigableItemRepresentedObject>)navigableItemForBot:(id)arg1;
- (id <IDEKeyDrivenNavigableItemRepresentedObject>)navigableItemForService:(id)arg1;
- (NSString *)botIdentifierForIntegrationNavigableItem:(id)arg1;
- (NSArray *)legacyBotNavigablesForLegacyBots:(NSArray *)arg1;
- (void)compoundStatusForIntegrationOrBot:(id)arg1 completionBlock:(void (^)(BOOL, BOOL, BOOL, BOOL, BOOL, BOOL, BOOL))arg2;
@end

@protocol IDEContinuousIntegrationNewServiceAccountController <NSObject>
- (void)beginSheetModalForWindow:(NSWindow *)arg1 connectionAddress:(NSString *)arg2 completionBlock:(void (^)(long long, id, NSError *))arg3;
@end

@protocol IDEContinuousIntegrationServiceManager <NSObject>
@property(readonly, copy, nonatomic) NSArray *services;
- (void)removeService:(id)arg1 withCompletionBlock:(void (^)(id, BOOL, NSError *))arg2;
- (void)addNewService:(id)arg1 withCompletionBlock:(void (^)(id, BOOL, NSError *))arg2;
@end

@protocol IDECoverageReportFunctionFetcher <NSObject>
- (void)fetchFunctionsForFile:(id <IDECoverage_File>)arg1 completionBlock:(void (^)(NSArray *))arg2;
@end

@protocol IDECoverage_Base <NSObject>
@property(readonly, copy, nonatomic) NSArray *ide_coverage_devices;
@property(readonly, copy, nonatomic) NSArray *ide_coverage_children;
@property(readonly, copy, nonatomic) NSNumber *ide_coverage_lineCoveragePctDelta;
@property(readonly, copy, nonatomic) NSNumber *ide_coverage_lineCoveragePct;
@property(readonly, copy, nonatomic) NSString *ide_coverage_title;
@property(readonly, copy, nonatomic) NSString *ide_coverage_identifier;
@end

@protocol IDECoverage_Device <NSObject, IDECoverage_Base>
@property(readonly, nonatomic) BOOL ide_coverage_isSimulator;
@property(readonly, copy, nonatomic) NSString *ide_coverage_device_name;
@property(readonly, copy, nonatomic) NSString *ide_coverage_device_osVersion;
@property(readonly, copy, nonatomic) NSString *ide_coverage_device_modelName;
@property(readonly, copy, nonatomic) NSString *ide_coverage_deviceID;
@property(readonly, copy, nonatomic) NSString *ide_coverage_UTI;
@end

@protocol IDECoverage_File <NSObject, IDECoverage_Base>
@property(readonly, copy, nonatomic) NSString *ide_coverage_filePath;
@property(readonly, copy, nonatomic) NSArray *ide_coverage_methods;
@property(readonly, nonatomic) unsigned long long ide_coverage_methodsCount;
@end

@protocol IDECoverage_Method <NSObject, IDECoverage_Base>
@property(readonly, copy, nonatomic) NSImage *ide_coverage_image;
@property(readonly, nonatomic) unsigned long long ide_coverage_devicesCount;
@end

@protocol IDECoverage_RootObject <NSObject, IDECoverage_Base>
@property(readonly, nonatomic) BOOL ide_coverage_supportsJumpToSourceEditor;
@property(readonly, nonatomic) BOOL ide_coverage_showChangeColumn;
@property(readonly, nonatomic) BOOL ide_coverage_lazilyFetchesData;
@property(readonly, copy, nonatomic) NSArray *ide_coverage_targets;
@property(readonly, nonatomic) unsigned long long ide_coverage_targetCount;
@end

@protocol IDECoverage_Target <NSObject, IDECoverage_Base>
@property(readonly, copy, nonatomic) NSArray *ide_coverage_files;
@property(readonly, nonatomic) unsigned long long ide_coverage_filesCount;
@end

@protocol IDEKeyDrivenNavigableItemRepresentedObject <NSObject>
@property(readonly) NSString *navigableItem_name;

@optional
@property(readonly) NSString *navigableItem_groupIdentifier;
@property(readonly) DVTDocumentLocation *navigableItem_contentDocumentLocation;
@property(readonly) DVTFileDataType *navigableItem_documentType;
@property(readonly) IDEFileReference *navigableItem_fileReference;
@property(readonly) BOOL navigableItem_isLeaf;
@property(readonly) BOOL navigableItem_isMajorGroup;
@property(readonly) NSString *navigableItem_toolTip;
@property(readonly) NSImage *navigableItem_image;
- (DVTDocumentLocation *)navigableItem_contentDocumentLocationInDocumentURL:(NSURL *)arg1;
@end

@protocol IDELogViewControllerDelegate <NSObject>
- (void)logViewController:(IDELogViewController *)arg1 selectedIndexPathsDidChange:(NSArray *)arg2;
- (DVTDocumentLocation *)logViewController:(IDELogViewController *)arg1 replacementDocumentLocationForOriginalDocumentLocation:(DVTDocumentLocation *)arg2;
@end

@protocol IDETestReportTestRunFetcher <NSObject>
- (void)fetchTestRunsForTests:(NSDictionary *)arg1 rootObject:(id)arg2 completionHandler:(void (^)(NSDictionary *))arg3;
@end

@protocol IDETestReport_Base <NSObject>
@property(readonly, copy, nonatomic) NSString *ide_testReport_base_identifier;
@end

@protocol IDETestReport_Device <NSObject>
@property(readonly, copy, nonatomic) NSString *ide_testReport_device_platformName;
@property(readonly, nonatomic) NSImage *ide_testReport_device_statusImage;
@property(readonly, copy, nonatomic) NSString *ide_testReport_device_architecture;
@property(readonly, copy, nonatomic) NSString *ide_testReport_device_osVersion;
@property(readonly, copy, nonatomic) NSString *ide_testReport_device_modelName;
@property(readonly, nonatomic) BOOL ide_testReport_device_isSimulator;
@property(readonly, copy, nonatomic) NSString *ide_testReport_device_UTI;
@property(readonly, copy, nonatomic) NSString *ide_testReport_device_name;
@property(readonly, copy, nonatomic) NSString *ide_testReport_device_identifier;
@end

@protocol IDETestReport_FailureSummary <NSObject>
@property(readonly, nonatomic) long long ide_testReport_failureSummary_lineNumber;
@property(readonly, copy, nonatomic) NSString *ide_testReport_failureSummary_fileName;
@property(readonly, copy, nonatomic) NSString *ide_testReport_failureSummary_message;
@end

@protocol IDETestReport_PerfMetric <NSObject>
@property(readonly, nonatomic) NSArray *ide_testReport_perfMetric_iterations;
@property(readonly, copy, nonatomic) NSString *ide_testReport_perfMetric_baselineIdentifier;
@property(readonly, nonatomic) NSNumber *ide_testReport_perfMetric_maxPercentRelativeStandardDeviation;
@property(readonly, nonatomic) double ide_testReport_perfMetric_maxPercentImprovement;
@property(readonly, nonatomic) NSNumber *ide_testReport_perfMetric_maxPercentRegression;
@property(readonly, copy, nonatomic) NSString *ide_testReport_perfMetric_identifier;
@property(readonly, nonatomic) NSNumber *ide_testReport_perfMetric_baseline;
@property(readonly, nonatomic) double ide_testReport_perfMetric_rsd;
@property(readonly, nonatomic) double ide_testReport_perfMetric_max;
@property(readonly, nonatomic) double ide_testReport_perfMetric_min;
@property(readonly, nonatomic) double ide_testReport_perfMetric_avg;
@property(readonly, copy, nonatomic) NSString *ide_testReport_perfMetric_unit;
@property(readonly, copy, nonatomic) NSString *ide_testReport_perfMetric_name;
@end

@protocol IDETestReport_RemoteAsset <NSObject>
@property(readonly, nonatomic) unsigned long long ide_testReport_remoteAsset_size;
@property(readonly, copy, nonatomic) NSURL *ide_testReport_remoteAsset_downloadURL;
@property(readonly, copy, nonatomic) NSString *ide_testReport_remoteAsset_fileName;
@end

@protocol IDETestReport_RootObject <NSObject>
@property(readonly, nonatomic) BOOL ide_testReport_test_lazyTestRunFetchesUseNewBatchAPI;
@property(readonly, nonatomic) BOOL ide_testReport_test_fetchesTestRunsLazily;
@property(readonly, copy, nonatomic) NSArray *ide_testReport_rootObject_perfMetricNames;
@property(readonly, copy, nonatomic) NSArray *ide_testReport_rootObject_devices;
- (NSArray *)ide_testReport_rootObject_includeGroupsWithPassedTests:(BOOL)arg1 includeFailingTests:(BOOL)arg2 includeOnlyPerfTests:(BOOL)arg3;
@end

@protocol IDETestReport_Test <NSObject, IDETestReport_Base>
@property(readonly, nonatomic) BOOL ide_testReport_test_hasActivities;
@property(readonly, copy, nonatomic) NSString *ide_testReport_test_keyPath;
@property(readonly, copy, nonatomic) NSString *ide_testReport_test_UUID;
@property(readonly, copy, nonatomic) NSString *ide_testReport_test_missingBaselineInfo;
@property(readonly, nonatomic) BOOL ide_testReport_test_passed;
@property(readonly, nonatomic) NSImage *ide_testReport_test_statusImage;
@property(readonly, copy, nonatomic) NSString *ide_testReport_test_testClassName;
@property(readonly, copy, nonatomic) NSString *ide_testReport_test_testName;
@property(readonly, copy, nonatomic) NSArray *ide_testReport_test_testRuns;
@property(readonly, nonatomic) BOOL ide_testReport_test_fetchesTestRunsLazily;
@property(readonly, copy, nonatomic) NSArray *ide_testReport_test_perfMetrics;

@optional
- (void)ide_testReport_test_fetchTestsWithCompletionHandler:(void (^)(NSArray *))arg1;
@end

@protocol IDETestReport_TestActivity <NSObject>
@property(readonly, nonatomic) BOOL ide_testReport_testActivity_containsFailure;
@property(readonly, copy, nonatomic) NSArray *ide_testReport_testActivity_subactivities;
@property(readonly, copy, nonatomic) id ide_testReport_testActivity_screenshot;
@property(readonly, copy, nonatomic) NSDate *ide_testReport_testActivity_finishTime;
@property(readonly, copy, nonatomic) NSDate *ide_testReport_testActivity_startTime;
@property(readonly, nonatomic) double ide_testReport_testActivity_duration;
@property(readonly, copy, nonatomic) NSString *ide_testReport_testActivity_UUID;
@property(readonly, copy, nonatomic) NSString *ide_testReport_testActivity_title;
@end

@protocol IDETestReport_TestGroup <NSObject, IDETestReport_Base>
@property(readonly, copy, nonatomic) NSString *ide_testReport_testGroup_testTargetName;
@property(readonly, copy, nonatomic) NSString *ide_testReport_testGroup_groupName;
- (NSArray *)ide_sharedTests_testGroup_includePassingTests:(BOOL)arg1 includeFailingTests:(BOOL)arg2 includeOnlyPerfTests:(BOOL)arg3;
@end

@protocol IDETestReport_TestRun <NSObject>
@property(readonly, copy, nonatomic) NSArray *ide_testReport_testRun_activities;
@property(readonly, copy, nonatomic) NSString *ide_testReport_testRun_testableBlueprintPath;
@property(readonly, copy, nonatomic) NSString *ide_testReport_testRun_testableBlueprintName;
@property(readonly, copy, nonatomic) NSArray *ide_testReport_testRun_failureSummaries;
@property(readonly, copy, nonatomic) NSString *ide_testReport_testRun_UUID;
@property(readonly, nonatomic) BOOL ide_testReport_testRun_passed;
@property(readonly, nonatomic) NSImage *ide_testReport_testRun_statusImage;
@property(readonly, nonatomic) id <IDETestReport_Device> ide_testReport_testRun_testedDevice;
@property(readonly, copy, nonatomic) NSString *ide_testReport_testRun_testClassName;
@property(readonly, copy, nonatomic) NSString *ide_testReport_testRun_testName;
@property(readonly, copy, nonatomic) NSArray *ide_testReport_testRun_perfMetrics;

@optional
@property(readonly, nonatomic) IDESchemeActionsInvocationRecord *ide_testReport_testRun_schemeActionsInvocationRecord;
@property(readonly, nonatomic) BOOL ide_testReport_testRun_fetchesSchemeActionsInvocationRecordAsync;
@property(readonly, nonatomic) IDESchemeActionRunDestinationRecord *ide_testReport_testRun_schemeActionRunDestinationRecord;
- (void)ide_testReport_testRun_schemeActionsInvocationRecord:(void (^)(IDESchemeActionsInvocationRecord *))arg1;
@end

@protocol NSAccessibilityElement <NSObject>
- (id)accessibilityParent;
- (struct CGRect)accessibilityFrame;

@optional
- (NSString *)accessibilityIdentifier;
- (BOOL)isAccessibilityFocused;
@end

@protocol NSAccessibilityStaticText <NSAccessibilityElement>
- (NSString *)accessibilityValue;

@optional
- (struct _NSRange)accessibilityVisibleCharacterRange;
- (NSAttributedString *)accessibilityAttributedStringForRange:(struct _NSRange)arg1;
@end

@protocol NSControlTextEditingDelegate <NSObject>

@optional
- (NSArray *)control:(NSControl *)arg1 textView:(NSTextView *)arg2 completions:(NSArray *)arg3 forPartialWordRange:(struct _NSRange)arg4 indexOfSelectedItem:(long long *)arg5;
- (BOOL)control:(NSControl *)arg1 textView:(NSTextView *)arg2 doCommandBySelector:(SEL)arg3;
- (BOOL)control:(NSControl *)arg1 isValidObject:(id)arg2;
- (void)control:(NSControl *)arg1 didFailToValidatePartialString:(NSString *)arg2 errorDescription:(NSString *)arg3;
- (BOOL)control:(NSControl *)arg1 didFailToFormatString:(NSString *)arg2 errorDescription:(NSString *)arg3;
- (BOOL)control:(NSControl *)arg1 textShouldEndEditing:(NSText *)arg2;
- (BOOL)control:(NSControl *)arg1 textShouldBeginEditing:(NSText *)arg2;
@end

@protocol NSNetServiceBrowserDelegate <NSObject>

@optional
- (void)netServiceBrowser:(NSNetServiceBrowser *)arg1 didRemoveService:(NSNetService *)arg2 moreComing:(BOOL)arg3;
- (void)netServiceBrowser:(NSNetServiceBrowser *)arg1 didRemoveDomain:(NSString *)arg2 moreComing:(BOOL)arg3;
- (void)netServiceBrowser:(NSNetServiceBrowser *)arg1 didFindService:(NSNetService *)arg2 moreComing:(BOOL)arg3;
- (void)netServiceBrowser:(NSNetServiceBrowser *)arg1 didFindDomain:(NSString *)arg2 moreComing:(BOOL)arg3;
- (void)netServiceBrowser:(NSNetServiceBrowser *)arg1 didNotSearch:(NSDictionary *)arg2;
- (void)netServiceBrowserDidStopSearch:(NSNetServiceBrowser *)arg1;
- (void)netServiceBrowserWillSearch:(NSNetServiceBrowser *)arg1;
@end

@protocol NSNetServiceDelegate <NSObject>

@optional
- (void)netService:(NSNetService *)arg1 didAcceptConnectionWithInputStream:(NSInputStream *)arg2 outputStream:(NSOutputStream *)arg3;
- (void)netService:(NSNetService *)arg1 didUpdateTXTRecordData:(NSData *)arg2;
- (void)netServiceDidStop:(NSNetService *)arg1;
- (void)netService:(NSNetService *)arg1 didNotResolve:(NSDictionary *)arg2;
- (void)netServiceDidResolveAddress:(NSNetService *)arg1;
- (void)netServiceWillResolve:(NSNetService *)arg1;
- (void)netService:(NSNetService *)arg1 didNotPublish:(NSDictionary *)arg2;
- (void)netServiceDidPublish:(NSNetService *)arg1;
- (void)netServiceWillPublish:(NSNetService *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (BOOL)respondsToSelector:(SEL)arg1;
- (BOOL)conformsToProtocol:(Protocol *)arg1;
- (BOOL)isMemberOfClass:(Class)arg1;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (BOOL)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSOutlineViewDataSource <NSObject>

@optional
- (NSArray *)outlineView:(NSOutlineView *)arg1 namesOfPromisedFilesDroppedAtDestination:(NSURL *)arg2 forDraggedItems:(NSArray *)arg3;
- (BOOL)outlineView:(NSOutlineView *)arg1 acceptDrop:(id <NSDraggingInfo>)arg2 item:(id)arg3 childIndex:(long long)arg4;
- (unsigned long long)outlineView:(NSOutlineView *)arg1 validateDrop:(id <NSDraggingInfo>)arg2 proposedItem:(id)arg3 proposedChildIndex:(long long)arg4;
- (void)outlineView:(NSOutlineView *)arg1 updateDraggingItemsForDrag:(id <NSDraggingInfo>)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 writeItems:(NSArray *)arg2 toPasteboard:(NSPasteboard *)arg3;
- (void)outlineView:(NSOutlineView *)arg1 draggingSession:(NSDraggingSession *)arg2 endedAtPoint:(struct CGPoint)arg3 operation:(unsigned long long)arg4;
- (void)outlineView:(NSOutlineView *)arg1 draggingSession:(NSDraggingSession *)arg2 willBeginAtPoint:(struct CGPoint)arg3 forItems:(NSArray *)arg4;
- (id <NSPasteboardWriting>)outlineView:(NSOutlineView *)arg1 pasteboardWriterForItem:(id)arg2;
- (void)outlineView:(NSOutlineView *)arg1 sortDescriptorsDidChange:(NSArray *)arg2;
- (id)outlineView:(NSOutlineView *)arg1 persistentObjectForItem:(id)arg2;
- (id)outlineView:(NSOutlineView *)arg1 itemForPersistentObject:(id)arg2;
- (void)outlineView:(NSOutlineView *)arg1 setObjectValue:(id)arg2 forTableColumn:(NSTableColumn *)arg3 byItem:(id)arg4;
- (id)outlineView:(NSOutlineView *)arg1 objectValueForTableColumn:(NSTableColumn *)arg2 byItem:(id)arg3;
- (BOOL)outlineView:(NSOutlineView *)arg1 isItemExpandable:(id)arg2;
- (id)outlineView:(NSOutlineView *)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (long long)outlineView:(NSOutlineView *)arg1 numberOfChildrenOfItem:(id)arg2;
@end

@protocol NSOutlineViewDelegate <NSControlTextEditingDelegate>

@optional
- (void)outlineViewItemDidCollapse:(NSNotification *)arg1;
- (void)outlineViewItemWillCollapse:(NSNotification *)arg1;
- (void)outlineViewItemDidExpand:(NSNotification *)arg1;
- (void)outlineViewItemWillExpand:(NSNotification *)arg1;
- (void)outlineViewSelectionIsChanging:(NSNotification *)arg1;
- (void)outlineViewColumnDidResize:(NSNotification *)arg1;
- (void)outlineViewColumnDidMove:(NSNotification *)arg1;
- (void)outlineViewSelectionDidChange:(NSNotification *)arg1;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldShowOutlineCellForItem:(id)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldReorderColumn:(long long)arg2 toColumn:(long long)arg3;
- (double)outlineView:(NSOutlineView *)arg1 sizeToFitWidthOfColumn:(long long)arg2;
- (void)outlineView:(NSOutlineView *)arg1 willDisplayOutlineCell:(id)arg2 forTableColumn:(NSTableColumn *)arg3 item:(id)arg4;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldCollapseItem:(id)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldExpandItem:(id)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 isGroupItem:(id)arg2;
- (NSCell *)outlineView:(NSOutlineView *)arg1 dataCellForTableColumn:(NSTableColumn *)arg2 item:(id)arg3;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldTrackCell:(NSCell *)arg2 forTableColumn:(NSTableColumn *)arg3 item:(id)arg4;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldShowCellExpansionForTableColumn:(NSTableColumn *)arg2 item:(id)arg3;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldTypeSelectForEvent:(NSEvent *)arg2 withCurrentSearchString:(NSString *)arg3;
- (id)outlineView:(NSOutlineView *)arg1 nextTypeSelectMatchFromItem:(id)arg2 toItem:(id)arg3 forString:(NSString *)arg4;
- (NSString *)outlineView:(NSOutlineView *)arg1 typeSelectStringForTableColumn:(NSTableColumn *)arg2 item:(id)arg3;
- (double)outlineView:(NSOutlineView *)arg1 heightOfRowByItem:(id)arg2;
- (NSString *)outlineView:(NSOutlineView *)arg1 toolTipForCell:(NSCell *)arg2 rect:(struct CGRect *)arg3 tableColumn:(NSTableColumn *)arg4 item:(id)arg5 mouseLocation:(struct CGPoint)arg6;
- (void)outlineView:(NSOutlineView *)arg1 didDragTableColumn:(NSTableColumn *)arg2;
- (void)outlineView:(NSOutlineView *)arg1 didClickTableColumn:(NSTableColumn *)arg2;
- (void)outlineView:(NSOutlineView *)arg1 mouseDownInHeaderOfTableColumn:(NSTableColumn *)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldSelectTableColumn:(NSTableColumn *)arg2;
- (NSIndexSet *)outlineView:(NSOutlineView *)arg1 selectionIndexesForProposedSelection:(NSIndexSet *)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldSelectItem:(id)arg2;
- (BOOL)selectionShouldChangeInOutlineView:(NSOutlineView *)arg1;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldEditTableColumn:(NSTableColumn *)arg2 item:(id)arg3;
- (void)outlineView:(NSOutlineView *)arg1 willDisplayCell:(id)arg2 forTableColumn:(NSTableColumn *)arg3 item:(id)arg4;
- (void)outlineView:(NSOutlineView *)arg1 didRemoveRowView:(NSTableRowView *)arg2 forRow:(long long)arg3;
- (void)outlineView:(NSOutlineView *)arg1 didAddRowView:(NSTableRowView *)arg2 forRow:(long long)arg3;
- (NSTableRowView *)outlineView:(NSOutlineView *)arg1 rowViewForItem:(id)arg2;
- (NSView *)outlineView:(NSOutlineView *)arg1 viewForTableColumn:(NSTableColumn *)arg2 item:(id)arg3;
@end

@protocol NSPopoverDelegate <NSObject>

@optional
- (void)popoverDidClose:(NSNotification *)arg1;
- (void)popoverWillClose:(NSNotification *)arg1;
- (void)popoverDidShow:(NSNotification *)arg1;
- (void)popoverWillShow:(NSNotification *)arg1;
- (NSWindow *)detachableWindowForPopover:(NSPopover *)arg1;
- (void)popoverDidDetach:(NSPopover *)arg1;
- (BOOL)popoverShouldDetach:(NSPopover *)arg1;
- (BOOL)popoverShouldClose:(NSPopover *)arg1;
@end

@protocol NSSplitViewDelegate <NSObject>

@optional
- (void)splitViewDidResizeSubviews:(NSNotification *)arg1;
- (void)splitViewWillResizeSubviews:(NSNotification *)arg1;
- (struct CGRect)splitView:(NSSplitView *)arg1 additionalEffectiveRectOfDividerAtIndex:(long long)arg2;
- (struct CGRect)splitView:(NSSplitView *)arg1 effectiveRect:(struct CGRect)arg2 forDrawnRect:(struct CGRect)arg3 ofDividerAtIndex:(long long)arg4;
- (BOOL)splitView:(NSSplitView *)arg1 shouldHideDividerAtIndex:(long long)arg2;
- (BOOL)splitView:(NSSplitView *)arg1 shouldAdjustSizeOfSubview:(NSView *)arg2;
- (void)splitView:(NSSplitView *)arg1 resizeSubviewsWithOldSize:(struct CGSize)arg2;
- (double)splitView:(NSSplitView *)arg1 constrainSplitPosition:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(NSSplitView *)arg1 constrainMaxCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(NSSplitView *)arg1 constrainMinCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (BOOL)splitView:(NSSplitView *)arg1 shouldCollapseSubview:(NSView *)arg2 forDoubleClickOnDividerAtIndex:(long long)arg3;
- (BOOL)splitView:(NSSplitView *)arg1 canCollapseSubview:(NSView *)arg2;
@end

@protocol NSTabViewDelegate <NSObject>

@optional
- (void)tabViewDidChangeNumberOfTabViewItems:(NSTabView *)arg1;
- (void)tabView:(NSTabView *)arg1 didSelectTabViewItem:(NSTabViewItem *)arg2;
- (void)tabView:(NSTabView *)arg1 willSelectTabViewItem:(NSTabViewItem *)arg2;
- (BOOL)tabView:(NSTabView *)arg1 shouldSelectTabViewItem:(NSTabViewItem *)arg2;
@end

@protocol NSTableViewDataSource <NSObject>

@optional
- (NSArray *)tableView:(NSTableView *)arg1 namesOfPromisedFilesDroppedAtDestination:(NSURL *)arg2 forDraggedRowsWithIndexes:(NSIndexSet *)arg3;
- (BOOL)tableView:(NSTableView *)arg1 acceptDrop:(id <NSDraggingInfo>)arg2 row:(long long)arg3 dropOperation:(unsigned long long)arg4;
- (unsigned long long)tableView:(NSTableView *)arg1 validateDrop:(id <NSDraggingInfo>)arg2 proposedRow:(long long)arg3 proposedDropOperation:(unsigned long long)arg4;
- (BOOL)tableView:(NSTableView *)arg1 writeRowsWithIndexes:(NSIndexSet *)arg2 toPasteboard:(NSPasteboard *)arg3;
- (void)tableView:(NSTableView *)arg1 updateDraggingItemsForDrag:(id <NSDraggingInfo>)arg2;
- (void)tableView:(NSTableView *)arg1 draggingSession:(NSDraggingSession *)arg2 endedAtPoint:(struct CGPoint)arg3 operation:(unsigned long long)arg4;
- (void)tableView:(NSTableView *)arg1 draggingSession:(NSDraggingSession *)arg2 willBeginAtPoint:(struct CGPoint)arg3 forRowIndexes:(NSIndexSet *)arg4;
- (id <NSPasteboardWriting>)tableView:(NSTableView *)arg1 pasteboardWriterForRow:(long long)arg2;
- (void)tableView:(NSTableView *)arg1 sortDescriptorsDidChange:(NSArray *)arg2;
- (void)tableView:(NSTableView *)arg1 setObjectValue:(id)arg2 forTableColumn:(NSTableColumn *)arg3 row:(long long)arg4;
- (id)tableView:(NSTableView *)arg1 objectValueForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(NSTableView *)arg1;
@end

@protocol NSTableViewDelegate <NSControlTextEditingDelegate>

@optional
- (void)tableViewSelectionIsChanging:(NSNotification *)arg1;
- (void)tableViewColumnDidResize:(NSNotification *)arg1;
- (void)tableViewColumnDidMove:(NSNotification *)arg1;
- (void)tableViewSelectionDidChange:(NSNotification *)arg1;
- (NSArray *)tableView:(NSTableView *)arg1 rowActionsForRow:(long long)arg2 edge:(long long)arg3;
- (BOOL)tableView:(NSTableView *)arg1 shouldReorderColumn:(long long)arg2 toColumn:(long long)arg3;
- (double)tableView:(NSTableView *)arg1 sizeToFitWidthOfColumn:(long long)arg2;
- (BOOL)tableView:(NSTableView *)arg1 isGroupRow:(long long)arg2;
- (BOOL)tableView:(NSTableView *)arg1 shouldTypeSelectForEvent:(NSEvent *)arg2 withCurrentSearchString:(NSString *)arg3;
- (long long)tableView:(NSTableView *)arg1 nextTypeSelectMatchFromRow:(long long)arg2 toRow:(long long)arg3 forString:(NSString *)arg4;
- (NSString *)tableView:(NSTableView *)arg1 typeSelectStringForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (double)tableView:(NSTableView *)arg1 heightOfRow:(long long)arg2;
- (void)tableView:(NSTableView *)arg1 didDragTableColumn:(NSTableColumn *)arg2;
- (void)tableView:(NSTableView *)arg1 didClickTableColumn:(NSTableColumn *)arg2;
- (void)tableView:(NSTableView *)arg1 mouseDownInHeaderOfTableColumn:(NSTableColumn *)arg2;
- (BOOL)tableView:(NSTableView *)arg1 shouldSelectTableColumn:(NSTableColumn *)arg2;
- (NSIndexSet *)tableView:(NSTableView *)arg1 selectionIndexesForProposedSelection:(NSIndexSet *)arg2;
- (BOOL)tableView:(NSTableView *)arg1 shouldSelectRow:(long long)arg2;
- (BOOL)selectionShouldChangeInTableView:(NSTableView *)arg1;
- (NSCell *)tableView:(NSTableView *)arg1 dataCellForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (BOOL)tableView:(NSTableView *)arg1 shouldTrackCell:(NSCell *)arg2 forTableColumn:(NSTableColumn *)arg3 row:(long long)arg4;
- (BOOL)tableView:(NSTableView *)arg1 shouldShowCellExpansionForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (NSString *)tableView:(NSTableView *)arg1 toolTipForCell:(NSCell *)arg2 rect:(struct CGRect *)arg3 tableColumn:(NSTableColumn *)arg4 row:(long long)arg5 mouseLocation:(struct CGPoint)arg6;
- (BOOL)tableView:(NSTableView *)arg1 shouldEditTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (void)tableView:(NSTableView *)arg1 willDisplayCell:(id)arg2 forTableColumn:(NSTableColumn *)arg3 row:(long long)arg4;
- (void)tableView:(NSTableView *)arg1 didRemoveRowView:(NSTableRowView *)arg2 forRow:(long long)arg3;
- (void)tableView:(NSTableView *)arg1 didAddRowView:(NSTableRowView *)arg2 forRow:(long long)arg3;
- (NSTableRowView *)tableView:(NSTableView *)arg1 rowViewForRow:(long long)arg2;
- (NSView *)tableView:(NSTableView *)arg1 viewForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
@end

@protocol NSTextDelegate <NSObject>

@optional
- (void)textDidChange:(NSNotification *)arg1;
- (void)textDidEndEditing:(NSNotification *)arg1;
- (void)textDidBeginEditing:(NSNotification *)arg1;
- (BOOL)textShouldEndEditing:(NSText *)arg1;
- (BOOL)textShouldBeginEditing:(NSText *)arg1;
@end

@protocol NSURLConnectionDataDelegate <NSURLConnectionDelegate>

@optional
- (void)connectionDidFinishLoading:(NSURLConnection *)arg1;
- (NSCachedURLResponse *)connection:(NSURLConnection *)arg1 willCacheResponse:(NSCachedURLResponse *)arg2;
- (void)connection:(NSURLConnection *)arg1 didSendBodyData:(long long)arg2 totalBytesWritten:(long long)arg3 totalBytesExpectedToWrite:(long long)arg4;
- (NSInputStream *)connection:(NSURLConnection *)arg1 needNewBodyStream:(NSURLRequest *)arg2;
- (void)connection:(NSURLConnection *)arg1 didReceiveData:(NSData *)arg2;
- (void)connection:(NSURLConnection *)arg1 didReceiveResponse:(NSURLResponse *)arg2;
- (NSURLRequest *)connection:(NSURLConnection *)arg1 willSendRequest:(NSURLRequest *)arg2 redirectResponse:(NSURLResponse *)arg3;
@end

@protocol NSURLConnectionDelegate <NSObject>

@optional
- (void)connection:(NSURLConnection *)arg1 didCancelAuthenticationChallenge:(NSURLAuthenticationChallenge *)arg2;
- (void)connection:(NSURLConnection *)arg1 didReceiveAuthenticationChallenge:(NSURLAuthenticationChallenge *)arg2;
- (BOOL)connection:(NSURLConnection *)arg1 canAuthenticateAgainstProtectionSpace:(NSURLProtectionSpace *)arg2;
- (void)connection:(NSURLConnection *)arg1 willSendRequestForAuthenticationChallenge:(NSURLAuthenticationChallenge *)arg2;
- (BOOL)connectionShouldUseCredentialStorage:(NSURLConnection *)arg1;
- (void)connection:(NSURLConnection *)arg1 didFailWithError:(NSError *)arg2;
@end

@protocol NSURLSessionDelegate <NSObject>

@optional
- (void)URLSessionDidFinishEventsForBackgroundURLSession:(NSURLSession *)arg1;
- (void)URLSession:(NSURLSession *)arg1 didReceiveChallenge:(NSURLAuthenticationChallenge *)arg2 completionHandler:(void (^)(long long, NSURLCredential *))arg3;
- (void)URLSession:(NSURLSession *)arg1 didBecomeInvalidWithError:(NSError *)arg2;
@end

@protocol NSURLSessionDownloadDelegate <NSURLSessionTaskDelegate>
- (void)URLSession:(NSURLSession *)arg1 downloadTask:(NSURLSessionDownloadTask *)arg2 didFinishDownloadingToURL:(NSURL *)arg3;

@optional
- (void)URLSession:(NSURLSession *)arg1 downloadTask:(NSURLSessionDownloadTask *)arg2 didResumeAtOffset:(long long)arg3 expectedTotalBytes:(long long)arg4;
- (void)URLSession:(NSURLSession *)arg1 downloadTask:(NSURLSessionDownloadTask *)arg2 didWriteData:(long long)arg3 totalBytesWritten:(long long)arg4 totalBytesExpectedToWrite:(long long)arg5;
@end

@protocol NSURLSessionTaskDelegate <NSURLSessionDelegate>

@optional
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 didCompleteWithError:(NSError *)arg3;
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 didSendBodyData:(long long)arg3 totalBytesSent:(long long)arg4 totalBytesExpectedToSend:(long long)arg5;
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 needNewBodyStream:(void (^)(NSInputStream *))arg3;
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 didReceiveChallenge:(NSURLAuthenticationChallenge *)arg3 completionHandler:(void (^)(long long, NSURLCredential *))arg4;
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 willPerformHTTPRedirection:(NSHTTPURLResponse *)arg3 newRequest:(NSURLRequest *)arg4 completionHandler:(void (^)(NSURLRequest *))arg5;
@end

@protocol XCSBotSupportingEditorHostedViewController <NSObject>
+ (BOOL)instancesCanContainDocumentLocation:(DVTDocumentLocation *)arg1;
@property(readonly, copy) NSArray *currentSelectedItems;
@property(readonly, copy) NSArray *currentSelectedDocumentLocations;
@property(retain, nonatomic) XCSBotSupportingEditor *botSupportingEditor;
@property(retain, nonatomic) XCSBot *bot;
@property(retain, nonatomic) XCSIntegration *integration;
- (void)selectDocumentLocations:(NSArray *)arg1;
@end

@protocol XCSServiceErrorDelegate <NSObject>

@optional
- (void)service:(XCSService *)arg1 didEncounterError:(NSError *)arg2 withRequest:(XCSHTTPRequest *)arg3 proceed:(void (^)(unsigned long long, NSError *))arg4;
@end

@protocol XCSUIBotDefinition_SCMEditor_AssistantCallback
- (void)cancelSession;
- (void)goNextOrFinish:(id)arg1;
@end

@protocol XCSUIBotDefintionEditorViewController <NSObject, DVTInvalidation>
+ (NSString *)title;
@property(retain, nonatomic) XCSUIBotDefinitionContext *definitionContext;

@optional
- (void)commitChanges;
@end

@protocol XCSUIBotLogEditorScopeBarDelegate <NSObject>
- (XCSIntegration *)integrationForLogDownloading;
- (void)logEditorScopeBar:(XCSUIBotLogScopeBar *)arg1 searchTextChanged:(NSString *)arg2;
- (void)logEditorScopeBar:(XCSUIBotLogScopeBar *)arg1 showAllResultsChanged:(BOOL)arg2;
- (void)logEditorScopeBar:(XCSUIBotLogScopeBar *)arg1 stateChanged:(int)arg2;
@end

@protocol XCSUIBotSummaryStackedBarGraphDelegate
- (NSColor *)emptyColumnColor;
- (void)mouseExitedGraph:(XCSUIBotSummaryStackedBarGraph *)arg1 event:(NSEvent *)arg2;
- (void)mouseClickedOnGraph:(XCSUIBotSummaryStackedBarGraph *)arg1 column:(XCSUIBotSummaryStackedBarGraphColumn *)arg2 event:(NSEvent *)arg3;
- (void)mouseMovedOverGraph:(XCSUIBotSummaryStackedBarGraph *)arg1 column:(XCSUIBotSummaryStackedBarGraphColumn *)arg2 event:(NSEvent *)arg3;
@end

@protocol XCSUICreateBotRepositoryTableCellViewDelegate <NSObject>
- (void)updateCredentialsToResolveIssue:(XCSUICreateBotRepositoryIssue *)arg1;
@end

@protocol XCSUICreateBotTriggerChildViewController
@property(retain) XCSTrigger *trigger;
- (void)saveTrigger;
- (NSString *)titleForDisplay;
@end

@protocol XCSUICreateBotTriggerCreateCellViewDelegate <NSObject>
- (void)triggerCreateCell:(XCSUICreateBotTriggerCreateCellView *)arg1 addTriggerOfType:(unsigned long long)arg2;
@end

@protocol XCSUICreateBotTriggerViewControllerDelegate <NSObject>
- (void)triggerViewControllerRemovedTrigger:(XCSUICreateBotTriggerViewController *)arg1;
- (void)triggerViewController:(XCSUICreateBotTriggerViewController *)arg1 disclosed:(BOOL)arg2;
@end

@protocol XCSUIIntegrationCoverageViewController <NSObject>
@property(readonly, nonatomic) IDECoverageReportViewController *installedReportViewController;
@property(retain, nonatomic) NSArray *itemIdentifiersToExpand;
- (NSArray *)currentlyExpandedCoverageItemIdentifiers;
@end

@protocol XCSUIIntegrationSteppedProgressViewLabelProvider <NSObject>
- (NSString *)informativeStringForSteppedProgressView:(XCSUIIntegrationSteppedProgressView *)arg1 integrationStep:(long long)arg2;
- (NSString *)labelForSteppedProgressView:(XCSUIIntegrationSteppedProgressView *)arg1 integrationStep:(long long)arg2;
@end

@protocol XCSUIStackedBarChartViewControllerDataSource <NSObject>
- (NSString *)stackedBarChartViewController:(XCSUIStackedBarChartViewController *)arg1 getIntegrationIdForColumn:(unsigned long long)arg2;
- (unsigned long long)stackedBarChartViewController:(XCSUIStackedBarChartViewController *)arg1 codeCoveragePercentageDeltaForColumn:(unsigned long long)arg2;
- (unsigned long long)stackedBarChartViewController:(XCSUIStackedBarChartViewController *)arg1 codeCoveragePercentageForColumn:(unsigned long long)arg2;
- (unsigned long long)stackedBarChartViewController:(XCSUIStackedBarChartViewController *)arg1 codeCoveragePreferenceForColumn:(unsigned long long)arg2;
- (BOOL)stackedBarChartViewController:(XCSUIStackedBarChartViewController *)arg1 isRunningIntegrationForColumn:(unsigned long long)arg2;
- (unsigned long long)stackedBarChartViewController:(XCSUIStackedBarChartViewController *)arg1 countOfFailedTestsForColumn:(unsigned long long)arg2;
- (unsigned long long)stackedBarChartViewController:(XCSUIStackedBarChartViewController *)arg1 countOfPassedTestsForColumn:(unsigned long long)arg2;
- (unsigned long long)stackedBarChartViewController:(XCSUIStackedBarChartViewController *)arg1 countOfTestsForColumn:(unsigned long long)arg2;
- (BOOL)stackedBarChartViewController:(XCSUIStackedBarChartViewController *)arg1 isTestingEnabledForColumn:(unsigned long long)arg2;
- (BOOL)stackedBarChartViewController:(XCSUIStackedBarChartViewController *)arg1 isPendingIntegrationForColumn:(unsigned long long)arg2;
- (BOOL)stackedBarChartViewController:(XCSUIStackedBarChartViewController *)arg1 didIntegrationTriggerFailForColumn:(unsigned long long)arg2;
- (BOOL)stackedBarChartViewController:(XCSUIStackedBarChartViewController *)arg1 didIntegrationGenerateWarningsOrIssuesForColumn:(unsigned long long)arg2;
- (BOOL)stackedBarChartViewController:(XCSUIStackedBarChartViewController *)arg1 didIntegrationFailWithBuildErrorsForColumn:(unsigned long long)arg2;
- (BOOL)stackedBarChartViewController:(XCSUIStackedBarChartViewController *)arg1 isBotCanceledForIntegrationForColumn:(unsigned long long)arg2;
- (BOOL)stackedBarChartViewController:(XCSUIStackedBarChartViewController *)arg1 didBotFailForIntegrationForColumn:(unsigned long long)arg2;
- (NSNumber *)stackedBarChartViewController:(XCSUIStackedBarChartViewController *)arg1 labelForColumn:(unsigned long long)arg2;
- (XCSBuildResultSummary *)stackedBarChartViewController:(XCSUIStackedBarChartViewController *)arg1 buildResultSummaryForColumn:(unsigned long long)arg2;
- (NSNumber *)stackedBarChartViewController:(XCSUIStackedBarChartViewController *)arg1 valueForStackedBarChartBar:(XCSUIStackedBarChartBar *)arg2 column:(unsigned long long)arg3;
- (unsigned long long)numberOfColumnsInStackedBarChartViewController:(XCSUIStackedBarChartViewController *)arg1;
@end

@protocol XCSUIStackedBarChartViewControllerDelegate <NSObject>
- (void)stackedBarChartViewController:(XCSUIStackedBarChartViewController *)arg1 userClickedOnGraphColumn:(XCSUIBotSummaryStackedBarGraphColumn *)arg2 event:(NSEvent *)arg3;
- (void)stackedBarChartViewController:(XCSUIStackedBarChartViewController *)arg1 userMousedOverGraphColumn:(XCSUIBotSummaryStackedBarGraphColumn *)arg2 event:(NSEvent *)arg3;
- (void)stackedBarChartViewController:(XCSUIStackedBarChartViewController *)arg1 userMouseExitedGraph:(id)arg2 event:(NSEvent *)arg3;
@end

@protocol __ARCLiteIndexedSubscripting__
- (void)setObject:(id)arg1 atIndexedSubscript:(unsigned long long)arg2;
- (id)objectAtIndexedSubscript:(unsigned long long)arg1;
@end

@protocol __ARCLiteKeyedSubscripting__
- (void)setObject:(id)arg1 forKeyedSubscript:(id)arg2;
- (id)objectForKeyedSubscript:(id)arg1;
@end

@interface IDEWorkspaceTabController (IDEWorkspaceTabController_XCSUIBotDefinitionContextAdditions)
- (id)schemeMatchingName:(id)arg1;
- (id)scheme;
@end

@interface XCSBot (XCSBot_IDEKit)
+ (void)componentsFromBotURL:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
+ (id)botURLForBotWithID:(id)arg1 server:(id)arg2;
- (long long)compare:(id)arg1;
- (id)botURL;
@end

@interface XCSBotSupportingEditor : IDEEditor <DVTReplacementViewDelegate>
{
    id <IDEContinuousIntegrationBotMonitor> _botMonitor;
    id _eventMonitor;
    XCSCommitHistory *_commitHistory;
    XCSIntegration *_integration;
    DVTTabChooserView *_chooserView;
    DVTBorderedView *_borderedView;
    DVTReplacementView *_replacementView;
    DVTObservingToken *_choiceUpdateToken;
    DVTObservingToken *_botUpdateToken;
    DVTObservingToken *_integrationUpdateToken;
    NSArray *_currentSelectedDocumentLocations;
    NSArray *_currentSelectedItems;
    DVTObservingToken *_currentSelectedDocumentLocationsUpdateToken;
    DVTObservingToken *_currentSelectedItemsUpdateToken;
    DVTObservingToken *_expandedCoverageItemsObservationToken;
    NSTextField *_integrationLabel;
    NSButton *_integrationLabelButton;
    DVTTabChooserView *_tabChooserView;
    NSButton *_downloadsButton;
    NSButton *_settingsButton;
    XCSUIIntegrationEditorHeaderView *_headerView;
    NSImageView *_headerImageView;
    XCSUIBotDefinitionEditorWindowController *_definitionEditorWindowController;
    NSArray *_currentlyExpandedCoverageItemIdentifiers;
}

+ (id)defaultViewNibBundle;
+ (id)defaultViewNibName;
+ (id)botSupportingEditorBackgroundColor;
@property(retain, nonatomic) NSArray *currentlyExpandedCoverageItemIdentifiers; // @synthesize currentlyExpandedCoverageItemIdentifiers=_currentlyExpandedCoverageItemIdentifiers;
@property(retain) XCSUIBotDefinitionEditorWindowController *definitionEditorWindowController; // @synthesize definitionEditorWindowController=_definitionEditorWindowController;
@property __weak NSImageView *headerImageView; // @synthesize headerImageView=_headerImageView;
@property __weak XCSUIIntegrationEditorHeaderView *headerView; // @synthesize headerView=_headerView;
@property __weak NSButton *settingsButton; // @synthesize settingsButton=_settingsButton;
@property __weak NSButton *downloadsButton; // @synthesize downloadsButton=_downloadsButton;
@property __weak DVTTabChooserView *tabChooserView; // @synthesize tabChooserView=_tabChooserView;
@property __weak NSButton *integrationLabelButton; // @synthesize integrationLabelButton=_integrationLabelButton;
@property __weak NSTextField *integrationLabel; // @synthesize integrationLabel=_integrationLabel;
@property(retain) DVTObservingToken *expandedCoverageItemsObservationToken; // @synthesize expandedCoverageItemsObservationToken=_expandedCoverageItemsObservationToken;
@property(retain) DVTObservingToken *currentSelectedItemsUpdateToken; // @synthesize currentSelectedItemsUpdateToken=_currentSelectedItemsUpdateToken;
@property(retain) DVTObservingToken *currentSelectedDocumentLocationsUpdateToken; // @synthesize currentSelectedDocumentLocationsUpdateToken=_currentSelectedDocumentLocationsUpdateToken;
@property(copy) NSArray *currentSelectedItems; // @synthesize currentSelectedItems=_currentSelectedItems;
@property(copy) NSArray *currentSelectedDocumentLocations; // @synthesize currentSelectedDocumentLocations=_currentSelectedDocumentLocations;
@property(retain) DVTObservingToken *integrationUpdateToken; // @synthesize integrationUpdateToken=_integrationUpdateToken;
@property(retain) DVTObservingToken *botUpdateToken; // @synthesize botUpdateToken=_botUpdateToken;
@property(retain) DVTObservingToken *choiceUpdateToken; // @synthesize choiceUpdateToken=_choiceUpdateToken;
@property __weak DVTReplacementView *replacementView; // @synthesize replacementView=_replacementView;
@property __weak DVTBorderedView *borderedView; // @synthesize borderedView=_borderedView;
@property __weak DVTTabChooserView *chooserView; // @synthesize chooserView=_chooserView;
@property(readonly, nonatomic) XCSIntegration *integration; // @synthesize integration=_integration;
- (void).cxx_destruct;
- (void)updateIntegrationLabels:(id)arg1 currentStep:(long long)arg2;
- (void)copyIntegrationID:(id)arg1;
- (void)toggleIntegrationLabel:(id)arg1;
- (void)editButton:(id)arg1;
- (void)cleanAndIntegrate:(id)arg1;
- (void)integrate:(id)arg1;
- (void)downloadsButton:(id)arg1;
- (void)selectDocumentLocations:(id)arg1;
- (id)botIntegration;
@property(readonly, nonatomic) XCSBot *bot;
- (void)replacementView:(id)arg1 willCloseViewController:(id)arg2;
- (void)replacementView:(id)arg1 didInstallViewController:(id)arg2;
- (void)updateDocumentLocationsWithControllerDocumentLocations:(id)arg1;
- (void)selectChoice:(id)arg1;
- (id)integrationInProgressChoices;
- (id)choices;
- (void)watchIntegration:(id)arg1;
- (void)updateViewsWithIntegration:(id)arg1 currentStep:(long long)arg2;
- (void)resizeLabelToFit:(id)arg1;
- (void)primitiveInvalidate;
- (void)viewWillUninstall;
- (void)viewDidInstall;
- (void)loadView;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XCSBotEditor : XCSBotSupportingEditor
{
    NSArray *_choices;
}

- (void).cxx_destruct;
- (id)choices;
- (void)viewDidInstall;
- (void)loadView;

@end

@interface XCSBotSupportingDocument : IDEEditorDocument
{
}

+ (id)documentLocationForBotSummaryDocumentLocation:(id)arg1 blueprint:(id)arg2 inWorkspace:(id)arg3;
+ (BOOL)shouldUnlockFileURLBeforeMakingChanges;
- (void)fetchGeniusResultsForDocumentLocations:(id)arg1 inWorkspace:(id)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;
- (void)updateBotIntegration:(id)arg1;
@property(readonly, nonatomic) XCSIntegration *botIntegration;
@property(readonly, nonatomic) XCSBot *bot;
- (id)displayName;
- (int)readOnlyStatus;
- (id)initForURL:(id)arg1 withContentsOfURL:(id)arg2 ofType:(id)arg3 error:(id *)arg4;

@end

@interface XCSBotEditorDocument : XCSBotSupportingDocument
{
    XCSBot *_fetchedBot;
}

- (void).cxx_destruct;
- (id)displayName;
- (id)botIntegration;
- (id)bot;
- (void)setFileURL:(id)arg1;

@end

@interface XCSBotIntegrationDocument : XCSBotSupportingDocument
{
    XCSIntegration *_fetchedIntegration;
}

- (void).cxx_destruct;
- (id)displayName;
- (id)bot;
- (id)botIntegration;
- (void)updateBotIntegration:(id)arg1;
- (void)setFileURL:(id)arg1;

@end

@interface XCSBotIntegrationEditor : XCSBotSupportingEditor
{
    DVTObservingToken *_botObserver;
    DVTObservingToken *_integrationObserver;
}

- (void).cxx_destruct;
- (void)showLogsTab:(id)arg1;
- (id)integrationInProgressChoices;
- (id)choices;
- (void)selectDocumentLocations:(id)arg1;
- (id)cachedChoiceWithTitle:(id)arg1;
- (void)primitiveInvalidate;
- (void)viewDidInstall;
- (void)loadView;

@end

@interface XCSBotLogDocumentLocation : DVTDocumentLocation
{
    id _activityLog;
}

@property(readonly) id activityLog; // @synthesize activityLog=_activityLog;
- (void).cxx_destruct;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)description;
- (id)initWithDocumentURL:(id)arg1 timestamp:(id)arg2 selectedActivityLog:(id)arg3;

@end

@interface XCSBotServiceDocument : XCSBotSupportingDocument
{
    XCSService *_service;
}

@property(retain, nonatomic) XCSService *service; // @synthesize service=_service;
- (void).cxx_destruct;
- (id)botIntegration;
- (id)bot;
- (id)displayName;
- (void)setFileURL:(id)arg1;

@end

@interface XCSBotServiceEditor : IDEEditor
{
    XCSService *_service;
    DVTLozengeTextField *_lozengeTextField;
    DVTBorderedView *_borderedView;
    NSTimer *_pollTimer;
    DVTObservingToken *_currentMaintenanceTasksObserver;
    NSView *_progressView;
    NSProgressIndicator *_progressIndicator;
    unsigned long long _maxMaintenanceTasks;
    NSTextField *_maintenanceTasksLabel;
}

@property __weak NSTextField *maintenanceTasksLabel; // @synthesize maintenanceTasksLabel=_maintenanceTasksLabel;
@property unsigned long long maxMaintenanceTasks; // @synthesize maxMaintenanceTasks=_maxMaintenanceTasks;
@property __weak NSProgressIndicator *progressIndicator; // @synthesize progressIndicator=_progressIndicator;
@property(retain) NSView *progressView; // @synthesize progressView=_progressView;
@property(retain) DVTObservingToken *currentMaintenanceTasksObserver; // @synthesize currentMaintenanceTasksObserver=_currentMaintenanceTasksObserver;
@property(retain) NSTimer *pollTimer; // @synthesize pollTimer=_pollTimer;
@property __weak DVTBorderedView *borderedView; // @synthesize borderedView=_borderedView;
@property __weak DVTLozengeTextField *lozengeTextField; // @synthesize lozengeTextField=_lozengeTextField;
@property(retain, nonatomic) XCSService *service; // @synthesize service=_service;
- (void).cxx_destruct;
- (void)observeMaintenaceTasks;
- (id)serviceDocument;
- (void)primitiveInvalidate;
- (void)loadView;

@end

@interface XCSBotSummaryDocumentLocation : DVTDocumentLocation
{
    unsigned long long _selectedArea;
    XCSIntegrationIssue *_issue;
}

@property(readonly, copy) XCSIntegrationIssue *issue; // @synthesize issue=_issue;
@property(readonly) unsigned long long selectedArea; // @synthesize selectedArea=_selectedArea;
- (void).cxx_destruct;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)description;
- (id)initWithDocumentURL:(id)arg1 timestamp:(id)arg2 selectedArea:(unsigned long long)arg3 issue:(id)arg4;

@end

@interface XCSBotSupportingGeniusResultsFinder : IDEGeniusResultsFinder
{
}

+ (Class)editorDocumentClass;
- (void)findGeniusResultsForEditorDocument:(id)arg1 selectedDocumentLocations:(id)arg2;
- (id)commitGeniusResultsForDocumentLocations:(id)arg1 document:(id)arg2;

@end

@interface XCSBotTestDocumentLocation : DVTDocumentLocation
{
    IDETest *_test;
    id _activityLog;
}

@property(retain) id activityLog; // @synthesize activityLog=_activityLog;
@property(retain) IDETest *test; // @synthesize test=_test;
- (void).cxx_destruct;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)description;
- (id)initWithDocumentURL:(id)arg1 timestamp:(id)arg2 selectedTest:(id)arg3;

@end

@interface XCSBranch (XCSUI)
- (id)xcsui_sourceControlBranch;
@end

@interface XCSCodeCoverageDevice (IDECoverageReport) <IDECoverage_Device>
@property(readonly, copy, nonatomic) NSString *ide_coverage_device_name;
@property(readonly, copy, nonatomic) NSString *ide_coverage_device_osVersion;
@property(readonly, copy, nonatomic) NSString *ide_coverage_device_modelName;
@property(readonly, copy, nonatomic) NSArray *ide_coverage_children;
@property(readonly, nonatomic) BOOL ide_coverage_isSimulator;
@property(readonly, copy, nonatomic) NSString *ide_coverage_deviceID;
@property(readonly, copy, nonatomic) NSString *ide_coverage_UTI;
@property(readonly, copy, nonatomic) NSNumber *ide_coverage_lineCoveragePctDelta;
@property(readonly, copy, nonatomic) NSNumber *ide_coverage_lineCoveragePct;
@property(readonly, copy, nonatomic) NSString *ide_coverage_title;
@property(readonly, copy, nonatomic) NSString *ide_coverage_identifier;
@property(readonly, copy, nonatomic) NSArray *ide_coverage_devices;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@end

@interface XCSCodeCoverageFile (IDECoverageReport) <IDECoverage_File>
@property(readonly, copy, nonatomic) NSString *ide_coverage_filePath;
@property(readonly, copy, nonatomic) NSArray *ide_coverage_children;
@property(readonly, copy, nonatomic) NSNumber *ide_coverage_lineCoveragePctDelta;
@property(readonly, copy, nonatomic) NSNumber *ide_coverage_lineCoveragePct;
@property(readonly, copy, nonatomic) NSString *ide_coverage_title;
@property(readonly, nonatomic) unsigned long long ide_coverage_methodsCount;
@property(readonly, copy, nonatomic) NSArray *ide_coverage_methods;
@property(readonly, copy, nonatomic) NSString *ide_coverage_identifier;
@property(readonly, copy, nonatomic) NSArray *ide_coverage_devices;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@end

@interface XCSCodeCoverageIntegration (IDECoverageReport) <IDECoverage_RootObject>
@property(readonly, copy, nonatomic) NSArray *ide_coverage_children;
@property(readonly, copy, nonatomic) NSNumber *ide_coverage_lineCoveragePctDelta;
@property(readonly, copy, nonatomic) NSNumber *ide_coverage_lineCoveragePct;
@property(readonly, copy, nonatomic) NSString *ide_coverage_title;
@property(readonly, nonatomic) unsigned long long ide_coverage_targetCount;
@property(readonly, copy, nonatomic) NSArray *ide_coverage_targets;
@property(readonly, copy, nonatomic) NSString *ide_coverage_identifier;
@property(readonly, copy, nonatomic) NSArray *ide_coverage_devices;
@property(readonly, nonatomic) BOOL ide_coverage_supportsJumpToSourceEditor;
@property(readonly, nonatomic) BOOL ide_coverage_lazilyFetchesData;
@property(readonly, nonatomic) BOOL ide_coverage_showChangeColumn;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@end

@interface XCSCodeCoverageMethod (IDECoverageReport) <IDECoverage_Method>
@property(readonly, copy, nonatomic) NSArray *ide_coverage_children;
@property(readonly, copy, nonatomic) NSNumber *ide_coverage_lineCoveragePctDelta;
@property(readonly, copy, nonatomic) NSNumber *ide_coverage_lineCoveragePct;
@property(readonly, copy, nonatomic) NSString *ide_coverage_title;
@property(readonly, nonatomic) unsigned long long ide_coverage_devicesCount;
@property(readonly, copy, nonatomic) NSArray *ide_coverage_devices;
@property(readonly, copy, nonatomic) NSString *ide_coverage_identifier;
@property(readonly, copy, nonatomic) NSImage *ide_coverage_image;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@end

@interface XCSCodeCoverageTarget (IDECoverageReport) <IDECoverage_Target>
@property(readonly, copy, nonatomic) NSArray *ide_coverage_children;
@property(readonly, copy, nonatomic) NSNumber *ide_coverage_lineCoveragePctDelta;
@property(readonly, copy, nonatomic) NSNumber *ide_coverage_lineCoveragePct;
@property(readonly, copy, nonatomic) NSString *ide_coverage_title;
@property(readonly, nonatomic) unsigned long long ide_coverage_filesCount;
@property(readonly, copy, nonatomic) NSArray *ide_coverage_files;
@property(readonly, copy, nonatomic) NSString *ide_coverage_identifier;
@property(readonly, copy, nonatomic) NSArray *ide_coverage_devices;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@end

@interface XCSCommit (DVTSourceControl)
@property(readonly, copy, nonatomic) NSDictionary *pathsWithStatus;
@property(readonly, copy, nonatomic) DVTSourceControlRevision *revision;
@property(readonly, copy, nonatomic) DVTSourceControlAuthor *author;
- (id)logItemWithWorkspace:(id)arg1;
@end

@interface XCSContributor (DVTSourceControl)
@property(readonly, copy, nonatomic) DVTSourceControlAuthor *author;
@end

@interface XCSCore_XCSUIAdditions : NSObject
{
}

+ (id)statusImageForStatus:(long long)arg1;
+ (id)displayColorForXCSTestResultStatus:(long long)arg1;
+ (id)displayStringForXCSTestResultStatus:(long long)arg1;
+ (id)displayStringForXCSPerformanceTestType:(unsigned long long)arg1;

@end

@interface XCSDevice (IDECoverageReport) <IDECoverage_Device>
@property(readonly, copy, nonatomic) NSArray *ide_coverage_devices;
@property(readonly, copy, nonatomic) NSString *ide_coverage_device_name;
@property(readonly, copy, nonatomic) NSString *ide_coverage_device_osVersion;
@property(readonly, copy, nonatomic) NSString *ide_coverage_device_modelName;
@property(readonly, copy, nonatomic) NSString *ide_coverage_deviceID;
@property(readonly, nonatomic) BOOL ide_coverage_isSimulator;
@property(readonly, copy, nonatomic) NSString *ide_coverage_UTI;
@property(readonly, copy, nonatomic) NSArray *ide_coverage_children;
@property(readonly, copy, nonatomic) NSNumber *ide_coverage_lineCoveragePctDelta;
@property(readonly, copy, nonatomic) NSNumber *ide_coverage_lineCoveragePct;
@property(readonly, copy, nonatomic) NSString *ide_coverage_title;
@property(readonly, copy, nonatomic) NSString *ide_coverage_identifier;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@end

@interface XCSFailureSummary (IDETestReportModelObjects) <IDETestReport_FailureSummary>
@property(readonly, nonatomic) long long ide_testReport_failureSummary_lineNumber;
@property(readonly, copy, nonatomic) NSString *ide_testReport_failureSummary_fileName;
@property(readonly, copy, nonatomic) NSString *ide_testReport_failureSummary_message;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@end

@interface XCSHostedRepository (IDEKit)
- (id)remoteRepositoryWithUsername:(id)arg1 password:(id)arg2;
- (id)_URLWithoutSchemeForUsername:(id)arg1;
- (id)_schemesToTryInOrder;
@end

@interface XCSIntegration (IDEKit)
+ (id)durationStringFromTimeInterval:(double)arg1;
+ (void)componentsFromBotIntegrationURL:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
+ (id)botIntegrationURLForIntegrationWithID:(id)arg1 server:(id)arg2;
- (id)title;
@property(readonly, copy) NSURL *botIntegrationURL;
@end

@interface XCSIntegration (IDETestReportModelObjects) <IDETestReport_RootObject>
@property(readonly, nonatomic) BOOL ide_testReport_test_lazyTestRunFetchesUseNewBatchAPI;
@property(readonly, nonatomic) BOOL ide_testReport_test_fetchesTestRunsLazily;
- (id)ide_testReport_rootObject_includeGroupsWithPassedTests:(BOOL)arg1 includeFailingTests:(BOOL)arg2 includeOnlyPerfTests:(BOOL)arg3;
@property(readonly, copy, nonatomic) NSArray *ide_testReport_rootObject_perfMetricNames;
- (id)testsIncludePassing:(BOOL)arg1 includeFailing:(BOOL)arg2 perfOnly:(BOOL)arg3;
@property(readonly, copy, nonatomic) NSArray *ide_testReport_rootObject_devices;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@end

@interface XCSIntegration (XCSUIAdditions)
- (id)devicesFailingTests;
- (id)devicesPassingTests;
@property(readonly) unsigned long long numberOfTests;
@end

@interface XCSIntegrationAsset (IDETestReport_RemoteAsset) <IDETestReport_RemoteAsset>
@property(readonly, nonatomic) unsigned long long ide_testReport_remoteAsset_size;
@property(readonly, copy, nonatomic) NSURL *ide_testReport_remoteAsset_downloadURL;
@property(readonly, copy, nonatomic) NSString *ide_testReport_remoteAsset_fileName;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@end

@interface XCSIntegrationAssetDownloader : NSObject
{
    XCSIntegration *_integration;
    NSMapTable *_integrationsAndAssets;
    NSMapTable *_integrationCompletionBlocks;
    NSMapTable *_integrationAndSchemeActionRecord;
    IDESchemeActionsInvocationRecord *_schemeActionsInvocationRecord;
    NSString *_internalBuildServiceDebugLog;
    NSString *_internalRawBuildLog;
}

+ (id)assetDownloader;
@property(copy) NSString *internalRawBuildLog; // @synthesize internalRawBuildLog=_internalRawBuildLog;
@property(copy) NSString *internalBuildServiceDebugLog; // @synthesize internalBuildServiceDebugLog=_internalBuildServiceDebugLog;
@property(retain) IDESchemeActionsInvocationRecord *schemeActionsInvocationRecord; // @synthesize schemeActionsInvocationRecord=_schemeActionsInvocationRecord;
- (void).cxx_destruct;
- (void)assetsForIntegration:(id)arg1 callbackBlock:(CDUnknownBlockType)arg2;
- (void)schemeActionsInvocationRecordForIntegration:(id)arg1 progressBlock:(CDUnknownBlockType)arg2;
- (void)callCompletionBlockForIntegration:(id)arg1;
- (id)triggerLogsForIntegration:(id)arg1 phase:(unsigned long long)arg2;
- (void)setTriggerLog:(id)arg1 withFileName:(id)arg2 forIntegration:(id)arg3;
- (void)setSCMLog:(id)arg1 forIntegration:(id)arg2;
- (void)setBuildLog:(id)arg1 forIntegration:(id)arg2;
- (void)setBuildServiceLog:(id)arg1 forIntegration:(id)arg2;
- (id)dictionaryForIntegration:(id)arg1;

@end

@interface XCSLegacyBotEditor : IDEEditor
{
    DVTBorderedView *_borderedView;
    NSTextField *_textField;
    DVTLozengeTextField *_lozenge;
}

+ (id)defaultViewNibBundle;
+ (id)defaultViewNibName;
@property __weak DVTLozengeTextField *lozenge; // @synthesize lozenge=_lozenge;
@property __weak NSTextField *textField; // @synthesize textField=_textField;
@property __weak DVTBorderedView *borderedView; // @synthesize borderedView=_borderedView;
- (void).cxx_destruct;
- (void)loadView;

@end

@interface XCSLegacyBotEditorDocument : IDEEditorDocument
{
}

+ (BOOL)shouldUnlockFileURLBeforeMakingChanges;
- (id)displayName;
- (int)readOnlyStatus;
- (id)initForURL:(id)arg1 withContentsOfURL:(id)arg2 ofType:(id)arg3 error:(id *)arg4;

@end

@interface XCSRadarIssueAssociation (Doppler) <DVTRadar_Associate>
@property(readonly, copy, nonatomic) NSString *radarSummary;
@property(nonatomic) unsigned long long duplicateOfProblemID;
@property(nonatomic) unsigned long long priority;
@property(copy, nonatomic) NSString *assignee;
@property(copy, nonatomic) NSString *resolution;
@property(copy, nonatomic) NSString *substate;
@property(copy, nonatomic) NSString *state;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@end

@interface XCSService (IDEKit)
- (void)showWebUI:(id)arg1;
@end

@interface XCSService (XCSUIAdditions) <IDEKeyDrivenNavigableItemRepresentedObject, XCSServiceErrorDelegate>
+ (BOOL)showGenericErrors;
+ (void)initialize;
+ (id)keyPathsForValuesAffectingAccountReachability;
+ (id)keyPathsForValuesAffectingAccountEnabled;
+ (id)keyPathsForValuesAffectingAccountImage;
+ (id)keyPathsForValuesAffectingAccountSubTitle;
+ (id)keyPathsForValuesAffectingAccountTitle;
- (void)loginWithStoredCredentials:(CDUnknownBlockType)arg1;
- (void)service:(id)arg1 didEncounterError:(id)arg2 withRequest:(id)arg3 proceed:(CDUnknownBlockType)arg4;
- (void)deactivateXcodeSessionManagement;
- (void)activateXcodeSessionManagementWithCompletionHandler:(CDUnknownBlockType)arg1;
- (BOOL)setCurrentUsername:(id)arg1 andPassword:(id)arg2 withError:(id *)arg3;
- (void)deleteKeychainItemForUsername:(id)arg1 andPassword:(id)arg2;
- (void)keychainItemForUsername:(id)arg1 password:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
@property(readonly, nonatomic) BOOL isReachable;
@property(retain, nonatomic) NSArray *lastKnownPlatforms;
@property(retain, nonatomic) XCSVersionInfo *lastKnownVersionInfo;
@property(retain, nonatomic) NSError *lastKnownConnectionError;
@property BOOL attemptGuestAuthentication;
@property(copy, nonatomic) NSString *password;
@property(copy, nonatomic) NSString *username;
@property(copy, nonatomic) NSString *displayName;
@property(readonly) DVTFileDataType *navigableItem_documentType;
@property(readonly, nonatomic) long long accountReachability;
- (BOOL)accountEnabled;
@property(readonly, nonatomic) NSImage *accountImage;
@property(readonly, copy, nonatomic) NSString *accountSubTitle;
@property(readonly, copy, nonatomic) NSString *accountTitle;
@property(readonly, nonatomic) NSImage *computerImage;
@property(readonly) NSString *navigableItem_name;
@property(readonly, copy, nonatomic) NSString *serverCompatibilityErrorText;
@property(retain, nonatomic) NSArray *currentMaintenanceTasks;
- (long long)compare:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(nonatomic) BOOL enabled;
@property(readonly) unsigned long long hash;
@property(readonly) DVTDocumentLocation *navigableItem_contentDocumentLocation;
@property(readonly) IDEFileReference *navigableItem_fileReference;
@property(readonly) NSString *navigableItem_groupIdentifier;
@property(readonly) NSImage *navigableItem_image;
@property(readonly) BOOL navigableItem_isLeaf;
@property(readonly) BOOL navigableItem_isMajorGroup;
@property(readonly) NSString *navigableItem_toolTip;
@property(readonly) Class superclass;
@end

@interface XCSTest (IDETestReportModelObjects) <IDETestReport_TestRun>
- (void)ide_testReport_testRun_schemeActionsInvocationRecord:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) BOOL ide_testReport_testRun_fetchesSchemeActionsInvocationRecordAsync;
- (id)ide_sharedTests_testedDevice;
@property(readonly, copy, nonatomic) NSArray *ide_testReport_testRun_perfMetrics;
@property(readonly, copy, nonatomic) NSArray *ide_testReport_testRun_failureSummaries;
- (void)setTestClassName:(id)arg1;
- (id)testClassName;
- (void)setTestName:(id)arg1;
- (id)testName;
@property(readonly, nonatomic) NSImage *ide_testReport_testRun_statusImage;
@property(readonly, nonatomic) BOOL ide_testReport_testRun_passed;
@property(readonly, copy, nonatomic) NSString *ide_testReport_testRun_UUID;
@property(readonly, nonatomic) id <IDETestReport_Device> ide_testReport_testRun_testedDevice;
@property(readonly, copy, nonatomic) NSString *ide_testReport_testRun_testName;
@property(readonly, copy, nonatomic) NSString *ide_testReport_testRun_testClassName;
@property(readonly, copy, nonatomic) NSString *ide_testReport_testRun_testableBlueprintPath;
@property(readonly, copy, nonatomic) NSString *ide_testReport_testRun_testableBlueprintName;
@property(readonly, copy, nonatomic) NSArray *ide_testReport_testRun_activities;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) IDESchemeActionRunDestinationRecord *ide_testReport_testRun_schemeActionRunDestinationRecord;
@property(readonly, nonatomic) IDESchemeActionsInvocationRecord *ide_testReport_testRun_schemeActionsInvocationRecord;
@property(readonly) Class superclass;
@end

@interface XCSTestActivity (IDETestReport_TestActivity) <IDETestReport_TestActivity>
@property(readonly, nonatomic) BOOL ide_testReport_testActivity_containsFailure;
@property(readonly, copy, nonatomic) NSArray *ide_testReport_testActivity_subactivities;
@property(readonly, copy, nonatomic) id ide_testReport_testActivity_screenshot;
@property(readonly, nonatomic) double ide_testReport_testActivity_duration;
@property(readonly, copy, nonatomic) NSDate *ide_testReport_testActivity_finishTime;
@property(readonly, copy, nonatomic) NSDate *ide_testReport_testActivity_startTime;
@property(readonly, copy, nonatomic) NSString *ide_testReport_testActivity_UUID;
@property(readonly, copy, nonatomic) NSString *ide_testReport_testActivity_title;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@end

@interface XCSTestClassPlaceholder (IDETestReportModelObjects) <IDETestReport_TestGroup>
- (id)ide_sharedTests_testGroup_includePassingTests:(BOOL)arg1 includeFailingTests:(BOOL)arg2 includeOnlyPerfTests:(BOOL)arg3;
- (id)testsIncludePassing:(BOOL)arg1 includeFailing:(BOOL)arg2 perfOnly:(BOOL)arg3;
- (id)ide_sharedTests_failingTests;
- (id)ide_sharedTests_passingTests;
- (id)ide_sharedTests_allTests;
@property(readonly, copy, nonatomic) NSString *ide_testReport_testGroup_groupName;
@property(readonly, copy, nonatomic) NSString *ide_testReport_testGroup_testTargetName;
@property(readonly, copy, nonatomic) NSString *ide_testReport_base_identifier;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@end

@interface XCSTestClassPlaceholder (XCSUIAdditions)
- (id)xcsui_image;
- (id)failingTests;
@end

@interface XCSTestDevice (IDETestReportModelObjects) <IDETestReport_Device>
@property(readonly, copy, nonatomic) NSString *ide_testReport_device_platformName;
@property(readonly, copy, nonatomic) NSString *ide_testReport_device_modelName;
@property(readonly, copy, nonatomic) NSString *ide_testReport_device_identifier;
@property(readonly, copy, nonatomic) NSString *ide_testReport_device_architecture;
@property(readonly, copy, nonatomic) NSString *ide_testReport_device_osVersion;
@property(readonly, nonatomic) BOOL ide_testReport_device_isSimulator;
@property(readonly, nonatomic) NSImage *ide_testReport_device_statusImage;
@property(readonly, copy, nonatomic) NSString *ide_testReport_device_UTI;
@property(readonly, copy, nonatomic) NSString *ide_testReport_device_name;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@end

@interface XCSTestDevice (XCSUIAdditions)
- (id)xcsui_image;
- (BOOL)allTestsPassedInIntegration;
- (id)testInDeviceTestRunForTest:(id)arg1;
@end

@interface XCSTestPerfMetric (IDETestReportModelObjects) <IDETestReport_PerfMetric>
@property(readonly, copy, nonatomic) NSString *ide_testReport_perfMetric_baselineIdentifier;
@property(readonly, nonatomic) NSArray *ide_testReport_perfMetric_iterations;
@property(readonly, nonatomic) NSNumber *ide_testReport_perfMetric_maxPercentRelativeStandardDeviation;
@property(readonly, nonatomic) double ide_testReport_perfMetric_maxPercentImprovement;
@property(readonly, nonatomic) NSNumber *ide_testReport_perfMetric_maxPercentRegression;
@property(readonly, nonatomic) NSNumber *ide_testReport_perfMetric_baseline;
@property(readonly, nonatomic) double ide_testReport_perfMetric_rsd;
@property(readonly, nonatomic) double ide_testReport_perfMetric_max;
@property(readonly, nonatomic) double ide_testReport_perfMetric_min;
@property(readonly, nonatomic) double ide_testReport_perfMetric_avg;
@property(readonly, copy, nonatomic) NSString *ide_testReport_perfMetric_unit;
@property(readonly, copy, nonatomic) NSString *ide_testReport_perfMetric_identifier;
@property(readonly, copy, nonatomic) NSString *ide_testReport_perfMetric_name;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@end

@interface XCSTestPlaceholder (IDETestReportModelObjects) <IDETestReport_Test>
+ (id)keyPathsForValuesAffectingIde_testReport_test_testRuns;
@property(readonly, copy, nonatomic) NSArray *ide_testReport_test_testRuns;
@property(readonly, copy, nonatomic) NSString *ide_testReport_test_missingBaselineInfo;
@property(readonly, nonatomic) NSImage *ide_testReport_test_statusImage;
@property(readonly, copy, nonatomic) NSString *ide_testReport_base_identifier;
@property(readonly, copy, nonatomic) NSString *ide_testReport_test_UUID;
@property(readonly, copy, nonatomic) NSString *ide_testReport_test_testClassName;
@property(readonly, copy, nonatomic) NSString *ide_testReport_test_testName;
- (void)ide_testReport_test_fetchTestsWithCompletionHandler:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) BOOL ide_testReport_test_passed;
@property(readonly, nonatomic) BOOL ide_testReport_test_fetchesTestRunsLazily;
@property(readonly, copy, nonatomic) NSArray *ide_testReport_test_perfMetrics;
@property(retain) NSArray *fetchedPerfMetrics;
@property(retain) NSNumber *fetchingInProgress;
@property(retain) NSArray *fetchedTests;
@property(readonly, copy, nonatomic) NSString *ide_testReport_test_keyPath;
@property(readonly, nonatomic) BOOL ide_testReport_test_hasActivities;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@end

@interface XCSTestPlaceholder (XCSUIAdditions)
- (id)xcsui_statusImageForDevice:(id)arg1;
- (id)xcsui_image;
@end

@interface XCSTestTargetPlaceholder (XCSUIAdditions)
- (id)xcsui_image;
- (id)failingTestSuites;
@end

@interface XCSTriggerSCMOptions (BlueprintAdditions)
+ (id)defaultTriggerSCMOptionsForBlueprint:(id)arg1 validationErrors:(id *)arg2;
@end

@interface XCSUIAccountPrefsServerDetailViewController : IDEViewController
{
    DVTObservingToken *_serverEnabledWatcher;
    DVTObservingToken *_serverCompatibilityWatcher;
    unsigned long long _resolutionOperationCount;
    BOOL _authenticateAsRegisteredUser;
    BOOL _showServerCompatibilityWarning;
    BOOL _resolving;
    NSImageView *_connectionErrorImageView;
    DVTToggleSwitch *_enableSwitch;
    NSTextField *_addressTextField;
    NSButton *_viewServerButton;
    DVTBorderedView *_borderedView;
    NSImageView *_compatibilityImageView;
    NSTextField *_userNameTextField;
    NSSecureTextField *_passwordSecureTextField;
    unsigned long long _authenticationUserType;
    NSError *_lastKnownConnectionError;
    NSString *_serverAPIVersionString;
    NSString *_fullVersionString;
    NSString *_internalVersionString;
}

+ (id)keyPathsForValuesAffectingLastKnownConnectionErrorDescription;
+ (id)keyPathsForValuesAffectingConnectionAddress;
@property(nonatomic) BOOL resolving; // @synthesize resolving=_resolving;
@property(retain, nonatomic) NSString *internalVersionString; // @synthesize internalVersionString=_internalVersionString;
@property(retain, nonatomic) NSString *fullVersionString; // @synthesize fullVersionString=_fullVersionString;
@property(retain, nonatomic) NSString *serverAPIVersionString; // @synthesize serverAPIVersionString=_serverAPIVersionString;
@property(retain, nonatomic) NSError *lastKnownConnectionError; // @synthesize lastKnownConnectionError=_lastKnownConnectionError;
@property(nonatomic) unsigned long long authenticationUserType; // @synthesize authenticationUserType=_authenticationUserType;
@property __weak NSSecureTextField *passwordSecureTextField; // @synthesize passwordSecureTextField=_passwordSecureTextField;
@property __weak NSTextField *userNameTextField; // @synthesize userNameTextField=_userNameTextField;
@property __weak NSImageView *compatibilityImageView; // @synthesize compatibilityImageView=_compatibilityImageView;
@property BOOL showServerCompatibilityWarning; // @synthesize showServerCompatibilityWarning=_showServerCompatibilityWarning;
@property(retain) DVTBorderedView *borderedView; // @synthesize borderedView=_borderedView;
@property(retain) NSButton *viewServerButton; // @synthesize viewServerButton=_viewServerButton;
@property __weak NSTextField *addressTextField; // @synthesize addressTextField=_addressTextField;
@property __weak DVTToggleSwitch *enableSwitch; // @synthesize enableSwitch=_enableSwitch;
@property BOOL authenticateAsRegisteredUser; // @synthesize authenticateAsRegisteredUser=_authenticateAsRegisteredUser;
@property(retain) NSImageView *connectionErrorImageView; // @synthesize connectionErrorImageView=_connectionErrorImageView;
- (void).cxx_destruct;
@property(nonatomic) unsigned long long resolutionOperationCount;
- (void)completeResolutionOperation;
- (void)startResolutionOperation;
@property(readonly) NSImage *accountImage;
- (void)updateVersionDisplay:(id)arg1;
@property(readonly, nonatomic) NSString *lastKnownConnectionErrorDescription;
- (void)viewServer:(id)arg1;
@property(retain, nonatomic) NSString *password;
@property(retain, nonatomic) NSString *username;
@property(retain, nonatomic) NSString *displayName;
- (void)retryConnection;
- (void)refreshConnectionAddress;
- (void)setRepresentedObject:(id)arg1;
- (id)contextMenu;
- (void)primitiveInvalidate;
- (void)loadView;
- (void)updatePassword:(id)arg1;
- (void)updateUsername:(id)arg1;

@end

@interface XCSUIAccountReachabilityToImageTransformer : NSValueTransformer
{
}

+ (BOOL)allowsReverseTransformation;
+ (Class)transformedValueClass;
- (id)transformedValue:(id)arg1;
- (id)offlineImage;

@end

@interface XCSUIActionManager : NSObject <IDEContinuousIntegrationActionManager>
{
    CDUnknownBlockType _serviceMatchingNameCompletionBlock;
    DVTObservingToken *_serviceMatchingObserver;
    XCSUIBotDefinitionEditorWindowController *_definitionEditorWindowController;
}

+ (BOOL)canUserViewBotsOnService:(id)arg1;
+ (void)refreshACLCacheForService:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
@property(retain) XCSUIBotDefinitionEditorWindowController *definitionEditorWindowController; // @synthesize definitionEditorWindowController=_definitionEditorWindowController;
- (void).cxx_destruct;
- (void)_handleCommitAndIntegrateOptionsWithBotDefinitionContext:(id)arg1 window:(id)arg2;
- (void)hostedRepositoriesOnService:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)canCreateHostedRepositoriesOnService:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)createHostedRepositoryWithName:(id)arg1 onService:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (id)webURLForIntegration:(id)arg1;
- (id)webURLForBot:(id)arg1;
- (BOOL)canUserCreateAndDeleteBotsOnServiceForBotOrIntegration:(id)arg1;
- (BOOL)canUserCreateBotsOnAnyService;
- (id)projectNameInBlueprintForBot:(id)arg1;
- (void)fetchBotForBotId:(id)arg1 onService:(id)arg2 withCompletionBlock:(CDUnknownBlockType)arg3;
- (void)serviceMatchingHostName:(id)arg1 withTimeout:(double)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)fetchIntegrationForId:(id)arg1 onService:(id)arg2 withCompletionBlock:(CDUnknownBlockType)arg3;
- (void)deleteIntegration:(id)arg1 withCompletionBlock:(CDUnknownBlockType)arg2;
- (void)cancelIntegration:(id)arg1 withCompletionBlock:(CDUnknownBlockType)arg2;
- (void)deleteBot:(id)arg1 workspace:(id)arg2 withCompletionBlock:(CDUnknownBlockType)arg3;
- (void)integrateBot:(id)arg1 cleanFirst:(BOOL)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)integrationsForBot:(id)arg1 max:(unsigned long long)arg2 sortNewestFirst:(BOOL)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)integrationsForBot:(id)arg1 inRange:(struct _NSRange)arg2 sortNewestFirst:(BOOL)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)showBotEditorForWorkspaceTabController:(id)arg1 bot:(id)arg2 editingMode:(long long)arg3 completionBlock:(CDUnknownBlockType)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XCSUIAddServerAuthenticateViewController : DVTViewController
{
    BOOL _authenticating;
    BOOL _authenticateAsRegisteredUser;
    XCSUIAddServerWindowController *_pagingSheetWindowController;
    NSButton *_okButton;
    NSTextField *_nameTextField;
    NSError *_authenticationError;
    unsigned long long _authenticationUserType;
    NSTextField *_usernameField;
    NSTextField *_passwordField;
}

@property(nonatomic) __weak NSTextField *passwordField; // @synthesize passwordField=_passwordField;
@property(nonatomic) __weak NSTextField *usernameField; // @synthesize usernameField=_usernameField;
@property BOOL authenticateAsRegisteredUser; // @synthesize authenticateAsRegisteredUser=_authenticateAsRegisteredUser;
@property(nonatomic) unsigned long long authenticationUserType; // @synthesize authenticationUserType=_authenticationUserType;
@property BOOL authenticating; // @synthesize authenticating=_authenticating;
@property(retain, nonatomic) NSError *authenticationError; // @synthesize authenticationError=_authenticationError;
@property(retain, nonatomic) NSTextField *nameTextField; // @synthesize nameTextField=_nameTextField;
@property(retain, nonatomic) NSButton *okButton; // @synthesize okButton=_okButton;
@property(retain, nonatomic) XCSUIAddServerWindowController *pagingSheetWindowController; // @synthesize pagingSheetWindowController=_pagingSheetWindowController;
- (void).cxx_destruct;
- (void)windowDidUpdate:(id)arg1;
- (void)cancelAction:(id)arg1;
- (void)goBackAction:(id)arg1;
- (void)errorAlertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)okAction:(id)arg1;
- (void)primitiveInvalidate;
- (void)viewWillUninstall;
- (void)viewDidInstall;
- (void)loadView;

@end

@interface XCSUIAddServerChoosePageViewController : DVTViewController <NSNetServiceBrowserDelegate, NSNetServiceDelegate, NSControlTextEditingDelegate>
{
    BOOL _serviceBrowserSelectionIsChanging;
    BOOL _resolvingService;
    XCSUIAddServerWindowController *_pagingSheetWindowController;
    NSString *_connectionAddress;
    NSArrayController *_discoveredServersArrayController;
    NSButton *_okButton;
    DVTTableView *_tableView;
    NSNetServiceBrowser *_netServiceBrowser;
    NSMutableSet *_discoveredServers;
    DVTObservingToken *_arrayControllerSelectionObservingToken;
}

+ (BOOL)automaticallyNotifiesObserversOfDiscoveredServers;
+ (void)initialize;
@property BOOL resolvingService; // @synthesize resolvingService=_resolvingService;
@property(retain) DVTObservingToken *arrayControllerSelectionObservingToken; // @synthesize arrayControllerSelectionObservingToken=_arrayControllerSelectionObservingToken;
@property(copy, nonatomic) NSMutableSet *discoveredServers; // @synthesize discoveredServers=_discoveredServers;
@property(retain, nonatomic) NSNetServiceBrowser *netServiceBrowser; // @synthesize netServiceBrowser=_netServiceBrowser;
@property BOOL serviceBrowserSelectionIsChanging; // @synthesize serviceBrowserSelectionIsChanging=_serviceBrowserSelectionIsChanging;
@property(retain, nonatomic) DVTTableView *tableView; // @synthesize tableView=_tableView;
@property(retain, nonatomic) NSButton *okButton; // @synthesize okButton=_okButton;
@property(retain, nonatomic) NSArrayController *discoveredServersArrayController; // @synthesize discoveredServersArrayController=_discoveredServersArrayController;
@property(copy, nonatomic) NSString *connectionAddress; // @synthesize connectionAddress=_connectionAddress;
@property(retain, nonatomic) XCSUIAddServerWindowController *pagingSheetWindowController; // @synthesize pagingSheetWindowController=_pagingSheetWindowController;
- (void).cxx_destruct;
- (void)showXcodeCIGuide:(id)arg1;
- (void)netServiceBrowser:(id)arg1 didRemoveService:(id)arg2 moreComing:(BOOL)arg3;
- (void)netServiceBrowser:(id)arg1 didFindService:(id)arg2 moreComing:(BOOL)arg3;
- (void)netServiceBrowserDidStopSearch:(id)arg1;
- (void)netServiceBrowserWillSearch:(id)arg1;
- (void)_stopBonjourSearching;
- (void)_startBonjourSearching;
- (void)windowDidUpdate:(id)arg1;
- (void)cancelAction:(id)arg1;
- (void)okAction:(id)arg1;
- (void)viewWillUninstall;
- (void)viewDidInstall;
- (void)controlTextDidChange:(id)arg1;
- (void)primitiveInvalidate;
- (void)loadView;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XCSUIAddServerWindowController : DVTPagingSheetWindowController <IDEContinuousIntegrationNewServiceAccountController>
{
    CDUnknownBlockType _completionBlock;
    NSString *_connectionAddress;
    XCSService *_service;
}

@property(retain, nonatomic) XCSService *service; // @synthesize service=_service;
- (void).cxx_destruct;
- (void)didEndSheetWithReturnCode:(long long)arg1;
- (void)beginSheetModalForWindow:(id)arg1 connectionAddress:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)windowDidLoad;
- (id)initWithWindow:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XCSUIAssetDownloadHelper : NSObject <NSURLConnectionDataDelegate>
{
    NSMutableData *_bytes;
    float _percentComplete;
    CDUnknownBlockType _progressBlock;
    CDUnknownBlockType _completionBlock;
    NSURLConnection *_URLConnection;
    NSString *_downloadDestinationFilePath;
    NSURLResponse *_downloadResponse;
    NSURLRequest *_request;
    unsigned long long _expectedDownloadSizeInBytes;
}

+ (id)downloadHelperWithURLRequest:(id)arg1 expectedDownloadSizeInBytes:(unsigned long long)arg2;
@property unsigned long long expectedDownloadSizeInBytes; // @synthesize expectedDownloadSizeInBytes=_expectedDownloadSizeInBytes;
@property(retain) NSURLRequest *request; // @synthesize request=_request;
@property float percentComplete; // @synthesize percentComplete=_percentComplete;
@property(copy) NSURLResponse *downloadResponse; // @synthesize downloadResponse=_downloadResponse;
@property(copy) NSString *downloadDestinationFilePath; // @synthesize downloadDestinationFilePath=_downloadDestinationFilePath;
@property(retain) NSURLConnection *URLConnection; // @synthesize URLConnection=_URLConnection;
@property(copy) CDUnknownBlockType completionBlock; // @synthesize completionBlock=_completionBlock;
@property(copy) CDUnknownBlockType progressBlock; // @synthesize progressBlock=_progressBlock;
- (void).cxx_destruct;
- (void)cancel;
- (void)beginDownload;
- (void)connection:(id)arg1 didReceiveAuthenticationChallenge:(id)arg2;
- (BOOL)connection:(id)arg1 canAuthenticateAgainstProtectionSpace:(id)arg2;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (id)initWithRequest:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XCSUIBotArchivesViewController : DVTViewController <XCSBotSupportingEditorHostedViewController>
{
    XCSBotSupportingEditor *_botSupportingEditor;
    NSArray *_currentSelectedDocumentLocations;
    XCSIntegration *_integration;
    XCSBot *_bot;
}

+ (BOOL)instancesCanContainDocumentLocation:(id)arg1;
+ (id)keyPathsForValuesAffectingCurrentSelectedItems;
@property(retain, nonatomic) XCSBot *bot; // @synthesize bot=_bot;
@property(retain, nonatomic) XCSIntegration *integration; // @synthesize integration=_integration;
@property(retain, nonatomic) XCSBotSupportingEditor *botSupportingEditor; // @synthesize botSupportingEditor=_botSupportingEditor;
- (void).cxx_destruct;
- (void)selectDocumentLocations:(id)arg1;
@property(readonly, copy) NSArray *currentSelectedItems;
@property(readonly, copy) NSArray *currentSelectedDocumentLocations; // @synthesize currentSelectedDocumentLocations=_currentSelectedDocumentLocations;
- (void)primitiveInvalidate;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XCSUIBotDefinitionContext : NSObject
{
    XCSBot *_bot;
    id _deviceObserverToken;
    DVTObservingToken *_serviceReachabilityToken;
    BOOL _userCanCreateBotsOnService;
    BOOL _botEditorShowedPermissionDeniedSheet;
    BOOL _disableWorkspaceSpecificSettings;
    BOOL _preserveExistingServerBlueprint;
    BOOL _performsAnalyzeAction;
    BOOL _performsTestAction;
    BOOL _performsArchiveAction;
    BOOL _exportsProductFromArchive;
    BOOL _schemeSupportsDevices;
    BOOL _hasSufficientSCMInfoToCreateBot;
    BOOL _creationComplete;
    BOOL _needsCommitAndPushUponCompletion;
    BOOL _redefineBot;
    BOOL _consultSchemeForConfiguration;
    IDEWorkspaceTabController *_workspaceTabController;
    NSString *_botName;
    NSString *_defaultBotName;
    XCSService *_service;
    DVTSourceControlWorkspaceBlueprint *_localSCMWorkspaceBlueprint;
    DVTSourceControlWorkspaceBlueprint *_updatedBotSCMWorkspaceBlueprint;
    DVTSourceControlWorkspaceBlueprint *_existingSCMWorkspaceBlueprint;
    NSMapTable *_workingCopiesToRemoteRepositories;
    NSURL *_sshKeyFolderURL;
    NSString *_existingBotID;
    IDEScheme *_scheme;
    NSString *_schemeName;
    unsigned long long _buildsFromCleanSchedule;
    NSString *_buildConfiguration;
    unsigned long long _codeCoveragePreference;
    long long _initialRepositoryAuthenticationStatus;
    long long _preflightRepositoryAuthenticationStatus;
    NSSet *_preflightIgnoredRepositoryIdentifiers;
    NSArray *_triggers;
    XCSDeviceSpecification *_deviceSpecification;
    unsigned long long _testingDestinationType;
    unsigned long long _scheduleType;
    unsigned long long _periodicScheduleInterval;
    long long _weeklyScheduleDay;
    unsigned long long _hourOfIntegration;
    unsigned long long _minutesAfterHourToIntegrate;
    NSError *_createEditBotError;
    NSArray *_createEditBotValidationErrors;
    long long _rememberAuthenticationChoice;
    NSArray *_selectedTestingDeviceIDs;
    CDUnknownBlockType _blueprintLoadedCallback;
    NSArray *_botRepositories;
    NSArray *_availablePlatforms;
    NSArray *_availableDevices;
    long long _schemeValidity;
    long long _schemeRecoveryType;
}

+ (BOOL)workspace:(id)arg1 matchesBlueprintInBot:(id)arg2;
+ (id)keyPathsForValuesAffectingSchemeSupportsArchiveAction;
+ (id)keyPathsForValuesAffectingPerformsArchiveAction;
+ (id)keyPathsForValuesAffectingSchemeSupportsTestAction;
+ (id)keyPathsForValuesAffectingPerformsTestAction;
+ (id)keyPathsForValuesAffectingSchemeSupportsAnalyzeAction;
+ (id)keyPathsForValuesAffectingPerformsAnalyzeAction;
+ (id)keyPathsForValuesAffectingCanContinueInDevicePicker;
+ (id)keyPathsForValuesAffectingShouldSkipDevicePicker;
+ (id)keyPathsForValuesAffectingDefaultBotName;
+ (id)keyPathsForValuesAffectingHasSufficientSCMInfoToCreateBot;
+ (id)sourceControlLogAspect;
@property(nonatomic) BOOL consultSchemeForConfiguration; // @synthesize consultSchemeForConfiguration=_consultSchemeForConfiguration;
@property(nonatomic) BOOL redefineBot; // @synthesize redefineBot=_redefineBot;
@property(nonatomic) long long schemeRecoveryType; // @synthesize schemeRecoveryType=_schemeRecoveryType;
@property(nonatomic) long long schemeValidity; // @synthesize schemeValidity=_schemeValidity;
@property(retain, nonatomic) NSArray *availableDevices; // @synthesize availableDevices=_availableDevices;
@property(retain, nonatomic) NSArray *availablePlatforms; // @synthesize availablePlatforms=_availablePlatforms;
@property(readonly, copy, nonatomic) NSArray *botRepositories; // @synthesize botRepositories=_botRepositories;
@property(copy, nonatomic) CDUnknownBlockType blueprintLoadedCallback; // @synthesize blueprintLoadedCallback=_blueprintLoadedCallback;
@property(copy, nonatomic) NSArray *selectedTestingDeviceIDs; // @synthesize selectedTestingDeviceIDs=_selectedTestingDeviceIDs;
@property(nonatomic) long long rememberAuthenticationChoice; // @synthesize rememberAuthenticationChoice=_rememberAuthenticationChoice;
@property(nonatomic) BOOL needsCommitAndPushUponCompletion; // @synthesize needsCommitAndPushUponCompletion=_needsCommitAndPushUponCompletion;
@property(nonatomic) BOOL creationComplete; // @synthesize creationComplete=_creationComplete;
@property(retain, nonatomic) NSArray *createEditBotValidationErrors; // @synthesize createEditBotValidationErrors=_createEditBotValidationErrors;
@property(retain, nonatomic) NSError *createEditBotError; // @synthesize createEditBotError=_createEditBotError;
@property(nonatomic) BOOL hasSufficientSCMInfoToCreateBot; // @synthesize hasSufficientSCMInfoToCreateBot=_hasSufficientSCMInfoToCreateBot;
@property(nonatomic) unsigned long long minutesAfterHourToIntegrate; // @synthesize minutesAfterHourToIntegrate=_minutesAfterHourToIntegrate;
@property(nonatomic) unsigned long long hourOfIntegration; // @synthesize hourOfIntegration=_hourOfIntegration;
@property(nonatomic) long long weeklyScheduleDay; // @synthesize weeklyScheduleDay=_weeklyScheduleDay;
@property(nonatomic) unsigned long long periodicScheduleInterval; // @synthesize periodicScheduleInterval=_periodicScheduleInterval;
@property(nonatomic) unsigned long long scheduleType; // @synthesize scheduleType=_scheduleType;
@property(nonatomic) unsigned long long testingDestinationType; // @synthesize testingDestinationType=_testingDestinationType;
@property(retain, nonatomic) XCSDeviceSpecification *deviceSpecification; // @synthesize deviceSpecification=_deviceSpecification;
@property(retain, nonatomic) NSArray *triggers; // @synthesize triggers=_triggers;
@property(retain, nonatomic) NSSet *preflightIgnoredRepositoryIdentifiers; // @synthesize preflightIgnoredRepositoryIdentifiers=_preflightIgnoredRepositoryIdentifiers;
@property(nonatomic) long long preflightRepositoryAuthenticationStatus; // @synthesize preflightRepositoryAuthenticationStatus=_preflightRepositoryAuthenticationStatus;
@property(nonatomic) long long initialRepositoryAuthenticationStatus; // @synthesize initialRepositoryAuthenticationStatus=_initialRepositoryAuthenticationStatus;
@property(nonatomic) BOOL schemeSupportsDevices; // @synthesize schemeSupportsDevices=_schemeSupportsDevices;
@property(nonatomic) BOOL exportsProductFromArchive; // @synthesize exportsProductFromArchive=_exportsProductFromArchive;
@property(nonatomic) unsigned long long codeCoveragePreference; // @synthesize codeCoveragePreference=_codeCoveragePreference;
@property(nonatomic) BOOL performsArchiveAction; // @synthesize performsArchiveAction=_performsArchiveAction;
@property(nonatomic) BOOL performsTestAction; // @synthesize performsTestAction=_performsTestAction;
@property(nonatomic) BOOL performsAnalyzeAction; // @synthesize performsAnalyzeAction=_performsAnalyzeAction;
@property(retain, nonatomic) NSString *buildConfiguration; // @synthesize buildConfiguration=_buildConfiguration;
@property(nonatomic) unsigned long long buildsFromCleanSchedule; // @synthesize buildsFromCleanSchedule=_buildsFromCleanSchedule;
@property(retain, nonatomic) NSString *schemeName; // @synthesize schemeName=_schemeName;
@property(retain, nonatomic) IDEScheme *scheme; // @synthesize scheme=_scheme;
@property(copy, nonatomic) NSString *existingBotID; // @synthesize existingBotID=_existingBotID;
@property(retain, nonatomic) NSURL *sshKeyFolderURL; // @synthesize sshKeyFolderURL=_sshKeyFolderURL;
@property(retain, nonatomic) NSMapTable *workingCopiesToRemoteRepositories; // @synthesize workingCopiesToRemoteRepositories=_workingCopiesToRemoteRepositories;
@property(nonatomic) BOOL preserveExistingServerBlueprint; // @synthesize preserveExistingServerBlueprint=_preserveExistingServerBlueprint;
@property(retain, nonatomic) DVTSourceControlWorkspaceBlueprint *existingSCMWorkspaceBlueprint; // @synthesize existingSCMWorkspaceBlueprint=_existingSCMWorkspaceBlueprint;
@property(retain, nonatomic) DVTSourceControlWorkspaceBlueprint *updatedBotSCMWorkspaceBlueprint; // @synthesize updatedBotSCMWorkspaceBlueprint=_updatedBotSCMWorkspaceBlueprint;
@property(retain, nonatomic) DVTSourceControlWorkspaceBlueprint *localSCMWorkspaceBlueprint; // @synthesize localSCMWorkspaceBlueprint=_localSCMWorkspaceBlueprint;
@property(nonatomic) BOOL disableWorkspaceSpecificSettings; // @synthesize disableWorkspaceSpecificSettings=_disableWorkspaceSpecificSettings;
@property(nonatomic) BOOL botEditorShowedPermissionDeniedSheet; // @synthesize botEditorShowedPermissionDeniedSheet=_botEditorShowedPermissionDeniedSheet;
@property(nonatomic) BOOL userCanCreateBotsOnService; // @synthesize userCanCreateBotsOnService=_userCanCreateBotsOnService;
@property(retain, nonatomic) XCSService *service; // @synthesize service=_service;
@property(copy, nonatomic) NSString *defaultBotName; // @synthesize defaultBotName=_defaultBotName;
@property(copy, nonatomic) NSString *botName; // @synthesize botName=_botName;
@property(retain, nonatomic) IDEWorkspaceTabController *workspaceTabController; // @synthesize workspaceTabController=_workspaceTabController;
- (void).cxx_destruct;
- (BOOL)isSchemeValid;
- (void)fixSchemeProblem;
- (id)defaultSpecificationForExistingBot;
- (id)defaultSpecificationForNewBot;
- (void)assignDefaultRuleIfNeeded;
- (unsigned long long)defaultArchitectureTypeForPlatform:(id)arg1;
- (id)deviceFilter;
@property(readonly, nonatomic) NSArray *selectablePlatforms;
- (void)_listenForDeviceChangesForService:(id)arg1;
- (void)_loadDevicesForService:(id)arg1;
- (void)_loadPlatformsForService:(id)arg1;
- (void)_setupPlatformsAndDevicesForService:(id)arg1;
@property(readonly, copy, nonatomic) NSArray *allRepositoriesInLocalBlueprint;
@property(readonly, copy, nonatomic) NSArray *repositoriesInBotBlueprintAndInWorkspace;
@property(readonly, copy, nonatomic) NSArray *repositoriesInBotBlueprintButNotInWorkspace;
@property(readonly, copy, nonatomic) NSArray *repositoriesInWorkspaceButNotInBotBlueprint;
@property(retain, nonatomic) XCSBot *bot;
- (void)addTestingDeviceID:(id)arg1;
- (void)removeTestingDeviceID:(id)arg1;
@property(readonly, nonatomic) BOOL schemeSupportsArchiveAction;
@property(readonly, nonatomic) BOOL schemeSupportsTestAction;
@property(readonly, nonatomic) BOOL schemeSupportsAnalyzeAction;
@property(readonly, nonatomic) NSArray *supportedBuildConfigurationsForScheme;
@property(readonly, nonatomic) BOOL canContinueInDevicePicker;
@property(readonly, nonatomic) BOOL shouldSkipDevicePicker;
@property(readonly, nonatomic, getter=isInvalidTestingDestinationType) BOOL invalidTestingDestinationType;
@property(readonly, nonatomic) unsigned long long defaultTestingDestinationType;
@property(readonly, nonatomic) BOOL schemeSupportsMac32BitArchitecture;
@property(readonly, nonatomic) BOOL schemeSupportsMac;
@property(readonly, nonatomic) NSSet *schemeSupportedPlatforms;
- (BOOL)_botConfigurationSpecifiesDevices;
- (BOOL)_botConfigurationSpecifiesMac;
@property(readonly, nonatomic) IDEWorkspace *workspace;
- (void)dealloc;
- (id)initWithBot:(id)arg1 workspaceTabController:(id)arg2 editingMode:(long long)arg3 disableWorkspaceSpecificSettings:(BOOL)arg4 blueprintLoadedCallback:(CDUnknownBlockType)arg5;
- (id)initWithWorkspaceTabController:(id)arg1 editingMode:(long long)arg2 redefineBot:(id)arg3 blueprintLoadedCallback:(CDUnknownBlockType)arg4;

@end

@interface XCSUIBotDefinitionEditor : IDEViewController <DVTTabChooserViewDelegate>
{
    XCSUIBotDefinitionEditor_BasicInfoCapsule *_basicInfoViewController;
    XCSUIBotDefinitionEditor_SCMCapsule *_scmCapsule;
    XCSUIBotDefinitionEditor_ScheduleCapsule *_scheduleViewController;
    XCSUIBotDefinitionEditor_DevicePickerCapsule *_devicePickerCapsule;
    XCSUIBotDefinitionEditor_NotificationsCapsule *_notificationsCapsule;
    IDEWorkspaceTabController *_workspaceTabController;
    DVTChoice *_basicInfoChoice;
    DVTChoice *_devicePickerChoice;
    DVTChoice *_repositoriesChoice;
    DVTChoice *_notificationsChoice;
    BOOL _disableWorkspaceSpecificSettings;
    XCSUIBotDefinitionContext *_definitionContext;
    XCSBot *_bot;
    DVTTabChooserView *_tabChooserView;
    DVTBorderedView *_borderedView;
    DVTReplacementView *_detailReplacementView;
    DVTBorderedView *_detailBorderedView;
}

@property __weak DVTBorderedView *detailBorderedView; // @synthesize detailBorderedView=_detailBorderedView;
@property __weak DVTReplacementView *detailReplacementView; // @synthesize detailReplacementView=_detailReplacementView;
@property __weak DVTBorderedView *borderedView; // @synthesize borderedView=_borderedView;
@property __weak DVTTabChooserView *tabChooserView; // @synthesize tabChooserView=_tabChooserView;
@property(nonatomic) BOOL disableWorkspaceSpecificSettings; // @synthesize disableWorkspaceSpecificSettings=_disableWorkspaceSpecificSettings;
@property(retain, nonatomic) XCSBot *bot; // @synthesize bot=_bot;
@property(retain, nonatomic) XCSUIBotDefinitionContext *definitionContext; // @synthesize definitionContext=_definitionContext;
- (void).cxx_destruct;
- (void)selectPane:(long long)arg1;
- (void)tabChooserView:(id)arg1 userDidChooseChoice:(id)arg2;
@property(readonly, nonatomic) id <XCSUIBotDefintionEditorViewController> installedViewController;
- (void)commitChanges;
- (void)loadViewForChoice:(id)arg1;
- (void)configureContext;
@property(retain, nonatomic) IDEWorkspaceTabController *workspaceTabController;
- (void)primitiveInvalidate;
- (void)unloadViews;
- (void)loadView;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XCSUIBotDefinitionEditorWindowController : NSWindowController
{
    BOOL _disableWorkspaceSpecificSettings;
    IDEWorkspaceTabController *_workspaceTabController;
    XCSBot *_bot;
    NSWindow *_hostWindow;
    XCSUIBotDefinitionEditor *_definitionEditor;
    long long _selectPane;
    DVTReplacementView *_replacementView;
    NSTextField *_editBotLabel;
}

@property __weak NSTextField *editBotLabel; // @synthesize editBotLabel=_editBotLabel;
@property __weak DVTReplacementView *replacementView; // @synthesize replacementView=_replacementView;
@property long long selectPane; // @synthesize selectPane=_selectPane;
@property(retain, nonatomic) XCSUIBotDefinitionEditor *definitionEditor; // @synthesize definitionEditor=_definitionEditor;
@property(nonatomic) BOOL disableWorkspaceSpecificSettings; // @synthesize disableWorkspaceSpecificSettings=_disableWorkspaceSpecificSettings;
@property(retain, nonatomic) NSWindow *hostWindow; // @synthesize hostWindow=_hostWindow;
@property(retain, nonatomic) XCSBot *bot; // @synthesize bot=_bot;
@property(retain, nonatomic) IDEWorkspaceTabController *workspaceTabController; // @synthesize workspaceTabController=_workspaceTabController;
- (void).cxx_destruct;
- (void)done:(id)arg1;
- (void)cancel:(id)arg1;
@property(readonly, nonatomic) XCSUIBotDefinitionContext *definitionContext;
- (void)windowDidLoad;

@end

@interface XCSUIBotDefinitionEditor_BasicInfoCapsule : IDEViewController <XCSUIBotDefintionEditorViewController>
{
    XCSUIBotDefinition_BasicInfoEditor *_basicInfoViewController;
    XCSUIBotDefinitionContext *_definitionContext;
}

+ (id)title;
@property(retain, nonatomic) XCSUIBotDefinitionContext *definitionContext; // @synthesize definitionContext=_definitionContext;
- (void).cxx_destruct;
- (void)primitiveInvalidate;
- (void)commitChanges;
- (void)loadView;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface XCSUIBotDefinitionEditor_DevicePickerCapsule : IDEViewController <XCSUIBotDefintionEditorViewController>
{
    XCSUIBotDefinitionContext *_definitionContext;
    XCSUIBotDefinition_DevicePickerEditor_Legacy *_legacyDevicePickerEditor;
    XCSUIBotDefinition_DevicePickerEditor *_devicePickerEditor;
}

+ (id)title;
@property(retain, nonatomic) XCSUIBotDefinition_DevicePickerEditor *devicePickerEditor; // @synthesize devicePickerEditor=_devicePickerEditor;
@property(retain, nonatomic) XCSUIBotDefinition_DevicePickerEditor_Legacy *legacyDevicePickerEditor; // @synthesize legacyDevicePickerEditor=_legacyDevicePickerEditor;
@property(retain, nonatomic) XCSUIBotDefinitionContext *definitionContext; // @synthesize definitionContext=_definitionContext;
- (void).cxx_destruct;
- (void)commitChanges;
- (void)primitiveInvalidate;
- (void)loadView;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface XCSUIBotDefinitionEditor_NotificationsCapsule : IDEViewController <XCSUIBotDefintionEditorViewController>
{
    XCSUIBotDefinitionContext *_definitionContext;
    XCSUIBotDefinition_NotificationsEditor *_notificationsEditor;
}

+ (id)title;
@property(retain, nonatomic) XCSUIBotDefinition_NotificationsEditor *notificationsEditor; // @synthesize notificationsEditor=_notificationsEditor;
@property(retain, nonatomic) XCSUIBotDefinitionContext *definitionContext; // @synthesize definitionContext=_definitionContext;
- (void).cxx_destruct;
- (void)primitiveInvalidate;
- (void)commitChanges;
- (void)loadView;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface XCSUIBotDefinitionEditor_SCMCapsule : IDEViewController <XCSUIBotDefintionEditorViewController>
{
    XCSUIBotDefinitionContext *_definitionContext;
    XCSUIBotDefinition_SCMEditor *_scmEditor;
}

+ (id)title;
@property(retain, nonatomic) XCSUIBotDefinition_SCMEditor *scmEditor; // @synthesize scmEditor=_scmEditor;
@property(retain, nonatomic) XCSUIBotDefinitionContext *definitionContext; // @synthesize definitionContext=_definitionContext;
- (void).cxx_destruct;
- (void)primitiveInvalidate;
- (void)loadView;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface XCSUIBotDefinitionEditor_ScheduleCapsule : IDEViewController <XCSUIBotDefintionEditorViewController>
{
    id _replacementViewFrameWatcher;
    XCSUIBotDefinition_SchedulingEditor *_schedulingViewController;
    XCSUIBotDefinitionContext *_definitionContext;
    DVTReplacementView *_replacementView;
}

+ (id)title;
@property __weak DVTReplacementView *replacementView; // @synthesize replacementView=_replacementView;
@property(retain, nonatomic) XCSUIBotDefinitionContext *definitionContext; // @synthesize definitionContext=_definitionContext;
- (void).cxx_destruct;
- (void)primitiveInvalidate;
- (void)loadView;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface XCSUIBotDefinitionUpdater : NSObject
{
}

- (void)updateBotConfiguration:(id)arg1 fromContext:(id)arg2 updatingBot:(BOOL)arg3 updateWorkspaceSpecificSettings:(BOOL)arg4;

@end

@interface XCSUIBotDefinition_BasicInfoEditor : IDEViewController
{
    DVTObservingToken *_serversObservingToken;
    DVTObservingToken *_scmDefinitionObservingToken;
    DVTObservingToken *_reachabilityObservingToken;
    DVTObservingToken *_runContextsObservingToken;
    DVTObservingToken *_userCanCreateBotsObserver;
    BOOL _isCheckingCanCreateBots;
    BOOL _showedPermissionDeniedSheet;
    BOOL _canCreateBotOnServer;
    BOOL _canCreateQueryComplete;
    BOOL _shouldHideServerWarningButton;
    BOOL _shouldFixScheme;
    BOOL _viewIsInstalled;
    XCSUIBotDefinitionContext *_botDefinitionContext;
    NSArray *_servers;
    NSImage *_warningImage;
    XCSUIAccountReachabilityToImageTransformer *_imageTransformer;
    NSError *_schemeError;
    NSPopUpButton *_serversPopup;
    NSPopUpButton *_schemesPopup;
    NSTextField *_botNameField;
    NSView *_viewsHostView;
    NSView *_controlsView;
    NSView *_schemeChooserView;
    NSView *_schemeProblemView;
    NSButton *_fixSchemeProblemCheckbox;
    NSButton *_serverWarningButton;
    NSArrayController *_schemesController;
}

@property(retain, nonatomic) NSArrayController *schemesController; // @synthesize schemesController=_schemesController;
@property __weak NSButton *serverWarningButton; // @synthesize serverWarningButton=_serverWarningButton;
@property(retain) NSButton *fixSchemeProblemCheckbox; // @synthesize fixSchemeProblemCheckbox=_fixSchemeProblemCheckbox;
@property(retain) NSView *schemeProblemView; // @synthesize schemeProblemView=_schemeProblemView;
@property(retain) NSView *schemeChooserView; // @synthesize schemeChooserView=_schemeChooserView;
@property(retain) NSView *controlsView; // @synthesize controlsView=_controlsView;
@property __weak NSView *viewsHostView; // @synthesize viewsHostView=_viewsHostView;
@property(retain) NSTextField *botNameField; // @synthesize botNameField=_botNameField;
@property(retain) NSPopUpButton *schemesPopup; // @synthesize schemesPopup=_schemesPopup;
@property(retain) NSPopUpButton *serversPopup; // @synthesize serversPopup=_serversPopup;
@property(nonatomic) BOOL viewIsInstalled; // @synthesize viewIsInstalled=_viewIsInstalled;
@property(nonatomic) BOOL shouldFixScheme; // @synthesize shouldFixScheme=_shouldFixScheme;
@property(nonatomic) BOOL shouldHideServerWarningButton; // @synthesize shouldHideServerWarningButton=_shouldHideServerWarningButton;
@property(nonatomic) BOOL canCreateQueryComplete; // @synthesize canCreateQueryComplete=_canCreateQueryComplete;
@property(retain, nonatomic) NSError *schemeError; // @synthesize schemeError=_schemeError;
@property(nonatomic) BOOL canCreateBotOnServer; // @synthesize canCreateBotOnServer=_canCreateBotOnServer;
@property(retain, nonatomic) XCSUIAccountReachabilityToImageTransformer *imageTransformer; // @synthesize imageTransformer=_imageTransformer;
@property(retain, nonatomic) NSImage *warningImage; // @synthesize warningImage=_warningImage;
@property(retain, nonatomic) NSArray *servers; // @synthesize servers=_servers;
@property(retain) XCSUIBotDefinitionContext *botDefinitionContext; // @synthesize botDefinitionContext=_botDefinitionContext;
- (void).cxx_destruct;
- (void)verifyIfSCMIsTrackingCurrentSelectedScheme;
- (void)schemePopUpAction:(id)arg1;
- (void)setSelectedServer:(id)arg1;
- (void)_fixupStackView;
- (void)_selectAssistantContextSchemeInPopUp;
- (void)selectServiceInPopup:(id)arg1;
- (void)addNewServerAction:(id)arg1;
- (void)serverSelectedAction:(id)arg1;
- (void)dummyDummy:(id)arg1;
- (void)_updateServersPopup;
- (void)_clearServersPopup;
- (void)textDidChange:(id)arg1;
- (void)viewWillUninstall;
- (void)commitChanges;
- (void)viewDidInstall;
- (void)loadView;
- (void)primitiveInvalidate;

@end

@interface XCSUIBotDefinition_DevicePickerEditor : IDEViewController
{
    XCSUIBotDefinitionContext *_botDefinitionContext;
    NSMutableArray *_groupedDevices;
    NSTextField *_testWithLabel;
    NSPopUpButton *_platformsButton;
    NSPopUpButton *_filterTypesButton;
    NSPopUpButton *_architectureTypesButton;
    DVTBorderedView *_borderedView;
    DVTTableView *_tableView;
    NSTextField *_platformsErrorLabel;
}

@property __weak NSTextField *platformsErrorLabel; // @synthesize platformsErrorLabel=_platformsErrorLabel;
@property __weak DVTTableView *tableView; // @synthesize tableView=_tableView;
@property __weak DVTBorderedView *borderedView; // @synthesize borderedView=_borderedView;
@property __weak NSPopUpButton *architectureTypesButton; // @synthesize architectureTypesButton=_architectureTypesButton;
@property __weak NSPopUpButton *filterTypesButton; // @synthesize filterTypesButton=_filterTypesButton;
@property __weak NSPopUpButton *platformsButton; // @synthesize platformsButton=_platformsButton;
@property __weak NSTextField *testWithLabel; // @synthesize testWithLabel=_testWithLabel;
@property(retain, nonatomic) NSMutableArray *groupedDevices; // @synthesize groupedDevices=_groupedDevices;
@property(retain, nonatomic) XCSUIBotDefinitionContext *botDefinitionContext; // @synthesize botDefinitionContext=_botDefinitionContext;
- (void).cxx_destruct;
- (BOOL)tableView:(id)arg1 isGroupRow:(long long)arg2;
- (id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)groupDevices;
- (id)platformForIdentifier:(id)arg1;
- (void)selectOrDeselectDevice:(id)arg1;
- (void)chooseArchitectureType:(id)arg1;
- (void)chooseFilterType:(id)arg1;
- (void)choosePlatform:(id)arg1;
- (void)updateArchitecturesMenu;
- (void)updateFiltersMenu;
- (void)syncFromModelToView;
- (void)updateAvailableDevices;
- (void)updatePlatformsMenu;
- (void)listenForDeviceChanges;
@property(readonly) NSArray *selectedDevices;
@property(readonly) NSArray *compatibleDevices;
@property(readonly) NSArray *selectablePlatforms;
@property(readonly) NSArray *availableDevices;
@property(readonly) NSArray *availablePlatforms;
- (id)filter;
@property(retain, nonatomic) XCSDeviceSpecification *deviceSpecification;
- (id)service;
- (void)commitChanges;
- (void)viewWillUninstall;
- (void)viewDidInstall;

@end

@interface XCSUIBotDefinition_DevicePickerEditor_Legacy : IDEViewController <NSTableViewDelegate, NSTableViewDataSource>
{
    DVTObservingToken *_destinationSelectionTypeObservingToken;
    BOOL _viewIsInstalled;
    XCSUIBotDefinitionContext *_botDefinitionContext;
    NSTextField *_testWithLabel;
    NSPopUpButton *_destinationSelectionTypePopUp;
    DVTTableView *_tableView;
    DVTColoredSpinner *_progressIndicator;
    DVTBorderedView *_devicesBorderView;
    NSScrollView *_scrollView;
    NSArray *_simulatorDevices;
    NSArray *_iosDevices;
    NSArray *_unsupportedDevices;
    NSArray *_unsupportedSimulators;
    NSArray *_disconnectedDevices;
    NSArray *_rowObjects;
    NSMenu *_popUpMenu;
    NSMenu *_macSubmenu;
    NSMenu *_iOSSubmenu;
    NSPopUpButton *_deviceTypeDesintationPopUp;
    NSButton *_arch32CheckBox;
    NSButton *_arch64CheckBox;
    NSMatrix *_macArchMatrix;
    NSMenuItem *_alliOSSimulatorsMenuItem;
    NSMenuItem *_alliOSDevicesAndSimulatorsMenuItem;
    long long _selectedDeviceType;
}

@property(nonatomic) long long selectedDeviceType; // @synthesize selectedDeviceType=_selectedDeviceType;
@property __weak NSMenuItem *alliOSDevicesAndSimulatorsMenuItem; // @synthesize alliOSDevicesAndSimulatorsMenuItem=_alliOSDevicesAndSimulatorsMenuItem;
@property __weak NSMenuItem *alliOSSimulatorsMenuItem; // @synthesize alliOSSimulatorsMenuItem=_alliOSSimulatorsMenuItem;
@property __weak NSMatrix *macArchMatrix; // @synthesize macArchMatrix=_macArchMatrix;
@property __weak NSButton *arch64CheckBox; // @synthesize arch64CheckBox=_arch64CheckBox;
@property __weak NSButton *arch32CheckBox; // @synthesize arch32CheckBox=_arch32CheckBox;
@property __weak NSPopUpButton *deviceTypeDesintationPopUp; // @synthesize deviceTypeDesintationPopUp=_deviceTypeDesintationPopUp;
@property(retain) NSMenu *iOSSubmenu; // @synthesize iOSSubmenu=_iOSSubmenu;
@property(retain) NSMenu *macSubmenu; // @synthesize macSubmenu=_macSubmenu;
@property __weak NSMenu *popUpMenu; // @synthesize popUpMenu=_popUpMenu;
@property(retain, nonatomic) NSArray *rowObjects; // @synthesize rowObjects=_rowObjects;
@property(retain, nonatomic) NSArray *disconnectedDevices; // @synthesize disconnectedDevices=_disconnectedDevices;
@property(retain, nonatomic) NSArray *unsupportedSimulators; // @synthesize unsupportedSimulators=_unsupportedSimulators;
@property(retain, nonatomic) NSArray *unsupportedDevices; // @synthesize unsupportedDevices=_unsupportedDevices;
@property(retain, nonatomic) NSArray *iosDevices; // @synthesize iosDevices=_iosDevices;
@property(retain, nonatomic) NSArray *simulatorDevices; // @synthesize simulatorDevices=_simulatorDevices;
@property(retain, nonatomic) NSScrollView *scrollView; // @synthesize scrollView=_scrollView;
@property(retain, nonatomic) DVTBorderedView *devicesBorderView; // @synthesize devicesBorderView=_devicesBorderView;
@property(retain, nonatomic) DVTColoredSpinner *progressIndicator; // @synthesize progressIndicator=_progressIndicator;
@property(retain, nonatomic) DVTTableView *tableView; // @synthesize tableView=_tableView;
@property(retain) NSPopUpButton *destinationSelectionTypePopUp; // @synthesize destinationSelectionTypePopUp=_destinationSelectionTypePopUp;
@property __weak NSTextField *testWithLabel; // @synthesize testWithLabel=_testWithLabel;
@property(nonatomic) BOOL viewIsInstalled; // @synthesize viewIsInstalled=_viewIsInstalled;
@property(retain, nonatomic) XCSUIBotDefinitionContext *botDefinitionContext; // @synthesize botDefinitionContext=_botDefinitionContext;
- (void).cxx_destruct;
- (void)select_iOSSpecificDevicesAndSimulators:(id)arg1;
- (void)select_iOSAllDevicesAndSimulators:(id)arg1;
- (void)select_iOSAllDevices:(id)arg1;
- (void)select_iOSAllSimulators:(id)arg1;
- (void)select_macArchRadioButton:(id)arg1;
- (void)select_specificMacArchitectures:(id)arg1;
- (void)select_defaultAllMacArchitectures:(id)arg1;
- (void)select_defaultMacArchitecture:(id)arg1;
- (void)select_allCompatibleDevices:(id)arg1;
- (void)select_iOSDevices:(id)arg1;
- (void)select_macDevices:(id)arg1;
- (long long)numberOfRowsInTableView:(id)arg1;
- (BOOL)tableView:(id)arg1 isGroupRow:(long long)arg2;
- (id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3;
- (void)_checkboxAction:(id)arg1;
- (id)tableView:(id)arg1 selectionIndexesForProposedSelection:(id)arg2;
- (BOOL)validateMenuItem:(id)arg1;
- (void)configureForDestinationType:(unsigned long long)arg1;
- (void)destinationSelectionTypePopUpAction:(id)arg1;
- (void)viewWillUninstall;
- (void)viewDidInstall;
- (void)_processDevices:(id)arg1;
- (BOOL)isBotConfiguredToTestOnSpecificDeviceID:(id)arg1;
- (void)listenForDeviceUpdates;
- (void)updateDevices;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XCSUIBotDefinition_NotificationsEditor : IDEViewController <NSTableViewDataSource, NSTableViewDelegate, XCSUICreateBotTriggerCreateCellViewDelegate, XCSUICreateBotTriggerViewControllerDelegate>
{
    BOOL _viewIsInstalled;
    XCSUIBotDefinitionContext *_botDefinitionContext;
    NSMutableArray *_preIntegrationTriggers;
    NSMutableArray *_postIntegrationTriggers;
    NSMapTable *_allTriggerViewControllers;
    NSMutableSet *_disclosedTriggers;
    NSTableView *_triggersTableView;
}

+ (id)keyPathsForValuesAffectingCanGoForward;
@property(nonatomic) __weak NSTableView *triggersTableView; // @synthesize triggersTableView=_triggersTableView;
@property(retain, nonatomic) NSMutableSet *disclosedTriggers; // @synthesize disclosedTriggers=_disclosedTriggers;
@property(retain, nonatomic) NSMapTable *allTriggerViewControllers; // @synthesize allTriggerViewControllers=_allTriggerViewControllers;
@property(retain, nonatomic) NSMutableArray *postIntegrationTriggers; // @synthesize postIntegrationTriggers=_postIntegrationTriggers;
@property(retain, nonatomic) NSMutableArray *preIntegrationTriggers; // @synthesize preIntegrationTriggers=_preIntegrationTriggers;
@property(nonatomic) BOOL viewIsInstalled; // @synthesize viewIsInstalled=_viewIsInstalled;
@property(retain, nonatomic) XCSUIBotDefinitionContext *botDefinitionContext; // @synthesize botDefinitionContext=_botDefinitionContext;
- (void).cxx_destruct;
- (double)tableView:(id)arg1 heightOfRow:(long long)arg2;
- (id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (unsigned long long)rowForTrigger:(id)arg1;
- (void)triggerViewControllerRemovedTrigger:(id)arg1;
- (void)triggerViewController:(id)arg1 disclosed:(BOOL)arg2;
- (void)triggerCreateCell:(id)arg1 addTriggerOfType:(unsigned long long)arg2;
- (BOOL)alwaysShowFinish;
- (BOOL)canGoForward;
- (void)primitiveInvalidate;
- (void)viewWillUninstall;
- (void)commitChanges;
- (void)viewDidInstall;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XCSUIBotDefinition_SCMEditor : IDEViewController <NSTableViewDataSource, NSTableViewDelegate, NSTabViewDelegate, XCSUICreateBotRepositoryTableCellViewDelegate, NSOutlineViewDataSource, NSOutlineViewDelegate>
{
    BOOL _skippingPreflight;
    BOOL _viewIsInstalled;
    BOOL _reflightFailureAddressed;
    BOOL _preflightOrReflightInProcess;
    XCSUIBotDefinitionContext *_botDefinitionContext;
    id <XCSUIBotDefinition_SCMEditor_AssistantCallback> _assistantCallback;
    unsigned long long _repositoriesWithUnaddressedIssues;
    unsigned long long _viewState;
    NSView *_currentTopLevelView;
    NSArray *_repositoryIssues;
    NSView *_preflightProgressView;
    DVTColoredSpinner *_preflightProgressSpinner;
    NSImageView *_preflightStatusImageView;
    NSTextField *_preflightStatusMessageField;
    NSTextField *_preflightStatusDetailsField;
    NSView *_repositoriesHostView;
    DVTOutlineView *_repositoriesOutlineView;
    NSArray *_repositories;
    IDESourceControlCredentialWindowController *_credentialSheetController;
    XCSListBranchesResult *_listBranchesResult;
}

@property(retain) XCSListBranchesResult *listBranchesResult; // @synthesize listBranchesResult=_listBranchesResult;
@property(retain) IDESourceControlCredentialWindowController *credentialSheetController; // @synthesize credentialSheetController=_credentialSheetController;
@property(copy, nonatomic) NSArray *repositories; // @synthesize repositories=_repositories;
@property __weak DVTOutlineView *repositoriesOutlineView; // @synthesize repositoriesOutlineView=_repositoriesOutlineView;
@property(retain) NSView *repositoriesHostView; // @synthesize repositoriesHostView=_repositoriesHostView;
@property __weak NSTextField *preflightStatusDetailsField; // @synthesize preflightStatusDetailsField=_preflightStatusDetailsField;
@property __weak NSTextField *preflightStatusMessageField; // @synthesize preflightStatusMessageField=_preflightStatusMessageField;
@property __weak NSImageView *preflightStatusImageView; // @synthesize preflightStatusImageView=_preflightStatusImageView;
@property __weak DVTColoredSpinner *preflightProgressSpinner; // @synthesize preflightProgressSpinner=_preflightProgressSpinner;
@property(retain) NSView *preflightProgressView; // @synthesize preflightProgressView=_preflightProgressView;
@property(retain) NSArray *repositoryIssues; // @synthesize repositoryIssues=_repositoryIssues;
@property(retain) NSView *currentTopLevelView; // @synthesize currentTopLevelView=_currentTopLevelView;
@property unsigned long long viewState; // @synthesize viewState=_viewState;
@property(nonatomic) BOOL preflightOrReflightInProcess; // @synthesize preflightOrReflightInProcess=_preflightOrReflightInProcess;
@property unsigned long long repositoriesWithUnaddressedIssues; // @synthesize repositoriesWithUnaddressedIssues=_repositoriesWithUnaddressedIssues;
@property BOOL reflightFailureAddressed; // @synthesize reflightFailureAddressed=_reflightFailureAddressed;
@property BOOL viewIsInstalled; // @synthesize viewIsInstalled=_viewIsInstalled;
@property(readonly) BOOL skippingPreflight; // @synthesize skippingPreflight=_skippingPreflight;
@property(retain) id <XCSUIBotDefinition_SCMEditor_AssistantCallback> assistantCallback; // @synthesize assistantCallback=_assistantCallback;
@property(retain) XCSUIBotDefinitionContext *botDefinitionContext; // @synthesize botDefinitionContext=_botDefinitionContext;
- (void).cxx_destruct;
- (id)outlineView:(id)arg1 rowViewForItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 shouldSelectItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 shouldShowOutlineCellForItem:(id)arg2;
- (id)outlineView:(id)arg1 viewForTableColumn:(id)arg2 item:(id)arg3;
- (BOOL)outlineView:(id)arg1 isItemExpandable:(id)arg2;
- (id)outlineView:(id)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (long long)outlineView:(id)arg1 numberOfChildrenOfItem:(id)arg2;
- (double)outlineView:(id)arg1 heightOfRowByItem:(id)arg2;
- (id)repoIssueForRepo:(id)arg1;
- (void)reloadRepositoriesOutlineView;
- (void)transitionToViewState:(unsigned long long)arg1;
- (void)createRepositoryIssues:(id)arg1;
- (void)displayFailureMessage:(id)arg1 withDetails:(id)arg2;
- (void)displayStatusMessage:(id)arg1 withDetails:(id)arg2;
- (void)updateCredentialsToResolveIssue:(id)arg1;
- (void)certificateSheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)goNextOrFinishDismissingPreflightReflightAlert;
- (void)reflightBranches;
- (void)listBranches;
- (void)extractAndDiplayErrorsFromBlueprintResult:(id)arg1;
- (void)resetRepositoryIssues;
- (BOOL)isFingerprintEnforcementAvailable;
- (BOOL)isListBranchesXCSCoreEndpointAvailable;
- (void)loadView;
- (void)viewWillUninstall;
- (void)viewDidInstall;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XCSUIBotDefinition_SCMEditor_LocationCellView : NSTableCellView
{
    id <DVTSourceControlCancellable> _listBranchesOperation;
    NSArray *_remoteBranches;
    BOOL _credentialCheckingInProgress;
    BOOL _showingUnlistedBranch;
    DVTSourceControlRemoteRepository *_repository;
    XCSUICreateBotRepositoryIssue *_issue;
    NSArray *_branches;
    DVTSourceControlRevisionLocation *_currentLocation;
    NSTextField *_repositoryName;
    NSTextField *_repositoryURL;
    NSTextField *_repositoryError;
    NSPopUpButton *_branchPopUpButton;
    NSTextField *_singleBranchLabel;
    NSButton *_checkBox;
    NSButton *_credentialErrorButton;
    DVTColoredSpinner *_verificationProgressIndicator;
    CDUnknownBlockType _repositorySelectionChanged;
    CDUnknownBlockType _credentialErrorButtonClicked;
    CDUnknownBlockType _repositoryBranchChanged;
}

@property(nonatomic) BOOL showingUnlistedBranch; // @synthesize showingUnlistedBranch=_showingUnlistedBranch;
@property(nonatomic) BOOL credentialCheckingInProgress; // @synthesize credentialCheckingInProgress=_credentialCheckingInProgress;
@property(copy, nonatomic) CDUnknownBlockType repositoryBranchChanged; // @synthesize repositoryBranchChanged=_repositoryBranchChanged;
@property(copy, nonatomic) CDUnknownBlockType credentialErrorButtonClicked; // @synthesize credentialErrorButtonClicked=_credentialErrorButtonClicked;
@property(copy, nonatomic) CDUnknownBlockType repositorySelectionChanged; // @synthesize repositorySelectionChanged=_repositorySelectionChanged;
@property __weak DVTColoredSpinner *verificationProgressIndicator; // @synthesize verificationProgressIndicator=_verificationProgressIndicator;
@property __weak NSButton *credentialErrorButton; // @synthesize credentialErrorButton=_credentialErrorButton;
@property __weak NSButton *checkBox; // @synthesize checkBox=_checkBox;
@property __weak NSTextField *singleBranchLabel; // @synthesize singleBranchLabel=_singleBranchLabel;
@property __weak NSPopUpButton *branchPopUpButton; // @synthesize branchPopUpButton=_branchPopUpButton;
@property __weak NSTextField *repositoryError; // @synthesize repositoryError=_repositoryError;
@property __weak NSTextField *repositoryURL; // @synthesize repositoryURL=_repositoryURL;
@property __weak NSTextField *repositoryName; // @synthesize repositoryName=_repositoryName;
@property(retain, nonatomic) DVTSourceControlRevisionLocation *currentLocation; // @synthesize currentLocation=_currentLocation;
@property(retain, nonatomic) NSArray *branches; // @synthesize branches=_branches;
@property(retain, nonatomic) XCSUICreateBotRepositoryIssue *issue; // @synthesize issue=_issue;
@property(retain, nonatomic) DVTSourceControlRemoteRepository *repository; // @synthesize repository=_repository;
- (void).cxx_destruct;
- (void)selectRepository:(id)arg1;
- (void)selectBranch:(id)arg1;
- (void)_refreshUI;
- (void)clickErrorButton:(id)arg1;
- (void)awakeFromNib;

@end

@interface XCSUIBotDefinition_SCMRepoTableRowView : NSTableRowView
{
    BOOL _drawBottomLine;
}

@property BOOL drawBottomLine; // @synthesize drawBottomLine=_drawBottomLine;
- (void)drawSeparatorInRect:(struct CGRect)arg1;

@end

@interface XCSUIBotDefinition_SchedulingEditor : IDEViewController <NSControlTextEditingDelegate>
{
    BOOL _hasUserManuallyTriggeredInstallableProductSetting;
    BOOL _userInitiatedCreateInstallableProductState;
    XCSUIBotDefinitionContext *_botDefinitionContext;
    NSView *_mainView;
    NSView *_scheduleLayer;
    NSView *_actionsLayer;
    NSPopUpButton *_scheduleTypePopUp;
    NSView *_periodicLayer;
    NSPopUpButton *_periodTypePopUp;
    NSPopUpButton *_minutePopUp;
    NSTextField *_onLabel;
    NSPopUpButton *_dayOfWeekPopUp;
    NSDatePicker *_timePicker;
    NSTextField *_minutesAfterTheHourLabel;
    NSTextField *_atLabel;
    NSView *_onCommitLayer;
    NSView *_manualLayer;
    unsigned long long _currentScheduleType;
    unsigned long long _currentPeriodType;
    NSButton *_analyzeActionCheckbox;
    NSButton *_testActionCheckbox;
    NSTextField *_codeCoverageLabel;
    NSPopUpButton *_codeCoveragePreferencePopUp;
    NSButton *_archiveActionCheckbox;
    NSButton *_exportsProductFromArchiveCheckbox;
    NSPopUpButton *_cleaningPopUp;
    NSTextField *_cleaningPopUpSubText;
    NSPopUpButton *_buildConfigurationPopUp;
}

+ (id)keyPathsForValuesAffectingTimeOfDayToIntegrate;
+ (id)keyPathsForValuesAffectingCreateBotAssistantContext;
+ (id)keyPathsForValuesAffectingAssistantContext;
@property __weak NSPopUpButton *buildConfigurationPopUp; // @synthesize buildConfigurationPopUp=_buildConfigurationPopUp;
@property __weak NSTextField *cleaningPopUpSubText; // @synthesize cleaningPopUpSubText=_cleaningPopUpSubText;
@property __weak NSPopUpButton *cleaningPopUp; // @synthesize cleaningPopUp=_cleaningPopUp;
@property __weak NSButton *exportsProductFromArchiveCheckbox; // @synthesize exportsProductFromArchiveCheckbox=_exportsProductFromArchiveCheckbox;
@property __weak NSButton *archiveActionCheckbox; // @synthesize archiveActionCheckbox=_archiveActionCheckbox;
@property __weak NSPopUpButton *codeCoveragePreferencePopUp; // @synthesize codeCoveragePreferencePopUp=_codeCoveragePreferencePopUp;
@property __weak NSTextField *codeCoverageLabel; // @synthesize codeCoverageLabel=_codeCoverageLabel;
@property __weak NSButton *testActionCheckbox; // @synthesize testActionCheckbox=_testActionCheckbox;
@property __weak NSButton *analyzeActionCheckbox; // @synthesize analyzeActionCheckbox=_analyzeActionCheckbox;
@property(nonatomic) unsigned long long currentPeriodType; // @synthesize currentPeriodType=_currentPeriodType;
@property(nonatomic) unsigned long long currentScheduleType; // @synthesize currentScheduleType=_currentScheduleType;
@property(retain, nonatomic) NSView *manualLayer; // @synthesize manualLayer=_manualLayer;
@property(retain, nonatomic) NSView *onCommitLayer; // @synthesize onCommitLayer=_onCommitLayer;
@property(retain, nonatomic) NSTextField *atLabel; // @synthesize atLabel=_atLabel;
@property(retain, nonatomic) NSTextField *minutesAfterTheHourLabel; // @synthesize minutesAfterTheHourLabel=_minutesAfterTheHourLabel;
@property(retain, nonatomic) NSDatePicker *timePicker; // @synthesize timePicker=_timePicker;
@property(retain, nonatomic) NSPopUpButton *dayOfWeekPopUp; // @synthesize dayOfWeekPopUp=_dayOfWeekPopUp;
@property(retain, nonatomic) NSTextField *onLabel; // @synthesize onLabel=_onLabel;
@property(retain, nonatomic) NSPopUpButton *minutePopUp; // @synthesize minutePopUp=_minutePopUp;
@property(retain, nonatomic) NSPopUpButton *periodTypePopUp; // @synthesize periodTypePopUp=_periodTypePopUp;
@property(retain, nonatomic) NSView *periodicLayer; // @synthesize periodicLayer=_periodicLayer;
@property(retain, nonatomic) NSPopUpButton *scheduleTypePopUp; // @synthesize scheduleTypePopUp=_scheduleTypePopUp;
@property(retain, nonatomic) NSView *actionsLayer; // @synthesize actionsLayer=_actionsLayer;
@property(retain, nonatomic) NSView *scheduleLayer; // @synthesize scheduleLayer=_scheduleLayer;
@property(retain, nonatomic) NSView *mainView; // @synthesize mainView=_mainView;
@property(retain, nonatomic) XCSUIBotDefinitionContext *botDefinitionContext; // @synthesize botDefinitionContext=_botDefinitionContext;
- (void).cxx_destruct;
- (void)exportsProductFromArchiveAction:(id)arg1;
- (void)performsArchiveActionAction:(id)arg1;
- (void)codeCoveragePreferenceAction:(id)arg1;
- (void)performsTestActionAction:(id)arg1;
- (void)performsAnalyzeActionAction:(id)arg1;
@property(retain, nonatomic) NSDate *timeOfDayToIntegrate;
- (void)minutePopUpAction:(id)arg1;
- (void)cleanPreferenceAction:(id)arg1;
- (void)buildConfigurationAction:(id)arg1;
- (void)commitTypeAction:(id)arg1;
- (id)preparePeriodicLayer;
- (void)periodTypePopUpAction:(id)arg1;
- (void)_updateMinutePopUpIndex;
- (void)prepareLayers;
- (void)scheduleTypePopUpAction:(id)arg1;
- (void)moveView:(id)arg1 rightOfView:(id)arg2;
- (void)moveView:(id)arg1 belowView:(id)arg2;
- (void)addLayerToEnd:(id)arg1 belowView:(id)arg2;
- (void)setupLayers;
- (id)createBotAssistantContext;
- (id)assistantContext;
- (void)viewWillUninstall;
- (void)viewDidInstall;
- (void)loadView;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XCSUIBotEditorSectionDividerView : NSView
{
}

- (void)drawRect:(struct CGRect)arg1;
- (id)init;

@end

@interface XCSUIBotIntegrationCodeCoveragePopoverBadgesView : NSView
{
    unsigned long long _codeCoverage;
    XCSUIBotIntegrationPopoverStatusBadgeView *_codeCoverageBadgeView;
}

@property __weak XCSUIBotIntegrationPopoverStatusBadgeView *codeCoverageBadgeView; // @synthesize codeCoverageBadgeView=_codeCoverageBadgeView;
- (void).cxx_destruct;
- (void)updateBadgesWithCodeCoverage:(unsigned long long)arg1;

@end

@interface XCSUIBotIntegrationCodeCoveragePopoverViewController : DVTViewController
{
    NSString *_integrationTitle;
    NSString *_timestamp;
    NSString *_codeCoverageSuccessText;
    NSString *_codeCoverageFailedText;
    unsigned long long _codeCoverage;
    CDUnknownBlockType _clickHandler;
    NSImage *_coverageFailedIcon;
    NSImage *_coverageSucceededIcon;
    NSTextField *_integrationTextField;
    XCSUIBotIntegrationCodeCoveragePopoverBadgesView *_countsView;
}

@property __weak XCSUIBotIntegrationCodeCoveragePopoverBadgesView *countsView; // @synthesize countsView=_countsView;
@property __weak NSTextField *integrationTextField; // @synthesize integrationTextField=_integrationTextField;
@property(retain) NSImage *coverageSucceededIcon; // @synthesize coverageSucceededIcon=_coverageSucceededIcon;
@property(retain) NSImage *coverageFailedIcon; // @synthesize coverageFailedIcon=_coverageFailedIcon;
@property(copy) CDUnknownBlockType clickHandler; // @synthesize clickHandler=_clickHandler;
@property unsigned long long codeCoverage; // @synthesize codeCoverage=_codeCoverage;
@property(copy) NSString *codeCoverageFailedText; // @synthesize codeCoverageFailedText=_codeCoverageFailedText;
@property(copy) NSString *codeCoverageSuccessText; // @synthesize codeCoverageSuccessText=_codeCoverageSuccessText;
@property(copy) NSString *timestamp; // @synthesize timestamp=_timestamp;
@property(copy) NSString *integrationTitle; // @synthesize integrationTitle=_integrationTitle;
- (void).cxx_destruct;
- (void)updateBadges;
- (void)showIntegrationCodeCoverageResults:(id)arg1;

@end

@interface XCSUIBotIntegrationPopoverBadgesView : NSView
{
    unsigned long long _errors;
    unsigned long long _warnings;
    unsigned long long _issues;
    XCSUIBotIntegrationPopoverStatusBadgeView *_errorsBadgeView;
    XCSUIBotIntegrationPopoverStatusBadgeView *_warningsBadgeView;
    XCSUIBotIntegrationPopoverStatusBadgeView *_issuesBadgeView;
}

@property __weak XCSUIBotIntegrationPopoverStatusBadgeView *issuesBadgeView; // @synthesize issuesBadgeView=_issuesBadgeView;
@property __weak XCSUIBotIntegrationPopoverStatusBadgeView *warningsBadgeView; // @synthesize warningsBadgeView=_warningsBadgeView;
@property __weak XCSUIBotIntegrationPopoverStatusBadgeView *errorsBadgeView; // @synthesize errorsBadgeView=_errorsBadgeView;
- (void).cxx_destruct;
- (void)updateBadgesWithErrors:(unsigned long long)arg1 warnings:(unsigned long long)arg2 issues:(unsigned long long)arg3;

@end

@interface XCSUIBotIntegrationPopoverStatusBadgeView : NSView
{
    CALayer *_badgeCircleLayer;
    CATextLayer *_badgeCountLayer;
    CATextLayer *_badgeLabelLayer;
    NSColor *_badgeStrokeColor;
    XCSUIStatusBadge *_badge;
}

@property(retain, nonatomic) XCSUIStatusBadge *badge; // @synthesize badge=_badge;
@property(retain) NSColor *badgeStrokeColor; // @synthesize badgeStrokeColor=_badgeStrokeColor;
- (void).cxx_destruct;
- (void)updateLayer;
- (void)awakeFromNib;

@end

@interface XCSUIBotIntegrationSummaryPopoverViewController : DVTViewController
{
    NSString *_integrationTitle;
    unsigned long long _errorsCount;
    unsigned long long _warningsCount;
    unsigned long long _issuesCount;
    NSString *_integrationFailureText;
    CDUnknownBlockType _clickHandler;
    NSImage *_errorsIcon;
    NSImage *_warningsIcon;
    NSImage *_issuesIcon;
    NSImageView *_integrationFailureImageView;
    XCSUIBotIntegrationPopoverBadgesView *_countsView;
}

@property __weak XCSUIBotIntegrationPopoverBadgesView *countsView; // @synthesize countsView=_countsView;
@property __weak NSImageView *integrationFailureImageView; // @synthesize integrationFailureImageView=_integrationFailureImageView;
@property(retain) NSImage *issuesIcon; // @synthesize issuesIcon=_issuesIcon;
@property(retain) NSImage *warningsIcon; // @synthesize warningsIcon=_warningsIcon;
@property(retain) NSImage *errorsIcon; // @synthesize errorsIcon=_errorsIcon;
@property(copy) CDUnknownBlockType clickHandler; // @synthesize clickHandler=_clickHandler;
@property(copy, nonatomic) NSString *integrationFailureText; // @synthesize integrationFailureText=_integrationFailureText;
@property unsigned long long issuesCount; // @synthesize issuesCount=_issuesCount;
@property unsigned long long warningsCount; // @synthesize warningsCount=_warningsCount;
@property unsigned long long errorsCount; // @synthesize errorsCount=_errorsCount;
@property(copy) NSString *integrationTitle; // @synthesize integrationTitle=_integrationTitle;
- (void).cxx_destruct;
- (void)updateBadges;
- (void)showIntegrationSummary:(id)arg1;
- (void)showOrHideIntegrationFailedControls:(BOOL)arg1;
- (void)loadView;

@end

@interface XCSUIBotIntegrationTestPopoverBadgesView : NSView
{
    unsigned long long _passedTests;
    unsigned long long _failedTests;
    unsigned long long _issues;
    XCSUIBotIntegrationPopoverStatusBadgeView *_testsPassedBadgeView;
    XCSUIBotIntegrationPopoverStatusBadgeView *_testsFailedBadgeView;
}

@property __weak XCSUIBotIntegrationPopoverStatusBadgeView *testsFailedBadgeView; // @synthesize testsFailedBadgeView=_testsFailedBadgeView;
@property __weak XCSUIBotIntegrationPopoverStatusBadgeView *testsPassedBadgeView; // @synthesize testsPassedBadgeView=_testsPassedBadgeView;
- (void).cxx_destruct;
- (void)updateBadgesWithTestsPassed:(unsigned long long)arg1 testsFailed:(unsigned long long)arg2;

@end

@interface XCSUIBotIntegrationTestPopoverViewController : DVTViewController
{
    NSString *_integrationTitle;
    NSString *_timestamp;
    NSString *_testsSuccessText;
    NSString *_testsFailedText;
    unsigned long long _testsPassedCount;
    unsigned long long _testsFailedCount;
    CDUnknownBlockType _clickHandler;
    NSImage *_testsFailedIcon;
    NSImage *_testsSucceededIcon;
    NSView *_testCountsHostView;
    NSImageView *_integrationFailedImageView;
    XCSUIBotIntegrationTestPopoverBadgesView *_countsView;
    NSTextField *_integrationTextField;
}

@property __weak NSTextField *integrationTextField; // @synthesize integrationTextField=_integrationTextField;
@property __weak XCSUIBotIntegrationTestPopoverBadgesView *countsView; // @synthesize countsView=_countsView;
@property __weak NSImageView *integrationFailedImageView; // @synthesize integrationFailedImageView=_integrationFailedImageView;
@property __weak NSView *testCountsHostView; // @synthesize testCountsHostView=_testCountsHostView;
@property(retain) NSImage *testsSucceededIcon; // @synthesize testsSucceededIcon=_testsSucceededIcon;
@property(retain) NSImage *testsFailedIcon; // @synthesize testsFailedIcon=_testsFailedIcon;
@property(copy) CDUnknownBlockType clickHandler; // @synthesize clickHandler=_clickHandler;
@property unsigned long long testsFailedCount; // @synthesize testsFailedCount=_testsFailedCount;
@property unsigned long long testsPassedCount; // @synthesize testsPassedCount=_testsPassedCount;
@property(copy) NSString *testsFailedText; // @synthesize testsFailedText=_testsFailedText;
@property(copy) NSString *testsSuccessText; // @synthesize testsSuccessText=_testsSuccessText;
@property(copy) NSString *timestamp; // @synthesize timestamp=_timestamp;
@property(copy) NSString *integrationTitle; // @synthesize integrationTitle=_integrationTitle;
- (void).cxx_destruct;
- (void)updateBadges;
- (void)showIntegrationTestsResults:(id)arg1;
- (void)showOrHideIntegrationFailedControls:(BOOL)arg1;
- (void)loadView;

@end

@interface XCSUIBotLogScopeBar : DVTViewController <DVTScopeBarContentController>
{
    DVTScopeBarButton *_scopeAllMessagesButton;
    DVTScopeBarButton *_scopeAllIssuesButton;
    DVTScopeBarButton *_scopeErrorsOnlyButton;
    DVTSearchField *_scopeSearchField;
    NSView *_downloadAllLogsContainerView;
    NSView *_downloadAllLogsButtonView;
    NSView *_downloadAllLogsProgressView;
    NSButton *_downloadAllLogsButton;
    NSProgressIndicator *_downloadAllLogsProgressIndicator;
    id <XCSUIBotLogEditorScopeBarDelegate> _delegate;
    NSString *_currentLogDownloadToken;
    NSPopUpButton *_logSelectorPopUp;
    DVTScopeBarButton *_allMessagesScopeButton;
    DVTScopeBarButton *_allIssuesScopeButton;
    DVTScopeBarButton *_errorsOnlyScopeButton;
}

+ (id)defaultViewNibName;
@property __weak DVTScopeBarButton *errorsOnlyScopeButton; // @synthesize errorsOnlyScopeButton=_errorsOnlyScopeButton;
@property __weak DVTScopeBarButton *allIssuesScopeButton; // @synthesize allIssuesScopeButton=_allIssuesScopeButton;
@property __weak DVTScopeBarButton *allMessagesScopeButton; // @synthesize allMessagesScopeButton=_allMessagesScopeButton;
@property __weak NSPopUpButton *logSelectorPopUp; // @synthesize logSelectorPopUp=_logSelectorPopUp;
@property(retain) id <XCSUIBotLogEditorScopeBarDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)searchFieldAction:(id)arg1;
- (void)showDownloadAllLogsProgress;
- (void)showDownloadAllLogsButton;
- (void)cancelLogDownloading:(id)arg1;
- (void)downloadAllLogs:(id)arg1;
- (void)showErrorsOnly:(id)arg1;
- (void)showAllIssues:(id)arg1;
- (void)showAllMessages:(id)arg1;
- (void)setScopeBarState:(int)arg1 showAllResults:(BOOL)arg2;
@property(readonly) double preferredViewHeight;
- (void)loadView;
- (void)showBuildLogScopeButtons:(BOOL)arg1;
- (void)_updateShowSteps:(BOOL)arg1 showWarnings:(BOOL)arg2 showErrors:(BOOL)arg3 showAnalyzerResults:(BOOL)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XCSUINavigableModelItem : IDELogNavigatorItem <IDEContinuousIntegrationLogNavigatorActions>
{
}

- (void)menuCmd_createBot:(id)arg1;
- (BOOL)allowsAction:(SEL)arg1;
- (id)navigableItem_contentDocumentLocation;
- (id)navigableItem_documentType;
- (long long)navigableItem_progressValue;
- (id)items;
- (id)subtitle;
- (id)navigableItem_image;
- (id)navigableItem_name;
- (id)identifier;

@end

@interface XCSUIBotNavigableModelItem : XCSUINavigableModelItem
{
    XCSService *_service;
    NSString *_botIdentifier;
    NSString *_itemIdentifier;
    DVTObservingToken *_reachabilityObserver;
    long long _lastKnownReachability;
    BOOL _groupByTime;
    NSArray *items;
    NSString *_botName;
    long long _botStatus;
    XCSBot *_cachedBot;
}

+ (id)keyPathsForValuesAffectingNavigableItem_contentDocumentLocation;
+ (id)keyPathsForValuesAffectingNavigableItem_documentType;
+ (id)keyPathsForValuesAffectingNavigableItem_image;
+ (id)keyPathsForValuesAffectingSubtitle;
+ (id)keyPathsForValuesAffectingNavigableItem_name;
+ (id)keyPathsForValuesAffectingLastNonPendingIntegrationItem;
+ (id)keyPathsForValuesAffectingLastIntegrationResult;
+ (id)keyPathsForValuesAffectingLastIntegrationStep;
+ (id)keyPathsForValuesAffectingProgressValue;
+ (id)keyPathsForValuesAffectingNavigableItem_progressValue;
+ (id)keyPathsForValuesAffectingBotStatus;
+ (id)keyPathsForValuesAffectingServerName;
+ (id)sharedItemWithBot:(id)arg1;
+ (id)sharedItemWithBotForGroupByTime:(id)arg1;
+ (id)sharedItemWithBotName:(id)arg1 service:(id)arg2 identifier:(id)arg3 cachedBot:(id)arg4 forGroupByTime:(BOOL)arg5;
+ (id)sharedItemWithBotName:(id)arg1 service:(id)arg2 identifier:(id)arg3;
@property(nonatomic) BOOL groupByTime; // @synthesize groupByTime=_groupByTime;
@property(retain, nonatomic) XCSBot *cachedBot; // @synthesize cachedBot=_cachedBot;
@property(retain, nonatomic) XCSService *service; // @synthesize service=_service;
@property(nonatomic) long long botStatus; // @synthesize botStatus=_botStatus;
@property(retain, nonatomic) NSString *botIdentifier; // @synthesize botIdentifier=_botIdentifier;
@property(retain, nonatomic) NSString *botName; // @synthesize botName=_botName;
@property(retain, nonatomic) NSArray *items; // @synthesize items;
- (void).cxx_destruct;
- (void)menuCmd_viewBotInBrowser:(id)arg1;
- (void)menuCmd_cleanAndIntegrate:(id)arg1;
- (void)menuCmd_integrate:(id)arg1;
- (void)integrateBotAndClean:(BOOL)arg1 navigator:(id)arg2;
- (void)menuCmd_deleteBot:(id)arg1;
- (void)menuCmd_deleteBotWithHostWindow:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)_menuCmd_deleteBot:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)menuCmd_editBot:(id)arg1;
- (BOOL)allowsAction:(SEL)arg1;
- (id)navigableItem_contentDocumentLocation;
- (id)navigableItem_documentType;
- (long long)navigableItem_progressValue;
- (id)subtitle;
- (id)navigableItem_image;
- (id)navigableItem_name;
- (id)identifier;
- (void)refreshIntegrations;
- (void)emptyIntegrationCache;
- (void)populateIntegrations;
- (void)configureIntegrationListeners;
- (void)loadMoreIntegrations:(CDUnknownBlockType)arg1;
- (void)loadMoreIntegrations:(unsigned long long)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)updateItemsWithIntegrations:(id)arg1;
- (void)additionalIntegrationsOnServer:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) XCSUIIntegrationNavigableModelItem *lastNonPendingIntegrationItem;
@property(readonly, nonatomic) long long lastIntegrationResult;
@property(readonly, nonatomic) long long lastIntegrationStep;
- (long long)progressValue;
@property(readonly, nonatomic) NSString *serverName;
- (void)dealloc;
- (id)initWithBot:(id)arg1;
- (id)initWithBotName:(id)arg1 service:(id)arg2 identifier:(id)arg3 cachedBot:(id)arg4 forGroupByTime:(BOOL)arg5;
- (id)initWithBotName:(id)arg1 service:(id)arg2 identifier:(id)arg3;

@end

@interface XCSUIBotSummaryIssueSeries : NSObject
{
    NSArray *_columns;
}

@property(copy) NSArray *columns; // @synthesize columns=_columns;
- (void).cxx_destruct;
- (id)description;

@end

@interface XCSUIBotSummaryStackedBarGraph : NSView
{
    CDUnknownBlockType _resizeHandler;
    NSArray *_graphData;
    NSArray *_issuesSeriesData;
    XCSUIBotSummaryStackedBarGraphController *_controller;
    unsigned long long _largestBarValue;
    NSTrackingArea *_tracker;
    XCSUIBotSummaryStackedBarGraphColumn *_columnInMouseHoverEvent;
    XCSUIBotSummaryStackedBarGraphColumn *_columnInMouseDownEvent;
    DVTLozengeTextField *_noIntegrationsLozenge;
}

@property(retain) DVTLozengeTextField *noIntegrationsLozenge; // @synthesize noIntegrationsLozenge=_noIntegrationsLozenge;
@property(retain) XCSUIBotSummaryStackedBarGraphColumn *columnInMouseDownEvent; // @synthesize columnInMouseDownEvent=_columnInMouseDownEvent;
@property(retain) XCSUIBotSummaryStackedBarGraphColumn *columnInMouseHoverEvent; // @synthesize columnInMouseHoverEvent=_columnInMouseHoverEvent;
@property(retain) NSTrackingArea *tracker; // @synthesize tracker=_tracker;
@property unsigned long long largestBarValue; // @synthesize largestBarValue=_largestBarValue;
@property __weak XCSUIBotSummaryStackedBarGraphController *controller; // @synthesize controller=_controller;
@property(copy) NSArray *issuesSeriesData; // @synthesize issuesSeriesData=_issuesSeriesData;
@property(copy) NSArray *graphData; // @synthesize graphData=_graphData;
@property(copy) CDUnknownBlockType resizeHandler; // @synthesize resizeHandler=_resizeHandler;
- (void).cxx_destruct;
- (void)drawGraphData;
- (void)drawXAxisLabels;
- (void)drawYAxisLabels;
- (void)drawRect:(struct CGRect)arg1;
- (void)resizeWithOldSuperviewSize:(struct CGSize)arg1;
- (void)mouseUp:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)mouseMoved:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (id)_columnInEvent:(id)arg1;
- (void)updateTrackingAreas;

@end

@interface XCSUIBotSummaryStackedBarGraphBar : NSObject
{
    NSString *_barIdentifier;
    NSString *_barValue;
    NSColor *_barFillColor;
    NSColor *_barStrokeColor;
    struct CGRect _layoutRect;
}

+ (id)barDataWithIdentifier:(id)arg1 barValue:(id)arg2 barFillColor:(id)arg3 barStrokeColor:(id)arg4;
@property(copy) NSColor *barStrokeColor; // @synthesize barStrokeColor=_barStrokeColor;
@property(copy) NSColor *barFillColor; // @synthesize barFillColor=_barFillColor;
@property struct CGRect layoutRect; // @synthesize layoutRect=_layoutRect;
@property(copy) NSString *barValue; // @synthesize barValue=_barValue;
@property(copy) NSString *barIdentifier; // @synthesize barIdentifier=_barIdentifier;
- (void).cxx_destruct;
- (id)description;

@end

@interface XCSUIBotSummaryStackedBarGraphColumn : NSObject
{
    BOOL _isCurrentPopoverTarget;
    NSString *_columnNumber;
    NSArray *_bars;
    unsigned long long _totalBarHeight;
    XCSBuildResultSummary *_buildResultSummary;
    unsigned long long _columnViewType;
    unsigned long long _integrationResultsOverview;
    unsigned long long _graphType;
    NSString *_integrationId;
    struct CGRect _layoutRect;
    struct CGRect _hitTestRect;
}

+ (id)columnDataWithColumnNumber:(id)arg1 bars:(id)arg2 columnViewType:(unsigned long long)arg3 integrationResultsOverview:(unsigned long long)arg4 buildResultSummary:(id)arg5 graphType:(unsigned long long)arg6 integrationId:(id)arg7;
@property struct CGRect hitTestRect; // @synthesize hitTestRect=_hitTestRect;
@property(retain) NSString *integrationId; // @synthesize integrationId=_integrationId;
@property unsigned long long graphType; // @synthesize graphType=_graphType;
@property unsigned long long integrationResultsOverview; // @synthesize integrationResultsOverview=_integrationResultsOverview;
@property unsigned long long columnViewType; // @synthesize columnViewType=_columnViewType;
@property BOOL isCurrentPopoverTarget; // @synthesize isCurrentPopoverTarget=_isCurrentPopoverTarget;
@property(retain) XCSBuildResultSummary *buildResultSummary; // @synthesize buildResultSummary=_buildResultSummary;
@property struct CGRect layoutRect; // @synthesize layoutRect=_layoutRect;
@property unsigned long long totalBarHeight; // @synthesize totalBarHeight=_totalBarHeight;
@property(copy) NSArray *bars; // @synthesize bars=_bars;
@property(copy) NSString *columnNumber; // @synthesize columnNumber=_columnNumber;
- (void).cxx_destruct;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (long long)cumulativeValueOfBars;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;

@end

@interface XCSUIBotSummaryStackedBarGraphController : NSObject
{
    BOOL _suppressSuccessBarsIfNoData;
    double _barSpacing;
    double _barWidth;
    NSArray *_graphData;
    NSArray *_visibleGraphData;
    unsigned long long _maxVisibleColumns;
    NSObject<XCSUIBotSummaryStackedBarGraphDelegate> *_delegate;
    XCSUIBotSummaryStackedBarGraphColumn *_popoverTargetColumn;
    XCSUIBotSummaryStackedBarGraph *_graphView;
    unsigned long long _xAxisLabelHeight;
    unsigned long long _yAxisLabelHeight;
}

@property unsigned long long yAxisLabelHeight; // @synthesize yAxisLabelHeight=_yAxisLabelHeight;
@property unsigned long long xAxisLabelHeight; // @synthesize xAxisLabelHeight=_xAxisLabelHeight;
@property(retain, nonatomic) XCSUIBotSummaryStackedBarGraph *graphView; // @synthesize graphView=_graphView;
@property(nonatomic) BOOL suppressSuccessBarsIfNoData; // @synthesize suppressSuccessBarsIfNoData=_suppressSuccessBarsIfNoData;
@property(retain) XCSUIBotSummaryStackedBarGraphColumn *popoverTargetColumn; // @synthesize popoverTargetColumn=_popoverTargetColumn;
@property __weak NSObject<XCSUIBotSummaryStackedBarGraphDelegate> *delegate; // @synthesize delegate=_delegate;
@property unsigned long long maxVisibleColumns; // @synthesize maxVisibleColumns=_maxVisibleColumns;
@property(copy) NSArray *visibleGraphData; // @synthesize visibleGraphData=_visibleGraphData;
@property(copy) NSArray *graphData; // @synthesize graphData=_graphData;
@property double barWidth; // @synthesize barWidth=_barWidth;
@property double barSpacing; // @synthesize barSpacing=_barSpacing;
- (void).cxx_destruct;
- (void)layoutGraph;
- (unsigned long long)columnsThatFit;
- (id)emptyColumnColor;
- (id)barGraphLogAspect;
- (id)initWithGraphView:(id)arg1;

@end

@interface XCSUIBotSummaryStatsFetcher : NSObject
{
    XCSBot *_bot;
    CDUnknownBlockType _statsFetcherCallback;
}

@property(copy, nonatomic) CDUnknownBlockType statsFetcherCallback; // @synthesize statsFetcherCallback=_statsFetcherCallback;
@property(retain) XCSBot *bot; // @synthesize bot=_bot;
- (void).cxx_destruct;
- (void)fetchStatsForTimePeriod:(unsigned long long)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)fetchStatsSinceDate:(id)arg1;

@end

@interface XCSUIBotSummaryStatusAndIssueCountsViewController : DVTViewController
{
    XCSUIStatusBadge *_commitsStatusBadge;
    XCSUIStatusBadge *_newTestsBadge;
    XCSUIStatusBadge *_issueAverageBadge;
    XCSUIStatusBadge *_streakBadge;
    XCSUIStatusBadge *_codeCoverageBadge;
    XCSUIBotSummaryStatsFetcher *_statsFetcher;
    XCSBot *_bot;
    NSButton *_botDetailsButton;
    NSTextField *_schemeField;
    NSTextField *_latestIntegration;
    NSTextField *_duration;
    XCSUIStatusBadgesView *_issuesBadgeView;
    NSPopUpButton *_statsTimePeriodPopUpButton;
    DVTScrollView *_issuesBadgeScrollView;
}

@property __weak DVTScrollView *issuesBadgeScrollView; // @synthesize issuesBadgeScrollView=_issuesBadgeScrollView;
@property __weak NSPopUpButton *statsTimePeriodPopUpButton; // @synthesize statsTimePeriodPopUpButton=_statsTimePeriodPopUpButton;
@property __weak XCSUIStatusBadgesView *issuesBadgeView; // @synthesize issuesBadgeView=_issuesBadgeView;
@property __weak NSTextField *duration; // @synthesize duration=_duration;
@property __weak NSTextField *latestIntegration; // @synthesize latestIntegration=_latestIntegration;
@property __weak NSTextField *schemeField; // @synthesize schemeField=_schemeField;
@property __weak NSButton *botDetailsButton; // @synthesize botDetailsButton=_botDetailsButton;
@property(retain, nonatomic) XCSBot *bot; // @synthesize bot=_bot;
- (void).cxx_destruct;
- (void)copyBotID:(id)arg1;
- (void)toggleBotID:(id)arg1;
- (void)statsTimePeriodPopupChanged:(id)arg1;
- (void)fetchStatsSinceDate:(id)arg1;
- (void)_updateBotStatsBadgesWithStats:(id)arg1;
- (void)refreshUI;
- (void)primitiveInvalidate;
- (void)setIssuesBadgeViewFrameWidth;
- (void)issuesBadgeScrollViewFrameDidChange:(id)arg1;
- (void)loadView;

@end

@interface XCSUIBotSummaryViewController : DVTViewController <XCSUIStackedBarChartViewControllerDataSource, XCSUIStackedBarChartViewControllerDelegate, NSPopoverDelegate, XCSBotSupportingEditorHostedViewController>
{
    XCSUIIntegrationHistoryViewController *_integrationHistoryViewController;
    XCSUIStackedBarChartViewController *_issueHistoryViewController;
    XCSUIStackedBarChartViewController *_unitTestHistoryViewController;
    XCSUIStackedBarChartViewController *_codeCoverageHistoryViewController;
    XCSUIStackedBarChartBar *_warningsBar;
    XCSUIStackedBarChartBar *_issuesBar;
    XCSUIStackedBarChartBar *_errorsBar;
    XCSUIStackedBarChartBar *_successBar;
    XCSUIStackedBarChartBar *_failureBar;
    XCSUIStackedBarChartBar *_codeCoverageBar;
    NSArray *_integrations;
    NSPopover *_graphPopover;
    DVTObservingToken *_botsObserver;
    XCSUIReflightRequiredViewController *_reflightViewController;
    XCSUIInsetHorizontalDividerLine *_statusLineHistoryDividerLine;
    XCUIBotSummaryViewDataSource *_summaryViewDataSource;
    XCSBotSupportingEditor *_botSupportingEditor;
    NSArray *_currentSelectedDocumentLocations;
    XCSIntegration *_integration;
    XCSBot *_bot;
    NSString *_botName;
    NSString *_botDescription;
    NSString *_schemeName;
    NSString *_testingDevicesSummary;
    NSString *_scheduleSummary;
    NSString *_repositoriesSummary;
    DVTReplacementView *_statusReplacementView;
    DVTStackView_ML *_stackView;
    NSScrollView *_scrollView;
    DVTReplacementView *_reflightReplacementView;
    XCSUIProgressReplacementView *_progressReplacementView;
}

+ (BOOL)instancesCanContainDocumentLocation:(id)arg1;
+ (id)keyPathsForValuesAffectingCurrentSelectedItems;
@property __weak XCSUIProgressReplacementView *progressReplacementView; // @synthesize progressReplacementView=_progressReplacementView;
@property __weak DVTReplacementView *reflightReplacementView; // @synthesize reflightReplacementView=_reflightReplacementView;
@property __weak NSScrollView *scrollView; // @synthesize scrollView=_scrollView;
@property __weak DVTStackView_ML *stackView; // @synthesize stackView=_stackView;
@property __weak DVTReplacementView *statusReplacementView; // @synthesize statusReplacementView=_statusReplacementView;
@property(readonly, copy) NSString *repositoriesSummary; // @synthesize repositoriesSummary=_repositoriesSummary;
@property(readonly, copy) NSString *scheduleSummary; // @synthesize scheduleSummary=_scheduleSummary;
@property(readonly, copy) NSString *testingDevicesSummary; // @synthesize testingDevicesSummary=_testingDevicesSummary;
@property(readonly, copy) NSString *schemeName; // @synthesize schemeName=_schemeName;
@property(readonly, copy) NSString *botDescription; // @synthesize botDescription=_botDescription;
@property(readonly, copy) NSString *botName; // @synthesize botName=_botName;
@property(retain, nonatomic) XCSBot *bot; // @synthesize bot=_bot;
@property(retain, nonatomic) XCSIntegration *integration; // @synthesize integration=_integration;
@property(retain, nonatomic) XCSBotSupportingEditor *botSupportingEditor; // @synthesize botSupportingEditor=_botSupportingEditor;
- (void).cxx_destruct;
- (void)popoverDidClose:(id)arg1;
- (void)_showPopoverForIntegration:(id)arg1 event:(id)arg2 resultSummary:(id)arg3 graphColumn:(id)arg4 graphController:(id)arg5;
- (void)stackedBarChartViewController:(id)arg1 userClickedOnGraphColumn:(id)arg2 event:(id)arg3;
- (void)stackedBarChartViewController:(id)arg1 userMouseExitedGraph:(id)arg2 event:(id)arg3;
- (void)stackedBarChartViewController:(id)arg1 userMousedOverGraphColumn:(id)arg2 event:(id)arg3;
- (id)stackedBarChartViewController:(id)arg1 getIntegrationIdForColumn:(unsigned long long)arg2;
- (BOOL)stackedBarChartViewController:(id)arg1 isTestingEnabledForColumn:(unsigned long long)arg2;
- (unsigned long long)stackedBarChartViewController:(id)arg1 codeCoveragePercentageDeltaForColumn:(unsigned long long)arg2;
- (unsigned long long)stackedBarChartViewController:(id)arg1 codeCoveragePercentageForColumn:(unsigned long long)arg2;
- (unsigned long long)stackedBarChartViewController:(id)arg1 codeCoveragePreferenceForColumn:(unsigned long long)arg2;
- (id)stackedBarChartViewController:(id)arg1 labelForColumn:(unsigned long long)arg2;
- (unsigned long long)stackedBarChartViewController:(id)arg1 countOfFailedTestsForColumn:(unsigned long long)arg2;
- (unsigned long long)stackedBarChartViewController:(id)arg1 countOfPassedTestsForColumn:(unsigned long long)arg2;
- (unsigned long long)stackedBarChartViewController:(id)arg1 countOfTestsForColumn:(unsigned long long)arg2;
- (BOOL)stackedBarChartViewController:(id)arg1 didIntegrationGenerateWarningsOrIssuesForColumn:(unsigned long long)arg2;
- (BOOL)stackedBarChartViewController:(id)arg1 didIntegrationFailWithBuildErrorsForColumn:(unsigned long long)arg2;
- (BOOL)stackedBarChartViewController:(id)arg1 didIntegrationTriggerFailForColumn:(unsigned long long)arg2;
- (BOOL)stackedBarChartViewController:(id)arg1 isBotCanceledForIntegrationForColumn:(unsigned long long)arg2;
- (BOOL)stackedBarChartViewController:(id)arg1 didBotFailForIntegrationForColumn:(unsigned long long)arg2;
- (BOOL)stackedBarChartViewController:(id)arg1 isRunningIntegrationForColumn:(unsigned long long)arg2;
- (BOOL)stackedBarChartViewController:(id)arg1 isPendingIntegrationForColumn:(unsigned long long)arg2;
- (id)stackedBarChartViewController:(id)arg1 buildResultSummaryForColumn:(unsigned long long)arg2;
- (id)stackedBarChartViewController:(id)arg1 valueForStackedBarChartBar:(id)arg2 column:(unsigned long long)arg3;
- (unsigned long long)numberOfColumnsInStackedBarChartViewController:(id)arg1;
- (void)selectDocumentLocations:(id)arg1;
@property(readonly, copy) NSArray *currentSelectedItems;
@property(readonly, copy) NSArray *currentSelectedDocumentLocations; // @synthesize currentSelectedDocumentLocations=_currentSelectedDocumentLocations;
- (id)statusViewController;
- (void)refreshUIWithIntegrations:(id)arg1 botStats:(id)arg2 isCodeCoverageAPIAvailable:(long long)arg3;
- (void)primitiveInvalidate;
- (void)viewDidInstall;
- (void)windowDidEndResize:(id)arg1;
- (void)loadView;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XCSUIBotTestsViewController : DVTViewController <XCSBotSupportingEditorHostedViewController>
{
    XCSBotSupportingEditor *_botSupportingEditor;
    NSArray *_currentSelectedDocumentLocations;
    XCSIntegration *_integration;
    XCSBot *_bot;
}

+ (BOOL)instancesCanContainDocumentLocation:(id)arg1;
+ (id)keyPathsForValuesAffectingCurrentSelectedItems;
@property(retain, nonatomic) XCSBot *bot; // @synthesize bot=_bot;
@property(retain, nonatomic) XCSIntegration *integration; // @synthesize integration=_integration;
@property(retain, nonatomic) XCSBotSupportingEditor *botSupportingEditor; // @synthesize botSupportingEditor=_botSupportingEditor;
- (void).cxx_destruct;
- (void)selectDocumentLocations:(id)arg1;
@property(readonly, copy) NSArray *currentSelectedItems;
@property(readonly, copy) NSArray *currentSelectedDocumentLocations; // @synthesize currentSelectedDocumentLocations=_currentSelectedDocumentLocations;
- (void)primitiveInvalidate;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XCSUIColors : NSObject
{
}

+ (id)codeCoverageStrokeColor;
+ (id)codeCoverageFillColor;
+ (id)noTestsStrokeColor;
+ (id)noTestsFillColor;
+ (id)analysisIssueStrokeColor;
+ (id)analysisIssueFillColor;
+ (id)warningStrokeColor;
+ (id)warningFillColor;
+ (id)failureStrokeColor;
+ (id)failureFillColor;
+ (id)successStrokeColor;
+ (id)successFillColor;
+ (id)testsPassedIssueStrokeLightColor;
+ (id)testsPassedIssueStrokeColor;
+ (id)issuesIssueStrokeLightColor;
+ (id)issuesIssueStrokeColor;
+ (id)warningsIssueStrokeLightColor;
+ (id)warningsIssueStrokeColor;
+ (id)errorsIssueStrokeLightColor;
+ (id)errorsIssueStrokeColor;
+ (id)click_greenBarColor;
+ (id)hover_greenBarColor;
+ (id)greenBarColor;
+ (id)click_redBarColor;
+ (id)hover_redBarColor;
+ (id)redBarColor;
+ (id)perfIterationResultCircleColor;
+ (id)baselineBarColor;

@end

@interface XCSUICreateBotAssistantContext : IDEAssistantContext
{
    XCSBot *_bot;
    BOOL _preserveExistingServerBlueprint;
    XCSUIBotDefinitionContext *_botDefinitionContext;
    XCSUICreateBotAssistantContextWindowController *_assistantContextWindowController;
    NSArray *_allowedAssistantIdentifiers;
}

@property(readonly, nonatomic) BOOL preserveExistingServerBlueprint; // @synthesize preserveExistingServerBlueprint=_preserveExistingServerBlueprint;
@property(retain, nonatomic) NSArray *allowedAssistantIdentifiers; // @synthesize allowedAssistantIdentifiers=_allowedAssistantIdentifiers;
@property(retain, nonatomic) XCSUICreateBotAssistantContextWindowController *assistantContextWindowController; // @synthesize assistantContextWindowController=_assistantContextWindowController;
@property(retain, nonatomic) XCSUIBotDefinitionContext *botDefinitionContext; // @synthesize botDefinitionContext=_botDefinitionContext;
- (void).cxx_destruct;
@property(readonly, nonatomic) BOOL schemeSupportsAnalyzeAction;
@property(readonly, nonatomic) BOOL schemeSupportsTestAction;
@property(readonly, nonatomic) BOOL schemeSupportsArchiveAction;
@property(readonly, nonatomic) NSSet *preflightIgnoredRepositoryIdentifiers;
@property(readonly, nonatomic) long long preflightRepositoryAuthenticationStatus;
@property(readonly, nonatomic) BOOL isInvalidTestingDestinationType;
@property(readonly, copy, nonatomic) NSString *defaultBotName;
@property(readonly, copy, nonatomic) NSString *botName;
@property(readonly, nonatomic) BOOL needsCommitAndPushUponCompletion;
@property(readonly, nonatomic) BOOL creationComplete;
@property(readonly, copy, nonatomic) NSArray *selectedTestingDeviceIDs;
@property(readonly, nonatomic) BOOL schemeSupportsMac32BitArchitecture;
@property(readonly, nonatomic) BOOL schemeSupportsDevices;
@property(readonly, nonatomic) BOOL schemeSupportsMac;
@property(readonly, nonatomic) BOOL exportsProductFromArchive;
@property(readonly, nonatomic) BOOL performsArchiveAction;
@property(readonly, nonatomic) unsigned long long codeCoveragePreference;
@property(readonly, nonatomic) BOOL performsTestAction;
@property(readonly, nonatomic) BOOL performsAnalyzeAction;
@property(readonly, nonatomic) unsigned long long defaultTestingDestinationType;
@property(readonly, nonatomic) unsigned long long testingDestinationType;
@property(readonly, nonatomic) NSString *buildConfiguration;
@property(readonly, copy, nonatomic) NSArray *triggers;
@property(readonly, nonatomic) unsigned long long buildsFromCleanSchedule;
@property(readonly, nonatomic) unsigned long long minutesAfterHourToIntegrate;
@property(readonly, nonatomic) unsigned long long hourOfIntegration;
@property(readonly, nonatomic) long long weeklyScheduleDay;
@property(readonly, nonatomic) unsigned long long periodicScheduleInterval;
@property(readonly, nonatomic) unsigned long long scheduleType;
@property(readonly, nonatomic) IDEScheme *scheme;
@property(readonly, copy, nonatomic) NSString *existingBotID;
@property(readonly, nonatomic) NSMapTable *workingCopiesToRemoteRepositories;
@property(readonly, nonatomic) XCSService *service;
@property(readonly, nonatomic) DVTSourceControlWorkspaceBlueprint *updatedSCMWorkspaceBlueprint;
@property(readonly, nonatomic) DVTSourceControlWorkspaceBlueprint *localSCMWorkspaceBlueprint;
@property(readonly, copy, nonatomic) NSURL *sshKeyFolderURL;
@property(readonly, copy, nonatomic) NSError *createEditBotError;
@property(readonly, nonatomic) BOOL hasSufficientSCMInfoToCreateBot;
@property(readonly, nonatomic) BOOL hasSufficientBuildConfigurationInfoToCreateBot;
@property(readonly, nonatomic) BOOL hasSufficientSchemeInfoToCreateBot;
@property(readonly, nonatomic) XCSBot *bot;
@property(readonly, nonatomic) NSString *initialAssistantIdentifier;
- (BOOL)shouldDisplayAssistantWithIdentifier:(id)arg1;
- (id)workspaceTabController;
- (id)workspace;
- (id)initWithWorkspaceTabController:(id)arg1 editingMode:(long long)arg2 bot:(id)arg3;

@end

@interface XCSUICreateBotAssistantContextWindowController : IDEAssistantWindowController <IDEContinuousIntegrationCreateEditBotWindowController>
{
    CDUnknownBlockType _createBotCompletionBlockCopy;
    DVTObservingToken *_sourceControlWorkspaceObserver;
    NSMutableArray *_completionPreprocessors;
    NSMutableArray *_completionPreprocessorExecutionStack;
}

@property(retain) NSMutableArray *completionPreprocessorExecutionStack; // @synthesize completionPreprocessorExecutionStack=_completionPreprocessorExecutionStack;
@property(retain) NSMutableArray *completionPreprocessors; // @synthesize completionPreprocessors=_completionPreprocessors;
- (void).cxx_destruct;
- (void)drainPreprocessorOrContinueWithSender:(id)arg1;
- (void)goBack:(id)arg1;
- (void)goNextOrFinish:(id)arg1;
- (void)addGoForwardPreprocessor:(CDUnknownBlockType)arg1;
- (BOOL)attemptRecoveryFromError:(id)arg1 optionIndex:(unsigned long long)arg2;
- (void)attemptRecoveryFromError:(id)arg1 optionIndex:(unsigned long long)arg2 delegate:(id)arg3 didRecoverSelector:(SEL)arg4 contextInfo:(void *)arg5;
- (void)didPresentErrorWithRecovery:(BOOL)arg1 contextInfo:(void *)arg2;
- (void)doneLoadingSourceControlBlueprint:(id)arg1;
- (void)beginSessionModalForWorkspaceTabController:(id)arg1 redefineBot:(id)arg2 hostWindow:(id)arg3 withCompletionBlock:(CDUnknownBlockType)arg4;
- (void)beginSessionModalForWorkspaceTabController:(id)arg1 hostWindow:(id)arg2 withCompletionBlock:(CDUnknownBlockType)arg3;
@property(readonly) CDUnknownBlockType completionBlock;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XCSUICreateBotBasicInfoAssistant : IDEAssistant
{
    XCSUIBotDefinition_BasicInfoEditor *_basicInfoEditor;
}

+ (id)keyPathsForValuesAffectingCanGoForward;
+ (id)keyPathsForValuesAffectingCreateBotAssistantContext;
@property(retain) XCSUIBotDefinition_BasicInfoEditor *basicInfoEditor; // @synthesize basicInfoEditor=_basicInfoEditor;
- (void).cxx_destruct;
- (void)loadView;
- (void)willGoNextOrFinish;
- (BOOL)canGoForward;
- (id)assistantTitle;
- (id)nextAssistantIdentifier;
@property(readonly) XCSUICreateBotAssistantContext *createBotAssistantContext;
- (void)primitiveInvalidate;

@end

@interface XCSUICreateBotCreatingAssistant : IDEAssistant
{
    BOOL _canCancel;
    BOOL _credentialsHaveBeenUploaded;
    BOOL _updatingBot;
    NSTimer *_minimumProgressIndicatorDurationTimer;
    NSTimer *_dismissAssistantTimer;
    DVTColoredSpinner *_coloredSpinner;
}

+ (id)keyPathsForValuesAffectingCompletedAndWaitedMinimumDuration;
+ (id)keyPathsForValuesAffectingStatusText;
+ (id)keyPathsForValuesAffectingStatusImage;
+ (id)keyPathsForValuesAffectingCanFinish;
+ (id)keyPathsForValuesAffectingStatusSubtext;
+ (id)keyPathsForValuesAffectingCreateBotAssistantContext;
@property(nonatomic) BOOL updatingBot; // @synthesize updatingBot=_updatingBot;
@property DVTColoredSpinner *coloredSpinner; // @synthesize coloredSpinner=_coloredSpinner;
@property(retain, nonatomic) NSTimer *dismissAssistantTimer; // @synthesize dismissAssistantTimer=_dismissAssistantTimer;
@property(retain, nonatomic) NSTimer *minimumProgressIndicatorDurationTimer; // @synthesize minimumProgressIndicatorDurationTimer=_minimumProgressIndicatorDurationTimer;
@property(nonatomic) BOOL credentialsHaveBeenUploaded; // @synthesize credentialsHaveBeenUploaded=_credentialsHaveBeenUploaded;
@property(nonatomic) BOOL canCancel; // @synthesize canCancel=_canCancel;
- (void).cxx_destruct;
- (void)willGoNextOrFinish;
- (void)_dismissAssistant;
@property(readonly, nonatomic) BOOL completedAndWaitedMinimumDuration;
- (void)_clearMinimumProgressIndicatorDurationTimer;
- (void)_handleCommitAndIntegrateOptionsWithCreateBotAssistantContext:(id)arg1;
@property(readonly, nonatomic) NSString *statusText;
@property(readonly, nonatomic) NSImage *statusImage;
- (void)finishWithCompletionBlock:(CDUnknownBlockType)arg1;
- (BOOL)canGoBack;
- (BOOL)canFinish;
- (void)viewWillUninstall;
- (void)viewDidInstall;
@property(readonly, nonatomic) NSString *statusSubtext;
- (id)assistantTitle;
@property(readonly) XCSUICreateBotAssistantContext *createBotAssistantContext;

@end

@interface XCSUICreateBotDevicePickerAssistant : IDEAssistant
{
    BOOL _viewIsInstalled;
    XCSUIBotDefinition_DevicePickerEditor_Legacy *_legacyDevicePickerEditor;
    XCSUIBotDefinition_DevicePickerEditor *_devicePickerEditor;
}

+ (id)keyPathsForValuesAffectingCanGoForward;
@property(retain, nonatomic) XCSUIBotDefinition_DevicePickerEditor *devicePickerEditor; // @synthesize devicePickerEditor=_devicePickerEditor;
@property(retain, nonatomic) XCSUIBotDefinition_DevicePickerEditor_Legacy *legacyDevicePickerEditor; // @synthesize legacyDevicePickerEditor=_legacyDevicePickerEditor;
@property(nonatomic) BOOL viewIsInstalled; // @synthesize viewIsInstalled=_viewIsInstalled;
- (void).cxx_destruct;
- (id)nextAssistantIdentifier;
- (void)viewWillUninstall;
- (void)viewDidInstall;
- (id)assistantTitle;
- (BOOL)canGoForward;
- (id)createBotAssistantContext;
- (void)primitiveInvalidate;
- (void)loadView;

@end

@interface XCSUICreateBotDeviceTableCellView : NSTableCellView
{
    NSButton *_checkbox;
}

@property(retain, nonatomic) NSButton *checkbox; // @synthesize checkbox=_checkbox;
- (void).cxx_destruct;

@end

@interface XCSUICreateBotEmailNotificationsViewController : NSViewController <XCSUICreateBotTriggerChildViewController>
{
    XCSTrigger *_trigger;
    DVTSourceControlWorkspaceBlueprint *_blueprint;
    NSButton *_sendToCommittersCheckbox;
    NSButton *_committerOptionsButton;
    NSTokenField *_emailTokenField;
    NSButton *_includeIssueBreakdownsCheckbox;
    NSButton *_includeCommitMessagesCheckbox;
}

@property(nonatomic) __weak NSButton *includeCommitMessagesCheckbox; // @synthesize includeCommitMessagesCheckbox=_includeCommitMessagesCheckbox;
@property(nonatomic) __weak NSButton *includeIssueBreakdownsCheckbox; // @synthesize includeIssueBreakdownsCheckbox=_includeIssueBreakdownsCheckbox;
@property(nonatomic) __weak NSTokenField *emailTokenField; // @synthesize emailTokenField=_emailTokenField;
@property(nonatomic) __weak NSButton *committerOptionsButton; // @synthesize committerOptionsButton=_committerOptionsButton;
@property(nonatomic) __weak NSButton *sendToCommittersCheckbox; // @synthesize sendToCommittersCheckbox=_sendToCommittersCheckbox;
@property(retain) DVTSourceControlWorkspaceBlueprint *blueprint; // @synthesize blueprint=_blueprint;
- (void).cxx_destruct;
- (void)controlTextDidChange:(id)arg1;
- (BOOL)tokenField:(id)arg1 hasMenuForRepresentedObject:(id)arg2;
- (id)tokenField:(id)arg1 menuForRepresentedObject:(id)arg2;
- (void)_showEmailContactCard:(id)arg1;
- (BOOL)tokenField:(id)arg1 writeRepresentedObjects:(id)arg2 toPasteboard:(id)arg3;
- (id)tokenField:(id)arg1 representedObjectForEditingString:(id)arg2;
- (id)tokenField:(id)arg1 editingStringForRepresentedObject:(id)arg2;
- (id)tokenField:(id)arg1 displayStringForRepresentedObject:(id)arg2;
- (id)tokenField:(id)arg1 completionsForSubstring:(id)arg2 indexOfToken:(long long)arg3 indexOfSelectedItem:(long long *)arg4;
- (id)_quoteDisplayNameIfNeeded:(id)arg1;
- (id)_displayNameFromProperties:(id)arg1;
- (id)_personForEmailString:(id)arg1;
- (id)_personForEmailAddress:(id)arg1;
- (id)_emailAddressFromString:(id)arg1;
- (void)showCommitterOptionsSheet:(id)arg1;
- (void)commitChanges:(id)arg1;
- (void)saveTrigger;
@property(retain) XCSTrigger *trigger;
- (id)titleForDisplay;

@end

@interface XCSUICreateBotNotificationsAssistant : IDEAssistant
{
    BOOL _viewIsInstalled;
    XCSUIBotDefinition_NotificationsEditor *_notificationsEditor;
}

+ (id)keyPathsForValuesAffectingCanGoForward;
+ (id)keyPathsForValuesAffectingCreateBotAssistantContext;
@property(retain, nonatomic) XCSUIBotDefinition_NotificationsEditor *notificationsEditor; // @synthesize notificationsEditor=_notificationsEditor;
@property(nonatomic) BOOL viewIsInstalled; // @synthesize viewIsInstalled=_viewIsInstalled;
- (void).cxx_destruct;
- (BOOL)alwaysShowFinish;
- (BOOL)canGoForward;
- (void)viewWillUninstall;
- (void)viewDidInstall;
- (id)finishButtonTitle;
- (id)nextAssistantIdentifier;
- (id)createBotAssistantContext;
- (void)primitiveInvalidate;
- (void)loadView;

@end

@interface XCSUICreateBotPersonViewController : NSViewController
{
}

- (void)loadView;
- (void)_openWithContacts:(id)arg1;

@end

@interface XCSUICreateBotRepositoryIssue : NSObject
{
    BOOL _selected;
    NSError *_issue;
    unsigned long long _type;
    DVTSourceControlRemoteRepository *_repository;
    NSString *_workingCopyLocation;
    unsigned long long _resolution;
    NSString *_issueFingerprint;
}

@property(readonly) NSString *issueFingerprint; // @synthesize issueFingerprint=_issueFingerprint;
@property unsigned long long resolution; // @synthesize resolution=_resolution;
@property BOOL selected; // @synthesize selected=_selected;
@property(readonly) NSString *workingCopyLocation; // @synthesize workingCopyLocation=_workingCopyLocation;
@property(readonly) __weak DVTSourceControlRemoteRepository *repository; // @synthesize repository=_repository;
@property unsigned long long type; // @synthesize type=_type;
@property(readonly) NSError *issue; // @synthesize issue=_issue;
- (void).cxx_destruct;
@property(readonly) NSString *issueDisplayString;
@property(readonly) NSString *repositoryDisplayString;
- (id)initWithRepository:(id)arg1 workingCopyLocation:(id)arg2 issue:(id)arg3;

@end

@interface XCSUICreateBotRepositoryTableCellView : NSTableCellView
{
    XCSUICreateBotRepositoryIssue *_issue;
    id <XCSUICreateBotRepositoryTableCellViewDelegate> _delegate;
    NSTextField *_repositoryTitleField;
    NSTextField *_repositoryIssueField;
    NSView *_actionsView;
    NSTextField *_resolutionStatusView;
    NSButton *_changeButton;
}

@property __weak NSButton *changeButton; // @synthesize changeButton=_changeButton;
@property __weak NSTextField *resolutionStatusView; // @synthesize resolutionStatusView=_resolutionStatusView;
@property __weak NSView *actionsView; // @synthesize actionsView=_actionsView;
@property __weak NSTextField *repositoryIssueField; // @synthesize repositoryIssueField=_repositoryIssueField;
@property __weak NSTextField *repositoryTitleField; // @synthesize repositoryTitleField=_repositoryTitleField;
@property __weak id <XCSUICreateBotRepositoryTableCellViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)updateResolutionField;
@property(retain) XCSUICreateBotRepositoryIssue *issue;
- (void)updateCredentials:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)dealloc;

@end

@interface XCSUICreateBotRunScriptViewController : NSViewController <NSTextDelegate, XCSUICreateBotTriggerChildViewController>
{
    XCSTrigger *_trigger;
    DVTScriptSourceTextView *_scriptView;
}

@property DVTScriptSourceTextView *scriptView; // @synthesize scriptView=_scriptView;
- (void).cxx_destruct;
- (void)textDidChange:(id)arg1;
- (void)saveTrigger;
@property(retain) XCSTrigger *trigger;
- (id)titleForDisplay;
- (void)loadView;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XCSUICreateBotSCMAssistant : IDEAssistant <NSOutlineViewDataSource, NSOutlineViewDelegate, XCSUIBotDefinition_SCMEditor_AssistantCallback>
{
    XCSUIBotDefinitionContext *_botDefinitionContext;
    XCSUIBotDefinition_SCMEditor *_scmEditor;
}

+ (id)keyPathsForValuesAffectingCanGoForward;
+ (id)keyPathsForValuesAffectingCreateBotAssistantContext;
@property(retain) XCSUIBotDefinition_SCMEditor *scmEditor; // @synthesize scmEditor=_scmEditor;
@property(retain, nonatomic) XCSUIBotDefinitionContext *botDefinitionContext; // @synthesize botDefinitionContext=_botDefinitionContext;
- (void).cxx_destruct;
- (void)cancelSession;
- (void)goNextOrFinish:(id)arg1;
- (void)goBack:(id)arg1;
- (void)viewDidInstall;
- (void)primitiveInvalidate;
- (void)loadView;
- (BOOL)canGoForward;
- (BOOL)alwaysShowFinish;
- (id)finishButtonTitle;
- (id)previousAssistantIdentifier;
- (id)nextAssistantIdentifier;
- (id)createBotAssistantContext;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XCSUICreateBotSchedulingAssistant : IDEAssistant <NSControlTextEditingDelegate>
{
    BOOL _viewIsInstalled;
    XCSUIBotDefinition_SchedulingEditor *_schedulingEditor;
}

+ (id)keyPathsForValuesAffectingCanGoForward;
+ (id)keyPathsForValuesAffectingCreateBotAssistantContext;
@property(retain) XCSUIBotDefinition_SchedulingEditor *schedulingEditor; // @synthesize schedulingEditor=_schedulingEditor;
@property BOOL viewIsInstalled; // @synthesize viewIsInstalled=_viewIsInstalled;
- (void).cxx_destruct;
- (BOOL)canGoForward;
- (void)viewWillUninstall;
- (void)viewDidInstall;
- (id)previousAssistantIdentifier;
- (id)nextAssistantIdentifier;
- (id)createBotAssistantContext;
- (void)primitiveInvalidate;
- (void)loadView;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XCSUICreateBotSegueToCommitSheetManager : NSObject
{
    BOOL _shouldIntegrateImmediately;
    IDEWorkspace *_workspace;
    NSWindow *_workspaceWindow;
    XCSService *_service;
    DVTSourceControlWorkspaceBlueprint *_scmWorkspaceBlueprint;
    NSMapTable *_workingCopiesToRemoteRepositories;
    NSString *_botGUID;
    IDEScheme *_scheme;
}

+ (void)doIntegrateImmediatelyForServer:(id)arg1 andBotGUID:(id)arg2;
+ (void)showWillNeedToCommitAlertForWindow:(id)arg1 schemeWithName:(id)arg2 error:(id)arg3;
+ (void)showWillNeedToCommitAlertForWindow:(id)arg1 schemeWithName:(id)arg2;
@property(nonatomic) BOOL shouldIntegrateImmediately; // @synthesize shouldIntegrateImmediately=_shouldIntegrateImmediately;
@property(retain, nonatomic) IDEScheme *scheme; // @synthesize scheme=_scheme;
@property(retain, nonatomic) NSString *botGUID; // @synthesize botGUID=_botGUID;
@property(retain, nonatomic) NSMapTable *workingCopiesToRemoteRepositories; // @synthesize workingCopiesToRemoteRepositories=_workingCopiesToRemoteRepositories;
@property(retain, nonatomic) DVTSourceControlWorkspaceBlueprint *scmWorkspaceBlueprint; // @synthesize scmWorkspaceBlueprint=_scmWorkspaceBlueprint;
@property(retain, nonatomic) XCSService *service; // @synthesize service=_service;
@property(retain, nonatomic) NSWindow *workspaceWindow; // @synthesize workspaceWindow=_workspaceWindow;
@property(retain, nonatomic) IDEWorkspace *workspace; // @synthesize workspace=_workspace;
- (void).cxx_destruct;
- (void)_prepareAndRunCommitSheetWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)prepareAndRunCommitSheet;
- (id)init;
- (id)initWithBotDefinitionContext:(id)arg1 window:(id)arg2;
- (id)initWithCreateBotAssistantContext:(id)arg1;

@end

@interface XCSUICreateBotTriggerCellView : NSTableCellView
{
    IDECapsuleView *_capsuleView;
    IDEViewController<IDECapsuleViewController> *_viewController;
}

@property(readonly) IDEViewController<IDECapsuleViewController> *viewController; // @synthesize viewController=_viewController;
@property(readonly) __weak IDECapsuleView *capsuleView; // @synthesize capsuleView=_capsuleView;
- (void).cxx_destruct;
- (void)seekAndDestroy;
- (void)configureForViewController:(id)arg1 disclosed:(BOOL)arg2;

@end

@interface XCSUICreateBotTriggerConditionsViewController : NSViewController
{
    XCSTrigger *_trigger;
}

- (void).cxx_destruct;
@property(readonly, nonatomic) NSString *actionLabel;
@property(nonatomic) BOOL onInternalErrors;
@property(nonatomic) BOOL onAnalyzerWarnings;
@property(nonatomic) BOOL onWarnings;
@property(nonatomic) BOOL onBuildErrors;
@property(nonatomic) BOOL onFailingTests;
@property(nonatomic) BOOL onSuccess;
@property(retain, nonatomic) XCSTrigger *trigger;

@end

@interface XCSUICreateBotTriggerCreateCellView : NSTableCellView
{
    BOOL _isPostIntegration;
    id <XCSUICreateBotTriggerCreateCellViewDelegate> _delegate;
}

@property BOOL isPostIntegration; // @synthesize isPostIntegration=_isPostIntegration;
@property __weak id <XCSUICreateBotTriggerCreateCellViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)addSendEmailTrigger:(id)arg1;
- (void)addRunScriptTrigger:(id)arg1;

@end

@interface XCSUICreateBotTriggerViewController : IDEViewController <IDECapsuleViewController, IDECapsuleViewDelegate>
{
    XCSTrigger *_trigger;
    NSViewController<XCSUICreateBotTriggerChildViewController> *_childViewController;
    XCSUICreateBotTriggerConditionsViewController *_conditionsViewController;
    id <XCSUICreateBotTriggerViewControllerDelegate> _delegate;
}

@property __weak id <XCSUICreateBotTriggerViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly) XCSUICreateBotTriggerConditionsViewController *conditionsViewController; // @synthesize conditionsViewController=_conditionsViewController;
@property(readonly) NSViewController<XCSUICreateBotTriggerChildViewController> *childViewController; // @synthesize childViewController=_childViewController;
@property(readonly) XCSTrigger *trigger; // @synthesize trigger=_trigger;
- (void).cxx_destruct;
- (void)capsuleView:(id)arg1 wasDisclosed:(BOOL)arg2;
- (void)capsuleView:(id)arg1 setTitle:(id)arg2;
- (BOOL)capsuleViewCanBeRenamed:(id)arg1;
- (void)capsuleViewDidClickRemoveButton:(id)arg1;
- (BOOL)capsuleViewCanBeRemoved:(id)arg1;
- (void)setTitle:(id)arg1;
@property(readonly) BOOL canRename;
- (void)remove:(id)arg1;
@property(readonly) BOOL canRemove;
@property(readonly, copy) NSString *titleForDisplay;
- (void)configureViewHierarchy;
- (id)initWithTrigger:(id)arg1 blueprint:(id)arg2;

// Remaining properties
@property BOOL canAddItems;
@property(readonly) BOOL canDrag;
@property BOOL canRemoveItems;
@property(readonly) BOOL canSelect;
@property(readonly) BOOL canUndisclose;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) BOOL disclosedByDefault;
@property(readonly, copy) NSString *footerLabel;
@property(readonly) unsigned long long hash;
@property(readonly) NSImage *icon;
@property(readonly) Class superclass;

@end

@interface XCSUIDataTransformers : NSObject
{
}

+ (id)hash:(id)arg1 truncatedToFirstDigits:(unsigned long long)arg2;
+ (id)hash:(id)arg1 truncatedToLastDigits:(unsigned long long)arg2;

@end

@interface XCSUIDeviceChooserSheet : NSWindowController
{
    NSMutableSet *_selectedDevices;
    NSArray *_knownPlatforms;
    NSArray *_devices;
    NSSet *_disabledDevices;
    NSTableView *_tableView;
    NSImageView *_selectedImageView;
    NSTextField *_selectedNameLabel;
    NSTextField *_selectedModelLabel;
    NSTextField *_selectedOSLabel;
    NSButton *_addButton;
    NSArray *_groupedDevices;
}

+ (id)deviceChooserSheet;
@property(retain) NSArray *groupedDevices; // @synthesize groupedDevices=_groupedDevices;
@property __weak NSButton *addButton; // @synthesize addButton=_addButton;
@property __weak NSTextField *selectedOSLabel; // @synthesize selectedOSLabel=_selectedOSLabel;
@property __weak NSTextField *selectedModelLabel; // @synthesize selectedModelLabel=_selectedModelLabel;
@property __weak NSTextField *selectedNameLabel; // @synthesize selectedNameLabel=_selectedNameLabel;
@property __weak NSImageView *selectedImageView; // @synthesize selectedImageView=_selectedImageView;
@property __weak NSTableView *tableView; // @synthesize tableView=_tableView;
@property(readonly) NSSet *selectedDevices; // @synthesize selectedDevices=_selectedDevices;
@property(retain, nonatomic) NSSet *disabledDevices; // @synthesize disabledDevices=_disabledDevices;
@property(retain, nonatomic) NSArray *devices; // @synthesize devices=_devices;
@property(retain, nonatomic) NSArray *knownPlatforms; // @synthesize knownPlatforms=_knownPlatforms;
- (void).cxx_destruct;
- (void)ok:(id)arg1;
- (void)cancel:(id)arg1;
- (void)selectOrDeselectDevice:(id)arg1;
- (void)rowSelectedAtIndex:(long long)arg1;
- (void)tableViewSelectionDidChange:(id)arg1;
- (BOOL)tableView:(id)arg1 isGroupRow:(long long)arg2;
- (id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)groupDevices;
- (id)platformForIdentifier:(id)arg1;
- (void)windowDidLoad;

@end

@interface XCSUIDeviceUtilities : NSObject
{
}

+ (id)deviceImageForDevice:(id)arg1;

@end

@interface XCSUIErrors : NSObject
{
}

+ (id)errorWithDescription:(id)arg1 reason:(id)arg2 domain:(id)arg3;

@end

@interface XCSUIFakeTestData : NSObject
{
}

+ (id)generateFakeBotGroup;

@end

@interface XCSUIHorizontalDividerLineView : NSView
{
}

- (void)drawRect:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface XCSUIInsetHorizontalDividerLine : NSView
{
    BOOL _drawPointer;
    double _optionalInset;
    NSView *_drawPointToView;
}

@property(retain, nonatomic) NSView *drawPointToView; // @synthesize drawPointToView=_drawPointToView;
@property double optionalInset; // @synthesize optionalInset=_optionalInset;
- (void).cxx_destruct;
- (void)showPointer;
- (void)hidePointer;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface XCSUIInstallProductOnDeviceWindowController : NSWindowController <NSTableViewDelegate>
{
    DVTFilePath *_productPath;
    NSTableView *_tableView;
    NSButton *_installButton;
    NSButton *_cancelButton;
    NSProgressIndicator *_progressIndicator;
    NSArray *_devices;
    NSIndexSet *_tableViewSelectionIndexes;
    DVTObservingToken *_selectionWatcher;
}

@property(retain) DVTObservingToken *selectionWatcher; // @synthesize selectionWatcher=_selectionWatcher;
@property(copy, nonatomic) NSIndexSet *tableViewSelectionIndexes; // @synthesize tableViewSelectionIndexes=_tableViewSelectionIndexes;
@property(copy) NSArray *devices; // @synthesize devices=_devices;
@property __weak NSProgressIndicator *progressIndicator; // @synthesize progressIndicator=_progressIndicator;
@property __weak NSButton *cancelButton; // @synthesize cancelButton=_cancelButton;
@property __weak NSButton *installButton; // @synthesize installButton=_installButton;
@property __weak NSTableView *tableView; // @synthesize tableView=_tableView;
@property(copy) DVTFilePath *productPath; // @synthesize productPath=_productPath;
- (void).cxx_destruct;
- (void)install:(id)arg1;
- (void)cancel:(id)arg1;
- (void)windowDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XCSUIIntegrationAssetDownloadDelegate : NSObject <NSURLSessionDownloadDelegate>
{
    NSString *_destinationFilePath;
    CDUnknownBlockType _callback;
    NSString *_destinationDirectory;
    NSString *_destinationFile;
}

@property(copy) NSString *destinationFile; // @synthesize destinationFile=_destinationFile;
@property(copy) NSString *destinationDirectory; // @synthesize destinationDirectory=_destinationDirectory;
@property(copy) CDUnknownBlockType callback; // @synthesize callback=_callback;
- (void).cxx_destruct;
- (void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3;
- (void)URLSession:(id)arg1 downloadTask:(id)arg2 didWriteData:(long long)arg3 totalBytesWritten:(long long)arg4 totalBytesExpectedToWrite:(long long)arg5;
- (void)URLSession:(id)arg1 downloadTask:(id)arg2 didFinishDownloadingToURL:(id)arg3;
- (void)unzipArchiveAtPath:(id)arg1;
- (void)URLSession:(id)arg1 task:(id)arg2 didReceiveChallenge:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XCSUIIntegrationAssetView : NSView
{
    NSString *_title;
    NSImage *_icon;
    XCSIntegrationAsset *_asset;
    unsigned long long _assetType;
    NSTextField *_titleField;
    NSTextField *_filenameField;
    NSTextField *_filesizeField1;
    NSTextField *_filesizeField2;
    NSTextField *_filesizeField3;
    NSImageView *_iconView;
    NSMenu *_productMenu;
    NSMenu *_genericMenu;
}

@property(retain) NSMenu *genericMenu; // @synthesize genericMenu=_genericMenu;
@property(retain) NSMenu *productMenu; // @synthesize productMenu=_productMenu;
@property __weak NSImageView *iconView; // @synthesize iconView=_iconView;
@property __weak NSTextField *filesizeField3; // @synthesize filesizeField3=_filesizeField3;
@property __weak NSTextField *filesizeField2; // @synthesize filesizeField2=_filesizeField2;
@property __weak NSTextField *filesizeField1; // @synthesize filesizeField1=_filesizeField1;
@property __weak NSTextField *filenameField; // @synthesize filenameField=_filenameField;
@property __weak NSTextField *titleField; // @synthesize titleField=_titleField;
@property(nonatomic) unsigned long long assetType; // @synthesize assetType=_assetType;
@property(retain, nonatomic) XCSIntegrationAsset *asset; // @synthesize asset=_asset;
@property(retain) NSImage *icon; // @synthesize icon=_icon;
@property(copy) NSString *title; // @synthesize title=_title;
- (void).cxx_destruct;
- (void)refreshUI;
- (id)applicationIconForExtension:(id)arg1;

@end

@interface XCSUIIntegrationAssetViewController : NSViewController
{
    XCSIntegration *_integration;
    NSView *_actionView;
    NSView *_archiveActionView;
    NSView *_iOSProductActionView;
    NSView *_downloadProgressView;
    NSProgressIndicator *_progressIndicator;
    NSURLSessionDownloadTask *_currentDownload;
}

@property __weak NSURLSessionDownloadTask *currentDownload; // @synthesize currentDownload=_currentDownload;
@property __weak NSProgressIndicator *progressIndicator; // @synthesize progressIndicator=_progressIndicator;
@property(retain) NSView *downloadProgressView; // @synthesize downloadProgressView=_downloadProgressView;
@property(retain) NSView *iOSProductActionView; // @synthesize iOSProductActionView=_iOSProductActionView;
@property(retain) NSView *archiveActionView; // @synthesize archiveActionView=_archiveActionView;
@property(retain) NSView *actionView; // @synthesize actionView=_actionView;
@property(retain) XCSIntegration *integration; // @synthesize integration=_integration;
- (void).cxx_destruct;
@property(nonatomic) unsigned long long assetType;
@property(retain, nonatomic) XCSIntegrationAsset *asset;
@property(retain) NSImage *icon;
@property(copy) NSString *title;
@property(readonly) XCSUIIntegrationAssetView *assetView;
- (void)downloadAndUnzipAssetToDirectory:(id)arg1 withCallback:(CDUnknownBlockType)arg2;
- (void)saveAssetToDirectory:(id)arg1 withCallback:(CDUnknownBlockType)arg2;
- (void)cancelDownload:(id)arg1;
- (void)installAsset:(id)arg1;
- (void)submitAsset:(id)arg1;
- (void)showAssetInOrganizer:(id)arg1;
- (void)downloadAsset:(id)arg1;
- (void)copyAssetInstallationLink:(id)arg1;
- (void)copyAssetDownloadLink:(id)arg1;
- (void)removeAllActionViews;
- (void)displayProgressView;
- (void)displayActionView;
- (void)loadView;

@end

@interface XCSUIIntegrationAttributedStringUIGenerator : NSObject
{
}

+ (id)attributedStringWithTestSuiteAndTestTargetForTest:(id)arg1 ofSize:(double)arg2;

@end

@interface XCSUIIntegrationCommitsDocumentLocation : DVTDocumentLocation
{
    NSString *_commitsFilePath;
}

@property(readonly, copy) NSString *commitsFilePath; // @synthesize commitsFilePath=_commitsFilePath;
- (void).cxx_destruct;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)initWithDocumentURL:(id)arg1 timestamp:(id)arg2 filePath:(id)arg3;

@end

@interface XCSUIIntegrationCommitsViewController : DVTViewController <NSTableViewDelegate, NSTableViewDataSource, XCSBotSupportingEditorHostedViewController>
{
    NSArray *_contributors;
    NSArray *_allCommits;
    NSMapTable *_contributorsAndFilesChangedCount;
    NSMapTable *_contributorsAndBadgeViews;
    XCSContributor *_showingDetailsContributor;
    double _defaultHeight;
    NSArray *_currentSelectedDocumentLocations;
    XCSIntegration *_integration;
    XCSBotSupportingEditor *_botSupportingEditor;
    XCSBot *_bot;
    NSTableView *_committersTableView;
    unsigned long long _countOfFilesChangedInIntegration;
    NSTextField *_contributorsTextField;
    NSTextField *_commitsTextField;
    NSTextField *_filesChangedTextField;
    NSTextField *_mainContributorTextField;
    XCSUIInsetHorizontalDividerLine *_dividerLine;
    NSView *_commitDetailsView;
    NSView *_commitBadgesView;
    _XCSUIAllCommittersBadgeView *_allCommittersBadgeView;
    DVTScrollView *_committersScrollView;
    DVTReplacementView *_contributorDetailsReplacementView;
    XCSUIProgressReplacementView *_progressReplacementView;
    NSView *_contentCustomView;
    NSView *_commitsView;
    NSView *_noCommitsView;
    DVTLozengeTextField *_noCommitsLozenge;
    NSView *_placeholder;
}

+ (BOOL)instancesCanContainDocumentLocation:(id)arg1;
+ (id)keyPathsForValuesAffectingCurrentSelectedItems;
@property __weak NSView *placeholder; // @synthesize placeholder=_placeholder;
@property __weak DVTLozengeTextField *noCommitsLozenge; // @synthesize noCommitsLozenge=_noCommitsLozenge;
@property __weak NSView *noCommitsView; // @synthesize noCommitsView=_noCommitsView;
@property __weak NSView *commitsView; // @synthesize commitsView=_commitsView;
@property __weak NSView *contentCustomView; // @synthesize contentCustomView=_contentCustomView;
@property __weak XCSUIProgressReplacementView *progressReplacementView; // @synthesize progressReplacementView=_progressReplacementView;
@property __weak DVTReplacementView *contributorDetailsReplacementView; // @synthesize contributorDetailsReplacementView=_contributorDetailsReplacementView;
@property __weak DVTScrollView *committersScrollView; // @synthesize committersScrollView=_committersScrollView;
@property __weak _XCSUIAllCommittersBadgeView *allCommittersBadgeView; // @synthesize allCommittersBadgeView=_allCommittersBadgeView;
@property __weak NSView *commitBadgesView; // @synthesize commitBadgesView=_commitBadgesView;
@property __weak NSView *commitDetailsView; // @synthesize commitDetailsView=_commitDetailsView;
@property __weak XCSUIInsetHorizontalDividerLine *dividerLine; // @synthesize dividerLine=_dividerLine;
@property __weak NSTextField *mainContributorTextField; // @synthesize mainContributorTextField=_mainContributorTextField;
@property __weak NSTextField *filesChangedTextField; // @synthesize filesChangedTextField=_filesChangedTextField;
@property __weak NSTextField *commitsTextField; // @synthesize commitsTextField=_commitsTextField;
@property __weak NSTextField *contributorsTextField; // @synthesize contributorsTextField=_contributorsTextField;
@property unsigned long long countOfFilesChangedInIntegration; // @synthesize countOfFilesChangedInIntegration=_countOfFilesChangedInIntegration;
@property __weak NSTableView *committersTableView; // @synthesize committersTableView=_committersTableView;
@property(retain, nonatomic) XCSBot *bot; // @synthesize bot=_bot;
@property(retain, nonatomic) XCSBotSupportingEditor *botSupportingEditor; // @synthesize botSupportingEditor=_botSupportingEditor;
@property(retain, nonatomic) XCSIntegration *integration; // @synthesize integration=_integration;
- (void).cxx_destruct;
- (void)selectDocumentLocations:(id)arg1;
@property(readonly, copy) NSArray *currentSelectedItems;
@property(readonly, copy) NSArray *currentSelectedDocumentLocations; // @synthesize currentSelectedDocumentLocations=_currentSelectedDocumentLocations;
- (void)toggleDetailViewForTableCellView:(id)arg1 committer:(id)arg2;
- (id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3;
- (id)_badgeViewForCommitter:(id)arg1;
- (double)tableView:(id)arg1 heightOfRow:(long long)arg2;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)drawDividerLineWithPointerToBadge:(id)arg1;
- (void)showDividerLinePointer;
- (void)hideDividerLinePointer;
- (id)commitsDetailViewController;
- (void)showCommitsView;
- (void)showNoCommitsView:(id)arg1;
- (void)refreshUI;
- (void)hideAllBadge;
- (void)addTableColumnsForContributorsWithColumnWidth:(double)arg1;
- (void)showBadges;
- (void)hideBadges;
- (void)updateCommitDetailsWithCommitHistory:(id)arg1;
- (void)computeContributorChanges;
- (void)refreshLogViewWithSourceControlLogItems:(id)arg1;
- (id)logItemForCommit:(id)arg1;
- (void)committersScrollViewContentBoundsDidChange:(id)arg1;
- (void)observeCommittersScrollView;
- (void)removeAllTableColumns;
- (id)contributors;
- (void)primitiveInvalidate;
- (void)loadView;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XCSUIIntegrationCommitterBadgeButton : NSButton
{
    CDUnknownBlockType _mouseDownCallback;
    CDUnknownBlockType _mouseUpCallback;
}

@property(copy) CDUnknownBlockType mouseUpCallback; // @synthesize mouseUpCallback=_mouseUpCallback;
@property(copy) CDUnknownBlockType mouseDownCallback; // @synthesize mouseDownCallback=_mouseDownCallback;
- (void).cxx_destruct;
- (void)mouseUp:(id)arg1;
- (void)mouseDown:(id)arg1;

@end

@interface XCSUIIntegrationCommitterBadgeView : NSTableCellView
{
    BOOL _setupOnce;
    CATextLayer *_committerTextLayer;
    CATextLayer *_initialsTextLayer;
    CAShapeLayer *_badgeLayer;
    CAShapeLayer *_boundingTrack;
    CAShapeLayer *_contributionTrack;
    BOOL _isAllCommittersBadge;
    NSString *_committerName;
    NSImage *_committerImage;
    unsigned long long _commiterCount;
    double _commiterContribution;
    XCSUIIntegrationCommitterBadgeButton *_button;
    CDUnknownBlockType _selectedBadgeCallback;
}

@property(nonatomic) BOOL isAllCommittersBadge; // @synthesize isAllCommittersBadge=_isAllCommittersBadge;
@property(copy) CDUnknownBlockType selectedBadgeCallback; // @synthesize selectedBadgeCallback=_selectedBadgeCallback;
@property __weak XCSUIIntegrationCommitterBadgeButton *button; // @synthesize button=_button;
@property double commiterContribution; // @synthesize commiterContribution=_commiterContribution;
@property(nonatomic) unsigned long long commiterCount; // @synthesize commiterCount=_commiterCount;
@property(copy) NSImage *committerImage; // @synthesize committerImage=_committerImage;
@property(copy) NSString *committerName; // @synthesize committerName=_committerName;
- (void).cxx_destruct;
- (void)updateLayer;
- (void)viewDidChangeBackingProperties;
- (id)polishedCommitterName;
- (BOOL)wantsUpdateLayer;
- (struct CGColor *)allCommittersBadgeStrokeColor;
- (struct CGColor *)contributorTrackMouseDownStrokeColor;
- (struct CGColor *)contributorTrackRolloverStrokeColor;
- (struct CGColor *)contributorTrackDefaultStrokeColor;
- (struct CGColor *)boundingTrackMouseDownStrokeColor;
- (struct CGColor *)boundingTrackRolloverStrokeColor;
- (struct CGColor *)boundingTrackDefaultStrokeColor;
- (void)clickBadge:(id)arg1;
- (void)awakeFromNib;

@end

@interface XCSUIIntegrationCoverageViewController : DVTViewController <IDECoverageReportFunctionFetcher, XCSBotSupportingEditorHostedViewController, XCSUIIntegrationCoverageViewController>
{
    XCSIntegration *_integration;
    XCSBotSupportingEditor *_botSupportingEditor;
    XCSBot *_bot;
    NSArray *_itemIdentifiersToExpand;
    XCSUIProgressReplacementView *_replacementView;
    XCSCodeCoverageIntegration *_coverageIntegration;
}

+ (BOOL)instancesCanContainDocumentLocation:(id)arg1;
@property(retain, nonatomic) XCSCodeCoverageIntegration *coverageIntegration; // @synthesize coverageIntegration=_coverageIntegration;
@property __weak XCSUIProgressReplacementView *replacementView; // @synthesize replacementView=_replacementView;
@property(retain, nonatomic) NSArray *itemIdentifiersToExpand; // @synthesize itemIdentifiersToExpand=_itemIdentifiersToExpand;
@property(retain, nonatomic) XCSBot *bot; // @synthesize bot=_bot;
@property(retain, nonatomic) XCSBotSupportingEditor *botSupportingEditor; // @synthesize botSupportingEditor=_botSupportingEditor;
@property(retain, nonatomic) XCSIntegration *integration; // @synthesize integration=_integration;
- (void).cxx_destruct;
- (void)selectDocumentLocations:(id)arg1;
@property(readonly, copy) NSArray *currentSelectedItems;
@property(readonly, copy) NSArray *currentSelectedDocumentLocations;
- (void)fetchFunctionsForFile:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (id)currentlyExpandedCoverageItemIdentifiers;
@property(readonly, nonatomic) IDECoverageReportViewController *installedReportViewController;
- (void)primitiveInvalidate;
- (void)loadView;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XCSUIIntegrationEditorHeaderView : NSView
{
    NSButton *_integrationLabelButton;
    NSTextField *_integrationLabelField;
    DVTTabChooserView *_tabChooserView;
    NSButton *_editBotButton;
    NSButton *_integrateButton;
    XCSUIInsetHorizontalDividerLine *_dividerLine;
}

@property __weak XCSUIInsetHorizontalDividerLine *dividerLine; // @synthesize dividerLine=_dividerLine;
@property __weak NSButton *integrateButton; // @synthesize integrateButton=_integrateButton;
@property __weak NSButton *editBotButton; // @synthesize editBotButton=_editBotButton;
@property __weak DVTTabChooserView *tabChooserView; // @synthesize tabChooserView=_tabChooserView;
@property __weak NSTextField *integrationLabelField; // @synthesize integrationLabelField=_integrationLabelField;
@property __weak NSButton *integrationLabelButton; // @synthesize integrationLabelButton=_integrationLabelButton;
- (void).cxx_destruct;

@end

@interface XCSUIIntegrationHistoryViewController : DVTViewController
{
    DVTStackView_ML *_stackView;
}

@property __weak DVTStackView_ML *stackView; // @synthesize stackView=_stackView;
- (void).cxx_destruct;
- (void)removeFromStackView:(id)arg1;
- (void)addToStackView:(id)arg1;
- (void)loadView;

@end

@interface XCSUIIntegrationIssue : NSObject <DVTRadarSupport_Issue>
{
    unsigned long long _issueUIType;
    XCSIntegrationIssue *_issue;
    XCSIntegration *_integration;
}

+ (id)summaryStringForIssues:(id)arg1;
+ (id)colorForUIIssueType:(unsigned long long)arg1;
+ (id)issueTypeStringFromUIIssueType:(unsigned long long)arg1;
@property(readonly) XCSIntegration *integration; // @synthesize integration=_integration;
@property(readonly) XCSIntegrationIssue *issue; // @synthesize issue=_issue;
@property(readonly) unsigned long long issueUIType; // @synthesize issueUIType=_issueUIType;
- (void).cxx_destruct;
@property(readonly, nonatomic) unsigned long long associatedRadarID;
@property(readonly, copy, nonatomic) NSString *stringRepresentation;
@property(readonly, copy, nonatomic) NSString *briefStringRepresentation;
- (id)tinyStringRepresentation;
- (id)sourceFilename;
@property(readonly, nonatomic) id underlyingIssue;
- (id)initWithIntegrationIssue:(id)arg1 type:(unsigned long long)arg2 integration:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XCSUIIntegrationIssuesHelper : NSObject
{
}

+ (void)issuesCategoriesFromIntegrationIssues:(id)arg1 integration:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;

@end

@interface XCSUIIntegrationLogViewControllerContentView : DVTControllerContentView
{
    BOOL _didCompleteInitialLayout;
}

@property BOOL didCompleteInitialLayout; // @synthesize didCompleteInitialLayout=_didCompleteInitialLayout;
- (void)didCompleteLayout;

@end

@interface XCSUIIntegrationLogsViewController : DVTViewController <XCSUIBotLogEditorScopeBarDelegate, IDELogViewControllerDelegate, XCSBotSupportingEditorHostedViewController>
{
    BOOL _hasLoadedLogs;
    CDUnknownBlockType _logsDidLoadBlock;
    NSOperationQueue *_scmLogsDownloadQueue;
    NSMenuItem *_loadingMenuItem;
    NSMenuItem *_integrationMenuItem;
    NSArray *_beforeTriggersLogMenuItems;
    NSMenuItem *_rawBuildLogMenuItem;
    NSMenuItem *_sourceControlLogMenuItem;
    NSArray *_afterTriggersLogMenuItems;
    NSMenuItem *_rawServiceLogMenuItem;
    NSArray *_currentSelectedDocumentLocations;
    XCSIntegration *_integration;
    XCSBot *_bot;
    XCSBotSupportingEditor *_botSupportingEditor;
    NSTextView *_textView;
    NSView *_scopeBarsBaseView;
    NSScrollView *_stackViewScrollView;
    DVTStackView_ML *_stackView;
    DVTScopeBarsManager *_scopeBarsManager;
    XCSUIBotLogScopeBar *_scopeBar;
    NSMutableArray *_logViewControllers;
    NSMutableArray *_textViewDicts;
    NSView *_progressLoadingView;
    NSProgressIndicator *_progressIndicator;
    NSTextField *_progressTextField;
    NSView *_scopeBarScrollViewHostView;
    IDESchemeActionsInvocationRecord *_schemeActionsInvRecord;
    NSArray *_triggerBeforeLogs;
    NSArray *_triggerAfterLogs;
    NSString *_internalBuildServiceDebugLog;
    NSString *_internalRawBuildLog;
    NSString *_internalSourceControlLog;
    NSScrollView *_rawLogScrollView;
    NSTextView *_rawLogTextView;
}

+ (BOOL)instancesCanContainDocumentLocation:(id)arg1;
+ (id)keyPathsForValuesAffectingCurrentSelectedItems;
@property NSTextView *rawLogTextView; // @synthesize rawLogTextView=_rawLogTextView;
@property __weak NSScrollView *rawLogScrollView; // @synthesize rawLogScrollView=_rawLogScrollView;
@property(copy) NSString *internalSourceControlLog; // @synthesize internalSourceControlLog=_internalSourceControlLog;
@property(copy) NSString *internalRawBuildLog; // @synthesize internalRawBuildLog=_internalRawBuildLog;
@property(copy) NSString *internalBuildServiceDebugLog; // @synthesize internalBuildServiceDebugLog=_internalBuildServiceDebugLog;
@property(copy) NSArray *triggerAfterLogs; // @synthesize triggerAfterLogs=_triggerAfterLogs;
@property(copy) NSArray *triggerBeforeLogs; // @synthesize triggerBeforeLogs=_triggerBeforeLogs;
@property(retain) IDESchemeActionsInvocationRecord *schemeActionsInvRecord; // @synthesize schemeActionsInvRecord=_schemeActionsInvRecord;
@property __weak NSView *scopeBarScrollViewHostView; // @synthesize scopeBarScrollViewHostView=_scopeBarScrollViewHostView;
@property __weak NSTextField *progressTextField; // @synthesize progressTextField=_progressTextField;
@property __weak NSProgressIndicator *progressIndicator; // @synthesize progressIndicator=_progressIndicator;
@property __weak NSView *progressLoadingView; // @synthesize progressLoadingView=_progressLoadingView;
@property(retain) NSMutableArray *textViewDicts; // @synthesize textViewDicts=_textViewDicts;
@property(retain) NSMutableArray *logViewControllers; // @synthesize logViewControllers=_logViewControllers;
@property(retain) XCSUIBotLogScopeBar *scopeBar; // @synthesize scopeBar=_scopeBar;
@property(retain) DVTScopeBarsManager *scopeBarsManager; // @synthesize scopeBarsManager=_scopeBarsManager;
@property __weak DVTStackView_ML *stackView; // @synthesize stackView=_stackView;
@property __weak NSScrollView *stackViewScrollView; // @synthesize stackViewScrollView=_stackViewScrollView;
@property __weak NSView *scopeBarsBaseView; // @synthesize scopeBarsBaseView=_scopeBarsBaseView;
@property NSTextView *textView; // @synthesize textView=_textView;
@property(retain, nonatomic) XCSBotSupportingEditor *botSupportingEditor; // @synthesize botSupportingEditor=_botSupportingEditor;
@property(retain, nonatomic) XCSBot *bot; // @synthesize bot=_bot;
@property(retain, nonatomic) XCSIntegration *integration; // @synthesize integration=_integration;
- (void).cxx_destruct;
- (void)logViewController:(id)arg1 selectedIndexPathsDidChange:(id)arg2;
- (id)logViewController:(id)arg1 replacementDocumentLocationForOriginalDocumentLocation:(id)arg2;
- (id)addLogViewControllerWithLog:(id)arg1 title:(id)arg2;
- (void)_formatTextView:(id)arg1;
- (id)addLozengeTextFieldWithString:(id)arg1;
- (void)selectedLogChanged:(id)arg1;
- (void)loadRawTextLog:(id)arg1;
- (void)loadSchemeActionActivityViews:(id)arg1;
- (void)reorderMenuItems;
- (id)addLogMenuItemWithString:(id)arg1 representedObject:(id)arg2;
- (void)showRawTextLog:(id)arg1;
- (id)_disclosureView;
- (void)configureTextView:(id)arg1;
- (id)integrationForLogDownloading;
- (void)logEditorScopeBar:(id)arg1 searchTextChanged:(id)arg2;
- (void)logEditorScopeBar:(id)arg1 showAllResultsChanged:(BOOL)arg2;
- (void)logEditorScopeBar:(id)arg1 stateChanged:(int)arg2;
- (void)selectDocumentLocations:(id)arg1;
@property(readonly, copy) NSArray *currentSelectedItems;
@property(readonly, copy) NSArray *currentSelectedDocumentLocations; // @synthesize currentSelectedDocumentLocations=_currentSelectedDocumentLocations;
- (void)primitiveInvalidate;
- (void)_updateViewControllers;
- (void)_loadBuildLogView;
- (void)_resetViews;
- (void)loadView;
- (void)_fetchOtherAssets;
- (void)downloadLogs;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XCSUIIntegrationNavigableModelItem : XCSUINavigableModelItem
{
    XCSService *_service;
    unsigned long long _integrationNumber;
    NSString *_integrationIdentifier;
    NSString *_itemIdentifier;
    XCSBuildResultSummary *_buildResultSummary;
    BOOL _groupByTime;
    long long _currentStep;
    long long _result;
    long long _progress;
    NSString *_lastKnownAdvisoryStatus;
    double _lastKnownAdvisoryPercentage;
    NSString *_botIdentifier;
    XCSIntegration *_cachedIntegration;
}

+ (id)keyPathsForValuesAffectingSubtitle;
+ (id)keyPathsForValuesAffectingNavigableItem_progressValue;
+ (id)keyPathsForValuesAffectingNavigableItem_contentDocumentLocation;
+ (id)keyPathsForValuesAffectingNavigableItem_documentType;
+ (id)keyPathsForValuesAffectingNavigableItem_image;
+ (id)keyPathsForValuesAffectingNavigableItem_name;
+ (id)keyPathsForValuesAffectingShortTitle;
+ (id)keyPathsForValuesAffectingTitle;
+ (void)removeSharedItem:(id)arg1;
+ (id)sharedItemWithIntegration:(id)arg1;
+ (id)sharedItemWithIntegrationForGroupByTime:(id)arg1;
+ (id)sharedItemWithIntegrationNumber:(unsigned long long)arg1 identifier:(id)arg2 currentStep:(long long)arg3 result:(long long)arg4 service:(id)arg5 botIdentifier:(id)arg6 cachedIntegration:(id)arg7 forGroupByTime:(BOOL)arg8;
+ (id)sharedItemWithIntegrationNumber:(unsigned long long)arg1 identifier:(id)arg2 currentStep:(long long)arg3 result:(long long)arg4 service:(id)arg5 botIdentifier:(id)arg6;
+ (id)mapTableIdentifierForService:(id)arg1 botIdentifier:(id)arg2 integrationIdentifier:(id)arg3;
+ (void)initialize;
@property(retain, nonatomic) XCSIntegration *cachedIntegration; // @synthesize cachedIntegration=_cachedIntegration;
@property(retain, nonatomic) NSString *botIdentifier; // @synthesize botIdentifier=_botIdentifier;
@property(nonatomic) double lastKnownAdvisoryPercentage; // @synthesize lastKnownAdvisoryPercentage=_lastKnownAdvisoryPercentage;
@property(retain, nonatomic) NSString *lastKnownAdvisoryStatus; // @synthesize lastKnownAdvisoryStatus=_lastKnownAdvisoryStatus;
@property(nonatomic) long long progress; // @synthesize progress=_progress;
@property(retain, nonatomic) XCSBuildResultSummary *buildResultSummary; // @synthesize buildResultSummary=_buildResultSummary;
@property(nonatomic) long long result; // @synthesize result=_result;
@property(nonatomic) long long currentStep; // @synthesize currentStep=_currentStep;
- (void).cxx_destruct;
- (void)menuCmd_viewIntegrationInBrowser:(id)arg1;
- (void)menuCmd_viewBotInBrowser:(id)arg1;
- (void)menuCmd_deleteIntegration:(id)arg1;
- (void)menuCmd_cancelIntegration:(id)arg1;
- (void)menuCmd_cleanAndIntegrate:(id)arg1;
- (void)menuCmd_integrate:(id)arg1;
- (void)integrateBotAndClean:(BOOL)arg1 navigator:(id)arg2;
- (BOOL)allowsAction:(SEL)arg1;
- (long long)navigableItem_progressValue;
- (id)startedTime;
- (id)shortTitle;
- (id)title;
- (BOOL)navigableItem_isLeaf;
- (id)navigableItem_contentDocumentLocation;
- (id)navigableItem_documentType;
- (id)subtitle;
- (id)navigableItem_image;
- (id)navigableItem_name;
- (id)identifier;
- (id)startedTimeDisplayString;
@property(readonly, nonatomic) unsigned long long integrationNumber;
@property(readonly, nonatomic) NSString *integrationIdentifier;
- (void)configureStatusListeners;
- (void)updateCachedIntegration:(CDUnknownBlockType)arg1;
- (id)initWithIntegration:(id)arg1;
- (id)initWithIntegrationNumber:(unsigned long long)arg1 identifier:(id)arg2 currentStep:(long long)arg3 result:(long long)arg4 service:(id)arg5 botIdentifier:(id)arg6 cachedIntegration:(id)arg7 forGroupByTime:(BOOL)arg8;
- (id)initWithIntegrationNumber:(unsigned long long)arg1 identifier:(id)arg2 currentStep:(long long)arg3 result:(long long)arg4 service:(id)arg5 botIdentifier:(id)arg6;

@end

@interface XCSUIIntegrationPerformanceTestMeasureTableCellView : NSTableCellView
{
    XCSUIIntegrationTestsDetailPerfMeasureButton *_measureTypeButton;
    NSImageView *_measureImageView;
    NSTextField *_minField;
    NSTextField *_maxField;
    NSTextField *_averageField;
    NSTextField *_rsdField;
}

@property(retain) NSTextField *rsdField; // @synthesize rsdField=_rsdField;
@property(retain) NSTextField *averageField; // @synthesize averageField=_averageField;
@property(retain) NSTextField *maxField; // @synthesize maxField=_maxField;
@property(retain) NSTextField *minField; // @synthesize minField=_minField;
@property(retain) NSImageView *measureImageView; // @synthesize measureImageView=_measureImageView;
@property(retain) XCSUIIntegrationTestsDetailPerfMeasureButton *measureTypeButton; // @synthesize measureTypeButton=_measureTypeButton;
- (void).cxx_destruct;
- (void)drawRect:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface XCSUIIntegrationReportDocumentLocation : DVTDocumentLocation
{
    unsigned long long _selectTab;
}

@property unsigned long long selectTab; // @synthesize selectTab=_selectTab;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)initWithDocumentURL:(id)arg1 selectTab:(unsigned long long)arg2;

@end

@interface XCSUIIntegrationSteppedProgressView : NSView
{
    NSArray *_possibleSteps;
    long long _currentStep;
    CALayer *_rootLayer;
    NSMutableArray *_labelLayers;
    NSMapTable *_buddyLayers;
    id <XCSUIIntegrationSteppedProgressViewLabelProvider> _labelProvider;
}

@property __weak id <XCSUIIntegrationSteppedProgressViewLabelProvider> labelProvider; // @synthesize labelProvider=_labelProvider;
- (void).cxx_destruct;
- (id)actionForLayer:(id)arg1 forKey:(id)arg2;
- (void)layoutSublayersOfLayer:(id)arg1;
- (void)reloadInformativeString;
- (void)repositionLabels;
- (void)layoutLabels;
@property(nonatomic) long long currentStep;
@property(copy, nonatomic) NSArray *possibleSteps;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface XCSUIIntegrationSummaryDevicesViewController : DVTViewController <NSTableViewDataSource, NSTableViewDelegate>
{
    XCSIntegration *_integration;
    DVTTableView *_devicesTableView;
    NSTextField *_devicesTextField;
    NSTextField *_totalTestsTextField;
    NSTextField *_testsPassedTextField;
    NSTextField *_testsFailedTextField;
    DVTLozengeTextField *_noDevicesLozenge;
    NSView *_noDevicesView;
    NSView *_deviceDetailsView;
    NSView *_deviceBadgesView;
    XCSUIInsetHorizontalDividerLine *_topDividerLine;
}

@property __weak XCSUIInsetHorizontalDividerLine *topDividerLine; // @synthesize topDividerLine=_topDividerLine;
@property __weak NSView *deviceBadgesView; // @synthesize deviceBadgesView=_deviceBadgesView;
@property __weak NSView *deviceDetailsView; // @synthesize deviceDetailsView=_deviceDetailsView;
@property __weak NSView *noDevicesView; // @synthesize noDevicesView=_noDevicesView;
@property __weak DVTLozengeTextField *noDevicesLozenge; // @synthesize noDevicesLozenge=_noDevicesLozenge;
@property __weak NSTextField *testsFailedTextField; // @synthesize testsFailedTextField=_testsFailedTextField;
@property __weak NSTextField *testsPassedTextField; // @synthesize testsPassedTextField=_testsPassedTextField;
@property __weak NSTextField *totalTestsTextField; // @synthesize totalTestsTextField=_totalTestsTextField;
@property __weak NSTextField *devicesTextField; // @synthesize devicesTextField=_devicesTextField;
@property __weak DVTTableView *devicesTableView; // @synthesize devicesTableView=_devicesTableView;
@property(retain, nonatomic) XCSIntegration *integration; // @synthesize integration=_integration;
- (void).cxx_destruct;
- (id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3;
- (BOOL)selectionShouldChangeInTableView:(id)arg1;
- (double)tableView:(id)arg1 heightOfRow:(long long)arg2;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)refreshUI;
- (void)removeAllTableColumns;
- (void)loadView;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XCSUIIntegrationSummaryInflightViewController : DVTViewController <NSTableViewDelegate, NSTableViewDataSource, XCSUIIntegrationSteppedProgressViewLabelProvider>
{
    XCSIntegration *_integration;
    NSTextField *_progressMessageField;
    NSProgressIndicator *_progressBar;
    XCSUIIntegrationSteppedProgressView *_progressView;
    NSButton *_cancelButton;
    long long _currentStep;
    double _stepPartialProgress;
    NSString *_lastKnownAdvisoryStatus;
}

@property(retain) NSString *lastKnownAdvisoryStatus; // @synthesize lastKnownAdvisoryStatus=_lastKnownAdvisoryStatus;
@property double stepPartialProgress; // @synthesize stepPartialProgress=_stepPartialProgress;
@property long long currentStep; // @synthesize currentStep=_currentStep;
@property __weak NSButton *cancelButton; // @synthesize cancelButton=_cancelButton;
@property __weak XCSUIIntegrationSteppedProgressView *progressView; // @synthesize progressView=_progressView;
@property __weak NSProgressIndicator *progressBar; // @synthesize progressBar=_progressBar;
@property __weak NSTextField *progressMessageField; // @synthesize progressMessageField=_progressMessageField;
@property(retain, nonatomic) XCSIntegration *integration; // @synthesize integration=_integration;
- (void).cxx_destruct;
- (void)cancelIntegration:(id)arg1;
- (id)informativeStringForSteppedProgressView:(id)arg1 integrationStep:(long long)arg2;
- (id)labelForSteppedProgressView:(id)arg1 integrationStep:(long long)arg2;
- (void)updateProgressBar;
@property(readonly) double progressBarValue;
- (void)loadView;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XCSUIIntegrationSummaryIssuesViewController : DVTViewController
{
    NSMutableArray *_showMoreRows;
    NSView *_lozengeView;
    _XCSUIIssueSelectionManager *_selectionManager;
    XCSIntegration *_integration;
    XCSIntegrationIssues *_integrationIssues;
    CDUnknownBlockType _viewSizeChangedCallback;
    CDUnknownBlockType _detailsViewSelectionChangedCallback;
    CDUnknownBlockType _detailsViewDoubleClickCallback;
    XCSUIIntegrationSummaryViewController *_summaryViewController;
    double _requiredHeight;
    NSArray *_issueSections;
    _XCSUIIssuesSummaryView *_issuesSummaryView;
}

@property __weak _XCSUIIssuesSummaryView *issuesSummaryView; // @synthesize issuesSummaryView=_issuesSummaryView;
@property(copy) NSArray *issueSections; // @synthesize issueSections=_issueSections;
@property double requiredHeight; // @synthesize requiredHeight=_requiredHeight;
@property __weak XCSUIIntegrationSummaryViewController *summaryViewController; // @synthesize summaryViewController=_summaryViewController;
@property(copy) CDUnknownBlockType detailsViewDoubleClickCallback; // @synthesize detailsViewDoubleClickCallback=_detailsViewDoubleClickCallback;
@property(copy) CDUnknownBlockType detailsViewSelectionChangedCallback; // @synthesize detailsViewSelectionChangedCallback=_detailsViewSelectionChangedCallback;
@property(copy) CDUnknownBlockType viewSizeChangedCallback; // @synthesize viewSizeChangedCallback=_viewSizeChangedCallback;
@property(retain, nonatomic) XCSIntegrationIssues *integrationIssues; // @synthesize integrationIssues=_integrationIssues;
@property(retain, nonatomic) XCSIntegration *integration; // @synthesize integration=_integration;
- (void).cxx_destruct;
- (void)triggerErrorFixIt:(id)arg1;
- (void)deviceFailureFixIt:(id)arg1;
- (void)scmFailureFixIt:(id)arg1;
- (void)calculateRequiredHeight;
- (void)showMoreIssuesInSection:(id)arg1;
- (void)refreshIssuesView;
- (void)populateIssueSectionView:(id)arg1 withSection:(id)arg2;
- (void)populateIssueView:(id)arg1 withIssue:(id)arg2 issueIndex:(unsigned long long)arg3;
- (void)refreshIssueGroups;
- (void)refreshUI;
- (void)loadView;

@end

@interface XCSUIIntegrationSummaryProductsViewController : DVTViewController
{
    XCSIntegration *_integration;
    NSMutableArray *_assetViews;
    NSView *_assetContainerView;
    NSTextField *_numberOfFilesField;
    NSTextField *_totalFileSizeField;
}

@property __weak NSTextField *totalFileSizeField; // @synthesize totalFileSizeField=_totalFileSizeField;
@property __weak NSTextField *numberOfFilesField; // @synthesize numberOfFilesField=_numberOfFilesField;
@property __weak NSView *assetContainerView; // @synthesize assetContainerView=_assetContainerView;
- (void).cxx_destruct;
- (void)repopulateAssets;
- (id)createAssetViewWithAsset:(id)arg1 type:(unsigned long long)arg2;
@property(retain, nonatomic) XCSIntegration *integration;
- (void)loadView;

@end

@interface XCSUIIntegrationSummaryStatusViewController : DVTViewController
{
    XCSUIStatusBadge *_errorsBadge;
    XCSUIStatusBadge *_warningsBadge;
    XCSUIStatusBadge *_issuesBadge;
    XCSUIStatusBadge *_testsBadge;
    XCSIntegration *_integration;
    XCSIntegrationIssues *_integrationIssues;
    XCSUIStatusBadgesView *_badgesView;
}

@property __weak XCSUIStatusBadgesView *badgesView; // @synthesize badgesView=_badgesView;
@property(retain, nonatomic) XCSIntegrationIssues *integrationIssues; // @synthesize integrationIssues=_integrationIssues;
@property(retain, nonatomic) XCSIntegration *integration; // @synthesize integration=_integration;
- (void).cxx_destruct;
- (void)refreshUI;
- (void)refreshWithIntegrationIssues;
- (void)createBadges;
- (void)loadView;
- (void)viewDidLoad;

@end

@interface XCSUIIntegrationSummaryViewController : DVTViewController <XCSBotSupportingEditorHostedViewController>
{
    NSArray *_currentSelectedDocumentLocations;
    XCSIntegration *_integration;
    XCSBot *_bot;
    XCSBotSupportingEditor *_botSupportingEditor;
    NSString *_integrationTitle;
    NSString *_dateFinished;
    NSString *_statusString;
    NSString *_errorCount;
    NSString *_warningCount;
    NSString *_issueCount;
    DVTReplacementView *_statusBadgesReplacementView;
    DVTReplacementView *_productsReplacementView;
    DVTReplacementView *_devicesReplacementView;
    DVTStackView_ML *_stackView;
    long long _currentIntegrationStep;
    _XCSUIIntegrationSummaryScrollView *_scrollView;
    DVTReplacementView *_reflightOrProgressReplacementView;
    XCSUIProgressReplacementView *_issuesReplacementView;
    DVTReplacementView *_errorView;
    DVTLozengeTextField *_errorTextField;
}

+ (BOOL)instancesCanContainDocumentLocation:(id)arg1;
+ (id)keyPathsForValuesAffectingCurrentSelectedItems;
@property __weak DVTLozengeTextField *errorTextField; // @synthesize errorTextField=_errorTextField;
@property __weak DVTReplacementView *errorView; // @synthesize errorView=_errorView;
@property(retain) XCSUIProgressReplacementView *issuesReplacementView; // @synthesize issuesReplacementView=_issuesReplacementView;
@property __weak DVTReplacementView *reflightOrProgressReplacementView; // @synthesize reflightOrProgressReplacementView=_reflightOrProgressReplacementView;
@property __weak _XCSUIIntegrationSummaryScrollView *scrollView; // @synthesize scrollView=_scrollView;
@property long long currentIntegrationStep; // @synthesize currentIntegrationStep=_currentIntegrationStep;
@property __weak DVTStackView_ML *stackView; // @synthesize stackView=_stackView;
@property __weak DVTReplacementView *devicesReplacementView; // @synthesize devicesReplacementView=_devicesReplacementView;
@property __weak DVTReplacementView *productsReplacementView; // @synthesize productsReplacementView=_productsReplacementView;
@property __weak DVTReplacementView *statusBadgesReplacementView; // @synthesize statusBadgesReplacementView=_statusBadgesReplacementView;
@property(copy) NSString *issueCount; // @synthesize issueCount=_issueCount;
@property(copy) NSString *warningCount; // @synthesize warningCount=_warningCount;
@property(copy) NSString *errorCount; // @synthesize errorCount=_errorCount;
@property(copy) NSString *statusString; // @synthesize statusString=_statusString;
@property(copy) NSString *dateFinished; // @synthesize dateFinished=_dateFinished;
@property(copy) NSString *integrationTitle; // @synthesize integrationTitle=_integrationTitle;
@property(retain, nonatomic) XCSBotSupportingEditor *botSupportingEditor; // @synthesize botSupportingEditor=_botSupportingEditor;
@property(retain, nonatomic) XCSBot *bot; // @synthesize bot=_bot;
@property(retain, nonatomic) XCSIntegration *integration; // @synthesize integration=_integration;
@property(readonly, copy) NSArray *currentSelectedDocumentLocations; // @synthesize currentSelectedDocumentLocations=_currentSelectedDocumentLocations;
- (void).cxx_destruct;
- (void)selectDocumentLocations:(id)arg1;
- (void)refreshUI;
- (void)updateReplacementViews;
- (void)configureIssuesInstalledReplacementView;
- (void)sizeStatusIsssueViewFit;
- (id)statusViewController;
- (id)inflightViewController;
- (id)devicesViewController;
- (id)productsViewController;
- (id)issuesViewController;
@property(readonly, copy) NSArray *currentSelectedItems;
- (void)primitiveInvalidate;
- (void)viewDidInstall;
- (void)loadView;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XCSUIIntegrationTestsDetailTestTableRowView : NSTableRowView
{
    BOOL _isLastChildOfGroupRow;
    BOOL _isDisclosedTestRow;
    BOOL _drawBottomLine;
}

@property BOOL drawBottomLine; // @synthesize drawBottomLine=_drawBottomLine;
@property BOOL isDisclosedTestRow; // @synthesize isDisclosedTestRow=_isDisclosedTestRow;
@property BOOL isLastChildOfGroupRow; // @synthesize isLastChildOfGroupRow=_isLastChildOfGroupRow;
- (void)drawBackgroundInRect:(struct CGRect)arg1;

@end

@interface XCSUIIntegrationTestsViewController : DVTViewController <DVTSplitViewDelegate, XCSBotSupportingEditorHostedViewController>
{
    XCSBotSupportingEditor *_botSupportingEditor;
    NSArray *_currentSelectedItems;
    NSArray *_currentSelectedDocumentLocations;
    XCSIntegration *_integration;
    XCSBot *_bot;
    DVTReplacementView *_detailReplacementView;
    DVTBorderedView *_borderedView;
    DVTSplitView *_splitView;
    DVTLozengeTextField *_errorTextField;
}

+ (BOOL)instancesCanContainDocumentLocation:(id)arg1;
+ (id)keyPathsForValuesAffectingCurrentSelectedItems;
@property __weak DVTLozengeTextField *errorTextField; // @synthesize errorTextField=_errorTextField;
@property __weak DVTSplitView *splitView; // @synthesize splitView=_splitView;
@property __weak DVTBorderedView *borderedView; // @synthesize borderedView=_borderedView;
@property __weak DVTReplacementView *detailReplacementView; // @synthesize detailReplacementView=_detailReplacementView;
@property(retain, nonatomic) XCSBot *bot; // @synthesize bot=_bot;
@property(retain, nonatomic) XCSIntegration *integration; // @synthesize integration=_integration;
@property(readonly, copy) NSArray *currentSelectedItems; // @synthesize currentSelectedItems=_currentSelectedItems;
@property(retain, nonatomic) XCSBotSupportingEditor *botSupportingEditor; // @synthesize botSupportingEditor=_botSupportingEditor;
- (void).cxx_destruct;
- (void)selectDocumentLocations:(id)arg1;
@property(readonly, copy) NSArray *currentSelectedDocumentLocations; // @synthesize currentSelectedDocumentLocations=_currentSelectedDocumentLocations;
- (id)installedDetailsViewController;
- (void)primitiveInvalidate;
- (void)loadView;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XCSUIIssueGroup : NSObject
{
    NSString *_groupIdentifier;
    NSArray *_distributedIssues;
    NSArray *_allIssues;
}

@property(copy) NSArray *allIssues; // @synthesize allIssues=_allIssues;
@property(copy) NSArray *distributedIssues; // @synthesize distributedIssues=_distributedIssues;
@property(copy) NSString *groupIdentifier; // @synthesize groupIdentifier=_groupIdentifier;
- (void).cxx_destruct;
- (void)addIssue:(id)arg1;

@end

@interface XCSUIIssueGroupsDistributor : NSObject
{
    int _maxIssuesPerCollapsedSection;
    double _singleRowIssueHeight;
    double _doubleRowIssueHeight;
    double _tripleRowIssueHeight;
}

@property double tripleRowIssueHeight; // @synthesize tripleRowIssueHeight=_tripleRowIssueHeight;
@property double doubleRowIssueHeight; // @synthesize doubleRowIssueHeight=_doubleRowIssueHeight;
@property double singleRowIssueHeight; // @synthesize singleRowIssueHeight=_singleRowIssueHeight;
@property int maxIssuesPerCollapsedSection; // @synthesize maxIssuesPerCollapsedSection=_maxIssuesPerCollapsedSection;
- (void)distributeNewIssues:(id)arg1 unresolvedIssues:(id)arg2 resolvedIssues:(id)arg3 triggerIssues:(id)arg4 buildServiceIssues:(id)arg5 silencedIssues:(id)arg6 completionBlock:(CDUnknownBlockType)arg7;
- (double)heightRequiredToShowIssues:(id)arg1;

@end

@interface XCSUIIssueSectionViewController : NSViewController
{
    _XCSUIIssueSectionView *_issueSectionView;
}

@property(retain) _XCSUIIssueSectionView *issueSectionView; // @synthesize issueSectionView=_issueSectionView;
- (void).cxx_destruct;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

@end

@interface XCSUIIssueViewController : NSViewController
{
    _XCSUIIntegrationIssueView *_issueView;
}

@property(retain) _XCSUIIntegrationIssueView *issueView; // @synthesize issueView=_issueView;
- (void).cxx_destruct;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

@end

@interface XCSUILegacyBotNavigableModelItem : XCSUIBotNavigableModelItem
{
    NSString *_legacyBotName;
    NSString *_legacyConnectionAddress;
    NSString *_legacyServerName;
    NSString *_legacyBotGUID;
}

+ (id)legacyBotNavigablesForLegacyBots:(id)arg1;
- (void).cxx_destruct;
- (BOOL)allowsAction:(SEL)arg1;
- (id)navigableItem_contentDocumentLocation;
- (id)navigableItem_documentType;
- (long long)navigableItem_progressValue;
- (BOOL)navigableItem_isLeaf;
- (id)subtitle;
- (id)navigableItem_image;
- (id)navigableItem_name;
- (id)identifier;
- (void)populateIntegrations;
- (void)configureIntegrationListeners;
- (long long)lastIntegrationResult;
- (long long)lastIntegrationStep;
- (long long)botStatus;
- (id)serverName;
- (id)initWithBotName:(id)arg1 connectionAddress:(id)arg2 serverName:(id)arg3 botGUID:(id)arg4;

@end

@interface XCSUILoadMoreDocumentLocation : DVTDocumentLocation
{
    id _navigableItem;
}

@property(retain) id navigableItem; // @synthesize navigableItem=_navigableItem;
- (void).cxx_destruct;

@end

@interface XCSUILogBundleDownloader : NSObject
{
    NSMutableDictionary *_tokensToDownloads;
}

+ (id)sharedDownloader;
- (void).cxx_destruct;
- (void)cancelDownloadForToken:(id)arg1;
- (id)downloadAllLogsForIntegration:(id)arg1 toDirectory:(id)arg2 progressBlock:(CDUnknownBlockType)arg3;
- (id)fileNameForIntegration:(id)arg1;
- (id)downloadAllLogsForIntegration:(id)arg1 windowForSheets:(id)arg2 progressBlock:(CDUnknownBlockType)arg3;
- (id)init;

@end

@interface XCSUILogNavigatorHelper : NSObject <IDEContinuousIntegrationLogNavigatorHelper>
{
}

- (id)integrationObservableStatusChangedPropertyName;
- (id)botObservableStatusChangedPropertyName;
- (int)statusOfIntegration:(id)arg1;
- (void)compoundStatusForIntegrationOrBot:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (BOOL)isIntegrationFinished:(id)arg1;
- (void)performAction:(SEL)arg1 forNavigableItemSelection:(id)arg2 withNavigator:(id)arg3;
- (id)titleForNavigableItemSelection:(id)arg1 action:(SEL)arg2;
- (BOOL)navigableItemSelection:(id)arg1 allowsAction:(SEL)arg2;
- (id)documentLocationForLoadMoreItemWithNavigable:(id)arg1;
- (void)additionalIntegrationsOnServerForBotNavigable:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)loadMoreBotsInBotNavigable:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (id)legacyBotNavigablesForLegacyBots:(id)arg1;
- (id)navigableItemForIntegration:(id)arg1;
- (id)navigableItemForBotForGroupByTime:(id)arg1;
- (id)navigableItemForBot:(id)arg1;
- (id)navigableItemForService:(id)arg1;
- (id)botIdentifierForIntegrationNavigableItem:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XCSUIOutlineViewSupport : NSObject
{
}

+ (void)replaceHeaderCellsWithModernOnes:(id)arg1 leftmostHeaderMargin:(double)arg2;

@end

@interface XCSUIProgressLoadingViewController : DVTViewController
{
    NSProgressIndicator *_progressIndicator;
    NSTextField *_loadingLabel;
}

@property __weak NSTextField *loadingLabel; // @synthesize loadingLabel=_loadingLabel;
@property __weak NSProgressIndicator *progressIndicator; // @synthesize progressIndicator=_progressIndicator;
- (void).cxx_destruct;
- (void)viewDidInstall;

@end

@interface XCSUIProgressReplacementView : DVTReplacementView
{
}

- (void)awakeFromNib;

@end

@interface XCSUIReflightRequiredViewController : DVTViewController
{
    XCSBot *_reflightBot;
    NSTextField *_lozengeTextField;
    NSTextField *_textField;
    DVTBorderedView *_borderedView;
}

+ (id)defaultViewNibBundle;
+ (id)defaultViewNibName;
@property __weak DVTBorderedView *borderedView; // @synthesize borderedView=_borderedView;
@property __weak NSTextField *textField; // @synthesize textField=_textField;
@property __weak NSTextField *lozengeTextField; // @synthesize lozengeTextField=_lozengeTextField;
@property(retain, nonatomic) XCSBot *reflightBot; // @synthesize reflightBot=_reflightBot;
- (void).cxx_destruct;
- (void)upgradeBot:(id)arg1;
- (void)loadView;

@end

@interface XCSUIServiceManager : XCSServiceManager <NSURLConnectionDataDelegate, IDEContinuousIntegrationServiceManager>
{
    NSArray *_services;
    NSMutableArray *_pendingServices;
    NSTimer *_delayedUpdateServicesTimer;
    BOOL _didRead;
    NSArray *services;
    NSArray *_enabledAndDisabledServices;
    NSString *_localCachePath;
}

+ (id)sharedServiceManager;
@property(readonly, copy, nonatomic) NSString *localCachePath; // @synthesize localCachePath=_localCachePath;
@property(copy, nonatomic) NSArray *enabledAndDisabledServices; // @synthesize enabledAndDisabledServices=_enabledAndDisabledServices;
@property(copy, nonatomic) NSArray *services; // @synthesize services;
- (void).cxx_destruct;
- (id)existingServiceMatchingConnectionAddress:(id)arg1;
- (id)existingServiceMatchingNetServiceName:(id)arg1;
- (id)serviceMatchingClientUUID:(id)arg1;
- (id)serviceMatchingURLString:(id)arg1;
- (void)disableService:(id)arg1;
- (void)enableService:(id)arg1;
- (void)readServicesFromLocalCacheWithCompletionBlock:(CDUnknownBlockType)arg1;
- (id)_localCachePath:(id *)arg1;
- (void)writeServicesToLocalCacheWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)addNewService:(id)arg1 withCompletionBlock:(CDUnknownBlockType)arg2;
- (void)removeService:(id)arg1 withCompletionBlock:(CDUnknownBlockType)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XCSUIServiceNavigableModelItem : XCSUINavigableModelItem
{
    XCSService *_service;
    NSString *_identifier;
    NSString *_serviceName;
}

+ (id)sharedItemWithService:(id)arg1;
+ (id)sharedItemWithServer:(id)arg1;
+ (id)serviceURLWithoutNavigableScheme:(id)arg1;
+ (id)serviceURLForServer:(id)arg1;
@property(copy, nonatomic) NSString *serviceName; // @synthesize serviceName=_serviceName;
- (void).cxx_destruct;
- (id)navigableItem_contentDocumentLocation;
- (id)navigableItem_documentType;
- (long long)navigableItem_progressValue;
- (BOOL)navigableItem_isLeaf;
- (id)subtitle;
- (id)navigableItem_image;
- (id)navigableItem_name;
- (id)identifier;
- (id)initWithService:(id)arg1;

@end

@interface XCSUIStackedBarChartBar : NSObject
{
    NSString *_identifier;
    NSString *_name;
    NSColor *_fillColor;
    NSColor *_strokeColor;
}

@property(retain, nonatomic) NSColor *strokeColor; // @synthesize strokeColor=_strokeColor;
@property(retain, nonatomic) NSColor *fillColor; // @synthesize fillColor=_fillColor;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(copy, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
- (id)initWithIdentifier:(id)arg1 name:(id)arg2 fillColor:(id)arg3 strokeColor:(id)arg4;

@end

@interface XCSUIStackedBarChartViewController : DVTViewController <XCSUIBotSummaryStackedBarGraphDelegate>
{
    NSArray *_stackedBarChartBars;
    NSString *_chartName;
    id <XCSUIStackedBarChartViewControllerDataSource> _dataSource;
    id <XCSUIStackedBarChartViewControllerDelegate> _delegate;
    XCSUIBotSummaryStackedBarGraphController *_graphController;
    unsigned long long _graphType;
    XCSUIBotSummaryStackedBarGraph *_graphView;
    NSTextField *_titleTextField;
    NSTextField *_legendTextField;
}

@property(retain) NSTextField *legendTextField; // @synthesize legendTextField=_legendTextField;
@property(retain) NSTextField *titleTextField; // @synthesize titleTextField=_titleTextField;
@property(retain, nonatomic) XCSUIBotSummaryStackedBarGraph *graphView; // @synthesize graphView=_graphView;
@property unsigned long long graphType; // @synthesize graphType=_graphType;
@property(retain) XCSUIBotSummaryStackedBarGraphController *graphController; // @synthesize graphController=_graphController;
@property(nonatomic) __weak id <XCSUIStackedBarChartViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) id <XCSUIStackedBarChartViewControllerDataSource> dataSource; // @synthesize dataSource=_dataSource;
@property(copy, nonatomic) NSString *chartName; // @synthesize chartName=_chartName;
@property(copy, nonatomic) NSArray *stackedBarChartBars; // @synthesize stackedBarChartBars=_stackedBarChartBars;
- (void).cxx_destruct;
- (void)reloadColumn:(unsigned long long)arg1;
- (void)reloadData;
- (id)emptyColumnColor;
- (void)mouseExitedGraph:(id)arg1 event:(id)arg2;
- (void)mouseClickedOnGraph:(id)arg1 column:(id)arg2 event:(id)arg3;
- (void)mouseMovedOverGraph:(id)arg1 column:(id)arg2 event:(id)arg3;
- (void)primitiveInvalidate;
- (void)loadView;
- (void)setSuppressSuccessBarsIfNoData:(BOOL)arg1;
- (void)_updateLegend;
- (id)_attachmentStringWithFillColor:(id)arg1 strokeColor:(id)arg2;

@end

@interface XCSUIStatusBadge : NSObject
{
    BOOL _showNewIssuesResolvedIssuesDifferencesCount;
    NSString *_badgeLabel;
    NSImage *_badgeIcon;
    double _preferredFontSize;
    unsigned long long _badgeCount;
    unsigned long long _secondaryBadgeCount;
    NSColor *_secondaryBadgeColor;
    NSColor *_badgeColor;
    NSColor *_lightBadgeColor;
    long long _countOfNewIssues;
    long long _countOfResolvedIssues;
    XCSUIStatusBadgeView *_badgeView;
}

@property __weak XCSUIStatusBadgeView *badgeView; // @synthesize badgeView=_badgeView;
@property long long countOfResolvedIssues; // @synthesize countOfResolvedIssues=_countOfResolvedIssues;
@property long long countOfNewIssues; // @synthesize countOfNewIssues=_countOfNewIssues;
@property BOOL showNewIssuesResolvedIssuesDifferencesCount; // @synthesize showNewIssuesResolvedIssuesDifferencesCount=_showNewIssuesResolvedIssuesDifferencesCount;
@property(copy) NSColor *lightBadgeColor; // @synthesize lightBadgeColor=_lightBadgeColor;
@property(copy) NSColor *badgeColor; // @synthesize badgeColor=_badgeColor;
@property(copy) NSColor *secondaryBadgeColor; // @synthesize secondaryBadgeColor=_secondaryBadgeColor;
@property unsigned long long secondaryBadgeCount; // @synthesize secondaryBadgeCount=_secondaryBadgeCount;
@property unsigned long long badgeCount; // @synthesize badgeCount=_badgeCount;
@property double preferredFontSize; // @synthesize preferredFontSize=_preferredFontSize;
@property(copy) NSImage *badgeIcon; // @synthesize badgeIcon=_badgeIcon;
@property(copy) NSString *badgeLabel; // @synthesize badgeLabel=_badgeLabel;
- (void).cxx_destruct;

@end

@interface XCSUIStatusBadgeView : NSView
{
    BOOL _setupDone;
    CAShapeLayer *_badgeCircleLayer;
    CATextLayer *_badgeCountTextLayer;
    CATextLayer *_secondaryBadgeCountTextLayer;
    CATextLayer *_badgeLabelTextLayer;
    CATextLayer *_newIssuesTextLayer;
    XCSUIStatusBadge *_badge;
    XCSUIStatusBadgesView *_hostBadgeView;
}

@property __weak XCSUIStatusBadgesView *hostBadgeView; // @synthesize hostBadgeView=_hostBadgeView;
@property(retain) XCSUIStatusBadge *badge; // @synthesize badge=_badge;
- (void).cxx_destruct;
- (BOOL)wantsUpdateLayer;
- (void)runOpacityAnimation:(id)arg1;
- (void)updateLayer;
- (struct CGColor *)defaultBadgeCountTextColor;
- (void)reset;
- (void)viewDidChangeBackingProperties;
- (void)reconfigureBadge;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface XCSUIStatusBadgesView : NSView <NSAccessibilityStaticText>
{
    NSMutableArray *_badgeViews;
    XCSUIStatusBadge *_errorsBadge;
    XCSUIStatusBadge *_warningsBadge;
    XCSUIStatusBadge *_issuesBadge;
    XCSUIStatusBadge *_testsBadge;
    BOOL _insetFirstBadge;
    NSArray *_badges;
}

@property(nonatomic) BOOL insetFirstBadge; // @synthesize insetFirstBadge=_insetFirstBadge;
@property(copy, nonatomic) NSArray *badges; // @synthesize badges=_badges;
- (void).cxx_destruct;
- (id)accessibilityValue;
- (double)renderedWidth;
- (void)refreshBadges;
- (void)resizeSubviewsWithOldSize:(struct CGSize)arg1;
- (void)placeBadges;
- (void)removeBadgeSubviews;
- (void)resetBadgeSelection:(id)arg1 ressetAll:(BOOL)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XCSUITestRunFetcher : NSObject <IDETestReportTestRunFetcher>
{
}

- (void)fetchTestRunsForTests:(id)arg1 rootObject:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XCSUITriggerCommitterOptionsViewController : NSViewController
{
    DVTSourceControlWorkspaceBlueprint *_blueprint;
    NSArray *_repositoryOptions;
}

@property(retain) NSArray *repositoryOptions; // @synthesize repositoryOptions=_repositoryOptions;
@property(retain) DVTSourceControlWorkspaceBlueprint *blueprint; // @synthesize blueprint=_blueprint;
- (void).cxx_destruct;
- (void)ok:(id)arg1;
- (void)cancel:(id)arg1;
@property(retain) XCSTriggerSCMOptions *scmOptions;
- (void)viewDidLoad;

@end

@interface XCSUIVerticalDividerLineView : NSView
{
}

- (void)drawRect:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface XCSUIZipUnpackUtility : NSObject
{
}

- (id)unpackZipArchive:(id)arg1 toPath:(id)arg2;

@end

@interface XCSUI_Private : NSObject
{
}

+ (BOOL)useFakeIntegration;
+ (void)initialize;

@end

@interface XCSWorkspaceBotMonitor : NSObject <DVTInvalidation, IDEContinuousIntegrationBotMonitor>
{
    BOOL _filterBotsToWorkspace;
    DVTNotificationToken *_scmNotificationToken;
    DVTNotificationToken *_maintenanceTasksEncounteredToken;
    DVTObservingToken *_serviceManagerServicesObservingToken;
    NSMapTable *_servicesConnectedObservers;
    NSMutableArray *_maintenanceTaskPollTimers;
    IDEWorkspace *_workspace;
    NSArray *_bots;
    NSArray *_serversWithMaintenanceTasks;
}

+ (long long)resultForIntegrationID:(id)arg1;
+ (long long)currentStepForIntegrationID:(id)arg1;
+ (unsigned long long)assertionBehaviorAfterEndOfEventForSelector:(SEL)arg1;
+ (id)_activityStreamLogAspect;
+ (id)_workspaceBotMonitorLogAspect;
+ (void)initialize;
@property(copy, nonatomic) NSArray *serversWithMaintenanceTasks; // @synthesize serversWithMaintenanceTasks=_serversWithMaintenanceTasks;
@property(copy, nonatomic) NSArray *bots; // @synthesize bots=_bots;
@property(retain, nonatomic) IDEWorkspace *workspace; // @synthesize workspace=_workspace;
- (void).cxx_destruct;
- (void)_performTransactionalUpdateBlockOnMainQueue:(CDUnknownBlockType)arg1;
- (void)postAlertsForIntegrationID:(id)arg1 service:(id)arg2;
- (void)updateBotClientsInService:(id)arg1;
- (void)filterBotsToWorkspace:(BOOL)arg1;
- (void)_updateBotsFromService:(id)arg1 botNavigablesNeedRefresh:(BOOL)arg2;
- (void)_updateBotsForServiceInMaintenanceMode:(id)arg1;
- (void)startObservingServiceManager;
- (void)primitiveInvalidate;
- (void)_pollServiceForMaintenaceTasks:(id)arg1;
- (void)pollServiceForMaintenaceTasks:(id)arg1;
- (void)_cancelMaintenanceTasksPollingOnService:(id)arg1;
- (id)initWithWorkspace:(id)arg1;
- (id)init;
- (void)_commonInit;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface XCUIBotSummaryViewDataSource : NSObject
{
    XCSBot *_bot;
}

@property(retain, nonatomic) XCSBot *bot; // @synthesize bot=_bot;
- (void).cxx_destruct;
- (void)queryDataSourceWithItemsCount:(unsigned long long)arg1 CompletionHandler:(CDUnknownBlockType)arg2;

@end

@interface _XCSTestFetcher : NSObject
{
    NSOperationQueue *_fetchQueue;
    NSObject<OS_dispatch_semaphore> *_fetchSemaphore;
}

+ (id)sharedTestFetcher;
- (void).cxx_destruct;
- (void)fetchTestsForPlaceholder:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
- (id)init;

@end

@interface _XCSUIAllCommittersBadgeView : NSView
{
    XCSUIIntegrationCommitsViewController *_commitsViewController;
    XCSUIIntegrationCommitterBadgeView *_committerBadgeView;
}

@property(retain) XCSUIIntegrationCommitterBadgeView *committerBadgeView; // @synthesize committerBadgeView=_committerBadgeView;
@property(retain) XCSUIIntegrationCommitsViewController *commitsViewController; // @synthesize commitsViewController=_commitsViewController;
- (void).cxx_destruct;
- (void)awakeFromNib;

@end

@interface _XCSUIBotDefinitionDevicePickerNameTableCellView : NSTableCellView
{
    XCSDevice *_theDevice;
}

@property(retain) XCSDevice *theDevice; // @synthesize theDevice=_theDevice;
- (void).cxx_destruct;
- (void)setBackgroundStyle:(long long)arg1;
- (id)attributedStringWithStyle:(long long)arg1;

@end

@interface _XCSUIBotIntegrationPopoverDividerLine : NSView
{
}

- (void)drawRect:(struct CGRect)arg1;

@end

@interface _XCSUIBotSummaryControllerContentView : DVTControllerContentView
{
    BOOL _didFinishLayout;
}

@property BOOL didFinishLayout; // @synthesize didFinishLayout=_didFinishLayout;
- (void)didCompleteLayout;

@end

@interface _XCSUIIntegrationIssueView : NSView
{
    BOOL _isSelected;
    _XCSUIIssueSelectionManager *_selectionManager;
    XCSUIIntegrationIssue *_integrationIssue;
    XCSIntegration *_integration;
    NSImageView *_issueTypeIcon;
    NSTextField *_issueCountField;
    NSTextField *_issueTypeAndCauseField;
    NSTextField *_issueFileField;
    NSTextField *_introducedInField;
    NSButton *_fixItButton;
    CDUnknownBlockType _issueSelectionCallback;
    CDUnknownBlockType _issueDoubleClickCallback;
}

@property(copy) CDUnknownBlockType issueDoubleClickCallback; // @synthesize issueDoubleClickCallback=_issueDoubleClickCallback;
@property(copy) CDUnknownBlockType issueSelectionCallback; // @synthesize issueSelectionCallback=_issueSelectionCallback;
@property(retain) NSButton *fixItButton; // @synthesize fixItButton=_fixItButton;
@property(retain) NSTextField *introducedInField; // @synthesize introducedInField=_introducedInField;
@property(retain) NSTextField *issueFileField; // @synthesize issueFileField=_issueFileField;
@property(retain) NSTextField *issueTypeAndCauseField; // @synthesize issueTypeAndCauseField=_issueTypeAndCauseField;
@property(retain) NSTextField *issueCountField; // @synthesize issueCountField=_issueCountField;
@property __weak NSImageView *issueTypeIcon; // @synthesize issueTypeIcon=_issueTypeIcon;
@property(nonatomic) BOOL isSelected; // @synthesize isSelected=_isSelected;
@property(retain) XCSIntegration *integration; // @synthesize integration=_integration;
@property(retain) XCSUIIntegrationIssue *integrationIssue; // @synthesize integrationIssue=_integrationIssue;
@property __weak _XCSUIIssueSelectionManager *selectionManager; // @synthesize selectionManager=_selectionManager;
- (void).cxx_destruct;
- (void)resizeSubviewsWithOldSize:(struct CGSize)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)rightMouseDown:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)copy:(id)arg1;
- (BOOL)canBecomeKeyView;
- (BOOL)becomeFirstResponder;
- (BOOL)acceptsFirstResponder;
- (BOOL)wantsLayer;
- (id)issue;

@end

@interface _XCSUIIntegrationSummaryCommiterTableRowView : NSTableRowView
{
}

- (void)drawSelectionInRect:(struct CGRect)arg1;

@end

@interface _XCSUIIntegrationSummaryDeviceTableCellView : NSTableCellView
{
    NSTextField *_deviceName;
    NSTextField *_deviceModelName;
    NSTextField *_devicePlatform;
    NSTextField *_testStatus;
}

@property __weak NSTextField *testStatus; // @synthesize testStatus=_testStatus;
@property __weak NSTextField *devicePlatform; // @synthesize devicePlatform=_devicePlatform;
@property __weak NSTextField *deviceModelName; // @synthesize deviceModelName=_deviceModelName;
@property __weak NSTextField *deviceName; // @synthesize deviceName=_deviceName;
- (void).cxx_destruct;

@end

@interface _XCSUIIntegrationSummaryScrollView : NSScrollView
{
    BOOL _allowScrolling;
}

@property BOOL allowScrolling; // @synthesize allowScrolling=_allowScrolling;
- (void)scrollWheel:(id)arg1;

@end

@interface _XCSUIIssueSectionView : DVTBorderedView
{
    NSButton *_sectionTitleButton;
}

@property __weak NSButton *sectionTitleButton; // @synthesize sectionTitleButton=_sectionTitleButton;
- (void).cxx_destruct;
- (void)resizeSubviewsWithOldSize:(struct CGSize)arg1;

@end

@interface _XCSUIIssueSelectionManager : NSObject
{
    NSMutableArray *_selectedIssues;
    long long _anchorIndex;
    long long _selectionDistance;
    NSArray *_allIssues;
}

@property(retain) NSArray *allIssues; // @synthesize allIssues=_allIssues;
- (void).cxx_destruct;
- (void)copyIssues:(id)arg1;
- (void)copyIssue:(id)arg1;
@property(readonly, copy) NSArray *selectedIssues;
- (void)_extendSelectionToIssueView:(id)arg1;
- (void)mouseDownInIssueView:(id)arg1 selectionMode:(unsigned long long)arg2;
- (void)_resetAnchorToIssueView:(id)arg1;
- (void)rightClickInIssueView:(id)arg1;
- (void)doubleClickInIssueView:(id)arg1;
- (void)_selectIssues:(id)arg1;
- (void)_deselectIssues:(id)arg1;
- (void)_deselectAllIssues;

@end

@interface _XCSUIIssueShowMoreButton : NSButton
{
    _XCSUIStatusIssueSection *_issueSection;
}

@property(retain) _XCSUIStatusIssueSection *issueSection; // @synthesize issueSection=_issueSection;
- (void).cxx_destruct;

@end

@interface _XCSUIIssuesSummaryView : NSView <DVTRadar_AttachmentDownloadDelegate>
{
    NSMutableArray *_radarIssuesQueue;
    _XCSUIIssueSelectionManager *_selectionManager;
    XCSIntegration *_integration;
    CDUnknownBlockType _refreshIssuesCallback;
}

@property(copy) CDUnknownBlockType refreshIssuesCallback; // @synthesize refreshIssuesCallback=_refreshIssuesCallback;
@property(retain) XCSIntegration *integration; // @synthesize integration=_integration;
@property(retain) _XCSUIIssueSelectionManager *selectionManager; // @synthesize selectionManager=_selectionManager;
- (void).cxx_destruct;
- (void)setFrame:(struct CGRect)arg1;
- (void)unassignIssue:(id)arg1;
- (void)assignIssueToMe:(id)arg1;
- (void)stopSilencingIssue:(id)arg1;
- (void)silenceIssue:(id)arg1;
- (void)removeRadarAssociationForIssues:(id)arg1;
- (void)unassignRadarsForIssues:(id)arg1;
- (void)unassignRadarForIssue:(id)arg1;
- (void)assignExistingRadarToIssues:(id)arg1;
- (void)assignExistingRadarToIssue:(id)arg1;
- (void)fileRadarForIssues:(id)arg1;
- (void)fileRadarForIssue:(id)arg1;
- (void)fetchAttachmentsCompletionBlock:(CDUnknownBlockType)arg1;
- (void)removeAssociationFromIssues:(id)arg1 withProblemID:(unsigned long long)arg2;
- (void)associateIssues:(id)arg1 withProblemID:(unsigned long long)arg2;
- (void)openAssociatedOriginalRadar:(id)arg1;
- (void)openAssociatedRadars:(id)arg1;
- (void)openAssociatedRadar:(id)arg1;
- (void)copyIssues:(id)arg1;
- (void)copyIssue:(id)arg1;
- (void)jumpToIntegration:(id)arg1;
- (id)menu;
- (BOOL)isFlipped;
- (BOOL)wantsLayer;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface _XCSUILegendTextAttachmentCell : NSTextAttachmentCell
{
}

- (struct CGPoint)cellBaselineOffset;

@end

@interface _XCSUIShowMoreRow : NSObject
{
}

@end

@interface _XCSUIStatusIssueSection : NSObject
{
    BOOL _showAllIssues;
    BOOL _showErrors;
    BOOL _showWarnings;
    BOOL _showAnalysis;
    BOOL _isSilencedIssues;
    NSString *_issuesTitle;
    NSArray *_allIssues;
    NSArray *_scaledIssues;
    NSArray *_errorIssues;
    NSArray *_warningIssues;
    NSArray *_analysisIssues;
}

+ (id)issuesSectionWithTitle:(id)arg1 allIssues:(id)arg2 scaledIssues:(id)arg3;
@property(nonatomic) BOOL isSilencedIssues; // @synthesize isSilencedIssues=_isSilencedIssues;
@property(nonatomic) BOOL showAnalysis; // @synthesize showAnalysis=_showAnalysis;
@property(nonatomic) BOOL showWarnings; // @synthesize showWarnings=_showWarnings;
@property(nonatomic) BOOL showErrors; // @synthesize showErrors=_showErrors;
@property(nonatomic) BOOL showAllIssues; // @synthesize showAllIssues=_showAllIssues;
@property(readonly, copy) NSArray *analysisIssues; // @synthesize analysisIssues=_analysisIssues;
@property(readonly, copy) NSArray *warningIssues; // @synthesize warningIssues=_warningIssues;
@property(readonly, copy) NSArray *errorIssues; // @synthesize errorIssues=_errorIssues;
@property(readonly, copy) NSArray *scaledIssues; // @synthesize scaledIssues=_scaledIssues;
@property(readonly, copy) NSArray *allIssues; // @synthesize allIssues=_allIssues;
@property(readonly, copy) NSString *issuesTitle; // @synthesize issuesTitle=_issuesTitle;
- (void).cxx_destruct;
@property(readonly, copy) NSArray *displayedIssues;

@end

