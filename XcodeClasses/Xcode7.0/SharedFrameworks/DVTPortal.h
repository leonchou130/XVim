//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark -

//
// File: /Applications/Xcode-7GM.app/Contents/SharedFrameworks/DVTPortal.framework/Versions/A/DVTPortal
// UUID: 2A4BFEED-1AA4-30C5-9B5B-6ABA63205139
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 8201.0.0.0.0
//       Minimum Mac OS X version: 10.10.0
//                    SDK version: 10.11.0
//
// Objective-C Garbage Collection: Unsupported
//
//                       Run path: @executable_path/../Frameworks
//                               = /Applications/Xcode-7GM.app/Contents/SharedFrameworks/DVTPortal.framework/Versions/Frameworks
//                       Run path: @loader_path/Frameworks
//                               = /Applications/Xcode-7GM.app/Contents/SharedFrameworks/DVTPortal.framework/Versions/A/Frameworks
//

@protocol DVTPortalDevice <NSObject>
@property(readonly, copy, nonatomic) NSString *identifier;
@property(readonly, nonatomic) DVTPlatform *platform;
@property(readonly, copy, nonatomic) NSString *name;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (BOOL)respondsToSelector:(SEL)arg1;
- (BOOL)conformsToProtocol:(Protocol *)arg1;
- (BOOL)isMemberOfClass:(Class)arg1;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (BOOL)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol __ARCLiteIndexedSubscripting__
- (void)setObject:(id)arg1 atIndexedSubscript:(unsigned long long)arg2;
- (id)objectAtIndexedSubscript:(unsigned long long)arg1;
@end

@protocol __ARCLiteKeyedSubscripting__
- (void)setObject:(id)arg1 forKeyedSubscript:(id)arg2;
- (id)objectForKeyedSubscript:(id)arg1;
@end

@interface DVTPlatform (DVTPortalAdditions)
- (id)portalIdentifier;
- (id)portalPlatform;
@end

@interface DVTPortalService : NSObject
{
    NSArray *_extensionRequestParameters;
    NSString *_identifier;
    NSString *_action;
    NSDictionary *_parameters;
    NSArray *_expectedResponseTemplates;
}

+ (void)initialize;
+ (id)serviceWithIdentifier:(id)arg1 parameters:(id)arg2;
@property(readonly, nonatomic) NSArray *expectedResponseTemplates; // @synthesize expectedResponseTemplates=_expectedResponseTemplates;
@property(readonly, nonatomic) NSDictionary *parameters; // @synthesize parameters=_parameters;
@property(copy, nonatomic) NSString *action; // @synthesize action=_action;
@property(readonly, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
@property(readonly, nonatomic) NSArray *extensionRequestParameters; // @synthesize extensionRequestParameters=_extensionRequestParameters;
- (void).cxx_destruct;
- (id)_requestParameters;
- (id)_requestWithSession:(id)arg1;
- (id)_payloadFromParameters:(id)arg1 extensionRequestParameters:(id)arg2;
- (id)_responseFromServiceWithSession:(id)arg1 error:(id *)arg2;
- (id)_resultFromPayload:(id)arg1 resultCode:(long long)arg2 error:(id *)arg3;
- (BOOL)_isResponseParameterSatisfied:(id)arg1 resultCode:(long long)arg2;
- (id)resultFromServiceWithSession:(id)arg1 response:(id *)arg2 error:(id *)arg3;
- (id)resultFromServiceWithSession:(id)arg1 error:(id *)arg2;
- (void)_assertValidityOfParameters:(id)arg1 extensionRequestParameters:(id)arg2;
- (id)description;
- (id)initWithExtension:(id)arg1 parameters:(id)arg2;

@end

@interface DVTPortalAppIDService : DVTPortalService
{
    NSDictionary *_featureKeyToSanitizedPlistValue;
}

+ (id)_requestParameterPayloadDictionaryFromFeatures:(id)arg1;
+ (id)_serviceIdentifier;
+ (id)_serviceWithTeam:(id)arg1 platform:(id)arg2 features:(id)arg3 extraParameters:(id)arg4;
@property(copy, nonatomic) NSDictionary *featureKeyToSanitizedPlistValue; // @synthesize featureKeyToSanitizedPlistValue=_featureKeyToSanitizedPlistValue;
- (void).cxx_destruct;
- (id)_requestParameters;

@end

@interface DVTPortalAddAppIDService : DVTPortalAppIDService
{
}

+ (id)addAppIDServiceWithTeam:(id)arg1 platform:(id)arg2 name:(id)arg3 appID:(id)arg4 features:(id)arg5;
+ (id)_serviceIdentifier;

@end

@interface DVTPortalAppID : NSObject
{
    NSArray *_enabledFeatures;
    NSString *_name;
    NSString *_portalID;
    DVTPortalTeam *_team;
    NSString *_appID;
    DVTPortalPlatform *_portalPlatform;
}

+ (id)_errorForInconsistentPostFeatureEnableResponseWithExpectedFeatures:(id)arg1 actualFeatures:(id)arg2;
+ (id)_deleteAppIDServiceWithTeam:(id)arg1 appID:(id)arg2;
+ (id)_updateAppIDServiceWithTeam:(id)arg1 platform:(id)arg2 portalID:(id)arg3 features:(id)arg4;
+ (id)_addAppIDServiceWithTeam:(id)arg1 platform:(id)arg2 name:(id)arg3 appID:(id)arg4 features:(id)arg5;
+ (id)_appIDForBundleID:(id)arg1 features:(id)arg2;
+ (id)_nameForBundleID:(id)arg1 features:(id)arg2;
+ (id)createAppIDWithSession:(id)arg1 team:(id)arg2 platform:(id)arg3 bundleID:(id)arg4 features:(id)arg5 error:(id *)arg6;
+ (id)_listAppIDsServiceWithTeam:(id)arg1 platform:(id)arg2;
+ (id)appIDsWithSession:(id)arg1 team:(id)arg2 platform:(id)arg3 error:(id *)arg4;
@property(retain, nonatomic) DVTPortalPlatform *portalPlatform; // @synthesize portalPlatform=_portalPlatform;
@property(readonly, nonatomic) NSString *appID; // @synthesize appID=_appID;
@property(retain, nonatomic) DVTPortalTeam *team; // @synthesize team=_team;
@property(copy, nonatomic) NSString *portalID; // @synthesize portalID=_portalID;
@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
@property(readonly, nonatomic) NSArray *enabledFeatures; // @synthesize enabledFeatures=_enabledFeatures;
- (void).cxx_destruct;
- (BOOL)areFeaturesEnabled:(id)arg1;
- (BOOL)isManagedByXcode;
- (BOOL)matchesBundleID:(id)arg1;
- (BOOL)isWildcard;
@property(readonly, nonatomic) DVTPlatform *platform;
- (BOOL)removeWithSession:(id)arg1 error:(id *)arg2;
- (BOOL)enableFeatures:(id)arg1 session:(id)arg2 error:(id *)arg3;
- (id)init;
- (id)description;

@end

@interface DVTPortalCSR : NSObject
{
    NSString *_portalID;
    NSString *_portalCertificateID;
    NSString *_name;
    NSString *_status;
    NSDate *_dateRequested;
    DVTPortalCertificateType *_portalCertificateType;
}

+ (id)listCertificateRequestsWithSession:(id)arg1 andTeam:(id)arg2 ofType:(id)arg3 error:(id *)arg4;
+ (id)requestCertificateWithSession:(id)arg1 andTeam:(id)arg2 ofType:(id)arg3 error:(id *)arg4;
@property(readonly, copy, nonatomic) DVTPortalCertificateType *portalCertificateType; // @synthesize portalCertificateType=_portalCertificateType;
@property(readonly, copy, nonatomic) NSDate *dateRequested; // @synthesize dateRequested=_dateRequested;
@property(readonly, copy, nonatomic) NSString *status; // @synthesize status=_status;
@property(readonly, copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(readonly, copy, nonatomic) NSString *portalCertificateID; // @synthesize portalCertificateID=_portalCertificateID;
@property(readonly, copy, nonatomic) NSString *portalID; // @synthesize portalID=_portalID;
- (void).cxx_destruct;
- (id)description;

@end

@interface DVTPortalCertificate : NSObject
{
    NSString *_name;
    DVTPortalTeam *_team;
    DVTSigningCertificate *_signingCertificate;
    DVTPortalCertificateType *_portalCertificateType;
    NSString *_portalID;
    NSString *_serialNumber;
    NSDate *_expirationDate;
    NSString *_status;
}

+ (id)certificatesForSession:(id)arg1 team:(id)arg2 type:(id)arg3 error:(id *)arg4;
+ (id)requestCertificateWithSession:(id)arg1 team:(id)arg2 type:(id)arg3 error:(id *)arg4;
@property(readonly, copy, nonatomic) NSString *status; // @synthesize status=_status;
@property(readonly, copy, nonatomic) NSDate *expirationDate; // @synthesize expirationDate=_expirationDate;
@property(readonly, copy, nonatomic) NSString *serialNumber; // @synthesize serialNumber=_serialNumber;
@property(readonly, copy, nonatomic) NSString *portalID; // @synthesize portalID=_portalID;
@property(readonly, nonatomic) DVTPortalCertificateType *portalCertificateType; // @synthesize portalCertificateType=_portalCertificateType;
@property(retain, nonatomic) DVTSigningCertificate *signingCertificate; // @synthesize signingCertificate=_signingCertificate;
@property(retain, nonatomic) DVTPortalTeam *team; // @synthesize team=_team;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (id)description;
- (BOOL)revokeWithSession:(id)arg1 error:(id *)arg2;

@end

@interface DVTPortalCertificateType : NSObject <NSCopying>
{
    NSString *_distributionType;
    NSString *_distributionMethod;
    NSString *_listServiceIdentifier;
    NSString *_requestServiceIdentifier;
    NSString *_revokeServiceIdentifier;
    NSString *_listCSRServiceIdentifier;
    NSString *_keyNameFormat;
    DVTPortalPlatform *_portalPlatform;
    DVTExtension *_extension;
}

+ (id)_certificateTypeWithPlatformIdentifier:(id)arg1 distributionType:(id)arg2 andDistributionMethod:(id)arg3;
+ (id)certificateTypeWithIdentifier:(id)arg1;
+ (id)allCertificateTypes;
+ (id)_certificateTypeMap;
@property(readonly) DVTExtension *extension; // @synthesize extension=_extension;
@property(readonly) DVTPortalPlatform *portalPlatform; // @synthesize portalPlatform=_portalPlatform;
@property(readonly) NSString *keyNameFormat; // @synthesize keyNameFormat=_keyNameFormat;
@property(readonly) NSString *listCSRServiceIdentifier; // @synthesize listCSRServiceIdentifier=_listCSRServiceIdentifier;
@property(readonly) NSString *revokeServiceIdentifier; // @synthesize revokeServiceIdentifier=_revokeServiceIdentifier;
@property(readonly) NSString *requestServiceIdentifier; // @synthesize requestServiceIdentifier=_requestServiceIdentifier;
@property(readonly) NSString *listServiceIdentifier; // @synthesize listServiceIdentifier=_listServiceIdentifier;
@property(readonly) NSString *distributionMethod; // @synthesize distributionMethod=_distributionMethod;
@property(readonly) NSString *distributionType; // @synthesize distributionType=_distributionType;
- (void).cxx_destruct;
- (id)_keyNameForTeam:(id)arg1;
- (id)_listCSRServiceForTeam:(id)arg1;
- (id)_revokeServiceForCertificate:(id)arg1;
- (id)_requestServiceForTeam:(id)arg1 csr:(id)arg2;
- (id)_listServiceForTeam:(id)arg1;
@property(readonly) DVTPlatform *platform;
@property(readonly) NSString *identifier;
- (id)description;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)_assertValidity;
- (_Bool)_isValid;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithExtension:(id)arg1;
- (id)init;

@end

@interface DVTPortalCertificateTypeType : DVTServicesType
{
}

- (BOOL)_primitivePortalValue:(id)arg1 isEqualToDeserializedValue:(id)arg2;
- (id)_primitiveValueByTransformingServiceValue:(id)arg1 context:(id)arg2 error:(id *)arg3;
- (id)_bogusValueForMismatchedTypeTesting;

@end

@interface DVTPortalCode : NSObject
{
    NSString *_identifier;
    long long _code;
}

+ (id)portalCodeWithIdentifier:(id)arg1;
+ (id)_orderedPortalCodeIdentifierToCodeMap;
+ (id)_orderedPortalCodeIdentifierToCodeMap:(id)arg1;
+ (id)successCode;
+ (id)portalCodes;
@property(readonly, nonatomic) long long code; // @synthesize code=_code;
@property(readonly, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)description;
- (id)initWithCode:(long long)arg1 identifier:(id)arg2;
- (id)initWithExtension:(id)arg1;

@end

@interface DVTPortalDeleteAppIDService : DVTPortalService
{
}

+ (id)deleteAppIDServiceWithTeam:(id)arg1 platform:(id)arg2 portalID:(id)arg3;

@end

@interface DVTPortalDeleteProfileService : DVTPortalService
{
}

+ (id)deleteProfileServiceWithTeam:(id)arg1 platform:(id)arg2 profile:(id)arg3;

@end

@interface DVTPortalDevice : NSObject <DVTPortalDevice>
{
    NSString *name;
    DVTPlatform *platform;
    NSString *identifier;
    NSString *_portalID;
}

+ (id)_errorForTeamLacksPlatformError:(id)arg1 device:(id)arg2;
+ (id)_errorForMemberLacksPermissionError:(id)arg1 device:(id)arg2;
+ (id)_registerServiceForTeam:(id)arg1 platform:(id)arg2 identifier:(id)arg3 name:(id)arg4;
+ (BOOL)_registerDevice:(id)arg1 session:(id)arg2 team:(id)arg3 error:(id *)arg4;
+ (BOOL)registerDevice:(id)arg1 session:(id)arg2 team:(id)arg3 error:(id *)arg4;
+ (id)_listServiceForTeam:(id)arg1 platform:(id)arg2;
+ (id)devicesForSession:(id)arg1 team:(id)arg2 membership:(id)arg3 error:(id *)arg4;
@property(readonly, copy, nonatomic) NSString *portalID; // @synthesize portalID=_portalID;
@property(readonly, copy, nonatomic) NSString *identifier; // @synthesize identifier;
@property(readonly, nonatomic) DVTPlatform *platform; // @synthesize platform;
@property(readonly, copy, nonatomic) NSString *name; // @synthesize name;
- (void).cxx_destruct;
@property(readonly, copy) NSString *description;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DVTPortalDownloadTeamProfileService : DVTPortalService
{
}

+ (id)downloadTeamProfileServiceWithTeam:(id)arg1 platform:(id)arg2 appID:(id)arg3;

@end

@interface DVTPortalEnabledFeaturesType : DVTServicesType
{
}

- (BOOL)_primitivePortalValue:(id)arg1 isEqualToDeserializedValue:(id)arg2;
- (id)_primitiveValueByTransformingServiceValue:(id)arg1 context:(id)arg2 error:(id *)arg3;
- (id)_bogusValueForMismatchedTypeTesting;

@end

@interface DVTPortalListAppIDsService : DVTPortalService
{
}

+ (id)listAppIDsServiceWithTeam:(id)arg1 platform:(id)arg2;

@end

@interface DVTPortalListDevicesService : DVTPortalService
{
}

+ (id)listDevicesServiceWithTeam:(id)arg1 platform:(id)arg2;

@end

@interface DVTPortalListPassTypesService : DVTPortalService
{
}

+ (id)listPassTypesServiceWithTeam:(id)arg1 platform:(id)arg2;

@end

@interface DVTPortalListProfilesService : DVTPortalService
{
}

+ (id)listProfilesServiceWithTeam:(id)arg1 platform:(id)arg2;

@end

@interface DVTPortalListTeamsService : DVTPortalService
{
}

+ (id)listTeamsService;

@end

@interface DVTPortalMember : NSObject
{
    NSString *_portalID;
    NSString *_emailAddress;
    NSString *_firstName;
    NSString *_lastName;
    NSNumber *_personID;
    DVTPortalPermissions *_permissions;
}

@property(readonly, nonatomic) DVTPortalPermissions *permissions; // @synthesize permissions=_permissions;
@property(copy, nonatomic) NSNumber *personID; // @synthesize personID=_personID;
@property(copy, nonatomic) NSString *lastName; // @synthesize lastName=_lastName;
@property(copy, nonatomic) NSString *firstName; // @synthesize firstName=_firstName;
@property(copy, nonatomic) NSString *emailAddress; // @synthesize emailAddress=_emailAddress;
@property(copy, nonatomic) NSString *portalID; // @synthesize portalID=_portalID;
- (void).cxx_destruct;
- (id)description;

@end

@interface DVTPortalMembership : NSObject
{
    NSString *_portalID;
    DVTPortalPlatform *_portalPlatform;
}

@property(retain, nonatomic) DVTPortalPlatform *portalPlatform; // @synthesize portalPlatform=_portalPlatform;
@property(copy, nonatomic) NSString *portalID; // @synthesize portalID=_portalID;
- (void).cxx_destruct;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)description;
@property(readonly, nonatomic) DVTPlatform *platform;

@end

@interface DVTPortalPassType : NSObject
{
    NSString *_portalID;
    NSString *_name;
    NSString *_identifier;
}

+ (id)_listServiceForTeam:(id)arg1 platform:(id)arg2;
+ (id)passTypesForSession:(id)arg1 team:(id)arg2 membership:(id)arg3 error:(id *)arg4;
@property(readonly, copy, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
@property(readonly, copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(readonly, copy, nonatomic) NSString *portalID; // @synthesize portalID=_portalID;
- (void).cxx_destruct;
- (id)description;

@end

@interface DVTPortalPermissions : NSObject
{
    BOOL _canRegisterDevices;
    BOOL _canCreateProfiles;
    BOOL _canCreateOrModifyAppIDs;
    BOOL _canRemoveProfiles;
    BOOL _canRevokeAllCertificates;
    BOOL _canRevokeOnlyOwnedCertificates;
}

+ (id)_permissionsWithRoles:(id)arg1 error:(id *)arg2;
+ (id)memberPermissions;
+ (id)adminPermissions;
+ (id)agentPermissions;
@property(readonly, nonatomic) BOOL canRevokeOnlyOwnedCertificates; // @synthesize canRevokeOnlyOwnedCertificates=_canRevokeOnlyOwnedCertificates;
@property(readonly, nonatomic) BOOL canRevokeAllCertificates; // @synthesize canRevokeAllCertificates=_canRevokeAllCertificates;
@property(readonly, nonatomic) BOOL canRemoveProfiles; // @synthesize canRemoveProfiles=_canRemoveProfiles;
@property(readonly, nonatomic) BOOL canCreateOrModifyAppIDs; // @synthesize canCreateOrModifyAppIDs=_canCreateOrModifyAppIDs;
@property(readonly, nonatomic) BOOL canCreateProfiles; // @synthesize canCreateProfiles=_canCreateProfiles;
@property(readonly, nonatomic) BOOL canRegisterDevices; // @synthesize canRegisterDevices=_canRegisterDevices;
- (BOOL)canRequestCertificatesOfType:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (id)_initWithCanRegisterDevices:(BOOL)arg1 canCreateProfiles:(BOOL)arg2 canCreateOrModifyAppIDs:(BOOL)arg3 canRemoveProfiles:(BOOL)arg4 canRevokeAllCertificates:(BOOL)arg5 canRevokeOnlyOwnedCertificates:(BOOL)arg6;

@end

@interface DVTPortalPermissionsType : DVTServicesType
{
}

- (BOOL)_primitivePortalValue:(id)arg1 isEqualToDeserializedValue:(id)arg2;
- (id)_primitiveValueByTransformingServiceValue:(id)arg1 context:(id)arg2 error:(id *)arg3;
- (id)_bogusValueForMismatchedTypeTesting;

@end

@interface DVTPortalPlatform : NSObject
{
    NSString *_portalIdentifier;
    DVTPlatform *_platform;
    NSString *_developmentProfileTypeIdentifier;
}

+ (id)portalPlatformWithPlatformIdentifier:(id)arg1;
+ (id)portalPlatformWithIdentifier:(id)arg1;
+ (id)_platformIdentifierToPortalPlatformMap;
+ (id)_portalIdentifierToPortalPlatformMap;
+ (id)_portalPlatforms;
@property(readonly, nonatomic) NSString *developmentProfileTypeIdentifier; // @synthesize developmentProfileTypeIdentifier=_developmentProfileTypeIdentifier;
@property(readonly, nonatomic) DVTPlatform *platform; // @synthesize platform=_platform;
@property(readonly, nonatomic) NSString *portalIdentifier; // @synthesize portalIdentifier=_portalIdentifier;
- (void).cxx_destruct;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
@property(readonly, nonatomic) DVTPortalProfileType *developmentProfileType;
- (id)initWithPlatform:(id)arg1 portalIdentifier:(id)arg2 developmentProfileTypeIdentifier:(id)arg3;

@end

@interface DVTPortalPlatformType : DVTServicesType
{
}

- (BOOL)_primitivePortalValue:(id)arg1 isEqualToDeserializedValue:(id)arg2;
- (id)_primitiveValueByTransformingServiceValue:(id)arg1 context:(id)arg2 error:(id *)arg3;
- (id)_bogusValueForMismatchedTypeTesting;

@end

@interface DVTPortalProfile : NSObject
{
    BOOL _creationWaitingForApproval;
    id <DVTProvisioningProfile> _provisioningProfile;
    NSString *_name;
    DVTPortalAppID *_appID;
    DVTPortalTeam *_team;
    NSString *_portalID;
    NSString *_UUID;
}

+ (id)_errorForMemberLacksPermissionToModifyAppIDs:(id)arg1;
+ (id)_errorForMemberLacksPermissionToRemoveError:(id)arg1;
+ (id)_errorForMemberLacksPermissionToCreateError:(id)arg1;
+ (id)_deleteProfileServiceWithTeam:(id)arg1 platform:(id)arg2 profile:(id)arg3;
+ (id)_existingAppIDMatchingBundleID:(id)arg1 requiresExplicitAppID:(BOOL)arg2 candidateAppIDs:(id)arg3;
+ (BOOL)_existingAppIDMatchingBundleID:(id)arg1 requiresExplicitAppID:(BOOL)arg2 team:(id)arg3 platform:(id)arg4 session:(id)arg5 matchingAppID:(id *)arg6 error:(id *)arg7;
+ (BOOL)_requiresExplicitAppIDForFeatures:(id)arg1;
+ (id)_preparedAppIDWithCharacteristics:(id)arg1 session:(id)arg2 error:(id *)arg3;
+ (id)_downloadTeamProfileServiceWithTeam:(id)arg1 platform:(id)arg2 appID:(id)arg3;
+ (id)_requestProfileWithAppID:(id)arg1 type:(id)arg2 team:(id)arg3 platform:(id)arg4 session:(id)arg5 error:(id *)arg6;
+ (id)createProfileWithSession:(id)arg1 characteristics:(id)arg2 error:(id *)arg3;
+ (id)_listProfilesServiceWithTeam:(id)arg1 platform:(id)arg2;
+ (id)profilesWithSession:(id)arg1 team:(id)arg2 platform:(id)arg3 error:(id *)arg4;
@property(copy, nonatomic) NSString *UUID; // @synthesize UUID=_UUID;
@property(copy, nonatomic) NSString *portalID; // @synthesize portalID=_portalID;
@property(retain, nonatomic) DVTPortalTeam *team; // @synthesize team=_team;
@property(retain, nonatomic) DVTPortalAppID *appID; // @synthesize appID=_appID;
@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
@property(nonatomic) BOOL creationWaitingForApproval; // @synthesize creationWaitingForApproval=_creationWaitingForApproval;
@property(readonly, nonatomic) id <DVTProvisioningProfile> provisioningProfile; // @synthesize provisioningProfile=_provisioningProfile;
- (void).cxx_destruct;
- (BOOL)removeWithSession:(id)arg1 error:(id *)arg2;
- (id)_platform;
- (id)description;

@end

@interface DVTPortalProfileCharacteristics : NSObject
{
    DVTPortalTeam *_team;
    DVTPortalProfileType *_profileType;
    NSString *_bundleID;
    NSDictionary *_features;
    DVTPlatform *_platform;
}

@property(readonly, nonatomic) DVTPlatform *platform; // @synthesize platform=_platform;
@property(copy, nonatomic) NSDictionary *features; // @synthesize features=_features;
@property(readonly, nonatomic) NSString *bundleID; // @synthesize bundleID=_bundleID;
@property(readonly, nonatomic) DVTPortalProfileType *profileType; // @synthesize profileType=_profileType;
@property(readonly, nonatomic) DVTPortalTeam *team; // @synthesize team=_team;
- (void).cxx_destruct;
- (id)description;
- (id)initWithTeam:(id)arg1 type:(id)arg2 bundleID:(id)arg3 featuresToValues:(id)arg4 platform:(id)arg5;

@end

@interface DVTPortalProfileFeature : NSObject <NSCopying>
{
    BOOL _requiresExplicitAppID;
    NSString *_identifier;
    NSArray *_supportedPlatforms;
    NSString *_portalKey;
    long long _valueType;
}

+ (long long)_valueTypeFromValueTypeName:(id)arg1;
+ (id)profileFeatureFromExtension:(id)arg1;
+ (id)_defaultPlatforms;
+ (id)profileFeatureWithPortalKey:(id)arg1;
+ (id)profileFeatureWithIdentifier:(id)arg1;
+ (id)profileFeatures;
@property(readonly, nonatomic) long long valueType; // @synthesize valueType=_valueType;
@property(readonly, nonatomic) NSString *portalKey; // @synthesize portalKey=_portalKey;
@property(readonly, nonatomic) BOOL requiresExplicitAppID; // @synthesize requiresExplicitAppID=_requiresExplicitAppID;
@property(readonly, nonatomic) NSArray *supportedPlatforms; // @synthesize supportedPlatforms=_supportedPlatforms;
@property(readonly, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
- (BOOL)isValidFeatureValue:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
- (BOOL)isEqual:(id)arg1;
- (id)initWithIdentifier:(id)arg1 portalKey:(id)arg2 supportedPlatforms:(id)arg3 valueType:(long long)arg4 requiresExplicitAppID:(BOOL)arg5;

@end

@interface DVTPortalProfileType : NSObject
{
    BOOL _teamProfile;
    NSString *_identifier;
    DVTPortalPlatform *_portalPlatform;
    DVTPortalCertificateType *_certificateType;
}

+ (id)profileTypeWithIdentifier:(id)arg1;
+ (id)profileTypes;
@property(readonly, nonatomic, getter=isTeamProfile) BOOL teamProfile; // @synthesize teamProfile=_teamProfile;
@property(readonly, nonatomic) DVTPortalCertificateType *certificateType; // @synthesize certificateType=_certificateType;
@property(readonly, nonatomic) DVTPortalPlatform *portalPlatform; // @synthesize portalPlatform=_portalPlatform;
@property(readonly, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
- (id)description;
- (id)initWithIdentifier:(id)arg1 portalPlatform:(id)arg2 certificateType:(id)arg3 isTeamProfile:(BOOL)arg4;

@end

@interface DVTPortalRegisterDeviceService : DVTPortalService
{
}

+ (id)registerServiceWithTeam:(id)arg1 platform:(id)arg2 identifier:(id)arg3 andName:(id)arg4;

@end

@interface DVTPortalRequest : DVTServicesRequest
{
    NSString *_requestID;
    NSString *_action;
    NSDictionary *_payload;
}

@property(readonly, nonatomic) NSDictionary *payload; // @synthesize payload=_payload;
@property(readonly, nonatomic) NSString *action; // @synthesize action=_action;
- (void).cxx_destruct;
- (id)sendRequestAndReceiveResponse:(id *)arg1;
- (id)_sendURLRequestWaitForResponse:(id)arg1 URLResponse:(id *)arg2 error:(id *)arg3;
- (id)_URLRequestWithPayloadData:(id)arg1 sessionID:(id)arg2;
- (id)_requestURL;
- (id)_portalHostname;
- (BOOL)_usesCertAuth;
- (id)_payloadWithStandardItems:(id)arg1;
- (id)_standardPayloadItemsWithSessionID:(id)arg1;
@property(readonly, nonatomic) NSString *requestID; // @synthesize requestID=_requestID;
- (id)_protocolVersion;
- (id)_serviceClientID;
- (id)initWithPortalSession:(id)arg1 action:(id)arg2 payload:(id)arg3;

@end

@interface DVTPortalResponse : NSObject
{
    NSDictionary *_payload;
}

+ (id)portalResponseFromData:(id)arg1 URLResponse:(id)arg2 error:(id *)arg3;
@property(readonly, nonatomic) NSDictionary *payload; // @synthesize payload=_payload;
- (void).cxx_destruct;
@property(readonly, nonatomic) long long resultCode;
- (id)debugDescription;
- (id)description;
- (id)initWithPayload:(id)arg1;

@end

@interface DVTPortalServiceResponseTemplate : NSObject
{
    BOOL _deserializesMultiple;
    NSString *_portalKey;
    DVTPortalCode *_code;
    DVTServicesType *_deserializedType;
}

@property(readonly, nonatomic) BOOL deserializesMultiple; // @synthesize deserializesMultiple=_deserializesMultiple;
@property(readonly, nonatomic) DVTServicesType *deserializedType; // @synthesize deserializedType=_deserializedType;
@property(readonly, nonatomic) DVTPortalCode *code; // @synthesize code=_code;
@property(readonly, nonatomic) NSString *portalKey; // @synthesize portalKey=_portalKey;
- (void).cxx_destruct;
- (id)resultFromPayload:(id)arg1 resultCode:(long long)arg2 error:(id *)arg3;
- (BOOL)matchesPayload:(id)arg1 resultCode:(long long)arg2;
- (BOOL)_isValueYieldingResponse;
- (id)description;
- (id)initWithExtensionParameter:(id)arg1;

@end

@interface DVTPortalSigningCertificateType : DVTServicesType
{
}

- (BOOL)_primitivePortalValue:(id)arg1 isEqualToDeserializedValue:(id)arg2;
- (id)_primitiveValueByTransformingServiceValue:(id)arg1 context:(id)arg2 error:(id *)arg3;
- (id)_bogusValueForMismatchedTypeTesting;

@end

@interface DVTPortalTeam : NSObject
{
    NSArray *_memberships;
    NSString *_name;
    NSString *_teamID;
    DVTPortalMember *_memberInformation;
    NSArray *_membershipsNonUnique;
    NSString *_type;
}

+ (id)_listService;
+ (id)teamsForSession:(id)arg1 error:(id *)arg2;
@property(copy, nonatomic) NSString *type; // @synthesize type=_type;
@property(copy, nonatomic) NSArray *membershipsNonUnique; // @synthesize membershipsNonUnique=_membershipsNonUnique;
@property(retain, nonatomic) DVTPortalMember *memberInformation; // @synthesize memberInformation=_memberInformation;
@property(copy, nonatomic) NSString *teamID; // @synthesize teamID=_teamID;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
@property(readonly, copy, nonatomic) NSArray *memberships; // @synthesize memberships=_memberships;
- (id)description;

@end

@interface DVTPortalUpdateAppIDService : DVTPortalAppIDService
{
    NSDictionary *_featureKeyToSanitizedPlistValue;
}

+ (id)updateAppIDServiceWithTeam:(id)arg1 platform:(id)arg2 portalID:(id)arg3 features:(id)arg4;
+ (id)_serviceIdentifier;
@property(copy, nonatomic) NSDictionary *featureKeyToSanitizedPlistValue; // @synthesize featureKeyToSanitizedPlistValue=_featureKeyToSanitizedPlistValue;
- (void).cxx_destruct;

@end

@interface DVTProvisioningProfileType : DVTServicesType
{
}

- (BOOL)_primitivePortalValue:(id)arg1 isEqualToDeserializedValue:(id)arg2;
- (id)_primitiveValueByTransformingServiceValue:(id)arg1 context:(id)arg2 error:(id *)arg3;
- (id)_bogusValueForMismatchedTypeTesting;

@end

@interface _DVTPortalServiceSuccessSentinel : NSObject
{
}

@end

