//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Named Structures

struct CGPoint {
    double _field1;
    double _field2;
};

struct CGRect {
    struct CGPoint _field1;
    struct CGSize _field2;
};

struct CGSize {
    double _field1;
    double _field2;
};

struct __shared_weak_count;

struct jet_context;

struct jet_fence;

struct jet_framebuffer;

struct jet_texture;

struct shared_ptr<jet_context> {
    struct jet_context *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<jet_fence> {
    struct jet_fence *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<jet_framebuffer> {
    struct jet_framebuffer *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<jet_texture> {
    struct jet_texture *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

#pragma mark Typedef'd Structures

// Template types
typedef struct shared_ptr<jet_context> {
    struct jet_context *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_b5835ee0;

typedef struct shared_ptr<jet_framebuffer> {
    struct jet_framebuffer *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_2ce53ef7;

typedef struct shared_ptr<jet_texture> {
    struct jet_texture *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_bb77cfd9;

#pragma mark -

//
// File: /Applications/Xcode-7GM.app/Contents/SharedFrameworks/Jet.framework/Versions/A/Jet
// UUID: 59F0ACFA-1E00-33F2-B04C-94FDE8860BE8
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 1.50.0.0.0
//       Minimum Mac OS X version: 10.10.0
//                    SDK version: 10.11.0
//
// Objective-C Garbage Collection: Unsupported
//

@interface JetView : NSView
{
    shared_ptr_b5835ee0 _ctx;
    shared_ptr_2ce53ef7 _framebuffer;
    NSOpenGLContext *_glContext;
    shared_ptr_bb77cfd9 _frameBufferColorTexture;
    shared_ptr_bb77cfd9 _frameBufferDepthStencilTexture;
    unsigned int _colorRenderBuffer;
    BOOL _didRunOnce;
    double _beginTime;
    NSTimer *_drawTimer;
    struct shared_ptr<jet_fence> _renderFence;
}

+ (BOOL)canRenderToContextType:(unsigned int)arg1;
- (id).cxx_construct;
- (void).cxx_destruct;
- (shared_ptr_bb77cfd9)createTextureFromImageNamed:(id)arg1;
- (void)renderInFramebuffer:(shared_ptr_2ce53ef7)arg1 forTime:(double)arg2;
- (void)runOnce;
- (void)onInit;
- (void)drawRect:(struct CGRect)arg1;
- (void)_reshape;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)_bindGLContext;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)_renderCallback;
- (void)_commonInit;
- (void)_createContext;
- (void)remakeFramebuffer;
- (unsigned int)contextType;
@property(readonly) shared_ptr_b5835ee0 context;
- (BOOL)isOpaque;

@end

