//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct Adder {
    struct DecorationContainer *_field1;
    _Bool _field2;
    _Bool _field3;
    struct CursorState _field4;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct CursorState {
    struct XRTimeRange _field1;
    int _field2;
    int _field3;
    _Bool _field4;
    unsigned long long _field5;
    long long _field6;
    unsigned long long _field7;
    unsigned char _field8;
};

struct DTRealRange {
    double _field1;
    double _field2;
};

struct DTTimelineDecorationContainer {
    _Bool _field1;
    _Bool _field2;
    unsigned long long _field3;
    struct deque<XRTimeRange, std::__1::allocator<XRTimeRange>> _field4;
    struct XRTimeRange _field5;
    struct DecorationContainer _field6;
    struct Adder _field7;
    struct unique_ptr<DTTimelineDecorationEnumerator, std::__1::default_delete<DTTimelineDecorationEnumerator>> _field8;
    id _field9;
    int _field10;
};

struct DTTimelineDecorationEnumerator;

struct DTTimelineGraphDynamicRange {
    long long low;
    long long high;
};

struct DTTimelineRepresentativeDecoration {
    long long value;
    unsigned long long label;
    struct XRTimeRange timeRange;
    unsigned int decorationCount;
    char heterogeneousLabel;
};

struct DecorationContainer {
    _Bool _field1;
    _Bool _field2;
    struct TileMetrics _field3;
    struct StringIslandSet _field4;
    struct PointIslandSet _field5;
    struct IntervalIslandSet _field6;
};

struct DrawablesSettings {
    NSColor *defaultColor;
    NSFont *defaultFont;
    double defaultFontHeight;
    NSColor *defaultTextColor;
    NSImage *defaultImage;
    struct CGSize defaultImageSize;
    struct {
        unsigned long long displayType;
        unsigned long long conflictResolutionType;
        unsigned long long labelConflictResolutionType;
    } point;
    struct {
        unsigned long long displayType;
        unsigned long long conflictResolutionType;
        unsigned long long labelConflictResolutionType;
        double visualSpacing;
        unsigned long long barWidth;
        double roundedRectRadius;
    } interval;
};

struct DynamicRange {
    long long _low;
    long long _high;
};

struct IntervalIslandSet {
    struct map<DTTimelineInternal::Span, std::__1::shared_ptr<DTTimelineInternal::IntervalIsland>, std::__1::less<DTTimelineInternal::Span>, std::__1::allocator<std::__1::pair<const DTTimelineInternal::Span, std::__1::shared_ptr<DTTimelineInternal::IntervalIsland>>>> _field1;
    struct TileMetrics *_field2;
    struct WingMetrics _field3;
};

struct LayoutRect {
    struct CGRect _field1;
    struct CGRect _field2;
    struct CGRect _field3;
    struct CGRect _field4;
    struct CGRect _field5;
    struct CGRect _field6;
    struct CGRect _field7;
};

struct PlaneMetrics {
    struct DynamicRange _dynamicRange;
    struct ViewMetrics _currentViewMetrics;
    double _height;
    struct DrawablesSettings _drawablesSettings;
    char _decoratesMajorMinorTicks;
    char _optionalContent;
    char _ignoresTimeBoundsCheck;
    NSColor *_opaqueBackgroundColor;
    int _serialNumber;
    double _maxStringWidthInPts;
};

struct PointIslandSet {
    struct map<DTTimelineInternal::Span, std::__1::shared_ptr<DTTimelineInternal::PointIsland>, std::__1::less<DTTimelineInternal::Span>, std::__1::allocator<std::__1::pair<const DTTimelineInternal::Span, std::__1::shared_ptr<DTTimelineInternal::PointIsland>>>> _field1;
    struct TileMetrics *_field2;
    struct WingMetrics _field3;
};

struct Span {
    double _field1;
    double _field2;
};

struct StringIslandSet {
    struct map<DTTimelineInternal::Span, std::__1::shared_ptr<DTTimelineInternal::PointStringIsland>, std::__1::less<DTTimelineInternal::Span>, std::__1::allocator<std::__1::pair<const DTTimelineInternal::Span, std::__1::shared_ptr<DTTimelineInternal::PointStringIsland>>>> _field1;
    struct TileMetrics *_field2;
    struct WingMetrics _field3;
    double _field4;
};

struct TileMetrics {
    struct XRTimeRange _timeRange;
    struct PlaneMetrics _planeMetrics;
};

struct TimelineViewContext {
    struct ViewMetrics _viewMetrics;
    unsigned long long _firstVisibleTile;
    unsigned long long _lastVisibleTile;
    double _hostVisibleWidth;
    long long _nanosecondOffset;
    NSCache *_tileContentByIdx;
    id _cbHandler;
    NSMutableDictionary *_visibleContentByIdx;
};

struct ViewMetrics {
    unsigned long long _tileWidth;
    double _tileWidthInPoints;
    double _displayScale;
    unsigned long long _majorTickMarkDuration;
    unsigned long long _minorTickMarkDuration;
    unsigned long long _nanosecondsPerPoint;
    struct XRTimeRange _timeBounds;
    struct shared_ptr<const std::__1::unordered_map<int, CGRect, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, CGRect>>>> _planeLayoutMapPtr;
    double _visibleHeight;
    double _yOffset;
};

struct WingMetrics {
    double _field1;
    double _field2;
    double _field3;
};

struct XRTimeRange {
    unsigned long long start;
    unsigned long long length;
};

struct _NSRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct __hash_node<std::__1::__hash_value_type<double, NSImage *>, void *>;

struct __hash_node<std::__1::__hash_value_type<int, CGRect>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned long, std::__1::tuple<NSColor *, CGPath *>>, void *>;

struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
    struct __tree_node_base<void *> *__left_;
};

struct deque<XRTimeRange, std::__1::allocator<XRTimeRange>> {
    struct __split_buffer<XRTimeRange *, std::__1::allocator<XRTimeRange *>> {
        struct XRTimeRange **_field1;
        struct XRTimeRange **_field2;
        struct XRTimeRange **_field3;
        struct __compressed_pair<XRTimeRange **, std::__1::allocator<XRTimeRange *>> {
            struct XRTimeRange **_field1;
        } _field4;
    } _field1;
    unsigned long long _field2;
    struct __compressed_pair<unsigned long, std::__1::allocator<XRTimeRange>> {
        unsigned long long _field1;
    } _field3;
};

struct map<DTTimelineInternal::Span, std::__1::shared_ptr<DTTimelineInternal::IntervalIsland>, std::__1::less<DTTimelineInternal::Span>, std::__1::allocator<std::__1::pair<const DTTimelineInternal::Span, std::__1::shared_ptr<DTTimelineInternal::IntervalIsland>>>> {
    struct __tree<std::__1::__value_type<DTTimelineInternal::Span, std::__1::shared_ptr<DTTimelineInternal::IntervalIsland>>, std::__1::__map_value_compare<DTTimelineInternal::Span, std::__1::__value_type<DTTimelineInternal::Span, std::__1::shared_ptr<DTTimelineInternal::IntervalIsland>>, std::__1::less<DTTimelineInternal::Span>, true>, std::__1::allocator<std::__1::__value_type<DTTimelineInternal::Span, std::__1::shared_ptr<DTTimelineInternal::IntervalIsland>>>> {
        struct __tree_node<std::__1::__value_type<DTTimelineInternal::Span, std::__1::shared_ptr<DTTimelineInternal::IntervalIsland>>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<DTTimelineInternal::Span, std::__1::shared_ptr<DTTimelineInternal::IntervalIsland>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<DTTimelineInternal::Span, std::__1::__value_type<DTTimelineInternal::Span, std::__1::shared_ptr<DTTimelineInternal::IntervalIsland>>, std::__1::less<DTTimelineInternal::Span>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<DTTimelineInternal::Span, std::__1::shared_ptr<DTTimelineInternal::PointIsland>, std::__1::less<DTTimelineInternal::Span>, std::__1::allocator<std::__1::pair<const DTTimelineInternal::Span, std::__1::shared_ptr<DTTimelineInternal::PointIsland>>>> {
    struct __tree<std::__1::__value_type<DTTimelineInternal::Span, std::__1::shared_ptr<DTTimelineInternal::PointIsland>>, std::__1::__map_value_compare<DTTimelineInternal::Span, std::__1::__value_type<DTTimelineInternal::Span, std::__1::shared_ptr<DTTimelineInternal::PointIsland>>, std::__1::less<DTTimelineInternal::Span>, true>, std::__1::allocator<std::__1::__value_type<DTTimelineInternal::Span, std::__1::shared_ptr<DTTimelineInternal::PointIsland>>>> {
        struct __tree_node<std::__1::__value_type<DTTimelineInternal::Span, std::__1::shared_ptr<DTTimelineInternal::PointIsland>>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<DTTimelineInternal::Span, std::__1::shared_ptr<DTTimelineInternal::PointIsland>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<DTTimelineInternal::Span, std::__1::__value_type<DTTimelineInternal::Span, std::__1::shared_ptr<DTTimelineInternal::PointIsland>>, std::__1::less<DTTimelineInternal::Span>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<DTTimelineInternal::Span, std::__1::shared_ptr<DTTimelineInternal::PointStringIsland>, std::__1::less<DTTimelineInternal::Span>, std::__1::allocator<std::__1::pair<const DTTimelineInternal::Span, std::__1::shared_ptr<DTTimelineInternal::PointStringIsland>>>> {
    struct __tree<std::__1::__value_type<DTTimelineInternal::Span, std::__1::shared_ptr<DTTimelineInternal::PointStringIsland>>, std::__1::__map_value_compare<DTTimelineInternal::Span, std::__1::__value_type<DTTimelineInternal::Span, std::__1::shared_ptr<DTTimelineInternal::PointStringIsland>>, std::__1::less<DTTimelineInternal::Span>, true>, std::__1::allocator<std::__1::__value_type<DTTimelineInternal::Span, std::__1::shared_ptr<DTTimelineInternal::PointStringIsland>>>> {
        struct __tree_node<std::__1::__value_type<DTTimelineInternal::Span, std::__1::shared_ptr<DTTimelineInternal::PointStringIsland>>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<DTTimelineInternal::Span, std::__1::shared_ptr<DTTimelineInternal::PointStringIsland>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<DTTimelineInternal::Span, std::__1::__value_type<DTTimelineInternal::Span, std::__1::shared_ptr<DTTimelineInternal::PointStringIsland>>, std::__1::less<DTTimelineInternal::Span>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<XRTimeRange, DTTimelineInspectionDecoration *, std::__1::less<XRTimeRange>, std::__1::allocator<std::__1::pair<const XRTimeRange, DTTimelineInspectionDecoration *>>> {
    struct __tree<std::__1::__value_type<XRTimeRange, DTTimelineInspectionDecoration *>, std::__1::__map_value_compare<XRTimeRange, std::__1::__value_type<XRTimeRange, DTTimelineInspectionDecoration *>, std::__1::less<XRTimeRange>, true>, std::__1::allocator<std::__1::__value_type<XRTimeRange, DTTimelineInspectionDecoration *>>> {
        struct __tree_node<std::__1::__value_type<XRTimeRange, DTTimelineInspectionDecoration *>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<XRTimeRange, DTTimelineInspectionDecoration *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<XRTimeRange, std::__1::__value_type<XRTimeRange, DTTimelineInspectionDecoration *>, std::__1::less<XRTimeRange>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct pair<DTTimelineInternal::DynamicRange, NSArray *>;

struct shared_ptr<const std::__1::unordered_map<int, CGRect, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, CGRect>>>> {
    unordered_map_c1fbcd3c *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct unique_ptr<DTTimelineDecorationContainer, std::__1::default_delete<DTTimelineDecorationContainer>> {
    struct __compressed_pair<DTTimelineDecorationContainer *, std::__1::default_delete<DTTimelineDecorationContainer>> {
        struct DTTimelineDecorationContainer *__first_;
    } __ptr_;
};

struct unique_ptr<DTTimelineDecorationEnumerator, std::__1::default_delete<DTTimelineDecorationEnumerator>> {
    struct __compressed_pair<DTTimelineDecorationEnumerator *, std::__1::default_delete<DTTimelineDecorationEnumerator>> {
        struct DTTimelineDecorationEnumerator *_field1;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<double, NSImage *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<double, NSImage *>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<double, NSImage *>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<double, NSImage *>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<double, NSImage *>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<double, NSImage *>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<double, NSImage *>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<int, CGRect>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, CGRect>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<int, CGRect>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, CGRect>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<int, CGRect>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, CGRect>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, CGRect>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::tuple<NSColor *, CGPath *>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::tuple<NSColor *, CGPath *>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::tuple<NSColor *, CGPath *>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::tuple<NSColor *, CGPath *>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned long, std::__1::tuple<NSColor *, CGPath *>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::tuple<NSColor *, CGPath *>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::tuple<NSColor *, CGPath *>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unordered_map<double, NSImage *, std::__1::hash<double>, std::__1::equal_to<double>, std::__1::allocator<std::__1::pair<const double, NSImage *>>> {
    struct __hash_table<std::__1::__hash_value_type<double, NSImage *>, std::__1::__unordered_map_hasher<double, std::__1::__hash_value_type<double, NSImage *>, std::__1::hash<double>, true>, std::__1::__unordered_map_equal<double, std::__1::__hash_value_type<double, NSImage *>, std::__1::equal_to<double>, true>, std::__1::allocator<std::__1::__hash_value_type<double, NSImage *>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<double, NSImage *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<double, NSImage *>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<double, NSImage *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<double, NSImage *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<double, NSImage *>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<double, NSImage *>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<double, std::__1::__hash_value_type<double, NSImage *>, std::__1::hash<double>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<double, std::__1::__hash_value_type<double, NSImage *>, std::__1::equal_to<double>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<int, CGRect, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, CGRect>>> {
    struct __hash_table<std::__1::__hash_value_type<int, CGRect>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, CGRect>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, CGRect>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, CGRect>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<int, CGRect>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, CGRect>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, CGRect>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, CGRect>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, CGRect>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<int, CGRect>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, CGRect>, std::__1::hash<int>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, CGRect>, std::__1::equal_to<int>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<unsigned long, std::__1::tuple<NSColor *, CGPath *>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::tuple<NSColor *, CGPath *>>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long, std::__1::tuple<NSColor *, CGPath *>>, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::tuple<NSColor *, CGPath *>>, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::tuple<NSColor *, CGPath *>>, std::__1::equal_to<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, std::__1::tuple<NSColor *, CGPath *>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::tuple<NSColor *, CGPath *>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::tuple<NSColor *, CGPath *>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::tuple<NSColor *, CGPath *>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::tuple<NSColor *, CGPath *>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::tuple<NSColor *, CGPath *>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long, std::__1::tuple<NSColor *, CGPath *>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::tuple<NSColor *, CGPath *>>, std::__1::hash<unsigned long>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::tuple<NSColor *, CGPath *>>, std::__1::equal_to<unsigned long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct vector<std::__1::pair<DTTimelineInternal::DynamicRange, NSArray *>, std::__1::allocator<std::__1::pair<DTTimelineInternal::DynamicRange, NSArray *>>> {
    struct pair<DTTimelineInternal::DynamicRange, NSArray *> *__begin_;
    struct pair<DTTimelineInternal::DynamicRange, NSArray *> *__end_;
    struct __compressed_pair<std::__1::pair<DTTimelineInternal::DynamicRange, NSArray *>*, std::__1::allocator<std::__1::pair<DTTimelineInternal::DynamicRange, NSArray *>>> {
        struct pair<DTTimelineInternal::DynamicRange, NSArray *> *__first_;
    } __end_cap_;
};

#pragma mark Typedef'd Structures

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

// Template types
typedef struct unordered_map<int, CGRect, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, CGRect>>> {
    struct __hash_table<std::__1::__hash_value_type<int, CGRect>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, CGRect>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, CGRect>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, CGRect>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<int, CGRect>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, CGRect>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, CGRect>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, CGRect>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, CGRect>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<int, CGRect>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, CGRect>, std::__1::hash<int>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, CGRect>, std::__1::equal_to<int>, true>> {
            float _field1;
        } _field4;
    } _field1;
} unordered_map_c1fbcd3c;

#pragma mark -

//
// File: /Applications/Xcode-7GM.app/Contents/SharedFrameworks/DTGraphKit.framework/Versions/A/DTGraphKit
// UUID: 0AB46A8F-8AEB-3408-B85D-46C1E29287D8
//
//                           Arch: x86_64
//                Current version: 58108.0.0
//          Compatibility version: 1.0.0
//                 Source version: 58108.0.0.0.0
//       Minimum Mac OS X version: 10.10.0
//                    SDK version: 10.11.0
//
// Objective-C Garbage Collection: Unsupported
//
//                       Run path: @loader_path/../../../
//                               = /Applications/Xcode-7GM.app/Contents/SharedFrameworks
//

@protocol DTNetworkGraphLayout <NSObject>
- (void)layoutGraph:(DTNetworkGraph *)arg1;
@end

@protocol DTObjectGridGraph <NSObject>
@property(readonly, nonatomic) id <DTObjectGridReference> selectedReference;
@property(readonly, nonatomic) id <DTObjectGridNode> selectedNode;
@property(nonatomic) unsigned int pivotNodeIdentifier;
@property(nonatomic) struct CGSize gridCellSize;
@property(nonatomic) __weak id <DTObjectGridGraphDelegate> delegate;
@property(nonatomic) __weak id <DTObjectGridGraphDataSource> dataSource;
- (void)deselectAll;
- (void)selectReferenceWithIdentifier:(unsigned int)arg1;
- (void)selectNodeWithIdentifier:(unsigned int)arg1;
- (void)setPivotNodeIdentifier:(unsigned int)arg1 animated:(BOOL)arg2;
@end

@protocol DTObjectGridGraphDataSource <NSObject>
- (void)enumerateOutgoingReferencesForNode:(unsigned int)arg1 withBlock:(void (^)(unsigned int, unsigned int, unsigned int, char *))arg2;
- (void)enumerateIncomingReferencesForNode:(unsigned int)arg1 withBlock:(void (^)(unsigned int, unsigned int, unsigned int, char *))arg2;

@optional
- (unsigned int)enclosingGroupNodeForNode:(unsigned int)arg1;
- (void)enumerateMemberNodesOfGroupNode:(unsigned int)arg1 withBlock:(void (^)(unsigned int, char *))arg2;
- (long long)memberNodeCountForGroupNode:(unsigned int)arg1;
@end

@protocol DTObjectGridGraphDelegate <NSObject>
- (void)objectGridGraph:(id <DTObjectGridGraph>)arg1 willDisplayReference:(id <DTObjectGridReference>)arg2;
- (void)objectGridGraph:(id <DTObjectGridGraph>)arg1 willDisplayNode:(id <DTObjectGridNode>)arg2;

@optional
- (void)objectGridGraph:(id <DTObjectGridGraph>)arg1 didDoubleClickReference:(id <DTObjectGridReference>)arg2;
- (void)objectGridGraph:(id <DTObjectGridGraph>)arg1 didDoubleClickNode:(id <DTObjectGridNode>)arg2;
- (void)objectGridGraph:(id <DTObjectGridGraph>)arg1 didClickReference:(id <DTObjectGridReference>)arg2;
- (void)objectGridGraph:(id <DTObjectGridGraph>)arg1 didClickNode:(id <DTObjectGridNode>)arg2;
@end

@protocol DTTimelineGraphDelegate <NSObject>
- (void)inputHandlerForGraph:(DTTimelineGraph *)arg1 requestsHeight:(double)arg2 forPlane:(DTTimelinePlane *)arg3;
- (void)inputHandlerForGraph:(DTTimelineGraph *)arg1 requestsCollapsingGroupPlane:(DTTimelineGroupPlane *)arg2;
- (void)inputHandlerForGraph:(DTTimelineGraph *)arg1 requestsExpandingGroupPlane:(DTTimelineGroupPlane *)arg2;
- (void)inputHandlerRequestsToClearInspectionInfoForGraph:(DTTimelineGraph *)arg1;
- (void)inputHandlerForGraph:(DTTimelineGraph *)arg1 requestsDisplayInspectionInfoForNanosecond:(unsigned long long)arg2 atX:(double)arg3;
- (void)inputHandlerForGraph:(DTTimelineGraph *)arg1 requestsNanosecondsPerPoint:(unsigned long long)arg2;
- (void)inputHandlerRequestsToClearCurrentInspectionTimeForGraph:(DTTimelineGraph *)arg1;
- (void)inputHandlerForGraph:(DTTimelineGraph *)arg1 requestsCurrentInspectionTime:(unsigned long long)arg2;
- (void)inputHandlerRequestsToClearSelectedTimeRangeForGraph:(DTTimelineGraph *)arg1;
- (void)inputHandlerDidFinishSelectionForGraph:(DTTimelineGraph *)arg1;
- (void)inputHandlerForGraph:(DTTimelineGraph *)arg1 requestsSelectedTimeRange:(struct XRTimeRange)arg2;
- (void)inputHandlerForGraph:(DTTimelineGraph *)arg1 requestYOffset:(double)arg2;
- (void)inputHandlerForGraph:(DTTimelineGraph *)arg1 requestsNanosecondOffset:(long long)arg2;

@optional
- (void)inputHandlerForGraph:(DTTimelineGraph *)arg1 requestsEndLongPressDragAtTime:(unsigned long long)arg2;
- (void)inputHandlerForGraph:(DTTimelineGraph *)arg1 requestsLongPressDragToTime:(unsigned long long)arg2;
- (BOOL)inputHandlerForGraph:(DTTimelineGraph *)arg1 requestsLongPressDragBeginAtTime:(unsigned long long)arg2 onPlanes:(NSSet *)arg3;
- (void)inputHandlerForGraph:(DTTimelineGraph *)arg1 unhandledClickAtTime:(unsigned long long)arg2 onPlanes:(NSSet *)arg3;
@end

@protocol DTTimelineMouseStateValidatorDelegate <NSObject>
- (void)mouseStateValidator:(DTTimelineMouseStateValidator *)arg1 didTransistionToState:(unsigned long long)arg2 fromState:(unsigned long long)arg3 event:(NSEvent *)arg4;
@end

@protocol NSCacheDelegate <NSObject>

@optional
- (void)cache:(NSCache *)arg1 willEvictObject:(id)arg2;
@end

@protocol NSFastEnumeration
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (BOOL)respondsToSelector:(SEL)arg1;
- (BOOL)conformsToProtocol:(Protocol *)arg1;
- (BOOL)isMemberOfClass:(Class)arg1;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (BOOL)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@interface DTGraph : NSView
{
    id _model;
    NSDictionary *_attributes;
    NSFont *_textFont;
    NSFont *_titleTextFont;
    NSFont *_subTitleTextFont;
    NSColor *_textColor;
    NSColor *_alternateTextColor;
    long long _textPathStyle;
    NSColor *_lineColor;
    NSColor *_backgroundColor;
    NSString *_subTitle;
    long long _borderType;
    NSMutableDictionary *_gradientMap;
    NSTimer *_updateTimer;
    BOOL _isObserving;
    NSString *_entriesKeyPath;
    NSString *_subEntriesKeyPath;
    NSString *_xAxisKeyPath;
    NSString *_yAxisKeyPath;
    NSString *_labelKeyPath;
    NSString *_colorKeyPath;
    NSString *_backgroundColorKeyPath;
    NSString *_iconKeyPath;
    NSString *_shapeKeyPath;
    NSString *_lineFilledKeyPath;
    NSString *_nodeAKeyPath;
    NSString *_nodeBKeyPath;
    NSString *_binStartKeyPath;
    NSString *_binEndKeyPath;
    NSString *_binNameKeyPath;
    NSString *_legendKeyPath;
    struct {
        unsigned int labelKeyPathMissing:1;
        unsigned int colorKeyPathMissing:1;
        unsigned int backgroundColorKeyPathMissing:1;
        unsigned int iconKeyPathMissing:1;
        unsigned int lineFilledKeyPathMissing:1;
        unsigned int shapeKeyPathMissing:1;
        unsigned int RESERVED:25;
    } _keyPathFlags;
    id <DTGraphDelegate> _delegate;
    struct {
        unsigned int implementsDrawEntryInRect:1;
        unsigned int implementsDrawEntryInPath:1;
        unsigned int implementsDrawEntrySeriesInPath:1;
        unsigned int implementsDrawEntryNodeInPath:1;
        unsigned int implementsIconForGraphEntry:1;
        unsigned int implementsColorForGraphEntry:1;
        unsigned int implementsBackgroundColorForGraphEntry:1;
        unsigned int implementsLabelForGraphEntry:1;
        unsigned int implementsLineFilledForGraphEntry:1;
        unsigned int implementsShapeForGraphEntry:1;
        unsigned int implementsPathStyleForGraphEntry:1;
        unsigned int implementsWillDrawCellForGraphEntry:1;
        unsigned int implementsImageOfEntryInRect:1;
        unsigned int implementsTranslateValueKeypath:1;
        unsigned int RESERVED:17;
    } _delegateFlags;
    unsigned long long verboseLevel;
    NSMutableArray *_observedModels;
}

+ (id)basicColorForNumber:(long long)arg1;
+ (id)translateValue:(id)arg1 ofType:(id)arg2;
+ (id)sampleAttributes;
+ (void)initialize;
@property unsigned long long verboseLevel; // @synthesize verboseLevel;
- (void).cxx_destruct;
- (BOOL)validateModel:(id)arg1;
- (void)_sizeToFit:(id)arg1;
- (void)drawPlaceholder:(struct CGRect)arg1;
- (struct CGRect)calculatePlaceholderBoundsWithinBounds:(struct CGRect)arg1;
- (BOOL)showsOnlyStartAndEndLabels;
- (BOOL)requiresAxisLabels;
- (double)titleHeightInBounds:(struct CGRect)arg1;
- (BOOL)requiresPlaceholder;
- (BOOL)isModelEmpty;
- (void)drawSubTitle:(struct CGRect)arg1;
- (void)drawTitle:(struct CGRect)arg1;
@property(readonly, nonatomic) struct CGRect contentFrame;
- (struct CGRect)calculateSubTitleBoundsWithinBounds:(struct CGRect)arg1;
- (struct CGRect)calculateTitleBoundsWithinBounds:(struct CGRect)arg1;
- (BOOL)requiresTitle;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)legendKeyPath;
- (id)binNameKeyPath;
- (id)binEndKeyPath;
- (id)binStartKeyPath;
- (id)nodeBKeyPath;
- (id)nodeAKeyPath;
- (id)shapeKeyPath;
- (id)iconKeyPath;
- (id)lineFilledKeyPath;
@property(readonly, copy, nonatomic) NSString *backgroundColorKeyPath;
- (id)colorKeyPath;
- (id)labelKeyPath;
- (id)yAxisKeyPath;
- (id)xAxisKeyPath;
- (id)subEntriesKeyPath;
- (id)entriesKeyPath;
- (id)themeGradientWithColor:(id)arg1;
- (long long)borderType;
- (void)setBorderType:(long long)arg1;
- (id)backgroundColor;
- (void)setBackgroundColor:(id)arg1;
- (id)lineColor;
- (void)setLineColor:(id)arg1;
- (id)subTitle;
- (void)setSubTitle:(id)arg1;
- (id)subTitleFont;
- (void)setSubTitleFont:(id)arg1;
- (id)titleFont;
- (void)setTitleFont:(id)arg1;
- (id)alternateTextColor;
- (void)setAlternateTextColor:(id)arg1;
- (id)textColor;
- (void)setTextColor:(id)arg1;
- (id)font;
- (void)setFont:(id)arg1;
- (long long)shapeForEntry:(id)arg1;
- (id)iconForEntry:(id)arg1;
- (BOOL)lineFilledForEntry:(id)arg1;
- (id)labelForEntry:(id)arg1;
- (id)backgroundColorForEntry:(id)arg1;
- (id)colorForEntry:(id)arg1;
- (id)_drawingAttributesForSubTitle;
- (id)_drawingAttributesForTitle;
- (id)_sharedFontAttributes;
- (long long)textPathStyle;
- (id)lineSelectionShadow;
- (id)emptyShadow;
- (id)alternateShadow;
- (id)lineShadow;
- (id)labelGraphShadow;
@property(copy, nonatomic) NSDictionary *attributes;
- (void)clearCache;
@property(nonatomic) id <DTGraphDelegate> delegate;
@property(retain) id model;
- (void)clearAttributes;
- (void)viewWillMoveToSuperview:(id)arg1;
- (void)viewDidMoveToWindow;
- (void)observeModel:(BOOL)arg1;
- (void)_updateGraph:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)translateValue:(id)arg1 keypath:(id)arg2;

@end

@interface DTBarGraph : DTGraph
{
    BOOL _hasWidthOrSpacingAttribute;
    long long _maxX;
    long long _minX;
    long long _maxY;
    long long _calculatedYAxisLabelHeight;
    long long _lastMaximumYValue;
}

+ (id)sortEntries:(id)arg1 keyPath:(id)arg2;
@property long long lastMaximumYValue; // @synthesize lastMaximumYValue=_lastMaximumYValue;
- (BOOL)validateModel:(id)arg1;
- (id)_divisionsForContentMagnitude:(double)arg1 start:(double)arg2 min:(long long)arg3 max:(long long)arg4 spacing:(double)arg5 keypath:(id)arg6 onlyStartAndEnd:(BOOL)arg7;
- (id)_entries:(id)arg1 fittingIntoRect:(struct CGRect)arg2;
- (id)sortedEntries:(id)arg1 fittingIntoRect:(struct CGRect)arg2;
- (id)visibleEntries:(id)arg1;
@property(readonly, nonatomic) unsigned long long numberOfBars;
- (unsigned long long)numberOfEntriesThatFitRect:(struct CGRect)arg1;
@property(readonly, nonatomic) long long maximumYValue;
- (long long)_maximumValueOfSeries:(id)arg1;
@property(readonly, nonatomic) long long minimumXValue;
@property(readonly, nonatomic) long long maximumXValue;
@property(readonly, nonatomic) BOOL hasBarSpacing;
@property(readonly) double barSpacing;
@property(readonly) double barWidth;
- (struct CGRect)contentFrame;
- (void)clearCache;
- (id)initWithFrame:(struct CGRect)arg1;
@property(readonly, copy, nonatomic) NSDictionary *textAttributesForAxisLabels;
- (double)widthToFill:(struct CGRect)arg1 numberOfEntries:(unsigned long long)arg2;
@property(readonly, copy, nonatomic) NSArray *divisionPositionsYAxis;
@property(readonly, copy, nonatomic) NSArray *divisionPositionsXAxis;
@property(readonly) double yAxisSpacing;
@property(readonly) double xAxisSpacing;
- (void)getXAxisRect:(struct CGRect *)arg1 yAxisRect:(struct CGRect *)arg2;
@property(readonly, nonatomic) double calculateVerticalBorderBuffer;
@property(readonly, nonatomic) double calculateHorizontalBorderBuffer;
- (struct CGRect)calculateXAxisBoundsWithinBounds:(struct CGRect)arg1;
- (struct CGRect)calculateYAxisBoundsWithinBounds:(struct CGRect)arg1;
- (void)drawXAxis:(struct CGRect)arg1;
- (void)drawYAxis:(struct CGRect)arg1;
- (void)drawBorder:(struct CGRect)arg1;
@property(readonly, nonatomic) BOOL canDrawBeyondContentRect;
- (void)drawContent:(struct CGRect)arg1;
- (void)drawBackground:(struct CGRect)arg1;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface DTBytesFormattedTextFieldCell : NSTextFieldCell
{
    BOOL _formatObjectValue;
    NSString *_defaultsIdentifier;
}

+ (id)cellWithDefaultsIdentifier:(id)arg1;
- (void).cxx_destruct;
- (void)_toggleFormatting:(id)arg1;
- (void)setFormatsObjectValue:(BOOL)arg1;
- (id)initWithDefaultsIdentifier:(id)arg1;

@end

@interface DTBytesFormatter : NSNumberFormatter
{
}

+ (id)stringForObjectValue:(id)arg1;
+ (id)stringFromNumber:(id)arg1;
+ (id)stringForLongLong:(long long)arg1;
+ (void)initialize;
- (id)stringForObjectValue:(id)arg1;
- (id)stringFromNumber:(id)arg1;

@end

@interface DTDivisionInfo : NSObject
{
    double _position;
    NSString *_label;
    NSNumber *_originalValue;
}

+ (id)infoWithPosition:(double)arg1 label:(id)arg2;
@property(copy) NSNumber *originalValue; // @synthesize originalValue=_originalValue;
@property(readonly) NSString *label; // @synthesize label=_label;
@property(readonly) double position; // @synthesize position=_position;
- (void).cxx_destruct;
- (id)debugDescription;
- (id)initWithPosition:(double)arg1 label:(id)arg2;

@end

@interface DTFilenameFormatter : NSFormatter
{
    BOOL _showPathExtensions;
}

- (id)stringForObjectValue:(id)arg1;
- (BOOL)showPathExtensions;
- (void)setShowPathExtensions:(BOOL)arg1;
- (id)init;

@end

@interface DTGroupGraph : DTGraph
{
    NSArray *_graphTypes;
}

- (void).cxx_destruct;
- (void)drawRect:(struct CGRect)arg1;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)setGraphTypes:(id)arg1;
- (void)setAttributes:(id)arg1;
- (void)setModel:(id)arg1;
- (void)clearCache;
- (void)_createViewsInSize:(struct CGSize)arg1;

@end

@interface DTHexadecimalFormatter : NSFormatter
{
}

+ (id)stringForObjectValue:(id)arg1;
- (id)stringForObjectValue:(id)arg1;

@end

@interface DTHistogramBar : NSObject
{
    unsigned long long height;
    DTHistogramBin *bin;
    unsigned long long binOffset;
    NSColor *color;
    struct CGRect rect;
}

@property(retain) NSColor *color; // @synthesize color;
@property(nonatomic) struct CGRect rect; // @synthesize rect;
@property(nonatomic) unsigned long long binOffset; // @synthesize binOffset;
@property DTHistogramBin *bin; // @synthesize bin;
@property(nonatomic) unsigned long long height; // @synthesize height;
- (void).cxx_destruct;

@end

@interface DTHistogramBin : NSObject
{
    _Bool isFake;
    NSString *name;
    double start;
    double end;
    NSMutableArray *bars;
}

@property(retain) NSMutableArray *bars; // @synthesize bars;
@property(nonatomic) _Bool isFake; // @synthesize isFake;
@property(nonatomic) double end; // @synthesize end;
@property(nonatomic) double start; // @synthesize start;
@property(retain, nonatomic) NSString *name; // @synthesize name;
- (void).cxx_destruct;
- (id)init;

@end

@interface DTHistogramGraph : DTGraph
{
    _Bool _groupedFormat;
    NSMutableArray *_bins;
    DTHistogramBar *_selectedBar;
    NSArray *_legend;
    BOOL _binsAreNamed;
}

- (void).cxx_destruct;
- (void)clearSelection;
- (void)mouseDown:(id)arg1;
- (void)observeModel:(BOOL)arg1;
- (void)_layoutBins;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)_createBins;
@property(readonly, nonatomic) double calculateVerticalBorderBuffer;
@property(readonly, nonatomic) double calculateHorizontalBorderBuffer;
- (long long)_bestNumberOfDivsGuessing:(long long)arg1;
- (struct CGRect)calculateXAxisBoundsWithinBounds:(struct CGRect)arg1;
- (struct CGRect)calculateYAxisBoundsWithinBounds:(struct CGRect)arg1;
- (void)drawLegend:(struct CGRect)arg1;
- (void)drawYAxis:(struct CGRect)arg1;
- (void)drawXAxis:(struct CGRect)arg1;
- (void)drawBorder:(struct CGRect)arg1;
- (void)drawContent:(struct CGRect)arg1;
- (long long)_maxValue;
- (void)clearCache;
- (void)drawBackground:(struct CGRect)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)_getLayoutRect:(struct LayoutRect *)arg1;

@end

@interface DTHorizontalLabelBarGraph : DTBarGraph
{
}

- (long long)_bestNumberOfDivsGuessing:(long long)arg1;
- (struct CGRect)calculateXAxisBoundsWithinBounds:(struct CGRect)arg1;
- (struct CGRect)calculateYAxisBoundsWithinBounds:(struct CGRect)arg1;
- (void)drawXAxis:(struct CGRect)arg1;
- (void)drawYAxis:(struct CGRect)arg1;
- (void)drawBorder:(struct CGRect)arg1;
- (void)drawContent:(struct CGRect)arg1;
- (long long)_maxValue;
- (void)clearCache;

@end

@interface DTLegendGraph : DTBarGraph
{
}

- (struct CGRect)calculateXAxisBoundsWithinBounds:(struct CGRect)arg1;
- (struct CGRect)calculateYAxisBoundsWithinBounds:(struct CGRect)arg1;
- (void)drawXAxis:(struct CGRect)arg1;
- (void)drawContent:(struct CGRect)arg1;
- (void)drawBorder:(struct CGRect)arg1;
- (void)drawYAxis:(struct CGRect)arg1;
- (void)drawBackground:(struct CGRect)arg1;
- (void)clearCache;

@end

@interface DTNanoTimestampFormatter : NSNumberFormatter
{
}

+ (id)stringForNanoseconds:(unsigned long long)arg1;
- (id)stringForObjectValue:(id)arg1;

@end

@interface DTNetworkGraph : DTBarGraph
{
    struct CGRect _contentBox;
    id <DTNetworkGraphLayout> layout;
    NSArray *_nodes;
    NSArray *_edges;
    DTNetworkGraphObject *_selectedObject;
}

@property(retain) DTNetworkGraphObject *selectedObject; // @synthesize selectedObject=_selectedObject;
@property(retain) NSArray *edges; // @synthesize edges=_edges;
@property(retain) NSArray *nodes; // @synthesize nodes=_nodes;
- (void).cxx_destruct;
- (void)mouseDown:(id)arg1;
@property(retain, getter=_layoutDelegate, setter=_setLayoutDelegate:) id <DTNetworkGraphLayout> layout;
- (void)observeModel:(BOOL)arg1;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)resetPaths;
- (void)createNodesAndEdges;
- (void)drawXAxis:(struct CGRect)arg1;
- (void)drawYAxis:(struct CGRect)arg1;
- (void)drawContent:(struct CGRect)arg1;
- (void)drawBorder:(struct CGRect)arg1;
- (double)calculateVerticalBorderBuffer;
- (double)calculateHorizontalBorderBuffer;
- (id)init;

@end

@interface DTNetworkGraphVelocitySpreadLayout : NSObject <DTNetworkGraphLayout>
{
    unsigned long long iterationLength;
    BOOL _isLayoutComplete;
}

@property unsigned long long iterationLength; // @synthesize iterationLength;
- (void)layoutGraph:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DTNetworkGraphCycleLayout : DTNetworkGraphVelocitySpreadLayout
{
}

- (void)layoutGraph:(id)arg1;

@end

@interface DTNetworkGraphObject : NSObject
{
    BOOL isSelected;
    NSBezierPath *path;
    NSBezierPath *decorativePath;
    id <NSObject> entity;
}

@property(retain) NSBezierPath *decorativePath; // @synthesize decorativePath;
@property(retain) NSBezierPath *path; // @synthesize path;
@property BOOL isSelected; // @synthesize isSelected;
@property(retain) id <NSObject> entity; // @synthesize entity;
- (void).cxx_destruct;

@end

@interface DTNetworkGraphEdge : DTNetworkGraphObject
{
    DTNetworkGraphNode *nodeA;
    DTNetworkGraphNode *nodeB;
    struct CGPoint controlPoint1;
    struct CGPoint controlPoint2;
    BOOL straighLine;
    BOOL pointerToNodeA;
    BOOL pointerToNodeB;
    double length;
}

@property double length; // @synthesize length;
@property BOOL straighLine; // @synthesize straighLine;
@property BOOL pointerToNodeB; // @synthesize pointerToNodeB;
@property BOOL pointerToNodeA; // @synthesize pointerToNodeA;
@property struct CGPoint controlPoint2; // @synthesize controlPoint2;
@property struct CGPoint controlPoint1; // @synthesize controlPoint1;
- (void).cxx_destruct;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;

@end

@interface DTNetworkGraphHorizontalCycleLayout : NSObject <DTNetworkGraphLayout>
{
}

- (void)layoutGraph:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DTNetworkGraphNode : DTNetworkGraphObject
{
    struct CGPoint position;
    struct CGPoint magnetPosition;
    struct CGPoint velocity;
    struct CGRect box;
    BOOL anchor;
}

@property BOOL anchor; // @synthesize anchor;
@property struct CGRect box; // @synthesize box;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;

@end

@interface DTNetworkGraphVerticalCycleLayout : NSObject <DTNetworkGraphLayout>
{
}

- (void)layoutGraph:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DTObjectGridGraph : NSView <DTObjectGridGraph>
{
    NSView<DTObjectGridGraph> *_contentView;
}

- (void).cxx_destruct;
@property(readonly, nonatomic) id <DTObjectGridReference> selectedReference;
@property(readonly, nonatomic) id <DTObjectGridNode> selectedNode;
- (void)deselectAll;
- (void)selectReferenceWithIdentifier:(unsigned int)arg1;
- (void)selectNodeWithIdentifier:(unsigned int)arg1;
- (void)setPivotNodeIdentifier:(unsigned int)arg1 animated:(BOOL)arg2;
@property(nonatomic) unsigned int pivotNodeIdentifier;
@property(nonatomic) struct CGSize gridCellSize;
@property(nonatomic) __weak id <DTObjectGridGraphDelegate> delegate;
@property(nonatomic) __weak id <DTObjectGridGraphDataSource> dataSource;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DTPercentageFormatter : NSFormatter
{
}

+ (id)stringForObjectValue:(id)arg1;
+ (id)stringForNumberValue:(id)arg1;
- (id)stringForObjectValue:(id)arg1;
- (id)stringForNumberValue:(id)arg1;

@end

@interface DTPieGraph : DTGraph
{
}

- (void)drawContent:(struct CGRect)arg1;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface DTPlotGraph : DTBarGraph
{
    NSMutableArray *_drawingOrderOfModels;
}

- (void).cxx_destruct;
- (BOOL)validateModel:(id)arg1;
- (id)_drawingOrderedModels:(id)arg1;
- (long long)_maximumValueOfModel:(id)arg1;
- (long long)maximumYValue;
- (long long)maximumXValue;
- (void)_drawImageForEntry:(id)arg1 atPoint:(struct CGPoint)arg2 insideRect:(struct CGRect)arg3;
- (void)_drawModel:(id)arg1 inRect:(struct CGRect)arg2;
- (struct CGRect)calculateXAxisBoundsWithinBounds:(struct CGRect)arg1;
- (struct CGRect)calculateYAxisBoundsWithinBounds:(struct CGRect)arg1;
- (void)drawBorder:(struct CGRect)arg1;
- (void)drawContent:(struct CGRect)arg1;
- (void)drawBackground:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface DTRulerTimeFormatter : NSNumberFormatter
{
    BOOL _fixedPrecision;
}

+ (id)stringForObjectValue:(id)arg1;
+ (id)stringFromNumber:(id)arg1;
+ (id)stringForDouble:(double)arg1;
- (id)stringForObjectValue:(id)arg1;
- (id)stringFromNumber:(id)arg1;
- (void)setFixedPrecision:(BOOL)arg1;

@end

@interface DTStackedBarGraph : DTBarGraph
{
    NSCache *_imageCache;
    DTStacks *_stacks;
    long long _calculatedYAxisWidth;
    NSTrackingArea *_trackingArea;
    NSMutableDictionary *_segmentsByXPos;
    NSMutableDictionary *_slicesByXPos;
    NSMutableArray *_stackPositions;
    double _atomicXSpacing;
}

@property double atomicXSpacing; // @synthesize atomicXSpacing=_atomicXSpacing;
- (void).cxx_destruct;
- (void)mouseDown:(id)arg1;
- (void)mouseMoved:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (struct CGRect)sliceRectForXPosition:(id)arg1;
- (id)barSegmentsForXPosition:(id)arg1;
- (id)infoInEvent:(id)arg1;
- (void)updateTrackingAreas;
- (BOOL)validateModel:(id)arg1;
- (id)divisionPositionsXAxis;
- (unsigned long long)numberOfEntriesThatFitRect:(struct CGRect)arg1;
- (void)clearCache;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)_addEntries:(id)arg1 toStacks:(id)arg2;
- (id)_imageOfBarForEntry:(id)arg1 withSize:(struct CGSize)arg2;
- (void)_computeEntriesAndPositions;
- (void)setFrame:(struct CGRect)arg1;
- (void)viewDidMoveToSuperview;
- (id)_allXAxisStackPositions;
- (double)_scaledHeightForValue:(double)arg1 inRect:(struct CGRect)arg2 forRange:(struct DTRealRange)arg3;
- (double)_scaleToFitValuesWithAxis:(struct DTRealRange)arg1;
- (struct DTRealRange)_rangeOfSummedValuesForKeyPath:(id)arg1 inStacks:(id)arg2;
- (void)viewWillDraw;
- (id)_getStacksForModel:(id)arg1;
- (void)drawStacks:(id)arg1 rect:(struct CGRect)arg2;
- (double)calculateVerticalBorderBuffer;
- (double)calculateHorizontalBorderBuffer;
- (struct CGRect)calculateXAxisBoundsWithinBounds:(struct CGRect)arg1;
- (struct CGRect)calculateYAxisBoundsWithinBounds:(struct CGRect)arg1;
- (void)drawBorder:(struct CGRect)arg1;
- (void)drawXAxis:(struct CGRect)arg1;
- (BOOL)hasHorizontalAxisPosition;
@property(readonly) double horizontalAxisPosition;
- (BOOL)hasVerticalAxisPosition;
@property(readonly) double verticalAxisPosition;
- (void)drawContent:(struct CGRect)arg1;
- (void)drawBackground:(struct CGRect)arg1;

@end

@interface DTStacks : NSObject <NSFastEnumeration>
{
    NSMutableArray *_orderedStacks;
    NSMutableArray *_orderedKeys;
    NSMutableDictionary *_keyedStacks;
}

- (void).cxx_destruct;
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
- (id)description;
- (id)init;
@property(readonly, nonatomic) unsigned long long count;
@property(readonly, copy, nonatomic) NSArray *allKeys;
- (id)stackForIndexedKey:(id)arg1;
- (id)keyAtIndex:(unsigned long long)arg1;
- (id)stacksWithRange:(struct _NSRange)arg1;
- (void)enumerateStacksWithOptions:(unsigned long long)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)enumerateStacksUsingBlock:(CDUnknownBlockType)arg1;
- (void)appendValue:(id)arg1 forIndexedKey:(id)arg2;

@end

@interface DTSystemTimeFormatter : NSFormatter
{
}

+ (id)stringForObjectValue:(id)arg1;
+ (id)stringFromJoinedString:(id)arg1;
- (id)stringForObjectValue:(id)arg1;
- (id)stringFromJoinedString:(id)arg1;

@end

@interface DTTimelineDecorator : NSObject
{
}

- (id)decorateInspectionRanges:(id)arg1;
- (void)setDefaultsForPlane:(id)arg1;
- (BOOL)needsMajorMinorTickPOIs;

@end

@interface DTTimelineBackgroundDecorator : DTTimelineDecorator
{
}

- (void)setDefaultsForPlane:(id)arg1;
- (id)decorateContainer:(struct DTTimelineDecorationContainer *)arg1;

@end

@interface DTTimelinePlane : NSObject
{
    struct PlaneMetrics _planeMetrics;
    struct TimelineViewContext *_ctx;
    CALayer *_layer;
    double _height;
    CALayer *_labelLayer;
    CALayer *_iconLayer;
    CALayer *_iconContextGlyphLayer;
    DTTimelineGraphPlaneLabelLayer *_displayNameLayer;
    CALayer *_bottomBorderLayer;
    CALayer *_topBorderLayer;
    double _baseZPosition;
    BOOL _resizable;
    BOOL _selected;
    BOOL _displayBottomBorder;
    BOOL _displayTopBorder;
    BOOL _hideLabel;
    BOOL _hidden;
    BOOL _drawFullLengthBorder;
    int _serialNumber;
    NSString *_displayName;
    NSString *_displayDescription;
    NSImage *_icon;
    unsigned long long _iconLocation;
    NSMenu *_iconContextMenu;
    unsigned long long _displayNameType;
    DTTimelineGroupPlane *_groupPlane;
    NSDictionary *_userInfo;
    DTTimelineGraph *_timelineGraph;
}

+ (BOOL)_baseClassCanAskForDefaultsDuringInit;
@property(nonatomic) BOOL drawFullLengthBorder; // @synthesize drawFullLengthBorder=_drawFullLengthBorder;
@property(nonatomic) BOOL hidden; // @synthesize hidden=_hidden;
@property(nonatomic) BOOL hideLabel; // @synthesize hideLabel=_hideLabel;
@property(nonatomic) BOOL displayTopBorder; // @synthesize displayTopBorder=_displayTopBorder;
@property(nonatomic) BOOL displayBottomBorder; // @synthesize displayBottomBorder=_displayBottomBorder;
@property(nonatomic) BOOL selected; // @synthesize selected=_selected;
@property(nonatomic) __weak DTTimelineGraph *timelineGraph; // @synthesize timelineGraph=_timelineGraph;
@property(copy, nonatomic) NSDictionary *userInfo; // @synthesize userInfo=_userInfo;
@property(nonatomic) __weak DTTimelineGroupPlane *groupPlane; // @synthesize groupPlane=_groupPlane;
@property(nonatomic) BOOL resizable; // @synthesize resizable=_resizable;
@property(nonatomic) unsigned long long displayNameType; // @synthesize displayNameType=_displayNameType;
@property(readonly, nonatomic) int serialNumber; // @synthesize serialNumber=_serialNumber;
@property(retain, nonatomic) NSMenu *iconContextMenu; // @synthesize iconContextMenu=_iconContextMenu;
@property(nonatomic) unsigned long long iconLocation; // @synthesize iconLocation=_iconLocation;
@property(retain, nonatomic) NSImage *icon; // @synthesize icon=_icon;
@property(copy, nonatomic) NSString *displayDescription; // @synthesize displayDescription=_displayDescription;
@property(copy, nonatomic) NSString *displayName; // @synthesize displayName=_displayName;
- (id).cxx_construct;
- (void).cxx_destruct;
- (BOOL)_containsPlane:(id)arg1;
- (void)_enumeratesPlanesHavingKey:(id)arg1 stopPtr:(char *)arg2 block:(CDUnknownBlockType)arg3;
- (void)_enumeratePlanesWithStopPtr:(char *)arg1 block:(CDUnknownBlockType)arg2;
- (void)enumeratesPlanesHavingKey:(id)arg1 block:(CDUnknownBlockType)arg2;
- (id)_planesUnderPoint:(struct CGPoint)arg1;
- (void)_populatePlaneLayoutMap:(unordered_map_c1fbcd3c *)arg1 offsetFromTop:(double)arg2;
- (BOOL)_wantsBottomBorderLayerWhenInGroupPlane;
- (id)_topBorderLayer;
- (id)_bottomBorderLayer;
- (id)_labelLayer;
- (id)_backgroundColor;
- (void)_invalidateLabel;
- (id)_labelIconLayer;
- (void)_didMoveOutOfView;
- (void)_willMoveIntoView;
- (id)actionForLayer:(id)arg1 forKey:(id)arg2;
- (BOOL)_isGroupPlane;
- (void)_updateSelectionColors;
- (void)_updateBorders:(id)arg1 selected:(BOOL)arg2;
- (BOOL)_drawTopBorderAsSelected;
- (BOOL)_drawBottomBorderAsSelected;
- (BOOL)_drawBordersAsSelected;
- (id)_borderColor;
- (id)_topGroupPlane;
- (BOOL)selfOrAncestorIsSelected;
@property(readonly, nonatomic) BOOL ancestorIsSelected;
- (id)_unselectedTextColor;
- (id)_unselectedDisclosureColor;
- (id)_selectedTextColor;
- (id)_selectedBackgroundColor;
- (id)_immediatelyPriorSiblingPlane;
@property(nonatomic) double baseZPosition;
- (void)_setHeight:(double)arg1;
@property(readonly, nonatomic) struct CGRect accessibilityLabelFrame;
@property(readonly, nonatomic) struct CGRect accessibilityFrame;
@property(readonly, nonatomic) double height;
- (BOOL)_pointIntersectsDisclosureGlyph:(struct CGPoint)arg1 groupPlane:(out id *)arg2;
@property(readonly, nonatomic) CALayer *layer;
- (id)description;
- (void)dealloc;
- (id)initWithHeight:(double)arg1;
- (id)init;
- (void)_removeFromContext;
- (id)_decoratedPlanes;
- (void)_contextChanged;
- (void)_setContext:(struct TimelineViewContext *)arg1 layer:(id)arg2 anchorPoint:(struct CGPoint)arg3;
- (void)_invalidateTimeRange:(struct XRTimeRange)arg1;
- (void)_setPosition:(struct CGPoint)arg1 size:(struct CGSize)arg2;
- (void)_layoutLabelLayerAtPlanePosition:(struct CGPoint)arg1 planeSize:(struct CGSize)arg2;
- (void)_layoutLabelLayerAtPlanePosition:(struct CGPoint)arg1 planeSize:(struct CGSize)arg2 centerLabelWithin:(double)arg3;
- (void)_updateIconAndLabelLayerZPosition;
- (double)_centerOfLabelWithin:(double)arg1;

@end

@interface DTTimelineDecoratedPlane : DTTimelinePlane
{
    NSMapTable *_tilesByIdx;
    double _oldTileWidth;
    DTTimelineGraphInfoSummaryLabelLayer *_infoSummaryLabelLayer;
    BOOL _dynamicRangeValid;
    BOOL _skipFaultingInTiles;
    DTTimelineDecorator *_decorator;
    NSString *_dynamicRangePeerGroup;
    NSAttributedString *_summary;
    struct DTTimelineGraphDynamicRange _minimalDynamicRange;
    struct DTTimelineGraphDynamicRange _maximumDynamicRange;
}

+ (id)planeWithHeight:(double)arg1 decorator:(id)arg2;
+ (id)planeWithDecorator:(id)arg1;
@property(retain, nonatomic) NSAttributedString *summary; // @synthesize summary=_summary;
@property(copy, nonatomic) NSString *dynamicRangePeerGroup; // @synthesize dynamicRangePeerGroup=_dynamicRangePeerGroup;
@property(nonatomic) struct DTTimelineGraphDynamicRange maximumDynamicRange; // @synthesize maximumDynamicRange=_maximumDynamicRange;
@property(nonatomic) struct DTTimelineGraphDynamicRange minimalDynamicRange; // @synthesize minimalDynamicRange=_minimalDynamicRange;
@property(readonly, nonatomic) DTTimelineDecorator *decorator; // @synthesize decorator=_decorator;
- (void).cxx_destruct;
- (void)_didMoveOutOfView;
- (void)_willMoveIntoView;
- (id)_decorationSummaryLayer;
- (void)_enumeratesPlanesHavingKey:(id)arg1 stopPtr:(char *)arg2 block:(CDUnknownBlockType)arg3;
- (void)ignoreTimeBoundsCheck;
- (id)_unselectedTextColor;
- (id)_selectedTextColor;
- (void)makeOpaqueWithBackgroundColor:(id)arg1;
- (void)setContentIsOptional;
- (id)visibleStringSummaries;
- (void)_setHeight:(double)arg1;
@property(nonatomic) BOOL decoratesMajorMinorTicks;
@property(nonatomic) unsigned long long intervalBarWidth;
@property(nonatomic) double intervalRoundedRectRadius;
@property(nonatomic) double intervalVisualSpacing;
@property(nonatomic) unsigned long long intervalDisplayType;
@property(nonatomic) unsigned long long intervalLabelConflictResolutionType;
@property(nonatomic) unsigned long long intervalConflictResolutionType;
@property(nonatomic) unsigned long long pointDisplayType;
@property(nonatomic) unsigned long long pointLabelConflictResolutionType;
@property(nonatomic) unsigned long long pointConflictResolutionType;
- (BOOL)dynamicRangeWasSet;
- (void)setDynamicRange:(struct DynamicRange)arg1;
- (struct DynamicRange)currentDynamicRange;
- (struct DynamicRange)visibleDynamicRange;
- (void)_enumerateVisibleTiles:(CDUnknownBlockType)arg1;
- (id)_decoratedPlanes;
- (void)_contextChanged;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
@property(retain, nonatomic) NSFont *defaultDrawableFont;
@property(nonatomic) struct CGSize defaultDrawableIconSize;
@property(retain, nonatomic) NSImage *defaultDrawableIcon;
@property(copy, nonatomic) NSColor *defaultDrawableTextColor;
@property(copy, nonatomic) NSColor *defaultDrawableColor;
- (void)dealloc;
- (id)init;
- (id)initWithHeight:(double)arg1;
- (id)initWithHeight:(double)arg1 decorator:(id)arg2;
- (id)initWithDecorator:(id)arg1;
- (void)_invalidateTimeRange:(struct XRTimeRange)arg1;
- (void)_redecorateTiles;
- (void)_setPosition:(struct CGPoint)arg1 size:(struct CGSize)arg2;
- (void)_layoutTiles;
- (void)_removeFromContext;
- (void)_setContext:(struct TimelineViewContext *)arg1 layer:(id)arg2 anchorPoint:(struct CGPoint)arg3;

@end

@interface DTTimelineGraph : NSView <DTTimelineGraphDelegate>
{
    struct TimelineViewContext _tilerCtx;
    CALayer *_layer;
    NSArray *_planes;
    DTTimelinePlane *_topPinnedPlane;
    DTTimelinePlane *_bottomPinnedPlane;
    DTTimelinePlane *_backgroundPlane;
    DTTimelinePlane *_overlayPlane;
    DTTimelineMouseEventsResponder *_mouseEventsResponder;
    DTTimelineGraphPlaneManager *_planeManager;
    DTTimelineGraphLayoutManager *_layoutManager;
    NSTimer *_dynamicRangeUpdateTimer;
    DTTimelinePlaneDynamicRangeUpdateAnimation *_dynamicRangeUpdateAnim;
    NSMutableDictionary *_establishedDynamicRangesGroups;
    unsigned long long _unadjustedOffset;
    BOOL _nanosecondsPerPointSet;
    double _unroundedUserSuppliedYOffset;
    BOOL _displayHorizontalScroller;
    BOOL _displayVerticalScroller;
    BOOL _isFirstResponder;
    id <DTTimelineGraphDelegate> _delegate;
    unsigned long long _currentInspectionTime;
    unsigned long long _nanosecondsPerPoint;
    NSSet *_selectedPlanes;
    id <NSAccessibility> _accessibilityProvider;
    unsigned long long _rangeIndicatorState;
    struct XRTimeRange _selectedTimeRange;
    struct XRTimeRange _zoomIndicatorTimeRange;
}

+ (BOOL)dt_shouldAllowImplicitAction:(id)arg1;
@property(readonly, nonatomic) BOOL isFirstResponder; // @synthesize isFirstResponder=_isFirstResponder;
@property(nonatomic) BOOL displayVerticalScroller; // @synthesize displayVerticalScroller=_displayVerticalScroller;
@property(nonatomic) BOOL displayHorizontalScroller; // @synthesize displayHorizontalScroller=_displayHorizontalScroller;
@property(nonatomic) unsigned long long rangeIndicatorState; // @synthesize rangeIndicatorState=_rangeIndicatorState;
@property(nonatomic) struct XRTimeRange zoomIndicatorTimeRange; // @synthesize zoomIndicatorTimeRange=_zoomIndicatorTimeRange;
@property(nonatomic) __weak id <NSAccessibility> accessibilityProvider; // @synthesize accessibilityProvider=_accessibilityProvider;
@property(readonly, nonatomic) DTTimelineGraphPlaneManager *planeManager; // @synthesize planeManager=_planeManager;
@property(copy, nonatomic) NSSet *selectedPlanes; // @synthesize selectedPlanes=_selectedPlanes;
@property(nonatomic) unsigned long long nanosecondsPerPoint; // @synthesize nanosecondsPerPoint=_nanosecondsPerPoint;
@property(nonatomic) struct XRTimeRange selectedTimeRange; // @synthesize selectedTimeRange=_selectedTimeRange;
@property(nonatomic) unsigned long long currentInspectionTime; // @synthesize currentInspectionTime=_currentInspectionTime;
@property(nonatomic) __weak id <DTTimelineGraphDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) DTTimelinePlane *overlayPlane; // @synthesize overlayPlane=_overlayPlane;
@property(readonly, nonatomic) DTTimelinePlane *backgroundPlane; // @synthesize backgroundPlane=_backgroundPlane;
@property(readonly, nonatomic) DTTimelinePlane *bottomPinnedPlane; // @synthesize bottomPinnedPlane=_bottomPinnedPlane;
@property(readonly, nonatomic) DTTimelinePlane *topPinnedPlane; // @synthesize topPinnedPlane=_topPinnedPlane;
- (id).cxx_construct;
- (void).cxx_destruct;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (id)accessibilityIdentifier;
- (id)accessibilityTitleUIElement;
- (id)accessibilityRole;
- (id)accessibilityContents;
- (id)accessibilityChildren;
- (BOOL)isAccessibilitySelectorAllowed:(SEL)arg1;
- (void)_generatePlaneLayoutMap;
- (const unordered_map_c1fbcd3c *)_planeLayoutMap;
- (void)clearInspectionInfo;
- (void)displayInspectionInfoForNanosecond:(unsigned long long)arg1;
- (void)setNextResponder:(id)arg1;
- (void)viewDidMoveToWindow;
- (void)_updateSelectedPlanesColors;
- (id)menuForEvent:(id)arg1;
- (void)resignKeyWindow;
- (void)becomeKeyWindow;
- (BOOL)resignFirstResponder;
- (BOOL)becomeFirstResponder;
- (BOOL)canBecomeKeyView;
- (BOOL)acceptsFirstResponder;
- (void)inputHandlerForGraph:(id)arg1 requestsHeight:(double)arg2 forPlane:(id)arg3;
- (void)inputHandlerForGraph:(id)arg1 unhandledClickAtTime:(unsigned long long)arg2 onPlanes:(id)arg3;
- (void)inputHandlerForGraph:(id)arg1 requestsCollapsingGroupPlane:(id)arg2;
- (void)inputHandlerForGraph:(id)arg1 requestsExpandingGroupPlane:(id)arg2;
- (void)inputHandlerRequestsToClearInspectionInfoForGraph:(id)arg1;
- (void)inputHandlerForGraph:(id)arg1 requestsDisplayInspectionInfoForNanosecond:(unsigned long long)arg2 atX:(double)arg3;
- (void)inputHandlerForGraph:(id)arg1 requestsNanosecondsPerPoint:(unsigned long long)arg2;
- (void)inputHandlerRequestsToClearCurrentInspectionTimeForGraph:(id)arg1;
- (void)inputHandlerForGraph:(id)arg1 requestsCurrentInspectionTime:(unsigned long long)arg2;
- (void)inputHandlerRequestsToClearSelectedTimeRangeForGraph:(id)arg1;
- (void)inputHandlerDidFinishSelectionForGraph:(id)arg1;
- (void)inputHandlerForGraph:(id)arg1 requestsSelectedTimeRange:(struct XRTimeRange)arg2;
- (void)inputHandlerForGraph:(id)arg1 requestYOffset:(double)arg2;
- (void)inputHandlerForGraph:(id)arg1 requestsNanosecondOffset:(long long)arg2;
- (BOOL)getPointInView:(out struct CGPoint *)arg1 visibility:(out char *)arg2 plane:(id)arg3 time:(long long)arg4;
- (void)_addBottomBorderLayer:(id)arg1;
- (void)_addDecorationSummaryLayer:(id)arg1;
- (id)_resizablePlaneForRect:(struct CGRect)arg1;
- (id)_planesUnderPoint:(struct CGPoint)arg1;
- (void)_setOverlayPlane:(id)arg1;
- (void)_setBackgroundPlane:(id)arg1;
- (void)_setBottomPinnedPlane:(id)arg1;
- (void)_setTopPinnedPlane:(id)arg1;
- (void)_setPlanes:(id)arg1;
- (void)_dynamicRangeUpdateFire:(id)arg1;
- (id)_establishedDynamicRangePeerOfPlane:(id)arg1;
- (id)_createDynamicRangeAnimation;
- (id)_decoratedPlanes;
- (void)_enumerateNonPinnedPlanes:(CDUnknownBlockType)arg1;
- (void)_enumerateTopLevelPlanes:(CDUnknownBlockType)arg1;
- (void)_dynamicRangeShouldBeRecomputed;
- (void)_didChangeContext;
- (void)_displayScrollbarsWithDelayedHide;
- (void)moveVerticalScrollerByY:(double)arg1;
- (void)moveHorizontalScrollerByX:(double)arg1;
- (void)_hideScollbars;
@property(readonly, nonatomic) BOOL mouseIsOverVerticalScroller;
@property(readonly, nonatomic) BOOL mouseIsOverHorizontalScroller;
- (void)viewWillMoveToWindow:(id)arg1;
- (double)_computedHeight;
- (unsigned long long)scaleNeededToDisplayAllData;
- (unsigned long long)scaleNeededToDisplayDuration:(unsigned long long)arg1;
- (long long)matchingOffsetForNanosecondsPerPoint:(inout unsigned long long *)arg1 centeredAtTime:(long long)arg2;
@property(nonatomic) double yOffset;
- (void)_updateYOffsetIfNeeded;
@property(nonatomic) BOOL animateChanges;
- (void)enumeratesPlanesHavingKey:(id)arg1 block:(CDUnknownBlockType)arg2;
@property(nonatomic) unsigned long long duration;
- (long long)lastVisibleNanosecond;
- (void)invalidateTimeRange:(struct XRTimeRange)arg1 plane:(id)arg2;
- (void)invalidateTimeRange:(struct XRTimeRange)arg1;
- (void)clearCurrentInspectionTime;
@property(readonly, copy, nonatomic) NSString *rangeIndicatorDescription;
- (void)clearZoomIndicator;
- (void)clearSelectedTimeRange;
@property(readonly, nonatomic) long long midpointNanosecondOffset;
@property(nonatomic) long long nanosecondOffset;
- (void)_updateNanosecondOffsetIfNeeded;
- (void)_screenChangeNotification:(id)arg1;
@property(readonly, nonatomic) NSArray *planes; // @synthesize planes=_planes;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (double)_computeVisibleHeight;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DTTimelineGraphInfoSummaryLabelLayer : CALayer
{
    NSAttributedString *_string;
}

@property(copy, nonatomic) NSAttributedString *string; // @synthesize string=_string;
- (void).cxx_destruct;
- (void)setContentsScale:(double)arg1;
- (void)drawInContext:(struct CGContext *)arg1;
- (struct CGSize)preferredFrameSize;

@end

@interface DTTimelineGraphLayoutManager : NSObject
{
    DTTimelineGraph *_timelineGraph;
    DTTimelineGraphLayoutManagerLayerDelegate *_layerDelegate;
    CALayer *_inspectionPointLayer;
    CALayer *_summaryInspectionPointLayer;
    CALayer *_leftSelectionIndicatorLayer;
    CALayer *_rightSelectionIndicatorLayer;
    CALayer *_leftSelectionPointLayer;
    CALayer *_rightSelectionPointLayer;
    CALayer *_inspectionSummaryLayer;
    CALayer *_leftZoomIndicationPointLayer;
    CALayer *_zoomIndicationLayer;
    CALayer *_rightZoomIndicationPointLayer;
    CATextLayer *_rangeInfoTextLayer;
    CALayer *_rangeInfoLayer;
    CALayer *_horizontalScrollerLayer;
    CALayer *_verticalScrollerLayer;
    CALayer *_labelBackgroundLayer;
    CALayer *_labelRightBorderLayer;
    CIFilter *_colorEffect;
    BOOL _displayInspectionSummary;
    unsigned long long _inspectionInfoSummaryTime;
    NSSet *_inspectionSummaryContainers;
    double _computedHeight;
    NSSet *_visiblePlanes;
    BOOL _animateChanges;
}

@property(nonatomic) BOOL animateChanges; // @synthesize animateChanges=_animateChanges;
- (void).cxx_destruct;
- (struct CGPoint)_localMousePoint;
- (void)_layoutLabelBackground:(id)arg1;
- (void)_layoutLabelRightBorder:(id)arg1;
- (BOOL)_shouldShowVerticalScrollerWithOffset:(double)arg1 scrollableHeight:(double)arg2 contentHeight:(double)arg3;
- (BOOL)_shouldShowHorizontalScrollerWithOffset:(long long)arg1 scrollableWidthInNanoseconds:(unsigned long long)arg2 duration:(unsigned long long)arg3;
- (void)_layoutVerticalScroller:(id)arg1;
- (void)_layoutHorizontalScroller:(id)arg1;
- (void)_layoutScrollers:(id)arg1;
- (void)_layoutRangeInfo:(id)arg1;
- (void)_layoutInspectionSummary:(id)arg1;
- (void)_layoutInspectionPoint:(id)arg1;
- (void)_layoutZoomIndicator:(id)arg1;
- (void)_layoutSelection:(id)arg1;
- (void)_positionPlane:(id)arg1 includeBottomBorder:(BOOL)arg2;
- (void)_positionFullHeightPlane:(id)arg1;
- (void)_positionBottomBorderForPlane:(id)arg1;
- (void)_positionTopBorderForPlane:(id)arg1;
- (void)_updateVisiblePlanes:(id)arg1;
- (void)clearInspectionSummary;
- (void)displayInspectionSummaryForNanosecond:(unsigned long long)arg1;
- (void)addDecorationSummaryLayer:(id)arg1;
- (BOOL)_mouseIsOverScroller:(id)arg1;
- (double)verticalScrollerScale;
- (double)horizontalScrollerScale;
@property(readonly, nonatomic) BOOL mouseIsOverVerticalScroller;
@property(readonly, nonatomic) BOOL mouseIsOverHorizontalScroller;
- (id)resizablePlaneForRect:(struct CGRect)arg1;
- (id)planesUnderPoint:(struct CGPoint)arg1;
- (void)addBottomBorderLayer:(id)arg1;
- (void)_addPlane:(id)arg1 toMap:(unordered_map_c1fbcd3c *)arg2 distanceFromTop:(double)arg3;
- (double)computedHeight;
- (const unordered_map_c1fbcd3c *)planeLayoutMap;
- (void)generatePlaneLayoutMap;
- (void)layoutSublayersOfLayer:(id)arg1;
- (id)initWithTimelineGraph:(id)arg1;

@end

@interface DTTimelineGraphLayoutManagerLayerDelegate : NSObject
{
    DTTimelineGraphLayoutManager *_layoutManager;
}

- (void).cxx_destruct;
- (id)actionForLayer:(id)arg1 forKey:(id)arg2;
- (id)initWithLayoutManager:(id)arg1;

@end

@interface DTTimelineGraphPlaneLabelLayer : CALayer
{
    BOOL _preferredFrameSizeComputed;
    struct CGSize _computedPreferredFrameSize;
    NSAttributedString *_string;
    NSColor *_textColor;
}

@property(retain, nonatomic) NSColor *textColor; // @synthesize textColor=_textColor;
@property(copy, nonatomic) NSAttributedString *string; // @synthesize string=_string;
- (void).cxx_destruct;
- (void)setContentsScale:(double)arg1;
- (void)drawInContext:(struct CGContext *)arg1;
- (struct CGSize)preferredFrameSize;

@end

@interface DTTimelineGraphPlaneManager : NSObject
{
    DTTimelineGraph *_timelineGraph;
    NSMutableArray *_planes;
    DTTimelinePlane *_topPinnedPlane;
    DTTimelinePlane *_bottomPinnedPlane;
    DTTimelinePlane *_backgroundPlane;
    DTTimelinePlane *_overlayPlane;
    BOOL _topPlaneChanged;
    BOOL _bottomPlaneChanged;
    BOOL _backgroundPlaneChanged;
    BOOL _overlayPlaneChanged;
    BOOL _planesArrayChanged;
    NSMapTable *_groupPlaneChangesMap;
}

+ (id)planeManagerWithTimelineGraph:(id)arg1;
- (void).cxx_destruct;
- (void)collapseGroupPlane:(id)arg1;
- (void)expandGroupPlane:(id)arg1;
- (void)setRepresentativePlane:(id)arg1 onGroupPlane:(id)arg2;
- (void)setType:(long long)arg1 onGroupPlane:(id)arg2;
- (void)removeAllSubplanesFromGroupPlane:(id)arg1;
- (void)removeSubplane:(id)arg1 fromGroupPlane:(id)arg2;
- (void)insertSubplane:(id)arg1 afterSubplane:(id)arg2 inGroupPlane:(id)arg3;
- (void)addSubplanes:(id)arg1 toGroupPlane:(id)arg2;
- (void)addSubplane:(id)arg1 toGroupPlane:(id)arg2;
- (void)setHeight:(double)arg1 onPlane:(id)arg2;
- (void)removeAllPlanes;
- (void)removePlane:(id)arg1;
- (void)insertPlane:(id)arg1 afterPlane:(id)arg2;
- (void)addPlanes:(id)arg1;
- (void)addPlane:(id)arg1;
- (void)removeOverlayPlane;
- (void)removeBackgroundPlane;
- (void)removeBottomPinnedPlane;
- (void)removeTopPinnedPlane;
- (void)setOverlayPlane:(id)arg1;
- (void)setBackgroundPlane:(id)arg1;
- (void)setBottomPinnedPlane:(id)arg1;
- (void)setTopPinnedPlane:(id)arg1;
- (void)commitChangesAnimated:(BOOL)arg1;
- (void)_removePlaneFromHeirarchy:(id)arg1;
- (void)_reset;
- (id)initWithTimelineGraph:(id)arg1;

@end

@interface DTTimelineGroupPlane : DTTimelinePlane
{
    NSArray *_subplanes;
    DTTimelineGroupPlaneLayoutManager *_layoutManager;
    BOOL _expanded;
    long long _layoutMode;
    double _interplanePadding;
    long long _type;
    DTTimelinePlane *_representativePlane;
    CALayer *__disclosureTriangleLayer;
}

+ (id)_whiteTriangle;
+ (id)_grayTriangle;
@property(readonly, nonatomic) CALayer *_disclosureTriangleLayer; // @synthesize _disclosureTriangleLayer=__disclosureTriangleLayer;
@property(readonly, nonatomic) __weak DTTimelinePlane *representativePlane; // @synthesize representativePlane=_representativePlane;
@property(readonly, nonatomic) BOOL expanded; // @synthesize expanded=_expanded;
@property(readonly, nonatomic) long long type; // @synthesize type=_type;
@property(nonatomic) double interplanePadding; // @synthesize interplanePadding=_interplanePadding;
@property(nonatomic) long long layoutMode; // @synthesize layoutMode=_layoutMode;
@property(readonly, nonatomic) NSArray *subplanes; // @synthesize subplanes=_subplanes;
- (void).cxx_destruct;
@property(readonly, nonatomic) struct CGPoint accessibilityActivationPoint;
- (BOOL)_isGroupPlane;
- (BOOL)_containsPlane:(id)arg1;
- (void)_enumeratesPlanesHavingKey:(id)arg1 stopPtr:(char *)arg2 block:(CDUnknownBlockType)arg3;
- (void)_enumeratePlanesWithStopPtr:(char *)arg1 block:(CDUnknownBlockType)arg2;
- (void)_layoutLabelLayerAtPlanePosition:(struct CGPoint)arg1 planeSize:(struct CGSize)arg2 centerLabelWithin:(double)arg3;
- (id)_labelLayer;
- (id)_selectedDisclosureImage;
- (void)_invalidateLabel;
- (id)actionForLayer:(id)arg1 forKey:(id)arg2;
- (void)_repositionDisclosureTriangle;
- (void)setHidden:(BOOL)arg1;
- (long long)_indexOfRepresentativePlane;
- (void)_setRepresentativePlane:(id)arg1;
- (void)_setExpanded:(BOOL)arg1;
- (void)_updateIconAndLabelLayerZPosition;
- (void)setBaseZPosition:(double)arg1;
- (void)_updateSubplaneHiddenState;
- (void)_setType:(long long)arg1;
- (void)_populatePlaneLayoutMap:(unordered_map_c1fbcd3c *)arg1 offsetFromTop:(double)arg2;
- (void)_didMoveOutOfView;
- (void)_willMoveIntoView;
- (void)setTimelineGraph:(id)arg1;
- (id)_planesUnderPoint:(struct CGPoint)arg1;
- (BOOL)_pointIntersectsDisclosureGlyph:(struct CGPoint)arg1 groupPlane:(out id *)arg2;
- (void)_invalidateTimeRange:(struct XRTimeRange)arg1;
- (void)_setPosition:(struct CGPoint)arg1 size:(struct CGSize)arg2;
- (void)_setHeight:(double)arg1;
- (double)height;
- (void)_removeFromContext;
- (id)_decoratedPlanes;
- (void)_contextChanged;
- (void)_setContext:(struct TimelineViewContext *)arg1 layer:(id)arg2 anchorPoint:(struct CGPoint)arg3;
- (void)_updateSelectionColors;
- (BOOL)_drawBordersAsSelected;
- (BOOL)_drawTopBorderAsSelected;
- (BOOL)_drawBottomBorderAsSelected;
- (BOOL)_disclosureTriangleIsAboveASelectedPlane;
- (void)_setSubplanes:(id)arg1;
- (id)description;
- (id)_description:(long long)arg1;
- (id)initWithHeight:(double)arg1;

@end

@interface DTTimelineGroupPlaneChanges : NSObject
{
    DTTimelineGroupPlane *_groupPlane;
    BOOL _hasChanges;
    BOOL _expanded;
    NSMutableArray *_subplanes;
    long long _groupPlaneType;
    DTTimelinePlane *_representativePlane;
}

@property(nonatomic) __weak DTTimelinePlane *representativePlane; // @synthesize representativePlane=_representativePlane;
@property(nonatomic) BOOL expanded; // @synthesize expanded=_expanded;
@property(nonatomic) BOOL hasChanges; // @synthesize hasChanges=_hasChanges;
@property(nonatomic) long long groupPlaneType; // @synthesize groupPlaneType=_groupPlaneType;
@property(retain, nonatomic) NSMutableArray *subplanes; // @synthesize subplanes=_subplanes;
- (void).cxx_destruct;
- (id)initWithGroupPlane:(id)arg1;

@end

@interface DTTimelineGroupPlaneLayoutManager : NSObject
{
    DTTimelineGroupPlane *_groupPlane;
}

- (void).cxx_destruct;
- (void)populatePlaneLayoutMap:(unordered_map_c1fbcd3c *)arg1 offsetFromTop:(double)arg2;
- (struct CGRect)_frameForZOrderedPlane:(id)arg1 yOffet:(double)arg2;
- (id)planesUnderPoint:(struct CGPoint)arg1;
- (void)layoutSublayersOfLayer:(id)arg1;
- (void)_positionPlane:(id)arg1 yPosition:(double)arg2 includeBottomBorder:(BOOL)arg3;
- (void)_positionPlane:(id)arg1;
- (void)_positionBottomBorderForPlane:(id)arg1 yPosition:(double)arg2;
- (id)initWithGroupPlane:(id)arg1;

@end

@interface DTTimelineInspectionDecoration : NSObject
{
    BOOL _clickable;
    NSAttributedString *_summary;
    struct DTTimelineRepresentativeDecoration _representedDecorationInfo;
}

+ (id)pluralizeNoun:(id)arg1 forCount:(long long)arg2;
@property(nonatomic, getter=isClickable) BOOL clickable; // @synthesize clickable=_clickable;
@property(readonly, nonatomic) struct DTTimelineRepresentativeDecoration representedDecorationInfo; // @synthesize representedDecorationInfo=_representedDecorationInfo;
@property(copy, nonatomic) NSAttributedString *summary; // @synthesize summary=_summary;
- (void).cxx_destruct;
@property(readonly, nonatomic) struct XRTimeRange range;
- (id)init;
- (id)initWithRepInfo:(struct DTTimelineRepresentativeDecoration)arg1;

@end

@interface DTTimelineInspectionDecorationContainer : NSObject
{
    struct map<XRTimeRange, DTTimelineInspectionDecoration *, std::__1::less<XRTimeRange>, std::__1::allocator<std::__1::pair<const XRTimeRange, DTTimelineInspectionDecoration *>>> _decorationsByTimeRange;
    DTTimelineDecoratedPlane *_plane;
}

@property(nonatomic) __weak DTTimelineDecoratedPlane *plane; // @synthesize plane=_plane;
- (id).cxx_construct;
- (void).cxx_destruct;
- (id)decorationAtTime:(unsigned long long)arg1;
- (void)addDecorationsFromContainer:(struct DTTimelineDecorationContainer *)arg1;
- (void)decorate:(CDUnknownBlockType)arg1;
- (id)init;

@end

@interface DTTimelineMouseEventsResponder : NSResponder <DTTimelineMouseStateValidatorDelegate>
{
    DTTimelineGraph *_timelineGraph;
    DTTimelineMouseStateValidator *_mouseStateValidator;
    NSTrackingArea *_trackingArea;
    double _filterStartX;
    double _filterEndX;
    double _zoomIndicatorStartX;
    long long _magnifyGestureCenter;
    BOOL _mouseDraggedSinceMouseDown;
    NSEvent *_mouseDownEvent;
    DTTimelinePlane *_resizingPlane;
    NSTimer *_longPressTimer;
    id <DTTimelineGraphDelegate> _delegate;
}

@property(nonatomic) __weak id <DTTimelineGraphDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)_dragInspectionPointEvent:(id)arg1;
- (void)_endLongPressDragAtEvent:(id)arg1;
- (void)_longPressDragToEvent:(id)arg1;
- (BOOL)_startLongPressDragAtEvent:(id)arg1;
- (void)_resizePlane:(id)arg1 event:(id)arg2;
- (void)_zoomOutBasedOnZoomIndicator;
- (void)_zoomInToZoomIndicator;
- (void)_cancelZoom;
- (void)_displayZoomIndicatorFrom:(double)arg1 to:(double)arg2;
- (void)_setRangeIndicatorState:(unsigned long long)arg1;
- (void)_clickFromEvent:(id)arg1;
- (void)_magnifyBy:(double)arg1;
- (void)_finishFiltering;
- (void)_applyFilterFrom:(double)arg1 to:(double)arg2;
- (void)_clearInspectionInfo;
- (void)_displayInspectionInfoForEvent:(id)arg1;
- (void)_moveVerticalScrollerByY:(double)arg1;
- (void)_moveHorizontalScrollerByX:(double)arg1;
- (void)_moveByY:(double)arg1;
- (void)_moveByX:(double)arg1;
- (BOOL)_mouseIsOverDisclosureTriangle:(id)arg1 groupPlane:(out id *)arg2;
- (BOOL)_mouseIsOverResizablePlaneBorder:(id)arg1;
- (id)_planeToResizeForEvent:(id)arg1;
- (BOOL)_mouseIsOverFilterEnd:(id)arg1;
- (BOOL)_mouseIsOverFilterStart:(id)arg1;
- (BOOL)_mouseIsInLabelOverlayArea:(id)arg1;
- (BOOL)_mouseIsInBottomPinnedPlane:(id)arg1;
- (BOOL)_mouseIsInRuler:(id)arg1;
- (BOOL)_mouseIsInHoverArea:(id)arg1;
- (BOOL)_mouseIsOverGraph:(id)arg1;
- (void)_updateFilterStateFromTimeline;
- (long long)_maxOffset;
- (double)_rulerHeight;
- (long long)_rationalizeSelectionOffset:(long long)arg1;
- (double)_localYFromEvent:(id)arg1;
- (double)_localXFromEvent:(id)arg1;
- (struct CGPoint)_localPointFromEvent:(id)arg1;
- (BOOL)_controlKeyPressed;
- (BOOL)_shiftKeyPressed;
- (BOOL)_optionKeyPressed;
- (void)_fireLongPressTimer:(id)arg1;
- (void)_cancelLongPressTimer;
- (void)_startLongPressTimerWithEvent:(id)arg1;
- (void)_mouseDragTransitionToState:(unsigned long long)arg1 event:(id)arg2;
- (void)_setIdleStateBasedOnEvent:(id)arg1;
- (void)scrollWheel:(id)arg1;
- (void)magnifyWithEvent:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)mouseMoved:(id)arg1;
- (void)mouseUp:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)flagsChanged:(id)arg1;
- (void)mouseStateValidator:(id)arg1 didTransistionToState:(unsigned long long)arg2 fromState:(unsigned long long)arg3 event:(id)arg4;
- (void)_assertOrLogInvalidStateInEvent:(id)arg1;
- (id)initWithTimelineGraph:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DTTimelineMouseStateValidator : NSObject
{
    id <DTTimelineMouseStateValidatorDelegate> _delegate;
    unsigned long long _currentState;
}

+ (id)_validStateTransistions;
+ (id)descriptionForState:(unsigned long long)arg1;
@property(readonly, nonatomic) unsigned long long currentState; // @synthesize currentState=_currentState;
- (void).cxx_destruct;
- (void)transitionToState:(unsigned long long)arg1 event:(id)arg2;
- (void)_assertOrLogOldState:(unsigned long long)arg1 newState:(unsigned long long)arg2;
- (id)initWithDelegate:(id)arg1;
- (id)init;

@end

@interface DTTimelinePlaneDynamicRangeUpdateAnimation : NSAnimation
{
    struct vector<std::__1::pair<DTTimelineInternal::DynamicRange, NSArray *>, std::__1::allocator<std::__1::pair<DTTimelineInternal::DynamicRange, NSArray *>>> _targetPairs;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)setCurrentProgress:(float)arg1;
- (void)addTargetDynamicRange:(struct DynamicRange)arg1 planes:(id)arg2;
- (id)init;

@end

@interface DTTimelinePlaneInspectionDecorationInfo : NSObject
{
    DTTimelinePlane *_plane;
    DTTimelineInspectionDecoration *_inspectionDecoration;
    double _yPosition;
}

@property(readonly, nonatomic) double yPosition; // @synthesize yPosition=_yPosition;
@property(readonly, nonatomic) DTTimelineInspectionDecoration *inspectionDecoration; // @synthesize inspectionDecoration=_inspectionDecoration;
@property(readonly, nonatomic) DTTimelinePlane *plane; // @synthesize plane=_plane;
- (void).cxx_destruct;
- (id)initWithPlane:(id)arg1 inspectionDecoration:(id)arg2 yPosition:(double)arg3;

@end

@interface DTTimelineRulerBackgroundDecorator : DTTimelineDecorator
{
    NSDictionary *_attributes;
}

- (void).cxx_destruct;
- (void)setDefaultsForPlane:(id)arg1;
- (id)decorateContainer:(struct DTTimelineDecorationContainer *)arg1;
- (id)init;
- (id)initWithTimeLabelAttributes:(id)arg1;

@end

@interface DTTimelineTile : NSObject
{
    CALayer *_layer;
    struct TileMetrics _tileMetrics;
    DTTimelineDecorator *_decorator;
    _DTTimelineTileDecorationOperation *_latestOperation;
    unsigned long long _decorationState;
    unsigned long long _renderState;
    unsigned long long _tileIndex;
}

@property(readonly, nonatomic) unsigned long long tileIndex; // @synthesize tileIndex=_tileIndex;
@property(readonly, nonatomic) unsigned long long renderState; // @synthesize renderState=_renderState;
@property(readonly, nonatomic) unsigned long long decorationState; // @synthesize decorationState=_decorationState;
- (id).cxx_construct;
- (void).cxx_destruct;
- (id)stringSummaries;
- (const struct TileMetrics *)tileMetrics;
- (void)_containerMissedETA:(id)arg1;
- (void)_containerReadyForRedraw:(id)arg1;
- (void)decorate;
- (void)purgeDecorations;
- (struct DynamicRange)dynamicRangeForTimeRange:(struct XRTimeRange)arg1;
- (void)setTileMetrics:(struct TileMetrics *)arg1;
@property(nonatomic) double displayScale;
- (void)dealloc;
- (id)initWithIndex:(unsigned long long)arg1 tileSize:(struct CGSize)arg2 tileMetrics:(struct TileMetrics *)arg3 decorator:(id)arg4;
- (void)discardContentIfPossible;
- (BOOL)isContentDiscarded;
- (id)actionForLayer:(id)arg1 forKey:(id)arg2;
- (void)drawLayer:(id)arg1 inContext:(struct CGContext *)arg2;
- (void)invalidate;
- (void)removeFromSuperlayer;
- (void)attachToSuperlayer:(id)arg1;
- (BOOL)backedByLayer:(id)arg1;
@property(readonly, nonatomic) BOOL displaying;
- (void)layoutWithOffset:(double)arg1;

@end

@interface DTTimelineTileDrawingContext : NSObject
{
    struct CGContext *_cgContext;
    struct TileMetrics _tileMetrics;
    struct CGPath *_defaultColorPath;
    struct unordered_map<unsigned long, std::__1::tuple<NSColor *, CGPath *>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::tuple<NSColor *, CGPath *>>>> _paths;
    NSMutableDictionary *_stringsDictionary;
    NSMutableArray *_clippableStringsArray;
    struct unordered_map<double, NSImage *, std::__1::hash<double>, std::__1::equal_to<double>, std::__1::allocator<std::__1::pair<const double, NSImage *>>> _imageDictionary;
    long long _dynamicRangeLow;
    long long _dynamicRangeHigh;
    double _range;
    double _screenScale;
}

- (id).cxx_construct;
- (void).cxx_destruct;
@property(readonly, nonatomic) const struct TileMetrics *tileMetrics;
- (double)_heightForPlane:(int)arg1;
- (double)_yForBottomOfPlane:(int)arg1;
- (double)_yForTopOfPlane:(int)arg1;
- (double)_heightOfPlane:(int)arg1;
- (void)unlockContext;
- (void)_renderClippableStringsInContext:(struct CGContext *)arg1;
- (void)_renderStringsInContext:(struct CGContext *)arg1;
- (void)_renderImages;
- (void)lockContext:(struct CGContext *)arg1;
- (void)addPlaneConnectionFromPlane:(int)arg1 toPlane:(int)arg2 span:(struct Span)arg3 instantaneous:(_Bool)arg4 color:(id)arg5 sourceAnchorLocation:(unsigned char)arg6 sourceImage:(id)arg7 sourceImageLocation:(unsigned char)arg8 sinkAnchorLocation:(unsigned char)arg9 sinkImage:(id)arg10 sinkImageLocation:(unsigned char)arg11 swapImagesIfInverted:(BOOL)arg12 swapImageLocationsIfInverted:(BOOL)arg13 hideSource:(BOOL)arg14 hideSink:(BOOL)arg15;
- (void)addAttributedString:(id)arg1 span:(struct Span)arg2;
- (void)addAttributedString:(id)arg1 position:(double)arg2;
- (void)addArrayOfIntervalValues:(const long long *)arg1 colors:(const id *)arg2 count:(unsigned int)arg3 span:(struct Span)arg4;
- (void)addIntervalValue:(long long)arg1 color:(id)arg2 icon:(id)arg3 span:(struct Span)arg4;
- (void)addCenteredCircleAtPt:(double)arg1 color:(id)arg2;
- (void)addCapsuleShapeInSpan:(struct Span)arg1 color:(id)arg2;
- (void)addEventIcon:(id)arg1 origin:(double)arg2 multiplicity:(unsigned int)arg3;
- (void)addPointValue:(long long)arg1 color:(id)arg2 position:(double)arg3;
- (void)dealloc;
- (id)initWithTileMetrics:(const struct TileMetrics *)arg1;

@end

@interface DTTimelineTileDrawingContextClippableString : NSObject
{
    NSAttributedString *_attrString;
    double _width;
    struct CGPoint _position;
}

@property(nonatomic) double width; // @synthesize width=_width;
@property(nonatomic) struct CGPoint position; // @synthesize position=_position;
@property(copy, nonatomic) NSAttributedString *attrString; // @synthesize attrString=_attrString;
- (void).cxx_destruct;
- (id)initWithAttributedString:(id)arg1 position:(struct CGPoint)arg2 width:(double)arg3;

@end

@interface DTUserTimeFormatter : NSNumberFormatter
{
}

+ (id)stringForObjectValue:(id)arg1;
+ (id)valueUnitStringForNanoseconds:(unsigned long long)arg1;
+ (id)stringForNanoseconds:(unsigned long long)arg1;
+ (void)initialize;
- (id)stringForObjectValue:(id)arg1;

@end

@interface DTVMUObjectGridGraphViewController : NSViewController <DTObjectGridGraphDataSource, DTObjectGridGraphDelegate>
{
    NSLayoutConstraint *_widthConstraint;
    NSLayoutConstraint *_heightConstraint;
    DVT_VMUDirectedGraph *_invertedDisplayGraph;
    DVT_VMUDirectedGraph *_forwardDisplayGraph;
    DVT_VMUProcessObjectGraph *_sourceGraph;
    BOOL _restrictToPivot;
    id <DTObjectGridGraphDelegate> _delegate;
    struct CGSize _minimumViewportSize;
}

@property(nonatomic) __weak id <DTObjectGridGraphDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) struct CGSize minimumViewportSize; // @synthesize minimumViewportSize=_minimumViewportSize;
@property(readonly, nonatomic) DVT_VMUProcessObjectGraph *graph; // @synthesize graph=_sourceGraph;
- (void).cxx_destruct;
- (void)objectGridGraph:(id)arg1 didDoubleClickReference:(id)arg2;
- (void)objectGridGraph:(id)arg1 didDoubleClickNode:(id)arg2;
- (void)objectGridGraph:(id)arg1 didClickReference:(id)arg2;
- (void)objectGridGraph:(id)arg1 didClickNode:(id)arg2;
- (void)objectGridGraph:(id)arg1 willDisplayReference:(id)arg2;
- (void)objectGridGraph:(id)arg1 willDisplayNode:(id)arg2;
- (unsigned int)enclosingGroupNodeForNode:(unsigned int)arg1;
- (void)enumerateMemberNodesOfGroupNode:(unsigned int)arg1 withBlock:(CDUnknownBlockType)arg2;
- (long long)memberNodeCountForGroupNode:(unsigned int)arg1;
- (void)enumerateIncomingReferencesForNode:(unsigned int)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)enumerateOutgoingReferencesForNode:(unsigned int)arg1 withBlock:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic) DTObjectGridGraph *gridGraphView;
- (void)viewDidLoad;
- (void)loadView;
- (void)displayImmediateReferencesForNode:(unsigned int)arg1 inGraph:(id)arg2;
- (void)displayLeakHierarchyForNode:(unsigned int)arg1 inGraph:(id)arg2;
- (void)displayRootPathsForNode:(unsigned int)arg1 inGraph:(id)arg2;
@property(nonatomic) unsigned int pivotNodeIdentifier;
- (void)setPivotNodeIdentifier:(unsigned int)arg1 animated:(BOOL)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DTVerticalLabelBarGraph : DTBarGraph
{
}

- (long long)_bestNumberOfDivsGuessing:(long long)arg1;
- (struct CGRect)calculateXAxisBoundsWithinBounds:(struct CGRect)arg1;
- (struct CGRect)calculateYAxisBoundsWithinBounds:(struct CGRect)arg1;
- (void)drawYAxis:(struct CGRect)arg1;
- (void)drawXAxis:(struct CGRect)arg1;
- (void)drawBorder:(struct CGRect)arg1;
- (void)drawContent:(struct CGRect)arg1;
- (long long)_maxValue;
- (void)clearCache;

@end

@interface NSArray (DTGraphKitFoundationAdditions)
@property(readonly, nonatomic) id dt_onlyObject;
@end

@interface NSNull (DTGraphKitNullSafety)
- (double)doubleValue;
@end

@interface NSString (ByteStringComparsion)
- (long long)stringByteValue;
- (long long)byteValueCompare:(id)arg1;
@end

@interface _DTTimelineTileContentCacheEntry : NSObject
{
    unsigned long long cost;
    NSMutableSet *objects;
    BOOL visible;
    BOOL discarded;
}

- (void).cxx_destruct;
- (id)init;

@end

@interface _DTTimelineTileContextCBHandler : NSObject <NSCacheDelegate>
{
    struct TimelineViewContext *_owner;
}

- (void)cache:(id)arg1 willEvictObject:(id)arg2;
- (void)_syncMainThreadDiscard:(id)arg1;
- (void)dealloc;
- (id)init;
- (id)initWithContext:(struct TimelineViewContext *)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface _DTTimelineTileDecorationOperation : NSObject
{
    struct unique_ptr<DTTimelineDecorationContainer, std::__1::default_delete<DTTimelineDecorationContainer>> _containerPtr;
    DTTimelineTile *_tile;
    DTTimelineDecorator *_decorator;
    NSOperation *_fillOp;
    NSOperation *_stringSummaryOp;
    NSDate *_graceWindow;
    NSTimer *_timer;
    BOOL _stale;
    BOOL _missedInitialDrawOpportunity;
    DTTimelineInspectionDecorationContainer *_summaryContainer;
}

@property(nonatomic) BOOL missedInitialDrawOpportunity; // @synthesize missedInitialDrawOpportunity=_missedInitialDrawOpportunity;
@property(nonatomic, getter=isStale) BOOL stale; // @synthesize stale=_stale;
@property(readonly, nonatomic) DTTimelineInspectionDecorationContainer *summaryContainer; // @synthesize summaryContainer=_summaryContainer;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)go;
- (void)abandon;
- (void)_drawingFinished;
@property(readonly, nonatomic) BOOL shouldShowPlaceholder;
@property(readonly, nonatomic, getter=isStringSummarizationFinished) BOOL stringSummarizationFinished;
@property(readonly, nonatomic, getter=isDrawingFinished) BOOL drawingFinished;
@property(readonly, nonatomic) struct DTTimelineDecorationContainer *container;
- (void)dealloc;
- (id)initWithTile:(id)arg1 container:(struct DTTimelineDecorationContainer *)arg2 decorator:(id)arg3 eta:(id)arg4;
- (void)_timerFired:(id)arg1;

@end

