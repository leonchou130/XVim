//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Function Pointers

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct _NSRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

#pragma mark Typedef'd Structures

typedef struct {
    long double location;
    long double length;
} CDStruct_b3ff9733;

typedef struct {
    unsigned long long location;
    unsigned long long length;
} CDStruct_91ee6ea3;

#pragma mark -

//
// File: /Applications/Xcode-7GM.app/Contents/SharedFrameworks/HexFiend.framework/Versions/A/HexFiend
// UUID: 3A7CF414-4484-3261-BD69-B2E2BF53F882
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 8195.0.0.0.0
//       Minimum Mac OS X version: 10.10.0
//                    SDK version: 10.11.0
//
// Objective-C Garbage Collection: Unsupported
//
//                       Run path: /Developer/Library/PrivateFrameworks
//                               = /Developer/Library/PrivateFrameworks
//                       Run path: /Developer/Library/Frameworks
//                               = /Developer/Library/Frameworks
//                       Run path: @loader_path/../../../
//                               = /Applications/Xcode-7GM.app/Contents/SharedFrameworks
//

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSMutableCopying
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
@end

@interface HFBTree : NSObject <NSMutableCopying>
{
    unsigned int depth;
    HFBTreeNode *root;
}

- (void)applyFunction:(CDUnknownFunctionPointerType)arg1 toEntriesStartingAtOffset:(unsigned long long)arg2 withUserInfo:(void *)arg3;
- (id)allEntries;
- (id)entryEnumerator;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (void)removeEntryAtOffset:(unsigned long long)arg1;
- (void)removeAllEntries;
- (id)entryContainingOffset:(unsigned long long)arg1 beginningOffset:(unsigned long long *)arg2;
- (void)insertEntry:(id)arg1 atOffset:(unsigned long long)arg2;
- (unsigned long long)length;
- (void)checkIntegrityOfBTreeStructure;
- (void)checkIntegrityOfCachedLengths;
- (void)dealloc;
- (id)init;

@end

@interface HFBTreeNode : NSObject
{
    unsigned long long rc;
    unsigned long long subtreeLength;
    HFBTreeNode *left;
    HFBTreeNode *right;
    id children[10];
}

- (id)shortDescription;
- (void)dealloc;
- (unsigned long long)retainCount;
- (oneway void)release;
- (id)retain;

@end

@interface HFBTreeBranch : HFBTreeNode
{
}

- (id)description;

@end

@interface HFByteArray : NSObject <NSCopying, NSMutableCopying>
{
    unsigned long long changeLockCounter;
    unsigned long long changeGenerationCount;
}

- (void)incrementGenerationOrRaiseIfLockedForSelector:(SEL)arg1;
- (unsigned long long)changeGenerationCount;
- (BOOL)changesAreLocked;
- (void)decrementChangeLockCounter;
- (void)incrementChangeLockCounter;
- (BOOL)_debugIsEqualToData:(id)arg1;
- (BOOL)_debugIsEqual:(id)arg1;
- (unsigned long long)indexOfBytesEqualToBytes:(id)arg1 inRange:(CDStruct_91ee6ea3)arg2 searchingForwards:(BOOL)arg3 trackingProgress:(id)arg4;
- (BOOL)isEqual:(id)arg1;
- (void)deleteBytesInRange:(CDStruct_91ee6ea3)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)subarrayWithRange:(CDStruct_91ee6ea3)arg1;
- (void)insertByteArray:(id)arg1 inRange:(CDStruct_91ee6ea3)arg2;
- (id)byteSliceEnumerator;
- (void)insertByteSlice:(id)arg1 inRange:(CDStruct_91ee6ea3)arg2;
- (void)copyBytes:(char *)arg1 range:(CDStruct_91ee6ea3)arg2;
- (unsigned long long)length;
- (id)byteSlices;
- (id)init;
- (unsigned long long)_byteSearchNaive:(id)arg1 inRange:(CDStruct_91ee6ea3)arg2 forwards:(BOOL)arg3 trackingProgress:(id)arg4;
- (unsigned long long)_byteSearchRollingHash:(id)arg1 inRange:(CDStruct_91ee6ea3)arg2 forwards:(BOOL)arg3 trackingProgress:(id)arg4;
- (unsigned long long)_byteSearchSingle:(unsigned char)arg1 inRange:(CDStruct_91ee6ea3)arg2 forwards:(BOOL)arg3 trackingProgress:(id)arg4;
- (unsigned long long)_byteSearchBoyerMoore:(id)arg1 inRange:(CDStruct_91ee6ea3)arg2 forwards:(BOOL)arg3 trackingProgress:(id)arg4;
- (void)_copyBytes:(char *)arg1 range:(CDStruct_91ee6ea3)arg2 forwards:(BOOL)arg3 inEnclosingRange:(CDStruct_91ee6ea3)arg4;
- (BOOL)clearDependenciesOnRanges:(id)arg1 inFile:(id)arg2;
- (id)rangesOfFileModifiedIfSavedToFile:(id)arg1;
- (BOOL)writeToFile:(id)arg1 trackingProgress:(id)arg2 error:(id *)arg3;

@end

@interface HFBTreeByteArray : HFByteArray
{
    HFBTree *btree;
}

- (id)subarrayWithRange:(CDStruct_91ee6ea3)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (void)insertByteSlice:(id)arg1 inRange:(CDStruct_91ee6ea3)arg2;
- (void)deleteBytesInRange:(CDStruct_91ee6ea3)arg1;
- (void)insertByteSlice:(id)arg1 atOffset:(unsigned long long)arg2;
- (BOOL)fastPathInsertByteSlice:(id)arg1 atOffset:(unsigned long long)arg2;
- (void)copyBytes:(char *)arg1 range:(CDStruct_91ee6ea3)arg2;
- (id)description;
- (id)byteSliceEnumerator;
- (id)byteSlices;
- (unsigned long long)length;
- (void)dealloc;
- (id)init;

@end

@interface HFBTreeEnumerator : NSEnumerator
{
    HFBTreeLeaf *currentLeaf;
    unsigned int childIndex;
}

- (id)nextObject;
- (id)initWithLeaf:(id)arg1;

@end

@interface HFBTreeLeaf : HFBTreeNode
{
}

- (id)description;

@end

@interface HFByteArrayProxiedData : NSData
{
    NSData *serializedData;
    HFByteArray *byteArray;
    unsigned long long length;
}

- (void)getBytes:(void *)arg1 range:(struct _NSRange)arg2;
- (void)getBytes:(void *)arg1 length:(unsigned long long)arg2;
- (void)getBytes:(void *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (const void *)bytes;
- (id)_getRetainedBacking;
- (unsigned long long)length;
- (void)dealloc;
- (id)initWithByteArray:(id)arg1;

@end

@interface HFByteSlice : NSObject
{
    unsigned long long retainCount;
}

- (unsigned long long)retainCount;
- (oneway void)release;
- (id)retain;
- (CDStruct_91ee6ea3)sourceRangeForFile:(id)arg1;
- (BOOL)isSourcedFromFile;
- (id)byteSliceByAppendingSlice:(id)arg1;
- (void)constructNewByteSlicesAboutRange:(CDStruct_91ee6ea3)arg1 first:(id *)arg2 second:(id *)arg3;
- (id)subsliceWithRange:(CDStruct_91ee6ea3)arg1;
- (void)copyBytes:(char *)arg1 range:(CDStruct_91ee6ea3)arg2;
- (unsigned long long)length;
- (id)init;

@end

@interface HFByteSliceFileOperation : NSObject
{
    CDStruct_91ee6ea3 targetRange;
}

+ (id)chainedOperationWithInternalOperations:(id)arg1;
+ (id)internalOperationWithByteSlice:(id)arg1 sourceRange:(CDStruct_91ee6ea3)arg2 targetRange:(CDStruct_91ee6ea3)arg3;
+ (id)externalOperationWithByteSlice:(id)arg1 targetRange:(CDStruct_91ee6ea3)arg2;
+ (id)identityOperationWithByteSlice:(id)arg1 targetRange:(CDStruct_91ee6ea3)arg2;
- (int)writeToFile:(id)arg1 trackingProgress:(id)arg2 error:(id *)arg3;
- (unsigned long long)costToWrite;
- (CDStruct_91ee6ea3)targetRange;
- (CDStruct_91ee6ea3)sourceRange;
- (void)dealloc;
- (id)initWithTargetRange:(CDStruct_91ee6ea3)arg1;

@end

@interface HFByteSliceFileOperationChained : HFByteSliceFileOperation
{
    NSArray *internalOperations;
    unsigned long long totalAllocatedMemory;
    unsigned long long maximumAllocatedMemory;
}

- (void)dealloc;
- (int)writeToFile:(id)arg1 trackingProgress:(id)arg2 error:(id *)arg3;
- (void)queueUpEntriesOverlappedByEntry:(id)arg1 withIncompleteOperations:(id)arg2 context:(id)arg3;
- (int)applyQueueEntry:(id)arg1 toFile:(id)arg2 trackingProgress:(id)arg3;
- (unsigned long long)costToWrite;
- (id)initWithInternalOperations:(id)arg1;

@end

@interface HFByteSliceFileOperationContext : NSObject
{
    unsigned long long softMaxAllocatedMemory;
    unsigned long long totalAllocatedMemory;
    HFFileReference *file;
    HFProgressTracker *progressTracker;
    NSMutableArray *queue;
}

- (unsigned long long)suggestedAllocationLengthForMinimum:(unsigned long long)arg1 maximum:(unsigned long long)arg2;
- (void)freeMemory:(void *)arg1 ofLength:(unsigned long long)arg2;
- (void *)allocateMemoryOfLength:(unsigned long long)arg1;

@end

@interface HFByteSliceFileOperationSimple : HFByteSliceFileOperation
{
    HFByteSlice *slice;
}

- (void)dealloc;
- (id)initWithByteSlice:(id)arg1 targetRange:(CDStruct_91ee6ea3)arg2;

@end

@interface HFByteSliceFileOperationExternal : HFByteSliceFileOperationSimple
{
}

- (int)writeToFile:(id)arg1 trackingProgress:(id)arg2 error:(id *)arg3;
- (unsigned long long)costToWrite;

@end

@interface HFByteSliceFileOperationIdentity : HFByteSliceFileOperationSimple
{
}

- (unsigned long long)costToWrite;

@end

@interface HFByteSliceFileOperationInternal : HFByteSliceFileOperation
{
    HFByteSlice *slice;
    NSMutableArray *remainingTargetRanges;
    CDStruct_91ee6ea3 sourceRange;
}

- (void)addQueueEntriesOverlappedByEntry:(id)arg1 withContext:(id)arg2;
- (unsigned long long)amountOfOverlapForEntry:(id)arg1;
- (void)addQueueEntryWithContext:(id)arg1;
- (id)createQueueEntryWithBuffer:(char *)arg1 ofLength:(unsigned long long)arg2 forFile:(id)arg3 trackingProgress:(id)arg4;
- (unsigned long long)targetLocationForSourceLocation:(unsigned long long)arg1;
- (unsigned long long)sourceLocationForTargetLocation:(unsigned long long)arg1;
- (BOOL)hasRemainingTargetRange;
- (unsigned long long)costToWrite;
- (CDStruct_91ee6ea3)sourceRange;
- (void)dealloc;
- (id)initWithByteSlice:(id)arg1 sourceRange:(CDStruct_91ee6ea3)arg2 targetRange:(CDStruct_91ee6ea3)arg3;
- (id)description;

@end

@interface HFByteSliceFileOperationQueueEntry : NSObject
{
    unsigned long long length;
    unsigned long long offset;
    char *bytes;
    unsigned long long source;
}

@end

@interface HFCancelButton : NSButton
{
}

- (id)initWithCoder:(id)arg1;

@end

@interface HFController : NSObject <NSCoding>
{
    NSMutableArray *representers;
    HFByteArray *byteArray;
    NSMutableArray *selectedContentsRanges;
    CDStruct_91ee6ea3 displayedContentsRange;
    CDStruct_b3ff9733 displayedLineRange;
    unsigned long long bytesPerLine;
    unsigned long long bytesPerColumn;
    NSFont *font;
    double lineHeight;
    unsigned long long currentPropertyChangeToken;
    NSMutableArray *additionalPendingTransactions;
    unsigned long long propertiesToUpdateInCurrentTransaction;
    NSUndoManager *undoManager;
    unsigned long long selectionAnchor;
    CDStruct_91ee6ea3 selectionAnchorRange;
    HFControllerCoalescedUndo *undoCoalescer;
    double pulseSelectionStartTime;
    double pulseSelectionCurrentTime;
    NSTimer *pulseSelectionTimer;
    CDStruct_91ee6ea3 cachedRange;
    NSData *cachedData;
    unsigned long long cachedGenerationIndex;
    struct {
        unsigned int antialias:1;
        unsigned int overwriteMode:1;
        unsigned int editable:1;
        unsigned int selectable:1;
        unsigned int selectionInProgress:1;
        unsigned int shiftExtendSelection:1;
        unsigned int commandExtendSelection:1;
        unsigned int reserved1:25;
        unsigned int reserved2:32;
    } _hfflags;
    id <HFTextColoringDelegate> _coloringDelegate;
}

+ (BOOL)prepareForChangeInFile:(id)arg1 fromWritingByteArray:(id)arg2;
@property(retain) id <HFTextColoringDelegate> coloringDelegate; // @synthesize coloringDelegate=_coloringDelegate;
- (BOOL)requiresOverwriteMode;
- (void)setInOverwriteMode:(BOOL)arg1;
- (BOOL)inOverwriteMode;
- (void)deleteDirection:(long long)arg1;
- (BOOL)insertByteArray:(id)arg1 replacingPreviousBytes:(unsigned long long)arg2 allowUndoCoalescing:(BOOL)arg3;
- (BOOL)_overwriteModeCoreInsertByteArray:(id)arg1 replacingPreviousBytes:(unsigned long long)arg2 allowUndoCoalescing:(BOOL)arg3 outRangeToRemoveFromSelection:(CDStruct_91ee6ea3 *)arg4;
- (BOOL)_insertionModeCoreInsertByteArray:(id)arg1 replacingPreviousBytes:(unsigned long long)arg2 allowUndoCoalescing:(BOOL)arg3 outNewSingleSelectedRange:(CDStruct_91ee6ea3 *)arg4;
- (BOOL)insertData:(id)arg1 replacingPreviousBytes:(unsigned long long)arg2 allowUndoCoalescing:(BOOL)arg3;
- (void)replaceByteArray:(id)arg1;
- (void)deleteSelection;
- (void)moveToLineBoundaryInDirection:(long long)arg1 andModifySelection:(BOOL)arg2;
- (void)moveInDirection:(long long)arg1 withGranularity:(long long)arg2 andModifySelection:(BOOL)arg3;
- (void)moveInDirection:(long long)arg1 byByteCount:(unsigned long long)arg2 withSelectionTransformation:(long long)arg3 usingAnchor:(BOOL)arg4;
- (void)_activateTypingUndoCoalescingForReplacingRange:(CDStruct_91ee6ea3)arg1 withDataOfLength:(unsigned long long)arg2;
- (void)_activateTypingUndoCoalescingForOverwritingRange:(CDStruct_91ee6ea3)arg1;
- (void)_performTypingUndo:(id)arg1;
- (void)_endTypingUndoCoalescingIfActive;
- (void)_commandValueObjectsReplaceBytesAfterBytesFromBeginning:(id)arg1 upToBytesFromEnd:(id)arg2 withByteArray:(id)arg3;
- (void)_commandReplaceBytesAfterBytesFromBeginning:(unsigned long long)arg1 upToBytesFromEnd:(unsigned long long)arg2 withByteArray:(id)arg3;
- (void)_commandInsertByteArrays:(id)arg1 inRanges:(id)arg2 withSelectionAction:(int)arg3;
- (void)_commandDeleteRanges:(id)arg1;
- (BOOL)_registerCondemnedRangesForUndo:(id)arg1 selectingRangesAfterUndo:(BOOL)arg2;
- (void)_shiftSelectionInDirection:(long long)arg1 byAmount:(unsigned long long)arg2;
- (void)_extendSelectionInDirection:(long long)arg1 byAmount:(unsigned long long)arg2;
- (void)_moveDirectionDiscardingSelection:(long long)arg1 byAmount:(unsigned long long)arg2;
- (void)_removeRangeFromSelection:(CDStruct_91ee6ea3)arg1 withCursorLocationIfAllSelectionRemoved:(unsigned long long)arg2;
- (void)_addRangeToSelection:(CDStruct_91ee6ea3)arg1;
- (void)selectAll:(id)arg1;
- (void)setSelectedContentsRanges:(id)arg1;
- (void)scrollWithScrollEvent:(id)arg1;
- (void)scrollByLines:(long double)arg1;
- (void)pulseSelection;
- (void)firePulseTimer:(id)arg1;
- (double)selectionPulseAmount;
- (void)endSelectionWithEvent:(id)arg1 forByteIndex:(unsigned long long)arg2;
- (void)continueSelectionWithEvent:(id)arg1 forByteIndex:(unsigned long long)arg2;
- (void)beginSelectionWithEvent:(id)arg1 forByteIndex:(unsigned long long)arg2;
- (CDStruct_91ee6ea3)_telescopeSelectionRangeInDirection:(long long)arg1;
- (unsigned long long)maximumSelectionLocation;
- (unsigned long long)minimumSelectionLocation;
- (unsigned long long)_maximumSelectionLocation;
- (unsigned long long)_minimumSelectionLocation;
- (CDStruct_91ee6ea3)_flattenSelectionRange;
- (id)byteArrayForSelectedContentsRanges;
- (void)representer:(id)arg1 changedProperties:(unsigned long long)arg2;
- (void)_updateBytesPerLine;
- (void)setEditable:(BOOL)arg1;
- (BOOL)editable;
- (unsigned long long)bytesPerLine;
- (id)undoManager;
- (void)setUndoManager:(id)arg1;
- (void)_addUndoManagerNotifications;
- (void)_removeUndoManagerNotifications;
- (void)_undoNotification:(id)arg1;
- (id)byteArray;
- (void)setByteArray:(id)arg1;
- (void)_clipSelectedContentsRangesToLength:(unsigned long long)arg1;
- (void)maximizeVisibilityOfContentsRange:(CDStruct_91ee6ea3)arg1;
- (void)_ensureVisibilityOfLocation:(unsigned long long)arg1;
- (void)_updateDisplayedRange;
- (void)copyBytes:(char *)arg1 range:(CDStruct_91ee6ea3)arg2;
- (id)dataForRange:(CDStruct_91ee6ea3)arg1;
- (unsigned long long)contentsLength;
- (id)selectedContentsRanges;
- (void)_setSingleSelectedContentsRange:(CDStruct_91ee6ea3)arg1;
- (id)_invertedSelectedContentsRanges;
- (BOOL)_shouldInvertSelectedRangesByAnchorRange;
- (unsigned long long)bytesPerColumn;
- (void)setBytesPerColumn:(unsigned long long)arg1;
- (void)setShouldAntialias:(BOOL)arg1;
- (BOOL)shouldAntialias;
- (void)setFont:(id)arg1;
- (id)font;
- (double)lineHeight;
- (void)_assertMaxRangeIsLessThanLineCount:(CDStruct_b3ff9733)arg1;
- (void)setDisplayedLineRange:(CDStruct_b3ff9733)arg1;
- (CDStruct_b3ff9733)displayedLineRange;
- (unsigned long long)totalLineCount;
- (CDStruct_91ee6ea3)_maximumDisplayedRangeSet;
- (void)invalidateController;
- (void)removeRepresenter:(id)arg1;
- (void)addRepresenter:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)endPropertyChangeTransaction:(unsigned long long)arg1;
- (unsigned long long)beginPropertyChangeTransaction;
- (void)_addPropertyChangeBits:(unsigned long long)arg1;
- (void)_insertPropertyChangeFence;
- (void)_firePropertyChanges;
- (void)notifyRepresentersOfChanges:(unsigned long long)arg1;
- (id)representers;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)init;
- (void)_sharedInit;

@end

@interface HFControllerCoalescedUndo : NSObject
{
    unsigned long long anchorPoint;
    unsigned long long actionPoint;
    HFByteArray *deletedData;
    BOOL byteArrayWasCopied;
}

- (id)invertWithByteArray:(id)arg1;
- (id)deletedData;
- (CDStruct_91ee6ea3)rangeToReplace;
- (void)deleteDataOfLength:(unsigned long long)arg1 withByteArray:(id)arg2;
- (void)appendDataOfLength:(unsigned long long)arg1;
- (void)overwriteDataInRange:(CDStruct_91ee6ea3)arg1 withByteArray:(id)arg2;
- (void)_copyByteArray;
- (BOOL)canCoalesceOverwriteAtLocation:(unsigned long long)arg1;
- (BOOL)canCoalesceDeleteInRange:(CDStruct_91ee6ea3)arg1;
- (BOOL)canCoalesceAppendInRange:(CDStruct_91ee6ea3)arg1;
- (void)dealloc;
- (id)initWithOverwrittenData:(id)arg1 atAnchorLocation:(unsigned long long)arg2;
- (id)initWithReplacedData:(id)arg1 atAnchorLocation:(unsigned long long)arg2;

@end

@interface HFCustomScroller : NSScroller
{
}

- (void)setFrame:(struct CGRect)arg1;

@end

@interface HFFileByteSlice : HFByteSlice
{
    HFFileReference *fileReference;
    unsigned long long offset;
    unsigned long long length;
}

- (CDStruct_91ee6ea3)sourceRangeForFile:(id)arg1;
- (BOOL)isSourcedFromFile;
- (void)dealloc;
- (id)subsliceWithRange:(CDStruct_91ee6ea3)arg1;
- (void)copyBytes:(char *)arg1 range:(CDStruct_91ee6ea3)arg2;
- (unsigned long long)length;
- (id)initWithFile:(id)arg1 offset:(unsigned long long)arg2 length:(unsigned long long)arg3;
- (id)initWithFile:(id)arg1;

@end

@interface HFFileReference : NSObject
{
    int fileDescriptor;
    int device;
    unsigned long long fileLength;
    unsigned long long inode;
    BOOL isWritable;
}

- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (BOOL)setLength:(unsigned long long)arg1 error:(id *)arg2;
- (unsigned long long)length;
- (void)dealloc;
- (void)finalize;
- (void)close;
- (int)writeBytes:(const char *)arg1 length:(unsigned long long)arg2 to:(unsigned long long)arg3;
- (void)readBytes:(char *)arg1 length:(unsigned long long)arg2 from:(unsigned long long)arg3;
- (id)initWritableWithPath:(id)arg1;
- (id)initWithPath:(id)arg1;
- (id)initWritableWithPath:(id)arg1 error:(id *)arg2;
- (id)initWithPath:(id)arg1 error:(id *)arg2;
- (id)sharedInitWithPath:(id)arg1 error:(id *)arg2;

@end

@interface HFFullMemoryByteArray : HFByteArray
{
    NSMutableData *data;
}

- (void)insertByteSlice:(id)arg1 inRange:(CDStruct_91ee6ea3)arg2;
- (id)byteSlices;
- (id)subarrayWithRange:(CDStruct_91ee6ea3)arg1;
- (void)copyBytes:(char *)arg1 range:(CDStruct_91ee6ea3)arg2;
- (unsigned long long)length;
- (void)dealloc;
- (id)init;

@end

@interface HFFullMemoryByteSlice : HFByteSlice
{
    NSData *data;
}

- (id)subsliceWithRange:(CDStruct_91ee6ea3)arg1;
- (void)copyBytes:(char *)arg1 range:(CDStruct_91ee6ea3)arg2;
- (unsigned long long)length;
- (void)dealloc;
- (id)initWithData:(id)arg1;

@end

@interface HFPasteboardOwner : NSObject
{
    HFByteArray *byteArray;
    NSPasteboard *pasteboard;
    unsigned long long bytesPerLine;
    NSWindow *progressTrackingWindow;
    NSProgressIndicator *progressTrackingIndicator;
    NSTextField *progressTrackingDescriptionTextField;
    HFProgressTracker *progressTracker;
    unsigned long long dataAmountToCopy;
    BOOL retainedSelfOnBehalfOfPboard;
    BOOL backgroundCopyOperationFinished;
    BOOL didStartModalSessionForBackgroundCopyOperation;
}

+ (id)uuid;
+ (void)prepareCommonPasteboardsForChangeInFileNotification:(id)arg1;
+ (id)unpackByteArrayFromPasteboard:(id)arg1;
+ (id)_unpackByteArrayFromDictionary:(id)arg1;
+ (id)ownPasteboard:(id)arg1 forByteArray:(id)arg2 withTypes:(id)arg3;
+ (void)initialize;
- (unsigned long long)amountToCopyForDataLength:(unsigned long long)arg1 stringLength:(unsigned long long)arg2;
- (unsigned long long)stringLengthForDataLength:(unsigned long long)arg1;
- (unsigned long long)bytesPerLine;
- (void)setBytesPerLine:(unsigned long long)arg1;
- (void)pasteboard:(id)arg1 provideDataForType:(id)arg2;
- (id)byteArray;
- (void)pasteboardChangedOwner:(id)arg1;
- (void)requestCancel:(id)arg1;
- (BOOL)moveDataWithProgressReportingToPasteboard:(id)arg1 forType:(id)arg2;
- (void)beginModalSessionForBackgroundCopyOperation:(id)arg1;
- (void)backgroundMoveDataFinished:(id)arg1;
- (void)backgroundMoveDataToPasteboard:(id)arg1;
- (void)writeDataInBackgroundToPasteboard:(id)arg1 ofLength:(unsigned long long)arg2 forType:(id)arg3 trackingProgress:(id)arg4;
- (void)moveDataToPasteboardWithProgressReporting:(SEL)arg1 userInfo:(id)arg2;
- (void)dealloc;
- (void)changeInFileNotification:(id)arg1;
- (void)tearDownPasteboardReferenceIfExists;
- (id)initWithPasteboard:(id)arg1 forByteArray:(id)arg2 withTypes:(id)arg3;

@end

@interface HFHexPasteboardOwner : HFPasteboardOwner
{
}

- (unsigned long long)stringLengthForDataLength:(unsigned long long)arg1;
- (void)writeDataInBackgroundToPasteboard:(id)arg1 ofLength:(unsigned long long)arg2 forType:(id)arg3 trackingProgress:(id)arg4;

@end

@interface HFRepresenter : NSObject <NSCoding>
{
    id view;
    HFController *controller;
    struct CGPoint layoutPosition;
}

+ (struct CGPoint)defaultLayoutPosition;
- (void)invalidateRepresenter;
- (struct CGPoint)layoutPosition;
- (void)setLayoutPosition:(struct CGPoint)arg1;
- (void)representerChangedProperties:(unsigned long long)arg1;
- (void)selectAll:(id)arg1;
- (double)maximumAvailableLinesForViewHeight:(double)arg1;
- (double)minimumViewWidthForBytesPerLine:(unsigned long long)arg1;
- (unsigned long long)maximumBytesPerLineForViewWidth:(double)arg1;
- (unsigned long long)bytesPerColumn;
- (unsigned long long)bytesPerLine;
- (void)controllerDidChange:(unsigned long long)arg1;
- (void)_setController:(id)arg1;
- (id)controller;
- (id)createView;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)init;
- (void)initializeView;
- (id)view;

@end

@interface HFTextRepresenter : HFRepresenter
{
    BOOL behavesAsTextField;
    NSArray *rowBackgroundColors;
    NSColor *textColor;
    NSColor *textSelectionColor;
}

- (BOOL)behavesAsTextField;
- (void)setBehavesAsTextField:(BOOL)arg1;
- (void)setRowBackgroundColors:(id)arg1;
- (id)rowBackgroundColors;
- (void)setTextSelectionColor:(id)arg1;
- (id)textSelectionColor;
- (void)setTextColor:(id)arg1;
- (id)textColor;
- (BOOL)pasteBytesFromPasteboard:(id)arg1;
- (BOOL)canCut;
- (BOOL)canPasteFromPasteboard:(id)arg1;
- (id)dataFromPasteboardString:(id)arg1;
- (void)cutSelectedBytesToPasteboard:(id)arg1;
- (void)copySelectedBytesToPasteboard:(id)arg1;
- (void)insertText:(id)arg1;
- (void)endSelectionWithEvent:(id)arg1 forCharacterIndex:(unsigned long long)arg2;
- (void)continueSelectionWithEvent:(id)arg1 forCharacterIndex:(unsigned long long)arg2;
- (void)beginSelectionWithEvent:(id)arg1 forCharacterIndex:(unsigned long long)arg2;
- (unsigned long long)byteIndexForCharacterIndex:(unsigned long long)arg1;
- (id)displayedSelectedContentsRanges;
- (double)minimumViewWidthForBytesPerLine:(unsigned long long)arg1;
- (unsigned long long)maximumBytesPerLineForViewWidth:(double)arg1;
- (double)maximumAvailableLinesForViewHeight:(double)arg1;
- (void)controllerDidChange:(unsigned long long)arg1;
- (double)selectionPulseAmount;
- (void)selectAll:(id)arg1;
- (void)scrollWheel:(id)arg1;
- (void)initializeView;
- (void)updateText;
- (CDStruct_91ee6ea3)entireDisplayedRange;
- (unsigned long long)byteArrayDataStringType;
- (id)createView;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)init;
- (Class)_textViewClass;
- (void)swapWithMark:(id)arg1;
- (void)selectToMark:(id)arg1;
- (void)deleteToMark:(id)arg1;
- (void)setMark:(id)arg1;
- (void)complete:(id)arg1;
- (void)yank:(id)arg1;
- (void)deleteBackwardByDecomposingPreviousCharacter:(id)arg1;
- (void)capitalizeWord:(id)arg1;
- (void)lowercaseWord:(id)arg1;
- (void)uppercaseWord:(id)arg1;
- (void)changeCaseOfLetter:(id)arg1;
- (void)insertContainerBreak:(id)arg1;
- (void)insertLineBreak:(id)arg1;
- (void)insertTabIgnoringFieldEditor:(id)arg1;
- (void)insertNewlineIgnoringFieldEditor:(id)arg1;
- (void)insertParagraphSeparator:(id)arg1;
- (void)indent:(id)arg1;
- (void)selectWord:(id)arg1;
- (void)selectLine:(id)arg1;
- (void)selectParagraph:(id)arg1;
- (void)transposeWords:(id)arg1;
- (void)transpose:(id)arg1;
- (void)scrollLineDown:(id)arg1;
- (void)scrollLineUp:(id)arg1;
- (void)insertBacktab:(id)arg1;
- (void)insertTab:(id)arg1;
- (void)centerSelectionInVisibleArea:(id)arg1;
- (void)pageUp:(id)arg1;
- (void)pageDown:(id)arg1;
- (void)scrollPageUp:(id)arg1;
- (void)scrollPageDown:(id)arg1;
- (void)moveToEndOfParagraphAndModifySelection:(id)arg1;
- (void)moveToBeginningOfParagraphAndModifySelection:(id)arg1;
- (void)moveToEndOfParagraph:(id)arg1;
- (void)moveToBeginningOfParagraph:(id)arg1;
- (void)moveToEndOfDocumentAndModifySelection:(id)arg1;
- (void)moveToBeginningOfDocumentAndModifySelection:(id)arg1;
- (void)moveToEndOfLineAndModifySelection:(id)arg1;
- (void)moveToBeginningOfLineAndModifySelection:(id)arg1;
- (void)moveToEndOfDocument:(id)arg1;
- (void)moveToBeginningOfDocument:(id)arg1;
- (void)moveToEndOfLine:(id)arg1;
- (void)moveToBeginningOfLine:(id)arg1;
- (void)deleteToEndOfParagraph:(id)arg1;
- (void)deleteToBeginningOfParagraph:(id)arg1;
- (void)deleteToEndOfLine:(id)arg1;
- (void)deleteToBeginningOfLine:(id)arg1;
- (void)delete:(id)arg1;
- (void)deleteWordBackward:(id)arg1;
- (void)deleteWordForward:(id)arg1;
- (void)deleteForward:(id)arg1;
- (void)deleteBackward:(id)arg1;
- (void)moveWordLeftAndModifySelection:(id)arg1;
- (void)moveWordRightAndModifySelection:(id)arg1;
- (void)moveWordLeft:(id)arg1;
- (void)moveWordRight:(id)arg1;
- (void)moveWordBackwardAndModifySelection:(id)arg1;
- (void)moveWordForwardAndModifySelection:(id)arg1;
- (void)moveForwardAndModifySelection:(id)arg1;
- (void)moveBackwardAndModifySelection:(id)arg1;
- (void)moveWordBackward:(id)arg1;
- (void)moveWordForward:(id)arg1;
- (void)moveBackward:(id)arg1;
- (void)moveForward:(id)arg1;
- (void)moveDownAndModifySelection:(id)arg1;
- (void)moveUpAndModifySelection:(id)arg1;
- (void)moveLeftAndModifySelection:(id)arg1;
- (void)moveRightAndModifySelection:(id)arg1;
- (void)moveDown:(id)arg1;
- (void)moveUp:(id)arg1;
- (void)moveLeft:(id)arg1;
- (void)moveRight:(id)arg1;

@end

@interface HFHexTextRepresenter : HFTextRepresenter
{
    unsigned long long omittedNybbleLocation;
    unsigned char unpartneredLastNybble;
}

+ (struct CGPoint)defaultLayoutPosition;
- (void)copySelectedBytesToPasteboard:(id)arg1;
- (void)controllerDidChange:(unsigned long long)arg1;
- (id)dataFromPasteboardString:(id)arg1;
- (void)insertText:(id)arg1;
- (BOOL)_canInsertText:(id)arg1;
- (BOOL)_insertionShouldDeleteLastNybble;
- (void)_clearOmittedNybble;
- (void)initializeView;
- (Class)_textViewClass;

@end

@interface HFLayoutRepresenter : HFRepresenter
{
    NSMutableArray *representers;
    BOOL maximizesBytesPerLine;
}

- (void)controllerDidChange:(unsigned long long)arg1;
- (double)minimumViewWidthForLayoutInProposedWidth:(double)arg1;
- (BOOL)maximizesBytesPerLine;
- (void)setMaximizesBytesPerLine:(BOOL)arg1;
- (id)createView;
- (void)initializeView;
- (void)frameChanged:(id)arg1;
- (void)removeRepresenter:(id)arg1;
- (void)addRepresenter:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)invalidateRepresenter;
- (void)dealloc;
- (id)init;
- (id)representers;
- (void)performLayout;
- (void)_distributeVerticalSpace:(double)arg1 toArraysOfLayoutInfos:(id)arg2;
- (BOOL)_addVerticalHeight:(double)arg1 andOffset:(double)arg2 toLayoutInfos:(id)arg3;
- (BOOL)_anyLayoutInfoIsVerticallyResizable:(id)arg1;
- (unsigned long long)_computeBytesPerLineForArraysOfLayoutInfos:(id)arg1 forLayoutInRect:(struct CGRect)arg2;
- (double)minimumViewWidthForBytesPerLine:(unsigned long long)arg1;
- (void)_layoutInfosHorizontally:(id)arg1 inRect:(struct CGRect)arg2 withBytesPerLine:(unsigned long long)arg3;
- (void)_applyYLocation:(double)arg1 andMinHeight:(double)arg2 toInfos:(id)arg3;
- (double)_computeMinHeightForLayoutInfos:(id)arg1;
- (struct CGRect)boundsRectForLayout;
- (id)arraysOfLayoutInfos;

@end

@interface HFLineCountingRepresenter : HFRepresenter
{
    double lineHeight;
    unsigned long long digitsToRepresentContentsLength;
    unsigned long long minimumDigitCount;
    unsigned long long lineNumberFormat;
    double preferredWidth;
    double digitAdvance;
}

+ (struct CGPoint)defaultLayoutPosition;
- (void)setStartingLineNumber:(unsigned long long)arg1;
- (unsigned long long)digitCount;
- (unsigned long long)minimumDigitCount;
- (void)setMinimumDigitCount:(unsigned long long)arg1;
- (void)controllerDidChange:(unsigned long long)arg1;
- (void)initializeView;
- (void)cycleLineNumberFormat;
- (void)setLineNumberFormat:(unsigned long long)arg1;
- (unsigned long long)lineNumberFormat;
- (double)minimumViewWidthForBytesPerLine:(unsigned long long)arg1;
- (void)updateMinimumViewWidth;
- (double)preferredWidth;
- (void)updateLineRangeToDraw;
- (void)updateBytesPerLine;
- (void)updateLineNumberFormat;
- (void)updateFontAndLineHeight;
- (void)updateDigitAdvanceWithFont:(id)arg1;
- (void)postMinimumViewWidthChangedNotification;
- (id)createView;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)init;

@end

@interface HFLineCountingView : NSView
{
    NSFont *font;
    double lineHeight;
    CDStruct_b3ff9733 lineRangeToDraw;
    NSLayoutManager *layoutManager;
    NSTextStorage *textStorage;
    NSTextContainer *textContainer;
    NSDictionary *textAttributes;
    HFLineCountingRepresenter *representer;
    unsigned long long bytesPerLine;
    unsigned long long storedLineIndex;
    unsigned long long storedLineCount;
    unsigned long long lineNumberFormat;
    BOOL useStringDrawingPath;
    unsigned long long _startingLineNumber;
}

+ (unsigned long long)digitsRequiredToDisplayLineNumber:(unsigned long long)arg1 inFormat:(unsigned long long)arg2;
- (id)representer;
- (void)setRepresenter:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)setFrameSize:(struct CGSize)arg1;
- (double)lineHeight;
- (void)setLineHeight:(double)arg1;
- (id)font;
- (void)setFont:(id)arg1;
- (BOOL)canUseStringDrawingPathForFont:(id)arg1;
- (unsigned long long)lineNumberFormat;
@property unsigned long long startingLineNumber; // @synthesize startingLineNumber=_startingLineNumber;
- (void)setLineNumberFormat:(unsigned long long)arg1;
- (unsigned long long)bytesPerLine;
- (void)setBytesPerLine:(unsigned long long)arg1;
- (CDStruct_b3ff9733)lineRangeToDraw;
- (void)setLineRangeToDraw:(CDStruct_b3ff9733)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)drawLineNumbersWithClip:(struct CGRect)arg1;
- (void)drawLineNumbersWithClipFullLayoutManager:(struct CGRect)arg1;
- (void)drawLineNumbersWithClipSingleStringCellDrawing:(struct CGRect)arg1;
- (void)drawLineNumbersWithClipSingleStringDrawing:(struct CGRect)arg1;
- (void)updateLayoutManagerWithLineIndex:(unsigned long long)arg1 lineCount:(unsigned long long)arg2;
- (id)createLineStringForRange:(CDStruct_91ee6ea3)arg1;
- (unsigned long long)characterCountForLineRange:(CDStruct_91ee6ea3)arg1;
- (void)drawLineNumbersWithClipStringDrawing:(struct CGRect)arg1;
- (void)drawLineNumbersWithClipLayoutManagerPerLine:(struct CGRect)arg1;
- (void)drawDividerWithClip:(struct CGRect)arg1;
- (void)drawGradientWithClip:(struct CGRect)arg1;
- (void)getLineNumberFormatString:(char *)arg1 length:(unsigned long long)arg2;
- (BOOL)isFlipped;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)_sharedInitLineCountingView;

@end

@interface HFObjectGraph : NSObject
{
    struct __CFDictionary *graph;
    NSMutableArray *containedObjects;
}

- (id)topologicallySortObjects:(id)arg1;
- (id)stronglyConnectedComponentsForObjects:(id)arg1;
- (id)dependenciesForObject:(id)arg1;
- (BOOL)object:(id)arg1 hasDependency:(id)arg2;
- (void)addDependency:(id)arg1 forObject:(id)arg2;
- (void)dealloc;
- (id)init;

@end

@interface HFProgressTracker : NSObject
{
    unsigned long long currentProgress;
    int cancelRequested;
    unsigned long long maxProgress;
    NSProgressIndicator *progressIndicator;
    NSTimer *progressTimer;
    double lastSetValue;
    NSDictionary *userInfo;
    id delegate;
}

- (id)userInfo;
- (void)setUserInfo:(id)arg1;
- (void)noteFinished:(id)arg1;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (void)dealloc;
- (void)requestCancel:(id)arg1;
- (void)endTrackingProgress;
- (void)beginTrackingProgress;
- (void)_updateProgress:(id)arg1;
- (id)progressIndicator;
- (void)setProgressIndicator:(id)arg1;
- (unsigned long long)maxProgress;
- (void)setMaxProgress:(unsigned long long)arg1;

@end

@interface HFRandomDataByteSlice : HFByteSlice
{
    unsigned long long start;
    unsigned long long length;
    unsigned char randomizer;
}

- (id)subsliceWithRange:(CDStruct_91ee6ea3)arg1;
- (void)copyBytes:(char *)arg1 range:(CDStruct_91ee6ea3)arg2;
- (unsigned long long)length;
- (id)initWithRandomDataLength:(unsigned long long)arg1;

@end

@interface HFRangeWrapper : NSObject <NSCopying>
{
    CDStruct_91ee6ea3 range;
}

+ (void)getRanges:(CDStruct_91ee6ea3 *)arg1 fromArray:(id)arg2;
+ (id)organizeAndMergeRanges:(id)arg1;
+ (id)withRanges:(const CDStruct_91ee6ea3 *)arg1 count:(unsigned long long)arg2;
+ (id)withRange:(CDStruct_91ee6ea3)arg1;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (CDStruct_91ee6ea3)HFRange;

@end

@interface HFRepeatingDataByteSlice : HFByteSlice
{
    unsigned long long start;
    unsigned long long length;
}

+ (void)initialize;
- (id)subsliceWithRange:(CDStruct_91ee6ea3)arg1;
- (void)copyBytes:(char *)arg1 range:(CDStruct_91ee6ea3)arg2;
- (unsigned long long)length;
- (id)initWithRepeatingDataLength:(unsigned long long)arg1;

@end

@interface HFRepresenterTextView : NSView
{
    HFTextRepresenter *representer;
    NSArray *cachedSelectedRanges;
    NSFont *font;
    NSData *data;
    double verticalOffset;
    double horizontalContainerInset;
    double defaultLineHeight;
    double pulseStartTime;
    NSTimer *pulseTimer;
    NSTimer *caretTimer;
    NSWindow *pulseWindow;
    struct CGRect pulseWindowBaseFrameInScreenCoordinates;
    struct CGRect lastDrawnCaretRect;
    struct CGRect caretRectToDraw;
    unsigned long long bytesBetweenVerticalGuides;
    unsigned long long startingLineBackgroundColorIndex;
    NSArray *rowBackgroundColors;
    struct {
        unsigned int antialias:1;
        unsigned int editable:1;
        unsigned int caretVisible:1;
        unsigned int registeredForAppNotifications:1;
        unsigned int withinMouseDown:1;
        unsigned int receivedMouseUp:1;
        unsigned int reserved1:26;
        unsigned int reserved2:32;
    } _hftvflags;
}

- (BOOL)validateMenuItem:(id)arg1;
- (void)cut:(id)arg1;
- (void)copy:(id)arg1;
- (void)paste:(id)arg1;
- (SEL)_pasteboardOwnerStringTypeWritingSelector;
- (BOOL)_selectionIsNonEmpty;
- (void)selectAll:(id)arg1;
- (void)doCommandBySelector:(SEL)arg1;
- (BOOL)handleCommand:(SEL)arg1;
- (void)insertText:(id)arg1;
- (void)scrollWheel:(id)arg1;
- (void)keyDown:(id)arg1;
- (void)mouseUp:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)mouseDown:(id)arg1;
- (unsigned long long)characterAtPointForSelection:(struct CGPoint)arg1;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)viewDidMoveToWindow;
- (void)_windowDidChangeKeyStatus:(id)arg1;
- (BOOL)isWithinMouseDown;
- (BOOL)showsFocusRing;
- (BOOL)behavesAsTextField;
- (void)setShouldAntialias:(BOOL)arg1;
- (BOOL)shouldAntialias;
- (void)setEditable:(BOOL)arg1;
- (BOOL)isEditable;
- (double)minimumViewWidthForBytesPerLine:(unsigned long long)arg1;
- (unsigned long long)maximumBytesPerLineForViewWidth:(double)arg1;
- (double)totalAdvanceForBytesInRange:(struct _NSRange)arg1;
- (double)advancePerColumn;
- (double)advanceBetweenColumns;
- (double)advancePerByte;
- (void)setFrameSize:(struct CGSize)arg1;
- (double)maximumAvailableLinesForViewHeight:(double)arg1;
- (unsigned long long)availableLineCount;
- (void)drawRect:(struct CGRect)arg1;
- (void)drawFocusRingWithClip:(struct CGRect)arg1;
- (void)drawTextWithClip:(struct CGRect)arg1 restrictingToTextInRanges:(id)arg2;
- (void)extractGlyphsForBytes:(const char *)arg1 range:(struct _NSRange)arg2 intoArray:(unsigned short *)arg3 advances:(struct CGSize *)arg4 withInclusionRanges:(id)arg5 initialTextOffset:(double *)arg6 resultingGlyphCount:(unsigned long long *)arg7;
- (void)extractGlyphsForBytes:(const char *)arg1 count:(unsigned long long)arg2 offsetIntoLine:(unsigned long long)arg3 intoArray:(unsigned short *)arg4 advances:(struct CGSize *)arg5 resultingGlyphCount:(unsigned long long *)arg6;
- (void)drawGlyphs:(unsigned short *)arg1 withAdvances:(struct CGSize *)arg2 count:(unsigned long long)arg3;
- (unsigned long long)maximumGlyphCountForByteCount:(unsigned long long)arg1;
- (void)drawVerticalGuideLines:(struct CGRect)arg1;
- (void)_drawLineBackgrounds:(struct CGRect)arg1 withLineHeight:(double)arg2 maxLines:(unsigned long long)arg3;
- (unsigned long long)bytesPerColumn;
- (unsigned long long)bytesPerLine;
- (id)backgroundColorForLine:(unsigned long long)arg1;
- (id)backgroundColorForEmptySpace;
- (void)dealloc;
- (id)representer;
- (BOOL)isFlipped;
- (void)setStartingLineBackgroundColorIndex:(unsigned long long)arg1;
- (unsigned long long)startingLineBackgroundColorIndex;
- (double)verticalOffset;
- (void)setVerticalOffset:(double)arg1;
- (void)setData:(id)arg1;
- (id)data;
- (id)font;
- (double)lineHeight;
- (void)setFont:(id)arg1;
- (unsigned long long)bytesBetweenVerticalGuides;
- (void)setBytesBetweenVerticalGuides:(unsigned long long)arg1;
- (void)setHorizontalContainerInset:(double)arg1;
- (double)horizontalContainerInset;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithRepresenter:(id)arg1;
- (BOOL)resignFirstResponder;
- (BOOL)becomeFirstResponder;
- (BOOL)hasVisibleDisplayedSelectedContentsRange;
- (BOOL)acceptsFirstResponder;
- (void)pulseSelection;
- (void)drawSelectionIfNecessaryWithClip:(struct CGRect)arg1;
- (BOOL)shouldHaveForegroundHighlightColor;
- (void)drawCaretIfNecessaryWithClip:(struct CGRect)arg1;
- (void)updateSelectionPulse;
- (void)fadePulseWindowTimer:(id)arg1;
- (void)drawPulseBackgroundInRect:(struct CGRect)arg1;
- (void)updateSelectedRanges;
- (id)_indexSetOfLinesNeedingRedrawWhenChangingSelectionFromRanges:(id)arg1 toRanges:(id)arg2;
- (void)_addLinesFromRanges:(const struct _NSRange *)arg1 count:(unsigned long long)arg2 toIndexSet:(id)arg3;
- (void)_linesWithParityChangesFromRanges:(const struct _NSRange *)arg1 count:(unsigned long long)arg2 toRanges:(const struct _NSRange *)arg3 count:(unsigned long long)arg4 intoIndexSet:(id)arg5;
- (struct CGRect)_rectForLineRange:(struct _NSRange)arg1;
- (struct _NSRange)_lineRangeForContentsRanges:(id)arg1;
- (void)_forceCaretOnIfHasCaretTimer;
- (void)_updateCaretTimer;
- (void)_updateCaretTimerWithFirstResponderStatus:(BOOL)arg1;
- (void)_blinkCaret:(id)arg1;
- (struct CGRect)caretRect;
- (unsigned long long)indexOfCharacterAtPoint:(struct CGPoint)arg1;
- (struct CGPoint)originForCharacterAtByteIndex:(unsigned long long)arg1;
- (BOOL)_shouldHaveCaretTimer;
- (id)displayedSelectedContentsRanges;
- (unsigned long long)_glyphsForString:(id)arg1 withGeneratingTextView:(id)arg2 glyphs:(unsigned short *)arg3;

@end

@interface HFRepresenterHexTextView : HFRepresenterTextView
{
    unsigned short glyphTable[16];
    unsigned short ligatureTable[256];
    double glyphAdvancement;
    double spaceAdvancement;
}

- (unsigned long long)maximumGlyphCountForByteCount:(unsigned long long)arg1;
- (double)advanceBetweenColumns;
- (double)advancePerByte;
- (void)extractGlyphsForBytes:(const char *)arg1 count:(unsigned long long)arg2 offsetIntoLine:(unsigned long long)arg3 intoArray:(unsigned short *)arg4 advances:(struct CGSize *)arg5 resultingGlyphCount:(unsigned long long *)arg6;
- (id)initWithCoder:(id)arg1;
- (void)setFont:(id)arg1;
- (void)generateGlyphTable;

@end

@interface HFRepresenterLayoutViewInfo : NSObject
{
    HFRepresenter *rep;
    NSView *view;
    struct CGPoint layoutPosition;
    struct CGRect frame;
    unsigned long long autoresizingMask;
}

- (id)description;

@end

@interface HFRepresenterStringEncodingTextView : HFRepresenterTextView
{
    unsigned short glyphTable[256];
    unsigned short replacementGlyph;
    double glyphAdvancement;
    unsigned long long encoding;
}

- (unsigned long long)maximumGlyphCountForByteCount:(unsigned long long)arg1;
- (double)advanceBetweenColumns;
- (double)advancePerByte;
- (void)extractGlyphsForBytes:(const char *)arg1 count:(unsigned long long)arg2 offsetIntoLine:(unsigned long long)arg3 intoArray:(unsigned short *)arg4 advances:(struct CGSize *)arg5 resultingGlyphCount:(unsigned long long *)arg6;
- (void)setEncoding:(unsigned long long)arg1;
- (unsigned long long)encoding;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)setFont:(id)arg1;
- (void)generateGlyphTable;

@end

@interface HFSharedMemoryByteSlice : HFByteSlice
{
    NSMutableData *data;
    unsigned long long offset;
    unsigned long long length;
    unsigned char inlineTailLength;
    unsigned char inlineTail[15];
}

- (id)byteSliceByAppendingSlice:(id)arg1;
- (id)subsliceWithRange:(CDStruct_91ee6ea3)arg1;
- (void)copyBytes:(char *)arg1 range:(CDStruct_91ee6ea3)arg2;
- (unsigned long long)length;
- (void)dealloc;
- (id)initWithSharedData:(id)arg1 offset:(unsigned long long)arg2 length:(unsigned long long)arg3 tail:(const void *)arg4 tailLength:(unsigned long long)arg5;
- (id)initWithData:(id)arg1 offset:(unsigned long long)arg2 length:(unsigned long long)arg3;
- (id)initWithData:(id)arg1;
- (id)initWithUnsharedData:(id)arg1;

@end

@interface HFStatusBarRepresenter : HFRepresenter
{
    unsigned long long statusMode;
}

+ (struct CGPoint)defaultLayoutPosition;
- (void)controllerDidChange:(unsigned long long)arg1;
- (void)setStatusMode:(unsigned long long)arg1;
- (unsigned long long)statusMode;
- (void)updateString;
- (id)stringForMultipleSelectionsWithLength:(unsigned long long)arg1 length:(unsigned long long)arg2;
- (id)stringForSingleRangeSelection:(CDStruct_91ee6ea3)arg1 length:(unsigned long long)arg2;
- (id)stringForSingleByteSelectionAtOffset:(unsigned long long)arg1 length:(unsigned long long)arg2;
- (id)stringForEmptySelectionAtOffset:(unsigned long long)arg1 length:(unsigned long long)arg2;
- (id)describeOffsetExcludingApproximate:(unsigned long long)arg1;
- (id)describeOffset:(unsigned long long)arg1;
- (id)describeLength:(unsigned long long)arg1;
- (id)createView;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;

@end

@interface HFStatusBarView : NSView
{
    NSCell *cell;
    struct CGSize cellSize;
    HFStatusBarRepresenter *representer;
    NSDictionary *cellAttributes;
}

- (void)mouseDown:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)drawDividerWithClip:(struct CGRect)arg1;
- (void)setString:(id)arg1;
- (void)setRepresenter:(id)arg1;
- (BOOL)isFlipped;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)_sharedInitStatusBarView;
- (void)dealloc;

@end

@interface HFStringEncodingPasteboardOwner : HFPasteboardOwner
{
    unsigned long long encoding;
}

- (unsigned long long)stringLengthForDataLength:(unsigned long long)arg1;
- (void)writeDataInBackgroundToPasteboard:(id)arg1 ofLength:(unsigned long long)arg2 forType:(id)arg3 trackingProgress:(id)arg4;
- (unsigned long long)encoding;
- (void)setEncoding:(unsigned long long)arg1;

@end

@interface HFStringEncodingTextRepresenter : HFTextRepresenter
{
    unsigned long long stringEncoding;
}

+ (struct CGPoint)defaultLayoutPosition;
- (void)copySelectedBytesToPasteboard:(id)arg1;
- (id)dataFromPasteboardString:(id)arg1;
- (void)insertText:(id)arg1;
- (void)initializeView;
- (void)setEncoding:(unsigned long long)arg1;
- (unsigned long long)encoding;
- (Class)_textViewClass;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)init;

@end

@interface HFTextField : NSControl
{
    HFController *dataController;
    HFLayoutRepresenter *layoutRepresenter;
    HFHexTextRepresenter *hexRepresenter;
    HFStringEncodingTextRepresenter *textRepresenter;
    id target;
    SEL action;
}

- (void)setUsesTextArea:(BOOL)arg1;
- (BOOL)usesTextArea;
- (void)setUsesHexArea:(BOOL)arg1;
- (BOOL)usesHexArea;
- (BOOL)usesRepresenter:(id)arg1;
- (void)setObjectValue:(id)arg1;
- (id)objectValue;
- (void)setAction:(SEL)arg1;
- (void)setTarget:(id)arg1;
- (SEL)action;
- (id)target;
- (void)insertNewline:(id)arg1;
- (BOOL)becomeFirstResponder;
- (void)drawRect:(struct CGRect)arg1;
- (void)resizeSubviewsWithOldSize:(struct CGSize)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)positionLayoutView;

@end

@interface HFTextSelectionPulseView : NSView
{
    NSImage *image;
}

- (void)setImage:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface HFTextView : NSControl
{
    HFController *dataController;
    HFLayoutRepresenter *layoutRepresenter;
    HFVerticalScrollerRepresenter *scrollRepresenter;
    NSArray *backgroundColors;
    BOOL bordered;
    id delegate;
    NSData *cachedData;
}

+ (void)initialize;
- (void)dealloc;
- (void)setData:(id)arg1;
- (id)data;
- (BOOL)bordered;
- (void)setBordered:(BOOL)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (void)setBackgroundColors:(id)arg1;
- (id)backgroundColors;
- (id)byteArray;
- (id)controller;
- (id)layoutRepresenter;
- (void)viewDidMoveToWindow;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (struct CGRect)_desiredFrameForLayoutView;
- (void)_HFControllerDidChangeProperties:(id)arg1;
- (void)_sharedInitHFTextViewWithMutableData:(id)arg1;

@end

@interface HFVerticalScrollerRepresenter : HFRepresenter
{
    NSScroller *_scroller;
}

+ (struct CGPoint)defaultLayoutPosition;
- (void)controllerDidChange:(unsigned long long)arg1;
- (double)minimumViewWidthForBytesPerLine:(unsigned long long)arg1;
- (void)updateScrollerValue;
- (void)scrollerDidChangeValue:(id)arg1;
- (void)scrollByLines:(long long)arg1;
- (void)scrollByKnobToValue:(double)arg1;
- (unsigned long long)visibleLines;
- (void)accomodateGrowBox;
- (id)createView;

@end

