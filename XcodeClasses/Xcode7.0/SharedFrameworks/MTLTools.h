//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Named Structures

struct Argument {
    void *_field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned short _field5;
    unsigned short _field6;
};

struct AttachmentInfo {
    unsigned long long _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long _field4;
};

struct CGPoint {
    double _field1;
    double _field2;
};

struct CGRect {
    struct CGPoint _field1;
    struct CGSize _field2;
};

struct CGSize {
    double _field1;
    double _field2;
};

struct CoreFunction {
    unsigned int _field1;
    unsigned int _field2;
    unsigned short _field3;
    unsigned short _field4;
    union {
        unsigned long long _field1;
        unsigned long long _field2;
    } _field5;
    struct Argument _field6;
    struct Argument _field7[16];
    unsigned int _field8;
    unsigned int _field9;
    void *_field10;
    void *_field11;
};

struct UniformData {
    float blendColor[4];
};

struct __hash_node<std::__1::__hash_value_type<unsigned long long, CommandBufferInfo>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned long long, DrawableInfo>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::MTL::Utils::DYMTLRenderPassDescriptor>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned long long, id<CAMetalDrawable>>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *>;

struct __hash_node<unsigned long long, void *>;

struct pair<unsigned long long, MTLDebugFunctionArgument>;

struct set<id, std::__1::less<id>, std::__1::allocator<id>> {
    struct __tree<id, std::__1::less<id>, std::__1::allocator<id>> {
        struct __tree_node<id, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<id, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
                struct __tree_node_base<void *> *__left_;
            } __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<id>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, CommandBufferInfo>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, CommandBufferInfo>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, CommandBufferInfo>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, CommandBufferInfo>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned long long, CommandBufferInfo>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, CommandBufferInfo>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, CommandBufferInfo>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, DrawableInfo>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, DrawableInfo>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, DrawableInfo>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, DrawableInfo>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned long long, DrawableInfo>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, DrawableInfo>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, DrawableInfo>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::MTL::Utils::DYMTLRenderPassDescriptor>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::MTL::Utils::DYMTLRenderPassDescriptor>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::MTL::Utils::DYMTLRenderPassDescriptor>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::MTL::Utils::DYMTLRenderPassDescriptor>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::MTL::Utils::DYMTLRenderPassDescriptor>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::MTL::Utils::DYMTLRenderPassDescriptor>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::MTL::Utils::DYMTLRenderPassDescriptor>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id<CAMetalDrawable>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id<CAMetalDrawable>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id<CAMetalDrawable>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id<CAMetalDrawable>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned long long, id<CAMetalDrawable>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id<CAMetalDrawable>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id<CAMetalDrawable>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<unsigned long long, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<unsigned long long, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *>*>>> {
        struct __hash_node<unsigned long long, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<unsigned long long, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unordered_map<unsigned long long, CommandBufferInfo, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, CommandBufferInfo>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, CommandBufferInfo>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, CommandBufferInfo>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, CommandBufferInfo>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, CommandBufferInfo>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, CommandBufferInfo>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, CommandBufferInfo>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, CommandBufferInfo>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, CommandBufferInfo>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, CommandBufferInfo>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long long, CommandBufferInfo>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, CommandBufferInfo>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, CommandBufferInfo>, std::__1::equal_to<unsigned long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned long long, DrawableInfo, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, DrawableInfo>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, DrawableInfo>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, DrawableInfo>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, DrawableInfo>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, DrawableInfo>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, DrawableInfo>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, DrawableInfo>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, DrawableInfo>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, DrawableInfo>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, DrawableInfo>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long long, DrawableInfo>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, DrawableInfo>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, DrawableInfo>, std::__1::equal_to<unsigned long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned long long, EncoderInfo, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, EncoderInfo>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, EncoderInfo>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, EncoderInfo>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, EncoderInfo>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, EncoderInfo>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, EncoderInfo>, std::__1::equal_to<unsigned long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned long long, GPUTools::MTL::Utils::DYMTLRenderPassDescriptor, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, GPUTools::MTL::Utils::DYMTLRenderPassDescriptor>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, GPUTools::MTL::Utils::DYMTLRenderPassDescriptor>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, GPUTools::MTL::Utils::DYMTLRenderPassDescriptor>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, GPUTools::MTL::Utils::DYMTLRenderPassDescriptor>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, GPUTools::MTL::Utils::DYMTLRenderPassDescriptor>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::MTL::Utils::DYMTLRenderPassDescriptor>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::MTL::Utils::DYMTLRenderPassDescriptor>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::MTL::Utils::DYMTLRenderPassDescriptor>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::MTL::Utils::DYMTLRenderPassDescriptor>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::MTL::Utils::DYMTLRenderPassDescriptor>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::MTL::Utils::DYMTLRenderPassDescriptor>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, GPUTools::MTL::Utils::DYMTLRenderPassDescriptor>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, GPUTools::MTL::Utils::DYMTLRenderPassDescriptor>, std::__1::equal_to<unsigned long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned long long, id, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, id>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, id>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, id>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, id>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, id>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, id>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, id>, std::__1::equal_to<unsigned long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned long long, id<CAMetalDrawable>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, id<CAMetalDrawable>>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, id<CAMetalDrawable>>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, id<CAMetalDrawable>>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, id<CAMetalDrawable>>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, id<CAMetalDrawable>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id<CAMetalDrawable>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id<CAMetalDrawable>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id<CAMetalDrawable>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id<CAMetalDrawable>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id<CAMetalDrawable>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long long, id<CAMetalDrawable>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, id<CAMetalDrawable>>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, id<CAMetalDrawable>>, std::__1::equal_to<unsigned long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, unsigned long long>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, unsigned long long>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, unsigned long long>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, unsigned long long>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, unsigned long long>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, unsigned long long>, std::__1::equal_to<unsigned long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_set<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long>> {
    struct __hash_table<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long>> {
        struct unique_ptr<std::__1::__hash_node<unsigned long long, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *>*>, std::__1::allocator<std::__1::__hash_node<unsigned long long, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<unsigned long long, void *>*> {
                struct __hash_node<unsigned long long, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::hash<unsigned long long>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::equal_to<unsigned long long>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct vector<std::__1::pair<unsigned long long, MTLDebugFunctionArgument>, std::__1::allocator<std::__1::pair<unsigned long long, MTLDebugFunctionArgument>>> {
    struct pair<unsigned long long, MTLDebugFunctionArgument> *__begin_;
    struct pair<unsigned long long, MTLDebugFunctionArgument> *__end_;
    struct __compressed_pair<std::__1::pair<unsigned long long, MTLDebugFunctionArgument>*, std::__1::allocator<std::__1::pair<unsigned long long, MTLDebugFunctionArgument>>> {
        struct pair<unsigned long long, MTLDebugFunctionArgument> *__first_;
    } __end_cap_;
};

#pragma mark Typedef'd Structures

// Template types
typedef struct unordered_map<unsigned long long, EncoderInfo, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, EncoderInfo>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, EncoderInfo>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, EncoderInfo>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, EncoderInfo>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, EncoderInfo>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, EncoderInfo>, std::__1::equal_to<unsigned long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
} unordered_map_ca22002e;

typedef struct unordered_map<unsigned long long, id, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, id>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, id>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, id>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, id>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, id>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, id>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, id>, std::__1::equal_to<unsigned long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
} unordered_map_d8b431c8;

#pragma mark -

//
// File: /Applications/Xcode-7GM.app/Contents/SharedFrameworks/MTLTools.framework/Versions/A/MTLTools
// UUID: F9F8FB35-4F25-356E-AE15-C356F3DBAF09
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 18097.0.0.0.0
//       Minimum Mac OS X version: 10.10.0
//                    SDK version: 10.11.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol DYLayerManager <NSObject>
- (void)setAnchorPoint:(const struct Argument *)arg1 forLayerID:(unsigned long long)arg2;
- (void)setPosition:(const struct Argument *)arg1 forLayerID:(unsigned long long)arg2;
- (void)setTransform:(const struct Argument *)arg1 forLayerID:(unsigned long long)arg2 withScreenToLayerScale:(const struct pair<double, double> *)arg3;
- (void)deleteLayer:(unsigned long long)arg1;
- (CALayer *)currentTopLayer;
- (CALayer *)layerForID:(unsigned long long)arg1;
- (void)prepareLayerForPresent:(CALayer *)arg1;
- (void)updateLayer:(CALayer *)arg1 contentRect:(struct CGRect)arg2 contentsScale:(double)arg3 properties:(NSDictionary *)arg4;
- (CALayer *)createLayerWithID:(unsigned long long)arg1 contentRect:(struct CGRect)arg2 contentsScale:(double)arg3 properties:(NSDictionary *)arg4 isCoreAnimationSurface:(_Bool)arg5;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (BOOL)respondsToSelector:(SEL)arg1;
- (BOOL)conformsToProtocol:(Protocol *)arg1;
- (BOOL)isMemberOfClass:(Class)arg1;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (BOOL)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol __ARCLiteIndexedSubscripting__
- (void)setObject:(id)arg1 atIndexedSubscript:(unsigned long long)arg2;
- (id)objectAtIndexedSubscript:(unsigned long long)arg1;
@end

@protocol __ARCLiteKeyedSubscripting__
- (void)setObject:(id)arg1 forKeyedSubscript:(id)arg2;
- (id)objectForKeyedSubscript:(id)arg1;
@end

@interface DYMTLCaptureSessionInfo : DYCaptureSessionInfo
{
    unsigned long long _capturedCommandQueueAddress;
    NSArray *_deviceProfiles;
}

+ (id)captureSessionInfoWithCaptureStore:(id)arg1;
@property(readonly, retain, nonatomic) NSArray *deviceProfiles; // @synthesize deviceProfiles=_deviceProfiles;
@property(readonly, nonatomic) unsigned long long capturedCommandQueueAddress; // @synthesize capturedCommandQueueAddress=_capturedCommandQueueAddress;
- (void).cxx_destruct;
- (BOOL)canPlaybackOnDeviceWithInfo:(id)arg1 limitBackwardsCompatibility:(BOOL)arg2 isInternal:(BOOL)arg3;
- (BOOL)_isBackwardsCompatible:(id)arg1 isInternal:(BOOL)arg2;
- (id)initWithCaptureStore:(id)arg1;

@end

@interface DYMTLFunctionPlayer : DYFunctionPlayer
{
    unordered_map_d8b431c8 _objectMap;
    struct set<id, std::__1::less<id>, std::__1::allocator<id>> _commandQueueSet;
    id <MTLDevice> _device;
}

+ (void *)fragmentBytesKeyAtIndex:(unsigned long long)arg1;
+ (void *)vertexBytesKeyAtIndex:(unsigned long long)arg1;
@property(retain, nonatomic) id <MTLDevice> device; // @synthesize device=_device;
- (id).cxx_construct;
- (void).cxx_destruct;
- (BOOL)isFrameBoundary;
- (void)executeGraphicsFunction;
- (id)commandQueue;
- (void)_saveBytes;
- (void)executePlatformFunction;
- (unordered_map_d8b431c8 *)objectMap;
- (void)removeObjectForKey:(unsigned long long)arg1;
- (id)objectForKey:(unsigned long long)arg1;
- (void)setObject:(id)arg1 forKey:(unsigned long long)arg2;
- (id)deviceForID:(unsigned long long)arg1 withDeviceName:(id)arg2;
- (id)_getDeviceWithName:(id)arg1;
- (void)dealloc;
- (id)initWithCaptureStore:(id)arg1;

@end

@interface DYMTLCommonFunctionPlayer : DYMTLFunctionPlayer
{
    struct unordered_map<unsigned long long, id<CAMetalDrawable>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, id<CAMetalDrawable>>>> _drawableMap;
    id <DYLayerManager> _layerManager;
}

@property(nonatomic) __weak id <DYLayerManager> layerManager; // @synthesize layerManager=_layerManager;
- (id).cxx_construct;
- (void).cxx_destruct;
- (BOOL)isFrameBoundary;
- (void)executePlatformFunction;
- (id)layerForID:(unsigned long long)arg1;
@property(retain, nonatomic) id <DYLayerManager> strongLayerManager; // @dynamic strongLayerManager;

@end

@interface DYMTLCommonDebugFunctionPlayer : DYMTLCommonFunctionPlayer
{
    struct unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long>>> _drawableIdToLayerIdMap;
    struct unordered_map<unsigned long long, DrawableInfo, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, DrawableInfo>>> _textureToDrawableMap;
    struct unordered_map<unsigned long long, GPUTools::MTL::Utils::DYMTLRenderPassDescriptor, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, GPUTools::MTL::Utils::DYMTLRenderPassDescriptor>>> _commandEncoderDescriptorMap;
    struct unordered_map<unsigned long long, CommandBufferInfo, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, CommandBufferInfo>>> _commandBufferMap;
    unordered_map_ca22002e _encoderMap;
    unordered_map_ca22002e _parallelEncoderMap;
    struct unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long>>> _encoderToParallelEncoderMap;
    unsigned long long _lastEncoderID;
    BOOL _disableWireframe;
    struct unordered_set<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long>> _commandQueueSet;
    DYMTLDebugWireframeRenderer *_wireframeRenderer;
    DYMTLTextureRenderer *_textureRenderer;
    unsigned long long _targetCommandEncoderId;
    CAMetalLayer *_layer;
    BOOL _shouldIgnoreCaptureFile;
    unsigned int _currentEncoderIndex;
}

@property(nonatomic) unsigned int currentEncoderIndex; // @synthesize currentEncoderIndex=_currentEncoderIndex;
@property(nonatomic) BOOL shouldIgnoreCaptureFile; // @synthesize shouldIgnoreCaptureFile=_shouldIgnoreCaptureFile;
- (id).cxx_construct;
- (void).cxx_destruct;
- (BOOL)_isReceiverTypeCommandEncoderRelated;
- (BOOL)_isFunctionCommandEncoderCreation;
- (void)_forceCommandEncoderAttachmentStoreActionToStore:(id)arg1;
- (void)_forceAttachmentStoreActionToStore:(id)arg1;
- (void)_trackObjects;
- (void)_addRenderPassDescriptorToEncoderMapFromArgumentPointer:(void *)arg1 forEncoder:(unsigned long long)arg2;
- (struct AttachmentInfo)_attachmentInfoForCommandEncoderID:(unsigned long long)arg1;
- (void)_executeGraphicsFunction;
- (void)presentDrawable;
- (id)_texture2DFromTexture:(id)arg1 level:(unsigned long long)arg2 slice:(unsigned long long)arg3 depthPlane:(unsigned long long)arg4 commandBuffer:(id)arg5;
- (void)waitForCommmandBuffersCompletion;
- (void)commitEncodersAndCommandBuffers;
- (void)_endEncodingForAllRemainingEncoders:(unordered_map_ca22002e *)arg1;
- (void)prepareForCaptureExecution;
- (void)executePlatformFunction;
- (void)_superExecutePlatformFunction;
- (void)executeGraphicsFunction;
- (void)executeFunctions:(struct CoreFunction *)arg1 count:(unsigned long long)arg2;
- (unordered_map_ca22002e *)encoderMap;
- (id)initWithCaptureStore:(id)arg1;
- (void)setDevice:(id)arg1;

@end

@interface DYMTLDebugWireframeRenderer : NSObject
{
    DYMTLCommonDebugFunctionPlayer *_player;
    id <MTLLibrary> _wireframeLibrary;
    id <MTLFunction> _wireframeRenderingVertexFunction;
    id <MTLFunction> _wireframeRenderingFragmentFunction;
    MTLRenderPipelineDescriptor *_wireframeRenderPipelineDescriptor;
    id <MTLBuffer> _wireframeRenderingPositionBuffer;
    id <MTLBuffer> _wireframeRenderingTexCoordBuffer;
    id <MTLFunction> _wireframeCreationFragmentFunction;
    MTLTextureDescriptor *_wireframeTextureDescriptor;
    id <MTLTexture> _wireframeTexture;
    id <MTLSamplerState> _wireframeSampler;
    MTLRenderPassColorAttachmentDescriptor *_wireframeRenderPassColorAttachmentDescriptor;
    MTLRenderPassDescriptor *_wireframeRenderPassDescriptor;
    struct {
        double originX;
        double originY;
        double width;
        double height;
        double znear;
        double zfar;
    } _encoder_viewport;
    unsigned long long _encoder_frontFacingWinding;
    unsigned long long _encoder_cullMode;
    unsigned long long _encoder_triangleFillMode;
    struct vector<std::__1::pair<unsigned long long, MTLDebugFunctionArgument>, std::__1::allocator<std::__1::pair<unsigned long long, MTLDebugFunctionArgument>>> _encoder_vertexBufferArgs;
    struct vector<std::__1::pair<unsigned long long, MTLDebugFunctionArgument>, std::__1::allocator<std::__1::pair<unsigned long long, MTLDebugFunctionArgument>>> _encoder_vertexTextureArgs;
    struct vector<std::__1::pair<unsigned long long, MTLDebugFunctionArgument>, std::__1::allocator<std::__1::pair<unsigned long long, MTLDebugFunctionArgument>>> _encoder_vertexSamplerArgs;
    struct vector<std::__1::pair<unsigned long long, MTLDebugFunctionArgument>, std::__1::allocator<std::__1::pair<unsigned long long, MTLDebugFunctionArgument>>> _encoder_fragmentBufferArgs;
    struct vector<std::__1::pair<unsigned long long, MTLDebugFunctionArgument>, std::__1::allocator<std::__1::pair<unsigned long long, MTLDebugFunctionArgument>>> _encoder_fragmentTextureArgs;
    struct vector<std::__1::pair<unsigned long long, MTLDebugFunctionArgument>, std::__1::allocator<std::__1::pair<unsigned long long, MTLDebugFunctionArgument>>> _encoder_fragmentSamplerArgs;
    MTLDebugRenderCommandEncoder *_originalEncoder;
}

@property(readonly, nonatomic) id <MTLTexture> wireframeTexture; // @synthesize wireframeTexture=_wireframeTexture;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)_loadEncoderState:(id)arg1;
- (void)_saveEncoderState:(id)arg1;
- (BOOL)prepareWireframeTextureWithCommandBufferId:(unsigned long long)arg1 parallelPassEncoderId:(unsigned long long)arg2 commandEncoderId:(unsigned long long)arg3 pipelineId:(unsigned long long)arg4;
- (BOOL)_prepareWireframeTextureWithEncoder:(id)arg1 andCommandBuffer:(id)arg2 andPipelineState:(id)arg3 andCommandEncoderID:(unsigned long long)arg4 andParallelPassEncoderId:(unsigned long long)arg5;
- (id)initWithDebugFunctionPlayer:(id)arg1;

@end

@interface DYMTLTextureRenderer : NSObject
{
    id <MTLDevice> _device;
    id <MTLLibrary> _library;
    id <MTLFunction> _vertexFunction;
    id <MTLFunction> _fragmentFunction;
    MTLRenderPipelineDescriptor *_renderPipelineDescriptor;
    MTLRenderPipelineDescriptor *_blendingRenderPipelineDescriptor;
    MTLDepthStencilDescriptor *_depthStencilDescriptor;
    id <MTLBuffer> _positionBuffer;
    id <MTLBuffer> _texCoordBuffer;
    struct UniformData _uniformData;
    id <MTLBuffer> _uniformDataBuffer;
    id <MTLSamplerState> _samplerState;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)setBlendColorRed:(float)arg1 green:(float)arg2 blue:(float)arg3 alpha:(float)arg4;
- (unsigned long long)_renderPassPixelFormatFromDescriptor:(id)arg1;
- (void)renderTexture:(id)arg1 withEncoder:(id)arg2 enableBlending:(BOOL)arg3;
- (id)initWithDevice:(id)arg1;

@end

