//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct deque<double, std::__1::allocator<double>> {
    struct __split_buffer<double *, std::__1::allocator<double *>> {
        double **__first_;
        double **__begin_;
        double **__end_;
        struct __compressed_pair<double **, std::__1::allocator<double *>> {
            double **__first_;
        } __end_cap_;
    } __map_;
    unsigned long long __start_;
    struct __compressed_pair<unsigned long, std::__1::allocator<double>> {
        unsigned long long __first_;
    } __size_;
};

struct tm_unz_s {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
};

struct unz_file_info_s {
    unsigned long long _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    unsigned long long _field9;
    unsigned long long _field10;
    unsigned long long _field11;
    unsigned long long _field12;
    unsigned long long _field13;
    unsigned long long _field14;
    struct tm_unz_s _field15;
};

#pragma mark -

//
// File: /Applications/Xcode-7GM.app/Contents/SharedFrameworks/DTDeviceKitBase.framework/Versions/A/DTDeviceKitBase
// UUID: FF562DA2-1128-3356-8F38-54389BCC7CF8
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 8167.0.0.0.0
//       Minimum Mac OS X version: 10.10.0
//                    SDK version: 10.11.0
//
// Objective-C Garbage Collection: Unsupported
//
//                       Run path: @loader_path
//                               = /Applications/Xcode-7GM.app/Contents/SharedFrameworks/DTDeviceKitBase.framework/Versions/A
//

@protocol DTDKDeviceConnectionMonitor <DVTCancellable>
@property(readonly) double packetRatio;
@property(readonly) double averageLatency;
@end

@protocol DVTCancellable <NSObject>
@property(readonly, getter=isCancelled) BOOL cancelled;
- (void)cancel;
@end

@protocol DVTDeveloperProfileAccountProvider <NSObject>
@property(readonly) NSString *typeIdentifier;
- (BOOL)importAccountsFromKeychain:(struct OpaqueSecKeychainRef *)arg1 propertyList:(NSDictionary *)arg2 numberOfAccounts:(unsigned long long *)arg3 error:(id *)arg4;
- (BOOL)exportAccountsToKeychain:(struct OpaqueSecKeychainRef *)arg1 propertyList:(id *)arg2 numberOfAccounts:(unsigned long long *)arg3 error:(id *)arg4;
@end

@protocol DVTInvalidation <NSObject>
- (void)primitiveInvalidate;

@optional
+ (BOOL)supportsInvalidationPrevention;
+ (unsigned long long)assertionBehaviorForKeyValueObservationsAtEndOfEvent;
+ (unsigned long long)assertionBehaviorAfterEndOfEventForSelector:(SEL)arg1;
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly, nonatomic, getter=isValid) BOOL valid;
- (void)invalidate;
@end

@protocol DVTProvisioningProfile <NSObject>
@property(readonly) NSArray *identityCertificates;
@property(readonly) NSArray *certificates;
@property(readonly) BOOL isPushEnabled;
@property(readonly) BOOL isOMCEnabled;
@property(readonly) BOOL isWACEnabled;
@property(readonly) BOOL isHomeKitEnabled;
@property(readonly) BOOL isHealthKitEnabled;
@property(readonly) NSString *dataProtectionLevel;
@property(readonly) BOOL isAssociatedDomainsEnabled;
@property(readonly) BOOL isVPNLiteEnabled;
@property(readonly) BOOL isApplicationGroupsEnabled;
@property(readonly) BOOL isKeychainAccessGroupsEnabled;
@property(readonly) BOOL isGameCenterEnabled;
@property(readonly) BOOL isMapsEnabled;
@property(readonly) BOOL isInterAppAudioEnabled;
@property(readonly) BOOL isDataProtectionEnabled;
@property(readonly) BOOL isPassbookEnabled;
@property(readonly) BOOL isICloudEnabled;
@property(readonly) BOOL usesExplicitAppIdentifier;
@property(readonly) NSString *teamName;
@property(readonly) NSString *teamID;
@property(readonly) NSData *dataRepresentation;
@property(readonly) NSSet *supportedUDIDs;
@property(readonly) DVTPlatform *dvt_platform;
@property(readonly) NSString *platform;
@property(readonly) NSString *preferredFilenameExtension;
@property(readonly) BOOL isMacProfile;
@property(readonly) BOOL isUniversal;
@property(readonly) BOOL expiredOrWillExpireSoon;
@property(readonly) BOOL willExpireSoon;
@property(readonly) BOOL expired;
@property(readonly) NSArray *identitySigningCertificates;
@property(readonly) NSArray *signingCertificates;
@property(readonly, copy) NSString *localPath;
@property(readonly) NSDate *expirationDate;
@property(readonly) NSDate *creationDate;
@property(readonly) NSArray *teamIdentifierPrefixes;
@property(readonly) NSArray *appIdentifierPrefixes;
@property(readonly) NSString *appIdentifierEntitlementWithoutPrefix;
@property(readonly) NSString *appIdentifierEntitlement;
@property(readonly) DVTAppIDFeatures *features;
@property(readonly) NSDictionary *entitlements;
@property(readonly) int version;
@property(readonly) NSString *name;
@property(readonly) NSString *UUID;
- (BOOL)containsCertificate:(struct OpaqueSecCertificateRef *)arg1;
- (NSString *)longDescription;
- (BOOL)writeToURL:(NSURL *)arg1 options:(unsigned long long)arg2 error:(id *)arg3;
- (BOOL)writeToFile:(NSString *)arg1 options:(unsigned long long)arg2 error:(id *)arg3;
- (long long)dateCompareDecending:(id <DVTProvisioningProfile>)arg1;
- (long long)dateCompare:(id <DVTProvisioningProfile>)arg1;
- (long long)localizedCompare:(id <DVTProvisioningProfile>)arg1;
- (long long)compare:(id <DVTProvisioningProfile>)arg1;
- (BOOL)matchesBundleIdentifier:(NSString *)arg1;
- (BOOL)canBeInstalledOnDeviceWithIdentifier:(NSString *)arg1;
- (BOOL)canBeInstalledOnDevice:(DVTDevice *)arg1;
- (BOOL)containsSigningCertificate:(DVTSigningCertificate *)arg1;
- (BOOL)hasCertificateMatchingIdentity:(NSString *)arg1 includeExpired:(BOOL)arg2;
- (BOOL)allowsFeatures:(DVTAppIDFeatures *)arg1 missingFeatures:(id *)arg2;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSNetServiceBrowserDelegate <NSObject>

@optional
- (void)netServiceBrowser:(NSNetServiceBrowser *)arg1 didRemoveService:(NSNetService *)arg2 moreComing:(BOOL)arg3;
- (void)netServiceBrowser:(NSNetServiceBrowser *)arg1 didRemoveDomain:(NSString *)arg2 moreComing:(BOOL)arg3;
- (void)netServiceBrowser:(NSNetServiceBrowser *)arg1 didFindService:(NSNetService *)arg2 moreComing:(BOOL)arg3;
- (void)netServiceBrowser:(NSNetServiceBrowser *)arg1 didFindDomain:(NSString *)arg2 moreComing:(BOOL)arg3;
- (void)netServiceBrowser:(NSNetServiceBrowser *)arg1 didNotSearch:(NSDictionary *)arg2;
- (void)netServiceBrowserDidStopSearch:(NSNetServiceBrowser *)arg1;
- (void)netServiceBrowserWillSearch:(NSNetServiceBrowser *)arg1;
@end

@protocol NSNetServiceDelegate <NSObject>

@optional
- (void)netService:(NSNetService *)arg1 didAcceptConnectionWithInputStream:(NSInputStream *)arg2 outputStream:(NSOutputStream *)arg3;
- (void)netService:(NSNetService *)arg1 didUpdateTXTRecordData:(NSData *)arg2;
- (void)netServiceDidStop:(NSNetService *)arg1;
- (void)netService:(NSNetService *)arg1 didNotResolve:(NSDictionary *)arg2;
- (void)netServiceDidResolveAddress:(NSNetService *)arg1;
- (void)netServiceWillResolve:(NSNetService *)arg1;
- (void)netService:(NSNetService *)arg1 didNotPublish:(NSDictionary *)arg2;
- (void)netServiceDidPublish:(NSNetService *)arg1;
- (void)netServiceWillPublish:(NSNetService *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (BOOL)respondsToSelector:(SEL)arg1;
- (BOOL)conformsToProtocol:(Protocol *)arg1;
- (BOOL)isMemberOfClass:(Class)arg1;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (BOOL)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol __ARCLiteIndexedSubscripting__
- (void)setObject:(id)arg1 atIndexedSubscript:(unsigned long long)arg2;
- (id)objectAtIndexedSubscript:(unsigned long long)arg1;
@end

@protocol __ARCLiteKeyedSubscripting__
- (void)setObject:(id)arg1 forKeyedSubscript:(id)arg2;
- (id)objectForKeyedSubscript:(id)arg1;
@end

@interface DTDKApplicationItemBase : NSObject
{
    NSMutableSet *_children;
    _Bool _invalidated;
    DTDKApplicationItemBase *_parent;
}

+ (BOOL)shouldProcessPath:(id)arg1;
+ (id)keyPathsForValuesAffectingMutableChildren;
+ (id)keyPathsForValuesAffectingDevicePath;
+ (id)keyPathsForValuesAffectingIsFairPlayEncrypted;
+ (id)keyPathsForValuesAffectingApplication;
+ (id)alloc;
@property __weak DTDKApplicationItemBase *parent; // @synthesize parent=_parent;
- (void).cxx_destruct;
- (id)childNamed:(id)arg1;
- (long long)compare:(id)arg1;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
@property(readonly) _Bool isLeaf;
- (void)removeChildrenObject:(id)arg1;
- (void)addChildrenObject:(id)arg1;
@property(readonly) NSMutableSet *mutableChildren;
@property(copy) NSSet *children;
@property(readonly, copy) NSString *devicePath;
@property(readonly) _Bool isFairPlayEncrypted;
@property(readonly, copy) NSString *name;
@property(readonly, copy) NSString *subPath;
@property(readonly, copy) NSString *containerPath;
@property(readonly, copy) NSString *identifier;
@property(readonly, copy) NSString *deviceIdentifier;
- (_Bool)_withConnection:(CDUnknownBlockType)arg1;
@property(readonly) DTDKApplication *application;
- (_Bool)removeFromDeviceWithError:(id *)arg1;
- (_Bool)uploadFile:(id)arg1 error:(id *)arg2;
- (id)sandboxFileBases;
- (_Bool)downloadOptimizationProfilesToFile:(id)arg1 error:(id *)arg2;
- (_Bool)downloadToFile:(id)arg1 error:(id *)arg2;
- (void)lazyRefresh;
- (void)refresh;
- (void)invalidate;
- (void)dealloc;

@end

@interface DTDKApplication : DTDKApplicationItemBase
{
    struct __AFCConnection *_connection;
    unsigned int _useAggregateItem:1;
    unsigned long long _connection_rc;
    NSDictionary *_plist;
    DTDKRemoteDeviceToken *deviceData;
}

+ (id)keyPathsForValuesAffectingInstalledPath;
+ (id)keyPathsForValuesAffectingIsFairPlayEncrypted;
+ (id)keyPathsForValuesAffectingIdentifier;
+ (id)keyPathsForValuesAffectingDevicePath;
+ (id)keyPathsForValuesAffectingName;
+ (id)applicationWithPropertiesFromApplication:(id)arg1;
+ (id)applicationWithDeviceData:(id)arg1 andPlist:(id)arg2;
+ (id)keyPathsForValuesAffectingPropertyListRepresentation;
@property(readonly) struct __AFCConnection *connection; // @synthesize connection=_connection;
@property __weak DTDKRemoteDeviceToken *deviceData; // @synthesize deviceData;
@property(copy) NSDictionary *plist; // @synthesize plist=_plist;
- (void).cxx_destruct;
- (id)attributesOfItemAtPath:(id)arg1 error:(id *)arg2;
- (id)contentsOfDirectoryAtPath:(id)arg1 error:(id *)arg2;
- (BOOL)createDirectoryAtPath:(id)arg1 error:(id *)arg2;
- (BOOL)processAFCOperation:(struct __AFCOperation *)arg1 error:(id *)arg2;
- (void)_notifyApplicationDataDidChange;
- (_Bool)uploadFile:(id)arg1 syncRecords:(id)arg2 resultingSyncRecords:(id)arg3 error:(id *)arg4;
- (_Bool)uploadFile:(id)arg1 error:(id *)arg2;
- (void)refresh;
@property _Bool useAggregateItem;
@property(readonly, copy) NSString *installedPath;
- (_Bool)isLeaf;
- (_Bool)isFairPlayEncrypted;
- (id)identifier;
@property(readonly) NSString *executableName;
- (id)devicePath;
- (id)name;
- (id)deviceIdentifier;
- (id)application;
- (_Bool)_withConnection:(CDUnknownBlockType)arg1;
- (void)invalidate;
- (void)dealloc;
- (id)initWithPropertyListRepresentation:(id)arg1 error:(id *)arg2;
@property(readonly) BOOL isHidden;
- (id)bundlePath;
- (id)minimumOSVersion;
- (id)executableVersion;
- (id)bundleIdentifier;
@property(readonly, copy) NSDictionary *propertyListRepresentation;
- (id)description;

@end

@interface DTDKApplicationFileBase : DTDKApplicationItemBase
{
    NSString *_name;
}

+ (id)itemWithName:(id)arg1;
@property(copy) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (_Bool)removeFromDeviceWithError:(id *)arg1;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;

@end

@interface DTDKApplicationDirectory : DTDKApplicationFileBase
{
}

+ (id)itemWithParent:(id)arg1 andName:(id)arg2 error:(id *)arg3;
+ (id)itemWithParent:(id)arg1 fromLocalDirectory:(id)arg2 error:(id *)arg3;
- (void)refresh;
- (_Bool)isLeaf;
- (id)sandboxFileBases;
- (_Bool)downloadOptimizationProfilesToFile:(id)arg1 error:(id *)arg2;
- (_Bool)downloadToFile:(id)arg1 error:(id *)arg2;
- (_Bool)removeFromDeviceWithError:(id *)arg1;

@end

@interface DTDKApplicationFile : DTDKApplicationFileBase
{
}

+ (id)itemWithName:(id)arg1 andParent:(id)arg2 fromStream:(id)arg3 error:(id *)arg4;
+ (id)itemWithParent:(id)arg1 fromLocalFile:(id)arg2 error:(id *)arg3;
- (_Bool)isLeaf;
- (id)sandboxFileBases;
- (_Bool)downloadOptimizationProfilesToFile:(id)arg1 error:(id *)arg2;
- (_Bool)downloadToFile:(id)arg1 error:(id *)arg2;

@end

@interface DTDKApplicationFileStat : NSObject
{
    _Bool _deviceIsDir;
    _Bool _deviceIsLnk;
    NSString *_deviceFileSizeString;
    NSString *_deviceModificationTimeString;
}

@property(copy) NSString *deviceModificationTimeString; // @synthesize deviceModificationTimeString=_deviceModificationTimeString;
@property(copy) NSString *deviceFileSizeString; // @synthesize deviceFileSizeString=_deviceFileSizeString;
@property _Bool deviceIsLnk; // @synthesize deviceIsLnk=_deviceIsLnk;
@property _Bool deviceIsDir; // @synthesize deviceIsDir=_deviceIsDir;
- (void).cxx_destruct;

@end

@interface DTDKApplicationPackage : DTDKApplicationItemBase
{
}

+ (id)item;
- (_Bool)uploadFile:(id)arg1 syncRecords:(id)arg2 resultingSyncRecords:(id)arg3 error:(id *)arg4;
- (_Bool)_processUploadOf:(id)arg1 devicePath:(id)arg2 syncRecords:(id)arg3 resultingSyncRecords:(id)arg4 error:(id *)arg5;
- (void)_createDirAtDevicePath:(id)arg1;
- (void)_removeFileOrDirAtDevicePath:(id)arg1;
- (id)_readDeviceDirectory:(id)arg1;
- (id)_afc_stat:(id)arg1;
- (id)modificationInfoStringForLocalPath:(id)arg1;
- (BOOL)_copyFile:(id)arg1 toDevicePath:(id)arg2 error:(id *)arg3;
- (_Bool)uploadFile:(id)arg1 error:(id *)arg2;
- (void)_notifyFinishOfUpload;
- (void)_notifyStartOfUpload;
- (id)sandboxFileBases;
- (_Bool)downloadOptimizationProfilesToFile:(id)arg1 error:(id *)arg2;
- (_Bool)downloadToFile:(id)arg1 error:(id *)arg2;
- (void)_notifyFinishOfDownload;
- (void)_notifyStartOfDownload;
- (id)subPath;
- (id)name;

@end

@interface DTDKBinaryImage : NSManagedObject
{
}


// Remaining properties
@property(retain, nonatomic) NSString *arch; // @dynamic arch;
@property(retain, nonatomic) NSMutableSet *crashLogs; // @dynamic crashLogs;
@property(retain, nonatomic) NSString *name; // @dynamic name;
@property(retain, nonatomic) NSString *path; // @dynamic path;
@property(retain, nonatomic) NSString *uuid; // @dynamic uuid;
@end

@interface DTDKCopyValueRequest : NSObject <DVTCancellable>
{
    NSMutableSet *_promises;
    BOOL _cancelled;
    NSString *_domain;
    NSString *_key;
}

+ (id)requestWithDomain:(id)arg1 key:(id)arg2;
@property(readonly, copy) NSString *key; // @synthesize key=_key;
@property(readonly, copy) NSString *domain; // @synthesize domain=_domain;
- (void).cxx_destruct;
- (BOOL)isEqual:(id)arg1;
@property(readonly) unsigned long long hash;
@property(readonly, copy) NSString *description;
- (void)cancel;
- (BOOL)cancelled;
- (void)finishWithResult:(id)arg1 andError:(int)arg2;
- (void)addPromise:(id)arg1;

// Remaining properties
@property(readonly, getter=isCancelled) BOOL cancelled; // @dynamic cancelled;
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

@interface DTDKCrashLog : NSManagedObject
{
}

+ (id)keyPathsForValuesAffectingDateString;
+ (id)keyPathsForValuesAffectingFilename;
+ (id)keyPathsForValuesAffectingRawText;
+ (id)keyPathsForValuesAffectingText;
+ (id)keyPathsForValuesAffectingDisplayName;
+ (id)entityName;
- (void)resymbolicate;
- (void)symbolicate;
@property(readonly, nonatomic) NSString *dateString;
@property(readonly, nonatomic) NSString *filename;
@property(retain, nonatomic) NSString *rawText;
@property(retain, nonatomic) NSString *text;
- (void)updateModelLayout;
@property(readonly, nonatomic) NSString *displayName;

// Remaining properties
@property(retain, nonatomic) NSMutableSet *binaryImages; // @dynamic binaryImages;
@property(retain, nonatomic) NSString *crashReporterKey; // @dynamic crashReporterKey;
@property(retain, nonatomic) NSDate *dateTime; // @dynamic dateTime;
@property(retain, nonatomic) NSString *incidentIdentifier; // @dynamic incidentIdentifier;
@property(retain) NSManagedObject *logText; // @dynamic logText;
@property(nonatomic) BOOL needsSymbolication; // @dynamic needsSymbolication;
@property(retain) NSString *primitiveRawText; // @dynamic primitiveRawText;
@property(retain) NSString *primitiveText; // @dynamic primitiveText;
@property(retain, nonatomic) NSString *processName; // @dynamic processName;
@property(retain) NSManagedObject *rawLogText; // @dynamic rawLogText;
@property(retain, nonatomic) NSString *type; // @dynamic type;
@property(retain, nonatomic) NSString *udid; // @dynamic udid;

@end

@interface DTDKCrashLogController : NSObject
{
    NSString *_statusMessage;
    NSString *_symbolicationStatus;
}

+ (id)pathToSymbolicationTool;
+ (id)keyPathsForValuesAffectingStatusMessage;
+ (id)controller;
@property(copy) NSString *symbolicationStatus; // @synthesize symbolicationStatus=_symbolicationStatus;
- (void).cxx_destruct;
- (void)enqueueLogForSymbolication:(id)arg1;
- (id)crashLogs;
- (void)copyExternalCrashLog:(id)arg1;
- (_Bool)shouldAcceptDroppedCrashLogAtPath:(id)arg1;
- (id)crashLogRootDirectory;
- (id)legacyRootDirectory;
@property(copy) NSString *statusMessage; // @synthesize statusMessage=_statusMessage;
- (Class)_database;
@property(readonly) _Bool enableCrashLogSupport;

@end

@interface DTDKCrashLogCopying : NSObject
{
}

+ (void)checkDevice:(id)arg1;

@end

@interface DTDKCrashLogDatabase : NSObject
{
}

+ (void)unsymbolicateCrashLogs:(id)arg1;
+ (void)forceSymbolicateCrashLogs:(id)arg1;
+ (void)symbolicateCrashLogs:(id)arg1;
+ (void)deleteCrashLogs:(id)arg1;
+ (_Bool)importCrashLogAtURL:(id)arg1;
+ (_Bool)importCrashLogs:(id)arg1;
+ (id)_loadCrashLogMetadata:(id)arg1;
+ (id)_incidentIdentifierForCrashLogAtURL:(id)arg1;
+ (id)dsymForUUID:(id)arg1 inContext:(id)arg2;
+ (id)dsymsForPath:(id)arg1 inContext:(id)arg2;
+ (id)dsymsInContext:(id)arg1;
+ (id)dsymMatchingPredicate:(id)arg1 inContext:(id)arg2;
+ (id)dsymsMatchingPredicate:(id)arg1 inContext:(id)arg2;
+ (id)binaryImageForUUID:(id)arg1 inContext:(id)arg2;
+ (id)binaryImagesInContext:(id)arg1;
+ (id)binaryImageMatchingPredicate:(id)arg1 inContext:(id)arg2;
+ (id)binaryImagesMatchingPredicate:(id)arg1 inContext:(id)arg2;
+ (id)crashLogForIncidentIdentifier:(id)arg1 inContext:(id)arg2;
+ (id)crashLogsInContext:(id)arg1;
+ (id)crashLogMatchingPredicate:(id)arg1 inContext:(id)arg2;
+ (id)crashLogsMatchingPredicate:(id)arg1 inContext:(id)arg2;
+ (id)objectsWithEntityName:(id)arg1 MatchingPredicate:(id)arg2 inContext:(id)arg3;
+ (void)startMigration;
+ (_Bool)hasFinishedMigration;
+ (id)temporaryMoc;
+ (id)mainThreadMoc;
+ (id)moc;
+ (_Bool)_fixVersionHashesAt:(id)arg1 error:(id *)arg2;
+ (id)_managedObjectModel;
+ (void)setLastScanEventId:(unsigned long long)arg1;
+ (unsigned long long)lastScanEventId;
+ (void)startFSEvents;

@end

@interface DTDKDeveloperProfile : NSObject
{
    NSArray *_displayCertificates;
}

+ (id)accountsPlistVersion;
+ (id)currentProfile;
- (void).cxx_destruct;
- (id)importDeveloperProfileFromFile:(id)arg1 withPassword:(id)arg2 accountProviders:(id)arg3 error:(id *)arg4;
- (BOOL)_importIdentityFromData:(id)arg1 withPassword:(id)arg2 error:(id *)arg3;
- (id)exportDeveloperProfileToFile:(id)arg1 withPassword:(id)arg2 accountProviders:(id)arg3 error:(id *)arg4;
- (BOOL)_exportAccountProviders:(id)arg1 toZipFile:(struct zip_internal *)arg2 withPassword:(id)arg3 count:(unsigned long long *)arg4 error:(id *)arg5;
- (id)_accountsPlistWithProviders:(id)arg1 keychain:(struct OpaqueSecKeychainRef *)arg2 numberOfAccounts:(unsigned long long *)arg3 error:(id *)arg4;
- (BOOL)_exportProvisioningProfilesToZipFile:(struct zip_internal *)arg1 numberExported:(unsigned long long *)arg2 error:(id *)arg3;
- (BOOL)_exportIdentitiesToZipFile:(struct zip_internal *)arg1 withPassword:(id)arg2 numberExported:(unsigned long long *)arg3 error:(id *)arg4;
@property(readonly) NSArray *ADCLogins;
- (id)identities;
@property(readonly) NSSet *provisioningProfiles;
@property(readonly) NSSet *certificates;
- (id)displayCertificates;
- (void)handleKeychainChanged:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface DTDKDeveloperProfileResult : NSObject
{
    unsigned long long _numberOfIdentities;
    unsigned long long _numberOfProfiles;
    unsigned long long _numberOfAccounts;
}

+ (id)resultWithNumberOfIdentities:(unsigned long long)arg1 numberOfProfiles:(unsigned long long)arg2 numberOfAccounts:(unsigned long long)arg3;
@property(readonly) unsigned long long numberOfAccounts; // @synthesize numberOfAccounts=_numberOfAccounts;
@property(readonly) unsigned long long numberOfProfiles; // @synthesize numberOfProfiles=_numberOfProfiles;
@property(readonly) unsigned long long numberOfIdentities; // @synthesize numberOfIdentities=_numberOfIdentities;

@end

@interface DTDKDeviceConnectionMonitor : NSObject <DTDKDeviceConnectionMonitor>
{
    DTDKRemoteDeviceConnection *_connection;
}

+ (id)keyPathsForValuesAffectingPacketRatio;
+ (id)keyPathsForValuesAffectingAverageLatency;
+ (id)monitorWithConnection:(id)arg1;
@property(retain) DTDKRemoteDeviceConnection *connection; // @synthesize connection=_connection;
- (void).cxx_destruct;
@property(readonly) double packetRatio;
@property(readonly) double averageLatency;
- (void)cancel;
@property(readonly, getter=isCancelled) BOOL cancelled;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DTDKFileSizeTransformer : NSValueTransformer
{
}

+ (BOOL)allowsReverseTransformation;
+ (Class)transformedValueClass;
- (id)transformedValue:(id)arg1;

@end

@interface DTDKFileSizeTransformerWithDashedZero : DTDKFileSizeTransformer
{
}

- (id)transformedValue:(id)arg1;

@end

@interface DTDKFileSizeTransformerWithNullZero : DTDKFileSizeTransformer
{
}

- (id)transformedValue:(id)arg1;

@end

@interface DTDKPowerAssertionToken : NSObject <DVTCancellable>
{
    id _assertionRef;
}

@property(retain) id assertionRef; // @synthesize assertionRef=_assertionRef;
- (void).cxx_destruct;
- (void)cancel;
@property(readonly, getter=isCancelled) BOOL cancelled;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DTDKProvisioningProfile : NSObject <NSCopying, DVTProvisioningProfile>
{
    NSArray *_certificates;
    NSArray *_identityCertificates;
    NSSet *_supportedUDIDs;
    DVTNotificationToken *_notificationToken;
    DVTCertificateUtilities *_certificateUtilities;
    NSArray *_signingCertificates;
    id _profile;
    NSString *_localPath;
    DVTFilePath *_filePath;
    NSString *_teamID;
    NSString *_teamName;
}

+ (id)keyPathsForValuesAffectingExpirationWarningImage;
+ (id)keyPathsForValuesAffectingPreferredFilenameExtension;
+ (id)keyPathsForValuesAffectingPlatform;
+ (id)keyPathsForValuesAffectingIsMacProfile;
+ (id)keyPathsForValuesAffectingWillExpireSoon;
+ (id)keyPathsForValuesAffectingExpired;
+ (id)keyPathsForValuesAffectingCreationDate;
+ (id)keyPathsForValuesAffectingExpirationDate;
+ (id)keyPathsForValuesAffectingTeamIdentifierPrefixes;
+ (id)keyPathsForValuesAffectingAppIdentifierPrefixes;
+ (id)keyPathsForValuesAffectingUsesExplicitAppIdentifier;
+ (id)keyPathsForValuesAffectingAppIdentifierEntitlementWithoutPrefix;
+ (id)keyPathsForValuesAffectingAppIdentifierEntitlement;
+ (id)keyPathsForValuesAffectingEntitlements;
+ (id)keyPathsForValuesAffectingProfile;
+ (id)keyPathsForValuesAffectingName;
+ (id)keyPathsForValuesAffectingUUID;
+ (id)profileWithData:(id)arg1 certificateUtilities:(id)arg2;
+ (id)profileWithURL:(id)arg1 certificateUtilities:(id)arg2;
+ (id)profileWithPath:(id)arg1 certificateUtilities:(id)arg2;
+ (id)profileWithData:(id)arg1 certificateUtilities:(id)arg2 error:(id *)arg3;
+ (id)profileWithURL:(id)arg1 certificateUtilities:(id)arg2 error:(id *)arg3;
+ (id)profileWithPath:(id)arg1 certificateUtilities:(id)arg2 error:(id *)arg3;
+ (id)profileWithMISProfile:(struct _MISProfile *)arg1 certificateUtilities:(id)arg2 error:(id *)arg3;
+ (BOOL)couldBeProfileFilename:(id)arg1;
@property(readonly) DVTCertificateUtilities *certificateUtilities; // @synthesize certificateUtilities=_certificateUtilities;
@property(copy) NSString *_teamName; // @synthesize _teamName;
@property(copy) NSString *_teamID; // @synthesize _teamID;
@property(copy) NSString *localPath; // @synthesize localPath=_localPath;
@property(retain) id _profile; // @synthesize _profile;
- (void).cxx_destruct;
@property(readonly) NSArray *identityCertificates;
- (BOOL)containsCertificate:(struct OpaqueSecCertificateRef *)arg1;
@property(readonly, nonatomic) DVTFilePath *filePath; // @synthesize filePath=_filePath;
- (id)longDescription;
@property(readonly) BOOL isPushEnabled;
@property(readonly) BOOL isOMCEnabled;
@property(readonly) BOOL isWACEnabled;
@property(readonly) BOOL isHomeKitEnabled;
@property(readonly) BOOL isApplicationGroupsEnabled;
@property(readonly) BOOL isHealthKitEnabled;
@property(readonly) BOOL isAssociatedDomainsEnabled;
@property(readonly) BOOL isVPNLiteEnabled;
@property(readonly) BOOL isKeychainAccessGroupsEnabled;
@property(readonly) BOOL isGameCenterEnabled;
@property(readonly) BOOL isMapsEnabled;
@property(readonly) BOOL isInterAppAudioEnabled;
@property(readonly) BOOL isDataProtectionEnabled;
@property(readonly) NSString *dataProtectionLevel;
@property(readonly) BOOL isPassbookEnabled;
@property(readonly) BOOL isICloudEnabled;
- (BOOL)allowsFeatures:(id)arg1 missingFeatures:(id *)arg2;
@property(readonly) NSString *teamName;
@property(readonly) NSString *teamID;
@property(readonly, copy) NSString *description;
- (long long)dateCompareDecending:(id)arg1;
- (long long)dateCompare:(id)arg1;
- (long long)localizedCompare:(id)arg1;
- (long long)compare:(id)arg1;
@property(readonly) unsigned long long hash;
- (BOOL)isEqual:(id)arg1;
- (BOOL)matchesBundleIdentifier:(id)arg1;
- (BOOL)canBeInstalledOnDevice:(id)arg1;
- (BOOL)canBeInstalledOnDeviceWithIdentifier:(id)arg1;
@property(readonly) NSData *dataRepresentation;
@property(readonly) NSSet *supportedUDIDs;
@property(readonly) NSString *preferredFilenameExtension;
@property(readonly) DVTPlatform *dvt_platform;
@property(readonly) NSString *platform;
@property(readonly) BOOL isMacProfile;
@property(readonly) BOOL isUniversal;
@property(readonly) BOOL expiredOrWillExpireSoon;
@property(readonly) BOOL willExpireSoon;
@property(readonly) BOOL expired;
@property(readonly) NSDate *creationDate;
@property(readonly) NSDate *expirationDate;
- (BOOL)hasCertificateMatchingIdentity:(id)arg1 includeExpired:(BOOL)arg2;
- (BOOL)containsSigningCertificate:(id)arg1;
@property(readonly) NSArray *identitySigningCertificates;
@property(readonly) NSArray *signingCertificates;
@property(readonly) NSArray *certificates;
@property(readonly) NSArray *teamIdentifierPrefixes;
@property(readonly) NSArray *appIdentifierPrefixes;
@property(readonly) BOOL usesExplicitAppIdentifier;
@property(readonly) NSString *appIdentifierEntitlementWithoutPrefix;
@property(readonly) NSString *appIdentifierEntitlement;
@property(readonly) DVTAppIDFeatures *features;
@property(readonly) NSDictionary *entitlements;
@property struct _MISProfile *profile;
@property(readonly) int version;
@property(readonly) NSString *name;
@property(readonly) NSString *UUID;
- (BOOL)writeToURL:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;
- (BOOL)writeToFile:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithData:(id)arg1 certificateUtilities:(id)arg2 error:(id *)arg3;
- (id)initWithContentsOfURL:(id)arg1 certificateUtilities:(id)arg2 error:(id *)arg3;
- (id)initWithPath:(id)arg1 certificateUtilities:(id)arg2 error:(id *)arg3;
- (id)initWithMISProfile:(struct _MISProfile *)arg1 certificateUtilities:(id)arg2 error:(id *)arg3;
- (id)init;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

@interface DTDKProvisioningProfileController : NSObject
{
    DVTDispatchLock *_profilesLock;
    BOOL _hasCompletedInitialScan;
    NSMutableSet *_allProfiles;
    NSObject<OS_dispatch_queue> *_scanQueue;
}

+ (id)keyPathsForValuesAffectingAllUsableProfiles;
+ (id)uuidTable;
+ (id)provisioningProfileSearchPaths;
+ (id)mobileDeviceSupportSearchPaths;
+ (id)controller;
@property(readonly) NSObject<OS_dispatch_queue> *scanQueue; // @synthesize scanQueue=_scanQueue;
@property BOOL hasCompletedInitialScan; // @synthesize hasCompletedInitialScan=_hasCompletedInitialScan;
@property(readonly) NSMutableSet *rawProfiles; // @synthesize rawProfiles=_allProfiles;
- (void).cxx_destruct;
@property(readonly, copy) NSSet *allUsableProfiles;
- (void)_postProfileNotificationsWithAdditions:(id)arg1 removals:(id)arg2 all:(id)arg3;
- (void)_fullSyncForProfileDirectoryPaths:(id)arg1 fileManager:(id)arg2;
- (void)_profileDirectorySubPathsDidChange:(id)arg1 wantsPurging:(BOOL)arg2;
- (void)_profilePathsOrDirectoriesChanged:(id)arg1;
- (void)fsEventReceived:(id)arg1;
- (id)allProfiles_sync;
@property(readonly, copy) NSSet *allProfiles;
- (void)startScanIfNeeded:(BOOL)arg1;
- (void)startScanIfNeeded;
- (void)setAllProfiles:(id)arg1;
- (void)intersectAllProfiles:(id)arg1;
- (void)removeAllProfiles:(id)arg1;
- (void)addAllProfiles:(id)arg1;
- (void)removeAllProfilesObject:(id)arg1;
- (void)addAllProfilesObject:(id)arg1;
- (id)profilesMatchingCertificate:(struct OpaqueSecCertificateRef *)arg1;
- (id)profilesMatchingApplicationID:(id)arg1;
- (id)profileMatchingUUID:(id)arg1;
- (id)profilesMatchingPredicate:(id)arg1;
- (BOOL)installProvisioningProfile:(id)arg1 error:(id *)arg2;
- (BOOL)installProvisioningProfiles:(id)arg1 error:(id *)arg2;
- (void)installProvisioningProfiles:(id)arg1;
- (void)installProvisioningProfile:(id)arg1;
- (void)deleteProvisioningProfile:(id)arg1;
- (void)deleteProvisioningProfiles:(id)arg1;
- (id)certificateUtilities;
- (id)init;

@end

@interface DTDKRemoteDeviceConnection : NSObject <DVTInvalidation>
{
    NSMutableArray *_pendingRequests;
    DVTDispatchLock *_pendingRequestsLock;
    DVTDispatchLock *_instrumentsLock;
    struct deque<double, std::__1::allocator<double>> _recentPings;
    DVTPinger *_pinger;
    NSObject<OS_dispatch_source> *_pingTimer;
    NSObject<OS_dispatch_queue> *_pingQueue;
    NSMutableSet *_connectionMonitors;
    unsigned long long _hash;
    _Bool _wireless;
    _Bool _paired;
    unsigned int _interfaceSpeed;
    unsigned int _location;
    DTDKRemoteDeviceToken *_owner;
    NSString *_identifier;
    NSString *_bonjourServiceName;
    NSString *_companionIdentifier;
    DTXConnection *_instrumentsConnection;
    struct _AMDevice *_deviceRef;
    void *_wakeupToken;
    double _averageLatency;
    unsigned long long _pings;
    unsigned long long _pongs;
}

+ (void)netService:(id)arg1 didNotResolve:(id)arg2;
+ (void)netServiceDidResolveAddress:(id)arg1;
+ (void)netServiceBrowser:(id)arg1 didRemoveService:(id)arg2 moreComing:(BOOL)arg3;
+ (void)netServiceBrowser:(id)arg1 didFindService:(id)arg2 moreComing:(BOOL)arg3;
+ (void)startServiceBrowsers;
+ (id)keyPathsForValuesAffectingAddresses;
+ (id)keyPathsForValuesAffectingHostname;
+ (id)allConnections;
+ (id)connectionForDeviceRef:(struct _AMDevice *)arg1;
+ (id)existingConnectionForDeviceRef:(struct _AMDevice *)arg1;
+ (void)initialize;
@property(readonly) unsigned long long pongs; // @synthesize pongs=_pongs;
@property(readonly) unsigned long long pings; // @synthesize pings=_pings;
@property(readonly) double averageLatency; // @synthesize averageLatency=_averageLatency;
@property(readonly) void *wakeupToken; // @synthesize wakeupToken=_wakeupToken;
@property(readonly) struct _AMDevice *deviceRef; // @synthesize deviceRef=_deviceRef;
@property(retain, nonatomic) DTXConnection *instrumentsConnection; // @synthesize instrumentsConnection=_instrumentsConnection;
@property(readonly, copy) NSString *companionIdentifier; // @synthesize companionIdentifier=_companionIdentifier;
@property(readonly) unsigned int location; // @synthesize location=_location;
@property(readonly, copy) NSString *bonjourServiceName; // @synthesize bonjourServiceName=_bonjourServiceName;
@property(getter=isPaired) _Bool paired; // @synthesize paired=_paired;
@property(readonly, getter=isWireless) _Bool wireless; // @synthesize wireless=_wireless;
@property(readonly) unsigned int interfaceSpeed; // @synthesize interfaceSpeed=_interfaceSpeed;
@property(readonly, copy) NSString *identifier; // @synthesize identifier=_identifier;
@property __weak DTDKRemoteDeviceToken *owner; // @synthesize owner=_owner;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)removeConnectionMonitor:(id)arg1;
- (id)monitorConnection;
- (void)_createPingTimerIfNecessary;
- (id)fetchValueForDomain:(id)arg1 andKey:(id)arg2;
- (void)_drainPendingRequests;
- (id)setValue:(id)arg1 forDomain:(id)arg2 andKey:(id)arg3;
- (id)startHouseArrestServiceForAppIdentifier:(id)arg1;
- (id)startFirstServiceOf:(id)arg1 unlockKeybag:(_Bool)arg2;
- (id)startFirstServiceOf:(id)arg1;
- (id)startServiceWithIdentifier:(id)arg1 unlockKeybag:(_Bool)arg2;
- (id)startServiceWithIdentifier:(id)arg1;
- (id)futureWithSession:(CDUnknownBlockType)arg1;
- (int)executeInSession:(CDUnknownBlockType)arg1;
- (_Bool)unpair;
- (id)wakeup;
- (long long)compare:(id)arg1;
@property(readonly, getter=isGizmo) _Bool gizmo;
@property(readonly, getter=isConnected) _Bool connected;
- (BOOL)isEqual:(id)arg1;
@property(readonly) unsigned long long hash;
@property(readonly, copy) NSString *description;
@property(readonly, copy) NSArray *addresses;
@property(readonly, copy) NSString *hostname;
- (void)updatePairingStatus;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)primitiveInvalidate;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface DTDKRemoteDeviceConsoleController : NSObject
{
    struct _AMDServiceConnection *_serviceRef;
    NSObject<OS_dispatch_queue> *_queue;
    NSObject<OS_dispatch_queue> *_socketQueue;
    NSObject<OS_dispatch_source> *_consoleSource;
    _Bool _isInvalidating;
    struct DTDKCircularBuffer *_circularBuffer;
    DVTDispatchLock *_bufferLock;
    id <DTDKRemoteDeviceConsoleControllerDelegate> _delegate;
    DTDKRemoteDeviceToken *_token;
}

+ (id)consoleStringWithData:(id)arg1 startingAtOffset:(unsigned long long)arg2;
+ (id)controllerForDevice:(id)arg1;
@property __weak DTDKRemoteDeviceToken *token; // @synthesize token=_token;
@property(retain) id <DTDKRemoteDeviceConsoleControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
@property(readonly, copy) NSString *consoleString;
- (void)clear;
- (void)reload;
- (void)invalidate;
- (void)dealloc;

@end

@interface DTDKRemoteDeviceDataListener : NSObject <NSNetServiceBrowserDelegate, NSNetServiceDelegate>
{
    struct __CFRunLoop *_listenerRunLoop;
    NSThread *_listenerThread;
    struct _AMDeviceNotificationContext *_deviceNotificationRef;
}

+ (id)sharedInstance;
@property(nonatomic) struct _AMDeviceNotificationContext *deviceNotificationRef; // @synthesize deviceNotificationRef=_deviceNotificationRef;
@property(retain) NSThread *listenerThread; // @synthesize listenerThread=_listenerThread;
- (void).cxx_destruct;
- (void)_rescan;
- (void)enumerateDevicesWithBlock:(CDUnknownBlockType)arg1;
- (id)allDevices;
- (id)allConnections;
- (void)presentError:(id)arg1;
- (void)listenerThreadImplementation;
- (void)stopListening;
- (void)startListening;
@property struct __CFRunLoop *listenerRunLoop; // @synthesize listenerRunLoop=_listenerRunLoop;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DTDKRemoteDeviceToken : NSObject
{
    DVTPlatform *_platform;
    NSMutableArray *_connections;
    DVTDispatchLock *_connectionsLock;
    DVTNotificationToken *_connectionRemovedToken;
    DVTNotificationToken *_connectionAddedToken;
    NSError *_developerDiskImageMountError;
    _Bool _inReloadApplications;
    _Bool _inReloadSystemApplications;
    _Bool _inReloadProvisioningProfiles;
    DTDKRemoteDeviceConnection *_primaryConnection;
    DTDKRemoteDeviceConsoleController *_deviceConsoleController;
    NSString *_deviceName;
    NSNumber *_deviceECID;
    NSString *_deviceIMEI;
    NSString *_deviceClass;
    NSString *_deviceActivationState;
    NSString *_deviceType;
    NSString *_deviceWiFiMAC;
    NSString *_deviceBluetoothMAC;
    NSString *_deviceCodename;
    NSString *_productVersion;
    NSString *_buildVersion;
    NSString *_deviceSerialNumber;
    NSString *_deviceColorString;
    NSString *_deviceEnclosureColorString;
    NSString *_deviceArchitecture;
    NSNumber *_deviceTotalCapacity;
    NSNumber *_deviceAvailableCapacity;
    NSString *_deviceToolsType;
    NSNumber *_isPasscodeLockedObj;
    NSNumber *_isChargingObj;
    NSNumber *_deviceProductionSOC;
    NSNumber *_canBeWatchCompanionObj;
    NSArray *_supportedDeviceFamilies;
    NSNumber *_deviceBatteryCapacity;
    NSString *_deviceDevelopmentStatus;
    NSNumber *_deviceChipID;
    NSSet *_applications;
    NSSet *_systemApplications;
    NSSet *_provisioningProfiles;
    DTDKRemoteDeviceConnection *_primaryWiredConection;
    DTDKRemoteDeviceConnection *_primaryWirelessConection;
    NSString *_deviceIdentifier;
    NSString *_deviceSoftwareVersion;
    NSArray *_applicationDictionaries;
    NSArray *_systemApplicationDictionaries;
    long long _deviceSSHPort;
    long long _deviceTelnetPort;
    long long _deviceRsyncPort;
    long long _deviceMountPort;
    long long _deviceNFSPort;
    id _darwinNotificationService;
}

+ (id)keyPathsForValuesAffectingApplications;
+ (id)keyPathsForValuesAffectingDeviceIsSupported;
+ (id)keyPathsForValuesAffectingDeviceIsActivated;
+ (id)keyPathsForValuesAffectingDevelopmentFlag;
+ (id)keyPathsForValuesAffectingDeviceIsProduction;
+ (id)keyPathsForValuesAffectingHasLoaded_deviceIsProduction;
+ (id)keyPathsForValuesAffectingHasLoaded_canBeWatchCompanion;
+ (id)keyPathsForValuesAffectingCanBeWatchCompanion;
+ (id)keyPathsForValuesAffectingHasLoaded_isCharging;
+ (id)keyPathsForValuesAffectingIsCharging;
+ (id)keyPathsForValuesAffectingHasLoaded_isPasscodeLocked;
+ (id)keyPathsForValuesAffectingIsPasscodeLocked;
+ (id)keyPathsForValuesAffectingDeviceHasStandardTools;
+ (id)keyPathsForValuesAffectingDeviceHasInternalTools;
+ (id)keyPathsForValuesAffectingDeviceCrashReporterKey;
+ (id)keyPathsForValuesAffectingDeviceSoftwareVersion;
+ (id)keyPathsForValuesAffectingDeviceProcessorDescription;
+ (id)keyPathsForValuesAffectingHasLoaded_deviceChipID;
+ (id)keyPathsForValuesAffectingDeviceChipID;
+ (id)keyPathsForValuesAffectingHasLoadedDeviceDevelopmentStatus;
+ (id)keyPathsForValuesAffectingHasLoaded_deviceBatteryCapacity;
+ (id)keyPathsForValuesAffectingDeviceBatteryCapacity;
+ (id)keyPathsForValuesAffectingDeviceHasBattery;
+ (id)keyPathsForValuesAffectingHasLoaded_supportedDeviceFamilies;
+ (id)keyPathsForValuesAffectingHasLoaded_canBeWatchCompanionObj;
+ (id)keyPathsForValuesAffectingHasLoaded_deviceProductionSOC;
+ (id)keyPathsForValuesAffectingHasLoaded_isChargingObj;
+ (id)keyPathsForValuesAffectingHasLoaded_isPasscodeLockedObj;
+ (id)keyPathsForValuesAffectingHasLoaded_deviceToolsType;
+ (id)keyPathsForValuesAffectingHasLoaded_deviceAvailableCapacity;
+ (id)keyPathsForValuesAffectingHasLoaded_deviceTotalCapacity;
+ (id)keyPathsForValuesAffectingHasLoaded_deviceArchitecture;
+ (id)keyPathsForValuesAffectingHasLoaded_deviceEnclosureColorString;
+ (id)keyPathsForValuesAffectingHasLoaded_deviceColorString;
+ (id)keyPathsForValuesAffectingHasLoaded_deviceSerialNumber;
+ (id)keyPathsForValuesAffectingHasLoaded_buildVersion;
+ (id)keyPathsForValuesAffectingHasLoaded_productVersion;
+ (id)keyPathsForValuesAffectingHasLoaded_deviceCodename;
+ (id)keyPathsForValuesAffectingHasLoaded_deviceBluetoothMAC;
+ (id)keyPathsForValuesAffectingHasLoaded_deviceWiFiMAC;
+ (id)keyPathsForValuesAffectingHasLoaded_deviceType;
+ (id)keyPathsForValuesAffectingHasLoaded_deviceActivationState;
+ (id)keyPathsForValuesAffectingHasLoaded_deviceClass;
+ (id)keyPathsForValuesAffectingHasLoaded_deviceIMEI;
+ (id)keyPathsForValuesAffectingHasLoaded_deviceECID;
+ (id)keyPathsForValuesAffectingHasLoaded_deviceName;
+ (id)_wirelessHostID;
+ (id)keyPathsForValuesAffectingHasDirectConnection;
+ (id)keyPathsForValuesAffectingDeviceIsPaired;
+ (id)keyPathsForValuesAffectingHasWirelessConnection;
+ (id)keyPathsForValuesAffectingHasWiredConnection;
+ (id)keyPathsForValuesAffectingDeviceAddresses;
+ (id)keyPathsForValuesAffectingDeviceHostname;
+ (id)keyPathsForValuesAffectingWakeupToken;
+ (id)keyPathsForValuesAffectingDeviceClassForDisplay;
+ (id)keyPathsForValuesAffectingLocalizedDeviceModel;
+ (id)keyPathsForValuesAffectingIsConnected;
+ (id)keyPathsForValuesAffectingIsSupportedOS;
+ (id)tokenWithDeviceIdentifier:(id)arg1;
+ (id)deviceLock;
+ (id)devices;
@property _Bool inReloadProvisioningProfiles; // @synthesize inReloadProvisioningProfiles=_inReloadProvisioningProfiles;
@property _Bool inReloadSystemApplications; // @synthesize inReloadSystemApplications=_inReloadSystemApplications;
@property _Bool inReloadApplications; // @synthesize inReloadApplications=_inReloadApplications;
@property(retain) id darwinNotificationService; // @synthesize darwinNotificationService=_darwinNotificationService;
@property long long deviceNFSPort; // @synthesize deviceNFSPort=_deviceNFSPort;
@property long long deviceMountPort; // @synthesize deviceMountPort=_deviceMountPort;
@property long long deviceRsyncPort; // @synthesize deviceRsyncPort=_deviceRsyncPort;
@property long long deviceTelnetPort; // @synthesize deviceTelnetPort=_deviceTelnetPort;
@property long long deviceSSHPort; // @synthesize deviceSSHPort=_deviceSSHPort;
@property(copy, nonatomic) NSArray *systemApplicationDictionaries; // @synthesize systemApplicationDictionaries=_systemApplicationDictionaries;
@property(copy, nonatomic) NSArray *applicationDictionaries; // @synthesize applicationDictionaries=_applicationDictionaries;
@property(copy, nonatomic) NSString *deviceSoftwareVersion; // @synthesize deviceSoftwareVersion=_deviceSoftwareVersion;
@property(copy, nonatomic) NSString *deviceIdentifier; // @synthesize deviceIdentifier=_deviceIdentifier;
@property(retain, nonatomic) DTDKRemoteDeviceConnection *primaryWirelessConection; // @synthesize primaryWirelessConection=_primaryWirelessConection;
@property(retain, nonatomic) DTDKRemoteDeviceConnection *primaryWiredConection; // @synthesize primaryWiredConection=_primaryWiredConection;
@property(copy, nonatomic) NSSet *provisioningProfiles; // @synthesize provisioningProfiles=_provisioningProfiles;
@property(copy, nonatomic) NSSet *systemApplications; // @synthesize systemApplications=_systemApplications;
@property(copy, nonatomic) NSSet *applications; // @synthesize applications=_applications;
@property(copy, nonatomic) NSNumber *deviceChipID; // @synthesize deviceChipID=_deviceChipID;
@property(copy, nonatomic) NSString *deviceDevelopmentStatus; // @synthesize deviceDevelopmentStatus=_deviceDevelopmentStatus;
@property(copy, nonatomic) NSNumber *deviceBatteryCapacity; // @synthesize deviceBatteryCapacity=_deviceBatteryCapacity;
@property(copy, nonatomic) NSArray *supportedDeviceFamilies; // @synthesize supportedDeviceFamilies=_supportedDeviceFamilies;
@property(copy, nonatomic) NSNumber *canBeWatchCompanionObj; // @synthesize canBeWatchCompanionObj=_canBeWatchCompanionObj;
@property(copy, nonatomic) NSNumber *deviceProductionSOC; // @synthesize deviceProductionSOC=_deviceProductionSOC;
@property(copy, nonatomic) NSNumber *isChargingObj; // @synthesize isChargingObj=_isChargingObj;
@property(copy, nonatomic) NSNumber *isPasscodeLockedObj; // @synthesize isPasscodeLockedObj=_isPasscodeLockedObj;
@property(copy, nonatomic) NSString *deviceToolsType; // @synthesize deviceToolsType=_deviceToolsType;
@property(copy, nonatomic) NSNumber *deviceAvailableCapacity; // @synthesize deviceAvailableCapacity=_deviceAvailableCapacity;
@property(copy, nonatomic) NSNumber *deviceTotalCapacity; // @synthesize deviceTotalCapacity=_deviceTotalCapacity;
@property(copy, nonatomic) NSString *deviceArchitecture; // @synthesize deviceArchitecture=_deviceArchitecture;
@property(copy, nonatomic) NSString *deviceEnclosureColorString; // @synthesize deviceEnclosureColorString=_deviceEnclosureColorString;
@property(copy, nonatomic) NSString *deviceColorString; // @synthesize deviceColorString=_deviceColorString;
@property(copy, nonatomic) NSString *deviceSerialNumber; // @synthesize deviceSerialNumber=_deviceSerialNumber;
@property(copy, nonatomic) NSString *buildVersion; // @synthesize buildVersion=_buildVersion;
@property(copy, nonatomic) NSString *productVersion; // @synthesize productVersion=_productVersion;
@property(copy, nonatomic) NSString *deviceCodename; // @synthesize deviceCodename=_deviceCodename;
@property(copy, nonatomic) NSString *deviceBluetoothMAC; // @synthesize deviceBluetoothMAC=_deviceBluetoothMAC;
@property(copy, nonatomic) NSString *deviceWiFiMAC; // @synthesize deviceWiFiMAC=_deviceWiFiMAC;
@property(copy, nonatomic) NSString *deviceType; // @synthesize deviceType=_deviceType;
@property(copy, nonatomic) NSString *deviceActivationState; // @synthesize deviceActivationState=_deviceActivationState;
@property(copy, nonatomic) NSString *deviceClass; // @synthesize deviceClass=_deviceClass;
@property(copy, nonatomic) NSString *deviceIMEI; // @synthesize deviceIMEI=_deviceIMEI;
@property(copy, nonatomic) NSNumber *deviceECID; // @synthesize deviceECID=_deviceECID;
@property(copy, nonatomic) NSString *deviceName; // @synthesize deviceName=_deviceName;
@property(retain, nonatomic) DTDKRemoteDeviceConsoleController *deviceConsoleController; // @synthesize deviceConsoleController=_deviceConsoleController;
@property(retain, nonatomic) DTDKRemoteDeviceConnection *primaryConnection; // @synthesize primaryConnection=_primaryConnection;
- (void).cxx_destruct;
- (id)startTCPRelay;
- (id)editExportsXPCConnection;
- (id)tcprelayXPCConnection;
- (id)takeWirelessPowerAssertionWithName:(id)arg1 deatils:(id)arg2 andTimeout:(double)arg3;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)description;
- (void)startDarwinNotificationListener;
- (void)uninstallProvisioningProfiles:(id)arg1;
- (void)uninstallProvisioningProfile:(id)arg1;
- (void)installProvisioningProfiles:(id)arg1;
- (void)installProvisioningProfile:(id)arg1;
- (void)reload_provisioningProfiles;
- (void)fetchApplications:(CDUnknownBlockType)arg1;
- (id)fetchApplications;
- (void)reload_systemApplications;
- (void)reload_applications;
- (void)renameDevice:(id)arg1;
- (id)installedProvisioningProfileWithUUID:(id)arg1;
@property(readonly, nonatomic) _Bool deviceIsSupported;
- (_Bool)deviceIsActivated;
- (id)setDevelopmentFlag:(_Bool)arg1;
- (_Bool)developmentFlag;
- (void)setDeviceIsProduction:(_Bool)arg1;
@property(readonly, nonatomic) _Bool deviceIsProduction;
@property(readonly) _Bool hasLoaded_deviceIsProduction;
@property(readonly) _Bool hasLoaded_canBeWatchCompanion;
@property(readonly, nonatomic) _Bool canBeWatchCompanion;
@property(readonly) _Bool hasLoaded_isCharging;
@property(readonly, nonatomic) _Bool isCharging;
@property(readonly) _Bool hasLoaded_isPasscodeLocked;
@property(readonly, nonatomic) _Bool isPasscodeLocked;
@property(readonly, nonatomic) _Bool deviceHasStandardTools;
@property(readonly, nonatomic) _Bool deviceHasInternalTools;
@property(readonly, copy, nonatomic) NSString *deviceCrashReporterKey;
@property(readonly, copy, nonatomic) NSString *deviceProcessorDescription;
@property(readonly) _Bool hasLoaded_deviceChipID;
- (id)reload_deviceChipID;
- (_Bool)syncSetDevelopmentFlag:(BOOL)arg1 error:(id *)arg2;
@property(readonly) _Bool hasLoaded_deviceDevelopmentStatus;
- (id)reload_deviceDevelopmentStatus;
@property(readonly) _Bool hasLoaded_deviceBatteryCapacity;
- (id)reload_deviceBatteryCapacity;
- (_Bool)deviceHasBattery;
- (_Bool)hasLoaded_supportedDeviceFamilies;
- (id)reload_supportedDeviceFamilies;
- (id)reloadIfNeeded_supportedDeviceFamilies;
- (_Bool)hasLoaded_canBeWatchCompanionObj;
- (id)reload_canBeWatchCompanionObj;
- (id)reloadIfNeeded_canBeWatchCompanionObj;
- (_Bool)hasLoaded_deviceProductionSOC;
- (id)reload_deviceProductionSOC;
- (id)reloadIfNeeded_deviceProductionSOC;
- (_Bool)hasLoaded_isChargingObj;
- (id)reload_isChargingObj;
- (id)reloadIfNeeded_isChargingObj;
- (_Bool)hasLoaded_isPasscodeLockedObj;
- (id)reload_isPasscodeLockedObj;
- (id)reloadIfNeeded_isPasscodeLockedObj;
@property(readonly) _Bool hasLoaded_deviceToolsType;
- (id)reload_deviceToolsType;
- (id)reloadIfNeeded_deviceToolsType;
@property(readonly) _Bool hasLoaded_deviceAvailableCapacity;
- (id)reload_deviceAvailableCapacity;
- (id)reloadIfNeeded_deviceAvailableCapacity;
@property(readonly) _Bool hasLoaded_deviceTotalCapacity;
- (id)reload_deviceTotalCapacity;
- (id)reloadIfNeeded_deviceTotalCapacity;
@property(readonly) _Bool hasLoaded_deviceArchitecture;
- (id)reload_deviceArchitecture;
- (id)reloadIfNeeded_deviceArchitecture;
@property(readonly) _Bool hasLoaded_deviceEnclosureColorString;
- (id)reload_deviceEnclosureColorString;
- (id)reloadIfNeeded_deviceEnclosureColorString;
@property(readonly) _Bool hasLoaded_deviceColorString;
- (id)reload_deviceColorString;
- (id)reloadIfNeeded_deviceColorString;
@property(readonly) _Bool hasLoaded_deviceSerialNumber;
- (id)reload_deviceSerialNumber;
- (id)reloadIfNeeded_deviceSerialNumber;
@property(readonly) _Bool hasLoaded_buildVersion;
- (id)reload_buildVersion;
- (id)reloadIfNeeded_buildVersion;
@property(readonly) _Bool hasLoaded_productVersion;
- (id)reload_productVersion;
- (id)reloadIfNeeded_productVersion;
@property(readonly) _Bool hasLoaded_deviceCodename;
- (id)reload_deviceCodename;
- (id)reloadIfNeeded_deviceCodename;
@property(readonly) _Bool hasLoaded_deviceBluetoothMAC;
- (id)reload_deviceBluetoothMAC;
- (id)reloadIfNeeded_deviceBluetoothMAC;
@property(readonly) _Bool hasLoaded_deviceWiFiMAC;
- (id)reload_deviceWiFiMAC;
- (id)reloadIfNeeded_deviceWiFiMAC;
@property(readonly) _Bool hasLoaded_deviceType;
- (id)reload_deviceType;
- (id)reloadIfNeeded_deviceType;
@property(readonly) _Bool hasLoaded_deviceActivationState;
- (id)reload_deviceActivationState;
- (id)reloadIfNeeded_deviceActivationState;
@property(readonly) _Bool hasLoaded_deviceClass;
- (id)reload_deviceClass;
- (id)reloadIfNeeded_deviceClass;
@property(readonly) _Bool hasLoaded_deviceIMEI;
- (id)reload_deviceIMEI;
- (id)reloadIfNeeded_deviceIMEI;
@property(readonly) _Bool hasLoaded_deviceECID;
- (id)reload_deviceECID;
- (id)reloadIfNeeded_deviceECID;
@property(readonly) _Bool hasLoaded_deviceName;
- (id)reload_deviceName;
- (id)reloadIfNeeded_deviceName;
- (_Bool)uninstallApplicationWithIdentifier:(id)arg1 options:(id)arg2 andError:(id *)arg3 withCallback:(CDUnknownBlockType)arg4;
- (_Bool)upgradeApplicationAtPath:(id)arg1 withOptions:(id)arg2 andError:(id *)arg3 withCallback:(CDUnknownBlockType)arg4;
- (_Bool)installApplicationAtPath:(id)arg1 withOptions:(id)arg2 andError:(id *)arg3 withCallback:(CDUnknownBlockType)arg4;
- (_Bool)transferPath:(id)arg1 withOptions:(id)arg2 andError:(id *)arg3 withCallback:(CDUnknownBlockType)arg4;
- (_Bool)installApplicationBundleAtPath:(id)arg1 withOptions:(id)arg2 andError:(id *)arg3 withCallback:(CDUnknownBlockType)arg4;
- (id)checkDeviceCapabilities:(id)arg1 withOptions:(id)arg2 andError:(id *)arg3;
- (_Bool)simulateLatitude:(id)arg1 andLongitude:(id)arg2 withError:(id *)arg3;
- (_Bool)stopSimulatingLocationWithError:(id *)arg1;
- (id)copyAndProcessSharedCache;
- (id)developerDiskImageMountError;
- (_Bool)mountDeveloperDiskImageWithError:(id *)arg1;
- (_Bool)mountDeveloperDiskImage:(id)arg1 withError:(id *)arg2;
- (id)exactSymbolsDirectory:(id *)arg1;
- (id)idealExistingSymbolsDirectory:(id *)arg1;
- (struct _AMDServiceConnection *)startLocationSimulationServiceWithError:(id *)arg1;
- (struct _AMDServiceConnection *)startSharedCacheCopyingServiceWithError:(id *)arg1;
- (struct _AMDServiceConnection *)startXcodeDeviceMonitorServiceWithError:(id *)arg1;
- (struct _AMDServiceConnection *)startSyslogServiceWithError:(id *)arg1;
- (struct _AMDServiceConnection *)startCrashReportCopyMobileServiceWithError:(id *)arg1;
- (struct _AMDServiceConnection *)startCrashReportMoverServiceWithError:(id *)arg1;
- (struct _AMDServiceConnection *)startAppInstallationServiceWithError:(id *)arg1;
- (struct _AMDServiceConnection *)startDebugServerServiceWithError:(id *)arg1;
- (struct _AMDServiceConnection *)startServiceWithIdentifier:(id)arg1 andError:(id *)arg2;
- (id)deviceArbitrationForcedCheckIn;
- (id)deviceArbitrationCheckIn;
- (id)_deviceArbitrationCheckIn:(id)arg1;
- (id)startXcodeDeviceArbitrationService;
- (id)startHouseArrestServiceForAppIdentifier:(id)arg1;
- (id)startXcodeDeviceMonitorService;
- (id)wirelessInstrumentsServer;
- (id)wiredInstrumentsServer;
- (id)primaryInstrumentsServer;
- (id)startInstrumentsServerService;
- (id)startSyslogService;
- (id)startAppListService;
- (id)startLocationSimulationService;
- (id)startSharedCacheCopyingService;
- (id)startCrashReportCopyMobileService;
- (id)startCrashReportMoverService;
- (id)startAppInstallationService;
- (id)startSpringboardService;
- (id)startDarwinNotificationService;
- (id)startDebugServerServiceWithExtension:(id)arg1;
- (id)_debugServiceArrayWithExtension:(id)arg1 services:(id)arg2;
- (id)startFirstServiceOf:(id)arg1 unlockKeybag:(_Bool)arg2;
- (id)startFirstServiceOf:(id)arg1;
- (id)startServiceWithIdentifier:(id)arg1;
- (void)unpair;
- (void)disableWireless;
- (id)enableWireless;
- (_Bool)isWirelessEnabled;
- (id)wakeup;
- (int)executeInSession:(CDUnknownBlockType)arg1;
- (void)removeConnection:(id)arg1;
- (void)addConnection:(id)arg1;
@property(readonly, nonatomic) _Bool hasDirectConnection;
- (_Bool)_hasDirectConnection;
@property(readonly, copy, nonatomic) NSArray *connections; // @dynamic connections;
- (void)_updatePrimaryConnection;
@property(readonly, nonatomic) DTDKRemoteDeviceToken *activeProxiedDeviceToken;
@property(readonly, copy, nonatomic) NSSet *proxiedDeviceTokens;
@property(readonly) _Bool deviceIsPaired;
@property(readonly, nonatomic) _Bool hasWirelessConnection;
@property(readonly, nonatomic) _Bool hasWiredConnection;
@property(readonly, copy, nonatomic) NSArray *deviceAddresses;
@property(readonly, copy, nonatomic) NSString *deviceHostname;
@property(readonly, nonatomic) void *wakeupToken;
@property(readonly, copy, nonatomic) NSString *deviceClassForDisplay;
@property(readonly, nonatomic) NSString *deviceModelUTI;
@property(readonly, nonatomic) NSString *localizedDeviceModel;
@property(readonly, nonatomic) _Bool isConnected;
@property(readonly, nonatomic) _Bool isSupportedOS;
@property(readonly) DVTPlatform *platform;
- (id)init;

@end

@interface DTDKZipFile : NSObject
{
    NSURL *_zipFileURL;
    struct unz_internal *_archive;
    NSMutableDictionary *_attributes;
}

+ (id)zipFileWithContentsOfURL:(id)arg1 error:(id *)arg2;
+ (id)zipFileWithContentsOfURL:(id)arg1;
@property(retain) NSMutableDictionary *attributes; // @synthesize attributes=_attributes;
@property(copy) NSURL *zipFileURL; // @synthesize zipFileURL=_zipFileURL;
- (void).cxx_destruct;
- (_Bool)extractEntireArchiveTo:(id)arg1 error:(id *)arg2;
- (_Bool)extractEntireArchiveTo:(id)arg1 error:(id *)arg2 withProgressHandler:(CDUnknownBlockType)arg3;
- (_Bool)enumerateFileDataWithError:(id *)arg1 andBlock:(CDUnknownBlockType)arg2;
- (_Bool)enumerateFilesWithError:(id *)arg1 andBlock:(CDUnknownBlockType)arg2;
- (unsigned long long)expandedSizeWithError:(id *)arg1;
- (unsigned long long)countOfFilesWithError:(id *)arg1;
- (id)extractPropertyListWithInternalPath:(id)arg1 error:(id *)arg2;
- (id)attributesForFileWithInternalPath:(id)arg1 error:(id *)arg2;
- (id)attributesForAllFilesWithError:(id *)arg1;
- (id)extractFileWithInternalPath:(id)arg1 error:(id *)arg2;
- (id)_extractCurrentFileWithError:(id *)arg1;
- (id)_attributesDictionaryForCurrentFileWithError:(id *)arg1;
- (id)_attributesDictionaryFromInternalFields:(const struct unz_file_info_s *)arg1 withInternalName:(id)arg2;
- (_Bool)fileExistsAtInternalPath:(id)arg1;
- (_Bool)canOpenWithError:(id *)arg1;
- (_Bool)canOpen;
- (_Bool)_openWithError:(id *)arg1;
@property(nonatomic) struct unz_internal *archive;
- (void)invalidate;

@end

@interface DTDKdSYM : NSManagedObject
{
}


// Remaining properties
@property(retain, nonatomic) NSString *arch; // @dynamic arch;
@property(retain, nonatomic) NSString *path; // @dynamic path;
@property(retain, nonatomic) NSString *uuid; // @dynamic uuid;
@end

@interface DVTProvisioningProfileRecord (DTDeviceKitExtensions)
+ (void)installProfileRecords:(id)arg1;
- (void)updateUUID;
- (id)profile;
@end

@interface DVTTeamRecord (DTDeviceKitExtensions)
- (void)pruneInstalledProvisioningProfiles;
@end

@interface NSData (DTDKExtensions)
+ (id)DTDK_dataWithContentsOfURL:(id)arg1 followTerminalLink:(_Bool)arg2;
@end

@interface NSFileManager (DTDKExtensions)
- (BOOL)DTDK_linkOrCopyItemAtURL:(id)arg1 toURL:(id)arg2 error:(id *)arg3;
@end

@interface NSNumber (DTDKExtensions)
- (_Bool)DTDK_safeBoolValue;
- (unsigned long long)DTDK_safeUnsignedLongLongValue;
@end

@interface NSObject (DTDKExtensions)
- (void)DTDK_setValueOnMainThread:(id)arg1 forKey:(id)arg2 waitUntilDone:(BOOL)arg3;
@end

@interface NSString (DTDKExtensions)
+ (id)DTDK_stringWithLooseUTF8String:(const char *)arg1 length:(unsigned long long)arg2;
+ (id)DTDK_stringWithLooseUTF8String:(const char *)arg1;
- (id)DTDK_initWithLooseUTF8String:(const char *)arg1 length:(unsigned long long)arg2 sanitize:(BOOL)arg3;
- (id)DTDK_initWithLooseUTF8String:(const char *)arg1 length:(unsigned long long)arg2;
- (id)DTDK_initWithLooseUTF8String:(const char *)arg1;
- (_Bool)DTDK_safeBoolValue;
- (unsigned long long)DTDK_safeUnsignedLongLongValue;
@end

@interface SFCertificateData (DTDKDeveloperProfileExtensions)
- (id)displayStatus;
- (id)children;
@end

