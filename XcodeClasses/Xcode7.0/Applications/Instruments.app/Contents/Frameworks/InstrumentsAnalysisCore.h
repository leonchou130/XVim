//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct ActivityInfo {
    char shutdown;
    int startedActivities;
    int readyForNextFrame;
};

struct GuardedState {
    char disengageRequested;
    char shouldDisengage;
    NSOperation *disengageCompletionOp;
    NSProgress *disengageProgress;
};

struct HashTableProperties {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct LookupTable {
    void **_field1;
    unsigned int _field2;
    unsigned int _field3;
};

struct Projection;

struct StableStore {
    struct vector<std::__1::unique_ptr<XRPivotArrayPivot<_XRStorageManagerDirectAddress, 2>[], std::__1::default_delete<XRPivotArrayPivot<_XRStorageManagerDirectAddress, 2>[]>>, std::__1::allocator<std::__1::unique_ptr<XRPivotArrayPivot<_XRStorageManagerDirectAddress, 2>[], std::__1::default_delete<XRPivotArrayPivot<_XRStorageManagerDirectAddress, 2>[]>>>> _store;
    int _used;
    int _exposed;
};

struct XRAnalysisCoreEngineeringType {
    int _field1;
    unsigned char _field2;
    unsigned long long _field3;
    id _field4;
    union XRStoredValue _field5;
    struct function<bool (const void *, const void *)> _field6;
    struct function<bool (const void *, const void *)> _field7;
};

struct XRAnalysisCoreFunctionInvocationArg {
    union XRStoredValue _storedValue;
    unsigned short _engineeringTypeID;
};

struct XRAnalysisCorePathManagerState {
    char doneValidating;
    char isValid;
    NSError *validationError;
    NSMutableSet *paths;
    NSMutableDictionary *mappings;
    NSMutableSet *privateSubpaths;
    NSURL *privateLocalBaseURL;
    NSURL *baseURL;
    unsigned long long nextTempID;
};

struct XRAnalysisCoreProjectionCursor {
    id _field1;
    struct Projection *_field2;
    unsigned long long _field3;
    unsigned long long _field4;
    _Bool _field5;
    _Bool _field6;
};

struct XRAnalysisCoreReadCursor {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
};

struct XRAnalysisCoreSortCriteria;

struct XRAnalysisCoreSortLess {
    struct vector<XRAnalysisCoreSortCriteria, std::__1::allocator<XRAnalysisCoreSortCriteria>> _field1;
    id _field2;
    unique_ptr_71a643f6 *_field3;
    unique_ptr_71a643f6 *_field4;
    unique_ptr_71a643f6 *_field5;
    unique_ptr_71a643f6 *_field6;
};

struct XRAnalysisCoreTableBindings {
    struct unordered_map<unsigned int, XRAnalysisCoreTableBindings::binding, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, XRAnalysisCoreTableBindings::binding>>> _field1;
    int _field2;
};

struct XRAnalysisCoreTableColumnInternals;

struct XRAnalysisCoreWriteCursor {
    CDUnknownFunctionPointerType *_field1;
    char _field2;
    char _field3;
    char _field4;
    struct bitset<64> _field5;
    struct vector<_XRStorageManagerDirectAddress, std::__1::allocator<_XRStorageManagerDirectAddress>> _field6;
    id _field7;
    unsigned int _field8;
    struct _XRStorageManagerExternalAccessPack *_field9;
    vector_5b13af2a *_field10;
    id _field11;
    struct _XRStorageManagerCursor _field12;
};

struct XRBacktraceFragment {
    unsigned int _field1;
    int _field2;
    union {
        struct XRUInt64Array _field1;
        struct XRStoredUInt64Array _field2;
    } _field3;
};

struct XRBinderEngine {
    CDUnknownFunctionPointerType *_vptr$XRCLIPS;
    void *_env;
    unsigned int _strongAddressType;
    void *_subclassContext;
    NSObject *_delegate;
    CDStruct_a3227609 _consoleNameRegex;
    CDStruct_a3227609 _dumpStringRegex;
    NSMutableString *_dumpedString;
    NSMutableAttributedString *_consoleContents;
    NSString *_currentCommand;
    unsigned long long _commandStringLoc;
    NSMutableSet *_clipsHeldObjects;
};

struct XRBlackboardGlueContext {
    struct XRCLIPSBlackboardEngine *modeler;
    struct XRInternalObjectRegistry *registry;
    XRAnalysisCoreValue *reusableValue0;
    XRAnalysisCoreValue *reusableValue1;
};

struct XRCLIPS {
    CDUnknownFunctionPointerType *_field1;
    void *_field2;
    unsigned int _field3;
    void *_field4;
    id _field5;
    CDStruct_a3227609 _field6;
    CDStruct_a3227609 _field7;
    id _field8;
    id _field9;
    id _field10;
    unsigned long long _field11;
    id _field12;
};

struct XRCLIPSBlackboardEngine {
    CDUnknownFunctionPointerType *_vptr$XRCLIPS;
    void *_env;
    unsigned int _strongAddressType;
    void *_subclassContext;
    NSObject *_delegate;
    CDStruct_a3227609 _consoleNameRegex;
    CDStruct_a3227609 _dumpStringRegex;
    NSMutableString *_dumpedString;
    NSMutableAttributedString *_consoleContents;
    NSString *_currentCommand;
    unsigned long long _commandStringLoc;
    NSMutableSet *_clipsHeldObjects;
    void *_threadStateConstants[12];
    struct XRAnalysisCoreTableBindings *_currentBindings;
    struct XRAnalysisCoreWriteCursor *_writeCursor;
    unsigned int _currentTableID;
    struct unordered_map<unsigned int, std::__1::unordered_map<unsigned long, unsigned char, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned char>>>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, std::__1::unordered_map<unsigned long, unsigned char, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned char>>>>>> _columnMapsByTableID;
    struct unordered_map<unsigned int, std::__1::unique_ptr<XRBlackboardToSchemaBinding, std::__1::default_delete<XRBlackboardToSchemaBinding>>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, std::__1::unique_ptr<XRBlackboardToSchemaBinding, std::__1::default_delete<XRBlackboardToSchemaBinding>>>>> _tableToXRBlackboardToSchemaBindings;
    unsigned long long _rowsCreated;
    unsigned long long _rowsRead;
    XRAnalysisCoreFunctionInvocation *_invocation;
    id _cpCallstackFixUpToken;
    struct XRInternalObjectRegistry _registry;
    struct XRBlackboardGlueContext _ctx;
    struct XRCLIPSNarrativeSupport _narrativeSupport;
    struct deftemplate *_nowTemplate;
    unsigned long long _now;
    void *_currentNowFact;
    unsigned int _narrativeLogTableID;
    unsigned char _narrativeLogClockColID;
    unsigned char _narrativeLogSigColID;
    _Bool _haltModeling;
};

struct XRCLIPSNarrativeSupport {
    void *_env;
    struct unordered_map<symbolHashNode *, std::__1::unique_ptr<XRCLIPSCompiledNarrative, std::__1::default_delete<XRCLIPSCompiledNarrative>>, std::__1::hash<symbolHashNode *>, std::__1::equal_to<symbolHashNode *>, std::__1::allocator<std::__1::pair<symbolHashNode *const, std::__1::unique_ptr<XRCLIPSCompiledNarrative, std::__1::default_delete<XRCLIPSCompiledNarrative>>>>> _compiledNarrativesByFormat;
};

struct XREventTypeActions {
    Class typeClass;
    unsigned int *fieldOffsets;
    unsigned int initCount;
    unsigned int **preorders;
    CDUnknownBlockType *initializers;
};

struct XRIntegerUniquer {
    struct XRIntegerUniquerBucket *_field1;
    unsigned int _field2;
    _Bool _field3;
    struct XRVMPagePool *_field4;
    unsigned int _field5;
    unsigned int _field6;
    char *_field7;
    char *_field8;
    int _field9;
    struct LookupTable _field10;
    struct HashTableProperties _field11;
};

struct XRIntegerUniquerBucket;

struct XRInternalObjectRegistry {
    id _coreRegistry;
    struct symbolHashNode *_invalidIIDSymbol;
    unsigned int _uint64ArrayIIDType;
    unsigned int _typedArrayEntryType;
    unsigned int _typedArrayType;
    void *_env;
    struct vector<externalAddressHashNode *, std::__1::allocator<externalAddressHashNode *>> _arrayNodesByIID;
    struct vector<symbolHashNode *, std::__1::allocator<symbolHashNode *>> _symbolNodesByIID;
};

struct XRModalLock {
    int _mode;
    struct _opaque_pthread_rwlock_t _rwlock;
};

struct XRPivotArray<_XRStorageManagerDirectAddress, std::__1::tuple<XRAnalysisCoreSortLess &, XRAnalysisCoreSortLess &>, 1024> {
    struct StableStore _primaryStore;
    struct StableStore _purgableStore;
    struct array<std::__1::vector<XRPivotArraySortEntry, std::__1::allocator<XRPivotArraySortEntry>>, 2> _sortedDimensions;
    unsigned char _dimensionsUsed;
    int _chunkSize;
    long long _purgableSignatureBase;
};

struct XRPivotArraySortEntry;

struct XRSerializedAccess<ActivityInfo> {
    struct ActivityInfo _guarded;
    NSObject<OS_dispatch_queue> *_queue;
};

struct XRSerializedAccess<GuardedState> {
    struct GuardedState _guarded;
    NSObject<OS_dispatch_queue> *_queue;
};

struct XRSerializedAccess<XRAnalysisCorePathManagerState> {
    struct XRAnalysisCorePathManagerState _guarded;
    NSObject<OS_dispatch_queue> *_queue;
};

struct XRSpatialIndex<XRT50_C22_Strategy>;

struct XRSpatialIndex<XRTD50_CC22_Strategy>;

struct XRSpatialIndexMP<XRT50_C22_MPStrategy> {
    struct deque<_XRStorageManagerDirectAddress, std::__1::allocator<_XRStorageManagerDirectAddress>> _field1;
    struct vector<XRSpatialIndex<XRT50_C22_Strategy>*, std::__1::allocator<XRSpatialIndex<XRT50_C22_Strategy>*>> _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    struct XRT50_C22_MPStrategy *_field5;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field6;
    unsigned long long _field7;
};

struct XRSpatialIndexMP<_XRIndexedStorageBasic_MPStrategy<XRTD50_CC22_Strategy>> {
    struct deque<_XRStorageManagerDirectAddress, std::__1::allocator<_XRStorageManagerDirectAddress>> _field1;
    struct vector<XRSpatialIndex<XRTD50_CC22_Strategy>*, std::__1::allocator<XRSpatialIndex<XRTD50_CC22_Strategy>*>> _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    struct _XRIndexedStorageBasic_MPStrategy<XRTD50_CC22_Strategy> *_field5;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field6;
    unsigned long long _field7;
};

struct XRStorageHeader {
    unsigned int magic;
    unsigned int version;
    unsigned int header_size;
    unsigned int _data_start;
    unsigned int _event_size;
    unsigned int _chunk_size;
    unsigned int events_per_chunk;
    long long data_end;
};

struct XRStorageManagerLock {
    struct _opaque_pthread_mutex_t _lock;
    struct _opaque_pthread_cond_t _cond;
    int _readers;
    char _hasWriter;
};

struct XRStoredTypedArray {
    struct XRTypedArray _field1;
    union XRStoredValue _field2;
};

struct XRStoredUInt64Array {
    struct XRUInt64Array _field1;
    union XRStoredValue _field2;
};

struct XRT50_C22_MPStrategy {
    unsigned int _field1;
    struct _XRStorageManagerExternalAccessPack *_field2;
};

struct XRTimeRange {
    unsigned long long start;
    unsigned long long length;
};

struct XRTypedArray {
    struct XRTypedArrayEntry *values;
    unsigned int count;
};

struct XRTypedArrayEntry;

struct XRUInt64Array {
    unsigned long long *values;
    unsigned int count;
};

struct XRVMPagePool {
    CDUnknownFunctionPointerType *_vptr$XRSpatialIndexPagePool;
    _Bool _writable;
    _Bool _trimmed;
    unsigned int _pagesInSuperPage;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _mappableFilePath;
    long long _offset;
    unsigned long long _pageSize;
    int _pagesRetained;
    unsigned int _pageCount;
    struct deque<char *, std::__1::allocator<char *>> _mappings;
};

struct _MergingCursor {
    CDUnknownFunctionPointerType *_vptr$XRAnalysisCoreReadCursor;
    unsigned int _currentTableID;
    struct priority_queue<_TimeOrderedCursor *, std::__1::vector<_TimeOrderedCursor *, std::__1::allocator<_TimeOrderedCursor *>>, _TimeOrderedCursorGreater> _timeOrderedCursorPrioQueue;
    struct unordered_multimap<unsigned int, unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned int>>> _aliasMMap;
    struct __hash_map_const_iterator<std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *>*>> _currentTableID;
    struct __hash_map_const_iterator<std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *>*>> _currentTableIDsEnd;
    XRAnalysisCoreActivity *_activity;
    char *_shouldYield;
    long long _rowCount;
    long long _rowsDrained;
    NSProgress *_progress;
};

struct _TimeOrderedCursor;

struct _XRAnalysisCoreReadCursorSeekable;

struct _XRIndexedStorageBasic_MPStrategy<XRTD50_CC22_Strategy> {
    unsigned int _field1;
    struct _XRStorageManagerExternalAccessPack *_field2;
};

struct _XRStorageManagerAccess {
    struct unordered_map<unsigned int, unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned int>>> *_reuseMap;
    struct vector<unsigned int, std::__1::allocator<unsigned int>> *_reuseIdentifiers;
    struct XRVMPagePool _pool;
    struct XRStorageHeader _storageHeader;
    struct XREventTypeActions _typeActions;
    XRDescriptorSubstitutions *_substitutions;
    unsigned int _nextEventIdentifier;
    unsigned int _monotonicNextEventIdentifier;
};

struct _XRStorageManagerAccessToken {
    struct bitset<3> _rights;
    struct XRStorageManagerLock *_lock;
};

struct _XRStorageManagerCursor {
    unsigned int *_field1;
    char *_field2;
    char *_field3;
    _Bool _field4;
    struct XRVMPagePool *_field5;
    struct _XRStorageManagerDirectAddress _field6;
};

struct _XRStorageManagerDirectAddress {
    unsigned int :2;
    unsigned int :30;
    unsigned int _field1;
};

struct _XRStorageManagerExternalAccessPack {
    struct _XRStorageManagerAccessToken rights;
    struct _XRStorageManagerAccess *accessor;
};

struct __hash_map_const_iterator<std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *>*>> {
    struct __hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *>*> {
        struct __hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *__node_;
    } __i_;
};

struct __hash_node<std::__1::__hash_value_type<XRAnalysisCoreProjectorSpec *, XRAnalysisCoreProjector *>, void *>;

struct __hash_node<std::__1::__hash_value_type<symbolHashNode *, std::__1::unique_ptr<XRCLIPSCompiledNarrative, std::__1::default_delete<XRCLIPSCompiledNarrative>>>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned int, XRAnalysisCoreTableBindings::binding>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned int, std::__1::unique_ptr<XRBlackboardToSchemaBinding, std::__1::default_delete<XRBlackboardToSchemaBinding>>>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned int, std::__1::unordered_map<unsigned long, unsigned char, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned char>>>>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned int, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *>;

struct __hash_table<std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, unsigned int>>> {
    struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *>*>>> __bucket_list_;
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *>*> {
            struct __hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *__next_;
        } __first_;
    } __p1_;
    struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::hash<unsigned int>, true>> {
        unsigned long long __first_;
    } __p2_;
    struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::equal_to<unsigned int>, true>> {
        float __first_;
    } __p3_;
};

struct __va_list_tag {
    unsigned int _field1;
    unsigned int _field2;
    void *_field3;
    void *_field4;
};

struct __wrap_iter<const _XRStorageManagerDirectAddress *> {
    struct _XRStorageManagerDirectAddress *_field1;
};

struct _opaque_pthread_cond_t {
    long long __sig;
    char __opaque[40];
};

struct _opaque_pthread_mutex_t {
    long long __sig;
    char __opaque[56];
};

struct _opaque_pthread_rwlock_t {
    long long __sig;
    char __opaque[192];
};

struct array<std::__1::vector<XRPivotArraySortEntry, std::__1::allocator<XRPivotArraySortEntry>>, 2> {
    struct vector<XRPivotArraySortEntry, std::__1::allocator<XRPivotArraySortEntry>> __elems_[2];
};

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    unsigned long long __cap_;
                    unsigned long long __size_;
                    char *__data_;
                } __l;
                struct __short {
                    union {
                        unsigned char __size_;
                        char __lx;
                    } ;
                    char __data_[23];
                } __s;
                struct __raw {
                    unsigned long long __words[3];
                } __r;
            } ;
        } __first_;
    } __r_;
};

struct bitset<3> {
    unsigned long long __first_;
};

struct bitset<64> {
    unsigned long long _field1;
};

struct deftemplate;

struct deque<_XRStorageManagerDirectAddress, std::__1::allocator<_XRStorageManagerDirectAddress>> {
    struct __split_buffer<_XRStorageManagerDirectAddress *, std::__1::allocator<_XRStorageManagerDirectAddress *>> {
        struct _XRStorageManagerDirectAddress **_field1;
        struct _XRStorageManagerDirectAddress **_field2;
        struct _XRStorageManagerDirectAddress **_field3;
        struct __compressed_pair<_XRStorageManagerDirectAddress **, std::__1::allocator<_XRStorageManagerDirectAddress *>> {
            struct _XRStorageManagerDirectAddress **_field1;
        } _field4;
    } _field1;
    unsigned long long _field2;
    struct __compressed_pair<unsigned long, std::__1::allocator<_XRStorageManagerDirectAddress>> {
        unsigned long long _field1;
    } _field3;
};

struct deque<char *, std::__1::allocator<char *>> {
    struct __split_buffer<char **, std::__1::allocator<char **>> {
        char ***__first_;
        char ***__begin_;
        char ***__end_;
        struct __compressed_pair<char ***, std::__1::allocator<char **>> {
            char ***__first_;
        } __end_cap_;
    } __map_;
    unsigned long long __start_;
    struct __compressed_pair<unsigned long, std::__1::allocator<char *>> {
        unsigned long long __first_;
    } __size_;
};

struct externalAddressHashNode;

struct function<bool (const void *, const void *)> {
    struct type _field1;
    struct __base<bool (const void *, const void *)> *_field2;
};

struct map<unsigned char, XRAnalysisCoreQueryDiscreteFilter, std::__1::less<unsigned char>, std::__1::allocator<std::__1::pair<const unsigned char, XRAnalysisCoreQueryDiscreteFilter>>> {
    struct __tree<std::__1::__value_type<unsigned char, XRAnalysisCoreQueryDiscreteFilter>, std::__1::__map_value_compare<unsigned char, std::__1::__value_type<unsigned char, XRAnalysisCoreQueryDiscreteFilter>, std::__1::less<unsigned char>, true>, std::__1::allocator<std::__1::__value_type<unsigned char, XRAnalysisCoreQueryDiscreteFilter>>> {
        struct __tree_node<std::__1::__value_type<unsigned char, XRAnalysisCoreQueryDiscreteFilter>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned char, XRAnalysisCoreQueryDiscreteFilter>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
                struct __tree_node_base<void *> *__left_;
            } __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned char, std::__1::__value_type<unsigned char, XRAnalysisCoreQueryDiscreteFilter>, std::__1::less<unsigned char>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct priority_queue<_TimeOrderedCursor *, std::__1::vector<_TimeOrderedCursor *, std::__1::allocator<_TimeOrderedCursor *>>, _TimeOrderedCursorGreater> {
    struct vector<_TimeOrderedCursor *, std::__1::allocator<_TimeOrderedCursor *>> c;
    struct comp;
};

struct re_guts;

struct symbolHashNode;

struct type {
    unsigned char _field1[24];
};

struct unique_ptr<Projection, std::__1::default_delete<Projection>> {
    struct __compressed_pair<Projection *, std::__1::default_delete<Projection>> {
        struct Projection *__first_;
    } __ptr_;
};

struct unique_ptr<XRAnalysisCoreReadCursor, std::__1::default_delete<XRAnalysisCoreReadCursor>> {
    struct __compressed_pair<XRAnalysisCoreReadCursor *, std::__1::default_delete<XRAnalysisCoreReadCursor>> {
        struct XRAnalysisCoreReadCursor *_field1;
    } _field1;
};

struct unique_ptr<XRPivotArrayPivot<_XRStorageManagerDirectAddress, 2>[], std::__1::default_delete<XRPivotArrayPivot<_XRStorageManagerDirectAddress, 2>[]>>;

struct unique_ptr<_XRAnalysisCoreReadCursorSeekable, std::__1::default_delete<_XRAnalysisCoreReadCursorSeekable>> {
    struct __compressed_pair<_XRAnalysisCoreReadCursorSeekable *, std::__1::default_delete<_XRAnalysisCoreReadCursorSeekable>> {
        struct _XRAnalysisCoreReadCursorSeekable *_field1;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<XRAnalysisCoreProjectorSpec *, XRAnalysisCoreProjector *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<XRAnalysisCoreProjectorSpec *, XRAnalysisCoreProjector *>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<XRAnalysisCoreProjectorSpec *, XRAnalysisCoreProjector *>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<XRAnalysisCoreProjectorSpec *, XRAnalysisCoreProjector *>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<XRAnalysisCoreProjectorSpec *, XRAnalysisCoreProjector *>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<XRAnalysisCoreProjectorSpec *, XRAnalysisCoreProjector *>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<XRAnalysisCoreProjectorSpec *, XRAnalysisCoreProjector *>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<symbolHashNode *, std::__1::unique_ptr<XRCLIPSCompiledNarrative, std::__1::default_delete<XRCLIPSCompiledNarrative>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<symbolHashNode *, std::__1::unique_ptr<XRCLIPSCompiledNarrative, std::__1::default_delete<XRCLIPSCompiledNarrative>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<symbolHashNode *, std::__1::unique_ptr<XRCLIPSCompiledNarrative, std::__1::default_delete<XRCLIPSCompiledNarrative>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<symbolHashNode *, std::__1::unique_ptr<XRCLIPSCompiledNarrative, std::__1::default_delete<XRCLIPSCompiledNarrative>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<symbolHashNode *, std::__1::unique_ptr<XRCLIPSCompiledNarrative, std::__1::default_delete<XRCLIPSCompiledNarrative>>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<symbolHashNode *, std::__1::unique_ptr<XRCLIPSCompiledNarrative, std::__1::default_delete<XRCLIPSCompiledNarrative>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<symbolHashNode *, std::__1::unique_ptr<XRCLIPSCompiledNarrative, std::__1::default_delete<XRCLIPSCompiledNarrative>>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, XRAnalysisCoreTableBindings::binding>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, XRAnalysisCoreTableBindings::binding>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, XRAnalysisCoreTableBindings::binding>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, XRAnalysisCoreTableBindings::binding>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned int, XRAnalysisCoreTableBindings::binding>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, XRAnalysisCoreTableBindings::binding>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, XRAnalysisCoreTableBindings::binding>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::unique_ptr<XRBlackboardToSchemaBinding, std::__1::default_delete<XRBlackboardToSchemaBinding>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::unique_ptr<XRBlackboardToSchemaBinding, std::__1::default_delete<XRBlackboardToSchemaBinding>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::unique_ptr<XRBlackboardToSchemaBinding, std::__1::default_delete<XRBlackboardToSchemaBinding>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::unique_ptr<XRBlackboardToSchemaBinding, std::__1::default_delete<XRBlackboardToSchemaBinding>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned int, std::__1::unique_ptr<XRBlackboardToSchemaBinding, std::__1::default_delete<XRBlackboardToSchemaBinding>>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::unique_ptr<XRBlackboardToSchemaBinding, std::__1::default_delete<XRBlackboardToSchemaBinding>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::unique_ptr<XRBlackboardToSchemaBinding, std::__1::default_delete<XRBlackboardToSchemaBinding>>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::unordered_map<unsigned long, unsigned char, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned char>>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::unordered_map<unsigned long, unsigned char, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned char>>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::unordered_map<unsigned long, unsigned char, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned char>>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::unordered_map<unsigned long, unsigned char, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned char>>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned int, std::__1::unordered_map<unsigned long, unsigned char, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned char>>>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::unordered_map<unsigned long, unsigned char, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned char>>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::unordered_map<unsigned long, unsigned char, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned char>>>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned int, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unordered_map<symbolHashNode *, std::__1::unique_ptr<XRCLIPSCompiledNarrative, std::__1::default_delete<XRCLIPSCompiledNarrative>>, std::__1::hash<symbolHashNode *>, std::__1::equal_to<symbolHashNode *>, std::__1::allocator<std::__1::pair<symbolHashNode *const, std::__1::unique_ptr<XRCLIPSCompiledNarrative, std::__1::default_delete<XRCLIPSCompiledNarrative>>>>> {
    struct __hash_table<std::__1::__hash_value_type<symbolHashNode *, std::__1::unique_ptr<XRCLIPSCompiledNarrative, std::__1::default_delete<XRCLIPSCompiledNarrative>>>, std::__1::__unordered_map_hasher<symbolHashNode *, std::__1::__hash_value_type<symbolHashNode *, std::__1::unique_ptr<XRCLIPSCompiledNarrative, std::__1::default_delete<XRCLIPSCompiledNarrative>>>, std::__1::hash<symbolHashNode *>, true>, std::__1::__unordered_map_equal<symbolHashNode *, std::__1::__hash_value_type<symbolHashNode *, std::__1::unique_ptr<XRCLIPSCompiledNarrative, std::__1::default_delete<XRCLIPSCompiledNarrative>>>, std::__1::equal_to<symbolHashNode *>, true>, std::__1::allocator<std::__1::__hash_value_type<symbolHashNode *, std::__1::unique_ptr<XRCLIPSCompiledNarrative, std::__1::default_delete<XRCLIPSCompiledNarrative>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<symbolHashNode *, std::__1::unique_ptr<XRCLIPSCompiledNarrative, std::__1::default_delete<XRCLIPSCompiledNarrative>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<symbolHashNode *, std::__1::unique_ptr<XRCLIPSCompiledNarrative, std::__1::default_delete<XRCLIPSCompiledNarrative>>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<symbolHashNode *, std::__1::unique_ptr<XRCLIPSCompiledNarrative, std::__1::default_delete<XRCLIPSCompiledNarrative>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<symbolHashNode *, std::__1::unique_ptr<XRCLIPSCompiledNarrative, std::__1::default_delete<XRCLIPSCompiledNarrative>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<symbolHashNode *, std::__1::unique_ptr<XRCLIPSCompiledNarrative, std::__1::default_delete<XRCLIPSCompiledNarrative>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<symbolHashNode *, std::__1::unique_ptr<XRCLIPSCompiledNarrative, std::__1::default_delete<XRCLIPSCompiledNarrative>>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<symbolHashNode *, std::__1::__hash_value_type<symbolHashNode *, std::__1::unique_ptr<XRCLIPSCompiledNarrative, std::__1::default_delete<XRCLIPSCompiledNarrative>>>, std::__1::hash<symbolHashNode *>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<symbolHashNode *, std::__1::__hash_value_type<symbolHashNode *, std::__1::unique_ptr<XRCLIPSCompiledNarrative, std::__1::default_delete<XRCLIPSCompiledNarrative>>>, std::__1::equal_to<symbolHashNode *>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned int, XRAnalysisCoreTableBindings::binding, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, XRAnalysisCoreTableBindings::binding>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned int, XRAnalysisCoreTableBindings::binding>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, XRAnalysisCoreTableBindings::binding>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, XRAnalysisCoreTableBindings::binding>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, XRAnalysisCoreTableBindings::binding>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, XRAnalysisCoreTableBindings::binding>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, XRAnalysisCoreTableBindings::binding>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, XRAnalysisCoreTableBindings::binding>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, XRAnalysisCoreTableBindings::binding>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, XRAnalysisCoreTableBindings::binding>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned int, XRAnalysisCoreTableBindings::binding>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, XRAnalysisCoreTableBindings::binding>, std::__1::hash<unsigned int>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, XRAnalysisCoreTableBindings::binding>, std::__1::equal_to<unsigned int>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<unsigned int, std::__1::unique_ptr<XRBlackboardToSchemaBinding, std::__1::default_delete<XRBlackboardToSchemaBinding>>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, std::__1::unique_ptr<XRBlackboardToSchemaBinding, std::__1::default_delete<XRBlackboardToSchemaBinding>>>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned int, std::__1::unique_ptr<XRBlackboardToSchemaBinding, std::__1::default_delete<XRBlackboardToSchemaBinding>>>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, std::__1::unique_ptr<XRBlackboardToSchemaBinding, std::__1::default_delete<XRBlackboardToSchemaBinding>>>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, std::__1::unique_ptr<XRBlackboardToSchemaBinding, std::__1::default_delete<XRBlackboardToSchemaBinding>>>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, std::__1::unique_ptr<XRBlackboardToSchemaBinding, std::__1::default_delete<XRBlackboardToSchemaBinding>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::unique_ptr<XRBlackboardToSchemaBinding, std::__1::default_delete<XRBlackboardToSchemaBinding>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::unique_ptr<XRBlackboardToSchemaBinding, std::__1::default_delete<XRBlackboardToSchemaBinding>>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::unique_ptr<XRBlackboardToSchemaBinding, std::__1::default_delete<XRBlackboardToSchemaBinding>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::unique_ptr<XRBlackboardToSchemaBinding, std::__1::default_delete<XRBlackboardToSchemaBinding>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::unique_ptr<XRBlackboardToSchemaBinding, std::__1::default_delete<XRBlackboardToSchemaBinding>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned int, std::__1::unique_ptr<XRBlackboardToSchemaBinding, std::__1::default_delete<XRBlackboardToSchemaBinding>>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, std::__1::unique_ptr<XRBlackboardToSchemaBinding, std::__1::default_delete<XRBlackboardToSchemaBinding>>>, std::__1::hash<unsigned int>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, std::__1::unique_ptr<XRBlackboardToSchemaBinding, std::__1::default_delete<XRBlackboardToSchemaBinding>>>, std::__1::equal_to<unsigned int>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned int, std::__1::unordered_map<unsigned long, unsigned char, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned char>>>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, std::__1::unordered_map<unsigned long, unsigned char, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned char>>>>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned int, std::__1::unordered_map<unsigned long, unsigned char, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned char>>>>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, std::__1::unordered_map<unsigned long, unsigned char, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned char>>>>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, std::__1::unordered_map<unsigned long, unsigned char, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned char>>>>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, std::__1::unordered_map<unsigned long, unsigned char, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned char>>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::unordered_map<unsigned long, unsigned char, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned char>>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::unordered_map<unsigned long, unsigned char, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned char>>>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::unordered_map<unsigned long, unsigned char, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned char>>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::unordered_map<unsigned long, unsigned char, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned char>>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::unordered_map<unsigned long, unsigned char, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned char>>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned int, std::__1::unordered_map<unsigned long, unsigned char, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned char>>>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, std::__1::unordered_map<unsigned long, unsigned char, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned char>>>>, std::__1::hash<unsigned int>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, std::__1::unordered_map<unsigned long, unsigned char, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned char>>>>, std::__1::equal_to<unsigned int>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned int, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned int, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned int, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>>, std::__1::hash<unsigned int>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>>, std::__1::equal_to<unsigned int>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned int, unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned int>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, unsigned int>>> __table_;
};

struct unordered_multimap<XRAnalysisCoreProjectorSpec *, XRAnalysisCoreProjector *, std::__1::hash<XRAnalysisCoreProjectorSpec *>, std::__1::equal_to<XRAnalysisCoreProjectorSpec *>, std::__1::allocator<std::__1::pair<XRAnalysisCoreProjectorSpec *const, XRAnalysisCoreProjector *>>> {
    struct __hash_table<std::__1::__hash_value_type<XRAnalysisCoreProjectorSpec *, XRAnalysisCoreProjector *>, std::__1::__unordered_map_hasher<XRAnalysisCoreProjectorSpec *, std::__1::__hash_value_type<XRAnalysisCoreProjectorSpec *, XRAnalysisCoreProjector *>, std::__1::hash<XRAnalysisCoreProjectorSpec *>, true>, std::__1::__unordered_map_equal<XRAnalysisCoreProjectorSpec *, std::__1::__hash_value_type<XRAnalysisCoreProjectorSpec *, XRAnalysisCoreProjector *>, std::__1::equal_to<XRAnalysisCoreProjectorSpec *>, true>, std::__1::allocator<std::__1::__hash_value_type<XRAnalysisCoreProjectorSpec *, XRAnalysisCoreProjector *>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<XRAnalysisCoreProjectorSpec *, XRAnalysisCoreProjector *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<XRAnalysisCoreProjectorSpec *, XRAnalysisCoreProjector *>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<XRAnalysisCoreProjectorSpec *, XRAnalysisCoreProjector *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<XRAnalysisCoreProjectorSpec *, XRAnalysisCoreProjector *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<XRAnalysisCoreProjectorSpec *, XRAnalysisCoreProjector *>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<XRAnalysisCoreProjectorSpec *, XRAnalysisCoreProjector *>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<XRAnalysisCoreProjectorSpec *, std::__1::__hash_value_type<XRAnalysisCoreProjectorSpec *, XRAnalysisCoreProjector *>, std::__1::hash<XRAnalysisCoreProjectorSpec *>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<XRAnalysisCoreProjectorSpec *, std::__1::__hash_value_type<XRAnalysisCoreProjectorSpec *, XRAnalysisCoreProjector *>, std::__1::equal_to<XRAnalysisCoreProjectorSpec *>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_multimap<unsigned int, unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned int>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, unsigned int>>> __table_;
};

struct vector<XRAnalysisCoreActivityManager *__weak, std::__1::allocator<XRAnalysisCoreActivityManager *__weak>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<XRAnalysisCoreActivityManager *__weak *, std::__1::allocator<XRAnalysisCoreActivityManager *__weak>> {
        id *__first_;
    } __end_cap_;
};

struct vector<XRAnalysisCoreFunctionInvocationArg, std::__1::allocator<XRAnalysisCoreFunctionInvocationArg>> {
    struct XRAnalysisCoreFunctionInvocationArg *__begin_;
    struct XRAnalysisCoreFunctionInvocationArg *__end_;
    struct __compressed_pair<XRAnalysisCoreFunctionInvocationArg *, std::__1::allocator<XRAnalysisCoreFunctionInvocationArg>> {
        struct XRAnalysisCoreFunctionInvocationArg *__first_;
    } __end_cap_;
};

struct vector<XRAnalysisCoreSortCriteria, std::__1::allocator<XRAnalysisCoreSortCriteria>> {
    struct XRAnalysisCoreSortCriteria *_field1;
    struct XRAnalysisCoreSortCriteria *_field2;
    struct __compressed_pair<XRAnalysisCoreSortCriteria *, std::__1::allocator<XRAnalysisCoreSortCriteria>> {
        struct XRAnalysisCoreSortCriteria *_field1;
    } _field3;
};

struct vector<XRAnalysisCoreTableColumnInternals, std::__1::allocator<XRAnalysisCoreTableColumnInternals>> {
    struct XRAnalysisCoreTableColumnInternals *__begin_;
    struct XRAnalysisCoreTableColumnInternals *__end_;
    struct __compressed_pair<XRAnalysisCoreTableColumnInternals *, std::__1::allocator<XRAnalysisCoreTableColumnInternals>> {
        struct XRAnalysisCoreTableColumnInternals *__first_;
    } __end_cap_;
};

struct vector<XRPivotArraySortEntry, std::__1::allocator<XRPivotArraySortEntry>> {
    struct XRPivotArraySortEntry *__begin_;
    struct XRPivotArraySortEntry *__end_;
    struct __compressed_pair<XRPivotArraySortEntry *, std::__1::allocator<XRPivotArraySortEntry>> {
        struct XRPivotArraySortEntry *__first_;
    } __end_cap_;
};

struct vector<XRSpatialIndex<XRT50_C22_Strategy>*, std::__1::allocator<XRSpatialIndex<XRT50_C22_Strategy>*>> {
    struct XRSpatialIndex<XRT50_C22_Strategy> **_field1;
    struct XRSpatialIndex<XRT50_C22_Strategy> **_field2;
    struct __compressed_pair<XRSpatialIndex<XRT50_C22_Strategy>**, std::__1::allocator<XRSpatialIndex<XRT50_C22_Strategy>*>> {
        struct XRSpatialIndex<XRT50_C22_Strategy> **_field1;
    } _field3;
};

struct vector<XRSpatialIndex<XRTD50_CC22_Strategy>*, std::__1::allocator<XRSpatialIndex<XRTD50_CC22_Strategy>*>> {
    struct XRSpatialIndex<XRTD50_CC22_Strategy> **_field1;
    struct XRSpatialIndex<XRTD50_CC22_Strategy> **_field2;
    struct __compressed_pair<XRSpatialIndex<XRTD50_CC22_Strategy>**, std::__1::allocator<XRSpatialIndex<XRTD50_CC22_Strategy>*>> {
        struct XRSpatialIndex<XRTD50_CC22_Strategy> **_field1;
    } _field3;
};

struct vector<_TimeOrderedCursor *, std::__1::allocator<_TimeOrderedCursor *>> {
    struct _TimeOrderedCursor **__begin_;
    struct _TimeOrderedCursor **__end_;
    struct __compressed_pair<_TimeOrderedCursor **, std::__1::allocator<_TimeOrderedCursor *>> {
        struct _TimeOrderedCursor **__first_;
    } __end_cap_;
};

struct vector<_XRStorageManagerDirectAddress, std::__1::allocator<_XRStorageManagerDirectAddress>> {
    struct _XRStorageManagerDirectAddress *__begin_;
    struct _XRStorageManagerDirectAddress *__end_;
    struct __compressed_pair<_XRStorageManagerDirectAddress *, std::__1::allocator<_XRStorageManagerDirectAddress>> {
        struct _XRStorageManagerDirectAddress *__first_;
    } __end_cap_;
};

struct vector<externalAddressHashNode *, std::__1::allocator<externalAddressHashNode *>> {
    struct externalAddressHashNode **__begin_;
    struct externalAddressHashNode **__end_;
    struct __compressed_pair<externalAddressHashNode **, std::__1::allocator<externalAddressHashNode *>> {
        struct externalAddressHashNode **__first_;
    } __end_cap_;
};

struct vector<std::__1::unique_ptr<XRPivotArrayPivot<_XRStorageManagerDirectAddress, 2>[], std::__1::default_delete<XRPivotArrayPivot<_XRStorageManagerDirectAddress, 2>[]>>, std::__1::allocator<std::__1::unique_ptr<XRPivotArrayPivot<_XRStorageManagerDirectAddress, 2>[], std::__1::default_delete<XRPivotArrayPivot<_XRStorageManagerDirectAddress, 2>[]>>>> {
    struct unique_ptr<XRPivotArrayPivot<_XRStorageManagerDirectAddress, 2>[], std::__1::default_delete<XRPivotArrayPivot<_XRStorageManagerDirectAddress, 2>[]>> *__begin_;
    struct unique_ptr<XRPivotArrayPivot<_XRStorageManagerDirectAddress, 2>[], std::__1::default_delete<XRPivotArrayPivot<_XRStorageManagerDirectAddress, 2>[]>> *__end_;
    struct __compressed_pair<std::__1::unique_ptr<XRPivotArrayPivot<_XRStorageManagerDirectAddress, 2>[], std::__1::default_delete<XRPivotArrayPivot<_XRStorageManagerDirectAddress, 2>[]>>*, std::__1::allocator<std::__1::unique_ptr<XRPivotArrayPivot<_XRStorageManagerDirectAddress, 2>[], std::__1::default_delete<XRPivotArrayPivot<_XRStorageManagerDirectAddress, 2>[]>>>> {
        struct unique_ptr<XRPivotArrayPivot<_XRStorageManagerDirectAddress, 2>[], std::__1::default_delete<XRPivotArrayPivot<_XRStorageManagerDirectAddress, 2>[]>> *__first_;
    } __end_cap_;
};

struct vector<symbolHashNode *, std::__1::allocator<symbolHashNode *>> {
    struct symbolHashNode **__begin_;
    struct symbolHashNode **__end_;
    struct __compressed_pair<symbolHashNode **, std::__1::allocator<symbolHashNode *>> {
        struct symbolHashNode **__first_;
    } __end_cap_;
};

struct vector<unsigned int, std::__1::allocator<unsigned int>> {
    unsigned int *__begin_;
    unsigned int *__end_;
    struct __compressed_pair<unsigned int *, std::__1::allocator<unsigned int>> {
        unsigned int *__first_;
    } __end_cap_;
};

#pragma mark Typedef'd Structures

typedef struct {
    int re_magic;
    unsigned long long re_nsub;
    char *re_endp;
    struct re_guts *re_g;
} CDStruct_a3227609;

// Template types
typedef struct __wrap_iter<const _XRStorageManagerDirectAddress *> {
    struct _XRStorageManagerDirectAddress *_field1;
} __wrap_iter_1e889ba1;

typedef struct map<unsigned char, XRAnalysisCoreQueryDiscreteFilter, std::__1::less<unsigned char>, std::__1::allocator<std::__1::pair<const unsigned char, XRAnalysisCoreQueryDiscreteFilter>>> {
    struct __tree<std::__1::__value_type<unsigned char, XRAnalysisCoreQueryDiscreteFilter>, std::__1::__map_value_compare<unsigned char, std::__1::__value_type<unsigned char, XRAnalysisCoreQueryDiscreteFilter>, std::__1::less<unsigned char>, true>, std::__1::allocator<std::__1::__value_type<unsigned char, XRAnalysisCoreQueryDiscreteFilter>>> {
        struct __tree_node<std::__1::__value_type<unsigned char, XRAnalysisCoreQueryDiscreteFilter>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned char, XRAnalysisCoreQueryDiscreteFilter>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
                struct __tree_node_base<void *> *__left_;
            } __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned char, std::__1::__value_type<unsigned char, XRAnalysisCoreQueryDiscreteFilter>, std::__1::less<unsigned char>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
} map_3c316075;

typedef struct unique_ptr<XRAnalysisCoreReadCursor, std::__1::default_delete<XRAnalysisCoreReadCursor>> {
    struct __compressed_pair<XRAnalysisCoreReadCursor *, std::__1::default_delete<XRAnalysisCoreReadCursor>> {
        struct XRAnalysisCoreReadCursor *_field1;
    } _field1;
} unique_ptr_17ac6491;

typedef struct unique_ptr<_XRAnalysisCoreReadCursorSeekable, std::__1::default_delete<_XRAnalysisCoreReadCursorSeekable>> {
    struct __compressed_pair<_XRAnalysisCoreReadCursorSeekable *, std::__1::default_delete<_XRAnalysisCoreReadCursorSeekable>> {
        struct _XRAnalysisCoreReadCursorSeekable *_field1;
    } _field1;
} unique_ptr_71a643f6;

typedef struct vector<XRAnalysisCoreTableColumnInternals, std::__1::allocator<XRAnalysisCoreTableColumnInternals>> {
    struct XRAnalysisCoreTableColumnInternals *__begin_;
    struct XRAnalysisCoreTableColumnInternals *__end_;
    struct __compressed_pair<XRAnalysisCoreTableColumnInternals *, std::__1::allocator<XRAnalysisCoreTableColumnInternals>> {
        struct XRAnalysisCoreTableColumnInternals *__first_;
    } __end_cap_;
} vector_5b13af2a;

#pragma mark Named Unions

union XRBookmark {
    struct {
        unsigned int :62;
        unsigned int :2;
    } _field1;
    unsigned long long _field2;
};

union XRImplementedValue {
    unsigned int uint32;
    unsigned long long uint64;
    id string;
    struct XRUInt64Array uint64Array;
    struct XRTypedArray typedArray;
    double fixedDecimal;
};

union XRStoredValue {
    unsigned int uint32;
    unsigned long long uint64;
    unsigned int iid;
};

#pragma mark -

//
// File: /Applications/Xcode-7GM.app/Contents/Applications/Instruments.app/Contents/Frameworks/InstrumentsAnalysisCore.framework/Versions/A/InstrumentsAnalysisCore
// UUID: E0177BED-93E1-313A-9E19-AD168BDBC6D9
//
//                           Arch: x86_64
//                Current version: 58157.0.0
//          Compatibility version: 1.0.0
//                 Source version: 58157.0.0.0.0
//       Minimum Mac OS X version: 10.10.0
//                    SDK version: 10.11.0
//
// Objective-C Garbage Collection: Unsupported
//
//                       Run path: @loader_path/../../../../../../../SharedFrameworks
//                               = /Applications/Xcode-7GM.app/Contents/SharedFrameworks
//

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSMutableCopying
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (BOOL)respondsToSelector:(SEL)arg1;
- (BOOL)conformsToProtocol:(Protocol *)arg1;
- (BOOL)isMemberOfClass:(Class)arg1;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (BOOL)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSSecureCoding <NSCoding>
+ (BOOL)supportsSecureCoding;
@end

@protocol XRAnalysisCoreActivityManager <NSObject>
- (const char *)_shouldYieldFlag;
- (void)_activityYielded:(XRAnalysisCoreActivity *)arg1;
@end

@protocol XRAnalysisCoreAggregateFunction <XRAnalysisCoreProjectorFunction>
- (BOOL)getAggregateOutputValue:(id *)arg1 core:(id <XRAnalysisCoreReadOnly>)arg2;
- (void)drainCursor:(struct XRAnalysisCoreReadCursor *)arg1;
@end

@protocol XRAnalysisCoreCommutator <NSObject>
- (void)wakeUp;
@end

@protocol XRAnalysisCoreFunctionInvocation
- (XRAnalysisCoreValue *)output;
- (void)setOutputAsBacktrace:(const struct XRBacktraceFragment *)arg1 count:(unsigned int)arg2;
- (void)setOutputAsUInt64:(unsigned long long)arg1 engineeringType:(unsigned short)arg2;
- (void)setOutputAsArray:(struct XRUInt64Array)arg1 engineeringType:(unsigned short)arg2;
- (void)setOutputAsStoredArray:(struct XRStoredUInt64Array)arg1 engineeringType:(unsigned short)arg2;
- (void)setOutputAsString:(NSString *)arg1 engineeringType:(unsigned short)arg2;
- (XRAnalysisCoreValue *)argumentAsValueAtIndex:(unsigned int)arg1;
@end

@protocol XRAnalysisCoreModeler <NSObject>
- (void)populateSpeculationTables:(const struct XRAnalysisCoreTableBindings *)arg1 eventHorizon:(unsigned long long)arg2;
- (void)populateOutputTables:(const struct XRAnalysisCoreTableBindings *)arg1 usingObserverations:(struct XRAnalysisCoreReadCursor *)arg2;
- (void)resetModelerStateWithTables:(id <XRIntKeyedDictionaryImmutable>)arg1;

@optional
- (void)debuggingEnumerateContextStrings:(void (^)(NSString *))arg1;
- (NSString *)debuggingDumpWorkingMemoryForContext:(NSString *)arg1;
- (void)debuggingExecuteCommand:(NSString *)arg1 context:(NSString *)arg2;
- (NSMutableAttributedString *)debuggingSwapLogString:(NSMutableAttributedString *)arg1;
@end

@protocol XRAnalysisCoreModelerFactory <NSObject>
- (void)instanceModelersInSolution:(XRAnalysisCoreModelerBindingSolution *)arg1;
@end

@protocol XRAnalysisCorePivotArrayAccessor
- (unsigned long long)rowInDimension:(unsigned char)arg1 closestToTime:(unsigned long long)arg2;
- (void)readRowsStartingAt:(unsigned long long)arg1 dimension:(unsigned char)arg2 block:(void (^)(struct XRAnalysisCoreReadCursor *))arg3;
- (unsigned long long)indexForSignature:(long long)arg1 dimension:(unsigned char)arg2;
- (long long)signatureForIndex:(unsigned long long)arg1 dimension:(unsigned char)arg2;
@end

@protocol XRAnalysisCoreProjectorFunction <NSObject>
- (id)extendFunctionWithScope:(unsigned long long)arg1;
- (unsigned short)outputEngineeringType;
- (BOOL)isValidForEngineeringType:(unsigned short)arg1;
- (NSString *)displayableFunctionName;
@end

@protocol XRAnalysisCoreQueryContext
@property(nonatomic) unsigned long long scope;
@property(readonly, nonatomic) XRAnalysisCoreTableQuery *query;
@property(readonly, nonatomic) id <XRAnalysisCoreReadOnly> core;
@end

@protocol XRAnalysisCoreQueryHandler <NSObject>
- (void)reduceFromLocalResults:(NSArray *)arg1;
- (void)runWorkgroup:(unsigned short)arg1 of:(unsigned int)arg2 withLocalResults:(NSMutableDictionary *)arg3 context:(id <XRAnalysisCoreQueryContext>)arg4 rowIterator:(struct XRAnalysisCoreReadCursor *)arg5;
@end

@protocol XRAnalysisCoreReadOnly
- (BOOL)getValue:(id *)arg1 signature:(unsigned long long)arg2 engineeringType:(unsigned short)arg3;
- (BOOL)getValue:(id *)arg1 implValue:(XRAnalysisCoreImplValue *)arg2 engineeringType:(unsigned short)arg3;
- (BOOL)setImplValue:(id *)arg1 signature:(unsigned long long)arg2 engineeringType:(unsigned short)arg3;
- (XRAnalysisCoreTableSchema *)schemaWithName:(NSString *)arg1;
- (NSString *)coreSubpath;
@end

@protocol XRAnalysisCoreRegistry
- (BOOL)getExistingStoredValue:(union XRStoredValue *)arg1 fromImplValue:(XRAnalysisCoreImplValue *)arg2;
- (union XRStoredValue)storedProcess:(int)arg1 deviceSession:(unsigned int)arg2;
- (struct XRStoredUInt64Array)storedBacktrace:(const struct XRBacktraceFragment *)arg1 count:(unsigned int)arg2;
- (union XRStoredValue)storedThreadState:(unsigned int)arg1;
- (id)oracleFunctionTokenWithName:(NSString *)arg1;
- (BOOL)invokeOracleFunction:(id)arg1 invocation:(id <XRAnalysisCoreFunctionInvocation>)arg2;
- (void)addOracleFunction:(id <XRAnalysisCoreOracleFunction>)arg1 name:(NSString *)arg2;
- (unsigned int)addTypedArrayToCore:(struct XRTypedArray)arg1;
- (NSArray *)arrayForTypedArray:(unsigned int)arg1;
- (BOOL)getTypedArray:(struct XRStoredTypedArray *)arg1 iid:(unsigned int)arg2;
- (struct XRStoredUInt64Array)storedArrayOfUInt64s:(struct XRUInt64Array)arg1;
- (unsigned int)addArrayOfUInt64sToCore:(struct XRUInt64Array)arg1;
- (NSArray *)arrayForUInt64Array:(unsigned int)arg1;
- (BOOL)getArrayOfUInt64s:(struct XRStoredUInt64Array *)arg1 iid:(unsigned int)arg2;
- (NSString *)stringForIID:(unsigned int)arg1;
- (unsigned int)addStringToCore:(NSString *)arg1;
- (BOOL)pointsAtSameRegistry:(id <XRAnalysisCoreRegistry>)arg1;
- (id <XRAnalysisCoreRegistry>)weakProxy;
@end

@protocol XRAnalysisCoreRollUpFunction <XRAnalysisCoreProjectorFunction>
- (void)rollUp:(const struct XRAnalysisCoreReadCursor *)arg1 to:(id *)arg2 core:(id <XRAnalysisCoreReadOnly>)arg3;

@optional
- (XRAnalysisCoreTableQuery *)queryForRolledUpValue:(XRAnalysisCoreValue *)arg1;
@end

@protocol XRAnalysisCoreSortDescriptor

@optional
- (void)sortDidFinish;
- (void)sortWillBegin;
@end

@protocol XRErrorResponder <NSObject>
- (void)logAnamolousErrorMessageWithFormat:(NSString *)arg1 args:(struct __va_list_tag [1])arg2;
- (void)logAnamolousErrorMessageWithFormat:(NSString *)arg1;
- (unsigned long long)respondToFatalError:(NSError *)arg1 from:(id)arg2;
@end

@protocol XRIntKeyedDictionaryImmutable <NSObject>
- (unsigned long long)count;
- (void)enumerateObjectsAndIntegerKeys:(void (^)(id, unsigned long long, char *))arg1;
- (NSArray *)allObjects;
- (id)objectForIntegerKey:(unsigned long long)arg1;
@end

@protocol XRLazyKVOResponder <NSObject>
- (void)handleLazyKVOUpdate:(XRLazyKVOAdapter *)arg1;
@end

@interface NSObject (CLIPS)
- (id)clipsStringRepresentation;
- (BOOL)isCLIPSSymbol;
@end

@interface XRAnalysisCore : NSObject <XRAnalysisCoreReadOnly>
{
    XRAnalysisCoreContext *_context;
    XRAnalysisCoreBindingHemisphere *_bindingHemisphere;
    XRAnalysisCoreModelingHemisphere *_modelingHemisphere;
    XRAnalysisCoreCommutator *_commutator;
    XRAnalysisCoreRing *_primaryRing;
    XRAnalysisCoreQueryManager *_queryActivityManager;
    XRAnalysisCoreModelingManager *_modelingActivityManager;
    XRAnalysisCoreBulkLoadManager *_bulkLoadActivityManager;
    XRAnalysisCoreOptimizationManager *_optimizationActivityManager;
    XRAnalysisCoreConfigurationManager *_configurationActivityManager;
    XRAnalysisCoreProjectorAccessManager *_projectorAccessManager;
    unsigned long long _lastEventHorizon;
    unsigned long long _targetEventHorizon;
}

+ (id)engineeringTypeMnemonicForTypeID:(unsigned short)arg1;
+ (unsigned long long)attributesForEngineeringTypeID:(unsigned short)arg1;
+ (unsigned char)implementationTypeFromID:(unsigned short)arg1;
+ (unsigned short)engineeringTypeIDFromMnemonic:(id)arg1;
+ (void)initialize;
- (void).cxx_destruct;
- (void)debugLogString:(id)arg1;
- (void)debugEnumerateModelerSolution:(CDUnknownBlockType)arg1;
- (void)debugEnumerateInternalTables:(CDUnknownBlockType)arg1;
- (id)debugStringForTable:(id)arg1;
- (id)refreshProjector:(id)arg1;
- (id)refreshAndAccessProjectors:(id)arg1 block:(CDUnknownBlockType)arg2;
- (void)accessProjector:(id)arg1 block:(CDUnknownBlockType)arg2;
- (id)getProjector:(id *)arg1 tableID:(unsigned int)arg2 spec:(id)arg3;
- (long long)indexOfBookmark:(union XRBookmark)arg1 rowArray:(id)arg2;
- (id)changeSortDescriptors:(id)arg1 array:(id)arg2;
- (id)refreshPivotArray:(id)arg1;
- (id)refreshRowArray:(id)arg1;
- (void)accessPivotArray:(id)arg1 block:(CDUnknownBlockType)arg2;
- (void)readRowsInArray:(id)arg1 startingAt:(unsigned long long)arg2 block:(CDUnknownBlockType)arg3;
- (void)randomAccessForTableID:(unsigned int)arg1 block:(CDUnknownBlockType)arg2;
- (id)selectRowsWithQuery:(id)arg1 tableID:(unsigned int)arg2 sortDescriptors:(id)arg3;
- (id)selectRowsWithQuery:(id)arg1 tableID:(unsigned int)arg2;
- (void)query:(id)arg1 tableID:(unsigned int)arg2 handler:(id)arg3;
- (void)setTargetEventHorizon:(unsigned long long)arg1;
- (void)populateTableIDs:(id)arg1 block:(CDUnknownBlockType)arg2;
- (id)columnForTableID:(unsigned int)arg1 columnID:(unsigned char)arg2;
- (id)tableWithID:(unsigned int)arg1;
- (void)enumerateTables:(CDUnknownBlockType)arg1;
- (void)addOracleFunction:(id)arg1 name:(id)arg2;
- (void)setNotificationCenter:(id)arg1 queue:(id)arg2;
- (id)seal;
- (id)disengage;
- (id)engage;
- (void)realizeBindingSolution;
- (void)solveBindingProblem;
- (void)removeRequiredTableWithID:(unsigned int)arg1;
- (unsigned int)firstTableIDMatchingSpec:(id)arg1 access:(int)arg2;
- (unsigned int)addRequiredTableWithSpec:(id)arg1;
- (void)debugBinderEngineExecuteCommand:(id)arg1 moduleName:(id)arg2;
- (id)binderEngineSwapConsoleBuffer:(id)arg1;
- (id)debugBinderEngineFactsForModule:(id)arg1;
- (id)debugBinderEngineModuleNames;
- (id)registerValueWithImpl:(id)arg1 engineeringType:(unsigned short)arg2;
- (BOOL)getValue:(id *)arg1 signature:(unsigned long long)arg2 engineeringType:(unsigned short)arg3;
- (BOOL)getValue:(id *)arg1 implValue:(id)arg2 engineeringType:(unsigned short)arg3;
- (BOOL)setImplValue:(id *)arg1 signature:(unsigned long long)arg2 engineeringType:(unsigned short)arg3;
- (id)schemaWithName:(id)arg1;
- (void)removeSchemaWithName:(id)arg1;
- (void)addExtension:(id)arg1;
- (void)addSchema:(id)arg1;
- (void)enumerateKnownSchemas:(CDUnknownBlockType)arg1;
- (id)coreSubpath;
- (void)_pathManagerMovedSubpath:(id)arg1;
- (void)moveToSubpath:(id)arg1;
- (void)dealloc;
- (id)initWithPathManager:(id)arg1 dataSubpath:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface XRAnalysisCoreActivity : NSObject
{
    id <XRAnalysisCoreActivityManager> _manager;
    BOOL _yielded;
    NSString *_activityName;
    const char *_shouldYield;
    NSOperation *_completionSignal;
    CDUnknownBlockType _block;
}

@property(copy, nonatomic) CDUnknownBlockType block; // @synthesize block=_block;
@property(readonly, nonatomic) NSOperation *completionSignal; // @synthesize completionSignal=_completionSignal;
@property(readonly, nonatomic, getter=didYield) BOOL yielded; // @synthesize yielded=_yielded;
@property(readonly, nonatomic) const char *shouldYield; // @synthesize shouldYield=_shouldYield;
@property(retain, nonatomic) NSString *activityName; // @synthesize activityName=_activityName;
- (void).cxx_destruct;
- (void)yield;
- (id)init;
- (id)initWithManager:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface XRAnalysisCoreActivityManager : NSObject <XRAnalysisCoreActivityManager>
{
    const char *_shouldYield;
    XRAnalysisCoreBindingHemisphere *_bindingHemisphere;
    XRAnalysisCoreModelingHemisphere *_modelingHemisphere;
    XRAnalysisCoreContext *_context;
    id <XRAnalysisCoreCommutator> _commutator;
    BOOL _yieldFlag;
    BOOL _establishesAffinity;
    BOOL _debugCanCallSuspend;
    BOOL _debugCanCallResume;
    NSObject<OS_dispatch_queue> *_activityQueue;
    unsigned long long _maxParallelActivities;
    struct XRSerializedAccess<ActivityInfo> _activityInfo;
    struct _opaque_pthread_rwlock_t _insideFrameLock;
    struct _opaque_pthread_rwlock_t _outsideFrameLock;
    NSObject<OS_dispatch_semaphore> *_yieldSignal;
    XRAnalysisCoreActivity *_syncActivity;
}

+ (BOOL)_establishesAffinity;
+ (BOOL)_enableConcurrentActivities;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)_finalShutdown;
- (void)underrunWarning;
- (void)shutdown;
- (void)_yield;
- (id)_scheduleActivityWithBlock:(CDUnknownBlockType)arg1;
- (void)_performOutsideMinorFrame:(CDUnknownBlockType)arg1;
- (void)_performDuringMinorFrame:(CDUnknownBlockType)arg1;
- (int)_handleMinorFrameWithDeadline:(unsigned long long)arg1;
- (void)_markAsReady;
- (void)beginMinorFrameWithDeadline:(unsigned long long)arg1;
- (void)_suspendActivitiesWithDeadline:(unsigned long long)arg1;
- (void)_resumeActivities;
@property(readonly, nonatomic, getter=isReady) BOOL ready;
- (void)_activityFinished:(id)arg1;
- (void)_activityYielded:(id)arg1;
- (BOOL)_hasRunnableActivities;
- (void)setCommutator:(id)arg1;
- (const char *)_shouldYieldFlag;
- (void)dealloc;
- (id)init;
- (id)initWithContext:(id)arg1 bindingHemisphere:(id)arg2 modelingHemisphere:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRAnalysisCoreAggregateFunction : NSObject
{
    XRAnalysisCoreTableSchema *_schema;
    NSDictionary *_parameters;
}

+ (id)aggregateFunctionWithName:(id)arg1 parameters:(id)arg2 schema:(id)arg3;
- (void).cxx_destruct;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)init;
- (id)initWithSchema:(id)arg1 parameters:(id)arg2;

@end

@interface XRAnalysisCoreSingleColumnAggregateFunction : XRAnalysisCoreAggregateFunction
{
    NSString *_inputEngineeringName;
    unsigned char _columnID;
    unsigned short _inputType;
}

- (void).cxx_destruct;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)init;
- (id)initWithSchema:(id)arg1 parameters:(id)arg2;

@end

@interface XRAnalysisCoreAverageFunction : XRAnalysisCoreSingleColumnAggregateFunction <XRAnalysisCoreAggregateFunction>
{
    XRAnalysisCoreAverageFunction *_parent;
    unsigned long long _rowCount;
    unsigned long long _runningTotal;
}

- (void).cxx_destruct;
- (BOOL)getAggregateOutputValue:(id *)arg1 core:(id)arg2;
- (void)drainCursor:(struct XRAnalysisCoreReadCursor *)arg1;
- (id)extendFunctionWithScope:(unsigned long long)arg1;
- (unsigned short)outputEngineeringType;
- (BOOL)isValidForEngineeringType:(unsigned short)arg1;
- (id)displayableFunctionName;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface XRAnalysisCoreBindingHemisphere : NSObject <XRAnalysisCoreReadOnly>
{
    XRAnalysisCoreContext *_context;
    XRAnalysisCoreTableManager *_tableMan;
    struct XRBinderEngine _binderEngine;
    XRIntKeyedDictionary *_requiredReadOnlySpecsByID;
    NSMutableDictionary *_knownSchemasByName;
    NSMutableArray *_binderInvocations;
    NSMutableSet *_inputTableIDs;
    NSMutableSet *_biproductTableIDs;
    XRAnalysisCoreModelerBindingSolution *_modelerBindingSolution;
    struct unordered_multimap<XRAnalysisCoreProjectorSpec *, XRAnalysisCoreProjector *, std::__1::hash<XRAnalysisCoreProjectorSpec *>, std::__1::equal_to<XRAnalysisCoreProjectorSpec *>, std::__1::allocator<std::__1::pair<XRAnalysisCoreProjectorSpec *const, XRAnalysisCoreProjector *>>> _projectorsBySpec;
    _XRWeakProxy *_weakProxyToMe;
    id <XRAnalysisCoreRegistry> _registry;
    BOOL _needsOptimization;
}

@property(nonatomic) BOOL needsOptimization; // @synthesize needsOptimization=_needsOptimization;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)debugEnumerateModelerSolution:(CDUnknownBlockType)arg1;
- (void)debugEnumerateInternalTables:(CDUnknownBlockType)arg1;
- (void)debuggingEnumerateContextStrings:(CDUnknownBlockType)arg1;
- (void)debuggingExecuteCommand:(id)arg1 context:(id)arg2;
- (id)debuggingSwapLogString:(id)arg1;
- (id)debuggingDumpWorkingMemoryForContext:(id)arg1;
- (id)coreSubpath;
- (BOOL)getValue:(id *)arg1 signature:(unsigned long long)arg2 engineeringType:(unsigned short)arg3;
- (BOOL)getValue:(id *)arg1 implValue:(id)arg2 engineeringType:(unsigned short)arg3;
- (BOOL)setImplValue:(id *)arg1 signature:(unsigned long long)arg2 engineeringType:(unsigned short)arg3;
- (id)currentBindingSolution;
- (void)solveBindingProblem;
- (id)_bindStore:(id)arg1 table:(id)arg2 side:(id)arg3;
- (void)_reportUnboundAppendTableID:(id)arg1;
- (unsigned int)_reserveTableID;
- (id)_createIndexedStorageWithSchema:(id)arg1 attributes:(id)arg2;
- (void)_dictionary:(id)arg1 setValue:(id)arg2 forKey:(id)arg3;
- (id)_makeMutableDictionary;
- (void)_prepareToReceiveBindingSolution;
- (void)_addModelerInstanceForClass:(id)arg1 bindings:(id)arg2 stage:(id)arg3;
- (void)refreshProjector:(id)arg1 activity:(id)arg2;
- (id)projectorWithTableID:(unsigned int)arg1 spec:(id)arg2;
- (void)seal;
- (void)optimizeUntilDeadline:(unsigned long long)arg1;
- (unsigned int)firstTableIDMatchingSpec:(id)arg1 access:(int)arg2;
- (void)enumerateTables:(CDUnknownBlockType)arg1;
- (void)pushBindingJournalsToRowArrays:(struct XRAnalysisCoreTableBindings *)arg1;
- (void)populateTableIDs:(id)arg1 actvity:(id)arg2 block:(CDUnknownBlockType)arg3;
- (void)randomAccessForTableID:(unsigned int)arg1 block:(CDUnknownBlockType)arg2;
- (void)performOnPivotArray:(id)arg1 operation:(unsigned long long)arg2 control:(id)arg3;
- (void)accessPivotArray:(id)arg1 block:(CDUnknownBlockType)arg2;
- (void)readRowsInArray:(id)arg1 startingAt:(unsigned long long)arg2 block:(CDUnknownBlockType)arg3;
- (id)selectRowsWithQuery:(id)arg1 tableID:(unsigned int)arg2 sortDescriptors:(id)arg3;
- (id)selectRowsWithQuery:(id)arg1 tableID:(unsigned int)arg2;
- (void)query:(id)arg1 tableID:(unsigned int)arg2 handler:(id)arg3 activity:(id)arg4;
- (id)tableWithID:(unsigned int)arg1;
- (void)removeRequiredTableWithID:(unsigned int)arg1;
- (unsigned int)addRequiredTableWithSpec:(id)arg1;
- (id)schemaWithName:(id)arg1;
- (void)removeSchemaWithName:(id)arg1;
- (void)addSchema:(id)arg1;
- (void)enumerateKnownSchemas:(CDUnknownBlockType)arg1;
- (void)importSchemasXMLFromURL:(id)arg1;
- (void)addBindingRulesAtURL:(id)arg1 extensionName:(id)arg2;
- (void)clipsDidClear:(struct XRCLIPS *)arg1;
- (void)clipsDidReset:(struct XRCLIPS *)arg1;
- (id)init;
- (id)initWithContext:(id)arg1 registry:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface XRAnalysisCoreBulkLoadManager : XRAnalysisCoreActivityManager
{
}

+ (BOOL)_establishesAffinity;
+ (BOOL)_enableConcurrentActivities;
- (void)populateTableIDs:(id)arg1 block:(CDUnknownBlockType)arg2;

@end

@interface XRAnalysisCoreChooseAnyFunction : XRAnalysisCoreSingleColumnAggregateFunction <XRAnalysisCoreAggregateFunction>
{
    XRAnalysisCoreValue *_value;
}

- (void).cxx_destruct;
- (BOOL)getAggregateOutputValue:(id *)arg1 core:(id)arg2;
- (void)drainCursor:(struct XRAnalysisCoreReadCursor *)arg1;
- (id)extendFunctionWithScope:(unsigned long long)arg1;
- (unsigned short)outputEngineeringType;
- (BOOL)isValidForEngineeringType:(unsigned short)arg1;
- (id)displayableFunctionName;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRAnalysisCoreColumnValueSet : NSObject <NSMutableCopying>
{
    XRMutableIndexSet *_signatures;
    BOOL _unsatisfiable;
    id _registryForDebugging;
}

@property(nonatomic) BOOL unsatisfiable; // @synthesize unsatisfiable=_unsatisfiable;
@property(nonatomic) __weak id registryForDebugging; // @synthesize registryForDebugging=_registryForDebugging;
- (void).cxx_destruct;
- (void)enumerateSignatures:(CDUnknownBlockType)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (void)addValueObject:(id)arg1;
- (id)init;
- (id)initWithSignatures:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface XRAnalysisCoreCommutator : NSObject <XRAnalysisCoreCommutator>
{
    unsigned char _state;
    XRAnalysisCoreRing *_ring;
    NSThread *_thread;
    struct _opaque_pthread_cond_t _cond;
    struct _opaque_pthread_mutex_t _mutex;
}

- (void).cxx_destruct;
- (void)_thread:(id)arg1;
- (void)wakeUp;
- (void)_transitionToStopped;
- (void)stop;
- (void)start;
- (void)setRing:(id)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface XRAnalysisCoreConfigurationManager : XRAnalysisCoreActivityManager
{
    struct XRSerializedAccess<GuardedState> _state;
}

+ (BOOL)_enableConcurrentActivities;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)readInnerCore:(CDUnknownBlockType)arg1;
- (void)readBindingHemisphere:(CDUnknownBlockType)arg1;
- (void)accessContext:(CDUnknownBlockType)arg1;
- (void)accessModelingHemisphere:(CDUnknownBlockType)arg1;
- (void)accessBindingHemisphere:(CDUnknownBlockType)arg1;
- (int)_handleMinorFrameWithDeadline:(unsigned long long)arg1;
- (id)seal;
- (id)disengage;
- (id)engage;
- (void)setTargetEventHorizon:(unsigned long long)arg1;
- (void)realizeBindingSolution;
- (void)_realizeBindingSolutionDuringActivity:(id)arg1;
- (void)moveCoreToSubpath:(id)arg1;
- (void)addExtension:(id)arg1;
- (void)bootstrapCore;
- (void)_scanURLForCoreExtensions:(id)arg1;
- (void)_importDTACContent:(id)arg1 extensionName:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface XRAnalysisCoreContext : NSObject <XRErrorResponder>
{
    BOOL _engaged;
    BOOL _sealed;
    unsigned long long _targetEventHorizon;
    unsigned long long _currentEventHorizon;
    NSString *_subpath;
    XRAnalysisCorePathManager *_pathMan;
    XRIntKeyedDictionary *_requiredReadOnlySpecsByID;
    NSNotificationCenter *_notificationCenter;
    NSOperationQueue *_notificationOpQueue;
    id _notificationOrigin;
}

@property(nonatomic) __weak id notificationOrigin; // @synthesize notificationOrigin=_notificationOrigin;
@property(retain, nonatomic) NSOperationQueue *notificationOpQueue; // @synthesize notificationOpQueue=_notificationOpQueue;
@property(retain, nonatomic) NSNotificationCenter *notificationCenter; // @synthesize notificationCenter=_notificationCenter;
@property(retain, nonatomic) XRIntKeyedDictionary *requiredReadOnlySpecsByID; // @synthesize requiredReadOnlySpecsByID=_requiredReadOnlySpecsByID;
@property(retain, nonatomic) XRAnalysisCorePathManager *pathMan; // @synthesize pathMan=_pathMan;
@property(copy, nonatomic) NSString *subpath; // @synthesize subpath=_subpath;
@property(nonatomic) BOOL sealed; // @synthesize sealed=_sealed;
@property(nonatomic) BOOL engaged; // @synthesize engaged=_engaged;
@property(nonatomic) unsigned long long currentEventHorizon; // @synthesize currentEventHorizon=_currentEventHorizon;
@property(nonatomic) unsigned long long targetEventHorizon; // @synthesize targetEventHorizon=_targetEventHorizon;
- (void).cxx_destruct;
- (void)postNotificationName:(id)arg1 userInfo:(id)arg2;
- (unsigned long long)respondToFatalError:(id)arg1 from:(id)arg2;
- (void)logAnamolousErrorMessageWithFormat:(id)arg1 args:(struct __va_list_tag [1])arg2;
- (void)logAnamolousErrorMessageWithFormat:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRAnalysisCoreCountFunction : XRAnalysisCoreAggregateFunction <XRAnalysisCoreAggregateFunction>
{
    XRAnalysisCoreCountFunction *_parent;
    unsigned int _count;
}

- (void).cxx_destruct;
- (BOOL)getAggregateOutputValue:(id *)arg1 core:(id)arg2;
- (void)drainCursor:(struct XRAnalysisCoreReadCursor *)arg1;
- (id)extendFunctionWithScope:(unsigned long long)arg1;
- (unsigned short)outputEngineeringType;
- (BOOL)isValidForEngineeringType:(unsigned short)arg1;
- (id)displayableFunctionName;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRAnalysisCoreFullTextSearchSpec : NSObject <NSMutableCopying, NSSecureCoding>
{
    NSIndexSet *_columnIDs;
    NSArray *_tokens;
    unsigned long long _matchKind;
    NSFormatter *_formatter;
}

+ (BOOL)supportsSecureCoding;
@property(retain, nonatomic) NSFormatter *formatter; // @synthesize formatter=_formatter;
@property(nonatomic) unsigned long long matchKind; // @synthesize matchKind=_matchKind;
@property(copy, nonatomic) NSArray *tokens; // @synthesize tokens=_tokens;
@property(copy, nonatomic) NSIndexSet *columnIDs; // @synthesize columnIDs=_columnIDs;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copy;

@end

@interface XRAnalysisCoreFunctionInvocation : NSObject <XRAnalysisCoreFunctionInvocation>
{
    id <XRAnalysisCoreRegistry> _registry;
    struct vector<XRAnalysisCoreFunctionInvocationArg, std::__1::allocator<XRAnalysisCoreFunctionInvocationArg>> _arguments;
    struct XRAnalysisCoreFunctionInvocationArg _output;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (id)output;
- (void)setOutputAsBacktrace:(const struct XRBacktraceFragment *)arg1 count:(unsigned int)arg2;
- (void)setOutputAsString:(id)arg1 engineeringType:(unsigned short)arg2;
- (void)setOutputAsStoredArray:(struct XRStoredUInt64Array)arg1 engineeringType:(unsigned short)arg2;
- (void)setOutputAsArray:(struct XRUInt64Array)arg1 engineeringType:(unsigned short)arg2;
- (void)setOutputAsUInt64:(unsigned long long)arg1 engineeringType:(unsigned short)arg2;
- (void)setArgumentIndex:(unsigned int)arg1 storedValue:(union XRStoredValue)arg2 engineeringType:(unsigned short)arg3;
- (id)argumentAsValueAtIndex:(unsigned int)arg1;
- (id)init;
- (id)initWithRegistry:(id)arg1;

@end

@interface XRAnalysisCoreImplValue : NSObject <NSMutableCopying>
{
    BOOL _isValid;
    union XRImplementedValue _value;
    unsigned char _type;
    NSString *_copiedString;
    NSData *_copiedArray;
    double _fixedDecimal;
}

@property(nonatomic) double fixedDecimal; // @synthesize fixedDecimal=_fixedDecimal;
@property(readonly, nonatomic) unsigned char type; // @synthesize type=_type;
- (void).cxx_destruct;
@property(nonatomic) struct XRUInt64Array array;
@property(copy, nonatomic) NSString *string;
@property(nonatomic) unsigned int uint32;
@property(nonatomic) unsigned long long uint64;
- (union XRStoredValue)_stored;
@property(readonly, nonatomic) const union XRImplementedValue *value;
@property(readonly, nonatomic, getter=isValid) BOOL valid;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)init;
- (id)initWithType:(unsigned char)arg1;

@end

@interface XRAnalysisCoreMaximumFunction : XRAnalysisCoreSingleColumnAggregateFunction <XRAnalysisCoreAggregateFunction>
{
    union XRStoredValue _maximum;
    XRAnalysisCoreMaximumFunction *_parent;
}

- (void).cxx_destruct;
- (BOOL)getAggregateOutputValue:(id *)arg1 core:(id)arg2;
- (void)drainCursor:(struct XRAnalysisCoreReadCursor *)arg1;
- (id)extendFunctionWithScope:(unsigned long long)arg1;
- (unsigned short)outputEngineeringType;
- (BOOL)isValidForEngineeringType:(unsigned short)arg1;
- (id)displayableFunctionName;
- (id)initWithSchema:(id)arg1 parameters:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRAnalysisCoreMinimumFunction : XRAnalysisCoreSingleColumnAggregateFunction <XRAnalysisCoreAggregateFunction>
{
    union XRStoredValue _minimum;
    XRAnalysisCoreMinimumFunction *_parent;
}

- (void).cxx_destruct;
- (BOOL)getAggregateOutputValue:(id *)arg1 core:(id)arg2;
- (void)drainCursor:(struct XRAnalysisCoreReadCursor *)arg1;
- (id)extendFunctionWithScope:(unsigned long long)arg1;
- (unsigned short)outputEngineeringType;
- (BOOL)isValidForEngineeringType:(unsigned short)arg1;
- (id)displayableFunctionName;
- (id)initWithSchema:(id)arg1 parameters:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface XRAnalysisCoreModelerBindingSolution : NSObject
{
    XRIntKeyedDictionary *_instancesByStage;
    unsigned char _lastStage;
}

- (void).cxx_destruct;
- (id)modelerTableSetPairsInStage:(unsigned char)arg1;
- (unsigned char)lastStage;
- (BOOL)isFullyInstantiated;
- (void)enumerateInstancesWithBlock:(CDUnknownBlockType)arg1;
- (void)enumerateModelersInStage:(unsigned char)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)enumerateInstancesInStage:(unsigned char)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)addInstanceToSolution:(id)arg1 stage:(unsigned char)arg2;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface XRAnalysisCoreModelerInstance : NSObject
{
    XRIntKeyedDictionary *_bindings;
    NSString *_modelerClassName;
    id <XRAnalysisCoreModeler> _modeler;
}

@property(retain, nonatomic) id <XRAnalysisCoreModeler> modeler; // @synthesize modeler=_modeler;
@property(readonly, nonatomic) NSString *modelerClassName; // @synthesize modelerClassName=_modelerClassName;
- (void).cxx_destruct;
- (void)addTable:(id)arg1 tableID:(unsigned int)arg2;
@property(readonly, nonatomic) id <XRIntKeyedDictionaryImmutable> tablesByID;
- (id)init;
- (id)initWithClassName:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface XRAnalysisCoreModelerTableSetPair : NSObject
{
    id <XRAnalysisCoreModeler> _modeler;
    XRIntKeyedDictionary *_tablesByID;
}

@property(retain, nonatomic) XRIntKeyedDictionary *tablesByID; // @synthesize tablesByID=_tablesByID;
@property(retain, nonatomic) id <XRAnalysisCoreModeler> modeler; // @synthesize modeler=_modeler;
- (void).cxx_destruct;

@end

__attribute__((visibility("hidden")))
@interface XRAnalysisCoreModelingHemisphere : NSObject
{
    XRAnalysisCoreContext *_context;
    XRAnalysisCoreObjectRegistry *_registry;
    XRCLIPSModelerFactory *_clipsModelerFactory;
    NSMutableArray *_modelerFactories;
    BOOL _engaged;
    BOOL _shouldDisengage;
    id <XRErrorResponder> _errorResponder;
    NSProgress *_modelingChunkProgress;
    XRAnalysisCoreModelerBindingSolution *_bindingSolution;
}

@property(retain, nonatomic) XRAnalysisCoreModelerBindingSolution *bindingSolution; // @synthesize bindingSolution=_bindingSolution;
@property(retain, nonatomic) NSProgress *modelingChunkProgress; // @synthesize modelingChunkProgress=_modelingChunkProgress;
@property(nonatomic) BOOL shouldDisengage; // @synthesize shouldDisengage=_shouldDisengage;
@property(nonatomic, getter=isEngaged) BOOL engaged; // @synthesize engaged=_engaged;
@property(readonly, nonatomic) XRCLIPSModelerFactory *clipsModelerFactory; // @synthesize clipsModelerFactory=_clipsModelerFactory;
@property(readonly, nonatomic) XRAnalysisCoreObjectRegistry *registry; // @synthesize registry=_registry;
@property(nonatomic) __weak id <XRErrorResponder> errorResponder; // @synthesize errorResponder=_errorResponder;
- (void).cxx_destruct;
- (void)finalSpeculationPerformed;
- (void)initiateDisengage;
- (void)initiateEngage;
- (void)seal;
- (void)coreSubpathWillChange;
- (void)coreSubpathDidChange:(id)arg1;
@property(readonly, nonatomic) NSArray *modelerFactories;
- (id)init;
- (id)initWithContext:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface XRAnalysisCoreModelingManager : XRAnalysisCoreActivityManager <XRLazyKVOResponder>
{
    XRLazyKVOAdapter *_kvoAdapter;
    NSMutableArray *_activeModelingOps;
    unsigned char _currentStage;
    struct XRTimeRange _currentChunk;
    BOOL _performFinalSpeculation;
}

+ (BOOL)_establishesAffinity;
+ (BOOL)_enableConcurrentActivities;
- (void).cxx_destruct;
- (void)_startActivitiesForCurrentStage;
- (int)_handleMinorFrameWithDeadline:(unsigned long long)arg1;
- (void)handleLazyKVOUpdate:(id)arg1;
- (void)_finalShutdown;
- (id)initWithContext:(id)arg1 bindingHemisphere:(id)arg2 modelingHemisphere:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRAnalysisCoreSingleColumnRollup : NSObject
{
    unsigned char _columnID;
    unsigned short _inputType;
    NSString *_columnEngineeringName;
}

+ (id)rollUpWithName:(id)arg1 schema:(id)arg2 columnID:(unsigned char)arg3 sourceType:(unsigned short)arg4;
- (void).cxx_destruct;
- (id)init;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)initWithSchema:(id)arg1 columnID:(unsigned char)arg2;
- (id)initWithColumnID:(unsigned char)arg1 inputEngineeringType:(unsigned short)arg2 inputEngineeringName:(id)arg3;

@end

@interface XRAnalysisCoreNoRollUp : XRAnalysisCoreSingleColumnRollup <XRAnalysisCoreRollUpFunction>
{
}

- (id)queryForRolledUpValue:(id)arg1;
- (void)rollUp:(const struct XRAnalysisCoreReadCursor *)arg1 to:(id *)arg2 core:(id)arg3;
- (unsigned short)outputEngineeringType;
- (id)extendFunctionWithScope:(unsigned long long)arg1;
- (id)displayableFunctionName;
- (BOOL)isValidForEngineeringType:(unsigned short)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface XRAnalysisCoreObjectRegistry : NSObject <XRAnalysisCoreRegistry>
{
    BOOL _sealed;
    struct XRModalLock _lock;
    NSMapTable *_stringUniquing;
    NSMutableArray *_stringByIID;
    unsigned int _nextStringIID;
    NSString *_subpath;
    XRAnalysisCorePathManager *_pathMan;
    struct XRIntegerUniquer *_arrayUniquer;
    struct XRIntegerUniquer *_typedArrayUniquer;
    NSMutableDictionary *_oraclesByName;
    NSMutableSet *_activeOracles;
    NSURL *_uniqueingSubpath;
    unsigned int _threadStateConstants[12];
    XRAnalysisCoreObjectRegistryTOC *_toc;
    XRAnalysisCoreObjectRegistryWeak *_weakProxy;
    id <XRErrorResponder> _errorResponder;
}

@property(nonatomic) __weak id <XRErrorResponder> errorResponder; // @synthesize errorResponder=_errorResponder;
- (id).cxx_construct;
- (void).cxx_destruct;
- (BOOL)getExistingStoredValue:(union XRStoredValue *)arg1 fromImplValue:(id)arg2;
- (union XRStoredValue)storedThreadState:(unsigned int)arg1;
- (union XRStoredValue)storedProcess:(int)arg1 deviceSession:(unsigned int)arg2;
- (struct XRStoredUInt64Array)storedBacktrace:(const struct XRBacktraceFragment *)arg1 count:(unsigned int)arg2;
- (BOOL)pointsAtSameRegistry:(id)arg1;
- (id)weakProxy;
- (BOOL)invokeOracleFunction:(id)arg1 invocation:(id)arg2;
- (id)oracleFunctionTokenWithName:(id)arg1;
- (void)addOracleFunction:(id)arg1 name:(id)arg2;
- (id)arrayForTypedArray:(unsigned int)arg1;
- (BOOL)getTypedArray:(struct XRStoredTypedArray *)arg1 iid:(unsigned int)arg2;
- (unsigned int)addTypedArrayToCore:(struct XRTypedArray)arg1;
- (id)arrayForUInt64Array:(unsigned int)arg1;
- (BOOL)getArrayOfUInt64s:(struct XRStoredUInt64Array *)arg1 iid:(unsigned int)arg2;
- (struct XRStoredUInt64Array)storedArrayOfUInt64s:(struct XRUInt64Array)arg1;
- (unsigned int)addArrayOfUInt64sToCore:(struct XRUInt64Array)arg1;
- (id)stringForIID:(unsigned int)arg1;
- (unsigned int)addStringToCore:(id)arg1;
- (void)dealloc;
- (void)seal;
- (void)_handleSubpathChange:(id)arg1;
- (void)coreSubpathWillChange;
- (void)coreSubpathDidChange:(id)arg1;
- (id)initWithPathManager:(id)arg1 coreSubpath:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface XRAnalysisCoreObjectRegistryTOC : NSObject <NSSecureCoding>
{
    NSString *_stringsComponent;
    NSString *_arrayComponent;
    NSString *_typedArrayComponent;
}

+ (BOOL)supportsSecureCoding;
+ (id)tocWithMissingArchiveAtUniquingURL:(id)arg1;
+ (long long)version;
- (void).cxx_destruct;
- (id)urlForTypedArrayUniquerFromBaseURL:(id)arg1;
- (id)urlForArrayUniquerFromBaseURL:(id)arg1;
- (id)urlForStringMapFromBaseURL:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)init;
- (id)initWithArrayComponent:(id)arg1 typedArrayComponent:(id)arg2 stringComponent:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface XRAnalysisCoreObjectRegistryWeak : NSObject
{
    XRAnalysisCoreObjectRegistry *_reg;
}

- (void)forwardInvocation:(id)arg1;
- (id)forwardingTargetForSelector:(SEL)arg1;
- (void)_registryGoingAway;
- (id)weakProxy;
- (id)initWithRegistry:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface XRAnalysisCoreOptimizationManager : XRAnalysisCoreActivityManager <XRLazyKVOResponder>
{
    XRLazyKVOAdapter *_kvoAdapter;
}

+ (BOOL)_enableConcurrentActivities;
- (void).cxx_destruct;
- (void)handleLazyKVOUpdate:(id)arg1;
- (int)_handleMinorFrameWithDeadline:(unsigned long long)arg1;
- (id)initWithContext:(id)arg1 bindingHemisphere:(id)arg2 modelingHemisphere:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRAnalysisCorePathManager : NSObject
{
    struct XRSerializedAccess<XRAnalysisCorePathManagerState> _state;
}

+ (id)temporaryDirectoryURL:(id *)arg1;
+ (id)temporaryDirectoryBaseURL:(id *)arg1;
+ (id)defaultTemporaryDirectoryBaseURL;
+ (BOOL)setTemporaryDirectoryBaseURL:(id)arg1 error:(id *)arg2;
+ (void)deleteStaleTempPaths;
+ (id)defaultExperimentsURL;
+ (id)defaultGlobalConfigURL;
- (id).cxx_construct;
- (void).cxx_destruct;
- (BOOL)writeAtomicallyToURL:(id)arg1 progressBlock:(CDUnknownBlockType)arg2;
- (void)enumerateSubpathsAndURLs:(CDUnknownBlockType)arg1;
- (BOOL)removeSubpath:(id)arg1 error:(id *)arg2;
- (id)copyURL:(id)arg1 asSubpath:(id)arg2 error:(id *)arg3;
- (BOOL)moveSubpathFrom:(id)arg1 to:(id)arg2 error:(id *)arg3;
- (BOOL)remapSubpath:(id)arg1 toURL:(id)arg2 error:(id *)arg3;
- (id)localFileSystemDirectoryForSubpath:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;
- (id)createLocalFileSystemDirectoryAtSubpath:(id)arg1 error:(id *)arg2;
- (void)dealloc;
- (id)init;
- (BOOL)validateWithError:(id *)arg1;
@property(readonly) NSURL *baseURL;
- (id)initWithBaseURL:(id)arg1;

@end

@interface XRAnalysisCorePercentageCapacityFunction : XRAnalysisCoreSingleColumnAggregateFunction <XRAnalysisCoreAggregateFunction>
{
    XRAnalysisCorePercentageCapacityFunction *_parent;
    union XRStoredValue _total;
    double _capacity;
}

- (void).cxx_destruct;
- (BOOL)getAggregateOutputValue:(id *)arg1 core:(id)arg2;
- (void)drainCursor:(struct XRAnalysisCoreReadCursor *)arg1;
- (unsigned short)outputEngineeringType;
- (BOOL)isValidForEngineeringType:(unsigned short)arg1;
- (id)displayableFunctionName;
- (id)extendFunctionWithScope:(unsigned long long)arg1;
- (id)initWithSchema:(id)arg1 parameters:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface XRAnalysisCorePivotArray : NSObject
{
    struct XRPivotArray<_XRStorageManagerDirectAddress, std::__1::tuple<XRAnalysisCoreSortLess &, XRAnalysisCoreSortLess &>, 1024> _content;
    XRAnalysisCoreRowArray *_source;
    NSOperationQueue *_serializedOps;
    NSArray *_descriptors;
}

@property(retain, nonatomic) NSArray *descriptors; // @synthesize descriptors=_descriptors;
@property(readonly, nonatomic) NSOperationQueue *serializedOps; // @synthesize serializedOps=_serializedOps;
@property(readonly, nonatomic) XRAnalysisCoreRowArray *source; // @synthesize source=_source;
- (id).cxx_construct;
- (void).cxx_destruct;
- (unsigned long long)_rowInDimension:(unsigned char)arg1 closestToTime:(unsigned long long)arg2 store:(id)arg3;
- (void)_readRowsStartingAt:(unsigned long long)arg1 dimension:(unsigned char)arg2 store:(id)arg3 block:(CDUnknownBlockType)arg4;
- (id)_accessorWithTableID:(unsigned int)arg1 store:(id)arg2;
- (long long)_indexForSignature:(long long)arg1 dimension:(unsigned char)arg2;
- (long long)_signatureForIndex:(unsigned long long)arg1 dimension:(unsigned char)arg2;
- (void)_resetExposed;
- (void)_purgeUsingPrimarySortFunction:(struct XRAnalysisCoreSortLess *)arg1 timeSortFunction:(struct XRAnalysisCoreSortLess *)arg2;
- (void)_exposeUsingPrimarySortFunction:(struct XRAnalysisCoreSortLess *)arg1 timeSortFunction:(struct XRAnalysisCoreSortLess *)arg2 control:(id)arg3;
- (void)_loadContent;
- (void)access:(CDUnknownBlockType)arg1;
- (unsigned long long)count;
- (BOOL)includesSpeculation;
- (id)changeSortDescriptors:(id)arg1;
- (id)refresh;
- (id)init;
- (id)initWithRowArray:(id)arg1 sortDescriptors:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface XRAnalysisCorePivotArrayAccessor : NSObject <XRAnalysisCorePivotArrayAccessor>
{
    XRAnalysisCorePivotArray *_pivotArray;
    XRIndexedStorage *_store;
    unsigned int _tableID;
}

- (void).cxx_destruct;
- (unsigned long long)rowInDimension:(unsigned char)arg1 closestToTime:(unsigned long long)arg2;
- (void)readRowsStartingAt:(unsigned long long)arg1 dimension:(unsigned char)arg2 block:(CDUnknownBlockType)arg3;
- (unsigned long long)indexForSignature:(long long)arg1 dimension:(unsigned char)arg2;
- (long long)signatureForIndex:(unsigned long long)arg1 dimension:(unsigned char)arg2;
- (id)init;
- (id)initWithStore:(id)arg1 tableID:(unsigned int)arg2 array:(id)arg3;

@end

@interface XRAnalysisCoreProcessFromThreadRollup : XRAnalysisCoreSingleColumnRollup <XRAnalysisCoreRollUpFunction>
{
    struct unordered_map<unsigned int, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>>>> _pidToTidMap;
    struct unordered_map<unsigned int, unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned int>>> _tidToPidCache;
    XRAnalysisCoreValue *_reusedThread;
    XRAnalysisCoreValue *_reusedProcess;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (id)queryForRolledUpValue:(id)arg1;
- (void)rollUp:(const struct XRAnalysisCoreReadCursor *)arg1 to:(id *)arg2 core:(id)arg3;
- (unsigned short)outputEngineeringType;
- (id)displayableFunctionName;
- (BOOL)isValidForEngineeringType:(unsigned short)arg1;
- (id)extendFunctionWithScope:(unsigned long long)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRAnalysisCoreProjector : NSObject
{
    XRAnalysisCoreProjectorSpec *_spec;
    XRStorageManager *_store;
    struct unique_ptr<Projection, std::__1::default_delete<Projection>> _projector;
    id <XRAnalysisCoreRegistry> _registry;
    NSDate *_creationTime;
    XRAnalysisCoreRowArray *_sourceContent;
    NSOperation *_currentRefreshOp;
    XRAnalysisCore *_core;
}

+ (id)refreshAndAccessProjectors:(id)arg1 block:(CDUnknownBlockType)arg2;
@property(nonatomic) __weak XRAnalysisCore *core; // @synthesize core=_core;
@property(retain, nonatomic) NSOperation *currentRefreshOp; // @synthesize currentRefreshOp=_currentRefreshOp;
@property(retain, nonatomic) XRAnalysisCoreRowArray *sourceContent; // @synthesize sourceContent=_sourceContent;
@property(copy, nonatomic) NSDate *creationTime; // @synthesize creationTime=_creationTime;
@property(readonly, nonatomic) XRAnalysisCoreProjectorSpec *spec; // @synthesize spec=_spec;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)destroyCursor:(struct XRAnalysisCoreProjectionCursor *)arg1;
- (struct XRAnalysisCoreProjectionCursor *)createNewCursorWithCore:(id)arg1;
- (id)refresh;
- (void)access:(CDUnknownBlockType)arg1;
- (unsigned short)engineeringTypeForProjectionIndex:(unsigned char)arg1;
- (id)displayNameForProjectionIndex:(unsigned char)arg1;
- (void)receiveNewRowsFromCore:(id)arg1 activity:(id)arg2;
- (void)readSourceWithBlock:(CDUnknownBlockType)arg1;
- (void)attachToSource;
@property(readonly, nonatomic) unsigned int tableID;
- (id)init;
- (id)initWithSpec:(id)arg1 registry:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface XRAnalysisCoreProjectorAccessManager : XRAnalysisCoreActivityManager
{
}

+ (BOOL)_enableConcurrentActivities;
- (void)accessPivotArray:(id)arg1 block:(CDUnknownBlockType)arg2;
- (void)readRowsInArray:(id)arg1 startingAt:(unsigned long long)arg2 block:(CDUnknownBlockType)arg3;
- (BOOL)performProjectorHierarchyAccess:(id)arg1 staleProjectors:(id *)arg2 block:(CDUnknownBlockType)arg3;
- (void)accessProjector:(id)arg1 block:(CDUnknownBlockType)arg2;

@end

__attribute__((visibility("hidden")))
@interface XRAnalysisCoreProjectorForTables : XRAnalysisCoreProjector
{
    XRAnalysisCoreTableManager *_tableManager;
    XRIndexedStorage *_store;
    unsigned int _tableID;
}

- (void).cxx_destruct;
- (void)readSourceWithBlock:(CDUnknownBlockType)arg1;
- (unsigned int)tableID;
- (id)init;
- (id)initWithSpec:(id)arg1 registry:(id)arg2;
- (id)initWithSpec:(id)arg1 store:(id)arg2 tableID:(unsigned int)arg3 registry:(id)arg4;

@end

@interface XRAnalysisCoreProjectorSpec : NSObject <NSMutableCopying>
{
    NSMutableArray *_projections;
    NSMutableArray *_independentVariables;
    NSMapTable *_identifierToIdxMap;
    NSString *_displayName;
    XRAnalysisCoreTableQuery *_filter;
}

@property(retain, nonatomic) XRAnalysisCoreTableQuery *filter; // @synthesize filter=_filter;
@property(copy, nonatomic) NSString *displayName; // @synthesize displayName=_displayName;
- (void).cxx_destruct;
- (void)enumerateProjections:(CDUnknownBlockType)arg1;
- (unsigned char)projectionIndexForDependentVariableIndex:(unsigned char)arg1;
- (unsigned char)dependentVariableIndex:(unsigned char)arg1;
@property(readonly, nonatomic) unsigned char dependentVariableCount;
@property(readonly, nonatomic) unsigned char dimensionCount;
- (unsigned char)projectionWithIdentifier:(id)arg1;
- (unsigned char)addProjectionWithFunction:(id)arg1;
- (unsigned char)addIndependentVariable:(id)arg1;
- (unsigned char)addIndependentVariable:(id)arg1 identifier:(id)arg2;
- (unsigned char)addProjectionWithFunction:(id)arg1 identifier:(id)arg2;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isEqualToSpec:(id)arg1;
- (unsigned long long)hash;
- (id)copy;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)init;
- (id)initWithSchema:(id)arg1;
- (id)initWithFilter:(id)arg1 displayName:(id)arg2 independents:(id)arg3 projections:(id)arg4 identifierMap:(id)arg5;

@end

@interface XRAnalysisCoreQueryContext : NSObject <XRAnalysisCoreQueryContext>
{
    id <XRAnalysisCoreReadOnly> _core;
    XRAnalysisCoreTableQuery *_query;
    unsigned long long _scope;
}

@property(nonatomic) unsigned long long scope; // @synthesize scope=_scope;
@property(nonatomic) XRAnalysisCoreTableQuery *query; // @synthesize query=_query;
@property(nonatomic) id <XRAnalysisCoreReadOnly> core; // @synthesize core=_core;

@end

__attribute__((visibility("hidden")))
@interface XRAnalysisCoreQueryManager : XRAnalysisCoreActivityManager
{
}

+ (BOOL)_establishesAffinity;
+ (BOOL)_enableConcurrentActivities;
- (id)refreshProjector:(id)arg1;
- (long long)indexOfBookmark:(union XRBookmark)arg1 rowArray:(id)arg2;
- (id)changeSortDescriptors:(id)arg1 array:(id)arg2;
- (id)refreshPivotArray:(id)arg1;
- (id)refreshRowArray:(id)arg1;
- (void)randomAccessForTableID:(unsigned int)arg1 block:(CDUnknownBlockType)arg2;
- (void)query:(id)arg1 tableID:(unsigned int)arg2 handler:(id)arg3;
- (id)asyncQuery:(id)arg1 tableID:(unsigned int)arg2 handler:(id)arg3;
- (id)selectRowsWithQuery:(id)arg1 tableID:(unsigned int)arg2 sortDescriptors:(id)arg3;
- (id)selectRowsWithQuery:(id)arg1 tableID:(unsigned int)arg2;

@end

__attribute__((visibility("hidden")))
@interface XRAnalysisCoreRing : NSObject
{
    struct vector<XRAnalysisCoreActivityManager *__weak, std::__1::allocator<XRAnalysisCoreActivityManager *__weak>> _content;
    unsigned char _currentPos;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (id)nextReadyActivityManager;
- (void)shutdown;
- (void)setCommutator:(id)arg1;
- (void)assignActivityManager:(id)arg1 frame:(id)arg2;
@property(readonly, nonatomic) unsigned char count;
- (id)init;
- (id)initWithMinorFrameCount:(unsigned char)arg1;

@end

@interface XRAnalysisCoreRowArray : NSObject
{
    unsigned int _tableID;
    struct vector<_XRStorageManagerDirectAddress, std::__1::allocator<_XRStorageManagerDirectAddress>> _contents;
    unsigned long long _exposedRowCount;
    XRAnalysisCore *_core;
    XRAnalysisCoreTableQuery *_filter;
    XRAnalysisCorePivotArray *_extension;
}

@property(nonatomic) __weak XRAnalysisCorePivotArray *extension; // @synthesize extension=_extension;
- (id).cxx_construct;
- (void).cxx_destruct;
- (unique_ptr_17ac6491)_readCursorForTableID:(unsigned int)arg1 store:(id)arg2 start:(unsigned long long)arg3;
- (BOOL)_needsRefresh;
- (id)refresh;
- (void)readRowsStartingAt:(unsigned long long)arg1 block:(CDUnknownBlockType)arg2;
- (void)_purgeSpeculativeContent;
- (unsigned long long)indexOfBookmark:(union XRBookmark)arg1;
- (__wrap_iter_1e889ba1)_endOfExposed;
- (__wrap_iter_1e889ba1)_beginOfExposed;
- (void)_exposeAddedRows;
- (void)_clear;
- (unsigned int)tableID;
- (unsigned long long)count;

@end

@interface XRAnalysisCoreStandardDeviationFunction : XRAnalysisCoreSingleColumnAggregateFunction <XRAnalysisCoreAggregateFunction>
{
    XRAnalysisCoreStandardDeviationFunction *_parent;
    unsigned long long _rowCount;
    double _mean;
    double _M2;
}

- (void).cxx_destruct;
- (BOOL)getAggregateOutputValue:(id *)arg1 core:(id)arg2;
- (void)drainCursor:(struct XRAnalysisCoreReadCursor *)arg1;
- (id)extendFunctionWithScope:(unsigned long long)arg1;
- (id)clone;
- (unsigned short)outputEngineeringType;
- (BOOL)isValidForEngineeringType:(unsigned short)arg1;
- (id)displayableFunctionName;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRAnalysisCoreSumFunction : XRAnalysisCoreSingleColumnAggregateFunction <XRAnalysisCoreAggregateFunction>
{
    union XRStoredValue _total;
    XRAnalysisCoreSumFunction *_parent;
}

- (void).cxx_destruct;
- (BOOL)getAggregateOutputValue:(id *)arg1 core:(id)arg2;
- (void)drainCursor:(struct XRAnalysisCoreReadCursor *)arg1;
- (id)extendFunctionWithScope:(unsigned long long)arg1;
- (unsigned short)outputEngineeringType;
- (BOOL)isValidForEngineeringType:(unsigned short)arg1;
- (id)displayableFunctionName;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRAnalysisCoreTable : NSObject
{
    id <XRAnalysisCoreReadOnly> _delegate;
    int _accessRights;
    XRAnalysisCoreTableSpec *_spec;
    XRIndexedStorage *_store;
}

@property(retain, nonatomic) XRIndexedStorage *store; // @synthesize store=_store;
@property(readonly) int accessRights; // @synthesize accessRights=_accessRights;
@property(readonly, nonatomic) XRAnalysisCoreTableSpec *spec; // @synthesize spec=_spec;
- (void).cxx_destruct;
- (void)_createSpecStore;
@property(readonly, nonatomic) XRAnalysisCoreTableSchema *schema;
- (id)init;
- (id)initWithSpec:(id)arg1 accessRights:(int)arg2 delegate:(id)arg3;

@end

@interface XRAnalysisCoreTableColumn : NSObject
{
    XRFieldDescriptor *_fieldDescriptor;
    unsigned char _topologyFieldID;
    unsigned short _engineeringType;
    NSString *_mnemonic;
    NSString *_engineeringName;
}

@property(readonly) unsigned char topologyFieldID; // @synthesize topologyFieldID=_topologyFieldID;
@property(readonly) unsigned short engineeringType; // @synthesize engineeringType=_engineeringType;
@property(readonly) NSString *engineeringName; // @synthesize engineeringName=_engineeringName;
@property(readonly) NSString *mnemonic; // @synthesize mnemonic=_mnemonic;
- (void).cxx_destruct;
@property(readonly) unsigned char implementationType;
- (id)initWithEngineeringName:(id)arg1 mnemonic:(id)arg2 engineeringType:(unsigned short)arg3 topologyFieldID:(unsigned char)arg4;
@property(retain) XRFieldDescriptor *fieldDescriptor;

@end

__attribute__((visibility("hidden")))
@interface XRAnalysisCoreTableManager : NSObject
{
    XRAnalysisCorePathManager *_pathMan;
    NSMutableDictionary *_storesBySpec;
    NSMutableDictionary *_invalidStoresBySpec;
    XRIntKeyedDictionary *_tablesByID;
    unsigned long long _latestStoreIdx;
    unsigned int _nextAvailableTableID;
    id <XRAnalysisCoreReadOnly> _delegate;
    id <XRAnalysisCoreRegistry> _registry;
    id <XRErrorResponder> _errorResponder;
}

- (void).cxx_destruct;
- (BOOL)seal;
- (id)tableBoundToID:(unsigned int)arg1;
- (void)enumerateKnownTablesWithBlock:(CDUnknownBlockType)arg1;
- (unsigned int)reserveTableID;
- (id)bindTableID:(unsigned int)arg1 store:(id)arg2 side:(int)arg3;
- (void)wipeInvalidTables;
- (void)invalidateAllTables;
- (id)makeStoreWithSpec:(id)arg1;
- (void)dealloc;
- (id)init;
- (id)initWithPathManager:(id)arg1 delegate:(id)arg2 registry:(id)arg3 errorResponder:(id)arg4;
- (id)tableManagerSubpath;

@end

@interface XRAnalysisCoreTableQuery : NSObject <NSMutableCopying, NSCoding>
{
    map_3c316075 _discreteFilters;
    struct XRTimeRange _timeRange;
    id <XRAnalysisCoreRegistry> _debugCheckRegistry;
    BOOL _unsatisfiable;
    unsigned long long _scope;
    XRAnalysisCoreFullTextSearchSpec *_fullTextSearchSpec;
}

@property(retain, nonatomic) XRAnalysisCoreFullTextSearchSpec *fullTextSearchSpec; // @synthesize fullTextSearchSpec=_fullTextSearchSpec;
@property(nonatomic) unsigned long long scope; // @synthesize scope=_scope;
@property(nonatomic) BOOL unsatisfiable; // @synthesize unsatisfiable=_unsatisfiable;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)replaceWithIntersectionWithQuery:(id)arg1;
- (id)_registryForDebugging;
- (void)setDiscreteFilter:(id)arg1 column:(unsigned char)arg2;
- (map_3c316075 *)discreteFilters;
- (id)initWithDiscreteFilters:(const map_3c316075 *)arg1 timeRange:(struct XRTimeRange)arg2 unsatisfiable:(BOOL)arg3 scope:(unsigned long long)arg4 fullTextSearch:(id)arg5;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (struct XRTimeRange)timeRange;
- (void)setTimeRange:(struct XRTimeRange)arg1;
- (id)init;
- (void)setAcceptableValues:(id)arg1 forColumn:(unsigned char)arg2;

@end

@interface XRAnalysisCoreTableSchema : NSObject
{
    vector_5b13af2a _colInternalsByID;
    NSArray *_colObjectsByID;
    NSDictionary *_columnIDsByMnemonic;
    unsigned char _primaryTimeColumnID;
    int _topologyTypeID;
    NSString *_name;
}

+ (id)schemaFromXMLElement:(id)arg1;
@property(readonly) int topologyTypeID; // @synthesize topologyTypeID=_topologyTypeID;
@property(readonly) NSString *name; // @synthesize name=_name;
- (id).cxx_construct;
- (void).cxx_destruct;
- (BOOL)extractColumnIDs:(void *)arg1 forMnemonics:(id)arg2;
- (id)columnsWithEngineeringType:(unsigned short)arg1;
- (id)columnForMnemonic:(id)arg1;
- (unsigned char)columnIDForMnemonic:(id)arg1;
- (void)enumerateColumns:(CDUnknownBlockType)arg1;
- (unsigned char)primaryTimeColumnID;
- (id)columnForID:(unsigned char)arg1;
@property(readonly) unsigned long long columnCount;
- (id)initWithName:(id)arg1 topology:(int)arg2 columns:(id)arg3;
- (id)topologyFieldDescriptor;
- (id)columnObjectsByID;
- (const vector_5b13af2a *)columnInternalsByID;
- (BOOL)writeToURL:(id)arg1 error:(id *)arg2;

@end

@interface XRAnalysisCoreTableSpec : NSObject <NSSecureCoding, NSCopying>
{
    NSString *_schemaName;
    NSString *_engineeringName;
    NSDictionary *_attributes;
}

+ (BOOL)supportsSecureCoding;
@property(readonly, nonatomic) NSDictionary *attributes; // @synthesize attributes=_attributes;
@property(readonly, nonatomic) NSString *engineeringName; // @synthesize engineeringName=_engineeringName;
@property(readonly, nonatomic) NSString *schemaName; // @synthesize schemaName=_schemaName;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)init;
- (id)initWithSchema:(id)arg1 engineeringName:(id)arg2 attributes:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface XRAnalysisCoreTimeColumnSortDescriptor : NSSortDescriptor <XRAnalysisCoreSortDescriptor>
{
}

@end

@interface XRAnalysisCoreValue : NSObject <NSCopying>
{
    id <XRAnalysisCoreRegistry> _registry;
    unsigned char _implClass;
    const union XRStoredValue *_storedValue;
    XRAnalysisCoreImplValue *_externalImpl;
    unsigned short _engineeringType;
}

@property(readonly, nonatomic) const union XRStoredValue *storedValue; // @synthesize storedValue=_storedValue;
@property(readonly, nonatomic) unsigned char implClass; // @synthesize implClass=_implClass;
@property(readonly, nonatomic) unsigned short engineeringType; // @synthesize engineeringType=_engineeringType;
- (void).cxx_destruct;
- (id)_registryForDebugging;
- (long long)compare:(id)arg1;
- (BOOL)getProcessDetails:(int *)arg1 session:(id *)arg2;
- (BOOL)getThreadDetails:(id *)arg1 tid:(unsigned long long *)arg2 session:(id *)arg3;
- (unsigned int)getThreadState;
- (BOOL)getCoreProfileCallstack:(struct XRBacktraceFragment *)arg1 pc:(unsigned long long *)arg2 registers:(struct XRUInt64Array *)arg3 process:(id *)arg4;
- (BOOL)enumerateBacktraceFragments:(CDUnknownBlockType)arg1;
- (BOOL)getStoredUInt64Array:(struct XRStoredUInt64Array *)arg1;
- (unsigned int)narrativeEntrySignificance;
- (unsigned int)threadState;
- (unsigned long long)signature;
- (double)fixedDecimal;
- (id)string;
- (unsigned int)uint32;
- (unsigned long long)uint64;
- (id)implValue;
- (id)objectValue;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithEngineeringType:(const struct XRAnalysisCoreEngineeringType *)arg1 storedValue:(const union XRStoredValue *)arg2 registry:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface XRAnalysisCoreValueCopy : XRAnalysisCoreValue
{
    union XRStoredValue _backingStore;
}

- (id)initWithEngineeringType:(const struct XRAnalysisCoreEngineeringType *)arg1 storedValue:(const union XRStoredValue *)arg2 registry:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface XRCLIPSModeler : NSObject <XRAnalysisCoreModeler>
{
    NSString *_modelerClass;
    NSURL *_rulesURL;
    NSURL *_configURL;
    NSSet *_knowledgeTemplatesURLs;
    NSSet *_knowledgeRulesURLs;
    NSArray *_knownSchemata;
    id <XRAnalysisCoreRegistry> _registry;
    NSMutableArray *_invocations;
    double _processingTime;
    struct XRCLIPSBlackboardEngine _modelingEngine;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)debuggingEnumerateContextStrings:(CDUnknownBlockType)arg1;
- (void)debuggingExecuteCommand:(id)arg1 context:(id)arg2;
- (id)debuggingSwapLogString:(id)arg1;
- (id)debuggingDumpWorkingMemoryForContext:(id)arg1;
@property(readonly, copy) NSString *debugDescription;
- (void)populateSpeculationTables:(const struct XRAnalysisCoreTableBindings *)arg1 eventHorizon:(unsigned long long)arg2;
- (void)populateOutputTables:(const struct XRAnalysisCoreTableBindings *)arg1 usingObserverations:(struct XRAnalysisCoreReadCursor *)arg2;
- (void)resetModelerStateWithTables:(id)arg1;
- (void)addTable:(id)arg1 withID:(unsigned int)arg2;
- (id)init;
- (id)initWithModelingRulesURL:(id)arg1 modelerClassName:(id)arg2 registry:(id)arg3 configURL:(id)arg4 knownKnowledgeURLs:(id)arg5 knownKnowledgeTemplatesURLs:(id)arg6 knownSchemata:(id)arg7;

// Remaining properties
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface XRCLIPSModelerFactory : NSObject <XRAnalysisCoreModelerFactory>
{
    XRAnalysisCorePathManager *_pathMan;
    NSString *_subpath;
    id <XRAnalysisCoreRegistry> _registry;
    NSMutableDictionary *_modelerRulesURLByClassName;
    NSSet *_knowledgeTemplatesURLs;
    NSSet *_knowledgeRulesURLs;
    NSArray *_knownSchemata;
}

- (void).cxx_destruct;
- (void)instanceModelersInSolution:(id)arg1;
- (void)registerKnowledgeTemplatesURL:(id)arg1;
- (void)registerKnowledgeRulesURL:(id)arg1;
- (void)registerRulesURL:(id)arg1 modelerClassName:(id)arg2;
- (void)updateKnownSchemata:(id)arg1;
- (id)initWithPathManager:(id)arg1 coreSubpath:(id)arg2 registery:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRDescriptorSubstitutions : NSObject <NSCoding>
{
    unsigned int _nextIdentifier;
    struct __CFDictionary *_valuesToIdentifiers;
    struct __CFDictionary *_identifiersToValues;
    struct _opaque_pthread_mutex_t _substitutionLock;
}

- (id)objectForSubstitutionIdentifier:(unsigned int)arg1;
- (unsigned int)substitutionIdentifierForObject:(id)arg1;
- (id)initWithOldCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)init;
- (void)_descriptorIvarInit;

@end

@interface XREventDescriptor : NSObject <NSCoding>
{
    Class _eventClass;
    unsigned int _minEventSize;
    unsigned int _maxEventSize;
    unsigned int _version;
    BOOL _variableSize;
    NSString *_name;
    NSString *_synopsis;
    NSString *_identifier;
    NSArray *_fields;
    NSMutableDictionary *_fieldsByName;
    NSDictionary *_props;
    NSMutableDictionary *_publicProps;
    XRDescriptorSubstitutions *_substitutions;
}

@property(readonly) NSMutableDictionary *properties; // @synthesize properties=_publicProps;
@property(copy, nonatomic) NSDictionary *archivedProperties; // @synthesize archivedProperties=_props;
@property(readonly) BOOL isSizeVariable; // @synthesize isSizeVariable=_variableSize;
@property(readonly) NSArray *fields; // @synthesize fields=_fields;
@property(readonly) unsigned int maxEventSize; // @synthesize maxEventSize=_maxEventSize;
@property(readonly) Class eventClass; // @synthesize eventClass=_eventClass;
@property(readonly) unsigned int version; // @synthesize version=_version;
@property(readonly) NSString *name; // @synthesize name=_name;
@property(readonly) NSString *identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
- (void)setSubstitutions:(id)arg1;
- (id)substitutions;
- (id)fieldWithName:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)_setupFieldsByName;
- (id)initWithExtensionData:(id)arg1;
- (id)initWithIdentifier:(id)arg1 name:(id)arg2 synopsis:(id)arg3 eventClass:(Class)arg4 version:(unsigned int)arg5 minSize:(unsigned int)arg6 maxSize:(unsigned int)arg7;
- (id)initWithIdentifier:(id)arg1 name:(id)arg2 synopsis:(id)arg3 eventClass:(Class)arg4 version:(unsigned int)arg5 fields:(id)arg6;
- (id)_initWithIdentifier:(id)arg1 name:(id)arg2 synopsis:(id)arg3 eventClass:(Class)arg4 version:(unsigned int)arg5 minSize:(unsigned int)arg6 maxSize:(unsigned int)arg7 fields:(id)arg8;

@end

__attribute__((visibility("hidden")))
@interface XREventIDProxyArray : NSArray
{
    XRStorageManager *_storageManager;
    XRManagedIDArray *_representedIDs;
    unsigned int _timeRangeStartIndex;
    unsigned int _timeRangeEndIndex;
    unsigned int *_sortedOrder;
    unsigned int _sortedCount;
    NSSortDescriptor *_descriptorInUse;
    BOOL _descending;
}

- (void)setSelectedTimeRange:(struct XRTimeRange)arg1;
- (void)_reverseOrdering;
- (void)sortUsingDescriptors:(id)arg1;
- (BOOL)_validSortedOrder;
- (void)_clearSortedOrder;
- (unsigned int)identifierAtIndex:(unsigned long long)arg1;
- (void)enumerateIdentifiersUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateEventsUsingBlock:(CDUnknownBlockType)arg1;
- (id)objectAtIndex:(unsigned long long)arg1;
- (unsigned long long)count;
- (id)mutableCopy;
- (void)dealloc;
- (id)initWithStorageManager:(id)arg1 eventIDs:(id)arg2;

@end

@interface XRFieldDescriptor : NSObject <NSCoding>
{
    NSString *_name;
    int _type;
    unsigned int _index;
    unsigned int _multi;
}

+ (int)fieldTypeForString:(id)arg1;
@property(readonly) NSString *name; // @synthesize name=_name;
@property(readonly) int type; // @synthesize type=_type;
- (void).cxx_destruct;
@property(readonly) unsigned int size;
@property(readonly) unsigned int maxMultiples;
@property(readonly) unsigned int identifierHandle;
@property(readonly) unsigned int handle;
@property(readonly) BOOL isMultiField;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithName:(id)arg1 index:(unsigned int)arg2 type:(int)arg3 multiples:(unsigned int)arg4;

@end

@interface XRIndexedStorage : NSObject
{
    struct vector<_XRStorageManagerDirectAddress, std::__1::allocator<_XRStorageManagerDirectAddress>> _recordsOnOrAfterThreshold;
    unsigned long long _threshold;
    XRIndexedStorage *_reusableSpecStore;
    XRIndexedStorage *_speculativeStore;
    id <XRAnalysisCoreRegistry> _registry;
    struct _XRStorageManagerExternalAccessPack _pack;
    XRAnalysisCoreTableSpec *_spec;
    XRAnalysisCoreTableSchema *_schema;
    XRStorageManager *_store;
    NSString *_subpath;
    XRAnalysisCorePathManager *_pathMan;
    NSHashTable *_knownRowArrays;
}

+ (id)storageWithSchema:(id)arg1 pathManager:(id)arg2 subpath:(id)arg3 spec:(id)arg4 registry:(id)arg5 sealed:(BOOL)arg6;
+ (id)storageFromPathManager:(id)arg1 subpath:(id)arg2 spec:(id)arg3 core:(id)arg4 registry:(id)arg5 errorResponder:(id)arg6;
@property(readonly, nonatomic) XRIndexedStorage *speculativeStore; // @synthesize speculativeStore=_speculativeStore;
@property(readonly, nonatomic) NSHashTable *knownRowArrays; // @synthesize knownRowArrays=_knownRowArrays;
@property(readonly, nonatomic) XRAnalysisCorePathManager *pathMan; // @synthesize pathMan=_pathMan;
@property(readonly, nonatomic) NSString *subpath; // @synthesize subpath=_subpath;
@property(readonly, nonatomic) XRStorageManager *store; // @synthesize store=_store;
@property(readonly, nonatomic) XRAnalysisCoreTableSchema *schema; // @synthesize schema=_schema;
@property(readonly, nonatomic) XRAnalysisCoreTableSpec *spec; // @synthesize spec=_spec;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)dealloc;
- (void)query:(id)arg1 tableID:(unsigned int)arg2 context:(id)arg3 handler:(id)arg4;
- (void)clearSpeculationStore;
- (void)clear;
- (id)speculativeStoreForWriting;
- (id)baseFileURL;
- (void)subpathChangeNotification:(id)arg1;
- (void)baseFileURLDidChange:(id)arg1;
- (void)baseFileURLWillChange:(id)arg1;
- (void)seal:(id)arg1;
- (BOOL)optimize;
- (id)initWithSchema:(id)arg1 pathManager:(id)arg2 subpath:(id)arg3 spec:(id)arg4 registry:(id)arg5 sealed:(BOOL)arg6;

@end

@interface XRIndexedStorageT50_C22 : XRIndexedStorage
{
    struct XRT50_C22_MPStrategy *_strat;
    struct XRSpatialIndexMP<XRT50_C22_MPStrategy> *_index;
    unsigned int _topologyHandle;
}

- (void)dealloc;
- (unique_ptr_71a643f6)createSeekableReadOnlyCursorForTableID:(unsigned int)arg1;
- (unsigned int)nextQueryWgCount;
- (void)executeQuery:(id)arg1 tableID:(unsigned int)arg2 context:(id)arg3 handler:(id)arg4 wgStart:(unsigned short)arg5 wgCount:(unsigned int)arg6 locals:(id)arg7;
- (void)remapToNewBaseFileURL:(id)arg1;
- (void)clear;
- (void)flushContentsToBaseFileURL;
- (BOOL)performIndexOptimize;
- (void)discardWriteCursor:(struct XRAnalysisCoreWriteCursor *)arg1;
- (struct XRAnalysisCoreWriteCursor *)writeCursor;
- (id)initWithSchema:(id)arg1 pathManager:(id)arg2 subpath:(id)arg3 spec:(id)arg4 registry:(id)arg5 sealed:(BOOL)arg6;

@end

@interface XRIndexedStorageTD50_CC22 : XRIndexedStorage
{
    struct _XRIndexedStorageBasic_MPStrategy<XRTD50_CC22_Strategy> *_strat;
    struct XRSpatialIndexMP<_XRIndexedStorageBasic_MPStrategy<XRTD50_CC22_Strategy>> *_index;
    unsigned int _topologyHandle;
}

- (void)dealloc;
- (unique_ptr_71a643f6)createSeekableReadOnlyCursorForTableID:(unsigned int)arg1;
- (unsigned int)nextQueryWgCount;
- (void)executeQuery:(id)arg1 tableID:(unsigned int)arg2 context:(id)arg3 handler:(id)arg4 wgStart:(unsigned short)arg5 wgCount:(unsigned int)arg6 locals:(id)arg7;
- (BOOL)performIndexOptimize;
- (void)remapToNewBaseFileURL:(id)arg1;
- (void)clear;
- (void)flushContentsToBaseFileURL;
- (void)discardWriteCursor:(struct XRAnalysisCoreWriteCursor *)arg1;
- (struct XRAnalysisCoreWriteCursor *)writeCursor;
- (id)initWithSchema:(id)arg1 pathManager:(id)arg2 subpath:(id)arg3 spec:(id)arg4 registry:(id)arg5 sealed:(BOOL)arg6;

@end

@interface XRManagedEvent : NSObject <NSCopying>
{
    int _managedRetainCount;
    unsigned int _identifier;
    XRStorageManager *_storageManager;
}

+ (void)configureDescriptor:(id)arg1 forStorageManager:(id)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)retainCount;
- (oneway void)release;
- (id)retain;
- (unsigned int)_managedRetainCount;
- (id)storageManager;
- (unsigned int)identifier;

@end

@interface XRManagedEventArrayController : NSArrayController
{
    XRStorageManager *_storageManager;
    XRManagedIDArray *_contentIDs;
    XREventIDProxyArray *_proxyArray;
    struct XRTimeRange _filterTimeRange;
    CDUnknownBlockType _filterBlock;
    CDUnknownBlockType _destructorBlock;
    XREventIDProxyArray *_idArrangedCache;
    NSTableView *_scrolledTable;
    NSArray *_tokens;
    CDUnknownBlockType *_tokenCompositions;
    unsigned int _compCount;
    BOOL _logicalOR;
    BOOL _discardIDSelection;
    CDUnknownBlockType _compositionDestructor;
}

@property(retain, nonatomic) XREventIDProxyArray *arrangedCache; // @synthesize arrangedCache=_idArrangedCache;
@property(retain, nonatomic) XRStorageManager *storageManager; // @synthesize storageManager=_storageManager;
- (void)applyCompositeFilter;
- (void)_appendDestructorBlock:(CDUnknownBlockType)arg1;
- (void)_addTest:(CDUnknownBlockType)arg1 toIndex:(unsigned long long)arg2;
- (void)addTestForToken:(id)arg1 test:(CDUnknownBlockType)arg2 destructor:(CDUnknownBlockType)arg3;
- (void)addGlobalTest:(CDUnknownBlockType)arg1 destructor:(CDUnknownBlockType)arg2;
- (void)setupCompositeFilterWithTokens:(id)arg1 requireAllTokensMatch:(BOOL)arg2;
- (void)selectEventWithIdentifier:(unsigned int)arg1;
- (void)selectEventNearestTimestamp:(unsigned long long)arg1;
- (void)setAutomaticSelectionScrollInTableView:(id)arg1;
- (void)setPreservesSelection:(BOOL)arg1;
- (void)setPreservesIDSelection:(BOOL)arg1;
- (void)enumerateArrangedEventsAtIndexes:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (unsigned int)identifierAtArrangedIndex:(unsigned long long)arg1;
- (unsigned long long)arrangedIndexOfIdentifier:(unsigned int)arg1;
- (CDUnknownBlockType)filterBlock;
- (void)setFilterBlock:(CDUnknownBlockType)arg1 destructor:(CDUnknownBlockType)arg2;
- (id)_kFilteredArray:(id)arg1;
- (void)setSelectedTimeRange:(struct XRTimeRange)arg1;
- (id)arrangeObjects:(id)arg1;
- (void)rearrangeObjects;
- (void)setFilterPredicate:(id)arg1;
- (void)setSortDescriptors:(id)arg1;
- (void)_doAndMaintainSelection:(CDUnknownBlockType)arg1;
- (void)_scrollToRow:(long long)arg1;
- (id)content;
- (id)contentIDs;
- (void)setContentIDs:(id)arg1;
- (void)_refreshProxyArray;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (id)initWithContent:(id)arg1;
- (id)init;

@end

@interface XRManagedIDArray : NSObject <NSCoding>
{
    struct vector<unsigned int, std::__1::allocator<unsigned int>> _myVector;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (void)enumerateIdentifiersWithBlock:(CDUnknownBlockType)arg1;
- (unsigned int)identifierAtIndex:(unsigned long long)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (void)encodeWithCoder:(id)arg1;
- (unsigned long long)lowerBound:(unsigned int)arg1;
- (unsigned long long)upperBound:(unsigned int)arg1;
- (unsigned long long)binarySearchReturnNearest:(BOOL)arg1 withComparator:(CDUnknownBlockType)arg2;
- (void)removeAllIdentifiers;
- (void)mergeIdentifiers:(id)arg1;
- (void)appendEventIdentifier:(unsigned int)arg1;
- (id)initWithIdentifiers:(unsigned int *)arg1 count:(unsigned long long)arg2;
- (id)init;

@end

@interface XRNumericSortDescriptor : NSSortDescriptor
{
    int _sortType;
    SEL _valueSelector;
    CDUnknownBlockType _sortBlock;
}

+ (id)descriptorWithKey:(id)arg1 ascending:(BOOL)arg2 block:(CDUnknownBlockType)arg3;
+ (id)descriptorWithKey:(id)arg1 ascending:(BOOL)arg2 type:(int)arg3;
- (void).cxx_destruct;
- (double)numericValueForObject:(id)arg1;
- (id)reversedSortDescriptor;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)_setSortType:(int)arg1;
- (id)initWithKey:(id)arg1 ascending:(BOOL)arg2 block:(CDUnknownBlockType)arg3;
- (id)initWithKey:(id)arg1 ascending:(BOOL)arg2 type:(int)arg3;

@end

@interface XROrderedStreamSynthesizer : NSObject
{
    struct _MergingCursor _mergeCursor;
    struct XRTimeRange _timeRange;
    XRIntKeyedDictionary *_knownStoresByTableID;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)executeWithBlock:(CDUnknownBlockType)arg1;
- (void)addTableID:(unsigned int)arg1 store:(id)arg2;
- (void)setActivity:(id)arg1;
- (id)initWithTimeRange:(struct XRTimeRange)arg1;

@end

@interface XRStorageManager : NSObject
{
    XREventDescriptor *_eventDescriptor;
    BOOL _readOnly;
    BOOL _storageCompleteSuccess;
    NSString *_filePath;
    BOOL _runEnded;
    BOOL _persist;
    struct XRStorageManagerLock _lock;
    struct _XRStorageManagerAccess _accessor;
}

@property(readonly, nonatomic) XREventDescriptor *eventDescriptor; // @synthesize eventDescriptor=_eventDescriptor;
@property(copy, nonatomic) NSString *filePath; // @synthesize filePath=_filePath;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)grantExternalReadWriteAccess:(struct _XRStorageManagerExternalAccessPack *)arg1;
- (void)grantExternalReadOnlyAccess:(struct _XRStorageManagerExternalAccessPack *)arg1;
- (void)writeAccessWithBlock:(CDUnknownBlockType)arg1;
- (void)readAccessWithBlock:(CDUnknownBlockType)arg1;
- (unsigned int)earliestEventIdentifierAfterTimestamp:(unsigned long long)arg1;
- (unsigned int)latestEventIdentifierBeforeTimestamp:(unsigned long long)arg1;
- (unsigned int)_binarySearchWithTimestamp:(unsigned long long)arg1 after:(BOOL)arg2;
- (unsigned int)lastEventIdentifier;
- (BOOL)identifierIsValid:(unsigned int)arg1;
- (void)enumerateEventsInList:(unsigned int *)arg1 count:(unsigned int)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)accessEventsFromIndentifer:(unsigned int)arg1 toIdentifier:(unsigned int)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)enumerateEventsFromIdentifier:(unsigned int)arg1 toIdentifier:(unsigned int)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (id)eventForIdentifier:(unsigned int)arg1;
- (void)destroyEventWithIdentifier:(unsigned int)arg1;
- (void)accessEvent:(unsigned int)arg1 actions:(CDUnknownBlockType)arg2;
- (void)mutateEvent:(unsigned int)arg1 actions:(CDUnknownBlockType)arg2;
- (unsigned int)storeEventWithActions:(CDUnknownBlockType)arg1;
- (BOOL)storageComplete;
- (void)flushMemory;
- (void)addInitReferencingFieldNames:(id)arg1 actions:(CDUnknownBlockType)arg2;
- (id)objectForSubstitutionIdentifier:(unsigned int)arg1;
- (unsigned int)substitutionIdentifierForObject:(id)arg1;
- (id)fieldWithName:(id)arg1;
- (id)persist;
- (void)remapAtFilePath:(id)arg1;
- (id)archiveProperties;
- (void)dealloc;
- (id)initWithFilePath:(id)arg1 descriptor:(id)arg2 options:(int)arg3;

@end

@interface XRValueTransformingSortDescriptor : NSSortDescriptor
{
    NSValueTransformer *_vt;
}

+ (id)descriptorWithKey:(id)arg1 ascending:(BOOL)arg2 comparator:(CDUnknownBlockType)arg3 valueTransformer:(id)arg4;
+ (id)descriptorWithKey:(id)arg1 ascending:(BOOL)arg2 selector:(SEL)arg3 valueTransformer:(id)arg4;
+ (id)descriptorWithKey:(id)arg1 ascending:(BOOL)arg2 valueTransformer:(id)arg3;
- (void).cxx_destruct;
- (id)valueForObject:(id)arg1;
- (id)reversedSortDescriptor;
- (void)_setValueTransformer:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithKey:(id)arg1 ascending:(BOOL)arg2 comparator:(CDUnknownBlockType)arg3 valueTransformer:(id)arg4;
- (id)initWithKey:(id)arg1 ascending:(BOOL)arg2 selector:(SEL)arg3 valueTransformer:(id)arg4;
- (id)initWithKey:(id)arg1 ascending:(BOOL)arg2 valueTransformer:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface _XRAnalysisCorePathEntry : NSObject
{
    NSString *_component;
}

@property(readonly, nonatomic) NSString *component; // @synthesize component=_component;
- (void).cxx_destruct;
- (id)initWithComponent:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _XRAnalysisCoreRowArrayQueryHandler : NSObject <XRAnalysisCoreQueryHandler>
{
    unsigned int _tableID;
    XRAnalysisCoreRowArray *_product;
}

@property(retain, nonatomic) XRAnalysisCoreRowArray *product; // @synthesize product=_product;
- (void).cxx_destruct;
- (void)reduceFromLocalResults:(id)arg1;
- (void)runWorkgroup:(unsigned short)arg1 of:(unsigned int)arg2 withLocalResults:(id)arg3 context:(id)arg4 rowIterator:(struct XRAnalysisCoreReadCursor *)arg5;
- (id)initWithTableID:(unsigned int)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _XRSortingTimeQueryHandler : NSObject <XRAnalysisCoreQueryHandler>
{
    unsigned char _timeColumnID;
    NSArray *_arrayOfSortedLocals;
}

- (void).cxx_destruct;
- (void)dealloc;
- (id)initWithTimeColumnID:(unsigned char)arg1;
- (void)releaseOwnershipOfSortedLocals:(CDUnknownBlockType)arg1;
- (void)reduceFromLocalResults:(id)arg1;
- (void)runWorkgroup:(unsigned short)arg1 of:(unsigned int)arg2 withLocalResults:(id)arg3 context:(id)arg4 rowIterator:(struct XRAnalysisCoreReadCursor *)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _XRWeakProxy : NSObject
{
    id _realObj;
}

+ (id)weakProxyForObject:(id)arg1;
- (void).cxx_destruct;
- (id)forwardingTargetForSelector:(SEL)arg1;

@end

