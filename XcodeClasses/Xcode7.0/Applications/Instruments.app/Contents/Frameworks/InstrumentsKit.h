//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CGAffineTransform {
    double a;
    double b;
    double c;
    double d;
    double tx;
    double ty;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct PriorityQueueEntry;

struct XRGraphPoint {
    unsigned long long _field1;
    float _field2;
    void *_field3;
};

struct XRPathAttribute {
    id _field1;
    id _field2;
    double _field3;
    double *_field4;
    double _field5;
    double _field6;
};

struct XRTimeRange {
    unsigned long long start;
    unsigned long long length;
};

struct _CSTypeRef {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct _opaque_pthread_mutex_t {
    long long __sig;
    char __opaque[56];
};

struct less<PriorityQueueEntry>;

struct priority_queue<PriorityQueueEntry, std::__1::vector<PriorityQueueEntry, std::__1::allocator<PriorityQueueEntry>>, std::__1::less<PriorityQueueEntry>> {
    struct vector<PriorityQueueEntry, std::__1::allocator<PriorityQueueEntry>> c;
    struct less<PriorityQueueEntry> comp;
};

struct set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>> {
    struct __tree<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>> {
        struct __tree_node<unsigned int, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<unsigned int, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
                struct __tree_node_base<void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<unsigned int>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct vector<PriorityQueueEntry, std::__1::allocator<PriorityQueueEntry>> {
    struct PriorityQueueEntry *__begin_;
    struct PriorityQueueEntry *__end_;
    struct __compressed_pair<PriorityQueueEntry *, std::__1::allocator<PriorityQueueEntry>> {
        struct PriorityQueueEntry *__first_;
    } __end_cap_;
};

#pragma mark Typedef'd Structures

typedef struct {
    int type;
    int subtype;
} CDStruct_3570f18b;

#pragma mark -

//
// File: /Applications/Xcode-7GM.app/Contents/Applications/Instruments.app/Contents/Frameworks/InstrumentsKit.framework/Versions/A/InstrumentsKit
// UUID: 1875F0F7-9BF1-3E81-934B-4F6C69009499
//
//                           Arch: x86_64
//                Current version: 58157.0.0
//          Compatibility version: 1.0.0
//                 Source version: 58157.0.0.0.0
//       Minimum Mac OS X version: 10.10.0
//                    SDK version: 10.11.0
//
// Objective-C Garbage Collection: Unsupported
//
//                       Run path: @loader_path/../../../
//                               = /Applications/Xcode-7GM.app/Contents/Applications/Instruments.app/Contents/Frameworks
//                       Run path: @loader_path/../../../../../../../SharedFrameworks
//                               = /Applications/Xcode-7GM.app/Contents/SharedFrameworks
//                       Run path: @loader_path/../../../../../../../OtherFrameworks
//                               = /Applications/Xcode-7GM.app/Contents/OtherFrameworks
//

@protocol CommonSymbol <NSCoding, NSObject>
- (NSString *)libraryPath;
- (NSString *)libraryName;
- (NSString *)symbolName;
- (int)pid;
- (unsigned long long)lineNumber;
- (NSString *)sourcePath;
- (unsigned long long)address;

@optional
- (PFTSymbolData *)resolvedSymbol;
@end

@protocol CommonTimeSample <NSCoding, NSObject>
- (id)extendedData;
- (id <CommonRawStack>)backtrace;
- (double)weight;
- (int)quantity;
- (unsigned long long)thread;
- (unsigned int)eventType;
- (unsigned long long)timestamp;

@optional
- (double)weightAtIndex:(unsigned int)arg1;
- (unsigned int)cpuIndex;
@end

@protocol DTTimelineGraphDelegate <NSObject>
- (void)inputHandlerForGraph:(DTTimelineGraph *)arg1 requestsHeight:(double)arg2 forPlane:(DTTimelinePlane *)arg3;
- (void)inputHandlerForGraph:(DTTimelineGraph *)arg1 requestsCollapsingGroupPlane:(DTTimelineGroupPlane *)arg2;
- (void)inputHandlerForGraph:(DTTimelineGraph *)arg1 requestsExpandingGroupPlane:(DTTimelineGroupPlane *)arg2;
- (void)inputHandlerRequestsToClearInspectionInfoForGraph:(DTTimelineGraph *)arg1;
- (void)inputHandlerForGraph:(DTTimelineGraph *)arg1 requestsDisplayInspectionInfoForNanosecond:(unsigned long long)arg2 atX:(double)arg3;
- (void)inputHandlerForGraph:(DTTimelineGraph *)arg1 requestsNanosecondsPerPoint:(unsigned long long)arg2;
- (void)inputHandlerRequestsToClearCurrentInspectionTimeForGraph:(DTTimelineGraph *)arg1;
- (void)inputHandlerForGraph:(DTTimelineGraph *)arg1 requestsCurrentInspectionTime:(unsigned long long)arg2;
- (void)inputHandlerRequestsToClearSelectedTimeRangeForGraph:(DTTimelineGraph *)arg1;
- (void)inputHandlerDidFinishSelectionForGraph:(DTTimelineGraph *)arg1;
- (void)inputHandlerForGraph:(DTTimelineGraph *)arg1 requestsSelectedTimeRange:(struct XRTimeRange)arg2;
- (void)inputHandlerForGraph:(DTTimelineGraph *)arg1 requestYOffset:(double)arg2;
- (void)inputHandlerForGraph:(DTTimelineGraph *)arg1 requestsNanosecondOffset:(long long)arg2;

@optional
- (void)inputHandlerForGraph:(DTTimelineGraph *)arg1 requestsEndLongPressDragAtTime:(unsigned long long)arg2;
- (void)inputHandlerForGraph:(DTTimelineGraph *)arg1 requestsLongPressDragToTime:(unsigned long long)arg2;
- (BOOL)inputHandlerForGraph:(DTTimelineGraph *)arg1 requestsLongPressDragBeginAtTime:(unsigned long long)arg2 onPlanes:(NSSet *)arg3;
- (void)inputHandlerForGraph:(DTTimelineGraph *)arg1 unhandledClickAtTime:(unsigned long long)arg2 onPlanes:(NSSet *)arg3;
@end

@protocol DVTChooserViewDelegate <NSObject>

@optional
- (void)chooserView:(DVTChooserView *)arg1 userDidDoubleClickChoice:(DVTChoice *)arg2;
- (void)chooserView:(DVTChooserView *)arg1 userDidSelectChoices:(NSArray *)arg2;
- (void)chooserView:(DVTChooserView *)arg1 userWillSelectChoices:(NSArray *)arg2;
@end

@protocol DVTCompletingTextViewDelegate <NSTextViewDelegate>

@optional
- (NSColor *)textView:(DVTCompletingTextView *)arg1 tokenTintColor:(NSColor *)arg2 forInlineTokenAttachmentCell:(DVTTextFoldInlineTokenAttachmentCell *)arg3;
- (long long)textView:(DVTCompletingTextView *)arg1 interiorBackgroundStyle:(long long)arg2 forInlineTokenAttachmentCell:(DVTTextFoldInlineTokenAttachmentCell *)arg3;
- (void)setupTextViewContextMenuWithMenu:(NSMenu *)arg1;
- (BOOL)completingTextViewHandleCancel:(DVTCompletingTextView *)arg1;
- (unsigned long long)textView:(DVTCompletingTextView *)arg1 lineEndingForWritingSelectionToPasteboard:(NSPasteboard *)arg2 type:(NSString *)arg3;
- (unsigned long long)textView:(DVTCompletingTextView *)arg1 lineEndingForReadingSelectionFromPasteboard:(NSPasteboard *)arg2 type:(NSString *)arg3;
- (void)textView:(DVTCompletingTextView *)arg1 layoutManager:(NSLayoutManager *)arg2 didLayoutGlyphsUpToCharacterIndex:(unsigned long long)arg3;
- (DVTTextDocumentLocation *)completingTextView:(DVTCompletingTextView *)arg1 documentLocationForWordStartLocation:(unsigned long long)arg2;
- (void)completingTextView:(DVTCompletingTextView *)arg1 willPassContextToStrategies:(NSMutableDictionary *)arg2 atWordStartLocation:(unsigned long long)arg3;
@end

@protocol DVTMessageBubbleAnnotationDelegate <DVTTextAnnotationDelegate>

@optional
- (void)didClickMessageBubbleForAnnotation:(DVTMessageBubbleAnnotation *)arg1 onIcon:(BOOL)arg2 inTextView:(DVTSourceTextView *)arg3 event:(NSEvent *)arg4;
@end

@protocol DVTOutlineViewDelegate <NSOutlineViewDelegate>

@optional
- (Class)outlineView:(DVTOutlineView *)arg1 groupRowCellClassForDataCell:(NSCell *)arg2;
- (NSFont *)outlineViewGroupRowFont:(DVTOutlineView *)arg1;
- (BOOL)outlineView:(DVTOutlineView *)arg1 shouldMouseHoverForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (void)outlineView:(DVTOutlineView *)arg1 concludeDragOperation:(id <NSDraggingInfo>)arg2;
- (unsigned long long)outlineView:(DVTOutlineView *)arg1 draggingSourceOperationMaskForLocal:(BOOL)arg2;
- (void)outlineView:(DVTOutlineView *)arg1 draggingDidEnd:(id <NSDraggingInfo>)arg2;
- (void)outlineView:(DVTOutlineView *)arg1 draggingDidUpdate:(id <NSDraggingInfo>)arg2;
- (void)outlineView:(DVTOutlineView *)arg1 draggingDidEnter:(id <NSDraggingInfo>)arg2;
- (BOOL)outlineView:(DVTOutlineView *)arg1 insertText:(NSString *)arg2;
- (BOOL)outlineView:(DVTOutlineView *)arg1 doCommandBySelector:(SEL)arg2;
@end

@protocol DVTSourceTextViewDelegate <DVTCompletingTextViewDelegate>

@optional
- (double)textView:(DVTSourceTextView *)arg1 constrainAccessoryAnnotationWidth:(double)arg2;
- (double)textView:(DVTSourceTextView *)arg1 constrainMaxAccessoryAnnotationWidth:(double)arg2;
- (double)textView:(DVTSourceTextView *)arg1 constrainMinAccessoryAnnotationWidth:(double)arg2;
- (NSString *)textViewWillReturnPrintJobTitle:(DVTSourceTextView *)arg1;
- (void)textViewDidScroll:(DVTSourceTextView *)arg1;
- (void)setupGutterContextMenuWithMenu:(NSMenu *)arg1;
- (void)didEndTokenizedEditingWithRanges:(DVTMutableRangeArray *)arg1;
- (void)willStartTokenizedEditingWithRanges:(DVTMutableRangeArray *)arg1;
- (void)tokenizableRangesWithRange:(struct _NSRange)arg1 completionBlock:(void (^)(NSArray *))arg2;
- (void)textViewDidFinishAnimatingScroll:(DVTSourceTextView *)arg1;
- (void)textViewDidLoadAnnotationProviders:(DVTSourceTextView *)arg1;
- (void)textView:(DVTSourceTextView *)arg1 didRemoveAnnotations:(NSArray *)arg2;
- (void)textView:(DVTSourceTextView *)arg1 didAddAnnotations:(NSArray *)arg2;
- (DVTAnnotationContext *)annotationContextForTextView:(DVTSourceTextView *)arg1;
- (NSDictionary *)syntaxColoringContextForTextView:(DVTSourceTextView *)arg1;
- (void)textViewDidChangeFolding:(NSNotification *)arg1;
- (void)textViewWillChangeFolding:(NSNotification *)arg1;
- (void)textView:(DVTSourceTextView *)arg1 didClickOnTemporaryLinkAtCharacterIndex:(unsigned long long)arg2 event:(NSEvent *)arg3 isAltEvent:(BOOL)arg4;
- (BOOL)textView:(DVTSourceTextView *)arg1 shouldShowTemporaryLinkForCharacterAtIndex:(unsigned long long)arg2 proposedRange:(struct _NSRange)arg3 effectiveRanges:(id *)arg4;
- (void)textView:(DVTSourceTextView *)arg1 handleMouseDidExitSidebar:(NSEvent *)arg2;
- (void)textView:(DVTSourceTextView *)arg1 handleMouseDidMoveOverSidebar:(NSEvent *)arg2 atLineNumber:(unsigned long long)arg3;
- (void)textView:(DVTSourceTextView *)arg1 handleMouseDownInSidebar:(NSEvent *)arg2 atLineNumber:(unsigned long long)arg3;
@end

@protocol DVTTextAnnotationDelegate <NSObject>

@optional
- (void)annotation:(DVTTextAnnotation *)arg1 willDrawInTextSidebarView:(DVTTextSidebarView *)arg2 withAnnotationsInSameLine:(NSSet *)arg3;
- (BOOL)annotation:(DVTTextAnnotation *)arg1 shouldDrawInTextSidebarView:(DVTTextSidebarView *)arg2 withAnnotationsInSameLine:(NSSet *)arg3;
- (double)sidebarMarkerOpacityForAnnotation:(DVTTextAnnotation *)arg1;
- (BOOL)shouldMoveCursorForAnnotation:(DVTTextAnnotation *)arg1;
- (NSArray *)contextMenuItemsForAnnotation:(DVTTextAnnotation *)arg1 inTextSidebarView:(DVTTextSidebarView *)arg2;
- (void)didRecognizeGestureInAnnotation:(DVTTextAnnotation *)arg1 inTextSidebarView:(DVTTextSidebarView *)arg2 recognizer:(NSGestureRecognizer *)arg3;
- (void)didDeleteOrReplaceParagraphForAnnotation:(DVTTextAnnotation *)arg1;
- (void)didRemoveAnnotation:(DVTAnnotation *)arg1;
- (void)didMoveAnnotation:(DVTAnnotation *)arg1;
- (unsigned long long)annotation:(DVTTextAnnotation *)arg1 willMoveToParagraphNumber:(unsigned long long)arg2;
- (void)didDragAnnotation:(DVTAnnotation *)arg1 inTextSidebarView:(DVTTextSidebarView *)arg2 event:(NSEvent *)arg3;
- (void)didEndRolloverOnAnnotation:(DVTAnnotation *)arg1 inTextSidebarView:(DVTTextSidebarView *)arg2 event:(NSEvent *)arg3;
- (void)didBeginRolloverOnAnnotation:(DVTAnnotation *)arg1 inTextSidebarView:(DVTTextSidebarView *)arg2 event:(NSEvent *)arg3;
- (void)didClickAnnotation:(DVTAnnotation *)arg1 inTextSidebarView:(DVTTextSidebarView *)arg2 event:(NSEvent *)arg3;
@end

@protocol DVTWindowActivationStateObserver <NSObject>
- (void)window:(NSWindow *)arg1 didChangeActivationState:(long long)arg2;
@end

@protocol NSAccessibilityElement <NSObject>
- (id)accessibilityParent;
- (struct CGRect)accessibilityFrame;

@optional
- (NSString *)accessibilityIdentifier;
- (BOOL)isAccessibilityFocused;
@end

@protocol NSAccessibilityGroup <NSAccessibilityElement>
@end

@protocol NSAccessibilityOutline <NSAccessibilityTable>
@end

@protocol NSAccessibilityRow <NSAccessibilityGroup>
- (long long)accessibilityIndex;

@optional
- (long long)accessibilityDisclosureLevel;
@end

@protocol NSAccessibilityTable <NSAccessibilityGroup>
- (NSArray *)accessibilityRows;
- (NSString *)accessibilityLabel;

@optional
- (NSArray *)accessibilityColumnHeaderUIElements;
- (NSArray *)accessibilityRowHeaderUIElements;
- (NSArray *)accessibilityVisibleCells;
- (NSArray *)accessibilitySelectedCells;
- (NSString *)accessibilityHeaderGroup;
- (NSArray *)accessibilitySelectedColumns;
- (NSArray *)accessibilityVisibleColumns;
- (NSArray *)accessibilityColumns;
- (NSArray *)accessibilityVisibleRows;
- (void)setAccessibilitySelectedRows:(NSArray *)arg1;
- (NSArray *)accessibilitySelectedRows;
@end

@protocol NSAnimationDelegate <NSObject>

@optional
- (void)animation:(NSAnimation *)arg1 didReachProgressMark:(float)arg2;
- (float)animation:(NSAnimation *)arg1 valueForProgress:(float)arg2;
- (void)animationDidEnd:(NSAnimation *)arg1;
- (void)animationDidStop:(NSAnimation *)arg1;
- (BOOL)animationShouldStart:(NSAnimation *)arg1;
@end

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSCollectionViewDelegate <NSObject>

@optional
- (NSCollectionViewTransitionLayout *)collectionView:(NSCollectionView *)arg1 transitionLayoutForOldLayout:(NSCollectionViewLayout *)arg2 newLayout:(NSCollectionViewLayout *)arg3;
- (void)collectionView:(NSCollectionView *)arg1 didEndDisplayingSupplementaryView:(NSView *)arg2 forElementOfKind:(NSString *)arg3 atIndexPath:(NSIndexPath *)arg4;
- (void)collectionView:(NSCollectionView *)arg1 didEndDisplayingItem:(NSCollectionViewItem *)arg2 forRepresentedObjectAtIndexPath:(NSIndexPath *)arg3;
- (void)collectionView:(NSCollectionView *)arg1 willDisplaySupplementaryView:(NSView *)arg2 forElementKind:(NSString *)arg3 atIndexPath:(NSIndexPath *)arg4;
- (void)collectionView:(NSCollectionView *)arg1 willDisplayItem:(NSCollectionViewItem *)arg2 forRepresentedObjectAtIndexPath:(NSIndexPath *)arg3;
- (void)collectionView:(NSCollectionView *)arg1 didDeselectItemsAtIndexPaths:(NSSet *)arg2;
- (void)collectionView:(NSCollectionView *)arg1 didSelectItemsAtIndexPaths:(NSSet *)arg2;
- (NSSet *)collectionView:(NSCollectionView *)arg1 shouldDeselectItemsAtIndexPaths:(NSSet *)arg2;
- (NSSet *)collectionView:(NSCollectionView *)arg1 shouldSelectItemsAtIndexPaths:(NSSet *)arg2;
- (void)collectionView:(NSCollectionView *)arg1 didChangeItemsAtIndexPaths:(NSSet *)arg2 toHighlightState:(long long)arg3;
- (NSSet *)collectionView:(NSCollectionView *)arg1 shouldChangeItemsAtIndexPaths:(NSSet *)arg2 toHighlightState:(long long)arg3;
- (void)collectionView:(NSCollectionView *)arg1 updateDraggingItemsForDrag:(id <NSDraggingInfo>)arg2;
- (void)collectionView:(NSCollectionView *)arg1 draggingSession:(NSDraggingSession *)arg2 endedAtPoint:(struct CGPoint)arg3 dragOperation:(unsigned long long)arg4;
- (void)collectionView:(NSCollectionView *)arg1 draggingSession:(NSDraggingSession *)arg2 willBeginAtPoint:(struct CGPoint)arg3 forItemsAtIndexes:(NSIndexSet *)arg4;
- (void)collectionView:(NSCollectionView *)arg1 draggingSession:(NSDraggingSession *)arg2 willBeginAtPoint:(struct CGPoint)arg3 forItemsAtIndexPaths:(NSSet *)arg4;
- (id <NSPasteboardWriting>)collectionView:(NSCollectionView *)arg1 pasteboardWriterForItemAtIndex:(unsigned long long)arg2;
- (id <NSPasteboardWriting>)collectionView:(NSCollectionView *)arg1 pasteboardWriterForItemAtIndexPath:(NSIndexPath *)arg2;
- (BOOL)collectionView:(NSCollectionView *)arg1 acceptDrop:(id <NSDraggingInfo>)arg2 index:(long long)arg3 dropOperation:(long long)arg4;
- (BOOL)collectionView:(NSCollectionView *)arg1 acceptDrop:(id <NSDraggingInfo>)arg2 indexPath:(NSIndexPath *)arg3 dropOperation:(long long)arg4;
- (unsigned long long)collectionView:(NSCollectionView *)arg1 validateDrop:(id <NSDraggingInfo>)arg2 proposedIndex:(long long *)arg3 dropOperation:(long long *)arg4;
- (unsigned long long)collectionView:(NSCollectionView *)arg1 validateDrop:(id <NSDraggingInfo>)arg2 proposedIndexPath:(id *)arg3 dropOperation:(long long *)arg4;
- (NSImage *)collectionView:(NSCollectionView *)arg1 draggingImageForItemsAtIndexes:(NSIndexSet *)arg2 withEvent:(NSEvent *)arg3 offset:(struct CGPoint *)arg4;
- (NSImage *)collectionView:(NSCollectionView *)arg1 draggingImageForItemsAtIndexPaths:(NSSet *)arg2 withEvent:(NSEvent *)arg3 offset:(struct CGPoint *)arg4;
- (NSArray *)collectionView:(NSCollectionView *)arg1 namesOfPromisedFilesDroppedAtDestination:(NSURL *)arg2 forDraggedItemsAtIndexes:(NSIndexSet *)arg3;
- (NSArray *)collectionView:(NSCollectionView *)arg1 namesOfPromisedFilesDroppedAtDestination:(NSURL *)arg2 forDraggedItemsAtIndexPaths:(NSSet *)arg3;
- (BOOL)collectionView:(NSCollectionView *)arg1 writeItemsAtIndexes:(NSIndexSet *)arg2 toPasteboard:(NSPasteboard *)arg3;
- (BOOL)collectionView:(NSCollectionView *)arg1 writeItemsAtIndexPaths:(NSSet *)arg2 toPasteboard:(NSPasteboard *)arg3;
- (BOOL)collectionView:(NSCollectionView *)arg1 canDragItemsAtIndexes:(NSIndexSet *)arg2 withEvent:(NSEvent *)arg3;
- (BOOL)collectionView:(NSCollectionView *)arg1 canDragItemsAtIndexPaths:(NSSet *)arg2 withEvent:(NSEvent *)arg3;
@end

@protocol NSComboBoxDataSource <NSObject>

@optional
- (NSString *)comboBox:(NSComboBox *)arg1 completedString:(NSString *)arg2;
- (unsigned long long)comboBox:(NSComboBox *)arg1 indexOfItemWithStringValue:(NSString *)arg2;
- (id)comboBox:(NSComboBox *)arg1 objectValueForItemAtIndex:(long long)arg2;
- (long long)numberOfItemsInComboBox:(NSComboBox *)arg1;
@end

@protocol NSComboBoxDelegate <NSTextFieldDelegate>

@optional
- (void)comboBoxSelectionIsChanging:(NSNotification *)arg1;
- (void)comboBoxSelectionDidChange:(NSNotification *)arg1;
- (void)comboBoxWillDismiss:(NSNotification *)arg1;
- (void)comboBoxWillPopUp:(NSNotification *)arg1;
@end

@protocol NSControlTextEditingDelegate <NSObject>

@optional
- (NSArray *)control:(NSControl *)arg1 textView:(NSTextView *)arg2 completions:(NSArray *)arg3 forPartialWordRange:(struct _NSRange)arg4 indexOfSelectedItem:(long long *)arg5;
- (BOOL)control:(NSControl *)arg1 textView:(NSTextView *)arg2 doCommandBySelector:(SEL)arg3;
- (BOOL)control:(NSControl *)arg1 isValidObject:(id)arg2;
- (void)control:(NSControl *)arg1 didFailToValidatePartialString:(NSString *)arg2 errorDescription:(NSString *)arg3;
- (BOOL)control:(NSControl *)arg1 didFailToFormatString:(NSString *)arg2 errorDescription:(NSString *)arg3;
- (BOOL)control:(NSControl *)arg1 textShouldEndEditing:(NSText *)arg2;
- (BOOL)control:(NSControl *)arg1 textShouldBeginEditing:(NSText *)arg2;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSDraggingDestination <NSObject>

@optional
- (void)updateDraggingItemsForDrag:(id <NSDraggingInfo>)arg1;
- (BOOL)wantsPeriodicDraggingUpdates;
- (void)draggingEnded:(id <NSDraggingInfo>)arg1;
- (void)concludeDragOperation:(id <NSDraggingInfo>)arg1;
- (BOOL)performDragOperation:(id <NSDraggingInfo>)arg1;
- (BOOL)prepareForDragOperation:(id <NSDraggingInfo>)arg1;
- (void)draggingExited:(id <NSDraggingInfo>)arg1;
- (unsigned long long)draggingUpdated:(id <NSDraggingInfo>)arg1;
- (unsigned long long)draggingEntered:(id <NSDraggingInfo>)arg1;
@end

@protocol NSMenuDelegate <NSObject>

@optional
- (struct CGRect)confinementRectForMenu:(NSMenu *)arg1 onScreen:(NSScreen *)arg2;
- (void)menu:(NSMenu *)arg1 willHighlightItem:(NSMenuItem *)arg2;
- (void)menuDidClose:(NSMenu *)arg1;
- (void)menuWillOpen:(NSMenu *)arg1;
- (BOOL)menuHasKeyEquivalent:(NSMenu *)arg1 forEvent:(NSEvent *)arg2 target:(id *)arg3 action:(SEL *)arg4;
- (BOOL)menu:(NSMenu *)arg1 updateItem:(NSMenuItem *)arg2 atIndex:(long long)arg3 shouldCancel:(BOOL)arg4;
- (long long)numberOfItemsInMenu:(NSMenu *)arg1;
- (void)menuNeedsUpdate:(NSMenu *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (BOOL)respondsToSelector:(SEL)arg1;
- (BOOL)conformsToProtocol:(Protocol *)arg1;
- (BOOL)isMemberOfClass:(Class)arg1;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (BOOL)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSOpenSavePanelDelegate <NSObject>

@optional
- (void)panelSelectionDidChange:(id)arg1;
- (void)panel:(id)arg1 willExpand:(BOOL)arg2;
- (NSString *)panel:(id)arg1 userEnteredFilename:(NSString *)arg2 confirmed:(BOOL)arg3;
- (void)panel:(id)arg1 didChangeToDirectoryURL:(NSURL *)arg2;
- (BOOL)panel:(id)arg1 validateURL:(NSURL *)arg2 error:(id *)arg3;
- (BOOL)panel:(id)arg1 shouldEnableURL:(NSURL *)arg2;
@end

@protocol NSOutlineViewDataSource <NSObject>

@optional
- (NSArray *)outlineView:(NSOutlineView *)arg1 namesOfPromisedFilesDroppedAtDestination:(NSURL *)arg2 forDraggedItems:(NSArray *)arg3;
- (BOOL)outlineView:(NSOutlineView *)arg1 acceptDrop:(id <NSDraggingInfo>)arg2 item:(id)arg3 childIndex:(long long)arg4;
- (unsigned long long)outlineView:(NSOutlineView *)arg1 validateDrop:(id <NSDraggingInfo>)arg2 proposedItem:(id)arg3 proposedChildIndex:(long long)arg4;
- (void)outlineView:(NSOutlineView *)arg1 updateDraggingItemsForDrag:(id <NSDraggingInfo>)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 writeItems:(NSArray *)arg2 toPasteboard:(NSPasteboard *)arg3;
- (void)outlineView:(NSOutlineView *)arg1 draggingSession:(NSDraggingSession *)arg2 endedAtPoint:(struct CGPoint)arg3 operation:(unsigned long long)arg4;
- (void)outlineView:(NSOutlineView *)arg1 draggingSession:(NSDraggingSession *)arg2 willBeginAtPoint:(struct CGPoint)arg3 forItems:(NSArray *)arg4;
- (id <NSPasteboardWriting>)outlineView:(NSOutlineView *)arg1 pasteboardWriterForItem:(id)arg2;
- (void)outlineView:(NSOutlineView *)arg1 sortDescriptorsDidChange:(NSArray *)arg2;
- (id)outlineView:(NSOutlineView *)arg1 persistentObjectForItem:(id)arg2;
- (id)outlineView:(NSOutlineView *)arg1 itemForPersistentObject:(id)arg2;
- (void)outlineView:(NSOutlineView *)arg1 setObjectValue:(id)arg2 forTableColumn:(NSTableColumn *)arg3 byItem:(id)arg4;
- (id)outlineView:(NSOutlineView *)arg1 objectValueForTableColumn:(NSTableColumn *)arg2 byItem:(id)arg3;
- (BOOL)outlineView:(NSOutlineView *)arg1 isItemExpandable:(id)arg2;
- (id)outlineView:(NSOutlineView *)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (long long)outlineView:(NSOutlineView *)arg1 numberOfChildrenOfItem:(id)arg2;
@end

@protocol NSOutlineViewDelegate <NSControlTextEditingDelegate>

@optional
- (void)outlineViewItemDidCollapse:(NSNotification *)arg1;
- (void)outlineViewItemWillCollapse:(NSNotification *)arg1;
- (void)outlineViewItemDidExpand:(NSNotification *)arg1;
- (void)outlineViewItemWillExpand:(NSNotification *)arg1;
- (void)outlineViewSelectionIsChanging:(NSNotification *)arg1;
- (void)outlineViewColumnDidResize:(NSNotification *)arg1;
- (void)outlineViewColumnDidMove:(NSNotification *)arg1;
- (void)outlineViewSelectionDidChange:(NSNotification *)arg1;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldShowOutlineCellForItem:(id)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldReorderColumn:(long long)arg2 toColumn:(long long)arg3;
- (double)outlineView:(NSOutlineView *)arg1 sizeToFitWidthOfColumn:(long long)arg2;
- (void)outlineView:(NSOutlineView *)arg1 willDisplayOutlineCell:(id)arg2 forTableColumn:(NSTableColumn *)arg3 item:(id)arg4;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldCollapseItem:(id)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldExpandItem:(id)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 isGroupItem:(id)arg2;
- (NSCell *)outlineView:(NSOutlineView *)arg1 dataCellForTableColumn:(NSTableColumn *)arg2 item:(id)arg3;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldTrackCell:(NSCell *)arg2 forTableColumn:(NSTableColumn *)arg3 item:(id)arg4;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldShowCellExpansionForTableColumn:(NSTableColumn *)arg2 item:(id)arg3;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldTypeSelectForEvent:(NSEvent *)arg2 withCurrentSearchString:(NSString *)arg3;
- (id)outlineView:(NSOutlineView *)arg1 nextTypeSelectMatchFromItem:(id)arg2 toItem:(id)arg3 forString:(NSString *)arg4;
- (NSString *)outlineView:(NSOutlineView *)arg1 typeSelectStringForTableColumn:(NSTableColumn *)arg2 item:(id)arg3;
- (double)outlineView:(NSOutlineView *)arg1 heightOfRowByItem:(id)arg2;
- (NSString *)outlineView:(NSOutlineView *)arg1 toolTipForCell:(NSCell *)arg2 rect:(struct CGRect *)arg3 tableColumn:(NSTableColumn *)arg4 item:(id)arg5 mouseLocation:(struct CGPoint)arg6;
- (void)outlineView:(NSOutlineView *)arg1 didDragTableColumn:(NSTableColumn *)arg2;
- (void)outlineView:(NSOutlineView *)arg1 didClickTableColumn:(NSTableColumn *)arg2;
- (void)outlineView:(NSOutlineView *)arg1 mouseDownInHeaderOfTableColumn:(NSTableColumn *)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldSelectTableColumn:(NSTableColumn *)arg2;
- (NSIndexSet *)outlineView:(NSOutlineView *)arg1 selectionIndexesForProposedSelection:(NSIndexSet *)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldSelectItem:(id)arg2;
- (BOOL)selectionShouldChangeInOutlineView:(NSOutlineView *)arg1;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldEditTableColumn:(NSTableColumn *)arg2 item:(id)arg3;
- (void)outlineView:(NSOutlineView *)arg1 willDisplayCell:(id)arg2 forTableColumn:(NSTableColumn *)arg3 item:(id)arg4;
- (void)outlineView:(NSOutlineView *)arg1 didRemoveRowView:(NSTableRowView *)arg2 forRow:(long long)arg3;
- (void)outlineView:(NSOutlineView *)arg1 didAddRowView:(NSTableRowView *)arg2 forRow:(long long)arg3;
- (NSTableRowView *)outlineView:(NSOutlineView *)arg1 rowViewForItem:(id)arg2;
- (NSView *)outlineView:(NSOutlineView *)arg1 viewForTableColumn:(NSTableColumn *)arg2 item:(id)arg3;
@end

@protocol NSPathCellDelegate <NSObject>

@optional
- (void)pathCell:(NSPathCell *)arg1 willPopUpMenu:(NSMenu *)arg2;
- (void)pathCell:(NSPathCell *)arg1 willDisplayOpenPanel:(NSOpenPanel *)arg2;
@end

@protocol NSPathControlDelegate <NSObject>

@optional
- (void)pathControl:(NSPathControl *)arg1 willPopUpMenu:(NSMenu *)arg2;
- (void)pathControl:(NSPathControl *)arg1 willDisplayOpenPanel:(NSOpenPanel *)arg2;
- (BOOL)pathControl:(NSPathControl *)arg1 acceptDrop:(id <NSDraggingInfo>)arg2;
- (unsigned long long)pathControl:(NSPathControl *)arg1 validateDrop:(id <NSDraggingInfo>)arg2;
- (BOOL)pathControl:(NSPathControl *)arg1 shouldDragPathComponentCell:(NSPathComponentCell *)arg2 withPasteboard:(NSPasteboard *)arg3;
- (BOOL)pathControl:(NSPathControl *)arg1 shouldDragItem:(NSPathControlItem *)arg2 withPasteboard:(NSPasteboard *)arg3;
@end

@protocol NSPopoverDelegate <NSObject>

@optional
- (void)popoverDidClose:(NSNotification *)arg1;
- (void)popoverWillClose:(NSNotification *)arg1;
- (void)popoverDidShow:(NSNotification *)arg1;
- (void)popoverWillShow:(NSNotification *)arg1;
- (NSWindow *)detachableWindowForPopover:(NSPopover *)arg1;
- (void)popoverDidDetach:(NSPopover *)arg1;
- (BOOL)popoverShouldDetach:(NSPopover *)arg1;
- (BOOL)popoverShouldClose:(NSPopover *)arg1;
@end

@protocol NSSecureCoding <NSCoding>
+ (BOOL)supportsSecureCoding;
@end

@protocol NSSplitViewDelegate <NSObject>

@optional
- (void)splitViewDidResizeSubviews:(NSNotification *)arg1;
- (void)splitViewWillResizeSubviews:(NSNotification *)arg1;
- (struct CGRect)splitView:(NSSplitView *)arg1 additionalEffectiveRectOfDividerAtIndex:(long long)arg2;
- (struct CGRect)splitView:(NSSplitView *)arg1 effectiveRect:(struct CGRect)arg2 forDrawnRect:(struct CGRect)arg3 ofDividerAtIndex:(long long)arg4;
- (BOOL)splitView:(NSSplitView *)arg1 shouldHideDividerAtIndex:(long long)arg2;
- (BOOL)splitView:(NSSplitView *)arg1 shouldAdjustSizeOfSubview:(NSView *)arg2;
- (void)splitView:(NSSplitView *)arg1 resizeSubviewsWithOldSize:(struct CGSize)arg2;
- (double)splitView:(NSSplitView *)arg1 constrainSplitPosition:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(NSSplitView *)arg1 constrainMaxCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(NSSplitView *)arg1 constrainMinCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (BOOL)splitView:(NSSplitView *)arg1 shouldCollapseSubview:(NSView *)arg2 forDoubleClickOnDividerAtIndex:(long long)arg3;
- (BOOL)splitView:(NSSplitView *)arg1 canCollapseSubview:(NSView *)arg2;
@end

@protocol NSTableViewDataSource <NSObject>

@optional
- (NSArray *)tableView:(NSTableView *)arg1 namesOfPromisedFilesDroppedAtDestination:(NSURL *)arg2 forDraggedRowsWithIndexes:(NSIndexSet *)arg3;
- (BOOL)tableView:(NSTableView *)arg1 acceptDrop:(id <NSDraggingInfo>)arg2 row:(long long)arg3 dropOperation:(unsigned long long)arg4;
- (unsigned long long)tableView:(NSTableView *)arg1 validateDrop:(id <NSDraggingInfo>)arg2 proposedRow:(long long)arg3 proposedDropOperation:(unsigned long long)arg4;
- (BOOL)tableView:(NSTableView *)arg1 writeRowsWithIndexes:(NSIndexSet *)arg2 toPasteboard:(NSPasteboard *)arg3;
- (void)tableView:(NSTableView *)arg1 updateDraggingItemsForDrag:(id <NSDraggingInfo>)arg2;
- (void)tableView:(NSTableView *)arg1 draggingSession:(NSDraggingSession *)arg2 endedAtPoint:(struct CGPoint)arg3 operation:(unsigned long long)arg4;
- (void)tableView:(NSTableView *)arg1 draggingSession:(NSDraggingSession *)arg2 willBeginAtPoint:(struct CGPoint)arg3 forRowIndexes:(NSIndexSet *)arg4;
- (id <NSPasteboardWriting>)tableView:(NSTableView *)arg1 pasteboardWriterForRow:(long long)arg2;
- (void)tableView:(NSTableView *)arg1 sortDescriptorsDidChange:(NSArray *)arg2;
- (void)tableView:(NSTableView *)arg1 setObjectValue:(id)arg2 forTableColumn:(NSTableColumn *)arg3 row:(long long)arg4;
- (id)tableView:(NSTableView *)arg1 objectValueForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(NSTableView *)arg1;
@end

@protocol NSTableViewDelegate <NSControlTextEditingDelegate>

@optional
- (void)tableViewSelectionIsChanging:(NSNotification *)arg1;
- (void)tableViewColumnDidResize:(NSNotification *)arg1;
- (void)tableViewColumnDidMove:(NSNotification *)arg1;
- (void)tableViewSelectionDidChange:(NSNotification *)arg1;
- (NSArray *)tableView:(NSTableView *)arg1 rowActionsForRow:(long long)arg2 edge:(long long)arg3;
- (BOOL)tableView:(NSTableView *)arg1 shouldReorderColumn:(long long)arg2 toColumn:(long long)arg3;
- (double)tableView:(NSTableView *)arg1 sizeToFitWidthOfColumn:(long long)arg2;
- (BOOL)tableView:(NSTableView *)arg1 isGroupRow:(long long)arg2;
- (BOOL)tableView:(NSTableView *)arg1 shouldTypeSelectForEvent:(NSEvent *)arg2 withCurrentSearchString:(NSString *)arg3;
- (long long)tableView:(NSTableView *)arg1 nextTypeSelectMatchFromRow:(long long)arg2 toRow:(long long)arg3 forString:(NSString *)arg4;
- (NSString *)tableView:(NSTableView *)arg1 typeSelectStringForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (double)tableView:(NSTableView *)arg1 heightOfRow:(long long)arg2;
- (void)tableView:(NSTableView *)arg1 didDragTableColumn:(NSTableColumn *)arg2;
- (void)tableView:(NSTableView *)arg1 didClickTableColumn:(NSTableColumn *)arg2;
- (void)tableView:(NSTableView *)arg1 mouseDownInHeaderOfTableColumn:(NSTableColumn *)arg2;
- (BOOL)tableView:(NSTableView *)arg1 shouldSelectTableColumn:(NSTableColumn *)arg2;
- (NSIndexSet *)tableView:(NSTableView *)arg1 selectionIndexesForProposedSelection:(NSIndexSet *)arg2;
- (BOOL)tableView:(NSTableView *)arg1 shouldSelectRow:(long long)arg2;
- (BOOL)selectionShouldChangeInTableView:(NSTableView *)arg1;
- (NSCell *)tableView:(NSTableView *)arg1 dataCellForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (BOOL)tableView:(NSTableView *)arg1 shouldTrackCell:(NSCell *)arg2 forTableColumn:(NSTableColumn *)arg3 row:(long long)arg4;
- (BOOL)tableView:(NSTableView *)arg1 shouldShowCellExpansionForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (NSString *)tableView:(NSTableView *)arg1 toolTipForCell:(NSCell *)arg2 rect:(struct CGRect *)arg3 tableColumn:(NSTableColumn *)arg4 row:(long long)arg5 mouseLocation:(struct CGPoint)arg6;
- (BOOL)tableView:(NSTableView *)arg1 shouldEditTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (void)tableView:(NSTableView *)arg1 willDisplayCell:(id)arg2 forTableColumn:(NSTableColumn *)arg3 row:(long long)arg4;
- (void)tableView:(NSTableView *)arg1 didRemoveRowView:(NSTableRowView *)arg2 forRow:(long long)arg3;
- (void)tableView:(NSTableView *)arg1 didAddRowView:(NSTableRowView *)arg2 forRow:(long long)arg3;
- (NSTableRowView *)tableView:(NSTableView *)arg1 rowViewForRow:(long long)arg2;
- (NSView *)tableView:(NSTableView *)arg1 viewForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
@end

@protocol NSTextDelegate <NSObject>

@optional
- (void)textDidChange:(NSNotification *)arg1;
- (void)textDidEndEditing:(NSNotification *)arg1;
- (void)textDidBeginEditing:(NSNotification *)arg1;
- (BOOL)textShouldEndEditing:(NSText *)arg1;
- (BOOL)textShouldBeginEditing:(NSText *)arg1;
@end

@protocol NSTextFieldDelegate <NSControlTextEditingDelegate>
@end

@protocol NSTextViewDelegate <NSTextDelegate>

@optional
- (void)textView:(NSTextView *)arg1 draggedCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3 event:(NSEvent *)arg4;
- (void)textView:(NSTextView *)arg1 doubleClickedOnCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3;
- (void)textView:(NSTextView *)arg1 clickedOnCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3;
- (BOOL)textView:(NSTextView *)arg1 clickedOnLink:(id)arg2;
- (NSUndoManager *)undoManagerForTextView:(NSTextView *)arg1;
- (NSSharingServicePicker *)textView:(NSTextView *)arg1 willShowSharingServicePicker:(NSSharingServicePicker *)arg2 forItems:(NSArray *)arg3;
- (NSURL *)textView:(NSTextView *)arg1 URLForContentsOfTextAttachment:(NSTextAttachment *)arg2 atIndex:(unsigned long long)arg3;
- (NSArray *)textView:(NSTextView *)arg1 didCheckTextInRange:(struct _NSRange)arg2 types:(unsigned long long)arg3 options:(NSDictionary *)arg4 results:(NSArray *)arg5 orthography:(NSOrthography *)arg6 wordCount:(long long)arg7;
- (NSDictionary *)textView:(NSTextView *)arg1 willCheckTextInRange:(struct _NSRange)arg2 options:(NSDictionary *)arg3 types:(unsigned long long *)arg4;
- (NSMenu *)textView:(NSTextView *)arg1 menu:(NSMenu *)arg2 forEvent:(NSEvent *)arg3 atIndex:(unsigned long long)arg4;
- (long long)textView:(NSTextView *)arg1 shouldSetSpellingState:(long long)arg2 range:(struct _NSRange)arg3;
- (BOOL)textView:(NSTextView *)arg1 doCommandBySelector:(SEL)arg2;
- (BOOL)textView:(NSTextView *)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementString:(NSString *)arg3;
- (NSArray *)textView:(NSTextView *)arg1 completions:(NSArray *)arg2 forPartialWordRange:(struct _NSRange)arg3 indexOfSelectedItem:(long long *)arg4;
- (NSString *)textView:(NSTextView *)arg1 willDisplayToolTip:(NSString *)arg2 forCharacterAtIndex:(unsigned long long)arg3;
- (void)textViewDidChangeTypingAttributes:(NSNotification *)arg1;
- (void)textViewDidChangeSelection:(NSNotification *)arg1;
- (NSDictionary *)textView:(NSTextView *)arg1 shouldChangeTypingAttributes:(NSDictionary *)arg2 toAttributes:(NSDictionary *)arg3;
- (BOOL)textView:(NSTextView *)arg1 shouldChangeTextInRanges:(NSArray *)arg2 replacementStrings:(NSArray *)arg3;
- (NSArray *)textView:(NSTextView *)arg1 willChangeSelectionFromCharacterRanges:(NSArray *)arg2 toCharacterRanges:(NSArray *)arg3;
- (struct _NSRange)textView:(NSTextView *)arg1 willChangeSelectionFromCharacterRange:(struct _NSRange)arg2 toCharacterRange:(struct _NSRange)arg3;
- (BOOL)textView:(NSTextView *)arg1 writeCell:(id <NSTextAttachmentCell>)arg2 atIndex:(unsigned long long)arg3 toPasteboard:(NSPasteboard *)arg4 type:(NSString *)arg5;
- (NSArray *)textView:(NSTextView *)arg1 writablePasteboardTypesForCell:(id <NSTextAttachmentCell>)arg2 atIndex:(unsigned long long)arg3;
- (void)textView:(NSTextView *)arg1 draggedCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3 event:(NSEvent *)arg4 atIndex:(unsigned long long)arg5;
- (void)textView:(NSTextView *)arg1 doubleClickedOnCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3 atIndex:(unsigned long long)arg4;
- (void)textView:(NSTextView *)arg1 clickedOnCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3 atIndex:(unsigned long long)arg4;
- (BOOL)textView:(NSTextView *)arg1 clickedOnLink:(id)arg2 atIndex:(unsigned long long)arg3;
@end

@protocol NSTokenFieldDelegate <NSTextFieldDelegate>

@optional
- (unsigned long long)tokenField:(NSTokenField *)arg1 styleForRepresentedObject:(id)arg2;
- (BOOL)tokenField:(NSTokenField *)arg1 hasMenuForRepresentedObject:(id)arg2;
- (NSMenu *)tokenField:(NSTokenField *)arg1 menuForRepresentedObject:(id)arg2;
- (NSArray *)tokenField:(NSTokenField *)arg1 readFromPasteboard:(NSPasteboard *)arg2;
- (BOOL)tokenField:(NSTokenField *)arg1 writeRepresentedObjects:(NSArray *)arg2 toPasteboard:(NSPasteboard *)arg3;
- (id)tokenField:(NSTokenField *)arg1 representedObjectForEditingString:(NSString *)arg2;
- (NSString *)tokenField:(NSTokenField *)arg1 editingStringForRepresentedObject:(id)arg2;
- (NSString *)tokenField:(NSTokenField *)arg1 displayStringForRepresentedObject:(id)arg2;
- (NSArray *)tokenField:(NSTokenField *)arg1 shouldAddObjects:(NSArray *)arg2 atIndex:(unsigned long long)arg3;
- (NSArray *)tokenField:(NSTokenField *)arg1 completionsForSubstring:(NSString *)arg2 indexOfToken:(long long)arg3 indexOfSelectedItem:(long long *)arg4;
@end

@protocol NSToolbarDelegate <NSObject>

@optional
- (void)toolbarDidRemoveItem:(NSNotification *)arg1;
- (void)toolbarWillAddItem:(NSNotification *)arg1;
- (NSArray *)toolbarSelectableItemIdentifiers:(NSToolbar *)arg1;
- (NSArray *)toolbarAllowedItemIdentifiers:(NSToolbar *)arg1;
- (NSArray *)toolbarDefaultItemIdentifiers:(NSToolbar *)arg1;
- (NSToolbarItem *)toolbar:(NSToolbar *)arg1 itemForItemIdentifier:(NSString *)arg2 willBeInsertedIntoToolbar:(BOOL)arg3;
@end

@protocol NSWindowDelegate <NSObject>

@optional
- (void)windowDidChangeOcclusionState:(NSNotification *)arg1;
- (void)windowDidExitVersionBrowser:(NSNotification *)arg1;
- (void)windowWillExitVersionBrowser:(NSNotification *)arg1;
- (void)windowDidEnterVersionBrowser:(NSNotification *)arg1;
- (void)windowWillEnterVersionBrowser:(NSNotification *)arg1;
- (void)windowDidExitFullScreen:(NSNotification *)arg1;
- (void)windowWillExitFullScreen:(NSNotification *)arg1;
- (void)windowDidEnterFullScreen:(NSNotification *)arg1;
- (void)windowWillEnterFullScreen:(NSNotification *)arg1;
- (void)windowDidEndLiveResize:(NSNotification *)arg1;
- (void)windowWillStartLiveResize:(NSNotification *)arg1;
- (void)windowDidEndSheet:(NSNotification *)arg1;
- (void)windowWillBeginSheet:(NSNotification *)arg1;
- (void)windowDidChangeBackingProperties:(NSNotification *)arg1;
- (void)windowDidChangeScreenProfile:(NSNotification *)arg1;
- (void)windowDidChangeScreen:(NSNotification *)arg1;
- (void)windowDidUpdate:(NSNotification *)arg1;
- (void)windowDidDeminiaturize:(NSNotification *)arg1;
- (void)windowDidMiniaturize:(NSNotification *)arg1;
- (void)windowWillMiniaturize:(NSNotification *)arg1;
- (void)windowWillClose:(NSNotification *)arg1;
- (void)windowDidResignMain:(NSNotification *)arg1;
- (void)windowDidBecomeMain:(NSNotification *)arg1;
- (void)windowDidResignKey:(NSNotification *)arg1;
- (void)windowDidBecomeKey:(NSNotification *)arg1;
- (void)windowDidMove:(NSNotification *)arg1;
- (void)windowWillMove:(NSNotification *)arg1;
- (void)windowDidExpose:(NSNotification *)arg1;
- (void)windowDidResize:(NSNotification *)arg1;
- (void)window:(NSWindow *)arg1 didDecodeRestorableState:(NSCoder *)arg2;
- (void)window:(NSWindow *)arg1 willEncodeRestorableState:(NSCoder *)arg2;
- (struct CGSize)window:(NSWindow *)arg1 willResizeForVersionBrowserWithMaxPreferredSize:(struct CGSize)arg2 maxAllowedSize:(struct CGSize)arg3;
- (void)windowDidFailToExitFullScreen:(NSWindow *)arg1;
- (void)window:(NSWindow *)arg1 startCustomAnimationToEnterFullScreenOnScreen:(NSScreen *)arg2 withDuration:(double)arg3;
- (NSArray *)customWindowsToEnterFullScreenForWindow:(NSWindow *)arg1 onScreen:(NSScreen *)arg2;
- (void)window:(NSWindow *)arg1 startCustomAnimationToExitFullScreenWithDuration:(double)arg2;
- (NSArray *)customWindowsToExitFullScreenForWindow:(NSWindow *)arg1;
- (void)windowDidFailToEnterFullScreen:(NSWindow *)arg1;
- (void)window:(NSWindow *)arg1 startCustomAnimationToEnterFullScreenWithDuration:(double)arg2;
- (NSArray *)customWindowsToEnterFullScreenForWindow:(NSWindow *)arg1;
- (unsigned long long)window:(NSWindow *)arg1 willUseFullScreenPresentationOptions:(unsigned long long)arg2;
- (struct CGSize)window:(NSWindow *)arg1 willUseFullScreenContentSize:(struct CGSize)arg2;
- (BOOL)window:(NSWindow *)arg1 shouldDragDocumentWithEvent:(NSEvent *)arg2 from:(struct CGPoint)arg3 withPasteboard:(NSPasteboard *)arg4;
- (BOOL)window:(NSWindow *)arg1 shouldPopUpDocumentPathMenu:(NSMenu *)arg2;
- (struct CGRect)window:(NSWindow *)arg1 willPositionSheet:(NSWindow *)arg2 usingRect:(struct CGRect)arg3;
- (NSUndoManager *)windowWillReturnUndoManager:(NSWindow *)arg1;
- (BOOL)windowShouldZoom:(NSWindow *)arg1 toFrame:(struct CGRect)arg2;
- (struct CGRect)windowWillUseStandardFrame:(NSWindow *)arg1 defaultFrame:(struct CGRect)arg2;
- (struct CGSize)windowWillResize:(NSWindow *)arg1 toSize:(struct CGSize)arg2;
- (id)windowWillReturnFieldEditor:(NSWindow *)arg1 toObject:(id)arg2;
- (BOOL)windowShouldClose:(id)arg1;
@end

@protocol NSWindowRestoration <NSObject>
+ (void)restoreWindowWithIdentifier:(NSString *)arg1 state:(NSCoder *)arg2 completionHandler:(void (^)(NSWindow *, NSError *))arg3;
@end

@protocol PFTDataViewDelegate <NSObject>

@optional
- (void)stopDisplayingMessageForDataView:(PFTDataView *)arg1;
- (void)dataView:(PFTDataView *)arg1 shouldDisplayMessage:(NSString *)arg2;
@end

@protocol PFTDetailViewAccessory <NSObject>
- (void)setMainView:(NSView *)arg1;
@end

@protocol PFTInstrumentClient <NSObject>
- (void)replaceType:(PFTInstrumentType *)arg1 withType:(PFTInstrumentType *)arg2;
- (void)refreshedInstrumentType:(PFTInstrumentType *)arg1;
- (void)newInstrumentType:(PFTInstrumentType *)arg1;
@end

@protocol PFTScalableView
- (struct CGSize)scale;
- (double)setVerticalPercentage:(double)arg1;
- (double)setHorizontalPercentage:(double)arg1;
@end

@protocol SymbolAwareRun <NSObject>
- (XRBacktraceRepository *)backtraceRepository;
@end

@protocol XRAccessiblePathCellDelegate <NSPathCellDelegate>

@optional
- (NSString *)pathCell:(NSPathCell *)arg1 accessibilityDescriptionForPathComponentCell:(NSPathComponentCell *)arg2 atIndex:(unsigned long long)arg3;
@end

@protocol XRAnalysisCoreCallTreeViewControllerDelegate <NSObject>

@optional
- (void)callTreeViewControllerDidUpdateContext:(XRAnalysisCoreCallTreeViewController *)arg1;
- (void)callTreeViewControllerWillUpdateContext:(XRAnalysisCoreCallTreeViewController *)arg1;
@end

@protocol XRAnalysisCoreProjectorFunction <NSObject>
- (id)extendFunctionWithScope:(unsigned long long)arg1;
- (unsigned short)outputEngineeringType;
- (BOOL)isValidForEngineeringType:(unsigned short)arg1;
- (NSString *)displayableFunctionName;
@end

@protocol XRAnalysisCoreQueryHandler <NSObject>
- (void)reduceFromLocalResults:(NSArray *)arg1;
- (void)runWorkgroup:(unsigned short)arg1 of:(unsigned int)arg2 withLocalResults:(NSMutableDictionary *)arg3 context:(id <XRAnalysisCoreQueryContext>)arg4 rowIterator:(struct XRAnalysisCoreReadCursor *)arg5;
@end

@protocol XRAnalysisCoreRollUpFunction <XRAnalysisCoreProjectorFunction>
- (void)rollUp:(const struct XRAnalysisCoreReadCursor *)arg1 to:(id *)arg2 core:(id <XRAnalysisCoreReadOnly>)arg3;

@optional
- (XRAnalysisCoreTableQuery *)queryForRolledUpValue:(XRAnalysisCoreValue *)arg1;
@end

@protocol XRAnalysisCoreSortDescriptor

@optional
- (void)sortDidFinish;
- (void)sortWillBegin;
@end

@protocol XRAnalysisCoreTableViewControllerDelegate <NSObject>

@optional
- (void)tableViewController:(XRAnalysisCoreTableViewController *)arg1 selectedAndEventAtTime:(unsigned long long)arg2;
@end

@protocol XRAnalysisCoreViewSubcontroller <XRContextContainer, XRFilteredDataSource>
- (void)eventHorizonAdvancedThroughRange:(struct XRTimeRange)arg1;
@end

@protocol XRBrushDataSource <NSObject>
- (unsigned long long)numberOfGraphsForRun:(XRRun *)arg1;
- (NSString *)graphStyleForRun:(XRRun *)arg1;

@optional
- (BOOL)hasBaselineForRun:(XRRun *)arg1;
- (NSString *)run:(XRRun *)arg1 provideBackgroundTextForInspectionTimeStamp:(unsigned long long)arg2;
- (unsigned long long)supportedGraphTypesForRun:(XRRun *)arg1;
- (BOOL)stackGraphsForRun:(XRRun *)arg1;
- (BOOL)run:(XRRun *)arg1 hasImagesForGraphAtIndex:(long long)arg2;
- (void)run:(XRRun *)arg1 userFocusedOnPoint:(struct XRGraphPoint *)arg2 forInspectionTimeStamp:(unsigned long long)arg3;
- (long long)run:(XRRun *)arg1 numberOfLabelsForPoint:(struct XRGraphPoint *)arg2 forInspectionTimeStamp:(unsigned long long)arg3 graphAtIndex:(long long)arg4;
- (void)run:(XRRun *)arg1 provideLabel:(id *)arg2 andLabelPosition:(struct XRGraphPoint *)arg3 forLabelIndex:(long long)arg4 forInspectionTimeStamp:(unsigned long long)arg5 graphAtIndex:(long long)arg6;
- (BOOL)run:(XRRun *)arg1 graphToCurrentTimeForGraphAtIndex:(long long)arg2;
- (NSString *)graphSummaryForRun:(XRRun *)arg1;
- (NSString *)run:(XRRun *)arg1 pathTypeForState:(unsigned long long)arg2 graphAtIndex:(long long)arg3;
- (struct XRPathAttribute)run:(XRRun *)arg1 attributeForState:(unsigned long long)arg2 graphAtIndex:(long long)arg3;
- (unsigned long long)run:(XRRun *)arg1 stateForPoint:(struct XRGraphPoint *)arg2 graphAtIndex:(long long)arg3;
- (id)run:(XRRun *)arg1 graphedDataKeypath:(id *)arg2;
- (NSString *)run:(XRRun *)arg1 labelForPoint:(struct XRGraphPoint *)arg2 graphAtIndex:(long long)arg3;
- (NSString *)run:(XRRun *)arg1 labelForGraphAtIndex:(long long)arg2;
- (NSImage *)run:(XRRun *)arg1 imageForPoint:(struct XRGraphPoint *)arg2 graphAtIndex:(long long)arg3;
- (NSColor *)run:(XRRun *)arg1 colorForPoint:(struct XRGraphPoint *)arg2 graphAtIndex:(long long)arg3;
- (NSColor *)run:(XRRun *)arg1 colorForGraphAtIndex:(long long)arg2;
- (void)run:(XRRun *)arg1 providePoints:(struct XRGraphPoint **)arg2 count:(long long *)arg3 forTimeRange:(struct XRTimeRange)arg4 minimumInterval:(unsigned long long)arg5 graphAtIndex:(long long)arg6;
- (void)run:(XRRun *)arg1 providePoints:(struct XRGraphPoint **)arg2 count:(long long *)arg3 graphSequence:(XRGraphSequence *)arg4 forTimeRange:(struct XRTimeRange)arg5 minimumInterval:(unsigned long long)arg6 graphAtIndex:(long long)arg7;
@end

@protocol XRCPUmanagerDelegateProtocol <NSObject>
- (void)updateActiveProcessorCoreCount;
@end

@protocol XRCallTreeComparable <NSObject>
- (BOOL)prepareCallTreeCompare;
@end

@protocol XRCallTreeDataSource <NSObject>
- (XRBacktraceAggregator *)backtracesForCategory:(NSString *)arg1 timeRange:(struct XRTimeRange)arg2 savedIndex:(unsigned long long *)arg3;

@optional
- (NSArray *)processCategoriesForPid:(int)arg1;
- (NSArray *)provideCategories;
@end

@protocol XRCommentObserver <NSObject>
- (void)commentsWereUpdated:(NSDictionary *)arg1 displayType:(int)arg2;
@end

@protocol XRContextContainer <NSObject>
- (NSView *)viewForContext:(XRContext *)arg1;
- (NSArray *)siblingsForContext:(XRContext *)arg1;
- (void)displayContext:(XRContext *)arg1;
- (XRContext *)contextRepresentation;

@optional
- (void)clearCurrentDataContext;
- (XRContext *)currentDataContext;
- (id <XRContextContainer>)contextContainerForUUID:(NSString *)arg1;
- (NSString *)uuid;
- (NSImage *)iconForContext:(XRContext *)arg1;
@end

@protocol XRDeviceObserver <NSObject>
- (void)handleDeviceNotification:(XRDevice *)arg1;
@end

@protocol XREditableEntity <NSObject>
- (BOOL)isDirty;
- (void)setIsDirty:(BOOL)arg1;
@end

@protocol XRExportDataProtocol
- (void)exportSelectedRunInFormat:(int)arg1 toPath:(NSString *)arg2;
@end

@protocol XRFileObserver <NSObject>
- (void)rescanPath:(NSString *)arg1;
@end

@protocol XRFilteredDataSource <NSObject>

@optional
- (NSString *)selectedSearchContext;
- (NSArray *)searchContexts;
- (void)filterDetailWithTokens:(NSArray *)arg1 context:(NSString *)arg2 matchesAny:(BOOL)arg3;
@end

@protocol XRImportDataProtocol
- (BOOL)importRun:(XRRun *)arg1 fromPaths:(NSArray *)arg2 error:(id *)arg3;
@end

@protocol XRInspectorDelegate <NSObject>
- (void)inspectorDidClose:(XRInspector *)arg1;
@end

@protocol XRInspectorSource <NSObject>
- (NSString *)documentUUID;
- (NSArray *)dataElementsForInspector:(id)arg1;
- (void)inspectorDismissed:(id)arg1;

@optional
- (XRInstrument *)instrument;
- (BOOL)willProvideConfigurationDataElementsForInspector:(id)arg1;
- (NSArray *)configurationDataElementsForInspector:(id)arg1;
@end

@protocol XRInstrumentViewController <NSObject, XRSourceCommentScopeProvider>
@property(retain, nonatomic) XRInstrumentStatus *status;
- (id <XRFilteredDataSource>)detailFilteredDataSource;
- (void)restoreDisplayStateFromTemplate:(NSDictionary *)arg1;
- (NSDictionary *)saveDisplayStateForTemplates;
- (NSArray *)currentExtendedDetailMetaUI;
- (NSArray *)currentDisplaySettingsDetailMetaUI;
- (NSArray *)currentRecordSettingsDetailMetaUI;
- (void)instrumentDidChangeSwitches;
- (void)currentBrushBecameStale;
- (void)didRecordDataInTimeRange:(struct XRTimeRange)arg1;
- (void)eventHorizonAdvancedThroughRange:(struct XRTimeRange)arg1;
- (void)requestDocumentInspectFlag:(XRTimeFlag *)arg1;
- (BOOL)requestDocumentSetInspectionTime:(unsigned long long)arg1;
- (void)documentDidUpdateBaseFilterForRunNumber:(long long)arg1;
- (void)documentSetInspectionTime:(unsigned long long)arg1;
- (struct XRTimeRange)documentsSelectedTimeRange;
- (void)instrumentChangedTableRequirements;
- (void)instrumentWillBecomeInvalid;
- (id <XRContextContainer>)detailContextContainer;
- (void)configureTrackOverlay:(XRTrackOverlay *)arg1;
- (void)configureTrack:(XRTrack *)arg1;
@end

@protocol XRLazyKVOResponder <NSObject>
- (void)handleLazyKVOUpdate:(XRLazyKVOAdapter *)arg1;
@end

@protocol XRPathCellAccessible <NSObject>
- (NSMenu *)trackingMenu;
- (void)handleClickInComponentCell:(NSPathComponentCell *)arg1 atPoint:(struct CGPoint)arg2 inRect:(struct CGRect)arg3 ofView:(NSView *)arg4 event:(NSEvent *)arg5;
@end

@protocol XRProcessTargetedObject <NSObject>
- (int)defaultTargetTypeForChooser;
- (XRDevice *)currentTargetDevice;
- (PFTProcess *)currentTargetProcess;
- (BOOL)supportsTargetType:(int)arg1;
- (void)setTargetsDevice:(XRDevice *)arg1;
- (void)setTargetsLaunchedProcess:(PFTProcess *)arg1;
- (void)setTargetsExistingProcess:(PFTProcess *)arg1;
- (void)setTargetsAllProcesses;
@end

@protocol XRSearchTarget
- (BOOL)searchBackward:(NSString *)arg1;
- (BOOL)searchForward:(NSString *)arg1 skipCurrent:(BOOL)arg2;
- (NSArray *)searchCategories;
@end

@protocol XRSearchTargetHelper
- (NSArray *)backtraceForVisibleRow:(unsigned long long)arg1;
@end

@protocol XRSourceCommentScopeProvider <NSObject>
- (void)refineSourceAnnotationQuery:(XRSourceAnnotationQuery *)arg1;
@end

@protocol XRTextViewDragDestination
- (BOOL)performDragOperation:(id <NSDraggingInfo>)arg1;
- (BOOL)prepareForDragOperation:(id <NSDraggingInfo>)arg1;
- (unsigned long long)dragging:(id <NSDraggingInfo>)arg1;
- (NSArray *)dragTypes;
@end

@protocol XRToolbarManager <NSObject, NSToolbarDelegate>
+ (id <XRToolbarManager>)toolbarManagerWithIdentifier:(NSString *)arg1 window:(NSWindow *)arg2 documentIdentifier:(NSString *)arg3;
@end

@protocol XRTopicBrowserViewDelegate <NSObject>
- (void)topicBrowserView:(XRTopicBrowserView *)arg1 filenameDropped:(NSString *)arg2;
@end

@protocol XRTopicInterfaceComponent <NSObject>
- (NSView *)view;
- (void)applyResult:(NSMutableDictionary *)arg1;
- (XRTopic *)subTopic;
- (void)setSubTopic:(XRTopic *)arg1;
- (id)initWithTopic:(XRTopic *)arg1;

@optional
- (int)topicViewer:(id <XRTopicViewer>)arg1 handleKeyDown:(id)arg2;
- (void)reloadData;
- (void)refresh;
@end

@protocol XRTopicViewer
- (void)setSelectedTopic:(XRTopic *)arg1;
- (XRTopic *)selectedTopic;
- (NSArray *)topics;
@end

@protocol XRUIModelChangeObserver
- (void)modelDidChange:(NSNotification *)arg1;
@end

@protocol XRUIStackFrame <NSCoding, NSObject>
- (long long)lineNumberForDisplay;
- (NSString *)pathForDisplay;
- (NSString *)symbolNameForUse;
- (NSString *)symbolNameForDisplay;
- (NSString *)libraryForDisplay;
@end

@interface DTISAReferenceGuideWindowController : NSWindowController <NSComboBoxDataSource, NSComboBoxDelegate, NSTableViewDataSource, NSTableViewDelegate>
{
    BOOL _updatingUI;
    BOOL _matchTextToComboBoxWhenEditingEnds;
    BOOL _addedPDFViewChangedNotification;
    PDFView *_pdfView;
    NSComboBox *_instructionComboBox;
    NSTextField *_pageNumberTextField;
    NSButton *_previousPageButton;
    NSButton *_nextPageButton;
    NSTableView *_mnemonicsTableView;
    NSButton *_previousMnemonicButton;
    NSButton *_nextMnemonicButton;
    CDStruct_3570f18b _cpudef;
    NSArray *_mnemonicsList;
    PDFDocument *_pdfDocument;
    NSDictionary *_instructionToPageMap;
    NSDictionary *_pageToInstructionMap;
    NSArray *_sortedInstructionList;
    NSArray *_sortedPageList;
}

@property(retain) NSArray *sortedPageList; // @synthesize sortedPageList=_sortedPageList;
@property(retain) NSArray *sortedInstructionList; // @synthesize sortedInstructionList=_sortedInstructionList;
@property(retain) NSDictionary *pageToInstructionMap; // @synthesize pageToInstructionMap=_pageToInstructionMap;
@property(retain) NSDictionary *instructionToPageMap; // @synthesize instructionToPageMap=_instructionToPageMap;
@property(retain) PDFDocument *pdfDocument; // @synthesize pdfDocument=_pdfDocument;
@property(copy) NSArray *mnemonicsList; // @synthesize mnemonicsList=_mnemonicsList;
@property CDStruct_3570f18b cpudef; // @synthesize cpudef=_cpudef;
@property __weak NSButton *nextMnemonicButton; // @synthesize nextMnemonicButton=_nextMnemonicButton;
@property __weak NSButton *previousMnemonicButton; // @synthesize previousMnemonicButton=_previousMnemonicButton;
@property __weak NSTableView *mnemonicsTableView; // @synthesize mnemonicsTableView=_mnemonicsTableView;
@property __weak NSButton *nextPageButton; // @synthesize nextPageButton=_nextPageButton;
@property __weak NSButton *previousPageButton; // @synthesize previousPageButton=_previousPageButton;
@property __weak NSTextField *pageNumberTextField; // @synthesize pageNumberTextField=_pageNumberTextField;
@property __weak NSComboBox *instructionComboBox; // @synthesize instructionComboBox=_instructionComboBox;
@property __weak PDFView *pdfView; // @synthesize pdfView=_pdfView;
- (void).cxx_destruct;
- (void)_matchPDFToComboBox;
- (unsigned long long)_pageIndexForInstruction:(id)arg1;
- (id)_bestInstructionForPageIndex:(unsigned long long)arg1 currentlySelectedInstruction:(id)arg2;
- (id)_bestInstructionsForPageIndex:(unsigned long long)arg1;
- (void)_setTableViewToInstruction:(id)arg1;
- (void)_setComboBoxToInstruction:(id)arg1;
- (id)_fileNameForCPUType:(int)arg1;
- (id)_URLForCPUResourceType:(id)arg1;
- (id)_pageToInstructionMapURL;
- (id)_instructionToPageMapURL;
- (id)_pdfURL;
- (void)_updateUI;
- (void)_reloadData;
- (void)selectNextMnemonic:(id)arg1;
- (void)selectPreviousMnemonic:(id)arg1;
- (void)showCopyright:(id)arg1;
- (void)nextPage:(id)arg1;
- (void)prevPage:(id)arg1;
- (void)tableViewSelectionDidChange:(id)arg1;
- (id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)controlTextDidEndEditing:(id)arg1;
- (void)controlTextDidChange:(id)arg1;
- (void)comboBoxSelectionDidChange:(id)arg1;
- (unsigned long long)comboBox:(id)arg1 indexOfItemWithStringValue:(id)arg2;
- (id)comboBox:(id)arg1 completedString:(id)arg2;
- (id)comboBox:(id)arg1 objectValueForItemAtIndex:(long long)arg2;
- (long long)numberOfItemsInComboBox:(id)arg1;
- (void)updateCPUDef:(CDStruct_3570f18b)arg1 mnemonicsList:(id)arg2;
- (void)windowDidLoad;
- (void)dealloc;
- (id)initWithCPUDef:(CDStruct_3570f18b)arg1 mnemonicsList:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface NSPathCell (xray_Accessibility)
- (id)xray_accessibilityPopUpMenuParent:(id)arg1;
- (id)xray_accessibilityChildMenuForChild:(id)arg1;
- (void)xray_accessibilityPerformPressForChild:(id)arg1;
- (id)xray_accessibilitySizeOfChild:(id)arg1;
- (id)xray_accessibilityPositionOfChild:(id)arg1;
- (struct CGRect)xray_accessibilityScreenRectForPathComponent:(id)arg1;
- (id)accessibilityActionNames;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)xray_accessibilityObjectForComponentCell:(id)arg1 atIndex:(unsigned long long)arg2;
@end

@interface NSTextView (SimpleEditing)
- (void)pft_applySimpleEditorSettings;
@end

@interface NSView (PrivateXraySortMethods)
- (void)xray_unbindEnabledToObject:(id)arg1 withKeyPath:(id)arg2 options:(id)arg3;
- (void)xray_bindEnabledToObject:(id)arg1 withKeyPath:(id)arg2 options:(id)arg3;
- (long long)xray_horizontalCompare:(id)arg1;
@end

@interface NSWindow (XrayPrivateAPI)
- (void)centerOnScreen;
@end

@interface PFTClearSearchButtonCell : NSButtonCell
{
}

- (void)_fillBackground:(struct CGRect)arg1 withAlternateColor:(BOOL)arg2;
- (void)drawBezelWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (BOOL)isOpaque;

@end

@interface PFTDataView : NSStackView
{
    PFTDataElementList *_model;
    BOOL _dataViewCanResize;
    int _style;
    NSColor *_backgroundColor;
    id <PFTDataViewDelegate> _dataViewDelegate;
}

@property(nonatomic) __weak id <PFTDataViewDelegate> dataViewDelegate; // @synthesize dataViewDelegate=_dataViewDelegate;
- (void).cxx_destruct;
- (unsigned long long)selectedRow;
- (id)backgroundColor;
- (void)setBackgroundColor:(id)arg1;
- (int)style;
- (void)setStyle:(int)arg1;
- (void)viewDidMoveToWindow;
- (void)viewDidMoveToSuperview;
- (BOOL)isFlipped;
- (BOOL)isOpaque;
- (void)focusOnElement:(id)arg1;
- (void)reloadData;
- (void)_elementsUpdated:(id)arg1;
- (void)_elementsCleared:(id)arg1;
- (void)_elementRemoved:(id)arg1;
- (void)_elementAdded:(id)arg1;
- (id)model;
- (void)setModel:(id)arg1;
- (void)dealloc;

@end

@interface PFTDataViewer : NSView <DVTChooserViewDelegate, PFTDataViewDelegate>
{
    DVTChooserView *_chooserView;
    BOOL _isSetup;
    PFTDataElementList *_instrumentSetupModel;
    PFTDataElementList *_instrumentInspectorModel;
    PFTDataElementList *_eventInspectorModel;
    NSMapTable *_placeholderMessageForDataViewMapTable;
    PFTDataView *_instrumentSetupDataView;
    PFTDataView *_instrumentInspectorDataView;
    PFTDataView *_eventInspectorDataView;
    NSTextField *_placeholderLabel;
    NSTabView *_tabView;
}

@property __weak NSTabView *tabView; // @synthesize tabView=_tabView;
@property(retain, nonatomic) NSTextField *placeholderLabel; // @synthesize placeholderLabel=_placeholderLabel;
@property __weak PFTDataView *eventInspectorDataView; // @synthesize eventInspectorDataView=_eventInspectorDataView;
@property __weak PFTDataView *instrumentInspectorDataView; // @synthesize instrumentInspectorDataView=_instrumentInspectorDataView;
@property __weak PFTDataView *instrumentSetupDataView; // @synthesize instrumentSetupDataView=_instrumentSetupDataView;
- (void).cxx_destruct;
- (void)stopDisplayingMessageForDataView:(id)arg1;
- (void)dataView:(id)arg1 shouldDisplayMessage:(id)arg2;
- (void)_reload;
- (void)chooserView:(id)arg1 userDidSelectChoices:(id)arg2;
- (void)viewWillMoveToSuperview:(id)arg1;
- (void)showEventInspectorDataView;
- (void)showInstrumentInspectorDataView;
- (void)showInstrumentSetupDataView;
- (void)_showDataViewAtIndex:(unsigned long long)arg1;
@property(retain) PFTDataElementList *eventInspectorModel; // @synthesize eventInspectorModel=_eventInspectorModel;
@property(retain) PFTDataElementList *instrumentInspectorModel; // @synthesize instrumentInspectorModel=_instrumentInspectorModel;
@property(retain) PFTDataElementList *instrumentSetupModel; // @synthesize instrumentSetupModel=_instrumentSetupModel;
- (BOOL)isOpaque;
- (void)dealloc;
- (void)awakeFromNib;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PFTDetailTypeHostView : NSView <NSTokenFieldDelegate>
{
    PFTSlider *_hSlider;
    NSTextField *_searchField;
    NSView *_contentView;
    XRSearchBarViewController *_findViewController;
    PFTSelectedInstrumentList *_model;
    BOOL _scrollViewRequired;
    BOOL _ignoreSubviewRemove;
    NSMapTable *_accessoryViewsByInstrumentByKey;
    NSMapTable *_shownAccessoryViewsByInstrument;
}

- (void).cxx_destruct;
- (void)willRemoveSubview:(id)arg1;
- (void)hideAccessoryViewWithKey:(id)arg1;
- (void)_hideView:(id)arg1 removeFromSuperview:(BOOL)arg2;
- (id)showAccessoryViewWithKey:(id)arg1;
- (void)addAccessoryView:(id)arg1 withKey:(id)arg2 forInstrument:(id)arg3;
- (void)addAccessoryView:(id)arg1 withKey:(id)arg2 forInstrument:(id)arg3 asHidden:(BOOL)arg4;
- (id)_accessoryViewWithKey:(id)arg1;
- (id)_shownAccessoryViews;
- (id)_instrument;
- (void)_instrumentChangedSearchView:(id)arg1;
- (void)findPanelAction:(id)arg1;
- (void)setModel:(id)arg1;
- (id)model;
- (id)targetView;
- (id)_innerTargetView;
- (id)tokenField:(id)arg1 shouldUseDrawingAttributes:(id)arg2 forRepresentedObject:(id)arg3;
- (id)tokenField:(id)arg1 displayStringForRepresentedObject:(id)arg2;
- (id)contentView;
- (void)setContentView:(id)arg1;
- (void)updateLayer;
- (BOOL)wantsLayer;
- (BOOL)isOpaque;
- (void)layout;
- (void)viewDidMoveToWindow;
- (void)updateInstrument:(id)arg1 withDetailView:(id)arg2;
- (void)updateDetailViewWithInstrument:(id)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PFTDocumentController : NSDocumentController
{
    XRDockMenuViewController *_dockMenuController;
    XRFlagViewer *_flagViewer;
    NSWindow *_flagWindow;
    XRTemplateChooserWindowController *_templateChooser;
    XRInstrumentMenuController *_instrumentMenuController;
}

+ (id)importData:(id)arg1 error:(id *)arg2;
+ (BOOL)loadDTPSFile:(id)arg1 dataFile:(id)arg2 msgQFile:(id)arg3 doc:(id)arg4 instrumentIdentifier:(id)arg5 error:(id *)arg6;
- (void).cxx_destruct;
- (void)showCustomAboutBox:(id)arg1;
- (id)openDocumentWithContentsOfURL:(id)arg1 display:(BOOL)arg2 error:(id *)arg3;
- (id)_watchDeviceForCompanionDeviceIdentifier:(id)arg1;
- (id)makeUntitledDocumentOfType:(id)arg1 error:(id *)arg2;
- (void)changeDocuments:(id)arg1;
- (void)disconnectDocumentFromFlagViewer:(id)arg1;
- (void)removeTemplateChooser:(id)arg1;
- (BOOL)showTemplateChooser;
@property(nonatomic) NSMenu *instrumentMenu;
- (void)dealloc;
- (id)init;

@end

@interface PFTLegacySearchTokenTextField : NSTokenField <NSTokenFieldDelegate>
{
    NSMenuItem *_selectedMenuItem;
    NSButton *_buttonWithMenu;
    NSButton *_clearSearchControl;
    BOOL _matchesAny;
    NSCharacterSet *_invalidCharacters;
    id <XRFilteredDataSource> _filterTarget;
}

+ (void)initialize;
@property(nonatomic) __weak id <XRFilteredDataSource> filterTarget; // @synthesize filterTarget=_filterTarget;
- (void).cxx_destruct;
- (id)tokenField:(id)arg1 shouldUseDrawingAttributes:(id)arg2 forRepresentedObject:(id)arg3;
- (void)setObjectValue:(id)arg1;
- (id)tokenField:(id)arg1 displayStringForRepresentedObject:(id)arg2;
- (void)_clearSearchField:(id)arg1;
- (void)_searchFieldChanged:(id)arg1;
- (void)_handleSearchFieldChanged;
- (void)_updateInstrumentForSearchFieldChanges;
- (void)viewDidMoveToWindow;
- (void)passFilterToTarget;
- (BOOL)textView:(id)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementString:(id)arg3;
- (void)searchMenuSelect:(id)arg1;
- (void)updateMenuAndFilterTarget;
- (void)resetCursorRects;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)awakeFromNib;
- (void)_setup;
- (void)_buttonWithMenuClicked:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PFTLegacySearchTokenTextFieldCell : NSTokenFieldCell
{
}

- (struct CGRect)drawingRectForBounds:(struct CGRect)arg1;

@end

@interface PFTMultiStateButtonCell : NSCell
{
    BOOL _switchPressed;
    struct CGRect _currentCellBoundsDuringGesture;
    id _target;
    SEL _action;
}

+ (BOOL)prefersTrackingUntilMouseUp;
- (void).cxx_destruct;
- (SEL)action;
- (void)setAction:(SEL)arg1;
- (id)target;
- (void)setTarget:(id)arg1;
- (BOOL)continueTracking:(struct CGPoint)arg1 at:(struct CGPoint)arg2 inView:(id)arg3;
- (void)stopTracking:(struct CGPoint)arg1 at:(struct CGPoint)arg2 inView:(id)arg3 mouseIsUp:(BOOL)arg4;
- (BOOL)startTrackingAt:(struct CGPoint)arg1 inView:(id)arg2;
- (BOOL)trackMouse:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3 untilMouseUp:(BOOL)arg4;
- (BOOL)shouldTrackMouse:(struct CGPoint)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3 untilMouseUp:(BOOL)arg4;

@end

@interface PFTPanel : NSPanel
{
}

- (BOOL)makeFirstResponder:(id)arg1;
- (void)becomeKeyWindow;
- (void)resignKeyWindow;

@end

@interface PFTPathCell : NSPathCell <XRPathCellAccessible>
{
}

+ (Class)pathComponentCellClass;
- (id)trackingMenu;
- (void)handleClickInComponentCell:(id)arg1 atPoint:(struct CGPoint)arg2 inRect:(struct CGRect)arg3 ofView:(id)arg4 event:(id)arg5;
- (BOOL)_showMenuForComponentCell:(id)arg1 inRect:(struct CGRect)arg2;
- (BOOL)trackMouse:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3 untilMouseUp:(BOOL)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PFTPathComponentCell : NSPathComponentCell
{
    double _fixedWidth;
}

@property double fixedWidth; // @synthesize fixedWidth=_fixedWidth;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (struct CGSize)_iconSize;
- (struct CGSize)cellSizeForBounds:(struct CGRect)arg1;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)_drawNavigationBarBackgroundWithFrame:(struct CGRect)arg1 inView:(id)arg2;

@end

@interface PFTPathControl : NSPathControl
{
    BOOL _drawLeftFlatCap;
}

+ (Class)cellClass;
@property BOOL drawLeftFlatCap; // @synthesize drawLeftFlatCap=_drawLeftFlatCap;
- (BOOL)becomeFirstResponder;
- (BOOL)acceptsFirstResponder;
- (void)awakeFromNib;
- (BOOL)isFlipped;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface PFTScrollView : NSScrollView
{
    NSScrollView *_scrollSibling;
    BOOL _scrollingPeer;
    BOOL _ignoreScrollWheelEvents;
    double _minHeight;
    NSView *_horizontalScrollerViewToAvoid;
}

- (void).cxx_destruct;
- (void)viewDidMoveToWindow;
- (void)awakeFromNib;
- (void)_doScroller:(id)arg1 hitPart:(long long)arg2 multiplier:(double)arg3;
- (double)_repeatMultiplier:(double)arg1;
- (void)scrollWheel:(id)arg1;
- (BOOL)ignoreScrollWheelEvents;
- (void)setIgnoreScrollWheelEvents:(BOOL)arg1;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)setMinHight:(double)arg1;
- (void)tile;
- (void)reflectScrolledClipView:(id)arg1;
- (BOOL)_ownsWindowGrowBox;

@end

@interface PFTScroller : NSScroller
{
    BOOL _isZoomable;
    BOOL _debugModeEnabled;
    BOOL _firstClick;
    int _zoomControl;
    struct CGSize _trailingImageSize;
    struct CGSize _leadingImageSize;
    struct CGPoint _lastLocationInKnobRect;
    double _hitInset;
    BOOL _isSetupForDualControl;
    NSView *_primary;
    BOOL _ownsPrimaryView;
    NSView *_secondary;
    BOOL _isRespondingToScroll;
}

- (void).cxx_destruct;
- (void)_doScrollerPFT:(id)arg1;
- (void)setPrimary:(id)arg1;
- (BOOL)isPinnedAtExtremePoint;
- (void)mouseDragged:(id)arg1;
- (void)trackKnob:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)mouseUp:(id)arg1;
- (void)_setDebugModeOn:(BOOL)arg1;
- (void)resetScrollToRight;
- (void)setKnobProportion:(double)arg1;
- (void)setDoubleValue:(double)arg1;
- (void)setDoubleValue:(double)arg1 knobProportion:(double)arg2;
- (void)_secondaryFrameScrolled:(id)arg1;
- (void)_primaryFrameScrolled:(id)arg1;
- (void)_secondaryFrameChanged:(id)arg1;
- (void)_primaryFrameChanged:(id)arg1;
- (void)viewDidMoveToWindow;
- (void)_setupDualViewControl;
- (BOOL)isZoomable;
- (void)setIsZoomable:(BOOL)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface PFTSelectedEventDataElementList : PFTDataElementList
{
    PFTTraceDocument *_traceDocument;
}

- (void).cxx_destruct;
- (id)traceDocument;
- (void)setTraceDocument:(id)arg1;
- (void)_instrumentUnselected:(id)arg1;
- (void)dealloc;

@end

@interface PFTSelectedInstrumentDataElementList : PFTDataElementList
{
    PFTSelectedInstrumentList *_selectedInstrumentList;
    PFTTraceDocument *_traceDocument;
}

- (void).cxx_destruct;
- (id)traceDocument;
- (void)setTraceDocument:(id)arg1;
- (void)_instrumentUnselected:(id)arg1;
- (void)_instrumentUpdated:(id)arg1;
- (void)_instrumentSelected:(id)arg1;
- (id)selectedInstrumentList;
- (void)setSelectedInstrumentList:(id)arg1;
- (void)dealloc;

@end

@interface PFTSelectedInstrumentList : PFTInstrumentList
{
}

- (void)endCommand:(id)arg1;
- (void)startCommand:(id)arg1;
- (BOOL)acceptCommand:(id)arg1;
- (double)tableView:(id)arg1 heightOfRow:(long long)arg2;
- (void)_instrumentUnselected:(id)arg1;
- (void)_instrumentSelected:(id)arg1;
- (BOOL)isInstrumentOwner:(id)arg1;
- (void)dealloc;
- (id)initAndObserve:(BOOL)arg1;

@end

@interface PFTSliderBackdropView : NSScroller
{
    int _type;
}

- (int)backdropType;
- (void)setBackdropType:(int)arg1;
- (void)xxxdrawRect:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface PFTSpinMonitor : NSObject
{
}

+ (id)spinningProcesses;
+ (BOOL)isProcessSpinning:(int)arg1;
+ (void)removeUser;
+ (void)addUser;
+ (BOOL)enabled;
+ (void)setEnabled:(BOOL)arg1;
+ (void)checkInitialize;
+ (void)initialize;

@end

@interface PFTSquareToggleButton : NSControl
{
}

- (void)setToggleState:(BOOL)arg1;
- (BOOL)isFlipped;
- (void)viewDidMoveToSuperview;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface PFTSquareToggleButtonCell : PFTMultiStateButtonCell
{
    BOOL _toggleState;
    NSTableHeaderCell *_drawCell;
}

- (void).cxx_destruct;
- (void)setToggleState:(BOOL)arg1;
- (BOOL)_sendActionFrom:(id)arg1;
- (void)stopTracking:(struct CGPoint)arg1 at:(struct CGPoint)arg2 inView:(id)arg3 mouseIsUp:(BOOL)arg4;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;

@end

@interface PFTTraceDocument : NSDocument <XRDeviceObserver, PFTInstrumentClient, NSOpenSavePanelDelegate, NSAnimationDelegate, NSOutlineViewDelegate, XRProcessTargetedObject>
{
    BOOL _lowerDisplayIsHidden;
    BOOL _t_lowerDisplayIsHidden;
    NSMutableArray *_navigationElements;
    XRContext *_rootContext;
    NSURL *_originalURL;
    BOOL _createdViaTemplate;
    NSDictionary *_creationTemplateData;
    XRContext *_restorationContext;
    NSDictionary *_template;
    struct CGRect _previousUpperRect;
    struct CGRect _previousLowerRect;
    struct CGRect _previousTrackRect;
    BOOL _doAnimationsInstantly;
    XRFloatValueAnimation *_instrumentsAnimation;
    XRTrace *_trace;
    unsigned long long _currentTimeInspectionLocation;
    double _currentTimeRecordLocation;
    struct XRTimeRange _selectedTimeRange;
    BOOL _expandTimeRangeAutomatically;
    BOOL _ignoreTimeSelections;
    XRSymbolInspectorViewController *_symbolicationController;
    BOOL _symbolicationControllerModelIsOutOfDate;
    NSOperation *_symbolicationControllerModelUpdateOp;
    NSOperation *_symbolicationControllerUIUpdateOp;
    NSString *_t_windowString;
    struct CGRect _t_TrackRect;
    struct CGRect _t_ControlRect;
    struct CGRect _t_leftContainer;
    NSString *_t_selectedInstrumentUUID;
    BOOL _t_ui_lowerDisplay_hidden;
    BOOL _t_ui_instruments_hidden;
    BOOL _t_ui_eventInspector_hidden;
    float _t_ui_dualSliderValue;
    double _t_inspectionTimeInSeconds;
    int _ui_record_state;
    int _ui_pause_state;
    BOOL _ui_loop_state;
    BOOL _ui_restart_state;
    int _ui_flag_state;
    BOOL _ui_flag_can_select_next;
    BOOL _ui_flag_can_select_previous;
    int _ui_range_state;
    int _ui_layout_state;
    BOOL _ui_eventInspector_hidden;
    BOOL _ui_lowerDisplay_hidden;
    BOOL _ui_instruments_hidden;
    XRStrategyInfo *_ui_selected_strategy;
    NSArray *_ui_available_strategies;
    XRBusyModel *_busyModel;
    BOOL _openDetailViewAfterRecording;
    BOOL _isClosingDocument;
    PFTProcess *_defaultProcess;
    NSString *_uuid;
    long long _selectedRunNumber;
    NSWindow *_progressWindow;
    BOOL _ignoreExtraSelection;
    BOOL _flagTableDeferReload;
    BOOL _observingDisplayedFlags;
    NSString *_t_selected_strategy;
    double _lastInspectorWidth;
    unsigned int _runningTraceConnectionUUID;
    id _strategyStateToRestore;
    PFTWindowController *_mainWindowController;
    XRInstrumentDebuggerWindowController *_debuggerWindowController;
    BOOL _loopEnabled;
    BOOL _closingDocument;
    BOOL _autoRestartEnabled;
    int _recordingState;
    int _pauseState;
    int _msgTracerCreationSource;
    int _ui_default_target_type_in_chooser;
    XRDevice *_targetDevice;
    NSString *_timeString;
    unsigned long long _recordingHeadTime;
    NSArray *_availableStrategies;
    PFTSelectedInstrumentDataElementList *_instrumentInspectorModel;
    XRSelectedInstrumentConfigurationDataElementList *_instrumentConfigurationModel;
    PFTSelectedInstrumentList *_selectedInstruments;
    long long _currentRunNumber;
    NSViewAnimation *_eventViewerAnimation;
}

+ (BOOL)isAnimationRunning;
+ (void)setAnimationRunning:(BOOL)arg1;
+ (void)setPreservedLastDevice:(id)arg1;
+ (id)keyPathsForValuesAffectingDefaultTargetTypeForChooser;
+ (BOOL)runningAsAppleInternal;
+ (void)restoreRecentTarget:(id)arg1;
+ (id)mostRecentDocument;
+ (id)documentWithUUID:(id)arg1;
+ (void)initialize;
@property int ui_default_target_type_in_chooser; // @synthesize ui_default_target_type_in_chooser=_ui_default_target_type_in_chooser;
@property(retain) NSViewAnimation *eventViewerAnimation; // @synthesize eventViewerAnimation=_eventViewerAnimation;
@property(nonatomic) long long currentRunNumber; // @synthesize currentRunNumber=_currentRunNumber;
@property(readonly) PFTSelectedInstrumentList *selectedInstruments; // @synthesize selectedInstruments=_selectedInstruments;
@property(readonly) XRSelectedInstrumentConfigurationDataElementList *instrumentConfigurationModel; // @synthesize instrumentConfigurationModel=_instrumentConfigurationModel;
@property(readonly) PFTSelectedInstrumentDataElementList *instrumentInspectorModel; // @synthesize instrumentInspectorModel=_instrumentInspectorModel;
@property int msgTracerCreationSource; // @synthesize msgTracerCreationSource=_msgTracerCreationSource;
@property(retain, nonatomic) NSArray *availableStrategies; // @synthesize availableStrategies=_availableStrategies;
@property(nonatomic, getter=isAutoRestartEnabled) BOOL autoRestartEnabled; // @synthesize autoRestartEnabled=_autoRestartEnabled;
@property(nonatomic) unsigned long long recordingHeadTime; // @synthesize recordingHeadTime=_recordingHeadTime;
@property(nonatomic, getter=isClosingDocument) BOOL closingDocument; // @synthesize closingDocument=_closingDocument;
@property(retain, nonatomic) XRBusyModel *busyModel; // @synthesize busyModel=_busyModel;
@property(copy, nonatomic) NSString *timeString; // @synthesize timeString=_timeString;
@property(retain) XRDevice *targetDevice; // @synthesize targetDevice=_targetDevice;
@property(retain) PFTProcess *defaultProcess; // @synthesize defaultProcess=_defaultProcess;
@property(copy, nonatomic) NSString *uuid; // @synthesize uuid=_uuid;
@property(nonatomic, getter=isLoopEnabled) BOOL loopEnabled; // @synthesize loopEnabled=_loopEnabled;
@property(nonatomic) int pauseState; // @synthesize pauseState=_pauseState;
@property(nonatomic) int recordingState; // @synthesize recordingState=_recordingState;
- (void).cxx_destruct;
- (id)dataElementsForContext:(id)arg1;
- (id)objectInScriptableInstrumentsAtIndex:(unsigned long long)arg1;
- (unsigned long long)countOfScriptableInstruments;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)_observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)removeFlags:(id)arg1;
- (void)unregisterFlags:(id)arg1;
- (void)registerFlags:(id)arg1;
- (void)setTargetsDevice:(id)arg1;
- (int)defaultTargetTypeForChooser;
- (BOOL)supportsTargetType:(int)arg1;
- (id)currentTargetDevice;
- (id)currentTargetProcess;
- (void)setTargetsInstrumentSpecific;
- (void)setTargetsAllProcesses;
- (void)setTargetsExistingProcess:(id)arg1;
- (void)setTargetsLaunchedProcess:(id)arg1;
- (void)_setTargetType:(int)arg1 withProcess:(id)arg2 device:(id)arg3 preserve:(BOOL)arg4;
- (void)_xrayReportError:(id)arg1;
- (void)_addInstrument:(id)arg1;
- (void)_createInstrument:(id)arg1;
- (void)replaceType:(id)arg1 withType:(id)arg2;
- (void)refreshedInstrumentType:(id)arg1;
- (void)attachInstrumentType:(id)arg1 toProcess:(id)arg2;
- (void)newInstrumentType:(id)arg1;
- (id)mainWindowController;
- (void)setDriver:(id)arg1;
- (void)showInstrumentHelp:(id)arg1;
- (id)panel:(id)arg1 userEnteredFilename:(id)arg2 confirmed:(BOOL)arg3;
- (void)_handleDocumentFileChanges:(id)arg1;
- (void)showRuns:(id)arg1;
- (void)forwardHistory:(id)arg1;
- (void)backHistory:(id)arg1;
- (void)traceNewCall:(id)arg1;
- (void)exportData:(id)arg1;
- (void)exportPanelDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)saveAsPublicTemplate:(id)arg1;
- (void)saveAsTemplatePanelDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)toggleSpinMonitor:(id)arg1;
- (void)increaseDeckSize:(id)arg1;
- (void)decreaseDeckSize:(id)arg1;
- (void)setDisplayContext:(id)arg1 visible:(BOOL)arg2;
- (BOOL)isDisplayContextVisible:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)showLibrary:(id)arg1;
- (void)getLibrary:(id)arg1;
- (void)showSymbolSheet;
- (void)_initializeSymbolInspector;
- (void)openDetailView;
- (void)_openDetailViewNotification:(id)arg1;
- (void)setMiniToolbarVisible:(BOOL)arg1;
- (void)toggleLoopReplay:(id)arg1;
- (void)pauseTrace:(id)arg1;
- (void)recordTrace;
- (void)_recordTraceStarted:(BOOL)arg1;
- (void)toggleRecording:(id)arg1;
- (void)toggleRecordIfPossible;
- (BOOL)chooseExecutableAsDefaultTarget;
- (void)choosePidAsDefaultTarget;
- (void)editInstrument:(id)arg1;
- (void)buildNewInstrument:(id)arg1;
- (void)rangeAction:(id)arg1;
- (void)clearSelectedTimeRange:(id)arg1;
- (void)setTimeRangeEnd:(id)arg1;
- (void)setTimeRangeStart:(id)arg1;
- (void)_setEndTimeRange:(unsigned long long)arg1;
- (void)_setStartTimeRange:(unsigned long long)arg1;
- (void)editSelectedInstrument;
@property(nonatomic) long long selectedRunNumber;
- (void)deleteRunNumber:(long long)arg1;
- (void)synthesizeRunForImportRunNumber:(long long)arg1;
- (void)editInstrumentInstance:(id)arg1;
- (void)_instrumentControlsRefreshed:(id)arg1;
- (void)_instrumentUnselected:(id)arg1;
- (void)_instrumentChangedSetupView:(id)arg1;
- (void)showSelfServiceDebugger:(id)arg1;
- (void)_runChanged:(id)arg1;
- (void)_selectedCoresChanged:(id)arg1;
- (void)_selectedThreadsChanged:(id)arg1;
- (void)_instrumentChangedSearchView:(id)arg1;
- (void)_instrumentChangedNavigationView:(id)arg1;
- (void)_instrumentChangedDetailView:(id)arg1;
- (void)_instrumentStateChanged:(id)arg1;
- (id)ui_selected_strategy;
- (void)setUi_selected_strategy:(id)arg1;
- (void)setStrategy:(id)arg1 withInfo:(id)arg2;
- (void)_updateSupportedStrategies;
- (id)reasonForNotBeingAbleToRecord;
- (void)validateUIState;
- (void)validateControls;
- (void)_validateControlsMainThreadCallback;
- (BOOL)isUITransforming;
- (void)_spinDetected:(id)arg1;
- (BOOL)displayEnabled;
- (void)moveToNextRun:(id)arg1;
- (void)moveToPreviousRun:(id)arg1;
- (void)analysisProgressDidChange;
- (void)_displayWatermarkMessage:(id)arg1;
- (void)_uiReplayCompleted:(id)arg1;
- (void)setSelectedTimeRange:(struct XRTimeRange)arg1;
- (struct XRTimeRange)selectedTimeRange;
- (void)clearSelectedTimeRange;
- (unsigned long long)inspectionTime;
- (void)inspectFlag:(id)arg1;
- (void)showFlagTable:(id)arg1;
- (void)setInspectionTime:(unsigned long long)arg1;
- (BOOL)isRecordingMasterTrack;
- (void)endRecordingMasterTrack;
- (BOOL)startRecordingMasterTrack;
- (void)moveToPreviousRun;
- (void)moveToNextRun;
- (void)_modifySelectedRunIndex:(BOOL)arg1;
- (BOOL)isRunning;
- (void)endRun;
- (BOOL)startRun;
- (BOOL)allInstrumentsSupportTargetType:(int)arg1;
- (void)snapTrackViewToFit;
- (void)_didEndCommand:(id)arg1;
- (void)_willEndCommand:(id)arg1;
- (void)_didStartCommand:(id)arg1;
- (void)closeDetailView;
- (void)_willStartCommand:(id)arg1;
- (void)_tick:(id)arg1;
- (void)_setTimeForStart:(double)arg1 end:(double)arg2;
- (void)_strategyFilterUpdateNotification:(id)arg1;
- (id)baseFilterForRunNumber:(long long)arg1 tableID:(unsigned int)arg2;
- (id)selectedInstrument;
- (id)trace;
- (id)masterInstrument;
- (id)basicInstruments;
- (void)displaySymbolInSource:(id)arg1 withConcreteSymbol:(id)arg2 withMarkerAtLine:(id)arg3 withCallTreeInformation:(id)arg4;
- (void)displayStackFrameInSource:(id)arg1;
- (id)iconForContext:(id)arg1;
- (void)displayContext:(id)arg1;
- (void)_openDataView;
- (void)_appDidChangeScreenParametersNotification:(id)arg1;
- (void)showWindows;
- (id)windowForSheet;
- (id)mainWindow;
- (void)makeWindowControllers;
- (void)restoreDocumentWindowWithIdentifier:(id)arg1 state:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)close;
- (void)canCloseDocumentWithDelegate:(id)arg1 shouldCloseSelector:(SEL)arg2 contextInfo:(void *)arg3;
- (BOOL)prepareBlankDocument:(id *)arg1;
- (void)restoreWithTemplateData:(id)arg1;
- (id)templateData;
- (id)templateAction;
- (void)setTemplateAction:(id)arg1;
- (BOOL)prepareSavePanel:(id)arg1;
- (BOOL)writeSafelyToURL:(id)arg1 ofType:(id)arg2 forSaveOperation:(unsigned long long)arg3 error:(id *)arg4;
- (id)displayName;
- (void)_resetNameAndType;
- (BOOL)readFromURL:(id)arg1 ofType:(id)arg2 error:(id *)arg3;
- (id)originalURL;
- (void)setOriginalURL:(id)arg1;
- (void)_initialProcessSelectionCallback:(id)arg1 returnCode:(int)arg2 contextInfo:(void *)arg3;
- (void)_traceDidAwake;
- (void)handleDeviceNotification:(id)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PFTWindow : NSWindow
{
    BOOL _isBecomingKey;
    BOOL _isResigningKey;
}

- (void)flagsChanged:(id)arg1;
- (BOOL)makeFirstResponder:(id)arg1;
- (void)cancelOperation:(id)arg1;
- (void)becomeKeyWindow;
- (BOOL)isBecomingKey;
- (void)resignKeyWindow;
- (BOOL)isResigningKey;

@end

@interface PFTWindowController : NSWindowController <NSWindowDelegate, XRContextContainer, DTTimelineGraphDelegate, XRLazyKVOResponder>
{
    BOOL _strategyToolbarOpen;
    BOOL _inTimeSelectionGesture;
    XRCallTreeCompareBarViewController *_callTreeCompareBarViewController;
    NSMapTable *_observationsByContextByObj;
    NSMutableDictionary *_strategyUIControllersByIdentifier;
    XRLazyKVOAdapter *_observationAdapter;
    DTTimelineDecoratedPlane *_flagPlane;
    DTTimelineDecoratedPlane *_inspectionHeadPlane;
    XRFlagDecorator *_flagDecorator;
    XRInspectionHeadDecorator *_inspectionHeadDecorator;
    DTTimelineGroupPlane *_rulerGroupPlane;
    NSMutableDictionary *_archivedStrategyStateByID;
    BOOL _somethingNeedsRefresh;
    BOOL _trackNeedsRefresh;
    BOOL _strategiesNeedRefresh;
    BOOL _strategyToolbarChanged;
    BOOL _detailContextChanged;
    BOOL _flagsNeedRefresh;
    BOOL _windowLayoutNeedsRefresh;
    XRContext *_consoleContext;
    NSView *_controlBarView;
    NSView *_inspectorChooserView;
    NSView *_inspectorDataViewer;
    XRTimelineGraph *_timelineGraph;
    PFTDataViewer *_instrumentConfigurator;
    PFTDataViewer *_instrumentInspector;
    PFTDataViewer *_eventInspector;
    PFTLegacySearchTokenTextField *_detailSearchField;
    PFTDetailTypeHostView *_detailHost;
    NSView *_navigationView;
    XRContextPathControl *_contextPathControl;
    XRContext *_rootContext;
    XRMainWindowUIState *_state;
    XRRecordingOptionsViewController *_recordingOptionsViewController;
    NSSet *_currentStrategyIdentifiers;
    id <XRToolbarManager> _toolbarManager;
    XRStrategiesToolbarViewController *_strategiesToolbarViewController;
    XRPlaceholderView *_strategyToolbarHost;
    NSView *_normalContentView;
    NSLayoutConstraint *_strategyToolbarHeightConstraint;
    DVTBorderedView *_belowToolbarBorderedView;
    PFTSelectedEventDataElementList *_extendedDetailModel;
    XRSummaryViewController *_summaryViewController;
    XRModalViewController *_windowContentController;
    NSViewController *_interactiveUIController;
    XRNonInteractiveModeViewController *_nonInteractiveUIController;
    NSViewController *_trackViewController;
    NSViewController *_detailViewController;
    NSView *_lhsDetailView;
    NSViewController *_lhsDetailViewController;
    PFTDataViewer *_rhsDetailView;
    NSViewController *_rhsDetailViewController;
    XRConsoleControl *_consoleView;
    XRTrackAndDetailSplitViewController *_trackDetailSplitViewController;
    NSSplitViewController *_detailSplitViewController;
}

@property(readonly, nonatomic) NSSplitViewController *detailSplitViewController; // @synthesize detailSplitViewController=_detailSplitViewController;
@property(readonly, nonatomic) XRTrackAndDetailSplitViewController *trackDetailSplitViewController; // @synthesize trackDetailSplitViewController=_trackDetailSplitViewController;
@property(retain, nonatomic) XRConsoleControl *consoleView; // @synthesize consoleView=_consoleView;
@property(readonly, nonatomic) NSViewController *rhsDetailViewController; // @synthesize rhsDetailViewController=_rhsDetailViewController;
@property(retain, nonatomic) PFTDataViewer *rhsDetailView; // @synthesize rhsDetailView=_rhsDetailView;
@property(readonly, nonatomic) NSViewController *lhsDetailViewController; // @synthesize lhsDetailViewController=_lhsDetailViewController;
@property(retain, nonatomic) NSView *lhsDetailView; // @synthesize lhsDetailView=_lhsDetailView;
@property(readonly, nonatomic) NSViewController *detailViewController; // @synthesize detailViewController=_detailViewController;
@property(readonly, nonatomic) NSViewController *trackViewController; // @synthesize trackViewController=_trackViewController;
@property(readonly, nonatomic) XRNonInteractiveModeViewController *nonInteractiveUIController; // @synthesize nonInteractiveUIController=_nonInteractiveUIController;
@property(readonly, nonatomic) NSViewController *interactiveUIController; // @synthesize interactiveUIController=_interactiveUIController;
@property(readonly, nonatomic) XRModalViewController *windowContentController; // @synthesize windowContentController=_windowContentController;
@property(readonly, nonatomic) XRSummaryViewController *summaryViewController; // @synthesize summaryViewController=_summaryViewController;
@property(readonly) PFTSelectedEventDataElementList *extendedDetailModel; // @synthesize extendedDetailModel=_extendedDetailModel;
@property __weak DVTBorderedView *belowToolbarBorderedView; // @synthesize belowToolbarBorderedView=_belowToolbarBorderedView;
@property __weak NSLayoutConstraint *strategyToolbarHeightConstraint; // @synthesize strategyToolbarHeightConstraint=_strategyToolbarHeightConstraint;
@property(retain) NSView *normalContentView; // @synthesize normalContentView=_normalContentView;
@property __weak XRPlaceholderView *strategyToolbarHost; // @synthesize strategyToolbarHost=_strategyToolbarHost;
@property(retain, nonatomic) XRStrategiesToolbarViewController *strategiesToolbarViewController; // @synthesize strategiesToolbarViewController=_strategiesToolbarViewController;
@property(retain, nonatomic) id <XRToolbarManager> toolbarManager; // @synthesize toolbarManager=_toolbarManager;
@property(retain, nonatomic) NSSet *currentStrategyIdentifiers; // @synthesize currentStrategyIdentifiers=_currentStrategyIdentifiers;
@property(retain, nonatomic) XRRecordingOptionsViewController *recordingOptionsViewController; // @synthesize recordingOptionsViewController=_recordingOptionsViewController;
@property(copy, nonatomic) XRMainWindowUIState *state; // @synthesize state=_state;
@property(retain) XRContext *rootContext; // @synthesize rootContext=_rootContext;
@property __weak XRContextPathControl *contextPathControl; // @synthesize contextPathControl=_contextPathControl;
@property __weak NSView *navigationView; // @synthesize navigationView=_navigationView;
@property __weak PFTDetailTypeHostView *detailHost; // @synthesize detailHost=_detailHost;
@property __weak PFTLegacySearchTokenTextField *detailSearchField; // @synthesize detailSearchField=_detailSearchField;
@property(retain) PFTDataViewer *eventInspector; // @synthesize eventInspector=_eventInspector;
@property(retain) PFTDataViewer *instrumentInspector; // @synthesize instrumentInspector=_instrumentInspector;
@property(retain) PFTDataViewer *instrumentConfigurator; // @synthesize instrumentConfigurator=_instrumentConfigurator;
@property(retain) XRTimelineGraph *timelineGraph; // @synthesize timelineGraph=_timelineGraph;
@property(nonatomic) __weak NSView *inspectorDataViewer; // @synthesize inspectorDataViewer=_inspectorDataViewer;
@property(nonatomic) __weak NSView *inspectorChooserView; // @synthesize inspectorChooserView=_inspectorChooserView;
@property(nonatomic) __weak NSView *controlBarView; // @synthesize controlBarView=_controlBarView;
- (void).cxx_destruct;
- (void)handleLazyKVOUpdate:(id)arg1;
- (void)_refreshPass;
- (BOOL)windowShouldClose:(id)arg1;
- (struct CGRect)window:(id)arg1 willPositionSheet:(id)arg2 usingRect:(struct CGRect)arg3;
- (void)setupToolbar;
- (void)restoreStrategyUIControllerStates:(id)arg1;
- (id)archiveStrategyUIControllerStates;
- (void)unhideStrategyToolbarForWatermark;
- (void)hideStrategyToolbarForWatermark;
- (void)setStrategySummaryFilter:(id)arg1;
- (void)setStrategyToolbarVisible:(BOOL)arg1;
- (void)documentDidUpdateFilterForRunNumber:(long long)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (id)summaryViewContext;
- (void)callTreeMine:(id)arg1;
- (void)toggleExtendedDetail:(id)arg1;
- (void)performFindPanelAction:(id)arg1;
- (void)setSidebarState:(unsigned long long)arg1;
- (void)closeDetailView;
- (void)openDetailView;
- (id)searchCriteria;
- (void)toggleDetail:(id)arg1;
- (void)addCriteriaToSearchField:(id)arg1;
- (void)_openDataView;
- (id)iconForContext:(id)arg1;
- (id)contextContainerForUUID:(id)arg1;
- (id)viewForContext:(id)arg1;
- (id)siblingsForContext:(id)arg1;
- (id)splitterContext;
- (void)_respondToDisplayedContextChange;
- (void)displayContext:(id)arg1;
- (id)contextRepresentation;
- (id)uuid;
- (id)strategyDetailsContext;
- (void)inspectFlag:(id)arg1;
- (void)removeFlag:(id)arg1;
- (void)addFlagToRecording:(id)arg1;
- (void)nextFlag:(id)arg1;
- (void)prevFlag:(id)arg1;
- (void)_coreSpaceNotification:(id)arg1;
- (id)_selectedStrategyUI;
- (void)inputHandlerForGraph:(id)arg1 requestsHeight:(double)arg2 forPlane:(id)arg3;
- (void)inputHandlerForGraph:(id)arg1 requestsCollapsingGroupPlane:(id)arg2;
- (void)inputHandlerForGraph:(id)arg1 requestsExpandingGroupPlane:(id)arg2;
- (void)inputHandlerForGraph:(id)arg1 requestsEndLongPressDragAtTime:(unsigned long long)arg2;
- (void)inputHandlerForGraph:(id)arg1 requestsLongPressDragToTime:(unsigned long long)arg2;
- (BOOL)inputHandlerForGraph:(id)arg1 requestsLongPressDragBeginAtTime:(unsigned long long)arg2 onPlanes:(id)arg3;
- (void)inputHandlerForGraph:(id)arg1 unhandledClickAtTime:(unsigned long long)arg2 onPlanes:(id)arg3;
- (void)inputHandlerRequestsToClearCurrentInspectionTimeForGraph:(id)arg1;
- (void)inputHandlerForGraph:(id)arg1 requestsDisplayInspectionInfoForNanosecond:(unsigned long long)arg2 atX:(double)arg3;
- (void)inputHandlerRequestsToClearInspectionInfoForGraph:(id)arg1;
- (void)inputHandlerForGraph:(id)arg1 requestsNanosecondsPerPoint:(unsigned long long)arg2;
- (void)inputHandlerForGraph:(id)arg1 requestsCurrentInspectionTime:(unsigned long long)arg2;
- (void)inputHandlerRequestsToClearSelectedTimeRangeForGraph:(id)arg1;
- (void)inputHandlerDidFinishSelectionForGraph:(id)arg1;
- (void)inputHandlerForGraph:(id)arg1 requestsSelectedTimeRange:(struct XRTimeRange)arg2;
- (void)inputHandlerForGraph:(id)arg1 requestYOffset:(double)arg2;
- (void)inputHandlerForGraph:(id)arg1 requestsNanosecondOffset:(long long)arg2;
- (void)recordOptions:(id)arg1;
- (void)deleteRun:(id)arg1;
- (void)deleteInstrument:(id)arg1;
- (void)showExtendedDetail:(id)arg1;
- (void)showDisplaySettings:(id)arg1;
- (void)showRecordSettings:(id)arg1;
- (void)callTreeCompare:(id)arg1;
- (void)fullScreenAction:(id)arg1;
- (void)snapTrackViewToFit:(id)arg1;
- (void)recordTrace:(id)arg1;
@property(readonly, nonatomic) __weak PFTTraceDocument *traceDocument;
- (void)windowWillClose:(id)arg1;
- (void)setDocument:(id)arg1;
- (BOOL)shouldCloseDocument;
- (id)windowTitleForDocumentDisplayName:(id)arg1;
- (void)windowDidLoad;
- (void)dealloc;
- (id)initWithWindow:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRAboutWindowController : NSWindowController <NSWindowRestoration>
{
    NSTextField *_appNameLabel;
    NSTextField *_copyrightMultilineLabel;
    NSTextField *_versionAndBuildLabel;
}

+ (void)restoreWindowWithIdentifier:(id)arg1 state:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
+ (id)sharedAboutWindowController;
- (void).cxx_destruct;
- (void)openAboutWindow:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (void)windowDidLoad;
- (id)_versionString;
- (id)_copyrightAndTrademarkString;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRAbstractFileSystem (NSBrowserDelegate)
- (id)browser:(id)arg1 previewViewControllerForLeafItem:(id)arg2;
- (BOOL)browser:(id)arg1 writeRowsWithIndexes:(id)arg2 inColumn:(long long)arg3 toPasteboard:(id)arg4;
- (void)browser:(id)arg1 willDisplayCell:(id)arg2 atRow:(long long)arg3 column:(long long)arg4;
- (id)browser:(id)arg1 objectValueForItem:(id)arg2;
- (BOOL)browser:(id)arg1 isLeafItem:(id)arg2;
- (id)browser:(id)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (long long)browser:(id)arg1 numberOfChildrenOfItem:(id)arg2;
@end

@interface XRAccessibilityElement : NSAccessibilityElement
{
}

- (id)accessibilityHitTest:(struct CGPoint)arg1;

@end

@interface XRActivityTextLayer : DVTTextLayer
{
    NSDictionary *_textAttributes;
}

@property(copy, nonatomic) NSDictionary *textAttributes; // @synthesize textAttributes=_textAttributes;
- (void).cxx_destruct;
- (void)setString:(id)arg1;
@property(readonly) NSDictionary *currentTextAttributes;
- (id)effectiveAttributes;

@end

@interface XRToolbarItem : NSToolbarItem
{
    BOOL _connectedToContext;
    NSString *_traceDocumentIdentifier;
}

@property BOOL connectedToContext; // @synthesize connectedToContext=_connectedToContext;
@property(copy) NSString *traceDocumentIdentifier; // @synthesize traceDocumentIdentifier=_traceDocumentIdentifier;
- (void).cxx_destruct;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)itemContext;
- (void)disconnectFromContext;
- (void)connectToContext:(id)arg1;
- (void)_performContextDisconnection;
- (void)_performContextConnection;
- (id)toolTip;
- (id)paletteLabel;
- (void)dealloc;
- (id)initWithItemIdentifier:(id)arg1 documentIdentifier:(id)arg2;

@end

@interface XRActivityToolbarItem : XRToolbarItem
{
    unsigned long long _hours;
    unsigned long long _minutes;
    unsigned long long _seconds;
}

@property(readonly) XRActivityView *activityView;
- (long long)visibilityPriority;
- (struct CGSize)minSize;
- (struct CGSize)maxSize;
- (void)disconnectFromContext;
- (void)connectToContext:(id)arg1;
- (void)_runWasSelected:(id)arg1;
- (void)_updateRuns:(unsigned long long)arg1 selectedRunIndex:(unsigned long long)arg2;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)_inspectionHeadChanged:(id)arg1;
- (void)_updateTime;

@end

@interface XRActivityView : NSView
{
    BOOL _isSetup;
    NSView *_layerView;
    CALayer *_backgroundLayer;
    CALayer *_backgroundColorLayer;
    XRActivityTextLayer *_runsLayer;
    XRActivityTextLayer *_timeLayer;
    NSDictionary *_textAttributes;
    BOOL _observingKeyWindowNotifications;
    NSString *_runsString;
    NSString *_timeString;
}

+ (struct CGSize)defaultSizeForToolbarDisplayMode:(unsigned long long)arg1 sizeMode:(unsigned long long)arg2;
- (void).cxx_destruct;
- (void)_activationStateChangedForWindow:(id)arg1;
- (void)_updateCurrentActivityReportForWindowActivationState;
- (void)_updateBackgroundColorForWindowActivationState;
- (void)setUpOrTearDown;
- (void)tearDown;
- (void)_handleKeyWindowNotificaiton:(id)arg1;
- (void)setup;
- (void)setupLayers;
- (id)_timeLayer;
- (id)_runsLayer;
- (id)_textLayerWithFrame:(struct CGRect)arg1 stringValue:(id)arg2;
- (id)_backgroundLayer;
- (id)_highlightColor;
- (id)_backgroundColor;
- (BOOL)_isActiveWindowState;
- (void)_updateHighlightColorForWindowActivationState;
- (struct CGRect)insetReportLayerBounds;
- (struct CGRect)insetRootLayerBounds;
@property(copy) NSString *timeString; // @synthesize timeString=_timeString;
@property(copy) NSString *runsString; // @synthesize runsString=_runsString;
@property struct CGSize contentSize;
- (void)sizeToFitToolbarDisplayMode:(unsigned long long)arg1 sizeMode:(unsigned long long)arg2;
- (void)viewDidMoveToSuperview;
- (void)viewDidMoveToWindow;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface XRActivityViewBackgroundButton : NSButton
{
}

- (BOOL)mouseDownCanMoveWindow;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface XRAnalysisCoreActiveProjectorDataSource : NSObject <NSOutlineViewDataSource>
{
    NSArray *_projectorHierarchy;
    NSMutableArray *_bookmarksByLevel;
    NSMutableDictionary *_topLevelItemsByValue;
    XRAnalysisCoreProjectionItem *_dimensionlessTopItem;
    NSMutableArray *_sortedTopLevelItems;
    BOOL _hierarchical;
    unsigned char _dimensions;
    NSOutlineView *_outlineView;
}

@property(retain, nonatomic) NSOutlineView *outlineView; // @synthesize outlineView=_outlineView;
@property(readonly, nonatomic, getter=isHierarchical) BOOL hierarchical; // @synthesize hierarchical=_hierarchical;
- (void).cxx_destruct;
- (id)topLevelItemAtIndex:(unsigned long long)arg1;
- (unsigned long long)topLevelItemCount;
- (id)mostSummarizedProjector;
- (id)mostDetailedProjector;
- (id)projectorAtLevel:(unsigned char)arg1;
- (id)projectorForItem:(id)arg1;
- (id)itemAtLevel:(unsigned char)arg1 bookmark:(unsigned long long)arg2;
- (void)synchronizeWithOutlineView;
- (void)refreshExistingValues;
- (void)scanForNewItems;
- (void)outlineView:(id)arg1 sortDescriptorsDidChange:(id)arg2;
- (BOOL)outlineView:(id)arg1 isItemExpandable:(id)arg2;
- (id)objectValueForTableColumn:(id)arg1 byItem:(id)arg2;
- (id)outlineView:(id)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (long long)outlineView:(id)arg1 numberOfChildrenOfItem:(id)arg2;
- (void)dealloc;
- (id)initWithProjectorHierarchy:(id)arg1;
- (id)initWithProjector:(id)arg1;
- (id)initWithProjectorArray:(id)arg1 formsHierarchy:(BOOL)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRAnalysisCoreBackingDetailView : NSView
{
    NSView *_embeddedSubview;
    NSBitmapImageRep *_frozenOutImage;
    struct CGRect _frozenImageRect;
    CIFilter *_outFilter;
    BOOL _frozen;
    BOOL _busy;
}

- (void).cxx_destruct;
- (void)drawRect:(struct CGRect)arg1;
- (BOOL)isOpaque;
- (void)setBusy:(BOOL)arg1;
- (void)embedSubview:(id)arg1;
- (void)freezeAndRemoveEmbeddedView;

@end

@interface XRAnalysisCoreCallTreeViewController : NSViewController <XRCallTreeDataSource, XRFilteredDataSource>
{
    XRSlidingCapableScrollView *_callTreeScrollView;
    XRCallTreeDetailView *_callTreeView;
    XRMultiProcessBacktraceRepository *_backtraceRepository;
    XRIntKeyedDictionary *_wrappers;
    NSMutableDictionary *_aggregatorByCategory;
    unsigned int _backtraceAggIdx;
    unsigned char _backtraceDim;
    unsigned char _threadDim;
    unsigned char _categoryDim;
    NSString *_categoryDimName;
    XREngineeringTypeFormatter *_myEngFormatter;
    XRAnalysisCoreActiveProjectorDataSource *_projectionHierarchy;
    id <XRAnalysisCoreCallTreeViewControllerDelegate> _delegate;
}

@property(nonatomic) __weak id <XRAnalysisCoreCallTreeViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)filterDetailWithTokens:(id)arg1 context:(id)arg2 matchesAny:(BOOL)arg3;
- (id)searchContexts;
- (id)selectedSearchContext;
- (void)refineQueryBasedOnUIState:(id)arg1;
- (id)contextRepresentation;
- (void)_focusOnCallTreeNode:(id)arg1;
- (id)dataElementForHeaviestStack;
- (id)dataMiningElementsWithState;
- (id)processCategoriesForPid:(int)arg1;
- (id)provideCategories;
- (id)backtracesForCategory:(id)arg1 timeRange:(struct XRTimeRange)arg2 savedIndex:(unsigned long long *)arg3;
- (void)restoreUIState:(id)arg1;
- (void)saveUIState:(id)arg1;
- (void)refresh;
- (void)instrumentWillBecomeInvalid;
- (void)_mainThreadAdaptCallTree;
- (void)_mainThreadFillAggregator;
- (void)viewWillAppear;
- (void)loadView;
- (void)setRepresentedObject:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRAnalysisCoreConnectionIntervalDecorator : DTTimelineDecorator
{
    unsigned int _tableID;
    unsigned char _sourceUUIDColumnID;
    unsigned char _sinkUUIDColumnID;
    unsigned char _metadataColumnID;
    unsigned char _filterColumnID;
    unsigned char _colorColumnID;
    unsigned char _colorColumnImpType;
    unsigned short _colorEngineeringType;
    XRTheme *_theme;
    XRTrace *_trace;
    long long _runNumber;
    XRAnalysisCoreConnectionIntervalModel *_model;
    unsigned long long _filterValue;
}

+ (void)initialize;
@property(nonatomic) unsigned long long filterValue; // @synthesize filterValue=_filterValue;
@property(retain, nonatomic) XRAnalysisCoreConnectionIntervalModel *model; // @synthesize model=_model;
@property(nonatomic) long long runNumber; // @synthesize runNumber=_runNumber;
@property(nonatomic) unsigned int tableID; // @synthesize tableID=_tableID;
@property(nonatomic) __weak XRTrace *trace; // @synthesize trace=_trace;
- (void).cxx_destruct;
- (id)decorateInspectionRanges:(id)arg1;
- (id)decorateContainer:(struct DTTimelineDecorationContainer *)arg1;
- (id)_getImageForType:(unsigned char)arg1 andColor:(id)arg2;
- (void)setDefaultsForPlane:(id)arg1;
- (id)initWithTableID:(unsigned int)arg1;

@end

@interface XRAnalysisCoreConnectionIntervalDecoratorHandler : NSObject <XRAnalysisCoreQueryHandler>
{
    struct _opaque_pthread_mutex_t _lock;
    struct DTTimelineDecorationContainer *_container;
    XRAnalysisCoreConnectionIntervalModel *_model;
    XRAnalysisCore *_core;
    unsigned char _timeColumnID;
    unsigned char _durationColumnID;
    unsigned char _filterColumnID;
    XRAnalysisCoreUIPlanEngineeringTypeOverride *_engineeringTypeOverride;
}

- (void).cxx_destruct;
- (void)reduceFromLocalResults:(id)arg1;
- (void)runWorkgroup:(unsigned short)arg1 of:(unsigned int)arg2 withLocalResults:(id)arg3 context:(id)arg4 rowIterator:(struct XRAnalysisCoreReadCursor *)arg5;
- (void)dealloc;
- (id)initWithContainer:(struct DTTimelineDecorationContainer *)arg1 core:(id)arg2 columnMap:(id)arg3 model:(id)arg4 engineeringTypeOverride:(id)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface XRAnalysisCoreConnectionIntervalModel : NSObject
{
    XRTrace *_trace;
    long long _runNumber;
    unsigned long long _filterValue;
    NSMutableDictionary *_visualConnectionTableToColumnMaps;
    NSMutableArray *_monitoringInfo;
    struct _opaque_pthread_mutex_t _lock;
    NSArray *_visualConnectionTableIDs;
}

@property(copy, nonatomic) NSArray *visualConnectionTableIDs; // @synthesize visualConnectionTableIDs=_visualConnectionTableIDs;
- (void).cxx_destruct;
- (void)accessLocked:(CDUnknownBlockType)arg1;
- (id)columnMapForTable:(unsigned int)arg1;
- (id)planeForUUID:(unsigned int)arg1;
- (BOOL)tick;
- (void)setGroupPlanesToMonitor:(id)arg1;
- (void)_monitorPlaneOrGroupPlane:(id)arg1 core:(id)arg2;
- (void)_monitorPlane:(id)arg1 core:(id)arg2;
- (void)_processMonitor:(id)arg1 startingRow:(unsigned long long)arg2;
- (void)setFilterValue:(unsigned long long)arg1;
- (void)dealloc;
- (id)initWithTrace:(id)arg1 runNumber:(long long)arg2;

@end

__attribute__((visibility("hidden")))
@interface XRAnalysisCoreConnectionIntervalMonitor : NSObject
{
    struct set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>> *_uuids;
    unsigned char _uuidColumnID;
    unsigned int _tableID;
    DTTimelineDecoratedPlane *_plane;
    XRAnalysisCore *_core;
    XRAnalysisCoreTableQuery *_query;
    XRAnalysisCoreRowArray *_rowArray;
    NSOperation *_op;
}

@property(retain, nonatomic) NSOperation *op; // @synthesize op=_op;
@property(retain, nonatomic) XRAnalysisCoreRowArray *rowArray; // @synthesize rowArray=_rowArray;
@property(nonatomic) unsigned char uuidColumnID; // @synthesize uuidColumnID=_uuidColumnID;
@property(nonatomic) unsigned int tableID; // @synthesize tableID=_tableID;
@property(retain, nonatomic) XRAnalysisCoreTableQuery *query; // @synthesize query=_query;
@property(nonatomic) __weak XRAnalysisCore *core; // @synthesize core=_core;
@property(nonatomic) __weak DTTimelineDecoratedPlane *plane; // @synthesize plane=_plane;
- (void).cxx_destruct;
- (void)dealloc;
- (id)init;

@end

@interface XRAnalysisCoreDetailNode : NSObject <NSSecureCoding>
{
    XRAnalysisCoreDetailNode *_firstSibling;
    int _viewKind;
    NSString *_label;
    XRAnalysisCoreDetailNode *_parent;
    XRAnalysisCoreDetailNode *_nextSibling;
    XRAnalysisCoreTableQuery *_focusQuery;
    NSString *_planTemplateName;
}

+ (BOOL)supportsSecureCoding;
@property(nonatomic) int viewKind; // @synthesize viewKind=_viewKind;
@property(retain, nonatomic) NSString *planTemplateName; // @synthesize planTemplateName=_planTemplateName;
@property(retain, nonatomic) XRAnalysisCoreTableQuery *focusQuery; // @synthesize focusQuery=_focusQuery;
@property(readonly, nonatomic) XRAnalysisCoreDetailNode *nextSibling; // @synthesize nextSibling=_nextSibling;
@property(readonly, nonatomic) XRAnalysisCoreDetailNode *parent; // @synthesize parent=_parent;
@property(readonly, nonatomic) NSString *label; // @synthesize label=_label;
- (void).cxx_destruct;
@property(readonly, nonatomic, getter=isSelectable) BOOL selectable;
@property(readonly, nonatomic) XRAnalysisCoreDetailNode *firstSibling;
- (id)insertSiblingWithLabel:(id)arg1 parent:(id)arg2;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithLabel:(id)arg1 firstSibling:(id)arg2 nextSibling:(id)arg3;
- (id)initWithLabel:(id)arg1 parent:(id)arg2;
- (id)initWithLabel:(id)arg1 viewKind:(int)arg2;
- (id)initWithLabel:(id)arg1;
- (id)initWithLabel:(id)arg1 parent:(id)arg2 firstSibling:(id)arg3 nextSibling:(id)arg4 focusQuery:(id)arg5 planTemplateName:(id)arg6 viewKind:(int)arg7;

@end

@interface XRAnalysisCoreDetailViewContent : NSObject
{
    unsigned int _tableID;
    XRTrace *_trace;
    long long _runNumber;
    NSString *_instrumentUUID;
    XRAnalysisCoreUIPlan *_plan;
}

@property(retain, nonatomic) XRAnalysisCoreUIPlan *plan; // @synthesize plan=_plan;
@property(retain, nonatomic) NSString *instrumentUUID; // @synthesize instrumentUUID=_instrumentUUID;
@property(nonatomic) long long runNumber; // @synthesize runNumber=_runNumber;
@property(nonatomic) __weak XRTrace *trace; // @synthesize trace=_trace;
@property(nonatomic) unsigned int tableID; // @synthesize tableID=_tableID;
- (void).cxx_destruct;

@end

@interface XRAnalysisCoreDetailViewController : NSViewController <XRLazyKVOResponder, XRAnalysisCoreCallTreeViewControllerDelegate, XRAnalysisCoreTableViewControllerDelegate, XRAnalysisCoreViewSubcontroller>
{
    XRAnalysisCoreDetailNode *_displayedNode;
    NSMutableDictionary *_displayedStateByNodeName;
    NSArray *_currentContextChangeOps;
    NSTimer *_animationDelayTimer;
    XREngineeringTypeFormatter *_myEngFormatter;
    BOOL _viewsInTransition;
    BOOL _instrumentInvalid;
    XRLazyKVOAdapter *_kvoAdapter;
    XRModalViewController *_modalController;
    XRDetailViewFatalErrorViewController *_fatalErrorViewController;
    XRAnalysisCoreTableViewController *_tabularViewController;
    XRAnalysisCoreProjectionViewController *_projectionViewController;
    XRAnalysisCoreCallTreeViewController *_callTreeViewController;
    XRAnalysisCoreUIPlan *_plan;
    PFTTraceDocument *_traceDocument;
    long long _runNumber;
    XRInstrument *_instrument;
    XRStrategyContextObject *_strategyContext;
    NSScrollView *_tableScrollView;
}

@property(retain) NSScrollView *tableScrollView; // @synthesize tableScrollView=_tableScrollView;
@property(retain, nonatomic) XRStrategyContextObject *strategyContext; // @synthesize strategyContext=_strategyContext;
@property(nonatomic) __weak XRInstrument *instrument; // @synthesize instrument=_instrument;
@property(nonatomic) long long runNumber; // @synthesize runNumber=_runNumber;
@property(nonatomic) __weak PFTTraceDocument *traceDocument; // @synthesize traceDocument=_traceDocument;
@property(retain, nonatomic) XRAnalysisCoreUIPlan *plan; // @synthesize plan=_plan;
- (void).cxx_destruct;
- (void)filterDetailWithTokens:(id)arg1 context:(id)arg2 matchesAny:(BOOL)arg3;
- (id)selectedSearchContext;
- (id)searchContexts;
- (void)refineQueryBasedOnUIState:(id)arg1;
- (void)callTreeViewControllerDidUpdateContext:(id)arg1;
- (void)callTreeViewControllerWillUpdateContext:(id)arg1;
- (void)restoreDisplayStateFromTemplate:(id)arg1;
- (id)savedDisplayStateForTemplates;
- (void)focus:(id)arg1;
- (unsigned int)_tableIDForSpec:(id)arg1 runNumber:(long long)arg2;
- (void)clearCurrentDataContext;
- (id)currentDataContext;
- (id)_currentOutlineExtendedDetailMetaUI;
- (void)handleLazyKVOUpdate:(id)arg1;
- (id)currentRecordSettingsDetailMetaUI;
- (id)currentDisplaySettingsDetailMetaUI;
- (id)currentExtendedDetailMetaUI;
- (void)instrumentDidChangeTableRequirements;
- (void)instrumentDidChangeSwitches;
- (void)tableViewController:(id)arg1 selectedAndEventAtTime:(unsigned long long)arg2;
- (void)documentSetInspectionTime:(unsigned long long)arg1;
- (void)documentDidUpdateFilter;
- (void)displayContext:(id)arg1;
- (id)siblingsForContext:(id)arg1;
- (id)contextRepresentation;
- (id)viewForContext:(id)arg1;
- (id)uuid;
- (void)_detailFadeOut:(id)arg1;
- (void)_setCurrentViewChangeOps:(id)arg1;
- (void)eventHorizonAdvancedThroughRange:(struct XRTimeRange)arg1;
- (void)loadView;
- (void)dealloc;
- (void)instrumentWillBecomeInvalid;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRAnalysisCoreValueCellView : NSTableCellView
{
    NSTextField *_valueTextField;
    NSArray *_normalLayoutConstraints;
    NSButton *_actionButton;
    id _target;
    SEL _action;
    NSTrackingArea *_fullViewTrackingArea;
    NSArray *_visibleActionButtonLayoutConstraints;
}

- (void).cxx_destruct;
- (void)updateConstraints;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)_lazyInitActionButtonSupport;
- (void)_actionButtonClick:(id)arg1;
- (void)addButtonWithIdentifier:(id)arg1 target:(id)arg2 action:(SEL)arg3;
- (BOOL)wantsEngineeringTypeFormatter;
@property(retain, nonatomic) NSFormatter *formatter;
- (void)setAnalysisCoreValue:(id)arg1;
- (void)prepareForReuse;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface XRAnalysisCoreDurationCellView : XRAnalysisCoreValueCellView
{
    NSTextField *_unitsField;
}

@property(nonatomic) __weak NSTextField *unitsField; // @synthesize unitsField=_unitsField;
- (void).cxx_destruct;
- (BOOL)wantsEngineeringTypeFormatter;
- (void)setAnalysisCoreValue:(id)arg1;

@end

@interface XRAnalysisCoreStandardDecorator : DTTimelineDecorator
{
    XRTrace *_trace;
    XREngineeringTypeFormatter *_formatter;
    long long _runNumber;
    XRAnalysisCoreGraphSpec *_graphSpec;
    XRAnalysisCoreUIPlanEngineeringTypeOverride *_engineeringTypeOverride;
    XRAnalysisCoreTableQuery *_filter;
}

@property(retain, nonatomic) XRAnalysisCoreTableQuery *filter; // @synthesize filter=_filter;
@property(retain, nonatomic) XRAnalysisCoreUIPlanEngineeringTypeOverride *engineeringTypeOverride; // @synthesize engineeringTypeOverride=_engineeringTypeOverride;
@property(retain, nonatomic) XRAnalysisCoreGraphSpec *graphSpec; // @synthesize graphSpec=_graphSpec;
- (void).cxx_destruct;
- (id)core;
- (unsigned long long)decoratorKind;
- (void)setDefaultsForPlane:(id)arg1;
- (id)init;
- (id)initWithTrace:(id)arg1 runNumber:(long long)arg2 formatter:(id)arg3;

@end

@interface XRAnalysisCoreProjectionBasedDecorator : XRAnalysisCoreStandardDecorator
{
    XRAnalysisCoreProjector *_projector;
}

- (void).cxx_destruct;
- (id)decorateContainer:(struct DTTimelineDecorationContainer *)arg1;
- (void)setDefaultsForPlane:(id)arg1;
- (id)fillContainer:(struct DTTimelineDecorationContainer *)arg1 fromProjector:(id)arg2;
- (id)initWithTrace:(id)arg1 runNumber:(long long)arg2 formatter:(id)arg3;
- (id)initWithTrace:(id)arg1 runNumber:(long long)arg2 formatter:(id)arg3 projector:(id)arg4;

@end

@interface XRAnalysisCoreHistogramDecorator : XRAnalysisCoreProjectionBasedDecorator
{
    XRAnalysisCoreHistogramTreatment *_treatment;
}

- (void).cxx_destruct;
- (id)decorateInspectionRanges:(id)arg1;
- (void)setDefaultsForPlane:(id)arg1;
- (id)fillContainer:(struct DTTimelineDecorationContainer *)arg1 fromProjector:(id)arg2;
- (id)initWithTrace:(id)arg1 runNumber:(long long)arg2 formatter:(id)arg3 projector:(id)arg4;
- (id)initWithTrace:(id)arg1 runNumber:(long long)arg2 formatter:(id)arg3 projector:(id)arg4 treatment:(id)arg5;

@end

@interface XRAnalysisCoreHistogramTreatment (Decorators)
- (void)setupPlane:(id)arg1;
- (id)decoratorFromCore:(id)arg1 tableID:(unsigned int)arg2 trace:(id)arg3 runNumber:(long long)arg4 context:(id)arg5;
@end

@interface XRAnalysisCoreNumericCellView : XRAnalysisCoreValueCellView
{
}

@end

@interface XRAnalysisCoreOutlineView : NSOutlineView
{
}

@end

@interface XRAnalysisCoreProjectionItem : NSObject
{
    unsigned long long _bookmark;
    NSMutableArray *_sortedSubItems;
    NSMutableIndexSet *_insertedIndexes;
    XRAnalysisCoreProjectionItem *_parent;
    unsigned char _level;
    NSMutableDictionary *_subItemsByValue;
}

@property(readonly, nonatomic) NSMutableDictionary *subItemsByValue; // @synthesize subItemsByValue=_subItemsByValue;
@property(readonly, nonatomic) XRAnalysisCoreProjectionItem *parent; // @synthesize parent=_parent;
@property(readonly, nonatomic) unsigned long long bookmark; // @synthesize bookmark=_bookmark;
@property(readonly, nonatomic) unsigned char level; // @synthesize level=_level;
- (void).cxx_destruct;
- (void)dealloc;
@property(readonly, nonatomic) NSArray *subitems;
- (void)updateOutlineAndReset:(id)arg1;
- (void)addSubItem:(id)arg1 value:(id)arg2;
- (id)initWithBookmark:(unsigned long long)arg1 level:(unsigned char)arg2;

@end

@interface XRAnalysisCoreProjectionViewContent : XRAnalysisCoreDetailViewContent
{
    unsigned char _backtraceDim;
    unsigned char _threadDim;
    unsigned char _categoryDim;
    XRAnalysisCoreUIProjectionDetailSpec *_spec;
    NSArray *_projectorHierarchy;
    NSString *_categoryDimName;
}

@property(copy, nonatomic) NSString *categoryDimName; // @synthesize categoryDimName=_categoryDimName;
@property(nonatomic) unsigned char categoryDim; // @synthesize categoryDim=_categoryDim;
@property(nonatomic) unsigned char threadDim; // @synthesize threadDim=_threadDim;
@property(nonatomic) unsigned char backtraceDim; // @synthesize backtraceDim=_backtraceDim;
@property(copy, nonatomic) NSArray *projectorHierarchy; // @synthesize projectorHierarchy=_projectorHierarchy;
@property(retain, nonatomic) XRAnalysisCoreUIProjectionDetailSpec *spec; // @synthesize spec=_spec;
- (void).cxx_destruct;
- (id)init;

@end

@interface XRAnalysisCoreProjectionViewController : NSViewController <NSOutlineViewDelegate>
{
    NSScrollView *_outlineScrollView;
    XRAnalysisCoreOutlineView *_outlineView;
    XREngineeringTypeFormatter *_myEngFormatter;
    XRAnalysisCoreActiveProjectorDataSource *_projectionHierarchy;
    XRAnalysisCoreProjectionItem *_focusedItem;
    NSString *_focusedName;
    XRAnalysisCoreTableQuery *_focusFilter;
}

@property(readonly, nonatomic) XRAnalysisCoreTableQuery *focusFilter; // @synthesize focusFilter=_focusFilter;
@property(readonly, nonatomic) NSString *focusedName; // @synthesize focusedName=_focusedName;
@property(readonly, nonatomic) XRAnalysisCoreProjectionItem *focusedItem; // @synthesize focusedItem=_focusedItem;
- (void).cxx_destruct;
- (void)restoreUIState:(id)arg1;
- (void)saveUIState:(id)arg1;
- (void)_synchItemsToActiveProjector;
- (void)_mainThreadAdaptOutline;
- (void)setRepresentedObject:(id)arg1;
- (BOOL)outlineView:(id)arg1 shouldCollapseItem:(id)arg2;
- (id)outlineView:(id)arg1 viewForTableColumn:(id)arg2 item:(id)arg3;
- (void)refresh;
- (void)_prepareFocusChange:(id)arg1;
- (void)viewDidLoad;
- (void)loadView;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRAnalysisCoreQueryBasedDecorator : XRAnalysisCoreStandardDecorator
{
    XRAnalysisCoreValueTreatment *_treatment;
    unsigned int _tableID;
    unsigned char _timeColumnID;
    unsigned char _valueColumnID;
    unsigned char _valueLabelColumnID;
    unsigned char _colorColumnID;
    unsigned char _visualConnectionUUIDLabelColumnID;
    unsigned char _valueColumnImpType;
    unsigned short _valueEngineeringType;
    unsigned char _colorColumnImpType;
    unsigned short _colorEngineeringType;
    NSArray *_selectionCriteria;
    NSDictionary *_selectionColumnIDs;
    NSString *_groupByValue;
    NSString *_groupByColumnName;
    NSString *_valueQualifierValue;
    NSString *_valueQualifierColumnName;
}

@property(copy, nonatomic) NSString *valueQualifierColumnName; // @synthesize valueQualifierColumnName=_valueQualifierColumnName;
@property(copy, nonatomic) NSString *valueQualifierValue; // @synthesize valueQualifierValue=_valueQualifierValue;
@property(copy, nonatomic) NSString *groupByColumnName; // @synthesize groupByColumnName=_groupByColumnName;
@property(copy, nonatomic) NSString *groupByValue; // @synthesize groupByValue=_groupByValue;
- (void).cxx_destruct;
- (unsigned long long)decoratorKind;
- (unsigned char)visualConnectionUUIDLabelColumnID;
- (id)decorateInspectionRanges:(id)arg1;
- (id)decorateContainer:(struct DTTimelineDecorationContainer *)arg1;
- (unsigned int)tableID;
- (id)representativeQueryFromCore:(id)arg1;
- (id)decorateInspectionRanges:(id)arg1 fromCore:(id)arg2;
- (id)fillContainer:(struct DTTimelineDecorationContainer *)arg1 fromCore:(id)arg2;
- (id)_createColumnSelectionValueSets:(id)arg1 schema:(id)arg2;
- (id)initWithTrace:(id)arg1 runNumber:(long long)arg2 formatter:(id)arg3;
- (id)initWithTrace:(id)arg1 runNumber:(long long)arg2 formatter:(id)arg3 treatment:(id)arg4 tableID:(unsigned int)arg5 timeColumnID:(unsigned char)arg6 valueColumnID:(unsigned char)arg7 valueLabelColumnID:(unsigned char)arg8 colorColumnID:(unsigned char)arg9 visualConnectionUUIDLabelColumnID:(unsigned char)arg10 selectionCriteria:(id)arg11 selectionColumnIDs:(id)arg12;

@end

@interface XRAnalysisCoreQueryIntervalDecorator : XRAnalysisCoreQueryBasedDecorator
{
    unsigned char _durationColumnID;
}

- (id)decorateInspectionRanges:(id)arg1 fromCore:(id)arg2;
- (id)fillContainer:(struct DTTimelineDecorationContainer *)arg1 fromCore:(id)arg2;
- (id)representativeQueryFromCore:(id)arg1;
- (void)setDefaultsForPlane:(id)arg1;
- (id)initWithTrace:(id)arg1 runNumber:(long long)arg2 formatter:(id)arg3 treatment:(id)arg4 tableID:(unsigned int)arg5 timeColumnID:(unsigned char)arg6 valueColumnID:(unsigned char)arg7 valueLabelColumnID:(unsigned char)arg8 colorColumnID:(unsigned char)arg9 visualConnectionUUIDLabelColumnID:(unsigned char)arg10 selectionCriteria:(id)arg11 selectionColumnIDs:(id)arg12;
- (id)initWithTrace:(id)arg1 runNumber:(long long)arg2 formatter:(id)arg3 treatment:(id)arg4 tableID:(unsigned int)arg5 timeColumnID:(unsigned char)arg6 durationColumnID:(unsigned char)arg7 valueColumnID:(unsigned char)arg8 valueLabelColumnID:(unsigned char)arg9 colorColumnID:(unsigned char)arg10 visualConnectionUUIDLabelColumnID:(unsigned char)arg11 selectionCriteria:(id)arg12 selectionColumnIDs:(id)arg13;

@end

@interface XRAnalysisCoreQueryIntervalDecoratorHandler : NSObject <XRAnalysisCoreQueryHandler>
{
    struct _opaque_pthread_mutex_t _lock;
    struct DTTimelineDecorationContainer *_container;
    unsigned char _timeColumnID;
    unsigned char _durationColumnID;
    unsigned char _valueColumnID;
    unsigned short _valueEngineeringType;
    unsigned char _valueColumnImpType;
    XRAnalysisCoreUIPlanEngineeringTypeOverride *_engineeringTypeOverride;
    int _nextAvailableLabel;
}

- (void).cxx_destruct;
- (void)reduceFromLocalResults:(id)arg1;
- (void)runWorkgroup:(unsigned short)arg1 of:(unsigned int)arg2 withLocalResults:(id)arg3 context:(id)arg4 rowIterator:(struct XRAnalysisCoreReadCursor *)arg5;
- (void)dealloc;
- (id)initWithContainer:(struct DTTimelineDecorationContainer *)arg1 timeColumnID:(unsigned char)arg2 durationColumnID:(unsigned char)arg3 valueColumnID:(unsigned char)arg4 valueEngineeringType:(unsigned short)arg5 valueColumnImpType:(unsigned char)arg6 engineeringTypeOverride:(id)arg7;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRAnalysisCoreQueryPeakDecorator : XRAnalysisCoreQueryBasedDecorator
{
}

- (id)decorateInspectionRanges:(id)arg1 fromCore:(id)arg2;
- (void)setDefaultsForPlane:(id)arg1;
- (id)fillContainer:(struct DTTimelineDecorationContainer *)arg1 fromCore:(id)arg2;
- (id)representativeQueryFromCore:(id)arg1;
- (id)initWithTrace:(id)arg1 runNumber:(long long)arg2 formatter:(id)arg3;
- (id)initWithTrace:(id)arg1 runNumber:(long long)arg2 formatter:(id)arg3 treatment:(id)arg4 tableID:(unsigned int)arg5 timeColumnID:(unsigned char)arg6 valueColumnID:(unsigned char)arg7 valueLabelColumnID:(unsigned char)arg8 colorColumnID:(unsigned char)arg9 visualConnectionUUIDLabelColumnID:(unsigned char)arg10 selectionCriteria:(id)arg11 selectionColumnIDs:(id)arg12;

@end

@interface XRAnalysisCoreQueryPeakDecoratorHandler : NSObject <XRAnalysisCoreQueryHandler>
{
    struct _opaque_pthread_mutex_t _lock;
    struct DTTimelineDecorationContainer *_container;
    unsigned char _timeColumnID;
    unsigned char _valueColumnID;
    unsigned char _valueColumnImpType;
}

- (void)reduceFromLocalResults:(id)arg1;
- (void)runWorkgroup:(unsigned short)arg1 of:(unsigned int)arg2 withLocalResults:(id)arg3 context:(id)arg4 rowIterator:(struct XRAnalysisCoreReadCursor *)arg5;
- (void)dealloc;
- (id)initWithContainer:(struct DTTimelineDecorationContainer *)arg1 timeColumnID:(unsigned char)arg2 valueColumnID:(unsigned char)arg3 valueColumnImpType:(unsigned char)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRAnalysisCoreStandardController : NSObject <XRInstrumentViewController>
{
    XRAnalysisCoreDetailViewController *_detailController;
    NSMutableArray *_subcontrollers;
    PFTTraceDocument *_document;
    XRAnalysisCoreTrackConfigurator *_trackConfigurator;
    NSOperation *_tableReqChangeOp;
    XRInstrument *_instrument;
    XRInstrumentStatus *_status;
}

@property(retain, nonatomic) XRInstrumentStatus *status; // @synthesize status=_status;
@property(readonly, nonatomic) __weak XRInstrument *instrument; // @synthesize instrument=_instrument;
- (void).cxx_destruct;
- (id)detailFilteredDataSource;
- (void)restoreDisplayStateFromTemplate:(id)arg1;
- (id)saveDisplayStateForTemplates;
- (void)refineSourceAnnotationQuery:(id)arg1;
- (id)currentRecordSettingsDetailMetaUI;
- (id)currentDisplaySettingsDetailMetaUI;
- (id)currentExtendedDetailMetaUI;
- (void)instrumentDidChangeSwitches;
- (void)requestDocumentInspectFlag:(id)arg1;
- (BOOL)requestDocumentSetInspectionTime:(unsigned long long)arg1;
- (void)documentSetInspectionTime:(unsigned long long)arg1;
- (void)documentDidUpdateBaseFilterForRunNumber:(long long)arg1;
- (struct XRTimeRange)documentsSelectedTimeRange;
- (void)eventHorizonAdvancedThroughRange:(struct XRTimeRange)arg1;
- (void)instrumentChangedTableRequirements;
- (void)_refreshPlan;
- (id)plan;
- (void)instrumentWillBecomeInvalid;
- (id)init;
- (id)initWithInstrument:(id)arg1 document:(id)arg2;
- (void)currentBrushBecameStale;
- (void)didRecordDataInTimeRange:(struct XRTimeRange)arg1;
- (void)configureTrack:(id)arg1;
- (void)configureTrackOverlay:(id)arg1;
- (id)detailContextContainer;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRAnalysisCoreStandardDataSource : NSObject <XRBrushDataSource>
{
    XRAnalysisCoreGraphSpec *_spec;
}

- (void).cxx_destruct;
- (id)refreshDataInRange:(struct XRTimeRange)arg1 run:(id)arg2;
- (void)run:(id)arg1 providePoints:(struct XRGraphPoint **)arg2 count:(long long *)arg3 graphSequence:(id)arg4 forTimeRange:(struct XRTimeRange)arg5 minimumInterval:(unsigned long long)arg6 graphAtIndex:(long long)arg7;
- (unsigned long long)numberOfGraphsForRun:(id)arg1;
- (id)graphStyleForRun:(id)arg1;
- (id)initWithGraphSpec:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRAnalysisCoreStandardHistogramRollUp : NSObject <XRAnalysisCoreRollUpFunction>
{
    unsigned char _colID;
    XRAnalysisCoreImplValue *_reusedImpl;
    unsigned long long _bucketWidth;
}

@property(nonatomic) unsigned long long bucketWidth; // @synthesize bucketWidth=_bucketWidth;
- (void).cxx_destruct;
- (void)rollUp:(const struct XRAnalysisCoreReadCursor *)arg1 to:(id *)arg2 core:(id)arg3;
- (id)extendFunctionWithScope:(unsigned long long)arg1;
- (unsigned short)outputEngineeringType;
- (BOOL)isValidForEngineeringType:(unsigned short)arg1;
- (id)displayableFunctionName;
- (id)initWithBucketWidth:(unsigned long long)arg1 timeColumnID:(unsigned char)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRAnalysisCoreTableQuery (UIPlanFilters)
+ (id)filterWithCore:(id)arg1 schema:(id)arg2 strategyContext:(id)arg3 selectionCriteria:(id)arg4;
@end

@interface XRAnalysisCoreTableViewColumnList : NSObject
{
    NSMutableArray *_contents;
    NSMutableDictionary *_itemsByIdent;
    NSTableColumn *_timeColumn;
}

@property(readonly, nonatomic) NSTableColumn *timeColumn; // @synthesize timeColumn=_timeColumn;
@property(readonly, nonatomic) NSArray *contents; // @synthesize contents=_contents;
- (void).cxx_destruct;
- (id)itemWithColumnIdentifier:(id)arg1;
- (void)addItem:(id)arg1;
- (id)init;

@end

@interface XRAnalysisCoreTableViewColumnListItem : NSObject
{
    unsigned char _tableColID;
    unsigned char _implClassID;
    unsigned char _topologyFieldID;
    unsigned short _engineeringTypeID;
    NSTableColumn *_column;
    XRAnalysisCoreColumnSpec *_colSpec;
}

@property(nonatomic) unsigned char topologyFieldID; // @synthesize topologyFieldID=_topologyFieldID;
@property(nonatomic) unsigned char implClassID; // @synthesize implClassID=_implClassID;
@property(nonatomic) unsigned short engineeringTypeID; // @synthesize engineeringTypeID=_engineeringTypeID;
@property(nonatomic) unsigned char tableColID; // @synthesize tableColID=_tableColID;
@property(retain, nonatomic) XRAnalysisCoreColumnSpec *colSpec; // @synthesize colSpec=_colSpec;
@property(retain, nonatomic) NSTableColumn *column; // @synthesize column=_column;
- (void).cxx_destruct;

@end

@interface XRAnalysisCoreTableViewContent : XRAnalysisCoreDetailViewContent
{
    XRAnalysisCoreUIListDetailSpec *_spec;
    XRAnalysisCoreTableQuery *_filter;
}

@property(retain, nonatomic) XRAnalysisCoreTableQuery *filter; // @synthesize filter=_filter;
@property(retain, nonatomic) XRAnalysisCoreUIListDetailSpec *spec; // @synthesize spec=_spec;
- (void).cxx_destruct;
- (id)init;

@end

@interface XRAnalysisCoreTableViewController : NSViewController <NSTableViewDelegate, NSTableViewDataSource, XRFilteredDataSource>
{
    XRAnalysisCore *_core;
    XRAnalysisCorePivotArray *_rows;
    NSOperation *_rowFetchOp;
    NSIndexSet *_selectedRows;
    NSNumberFormatter *_indexFormatter;
    XRNanoTimestampFormatter *_traceRelativeFormatter;
    XREngineeringTypeFormatter *_valueFormatter;
    XRAnalysisCoreFullTextSearchSpec *_fullTextSearchPrototype;
    unsigned long long _documentsInspectionTime;
    id <XRAnalysisCoreTableViewControllerDelegate> _delegate;
    NSArray *_extendedDetailForCurrentSelection;
    NSTableView *_tableView;
    XRAnalysisCoreTableViewColumnList *_columns;
}

@property(retain, nonatomic) XRAnalysisCoreTableViewColumnList *columns; // @synthesize columns=_columns;
@property(retain, nonatomic) NSTableView *tableView; // @synthesize tableView=_tableView;
@property(retain, nonatomic) NSArray *extendedDetailForCurrentSelection; // @synthesize extendedDetailForCurrentSelection=_extendedDetailForCurrentSelection;
@property(nonatomic) __weak id <XRAnalysisCoreTableViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (id)selectedSearchContext;
- (id)searchContexts;
- (void)filterDetailWithTokens:(id)arg1 context:(id)arg2 matchesAny:(BOOL)arg3;
- (void)restoreUIState:(id)arg1;
- (void)saveUIState:(id)arg1;
- (id)_computeExtendedDetailForCurrentSelection;
- (id)_objectForStackDataElement:(id)arg1;
- (void)setDocumentInspectionTime:(unsigned long long)arg1;
- (void)tableViewSelectionDidChange:(id)arg1;
- (id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3;
- (void)tableView:(id)arg1 sortDescriptorsDidChange:(id)arg2;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)didResymbolicate:(id)arg1;
- (void)refresh;
- (void)viewDidLoad;
- (void)loadView;
- (void)dealloc;
- (id)init;
- (void)setRepresentedObject:(id)arg1;
- (void)_changeRepresentedObjectFrom:(id)arg1 to:(id)arg2;
- (id)_performRowQueryWithFullTextFilter:(id)arg1 tableID:(unsigned int)arg2;
- (id)_createSpecForTableID:(unsigned int)arg1 core:(id)arg2;
- (id)content;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRAnalysisCoreThreadCellView : XRAnalysisCoreValueCellView
{
}

- (void)drawRect:(struct CGRect)arg1;

@end

@interface XRAnalysisCoreTrackConfigurator : NSObject
{
    NSMutableDictionary *_existanceProjectorsByRunNumber;
    XRTrace *_trace;
    XRInstrument *_instrument;
    XRIntKeyedDictionary *_plansByRunNumber;
}

@property(retain, nonatomic) XRIntKeyedDictionary *plansByRunNumber; // @synthesize plansByRunNumber=_plansByRunNumber;
@property(retain, nonatomic) XRInstrument *instrument; // @synthesize instrument=_instrument;
@property(retain, nonatomic) XRTrace *trace; // @synthesize trace=_trace;
- (void).cxx_destruct;
- (id)_refreshExistenceProjectorsForRunNumber:(long long)arg1;
- (unsigned int)_tableIDForSpec:(id)arg1 runNumber:(long long)arg2;
- (void)_configureGroupByTrack:(id)arg1 plan:(id)arg2 graphSpec:(id)arg3 treatment:(id)arg4 core:(id)arg5 graphIndex:(float *)arg6;
- (BOOL)shouldUpdateBrushLayoutForRun:(long long)arg1;
- (void)configureTrack:(id)arg1;
- (id)init;

@end

@interface XRAnalysisCoreValueTreatment (Decorators)
- (void)setupPlane:(id)arg1;
- (id)decoratorFromCore:(id)arg1 tableID:(unsigned int)arg2 trace:(id)arg3 runNumber:(long long)arg4 context:(id)arg5;
@end

@interface XRAnnotation : NSObject
{
    XRSourceTabView *_accessoryView;
    struct CGSize _minAccessoryViewSize;
    NSColor *_color;
    NSMutableArray *_commentArray;
    int _type;
    BOOL _showInspector;
    NSString *_snippet;
    DVTTextStorage *_textStorage;
    struct _NSRange _paragraphRange;
}

@property(nonatomic) struct _NSRange paragraphRange; // @synthesize paragraphRange=_paragraphRange;
@property(retain, nonatomic) DVTTextStorage *textStorage; // @synthesize textStorage=_textStorage;
@property(retain, nonatomic) XRSourceTabView *accessoryView; // @synthesize accessoryView=_accessoryView;
- (void).cxx_destruct;
- (id)description;
- (id)snippet;
- (void)setSnippet:(id)arg1;
- (long long)compareImportance:(id)arg1;
- (double)importance;
- (BOOL)showsInspector;
- (void)setShowsInspector:(BOOL)arg1;
@property(readonly, nonatomic) NSArray *dataItems; // @dynamic dataItems;
- (void)merge:(id)arg1;
- (BOOL)canMerge:(id)arg1;
- (id)xxxbottomBorderColor;
- (id)xxxbackgroundColor;
- (id)paragraphBorderHighlightColor;
- (id)paragraphHighlightColor;
- (void)drawParagraphHighlightWithFrame:(struct CGRect)arg1;
- (struct CGSize)calculateAnnotationViewSizeForBounds:(struct CGRect)arg1;
- (id)createAnnotationViewForTextView:(id)arg1 withFrame:(struct CGRect)arg2;
- (id)commentArray;
@property(readonly, nonatomic) NSString *comment;
- (void)refreshValueAsValue:(int)arg1;
- (id)initWithComments:(id)arg1;
- (id)initWithComment:(id)arg1;

@end

@interface XRAnnotationContext : DVTAnnotationContext
{
    NSObject<XRAnnotationSource> *_annotationSource;
}

@property(retain, nonatomic) NSObject<XRAnnotationSource> *annotationSource; // @synthesize annotationSource=_annotationSource;
- (void).cxx_destruct;
- (id)initWithAnnotationSource:(id)arg1;

@end

@interface XRAnnotationProvider : DVTAnnotationProvider
{
}

+ (id)annotationProviderForContext:(id)arg1 error:(id *)arg2;
- (void)clearAnnotations;
- (void)addAnnotationAtLine:(unsigned long long)arg1 withText:(id)arg2;
- (id)initWithContext:(id)arg1;

@end

@interface XRBoxView : NSView
{
    NSView *_contentView;
}

- (void).cxx_destruct;
- (id)contentView;
- (void)setContentView:(id)arg1;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface XRStrategyUIController : NSResponder <XRLazyKVOResponder, NSDraggingDestination>
{
    PFTTraceDocument *_traceDocument;
    BOOL _needsRefresh;
    struct XRTimeRange _lastSeenSelectedTimeRange;
    unsigned long long _lastSeenInspectionTime;
    XRStrategyUIInspector *_activeInspector;
    XRLazyKVOAdapter *_kvoAdapter;
    XRTimeFlag *_draggingFlag;
    NSView *_lentView;
    XRContext *_lentContext;
    DTTimelineGraph *_timelineGraph;
    PFTDetailTypeHostView *_detailHostView;
    PFTSelectedEventDataElementList *_extendedDetailModel;
    unsigned long long _resolution;
    XRStrategyUIControllerState *_state;
}

@property(copy, nonatomic) XRStrategyUIControllerState *state; // @synthesize state=_state;
@property(nonatomic) unsigned long long resolution; // @synthesize resolution=_resolution;
@property(nonatomic) __weak PFTSelectedEventDataElementList *extendedDetailModel; // @synthesize extendedDetailModel=_extendedDetailModel;
@property(nonatomic) __weak PFTDetailTypeHostView *detailHostView; // @synthesize detailHostView=_detailHostView;
@property(nonatomic) __weak DTTimelineGraph *timelineGraph; // @synthesize timelineGraph=_timelineGraph;
- (void).cxx_destruct;
- (BOOL)_wantsPeriodicDraggingUpdates;
- (void)_draggingEnded:(id)arg1;
- (void)_concludeDragOperation:(id)arg1;
- (BOOL)_performDragOperation:(id)arg1;
- (BOOL)_prepareForDragOperation:(id)arg1;
- (void)_draggingExited:(id)arg1;
- (unsigned long long)_draggingUpdated:(id)arg1;
- (unsigned long long)_draggingEntered:(id)arg1;
- (void)_setDeckUnits:(long long)arg1 forRepresentedObject:(id)arg2;
- (void)_collapseRepresentedObject:(id)arg1;
- (void)_expandRepresentedObject:(id)arg1;
- (void)_replaceOldState:(id)arg1 withState:(id)arg2;
- (id)_defaultState;
- (void)_resolutionDidChange;
- (void)_populateExtendedDetailModel;
- (BOOL)_supportsSelection;
- (void)_addFilterToNavigator:(id)arg1 planes:(id)arg2;
- (void)_brushStylesChanged;
- (id)_planeForRoute:(id)arg1 representedObject:(id)arg2;
- (id)_planForRunNumber:(long long)arg1;
- (void)_finalShutdownHandler;
- (void)_eventHorizonAdvancedThroughRange:(struct XRTimeRange)arg1;
- (void)_inspectionTimeIs:(unsigned long long)arg1;
- (void)_documentUpdateFilterForRunNumber:(long long)arg1;
- (id)_currentSelectionFilteredDataSource;
- (id)_currentSelectionIcon;
- (void)_handleConsolidatedModelRefresh;
- (void)_refreshModelCB;
- (void)didSetInspectionTime:(unsigned long long)arg1;
- (void)didChangeUpdateFilterForRunNumber:(long long)arg1;
- (id)strategyControllerIdentifierRequired;
- (id)strategyRootContext;
- (id)selectionIcon;
- (id)selectionDetailsFilteredDataSource;
- (id)selectionDetailContext;
- (BOOL)wantsPeriodicDraggingUpdates;
- (void)draggingEnded:(id)arg1;
- (void)concludeDragOperation:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (BOOL)prepareForDragOperation:(id)arg1;
- (void)draggingExited:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (void)moveLeft:(id)arg1;
- (void)moveRight:(id)arg1;
- (BOOL)acceptsFirstResponder;
- (void)shutdown;
- (void)resetDetailHostView;
- (void)expireLoanedDetailArea;
- (void)lendDetailAreaToView:(id)arg1 context:(id)arg2;
- (void)setDeckUnits:(long long)arg1 forPlane:(id)arg2;
- (void)collapsePlane:(id)arg1;
- (void)expandPlane:(id)arg1;
- (void)closeActiveInspector;
- (void)inspectionClickAtTime:(unsigned long long)arg1 planes:(id)arg2;
- (void)endFlagDragAtTime:(unsigned long long)arg1;
- (void)dragFlagToTime:(unsigned long long)arg1;
- (BOOL)beginFlagDragAtTime:(unsigned long long)arg1;
- (void)flagInspectionStartingAtFlag:(id)arg1;
- (void)flagInspectionClickAtTime:(unsigned long long)arg1;
- (void)_inspectFlag:(id)arg1 time:(unsigned long long)arg2;
- (void)_startNewNavigationSession:(id)arg1 afterOperation:(id)arg2;
- (void)_placeInspector:(id)arg1 options:(unsigned long long)arg2;
- (void)eventHorizonAdvancedThroughRange:(struct XRTimeRange)arg1;
- (id)_overlayPlane;
- (id)selectedRunPlan;
- (id)strategyControllerForRunIdentifier:(int)arg1;
- (void)selectSummaryFilter:(id)arg1;
- (id)legend;
- (id)styleViews;
- (id)filterViews;
- (id)shortDescription;
- (id)smallIconAlternate;
- (id)smallIcon;
- (id)displayName;
- (id)model;
- (void)handleLazyKVOUpdate:(id)arg1;
- (void)modelDidRefresh;
- (void)setModel:(id)arg1;
- (long long)compareStrategyName:(id)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRDefaultHostingStrategyUIController : XRStrategyUIController <XRLazyKVOResponder>
{
    XRLazyKVOAdapter *_defaultStratAdapter;
    XRInstrumentsStrategyUIController *_defaultStrategyUI;
}

@property(retain, nonatomic) XRInstrumentsStrategyUIController *defaultStrategyUI; // @synthesize defaultStrategyUI=_defaultStrategyUI;
- (void).cxx_destruct;
- (void)inspectionClickAtTime:(unsigned long long)arg1 planes:(id)arg2;
- (void)handleLazyKVOUpdate:(id)arg1;
- (BOOL)_isInstrumentTrackSelected;
- (id)strategyRootContext;
- (void)didSetInspectionTime:(unsigned long long)arg1;
- (void)didChangeUpdateFilterForRunNumber:(long long)arg1;
- (id)selectionIcon;
- (void)setResolution:(unsigned long long)arg1;
- (void)setTimelineGraph:(id)arg1;
- (void)expireLoanedDetailArea;
- (void)lendDetailAreaToView:(id)arg1 context:(id)arg2;
- (void)setDetailHostView:(id)arg1;
- (void)_handleConsolidatedModelRefresh;
- (void)_rebuildInstrumentSelectionMenu;
- (void)_resetBottomPlane;
- (void)setModel:(id)arg1;
- (id)selectionDetailsFilteredDataSource;
- (id)selectionDetailContext;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRCPUStrategyUIController : XRDefaultHostingStrategyUIController <XRLazyKVOResponder>
{
    NSPopUpButton *_cores;
    NSPopUpButton *_displayStyle;
    NSMapTable *_tracksByCore;
    XRCPUStrategyController *__observedController;
    XRLazyKVOAdapter *_kvoAdapter;
    XRAnalysisCoreDetailViewController *_detailViewController;
    XRAnalysisCoreTrackConfigurator *_trackConfigurator;
    XRCPUTimelineAccessibilityElement *_timelineAccessibilityElement;
}

+ (id)_requiredStrategyControllerIdentifier;
@property(readonly, nonatomic) NSMapTable *tracksByCore; // @synthesize tracksByCore=_tracksByCore;
- (void).cxx_destruct;
- (void)_finalShutdownHandler;
- (void)_resolutionDidChange;
- (BOOL)_supportsSelection;
- (void)_setModelSelection:(id)arg1;
- (id)_currentSelectionContext:(id)arg1 container:(id)arg2;
- (void)_takeControlOfDetailView;
- (void)_setTimelineGraph:(id)arg1;
- (void)setModel:(id)arg1;
- (void)_resetPlanesInTimeline;
- (void)handleLazyKVOUpdate:(id)arg1;
- (id)legend;
- (id)_categoryColors;
- (id)_userKernelColors;
- (void)_handleConsolidatedModelRefresh;
- (void)_styleSelected:(id)arg1;
- (void)setStyle:(id)arg1;
- (void)updateDisplayOptions;
- (void)_selectCore:(id)arg1;
- (void)updateCoreList;
- (void)updateSummaryFilters;
- (id)styleViews;
- (id)filterViews;
- (id)displayName;
- (id)shortDescription;
- (id)smallIconAlternate;
- (id)smallIcon;
@property(retain, nonatomic) XRCPUStrategyController *observedController;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRCPUTimelineAccessibilityElement : XRAccessibilityElement <NSAccessibilityTable>
{
    XRCPUStrategyUIController *_UIController;
    NSMutableArray *_rows;
}

- (void).cxx_destruct;
- (struct CGRect)accessibilityFrame;
- (id)accessibilityParent;
- (id)accessibilityRows;
- (id)accessibilityLabel;
- (void)rebuild;
- (id)initWithCPUStrategyUIController:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRCPUmanager : NSObject
{
    id _delegate;
    int _maxPhysicalCPUCount;
    int _maxLogicalCPUCount;
    int _curPhysicalCPUCount;
    int _curLogicalCPUCount;
    int _curActiveCPUCount;
    BOOL _supportsLogicalCPUs;
    BOOL _hwThreadsEnabled;
    int _desiredActiveCoreCount;
}

- (void).cxx_destruct;
- (void)_activeCPUCountChanged:(id)arg1;
- (void)setActiveCoreCount:(int)arg1;
- (void)enableSMT:(BOOL)arg1;
- (void)_updateActiveCores;
- (BOOL)SMTisEnabled;
- (int)activeCoreCount;
- (int)physicalCoreCount;
- (int)logicalCoreCount;
- (BOOL)coresSupportSMT;
- (int)maxPhysicalCoreCount;
- (int)maxLogicalCoreCount;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)dealloc;
- (id)init;

@end

@interface XRPreferencesModule : NSPreferencesModule <XRUIModelChangeObserver>
{
    NSView *preferencesView;
}

- (void).cxx_destruct;
- (void)modelDidChange:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface XRCPUsPreferencesModule : XRPreferencesModule <XRCPUmanagerDelegateProtocol>
{
    XRCPUmanager *_processorMgr;
    NSSlider *_activeProcessorsSlider;
    NSTextField *_activeProcessorsText;
    NSTextField *_maxProcessorsText;
    NSButton *_activeProcessorsHTCheck;
}

@property __weak NSButton *activeProcessorsHTCheck; // @synthesize activeProcessorsHTCheck=_activeProcessorsHTCheck;
@property __weak NSTextField *maxProcessorsText; // @synthesize maxProcessorsText=_maxProcessorsText;
@property __weak NSTextField *activeProcessorsText; // @synthesize activeProcessorsText=_activeProcessorsText;
@property __weak NSSlider *activeProcessorsSlider; // @synthesize activeProcessorsSlider=_activeProcessorsSlider;
- (void).cxx_destruct;
- (void)updateActiveProcessorCoreCount;
- (void)_updateActiveProcessorCoreCount;
- (void)toggleHyperThreading:(id)arg1;
- (void)changeActiveProcessorCores:(id)arg1;
- (BOOL)isResizable;
- (id)imageForPreferenceNamed:(id)arg1;
- (void)initializeFromDefaults;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRCSLoggerHelper : NSObject
{
}

+ (void)logDocumentName:(id)arg1 runIndex:(long long)arg2 processName:(id)arg3 pid:(int)arg4 threadName:(id)arg5 tid:(unsigned long long)arg6 instructionAddress:(unsigned long long)arg7 symbolAddress:(unsigned long long)arg8 symbolName:(id)arg9 libraryName:(id)arg10 kernel:(BOOL)arg11 machTime:(unsigned long long)arg12 symbolicator:(struct _CSTypeRef)arg13 kernelSymbolicator:(struct _CSTypeRef)arg14;
+ (void)logDocumentName:(id)arg1 runIndex:(long long)arg2 processRepository:(id)arg3 commonRawStack:(id)arg4 tid:(unsigned long long)arg5 machTime:(unsigned long long)arg6;
+ (id)menuItemForDetailViewObject:(id)arg1 withSelector:(SEL)arg2 andTarget:(id)arg3;

@end

@interface XRCallTreeCompareBarViewController : NSViewController <PFTDetailViewAccessory>
{
    NSPopUpButton *_mergeActionPopup;
    NSPopUpButton *_mergeTargetRunPopup;
    id <SymbolAwareRun> _mergeRun;
    XRInstrument *_instrument;
    XRCallTreeDetailView *_callTreeView;
}

- (void).cxx_destruct;
- (void)saveClicked:(id)arg1;
- (void)doneClicked:(id)arg1;
- (void)setMainView:(id)arg1;
- (int)_factor;
- (void)selectedNewMergeTarget:(id)arg1;
- (void)_refreshRunTargetsPopup;
- (void)_enumerateValidComparisonRuns:(CDUnknownBlockType)arg1;
- (void)awakeFromNib;
- (id)initWithInstrument:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRClearBackgroundButton : NSButton
{
}

+ (void)initialize;
- (void)awakeFromNib;
- (id)init;

@end

@interface XRClearBackgroundButtonCell : NSButtonCell
{
}

@end

@interface XRColoredBackgroundTextCell : NSTextFieldCell
{
    NSString *_defaultsIdentifier;
    CDUnknownBlockType _providerBlock;
}

+ (id)cellWithDefaultsIdentifier:(id)arg1 preferenceTitle:(id)arg2;
- (void).cxx_destruct;
- (void)_toggleColorBackground:(id)arg1;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)setDrawsBackground:(BOOL)arg1;
- (void)setBackgroundColorProviderBlock:(CDUnknownBlockType)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithDefaultsIdentifier:(id)arg1 preferenceTitle:(id)arg2;

@end

@interface XRCompressedStackFrameCell : NSCell
{
    NSColor *_color;
}

+ (double)suggestedCellHeight;
+ (id)sharedInstance;
@property(copy) NSColor *color; // @synthesize color=_color;
- (void).cxx_destruct;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithColor:(id)arg1;

@end

@interface XRScopedTextControl : PFTNibView <NSSplitViewDelegate>
{
    XRFlagsNavigatorControl *_historyButtons;
    NSSegmentedControl *_picker;
    NSSegmentedControl *_segments;
    NSSegmentedControl *_backdrop;
    XRTextView *_textView;
    NSImageView *_backgroundImage;
    NSView *_progressPanel;
    NSProgressIndicator *_spinner;
    NSTextField *_progressMessage;
    NSView *_recordingBar;
    NSButton *_playButton;
    NSButton *_recordButton;
    NSButton *_stopButton;
    int _waterMarkVisibility;
    BOOL _dual_view_mode;
    NSSplitView *_dualViewSplitter;
    XRTextView *_disasmView;
    NSView *_disasmProgressPanel;
    NSProgressIndicator *_disasmSpinner;
    NSTextField *_disasmProgressMessage;
    DVTSourceTextScrollView *_srcScrollView;
    DVTSourceTextScrollView *_disScrollView;
    NSTextField *_srcSelectionInfo;
    NSTextField *_disSelectionInfo;
    BOOL _showSelectionInfo;
    NSBox *_srcSelectionInfoBorder;
    NSBox *_disSelectionInfoBorder;
    BOOL _sourceIsLoaded;
    BOOL _disasmIsLoaded;
}

+ (id)_unselectedBackground;
+ (id)_selectedBackground;
+ (void)initializeColorsAndThemes;
+ (void)registerXcodeDefaults;
- (void).cxx_destruct;
- (void)splitView:(id)arg1 resizeSubviewsWithOldSize:(struct CGSize)arg2;
- (BOOL)splitView:(id)arg1 canCollapseSubview:(id)arg2;
- (BOOL)splitView:(id)arg1 shouldHideDividerAtIndex:(long long)arg2;
- (void)recordButtonClicked:(id)arg1;
- (void)stopButtonClicked:(id)arg1;
- (void)playButtonClicked:(id)arg1;
- (void)validateRecordControls;
- (void)_firstResponderDidChange:(id)arg1;
- (void)setScopeBarHidden:(BOOL)arg1;
- (id)customWatermark;
- (int)waterMarkVisibility;
- (void)setWaterMarkVisibility:(int)arg1;
- (void)viewDidMoveToWindow;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)setRecordBarHidden:(BOOL)arg1;
- (BOOL)selectionStatsVisible;
- (void)showSelectionInfo:(BOOL)arg1;
- (void)updateSelectionToolTipsForSourceView:(id)arg1 andDisasmView:(id)arg2;
- (void)updateSelectionInfoForSourceView:(id)arg1 andDisasmView:(id)arg2;
- (id)disasmView;
- (id)textView;
- (id)detailViewLabel;
- (BOOL)dualView;
- (void)enableDualView:(BOOL)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRConsoleControl : XRScopedTextControl <XRLazyKVOResponder, DVTSourceTextViewDelegate, XRFilteredDataSource>
{
    PFTTraceDocument *_traceDocument;
    NSArrayController *_logController;
    BOOL _logObserved;
    unsigned long long _logCount;
    NSPredicate *_textFilterPredicate;
    long long _lastFilteredEntryDisplayed;
    int _previousType;
    NSMutableArray *_logEventPositionLineRanges;
    NSMutableArray *_logEventPositionEvents;
    BOOL _selectingEvent;
    NSRulerMarker *_timeSelectedMarker;
    struct _NSRange _outputRange;
    struct _NSRange _promptRange;
    XRLazyKVOAdapter *_kvoAdapter;
}

+ (void)initialize;
- (void).cxx_destruct;
- (void)setSelectedEvent:(id)arg1;
- (void)_moveMarkerToLine:(unsigned long long)arg1;
- (id)samplesInRange:(struct XRTimeRange)arg1;
- (void)inspectionHeadUpdated:(id)arg1;
- (void)filterDetailWithTokens:(id)arg1 context:(id)arg2 matchesAny:(BOOL)arg3;
- (void)_runDidEnd:(id)arg1;
- (void)_logUpdated:(id)arg1;
- (BOOL)textView:(id)arg1 doCommandBySelector:(SEL)arg2;
- (struct _NSRange)textView:(id)arg1 willChangeSelectionFromCharacterRange:(struct _NSRange)arg2 toCharacterRange:(struct _NSRange)arg3;
- (BOOL)textView:(id)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementString:(id)arg3;
- (void)updateLogWithEventRange:(struct _NSRange)arg1 clearBeforeUpdate:(BOOL)arg2;
- (id)promptString;
- (void)viewWillMoveToSuperview:(id)arg1;
- (void)observeRunNumber:(long long)arg1;
- (void)handleLazyKVOUpdate:(id)arg1;
- (void)setFilterPredicate:(id)arg1;
- (void)applyCurrentFilter;
- (void)_clearTextView;
- (void)_setWatermark;
- (id)customWatermark;
- (id)detailViewLabel;
- (id)classForNibName;
- (void)dealloc;
- (void)invalidate;
- (id)initWithDocument:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRContextPathControl : PFTPathControl <XRAccessiblePathCellDelegate>
{
    XRContext *_currentContext;
    NSMutableSet *_observedContainers;
}

- (void).cxx_destruct;
- (id)pathCell:(id)arg1 accessibilityDescriptionForPathComponentCell:(id)arg2 atIndex:(unsigned long long)arg3;
- (void)cells:(id)arg1 appendCellsForTarget:(id)arg2 fromRoot:(id)arg3;
- (void)update;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)_contextMenuClicked:(id)arg1;
- (void)_contextClicked:(id)arg1;
- (void)_contextSelectedByUser:(id)arg1 cell:(id)arg2 title:(id)arg3;
- (void)_discloseDetailForContext:(id)arg1;
- (void)_displayContext:(id)arg1;
- (void)setContext:(id)arg1;
- (void)dealloc;
- (void)awakeFromNib;
- (id)initWithContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRControlBand : NSView
{
}

- (void)drawRect:(struct CGRect)arg1;

@end

@interface XRControlBandViewController : NSViewController
{
    NSTextField *_styleChooserLabel;
    NSPopUpButton *_styleChooser;
    XRInstrument *_instrument;
}

+ (void)initialize;
@property(retain, nonatomic) XRInstrument *instrument; // @synthesize instrument=_instrument;
@property(nonatomic) __weak NSPopUpButton *styleChooser; // @synthesize styleChooser=_styleChooser;
@property(nonatomic) __weak NSTextField *styleChooserLabel; // @synthesize styleChooserLabel=_styleChooserLabel;
- (void).cxx_destruct;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)awakeFromNib;
- (void)dealloc;
- (id)initWithInstrument:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

@end

@interface XRDaemonExecOptionsViewController : XRExecOptionsViewController
{
}

- (void)awakeFromNib;

@end

@interface XRFileExplorerViewController : NSViewController <XRTopicInterfaceComponent>
{
    BOOL _ignoreDirectPathEntry;
    XRTopic *_subTopic;
    NSBrowser *_browser;
    XRDeviceTopic *_topic;
    id <XRFileSystem> _fileSystem;
}

@property(readonly, nonatomic) id <XRFileSystem> fileSystem; // @synthesize fileSystem=_fileSystem;
@property(readonly, nonatomic) XRDeviceTopic *topic; // @synthesize topic=_topic;
@property(nonatomic) __weak NSBrowser *browser; // @synthesize browser=_browser;
@property(retain, nonatomic) XRTopic *subTopic; // @synthesize subTopic=_subTopic;
- (void).cxx_destruct;
- (void)_selectItemAtPath:(id)arg1 reparentIfNeeded:(BOOL)arg2;
- (void)_selectItemAtPath:(id)arg1;
- (int)topicViewer:(id)arg1 handleKeyDown:(id)arg2;
- (void)refresh;
- (void)reloadData;
- (void)applyResult:(id)arg1;
- (void)select:(id)arg1;
@property(readonly, nonatomic) NSString *filename;
@property(readonly, nonatomic) NSDictionary *selectedItem;
- (id)validateSelection;
- (id)launchOptionsUserInterfaceComponentIdentifier;
- (void)awakeFromNib;
- (id)initWithTopic:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRDaemonExplorerViewController : XRFileExplorerViewController
{
}

- (id)launchOptionsUserInterfaceComponentIdentifier;

@end

@interface XRDataElementSummaryViewController : NSViewController
{
    int _style;
    PFTDataElement *_element;
    NSTextField *_titleField;
    DVTGradientImageButton *_configurationButton;
    NSView *_dataView;
    NSLayoutConstraint *_dataTopConstraint;
}

@property(retain, nonatomic) NSLayoutConstraint *dataTopConstraint; // @synthesize dataTopConstraint=_dataTopConstraint;
@property(nonatomic) __weak NSView *dataView; // @synthesize dataView=_dataView;
@property(nonatomic) __weak DVTGradientImageButton *configurationButton; // @synthesize configurationButton=_configurationButton;
@property(nonatomic) __weak NSTextField *titleField; // @synthesize titleField=_titleField;
@property(readonly, nonatomic) PFTDataElement *element; // @synthesize element=_element;
- (void).cxx_destruct;
- (void)viewWillAppear;
- (void)viewDidAppear;
- (void)reloadData;
- (void)awakeFromNib;
- (id)initWithDataElement:(id)arg1 style:(int)arg2;

@end

@interface XRDecoratorState : NSObject
{
    NSColor *_fillColor;
    NSColor *_strokeColor;
    NSGradient *_gradient;
    NSImage *_gradientImageSlice;
    struct CGImage *_gradientCGImageSlice;
    double _gradientSliceHeight;
    double _gradientAngle;
    double _lineWidth;
    unsigned long long _hash;
    struct CGAffineTransform _transform;
    BOOL _hasTransform;
}

- (void).cxx_destruct;
- (struct CGAffineTransform)transform;
- (void)setTransform:(struct CGAffineTransform)arg1;
- (void)drawGradientInRect:(struct CGRect)arg1 context:(struct CGContext *)arg2;
- (id)gradient;
- (id)strokeColor;
- (id)fillColor;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (void)setInContext:(struct CGContext *)arg1;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithGradient:(id)arg1 gradientAngle:(double)arg2;
- (id)initWithFillColor:(id)arg1 strokeColor:(id)arg2 lineWidth:(double)arg3;
- (id)initWithFillColor:(id)arg1 strokeColor:(id)arg2 gradient:(id)arg3 gradientAngle:(double)arg4 lineWidth:(double)arg5;

@end

@interface XRNonInteractiveModeViewController : NSViewController
{
    NSProgress *_progress;
    NSTimer *_updatePollTimer;
}

- (void).cxx_destruct;
- (void)_poll:(id)arg1;
- (void)setProgress:(id)arg1;
- (void)viewDidDisappear;
- (void)viewWillAppear;
- (void)dealloc;

@end

@interface XRDeferredModeViewController : XRNonInteractiveModeViewController
{
}

- (void)_setProgressMessage:(id)arg1;
- (void)_setProgressCompletion:(double)arg1;
- (void)loadView;

@end

@interface XRDetailViewBusyModeController : XRNonInteractiveModeViewController
{
    NSProgressIndicator *_progressView;
    NSTextField *_progressText;
}

@property(nonatomic) __weak NSTextField *progressText; // @synthesize progressText=_progressText;
@property(nonatomic) __weak NSProgressIndicator *progressView; // @synthesize progressView=_progressView;
- (void).cxx_destruct;
- (void)_setProgressMessage:(id)arg1;
- (void)_setProgressCompletion:(double)arg1;
- (void)viewDidLoad;
- (id)init;

@end

@interface XRDetailViewFatalErrorViewController : NSViewController
{
    NSString *_reasonString;
    NSTextField *_reasonField;
}

@property __weak NSTextField *reasonField; // @synthesize reasonField=_reasonField;
@property(copy, nonatomic) NSString *reasonString; // @synthesize reasonString=_reasonString;
- (void).cxx_destruct;
- (void)viewWillAppear;
- (void)viewDidLoad;
- (id)init;

@end

@interface XREngineeringTypeFormatter : NSFormatter
{
    NSNumberFormatter *_countFormatter;
    NSNumberFormatter *_intIDFormatter;
    XRTrace *_trace;
    long long _runNumber;
}

+ (id)stringForValue:(id)arg1 trace:(id)arg2 runNumber:(long long)arg3;
- (void).cxx_destruct;
- (BOOL)getObjectValue:(out id *)arg1 forString:(id)arg2 errorDescription:(out id *)arg3;
- (id)attributedStringForObjectValue:(id)arg1 withDefaultAttributes:(id)arg2;
- (id)stringForObjectValue:(id)arg1;
- (id)init;
- (id)initWithTrace:(id)arg1 runNumber:(long long)arg2;

@end

@interface XREngineeringTypeSortDescriptor : NSSortDescriptor <XRAnalysisCoreSortDescriptor>
{
}

- (long long)compareObject:(id)arg1 toObject:(id)arg2;
- (id)initWithTrace:(id)arg1 runNumber:(long long)arg2 columnIdentifier:(id)arg3 ascending:(BOOL)arg4;

@end

@interface XRExistanceProjectorForTableColumn : NSObject
{
    unsigned char _columnID;
    unsigned char _subColumnID;
    unsigned int _tableID;
    XRAnalysisCoreProjector *_projector;
    unsigned long long _lastCount;
    NSMutableDictionary *_subProjections;
}

@property(readonly, retain, nonatomic) NSMutableDictionary *subProjections; // @synthesize subProjections=_subProjections;
@property(readonly, nonatomic) unsigned char subColumnID; // @synthesize subColumnID=_subColumnID;
@property(nonatomic) unsigned long long lastCount; // @synthesize lastCount=_lastCount;
@property(readonly, retain, nonatomic) XRAnalysisCoreProjector *projector; // @synthesize projector=_projector;
@property(nonatomic) unsigned char columnID; // @synthesize columnID=_columnID;
@property(nonatomic) unsigned int tableID; // @synthesize tableID=_tableID;
- (void).cxx_destruct;
- (BOOL)hasSubColumn;
- (id)initWithProjector:(id)arg1 tableID:(unsigned int)arg2 columnID:(unsigned char)arg3 subColumnID:(unsigned char)arg4;
- (id)initWithProjector:(id)arg1 tableID:(unsigned int)arg2 columnID:(unsigned char)arg3;

@end

@interface XRExistanceProjectorsForTable : NSObject
{
    XRIntKeyedDictionary *_projectorsByTableColumn;
}

@property(retain, nonatomic) XRIntKeyedDictionary *projectorsByTableColumn; // @synthesize projectorsByTableColumn=_projectorsByTableColumn;
- (void).cxx_destruct;
- (id)init;

@end

@interface XRExistenceProjectorsForRun : NSObject
{
    XRIntKeyedDictionary *_tableProjectors;
}

@property(retain, nonatomic) XRIntKeyedDictionary *tableProjectors; // @synthesize tableProjectors=_tableProjectors;
- (void).cxx_destruct;
- (id)init;

@end

@interface XRFileSystemBrowserPreviewViewController : NSViewController
{
    id <XRFileSystem> _fileSystem;
}

@property(retain) id <XRFileSystem> fileSystem; // @synthesize fileSystem=_fileSystem;
- (void).cxx_destruct;
@property(readonly) NSImage *representedItemIcon;
@property(readonly) NSString *representedItemFilename;

@end

@interface XRFlagDecorator : DTTimelineDecorator
{
    XRFlagController *_controller;
}

- (void).cxx_destruct;
- (id)decorateContainer:(struct DTTimelineDecorationContainer *)arg1;
- (void)setDefaultsForPlane:(id)arg1;
- (id)initWithController:(id)arg1;

@end

@interface XRFlagsNavigatorControl : NSSegmentedControl <NSMenuDelegate>
{
    BOOL _isSetup;
    XRManagedObjectList *_flags;
    BOOL _observingFlags;
    NSMenu *_previousMenu;
    NSMenu *_nextMenu;
}

- (void).cxx_destruct;
- (void)_flagChosen:(id)arg1;
- (void)menuNeedsUpdate:(id)arg1;
- (void)_segmentClicked:(id)arg1;
- (void)viewDidMoveToWindow;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)setFlags:(id)arg1;
- (void)_updateControl;
- (void)viewWillMoveToSuperview:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 flags:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRFlatCheckboxCell : NSButtonCell
{
    BOOL _inTitleRectCheck;
}

- (id)attributedTitle;
- (struct CGRect)titleRectForBounds:(struct CGRect)arg1;
- (struct CGRect)_imageRectWithRect:(struct CGRect *)arg1;
- (struct CGRect)imageRectForBounds:(struct CGRect)arg1;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (BOOL)trackMouse:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3 untilMouseUp:(BOOL)arg4;

@end

@interface XRFlippedClipView : NSClipView
{
}

- (BOOL)isFlipped;

@end

@interface XRFloatValueAnimation : NSAnimation
{
    double _fromPosition;
    double _toPosition;
    double _position;
}

@property double position; // @synthesize position=_position;
@property double toPosition; // @synthesize toPosition=_toPosition;
@property double fromPosition; // @synthesize fromPosition=_fromPosition;
- (void)setCurrentProgress:(float)arg1;

@end

@interface XRGeneralActionPlugIn : XRActionHandler
{
}

- (void)lookupAPIWithTargets:(id)arg1 withContext:(id)arg2;
- (BOOL)validateXrayContextAction:(id)arg1;
- (void)_progressSheetEnded:(id)arg1 returnCode:(int)arg2 contextInfo:(void *)arg3;
- (void)symbolInspector:(id)arg1 withContext:(id)arg2;

@end

@interface XRGeneralPreferencesModule : XRPreferencesModule <NSOpenSavePanelDelegate, NSTextFieldDelegate>
{
}

- (void)resetDontAskMeWarnings:(id)arg1;
- (BOOL)isResizable;
- (id)imageForPreferenceNamed:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRGenericFillView : NSView
{
}

- (void)drawRect:(struct CGRect)arg1;

@end

@interface XRHelpButton : NSButton
{
    NSString *_helpURL;
}

@property(retain, nonatomic) NSString *helpURL; // @synthesize helpURL=_helpURL;
- (void).cxx_destruct;
- (void)_openHelp:(id)arg1;
- (void)awakeFromNib;
- (id)init;

@end

@interface XRHelpManager : NSObject
{
}

+ (id)defaultHelpManager;
- (void)displayUUID:(id)arg1;
- (void)displayAppleRef:(id)arg1;
- (void)displayURL:(id)arg1;
- (id)init;

@end

@interface XRHorizontalFillSplitView : NSSplitView <NSAnimationDelegate>
{
    XRSplitViewAnimation *_animation;
    BOOL _hideDivider;
}

@property BOOL hideDivider; // @synthesize hideDivider=_hideDivider;
- (void).cxx_destruct;
- (void)animationDidMakeProgress:(id)arg1;
- (void)animateSplitFromPosition:(double)arg1 toPosition:(double)arg2;
- (double)dividerThickness;
- (void)drawDividerInRect:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRIconMessageWatermark : NSView
{
    NSImage *_backgroundImage;
    BOOL _renderingSelf;
    NSTextField *_label;
    XRProgressIndicator *_progressIndicator;
}

- (void).cxx_destruct;
- (void)drawRect:(struct CGRect)arg1;
- (BOOL)isOpaque;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (void)setPercentageProgress:(float)arg1;
- (void)setMessage:(id)arg1;
- (id)initWithImage:(id)arg1 message:(id)arg2;

@end

@interface XRImagePickerCell : NSButtonCell
{
    BOOL _mouseInside;
    long long _mouseCellTag;
}

- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)cursorUpdate:(id)arg1;
- (void)mouseMoved:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;

@end

@interface XRImagePickerGrid : NSMatrix
{
    NSMutableArray *_trackingAreas;
}

- (void).cxx_destruct;
- (void)updateTrackingAreas;
- (void)loadImages:(id)arg1;
- (void)_layoutCells:(long long)arg1;
- (void)dealloc;
- (id)init;

@end

@interface XRImagePickerView : NSImageView
{
    BOOL _mouseInside;
    NSTrackingArea *_trackingArea;
    id <XRImagePickerDelegate> _delegate;
    NSMenu *_menu;
}

- (void).cxx_destruct;
- (void)drawRect:(struct CGRect)arg1;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)_displayMenu:(id)arg1;
- (void)_imageSelected:(id)arg1;
- (void)updateTrackingAreas;
- (void)cursorUpdate:(id)arg1;
- (void)mouseMoved:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (BOOL)wantsPeriodicDraggingUpdates;
- (void)draggingEnded:(id)arg1;
- (void)concludeDragOperation:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (BOOL)prepareForDragOperation:(id)arg1;
- (void)draggingExited:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (void)dealloc;
- (void)awakeFromNib;

@end

@interface XRInfiniteLineBox : NSView
{
    NSColor *_lineColor;
    double _fadeLength;
}

@property double fadeLength; // @synthesize fadeLength=_fadeLength;
@property(retain) NSColor *lineColor; // @synthesize lineColor=_lineColor;
- (void).cxx_destruct;
- (double)_fadeLengthAsPercentOfLength;
@property(readonly) unsigned long long orientation;
- (void)drawRect:(struct CGRect)arg1;
- (void)_ide_infiniteLineBoxCommonInit;
- (void)awakeFromNib;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface XRInspectionHeadDecorator : DTTimelineDecorator
{
    unsigned long long _inspectionTime;
}

@property(nonatomic) unsigned long long inspectionTime; // @synthesize inspectionTime=_inspectionTime;
- (id)decorateContainer:(struct DTTimelineDecorationContainer *)arg1;
- (void)setDefaultsForPlane:(id)arg1;
- (id)init;

@end

@interface XRInspector : NSObject <NSPopoverDelegate>
{
    id <XRInspectorSource> _source;
    id <XRInspectorDelegate> _delegate;
    NSPopover *_popover;
    NSView *_positioningView;
    unsigned long long _preferredEdge;
}

@property(nonatomic) unsigned long long preferredEdge; // @synthesize preferredEdge=_preferredEdge;
@property(retain, nonatomic) NSView *positioningView; // @synthesize positioningView=_positioningView;
@property(retain, nonatomic) NSPopover *popover; // @synthesize popover=_popover;
@property(nonatomic) __weak id <XRInspectorDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) __weak id <XRInspectorSource> source; // @synthesize source=_source;
- (void).cxx_destruct;
- (void)popoverDidClose:(id)arg1;
- (void)close;
- (void)reload;
- (id)initWithSource:(id)arg1 popover:(id)arg2 delegate:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRInspectorManager : NSObject <XRInspectorDelegate>
{
    NSMutableSet *_inspectors;
}

+ (id)sharedInspectorManager;
@property(retain, nonatomic) NSMutableSet *inspectors; // @synthesize inspectors=_inspectors;
- (void).cxx_destruct;
- (id)_inspectorForSource:(id)arg1;
- (void)inspectorDidClose:(id)arg1;
- (id)inspectorsForWindow:(id)arg1;
- (void)closeInspectorsOnWindow:(id)arg1;
- (void)closeInspectorAttachedToSource:(id)arg1;
- (void)moveInspectorAttachedToSource:(id)arg1 toRect:(struct CGRect)arg2;
- (void)toggleInspectorAttachedToSource:(id)arg1 tipArea:(struct CGRect)arg2 view:(id)arg3;
- (void)reloadInspectorAttachedToSource:(id)arg1;
- (void)attachInspectorToSource:(id)arg1 tipArea:(struct CGRect)arg2 view:(id)arg3;
- (void)attachInspectorToSource:(id)arg1 tipArea:(struct CGRect)arg2 view:(id)arg3 preferredEdge:(unsigned long long)arg4;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRInspectorView : NSView
{
    BOOL _observingWindowChanges;
    NSLayoutConstraint *_maxHeightConstraint;
}

@property(retain, nonatomic) NSLayoutConstraint *maxHeightConstraint; // @synthesize maxHeightConstraint=_maxHeightConstraint;
- (void).cxx_destruct;
- (void)_setMaxHeightForWindow:(id)arg1;
- (void)windowDidChangeScreenHandler:(id)arg1;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)viewDidMoveToWindow;
- (void)dealloc;

@end

@interface XRInspectorViewController : NSViewController
{
    PFTDataView *_dataView;
    id <XRInspectorSource> _dataSource;
    PFTDataElementList *_model;
}

@property(retain) PFTDataElementList *model; // @synthesize model=_model;
@property __weak id <XRInspectorSource> dataSource; // @synthesize dataSource=_dataSource;
@property __weak PFTDataView *dataView; // @synthesize dataView=_dataView;
- (void).cxx_destruct;
- (void)_updateModel;
- (id)supplementalTargetForAction:(SEL)arg1 sender:(id)arg2;
- (void)reload;
- (void)awakeFromNib;
- (id)initWithDataSource:(id)arg1;
- (id)init;

@end

@interface XRInstrumentDebuggerWindowController : NSWindowController <NSOutlineViewDelegate, NSTextViewDelegate, NSTableViewDataSource, NSTableViewDelegate>
{
    BOOL _alreadyUpdating;
    BOOL _fetching;
    BOOL _observingSelf;
    _XRCLIPSDebuggerChooserState *_clipsDebuggerChooser;
    NSOperation *_currentFetchOp;
    NSMutableArray *_navigatorItems;
    NSNumber *_debuggerPanelDetailMode;
    _XRDebuggerTableDetail *_selectedTableDetail;
    NSDictionary *_coreSchemasByName;
    NSArray *_knownPaths;
    NSArray *_tableBindings;
    NSArray *_modelerInstances;
    NSOutlineView *_navigatorView;
    NSView *_inspectorPane;
    NSView *_schemaDetailView;
    NSScrollView *_factDetailView;
    NSScrollView *_pathsDetailView;
    NSScrollView *_consoleDetailView;
    NSTextView *_commandView;
    NSSplitView *_tableBindingDetailView;
    NSSplitView *_modelersDetailView;
    NSView *_clipsDebuggerDetail;
    NSArrayController *_debuggerArrayController;
    NSTreeController *_navigatorTreeController;
    NSArrayController *_tableArrayController;
    NSSegmentedControl *_consolePicker;
    XRAnalysisCoreTableViewController *_tableContentsViewController;
}

@property(retain) XRAnalysisCoreTableViewController *tableContentsViewController; // @synthesize tableContentsViewController=_tableContentsViewController;
@property __weak NSSegmentedControl *consolePicker; // @synthesize consolePicker=_consolePicker;
@property __weak NSArrayController *tableArrayController; // @synthesize tableArrayController=_tableArrayController;
@property __weak NSTreeController *navigatorTreeController; // @synthesize navigatorTreeController=_navigatorTreeController;
@property __weak NSArrayController *debuggerArrayController; // @synthesize debuggerArrayController=_debuggerArrayController;
@property __weak NSView *clipsDebuggerDetail; // @synthesize clipsDebuggerDetail=_clipsDebuggerDetail;
@property __weak NSSplitView *modelersDetailView; // @synthesize modelersDetailView=_modelersDetailView;
@property __weak NSSplitView *tableBindingDetailView; // @synthesize tableBindingDetailView=_tableBindingDetailView;
@property NSTextView *commandView; // @synthesize commandView=_commandView;
@property __weak NSScrollView *consoleDetailView; // @synthesize consoleDetailView=_consoleDetailView;
@property __weak NSScrollView *pathsDetailView; // @synthesize pathsDetailView=_pathsDetailView;
@property __weak NSScrollView *factDetailView; // @synthesize factDetailView=_factDetailView;
@property(retain) NSView *schemaDetailView; // @synthesize schemaDetailView=_schemaDetailView;
@property __weak NSView *inspectorPane; // @synthesize inspectorPane=_inspectorPane;
@property __weak NSOutlineView *navigatorView; // @synthesize navigatorView=_navigatorView;
@property(retain, nonatomic) NSArray *modelerInstances; // @synthesize modelerInstances=_modelerInstances;
@property(retain, nonatomic) NSArray *tableBindings; // @synthesize tableBindings=_tableBindings;
@property(retain, nonatomic) NSArray *knownPaths; // @synthesize knownPaths=_knownPaths;
@property(retain, nonatomic) NSDictionary *coreSchemasByName; // @synthesize coreSchemasByName=_coreSchemasByName;
@property(retain, nonatomic) _XRDebuggerTableDetail *selectedTableDetail; // @synthesize selectedTableDetail=_selectedTableDetail;
@property(nonatomic) NSNumber *debuggerPanelDetailMode; // @synthesize debuggerPanelDetailMode=_debuggerPanelDetailMode;
@property(retain, nonatomic) NSMutableArray *navigatorItems; // @synthesize navigatorItems=_navigatorItems;
@property(retain, nonatomic) NSOperation *currentFetchOp; // @synthesize currentFetchOp=_currentFetchOp;
@property(nonatomic) BOOL observingSelf; // @synthesize observingSelf=_observingSelf;
@property(nonatomic, getter=isFetching) BOOL fetching; // @synthesize fetching=_fetching;
@property(retain, nonatomic) _XRCLIPSDebuggerChooserState *clipsDebuggerChooser; // @synthesize clipsDebuggerChooser=_clipsDebuggerChooser;
- (void).cxx_destruct;
- (void)instanceModelers:(id)arg1;
- (void)runBindingSolver:(id)arg1;
- (void)refresh:(id)arg1;
- (void)textDidEndEditing:(id)arg1;
- (BOOL)outlineView:(id)arg1 shouldSelectItem:(id)arg2;
- (id)outlineView:(id)arg1 viewForTableColumn:(id)arg2 item:(id)arg3;
@property(readonly) PFTTraceDocument *traceDocument;
- (BOOL)shouldCloseDocument;
- (id)windowFrameAutosaveName;
- (id)windowTitleForDocumentDisplayName:(id)arg1;
- (void)_eventHorizonMoved:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)dealloc;
- (void)windowDidLoad;
- (void)_fullFetch;
- (id)_chosenModuleName;
- (void)_updateUIState;
- (id)initWithWindow:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRInstrumentMenuController : NSObject <NSMenuDelegate>
{
    BOOL _isInvalid;
    NSMenu *_menu;
    PFTDocumentController *_controller;
}

@property(nonatomic) __weak PFTDocumentController *controller; // @synthesize controller=_controller;
@property(nonatomic) __weak NSMenu *menu; // @synthesize menu=_menu;
- (void).cxx_destruct;
- (BOOL)validateMenuItem:(id)arg1;
- (void)setControllerNeedsUpdate;
- (void)_invokeRefreshMenuItems;
- (void)_metaUIInvokeAction:(id)arg1;
- (void)_handleInstrumentStateChange:(id)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRInstrumentStrategyTopLevelItem : NSObject
{
    XRTrack *_blankTrack;
    DTTimelineGroupPlane *_plane;
    DTTimelineGroupPlane *_containerPlane;
    XRIntKeyedDictionary *_tracksByRunNumber;
    long long _maxKnownIndex;
}

@property(readonly, nonatomic) long long maxKnownIndex; // @synthesize maxKnownIndex=_maxKnownIndex;
@property(readonly, nonatomic) XRIntKeyedDictionary *tracksByRunNumber; // @synthesize tracksByRunNumber=_tracksByRunNumber;
@property(readonly, nonatomic) DTTimelineGroupPlane *containerPlane; // @synthesize containerPlane=_containerPlane;
@property(readonly, nonatomic) DTTimelineGroupPlane *plane; // @synthesize plane=_plane;
- (void).cxx_destruct;
- (void)updateStatus:(id)arg1;
- (void)handleBrushChange:(id)arg1;
- (id)representativePlaneForManager:(id)arg1 instrument:(id)arg2;
- (void)syncPlanesWithManager:(id)arg1 trace:(id)arg2 resolution:(unsigned long long)arg3 instrument:(id)arg4;
- (void)syncPlanesWithManager:(id)arg1 trace:(id)arg2 resolution:(unsigned long long)arg3 instrument:(id)arg4 forEmbedding:(BOOL)arg5;
- (id)init;

@end

@interface XRInstrumentsStrategyUIController : XRStrategyUIController
{
    NSMutableDictionary *_topLevelItemsByUUID;
    XRInstrumentStrategyTopLevelItem *_selectedInstrumentTopLevelItem;
    long long _lastRunNumberSelected;
    BOOL _instrumentListMutated;
    BOOL _instrumentSelectionMutated;
    BOOL _fullTrackRefresh;
    DTTimelineDecoratedPlane *_overlayPlane;
    XRAnalysisCoreConnectionIntervalDecorator *_connectionsDecorator;
    XRLazyKVOAdapter *_kvoAdapter;
    XRInstrumentsTimelineAccessibilityElement *_timelineAccessibilityElement;
    id _selectionObject;
}

+ (id)_requiredStrategyControllerIdentifier;
@property(retain, nonatomic) id selectionObject; // @synthesize selectionObject=_selectionObject;
- (void).cxx_destruct;
- (void)handleLazyKVOUpdate:(id)arg1;
- (void)deleteForward:(id)arg1;
- (void)deleteBackward:(id)arg1;
- (void)keyDown:(id)arg1;
- (BOOL)_performDragOperation:(id)arg1;
- (BOOL)_prepareForDragOperation:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (unsigned long long)_draggingEntered:(id)arg1;
- (void)_setDeckUnits:(long long)arg1 forRepresentedObject:(id)arg2;
- (void)_collapseRepresentedObject:(id)arg1;
- (void)_expandRepresentedObject:(id)arg1;
- (void)_replaceOldState:(id)arg1 withState:(id)arg2;
- (id)_defaultState;
- (void)_resolutionDidChange;
- (void)_populateExtendedDetailModel;
- (void)_eventHorizonAdvancedThroughRange:(struct XRTimeRange)arg1;
- (void)_inspectionTimeIs:(unsigned long long)arg1;
- (void)_documentUpdateFilterForRunNumber:(long long)arg1;
- (void)_setModelSelection:(id)arg1;
- (id)_topLevelItemForInstrument:(id)arg1;
- (void)_resetPlanesInTimeline;
- (void)_updateOverlayPlaneAfterModelChange;
- (void)_refreshConnectionsModelForRunNumber:(long long)arg1;
- (void)_createConnectionsIntervalDecoratorForRunNumber:(long long)arg1;
- (id)_currentSelectionFilteredDataSource;
- (id)_currentSelectionContext:(id)arg1 container:(id)arg2;
- (id)_currentSelectionIcon;
- (void)_finalShutdownHandler;
- (void)_takeControlOfDetailView;
- (void)_forceInstrumentSelection;
- (void)_updateSelectedPlanes;
- (void)_handleConsolidatedModelRefresh;
- (void)_setTimelineGraph:(id)arg1;
- (void)setModel:(id)arg1;
- (void)selectInstrument:(id)arg1;
- (id)planeForSelection:(id)arg1 embeddableInTimeline:(id)arg2;
- (id)shortDescription;
- (id)smallIconAlternate;
- (id)smallIcon;
- (id)displayName;
- (id)_state;
- (id)init;

@end

@interface XRStrategyUIControllerState : NSObject <NSSecureCoding, NSCopying>
{
    double _timelineGraphYOffset;
    XRIntKeyedDictionary *_userInterfacePlansByRunNumber;
}

+ (BOOL)supportsSecureCoding;
+ (id)encodedKeyClasses;
+ (id)archivableKeys;
@property(retain, nonatomic) XRIntKeyedDictionary *userInterfacePlansByRunNumber; // @synthesize userInterfacePlansByRunNumber=_userInterfacePlansByRunNumber;
@property(nonatomic) double timelineGraphYOffset; // @synthesize timelineGraphYOffset=_timelineGraphYOffset;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)init;

@end

@interface XRInstrumentsStrategyUIControllerState : XRStrategyUIControllerState
{
    NSMutableSet *_instrumentUUIDsWithDisclosedRuns;
}

+ (id)archivableKeys;
@property(readonly, nonatomic) NSMutableSet *instrumentUUIDsWithDisclosedRuns; // @synthesize instrumentUUIDsWithDisclosedRuns=_instrumentUUIDsWithDisclosedRuns;
- (void).cxx_destruct;
- (id)init;

@end

@interface XRInstrumentsTimelineAccessibilityElement : XRAccessibilityElement <NSAccessibilityOutline>
{
    XRInstrumentsStrategyUIController *_UIController;
    NSMutableArray *_rows;
    XRTimelineItemAccessibilityElement *_selectedInstrumentAE;
}

- (void).cxx_destruct;
- (id)accessibilityHelp;
- (void)setAccessibilitySelectedRows:(id)arg1;
- (id)accessibilitySelectedRows;
- (struct CGRect)accessibilityFrame;
- (id)accessibilityParent;
- (id)accessibilityRows;
- (id)accessibilityLabel;
- (void)rebuild;
- (id)initWithInstrumentsStrategyUIController:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRLibraryColoredBackgroundTextCell : XRColoredBackgroundTextCell
{
}

- (id)initWithDefaultsIdentifier:(id)arg1 preferenceTitle:(id)arg2;

@end

@interface XRLibraryProxy : NSObject
{
    BOOL _didOpenMasterTrack;
    DTAssetCategory *_instrumentCategory;
    NSMutableDictionary *_identifiedAssets;
    NSMutableDictionary *_groupedAssets;
    NSMutableDictionary *_namedAssets;
}

+ (id)sharedLibraryProxy;
+ (void)initialize;
- (void).cxx_destruct;
- (void)assetLibrary:(id)arg1 didFinishDraggingAssets:(id)arg2 info:(id)arg3 shouldSlideBack:(char *)arg4;
- (void)assetLibrary:(id)arg1 willBeginDraggingAssets:(id)arg2;
- (id)assetLibrary:(id)arg1 alternateDragImageForAssets:(id)arg2;
- (BOOL)assetLibrary:(id)arg1 depositAssets:(id)arg2;
- (BOOL)assetLibrary:(id)arg1 shouldShowGridLinesForAssetViewStyle:(long long)arg2;
- (id)assetLibrarySmartGroupRuleDefinitionsPropertyList:(id)arg1;
- (id)assetLibrary:(id)arg1 createViewForSmartRuleViewID:(id)arg2;
- (id)assetLibrary:(id)arg1 smartGroupRuleDefinitionsPropertyListForCategory:(id)arg2;
- (id)assetLibrary:(id)arg1 pasteboardTypesForAssetCategory:(id)arg2;
- (BOOL)assetLibrary:(id)arg1 createAsset:(id *)arg2 andImage:(id *)arg3 forAssetSourceWithIdentifier:(id *)arg4 fromPasteboard:(id)arg5 forInsertingIntoAssetCategory:(id)arg6;
- (void)assetLibrary:(id)arg1 removeAssets:(id)arg2;
- (BOOL)assetLibrary:(id)arg1 canRemoveAsset:(id)arg2;
- (BOOL)assetLibrary:(id)arg1 canCreateAssetsFromPasteboard:(id)arg2 forAssetCategory:(id)arg3;
- (void)assetLibrary:(id)arg1 populatePasteboard:(id)arg2 withAssets:(id)arg3;
- (id)assetLibrary:(id)arg1 searchTermsForAsset:(id)arg2;
- (void)setVisible:(BOOL)arg1;
- (void)toggleVisibility;
- (void)instrumentRemoved:(id)arg1;
- (void)instrumentAdded:(id)arg1;
- (void)removeType:(id)arg1;
- (void)showHelpForInstrument:(id)arg1;
- (void)addType:(id)arg1;
- (void)removeAssetWithIdentifier:(id)arg1;
- (id)init;

@end

@interface XRLibraryToolbarItem : XRToolbarItem
{
}

- (void)connectToContext:(id)arg1;
- (id)_createPre1010Control;
- (id)_create1010AndLaterControl;

@end

@interface XRMainWindowUIState : NSObject <NSSecureCoding>
{
    int _currentLayout;
    NSString *_selectedStrategyIdentifier;
    double _splitterValue;
    unsigned long long _inspectionTime;
    unsigned long long _nanosecondsPerPoint;
    unsigned long long _trackTimeOffset;
    double _trackYOffset;
    id <NSCoding><NSObject> _displayedDetailContextValue;
    NSString *_mode;
    struct XRTimeRange _selectedTimeRange;
}

+ (BOOL)supportsSecureCoding;
+ (id)keyPathsForValuesAffectingInspectionTimeInSeconds;
+ (id)keyPathsForValuesAffectingLowerDisplayHidden;
+ (id)keyPathsForValuesAffectingEventInspectorHidden;
+ (id)keyPathsForValuesAffectingSelectedStrategy;
+ (long long)version;
@property(retain, nonatomic) NSString *mode; // @synthesize mode=_mode;
@property(retain, nonatomic) id <NSCoding><NSObject> displayedDetailContextValue; // @synthesize displayedDetailContextValue=_displayedDetailContextValue;
@property(nonatomic) double trackYOffset; // @synthesize trackYOffset=_trackYOffset;
@property(nonatomic) unsigned long long trackTimeOffset; // @synthesize trackTimeOffset=_trackTimeOffset;
@property(nonatomic) unsigned long long nanosecondsPerPoint; // @synthesize nanosecondsPerPoint=_nanosecondsPerPoint;
@property(nonatomic) struct XRTimeRange selectedTimeRange; // @synthesize selectedTimeRange=_selectedTimeRange;
@property(nonatomic) unsigned long long inspectionTime; // @synthesize inspectionTime=_inspectionTime;
@property(nonatomic) double splitterValue; // @synthesize splitterValue=_splitterValue;
@property(retain, nonatomic) NSString *selectedStrategyIdentifier; // @synthesize selectedStrategyIdentifier=_selectedStrategyIdentifier;
@property(nonatomic) int currentLayout; // @synthesize currentLayout=_currentLayout;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
@property(readonly, nonatomic, getter=isLowerDisplayHidden) BOOL lowerDisplayHidden;
@property(readonly, nonatomic, getter=isEventInspectorHidden) BOOL eventInspectorHidden;
@property(readonly, nonatomic) double inspectionTimeInSeconds;
@property(readonly, nonatomic) XRStrategyInfo *selectedStrategy;
- (id)initWithCoder:(id)arg1;
- (id)init;

@end

@interface XRModalViewController : NSViewController
{
    NSTabViewController *_subviewController;
    NSString *_currentMode;
    NSProgress *_displayedProgress;
    NSTimer *_animationDelay;
    NSMutableDictionary *_itemsByMode;
}

- (void).cxx_destruct;
- (void)_subviewBecameInteractive:(id)arg1;
- (void)_subviewBecameBusy:(id)arg1;
- (void)setViewController:(id)arg1 mode:(id)arg2;
- (void)setMode:(id)arg1 progress:(id)arg2;
- (void)viewDidLoad;
- (void)_animationDelayExpired:(id)arg1;
- (void)_throttledSwitchToMode:(id)arg1;
- (void)loadView;
- (void)dealloc;
- (id)init;

@end

@interface XRMouseHighlighButton : NSButton
{
}

- (void)setNeedsDisplayInRect:(struct CGRect)arg1;
- (void)setNeedsDisplay:(BOOL)arg1;
- (void)mouseDown:(id)arg1;
- (void)viewWillMoveToWindow:(id)arg1;
- (BOOL)isOpaque;

@end

@interface XRMouseHighlighButtonCell : NSButtonCell
{
}

- (void)drawBezelWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawImage:(id)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;
- (BOOL)isOpaque;

@end

@interface XRPageBrowserViewController : NSViewController
{
    id <XRPageBrowserDataSource> _datasource;
    NSButton *_pageBackButton;
    NSButton *_pageForwardButton;
    NSSegmentedControl *_pageMarkers;
    NSBox *_box;
    NSTextField *_label;
    unsigned long long _pageIndex;
    unsigned long long _pageCount;
    NSView *_currentView;
}

@property(retain) NSView *currentView; // @synthesize currentView=_currentView;
@property unsigned long long pageCount; // @synthesize pageCount=_pageCount;
@property unsigned long long pageIndex; // @synthesize pageIndex=_pageIndex;
@property __weak NSTextField *label; // @synthesize label=_label;
@property __weak NSBox *box; // @synthesize box=_box;
@property __weak NSSegmentedControl *pageMarkers; // @synthesize pageMarkers=_pageMarkers;
@property __weak NSButton *pageForwardButton; // @synthesize pageForwardButton=_pageForwardButton;
@property __weak NSButton *pageBackButton; // @synthesize pageBackButton=_pageBackButton;
- (void).cxx_destruct;
- (void)pageForwardAction:(id)arg1;
- (void)pageBackAction:(id)arg1;
- (void)pageMarkersCallback:(id)arg1;
@property __weak id <XRPageBrowserDataSource> datasource; // @synthesize datasource=_datasource;
- (void)updatePage;
- (void)awakeFromNib;
- (id)init;

@end

@interface XRPathComponentCellAccessibilityObject : NSObject
{
    NSString *_role;
    id _pathCell;
    NSString *_description;
    NSPathComponentCell *_componentCell;
}

@property(readonly) NSPathComponentCell *componentCell; // @synthesize componentCell=_componentCell;
- (void).cxx_destruct;
- (id)accessibilityFocusedUIElement;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (BOOL)accessibilityIsIgnored;
- (void)accessibilityPerformAction:(id)arg1;
- (id)accessibilityActionDescription:(id)arg1;
- (id)accessibilityActionNames;
- (void)accessibilitySetValue:(id)arg1 forAttribute:(id)arg2;
- (BOOL)accessibilityIsAttributeSettable:(id)arg1;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)accessibilityAttributeNames;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)initWithPathComponentCell:(id)arg1 pathCell:(id)arg2 description:(id)arg3;

@end

@interface XRPauseResumeToolbarItem : XRToolbarItem
{
}

- (void)disconnectFromContext;
- (void)connectToContext:(id)arg1;
- (id)_createPre1010Control;
- (id)_create1010AndLaterControl;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;

@end

@interface XRPlaceholderView : NSView
{
    NSView *_contentView;
}

@property(nonatomic) __weak NSView *contentView; // @synthesize contentView=_contentView;
- (void).cxx_destruct;

@end

@interface XRPluginMigrator : NSObject
{
    BOOL _launch32;
}

- (BOOL)attemptRecoveryFromError:(id)arg1 optionIndex:(unsigned long long)arg2;
- (void)attemptRecoveryFromError:(id)arg1 optionIndex:(unsigned long long)arg2 delegate:(id)arg3 didRecoverSelector:(SEL)arg4 contextInfo:(void *)arg5;
- (id)initWithRelaunch32Bit:(BOOL)arg1;

@end

@interface XRPreferences : NSPreferences
{
}

+ (void)restoreWindowWithIdentifier:(id)arg1 state:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
+ (void)initialize;
- (BOOL)windowShouldClose:(id)arg1;
- (void)applicationWillTerminate:(id)arg1;
- (BOOL)usesButtons;
- (void)dealloc;
- (id)init;

@end

@interface XRProgressIndicator : NSProgressIndicator
{
}

- (void)drawRect:(struct CGRect)arg1;
- (void)_drawBar:(BOOL)arg1;
- (id)init;

@end

@interface XRProgressView : PFTNibView
{
    XRProgressViewIndicator *_progressIndicator;
    NSTextField *_title;
    NSButton *_cancelButton;
    XRWorkTracker *_workTracker;
    BOOL _closeAsModalWindow;
    BOOL _closeAsynchronously;
}

+ (id)startProgressWithWorkTracker:(id)arg1;
+ (id)panelWithWorkTracker:(id)arg1;
+ (id)windowWithWorkTracker:(id)arg1;
@property(nonatomic) BOOL closeAsynchronously; // @synthesize closeAsynchronously=_closeAsynchronously;
- (void).cxx_destruct;
- (BOOL)closeAsModalWindow;
- (void)setCloseAsModalWindow:(BOOL)arg1;
- (void)setFutureValue:(unsigned long long)arg1;
- (void)cancelWork:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)dealloc;
- (id)initWithWorkTracker:(id)arg1;

@end

@interface XRProgressViewIndicator : NSProgressIndicator
{
    double _futureValue;
    double _futureMarkValue;
    NSLock *_futureValueLock;
}

- (void).cxx_destruct;
- (void)setFutureValue:(double)arg1;
- (void)_animationIdler:(id)arg1;

@end

@interface XRRecordStopToolbarItem : XRToolbarItem
{
}

- (void)disconnectFromContext;
- (void)connectToContext:(id)arg1;
- (id)_create1010AndLaterControl;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;

@end

@interface XRRecordingOptionsViewController : NSViewController
{
    XRTrace *_trace;
    DVTBorderedView *_borderView;
    NSTextField *_timeLimitTextField;
    NSTextField *_windowLimitTextField;
    NSButton *_deferredModeCheckbox;
    NSButton *_closeButton;
    XRRecordingOptions *_recordingOptions;
}

@property(retain, nonatomic) XRRecordingOptions *recordingOptions; // @synthesize recordingOptions=_recordingOptions;
@property __weak NSButton *closeButton; // @synthesize closeButton=_closeButton;
@property __weak NSButton *deferredModeCheckbox; // @synthesize deferredModeCheckbox=_deferredModeCheckbox;
@property __weak NSTextField *windowLimitTextField; // @synthesize windowLimitTextField=_windowLimitTextField;
@property __weak NSTextField *timeLimitTextField; // @synthesize timeLimitTextField=_timeLimitTextField;
@property __weak DVTBorderedView *borderView; // @synthesize borderView=_borderView;
@property(nonatomic) __weak XRTrace *trace; // @synthesize trace=_trace;
- (void).cxx_destruct;
- (void)_dismiss;
- (void)ok:(id)arg1;
- (void)windowLimitChanged:(id)arg1;
- (void)timeLimitChanged:(id)arg1;
- (void)deferredClicked:(id)arg1;
- (void)_updateUIControls;
- (void)viewDidLoad;
- (id)init;

@end

@interface XRRecordingPreferencesModule : XRPreferencesModule
{
    NSPopUpButton *_documentLocationPopup;
    DVTFilePathField *_defaultDocumentLocationTextField;
    DVTFilePathField *_defaultDocumentLocationDisplay;
    NSButton *_enableSpinProfilingButton;
    NSTextField *_sampleDurationTextField;
    NSNumberFormatter *_samplingDurationFormatter;
}

@property __weak NSNumberFormatter *samplingDurationFormatter; // @synthesize samplingDurationFormatter=_samplingDurationFormatter;
@property __weak NSTextField *sampleDurationTextField; // @synthesize sampleDurationTextField=_sampleDurationTextField;
@property __weak NSButton *enableSpinProfilingButton; // @synthesize enableSpinProfilingButton=_enableSpinProfilingButton;
@property __weak DVTFilePathField *defaultDocumentLocationDisplay; // @synthesize defaultDocumentLocationDisplay=_defaultDocumentLocationDisplay;
@property __weak DVTFilePathField *defaultDocumentLocationTextField; // @synthesize defaultDocumentLocationTextField=_defaultDocumentLocationTextField;
@property __weak NSPopUpButton *documentLocationPopup; // @synthesize documentLocationPopup=_documentLocationPopup;
- (void).cxx_destruct;
- (void)saveChanges;
- (void)modelDidChange:(id)arg1;
- (void)_updateFields;
- (void)samplingDurationChange:(id)arg1;
- (void)controlTextDidChange:(id)arg1;
- (void)_chooseDefaultDocumentLocation:(id)arg1;
- (void)_updateDefaultDocumentPopupView:(BOOL)arg1;
- (void)spinProfilingPreferenceChanged:(id)arg1;
- (void)openKeyboardShortcuts:(id)arg1;
- (BOOL)isResizable;
- (id)imageForPreferenceNamed:(id)arg1;
- (void)initializeFromDefaults;

@end

@interface XRScopeBarView : DVTBorderedView
{
    NSView *_lastElement;
    BOOL _lastIsSeparator;
    NSMutableDictionary *_buttonHandlers;
    CDUnknownBlockType _compositionDestructor;
}

+ (id)scopeBarFont;
- (void).cxx_destruct;
- (void)_scopeButtonClicked:(id)arg1;
- (void)removeAllSections;
- (void)addControlsSection:(id)arg1;
- (void)addScopingSection:(id)arg1 options:(int)arg2 configuration:(CDUnknownBlockType)arg3;
- (void)_addSectionSeparator;
- (void)_addControl:(id)arg1;
- (void)_appendDestructorBlock:(CDUnknownBlockType)arg1;
- (void)_registerButton:(id)arg1 inGroup:(id)arg2 options:(int)arg3 withHandler:(CDUnknownBlockType)arg4;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface XRScopeButton : DVTScopeBarButton
{
}

+ (Class)cellClass;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface XRScopeButtonCell : DVTScopeBarButtonCell
{
}

- (struct CGRect)drawTitle:(id)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;

@end

@interface XRScriptControl : XRScopedTextControl <XRFileObserver, XREditableEntity>
{
    XRInstrument *_instrumentNotRetained;
    PFTProcess *_process;
    BOOL _dirty;
}

- (void).cxx_destruct;
- (BOOL)isDirty;
- (void)setIsDirty:(BOOL)arg1;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)recordButtonClicked:(id)arg1;
- (void)stopButtonClicked:(id)arg1;
- (void)playButtonClicked:(id)arg1;
- (void)validateRecordControls;
- (void)stopTarget;
- (BOOL)launchTarget;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)rescanPath:(id)arg1;
- (id)detailViewLabel;
- (id)classForNibName;
- (void)setInstrument:(id)arg1;
- (id)instrument;
- (void)dealloc;
- (id)initWithInstrument:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRSearchBarViewController : NSViewController <XRSearchTarget, NSTextFieldDelegate, PFTDetailViewAccessory>
{
    DVTSearchField *_searchField;
    NSButton *_ignoreCaseButton;
    NSButton *_autoExpandButton;
    NSSegmentedControl *_directionalButtons;
    NSButton *_doneButton;
    NSTableView *_defaultView;
    id <XRSearchTarget> _searchTarget;
    BOOL _targetSupportsObjectValueForRow;
    BOOL _targetOutlineSupportsHighlights;
    BOOL _targetTableSupportsHighlights;
    NSString *_selectedCategory;
    BOOL _matchSymbols;
    BOOL _matchLibraries;
    XRInstrument *_instrument;
}

+ (BOOL)ignoreCaseDuringFind;
+ (BOOL)autoExpandNodesDuringFind;
+ (void)initialize;
@property(readonly, retain, nonatomic) XRInstrument *instrument; // @synthesize instrument=_instrument;
- (void).cxx_destruct;
- (BOOL)searchBackward:(id)arg1;
- (BOOL)searchForward:(id)arg1 skipCurrent:(BOOL)arg2;
- (BOOL)_searchBackwardOutline:(id)arg1 row:(long long)arg2 options:(unsigned long long)arg3;
- (BOOL)_searchBackwardOutline:(id)arg1 item:(id)arg2 options:(unsigned long long)arg3 resultPath:(id)arg4 selectedItem:(id)arg5 stop:(char *)arg6;
- (id)_pathToRootFromItem:(id)arg1;
- (id)_pathFromRootToItem:(id)arg1;
- (BOOL)_searchForwardOutline:(id)arg1 row:(long long)arg2 options:(unsigned long long)arg3 skipCurrent:(BOOL)arg4;
- (void)_expandPath:(id)arg1 priorItem:(id)arg2 searchForward:(BOOL)arg3;
- (BOOL)_forwardCheckOutlineView:(id)arg1 matchingChildForItem:(id)arg2 forString:(id)arg3 options:(unsigned long long)arg4 resultPath:(id)arg5 skipCurrent:(BOOL)arg6;
- (int)_checkNodeInOutlineView:(id)arg1 matchingChildForItem:(id)arg2 forString:(id)arg3 options:(unsigned long long)arg4;
- (BOOL)_isItem:(id)arg1 highlightedInOutlineView:(id)arg2;
- (unsigned long long)stringArray:(id)arg1 containsPartialMatch:(id)arg2;
- (BOOL)_searchBackwardTable:(id)arg1 row:(long long)arg2 options:(unsigned long long)arg3;
- (BOOL)_searchForwardTable:(id)arg1 row:(long long)arg2 options:(unsigned long long)arg3 skipCurrent:(BOOL)arg4;
- (void)_selectRow:(long long)arg1;
- (void)_checkNeedDisplayLoopForOldRow:(long long)arg1 newRow:(long long)arg2 searchForward:(BOOL)arg3;
- (BOOL)_doesRow:(long long)arg1 matchSearchTerm:(id)arg2 forColumns:(id)arg3 options:(unsigned long long)arg4 useBindings:(char *)arg5;
- (id)_stringForColumn:(long long)arg1 row:(long long)arg2;
- (id)searchCategories;
- (id)_columnsToSearch;
- (id)_searchableColumns;
- (void)setMainView:(id)arg1;
- (id)searchTarget;
- (void)setSearchTarget:(id)arg1;
- (void)viewDidAppear;
- (void)awakeFromNib;
- (void)_searchCategorySelected:(id)arg1;
- (void)_rebuildSearchMenu;
- (BOOL)control:(id)arg1 textView:(id)arg2 doCommandBySelector:(SEL)arg3;
- (void)performFindPanelAction:(id)arg1;
- (BOOL)_performCurrentEvent;
- (void)doneClicked:(id)arg1;
- (void)searchButtonsClicked:(id)arg1;
- (void)searchFieldAction:(id)arg1;
- (id)classForNibName;
- (void)dealloc;
- (id)initWithInstrument:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRSelectedInstrumentConfigurationDataElementList : PFTDataElementList
{
    PFTSelectedInstrumentList *_selectedInstrumentList;
    PFTTraceDocument *_traceDocument;
}

@property __weak PFTTraceDocument *traceDocument; // @synthesize traceDocument=_traceDocument;
- (void).cxx_destruct;
- (void)_instrumentUnselected:(id)arg1;
- (void)_instrumentUpdated:(id)arg1;
- (void)_instrumentSelected:(id)arg1;
@property(retain) PFTSelectedInstrumentList *selectedInstrumentList; // @synthesize selectedInstrumentList=_selectedInstrumentList;
- (void)dealloc;

@end

@interface XRSeparatorToolbarItem : XRToolbarItem
{
}

- (void)connectToContext:(id)arg1;

@end

@interface XRShowHideDetailToolbarItem : XRToolbarItem
{
}

- (void)_segmentedControlClicked:(id)arg1;
- (void)disconnectFromContext;
- (void)connectToContext:(id)arg1;
- (id)_createSegmentedControl;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;

@end

@interface XRSourceCommentAnnotation : DVTMessageBubbleAnnotation
{
    NSArray *_dataElements;
}

@property(retain) NSArray *dataElements; // @synthesize dataElements=_dataElements;
- (void).cxx_destruct;
- (double)preferredWidthForAvailableWidth:(double)arg1;

@end

@interface XRSourceCommentAnnotationContext : DVTAnnotationContext
{
    XRTextView *_textView;
}

@property(retain, nonatomic) XRTextView *textView; // @synthesize textView=_textView;
- (void).cxx_destruct;
- (id)initWithTextView:(id)arg1;

@end

@interface XRSourceCommentAnnotationProvider : DVTAnnotationProvider <DVTMessageBubbleAnnotationDelegate, XRCommentObserver, XRInspectorSource>
{
    XRSourceCommentAnnotation *_selectedAnnotation;
    XRTextView *_textView;
}

+ (id)annotationProviderForContext:(id)arg1 error:(id *)arg2;
- (void).cxx_destruct;
- (id)documentUUID;
- (id)dataElementsForInspector:(id)arg1;
- (void)inspectorDismissed:(id)arg1;
- (void)didClickMessageBubbleForAnnotation:(id)arg1 onIcon:(BOOL)arg2 inTextView:(id)arg3 event:(id)arg4;
- (struct CGRect)_locationOfAnnotation:(id)arg1 inTextView:(id)arg2;
- (void)_createAnnotationAtLine:(unsigned long long)arg1 withCommentList:(id)arg2 displayType:(int)arg3;
- (id)_themeForComments:(id)arg1;
- (id)_descriptionForComments:(id)arg1 displayType:(int)arg2;
- (BOOL)_isOnlyMarker:(id)arg1;
- (void)commentsWereUpdated:(id)arg1 displayType:(int)arg2;
- (id)initWithContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRSourceControl : XRScopedTextControl <XRTextViewDragDestination, NSTextViewDelegate, XRContextContainer, NSOpenSavePanelDelegate, DVTSourceTextViewDelegate>
{
    XRInstrument *_instrumentNotRetained;
    BOOL _observingInstrument;
    id <XRSymbolSourceProxy> _selectedSymbolProxy;
    NSMutableArray *_runningQueries;
    NSSegmentedControl *_controlMenu;
    int _displayType;
    int _procState;
    int _dispState;
    NSError *_failure;
    XRCodeFragment *_srcFrag;
    XRCodeFragment *_disasmFrag;
    XRSymbolContext *_symbolContext;
    NSMutableArray *_currCoachCommentsArray;
    NSMutableDictionary *_textlineCommentsTable;
    NSMutableArray *_textlineInspectorKeys;
    NSMutableArray *_textlineInspectorValues;
    NSMutableDictionary *_disasmlineCommentsTable;
    NSMutableArray *_disasmlineInspectorKeys;
    NSMutableArray *_disasmlineInspectorValues;
    id <CommonSymbol> _focusedSymbol;
    BOOL _showLineMarker;
    unsigned long long _markerLineNumber;
    unsigned long long _disasmMarkerLineNumber;
    int _selfSettingSelections;
    id <XRSourceCommentProvider> _annotationProvider;
    id <XRSourceCommentScopeProvider> _annotationScopeProvider;
}

+ (void)registerXcodeDefaults;
@property(nonatomic) __weak id <XRSourceCommentScopeProvider> annotationScopeProvider; // @synthesize annotationScopeProvider=_annotationScopeProvider;
@property(nonatomic) __weak id <XRSourceCommentProvider> annotationProvider; // @synthesize annotationProvider=_annotationProvider;
- (void).cxx_destruct;
- (id)annotationContextForTextView:(id)arg1;
- (void)displayDisassemblyAnnotation:(id)arg1;
- (void)displaySourceAnnotation:(id)arg1;
- (void)displayAnnotationKey:(id)arg1;
- (id)dataElementsForExtendedDetail;
- (id)uuid;
- (id)iconForContext:(id)arg1;
- (id)viewForContext:(id)arg1;
- (id)siblingsForContext:(id)arg1;
- (void)displayContext:(id)arg1;
- (id)contextRepresentation;
- (void)startAnnotationQuery;
- (void)enableCounterpart:(BOOL)arg1;
- (void)consumeAnnotations;
- (void)loadBestTextIntoView;
- (void)cancelSymbolLoad;
- (void)startSymbolLoad;
- (BOOL)performDragOperation:(id)arg1;
- (void)_laodAndAnalyzeDroppedFiles:(id)arg1;
- (BOOL)prepareForDragOperation:(id)arg1;
- (unsigned long long)dragging:(id)arg1;
- (id)dragTypes;
- (void)setPickerForSymbolName:(id)arg1;
- (void)cancelAllQueryOperations;
- (BOOL)validateMenuItem:(id)arg1;
- (void)_showISAReferenceGuide:(id)arg1;
- (void)_toggleInstructionDetails:(id)arg1;
- (void)_viewAsNatural:(id)arg1;
- (void)_viewAsPercentage:(id)arg1;
- (void)_viewAsValue:(id)arg1;
- (void)_reformatAnnotationsAs:(int)arg1;
- (void)_symbolChosen:(id)arg1;
- (id)_symbolForDisplayName:(id)arg1;
- (id)symbolNameForDisplayName:(id)arg1;
- (void)_segmentsAction:(id)arg1;
- (void)enableDualView:(BOOL)arg1;
- (void)_flipToCompliment:(id)arg1;
- (void)_refresh:(id)arg1;
- (void)showLoadingIndicator:(BOOL)arg1;
- (void)invalidate;
- (void)performCustomFindPanelAction:(id)arg1;
- (void)resetSourceViewToEmpty;
- (id)customWatermark;
- (void)refreshStatistics;
- (id)_symbol;
- (id)_defaultTargetLineColor;
- (id)dataElementsForLineNumber:(unsigned long long)arg1 inTextView:(id)arg2;
- (id)paragraphBorderHighlightColorForComments:(id)arg1;
- (double)importanceOfComments:(id)arg1;
- (void)clearDisasmAnnotations;
- (void)clearSourceAnnotations;
- (void)clearAnnotations;
- (void)addDisasmMarkupForQuery:(id)arg1;
- (void)addSourceMarkupForQuery:(id)arg1;
- (void)addAllMarkupForQuery:(id)arg1;
- (void)_statisticsQueryCompleted:(id)arg1;
- (void)_focusOnNewSymbol;
- (void)_setDisassemblyTextForFragment:(id)arg1 withSource:(id)arg2;
- (void)_setSourceTextToFragment:(id)arg1;
- (void)_showSourceEnabled;
- (void)_enableDualViewButton:(BOOL)arg1;
- (void)_setDualViewToolTip:(BOOL)arg1;
- (void)_enableCounterpartButton:(BOOL)arg1;
- (void)_setCounterpartToolTip:(id)arg1;
- (BOOL)_loadSourceForPath:(id)arg1 withContents:(id)arg2 ofType:(id)arg3;
- (void)_showSourceResolver:(id)arg1;
- (BOOL)panel:(id)arg1 validateURL:(id)arg2 error:(id *)arg3;
- (void)_addNavigationLinks:(id)arg1 andFixedLineRange:(struct _NSRange *)arg2;
- (id)flattenSourceItem:(id)arg1;
- (void)viewDidMoveToWindow;
- (void)setSelectedSymbol:(id)arg1;
- (BOOL)textView:(id)arg1 clickedOnLink:(id)arg2 atIndex:(unsigned long long)arg3;
- (void)setWaterMarkVisibility:(int)arg1;
- (id)sourceManager;
- (void)_textSelectionDidChange:(id)arg1;
- (void)_findSelectedLinesInDisasmViewMultiClickInView:(id)arg1 withCodeManager:(id)arg2 extraLines:(unsigned long long)arg3 lineRange:(struct _NSRange)arg4 newLineRanges:(id)arg5 newCharRanges:(id)arg6;
- (void)_findSelectedLinesInDisasmViewSingleClickInView:(id)arg1 withCodeManager:(id)arg2 extraLines:(unsigned long long)arg3 lineRange:(struct _NSRange)arg4 newLineRanges:(id)arg5 newCharRanges:(id)arg6;
- (void)_findSelectedLinesInSourceViewAnyClickInView:(id)arg1 withCodeManager:(id)arg2 extraLines:(unsigned long long)arg3 lineRange:(struct _NSRange)arg4 newLineRanges:(id)arg5 newCharRanges:(id)arg6;
- (id)refreshDisasmSelectionInfo:(id)arg1;
- (id)refreshSourceViewSelectionInfo;
- (id)focusedSymbolTruncatedName;
- (id)focusedSymbolSourceFileNameAndPath:(id *)arg1 andExtension:(id *)arg2;
- (void)observeRun:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (BOOL)getPersistentSyms:(id *)arg1 error:(id *)arg2;
- (BOOL)_getPersistentSymsLegacy:(id *)arg1 error:(id *)arg2;
- (void)applyCurrentFilter;
- (id)detailViewLabel;
- (id)classForNibName;
- (id)instrument;
- (void)dealloc;
- (id)initWithInstrument:(id)arg1;
- (void)enterProcessingState:(int)arg1;
- (void)enterDisplayState:(int)arg1;
- (void)wantsDisassembly;
- (void)wantsSource;
- (void)sourceLoadFailed;
- (void)disassemblyLoadFailed;
- (void)disassemblyLoaded;
- (void)sourceLoaded;
- (void)startRefresh;
- (void)refreshComplete;
- (void)loadFailed;
- (void)displayText;
- (void)loadText;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRSourceListCell : NSTextFieldCell
{
    NSImage *_image;
    double _imageAreaWidth;
    BOOL _drawImage;
    double _xHeight;
    int _background;
}

- (void).cxx_destruct;
- (unsigned long long)hitTestForEvent:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)selectWithFrame:(struct CGRect)arg1 inView:(id)arg2 editor:(id)arg3 delegate:(id)arg4 start:(long long)arg5 length:(long long)arg6;
- (void)editWithFrame:(struct CGRect)arg1 inView:(id)arg2 editor:(id)arg3 delegate:(id)arg4 event:(id)arg5;
- (struct CGSize)cellSizeForBounds:(struct CGRect)arg1;
- (struct CGRect)titleRectForBounds:(struct CGRect)arg1;
- (struct CGRect)imageRectForBounds:(struct CGRect)arg1;
- (int)background;
- (void)setBackground:(int)arg1;
- (void)setFont:(id)arg1;
- (void)setImageAreaWidth:(double)arg1;
- (double)imageAreaWidth;
- (void)setImage:(id)arg1;
- (BOOL)drawsImage;
- (void)setDrawsImage:(BOOL)arg1;
- (id)image;
- (BOOL)isEditable;
- (BOOL)isSelectable;
- (BOOL)isEnabled;
- (BOOL)isHighlighted;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initImageCell:(id)arg1;
- (id)init;
- (id)initTextCell:(id)arg1;
- (void)_sharedOutlineViewCellInit;

@end

@interface XRSourceListView : NSOutlineView
{
}

- (id)preparedCellAtColumn:(long long)arg1 row:(long long)arg2;
- (id)selectedSourceListCellAttributesWithDefaults:(id)arg1;
- (id)_groupCellAttributesWithDefaults:(id)arg1 highlighted:(BOOL)arg2;
- (id)_titleFont;
- (struct CGRect)frameOfOutlineCellAtRow:(long long)arg1;

@end

@interface XRSourceTabView : NSView <XRInspectorSource>
{
    NSTextField *_valueField;
    NSButton *_inspectorButton;
    BOOL _showInspectorButton;
    XRInstrument *_instrument;
    int _valueType;
    XRAnnotation *_textAnnotation;
    DVTTextView *_textView;
}

@property(nonatomic) DVTTextView *textView; // @synthesize textView=_textView;
@property(nonatomic) XRAnnotation *textAnnotation; // @synthesize textAnnotation=_textAnnotation;
- (void).cxx_destruct;
- (void)showInspectorButton:(BOOL)arg1;
- (void)setNeedsDisplay:(BOOL)arg1;
- (struct CGRect)spotRect;
- (id)documentUUID;
- (id)dataElementsForInspector:(id)arg1;
- (void)inspectorDismissed:(id)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)viewDidMoveToWindow;
- (void)toggleInspector:(id)arg1;
- (id)stringForValueType:(int)arg1;
- (int)valueType;
- (void)setValueType:(int)arg1;
- (void)setInstrument:(id)arg1;
- (void)setValue:(id)arg1;
- (struct CGRect)resetSize;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRSourceTabViewAnnotationCell : NSTextFieldCell
{
}

- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;

@end

@interface XRSpacerToolbarItem : XRToolbarItem
{
}

- (struct CGSize)minSize;
- (struct CGSize)maxSize;
- (void)connectToContext:(id)arg1;

@end

@interface XRSplitView : NSSplitView
{
}

- (double)dividerThickness;
- (void)drawDividerInRect:(struct CGRect)arg1;

@end

@interface XRSplitViewAnimation : NSAnimation
{
    double _delta;
    double _fromPosition;
    double _toPosition;
}

@property double toPosition; // @synthesize toPosition=_toPosition;
@property double fromPosition; // @synthesize fromPosition=_fromPosition;
@property double delta; // @synthesize delta=_delta;
- (void)setCurrentProgress:(float)arg1;

@end

@interface XRStrategiesToolbarButton : NSButton
{
    BOOL _clearButtonActive;
    NSButton *_clearButton;
    NSTrackingArea *_trackingArea;
}

+ (Class)cellClass;
@property(retain, nonatomic) NSTrackingArea *trackingArea; // @synthesize trackingArea=_trackingArea;
@property(nonatomic) BOOL clearButtonActive; // @synthesize clearButtonActive=_clearButtonActive;
@property(retain, nonatomic) NSButton *clearButton; // @synthesize clearButton=_clearButton;
- (void).cxx_destruct;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (struct CGSize)intrinsicContentSize;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface XRStrategiesToolbarButtonCell : NSButtonCell
{
}

@end

@interface XRStrategiesToolbarItem : XRToolbarItem
{
}

+ (id)_alternateImages;
+ (id)_images;
- (void)_segmentedControlClicked:(id)arg1;
- (void)disconnectFromContext;
- (void)connectToContext:(id)arg1;
- (id)_createPre1010Control;
- (id)_create1010AndLaterControl;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;

@end

@interface XRStrategiesToolbarPopUpButton : NSPopUpButton
{
}

+ (Class)cellClass;
- (id)initWithFrame:(struct CGRect)arg1 pullsDown:(BOOL)arg2;

@end

@interface XRStrategiesToolbarPopUpButtonCell : NSPopUpButtonCell
{
}

@end

@interface XRStrategiesToolbarView : NSView <DVTWindowActivationStateObserver>
{
    id <DVTCancellable> _windowActivationObservation;
}

+ (id)_colorForLightSeparatorLineIsMain:(BOOL)arg1;
- (void).cxx_destruct;
- (id)_toolbarBaselineColorForceMain:(BOOL)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (BOOL)isFlipped;
- (void)window:(id)arg1 didChangeActivationState:(long long)arg2;
- (void)viewWillMoveToWindow:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRStrategiesToolbarViewController : NSViewController
{
    XRStrategyUIController *_currentUIController;
    NSArray *_availableStrategyUIControllers;
    NSStackView *_stackView;
    NSSegmentedControl *_strategyPicker;
    NSView *_separatorView;
}

+ (BOOL)_includeStrategyPicker;
@property(retain, nonatomic) NSView *separatorView; // @synthesize separatorView=_separatorView;
@property(retain, nonatomic) NSSegmentedControl *strategyPicker; // @synthesize strategyPicker=_strategyPicker;
@property(nonatomic) __weak NSStackView *stackView; // @synthesize stackView=_stackView;
@property(retain, nonatomic) NSArray *availableStrategyUIControllers; // @synthesize availableStrategyUIControllers=_availableStrategyUIControllers;
@property(retain, nonatomic) XRStrategyUIController *currentUIController; // @synthesize currentUIController=_currentUIController;
- (void).cxx_destruct;
- (void)_strategyPicked:(id)arg1;
- (void)_rebuildUI;
- (id)_separatorView;
- (id)_rebuildStrategyPicker;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)init;

@end

@interface XRStrategyDecorationRequest : XRStrategyContextObject
{
    unsigned long long _resolution;
    NSArray *_requestedBrushNames;
    DTTimelineGraphPlaneManager *_manager;
    DTTimelineGroupPlane *_groupPlane;
}

@property(readonly, nonatomic) DTTimelineGroupPlane *groupPlane; // @synthesize groupPlane=_groupPlane;
@property(readonly, nonatomic) __weak DTTimelineGraphPlaneManager *manager; // @synthesize manager=_manager;
@property(copy, nonatomic) NSArray *requestedBrushNames; // @synthesize requestedBrushNames=_requestedBrushNames;
@property(nonatomic) unsigned long long resolution; // @synthesize resolution=_resolution;
- (void).cxx_destruct;
- (void)addPlane:(id)arg1 groupPlane:(id)arg2;
- (id)initWithPlaneManager:(id)arg1 groupPlane:(id)arg2 runNumber:(long long)arg3 resolution:(unsigned long long)arg4;
- (id)init;

@end

@interface XRStrategyUIInspector : NSObject <XRLazyKVOResponder, XRInspectorSource>
{
    NSString *_documentUUID;
    XRLazyKVOAdapter *_kvoAdapter;
    XRStrategyUIController *_owner;
    XRStrategyInspectionNavigator *_navigator;
}

@property(retain, nonatomic) XRStrategyInspectionNavigator *navigator; // @synthesize navigator=_navigator;
@property(readonly, nonatomic) __weak XRStrategyUIController *owner; // @synthesize owner=_owner;
- (void).cxx_destruct;
- (void)_detachInspector;
- (BOOL)canMoveLeft;
- (BOOL)canMoveRight;
- (void)_displayRelatedEventDetail;
- (void)_moveToNextEvent;
- (void)_moveToPreviousEvent;
- (id)documentUUID;
- (void)inspectorDismissed:(id)arg1;
- (void)handleLazyKVOUpdate:(id)arg1;
- (id)dataElementsForInspector:(id)arg1;
- (void)dealloc;
- (id)init;
- (id)initWithStrategyUIController:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRSummaryDetailItemView : NSView
{
    DTGraph *_graph;
    NSTrackingArea *_trackingArea;
    BOOL _mouseInside;
    BOOL _mouseDown;
}

- (void).cxx_destruct;
- (void)performAction;
- (void)drawRect:(struct CGRect)arg1;
- (void)mouseUp:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)setHighlighted:(BOOL)arg1;
- (BOOL)isHighlighted;
- (void)setFrameSize:(struct CGSize)arg1;
- (id)graph;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 graphClass:(Class)arg2;
- (void)_setupBarChart:(Class)arg1;

@end

@interface XRSummaryDetailView : NSCollectionView
{
    PFTInstrumentList *_instrumentList;
    NSMutableArray *_summaries;
    NSArrayController *_summariesArrayController;
    NSView *_highlightedView;
}

@property(retain) NSMutableArray *summaries; // @synthesize summaries=_summaries;
- (void).cxx_destruct;
- (id)highlightedView;
- (void)setHighlightedView:(id)arg1;
- (id)description;
- (id)newItemForRepresentedObject:(id)arg1;
- (void)reloadData;
- (id)initWithDataSource:(id)arg1 keyPath:(id)arg2;

@end

@interface XRSummaryViewController : NSViewController
{
    BOOL _ui_summary_supported;
    BOOL _summariesAreUpToDate;
    BOOL _summaryModelsAreDisposed;
    NSMutableDictionary *_pendingSummaryUpdates;
    NSMutableArray *_summaryModels;
    NSArray *_byTopicHighlights;
    unsigned long long _byTopicHighlightsSelection;
    NSMapTable *_kvoAdapterByInstrument;
    PFTTraceDocument *_document;
    XRSummaryDetailView *_summaryView;
}

@property(nonatomic) __weak XRSummaryDetailView *summaryView; // @synthesize summaryView=_summaryView;
@property(retain, nonatomic) PFTTraceDocument *document; // @synthesize document=_document;
- (void).cxx_destruct;
- (id)dataElementsForContext:(id)arg1;
- (void)setSelectedByTopicHighlights:(id)arg1;
- (id)selectedByTopicHighlights;
- (id)byTopicHighlights;
- (BOOL)needsSummaryView;
- (void)setSummaryObservationEnabled:(BOOL)arg1;
- (void)setSummaryObservationEnabled:(BOOL)arg1 forInstrument:(id)arg2;
- (void)_abandonDocument:(id)arg1 forDocument:(id)arg2;
- (id)summaryModels;
- (void)refreshSummariesForInstrument:(id)arg1;
- (void)refreshSummaries;
- (void)_refreshSummariesForInstrumentOnTimer:(id)arg1;
- (void)_invalidateSummaryModels;
- (void)_disposeOfSummaries;
- (void)_refreshSummariesForInstrument:(id)arg1;
- (void)_clearSummaryTimerForInstrument:(id)arg1;
- (void)reloadSummaryView;
- (void)viewDidLoad;
- (id)init;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

@end

@interface XRSymbolBackgroundView : NSView
{
}

@end

@interface XRSymbolLookupView : PFTNibView <NSComboBoxDataSource>
{
    NSTextField *_title;
    NSComboBox *_comboBox;
    NSProgressIndicator *_progressBar;
    NSTextField *_progressTitle;
    NSArray *_symbols;
    unsigned long long _lengthToCancel;
    unsigned long long _lastIndex;
    BOOL _isSorted;
    PFTProcess *_target;
}

- (void).cxx_destruct;
- (void)_loadUpdatedSymbolsPartTwo:(id)arg1;
- (void)_loadUpdatedSymbols:(id)arg1;
- (void)_updateCompleteUI;
- (void)_updateSymbols:(id)arg1;
- (id)comboBox:(id)arg1 completedString:(id)arg2;
- (unsigned long long)comboBox:(id)arg1 indexOfItemWithStringValue:(id)arg2;
- (id)comboBox:(id)arg1 objectValueForItemAtIndex:(long long)arg2;
- (long long)numberOfItemsInComboBox:(id)arg1;
- (void)cancelDialog:(id)arg1;
- (void)cancel:(id)arg1;
- (void)symbolChosen:(id)arg1;
- (void)endWithCode:(long long)arg1;
- (id)comboBox;
- (id)titleField;
- (void)_textFieldChanged:(id)arg1;
- (void)viewDidMoveToWindow;
- (void)dealloc;
- (id)initWithInstruments:(id)arg1 target:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRSymbolsPreferencesModule : XRPreferencesModule <NSOpenSavePanelDelegate, NSTableViewDelegate, NSTableViewDataSource, NSTextFieldDelegate>
{
    NSOpenPanel *_currentDSYMScriptOpenPanel;
    NSMutableArray *_advancedOptions;
    NSView *_currentDetailView;
    unsigned char _currentDetailType;
    NSImage *_statusLightGreen;
    NSImage *_statusLightRed;
    NSArrayController *_searchPathController;
    NSPopUpButton *_dsymScriptUsagePopUp;
    DVTBorderedView *_searchPathsBox;
    DVTScrollView *_searchPathsScrollView;
    DVTTableView *_searchPathsTableView;
    DVTGradientImageButton *_addSymbolPathButton;
    DVTGradientImageButton *_removeSymbolPathButton;
    DVTFilePathField *_downloadScriptTextField;
    NSButton *_advanceButton;
    NSNumberFormatter *_integerNumberFormatter;
    NSView *_advancedOptionsView;
    DVTBorderedView *_settingsBorderedView;
    DVTBorderedView *_advancedOptionsDetailView;
    NSTextField *_detailNameLabel;
    NSTextField *_detailNameTextField;
    NSTextField *_detailDescriptionTextField;
    NSTableView *_settingsTableView;
    NSView *_detailPlaceholderView;
    NSView *_boolDetailView;
    NSButton *_boolDetailButton;
    NSView *_integerDetailView;
    NSTextField *_integerTextField;
    NSView *_argumentDetailView;
    NSTextField *_argumentTextField;
}

@property __weak NSTextField *argumentTextField; // @synthesize argumentTextField=_argumentTextField;
@property(retain) NSView *argumentDetailView; // @synthesize argumentDetailView=_argumentDetailView;
@property __weak NSTextField *integerTextField; // @synthesize integerTextField=_integerTextField;
@property(retain) NSView *integerDetailView; // @synthesize integerDetailView=_integerDetailView;
@property __weak NSButton *boolDetailButton; // @synthesize boolDetailButton=_boolDetailButton;
@property(retain) NSView *boolDetailView; // @synthesize boolDetailView=_boolDetailView;
@property __weak NSView *detailPlaceholderView; // @synthesize detailPlaceholderView=_detailPlaceholderView;
@property __weak NSTableView *settingsTableView; // @synthesize settingsTableView=_settingsTableView;
@property __weak NSTextField *detailDescriptionTextField; // @synthesize detailDescriptionTextField=_detailDescriptionTextField;
@property __weak NSTextField *detailNameTextField; // @synthesize detailNameTextField=_detailNameTextField;
@property __weak NSTextField *detailNameLabel; // @synthesize detailNameLabel=_detailNameLabel;
@property __weak DVTBorderedView *advancedOptionsDetailView; // @synthesize advancedOptionsDetailView=_advancedOptionsDetailView;
@property __weak DVTBorderedView *settingsBorderedView; // @synthesize settingsBorderedView=_settingsBorderedView;
@property(retain) NSView *advancedOptionsView; // @synthesize advancedOptionsView=_advancedOptionsView;
@property(retain) NSNumberFormatter *integerNumberFormatter; // @synthesize integerNumberFormatter=_integerNumberFormatter;
@property __weak NSButton *advanceButton; // @synthesize advanceButton=_advanceButton;
@property __weak DVTFilePathField *downloadScriptTextField; // @synthesize downloadScriptTextField=_downloadScriptTextField;
@property __weak DVTGradientImageButton *removeSymbolPathButton; // @synthesize removeSymbolPathButton=_removeSymbolPathButton;
@property __weak DVTGradientImageButton *addSymbolPathButton; // @synthesize addSymbolPathButton=_addSymbolPathButton;
@property __weak DVTTableView *searchPathsTableView; // @synthesize searchPathsTableView=_searchPathsTableView;
@property __weak DVTScrollView *searchPathsScrollView; // @synthesize searchPathsScrollView=_searchPathsScrollView;
@property __weak DVTBorderedView *searchPathsBox; // @synthesize searchPathsBox=_searchPathsBox;
@property __weak NSPopUpButton *dsymScriptUsagePopUp; // @synthesize dsymScriptUsagePopUp=_dsymScriptUsagePopUp;
@property __weak NSArrayController *searchPathController; // @synthesize searchPathController=_searchPathController;
- (void).cxx_destruct;
- (void)tableViewSelectionDidChange:(id)arg1;
- (id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)controlTextDidChange:(id)arg1;
- (void)detailSupportedClicked:(id)arg1;
- (void)doneClicked:(id)arg1;
- (void)_showSymbolSheetEnded:(id)arg1 returnCode:(int)arg2 contextInfo:(void *)arg3;
- (void)advancedClicked:(id)arg1;
- (void)_populateAdvancedOptions;
- (void)saveChanges;
- (void)dsymScriptUsageChanged:(id)arg1;
- (BOOL)panel:(id)arg1 validateURL:(id)arg2 error:(id *)arg3;
- (BOOL)panel:(id)arg1 shouldEnableURL:(id)arg2;
- (void)removeSearchPath:(id)arg1;
- (void)addSearchPath:(id)arg1;
- (void)_updateDSYMScriptTextField;
- (BOOL)isResizable;
- (id)imageForPreferenceNamed:(id)arg1;
- (void)initializeFromDefaults;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRTableHeaderMenuView : NSTableHeaderView
{
}

- (void)drawRect:(struct CGRect)arg1;
- (void)mouseDown:(id)arg1;
- (id)init;

@end

@interface XRTargetChooserPathCell : NSPathCell <XRPathCellAccessible>
{
    struct CGSize _cachedSizeWanted;
    NSMenu *_trackingMenu;
    NSPathComponentCell *_clickedPathComponentCell;
    int _gradientStyle;
    int _borderSides;
}

+ (Class)pathComponentCellClass;
@property int borderSides; // @synthesize borderSides=_borderSides;
@property(nonatomic) int gradientStyle; // @synthesize gradientStyle=_gradientStyle;
@property(retain) NSPathComponentCell *clickedPathComponentCell; // @synthesize clickedPathComponentCell=_clickedPathComponentCell;
- (void).cxx_destruct;
- (id)trackingMenu;
- (void)handleClickInComponentCell:(id)arg1 atPoint:(struct CGPoint)arg2 inRect:(struct CGRect)arg3 ofView:(id)arg4 event:(id)arg5;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (struct CGSize)sizeWantedForFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)cancelMenuTracking;
- (BOOL)trackMouse:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3 untilMouseUp:(BOOL)arg4;
- (void)_handleClickInComponentCell:(id)arg1 atPoint:(struct CGPoint)arg2 inRect:(struct CGRect)arg3 ofView:(id)arg4 event:(id)arg5;
- (void)_popUpMenuForComponentCell:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3;
- (void)setFont:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRTargetChooserPathComponentCell : NSPathComponentCell
{
    BOOL _isFirstItem;
    BOOL _isLastItem;
    BOOL _isOffline;
    int _gradientStyle;
}

+ (id)_textDrawingAttributes;
@property int gradientStyle; // @synthesize gradientStyle=_gradientStyle;
@property BOOL isOffline; // @synthesize isOffline=_isOffline;
@property BOOL isLastItem; // @synthesize isLastItem=_isLastItem;
@property BOOL isFirstItem; // @synthesize isFirstItem=_isFirstItem;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (id)_attributedStringValue:(BOOL)arg1;
- (id)shadow;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (double)_textOffsetForIcon:(id)arg1 inFrame:(struct CGRect)arg2 doDraw:(BOOL)arg3 isActive:(BOOL)arg4;
- (double)_rightDividerWidth;
- (double)_leftDividerWidth;
- (void)_drawDividerForFrame:(struct CGRect)arg1 inControlView:(id)arg2;
- (BOOL)_isActiveWindow:(id)arg1;
- (void)_useChevronForLeftEdge:(char *)arg1 rightEdge:(char *)arg2;
- (struct CGSize)cellSizeForBounds:(struct CGRect)arg1;
- (double)iconSize;

@end

@interface XRTargetChooserPathControl : NSPathControl <XRAccessiblePathCellDelegate>
{
    NSMutableDictionary *_deviceToComponentCellMap;
    XRDevice *_device;
    BOOL _allowNilDevice;
}

+ (Class)cellClass;
+ (unsigned long long)defaultFocusRingType;
@property(readonly, nonatomic) BOOL allowNilDevice; // @synthesize allowNilDevice=_allowNilDevice;
- (void).cxx_destruct;
- (id)pathCell:(id)arg1 accessibilityDescriptionForPathComponentCell:(id)arg2 atIndex:(unsigned long long)arg3;
- (id)accessibilityPopUpMenuParent:(id)arg1;
- (struct CGSize)sizeWanted;
- (id)menuForEvent:(id)arg1;
- (BOOL)isOpaque;
- (void)setMenu:(id)arg1;
- (void)setFont:(id)arg1;
@property(nonatomic) int gradientStyle;
- (void)setEnabled:(BOOL)arg1;
- (void)reconfigureWithContext:(id)arg1 controlSize:(unsigned long long)arg2 allowNilDevice:(BOOL)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRTargetChooserToolbarBorderButton : NSButton
{
}

+ (BOOL)accessibilityIsSingleCelled;
- (BOOL)accessibilityIsIgnored;
- (id)accessibilityRoleAttribute;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface XRTargetChooserToolbarItem : XRToolbarItem <NSPathControlDelegate, NSMenuDelegate, XRDeviceObserver>
{
    NSObject<XRProcessTargetedObject> *_currentTargetedObject;
    XRTargetChooserPathControl *_pathControl;
}

@property(retain) XRTargetChooserPathControl *pathControl; // @synthesize pathControl=_pathControl;
- (void).cxx_destruct;
- (long long)visibilityPriority;
- (struct CGSize)minSize;
- (struct CGSize)maxSize;
- (void)_reconfigurePathControl;
- (void)disconnectFromContext;
- (void)connectToContext:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)handleDeviceNotification:(id)arg1;
- (id)initWithItemIdentifier:(id)arg1 documentIdentifier:(id)arg2;
- (id)device;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRTemplateChooserCollectionView : NSCollectionView
{
}

- (void)deleteForward:(id)arg1;
- (void)deleteBackward:(id)arg1;
- (void)insertNewlineIgnoringFieldEditor:(id)arg1;
- (void)insertNewline:(id)arg1;

@end

@interface XRTemplateChooserLozengeView : NSView
{
}

- (void)drawRect:(struct CGRect)arg1;

@end

@interface XRTemplateChooserWindow : NSWindow
{
}

- (void)performClose:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (BOOL)canBecomeKeyWindow;
- (BOOL)canBecomeMainWindow;

@end

@interface XRTemplateChooserWindowController : NSWindowController <XRDeviceObserver, NSPathControlDelegate, NSTableViewDataSource, NSTableViewDelegate, NSTextFieldDelegate, NSWindowDelegate, NSCollectionViewDelegate>
{
    XRTemplateChooserTargetedObject *_itemContext;
    int _currentCategoryType;
    NSString *_filterString;
    NSMutableArray *_categories;
    NSMutableArray *_currentCategory;
    NSMutableArray *_currentTextFilteredCategory;
    id _eventMonitor;
    BOOL _canChangeDeviceAndProcess;
    BOOL _validTemplateSelection;
    NSString *_selectedTemplatePath;
    NSDictionary *_plistData;
    XRRecentArrayStoredPrefs *_recentTemplatesArray;
    NSView *_mainView;
    NSView *_targetSearchContainer;
    XRTargetChooserPathControl *_targetChooserPathControl;
    NSButton *_chooseButton;
    NSButton *_profileButton;
    NSButton *_cancelButton;
    NSButton *_openExistingButton;
    DVTScopeBarButton *_standardButton;
    DVTScopeBarButton *_recentButton;
    DVTScopeBarButton *_customButton;
    DVTSearchField *_searchField;
    NSCollectionView *_templateCollectionView;
    NSImageView *_selectedTemplateImage;
    NSTextField *_selectedTemplateName;
    NSTextField *_selectedTemplateDescription;
    DVTBorderedView *_mainBorderedView;
    DVTBorderedView *_scopeFilterBorderedView;
    DVTBorderedView *_selectedTemplateBorderedView;
    NSScrollView *_templateCollectionScrollView;
    XRTemplateCollectionViewItem *_templateCollectionViewItem;
    XRTemplateItemView *_templateItemView;
}

@property XRTemplateItemView *templateItemView; // @synthesize templateItemView=_templateItemView;
@property XRTemplateCollectionViewItem *templateCollectionViewItem; // @synthesize templateCollectionViewItem=_templateCollectionViewItem;
@property NSScrollView *templateCollectionScrollView; // @synthesize templateCollectionScrollView=_templateCollectionScrollView;
@property DVTBorderedView *selectedTemplateBorderedView; // @synthesize selectedTemplateBorderedView=_selectedTemplateBorderedView;
@property DVTBorderedView *scopeFilterBorderedView; // @synthesize scopeFilterBorderedView=_scopeFilterBorderedView;
@property DVTBorderedView *mainBorderedView; // @synthesize mainBorderedView=_mainBorderedView;
@property NSTextField *selectedTemplateDescription; // @synthesize selectedTemplateDescription=_selectedTemplateDescription;
@property NSTextField *selectedTemplateName; // @synthesize selectedTemplateName=_selectedTemplateName;
@property NSImageView *selectedTemplateImage; // @synthesize selectedTemplateImage=_selectedTemplateImage;
@property NSCollectionView *templateCollectionView; // @synthesize templateCollectionView=_templateCollectionView;
@property DVTSearchField *searchField; // @synthesize searchField=_searchField;
@property DVTScopeBarButton *customButton; // @synthesize customButton=_customButton;
@property DVTScopeBarButton *recentButton; // @synthesize recentButton=_recentButton;
@property DVTScopeBarButton *standardButton; // @synthesize standardButton=_standardButton;
@property NSButton *openExistingButton; // @synthesize openExistingButton=_openExistingButton;
@property NSButton *cancelButton; // @synthesize cancelButton=_cancelButton;
@property(retain) NSButton *profileButton; // @synthesize profileButton=_profileButton;
@property(retain) NSButton *chooseButton; // @synthesize chooseButton=_chooseButton;
@property XRTargetChooserPathControl *targetChooserPathControl; // @synthesize targetChooserPathControl=_targetChooserPathControl;
@property NSView *targetSearchContainer; // @synthesize targetSearchContainer=_targetSearchContainer;
@property NSView *mainView; // @synthesize mainView=_mainView;
- (void).cxx_destruct;
- (struct CGRect)window:(id)arg1 willPositionSheet:(id)arg2 usingRect:(struct CGRect)arg3;
- (void)templateDoubleClicked:(id)arg1;
- (BOOL)control:(id)arg1 textView:(id)arg2 doCommandBySelector:(SEL)arg3;
- (void)controlTextDidChange:(id)arg1;
- (void)customButtonClicked:(id)arg1;
- (void)standardButtonClicked:(id)arg1;
- (void)recentButtonClicked:(id)arg1;
- (void)_updateFilterButtons;
- (void)_filterTemplates;
- (void)chooseOrProfileClicked:(id)arg1;
- (void)cancelClicked:(id)arg1;
- (void)deleteTemplate:(id)arg1;
- (void)openExistingClicked:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)_updateChooseProfileButtons;
- (void)_updateSelectedTemplate;
- (void)_templateWasDeletedFromPathNotification:(id)arg1;
- (void)_templateWasAddedToDiskPathNotification:(id)arg1;
- (void)_refreshTemplates;
- (void)_loadTemplates;
- (void)_reconfigurePathControl;
- (void)_setupPathControl;
- (void)windowDidLoad;
- (void)handleDeviceNotification:(id)arg1;
- (long long)_defaultIntegerForKey:(id)arg1 missingValue:(long long)arg2;
- (void)_configureWindow;
- (void)windowWillClose:(id)arg1;
- (void)close;
- (id)windowNibName;
- (id)initWithWindowNibName:(id)arg1 plistData:(id)arg2 device:(id)arg3 process:(id)arg4;
- (id)initWithWindow:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRTemplateInfoView : PFTNibView
{
    NSString *_templateIconURL;
    XRImagePickerView *_imagePickerView;
    NSTextView *_description;
}

- (void).cxx_destruct;
- (void)imagePicker:(id)arg1 imageSelectedFromURL:(id)arg2;
- (void)imagePicker:(id)arg1 selectedImageAtIndex:(long long)arg2;
- (id)imagesForImagePicker:(id)arg1;
- (id)templateDescrption;
- (void)setTemplateDescription:(id)arg1;
- (id)templateIconURL;
- (void)setTemplateIconURL:(id)arg1;
- (id)init;

@end

@interface XRTerminationFriendlyPanel : NSPanel
{
}

- (BOOL)_blocksActionWhenModal:(SEL)arg1;

@end

@interface XRTextEntryPanel : PFTNibView
{
    NSTextField *_titleField;
    NSTextField *_entryField;
}

- (void).cxx_destruct;
- (void)keyDown:(id)arg1;
- (void)setTextValue:(id)arg1;
- (id)textValue;
- (void)cancel:(id)arg1;
- (void)cancelOperation:(id)arg1;
- (void)cancelAction:(id)arg1;
- (void)okAction:(id)arg1;

@end

@interface XRTextStorage : DVTTextStorage
{
    NSMutableDictionary *_links;
}

- (void).cxx_destruct;
- (void)fixSyntaxColoringInRange:(struct _NSRange)arg1;
- (void)removeAllLinks;
- (void)removeLinkForRange:(struct _NSRange)arg1;
- (void)addLink:(id)arg1 forRange:(struct _NSRange)arg2;

@end

@interface XRTextView : DVTSourceTextView <XREditableEntity>
{
    NSMutableArray *_commentObservers;
    id <XRTextViewDragDestination> _dragDestinationDelegate;
    BOOL _displaysVerticalMarkupInScroller;
    BOOL _isDirty;
    BOOL _disassembledTextOnly;
}

- (void).cxx_destruct;
- (BOOL)isDirty;
- (void)setIsDirty:(BOOL)arg1;
- (void)_userDidEditText:(id)arg1;
- (void)viewDidMoveToWindow;
- (BOOL)writeSelectionToPasteboard:(id)arg1 type:(id)arg2;
- (BOOL)readSelectionFromPasteboard:(id)arg1 type:(id)arg2;
- (id)writablePasteboardTypes;
- (id)readablePasteboardTypes;
- (BOOL)displaysVerticalMarkupInScroller;
- (void)setDisplaysVerticalMarkupInScroller:(BOOL)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (BOOL)prepareForDragOperation:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (id)dragDestinationDelegate;
- (void)setDragDestinationDelegate:(id)arg1;
- (void)display;
- (BOOL)shouldTrimTrailingWhitespace;
- (void)clearSourceComments;
- (void)setSourceComments:(id)arg1 withDisplayType:(int)arg2;
- (void)addCommentObserver:(id)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRThreadsStrategyUIController : XRDefaultHostingStrategyUIController <NSPopoverDelegate, XRUIModelChangeObserver, XRLazyKVOResponder>
{
    XRStrategiesToolbarButton *_processes;
    NSButton *_clearFilterButton;
    NSPopover *_popOver;
    XRThreadFilterViewController *_threadFilterController;
    XRProcessAndThreadListModel *_knownProcessesAndThreads;
    XRProcessAndThreadListModel *_restrictedProcessesAndThreads;
    XRThreadListLimiter *_limiter;
    XRIntKeyedDictionary *_includedThreadsByRun;
    XRElementSetModel *_includedThreads;
    long long _mySelectedRunNumber;
    NSOperation *_updateStrategyControllerOp;
    NSPopUpButton *_displayStyle;
    XRThreadStrategyController *_observedTSC;
    XRLazyKVOAdapter *_kvoAdapter;
    NSMapTable *_trackByThread;
    XRAnalysisCoreDetailViewController *_detailViewController;
    XRAnalysisCoreTrackConfigurator *_trackConfigurator;
    XRThreadsTimelineAccessibilityElement *_timelineAccessibilityElement;
}

+ (id)_requiredStrategyControllerIdentifier;
@property(readonly, nonatomic) NSMapTable *trackByThread; // @synthesize trackByThread=_trackByThread;
@property(readonly, nonatomic) XRThreadStrategyController *observedTSC; // @synthesize observedTSC=_observedTSC;
- (void).cxx_destruct;
- (BOOL)_supportsSelection;
- (void)_finalShutdownHandler;
- (void)_inspectionTimeIs:(unsigned long long)arg1;
- (void)_addFilterToNavigator:(id)arg1 planes:(id)arg2;
- (id)_currentSelectionIcon;
- (void)_setModelSelection:(id)arg1;
- (id)_currentSelectionContext:(id)arg1 container:(id)arg2;
- (void)_setTimelineGraph:(id)arg1;
- (void)setModel:(id)arg1;
- (void)_takeControlOfDetailView;
- (void)_resolutionDidChange;
- (void)_resetPlanesInTimeline;
- (void)_replaceOldState:(id)arg1 withState:(id)arg2;
- (void)_handleConsolidatedModelRefresh;
- (void)modelDidChange:(id)arg1;
- (void)_styleSelected:(id)arg1;
- (void)setStyle:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)handleLazyKVOUpdate:(id)arg1;
- (void)updateSelectedRun;
- (void)updateDisplayOptions;
- (void)updateThreadsAndProcesses;
- (void)excludeThreads:(id)arg1;
- (void)includeThreads:(id)arg1;
- (void)_backupIncludedThreads;
- (void)_updateStrategyControllerThreads;
- (void)restrictThreadToContainString:(id)arg1;
- (void)restrictThreadList:(id)arg1;
- (void)_clearFilterAction:(id)arg1;
- (void)_threadFilterButtonClicked:(id)arg1;
- (id)styleViews;
- (id)filterViews;
- (id)shortDescription;
- (id)smallIconAlternate;
- (id)smallIcon;
- (id)displayName;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRThreadsStrategyUIControllerState : XRStrategyUIControllerState
{
}

@end

@interface XRThreadsTimelineAccessibilityElement : XRAccessibilityElement <NSAccessibilityTable>
{
    XRThreadsStrategyUIController *_UIController;
    NSMutableArray *_rows;
}

- (void).cxx_destruct;
- (struct CGRect)accessibilityFrame;
- (id)accessibilityParent;
- (id)accessibilityRows;
- (id)accessibilityLabel;
- (void)rebuild;
- (id)initWithThreadsStrategyUIController:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRTimelineGraph : DTTimelineGraph <NSDraggingDestination>
{
    id <NSDraggingDestination> _draggingDestinationDelegate;
}

@property(nonatomic) __weak id <NSDraggingDestination> draggingDestinationDelegate; // @synthesize draggingDestinationDelegate=_draggingDestinationDelegate;
- (void).cxx_destruct;
- (BOOL)wantsPeriodicDraggingUpdates;
- (void)draggingEnded:(id)arg1;
- (void)concludeDragOperation:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (BOOL)prepareForDragOperation:(id)arg1;
- (void)draggingExited:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (void)viewDidMoveToWindow;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRTimelineItemAccessibilityElement : XRAccessibilityElement <NSAccessibilityRow>
{
    XRInstrument *_instrument;
    NSAccessibilityElement *_parent;
    XRInstrumentsStrategyUIController *_UIController;
    long long _index;
    NSAccessibilityElement *_statusMessage;
    XRInstrumentStrategyTopLevelItem *_topLevelItem;
    NSAccessibilityElement *_displayName;
}

+ (id)elementsFromTopLevelItem:(id)arg1 instrument:(id)arg2 index:(long long)arg3 parent:(id)arg4 controller:(id)arg5;
@property(readonly, nonatomic) __weak XRInstrument *instrument; // @synthesize instrument=_instrument;
@property(retain, nonatomic) NSAccessibilityElement *displayName; // @synthesize displayName=_displayName;
@property(readonly, nonatomic) __weak XRInstrumentStrategyTopLevelItem *topLevelItem; // @synthesize topLevelItem=_topLevelItem;
- (void).cxx_destruct;
- (id)accessibilityChildren;
- (struct CGPoint)accessibilityActivationPoint;
- (void)setAccessibilityDisclosed:(BOOL)arg1;
- (BOOL)isAccessibilityDisclosed;
- (id)accessibilityLabel;
- (struct CGRect)accessibilityFrame;
- (id)accessibilityParent;
- (id)accessibilitySubrole;
- (long long)accessibilityDisclosureLevel;
- (long long)accessibilityIndex;
- (id)initWithTopLevelItem:(id)arg1 instrument:(id)arg2 index:(long long)arg3 parent:(id)arg4 controller:(id)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRTimelineInstrumentNoRunsAccessibilityElement : XRTimelineItemAccessibilityElement
{
}

- (id)accessibilityChildren;

@end

@interface XRTimelineRunAccessibilityElement : XRTimelineItemAccessibilityElement
{
    DTTimelinePlane *_plane;
    BOOL _firstItem;
    XRTimelineRunTableAccessibilityElement *_table;
}

- (void).cxx_destruct;
- (id)accessibilityChildren;
- (id)accessibilityLabel;
- (struct CGRect)accessibilityFrame;
- (BOOL)isAccessibilitySelectorAllowed:(SEL)arg1;
- (long long)accessibilityDisclosureLevel;
- (id)initWithTopLevelItem:(id)arg1 instrument:(id)arg2 index:(long long)arg3 parent:(id)arg4 controller:(id)arg5 plane:(id)arg6 firstItem:(BOOL)arg7;

@end

@interface XRTimelineRunLabelAccessibilityElement : XRAccessibilityElement
{
    DTTimelinePlane *_plane;
}

- (void).cxx_destruct;
- (struct CGRect)accessibilityFrame;
- (id)initWithPlane:(id)arg1;

@end

@interface XRTimelineRunTableAccessibilityElement : XRAccessibilityElement <NSAccessibilityTable>
{
    DTTimelineGroupPlane *_groupPlane;
    NSAccessibilityElement *_parent;
    NSMutableArray *_rows;
}

- (void).cxx_destruct;
- (struct CGRect)accessibilityFrame;
- (id)accessibilityParent;
- (id)accessibilityLabel;
- (id)accessibilityRows;
- (id)initWithGroupPlane:(id)arg1 parent:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRTimelineRunTableRowAccessilblityElement : XRAccessibilityElement <NSAccessibilityRow>
{
    DTTimelinePlane *_plane;
    long long _index;
    NSMutableArray *_children;
    NSAccessibilityElement *_parent;
}

- (void).cxx_destruct;
- (id)accessibilityChildren;
- (id)accessibilityParent;
- (struct CGRect)accessibilityFrame;
- (long long)accessibilityIndex;
- (id)initWithPlane:(id)arg1 index:(long long)arg2 parent:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRToolbar : NSToolbar
{
}

- (BOOL)_allowsSizeMode:(unsigned long long)arg1;
- (BOOL)_allowsDisplayMode:(unsigned long long)arg1;
- (BOOL)isFullScreen;
- (id)_customMetrics;
- (void)validateVisibleItems;

@end

@interface XRToolbarManager : NSObject <XRToolbarManager>
{
    XRToolbar *_toolbar;
    NSString *_documentIdentifer;
}

+ (id)toolbarManagerWithIdentifier:(id)arg1 window:(id)arg2 documentIdentifier:(id)arg3;
@property(copy) NSString *documentIdentifer; // @synthesize documentIdentifer=_documentIdentifer;
@property(retain) XRToolbar *toolbar; // @synthesize toolbar=_toolbar;
- (void).cxx_destruct;
- (id)toolbarDefaultItemIdentifiers:(id)arg1;
- (id)toolbarAllowedItemIdentifiers:(id)arg1;
- (id)toolbar:(id)arg1 itemForItemIdentifier:(id)arg2 willBeInsertedIntoToolbar:(BOOL)arg3;
- (id)initWithToolbar:(id)arg1 documentIdentifier:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRToolbarSegmentedControl : DVTSegmentedControl
{
    NSMutableArray *_disabledImages;
    NSMutableArray *_alternateDisabledImages;
}

+ (id)_cachedInactiveAlternateImageFromImage:(id)arg1;
+ (id)_cachedInactiveImageFromImage:(id)arg1;
+ (id)_deriveInactiveImageFromImage:(id)arg1;
+ (double)borderedSegmentedControlSegmentWidthOn1010;
+ (id)toolbarSegmentedControlWithTrackingMode:(unsigned long long)arg1 images:(id)arg2 alternateImages:(id)arg3;
- (void).cxx_destruct;
- (id)alternateImageForSegment:(long long)arg1;
- (id)imageForSegment:(long long)arg1;
- (id)_alternateDisabledImages;
- (id)_disabledImages;

@end

@interface XRTopicBrowserOutlineView : DVTOutlineView
{
    NSTextFieldCell *_dataCellForGroupRow;
}

- (void).cxx_destruct;
- (id)preparedCellAtColumn:(long long)arg1 row:(long long)arg2;
- (id)_dataCellForGroupRow;
- (id)_groupRowFont;
- (struct CGRect)frameOfCellAtColumn:(long long)arg1 row:(long long)arg2;

@end

@interface XRTopicBrowserView : NSView
{
    id <XRTopicBrowserViewDelegate> _delegate;
}

@property __weak id <XRTopicBrowserViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (BOOL)performDragOperation:(id)arg1;
- (BOOL)prepareForDragOperation:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (void)viewDidMoveToWindow;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface XRTopicBrowserViewController : NSViewController <DVTOutlineViewDelegate, NSOutlineViewDataSource, XRTopicViewer, XRTopicBrowserViewDelegate>
{
    long long _returnCode;
    BOOL _isSheet;
    BOOL _icHandlesKeyDown;
    NSArray *_topics;
    XRTopic *_singleDropTopic;
    NSObject<XRTopicInterfaceComponent> *_currentBrowserBoxComponent;
    NSObject<XRTopicInterfaceComponent> *_currentOptionsBoxComponent;
    NSWindow *_parentWindow;
    XRBoxView *_browserBox;
    XRBoxView *_optionsBox;
    XRTopicBrowserOutlineView *_topicsList;
    NSButton *_cancelButton;
    NSButton *_okButton;
    NSTextField *_messageField;
}

@property(nonatomic) __weak NSTextField *messageField; // @synthesize messageField=_messageField;
@property(nonatomic) __weak NSButton *okButton; // @synthesize okButton=_okButton;
@property(nonatomic) __weak NSButton *cancelButton; // @synthesize cancelButton=_cancelButton;
@property(nonatomic) __weak XRTopicBrowserOutlineView *topicsList; // @synthesize topicsList=_topicsList;
@property(nonatomic) __weak XRBoxView *optionsBox; // @synthesize optionsBox=_optionsBox;
@property(nonatomic) __weak XRBoxView *browserBox; // @synthesize browserBox=_browserBox;
@property(retain, nonatomic) NSWindow *parentWindow; // @synthesize parentWindow=_parentWindow;
@property(retain, nonatomic) NSObject<XRTopicInterfaceComponent> *currentOptionsBoxComponent; // @synthesize currentOptionsBoxComponent=_currentOptionsBoxComponent;
@property(retain, nonatomic) NSObject<XRTopicInterfaceComponent> *currentBrowserBoxComponent; // @synthesize currentBrowserBoxComponent=_currentBrowserBoxComponent;
@property(retain, nonatomic) XRTopic *singleDropTopic; // @synthesize singleDropTopic=_singleDropTopic;
@property(retain, nonatomic) NSArray *topics; // @synthesize topics=_topics;
- (void).cxx_destruct;
- (void)_endWithCode:(int)arg1;
- (void)setSelectedTopic:(id)arg1;
- (id)selectedTopic;
- (void)topicBrowserView:(id)arg1 filenameDropped:(id)arg2;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (BOOL)outlineView:(id)arg1 shouldShowOutlineCellForItem:(id)arg2;
- (void)outlineViewSelectionDidChange:(id)arg1;
- (void)_setSubTopicView:(id)arg1;
- (BOOL)outlineView:(id)arg1 shouldEditTableColumn:(id)arg2 item:(id)arg3;
- (BOOL)outlineView:(id)arg1 shouldSelectItem:(id)arg2;
- (double)outlineView:(id)arg1 heightOfRowByItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 shouldExpandItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 shouldCollapseItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 isGroupItem:(id)arg2;
- (id)outlineView:(id)arg1 objectValueForTableColumn:(id)arg2 byItem:(id)arg3;
- (long long)outlineView:(id)arg1 numberOfChildrenOfItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 isItemExpandable:(id)arg2;
- (id)outlineView:(id)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (long long)_displaySheetOnTargetedObject:(id)arg1 withTopics:(id)arg2;
- (long long)displayModalOnTargetedObject:(id)arg1 withTopics:(id)arg2;
- (void)_cancel:(id)arg1;
- (void)keyDown:(id)arg1;
- (void)okChooser:(id)arg1;
- (void)cancelChooser:(id)arg1;
- (id)result;
- (void)_updateView;
- (void)awakeFromNib;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRTrack : XRStrategyDecorationRequest
{
    struct priority_queue<PriorityQueueEntry, std::__1::vector<PriorityQueueEntry, std::__1::allocator<PriorityQueueEntry>>, std::__1::less<PriorityQueueEntry>> _eventPlanes;
    struct priority_queue<PriorityQueueEntry, std::__1::vector<PriorityQueueEntry, std::__1::allocator<PriorityQueueEntry>>, std::__1::less<PriorityQueueEntry>> _statePlanes;
    struct priority_queue<PriorityQueueEntry, std::__1::vector<PriorityQueueEntry, std::__1::allocator<PriorityQueueEntry>>, std::__1::less<PriorityQueueEntry>> _valuePlanes;
    double _fixedHeightTotal;
    NSMutableArray *_delayedUpdateOps;
    struct __CFDictionary *_knownValueGroupPlanes;
    BOOL _planesWereAdded;
    unsigned long long _heightInDeckUnits;
}

+ (double)deckHeightInPoints;
@property(nonatomic) unsigned long long heightInDeckUnits; // @synthesize heightInDeckUnits=_heightInDeckUnits;
@property(readonly, nonatomic) BOOL planesWereAdded; // @synthesize planesWereAdded=_planesWereAdded;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)addPlane:(id)arg1;
- (void)requiresOperationToCompleteBeforeLayout:(id)arg1;
- (void)doneAddingPlanes;
- (void)_layoutPlanes;
- (void)removeAllPlanes;
- (void)addStatePlane:(id)arg1 order:(float)arg2;
- (void)addValuePlane:(id)arg1 toGroupPlane:(id)arg2;
- (void)addValuePlane:(id)arg1 order:(float)arg2;
- (id)addValueGroupPlaneOrder:(float)arg1;
- (void)addEventPlane:(id)arg1 order:(float)arg2;
- (void)dealloc;
- (id)initWithRunNumber:(long long)arg1 resolution:(unsigned long long)arg2;
- (id)initWithPlaneManager:(id)arg1 groupPlane:(id)arg2 runNumber:(long long)arg3 resolution:(unsigned long long)arg4;

@end

@interface XRTrackAndDetailSplitViewController : NSSplitViewController
{
    NSLayoutConstraint *_forcedBottomHeightConstraint;
}

- (void).cxx_destruct;
- (void)viewDidAppear;
- (void)viewWillDisappear;
- (void)viewDidLoad;
- (void)loadView;
@property(readonly, nonatomic) NSView *bottomCtrlView;
- (id)topCtrlView;

@end

@interface XRTrackOverlay : XRStrategyDecorationRequest
{
}

- (void)addConnectionPlane:(id)arg1;

@end

@interface XRTrackingAreaControl : NSTrackingArea
{
    BOOL _isMouseDown;
}

- (void)cursorUpdate:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)mouseUp:(id)arg1;
- (BOOL)isMouseDown;
- (id)view;
- (BOOL)hitTest:(id)arg1;

@end

@interface XRTransparentView : NSView
{
}

- (void)drawRect:(struct CGRect)arg1;
- (BOOL)isOpaque;

@end

@interface XRULRViewController : NSViewController
{
    WebView *_webview;
}

- (void).cxx_destruct;
- (id)init;

@end

@interface XRVerticallyCenteredTextFieldCell : NSTextFieldCell
{
}

- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (struct CGRect)titleRectForBounds:(struct CGRect)arg1;

@end

@interface XRWeightFormatter : XREngineeringTypeFormatter
{
    long long _weightIdx;
    unsigned short _impliedType;
    XRAnalysisCoreValue *_resuableVal;
    BOOL _includePercentageOfTotal;
    BOOL _useSelfColumn;
}

@property(nonatomic) BOOL useSelfColumn; // @synthesize useSelfColumn=_useSelfColumn;
@property(nonatomic) BOOL includePercentageOfTotal; // @synthesize includePercentageOfTotal=_includePercentageOfTotal;
- (void).cxx_destruct;
- (id)stringForObjectValue:(id)arg1;
- (id)initWithTrace:(id)arg1 runNumber:(long long)arg2;
- (id)initWithTrace:(id)arg1 runNumber:(long long)arg2 impliedEngineeringTypeID:(unsigned short)arg3 weightIdx:(long long)arg4;

@end

@interface XRZoomToolbarItem : XRToolbarItem
{
    id _trackView;
}

@property(retain) id trackView; // @synthesize trackView=_trackView;
- (void).cxx_destruct;
- (void)disconnectFromContext;
- (void)connectToContext:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;

@end

@interface _XRCLIPSDebuggerChooserState : NSObject
{
    NSMutableArray *_debuggerStatesByID;
}

@property(retain, nonatomic) NSMutableArray *debuggerStatesByID; // @synthesize debuggerStatesByID=_debuggerStatesByID;
- (void).cxx_destruct;
- (id)init;

@end

@interface _XRCLIPSDebuggingUIState : NSObject
{
    NSMutableSet *_availableModuleSet;
    NSMutableAttributedString *_consoleAttributedText;
    NSMutableAttributedString *_factAttributedText;
    NSString *_chosenModuleName;
    NSMutableArray *_availableModuleNames;
}

@property(retain, nonatomic) NSMutableArray *availableModuleNames; // @synthesize availableModuleNames=_availableModuleNames;
@property(retain, nonatomic) NSString *chosenModuleName; // @synthesize chosenModuleName=_chosenModuleName;
@property(retain, nonatomic) NSMutableAttributedString *factAttributedText; // @synthesize factAttributedText=_factAttributedText;
@property(retain, nonatomic) NSMutableAttributedString *consoleAttributedText; // @synthesize consoleAttributedText=_consoleAttributedText;
@property(retain, nonatomic) NSMutableSet *availableModuleSet; // @synthesize availableModuleSet=_availableModuleSet;
- (void).cxx_destruct;
- (id)init;

@end

@interface _XRDebuggerNavigatorItem : NSObject
{
    NSMutableArray *_subItems;
    NSString *_title;
    NSView *_detailView;
    id <NSObject> _representedObject;
}

@property(retain, nonatomic) id <NSObject> representedObject; // @synthesize representedObject=_representedObject;
@property(readonly, nonatomic) NSView *detailView; // @synthesize detailView=_detailView;
@property(retain, nonatomic) NSString *title; // @synthesize title=_title;
@property(retain, nonatomic) NSMutableArray *subItems; // @synthesize subItems=_subItems;
- (void).cxx_destruct;
- (BOOL)isHeader;
- (id)initWithTitle:(id)arg1 detailView:(id)arg2 object:(id)arg3;

@end

@interface _XRDebuggerHeaderOnly : _XRDebuggerNavigatorItem
{
}

- (BOOL)isHeader;

@end

@interface _XRDebuggerModelerDetail : NSObject
{
    unsigned char _stage;
    NSString *_modelerClassName;
    NSString *_debugString;
    NSArray *_tableBindings;
    unsigned long long _instanceNumber;
}

@property(nonatomic) unsigned long long instanceNumber; // @synthesize instanceNumber=_instanceNumber;
@property(retain, nonatomic) NSArray *tableBindings; // @synthesize tableBindings=_tableBindings;
@property(retain, nonatomic) NSString *debugString; // @synthesize debugString=_debugString;
@property(retain, nonatomic) NSString *modelerClassName; // @synthesize modelerClassName=_modelerClassName;
@property(nonatomic) unsigned char stage; // @synthesize stage=_stage;
- (void).cxx_destruct;

@end

@interface _XRDebuggerSchemaColumnDetail : NSObject
{
    unsigned long long _columnID;
    NSString *_mnemonic;
    NSString *_engineeringName;
    NSString *_engineeringType;
}

@property(retain, nonatomic) NSString *engineeringType; // @synthesize engineeringType=_engineeringType;
@property(retain, nonatomic) NSString *engineeringName; // @synthesize engineeringName=_engineeringName;
@property(retain, nonatomic) NSString *mnemonic; // @synthesize mnemonic=_mnemonic;
@property(nonatomic) unsigned long long columnID; // @synthesize columnID=_columnID;
- (void).cxx_destruct;

@end

@interface _XRDebuggerSchemaDetails : NSObject <NSCopying>
{
    NSString *_schemaDescription;
    NSArray *_columns;
}

@property(retain, nonatomic) NSArray *columns; // @synthesize columns=_columns;
@property(retain, nonatomic) NSString *schemaDescription; // @synthesize schemaDescription=_schemaDescription;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface _XRDebuggerTableDetail : NSObject
{
    NSNumber *_tableID;
    NSString *_debugString;
    NSString *_access;
    NSString *_visibility;
}

@property(retain, nonatomic) NSString *visibility; // @synthesize visibility=_visibility;
@property(retain, nonatomic) NSString *access; // @synthesize access=_access;
@property(retain, nonatomic) NSString *debugString; // @synthesize debugString=_debugString;
@property(retain, nonatomic) NSNumber *tableID; // @synthesize tableID=_tableID;
- (void).cxx_destruct;

@end

@interface _XRSegmentedCell : NSSegmentedCell
{
    NSImageCell *_arrowImageCell;
    BOOL _useMenuDelay;
    BOOL _useMenuDelayForSelectedSegment;
    BOOL _useRadioDrawingStyle;
    NSPointerArray *_segmentImages;
    BOOL _useAnyDrawingStyle;
}

@property BOOL useAnyDrawingStyle; // @synthesize useAnyDrawingStyle=_useAnyDrawingStyle;
@property BOOL useRadioDrawingStyle; // @synthesize useRadioDrawingStyle=_useRadioDrawingStyle;
@property BOOL useMenuDelayForSelectedSegment; // @synthesize useMenuDelayForSelectedSegment=_useMenuDelayForSelectedSegment;
@property BOOL useMenuDelay; // @synthesize useMenuDelay=_useMenuDelay;
- (void).cxx_destruct;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawSegment:(long long)arg1 inFrame:(struct CGRect)arg2 withView:(id)arg3;
- (void)_drawMenuIndicatorForFrame:(struct CGRect)arg1 activeStyle:(BOOL)arg2 withView:(id)arg3;
- (unsigned long long)_applicableTrackingModeForSegment:(long long)arg1;
- (void)setControlSize:(unsigned long long)arg1;
- (void)setImage:(id)arg1 forSegment:(long long)arg2;
- (id)_adjustImage:(id)arg1 forControlSize:(unsigned long long)arg2;
- (void)setSegmentCount:(long long)arg1;
- (id)_segmentImages;
- (double)_menuDelayTimeForSegment:(long long)arg1;
- (id)init;

@end

