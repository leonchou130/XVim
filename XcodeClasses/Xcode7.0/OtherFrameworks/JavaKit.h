//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Named Structures

struct JKByteStream {
    char *_field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long _field4;
};

struct _NSRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct zip_struct {
    char *_field1;
    int _field2;
    struct *_field3;
    int _field4;
    long long _field5;
    long long _field6;
};

#pragma mark Typedef'd Structures

typedef struct {
    long long _field1;
    char *_field2[0];
} CDStruct_202c1fbd;

#pragma mark -

//
// File: /Applications/Xcode-7GM.app/Contents/OtherFrameworks/JavaKit.framework/Versions/A/JavaKit
// UUID: BA5220A5-4D43-3E8E-B02B-2AB28CC652F3
//
//                           Arch: x86_64
//                Current version: 7001.0.0
//          Compatibility version: 1.0.0
//                 Source version: 7001.0.0.0.0
//       Minimum Mac OS X version: 10.10.0
//                    SDK version: 10.11.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@interface JKClassStore : NSObject
{
}

+ (BOOL)canGrokName:(id)arg1;
+ (id)classStoreForName:(id)arg1;
+ (void)initialize;
- (id)dataForClassWithName:(id)arg1;
- (BOOL)containsPackageWithName:(id)arg1;
- (BOOL)containsClassWithName:(id)arg1;
- (id)packageNamesInPackage:(id)arg1;
- (id)classNamesInPackage:(id)arg1;
- (id)name;
- (id)initWithName:(id)arg1;

@end

@interface JKClassFileStore : JKClassStore
{
    NSString *_classFilePath;
    NSString *_className;
}

+ (BOOL)canGrokName:(id)arg1;
- (id)dataForClassWithName:(id)arg1;
- (BOOL)containsPackageWithName:(id)arg1;
- (BOOL)containsClassWithName:(id)arg1;
- (id)packageNamesInPackage:(id)arg1;
- (id)classNamesInPackage:(id)arg1;
- (id)name;
- (void)dealloc;
- (void)setClassName:(id)arg1;
- (id)initWithName:(id)arg1;

@end

@interface JKClassLibrary : NSObject
{
    NSMutableArray *_classStores;
}

+ (id)defaultClassLibrary;
- (id)packageNameEnumerator;
- (id)classNameEnumerator;
- (id)_packageNamesInPackage:(id)arg1;
- (id)_classNamesInPackage:(id)arg1;
- (id)_namesInPackage:(id)arg1 lookingForClassNames:(BOOL)arg2;
- (id)description;
- (id)rootPackage;
- (id)packageWithName:(id)arg1;
- (id)dataForClassWithName:(id)arg1;
- (id)classStoreForClassWithName:(id)arg1;
- (id)classWithName:(id)arg1;
- (BOOL)containsClassWithName:(id)arg1;
- (id)classPaths;
- (void)removeClassPaths:(id)arg1;
- (void)removeClassPath:(id)arg1;
- (void)addClassPaths:(id)arg1;
- (void)addClassPath:(id)arg1;
- (void)dealloc;
- (id)initWithClassPaths:(id)arg1;
- (id)init;
- (id)classPath;
- (void)appendToClassPath:(id)arg1;
- (id)initWithClassPath:(id)arg1;

@end

@interface JKFileSystemStore : JKClassStore
{
    NSString *_rootPath;
}

+ (BOOL)canGrokName:(id)arg1;
- (id)dataForClassWithName:(id)arg1;
- (BOOL)containsPackageWithName:(id)arg1;
- (BOOL)containsClassWithName:(id)arg1;
- (id)packageNamesInPackage:(id)arg1;
- (id)classNamesInPackage:(id)arg1;
- (id)pathForPackageName:(id)arg1;
- (id)name;
- (void)dealloc;
- (id)initWithName:(id)arg1;

@end

@interface JKZipFileStore : JKClassStore
{
    NSString *_zipFilePath;
    struct zip_struct *_zipFile;
}

+ (BOOL)canGrokName:(id)arg1;
- (id)description;
- (id)allSourceAndClassFilesInPackage:(id)arg1 includingInnerClasses:(BOOL)arg2;
- (id)allSourceAndClassFilesIncludingInnerClasses:(BOOL)arg1;
- (BOOL)containsFileWithName:(id)arg1;
- (id)dataForFileWithName:(id)arg1;
- (id)subDirectoriesInDirectory:(id)arg1;
- (id)fileNamesInDirectory:(id)arg1;
- (id)dataForClassWithName:(id)arg1;
- (BOOL)containsPackageWithName:(id)arg1;
- (BOOL)containsClassWithName:(id)arg1;
- (id)packageNamesInPackage:(id)arg1;
- (id)classNamesInPackage:(id)arg1;
- (id)name;
- (void)finalize;
- (void)dealloc;
- (id)initWithName:(id)arg1;

@end

@interface JKJarFileStore : JKZipFileStore
{
}

+ (BOOL)canGrokName:(id)arg1;
- (id)description;

@end

@interface JKJavaAttribute : NSObject
{
}

+ (id)attributeWithName:(id)arg1 byteStream:(struct JKByteStream *)arg2 constantPool:(CDStruct_202c1fbd *)arg3;
+ (void)registerAttributeClass:(Class)arg1 forName:(id)arg2;
+ (void)initialize;
- (id)typeName;

@end

@interface JKJavaClass : NSObject
{
    NSString *_className;
    NSString *_superclassName;
    unsigned long long _accessFlags;
    NSMutableArray *_interfaces;
    NSMutableArray *_fields;
    NSMutableArray *_methods;
    NSMutableArray *_constructors;
    NSArray *_attributes;
    JKClassLibrary *_classLibrary;
}

- (id)description;
- (void)_appendMethodDescriptions:(id)arg1 areDeclarations:(BOOL)arg2 areConstructors:(BOOL)arg3 toString:(id)arg4;
- (void)_appendFieldDescriptionsToString:(id)arg1;
- (id)attributeWithName:(id)arg1;
- (BOOL)hasMember:(id)arg1;
- (id)sourceFile;
- (id)classLibrary;
- (id)package;
- (id)outerClass;
- (id)superclass;
- (id)attributes;
- (id)interfaces;
- (id)fields;
- (id)constructors;
- (id)methods;
- (BOOL)isDeprecated;
- (BOOL)isInnerClass;
- (BOOL)isInterface;
- (BOOL)isFinal;
- (BOOL)isAbstract;
- (BOOL)isPublic;
- (id)packageName;
- (id)outerClassName;
- (id)superclassName;
- (id)className;
- (void)_setClassLibrary:(id)arg1;
- (void)dealloc;
- (id)initWithContentsOfFile:(id)arg1;
- (id)initWithData:(id)arg1;
- (void)setClassAttributes:(id)arg1;
- (void)addMethodName:(id)arg1 signature:(id)arg2 access:(int)arg3 attributes:(id)arg4;
- (void)addConstructorName:(id)arg1 signature:(id)arg2 access:(int)arg3 attributes:(id)arg4;
- (void)addFieldName:(id)arg1 signature:(id)arg2 access:(int)arg3 attributes:(id)arg4;
- (void)setFieldCount:(long long)arg1;
- (void)addInterfaceName:(id)arg1;
- (void)setSuperClassName:(id)arg1;
- (void)setClassName:(id)arg1;
- (void)setClassAccess:(int)arg1;

@end

@interface JKJavaCodeAttribute : JKJavaAttribute
{
    unsigned short _maxStack;
    unsigned short _maxLocals;
    unsigned long long _codeLength;
    char *_byteCode;
    NSMutableArray *_exceptionTable;
    NSArray *_attributes;
}

- (id)description;
- (id)attributes;
- (id)exceptionTable;
- (const char *)byteCode;
- (unsigned long long)codeLength;
- (unsigned short)maxLocals;
- (unsigned short)maxStack;
- (id)typeName;
- (void)finalize;
- (void)dealloc;
- (id)initWithName:(id)arg1 byteStream:(struct JKByteStream *)arg2 constantPool:(CDStruct_202c1fbd *)arg3;

@end

@interface JKJavaCodeExceptionAttribute : NSObject
{
    unsigned short _startPc;
    unsigned short _endPc;
    unsigned short _handlerPc;
    NSString *_catchType;
}

- (id)description;
- (BOOL)isFinallyClause;
- (id)caughtExceptionName;
- (unsigned short)handlerPc;
- (unsigned short)endPc;
- (unsigned short)startPc;
- (void)dealloc;
- (id)initWithByteStream:(struct JKByteStream *)arg1 constantPool:(CDStruct_202c1fbd *)arg2;

@end

@interface JKJavaConstantAttribute : JKJavaAttribute
{
    id _value;
}

- (id)value;
- (id)typeName;
- (void)dealloc;
- (id)initWithName:(id)arg1 byteStream:(struct JKByteStream *)arg2 constantPool:(CDStruct_202c1fbd *)arg3;

@end

@interface JKJavaMember : NSObject
{
    NSString *_name;
    NSString *_signature;
    unsigned long long _accessMask;
    NSArray *_attributes;
}

- (id)attributeWithName:(id)arg1;
- (id)attributes;
- (unsigned long long)accessMask;
- (id)signature;
- (BOOL)isDeclaration;
- (BOOL)isDeprecated;
- (BOOL)isStatic;
- (BOOL)isFinal;
- (BOOL)isPrivate;
- (BOOL)isProtected;
- (BOOL)isPublic;
- (id)shortDescription;
- (id)name;
- (BOOL)isEqual:(id)arg1;
- (void)dealloc;
- (id)initWithName:(id)arg1 signature:(id)arg2 accessMask:(unsigned long long)arg3 attributes:(id)arg4;

@end

@interface JKJavaMethod : JKJavaMember
{
    JKJavaType *_returnType;
    NSArray *_argumentTypes;
}

+ (BOOL)_parseMethodSignature:(id)arg1 methodReturnType:(id *)arg2 methodArguments:(id *)arg3;
+ (BOOL)parseMethodSignature:(id)arg1 methodReturnType:(id *)arg2 methodArguments:(id *)arg3;
- (id)shortDescription;
- (id)description;
- (id)exceptions;
- (BOOL)isNative;
- (BOOL)isSynchronized;
- (BOOL)isAbstract;
- (id)arguments;
- (id)argumentTypeAtIndex:(unsigned long long)arg1;
- (unsigned long long)numberOfArguments;
- (id)returnType;
- (void)dealloc;
- (id)initWithName:(id)arg1 signature:(id)arg2 accessMask:(unsigned long long)arg3 attributes:(id)arg4;

@end

@interface JKJavaConstructor : JKJavaMethod
{
}

- (id)shortDescription;
- (id)description;
- (id)returnType;
- (BOOL)isClassConstructor;
- (id)initWithName:(id)arg1 signature:(id)arg2 accessMask:(unsigned long long)arg3 attributes:(id)arg4;

@end

@interface JKJavaExceptionsAttribute : JKJavaAttribute
{
    NSMutableArray *_exceptionTable;
}

- (id)exceptionTable;
- (id)typeName;
- (void)dealloc;
- (id)initWithName:(id)arg1 byteStream:(struct JKByteStream *)arg2 constantPool:(CDStruct_202c1fbd *)arg3;

@end

@interface JKJavaField : JKJavaMember
{
    JKJavaType *_type;
}

- (id)description;
- (id)initialValue;
- (BOOL)isVolatile;
- (BOOL)isTransient;
- (BOOL)isPublic;
- (id)type;
- (void)dealloc;
- (id)initWithName:(id)arg1 signature:(id)arg2 accessMask:(unsigned long long)arg3 attributes:(id)arg4;

@end

@interface JKJavaInnerClassAttribute : NSObject
{
    NSString *_innerClassName;
    NSString *_outerClassName;
    NSString *_shortName;
    int _modifiers;
}

- (id)description;
- (int)modifiers;
- (id)simpleInnerClassName;
- (id)outerClassName;
- (id)innerClassName;
- (void)dealloc;
- (id)initWithInnerClassName:(id)arg1 outerClassName:(id)arg2 simpleInnerClassName:(id)arg3 modifiers:(int)arg4;

@end

@interface JKJavaInnerClassesAttribute : JKJavaAttribute
{
    NSMutableArray *_innerClasses;
}

- (id)description;
- (id)typeName;
- (id)innerClasses;
- (void)dealloc;
- (id)initWithName:(id)arg1 byteStream:(struct JKByteStream *)arg2 constantPool:(CDStruct_202c1fbd *)arg3;

@end

@interface JKJavaPackage : NSObject
{
    NSString *_packageName;
    JKClassLibrary *_classLibrary;
}

- (id)packageNameEnumerator;
- (id)classNameEnumerator;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)description;
- (id)classLibrary;
- (id)superpackage;
- (id)packageWithName:(id)arg1;
- (id)classWithName:(id)arg1;
- (id)packages;
- (id)classes;
- (id)packageNames;
- (id)classNames;
- (id)packageName;
- (void)dealloc;
- (id)initWithPackageName:(id)arg1 forClassLibrary:(id)arg2;

@end

@interface JKJavaPackageEnumerator : NSEnumerator
{
    NSString *_name;
    JKClassLibrary *_library;
    NSArray *_packages;
    NSArray *_classNames;
    unsigned long long _index;
    NSEnumerator *_next;
    BOOL _enumerateClassNames;
}

- (id)nextObject;
- (void)dealloc;
- (id)initWithPackage:(id)arg1 enumerateClassNames:(BOOL)arg2;
- (void)_nextEnumerator;

@end

@interface JKJavaSourceAttribute : JKJavaAttribute
{
    NSString *_sourceName;
}

- (id)description;
- (id)sourceName;
- (id)typeName;
- (void)dealloc;
- (id)initWithName:(id)arg1 byteStream:(struct JKByteStream *)arg2 constantPool:(CDStruct_202c1fbd *)arg3;

@end

@interface JKJavaType : NSObject <NSCopying>
{
    NSString *_signature;
    NSString *_className;
    int _baseType;
    unsigned long long _dimensionality;
}

+ (id)typeWithSignature:(id)arg1;
- (id)description;
- (id)_baseTypeDescription;
- (id)className;
- (unsigned long long)dimensionality;
- (int)baseType;
- (id)signature;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithSignature:(id)arg1;

@end

@interface JKJavaUnknownAttribute : JKJavaAttribute
{
    NSString *_typeName;
}

- (id)description;
- (id)typeName;
- (void)dealloc;
- (id)initWithName:(id)arg1 byteStream:(struct JKByteStream *)arg2 constantPool:(CDStruct_202c1fbd *)arg3;

@end

@interface NSString (JKEnvironmentVariableExpansion)
- (id)stringByExpandingEnvironmentVariables;
@end

@interface NSString (JKPathUtilities)
- (id)lastJavaComponent;
- (id)stringByDeletingLastJavaComponent;
- (struct _NSRange)rangeOfLastJavaComponentSeparator;
- (id)stringByAppendingJavaComponent:(id)arg1;
- (id)stringByConvertingPathToJavaIdentifier;
- (id)stringByConvertingJavaIdentifierToPath;
@end

