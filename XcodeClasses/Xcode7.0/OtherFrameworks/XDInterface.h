//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Named Structures

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct _MXScrollViewQFlags {
    unsigned int hasVerticalScrollerViews:1;
    unsigned int hasHorizontalScrollerViews:1;
    unsigned int RESERVED:30;
};

struct _NSRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct _XDBezelWidgetViewFlags {
    unsigned int setAcceptsMouseMoved:1;
    unsigned int wasAcceptingMouseMoved:1;
    unsigned int RESERVED:30;
};

struct _XDCompartmentFlags {
    unsigned int drawsBackground:1;
    unsigned int editable:1;
    unsigned int RESERVED:30;
};

struct _XDCompartmentGraphicAuxiliaryStorageFlags {
    unsigned int selectionPostingDisableCount:7;
    unsigned int RESERVED:25;
};

struct _XDCompartmentGraphicFlags {
    unsigned int alwaysDrawsCompartmentLabel:1;
    unsigned int rollsUpCompartments:1;
    unsigned int dataSourceRespondsToSetObjectValueForItemInCompartmentAtIndex:1;
    unsigned int delegateRespondsToWillDisplayCompartmentInDiagramView:1;
    unsigned int delegateRespondsToShouldExpandCompartment:1;
    unsigned int delegateRespondsToShouldCollapseCompartment:1;
    unsigned int delegateRespondsToShouldDisplayActionButtonForCompartmentItem:1;
    unsigned int delegateRespondsToWillDisplayItemInCompartmentAtIndexInDiagramView:1;
    unsigned int delegateRespondsToShouldEditItemInCompartmentAtIndex:1;
    unsigned int delegateRespondsToSelectionDidChange:1;
    unsigned int RESERVED:20;
};

struct _XDCompartmentItemCellFlags {
    unsigned int imagePosition:3;
    unsigned int RESERVED:29;
};

struct _XDConnectionFlags {
    unsigned int graphicRespondsToConnectionDidMove:1;
    unsigned int RESERVED:31;
};

struct _XDDiagramStorageFlags {
    unsigned int delegateRespondsToDidAddGraphicsLayer:1;
    unsigned int delegateRespondsToWillRemoveGraphicsLayer:1;
    unsigned int delegateRespondsToDidAddGraphic:1;
    unsigned int delegateRespondsToWillRemoveGraphic:1;
    unsigned int disablingInvalidateGraphicCount:7;
    unsigned int RESERVED:21;
};

struct _XDDiagramToolFlags {
    unsigned int acceptsMouseMovedEvents:1;
    unsigned int RESERVED:31;
};

struct _XDDiagramViewFlags {
    unsigned int ownsDiagramStorage:1;
    unsigned int autoresizesCanvas:1;
    unsigned int isSelectable:1;
    unsigned int isEditable:1;
    unsigned int allowsDragAndDrop:1;
    unsigned int drawsCanvasBackground:1;
    unsigned int drawsCanvasShadow:1;
    unsigned int drawsBackground:1;
    unsigned int showsGrid:1;
    unsigned int showsMajorGrid:1;
    unsigned int showsMinorGrid:1;
    unsigned int snapsToGrid:1;
    unsigned int showsPageBreaks:1;
    unsigned int allowsUndo:1;
    unsigned int allowsTypeToSelect:1;
    unsigned int showsHiddenGraphics:1;
    unsigned int showsSelectedGraphicsInFront:1;
    unsigned int knobsHidden:1;
    unsigned int setAcceptsMouseMoved:1;
    unsigned int wasAcceptingMouseMoved:1;
    unsigned int delegateRespondsToUndoManagerForDiagramView:1;
    unsigned int delegateRespondsToTextDidBeginEditing:1;
    unsigned int delegateRespondsToTextDidEndEditing:1;
    unsigned int delegateRespondsToTextDidChange:1;
    unsigned int delegateRespondsToSelectionShouldChangeInDiagramView:1;
    unsigned int delegateRespondsToShouldSelectGraphic:1;
    unsigned int delegateRespondsToSelectionDidChange:1;
    unsigned int delegateRespondsToShouldRemoveGraphics:1;
    unsigned int delegateRespondsToWillRemoveGraphics:1;
    unsigned int delegateRespondsToToolTipForGraphicPoint:1;
    unsigned int delegateRespondsToTextShouldBeginEditing:1;
    unsigned int delegateRespondsToTextShouldEndEditing:1;
    unsigned int delegateRespondsToTextViewDoCommandBySelector:1;
    unsigned int delegateRespondsToWritablePasteboardTypesForGraphics:1;
    unsigned int delegateRespondsToWriteGraphicsToPasteboardType:1;
    unsigned int delegateRespondsToTypeToSelectWithString:1;
    unsigned int delegateRespondsToPrintInfoForDiagramView:1;
    unsigned int selectionPostingDisableCount:4;
    unsigned int RESERVED:23;
};

struct _XDFillStyleFlags {
    unsigned int drawsFill:1;
    unsigned int fillType:2;
    unsigned int RESERVED:29;
};

struct _XDGraphicFlags {
    unsigned int drawsContents:1;
    unsigned int hidden:1;
    unsigned int flippedHorizontally:1;
    unsigned int flippedVertically:1;
    unsigned int locked:1;
    unsigned int movable:1;
    unsigned int editable:1;
    unsigned int resizable:1;
    unsigned int removable:1;
    unsigned int layoutable:1;
    unsigned int acceptsConnections:1;
    unsigned int highlighted:1;
    unsigned int acceptsMouseMovedEvents:1;
    unsigned int autoresizesContentsToFit:1;
    unsigned int widthTracksContents:1;
    unsigned int heightTracksContents:1;
    unsigned int contentsHorizontalAlignment:3;
    unsigned int contentsVerticalAlignment:2;
    unsigned int disabledDrawingCacheCount:4;
    unsigned int manipulatingBoundsCount:5;
    unsigned int RESERVED:2;
};

struct _XDGraphicTextContainerFlags {
    unsigned int delegateRespondsToLineFragemntRect:1;
    unsigned int RESERVED:31;
};

struct _XDLineEndFlags {
    unsigned int filled:1;
    unsigned int RESERVED:31;
};

struct _XDLineGraphicFlags {
    unsigned int lineType:1;
    unsigned int RESERVED:31;
};

struct _XDLineGraphicToolFlags {
    unsigned int delegateRespondsToShouldStartLineWithTailGraphicInDiagramView:1;
    unsigned int delegateRespondsToWillStartLineWithTailGraphicInDiagramView:1;
    unsigned int delegateRespondsToShouldSetLineHeadGraphicInDiagramView:1;
    unsigned int delegateRespondsToWillSetLineHeadGraphicInDiagramView:1;
    unsigned int delegateRespondsToShouldAddLineInDiagramView:1;
    unsigned int delegateRespondsToWillAddLineInDiagramView:1;
    unsigned int RESERVED:26;
};

struct _XDOutlineViewFlags {
    unsigned int optionClickCausesEditing:1;
    unsigned int optionClickEditsAnyCell:1;
    unsigned int tableColumnProviderRespondsToWillAddTableColumn:1;
    unsigned int tableColumnProviderRespondsToDidRemoveTableColumn:1;
    unsigned int tableColumnProviderRespondsToWillSynchronizeTableHeaderContextMenu:1;
    unsigned int tableColumnProviderRespondsToDidSynchronizeTableHeaderContextMenu:1;
    unsigned int RESERVED:26;
};

struct _XDScrollViewFlags {
    unsigned int hasVerticalScrollerViews:1;
    unsigned int hasHorizontalScrollerViews:1;
    unsigned int vScrollerViewsPosition:2;
    unsigned int hScrollerViewsPosition:2;
    unsigned int hasVerticalScrollerAccessoryView:1;
    unsigned int hasHorizontalScrollerAccessoryView:1;
    unsigned int vScrollerAccessoryViewPosition:2;
    unsigned int hScrollerAccessoryViewPosition:2;
    unsigned int RESERVED:20;
};

struct _XDShadowStyleFlags {
    unsigned int drawsShadow:1;
    unsigned int RESERVED:31;
};

struct _XDStrokeStyleFlags {
    unsigned int drawsStroke:1;
    unsigned int shouldAntialias:1;
    unsigned int lineCapStyle:2;
    unsigned int lineJoinStyle:2;
    unsigned int RESERVED:26;
};

struct _XDTableColumnFlags {
    unsigned int delegateRespondsToDataCellForRow:1;
    unsigned int RESERVED:31;
};

struct _XDTableViewCellFlags {
    unsigned int imagePosition:3;
    unsigned int RESERVED:29;
};

struct _XDTableViewFlags {
    unsigned int optionClickCausesEditing:1;
    unsigned int optionClickEditsAnyCell:1;
    unsigned int tableColumnProviderRespondsToWillAddTableColumn:1;
    unsigned int tableColumnProviderRespondsToDidRemoveTableColumn:1;
    unsigned int tableColumnProviderRespondsToWillSynchronizeTableHeaderContextMenu:1;
    unsigned int tableColumnProviderRespondsToDidSynchronizeTableHeaderContextMenu:1;
    unsigned int RESERVED:26;
};

#pragma mark -

//
// File: /Applications/Xcode-7GM.app/Contents/OtherFrameworks/XDInterface.framework/Versions/A/XDInterface
// UUID: BE7A6EB2-DFC2-3862-A2ED-9F0FE3CA5A61
//
//                           Arch: x86_64
//                Current version: 5000.0.0
//          Compatibility version: 1.0.0
//                 Source version: 5000.0.0.0.0
//       Minimum Mac OS X version: 10.10.0
//                    SDK version: 10.11.0
//
// Objective-C Garbage Collection: Unsupported
//
//                       Run path: @loader_path/../../../
//                               = /Applications/Xcode-7GM.app/Contents/OtherFrameworks
//

@protocol NSAnimationDelegate <NSObject>

@optional
- (void)animation:(NSAnimation *)arg1 didReachProgressMark:(float)arg2;
- (float)animation:(NSAnimation *)arg1 valueForProgress:(float)arg2;
- (void)animationDidEnd:(NSAnimation *)arg1;
- (void)animationDidStop:(NSAnimation *)arg1;
- (BOOL)animationShouldStart:(NSAnimation *)arg1;
@end

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (BOOL)respondsToSelector:(SEL)arg1;
- (BOOL)conformsToProtocol:(Protocol *)arg1;
- (BOOL)isMemberOfClass:(Class)arg1;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (BOOL)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSPredicateTypeController
- (BOOL)passInString:(NSString *)arg1;
- (NSString *)stringToPassOn;
- (void)remove;
- (NSString *)stringValue;
- (NSControl *)lastKeyView;
- (NSControl *)firstKeyView;
- (id)leafPredicate;
- (NSString *)setLeafPredicate:(id)arg1;
- (struct CGSize)setPosition:(struct CGPoint)arg1 secondRow:(struct CGPoint)arg2;
- (void)setOperator:(NSString *)arg1;
- (NSString *)operatorForBetween;
- (NSString *)operatorForQop:(NSPredicateOperator *)arg1;
- (NSPredicateOperator *)qopForOperator:(NSString *)arg1;
- (NSArray *)possibleOperators;
- (id)initForPredicateView:(NSPredicateView *)arg1 forType:(NSString *)arg2 forKey:(NSString *)arg3 toMany:(BOOL)arg4;
@end

@protocol NSPredicateViewDataSource
- (void)dataChangedForPredicateView:(NSPredicateView *)arg1;
- (id <NSPredicateTypeController>)predicateView:(NSPredicateView *)arg1 customControllerForType:(NSString *)arg2 forKey:(NSString *)arg3;
- (NSString *)predicateView:(NSPredicateView *)arg1 additionalTextForKeyPath:(NSString *)arg2;
- (NSArray *)predicateView:(NSPredicateView *)arg1 displayNamesForKeyPath:(NSString *)arg2;
- (id)objectValueForPredicateView:(NSPredicateView *)arg1;
- (void)predicateView:(NSPredicateView *)arg1 setObjectValue:(id)arg2;
- (NSString *)predicateView:(NSPredicateView *)arg1 typeForKeyPath:(NSString *)arg2;
- (NSArray *)predicateView:(NSPredicateView *)arg1 keysForKeyPath:(NSString *)arg2;
@end

@protocol NSTextDelegate <NSObject>

@optional
- (void)textDidChange:(NSNotification *)arg1;
- (void)textDidEndEditing:(NSNotification *)arg1;
- (void)textDidBeginEditing:(NSNotification *)arg1;
- (BOOL)textShouldEndEditing:(NSText *)arg1;
- (BOOL)textShouldBeginEditing:(NSText *)arg1;
@end

@protocol NSTextViewDelegate <NSTextDelegate>

@optional
- (void)textView:(NSTextView *)arg1 draggedCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3 event:(NSEvent *)arg4;
- (void)textView:(NSTextView *)arg1 doubleClickedOnCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3;
- (void)textView:(NSTextView *)arg1 clickedOnCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3;
- (BOOL)textView:(NSTextView *)arg1 clickedOnLink:(id)arg2;
- (NSUndoManager *)undoManagerForTextView:(NSTextView *)arg1;
- (NSSharingServicePicker *)textView:(NSTextView *)arg1 willShowSharingServicePicker:(NSSharingServicePicker *)arg2 forItems:(NSArray *)arg3;
- (NSURL *)textView:(NSTextView *)arg1 URLForContentsOfTextAttachment:(NSTextAttachment *)arg2 atIndex:(unsigned long long)arg3;
- (NSArray *)textView:(NSTextView *)arg1 didCheckTextInRange:(struct _NSRange)arg2 types:(unsigned long long)arg3 options:(NSDictionary *)arg4 results:(NSArray *)arg5 orthography:(NSOrthography *)arg6 wordCount:(long long)arg7;
- (NSDictionary *)textView:(NSTextView *)arg1 willCheckTextInRange:(struct _NSRange)arg2 options:(NSDictionary *)arg3 types:(unsigned long long *)arg4;
- (NSMenu *)textView:(NSTextView *)arg1 menu:(NSMenu *)arg2 forEvent:(NSEvent *)arg3 atIndex:(unsigned long long)arg4;
- (long long)textView:(NSTextView *)arg1 shouldSetSpellingState:(long long)arg2 range:(struct _NSRange)arg3;
- (BOOL)textView:(NSTextView *)arg1 doCommandBySelector:(SEL)arg2;
- (BOOL)textView:(NSTextView *)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementString:(NSString *)arg3;
- (NSArray *)textView:(NSTextView *)arg1 completions:(NSArray *)arg2 forPartialWordRange:(struct _NSRange)arg3 indexOfSelectedItem:(long long *)arg4;
- (NSString *)textView:(NSTextView *)arg1 willDisplayToolTip:(NSString *)arg2 forCharacterAtIndex:(unsigned long long)arg3;
- (void)textViewDidChangeTypingAttributes:(NSNotification *)arg1;
- (void)textViewDidChangeSelection:(NSNotification *)arg1;
- (NSDictionary *)textView:(NSTextView *)arg1 shouldChangeTypingAttributes:(NSDictionary *)arg2 toAttributes:(NSDictionary *)arg3;
- (BOOL)textView:(NSTextView *)arg1 shouldChangeTextInRanges:(NSArray *)arg2 replacementStrings:(NSArray *)arg3;
- (NSArray *)textView:(NSTextView *)arg1 willChangeSelectionFromCharacterRanges:(NSArray *)arg2 toCharacterRanges:(NSArray *)arg3;
- (struct _NSRange)textView:(NSTextView *)arg1 willChangeSelectionFromCharacterRange:(struct _NSRange)arg2 toCharacterRange:(struct _NSRange)arg3;
- (BOOL)textView:(NSTextView *)arg1 writeCell:(id <NSTextAttachmentCell>)arg2 atIndex:(unsigned long long)arg3 toPasteboard:(NSPasteboard *)arg4 type:(NSString *)arg5;
- (NSArray *)textView:(NSTextView *)arg1 writablePasteboardTypesForCell:(id <NSTextAttachmentCell>)arg2 atIndex:(unsigned long long)arg3;
- (void)textView:(NSTextView *)arg1 draggedCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3 event:(NSEvent *)arg4 atIndex:(unsigned long long)arg5;
- (void)textView:(NSTextView *)arg1 doubleClickedOnCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3 atIndex:(unsigned long long)arg4;
- (void)textView:(NSTextView *)arg1 clickedOnCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3 atIndex:(unsigned long long)arg4;
- (BOOL)textView:(NSTextView *)arg1 clickedOnLink:(id)arg2 atIndex:(unsigned long long)arg3;
@end

@protocol NSWindowDelegate <NSObject>

@optional
- (void)windowDidChangeOcclusionState:(NSNotification *)arg1;
- (void)windowDidExitVersionBrowser:(NSNotification *)arg1;
- (void)windowWillExitVersionBrowser:(NSNotification *)arg1;
- (void)windowDidEnterVersionBrowser:(NSNotification *)arg1;
- (void)windowWillEnterVersionBrowser:(NSNotification *)arg1;
- (void)windowDidExitFullScreen:(NSNotification *)arg1;
- (void)windowWillExitFullScreen:(NSNotification *)arg1;
- (void)windowDidEnterFullScreen:(NSNotification *)arg1;
- (void)windowWillEnterFullScreen:(NSNotification *)arg1;
- (void)windowDidEndLiveResize:(NSNotification *)arg1;
- (void)windowWillStartLiveResize:(NSNotification *)arg1;
- (void)windowDidEndSheet:(NSNotification *)arg1;
- (void)windowWillBeginSheet:(NSNotification *)arg1;
- (void)windowDidChangeBackingProperties:(NSNotification *)arg1;
- (void)windowDidChangeScreenProfile:(NSNotification *)arg1;
- (void)windowDidChangeScreen:(NSNotification *)arg1;
- (void)windowDidUpdate:(NSNotification *)arg1;
- (void)windowDidDeminiaturize:(NSNotification *)arg1;
- (void)windowDidMiniaturize:(NSNotification *)arg1;
- (void)windowWillMiniaturize:(NSNotification *)arg1;
- (void)windowWillClose:(NSNotification *)arg1;
- (void)windowDidResignMain:(NSNotification *)arg1;
- (void)windowDidBecomeMain:(NSNotification *)arg1;
- (void)windowDidResignKey:(NSNotification *)arg1;
- (void)windowDidBecomeKey:(NSNotification *)arg1;
- (void)windowDidMove:(NSNotification *)arg1;
- (void)windowWillMove:(NSNotification *)arg1;
- (void)windowDidExpose:(NSNotification *)arg1;
- (void)windowDidResize:(NSNotification *)arg1;
- (void)window:(NSWindow *)arg1 didDecodeRestorableState:(NSCoder *)arg2;
- (void)window:(NSWindow *)arg1 willEncodeRestorableState:(NSCoder *)arg2;
- (struct CGSize)window:(NSWindow *)arg1 willResizeForVersionBrowserWithMaxPreferredSize:(struct CGSize)arg2 maxAllowedSize:(struct CGSize)arg3;
- (void)windowDidFailToExitFullScreen:(NSWindow *)arg1;
- (void)window:(NSWindow *)arg1 startCustomAnimationToEnterFullScreenOnScreen:(NSScreen *)arg2 withDuration:(double)arg3;
- (NSArray *)customWindowsToEnterFullScreenForWindow:(NSWindow *)arg1 onScreen:(NSScreen *)arg2;
- (void)window:(NSWindow *)arg1 startCustomAnimationToExitFullScreenWithDuration:(double)arg2;
- (NSArray *)customWindowsToExitFullScreenForWindow:(NSWindow *)arg1;
- (void)windowDidFailToEnterFullScreen:(NSWindow *)arg1;
- (void)window:(NSWindow *)arg1 startCustomAnimationToEnterFullScreenWithDuration:(double)arg2;
- (NSArray *)customWindowsToEnterFullScreenForWindow:(NSWindow *)arg1;
- (unsigned long long)window:(NSWindow *)arg1 willUseFullScreenPresentationOptions:(unsigned long long)arg2;
- (struct CGSize)window:(NSWindow *)arg1 willUseFullScreenContentSize:(struct CGSize)arg2;
- (BOOL)window:(NSWindow *)arg1 shouldDragDocumentWithEvent:(NSEvent *)arg2 from:(struct CGPoint)arg3 withPasteboard:(NSPasteboard *)arg4;
- (BOOL)window:(NSWindow *)arg1 shouldPopUpDocumentPathMenu:(NSMenu *)arg2;
- (struct CGRect)window:(NSWindow *)arg1 willPositionSheet:(NSWindow *)arg2 usingRect:(struct CGRect)arg3;
- (NSUndoManager *)windowWillReturnUndoManager:(NSWindow *)arg1;
- (BOOL)windowShouldZoom:(NSWindow *)arg1 toFrame:(struct CGRect)arg2;
- (struct CGRect)windowWillUseStandardFrame:(NSWindow *)arg1 defaultFrame:(struct CGRect)arg2;
- (struct CGSize)windowWillResize:(NSWindow *)arg1 toSize:(struct CGSize)arg2;
- (id)windowWillReturnFieldEditor:(NSWindow *)arg1 toObject:(id)arg2;
- (BOOL)windowShouldClose:(id)arg1;
@end

@protocol XDComponentIdentifying <NSObject>
+ (NSString *)defaultIdentifier;
- (NSString *)identifier;
@end

@protocol XDGraphEdge
- (id <XDGraphNode>)tailGraphNode;
- (id <XDGraphNode>)headGraphNode;
@end

@protocol XDGraphNode
- (NSArray *)connections;
- (struct CGPoint)centerOfBounds;
- (void)setCenterOfBounds:(struct CGPoint)arg1;
- (struct CGRect)drawingBounds;
- (struct CGRect)bounds;
- (void)setBounds:(struct CGRect)arg1;
@end

@protocol XDPluginCallBack
- (BOOL)revealBookmark:(id)arg1 forEditorController:(XDEditorController *)arg2 doubleClicked:(BOOL)arg3;
- (XDEditorController *)frontmostPluginController;
@end

@protocol _NSPredicateKeyChooserCallback
- (void)setSelectedKeyPath:(NSString *)arg1;
@end

@protocol __ARCLiteIndexedSubscripting__
- (void)setObject:(id)arg1 atIndexedSubscript:(unsigned long long)arg2;
- (id)objectAtIndexedSubscript:(unsigned long long)arg1;
@end

@protocol __ARCLiteKeyedSubscripting__
- (void)setObject:(id)arg1 forKeyedSubscript:(id)arg2;
- (id)objectForKeyedSubscript:(id)arg1;
@end

@interface NSAffineTransform (XDDiagramAppKitExtensions)
+ (id)_diagram_transformWithScaleXBy:(double)arg1 yBy:(double)arg2;
+ (id)_diagram_transformWithTranslateXBy:(double)arg1 yBy:(double)arg2;
@end

@interface NSBezierPath (XDDiagramAppKitExtensions)
+ (id)_diagram_bezierPathFromDictionaryRepresentation:(id)arg1;
+ (id)_diagram_bezierPathWithBezelInRect:(struct CGRect)arg1 cornerRadius:(double)arg2;
- (BOOL)_diagram_intersectionPoint:(struct CGPoint *)arg1 withLineFromPoint:(struct CGPoint)arg2 toPoint:(struct CGPoint)arg3;
- (BOOL)_diagram_intersectsRect:(struct CGRect)arg1;
- (BOOL)_diagram_isStrokeHitByPoint:(struct CGPoint)arg1;
@end

@interface NSCursor (XDDiagramAppKitExtensions)
+ (id)_diagram_resizeUpperLeftLowerRightCursor;
+ (id)_diagram_resizeLowerLeftUpperRightCursor;
+ (id)_diagram_resizeUpDownCursor;
+ (id)_diagram_resizeLeftRightCursor;
+ (id)_diagram_resizeCursor;
@end

@interface NSDictionaryToArrayTransformer : NSValueTransformer
{
    NSString *_defaultKey;
    id _defaultObject;
    struct __dictionaryToArrayTransformerFlags {
        unsigned int _createsMutableCopiesOfValues:1;
        unsigned int _reservedFlags:31;
    } _dictionaryToArrayTransformerFlags;
}

+ (BOOL)allowsReverseTransformation;
+ (Class)transformedValueClass;
- (BOOL)createsMutableCopiesOfValues;
- (void)setCreatesMutableCopiesOfValues:(BOOL)arg1;
- (id)defaultObject;
- (void)setDefaultObject:(id)arg1;
- (id)defaultKey;
- (void)setDefaultKey:(id)arg1;
- (id)description;
- (id)reverseTransformedValue:(id)arg1;
- (id)_insertionKeyForDictionary:(id)arg1;
- (id)transformedValue:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface NSGraphicsContext (XDDiagramAppKitExtensions)
- (void)_diagram_setLineWidth:(double)arg1;
@end

@interface NSImage (XDDiagramAppKitExtensions)
+ (id)_diagram_imageNamed:(id)arg1 inBundleWithIdentifier:(id)arg2;
+ (id)_diagram_imageNamed:(id)arg1 inBundle:(id)arg2;
@end

@interface NSObject (XDDiagramFoundationExtensions)
- (void)_diagram_performSelector:(SEL)arg1 withEachObjectInSet:(id)arg2;
- (void)_diagram_performSelector:(SEL)arg1 withEachObjectInArray:(id)arg2;
@end

@interface NSPredicateSheetController : NSObject
{
    NSPredicateView *predicateView;
    BOOL _openingSheet;
    id <NSPredicateSheetCallback> _callback;
}

+ (BOOL)openSheet:(id)arg1 dataSource:(id)arg2 inWindow:(id)arg3 callback:(id)arg4;
- (void)cancelSheetAction:(id)arg1;
- (void)okSheetAction:(id)arg1;
- (void)_closeUI:(long long)arg1;
- (void)sheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (BOOL)openSheet:(id)arg1 dataSource:(id)arg2 inWindow:(id)arg3 callback:(id)arg4;

@end

@interface NSPredicateView : NSView
{
    BOOL _usesSheet;
    _NSPredicateLogicElement *_mainElement;
    _NSPredicateLogicElement *_selectedElement;
    NSControl *_firstkeyView;
    NSControl *_lastkeyView;
    BOOL _needsPredicateNotification;
    NSString *_lastPredicateString;
    double _originalFrameWidth;
    long long _inCallMakeFirstRepsonder;
    struct CGPoint _mouseDownLocation;
    _NSPredicateLogicElement *_dragNdropElement;
    BOOL _dragFeedback;
    struct CGPoint _dragFeedbackLocation;
    BOOL _dragFeedbackDirection;
    NSMutableArray *_colors;
    NSMutableArray *_labels;
    NSColor *_backgroundColor;
    NSColor *_alternateBackgroundColor;
    unsigned long long _lineIndex;
    unsigned long long _controlSize;
    BOOL _usesPerLinePopUps;
    BOOL _usesPlusMinusButtons;
    int _mode;
    BOOL _usesGraphic;
    BOOL _enabled;
    BOOL _formatError;
    id <NSPredicateViewDataSource> _appDataSource;
    _NSPredicateDataSourceWrapper *_bindingsDataSource;
    NSPopUpButton *_opTypePopUp[2];
    NSTextField *_opTypeLabel[2];
    NSButton *_buttonAnd;
    NSButton *_buttonOr;
    NSButton *_buttonNot;
    NSButton *_buttonAdd;
    NSButton *_buttonRemove;
    NSButton *_buttonUp;
    NSButton *_buttonDown;
    NSButton *_buttonLeft;
    NSButton *_buttonRight;
}

+ (id)findPredicateViewContaining:(id)arg1;
+ (id)bundle;
- (BOOL)formatError;
- (void)setFormatError:(BOOL)arg1;
- (BOOL)worksWhenModal;
- (void)dealloc;
- (void)buttonVar2:(id)arg1;
- (void)buttonVar1:(id)arg1;
- (void)buttonVal2:(id)arg1;
- (void)buttonVal1:(id)arg1;
- (void)buttonKey2:(id)arg1;
- (void)buttonKey1:(id)arg1;
- (void)buttonPredicate:(id)arg1;
- (void)buttonPredicateText:(id)arg1;
- (void)buttonAlterLogic:(id)arg1;
- (void)buttonUp:(id)arg1;
- (void)buttonRight:(id)arg1;
- (void)buttonRemove:(id)arg1;
- (void)buttonOr:(id)arg1;
- (void)buttonNot:(id)arg1;
- (void)buttonLeft:(id)arg1;
- (void)buttonDown:(id)arg1;
- (void)buttonAnd:(id)arg1;
- (void)buttonAdd:(id)arg1;
- (id)lastKeyView;
- (id)setLastKeyView:(id)arg1;
- (id)firstKeyView;
- (id)setFirstKeyView:(id)arg1;
- (BOOL)callMakeFirstResponder:(id)arg1;
- (void)textfieldBecameFirstResponder:(id)arg1;
- (void)makeSelected:(id)arg1;
- (id)selectedElement;
- (void)setSelected:(_Bool)arg1 element:(id)arg2;
- (void)_updatePredicateEntry:(id)arg1;
- (void)updatePredicate;
- (void)_updateToolbar:(id)arg1;
- (void)_updateDataSourcePostEvent:(id)arg1;
- (void)reloadDataAction:(id)arg1;
- (void)reloadData;
- (void)setStringPredicate:(id)arg1;
- (void)setPredicateString:(id)arg1;
- (void)setPredicate:(id)arg1;
- (id)predicate;
- (id)predicateString;
- (id)controllerForKey:(id)arg1;
- (id)dataSource;
- (void)setDataSource:(id)arg1;
- (void)_clear;
- (id)mainElement;
- (void)setMainElement:(id)arg1;
- (double)originalFrameWidth;
- (void)positionLogic;
- (unsigned long long)nextLineIndex;
- (void)resetLineIndex;
- (id)lineElements;
- (BOOL)performKeyEquivalent:(id)arg1;
- (void)concludeDragOperation:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (id)_parseStringPredicate:(id)arg1;
- (BOOL)prepareForDragOperation:(id)arg1;
- (void)draggingExited:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (unsigned long long)_draggingCommon:(id)arg1;
- (id)_findDestinationElement:(id)arg1;
- (void)draggedImage:(id)arg1 endedAt:(struct CGPoint)arg2 operation:(unsigned long long)arg3;
- (unsigned long long)draggingSourceOperationMaskForLocal:(BOOL)arg1;
- (void)resizeSubviewsWithOldSize:(struct CGSize)arg1;
- (void)mouseDragged:(id)arg1;
- (id)menuForEvent:(id)arg1;
- (void)mouseDown:(id)arg1;
- (id)hitTest:(struct CGPoint)arg1;
- (BOOL)_giveUpFocus;
- (void)drawRect:(struct CGRect)arg1;
- (id)backgroundColor;
- (void)setBackgroundColor:(id)arg1;
- (id)alternateBackgroundColor;
- (void)setAlternateBackgroundColor:(id)arg1;
- (BOOL)isFlipped;
- (void)_drawDragFeedback;
- (void)awakeFromNib;
- (id)toolbarView;
- (BOOL)usesGraphic;
- (void)setUseGraphic:(BOOL)arg1;
- (BOOL)usesPlusMinusButtons;
- (void)setUsesPlusMinusButtons:(BOOL)arg1;
- (int)viewMode;
- (void)setViewMode:(int)arg1;
- (BOOL)isAny;
- (BOOL)usesAnyAll;
- (BOOL)usesPerLinePopUps;
- (void)setUsesPerLinePopUps:(BOOL)arg1;
- (unsigned long long)controlSize;
- (void)setControlSize:(unsigned long long)arg1;
- (void)_completeRefresh;
- (id)_makeToolbarButton:(id)arg1 size:(double)arg2 selector:(SEL)arg3;
- (void)_choseOpType1:(id)arg1;
- (void)_choseOpType0:(id)arg1;
- (void)_choseOpType:(long long)arg1;
- (id)labelAtIndex:(unsigned long long)arg1;
- (void)setLabel:(id)arg1 atIndex:(unsigned long long)arg2;
- (id)colorAtIndex:(unsigned long long)arg1;
- (void)setColor:(id)arg1 atIndex:(unsigned long long)arg2;
- (double)datePickerHeight;
- (double)datePickerVerticalOffset;
- (double)popUpHeight;
- (double)popUpVerticalOffset;
- (double)textFieldHeight;
- (double)textFieldVerticalOffset;
- (id)fontForUI;
- (id)_internalDataSource;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)_unselectKeyView;
- (BOOL)isEnabled;
- (void)setEnabled:(BOOL)arg1;
- (void)_setEnabledSubControls:(BOOL)arg1;
- (BOOL)usesSheet;
- (void)setUseSheet:(BOOL)arg1;
- (id)lightColor;
- (id)darkColor;

@end

@interface NSPredicateViewScrollView : NSScrollView
{
    NSMutableArray *_vScrollerViews;
    NSMutableArray *_hScrollerViews;
    double _vScrollerMargin;
    double _hScrollerMargin;
    struct _MXScrollViewQFlags _svFlags;
}

+ (double)defaultHorizontalScrollerMargin;
+ (void)setDefaultHorizontalScrollerMargin:(double)arg1;
+ (double)defaultVerticalScrollerMargin;
+ (void)setDefaultVerticalScrollerMargin:(double)arg1;
+ (void)initialize;
- (void)drawRect:(struct CGRect)arg1;
- (void)_drawBorderForHorizontalScrollerViews;
- (void)_drawBorderForVerticalScrollerViews;
- (void)tile;
- (void)tileHorizontalScrollerViews;
- (void)tileVerticalScrollerViews;
- (void)removeAllHorizontalScrollerViews;
- (void)removeHorizontalScrollerViewAtIndex:(long long)arg1;
- (void)removeHorizontalScrollerView:(id)arg1;
- (void)insertHorizontalScrollerView:(id)arg1 atIndex:(long long)arg2;
- (void)addHorizontalScrollerView:(id)arg1;
- (void)removeAllVerticalScrollerViews;
- (void)removeVerticalScrollerViewAtIndex:(long long)arg1;
- (void)removeVerticalScrollerView:(id)arg1;
- (void)insertVerticalScrollerView:(id)arg1 atIndex:(long long)arg2;
- (void)addVerticalScrollerView:(id)arg1;
- (id)horizontalScrollerViews;
- (id)verticalScrollerViews;
- (BOOL)hasHorizontalScrollerViews;
- (void)setHasHorizontalScrollerViews:(BOOL)arg1;
- (BOOL)hasVerticalScrollerViews;
- (void)setHasVerticalScrollerViews:(BOOL)arg1;
- (double)horizontalScrollerMargin;
- (void)setHorizontalScrollerMargin:(double)arg1;
- (double)verticalScrollerMargin;
- (void)setVerticalScrollerMargin:(double)arg1;
- (id)initWithCoder:(id)arg1;
- (id)_old_initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)_old_encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface NSPredicateViewTextField : NSTextField
{
}

- (BOOL)becomeFirstResponder;

@end

@interface NSPredicateViewToolBarButtonCell : NSButtonCell
{
    NSColor *_color;
    NSColor *_pressedColor;
    NSColor *_disabledColor;
}

- (void)dealloc;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (id)_bezierPathFor:(struct CGRect)arg1;
- (void)setColor:(id)arg1;

@end

@interface NSPredicateViewToolBarHeader : NSControl
{
    double _width;
    double _offset;
    NSColor *_color;
    NSObject *_target;
}

- (id)addTextButton:(id)arg1 width:(double)arg2 color:(id)arg3 selector:(SEL)arg4;
- (id)addText:(id)arg1 width:(double)arg2;
- (void)addPopUp:(id)arg1;
- (void)addButton:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (id)initWithTarget:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface NSPredicateViewToolbarScrollView : NSScrollView
{
    NSView *_toolbarView;
}

- (void)tile;
- (void)setToolbar:(id)arg1;
- (void)dealloc;

@end

@interface NSString (NorbertsHack)
- (BOOL)opPVQVContains:(id)arg1;
@end

@interface NSTransformerKeyValuePair : NSObject
{
    NSMutableDictionary *_referenceDictionary;
    NSString *_key;
    id _value;
}

- (BOOL)isEqual:(id)arg1;
- (id)value;
- (void)setValue:(id)arg1;
- (id)key;
- (void)setKey:(id)arg1;
- (BOOL)validateKey:(id *)arg1 error:(id *)arg2;
- (id)referenceDictionary;
- (void)setReferenceDictionary:(id)arg1;
- (void)dealloc;
- (id)initWithKey:(id)arg1 value:(id)arg2;
- (id)init;

@end

@interface NSUserDefaults (XDDiagramFoundationExtensions)
- (void)_diagram_registerDefaultsWithContentsOfFile:(id)arg1;
@end

@interface PVActionButton : NSButton
{
    NSPopUpButtonCell *_popUpCell;
    _NSPredicateLogicElement *_logicElement;
}

- (void)mouseDown:(id)arg1;
- (void)_runPopUp:(id)arg1;
- (void)setLogicElement:(id)arg1;
- (void)dealloc;

@end

@interface XDBezelWidgetManager : NSObject <NSWindowDelegate, NSAnimationDelegate>
{
    struct __CFRunLoopTimer *_bezelWidgetTimer;
    XDBezelWidgetView *_bezelWidgetView;
    XDBezelWidgetPanel *_bezelWidgetPanel;
}

+ (BOOL)sharedBezelWidgetManagerExists;
+ (id)sharedBezelWidgetManager;
+ (Class)_sharedBezelWidgetManagerClass;
+ (void)initialize;
- (BOOL)isBezelWidgetVisible;
- (void)windowDidResignKey:(id)arg1;
- (void)animationDidEnd:(id)arg1;
- (void)orderOutBezelWidget;
- (void)orderFrontBezelWidgetForView:(id)arg1;
- (void)_destroyBezelWidgetTimer;
- (void)_createBezelWidgetTimer;
- (id)bezelWidgetView;
- (void)finalize;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XDBezelWidgetPanel : NSPanel
{
}

+ (void)initialize;
- (BOOL)canBecomeKeyWindow;

@end

@interface XDBezelWidgetView : NSView
{
    NSView *_contentView;
    struct CGSize _contentViewMargins;
    double _cornerRadius;
    NSColor *_backgroundColor;
    long long _trackingRectTag;
    struct _XDBezelWidgetViewFlags _bwvFlags;
}

+ (void)initialize;
- (void)drawRect:(struct CGRect)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)resetCursorRects;
- (BOOL)isOpaque;
- (id)backgroundColor;
- (void)setBackgroundColor:(id)arg1;
- (double)cornerRadius;
- (void)setCornerRadius:(double)arg1;
- (void)sizeToFit;
- (void)setFrameFromContentFrame:(struct CGRect)arg1;
- (struct CGSize)contentViewMargins;
- (void)setContentViewMargins:(struct CGSize)arg1;
- (id)contentView;
- (void)replaceSubview:(id)arg1 with:(id)arg2;
- (void)addSubview:(id)arg1;
- (void)willRemoveSubview:(id)arg1;
- (void)setContentView:(id)arg1;
- (void)viewWillMoveToWindow:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface XDCompartment : NSObject <NSCoding>
{
    XDCompartmentGraphic *_compartmentGraphic;
    id _identifier;
    NSImage *_iconImage;
    NSString *_label;
    NSColor *_backgroundColor;
    id _objectValue;
    XDCompartmentItem *_compartmentItem;
    struct CGSize _compartmentItemMinSize;
    struct _XDCompartmentFlags _cFlags;
}

+ (Class)defaultCompartmentItemClass;
+ (void)initialize;
- (BOOL)isEditable;
- (void)setEditable:(BOOL)arg1;
- (struct CGSize)compartmentItemMinSize;
- (void)setCompartmentItemMinSize:(struct CGSize)arg1;
- (id)compartmentItemAtIndex:(long long)arg1;
- (id)compartmentItem;
- (id)objectValue;
- (void)setObjectValue:(id)arg1;
- (id)backgroundColor;
- (void)setBackgroundColor:(id)arg1;
- (BOOL)drawsBackground;
- (void)setDrawsBackground:(BOOL)arg1;
- (id)label;
- (void)setLabel:(id)arg1;
- (id)iconImage;
- (void)setIconImage:(id)arg1;
- (id)identifier;
- (void)setIdentifier:(id)arg1;
- (id)compartmentGraphic;
- (void)setCompartmentGraphic:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)init;
- (id)initWithIdentifier:(id)arg1;

@end

@interface XDGraphic : NSObject <NSCoding, XDGraphNode>
{
    id _delegate;
    XDDiagramStorage *_diagramStorage;
    struct CGRect _bounds;
    struct CGRect _originalBounds;
    struct CGRect _cachedDrawingBounds;
    long long _cachedDrawingBoundsMask;
    struct CGRect _cachedHitTestBounds;
    unsigned long long _lastChangeMask;
    struct CGSize _minSize;
    id _contents;
    double _contentsPadding;
    NSMutableArray *_connections;
    NSMapTable *_drawingStyleByClass;
    id _objectValue;
    int _trackKnobPosition;
    XDGraphicContentsEditor *_contentsEditor;
    unsigned long long _drawingMask;
    XDGraphicID *_uniqueID;
    struct _XDGraphicFlags _gFlags;
    void *_graphicReserved;
}

+ (BOOL)_containsRemovableGraphicInGraphics:(id)arg1;
+ (BOOL)_containsImmovableGraphicInGraphics:(id)arg1;
+ (BOOL)_containsUnlockedGraphicInGraphics:(id)arg1;
+ (BOOL)_containsLockedGraphicInGraphics:(id)arg1;
+ (double)_defaultContentsPadding;
+ (struct CGSize)_defaultMinSize;
+ (id)defaultGraphicContentsEditor;
+ (Class)defaultGraphicContentsEditorClass;
+ (Class)defaultHighlightStyleClass;
+ (Class)defaultShadowStyleClass;
+ (Class)defaultStrokeStyleClass;
+ (Class)defaultFillStyleClass;
+ (Class)defaultAuxiliaryStorageClass;
+ (int)flipKnobPosition:(int)arg1;
+ (int)flipKnobPositionHorizontally:(int)arg1;
+ (int)flipKnobPositionVertically:(int)arg1;
+ (id)defaultTrackKnobImage;
+ (id)_defaultHighlightedDisabledKnobImage;
+ (id)defaultDisabledKnobImage;
+ (id)_defaultHighlightedKnobImage;
+ (id)defaultKnobImage;
+ (id)hiddenGraphicsTintColorWithColor:(id)arg1;
+ (id)hiddenGraphicsTint;
+ (void)initialize;
- (id)uniqueID;
- (void)_setUniqueID:(id)arg1;
- (void)mouseMoved:(id)arg1 inView:(id)arg2;
- (BOOL)acceptsMouseMoveEvents;
- (void)setAcceptsMouseMovedEvents:(BOOL)arg1;
- (BOOL)isLayoutable;
- (void)setLayoutable:(BOOL)arg1;
- (BOOL)isRemovable;
- (void)setRemovable:(BOOL)arg1;
- (BOOL)isResizable;
- (void)setResizable:(BOOL)arg1;
- (BOOL)mouseDown:(id)arg1 inView:(id)arg2;
- (BOOL)abortEditing;
- (void)endEditing;
- (void)startEditingWithEvent:(id)arg1 inView:(id)arg2;
- (id)contentsEditor;
- (BOOL)isEditable;
- (void)setEditable:(BOOL)arg1;
- (int)resizeByMovingKnob:(int)arg1 toPoint:(struct CGPoint)arg2;
- (id)cursorForKnobPosition:(int)arg1;
- (void)moveRelativeToPoint:(struct CGPoint)arg1;
- (BOOL)isMovable;
- (void)setMovable:(BOOL)arg1;
- (void)endBoundsManipulation;
- (BOOL)isManipulatingBounds;
- (void)beginBoundsManipulation;
- (void)processBoundsManipulation;
- (BOOL)isHitByPoint:(struct CGPoint)arg1 inView:(id)arg2;
- (BOOL)isHitByPoint:(struct CGPoint)arg1 inScale:(double)arg2;
- (BOOL)intersectsRect:(struct CGRect)arg1;
- (int)knobUnderPoint:(struct CGPoint)arg1 inView:(id)arg2;
- (int)knobUnderPoint:(struct CGPoint)arg1 inScale:(double)arg2;
- (void)drawInView:(id)arg1;
- (id)_drawingCacheForDiagramView:(id)arg1;
- (void)drawHighlightInView:(id)arg1;
- (void)drawShadowInView:(id)arg1;
- (void)drawInteriorInView:(id)arg1;
- (void)drawStrokeInView:(id)arg1;
- (void)drawFillInView:(id)arg1;
- (void)drawFillInView:(id)arg1 usingFillType:(int)arg2;
- (void)drawKnobsInView:(id)arg1;
- (void)drawTrackKnobAtPoint:(struct CGPoint)arg1 inView:(id)arg2;
- (void)drawKnobAtPoint:(struct CGPoint)arg1 inView:(id)arg2;
- (void)_drawKnobImage:(id)arg1 atPoint:(struct CGPoint)arg2 inView:(id)arg3;
- (BOOL)_shouldDrawFocusRingInView:(id)arg1;
- (BOOL)_shouldUseHighlightColorInView:(id)arg1;
- (BOOL)canDrawInView:(id)arg1;
- (unsigned long long)drawingMask;
- (void)setDrawingMask:(unsigned long long)arg1;
- (int)trackKnobPosition;
- (void)setTrackKnobPosition:(int)arg1;
- (void)graphicWillBeDeselectedInDiagramView:(id)arg1;
- (void)graphicWasSelectedInDiagramView:(id)arg1;
- (id)highlightPath;
- (id)hitTestPath;
- (id)strokePath;
- (id)fillPath;
- (struct CGRect)hitTestBounds;
- (struct CGRect)drawingBounds;
- (struct CGRect)drawingBoundsWithMask:(long long)arg1;
- (struct CGSize)drawingBoundsMargin;
- (id)trackKnobImage;
- (void)setTrackKnobImage:(id)arg1;
- (id)_highlightedDisabledKnobImage;
- (id)disabledKnobImage;
- (void)setDisabledKnobImage:(id)arg1;
- (id)_highlightedKnobImage;
- (id)knobImage;
- (void)setKnobImage:(id)arg1;
- (unsigned long long)knobPositionMask;
- (id)objectValue;
- (void)setObjectValue:(id)arg1;
- (BOOL)isDrawingCacheEnabled;
- (void)disableDrawingCache;
- (void)enableDrawingCache;
- (BOOL)isHighlighted;
- (void)setHighlighted:(BOOL)arg1;
- (struct CGPoint)magnetLocationForConnection:(id)arg1;
- (BOOL)canConnectAtPoint:(struct CGPoint)arg1;
- (struct CGPoint)crossingPointForConnection:(id)arg1;
- (void)invalidateAllConnections;
- (void)invalidateConnections:(id)arg1;
- (void)invalidateConnection:(id)arg1;
- (void)removeAllConnections;
- (void)removeConnectionAtIndex:(long long)arg1;
- (void)removeConnection:(id)arg1;
- (void)insertConnection:(id)arg1 atIndex:(long long)arg2;
- (void)addConnection:(id)arg1;
- (id)_connections;
- (id)connections;
- (BOOL)acceptsConnections;
- (void)setAcceptsConnections:(BOOL)arg1;
- (BOOL)isLocked;
- (void)setLocked:(BOOL)arg1;
- (BOOL)isFlippedVertically;
- (void)setFlippedVertically:(BOOL)arg1;
- (BOOL)isFlippedHorizontally;
- (void)setFlippedHorizontally:(BOOL)arg1;
- (void)flipVertically;
- (void)flipHorizontally;
- (BOOL)heightTracksContents;
- (void)setHeightTracksContents:(BOOL)arg1;
- (BOOL)widthTracksContents;
- (void)setWidthTracksContents:(BOOL)arg1;
- (BOOL)autoresizesContentsToFit;
- (void)setAutoresizesContentsToFit:(BOOL)arg1;
- (BOOL)sizeToFit;
- (BOOL)sizeToFitWithTrackingMask:(unsigned long long)arg1;
- (BOOL)isHidden;
- (void)setHidden:(BOOL)arg1;
- (id)shadowColor;
- (void)setShadowColor:(id)arg1;
- (double)shadowBlurRadius;
- (void)setShadowBlurRadius:(double)arg1;
- (struct CGSize)shadowOffset;
- (void)setShadowOffset:(struct CGSize)arg1;
- (BOOL)drawsShadow;
- (void)setDrawsShadow:(BOOL)arg1;
- (id)strokeColor;
- (void)setStrokeColor:(id)arg1;
- (id)strokeLineDashPattern;
- (void)setStrokeLineDashPattern:(id)arg1;
- (unsigned long long)strokeLineJoinStyle;
- (void)setStrokeLineJoinStyle:(unsigned long long)arg1;
- (unsigned long long)strokeLineCapStyle;
- (void)setStrokeLineCapStyle:(unsigned long long)arg1;
- (double)_strokeLineWidthForDrawing;
- (double)strokeLineWidth;
- (void)setStrokeLineWidth:(double)arg1;
- (BOOL)strokeShouldAntialias;
- (void)setStrokeShouldAntialias:(BOOL)arg1;
- (BOOL)drawsStroke;
- (void)setDrawsStroke:(BOOL)arg1;
- (id)gradientColor;
- (void)setGradientColor:(id)arg1;
- (double)gradientAngle;
- (void)setGradientAngle:(double)arg1;
- (int)fillType;
- (void)setFillType:(int)arg1;
- (id)fillColor;
- (void)setFillColor:(id)arg1;
- (BOOL)drawsFill;
- (void)setDrawsFill:(BOOL)arg1;
- (id)allDrawingStyles;
- (id)_drawingStyleForClass:(Class)arg1;
- (void)_setDrawingStyle:(id)arg1 forClass:(Class)arg2;
- (id)_drawingStyleOrDefaultForClass:(Class)arg1;
- (int)contentsVerticalAlignment;
- (void)setContentsVerticalAlignment:(int)arg1;
- (unsigned long long)contentsHorizontalAlignment;
- (void)setContentsHorizontalAlignment:(unsigned long long)arg1;
- (double)contentsPadding;
- (void)setContentsPadding:(double)arg1;
- (struct CGRect)contentsBounds;
- (BOOL)drawsContents;
- (void)setDrawsContents:(BOOL)arg1;
- (id)contents;
- (void)setContents:(id)arg1;
- (BOOL)canCacheDrawingResult;
- (BOOL)canAcceptConnections;
- (BOOL)canLayout;
- (BOOL)canRemove;
- (BOOL)canResize;
- (BOOL)canEdit;
- (BOOL)canMove;
- (BOOL)canLock;
- (BOOL)canFlipVertically;
- (BOOL)canFlipHorizontally;
- (BOOL)canHide;
- (BOOL)canDrawShadow;
- (BOOL)canDrawStroke;
- (BOOL)canDrawFill;
- (BOOL)canDrawContents;
- (struct CGSize)minSize;
- (void)setMinSize:(struct CGSize)arg1;
- (struct CGPoint)cascadeTopLeftFromPoint:(struct CGPoint)arg1;
- (struct CGPoint)centerOfBounds;
- (void)setCenterOfBounds:(struct CGPoint)arg1;
- (void)setBoundsSize:(struct CGSize)arg1;
- (void)setBoundsOrigin:(struct CGPoint)arg1;
- (struct CGRect)bounds;
- (void)setBounds:(struct CGRect)arg1;
- (void)didChange;
- (void)didChange:(unsigned long long)arg1;
- (void)invalidateAllDrawingCaches;
- (void)invalidateDrawingCacheInView:(id)arg1;
- (id)undoManager;
- (id)diagramStorage;
- (void)_setDiagramStorage:(id)arg1;
- (id)delegate;
- (id)_delegate;
- (void)setDelegate:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)finalize;
- (void)dealloc;
- (id)init;
- (id)awakeAfterUsingCoder:(id)arg1;

@end

@interface XDCompartmentGraphic : XDGraphic
{
    id _dataSource;
    NSMutableArray *_compartments;
    NSButtonCell *_triangleCell;
    NSMutableIndexSet *_collapsedCompartments;
    struct _XDCompartmentGraphicFlags _cgFlags;
}

+ (struct CGSize)_defaultMinSize;
+ (Class)defaultGraphicContentsEditorClass;
+ (Class)defaultShadowStyleClass;
+ (Class)defaultFillStyleClass;
+ (Class)defaultCompartmentClass;
+ (Class)defaultAuxiliaryStorageClass;
+ (void)initialize;
- (BOOL)mouseDown:(id)arg1 inView:(id)arg2;
- (void)mouseMoved:(id)arg1 inView:(id)arg2;
- (void)_userCollapseCompartmentAtIndex:(long long)arg1 inDiagramView:(id)arg2;
- (void)_userExpandCompartmentAtIndex:(long long)arg1 inDiagramView:(id)arg2;
- (BOOL)_userCanCollapseCompartmentAtIndex:(long long)arg1;
- (BOOL)_userCanExpandCompartmentAtIndex:(long long)arg1;
- (long long)clickedCompartmentItemIndexInDiagramView:(id)arg1;
- (long long)clickedCompartmentIndexInDiagramView:(id)arg1;
- (BOOL)_userCanEditItemInCompartment:(id)arg1 atIndex:(long long)arg2;
- (void)drawInteriorInView:(id)arg1;
- (void)drawCompartmentAtIndex:(long long)arg1 inDiagramView:(id)arg2;
- (void)_willDisplayItem:(id)arg1 atIndex:(long long)arg2 inCompartment:(id)arg3 inDiagramView:(id)arg4;
- (id)fillPath;
- (id)fillPathForContents;
- (id)fillPathForTitle;
- (void)setFillColor:(id)arg1;
- (void)graphicWillBeDeselectedInDiagramView:(id)arg1;
- (void)graphicWasSelectedInDiagramView:(id)arg1;
- (id)selectedItemsEnumeratorInDiagramView:(id)arg1;
- (long long)numberOfSelectedItemsInDiagramView:(id)arg1;
- (long long)indexOfSelectedItemInDiagramView:(id)arg1;
- (BOOL)isItemAtIndex:(long long)arg1 selectedInCompartmentAtIndex:(long long)arg2 diagramView:(id)arg3;
- (void)deselectAllInDiagramView:(id)arg1;
- (void)selectAllInDiagramView:(id)arg1;
- (void)deselectItemAtIndex:(long long)arg1 inCompartmentAtIndex:(long long)arg2 diagramView:(id)arg3;
- (void)selectItemAtIndex:(long long)arg1 inCompartmentAtIndex:(long long)arg2 diagramView:(id)arg3;
- (void)selectItemAtIndex:(long long)arg1 inCompartmentAtIndex:(long long)arg2 diagramView:(id)arg3 byExtendingSelection:(BOOL)arg4;
- (void)_postSelectionDidChangeNotificationInDiagramView:(id)arg1;
- (BOOL)_enableSelectionPostingAndPostInDiagramView:(id)arg1;
- (void)_disableSelectionPostingInDiagramView:(id)arg1;
- (long long)indexOfSelectedCompartmentInDiagramView:(id)arg1;
- (BOOL)sizeToFitWithTrackingMask:(unsigned long long)arg1;
- (double)maximumWidthOfCompartments;
- (double)maximumWidthOfCompartmentAtIndex:(long long)arg1;
- (long long)indexOfCompartmentItemAtPoint:(struct CGPoint)arg1;
- (long long)indexOfCompartmentAtPoint:(struct CGPoint)arg1;
- (struct _NSRange)compartmentsInRect:(struct CGRect)arg1;
- (struct CGRect)frameOfItemAtIndex:(long long)arg1 inCompartmentAtIndex:(long long)arg2;
- (struct CGRect)frameOfCompartmentDisclosureTriangleAtIndex:(long long)arg1;
- (struct CGRect)frameOfCompartmentLabelAtIndex:(long long)arg1;
- (struct CGRect)frameOfCompartmentAtIndex:(long long)arg1;
- (double)_heightOfCompartmentAtIndex:(long long)arg1;
- (double)_heightOfCompartmentLabelAtIndex:(long long)arg1;
- (void)rollDownAllCompartments;
- (void)rollUpAllCompartments;
- (void)collapseAllCompartments;
- (void)collapseCompartmentAtIndex:(long long)arg1;
- (void)collapseCompartment:(id)arg1;
- (void)expandAllCompartments;
- (void)expandCompartmentAtIndex:(long long)arg1;
- (void)expandCompartment:(id)arg1;
- (BOOL)hasCollapsibleCompartments;
- (BOOL)hasExpandableCompartments;
- (BOOL)isCompartmentExpanded:(id)arg1;
- (BOOL)isCompartmentExpandedAtIndex:(long long)arg1;
- (void)noteNumberOfCompartmentsChanged;
- (void)reloadData;
- (void)tile;
- (id)compartmentWithIdentifier:(id)arg1;
- (id)compartmentAtIndex:(long long)arg1;
- (void)removeCompartmentAtIndex:(long long)arg1;
- (void)removeCompartment:(id)arg1;
- (void)insertCompartment:(id)arg1 atIndex:(long long)arg2;
- (void)addCompartment:(id)arg1;
- (long long)numberOfItemsInCompartmentAtIndex:(long long)arg1;
- (long long)numberOfCompartments;
- (id)compartments;
- (unsigned long long)knobPositionMask;
- (struct CGPoint)magnetLocationForConnection:(id)arg1;
- (BOOL)canFlipHorizontally;
- (BOOL)canFlipVertically;
- (BOOL)rollsUpCompartments;
- (void)setRollsUpCompartments:(BOOL)arg1;
- (BOOL)alwaysDrawsCompartmentLabel;
- (void)setAlwaysDrawsCompartmentLabel:(BOOL)arg1;
- (void)setDelegate:(id)arg1;
- (id)dataSource;
- (void)setDataSource:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)init;
- (id)operationColor;
- (void)setOperationColor:(id)arg1;
- (id)attributeColor;
- (void)setAttributeColor:(id)arg1;
- (id)nameColor;
- (void)setNameColor:(id)arg1;
- (id)operationFont;
- (void)setOperationFont:(id)arg1;
- (id)attributeFont;
- (void)setAttributeFont:(id)arg1;
- (id)nameFont;
- (void)setNameFont:(id)arg1;

@end

@interface XDGraphicAuxiliaryStorage : NSObject
{
    id _graphic;
    XDDiagramView *_diagramView;
}

+ (void)initialize;
- (id)diagramView;
- (void)_setDiagramView:(id)arg1;
- (id)graphic;
- (void)_setGraphic:(id)arg1;
- (void)dealloc;
- (id)init;
- (id)initWithGraphic:(id)arg1 diagramView:(id)arg2;

@end

@interface XDCompartmentGraphicAuxiliaryStorage : XDGraphicAuxiliaryStorage
{
    long long _selectedCompartmentIndex;
    NSMutableIndexSet *_selectedItems;
    long long _originalSelectedCompartmentIndex;
    NSMutableIndexSet *_originalSelectedItems;
    long long _mouseOverCompartmentIndex;
    long long _mouseOverCompartmentItemIndex;
    long long _clickedCompartmentIndex;
    long long _clickedCompartmentItemIndex;
    XDCompartmentItem *_clickedCompartmentItem;
    struct _XDCompartmentGraphicAuxiliaryStorageFlags _cgasFlags;
}

+ (void)initialize;
- (id)clickedCompartmentItem;
- (void)setClickedCompartmentItem:(id)arg1;
- (long long)clickedCompartmentItemIndex;
- (void)setClickedCompartmentItemIndex:(long long)arg1;
- (long long)clickedCompartmentIndex;
- (void)setClickedCompartmentIndex:(long long)arg1;
- (long long)mouseOverCompartmentItemIndex;
- (void)setMouseOverCompartmentItemIndex:(long long)arg1;
- (long long)mouseOverCompartmentIndex;
- (void)setMouseOverCompartmentIndex:(long long)arg1;
- (id)selectedItemsEnumerator;
- (long long)numberOfSelectedItems;
- (long long)indexOfSelectedItem;
- (BOOL)isItemAtIndex:(long long)arg1 selectedInCompartmentAtIndex:(long long)arg2;
- (void)_deselectAll;
- (void)_selectAll;
- (void)deselectItemAtIndex:(long long)arg1 inCompartmentAtIndex:(long long)arg2;
- (void)selectItemAtIndex:(long long)arg1 inCompartmentAtIndex:(long long)arg2 byExtendingSelection:(BOOL)arg3;
- (void)_postSelectionDidChangeNotification;
- (BOOL)_enableSelectionPostingAndPost;
- (void)_disableSelectionPosting;
- (long long)indexOfSelectedCompartment;
- (void)dealloc;
- (id)initWithGraphic:(id)arg1 diagramView:(id)arg2;

@end

@interface XDDrawingStyle : NSObject <NSCoding, NSCopying>
{
    XDGraphic *_graphic;
}

+ (id)defaultDrawingStyle;
+ (void)initialize;
- (void)drawInView:(id)arg1;
- (void)drawGraphic:(id)arg1 inView:(id)arg2;
- (id)undoManager;
- (id)graphic;
- (void)_setGraphic:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)init;
- (id)initWithGraphic:(id)arg1;

@end

@interface XDFillStyle : XDDrawingStyle
{
    NSColor *_fillColor;
    double _gradientAngle;
    NSColor *_gradientColor;
    struct _XDFillStyleFlags _fsFlags;
}

+ (void)initialize;
- (void)drawGraphic:(id)arg1 inView:(id)arg2;
- (void)drawGraphic:(id)arg1 inView:(id)arg2 usingFillType:(int)arg3;
- (id)gradientColor;
- (void)setGradientColor:(id)arg1;
- (double)gradientAngle;
- (void)setGradientAngle:(double)arg1;
- (int)fillType;
- (void)setFillType:(int)arg1;
- (id)fillColor;
- (void)setFillColor:(id)arg1;
- (BOOL)drawsFill;
- (void)setDrawsFill:(BOOL)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithGraphic:(id)arg1;

@end

@interface XDCompartmentGraphicFillStyle : XDFillStyle
{
}

+ (void)initialize;
- (void)drawGraphic:(id)arg1 inView:(id)arg2 usingFillType:(int)arg3;

@end

@interface XDShadowStyle : XDDrawingStyle
{
    NSShadow *_shadow;
    struct _XDShadowStyleFlags _ssFlags;
}

+ (void)initialize;
- (void)drawGraphic:(id)arg1 inView:(id)arg2;
- (id)shadowColor;
- (void)setShadowColor:(id)arg1;
- (double)shadowBlurRadius;
- (void)setShadowBlurRadius:(double)arg1;
- (struct CGSize)shadowOffset;
- (void)setShadowOffset:(struct CGSize)arg1;
- (BOOL)drawsShadow;
- (void)setDrawsShadow:(BOOL)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithGraphic:(id)arg1;

@end

@interface XDCompartmentGraphicShadowStyle : XDShadowStyle
{
}

+ (void)initialize;
- (void)drawGraphic:(id)arg1 inView:(id)arg2;

@end

@interface XDGraphicContentsEditor : NSObject
{
    XDDiagramView *_diagramView;
}

+ (void)initialize;
- (BOOL)abortEditing;
- (void)endEditing;
- (void)startEditingGraphic:(id)arg1 withEvent:(id)arg2;
- (id)diagramView;
- (void)_setDiagramView:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface XDGraphicTextEditor : XDGraphicContentsEditor <NSTextViewDelegate>
{
    NSTextView *_textView;
    NSTextContainer *_textContainer;
    NSLayoutManager *_layoutManager;
}

+ (Class)defaultTextStorageClass;
+ (Class)defaultLayoutManagerClass;
+ (Class)defaultTextContainerClass;
+ (Class)defaultTextViewClass;
+ (void)initialize;
- (BOOL)textView:(id)arg1 doCommandBySelector:(SEL)arg2;
- (void)textDidChange:(id)arg1;
- (void)textDidEndEditing:(id)arg1;
- (void)textDidBeginEditing:(id)arg1;
- (BOOL)textShouldEndEditing:(id)arg1;
- (BOOL)textShouldBeginEditing:(id)arg1;
- (BOOL)abortEditing;
- (void)endEditing;
- (void)startEditingGraphic:(id)arg1 withEvent:(id)arg2;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XDCompartmentGraphicTextEditor : XDGraphicTextEditor
{
    NSCell *_editingCell;
    long long _editingCompartmentIndex;
    long long _editingCompartmentItemIndex;
}

+ (void)initialize;
- (BOOL)textView:(id)arg1 doCommandBySelector:(SEL)arg2;
- (void)textDidChange:(id)arg1;
- (void)textDidEndEditing:(id)arg1;
- (void)textDidBeginEditing:(id)arg1;
- (BOOL)textShouldEndEditing:(id)arg1;
- (BOOL)textView:(id)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementString:(id)arg3;
- (BOOL)abortEditing;
- (void)endEditing;
- (void)startEditingGraphic:(id)arg1 withEvent:(id)arg2;
- (id)editingCell;
- (void)setEditingCell:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface XDCompartmentItem : NSObject <NSCoding, NSCopying>
{
    XDCompartment *_compartment;
    id _representedObject;
    NSCell *_dataCell;
}

+ (Class)defaultDataCellClass;
+ (void)initialize;
- (BOOL)mouseDown:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (id)objectValue;
- (void)setObjectValue:(id)arg1;
- (id)textColor;
- (void)setTextColor:(id)arg1;
- (id)font;
- (void)setFont:(id)arg1;
- (unsigned long long)alignment;
- (void)setAlignment:(unsigned long long)arg1;
- (id)dataCell;
- (void)setDataCell:(id)arg1;
- (id)representedObject;
- (void)setRepresentedObject:(id)arg1;
- (id)compartment;
- (void)setCompartment:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface XDCompartmentItemCell : NSTextFieldCell
{
    XDCompartmentItem *_compartmentItem;
    NSImage *_image;
    NSImage *_alternateImage;
    id _buttonTarget;
    SEL _buttonAction;
    SEL _buttonDoubleAction;
    struct _XDCompartmentItemCellFlags _cicFlags;
}

+ (void)initialize;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)selectWithFrame:(struct CGRect)arg1 inView:(id)arg2 editor:(id)arg3 delegate:(id)arg4 start:(long long)arg5 length:(long long)arg6;
- (void)editWithFrame:(struct CGRect)arg1 inView:(id)arg2 editor:(id)arg3 delegate:(id)arg4 event:(id)arg5;
- (BOOL)trackMouse:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3 untilMouseUp:(BOOL)arg4;
- (struct CGSize)cellSizeForBounds:(struct CGRect)arg1;
- (struct CGRect)titleRectForBounds:(struct CGRect)arg1;
- (struct CGRect)imageRectForBounds:(struct CGRect)arg1;
- (SEL)buttonDoubleAction;
- (void)setButtonDoubleAction:(SEL)arg1;
- (SEL)buttonAction;
- (void)setButtonAction:(SEL)arg1;
- (id)buttonTarget;
- (void)setButtonTarget:(id)arg1;
- (unsigned long long)imagePosition;
- (void)setImagePosition:(unsigned long long)arg1;
- (id)alternateImage;
- (void)setAlternateImage:(id)arg1;
- (id)image;
- (void)setImage:(id)arg1;
- (id)compartmentItem;
- (void)setCompartmentItem:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)initTextCell:(id)arg1;

@end

@interface XDCompartmentLabelCell : NSButtonCell
{
    NSImage *_iconImage;
}

+ (id)_defaultDownArrowImage;
+ (id)_defaultRightArrowImage;
+ (void)initialize;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (struct CGSize)cellSizeForBounds:(struct CGRect)arg1;
- (struct CGRect)titleRectForBounds:(struct CGRect)arg1;
- (struct CGRect)imageRectForBounds:(struct CGRect)arg1;
- (id)iconImage;
- (void)setIconImage:(id)arg1;
- (void)dealloc;
- (id)initImageCell:(id)arg1;
- (id)initTextCell:(id)arg1;

@end

@interface XDComponentManager : NSObject
{
    NSMutableDictionary *_componentOrProxyByIdentifier;
}

+ (void)unregisterComponentProxyForIdentifier:(id)arg1;
+ (void)registerComponentProxy:(id)arg1;
+ (void)registerComponentProxy:(id)arg1 forIdentifier:(id)arg2;
+ (void)unregisterComponentClassForIdentifier:(id)arg1;
+ (void)registerComponentClass:(Class)arg1;
+ (void)registerComponentClass:(Class)arg1 forIdentifier:(id)arg2;
+ (void)_unregisterComponentClassForIdentifier:(id)arg1;
+ (void)_registerComponentClassOrProxy:(id)arg1 forIdentifier:(id)arg2;
+ (void)initialize;
+ (void)_loadComponentProxies;
+ (id)_componentSearchPaths;
+ (Class)defaultComponentProxyClass;
+ (id)componentFileExtension;
+ (id)searchPathComponentInApplicationSupportDirectory;
- (id)componentWithIdentifier:(id)arg1;
- (id)componentOrProxyWithIdentifier:(id)arg1;
- (id)componentIdentifiers;
- (void)dealloc;
- (id)init;

@end

@interface XDComponentProxy : NSObject <XDComponentIdentifying>
{
    NSBundle *_bundle;
}

+ (id)defaultIdentifier;
+ (void)initialize;
- (id)component;
- (id)bundle;
- (id)identifier;
- (void)dealloc;
- (id)init;
- (id)initWithPath:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XDConnection : NSObject <NSCoding>
{
    XDGraphic *_graphic;
    XDGraphic *_targetGraphic;
    struct _XDConnectionFlags _cFlags;
}

+ (void)initialize;
- (void)invalidate;
- (id)targetGraphic;
- (void)setTargetGraphic:(id)arg1;
- (id)graphic;
- (void)_setGraphic:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface XDDiagramTool : NSObject <XDComponentIdentifying>
{
    NSString *_identifier;
    id _delegate;
    NSString *_label;
    NSString *_toolTip;
    struct _XDDiagramToolFlags _dtFlags;
}

+ (id)defaultIdentifier;
+ (void)initialize;
- (void)drawRect:(struct CGRect)arg1 inView:(id)arg2;
- (void)flagsChanged:(id)arg1 inView:(id)arg2;
- (void)mouseDown:(id)arg1 inView:(id)arg2;
- (void)mouseMoved:(id)arg1 inView:(id)arg2;
- (void)mouseExited:(id)arg1 inView:(id)arg2;
- (void)mouseEntered:(id)arg1 inView:(id)arg2;
- (void)resignCurrentDiagramTool;
- (void)becomeCurrentDiagramTool;
- (BOOL)acceptsMouseMovedEvents;
- (void)setAcceptsMouseMovedEvents:(BOOL)arg1;
- (id)imageForDiagramToolbarItem;
- (id)cursorForDiagramView:(id)arg1;
- (id)toolTip;
- (void)setToolTip:(id)arg1;
- (id)label;
- (void)setLabel:(id)arg1;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (id)identifier;
- (void)dealloc;
- (id)init;
- (id)initWithIdentifier:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XDCreationTool : XDDiagramTool
{
}

+ (Class)graphicClass;
+ (void)initialize;
- (void)drawRect:(struct CGRect)arg1 inView:(id)arg2;
- (void)mouseDown:(id)arg1 inView:(id)arg2;
- (id)cursorForDiagramView:(id)arg1;

@end

@interface XDDiagramController : NSObject
{
    XDDiagramStorage *_diagramStorage;
    NSMutableArray *_diagramViews;
    XDDiagramView *_firstDiagramView;
    XDDiagramView *_creatingDiagramView;
    XDDiagramView *_editingDiagramView;
    NSString *_lastGraphLayouterIdentifier;
    XDDiagramView *_renderingDiagramView;
    NSMutableArray *_renderingGraphics;
}

+ (void)initialize;
- (id)PDFRepresentationForGraphics:(id)arg1;
- (id)TIFFRepresentationForGraphics:(id)arg1;
- (id)diagramRepresentationForGraphics:(id)arg1;
- (id)imageRepresentationForGraphics:(id)arg1;
- (BOOL)_diagramView:(id)arg1 shouldDrawGraphic:(id)arg2;
- (void)invalidateGraphics:(id)arg1 inDiagramView:(id)arg2;
- (void)invalidateGraphic:(id)arg1 inDiagramView:(id)arg2;
- (struct CGRect)drawingBoundsForGraphics:(id)arg1 drawingMask:(long long)arg2;
- (void)_diagramViewSelectionDidChange:(id)arg1;
- (id)lastGraphLayouterIdentifier;
- (void)_setLastGraphLayouterIdentifier:(id)arg1;
- (id)editingDiagramView;
- (void)_setEditingDiagramView:(id)arg1;
- (id)creatingDiagramView;
- (void)_setCreatingDiagramView:(id)arg1;
- (void)_undoManagerDidChange:(id)arg1;
- (void)_firstDiagramViewChanged;
- (id)firstDiagramView;
- (void)removeDiagramView:(id)arg1;
- (void)addDiagramView:(id)arg1;
- (id)_diagramViews;
- (id)diagramViews;
- (void)replaceDiagramStorage:(id)arg1;
- (id)diagramStorage;
- (void)setDiagramStorage:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface XDDiagramStorage : NSObject <NSCoding>
{
    XDDiagramController *_diagramController;
    NSMutableArray *_graphicsLayers;
    NSMutableArray *_graphics;
    NSMapTable *_objectValueToGraphicsPerfHash;
    id _dataSource;
    id _delegate;
    NSDictionary *_userInfo;
    struct _XDDiagramStorageFlags _dsFlags;
}

+ (void)initialize;
- (id)userInfo;
- (void)setUserInfo:(id)arg1;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (id)dataSource;
- (void)setDataSource:(id)arg1;
- (void)invalidateGraphic:(id)arg1;
- (BOOL)isInvalidateGraphicDisabled;
- (void)enableInvalidateGraphic;
- (void)disableInvalidateGraphic;
- (id)graphicWithObjectValue:(id)arg1;
- (id)graphicsWithObjectValue:(id)arg1;
- (void)removeGraphic:(id)arg1;
- (void)moveGraphic:(id)arg1 toIndex:(long long)arg2;
- (void)moveGraphicAtIndex:(long long)arg1 toIndex:(long long)arg2;
- (void)insertGraphic:(id)arg1 atIndex:(long long)arg2;
- (void)addGraphic:(id)arg1;
- (id)graphics;
- (void)removeGraphicsLayer:(id)arg1;
- (void)moveGraphicsLayer:(id)arg1 toIndex:(long long)arg2;
- (void)moveGraphicsLayerAtIndex:(long long)arg1 toIndex:(long long)arg2;
- (void)insertGraphicsLayer:(id)arg1 atIndex:(long long)arg2;
- (void)addGraphicsLayer:(id)arg1;
- (id)graphicsLayers;
- (id)undoManager;
- (void)_invalidateCacheForGraphic:(id)arg1 withOldObjectValue:(id)arg2;
- (id)_firstDiagramViewForDiagramStorage:(id)arg1;
- (id)diagramController;
- (void)setDiagramController:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)_removeGraphicFromCache:(id)arg1;
- (void)_addGraphicToCache:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)finalize;
- (void)dealloc;
- (id)init;
- (id)defaultOperationColor;
- (void)setDefaultOperationColor:(id)arg1;
- (id)defaultAttributeColor;
- (void)setDefaultAttributeColor:(id)arg1;
- (id)defaultNameColor;
- (void)setDefaultNameColor:(id)arg1;
- (id)defaultOperationFont;
- (void)setDefaultOperationFont:(id)arg1;
- (id)defaultAttributeFont;
- (void)setDefaultAttributeFont:(id)arg1;
- (id)defaultNameFont;
- (void)setDefaultNameFont:(id)arg1;

@end

@interface XDDiagramToolManager : XDComponentManager
{
    XDDiagramTool *_currentDiagramTool;
    NSMapTable *_identifierByTag;
    NSToolbarItem *_toolbarItem;
    NSArray *_toolIdentifiers;
}

+ (id)componentFileExtension;
+ (void)initialize;
- (void)_diagramToolsToolbarItemAction:(id)arg1;
- (void)setDiagramToolIdentifiers:(id)arg1;
- (void)setDiagramToolsDelegatesTo:(id)arg1;
- (id)diagramToolsToolbarItem;
- (id)_arrangedDiagramToolIdentifiers;
- (void)selectDiagramToolWithIdentifier:(id)arg1;
- (void)selectDiagramTool:(id)arg1;
- (id)currentDiagramTool;
- (void)finalize;
- (void)dealloc;
- (id)init;

@end

@interface XDDiagramView : NSView
{
    XDDiagramToolManager *_diagramToolManager;
    XDDiagramController *_diagramController;
    XDDiagramStorage *_diagramStorage;
    struct CGSize _canvasSize;
    double _zoomFactor;
    NSMutableArray *_selectedGraphics;
    NSArray *_originalSelectedGraphics;
    NSMutableArray *_orderedSelectedGraphics;
    NSMutableArray *_rubberbandGraphics;
    XDGraphic *_creatingGraphic;
    XDGraphic *_editingGraphic;
    NSView *_editorView;
    XDGraphic *_clickedGraphic;
    NSMapTable *_auxiliaryStorageCache;
    NSMapTable *_drawingCache;
    id _delegate;
    id _target;
    SEL _action;
    SEL _doubleAction;
    struct CGPoint _translatedOrigin;
    NSColor *_canvasBackgroundColor;
    NSShadow *_canvasShadow;
    NSColor *_backgroundColor;
    double _majorGridSpacing;
    long long _minorGridCount;
    NSColor *_majorGridColor;
    NSColor *_minorGridColor;
    NSColor *_pageBreaksColor;
    NSImage *_gridDrawingCache;
    struct CGRect _vRulerLineRect;
    struct CGRect _hRulerLineRect;
    NSTimer *_unhideKnobsTimer;
    long long _trackingRectTag;
    NSString *_toolTip;
    double _toolTipDelay;
    struct __CFRunLoopTimer *_toolTipTimer;
    struct CGPoint _toolTipPoint;
    NSWindow *_toolTipWindow;
    long long _toolTipTrackingRectTag;
    long long _pasteboardChangeCount;
    long long _pasteCascadeNumber;
    id _reserved;
}

+ (id)_defaultMenu;
+ (id)defaultMenu;
+ (void)setDefaultMenu:(id)arg1;
+ (void)_synchronizeDefaultContextMenu;
+ (Class)_defaultZoomPopUpButtonClass;
+ (Class)_defaultDiagramStorageClass;
+ (Class)_defaultDiagramControllerClass;
+ (Class)_defaultDiagramToolManagerClass;
+ (id)defaultTypeToSelectCharacterSet;
+ (id)defaultZoomFactors;
+ (BOOL)defaultShowsSelectedGraphicsInFront;
+ (void)setDefaultShowsSelectedGraphicsInFront:(BOOL)arg1;
+ (BOOL)defaultShowsPageBreaks;
+ (void)setDefaultShowsPageBreaks:(BOOL)arg1;
+ (id)defaultPageBreaksColor;
+ (void)setDefaultPageBreaksColor:(id)arg1;
+ (BOOL)defaultSnapsToGrid;
+ (void)setDefaultSnapsToGrid:(BOOL)arg1;
+ (BOOL)defaultShowsMajorGrid;
+ (void)setDefaultShowsMajorGrid:(BOOL)arg1;
+ (BOOL)defaultShowsGrid;
+ (void)setDefaultShowsGrid:(BOOL)arg1;
+ (id)defaultMinorGridColor;
+ (void)setDefaultMinorGridColor:(id)arg1;
+ (id)defaultMajorGridColor;
+ (void)setDefaultMajorGridColor:(id)arg1;
+ (void)initialize;
- (void)flagsChanged:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)_bezelWidgetWillOrderOut:(id)arg1;
- (void)_navViewAction:(id)arg1;
- (void)mouseMoved:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)_destroyToolTipTimer;
- (void)_createToolTipTimer;
- (void)_toolTipTimer;
- (void)_showToolTip:(id)arg1;
- (double)_toolTipDelay;
- (void)_setToolTipDelay:(double)arg1;
- (id)menuForEvent:(id)arg1;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (void)resignKeyWindow;
- (void)becomeKeyWindow;
- (BOOL)resignFirstResponder;
- (BOOL)becomeFirstResponder;
- (BOOL)acceptsFirstResponder;
- (void)_setNeedsDisplayForFirstResponderChange;
- (void)_applicationDidChange:(id)arg1;
- (void)_setNeedsDisplayForApplicationChange;
- (BOOL)moveSelectedGraphicsRelativeToPoint:(struct CGPoint)arg1;
- (void)_unhideKnobs:(id)arg1;
- (void)_hideKnobsMomentarily;
- (BOOL)areKnobsHidden;
- (void)setKnobsHidden:(BOOL)arg1;
- (void)updateRulers;
- (void)endEchoingToRulers;
- (void)continueEchoingToRulers:(struct CGRect)arg1;
- (void)beginEchoingToRulers:(struct CGRect)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)drawGraphics:(id)arg1 inRect:(struct CGRect)arg2;
- (id)_drawingCacheForGraphic:(id)arg1;
- (void)drawMinorGridInRect:(struct CGRect)arg1;
- (void)drawMajorGridInRect:(struct CGRect)arg1;
- (void)drawPageBreaksInRect:(struct CGRect)arg1;
- (void)invalidateGridDrawingCache;
- (id)auxiliaryStorageForGraphic:(id)arg1;
- (void)resetCursorRects;
- (BOOL)isOpaque;
- (BOOL)isFlipped;
- (id)visibleGraphicsIntersectingRect:(struct CGRect)arg1;
- (id)selectedGraphicsIntersectingRect:(struct CGRect)arg1;
- (id)graphicsIntersectingRect:(struct CGRect)arg1;
- (id)visibleTrackingGraphicUnderPoint:(struct CGPoint)arg1;
- (id)trackingGraphicUnderPoint:(struct CGPoint)arg1;
- (id)trackingGraphicInFrontUnderPoint:(struct CGPoint)arg1;
- (id)visibleGraphicUnderPoint:(struct CGPoint)arg1;
- (id)graphicUnderPoint:(struct CGPoint)arg1;
- (id)graphicInFrontUnderPoint:(struct CGPoint)arg1;
- (id)_visibleGraphicUnderPoint:(struct CGPoint)arg1 trackingOnly:(BOOL)arg2;
- (id)_graphicUnderPoint:(struct CGPoint)arg1 trackingOnly:(BOOL)arg2;
- (id)_graphicInFrontUnderPoint:(struct CGPoint)arg1 trackingOnly:(BOOL)arg2;
- (id)graphicsInFront;
- (BOOL)showsSelectedGraphicsInFront;
- (void)setShowsSelectedGraphicsInFront:(BOOL)arg1;
- (BOOL)showsHiddenGraphics;
- (void)setShowsHiddenGraphics:(BOOL)arg1;
- (double)maxTypeToSelectInterval;
- (void)setMaxTypeToSelectInterval:(double)arg1;
- (BOOL)allowsTypeToSelect;
- (void)setAllowsTypeToSelect:(BOOL)arg1;
- (id)undoManager;
- (BOOL)allowsUndo;
- (void)setAllowsUndo:(BOOL)arg1;
- (struct CGPoint)gridPoint:(struct CGPoint)arg1;
- (struct CGPoint)forceGridPoint:(struct CGPoint)arg1;
- (BOOL)showsPageBreaks;
- (void)setShowsPageBreaks:(BOOL)arg1;
- (id)pageBreaksColor;
- (void)setPageBreaksColor:(id)arg1;
- (BOOL)snapsToGrid;
- (void)setSnapsToGrid:(BOOL)arg1;
- (BOOL)showsMinorGrid;
- (void)setShowsMinorGrid:(BOOL)arg1;
- (BOOL)showsMajorGrid;
- (void)setShowsMajorGrid:(BOOL)arg1;
- (BOOL)showsGrid;
- (void)setShowsGrid:(BOOL)arg1;
- (id)minorGridColor;
- (void)setMinorGridColor:(id)arg1;
- (id)majorGridColor;
- (void)setMajorGridColor:(id)arg1;
- (double)minorGridSpacing;
- (long long)minorGridCount;
- (void)setMinorGridCount:(long long)arg1;
- (double)majorGridSpacing;
- (void)setMajorGridSpacing:(double)arg1;
- (id)backgroundColor;
- (void)setBackgroundColor:(id)arg1;
- (BOOL)drawsBackground;
- (void)setDrawsBackground:(BOOL)arg1;
- (id)canvasShadow;
- (void)setCanvasShadow:(id)arg1;
- (BOOL)drawsCanvasShadow;
- (void)setDrawsCanvasShadow:(BOOL)arg1;
- (id)canvasBackgroundColor;
- (void)setCanvasBackgroundColor:(id)arg1;
- (BOOL)drawsCanvasBackground;
- (void)setDrawsCanvasBackground:(BOOL)arg1;
- (BOOL)allowsDragAndDrop;
- (void)setAllowsDragAndDrop:(BOOL)arg1;
- (BOOL)isEditable;
- (void)setEditable:(BOOL)arg1;
- (BOOL)isSelectable;
- (void)setSelectable:(BOOL)arg1;
- (SEL)doubleAction;
- (void)setDoubleAction:(SEL)arg1;
- (SEL)action;
- (void)setAction:(SEL)arg1;
- (id)target;
- (void)setTarget:(id)arg1;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (BOOL)_sendDoubleActionWithClickedGraphic:(id)arg1;
- (BOOL)_sendActionWithClickedGraphic:(id)arg1;
- (BOOL)_sendAction:(SEL)arg1 to:(id)arg2 graphic:(id)arg3;
- (id)clickedGraphic;
- (BOOL)abortEditing;
- (void)endEditing;
- (void)startEditingGraphic:(id)arg1 withEvent:(id)arg2;
- (BOOL)isEditing;
- (id)editorView;
- (id)editingGraphic;
- (void)setEditingGraphic:(id)arg1 editorView:(id)arg2;
- (id)creatingGraphic;
- (void)setCreatingGraphic:(id)arg1;
- (id)rubberbandGraphics;
- (void)setRubberbandGraphics:(id)arg1;
- (id)layoutableGraphics;
- (id)removableGraphics;
- (id)resizableGraphics;
- (id)movableGraphics;
- (void)_scrollGraphicTitleToVisible:(id)arg1 forceCenter:(BOOL)arg2;
- (void)scrollGraphicsToVisible:(id)arg1 forceCenter:(BOOL)arg2;
- (void)_centeredScrollRectToVisible:(struct CGRect)arg1 forceCenter:(BOOL)arg2;
- (void)clearSelection;
- (void)_deselectHiddenSelectedGraphics;
- (void)deselectGraphics:(id)arg1;
- (void)deselectGraphic:(id)arg1;
- (void)selectGraphics:(id)arg1;
- (void)selectGraphic:(id)arg1;
- (BOOL)graphicIsSelected:(id)arg1;
- (id)orderedSelectedGraphics;
- (id)selectedGraphics;
- (void)_userSelectGraphic:(id)arg1;
- (BOOL)_userCanSelectGraphic:(id)arg1;
- (BOOL)_userCanChangeSelection;
- (void)_postSelectionDidChangeNotification;
- (BOOL)_enableSelectionPostingAndPost;
- (void)_disableSelectionPosting;
- (void)invalidateAllGraphics;
- (void)invalidateSelectedGraphicsInRect:(struct CGRect)arg1;
- (void)invalidateGraphics:(id)arg1;
- (void)invalidateGraphic:(id)arg1;
- (void)viewDidMoveToSuperview;
- (void)viewWillMoveToSuperview:(id)arg1;
- (void)_graphLayouterMenuItemAction:(id)arg1;
- (void)layoutGraphicsUsingGraphLayouterWithIdentiier:(id)arg1;
- (void)sizeToFit;
- (void)_superviewFrameDidChange:(id)arg1;
- (void)tile;
- (void)_canvasSizeDidChange:(id)arg1;
- (BOOL)autoresizesCanvas;
- (void)setAutoresizesCanvas:(BOOL)arg1;
- (struct CGSize)canvasSize;
- (void)setCanvasSize:(struct CGSize)arg1;
- (struct CGSize)documentSize;
- (struct CGRect)drawingBounds;
- (struct CGRect)drawingBoundsWithMask:(long long)arg1;
- (void)_zoomPopUpButtonAction:(id)arg1;
- (id)zoomPopUpButton;
- (BOOL)zoomToFit;
- (double)_zoomFactorToFit;
- (BOOL)zoomOut;
- (BOOL)zoomIn;
- (double)zoomFactor;
- (void)setZoomFactor:(double)arg1;
- (void)setZoomFactor:(double)arg1 animate:(BOOL)arg2;
- (double)_maxZoomFactor;
- (double)_minZoomFactor;
- (id)zoomFactors;
- (id)printInfo;
- (void)_replaceOwnedDiagramStorage:(id)arg1;
- (BOOL)_ownsDiagramStorage;
- (id)diagramStorage;
- (id)diagramController;
- (void)setDiagramController:(id)arg1;
- (void)_currentDiagramToolDidChange:(id)arg1;
- (id)diagramToolManager;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)_invalidateToolTip;
- (void)finalize;
- (void)dealloc;
- (oneway void)release;
- (id)retain;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1 diagramController:(id)arg2;
- (BOOL)dragSelectionWithEvent:(id)arg1 offset:(struct CGSize)arg2 slideBack:(BOOL)arg3;
- (id)dragImageForSelectionWithEvent:(id)arg1 origin:(struct CGPoint *)arg2;
- (unsigned long long)draggingSourceOperationMaskForLocal:(BOOL)arg1;
- (void)concludeDragOperation:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (BOOL)prepareForDragOperation:(id)arg1;
- (void)draggingExited:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (void)cleanUpAfterDragOperation;
- (unsigned long long)dragOperationForDraggingInfo:(id)arg1 type:(id)arg2;
- (id)acceptableDragTypes;
- (BOOL)validateToolbarItem:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)toggleHiddenGraphicsShown:(id)arg1;
- (void)zoomToFit:(id)arg1;
- (void)zoomOut:(id)arg1;
- (void)zoomIn:(id)arg1;
- (void)toggleRuler:(id)arg1;
- (void)togglePageBreaksShown:(id)arg1;
- (void)toggleGridShown:(id)arg1;
- (void)toggleSnapsToGrid:(id)arg1;
- (void)layoutGraphicsConcentrically:(id)arg1;
- (void)layoutGraphicsHierarchically:(id)arg1;
- (void)rollDownAllCompartments:(id)arg1;
- (void)rollUpAllCompartments:(id)arg1;
- (void)collapseAllCompartments:(id)arg1;
- (void)expandAllCompartments:(id)arg1;
- (void)flipHorizontally:(id)arg1;
- (void)flipVertically:(id)arg1;
- (void)sizeToFit:(id)arg1;
- (void)makeSameHeight:(id)arg1;
- (void)makeSameWidth:(id)arg1;
- (void)alignCentersHorizontallyInContainer:(id)arg1;
- (void)alignCentersVerticallyInContainer:(id)arg1;
- (void)alignHorizontalCenters:(id)arg1;
- (void)alignVerticalCenters:(id)arg1;
- (void)alignRightEdges:(id)arg1;
- (void)alignLeftEdges:(id)arg1;
- (void)alignBottomEdges:(id)arg1;
- (void)alignTopEdges:(id)arg1;
- (void)unlock:(id)arg1;
- (void)lock:(id)arg1;
- (void)sendToBack:(id)arg1;
- (void)bringToFront:(id)arg1;
- (void)deselectAll:(id)arg1;
- (void)selectAll:(id)arg1;
- (void)scrollLineDown:(id)arg1;
- (void)scrollLineUp:(id)arg1;
- (void)scrollPageDown:(id)arg1;
- (void)scrollPageUp:(id)arg1;
- (void)_scrollVertically:(double)arg1;
- (double)_verticalDistanceForLineScroll;
- (double)_verticalDistanceForPageScroll;
- (void)moveRightAndModifySelection:(id)arg1;
- (void)moveLeftAndModifySelection:(id)arg1;
- (void)moveDownAndModifySelection:(id)arg1;
- (void)moveUpAndModifySelection:(id)arg1;
- (void)centerSelectionInVisibleArea:(id)arg1;
- (void)moveRight:(id)arg1;
- (void)moveLeft:(id)arg1;
- (void)moveDown:(id)arg1;
- (void)moveUp:(id)arg1;
- (void)_userMoveSelectedGraphicsRelativeToPoint:(struct CGPoint)arg1;
- (void)keyDown:(id)arg1;
- (void)doCommandBySelector:(SEL)arg1;
- (void)insertText:(id)arg1;
- (void)paste:(id)arg1;
- (void)deleteBackward:(id)arg1;
- (void)deleteForward:(id)arg1;
- (void)delete:(id)arg1;
- (void)cut:(id)arg1;
- (void)copy:(id)arg1;
- (BOOL)readSelectionFromPasteboard:(id)arg1;
- (BOOL)_readSelectionFromPasteboard:(id)arg1 types:(id)arg2;
- (BOOL)readSelectionFromPasteboard:(id)arg1 type:(id)arg2;
- (BOOL)_readDiagramFromPasteboard:(id)arg1;
- (id)preferredPasteboardTypeFromArray:(id)arg1 restrictedToTypesFromArray:(id)arg2;
- (id)readablePasteboardTypes;
- (BOOL)writeSelectionToPasteboard:(id)arg1 types:(id)arg2;
- (BOOL)writeSelectionToPasteboard:(id)arg1 type:(id)arg2;
- (id)writablePasteboardTypes;
- (struct CGRect)rectForPage:(long long)arg1;
- (BOOL)knowsPageRange:(struct _NSRange *)arg1;

@end

@interface XDDiagramZoomPopUpButton : NSPopUpButton
{
    XDDiagramView *_diagramView;
}

+ (void)initialize;
- (void)_diagramViewDidChangeZoomFactor:(id)arg1;
- (id)diagramView;
- (void)_setDiagramView:(id)arg1;
- (void)_updatePopUpButtonItems;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface XDPluginController : NSObject
{
    XDPlugin *_plugin;
    XDPluginController *_mainController;
    NSMutableArray *_subControllers;
    XDModelReference *_model;
    id <XDxdesignController> _xdesignController;
}

- (void)dealloc;
- (void)close;
- (BOOL)saveModelToFile:(id)arg1;
- (BOOL)loadModelFromFile:(id)arg1;
- (id)xdesignController;
- (void)setXdesignController:(id)arg1;
- (id)model;
- (void)setModel:(id)arg1;
- (BOOL)hasSameObjectsForInspectionsAs:(id)arg1;
- (id)inspectorViewForPane:(long long)arg1;
- (id)inspectorLabelForPane:(long long)arg1;
- (id)inspectorControllerForSelectedElement;
- (id)inspectorControllerForElement:(id)arg1;
- (id)editorControllerForElement:(id)arg1;
- (id)displayNameForView;
- (id)view;
- (id)mainView;
- (void)removeSubController:(id)arg1;
- (void)addSubController:(id)arg1;
- (id)mainController;
- (void)setMainController:(id)arg1;
- (id)_msgViewForMethodName:(id)arg1;
- (void)newModel:(id)arg1;
- (id)plugin;
- (id)initWithPlugin:(id)arg1;

@end

@interface XDDocumentController : XDPluginController
{
    id <XDModelCreationStatusObserving> _statusObserver;
    id _xcodeProject;
    struct {
        unsigned int isloadedDuringProjectLoading:1;
        unsigned int RESERVED:31;
    } _xdpcFlags;
}

- (void)notifyDocumentModelChangedNotUndoable;
- (void)setLoadedDuringProjectLoading:(BOOL)arg1;
- (BOOL)isLoadedDuringProjectLoading;
- (void)printInfoDidChange;
- (void)setStatusObserver:(id)arg1;
- (BOOL)completedModelContent;
- (void)setXcodeProject:(id)arg1;
- (id)xcodeProject;

@end

@interface XDEditorController : XDPluginController
{
}

- (void)selectionForInspectorChanged;
- (void)toggleModelBrowser:(id)arg1;
- (BOOL)isModelBrowserShown;
- (BOOL)hasModelBrowser;
- (void)setUserInterfaceContext:(id)arg1;
- (id)userInterfaceContext;
- (id)printableView;

@end

@interface XDGraphLayouter : NSObject <XDComponentIdentifying>
{
    NSString *_identifier;
    NSMutableArray *_graphNodes;
    NSMutableArray *_graphEdges;
}

+ (id)defaultIdentifier;
+ (void)initialize;
- (void)layoutGraph;
- (void)endLayouting;
- (void)processLayouting;
- (void)beginLayouting;
- (void)removeAllGraphEdges;
- (void)removeGraphEdgeAtIndex:(long long)arg1;
- (void)removeGraphEdge:(id)arg1;
- (void)insertGraphEdge:(id)arg1 atIndex:(long long)arg2;
- (void)addGraphEdge:(id)arg1;
- (id)graphEdges;
- (void)removeAllGraphNodes;
- (void)removeGraphNodeAtIndex:(long long)arg1;
- (void)removeGraphNode:(id)arg1;
- (void)insertGraphNode:(id)arg1 atIndex:(long long)arg2;
- (void)addGraphNode:(id)arg1;
- (id)graphNodes;
- (SEL)action;
- (id)target;
- (unsigned long long)keyEquivalentModifierMask;
- (id)keyEquivalent;
- (id)label;
- (id)identifier;
- (void)dealloc;
- (id)init;
- (id)initWithIdentifier:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XDGraphLayouterManager : XDComponentManager
{
}

+ (BOOL)sharedGraphLayouterManagerExists;
+ (id)sharedGraphLayouterManager;
+ (Class)_sharedGraphLayouterManagerClass;
+ (id)componentFileExtension;
+ (void)initialize;

@end

@interface XDGraphicFinder : NSObject
{
    XDTableView *_tableView;
    NSSearchField *_searchField;
}

+ (void)initialize;
- (void)_searchFieldAction:(id)arg1;
- (void)_tableViewAction:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface XDGraphicID : NSObject <NSCoding, NSCopying>
{
    struct __CFUUID *_uuid;
}

+ (void)initialize;
- (id)uuidString;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)init;
- (id)initWithUUIDString:(id)arg1;

@end

@interface XDGraphicLayouter : XDGraphLayouter
{
    XDDiagramView *_diagramView;
}

+ (id)defaultIdentifier;
+ (void)initialize;
- (void)layoutGraphics:(id)arg1 inView:(id)arg2;
- (id)diagramView;
- (void)endLayouting;
- (void)beginLayouting;
- (void)dealloc;
- (id)initWithIdentifier:(id)arg1;

@end

@interface XDGraphicTextContainer : NSTextContainer
{
    id _delegate;
    struct _XDGraphicTextContainerFlags _gtcFlags;
}

+ (void)initialize;
- (struct CGRect)lineFragmentRectForProposedRect:(struct CGRect)arg1 sweepDirection:(unsigned long long)arg2 movementDirection:(unsigned long long)arg3 remainingRect:(struct CGRect *)arg4;
- (BOOL)isSimpleRectangularTextContainer;
- (id)delegate;
- (void)setDelegate:(id)arg1;

@end

@interface XDGraphicTool : XDCreationTool
{
}

+ (Class)graphicClass;
+ (id)defaultIdentifier;
+ (void)initialize;
- (id)imageForDiagramToolbarItem;
- (id)initWithIdentifier:(id)arg1;

@end

@interface XDGraphicsLayer : NSObject <NSCoding>
{
    XDDiagramStorage *_diagramStorage;
    NSString *_title;
}

+ (void)initialize;
- (id)title;
- (void)setTitle:(id)arg1;
- (id)diagramStorage;
- (void)_setDiagramStorage:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface XDHighlightStyle : XDDrawingStyle
{
    NSColor *_highlightColor;
}

+ (void)initialize;
- (void)drawGraphic:(id)arg1 inView:(id)arg2;
- (id)highlightColor;
- (void)setHighlightColor:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithGraphic:(id)arg1;

@end

@interface XDInspectorController : XDPluginController
{
}

- (void)viewWasInstalledAtIndex:(long long)arg1;
- (void)showHelp:(id)arg1;

@end

@interface XDLineDashPattern : NSObject <NSCoding, NSCopying>
{
    NSString *_name;
    double *_pattern;
    long long _count;
    double _phase;
    double _lastCachedLineWidth;
    double *_lastCachedPattern;
}

+ (id)lineDashPatternWithLineDash:(const double *)arg1 count:(long long)arg2 phase:(double)arg3;
+ (id)registeredLineDashPatterns;
+ (id)registeredLineDashPatternForIdentifier:(id)arg1;
+ (void)unregisterLineDashPatternForIdentifier:(id)arg1;
+ (void)registerLineDashPattern:(id)arg1 forIdentifier:(id)arg2;
+ (void)initialize;
- (const double *)lineDashPatternForLineWidth:(double)arg1;
- (double)lineDashPhase;
- (long long)lineDashPatternCount;
- (const double *)lineDashPattern;
- (void)setLineDash:(const double *)arg1 count:(long long)arg2 phase:(double)arg3;
- (id)lineDashPatternName;
- (void)setLineDashPatternName:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isEqualToLineDashPattern:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)finalize;
- (void)dealloc;
- (id)init;
- (id)initWithLineDash:(const double *)arg1 count:(long long)arg2 phase:(double)arg3;

@end

@interface XDLineEnd : NSObject <NSCoding, NSCopying>
{
    XDGraphic *_graphic;
    NSString *_identifier;
    NSString *_name;
    struct CGPoint _origin;
    struct CGPoint _slope;
    double _gap;
    double _width;
    double _lineGap;
    NSBezierPath *_bezierPath;
    NSAffineTransform *_cachedTransform;
    NSBezierPath *_cachedBezierPath;
    struct _XDLineEndFlags _leFlags;
}

+ (id)lineEndWithIdentifier:(id)arg1;
+ (void)unregisterLineEnd:(id)arg1;
+ (void)registerLineEnd:(id)arg1;
+ (id)registeredLineEnds;
+ (void)initialize;
- (struct CGRect)drawingBounds;
- (struct CGRect)bounds;
- (id)bezierPath;
- (void)setBezierPath:(id)arg1;
- (id)transform;
- (struct CGPoint)lineOrigin;
- (double)lineGap;
- (void)setLineGap:(double)arg1;
- (double)width;
- (void)setWidth:(double)arg1;
- (double)gap;
- (void)setGap:(double)arg1;
- (BOOL)isFilled;
- (void)setFilled:(BOOL)arg1;
- (struct CGPoint)slope;
- (void)setSlope:(struct CGPoint)arg1;
- (struct CGPoint)origin;
- (void)setOrigin:(struct CGPoint)arg1;
- (void)_invalidateCache;
- (id)displayName;
- (id)name;
- (void)setName:(id)arg1;
- (id)identifier;
- (void)_setIdentifier:(id)arg1;
- (id)graphic;
- (void)setGraphic:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)init;
- (id)initWithIdentifier:(id)arg1;

@end

@interface XDLineGraphic : XDGraphic <XDGraphEdge>
{
    XDLineEnd *_headLineEnd;
    XDLineEnd *_tailLineEnd;
    XDConnection *_headConnection;
    XDConnection *_tailConnection;
    struct CGSize _headStemSize;
    struct CGSize _tailStemSize;
    double _orthogonalPivotPosition;
    struct _XDLineGraphicFlags _lgFlags;
}

+ (void)initialize;
- (id)cursorForKnobPosition:(int)arg1;
- (BOOL)isLayoutable;
- (BOOL)isMovable;
- (BOOL)isHitByPoint:(struct CGPoint)arg1 inScale:(double)arg2;
- (BOOL)intersectsRect:(struct CGRect)arg1;
- (void)drawStrokeInView:(id)arg1;
- (id)highlightPath;
- (id)hitTestPath;
- (id)strokePath;
- (id)_bezierPathWithHeadLineEnd:(id)arg1 tailLineEnd:(id)arg2 appendLineEndPaths:(BOOL)arg3;
- (id)fillPath;
- (void)connectionDidMove:(id)arg1;
- (void)_connectionDidMove:(id)arg1;
- (struct CGPoint)crossingPointForConnection:(id)arg1;
- (unsigned long long)knobPositionMask;
- (BOOL)canCacheDrawingResult;
- (BOOL)canEdit;
- (BOOL)canDrawFill;
- (BOOL)canDrawContents;
- (id)tailGraphNode;
- (id)headGraphNode;
- (id)tailGraphic;
- (id)headGraphic;
- (id)tailConnection;
- (void)setTailConnection:(id)arg1;
- (id)headConnection;
- (void)setHeadConnection:(id)arg1;
- (void)flipVertically;
- (void)flipHorizontally;
- (struct CGRect)hitTestBounds;
- (struct CGSize)drawingBoundsMargin;
- (void)setBounds:(struct CGRect)arg1;
- (id)tailLineEnd;
- (void)setTailLineEnd:(id)arg1;
- (id)headLineEnd;
- (void)setHeadLineEnd:(id)arg1;
- (void)_validateLineEnds;
- (struct CGPoint)_tailSlope;
- (struct CGPoint)_headSlope;
- (double)orthogonalPivotPosition;
- (void)setOrthogonalPivotPosition:(double)arg1;
- (struct CGSize)tailStemSize;
- (void)setTailStemSize:(struct CGSize)arg1;
- (struct CGSize)headStemSize;
- (void)setHeadStemSize:(struct CGSize)arg1;
- (int)lineType;
- (void)setLineType:(int)arg1;
- (int)tailKnobPosition;
- (int)headKnobPosition;
- (struct CGPoint)tailPoint;
- (struct CGPoint)headPoint;
- (void)_setDiagramStorage:(id)arg1;
- (void)setDelegate:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface XDLineGraphicTool : XDCreationTool
{
    struct _XDLineGraphicToolFlags _lgtFlags;
}

+ (Class)graphicClass;
+ (id)defaultIdentifier;
+ (void)initialize;
- (void)mouseDown:(id)arg1 inView:(id)arg2;
- (void)setDelegate:(id)arg1;
- (id)imageForDiagramToolbarItem;
- (void)dealloc;
- (id)initWithIdentifier:(id)arg1;

@end

@interface XDMagnet : NSObject <NSCoding, NSCopying>
{
    struct CGPoint _location;
    void *_magnetReserved;
}

+ (id)_defaultHighlightedMagnetImage;
+ (id)defaultMagnetImage;
+ (void)initialize;
- (id)_highlightedMagnetImage;
- (id)magnetImage;
- (void)setMagnetImage:(id)arg1;
- (struct CGPoint)location;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)init;
- (id)initWithLocation:(struct CGPoint)arg1;

@end

@interface XDMinLayoutSizeView : NSView
{
    struct CGSize _minLayoutSize;
}

+ (id)wrapView:(id)arg1 withMinLayoutSize:(struct CGSize)arg2;
- (void)setFrameSize:(struct CGSize)arg1;
- (struct CGSize)minLayoutSize;
- (void)setMinLayoutSize:(struct CGSize)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface XDOutlineView : NSOutlineView
{
    id _tableColumnProvider;
    NSMenu *_tableHeaderContextMenu;
    struct _XDOutlineViewFlags _xdOVFlags;
}

+ (void)initialize;
- (void)keyDown:(id)arg1;
- (void)delete:(id)arg1;
- (void)cut:(id)arg1;
- (void)paste:(id)arg1;
- (void)copy:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)_tableHeaderContextMenuItemAction:(id)arg1;
- (void)showAllTableColumns:(id)arg1;
- (void)mouseDown:(id)arg1;
- (BOOL)optionClickEditsAnyCell;
- (void)setOpetionClickEditsAnyCell:(BOOL)arg1;
- (BOOL)optionClickCausesEditing;
- (void)setOptionClickCausesEditing:(BOOL)arg1;
- (void)reloadTableColumns;
- (void)_synchronizeTableHeaderContextMenu;
- (id)_tableColumnWithIdentifier:(id)arg1;
- (id)tableColumnWithIdentifier:(id)arg1;
- (id)tableColumnProvider;
- (void)setTableColumnProvider:(id)arg1;
- (void)_tableColumnProviderRemoveTableColumn:(id)arg1;
- (void)_tableColumnProviderAddTableColumn:(id)arg1;
- (id)_tableColumnProviderAllowedTableColumnIdentifers;
- (id)_tableColumnProviderDefaultTableColumnIdentifiers;
- (id)_tableColumnProviderOutlineTableColumnIdentifier;
- (void)insertTableColumn:(id)arg1 atIndex:(long long)arg2;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)awakeFromNib;

@end

@interface XDPlugin : NSObject
{
    NSBundle *_pluginBundle;
}

+ (void)initialize:(id)arg1;
- (id)_callBack;
- (id)frontmostPluginController;
- (id)bundle;
- (id)mainMenuItem;
- (BOOL)isValidGroupsAndFilesSelection:(id)arg1;
- (id)customMainMenuItems;
- (void)newModel:(id)arg1;
- (id)newController;
- (id)createController;
- (id)modelTypeId;
- (id)modelTypeDisplayNamePlural;
- (id)modelTypeDisplayName;
- (BOOL)saveModelIDFileAtModelPath:(id)arg1;
- (BOOL)canLoadModelAtPath:(id)arg1;
- (void)start;
- (id)init;

@end

@interface XDScrollView : NSScrollView
{
    NSMutableArray *_vScrollerViews;
    NSMutableArray *_hScrollerViews;
    double _vScrollerMargin;
    double _hScrollerMargin;
    NSView *_vScrollerAccessoryView;
    NSView *_hScrollerAccessoryView;
    double _vScrollerAccessoryViewThickness;
    double _hScrollerAccessoryViewThickness;
    struct _XDScrollViewFlags _svFlags;
}

+ (double)defaultReservedThicknessForHorizontalScrollerAccessoryView;
+ (void)setDefaultReservedThicknessForHorizontalScrollerAccessoryView:(double)arg1;
+ (double)defaultReservedThicknessForVerticalScrollerAccessoryView;
+ (void)setDefaultReservedThicknessForVerticalScrollerAccessoryView:(double)arg1;
+ (double)defaultHorizontalScrollerMargin;
+ (void)setDefaultHorizontalScrollerMargin:(double)arg1;
+ (double)defaultVerticalScrollerMargin;
+ (void)setDefaultVerticalScrollerMargin:(double)arg1;
+ (void)initialize;
- (void)drawRect:(struct CGRect)arg1;
- (void)_drawBorderForHorizontalScrollerViews;
- (void)_drawBorderForVerticalScrollerViews;
- (void)tile;
- (void)tileHorizontalScrollerViews;
- (void)tileVerticalScrollerViews;
- (double)reservedThicknessForHorizontalScrollerAccessoryView;
- (void)setReservedThicknessForHorizontalScrollerAccessoryView:(double)arg1;
- (double)reservedThicknessForVerticalScrollerAccessoryView;
- (void)setReservedThicknessForVerticalScrollerAccessoryView:(double)arg1;
- (id)horizontalScrollerAccessoryView;
- (void)setHorizontalScrollerAccessoryView:(id)arg1;
- (id)verticalScrollerAccessoryView;
- (void)setVerticalScrollerAccessoryView:(id)arg1;
- (int)_horizontalScrollerAccessoryViewPosition;
- (int)horizontalScrollerAccessoryViewPosition;
- (void)setHorizontalScrollerAccessoryViewPosition:(int)arg1;
- (int)_verticalScrollerAccessorViewPosition;
- (int)verticalScrollerAccessoryViewPosition;
- (void)setVerticalScrollerAccessoryViewPosition:(int)arg1;
- (BOOL)hasHorizontalScrollerAccessoryView;
- (void)setHasHorizontalScrollerAccessoryView:(BOOL)arg1;
- (BOOL)hasVerticalScrollerAccessoryView;
- (void)setHasVerticalScrollerAccessoryView:(BOOL)arg1;
- (void)removeAllHorizontalScrollerViews;
- (void)removeHorizontalScrollerViewAtIndex:(long long)arg1;
- (void)removeHorizontalScrollerView:(id)arg1;
- (void)insertHorizontalScrollerView:(id)arg1 atIndex:(long long)arg2;
- (void)addHorizontalScrollerView:(id)arg1;
- (void)removeAllVerticalScrollerViews;
- (void)removeVerticalScrollerViewAtIndex:(long long)arg1;
- (void)removeVerticalScrollerView:(id)arg1;
- (void)insertVerticalScrollerView:(id)arg1 atIndex:(long long)arg2;
- (void)addVerticalScrollerView:(id)arg1;
- (id)_horizontalScrollerViews;
- (id)_verticalScrollerViews;
- (id)horizontalScrollerViews;
- (id)verticalScrollerViews;
- (int)_horizontalScrollerViewsPosition;
- (int)horizontalScrollerViewsPosition;
- (void)setHorizontalScrollerViewsPosition:(int)arg1;
- (int)_verticalScrollerViewsPosition;
- (int)verticalScrollerViewsPosition;
- (void)setVerticalScrollerViewsPosition:(int)arg1;
- (BOOL)hasHorizontalScrollerViews;
- (void)setHasHorizontalScrollerViews:(BOOL)arg1;
- (BOOL)hasVerticalScrollerViews;
- (void)setHasVerticalScrollerViews:(BOOL)arg1;
- (double)horizontalScrollerMargin;
- (void)setHorizontalScrollerMargin:(double)arg1;
- (double)verticalScrollerMargin;
- (void)setVerticalScrollerMargin:(double)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface XDSelectionTool : XDDiagramTool
{
    XDGraphic *_mouseOverGraphic;
    struct CGRect _rubberbandRect;
}

+ (id)defaultIdentifier;
+ (void)initialize;
- (void)drawRect:(struct CGRect)arg1 inView:(id)arg2;
- (void)mouseDown:(id)arg1 inView:(id)arg2;
- (BOOL)dragSelectedGraphicsWithEvent:(id)arg1 inView:(id)arg2;
- (void)rubberbandSelectionWithEvent:(id)arg1 inView:(id)arg2;
- (BOOL)moveSelectedGraphicsWithEvent:(id)arg1 inView:(id)arg2;
- (void)trackKnob:(int)arg1 ofGraphic:(id)arg2 withEvent:(id)arg3 inView:(id)arg4;
- (void)mouseMoved:(id)arg1 inView:(id)arg2;
- (void)_diagramStorageWillRemoveGraphic:(id)arg1;
- (void)resignCurrentDiagramTool;
- (void)becomeCurrentDiagramTool;
- (id)imageForDiagramToolbarItem;
- (void)dealloc;
- (id)initWithIdentifier:(id)arg1;

@end

@interface XDShape : NSObject <NSCopying, XDComponentIdentifying>
{
    NSString *_identifier;
    XDGraphic *_graphic;
    NSString *_name;
    NSBezierPath *_fillPath;
    NSBezierPath *_strokePath;
}

+ (id)defaultIdentifier;
+ (void)initialize;
- (id)strokePath;
- (void)setStrokePath:(id)arg1;
- (id)fillPath;
- (void)setFillPath:(id)arg1;
- (id)displayName;
- (id)name;
- (void)setName:(id)arg1;
- (id)graphic;
- (void)setGraphic:(id)arg1;
- (id)identifier;
- (BOOL)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)init;
- (id)initWithIdentifier:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XDShapeManager : XDComponentManager
{
}

+ (BOOL)sharedShapeManagerExists;
+ (id)sharedShapeManager;
+ (Class)_sharedShapeManagerClass;
+ (void)unregisterShape:(id)arg1;
+ (void)registerShape:(id)arg1;
+ (id)registeredShapes;
+ (void)initialize;
- (id)componentWithIdentifier:(id)arg1;

@end

@interface XDShapedGraphic : XDGraphic
{
    XDShape *_shape;
}

+ (struct CGSize)_defaultMinSize;
+ (void)initialize;
- (struct CGRect)textContainer:(id)arg1 lineFragmentRectForProposedRect:(struct CGRect)arg2 sweepDirection:(unsigned long long)arg3 movementDirection:(unsigned long long)arg4 remainingRect:(struct CGRect *)arg5;
- (id)strokePath;
- (id)fillPath;
- (id)shape;
- (void)setShape:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface XDStrokeStyle : XDDrawingStyle
{
    double _lineWidth;
    XDLineDashPattern *_lineDashPattern;
    NSColor *_strokeColor;
    struct _XDStrokeStyleFlags _ssFlags;
}

+ (id)defaultStrokeColor;
+ (id)defaultLineDashPattern;
+ (void)initialize;
- (void)drawGraphic:(id)arg1 inView:(id)arg2;
- (id)strokeColor;
- (void)setStrokeColor:(id)arg1;
- (id)lineDashPattern;
- (void)setLineDashPattern:(id)arg1;
- (unsigned long long)lineJoinStyle;
- (void)setLineJoinStyle:(unsigned long long)arg1;
- (unsigned long long)lineCapStyle;
- (void)setLineCapStyle:(unsigned long long)arg1;
- (double)lineWidth;
- (void)setLineWidth:(double)arg1;
- (BOOL)shouldAntialias;
- (void)setShouldAntialias:(BOOL)arg1;
- (BOOL)drawsStroke;
- (void)setDrawsStroke:(BOOL)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithGraphic:(id)arg1;

@end

@interface XDTableColumn : NSTableColumn
{
    id _delegate;
    struct _XDTableColumnFlags _tcFlags;
}

+ (void)initialize;
- (id)dataCell;
- (id)dataCellForRow:(long long)arg1;
- (id)_dataCellForRow:(long long)arg1;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)_old_initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)_old_encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithIdentifier:(id)arg1;

@end

@interface XDTableView : NSTableView
{
    id _tableColumnProvider;
    NSMenu *_tableHeaderContextMenu;
    struct _XDTableViewFlags _xdTVFlags;
}

+ (void)initialize;
- (BOOL)becomeFirstResponder;
- (void)keyDown:(id)arg1;
- (void)delete:(id)arg1;
- (void)cut:(id)arg1;
- (void)paste:(id)arg1;
- (void)copy:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)_tableHeaderContextMenuItemAction:(id)arg1;
- (void)showAllTableColumns:(id)arg1;
- (void)mouseDown:(id)arg1;
- (BOOL)optionClickEditsAnyCell;
- (void)setOpetionClickEditsAnyCell:(BOOL)arg1;
- (BOOL)optionClickCausesEditing;
- (void)setOptionClickCausesEditing:(BOOL)arg1;
- (void)reloadTableColumns;
- (void)_synchronizeTableHeaderContextMenu;
- (id)_tableColumnWithIdentifier:(id)arg1;
- (id)tableColumnWithIdentifier:(id)arg1;
- (id)tableColumnProvider;
- (void)setTableColumnProvider:(id)arg1;
- (void)_tableColumnProviderRemoveTableColumn:(id)arg1;
- (void)_tableColumnProviderAddTableColumn:(id)arg1;
- (id)_tableColumnProviderAllowedTableColumnIdentifers;
- (id)_tableColumnProviderDefaultTableColumnIdentifiers;
- (void)insertTableColumn:(id)arg1 atIndex:(long long)arg2;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)awakeFromNib;

@end

@interface XDTableViewCell : NSTextFieldCell
{
    NSImage *_image;
    NSImage *_alternateImage;
    id _buttonTarget;
    SEL _buttonAction;
    SEL _buttonDoubleAction;
    struct _XDTableViewCellFlags _tvcFlags;
}

+ (void)initialize;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)selectWithFrame:(struct CGRect)arg1 inView:(id)arg2 editor:(id)arg3 delegate:(id)arg4 start:(long long)arg5 length:(long long)arg6;
- (void)editWithFrame:(struct CGRect)arg1 inView:(id)arg2 editor:(id)arg3 delegate:(id)arg4 event:(id)arg5;
- (BOOL)trackMouse:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3 untilMouseUp:(BOOL)arg4;
- (BOOL)_handleButtonClickWithEvent:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3;
- (struct CGSize)cellSizeForBounds:(struct CGRect)arg1;
- (struct CGRect)titleRectForBounds:(struct CGRect)arg1;
- (struct CGRect)imageRectForBounds:(struct CGRect)arg1;
- (SEL)buttonDoubleAction;
- (void)setButtonDoubleAction:(SEL)arg1;
- (SEL)buttonAction;
- (void)setButtonAction:(SEL)arg1;
- (id)buttonTarget;
- (void)setButtonTarget:(id)arg1;
- (unsigned long long)imagePosition;
- (void)setImagePosition:(unsigned long long)arg1;
- (id)alternateImage;
- (void)setAlternateImage:(id)arg1;
- (id)image;
- (void)setImage:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initTextCell:(id)arg1;

@end

@interface _NSPredicateDataSourceWrapper : NSObject <NSPredicateViewDataSource>
{
    id <NSPredicateViewDataSource> _dataSource;
    id _bindingAdaptor;
}

- (void)dealloc;
- (void)dataChangedForPredicateView:(id)arg1;
- (id)predicateView:(id)arg1 customControllerForType:(id)arg2 forKey:(id)arg3;
- (id)predicateView:(id)arg1 additionalTextForKeyPath:(id)arg2;
- (id)predicateView:(id)arg1 displayNamesForKeyPath:(id)arg2;
- (id)objectValueForPredicateView:(id)arg1;
- (void)predicateView:(id)arg1 setObjectValue:(id)arg2;
- (id)predicateView:(id)arg1 typeForKeyPath:(id)arg2;
- (id)predicateView:(id)arg1 keysForKeyPath:(id)arg2;
- (id)dataSource;
- (void)setDataSource:(id)arg1;
- (id)init;

@end

@interface _NSPredicateFormatTextDelegate : NSObject
{
}

- (BOOL)control:(id)arg1 textShouldEndEditing:(id)arg2;

@end

@interface _NSPredicateKeyChooser : NSResponder
{
    NSBrowser *_browser;
    NSComboBox *_combo;
    NSPredicateView *_predicateView;
    NSView *_view;
    NSString *_selectedKeyPath;
    id <NSPredicateViewDataSource> _dataSource;
    BOOL _usesSheet;
    BOOL _useDisplayNames;
    id <_NSPredicateKeyChooserCallback> _callback;
}

+ (void)openKeyBoxInView:(id)arg1 dataSource:(id)arg2 callback:(id)arg3;
+ (void)openKeyBoxInView:(id)arg1 callback:(id)arg2;
+ (id)openKeyBoxInView:(id)arg1 dataSource:(id)arg2;
+ (id)openKeyBoxInView:(id)arg1;
- (void)sheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (id)initAndOpenInView:(id)arg1 dataSource:(id)arg2 callback:(id)arg3;
- (id)dataSource;
- (void)setDataSource:(id)arg1;
- (id)selectedKeyPath;
- (void)buttonCancel:(id)arg1;
- (void)buttonOK:(id)arg1;
- (void)_doClose:(long long)arg1;
- (void)clickOnKey:(id)arg1;
- (void)browser:(id)arg1 willDisplayCell:(id)arg2 atRow:(long long)arg3 column:(long long)arg4;
- (long long)browser:(id)arg1 numberOfRowsInColumn:(long long)arg2;
- (id)initInView:(id)arg1;
- (void)awakeFromNib;
- (void)modalLooping:(id)arg1;
- (id)_keyPath;
- (id)_displayNamesForColumn:(long long)arg1;
- (id)_keysForColumn:(long long)arg1;
- (id)_pathToColumn:(long long)arg1;
- (id)_keyPathIncludingColumn:(long long)arg1;

@end

@interface _NSPredicateLogicElement : NSObject <_NSPredicateKeyChooserCallback>
{
    NSPredicateView *_predicateView;
    _NSPredicateLogicElement *_parent;
    NSColor *_color;
    NSString *_label;
    NSTextField *_labelField;
    NSMutableArray *_children;
    long long _logic;
    struct CGRect _frame;
    double _lineWidth;
    _Bool _selected;
    NSString *_chosenKey;
    NSString *_chosenCmpKey[2];
    _Bool _dualOperands;
    long long _betweenIndex;
    id _keyBox;
    unsigned long long _lineIndex;
    NSPopUpButton *_keyPopUp;
    NSPopUpButton *_operatorPopUp;
    NSPopUpButton *_logicPopUp;
    NSMutableArray *_keys;
    id <NSPredicateTypeController> _logicalTypeController;
    id <NSPredicateTypeController> _typeController[2];
    NSPopUpButton *_ckvPopUp[2];
    NSPopUpButton *_keyCompPopUp[2];
    NSMutableArray *_cmpKeys[2];
    NSTextField *_varLabelField[2];
    NSTextField *_varField[2];
    NSTextField *_additionalTextField[2];
    NSTextField *_betweenLabelField;
    NSButton *_plusButton;
    NSButton *_minusButton;
    NSButton *_actionButton;
    struct CGPoint _lastOrigin;
    NSTextField *_formatField;
    struct CGPoint _tailPos;
    double _tailMinX;
    double _tailWidth;
    NSString *_debugName;
    long long _drawingImage;
    struct CGPoint _drawingImageOrigin;
    long long _delayedPerform;
}

- (void)dealloc;
- (id)description;
- (id)contextMenu:(struct CGPoint)arg1;
- (void)testAction:(id)arg1;
- (struct CGPoint)imageLoc;
- (id)image;
- (id)_imagePhotocopy;
- (id)_imageSymbolic;
- (id)_imageTIFFicon;
- (id)initWithPredicate:(id)arg1 inView:(id)arg2;
- (BOOL)_parseLinePredicate:(id)arg1 predicate2:(id)arg2;
- (id)_parsablePredicate:(id)arg1;
- (id)_parseOperand:(long long)arg1 withPredicate:(id)arg2;
- (_Bool)validate;
- (id)debugString;
- (id)predicateString;
- (id)predicate;
- (id)_predicateForOperand:(long long)arg1 op:(id)arg2;
- (id)_formatPredicate;
- (BOOL)operationAlterLogic:(BOOL)arg1;
- (void)operationToVar2;
- (void)operationToVar1;
- (void)operationToVal2;
- (void)operationToVal1;
- (void)operationToKey2;
- (void)operationToKey1;
- (BOOL)operationMoveRight:(BOOL)arg1;
- (BOOL)operationMoveLeft:(BOOL)arg1;
- (BOOL)operationMoveDown:(BOOL)arg1;
- (BOOL)operationMoveUp:(BOOL)arg1;
- (BOOL)_moveLevelDown:(id)arg1 doIt:(BOOL)arg2;
- (id)onlyChild;
- (BOOL)_moveLevelUp:(id)arg1 callingChild:(id)arg2 doIt:(BOOL)arg3;
- (BOOL)_moveChild:(id)arg1 up:(_Bool)arg2 doIt:(BOOL)arg3;
- (BOOL)operationRemove:(BOOL)arg1;
- (BOOL)operationOr:(BOOL)arg1;
- (BOOL)operationAnd:(BOOL)arg1;
- (BOOL)operationNot:(BOOL)arg1;
- (void)addParent:(long long)arg1;
- (BOOL)operationAdd:(BOOL)arg1;
- (void)addFollowing:(id)arg1;
- (void)removeTree;
- (BOOL)dropElement:(id)arg1 at:(struct CGPoint)arg2;
- (long long)childrenCount;
- (void)alterLogic;
- (long long)logic;
- (_Bool)selected;
- (void)setSelected:(_Bool)arg1;
- (id)predicateView;
- (id)parent;
- (void)setParent:(id)arg1;
- (void)deleteChild:(id)arg1;
- (void)deleteSelf;
- (void)_closeViews;
- (void)_testDoubleNegation;
- (void)addChild:(id)arg1;
- (void)replace:(id)arg1 with:(id)arg2;
- (void)insert:(id)arg1 following:(id)arg2;
- (void)insert:(id)arg1 preceding:(id)arg2;
- (id)findElementAt:(struct CGPoint)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)draw;
- (void)_drawLogicWithPopUps;
- (void)_drawLogicGraphically;
- (void)_drawLogicGraphicallyFancy;
- (void)_drawShade:(struct CGContext *)arg1 frame:(struct CGRect)arg2;
- (void)_addLogicPath:(struct CGContext *)arg1 frame:(struct CGRect)arg2;
- (void)_drawBackground;
- (void)_drawImageRect;
- (void)_drawFrontLine;
- (struct CGRect)frame;
- (double)positionUI;
- (struct CGSize)_positionOperand:(long long)arg1 startPoint:(struct CGPoint)arg2 secondRow:(struct CGPoint)arg3;
- (struct CGSize)_positionFormatFieldAt:(struct CGPoint)arg1;
- (void)positionLabel;
- (void)repositionTailFor:(double)arg1;
- (struct CGSize)positionTailAt:(struct CGPoint)arg1 initial:(BOOL)arg2;
- (void)addUI;
- (void)_addFunctionsToKeyPopUp:(id)arg1;
- (void)_functionRemoveForKeyPopUp:(id)arg1;
- (void)_functionAddCriteriaForKeyPopUp:(id)arg1;
- (void)_functionAddNotForKeyPopUp:(id)arg1;
- (void)_functionAddOrForKeyPopUp:(id)arg1;
- (void)_functionAddAndForKeyPopUp:(id)arg1;
- (void)_resetKeyPopUp;
- (void)_addFormatField;
- (void)_addOperatorPopUp;
- (void)_logicChanged:(id)arg1;
- (void)_addLabel;
- (void)_choseKey2:(id)arg1;
- (void)_choseKey1:(id)arg1;
- (void)_choseCmpKey:(long long)arg1;
- (BOOL)_selectCmpKey:(long long)arg1 key:(id)arg2 add:(BOOL)arg3;
- (void)_choseKey:(id)arg1;
- (void)_doChoseKey:(id)arg1;
- (void)selectKeyFromKeyBox;
- (void)setSelectedKeyPath:(id)arg1;
- (void)_setKeyFromKeyBox:(id)arg1;
- (BOOL)dualOperands;
- (id)opType:(long long)arg1;
- (void)_operatorChanged:(id)arg1;
- (void)_removeOperand:(long long)arg1;
- (void)_addOperand:(long long)arg1;
- (void)_removeVar:(long long)arg1;
- (void)_addVar:(long long)arg1;
- (void)_removeVarField:(long long)arg1;
- (void)_addVarField:(long long)arg1;
- (void)_removeVarLabelField:(long long)arg1;
- (void)_addVarLabelField:(long long)arg1;
- (void)_removeBetweenLabelField;
- (void)_addBetweenLabelField;
- (void)_removeCKVPopUp:(long long)arg1;
- (void)_addCKVPopUp:(long long)arg1;
- (void)_operandKind1:(id)arg1;
- (void)_operandKind0:(id)arg1;
- (void)_operandKindAtIndex:(long long)arg1;
- (id)_operatorFor1;
- (id)_operatorLessOrEqual;
- (id)_operatorGreaterOrEqual;
- (void)_removeKeyCompPopUp:(long long)arg1;
- (void)_addKeyCompPopUp:(long long)arg1;
- (void)_updateLogicalTypeController;
- (void)_removeUIforConstant:(long long)arg1;
- (void)_addUIforConstant:(long long)arg1;
- (void)_removeTypeController:(long long)arg1;
- (void)_addTypeController:(long long)arg1;
- (id)_addGenericLabel;
- (id)openKeyBox;
- (void)_typedOperator:(id)arg1;
- (void)_setSelectedKey:(id)arg1;
- (id)_selectedKey;
- (unsigned long long)_nonKeyEntries;
- (id)_makeTinyButton:(id)arg1 action:(BOOL)arg2;
- (void)collectLines:(id)arg1;
- (struct CGRect)addToFrame:(struct CGRect)arg1;
- (double)positionAt:(struct CGPoint)arg1;
- (void)_positionLogicPopUp;
- (BOOL)_anyAll;
- (double)_tailHorizontalAlign;
- (double)_keyMinWidth;
- (double)_keyMaxWidth;
- (double)_bottomSpace;
- (double)_topSpace;
- (double)_logicHeight;
- (double)_minHeight;
- (double)_lineHeight;
- (id)initWithDictionary:(id)arg1 inView:(id)arg2;
- (id)newLogic:(long long)arg1;
- (id)initWithLogic:(long long)arg1 inView:(id)arg2;
- (void)_addLogicPopUp;
- (void)_addFunctionsToLogicPopUp:(id)arg1;
- (void)_functionRemoveForLogicPopUp:(id)arg1;
- (void)_functionAddCriteriaForLogicPopUp:(id)arg1;
- (void)_functionAddNotForLogicPopUp:(id)arg1;
- (void)_functionAddOrForLogicPopUp:(id)arg1;
- (void)_functionAddAndForLogicPopUp:(id)arg1;
- (void)_resetLogicPopUp;
- (BOOL)_useSelectKeyBox;
- (BOOL)_useTypedFormat;
- (double)_logicHorizontalLabelOffset;
- (double)_logicCurveY;
- (double)_logicCurveX;
- (double)_logicCorner;
- (double)_calculateWidth;
- (double)_leftSpace;
- (BOOL)_onLeftBorder;
- (double)_logicSymbolWidth;
- (double)_logicPopUpWidth;

@end

@interface _NSPredicateTextDelegate : NSObject
{
}

- (BOOL)control:(id)arg1 didFailToFormatString:(id)arg2 errorDescription:(id)arg3;

@end

@interface _NSPredicate_RootTypeController : NSObject <NSPredicateTypeController>
{
    NSMutableArray *_operators;
    NSPredicateView *_predicateView;
    NSString *_key;
    NSString *_type;
    NSString *_operator;
    BOOL _toMany;
    NSMutableDictionary *_operatorsForQops;
    NSMutableDictionary *_qopsForOperators;
}

- (void)dealloc;
- (void)remove;
- (id)lastKeyView;
- (id)firstKeyView;
- (id)stringValue;
- (id)stringToPassOn;
- (BOOL)passInString:(id)arg1;
- (id)leafPredicate;
- (id)setLeafPredicate:(id)arg1;
- (struct CGSize)setPosition:(struct CGPoint)arg1 secondRow:(struct CGPoint)arg2;
- (id)possibleOperators;
- (id)operatorForBetween;
- (id)qopForOperator:(id)arg1;
- (id)operatorForQop:(id)arg1;
- (void)setOperator:(id)arg1;
- (id)initForPredicateView:(id)arg1 forType:(id)arg2 forKey:(id)arg3 toMany:(BOOL)arg4;
- (void)_addSmallSetOfOperatorsTo:(id)arg1;
- (void)populateOperatorDictionaries;
- (void)addOperator:(id)arg1 forQOp:(id)arg2;

@end

@interface _NSPredicate_BooleanKeyTypeController : _NSPredicate_RootTypeController
{
    NSPopUpButton *_valuePopUp;
}

- (void)dealloc;
- (void)remove;
- (id)lastKeyView;
- (id)firstKeyView;
- (BOOL)passInString:(id)arg1;
- (id)leafPredicate;
- (id)stringToPassOn;
- (BOOL)_booleanValue;
- (id)setLeafPredicate:(id)arg1;
- (struct CGSize)setPosition:(struct CGPoint)arg1 secondRow:(struct CGPoint)arg2;
- (void)_createValuePopUp;
- (id)_noValue;
- (id)_yesValue;
- (id)possibleOperators;

@end

@interface _NSPredicate_DateKeyTypeController : _NSPredicate_RootTypeController
{
    NSDatePicker *_datePicker;
}

- (void)dealloc;
- (void)remove;
- (id)lastKeyView;
- (id)firstKeyView;
- (BOOL)passInString:(id)arg1;
- (id)leafPredicate;
- (id)stringToPassOn;
- (id)setLeafPredicate:(id)arg1;
- (struct CGSize)setPosition:(struct CGPoint)arg1 secondRow:(struct CGPoint)arg2;
- (void)_createDatePicker;
- (id)possibleOperators;

@end

@interface _NSPredicate_StringKeyTypeController : _NSPredicate_RootTypeController
{
    NSTextField *_valueField;
}

- (void)dealloc;
- (void)remove;
- (id)lastKeyView;
- (id)firstKeyView;
- (id)stringToPassOn;
- (BOOL)passInString:(id)arg1;
- (id)leafPredicate;
- (id)setLeafPredicate:(id)arg1;
- (struct CGSize)setPosition:(struct CGPoint)arg1 secondRow:(struct CGPoint)arg2;
- (void)setOperator:(id)arg1;
- (id)possibleOperators;
- (void)_createValueField;
- (double)fieldWidth;
- (id)createFormatter;

@end

@interface _NSPredicate_NumberKeyTypeController : _NSPredicate_StringKeyTypeController
{
}

- (id)possibleOperators;
- (id)leafPredicate;
- (double)fieldWidth;
- (id)createFormatter;

@end

@interface _NSSimpleFontBinder : NSResponder
{
    NSButton *simpleButton;
    NSString *simpleKeyPath;
    id simpleController;
    struct {
        unsigned int ignoreObserving:1;
        unsigned int reserved:31;
    } _NSSimpleFontBinderFlags;
}

+ (void)initialize;
- (void)changeFont:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)newFont:(id)arg1;
- (void)unbind:(id)arg1;
- (void)bind:(id)arg1 toObject:(id)arg2 withKeyPath:(id)arg3 options:(id)arg4;
- (void)setButton:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface _NSUnarchiveFromStringValueTransformer : _NSSharedValueTransformer
{
}

+ (void)initialize;
- (id)description;
- (id)reverseTransformedValue:(id)arg1;
- (id)transformedValue:(id)arg1;

@end

@interface _PVFlippedView : NSView
{
}

- (BOOL)isFlipped;

@end

@interface _PVOpaqueView : NSView
{
}

- (BOOL)isOpaque;

@end

@interface _XDDiagramViewReserved : NSObject
{
    NSMutableString *_typeToSelectString;
    double _lastTypeToSelectEventTime;
    double _maxTypeToSelectInterval;
    struct _XDDiagramViewFlags _dvFlags;
}

@end

@interface _XDMinLayoutFlippedView : NSView
{
}

- (BOOL)isFlipped;

@end

